void sub_231FFD908(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  void (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  id v46;
  void *v47;
  id v48;
  void *v49;
  void *v50;
  void *v51;
  uint64_t inited;
  void *v53;
  id v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  id v66;
  id v67;
  void *v68;
  id v69;
  void *v70;
  id v71;
  id v72;
  id v73;
  void *v74;
  double v75;
  double v76;
  void *v77;
  id v78;
  void *v79;
  id v80;
  void *v81;
  id v82;
  id v83;
  id v84;
  void *v85;
  double v86;
  double v87;
  id v88;
  id v89;
  char *v90;
  id v91;
  void *v92;
  id v93;
  id v94;
  id v95;
  void *v96;
  void *v97;
  id v98;
  void *v99;
  id v100;
  void *v101;
  id v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  NSObject *v115;
  id v116;
  void *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  id v126;
  uint64_t v127;
  id v128;
  uint64_t v129;
  void (*v130)(uint64_t, uint64_t, uint64_t, id);
  uint64_t v131;
  char *v132;
  char *v133;
  id v134;
  id v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  id v139;
  uint64_t v140;
  id v141;
  id v142;
  id v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  id v149;
  id v150;
  id v151;
  void *v152;
  void *v153;
  id v154;
  void *v155;
  void *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  id v160;
  uint64_t v161;
  uint64_t v162;
  void (*v163)(uint64_t);
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t *v167;
  uint64_t v168;
  _BYTE *v169;
  uint64_t v170;
  uint64_t v171;
  void (*v172)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v173;
  id v174;
  id v175;
  uint64_t v176;
  uint64_t v177;
  id v178;
  char *v179;
  char *v180;
  char *v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  char *v187;
  char *v188;
  char *v189;
  uint64_t v190;
  _QWORD *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  id v200;
  char *v201;
  char *v202;
  uint64_t v203;
  uint64_t *v204;
  uint64_t v205;
  unint64_t v206;
  uint64_t v207;

  v6 = v4;
  v203 = a3;
  v190 = a2;
  v204 = a4;
  v8 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v171 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, qword_2541B78E0, (void (*)(uint64_t))MEMORY[0x24BE47DF8]);
  MEMORY[0x24BDAC7A8](v11);
  v202 = (char *)&v171 - v12;
  sub_2320002B4(0, &qword_2541B2368, (void (*)(uint64_t))MEMORY[0x24BE445A8]);
  MEMORY[0x24BDAC7A8](v13);
  v183 = (char *)&v171 - v14;
  v15 = sub_2321FD9F0();
  v16 = (void (*)(uint64_t))MEMORY[0x24BDCC5A8];
  v194 = v15;
  v191 = *(_QWORD **)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v182 = (char *)&v171 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, &qword_2541B2930, (void (*)(uint64_t))MEMORY[0x24BE42FE0]);
  MEMORY[0x24BDAC7A8](v18);
  v201 = (char *)&v171 - v19;
  v20 = (_QWORD *)sub_2321FD8B8();
  v199 = *(v20 - 1);
  v200 = v20;
  MEMORY[0x24BDAC7A8](v20);
  v180 = (char *)&v171 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, &qword_2541B7F60, v22);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v207 = (uint64_t)&v171 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v185 = (uint64_t)&v171 - v26;
  v193 = sub_2321FDDD4();
  v192 = *(_QWORD *)(v193 - 8);
  MEMORY[0x24BDAC7A8](v193);
  v189 = (char *)&v171 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, (unint64_t *)&unk_2541B29B0, (void (*)(uint64_t))MEMORY[0x24BE43C58]);
  MEMORY[0x24BDAC7A8](v28);
  v188 = (char *)&v171 - v29;
  sub_2320002B4(0, (unint64_t *)&qword_2541B2868, (void (*)(uint64_t))sub_23200021C);
  MEMORY[0x24BDAC7A8](v30);
  v187 = (char *)&v171 - v31;
  sub_2320002B4(0, (unint64_t *)&qword_2541B2838, v16);
  v33 = MEMORY[0x24BDAC7A8](v32);
  v181 = (char *)&v171 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x24BDAC7A8](v33);
  v184 = (uint64_t)&v171 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v196 = (uint64_t)&v171 - v37;
  v197 = sub_2321FDC6C();
  v38 = *(_QWORD *)(v197 - 8);
  v39 = MEMORY[0x24BDAC7A8](v197);
  v179 = (char *)&v171 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = MEMORY[0x24BDAC7A8](v39);
  v186 = (char *)&v171 - v42;
  MEMORY[0x24BDAC7A8](v41);
  v195 = (char *)&v171 - v43;
  v44 = (void *)objc_opt_self();
  v45 = (void *)*v6;
  v46 = objc_msgSend(v44, sel_sharedInstanceForHealthStore_, *v6);
  if (!v46)
  {
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v47 = v46;
  v198 = (uint64_t)v6 + *(int *)(type metadata accessor for MostRecentRangeSnidgetFeedItemModelProvider() + 24);
  v48 = objc_msgSend(v47, sel_displayTypeForObjectType_, *(_QWORD *)(v198 + 16));

  if (!v48)
  {
    sub_232000300();
    swift_allocError();
    swift_willThrow();
    return;
  }
  sub_232084548(a1);
  if (v5)
  {

    return;
  }
  v50 = v49;
  if (!v49)
  {
LABEL_13:
    v57 = sub_2321FE65C();
    v58 = (uint64_t)v202;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v202, 1, 1, v57);
    v59 = v207;
    (*(void (**)(uint64_t, uint64_t, uint64_t, id))(v199 + 56))(v207, 1, 1, v200);
    v60 = v203;
    swift_bridgeObjectRetain();
    sub_2320D71E8(0, v58, v60, v59, v10);
    sub_2321FF208();
    v61 = sub_2321FEF5C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v201, 1, 1, v61);
    v62 = v48;
    v63 = sub_2321FF1FC();
    sub_232000344(0);
    v65 = v204;
    sub_23200054C((uint64_t)v10, (uint64_t)v204 + *(int *)(v64 + 52), type metadata accessor for SnidgetFeedItemMetadata);

    v65[1] = 0;
    v65[2] = 0;
    *v65 = v63;
    sub_2320003D0((uint64_t)v10);
    return;
  }
  if (!objc_msgSend(v49, sel_hasMinimumValue)
    || !objc_msgSend(v50, sel_hasMaximumValue)
    || !objc_msgSend(v50, sel_hasDateData))
  {

    goto LABEL_13;
  }
  v178 = v50;
  v176 = 0;
  v51 = *(void **)(v198 + *(int *)(type metadata accessor for SnidgetFeedItemGeneratorRequest(0) + 32));
  v175 = v51;
  type metadata accessor for SnidgetStringBuilder();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v45;
  v53 = (void *)objc_opt_self();
  v174 = v51;
  v54 = v45;
  v55 = objc_msgSend(v53, sel_sharedInstanceForHealthStore_, v54);
  v177 = inited;
  *(_QWORD *)(inited + 32) = v55;
  if (v175)
  {
    v56 = v174;
  }
  else
  {
    v66 = v55;
    v56 = objc_msgSend(v66, sel_createHKUnitPreferenceController);

  }
  *(_QWORD *)(v177 + 24) = v56;
  v67 = objc_msgSend(v178, sel_minimumValue);
  if (!v67)
    goto LABEL_36;
  v68 = v67;
  v69 = objc_msgSend(v67, sel_unitString);

  if (!v69)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  sub_232200EC4();

  v70 = (void *)sub_232200E94();
  swift_bridgeObjectRelease();
  v175 = (id)objc_opt_self();
  v71 = objc_msgSend(v175, sel_unitFromString_, v70);

  v72 = v178;
  v73 = objc_msgSend(v178, sel_minimumValue);
  if (!v73)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v74 = v73;
  objc_msgSend(v73, sel_value);
  v76 = v75;

  v77 = (void *)objc_opt_self();
  v174 = objc_msgSend(v77, sel_quantityWithUnit_doubleValue_, v71, v76);

  v78 = objc_msgSend(v72, sel_maximumValue);
  if (!v78)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v79 = v78;
  v80 = objc_msgSend(v78, sel_unitString);

  if (!v80)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  sub_232200EC4();

  v81 = (void *)sub_232200E94();
  swift_bridgeObjectRelease();
  v82 = objc_msgSend(v175, sel_unitFromString_, v81);

  v83 = v178;
  v84 = objc_msgSend(v178, sel_maximumValue);
  if (!v84)
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v85 = v84;
  objc_msgSend(v84, sel_value);
  v87 = v86;

  v88 = objc_msgSend(v77, sel_quantityWithUnit_doubleValue_, v82, v87);
  objc_msgSend(v83, sel_dateData);
  v89 = (id)HKDecodeDateForValue();
  v90 = v195;
  sub_2321FDC30();

  v91 = objc_allocWithZone(MEMORY[0x24BE4A720]);
  v92 = (void *)sub_2321FDBF4();
  v93 = v174;
  v94 = objc_msgSend(v91, sel_initWithMinimumValue_maximumValue_date_, v174, v88, v92);

  v175 = *(id *)(v38 + 8);
  ((void (*)(char *, uint64_t))v175)(v90, v197);
  v95 = *(id *)(v177 + 24);
  v96 = (void *)sub_2321FF604();
  v97 = (void *)sub_2321FF628();
  if (qword_2541B32B8 != -1)
    swift_once();
  v98 = objc_msgSend(v94, sel_attributedStringWithDisplayType_unitController_valueFont_unitFont_dateCache_, v48, v95, v96, v97, qword_2541BF518);

  v99 = v94;
  if (!v98)
  {
    v105 = sub_2321FE65C();
    v106 = (uint64_t)v202;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 56))(v202, 1, 1, v105);
    v107 = v207;
    (*(void (**)(uint64_t, uint64_t, uint64_t, id))(v199 + 56))(v207, 1, 1, v200);
    v108 = v203;
    swift_bridgeObjectRetain();
    sub_2320D71E8(0, v106, v108, v107, v10);
    sub_2321FF208();
    v109 = sub_2321FEF5C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 56))(v201, 1, 1, v109);
    v110 = v48;
    v111 = sub_2321FF1FC();
    sub_232000344(0);
    v113 = v204;
    sub_23200054C((uint64_t)v10, (uint64_t)v204 + *(int *)(v112 + 52), type metadata accessor for SnidgetFeedItemMetadata);

    swift_release();
    v113[1] = 0;
    v113[2] = 0;
    *v113 = v111;
    sub_2320003D0((uint64_t)v10);
    return;
  }
  v100 = v95;
  v101 = (void *)sub_2321FF61C();
  v173 = v99;
  v102 = objc_msgSend(v99, sel_attributedSupplementaryStringWithDisplayType_unitController_font_, v48, v100, v101);

  v174 = v98;
  if (v102)
  {
    v103 = v102;
    v104 = v196;
    sub_2321FDA08();
    v172 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v191[7];
    v172(v104, 0, 1, v194);

  }
  else
  {
    v172 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v191[7];
    v172(v196, 1, 1, v194);
  }
  v114 = v198;
  v115 = v6[1];
  v191 = (_QWORD *)*v6;
  objc_msgSend(v178, sel_dateData);
  v116 = (id)HKDecodeDateForValue();
  v117 = v186;
  sub_2321FDC30();

  sub_23200021C();
  v119 = (uint64_t)v187;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 56))(v187, 1, 1, v118);
  v120 = *MEMORY[0x24BE43C38];
  v121 = sub_2321FF298();
  v122 = *(_QWORD *)(v121 - 8);
  v123 = (uint64_t)v188;
  (*(void (**)(char *, uint64_t, uint64_t))(v122 + 104))(v188, v120, v121);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v122 + 56))(v123, 0, 1, v121);
  v124 = v189;
  sub_2321FDDA4();
  v125 = v176;
  v126 = sub_2321234DC(v191, v115, v114, v190, v117, v119, v123, 0);
  if (v125)
  {

    swift_release();
    (*(void (**)(char *, uint64_t))(v192 + 8))(v124, v193);
    sub_23200040C(v123, (unint64_t *)&unk_2541B29B0, (void (*)(uint64_t))MEMORY[0x24BE43C58]);
    sub_23200040C(v119, (unint64_t *)&qword_2541B2868, (void (*)(uint64_t))sub_23200021C);
    ((void (*)(void *, uint64_t))v175)(v117, v197);
    sub_23200040C(v196, (unint64_t *)&qword_2541B2838, (void (*)(uint64_t))MEMORY[0x24BDCC5A8]);
    return;
  }
  v127 = (uint64_t)v126;
  (*(void (**)(char *, uint64_t))(v192 + 8))(v124, v193);
  sub_23200040C(v123, (unint64_t *)&unk_2541B29B0, (void (*)(uint64_t))MEMORY[0x24BE43C58]);
  sub_23200040C(v119, (unint64_t *)&qword_2541B2868, (void (*)(uint64_t))sub_23200021C);
  ((void (*)(void *, uint64_t))v175)(v117, v197);
  v129 = v199;
  v128 = v200;
  v130 = *(void (**)(uint64_t, uint64_t, uint64_t, id))(v199 + 56);
  v131 = v185;
  v130(v185, 1, 1, v200);
  v197 = v127;
  if (v127)
  {
    swift_retain();
    v132 = v180;
    sub_2321FF280();
    sub_2321FD894();
    v133 = v132;
    v114 = v198;
    (*(void (**)(char *, id))(v129 + 8))(v133, v128);
    objc_msgSend(v178, sel_dateData);
    v134 = v128;
    v135 = (id)HKDecodeDateForValue();
    sub_2321FDC30();

    v136 = v207;
    sub_2321FD87C();
    swift_release();
    sub_23200040C(v131, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
    v130(v136, 0, 1, v134);
    sub_2320004F8(v136, v131);
  }
  v176 = 0;
  sub_2321FF208();
  sub_232000448();
  v138 = *(int *)(v137 + 48);
  v139 = v48;
  v140 = v114;
  v141 = v139;
  v142 = v178;
  objc_msgSend(v178, sel_dateData);
  v143 = (id)HKDecodeDateForValue();
  v144 = v201;
  sub_2321FDC30();

  v144[v138] = 1;
  v145 = *MEMORY[0x24BE42FD8];
  v146 = sub_2321FEF5C();
  v147 = *(_QWORD *)(v146 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v147 + 104))(v144, v145, v146);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v147 + 56))(v144, 0, 1, v146);
  v200 = v141;
  v148 = sub_2321FF1FC();
  sub_2320004AC(v196, v184, (unint64_t *)&qword_2541B2838, (void (*)(uint64_t))MEMORY[0x24BDCC5A8]);
  v201 = (char *)v174;
  sub_2321FDA08();
  v172((uint64_t)v181, 1, 1, v194);
  v205 = 0x5F74656764696E53;
  v206 = 0xE800000000000000;
  v149 = *(id *)(v140 + 16);
  v150 = objc_msgSend(v149, sel_description);
  sub_232200EC4();

  sub_232200F48();
  swift_bridgeObjectRelease();
  v151 = objc_msgSend(v142, sel_minimumValue);
  if (!v151)
    goto LABEL_42;
  v152 = v151;
  v199 = v148;
  v153 = (void *)sub_232201470();

  objc_msgSend(v153, sel__value);
  v154 = objc_msgSend(v142, sel_maximumValue);
  if (v154)
  {
    v155 = v154;
    v156 = (void *)sub_232201470();

    objc_msgSend(v156, sel__value);
    v157 = v183;
    sub_2321FF598();
    swift_bridgeObjectRelease();
    v158 = sub_2321FF5A4();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v158 - 8) + 56))(v157, 0, 1, v158);
    sub_2321FF6C4();
    swift_allocObject();
    v198 = sub_2321FF6B8();
    v159 = v197;
    swift_retain();
    objc_msgSend(v142, sel_dateData);
    v160 = (id)HKDecodeDateForValue();
    sub_2321FDC30();

    v161 = (uint64_t)v202;
    sub_2321FE62C();
    v162 = sub_2321FE65C();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v162 - 8) + 56))(v161, 0, 1, v162);
    v163 = (void (*)(uint64_t))MEMORY[0x24BDCB878];
    v164 = v185;
    v165 = v207;
    sub_2320004AC(v185, v207, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
    sub_232000344(0);
    v168 = v203;
    v167 = v204;
    v169 = (char *)v204 + *(int *)(v166 + 52);
    swift_bridgeObjectRetain();
    sub_2320D71E8(1, v161, v168, v165, v169);
    swift_release();

    swift_release();
    v170 = v198;
    *v167 = v199;
    v167[1] = v170;
    v167[2] = v159;
    sub_23200040C(v164, &qword_2541B7F60, v163);
    sub_23200040C(v196, (unint64_t *)&qword_2541B2838, (void (*)(uint64_t))MEMORY[0x24BDCC5A8]);
    return;
  }
LABEL_43:
  __break(1u);
}

id sub_231FFEC4C()
{
  id *v0;

  return *v0;
}

uint64_t sub_231FFEC54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23200054C(v2 + *(int *)(a1 + 24), a2, type metadata accessor for SnidgetFeedItemGeneratorRequest);
}

void sub_231FFEC7C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_231FFD908(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), a2);
}

uint64_t variable initialization expression of SnidgetLevelChartView._displayScale()
{
  return swift_getKeyPath();
}

uint64_t sub_231FFECBC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_2322009C0();
  *a1 = v3;
  return result;
}

uint64_t sub_231FFECE4()
{
  return sub_2322009CC();
}

double variable initialization expression of SnidgetLevelChartView.maxChartWidth()
{
  return 80.0;
}

uint64_t variable initialization expression of SnidgetLevelChartView.previousViewModel()
{
  return 0;
}

uint64_t variable initialization expression of SnidgetLevelChartView._providedViewContext()
{
  sub_2321FEF20();
  sub_232000590(&qword_2541B1200, (uint64_t (*)(uint64_t))MEMORY[0x24BE42FA0], MEMORY[0x24BE42F98]);
  return sub_2322009A8();
}

uint64_t variable initialization expression of SummaryChartModelConfiguration.primaryChartTimeScopes()
{
  return 0;
}

uint64_t variable initialization expression of SummaryChartModelConfiguration.sharingChartTimeScopes()
{
  return 0;
}

void type metadata accessor for HKActivityMoveMode(uint64_t a1)
{
  sub_232000608(a1, (unint64_t *)&unk_255F9BB68, (uint64_t)&unk_2500FE370, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for HKMCPregnancyState(uint64_t a1)
{
  sub_232000608(a1, &qword_2541B27A0, (uint64_t)&unk_2500FE390, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for HKChartDataSourceQueryRequestAudience(uint64_t a1)
{
  sub_232000608(a1, (unint64_t *)&unk_255F9BB78, (uint64_t)&unk_2500FE3B0, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for HKTimeScope(uint64_t a1)
{
  sub_232000608(a1, (unint64_t *)&unk_2541AF080, (uint64_t)&unk_2500FE3D0, MEMORY[0x24BEE4D40]);
}

uint64_t sub_231FFEDE4(uint64_t a1, uint64_t a2)
{
  return sub_231FFEF2C(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_231FFEDF0(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_232200EAC();
  *a2 = 0;
  return result;
}

uint64_t sub_231FFEE64(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_232200EB8();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_231FFEEE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_232200EC4();
  v2 = sub_232200E94();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_231FFEF20(uint64_t a1, uint64_t a2)
{
  return sub_231FFEF2C(a1, a2, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_231FFEF2C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_232200EC4();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_231FFEF68()
{
  sub_232200EC4();
  sub_232200F3C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_231FFEFA8()
{
  uint64_t v0;

  sub_232200EC4();
  sub_232201B78();
  sub_232200F3C();
  v0 = sub_232201B9C();
  swift_bridgeObjectRelease();
  return v0;
}

BOOL sub_231FFF020(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

_QWORD *sub_231FFF034@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_231FFF044(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

void sub_231FFF050(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_231FFF058@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_231FFF06C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

_QWORD *sub_231FFF080@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_231FFF0AC@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_231FFF0D0(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_231FFF0E4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_231FFF0F8(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_231FFF10C(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_231FFF120(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_231FFF134()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_231FFF144()
{
  return sub_232201764();
}

_QWORD *sub_231FFF15C(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

_QWORD *sub_231FFF170@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

BOOL sub_231FFF184(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_231FFF1B4(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_231FFF1C8(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

uint64_t sub_231FFF1DC()
{
  sub_232201B78();
  sub_232201B84();
  return sub_232201B9C();
}

uint64_t sub_231FFF220()
{
  return sub_232201B84();
}

uint64_t sub_231FFF248()
{
  sub_232201B78();
  sub_232201B84();
  return sub_232201B9C();
}

uint64_t sub_231FFF28C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_232200EC4();
  v2 = v1;
  if (v0 == sub_232200EC4() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_232201ADC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_231FFF314@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_231FFF650(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

_QWORD *sub_231FFF350@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_231FFF35C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_232200E94();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_231FFF3A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_232200EC4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_231FFF3C8()
{
  sub_232000590(&qword_2541B70C8, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureIdentifier, (uint64_t)&unk_232210504);
  sub_232000590((unint64_t *)&unk_255F9BDC0, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureIdentifier, (uint64_t)&unk_232210464);
  return sub_2322019EC();
}

void type metadata accessor for HKCategoryValueAppleWalkingSteadinessEvent(uint64_t a1)
{
  sub_232000608(a1, &qword_255F9BBE8, (uint64_t)&unk_2500FE3F0, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for HKCategoryValueAppleStandHour(uint64_t a1)
{
  sub_232000608(a1, &qword_255F9BBF0, (uint64_t)&unk_2500FE410, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for UNNotificationPresentationOptions(uint64_t a1)
{
  sub_232000608(a1, &qword_255F9BBF8, (uint64_t)&unk_2500FE430, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for HKProfileType(uint64_t a1)
{
  sub_232000608(a1, (unint64_t *)&unk_255F9BC00, (uint64_t)&unk_2500FE458, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for HKCategoryValueSleepAnalysis(uint64_t a1)
{
  sub_232000608(a1, &qword_2541B5688, (uint64_t)&unk_2500FE478, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for HKBiologicalSex(uint64_t a1)
{
  sub_232000608(a1, &qword_2541B7060, (uint64_t)&unk_2500FE498, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_232000608(a1, &qword_2541B7098, (uint64_t)&unk_2500FE4B8, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for HKCardioFitnessLevel(uint64_t a1)
{
  sub_232000608(a1, &qword_2541B0C60, (uint64_t)&unk_2500FE4E0, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for HKWheelchairUse(uint64_t a1)
{
  sub_232000608(a1, (unint64_t *)&unk_2541B7088, (uint64_t)&unk_2500FE500, MEMORY[0x24BEE4D40]);
}

uint64_t sub_231FFF548()
{
  return sub_232000590(&qword_255F9BC10, (uint64_t (*)(uint64_t))type metadata accessor for HKCategoryValueSleepAnalysis, (uint64_t)&unk_23220FFDC);
}

uint64_t sub_231FFF574()
{
  return sub_232000590(&qword_255F9BC18, (uint64_t (*)(uint64_t))type metadata accessor for UNNotificationPresentationOptions, (uint64_t)&unk_2322100D4);
}

uint64_t sub_231FFF5A0()
{
  return sub_232000590(&qword_255F9BC20, (uint64_t (*)(uint64_t))type metadata accessor for UNNotificationPresentationOptions, (uint64_t)&unk_2322100A4);
}

uint64_t sub_231FFF5CC()
{
  return sub_232000590(&qword_255F9BC28, (uint64_t (*)(uint64_t))type metadata accessor for UNNotificationPresentationOptions, (uint64_t)&unk_2322100FC);
}

uint64_t sub_231FFF5F8()
{
  return sub_232000590(&qword_255F9BC30, (uint64_t (*)(uint64_t))type metadata accessor for UNNotificationPresentationOptions, (uint64_t)&unk_232210134);
}

uint64_t sub_231FFF624()
{
  return sub_232000590(&qword_255F9BC38, (uint64_t (*)(uint64_t))type metadata accessor for HKCategoryValueAppleStandHour, (uint64_t)&unk_232210234);
}

uint64_t sub_231FFF650(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

void type metadata accessor for HKFeatureIdentifier(uint64_t a1)
{
  sub_232000608(a1, &qword_2541B70E0, (uint64_t)&unk_2500FE520, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for HKDisplayTypeChartStyle(uint64_t a1)
{
  sub_232000608(a1, (unint64_t *)&unk_255F9BCA8, (uint64_t)&unk_2500FE548, MEMORY[0x24BEE4D40]);
}

char *sub_231FFF6C0(char *a1, char **a2, uint64_t a3)
{
  int v3;
  char *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  char *v16;
  char *v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v24;
  char *v25;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = a2[1];
    *((_QWORD *)a1 + 1) = v6;
    v7 = *(int *)(a3 + 24);
    v8 = &a1[v7];
    v9 = (uint64_t)a2 + v7;
    v10 = *(char **)((char *)a2 + v7);
    *(_QWORD *)v8 = v10;
    v8[8] = *((_BYTE *)a2 + v7 + 8);
    v11 = *(char **)((char *)a2 + v7 + 16);
    *((_QWORD *)v8 + 2) = v11;
    v12 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    v13 = *(int *)(v12 + 28);
    v24 = v9 + v13;
    v25 = &v8[v13];
    v14 = sub_2321FE938();
    v15 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    v16 = v4;
    v17 = v6;
    v18 = v10;
    v19 = v11;
    v15(v25, v24, v14);
    v20 = *(int *)(v12 + 32);
    v21 = *(void **)(v9 + v20);
    *(_QWORD *)&v8[v20] = v21;
    v22 = v21;
  }
  return v5;
}

void sub_231FFF7C0(id *a1, uint64_t a2)
{
  id *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v4 = (id *)((char *)a1 + *(int *)(a2 + 24));
  v5 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  v6 = (char *)v4 + *(int *)(v5 + 28);
  v7 = sub_2321FE938();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);

}

_QWORD *sub_231FFF848(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  void *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v23;
  char *v24;

  v4 = *(void **)a2;
  v5 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v5;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = a2 + v6;
  v9 = *(void **)(a2 + v6);
  *(_QWORD *)v7 = v9;
  v7[8] = *(_BYTE *)(a2 + v6 + 8);
  v10 = *(void **)(a2 + v6 + 16);
  *((_QWORD *)v7 + 2) = v10;
  v11 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  v12 = *(int *)(v11 + 28);
  v23 = v8 + v12;
  v24 = &v7[v12];
  v13 = sub_2321FE938();
  v14 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  v15 = v4;
  v16 = v5;
  v17 = v9;
  v18 = v10;
  v14(v24, v23, v13);
  v19 = *(int *)(v11 + 32);
  v20 = *(void **)(v8 + v19);
  *(_QWORD *)&v7[v19] = v20;
  v21 = v20;
  return a1;
}

uint64_t sub_231FFF918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  v9 = *(void **)(a2 + 8);
  v10 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v9;
  v11 = v9;

  v12 = *(int *)(a3 + 24);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(void **)(a1 + v12);
  v16 = *(void **)(a2 + v12);
  *(_QWORD *)v13 = v16;
  v17 = v16;

  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  v18 = *(void **)(v14 + 16);
  v19 = *(void **)(v13 + 16);
  *(_QWORD *)(v13 + 16) = v18;
  v20 = v18;

  v21 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  v22 = *(int *)(v21 + 28);
  v23 = v13 + v22;
  v24 = v14 + v22;
  v25 = sub_2321FE938();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
  v26 = *(int *)(v21 + 32);
  v27 = *(void **)(v13 + v26);
  v28 = *(void **)(v14 + v26);
  *(_QWORD *)(v13 + v26) = v28;
  v29 = v28;

  return a1;
}

_OWORD *sub_231FFFA04(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  *(_QWORD *)v5 = *(_QWORD *)((char *)a2 + v4);
  v5[8] = *((_BYTE *)a2 + v4 + 8);
  *((_QWORD *)v5 + 2) = *(_QWORD *)((char *)a2 + v4 + 16);
  v7 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  v8 = *(int *)(v7 + 28);
  v9 = &v5[v8];
  v10 = &v6[v8];
  v11 = sub_2321FE938();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  *(_QWORD *)&v5[*(int *)(v7 + 32)] = *(_QWORD *)&v6[*(int *)(v7 + 32)];
  return a1;
}

uint64_t sub_231FFFAA4(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = a2[1];

  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = *(void **)(a1 + v8);
  *(_QWORD *)v9 = *(_QWORD *)v10;

  *(_BYTE *)(v9 + 8) = v10[8];
  v12 = *(void **)(v9 + 16);
  *(_QWORD *)(v9 + 16) = *((_QWORD *)v10 + 2);

  v13 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  v14 = *(int *)(v13 + 28);
  v15 = v9 + v14;
  v16 = &v10[v14];
  v17 = sub_2321FE938();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  v18 = *(int *)(v13 + 32);
  v19 = *(void **)(v9 + v18);
  *(_QWORD *)(v9 + v18) = *(_QWORD *)&v10[v18];

  return a1;
}

uint64_t sub_231FFFB7C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_231FFFB88(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_231FFFC04()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_231FFFC10(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for MostRecentRangeSnidgetFeedItemModelProvider()
{
  uint64_t result;

  result = qword_2541B2698;
  if (!qword_2541B2698)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_231FFFCC0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SnidgetFeedItemGeneratorRequest(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for HKDisplayTypeIdentifier(uint64_t a1)
{
  sub_232000608(a1, qword_255F9BCB8, (uint64_t)&unk_2500FE568, MEMORY[0x24BEE4D40]);
}

uint64_t sub_231FFFD54()
{
  return sub_232000590((unint64_t *)&qword_2541B2990, (uint64_t (*)(uint64_t))sub_231FFFD80, MEMORY[0x24BE43760]);
}

void sub_231FFFD80(uint64_t a1)
{
  sub_231FFFDE4(a1, &qword_2541B2998, MEMORY[0x24BE43750]);
}

uint64_t sub_231FFFD94()
{
  return sub_232000590(&qword_2541B2938, (uint64_t (*)(uint64_t))MEMORY[0x24BE432B8], MEMORY[0x24BE432B0]);
}

uint64_t sub_231FFFDC0()
{
  return sub_231FFFE84(&qword_2541B2970, MEMORY[0x24BE43748]);
}

void sub_231FFFDE4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v6 = sub_2321FF6D0();
    v7 = sub_232000590(&qword_2541B2A10, (uint64_t (*)(uint64_t))MEMORY[0x24BE44BD0], MEMORY[0x24BE44BC8]);
    v8 = a3(a1, v6, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_231FFFE60()
{
  return sub_231FFFE84((unint64_t *)&unk_2541B2960, MEMORY[0x24BE43740]);
}

uint64_t sub_231FFFE84(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  _QWORD v8[2];

  result = *a1;
  if (!result)
  {
    sub_231FFFDE4(255, &qword_2541B2978, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE43730]);
    v6 = v5;
    v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BE44BB0];
    v8[0] = sub_232000590((unint64_t *)&unk_2541B2A00, (uint64_t (*)(uint64_t))MEMORY[0x24BE44BB0], MEMORY[0x24BE44BC0]);
    v8[1] = sub_232000590(&qword_2541B29F8, v7, MEMORY[0x24BE44BB8]);
    result = MEMORY[0x2348FF39C](a2, v6, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_231FFFF34()
{
  return sub_232000590(&qword_2541B7628, (uint64_t (*)(uint64_t))MEMORY[0x24BE43C88], MEMORY[0x24BE43CA0]);
}

uint64_t sub_231FFFF60()
{
  return sub_232000590(&qword_2541B29C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE43C88], MEMORY[0x24BE43C98]);
}

uint64_t sub_231FFFF8C(uint64_t a1)
{
  uint64_t result;

  result = sub_232000590(&qword_255F9BD28, (uint64_t (*)(uint64_t))type metadata accessor for MostRecentRangeSnidgetFeedItemModelProvider, (uint64_t)&unk_232210544);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_231FFFFC8()
{
  return sub_232000590(&qword_255F9BD30, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureIdentifier, (uint64_t)&unk_23221042C);
}

uint64_t sub_231FFFFF4()
{
  return sub_232000590(qword_255F9BD38, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureIdentifier, (uint64_t)&unk_232210404);
}

uint64_t sub_232000020()
{
  return sub_232000590((unint64_t *)&unk_2541B70D0, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureIdentifier, (uint64_t)&unk_232210494);
}

uint64_t sub_23200004C()
{
  return sub_232000590(&qword_2541B7458, (uint64_t (*)(uint64_t))sub_232000078, (uint64_t)&unk_2322120D8);
}

void sub_232000078(uint64_t a1)
{
  sub_2320000CC(a1, &qword_2541B7460, (uint64_t (*)(uint64_t, _QWORD *))type metadata accessor for SnidgetHarnessPluginView.ActionHandler);
}

uint64_t sub_23200008C()
{
  return sub_232000590(&qword_2541B36C8, (uint64_t (*)(uint64_t))sub_2320000B8, (uint64_t)&unk_232212090);
}

void sub_2320000B8(uint64_t a1)
{
  sub_2320000CC(a1, &qword_2541B36D0, (uint64_t (*)(uint64_t, _QWORD *))type metadata accessor for SnidgetHarnessPluginView);
}

void sub_2320000CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[8];

  if (!*a2)
  {
    sub_231FFFD80(255);
    v16 = v6;
    v7 = sub_2321FF004();
    v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BE432B8];
    v9 = sub_232000590((unint64_t *)&qword_2541B2990, (uint64_t (*)(uint64_t))sub_231FFFD80, MEMORY[0x24BE43760]);
    v10 = sub_232000590(&qword_2541B2938, v8, MEMORY[0x24BE432B0]);
    v11 = sub_231FFFE84(&qword_2541B2970, MEMORY[0x24BE43748]);
    v12 = sub_231FFFE84((unint64_t *)&unk_2541B2960, MEMORY[0x24BE43740]);
    v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BE43C88];
    v17[0] = v16;
    v17[1] = v7;
    v17[2] = v9;
    v17[3] = v10;
    v17[4] = v11;
    v17[5] = v12;
    v17[6] = sub_232000590(&qword_2541B7628, (uint64_t (*)(uint64_t))MEMORY[0x24BE43C88], MEMORY[0x24BE43CA0]);
    v17[7] = sub_232000590(&qword_2541B29C0, v13, MEMORY[0x24BE43C98]);
    v14 = a3(a1, v17);
    if (!v15)
      atomic_store(v14, a2);
  }
}

void sub_23200021C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2541B2860)
  {
    sub_2320002B4(255, &qword_2541B7618, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    sub_232000608(255, (unint64_t *)&qword_2541B5570, MEMORY[0x24BEE13C8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2541B2860);
  }
}

void sub_2320002B4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_2322016F8();
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_232000300()
{
  unint64_t result;

  result = qword_2541B7470;
  if (!qword_2541B7470)
  {
    result = MEMORY[0x2348FF39C](&unk_232215FAC, &type metadata for SummaryFeedItemGenerationFailure);
    atomic_store(result, (unint64_t *)&qword_2541B7470);
  }
  return result;
}

void sub_232000344(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_2541B47C8)
  {
    v2 = sub_2321FF208();
    sub_231FFFDE4(255, &qword_2541B2978, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE43730]);
    v4 = v3;
    v5 = sub_2321FF2D4();
    v6 = type metadata accessor for SnidgetHarnessGeneratorFeedItemModel(a1, v2, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_2541B47C8);
  }
}

uint64_t sub_2320003D0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SnidgetFeedItemMetadata(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23200040C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  sub_2320002B4(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_232000448()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2541B2870)
  {
    sub_2321FDC6C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2541B2870);
  }
}

uint64_t sub_2320004AC(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_2320002B4(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_2320004F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2320002B4(0, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23200054C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_232000590(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x2348FF39C](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

void type metadata accessor for Label(uint64_t a1)
{
  sub_232000608(a1, &qword_2541B5638, (uint64_t)&unk_2500FE590, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for __HKStateOfMindDomain(uint64_t a1)
{
  sub_232000608(a1, (unint64_t *)&unk_2541B5640, (uint64_t)&unk_2500FE5B0, MEMORY[0x24BEE4D40]);
}

void sub_232000608(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = a4(0, a3);
    if (!v6)
      atomic_store(v5, a2);
  }
}

unint64_t sub_232000674(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4;

  if ((a3 & 1) != 0)
  {
    sub_23220189C();
    swift_bridgeObjectRelease();
    v4 = 0x20676E697373694DLL;
    sub_232200F48();
  }
  else
  {
    sub_23220189C();
    swift_bridgeObjectRelease();
    v4 = 0xD000000000000014;
    sub_23220021C();
    sub_232200F48();
    swift_bridgeObjectRelease();
  }
  return v4;
}

BOOL sub_232000764(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  id v33;
  void *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  void (*v42)(char *, uint64_t, uint64_t);
  unint64_t v43;
  id v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  void (*v51)(char *, uint64_t);
  char *v52;
  BOOL v53;
  char *v55;
  id v56;
  id v57;
  NSObject *v58;
  int v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  char v71;
  char *v72;
  os_log_t v73;
  id v74;
  id v75;
  NSObject *v76;
  os_log_type_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  char *v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  id v95;
  NSObject *v96;
  int v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  os_log_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t (*v111)(char *, uint64_t, uint64_t);
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  os_log_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;

  v4 = sub_23220039C();
  v118 = *(_QWORD *)(v4 - 8);
  v119 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v109 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v117 = (char *)&v109 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v115 = (char *)&v109 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v109 - v12;
  sub_2320002B4(0, (unint64_t *)&qword_2541B28E0, (void (*)(uint64_t))MEMORY[0x24BE48068]);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v109 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v109 - v19;
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&v109 - v22;
  v24 = MEMORY[0x24BDAC7A8](v21);
  v116 = (os_log_t)((char *)&v109 - v25);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v109 - v27;
  v29 = MEMORY[0x24BDAC7A8](v26);
  v114 = (uint64_t)&v109 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v32 = (char *)&v109 - v31;
  if (!objc_msgSend(a1, sel_hasNotificationIdentifier)
    || (v33 = objc_msgSend(a1, sel_notificationIdentifier)) == 0)
  {
    sub_23220036C();
    v44 = a1;
    v45 = sub_232200390();
    v46 = sub_2322012FC();
    if (os_log_type_enabled(v45, v46))
    {
      v47 = (uint8_t *)swift_slowAlloc();
      v48 = swift_slowAlloc();
      v121 = v48;
      *(_DWORD *)v47 = 136315138;
      v49 = sub_2320026C8(v44);
      v120 = sub_232013174(v49, v50, &v121);
      sub_232201710();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v45, v46, "%s shouldGenerateNotification=false; no content state", v47, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v48, -1, -1);
      MEMORY[0x2348FF468](v47, -1, -1);

    }
    else
    {

    }
    v51 = *(void (**)(char *, uint64_t))(v118 + 8);
    v52 = v7;
    goto LABEL_10;
  }
  v34 = v33;
  v112 = v13;
  v35 = sub_232200EC4();
  v37 = v36;

  swift_bridgeObjectRetain();
  v113 = v35;
  LOBYTE(v35) = sub_2322016D4();
  swift_bridgeObjectRelease();
  if ((v35 & 1) == 0)
  {
    v55 = v117;
    sub_23220036C();
    sub_2320004AC(a2, (uint64_t)v20, (unint64_t *)&qword_2541B28E0, (void (*)(uint64_t))MEMORY[0x24BE48068]);
    v56 = a1;
    swift_bridgeObjectRetain();
    v57 = v56;
    v58 = sub_232200390();
    v59 = sub_2322012FC();
    if (os_log_type_enabled(v58, (os_log_type_t)v59))
    {
      LODWORD(v116) = v59;
      v60 = v37;
      v61 = swift_slowAlloc();
      v62 = swift_slowAlloc();
      v121 = v62;
      *(_DWORD *)v61 = 136315650;
      v63 = sub_2320026C8(v57);
      v120 = sub_232013174(v63, v64, &v121);
      sub_232201710();

      swift_bridgeObjectRelease();
      *(_WORD *)(v61 + 12) = 2080;
      swift_bridgeObjectRetain();
      v120 = sub_232013174(v113, v60, &v121);
      sub_232201710();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v61 + 22) = 2080;
      sub_2320004AC((uint64_t)v20, (uint64_t)v17, (unint64_t *)&qword_2541B28E0, (void (*)(uint64_t))MEMORY[0x24BE48068]);
      v65 = sub_2321FE7DC();
      v66 = *(_QWORD *)(v65 - 8);
      v67 = v62;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v17, 1, v65) == 1)
      {
        v68 = 7104878;
        sub_23200040C((uint64_t)v17, (unint64_t *)&qword_2541B28E0, (void (*)(uint64_t))MEMORY[0x24BE48068]);
        v69 = 0xE300000000000000;
      }
      else
      {
        v68 = sub_2321FE770();
        v69 = v87;
        (*(void (**)(char *, uint64_t))(v66 + 8))(v17, v65);
      }
      v89 = v118;
      v88 = v119;
      v90 = v117;
      v120 = sub_232013174(v68, v69, &v121);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_23200040C((uint64_t)v20, (unint64_t *)&qword_2541B28E0, (void (*)(uint64_t))MEMORY[0x24BE48068]);
      _os_log_impl(&dword_231FFB000, v58, (os_log_type_t)v116, "%s shouldGenerateNotification=false; notificationIdentifier: %s contentState: %s",
        (uint8_t *)v61,
        0x20u);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v67, -1, -1);
      MEMORY[0x2348FF468](v61, -1, -1);

      (*(void (**)(char *, uint64_t))(v89 + 8))(v90, v88);
      return 0;
    }
    swift_bridgeObjectRelease_n();

    sub_23200040C((uint64_t)v20, (unint64_t *)&qword_2541B28E0, (void (*)(uint64_t))MEMORY[0x24BE48068]);
    v51 = *(void (**)(char *, uint64_t))(v118 + 8);
    v52 = v55;
LABEL_10:
    v51(v52, v119);
    return 0;
  }
  v38 = v37;
  sub_2320004AC(a2, (uint64_t)v32, (unint64_t *)&qword_2541B28E0, (void (*)(uint64_t))MEMORY[0x24BE48068]);
  v39 = sub_2321FE7DC();
  v40 = *(_QWORD *)(v39 - 8);
  v111 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 48);
  v41 = v111(v32, 1, v39);
  v117 = (char *)v39;
  v110 = v40;
  if (v41 == 1)
  {
    sub_23200040C((uint64_t)v32, (unint64_t *)&qword_2541B28E0, (void (*)(uint64_t))MEMORY[0x24BE48068]);
    v42 = 0;
    v43 = 0;
  }
  else
  {
    v42 = (void (*)(char *, uint64_t, uint64_t))sub_2321FE770();
    v43 = v70;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v32, v39);
  }
  v71 = sub_232001470(a1, v42, v43);
  swift_bridgeObjectRelease();
  if (v71 == 2)
  {
    v72 = v115;
    sub_23220036C();
    v73 = v116;
    sub_2320004AC(a2, (uint64_t)v116, (unint64_t *)&qword_2541B28E0, (void (*)(uint64_t))MEMORY[0x24BE48068]);
    v74 = a1;
    swift_bridgeObjectRetain();
    v75 = v74;
    v76 = sub_232200390();
    v77 = sub_2322012FC();
    if (os_log_type_enabled(v76, v77))
    {
      v78 = swift_slowAlloc();
      v79 = swift_slowAlloc();
      v121 = v79;
      *(_DWORD *)v78 = 136315650;
      v80 = sub_2320026C8(v75);
      v120 = sub_232013174(v80, v81, &v121);
      sub_232201710();

      swift_bridgeObjectRelease();
      *(_WORD *)(v78 + 12) = 2080;
      swift_bridgeObjectRetain();
      v120 = sub_232013174(v113, v38, &v121);
      sub_232201710();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v78 + 22) = 2080;
      sub_2320004AC((uint64_t)v116, (uint64_t)v23, (unint64_t *)&qword_2541B28E0, (void (*)(uint64_t))MEMORY[0x24BE48068]);
      v82 = v117;
      v83 = v111(v23, 1, (uint64_t)v117);
      v84 = v119;
      if (v83 == 1)
      {
        v85 = 7104878;
        sub_23200040C((uint64_t)v23, (unint64_t *)&qword_2541B28E0, (void (*)(uint64_t))MEMORY[0x24BE48068]);
        v86 = 0xE300000000000000;
      }
      else
      {
        v85 = sub_2321FE770();
        v86 = v105;
        (*(void (**)(char *, char *))(v110 + 8))(v23, v82);
      }
      v120 = sub_232013174(v85, v86, &v121);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_23200040C((uint64_t)v116, (unint64_t *)&qword_2541B28E0, (void (*)(uint64_t))MEMORY[0x24BE48068]);
      _os_log_impl(&dword_231FFB000, v76, v77, "%s shouldGenerateNotification notificationIdentifier: %s contentState: %s", (uint8_t *)v78, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v79, -1, -1);
      MEMORY[0x2348FF468](v78, -1, -1);

      (*(void (**)(char *, uint64_t))(v118 + 8))(v115, v84);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      sub_23200040C((uint64_t)v73, (unint64_t *)&qword_2541B28E0, (void (*)(uint64_t))MEMORY[0x24BE48068]);
      (*(void (**)(char *, uint64_t))(v118 + 8))(v72, v119);
    }
    return 1;
  }
  else
  {
    v53 = (v71 & 1) == 0;
    v91 = v112;
    sub_23220036C();
    v92 = a2;
    v93 = v114;
    sub_2320004AC(v92, v114, (unint64_t *)&qword_2541B28E0, (void (*)(uint64_t))MEMORY[0x24BE48068]);
    v94 = a1;
    swift_bridgeObjectRetain();
    v95 = v94;
    v96 = sub_232200390();
    v97 = sub_2322012FC();
    if (os_log_type_enabled(v96, (os_log_type_t)v97))
    {
      LODWORD(v115) = v97;
      v116 = v96;
      v98 = swift_slowAlloc();
      v109 = swift_slowAlloc();
      v121 = v109;
      *(_DWORD *)v98 = 136315906;
      v99 = sub_2320026C8(v95);
      v120 = sub_232013174(v99, v100, &v121);
      sub_232201710();

      v101 = v114;
      swift_bridgeObjectRelease();
      *(_WORD *)(v98 + 12) = 1024;
      LODWORD(v120) = v71 & 1;
      sub_232201710();
      *(_WORD *)(v98 + 18) = 2080;
      swift_bridgeObjectRetain();
      v120 = sub_232013174(v113, v38, &v121);
      sub_232201710();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v98 + 28) = 2080;
      sub_2320004AC(v101, (uint64_t)v28, (unint64_t *)&qword_2541B28E0, (void (*)(uint64_t))MEMORY[0x24BE48068]);
      v102 = v117;
      if (v111(v28, 1, (uint64_t)v117) == 1)
      {
        v103 = 7104878;
        sub_23200040C((uint64_t)v28, (unint64_t *)&qword_2541B28E0, (void (*)(uint64_t))MEMORY[0x24BE48068]);
        v104 = 0xE300000000000000;
      }
      else
      {
        v103 = sub_2321FE770();
        v104 = v106;
        (*(void (**)(char *, char *))(v110 + 8))(v28, v102);
      }
      v120 = sub_232013174(v103, v104, &v121);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_23200040C(v101, (unint64_t *)&qword_2541B28E0, (void (*)(uint64_t))MEMORY[0x24BE48068]);
      v107 = v116;
      _os_log_impl(&dword_231FFB000, v116, (os_log_type_t)v115, "%s shouldGenerateNotification isTrendSimilar: %{BOOL}d notificationIdentifier: %s contentState: %s", (uint8_t *)v98, 0x26u);
      v108 = v109;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v108, -1, -1);
      MEMORY[0x2348FF468](v98, -1, -1);

      (*(void (**)(char *, uint64_t))(v118 + 8))(v112, v119);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      sub_23200040C(v93, (unint64_t *)&qword_2541B28E0, (void (*)(uint64_t))MEMORY[0x24BE48068]);
      (*(void (**)(char *, uint64_t))(v118 + 8))(v91, v119);
    }
  }
  return v53;
}

BOOL sub_232001470(void *a1, void (*a2)(char *, uint64_t, uint64_t), unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  id v41;
  id v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  void (**v55)(char *, uint64_t);
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  void (*v61)(char *, char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  id v64;
  id v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t);
  uint64_t (*v73)(uint64_t, uint64_t, uint64_t);
  int v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t);
  char *v78;
  char v79;
  void (*v80)(char *, uint64_t);
  void (*v81)(uint64_t);
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  char *v87;
  uint64_t v89;
  void (*v90)(char *, uint64_t);
  uint64_t v91;
  uint64_t v92;
  char *v93;
  double v94;
  double v95;
  char *v96;
  char *v97;
  double v98;
  double v99;
  void (*v100)(char *, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(char *, uint64_t, uint64_t);
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  void (**v117)(char *, uint64_t);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  id v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;

  v126 = a1;
  v5 = sub_23220039C();
  v117 = *(void (***)(char *, uint64_t))(v5 - 8);
  v118 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v122 = (char *)&v105 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, &qword_255F9BE30, (void (*)(uint64_t))MEMORY[0x24BE4B4D0]);
  MEMORY[0x24BDAC7A8](v7);
  v109 = (char *)&v105 - v8;
  v110 = sub_2321FFE98();
  v108 = *(_QWORD *)(v110 - 8);
  MEMORY[0x24BDAC7A8](v110);
  v107 = (char *)&v105 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, &qword_2541B7618, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  MEMORY[0x24BDAC7A8](v10);
  v113 = (char *)&v105 - v11;
  sub_232002C10();
  v115 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v123 = (uint64_t)&v105 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, &qword_2541B2A40, (void (*)(uint64_t))MEMORY[0x24BE4AC80]);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v114 = (uint64_t)&v105 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v116 = (char *)&v105 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v121 = (uint64_t)&v105 - v19;
  v20 = sub_2321FFD00();
  v21 = *(_QWORD *)(v20 - 8);
  v119 = v20;
  v120 = v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v112 = (char *)&v105 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v127 = (char *)&v105 - v24;
  v25 = sub_2321FDC6C();
  v125 = *(_QWORD *)(v25 - 8);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v111 = (char *)&v105 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v124 = (char *)&v105 - v28;
  sub_2320002B4(0, &qword_255F9BE38, (void (*)(uint64_t))sub_232002C80);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v105 - v30;
  sub_232002C80();
  v33 = v32;
  v34 = *(_QWORD *)(v32 - 8);
  v35 = MEMORY[0x24BDAC7A8](v32);
  v37 = (char *)&v105 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v35);
  v39 = (char *)&v105 - v38;
  if (!a3)
    return 0;
  swift_bridgeObjectRetain();
  v106 = a2;
  sub_232002280((uint64_t)a2, a3, (uint64_t)v31);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v31, 1, v33) != 1)
  {
    swift_bridgeObjectRelease();
    v50 = *(int *)(v33 + 48);
    v51 = &v39[v50];
    v52 = &v31[v50];
    v122 = v39;
    v53 = v125;
    v54 = *(void (**)(char *, char *, uint64_t))(v125 + 32);
    v54(v122, v31, v25);
    v55 = *(void (***)(char *, uint64_t))(v120 + 32);
    v56 = v52;
    v57 = v119;
    v58 = v120;
    ((void (*)(char *, char *, uint64_t))v55)(v51, v56, v119);
    v59 = &v37[*(int *)(v33 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v37, v122, v25);
    v60 = v58;
    v61 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
    v61(v59, v51, v57);
    v62 = v25;
    v63 = v57;
    v118 = v62;
    v106 = (void (*)(char *, uint64_t, uint64_t))v54;
    ((void (*)(char *, char *))v54)(v124, v37);
    v117 = v55;
    ((void (*)(char *, char *, uint64_t))v55)(v127, v59, v57);
    v64 = v126;
    if (objc_msgSend(v126, sel_hasChangeTypeRawValue)
      && (v65 = objc_msgSend(v64, sel_changeTypeRawValue)) != 0)
    {
      v66 = v65;
      sub_232200EC4();

      v67 = v121;
      sub_2321FFCE8();
      v68 = v60;
    }
    else
    {
      v68 = v60;
      v67 = v121;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 56))(v121, 1, 1, v57);
    }
    v69 = (uint64_t)v116;
    v61(v116, v127, v57);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v68 + 56))(v69, 0, 1, v57);
    v70 = v123;
    v71 = v123 + *(int *)(v115 + 48);
    v72 = (void (*)(uint64_t))MEMORY[0x24BE4AC80];
    sub_2320004AC(v67, v123, &qword_2541B2A40, (void (*)(uint64_t))MEMORY[0x24BE4AC80]);
    sub_2320004AC(v69, v71, &qword_2541B2A40, v72);
    v73 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v68 + 48);
    if (v73(v70, 1, v63) == 1)
    {
      sub_23200040C(v69, &qword_2541B2A40, v72);
      sub_23200040C(v67, &qword_2541B2A40, v72);
      v74 = v73(v71, 1, v63);
      v75 = v125;
      if (v74 == 1)
      {
        sub_23200040C(v123, &qword_2541B2A40, (void (*)(uint64_t))MEMORY[0x24BE4AC80]);
        goto LABEL_17;
      }
    }
    else
    {
      v76 = v114;
      sub_2320004AC(v70, v114, &qword_2541B2A40, (void (*)(uint64_t))MEMORY[0x24BE4AC80]);
      if (v73(v71, 1, v63) != 1)
      {
        v78 = v112;
        ((void (*)(char *, uint64_t, uint64_t))v117)(v112, v71, v63);
        sub_232002D6C();
        v79 = sub_232200E64();
        v80 = *(void (**)(char *, uint64_t))(v60 + 8);
        v80(v78, v63);
        v81 = (void (*)(uint64_t))MEMORY[0x24BE4AC80];
        sub_23200040C(v69, &qword_2541B2A40, (void (*)(uint64_t))MEMORY[0x24BE4AC80]);
        sub_23200040C(v121, &qword_2541B2A40, v81);
        v80((char *)v76, v63);
        sub_23200040C(v70, &qword_2541B2A40, v81);
        v75 = v125;
        if ((v79 & 1) != 0)
        {
LABEL_17:
          v49 = (uint64_t)v126;
          if (objc_msgSend(v126, sel_hasOriginalEventDateData))
          {
            objc_msgSend((id)v49, sel_originalEventDateData);
            v82 = (id)HKDecodeDateForValue();
            v83 = (uint64_t)v113;
            sub_2321FDC30();

            v84 = v120;
            v85 = v118;
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v75 + 56))(v83, 0, 1, v118);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v83, 1, v85) != 1)
            {
              v106(v111, v83, v118);
              v86 = HKCodableSummaryTrendTileViewModel.coveredDateRange.getter();
              if (v86 == 4)
              {
                v87 = v109;
                sub_2321FFE80();
                goto LABEL_30;
              }
              if (v86 == 5)
              {
                v87 = v109;
                sub_2321FFE8C();
LABEL_30:
                v91 = v108;
                v92 = v110;
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v87, 0, 1, v110);
                v93 = v107;
                (*(void (**)(char *, char *, uint64_t))(v91 + 32))(v107, v87, v92);
                sub_2321FFE74();
                v95 = v94;
                v96 = v111;
                v97 = v124;
                sub_2321FDBDC();
                v99 = fabs(v98);
                (*(void (**)(char *, uint64_t))(v91 + 8))(v93, v92);
                v100 = *(void (**)(char *, uint64_t))(v75 + 8);
                v101 = v118;
                v100(v96, v118);
                (*(void (**)(char *, uint64_t))(v120 + 8))(v127, v63);
                v100(v97, v101);
                sub_232002CEC((uint64_t)v122, (uint64_t (*)(_QWORD))sub_232002C80);
                return v99 <= v95;
              }
              v102 = (uint64_t)v109;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v108 + 56))(v109, 1, 1, v110);
              sub_23200040C(v102, &qword_255F9BE30, (void (*)(uint64_t))MEMORY[0x24BE4B4D0]);
              v49 = v84;
              v103 = HKCodableSummaryTrendTileViewModel.coveredDateRange.getter();
              sub_232002D28();
              swift_allocError();
              *(_QWORD *)v104 = v103;
              *(_QWORD *)(v104 + 8) = 0;
              *(_BYTE *)(v104 + 16) = 0;
              swift_willThrow();
              v90 = *(void (**)(char *, uint64_t))(v75 + 8);
              v90(v111, v118);
              (*(void (**)(char *, uint64_t))(v84 + 8))(v127, v63);
LABEL_28:
              v90(v124, v118);
              sub_232002CEC((uint64_t)v122, (uint64_t (*)(_QWORD))sub_232002C80);
              return v49;
            }
          }
          else
          {
            v83 = (uint64_t)v113;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v75 + 56))(v113, 1, 1, v118);
            v84 = v60;
          }
          sub_23200040C(v83, &qword_2541B7618, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
          sub_232002D28();
          swift_allocError();
          *(_QWORD *)v89 = 0xD000000000000011;
          *(_QWORD *)(v89 + 8) = 0x8000000232202820;
          *(_BYTE *)(v89 + 16) = 1;
          swift_willThrow();
          (*(void (**)(char *, uint64_t))(v84 + 8))(v127, v63);
          v90 = *(void (**)(char *, uint64_t))(v75 + 8);
          goto LABEL_28;
        }
        v80(v127, v63);
        goto LABEL_23;
      }
      v77 = (void (*)(uint64_t))MEMORY[0x24BE4AC80];
      sub_23200040C(v69, &qword_2541B2A40, (void (*)(uint64_t))MEMORY[0x24BE4AC80]);
      sub_23200040C(v121, &qword_2541B2A40, v77);
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v76, v63);
      v75 = v125;
    }
    sub_232002CEC(v123, (uint64_t (*)(_QWORD))sub_232002C10);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v127, v63);
LABEL_23:
    (*(void (**)(char *, uint64_t))(v75 + 8))(v124, v118);
    sub_232002CEC((uint64_t)v122, (uint64_t (*)(_QWORD))sub_232002C80);
    return 0;
  }
  sub_23200040C((uint64_t)v31, &qword_255F9BE38, (void (*)(uint64_t))sub_232002C80);
  v40 = (uint64_t)v122;
  sub_23220036C();
  v41 = v126;
  swift_bridgeObjectRetain();
  v42 = v41;
  v43 = sub_232200390();
  v44 = sub_2322012FC();
  if (os_log_type_enabled(v43, v44))
  {
    v45 = swift_slowAlloc();
    v46 = swift_slowAlloc();
    v129 = v46;
    *(_DWORD *)v45 = 136315394;
    v47 = sub_2320026C8(v42);
    v128 = sub_232013174(v47, v48, &v129);
    sub_232201710();

    swift_bridgeObjectRelease();
    *(_WORD *)(v45 + 12) = 2080;
    swift_bridgeObjectRetain();
    v128 = sub_232013174((uint64_t)v106, a3, &v129);
    sub_232201710();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_231FFB000, v43, v44, "%s Unable to process content state %s", (uint8_t *)v45, 0x16u);
    v49 = 2;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v46, -1, -1);
    MEMORY[0x2348FF468](v45, -1, -1);

    v117[1](v122, v118);
  }
  else
  {

    v49 = 2;
    swift_bridgeObjectRelease_n();

    v117[1]((char *)v40, v118);
  }
  return v49;
}

uint64_t sub_2320020CC(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  char v9;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  unint64_t v14;
  unint64_t v15;
  BOOL v16;
  uint64_t v17;

  sub_2320002B4(0, (unint64_t *)&qword_2541B28E0, (void (*)(uint64_t))MEMORY[0x24BE48068]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v17 - v5;
  if (objc_msgSend(a1, sel_hasNotificationIdentifier)
    && (v7 = objc_msgSend(a1, sel_notificationIdentifier)) != 0
    && (v8 = v7,
        sub_232200EC4(),
        v8,
        LOBYTE(v8) = sub_2322016C8(),
        swift_bridgeObjectRelease(),
        (v8 & 1) == 0))
  {
    sub_2320004AC(a2, (uint64_t)v6, (unint64_t *)&qword_2541B28E0, (void (*)(uint64_t))MEMORY[0x24BE48068]);
    v11 = sub_2321FE7DC();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v6, 1, v11) == 1)
    {
      sub_23200040C((uint64_t)v6, (unint64_t *)&qword_2541B28E0, (void (*)(uint64_t))MEMORY[0x24BE48068]);
      v13 = 0;
      v14 = 0;
    }
    else
    {
      v13 = (void (*)(char *, uint64_t, uint64_t))sub_2321FE770();
      v14 = v15;
      (*(void (**)(char *, uint64_t))(v12 + 8))(v6, v11);
    }
    v16 = sub_232001470(a1, v13, v14);
    swift_bridgeObjectRelease();
    v9 = v16;
  }
  else
  {
    v9 = 1;
  }
  return v9 & 1;
}

uint64_t sub_232002280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  void (*v31)(char *, char *, uint64_t);
  void (*v32)(uint64_t, char *, uint64_t);
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t *v40;
  void (*v41)(uint64_t);
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  sub_2320002B4(0, &qword_2541B2A40, (void (*)(uint64_t))MEMORY[0x24BE4AC80]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v50 - v7;
  v9 = sub_2321FFD00();
  v55 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v54 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, &qword_2541B7618, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v50 - v12;
  v14 = sub_2321FDC6C();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v50 - v19;
  v56 = a1;
  v57 = a2;
  v21 = sub_232002E08();
  v22 = (_QWORD *)MEMORY[0x2348FE8C8](95, 0xE100000000000000, 0x7FFFFFFFFFFFFFFFLL, 1, MEMORY[0x24BEE0D00], v21);
  v23 = v22;
  if (v22[2] != 2)
  {
    sub_232002C80();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(a3, 1, 1, v42);
    return swift_bridgeObjectRelease();
  }
  v51 = v8;
  v52 = v9;
  v53 = a3;
  v24 = v22[4];
  v25 = v22[5];
  v27 = v22[6];
  v26 = v22[7];
  swift_bridgeObjectRetain();
  MEMORY[0x2348FE0A0](v24, v25, v27, v26);
  swift_bridgeObjectRelease();
  v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD15D0]), sel_init);
  v29 = (void *)sub_232200E94();
  swift_bridgeObjectRelease();
  v30 = objc_msgSend(v28, sel_dateFromString_, v29);

  if (!v30)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
    goto LABEL_9;
  }
  sub_2321FDC30();

  v31 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v31(v13, v18, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
LABEL_9:

    swift_bridgeObjectRelease();
    v40 = &qword_2541B7618;
    v41 = (void (*)(uint64_t))MEMORY[0x24BDCE900];
    goto LABEL_10;
  }
  v32 = (void (*)(uint64_t, char *, uint64_t))v31;
  result = ((uint64_t (*)(char *, char *, uint64_t))v31)(v20, v13, v14);
  if (v23[2] < 2uLL)
  {
    __break(1u);
    return result;
  }
  v34 = v23[8];
  v35 = v23[9];
  v36 = v23[10];
  v37 = v23[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  MEMORY[0x2348FE0A0](v34, v35, v36, v37);
  swift_bridgeObjectRelease();
  v13 = v51;
  sub_2321FFCE8();

  v38 = v55;
  v39 = v52;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v13, 1, v52) != 1)
  {
    v44 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
    v45 = v54;
    v44(v54, v13, v39);
    sub_232002C80();
    v47 = v46;
    v48 = v53;
    v49 = (char *)(v53 + *(int *)(v46 + 48));
    v32(v53, v20, v14);
    v44(v49, v45, v39);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v48, 0, 1, v47);
  }
  (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
  v40 = &qword_2541B2A40;
  v41 = (void (*)(uint64_t))MEMORY[0x24BE4AC80];
LABEL_10:
  sub_23200040C((uint64_t)v13, v40, v41);
  sub_232002C80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v53, 1, 1, v43);
}

unint64_t sub_2320026C8(void *a1)
{
  id v2;
  void *v3;

  sub_23220189C();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(a1, sel_objectTypeIdentifier);
  if (v2)
  {
    v3 = v2;
    sub_232200EC4();

  }
  sub_232002DB4();
  sub_232200F00();
  sub_232200F48();
  swift_bridgeObjectRelease();
  return 0xD000000000000015;
}

uint64_t sub_232002798(void *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39[2];
  char v40;
  uint64_t v41;

  v4 = sub_23220039C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v35 - v9;
  v41 = (uint64_t)a1;
  v11 = a1;
  sub_232002B9C();
  if (!swift_dynamicCast())
  {
    sub_23220036C();
    v22 = a1;
    v23 = a1;
    v24 = sub_232200390();
    v25 = sub_2322012E4();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = swift_slowAlloc();
      v27 = swift_slowAlloc();
      v38 = v5;
      v39[0] = v27;
      v28 = v27;
      *(_DWORD *)v26 = 136315394;
      v41 = (uint64_t)a1;
      v29 = a1;
      v30 = sub_232200F0C();
      v37 = v4;
      v41 = sub_232013174(v30, v31, v39);
      sub_232201710();
      swift_bridgeObjectRelease();

      *(_WORD *)(v26 + 12) = 1024;
      LODWORD(v41) = a2 & 1;
      sub_232201710();
      _os_log_impl(&dword_231FFB000, v24, v25, "[Trend Notification] Unrecognized Error: %s using fallback value: %{BOOL}d", (uint8_t *)v26, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v28, -1, -1);
      MEMORY[0x2348FF468](v26, -1, -1);

      (*(void (**)(char *, uint64_t))(v38 + 8))(v8, v37);
      return a2 & 1;
    }

    v32 = *(void (**)(char *, uint64_t))(v5 + 8);
    v33 = v8;
LABEL_8:
    v32(v33, v4);
    return a2 & 1;
  }
  v12 = v39[0];
  v13 = v39[1];
  v14 = v40;
  sub_23220036C();
  sub_232002BF0(v12, v13, v14);
  v15 = sub_232200390();
  v16 = sub_2322012E4();
  if (!os_log_type_enabled(v15, v16))
  {
    sub_232002C00(v12, v13, v14);
    sub_232002C00(v12, v13, v14);

    v32 = *(void (**)(char *, uint64_t))(v5 + 8);
    v33 = v10;
    goto LABEL_8;
  }
  v17 = swift_slowAlloc();
  v38 = v5;
  v18 = v17;
  v36 = swift_slowAlloc();
  v39[0] = v36;
  *(_DWORD *)v18 = 136315394;
  v19 = sub_232000674(v12, v13, v14);
  v37 = v4;
  v41 = sub_232013174(v19, v20, v39);
  sub_232201710();
  swift_bridgeObjectRelease();
  sub_232002C00(v12, v13, v14);
  sub_232002C00(v12, v13, v14);
  *(_WORD *)(v18 + 12) = 1024;
  LODWORD(v41) = a2 & 1;
  sub_232201710();
  _os_log_impl(&dword_231FFB000, v15, v16, "[Trend Notification] Error: %s using fallback value: %{BOOL}d", (uint8_t *)v18, 0x12u);
  v21 = v36;
  swift_arrayDestroy();
  MEMORY[0x2348FF468](v21, -1, -1);
  MEMORY[0x2348FF468](v18, -1, -1);

  (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v37);
  return a2 & 1;
}

unint64_t sub_232002B9C()
{
  unint64_t result;

  result = qword_2541B78D0;
  if (!qword_2541B78D0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_2541B78D0);
  }
  return result;
}

uint64_t sub_232002BF0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_232002C00(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

void sub_232002C10()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2541B6BA0)
  {
    sub_2320002B4(255, &qword_2541B2A40, (void (*)(uint64_t))MEMORY[0x24BE4AC80]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2541B6BA0);
  }
}

void sub_232002C80()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255F9BE40)
  {
    sub_2321FDC6C();
    sub_2321FFD00();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255F9BE40);
  }
}

uint64_t sub_232002CEC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_232002D28()
{
  unint64_t result;

  result = qword_255F9BE48;
  if (!qword_255F9BE48)
  {
    result = MEMORY[0x2348FF39C](&unk_2322105FC, &type metadata for TrendNotificationUtilities.ProcessingError);
    atomic_store(result, (unint64_t *)&qword_255F9BE48);
  }
  return result;
}

unint64_t sub_232002D6C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F9BE50[0];
  if (!qword_255F9BE50[0])
  {
    v1 = sub_2321FFD00();
    result = MEMORY[0x2348FF39C](MEMORY[0x24BE4AC98], v1);
    atomic_store(result, qword_255F9BE50);
  }
  return result;
}

void sub_232002DB4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B78A0)
  {
    v0 = sub_2322016F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B78A0);
  }
}

unint64_t sub_232002E08()
{
  unint64_t result;

  result = qword_2541B5468;
  if (!qword_2541B5468)
  {
    result = MEMORY[0x2348FF39C](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2541B5468);
  }
  return result;
}

uint64_t destroy for TrendNotificationUtilities.ProcessingError(uint64_t a1)
{
  return sub_232002C00(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s9Summaries26TrendNotificationUtilitiesV15ProcessingErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_232002BF0(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for TrendNotificationUtilities.ProcessingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_232002BF0(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_232002C00(v6, v7, v8);
  return a1;
}

__n128 initializeWithTake for TrendNotificationUtilities.ProcessingError(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for TrendNotificationUtilities.ProcessingError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_232002C00(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for TrendNotificationUtilities.ProcessingError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TrendNotificationUtilities.ProcessingError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_232002FE0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_232002FEC(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for TrendNotificationUtilities.ProcessingError()
{
  return &type metadata for TrendNotificationUtilities.ProcessingError;
}

void sub_232003008(void *a1, uint64_t a2, void (*a3)(_QWORD, _QWORD), uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  _QWORD *v23;
  void (*v24)(_QWORD, _QWORD);
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  _BYTE *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(_QWORD, _QWORD);
  _QWORD aBlock[6];

  v5 = v4;
  v35 = a3;
  v8 = sub_2321FDC6C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2321FD8B8();
  v33 = *(_QWORD *)(v12 - 8);
  v34 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v5 + qword_2541BF5D0;
  v16 = *(void **)(v15 + *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28));
  objc_opt_self();
  v17 = swift_dynamicCastObjCClass();
  if (v17)
  {
    v18 = v17;
    v32 = v16;
    v19 = objc_msgSend(a1, sel_endDate);
    sub_2321FDC30();

    sub_2321FD840();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v20 = (void *)objc_opt_self();
    v21 = (void *)sub_2321FD858();
    v22 = objc_msgSend(v20, sel_predicateForSamplesWithinDateInterval_options_, v21, 0);

    v23 = (_QWORD *)swift_allocObject();
    v24 = v35;
    v23[2] = v18;
    v23[3] = v24;
    v23[4] = a4;
    v23[5] = v5;
    v23[6] = a1;
    v25 = objc_allocWithZone(MEMORY[0x24BDD3EE0]);
    aBlock[4] = sub_232003CA8;
    aBlock[5] = v23;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_232003CB8;
    aBlock[3] = &unk_2500FE858;
    v26 = _Block_copy(aBlock);
    v27 = v32;
    swift_retain();
    swift_retain();
    v28 = a1;
    v29 = objc_msgSend(v25, sel_initWithSampleType_predicate_resultsHandler_, v18, v22, v26);
    _Block_release(v26);
    swift_release();
    objc_msgSend(*(id *)(v15 + 16), sel_executeQuery_, v29);

    (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v34);
  }
  else
  {
    sub_232003BC0(0);
    sub_232003C24();
    v30 = (void *)swift_allocError();
    *v31 = 0;
    v35(v30, 1);

  }
}

void sub_2320032EC(uint64_t a1, uint64_t a2, void *a3, void *a4, void (*a5)(id, uint64_t), uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  _QWORD v35[3];
  void (*v36)(id, uint64_t);

  v35[1] = a7;
  v35[2] = a6;
  v36 = a5;
  sub_2320002B4(0, (unint64_t *)&qword_2541B2A70, (void (*)(uint64_t))MEMORY[0x24BE4ADA0]);
  MEMORY[0x24BDAC7A8](v12);
  v35[0] = (char *)v35 - v13;
  sub_2320002B4(0, &qword_2541B28D0, (void (*)(uint64_t))MEMORY[0x24BE47E70]);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v35 - v18;
  v20 = sub_2321FDC6C();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 && (v24 = a4, v25 = sub_2320C5394(v24, a2), v24, v25))
  {
    v26 = a8;
    v27 = objc_msgSend(v25, sel_integerValue);
    v28 = objc_msgSend(v26, sel_endDate);
    sub_2321FDC30();

    v29 = sub_2320035C8((uint64_t)v27, (uint64_t)v23);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
    v36(v29, 0);

  }
  else if (a3)
  {
    v30 = a3;
    v36(a3, 1);

  }
  else
  {
    sub_2321FE6B0();
    v31 = sub_2321FE6D4();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v19, 0, 1, v31);
    sub_232003E9C(0, &qword_2541B0CD0);
    v32 = sub_2321FFD78();
    v33 = v35[0];
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v35[0], 1, 1, v32);
    sub_232003DFC((uint64_t)v19, (uint64_t)v17);
    v34 = sub_2320151CC(0, 0xF000000000000000, 0xBu, v33, (uint64_t)v17, 0, 0);
    sub_232003E50((uint64_t)v19);
    v36(v34, 0);

  }
}

id sub_2320035C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  id v23;
  id v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id result;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  void *v37[2];
  uint64_t v38;
  uint64_t v39;
  _OWORD v40[2];
  uint64_t v41;

  v38 = a2;
  sub_2320002B4(0, &qword_2541B28D0, (void (*)(uint64_t))MEMORY[0x24BE47E70]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v37 - v7;
  sub_2320002B4(0, (unint64_t *)&qword_2541B2A70, (void (*)(uint64_t))MEMORY[0x24BE4ADA0]);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v37 - v10;
  sub_2320002B4(0, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v37 - v13;
  v39 = sub_2321FFD78();
  v15 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v17 = (char *)v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_2321FDC6C();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 < 1)
  {
    sub_2321FE6B0();
    v36 = sub_2321FE6D4();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v8, 0, 1, v36);
    sub_232003E9C(0, &qword_2541B0CD0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v11, 1, 1, v39);
    sub_232003DFC((uint64_t)v8, (uint64_t)v6);
    v35 = sub_2320151CC(0, 0xF000000000000000, 0xBu, (uint64_t)v11, (uint64_t)v6, 0, 0);
    sub_232003E50((uint64_t)v8);
    return v35;
  }
  v22 = objc_msgSend((id)objc_opt_self(), sel_countUnit);
  v23 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v22, (double)a1);

  sub_232003E9C(0, &qword_2541B56B0);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v38, v18);
  v37[0] = v23;
  v24 = HKCodableSummaryQuantityValue.init(quantity:date:)(v37[0], (uint64_t)v21);
  v25 = (char *)v37[1] + qword_255FA9CB0;
  v26 = sub_232200084();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v17, v25, v26);
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x24BE4AD30], v39);
  sub_232003E9C(0, &qword_2541B56C8);
  sub_2321FD840();
  v27 = sub_2321FD8B8();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v14, 0, 1, v27);
  v28 = HKCodableSummarySupplementaryValue.init(dateInterval:dataCount:)((uint64_t)v14, a1, 0);
  result = objc_msgSend(v24, sel_data);
  if (result)
  {
    v30 = result;
    sub_232003E9C(0, &qword_2541B0CD0);
    v31 = sub_2321FDAD4();
    v33 = v32;

    v34 = v39;
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v11, v17, v39);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v34);
    v41 = 0;
    memset(v40, 0, sizeof(v40));
    v35 = sub_232015828(v31, v33, 14, (uint64_t)v11, (uint64_t)v28, 0, (uint64_t)v40);

    sub_232003ED4(v31, v33);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v34);

    return v35;
  }
  __break(1u);
  return result;
}

uint64_t sub_232003A4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + qword_255FA9CB0;
  v2 = sub_232200084();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t sub_232003A88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_232003F18(v0 + qword_2541BF5D0);
  v1 = v0 + qword_2541BF5C8;
  v2 = sub_232200180();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + qword_255FA9CB0;
  v4 = sub_232200084();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SampleCountMostRecentSampleCurrentValueSharableModelStep()
{
  uint64_t result;

  result = qword_255F9BE80;
  if (!qword_255F9BE80)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_232003B54()
{
  uint64_t result;
  unint64_t v1;

  result = sub_232200084();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_232003BC0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_255F9BF68)
  {
    v2 = sub_232003E9C(255, &qword_2541B0D68);
    v5 = type metadata accessor for MostRecentSampleCurrentValueSharableModelStep.SampleProcessingError(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_255F9BF68);
  }
}

unint64_t sub_232003C24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F9BF70;
  if (!qword_255F9BF70)
  {
    sub_232003BC0(255);
    result = MEMORY[0x2348FF39C](&unk_232217A40, v1);
    atomic_store(result, (unint64_t *)&qword_255F9BF70);
  }
  return result;
}

uint64_t sub_232003C6C()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_232003CA8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;

  sub_2320032EC(a1, a2, a3, *(void **)(v3 + 16), *(void (**)(id, uint64_t))(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(void **)(v3 + 48));
}

uint64_t sub_232003CB8(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  void (*v7)(id, uint64_t, void *);
  id v8;
  id v9;

  v5 = a3;
  v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_232003E9C(0, (unint64_t *)&qword_2541B7EA8);
    sub_232003E9C(0, (unint64_t *)&qword_2541B0D78);
    sub_232003DA4();
    v5 = sub_232200DD4();
  }
  swift_retain();
  v8 = a2;
  v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_232003D8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_232003D9C()
{
  return swift_release();
}

unint64_t sub_232003DA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B7EB0;
  if (!qword_2541B7EB0)
  {
    v1 = sub_232003E9C(255, (unint64_t *)&qword_2541B7EA8);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_2541B7EB0);
  }
  return result;
}

uint64_t sub_232003DFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2320002B4(0, &qword_2541B28D0, (void (*)(uint64_t))MEMORY[0x24BE47E70]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_232003E50(uint64_t a1)
{
  uint64_t v2;

  sub_2320002B4(0, &qword_2541B28D0, (void (*)(uint64_t))MEMORY[0x24BE47E70]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_232003E9C(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_232003ED4(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_232003F18(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_232003F54()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_232003F60(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_232003FDC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_232003FE8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for TimePeriodSnidgetFeedItemModelProvider()
{
  uint64_t result;

  result = qword_2541B25C0;
  if (!qword_2541B25C0)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_23200409C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B2990;
  if (!qword_2541B2990)
  {
    sub_231FFFDE4(255, &qword_2541B2998, MEMORY[0x24BE43750]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BE43760], v1);
    atomic_store(result, (unint64_t *)&qword_2541B2990);
  }
  return result;
}

uint64_t sub_2320040F4(uint64_t a1)
{
  uint64_t result;

  result = sub_232000590(qword_255F9BFD8, (uint64_t (*)(uint64_t))type metadata accessor for TimePeriodSnidgetFeedItemModelProvider, (uint64_t)&unk_2322106E4);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_232004130()
{
  return sub_232004198(&qword_2541B7458, &qword_2541B7460, (uint64_t (*)(uint64_t, _QWORD *))type metadata accessor for SnidgetHarnessPluginView.ActionHandler, (uint64_t)&unk_2322120D8);
}

uint64_t sub_232004164()
{
  return sub_232004198(&qword_2541B36C8, &qword_2541B36D0, (uint64_t (*)(uint64_t, _QWORD *))type metadata accessor for SnidgetHarnessPluginView, (uint64_t)&unk_232212090);
}

uint64_t sub_232004198(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_2320041D8(255, a2, a3);
    result = MEMORY[0x2348FF39C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_2320041D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[8];

  if (!*a2)
  {
    sub_231FFFDE4(255, &qword_2541B2998, MEMORY[0x24BE43750]);
    v16 = v6;
    v7 = sub_2321FF004();
    v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BE432B8];
    v9 = sub_23200409C();
    v10 = sub_232000590(&qword_2541B2938, v8, MEMORY[0x24BE432B0]);
    v11 = sub_231FFFE84(&qword_2541B2970, MEMORY[0x24BE43748]);
    v12 = sub_231FFFE84((unint64_t *)&unk_2541B2960, MEMORY[0x24BE43740]);
    v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BE43C88];
    v17[0] = v16;
    v17[1] = v7;
    v17[2] = v9;
    v17[3] = v10;
    v17[4] = v11;
    v17[5] = v12;
    v17[6] = sub_232000590(&qword_2541B7628, (uint64_t (*)(uint64_t))MEMORY[0x24BE43C88], MEMORY[0x24BE43CA0]);
    v17[7] = sub_232000590(&qword_2541B29C0, v13, MEMORY[0x24BE43C98]);
    v14 = a3(a1, v17);
    if (!v15)
      atomic_store(v14, a2);
  }
}

void sub_23200431C(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  id v49;
  void *v50;
  id v51;
  void *v52;
  uint64_t v53;
  void *v54;
  char *v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  id v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  void *v69;
  _QWORD *inited;
  void *v71;
  id v72;
  NSObject *v73;
  id v74;
  id v75;
  double v76;
  void *v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _BYTE *v85;
  uint64_t v86;
  void *v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  _BYTE *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  uint64_t v98;
  id v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void (**v104)(_QWORD, _QWORD);
  uint64_t v105;
  char *v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v115;
  id v116;
  uint64_t v117;
  id v118;
  char *v119;
  char *v120;
  uint64_t v121;
  id v122;
  uint64_t v123;
  uint64_t v124;
  id v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void (*v131)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v132;
  id v133;
  id v134;
  id v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  void *v139;
  id v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t *v146;
  uint64_t v147;
  _BYTE *v148;
  uint64_t v149;
  _QWORD v150[2];
  char *v151;
  char *v152;
  char *v153;
  char *v154;
  char *v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  char *v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  _BYTE *v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  void (**v180)(_QWORD, _QWORD);
  id v181;
  id v182;
  uint64_t v183;
  uint64_t v184[2];
  uint64_t v185;

  v175 = a3;
  v165 = a2;
  v182 = a1;
  v176 = a4;
  v5 = type metadata accessor for TimePeriodSnidgetFeedItemModelProvider();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v179 = (char *)v150 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (_QWORD *)((char *)v150 - v8);
  v10 = (_QWORD *)sub_23220039C();
  v180 = (void (**)(_QWORD, _QWORD))*(v10 - 1);
  v181 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v150 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x24BDAC7A8](v13);
  v171 = (char *)v150 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, qword_2541B78E0, (void (*)(uint64_t))MEMORY[0x24BE47DF8]);
  MEMORY[0x24BDAC7A8](v15);
  v174 = (char *)v150 - v16;
  sub_2320002B4(0, &qword_2541B2368, (void (*)(uint64_t))MEMORY[0x24BE445A8]);
  MEMORY[0x24BDAC7A8](v17);
  v155 = (char *)v150 - v18;
  sub_2320002B4(0, &qword_2541B2930, (void (*)(uint64_t))MEMORY[0x24BE42FE0]);
  MEMORY[0x24BDAC7A8](v19);
  v173 = (char *)v150 - v20;
  v177 = sub_2321FD8B8();
  v172 = *(_QWORD *)(v177 - 8);
  MEMORY[0x24BDAC7A8](v177);
  v151 = (char *)v150 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, &qword_2541B7F60, v22);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v178 = (uint64_t)v150 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v156 = (uint64_t)v150 - v26;
  v159 = sub_2321FDDD4();
  v158 = *(_QWORD *)(v159 - 8);
  MEMORY[0x24BDAC7A8](v159);
  v164 = (char *)v150 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, (unint64_t *)&unk_2541B29B0, (void (*)(uint64_t))MEMORY[0x24BE43C58]);
  MEMORY[0x24BDAC7A8](v28);
  v162 = (char *)v150 - v29;
  sub_2320002B4(0, (unint64_t *)&qword_2541B2868, (void (*)(uint64_t))sub_23200021C);
  MEMORY[0x24BDAC7A8](v30);
  v161 = (char *)v150 - v31;
  v163 = sub_2321FDC6C();
  v167 = *(_QWORD *)(v163 - 8);
  v32 = MEMORY[0x24BDAC7A8](v163);
  v150[1] = (char *)v150 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x24BDAC7A8](v32);
  v157 = (char *)v150 - v35;
  MEMORY[0x24BDAC7A8](v34);
  v160 = (char *)v150 - v36;
  sub_2320002B4(0, (unint64_t *)&qword_2541B2838, (void (*)(uint64_t))MEMORY[0x24BDCC5A8]);
  v38 = MEMORY[0x24BDAC7A8](v37);
  v154 = (char *)v150 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = MEMORY[0x24BDAC7A8](v38);
  v153 = (char *)v150 - v41;
  MEMORY[0x24BDAC7A8](v40);
  v43 = (char *)v150 - v42;
  v169 = sub_2321FD9F0();
  v170 = *(_QWORD *)(v169 - 8);
  v44 = MEMORY[0x24BDAC7A8](v169);
  v152 = (char *)v150 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v44);
  v168 = (char *)v150 - v46;
  v47 = (void *)objc_opt_self();
  v48 = (void *)*v4;
  v49 = objc_msgSend(v47, sel_sharedInstanceForHealthStore_, *v4);
  if (!v49)
  {
    __break(1u);
    return;
  }
  v50 = v49;
  v166 = (uint64_t)v4 + *(int *)(v5 + 24);
  v51 = objc_msgSend(v49, sel_displayTypeForObjectType_, *(_QWORD *)(v166 + 16));

  if (!v51)
  {
    sub_232200318();
    sub_23200054C((uint64_t)v4, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for TimePeriodSnidgetFeedItemModelProvider);
    v55 = v179;
    sub_23200054C((uint64_t)v4, (uint64_t)v179, (uint64_t (*)(_QWORD))type metadata accessor for TimePeriodSnidgetFeedItemModelProvider);
    v56 = sub_232200390();
    v57 = sub_2322012E4();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = swift_slowAlloc();
      v183 = swift_slowAlloc();
      v184[0] = v183;
      *(_DWORD *)v58 = 136315394;
      v59 = sub_232085214(*v9, *((unsigned __int8 *)v9 + *(int *)(v5 + 24) + 8));
      v182 = v12;
      v60 = (uint64_t)v55;
      v185 = sub_232013174(v59, v61, v184);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for TimePeriodSnidgetFeedItemModelProvider);
      *(_WORD *)(v58 + 12) = 2080;
      v62 = objc_msgSend(*(id *)&v55[*(int *)(v5 + 24) + 16], sel_sensitiveLoggingIdentifier);
      v63 = sub_232200EC4();
      v65 = v64;

      v185 = sub_232013174(v63, v65, v184);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v60, (uint64_t (*)(_QWORD))type metadata accessor for TimePeriodSnidgetFeedItemModelProvider);
      _os_log_impl(&dword_231FFB000, v56, v57, "[%s]: unable to find display type: %s", (uint8_t *)v58, 0x16u);
      v66 = v183;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v66, -1, -1);
      MEMORY[0x2348FF468](v58, -1, -1);

      ((void (**)(id, id))v180)[1](v182, v181);
    }
    else
    {
      sub_232002CEC((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for TimePeriodSnidgetFeedItemModelProvider);
      sub_232002CEC((uint64_t)v55, (uint64_t (*)(_QWORD))type metadata accessor for TimePeriodSnidgetFeedItemModelProvider);

      ((void (**)(char *, id))v180)[1](v12, v181);
    }
    sub_232005578();
    swift_allocError();
    *v92 = 0;
    swift_willThrow();
    return;
  }
  v52 = v51;
  v53 = v183;
  sub_232084584(v182);
  if (v53)
  {

    return;
  }
  v67 = v54;
  v68 = v178;
  if (!v54)
  {
LABEL_15:
    v93 = sub_2321FE65C();
    v94 = (uint64_t)v174;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v174, 1, 1, v93);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v172 + 56))(v68, 1, 1, v177);
    v95 = v175;
    swift_bridgeObjectRetain();
    v85 = v171;
    sub_2320D71E8(0, v94, v95, v68, v171);
    sub_2321FF208();
    v96 = sub_2321FEF5C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 56))(v173, 1, 1, v96);
    v97 = v52;
    v89 = sub_2321FF1FC();
    sub_232000344(0);
    v91 = v176;
    sub_23200054C((uint64_t)v85, (uint64_t)v176 + *(int *)(v98 + 52), type metadata accessor for SnidgetFeedItemMetadata);

    goto LABEL_16;
  }
  if (!objc_msgSend(v54, sel_hasTimeInterval) || !objc_msgSend(v67, sel_hasDateData))
  {

    goto LABEL_15;
  }
  v69 = (void *)v4[1];
  type metadata accessor for SnidgetStringBuilder();
  inited = (_QWORD *)swift_initStackObject();
  inited[2] = v48;
  v71 = (void *)objc_opt_self();
  v72 = v48;
  v73 = v69;
  v182 = v72;
  v74 = objc_msgSend(v71, sel_sharedInstanceForHealthStore_, v72);
  inited[3] = v73;
  inited[4] = v74;
  v75 = objc_msgSend((id)objc_opt_self(), sel_secondUnit);
  objc_msgSend(v67, sel_timeInterval);
  v77 = v67;
  v78 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v75, v76);

  v181 = v52;
  v183 = (uint64_t)inited;
  SnidgetStringBuilder.makeQuantityPrimaryAttributedString(displayType:quantity:)(v52, v78, v43);

  v79 = v170;
  v80 = v169;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v170 + 48))(v43, 1, v169) == 1)
  {
    sub_23200040C((uint64_t)v43, (unint64_t *)&qword_2541B2838, (void (*)(uint64_t))MEMORY[0x24BDCC5A8]);
    v81 = sub_2321FE65C();
    v82 = (uint64_t)v174;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v174, 1, 1, v81);
    v83 = v178;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v172 + 56))(v178, 1, 1, v177);
    v84 = v175;
    swift_bridgeObjectRetain();
    v85 = v171;
    sub_2320D71E8(0, v82, v84, v83, v171);
    sub_2321FF208();
    v86 = sub_2321FEF5C();
    v87 = v77;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56))(v173, 1, 1, v86);
    v88 = v181;
    v89 = sub_2321FF1FC();
    sub_232000344(0);
    v91 = v176;
    sub_23200054C((uint64_t)v85, (uint64_t)v176 + *(int *)(v90 + 52), type metadata accessor for SnidgetFeedItemMetadata);

    swift_release();
LABEL_16:
    v91[1] = 0;
    v91[2] = 0;
    *v91 = v89;
    sub_232002CEC((uint64_t)v85, type metadata accessor for SnidgetFeedItemMetadata);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v168, v43, v80);
  objc_msgSend(v77, sel_dateData);
  v99 = (id)HKDecodeDateForValue();
  v100 = v160;
  sub_2321FDC30();

  sub_23200021C();
  v102 = v101;
  v103 = *(int *)(v101 + 48);
  v104 = (void (**)(_QWORD, _QWORD))v77;
  v105 = (uint64_t)v161;
  v106 = &v161[v103];
  v180 = v104;
  objc_msgSend(v104, sel_dateData);
  v107 = (id)HKDecodeDateForValue();
  sub_2321FDC30();

  v108 = v163;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v167 + 56))(v105, 0, 1, v163);
  *(_QWORD *)v106 = 0;
  v106[8] = 1;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 56))(v105, 0, 1, v102);
  v109 = sub_2321FF298();
  v110 = (uint64_t)v162;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 56))(v162, 1, 1, v109);
  v111 = v164;
  sub_2321FDDA4();
  v182 = sub_2321234DC(v182, v73, v166, v165, v100, v105, v110, 0);
  v112 = v178;
  (*(void (**)(char *, uint64_t))(v158 + 8))(v111, v159);
  sub_23200040C(v110, (unint64_t *)&unk_2541B29B0, (void (*)(uint64_t))MEMORY[0x24BE43C58]);
  sub_23200040C(v105, (unint64_t *)&qword_2541B2868, (void (*)(uint64_t))sub_23200021C);
  (*(void (**)(void *, uint64_t))(v167 + 8))(v100, v108);
  v113 = v172;
  v114 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v172 + 56);
  v115 = v156;
  v114(v156, 1, 1, v177);
  v116 = v180;
  if (v182)
  {
    swift_retain();
    v117 = v112;
    v118 = v116;
    v119 = v151;
    v181 = v114;
    sub_2321FF280();
    sub_2321FD894();
    v120 = v119;
    v116 = v118;
    v121 = v177;
    (*(void (**)(char *, uint64_t))(v113 + 8))(v120, v177);
    objc_msgSend(v116, sel_dateData);
    v122 = (id)HKDecodeDateForValue();
    sub_2321FDC30();

    sub_2321FD87C();
    swift_release();
    sub_23200040C(v115, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v181)(v117, 0, 1, v121);
    sub_2320004F8(v117, v115);
  }
  sub_2321FF208();
  sub_232000448();
  v124 = *(int *)(v123 + 48);
  v179 = v52;
  objc_msgSend(v116, sel_dateData);
  v125 = (id)HKDecodeDateForValue();
  v126 = v173;
  sub_2321FDC30();

  v126[v124] = 0;
  v127 = *MEMORY[0x24BE42FD8];
  v128 = sub_2321FEF5C();
  v129 = *(_QWORD *)(v128 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v129 + 104))(v126, v127, v128);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v129 + 56))(v126, 0, 1, v128);
  v181 = (id)sub_2321FF1FC();
  v130 = v170;
  v131 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v170 + 56);
  v132 = v169;
  v131(v153, 1, 1, v169);
  (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v152, v168, v132);
  v131(v154, 1, 1, v132);
  v184[0] = 0x5F74656764696E53;
  v184[1] = 0xE800000000000000;
  v133 = *(id *)(v166 + 16);
  v134 = objc_msgSend(v133, sel_description);
  sub_232200EC4();

  sub_232200F48();
  swift_bridgeObjectRelease();
  v135 = v180;
  objc_msgSend(v180, sel_timeInterval);
  v136 = v155;
  sub_2321FF598();
  swift_bridgeObjectRelease();
  v137 = sub_2321FF5A4();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v137 - 8) + 56))(v136, 0, 1, v137);
  sub_2321FF6C4();
  swift_allocObject();
  v177 = sub_2321FF6B8();
  v138 = (uint64_t)v182;
  swift_retain();
  v139 = v135;
  objc_msgSend(v135, sel_dateData);
  v140 = (id)HKDecodeDateForValue();
  sub_2321FDC30();

  v141 = (uint64_t)v174;
  sub_2321FE62C();
  v142 = sub_2321FE65C();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v142 - 8) + 56))(v141, 0, 1, v142);
  v143 = v156;
  v144 = v178;
  sub_2320055BC(v156, v178);
  sub_232000344(0);
  v147 = v175;
  v146 = v176;
  v148 = (char *)v176 + *(int *)(v145 + 52);
  swift_bridgeObjectRetain();
  sub_2320D71E8(1, v141, v147, v144, v148);
  swift_release();

  swift_release();
  v149 = v177;
  *v146 = (uint64_t)v181;
  v146[1] = v149;
  v146[2] = v138;
  sub_23200040C(v143, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  (*(void (**)(char *, uint64_t))(v170 + 8))(v168, v132);
}

void sub_232005504(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_23200431C(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), a2);
}

void sub_232005524()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B5570)
  {
    v0 = sub_2322016F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B5570);
  }
}

unint64_t sub_232005578()
{
  unint64_t result;

  result = qword_255F9C058;
  if (!qword_255F9C058)
  {
    result = MEMORY[0x2348FF39C](&unk_2322148D8, &type metadata for SnidgetFeedItemGeneratorFailure);
    atomic_store(result, (unint64_t *)&qword_255F9C058);
  }
  return result;
}

uint64_t sub_2320055BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2320002B4(0, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id static HKCodableSummaryCurrentValue.noData()()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v15;

  v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, (unint64_t *)&qword_2541B2A70, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v15 - v2;
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70];
  sub_2320057B8(0, &qword_2541B28D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], v0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v15 - v9;
  sub_2321FE6B0();
  v11 = sub_2321FE6D4();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 0, 1, v11);
  sub_232003E9C(0, &qword_2541B0CD0);
  v12 = sub_2321FFD78();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v3, 1, 1, v12);
  sub_232016080((uint64_t)v10, (uint64_t)v8, &qword_2541B28D0, v4);
  v13 = sub_2320151CC(0, 0xF000000000000000, 0xBu, (uint64_t)v3, (uint64_t)v8, 0, 0);
  sub_232016D88((uint64_t)v10, &qword_2541B28D0, v4);
  return v13;
}

void sub_2320057B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

id HKCodableSummaryQuantityValue.init(quantity:date:)(void *a1, uint64_t a2)
{
  id result;
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  double v10;
  uint64_t v11;

  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    v5 = result;
    sub_232003E9C(0, &qword_2541B7968);
    v6 = v5;
    v7 = a1;
    v8 = (void *)sub_23220147C();
    objc_msgSend(v6, sel_setValue_, v8);

    v9 = (void *)sub_2321FDBF4();
    v10 = MEMORY[0x2348FEDA8]();

    objc_msgSend(v6, sel_setDateData_, v10);
    v11 = sub_2321FDC6C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(a2, v11);
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKCodableSummarySupplementaryValue.init(dateInterval:dataCount:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id result;
  void *v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;

  sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - v7;
  v9 = sub_2321FD8B8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    v14 = result;
    sub_232016080(a1, (uint64_t)v8, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      v15 = v14;
      sub_232016D88((uint64_t)v8, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
      if ((a3 & 1) != 0)
      {
LABEL_4:
        sub_232016D88(a1, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);

        return v14;
      }
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
      sub_232003E9C(0, &qword_2541B0C78);
      v16 = v14;
      v17 = (void *)sub_23220150C();
      objc_msgSend(v16, sel_setDateInterval_, v17);

      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      if ((a3 & 1) != 0)
        goto LABEL_4;
    }
    objc_msgSend(v14, sel_setDataCount_, a2);

    sub_232016D88(a1, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
    return v14;
  }
  __break(1u);
  return result;
}

id HKCodableSummaryCurrentValue.init(quantityValue:queryConfiguration:supplementaryValue:metadata:)(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_232009710(a1, a2, a3, a4, 14);
}

void HKCodableSummaryTimePeriodValue.date.getter()
{
  sub_2320104FC((SEL *)&selRef_dateData);
}

void LevelView.DataConfiguration.init(codable:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint32_t *p_align;
  char *v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  double v26;
  double v27;
  id v28;
  void *v29;
  double v30;
  double v31;
  unint64_t v32;
  char *v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD v38[2];
  id v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  _BYTE v44[32];
  uint64_t v45;
  _OWORD v46[2];
  __int128 v47;
  uint64_t v48;
  unint64_t v49;

  v38[1] = a2;
  v3 = sub_2322002C4();
  v41 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v43 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v42 = (char *)v38 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v38[0] = (char *)v38 - v8;
  v9 = sub_2321FDA74();
  v40 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = a1;
  v12 = objc_msgSend(a1, sel_sortedNormalizedBuckets);
  if (!v12)
    v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEB8]), sel_init);
  v49 = MEMORY[0x24BEE4AF8];
  v13 = v12;
  sub_232201650();

  sub_232000590(&qword_2541AF150, (uint64_t (*)(uint64_t))MEMORY[0x24BDCD520], MEMORY[0x24BDCD530]);
  sub_232201704();
  while (v48)
  {
    sub_232015B58(&v47, v46);
    sub_232015B68((uint64_t)v46, (uint64_t)v44);
    sub_232003E9C(0, &qword_2541B0D38);
    if ((swift_dynamicCast() & 1) == 0)
      v45 = 0;
    v14 = sub_232016AFC((uint64_t)v46);
    if (v45)
    {
      MEMORY[0x2348FE190](v14);
      if (*(_QWORD *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23220105C();
      sub_232201074();
      sub_232201050();
    }
    sub_232201704();
  }
  (*(void (**)(char *, uint64_t))(v40 + 8))(v11, v9);
  v15 = v49;

  objc_msgSend(v39, sel_normalizedValue);
  if (v15 >> 62)
    goto LABEL_29;
  v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v16)
  {
    while (1)
    {
      *(_QWORD *)&v47 = MEMORY[0x24BEE4AF8];
      sub_232013830(0, v16 & ~(v16 >> 63), 0);
      if (v16 < 0)
        break;
      v17 = 0;
      v40 = v15 & 0xC000000000000001;
      v18 = v47;
      p_align = &stru_25010DFE8.align;
      v20 = (char *)v38[0];
      v21 = v41;
      while (v16 != v17)
      {
        if (v40)
          v22 = (id)MEMORY[0x2348FEA30](v17, v15);
        else
          v22 = *(id *)(v15 + 8 * v17 + 32);
        v23 = v22;
        v24 = objc_msgSend(v22, *((SEL *)p_align + 197));
        if (!v24)
          goto LABEL_33;
        v25 = v24;
        objc_msgSend(v24, sel_lowerBound);
        v27 = v26;

        v28 = objc_msgSend(v23, *((SEL *)p_align + 197));
        if (!v28)
          goto LABEL_32;
        v29 = v28;
        objc_msgSend(v28, sel_upperBound);
        v31 = v30;

        if (v27 > v31)
          goto LABEL_28;
        v32 = v15;
        objc_msgSend(v23, sel_highlighted);
        v33 = v43;
        sub_2322002A0();

        v34 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
        v35 = v42;
        v34(v42, v33, v3);
        v34(v20, v35, v3);
        *(_QWORD *)&v47 = v18;
        v37 = *(_QWORD *)(v18 + 16);
        v36 = *(_QWORD *)(v18 + 24);
        if (v37 >= v36 >> 1)
        {
          sub_232013830(v36 > 1, v37 + 1, 1);
          v18 = v47;
        }
        ++v17;
        *(_QWORD *)(v18 + 16) = v37 + 1;
        v34((char *)(v18+ ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ *(_QWORD *)(v21 + 72) * v37), v20, v3);
        v15 = v32;
        p_align = (_DWORD *)(&stru_25010DFE8 + 24);
        if (v16 == v17)
          goto LABEL_30;
      }
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      swift_bridgeObjectRetain();
      v16 = sub_232201998();
      swift_bridgeObjectRelease();
      if (!v16)
        goto LABEL_30;
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
  }
  else
  {
LABEL_30:
    swift_bridgeObjectRelease();
    sub_232200264();

  }
}

void LevelView.DataConfiguration.Bucket.init(codable:)(void *a1)
{
  id v1;
  void *v2;
  double v3;
  double v4;
  id v5;
  void *v6;
  double v7;
  double v8;

  v1 = objc_msgSend(a1, sel_range);
  if (!v1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v2 = v1;
  objc_msgSend(v1, sel_lowerBound);
  v4 = v3;

  v5 = objc_msgSend(a1, sel_range);
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, sel_upperBound);
    v8 = v7;

    if (v4 <= v8)
    {
      objc_msgSend(a1, sel_highlighted);
      sub_2322002A0();

      return;
    }
    __break(1u);
    goto LABEL_6;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_232006104(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = v3;
  v6 = *(_QWORD *)(a3 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v13 = MEMORY[0x24BEE4AF8];
    sub_2322018FC();
    v9 = *(_QWORD *)(sub_2321FDEC4() - 8);
    v10 = a3 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v11 = *(_QWORD *)(v9 + 72);
    while (1)
    {
      a1(&v12, v10);
      if (v4)
        break;
      v4 = 0;
      sub_2322018E4();
      sub_232201908();
      sub_232201914();
      sub_2322018F0();
      v10 += v11;
      if (!--v6)
        return v13;
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_23200620C(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = v3;
  v6 = *(_QWORD *)(a3 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v13 = MEMORY[0x24BEE4AF8];
    sub_2322018FC();
    v9 = *(_QWORD *)(sub_2321FFFDC() - 8);
    v10 = a3 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v11 = *(_QWORD *)(v9 + 72);
    while (1)
    {
      a1(&v12, v10);
      if (v4)
        break;
      v4 = 0;
      sub_2322018E4();
      sub_232201908();
      sub_232201914();
      sub_2322018F0();
      v10 += v11;
      if (!--v6)
        return v13;
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_232006314(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;

  v4 = v3;
  v18 = a1;
  v19 = a2;
  v17 = sub_2321FDFD8();
  v6 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = MEMORY[0x24BEE4AF8];
  if (v9)
  {
    v20 = MEMORY[0x24BEE4AF8];
    sub_232013978(0, v9, 0);
    v10 = v20;
    v11 = *(_QWORD *)(sub_2321FDEC4() - 8);
    v12 = a3 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v16 = *(_QWORD *)(v11 + 72);
    while (1)
    {
      v18(v12);
      if (v4)
        break;
      v4 = 0;
      v20 = v10;
      v14 = *(_QWORD *)(v10 + 16);
      v13 = *(_QWORD *)(v10 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_232013978(v13 > 1, v14 + 1, 1);
        v10 = v20;
      }
      *(_QWORD *)(v10 + 16) = v14 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v14, v8, v17);
      v12 += v16;
      if (!--v9)
        return v10;
    }
    swift_release();
  }
  return v10;
}

uint64_t sub_23200648C(void (*a1)(__int128 *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = MEMORY[0x24BEE4AF8];
  if (v5)
  {
    v22 = MEMORY[0x24BEE4AF8];
    sub_2320139C0(0, v5, 0);
    v6 = v22;
    v9 = (uint64_t *)(a3 + 32);
    while (1)
    {
      v10 = *v9++;
      v19 = v10;
      a1(&v20, &v19);
      if (v4)
        break;
      v4 = 0;
      v11 = v20;
      v12 = v21;
      v22 = v6;
      v14 = *(_QWORD *)(v6 + 16);
      v13 = *(_QWORD *)(v6 + 24);
      if (v14 >= v13 >> 1)
      {
        v17 = v21;
        v18 = v20;
        sub_2320139C0(v13 > 1, v14 + 1, 1);
        v12 = v17;
        v11 = v18;
        v6 = v22;
      }
      *(_QWORD *)(v6 + 16) = v14 + 1;
      v15 = v6 + 32 * v14;
      *(_OWORD *)(v15 + 32) = v11;
      *(_OWORD *)(v15 + 48) = v12;
      if (!--v5)
        return v6;
    }
    swift_release();
  }
  return v6;
}

uint64_t sub_23200659C(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  if (a3 >> 62)
    goto LABEL_16;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x24BEE4AF8];
    if (!v6)
      break;
    v13 = MEMORY[0x24BEE4AF8];
    result = sub_2322018FC();
    if (v6 < 0)
    {
      __break(1u);
      return result;
    }
    v8 = 0;
    while (v6 != v8)
    {
      if ((a3 & 0xC000000000000001) != 0)
        v9 = (id)MEMORY[0x2348FEA30](v8, a3);
      else
        v9 = *(id *)(a3 + 8 * v8 + 32);
      v10 = v9;
      v11 = v9;
      a1(&v12, &v11);

      if (v3)
        return swift_release();
      ++v8;
      sub_2322018E4();
      sub_232201908();
      sub_232201914();
      sub_2322018F0();
      if (v6 == v8)
        return v13;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    v6 = sub_232201998();
    swift_bridgeObjectRelease();
  }
  return result;
}

void sub_232006704(void (*a1)(_QWORD *__return_ptr, id *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  int64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  id v33;
  _QWORD v34[2];
  uint64_t v35;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    v6 = a3;
    v35 = MEMORY[0x24BEE4AF8];
    sub_2320138B4(0, v5, 0);
    v7 = v35;
    v9 = sub_232014EF0(v6);
    v10 = 0;
    v11 = v6 + 64;
    v26 = v6 + 80;
    v27 = v5;
    v29 = v6 + 64;
    v30 = v6;
    v28 = v8;
    while ((v9 & 0x8000000000000000) == 0 && v9 < 1 << *(_BYTE *)(v6 + 32))
    {
      v14 = (unint64_t)v9 >> 6;
      if ((*(_QWORD *)(v11 + 8 * ((unint64_t)v9 >> 6)) & (1 << v9)) == 0)
        goto LABEL_25;
      if (*(_DWORD *)(v6 + 36) != v8)
        goto LABEL_26;
      v32 = v10;
      v33 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v9);
      v15 = v33;
      a1(v34, &v33);
      if (v4)
      {
        swift_release();

        return;
      }

      v16 = v34[0];
      v17 = v34[1];
      v35 = v7;
      v18 = *(_QWORD *)(v7 + 16);
      v19 = *(_QWORD *)(v7 + 24);
      if (v18 >= v19 >> 1)
      {
        sub_2320138B4(v19 > 1, v18 + 1, 1);
        v7 = v35;
      }
      *(_QWORD *)(v7 + 16) = v18 + 1;
      v20 = v7 + 16 * v18;
      *(_QWORD *)(v20 + 32) = v16;
      *(_QWORD *)(v20 + 40) = v17;
      v6 = v30;
      v12 = 1 << *(_BYTE *)(v30 + 32);
      if (v9 >= v12)
        goto LABEL_27;
      v11 = v29;
      v21 = *(_QWORD *)(v29 + 8 * v14);
      if ((v21 & (1 << v9)) == 0)
        goto LABEL_28;
      v8 = v28;
      if (*(_DWORD *)(v30 + 36) != v28)
        goto LABEL_29;
      v22 = v21 & (-2 << (v9 & 0x3F));
      if (v22)
      {
        v12 = __clz(__rbit64(v22)) | v9 & 0xFFFFFFFFFFFFFFC0;
        v4 = 0;
        v13 = v27;
      }
      else
      {
        v23 = v14 + 1;
        v24 = (unint64_t)(v12 + 63) >> 6;
        v4 = 0;
        v13 = v27;
        if (v14 + 1 < v24)
        {
          v25 = *(_QWORD *)(v29 + 8 * v23);
          if (v25)
          {
LABEL_21:
            v12 = __clz(__rbit64(v25)) + (v23 << 6);
          }
          else
          {
            while (v24 - 2 != v14)
            {
              v25 = *(_QWORD *)(v26 + 8 * v14++);
              if (v25)
              {
                v23 = v14 + 1;
                goto LABEL_21;
              }
            }
          }
        }
      }
      v10 = v32 + 1;
      v9 = v12;
      if (v32 + 1 == v13)
        return;
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
  }
}

uint64_t sub_23200695C(void (*a1)(__int128 *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD v23[2];
  __int128 v24[2];
  uint64_t v25;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = MEMORY[0x24BEE4AF8];
  if (!v5)
    return v6;
  v7 = a3;
  v25 = MEMORY[0x24BEE4AF8];
  sub_232013A34(0, v5, 0);
  v6 = v25;
  result = sub_232014E50(v7);
  v9 = result;
  v11 = v10;
  v13 = v12 & 1;
  v21 = v7 + 56;
  while ((v9 & 0x8000000000000000) == 0 && v9 < 1 << *(_BYTE *)(v7 + 32))
  {
    if (((*(_QWORD *)(v21 + (((unint64_t)v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
      goto LABEL_15;
    if (*(_DWORD *)(v7 + 36) != (_DWORD)v11)
      goto LABEL_16;
    v14 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v9);
    v15 = v14[1];
    v23[0] = *v14;
    v23[1] = v15;
    swift_bridgeObjectRetain();
    a1(v24, v23);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return v6;
    }
    v16 = v7;
    swift_bridgeObjectRelease();
    v25 = v6;
    v18 = *(_QWORD *)(v6 + 16);
    v17 = *(_QWORD *)(v6 + 24);
    if (v18 >= v17 >> 1)
    {
      sub_232013A34(v17 > 1, v18 + 1, 1);
      v6 = v25;
    }
    *(_QWORD *)(v6 + 16) = v18 + 1;
    sub_2320167F8(v24, v6 + 40 * v18 + 32);
    v7 = v16;
    result = sub_232131A80(v9, v11, v13 & 1, v16);
    v9 = result;
    v11 = v19;
    v13 = v20 & 1;
    --v5;
    v4 = 0;
    if (!v5)
    {
      sub_2320167EC(result, v19, v20 & 1);
      return v6;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_232006B28(void (*a1)(__int128 *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  char *i;
  unint64_t v10;
  unint64_t v11;
  char v13;
  __int128 v14[2];
  uint64_t v15;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = MEMORY[0x24BEE4AF8];
  if (v5)
  {
    v15 = MEMORY[0x24BEE4AF8];
    sub_232013AC0(0, v5, 0);
    v6 = v15;
    for (i = (char *)(a3 + 32); ; ++i)
    {
      v13 = *i;
      a1(v14, &v13);
      if (v4)
        break;
      v4 = 0;
      v15 = v6;
      v11 = *(_QWORD *)(v6 + 16);
      v10 = *(_QWORD *)(v6 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_232013AC0(v10 > 1, v11 + 1, 1);
        v6 = v15;
      }
      *(_QWORD *)(v6 + 16) = v11 + 1;
      sub_2320167F8(v14, v6 + 40 * v11 + 32);
      if (!--v5)
        return v6;
    }
    swift_release();
  }
  return v6;
}

id sub_232006C3C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint32_t *p_align;
  id result;
  void *v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  void *v11;
  uint32_t *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  double v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  id v21;
  void *v22;
  id v23;
  _QWORD v24[2];
  void *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;

  v0 = sub_2322002C4();
  v27 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  p_align = &stru_25010DFE8.align;
  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A3C0]), sel_init);
  if (!result)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  v5 = result;
  sub_232200270();
  objc_msgSend(v5, sel_setNormalizedValue_);
  v6 = sub_232200288();
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v25 = v5;
    v30 = MEMORY[0x24BEE4AF8];
    sub_232013814(0, v7, 0);
    v8 = *(unsigned __int8 *)(v27 + 80);
    v24[1] = v6;
    v9 = v6 + ((v8 + 32) & ~v8);
    v26 = *(_QWORD *)(v27 + 72);
    v10 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
    while (1)
    {
      v10(v2, v9, v0);
      result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A3C8]), *((SEL *)p_align + 178));
      if (!result)
        break;
      v11 = result;
      v12 = p_align;
      v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A380]), *((SEL *)p_align + 178));
      v14 = v13;
      if (v13)
      {
        v15 = v13;
        sub_2322002AC();
        objc_msgSend(v15, sel_setLowerBound_);

        v16 = v15;
        sub_2322002AC();
        objc_msgSend(v16, sel_setUpperBound_, v17);

      }
      objc_msgSend(v11, sel_setRange_, v14);
      objc_msgSend(v11, sel_setHighlighted_, sub_232200294() & 1);

      v29 = sub_232003E9C(0, &qword_2541B0D38);
      *(_QWORD *)&v28 = v11;
      (*(void (**)(char *, uint64_t))(v27 + 8))(v2, v0);
      v18 = v30;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_232013814(0, *(_QWORD *)(v18 + 16) + 1, 1);
        v18 = v30;
      }
      v20 = *(_QWORD *)(v18 + 16);
      v19 = *(_QWORD *)(v18 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_232013814(v19 > 1, v20 + 1, 1);
        v18 = v30;
      }
      *(_QWORD *)(v18 + 16) = v20 + 1;
      sub_232015B58(&v28, (_OWORD *)(v18 + 32 * v20 + 32));
      v9 += v26;
      --v7;
      p_align = v12;
      if (!v7)
      {
        swift_bridgeObjectRelease();
        v5 = v25;
        goto LABEL_14;
      }
    }
    __break(1u);
    goto LABEL_16;
  }
  swift_bridgeObjectRelease();
LABEL_14:
  v21 = objc_allocWithZone(MEMORY[0x24BDBCEB8]);
  v22 = (void *)sub_232201020();
  swift_bridgeObjectRelease();
  v23 = objc_msgSend(v21, sel_initWithArray_, v22);

  objc_msgSend(v5, sel_setSortedNormalizedBuckets_, v23);
  return v5;
}

id sub_232006F58()
{
  void *v0;

  return objc_msgSend(v0, sel_hasLatestSupportedVersion);
}

id sub_232006F78(char a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setHasLatestSupportedVersion_, a1 & 1);
}

id (*sub_232006F8C(uint64_t a1))(uint64_t a1)
{
  void *v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = objc_msgSend(v1, sel_hasLatestSupportedVersion);
  return sub_232006FCC;
}

id sub_232006FCC(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setHasLatestSupportedVersion_, *(unsigned __int8 *)(a1 + 8));
}

id sub_232006FE4()
{
  void *v0;

  return objc_msgSend(v0, sel_latestSupportedVersion);
}

id sub_232006FF4(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setLatestSupportedVersion_, a1);
}

id (*sub_232007008(_QWORD *a1))(uint64_t a1)
{
  void *v1;

  a1[1] = v1;
  *a1 = objc_msgSend(v1, sel_latestSupportedVersion);
  return sub_232007048;
}

id sub_232007048(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 8), sel_setLatestSupportedVersion_, *(_QWORD *)a1);
}

id sub_23200705C()
{
  void *v0;

  return objc_msgSend(v0, sel_hasMinimumSupportedVersion);
}

id sub_23200707C(char a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setHasMinimumSupportedVersion_, a1 & 1);
}

id (*sub_232007090(uint64_t a1))(uint64_t a1)
{
  void *v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = objc_msgSend(v1, sel_hasMinimumSupportedVersion);
  return sub_2320070D0;
}

id sub_2320070D0(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setHasMinimumSupportedVersion_, *(unsigned __int8 *)(a1 + 8));
}

id sub_2320070E8()
{
  void *v0;

  return objc_msgSend(v0, sel_minimumSupportedVersion);
}

id sub_2320070F8(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setMinimumSupportedVersion_, a1);
}

id (*sub_23200710C(_QWORD *a1))(uint64_t a1)
{
  void *v1;

  a1[1] = v1;
  *a1 = objc_msgSend(v1, sel_minimumSupportedVersion);
  return sub_23200714C;
}

id sub_23200714C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 8), sel_setMinimumSupportedVersion_, *(_QWORD *)a1);
}

uint64_t static HKCodableSummaryData.currentCodeVersion.getter()
{
  return sub_2321FE6B0();
}

uint64_t HKCodableSummaryData.Kind.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2320071A8 + 4 * byte_232210710[a1]))(0x646F4D7472616863, 0xEA00000000006C65);
}

uint64_t sub_2320071A8()
{
  return 0x56746E6572727563;
}

uint64_t sub_2320071C8()
{
  return 0x616E41646E657274;
}

unint64_t sub_2320071EC()
{
  return 0xD000000000000017;
}

void sub_232007208()
{
  char *v0;

  sub_232007210(*v0);
}

void sub_232007210(char a1)
{
  sub_232201B78();
  __asm { BR              X10 }
}

uint64_t sub_232007264()
{
  sub_232200F3C();
  swift_bridgeObjectRelease();
  return sub_232201B9C();
}

void sub_2320072EC()
{
  __asm { BR              X10 }
}

uint64_t sub_23200732C()
{
  sub_232200F3C();
  return swift_bridgeObjectRelease();
}

void sub_2320073A0(uint64_t a1)
{
  char *v1;

  sub_2320073A8(a1, *v1);
}

void sub_2320073A8(uint64_t a1, char a2)
{
  sub_232201B78();
  __asm { BR              X10 }
}

uint64_t sub_2320073F8()
{
  sub_232200F3C();
  swift_bridgeObjectRelease();
  return sub_232201B9C();
}

uint64_t sub_232007480@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _sSo20HKCodableSummaryDataC9SummariesE4KindO8rawValueAESgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_2320074AC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_2320074E0 + 4 * byte_232210720[*v0]))();
}

void sub_2320074E0(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "currentValue");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_232007504(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "trendAnalysis");
  *(_WORD *)(a1 + 14) = -4864;
}

void sub_23200752C(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000017;
  a1[1] = 0x8000000232202620;
}

void sub_23200754C(char *a1)
{
  sub_2320EEEF0(*a1);
}

uint64_t HKCodableSummaryData.kind.getter()
{
  void *v0;
  id v1;
  void *v2;

  if (!objc_msgSend(v0, sel_hasKindRawValue))
    return 4;
  v1 = objc_msgSend(v0, sel_kindRawValue);
  if (!v1)
    return 4;
  v2 = v1;
  sub_232200EC4();

  return _sSo20HKCodableSummaryDataC9SummariesE4KindO8rawValueAESgSS_tcfC_0();
}

BOOL HKCodableSummaryData.audience.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;

  if (!objc_msgSend(v0, sel_hasAudienceRawValue))
    return 1;
  v1 = objc_msgSend(v0, sel_audienceRawValue);
  if (!v1)
    return 1;
  v2 = v1;
  sub_232200EC4();

  v3 = sub_2322019F8();
  swift_bridgeObjectRelease();
  return v3 != 0;
}

void HKCodableSummaryData.audience.setter()
{
  void *v0;
  id v1;

  v1 = (id)sub_232200E94();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setAudienceRawValue_, v1);

}

void (*HKCodableSummaryData.audience.modify(_QWORD *a1))(void **a1)
{
  void *v1;
  BOOL *v2;
  id v3;
  void *v4;
  uint64_t v5;
  BOOL v6;

  *a1 = v1;
  v2 = (BOOL *)(a1 + 1);
  if (objc_msgSend(v1, sel_hasAudienceRawValue)
    && (v3 = objc_msgSend(v1, sel_audienceRawValue)) != 0)
  {
    v4 = v3;
    sub_232200EC4();

    v5 = sub_2322019F8();
    swift_bridgeObjectRelease();
    v6 = v5 != 0;
  }
  else
  {
    v6 = 1;
  }
  *v2 = v6;
  return sub_232007784;
}

void sub_232007784(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  v2 = (id)sub_232200E94();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setAudienceRawValue_, v2);

}

id HKCodableSummaryData.queryAnchor.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;

  if (!objc_msgSend(v0, sel_hasDatabaseChangesQueryAnchor))
    return 0;
  v1 = objc_msgSend(v0, sel_databaseChangesQueryAnchor);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = HKCodableQueryAnchor.queryAnchor.getter();

  return v3;
}

id HKCodableQueryAnchor.queryAnchor.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  id result;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  swift_getObjectType();
  v1 = sub_23220039C();
  MEMORY[0x24BDAC7A8](v1);
  v2 = 0;
  if (!objc_msgSend(v0, sel_hasEncodedQueryAnchorData))
    return (id)v2;
  result = objc_msgSend(v0, sel_encodedQueryAnchorData);
  if (result)
  {
    v4 = result;
    sub_232003E9C(0, &qword_2541B0C38);
    sub_232003E9C(0, (unint64_t *)&qword_2541B0C10);
    v5 = sub_2321FDAD4();
    v7 = v6;

    v2 = sub_232201488();
    sub_232003ED4(v5, v7);
    return (id)v2;
  }
  __break(1u);
  return result;
}

uint64_t HKCodableSummaryData.init(contentData:kind:queryAnchor:audience:version:)(uint64_t a1, unint64_t a2, char a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;

  sub_232015CE4(a1, a2, a3, a4);
  v8 = v7;

  sub_23201602C(a1, a2);
  return v8;
}

id HKCodableQueryAnchor.init(queryAnchor:)(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37[2];

  v2 = v1;
  v37[1] = *MEMORY[0x24BDAC8D0];
  v4 = sub_23220039C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (!v8)
    __break(1u);
  v9 = v8;
  v10 = (void *)objc_opt_self();
  v36 = 0;
  v11 = v9;
  v12 = objc_msgSend(v10, sel_archivedDataWithRootObject_requiringSecureCoding_error_, a1, 1, &v36);
  v13 = v36;
  if (v12)
  {
    v14 = sub_2321FDAD4();
    v16 = v15;

    v17 = (void *)sub_2321FDAC8();
    sub_232003ED4(v14, v16);
    objc_msgSend(v11, sel_setEncodedQueryAnchorData_, v17);

  }
  else
  {
    v18 = v13;

    v19 = (void *)sub_2321FDA5C();
    swift_willThrow();
    sub_232200354();
    v20 = v19;
    v21 = v19;
    v22 = sub_232200390();
    v23 = sub_2322012E4();
    v24 = v23;
    if (os_log_type_enabled(v22, v23))
    {
      v25 = swift_slowAlloc();
      HIDWORD(v34) = v24;
      v26 = v25;
      v35 = swift_slowAlloc();
      v36 = v2;
      v37[0] = v35;
      *(_DWORD *)v26 = 136315394;
      swift_getMetatypeMetadata();
      v27 = sub_232200F00();
      v36 = (id)sub_232013174(v27, v28, v37);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2080;
      v36 = v19;
      v29 = v19;
      sub_232016A8C(0, (unint64_t *)&qword_2541B78D0);
      v30 = sub_232200F00();
      v36 = (id)sub_232013174(v30, v31, v37);
      sub_232201710();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_231FFB000, v22, BYTE4(v34), "[%s]: error encoding query anchor: %s", (uint8_t *)v26, 0x16u);
      v32 = v35;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v32, -1, -1);
      MEMORY[0x2348FF468](v26, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return v11;
}

uint64_t HKCodableSummaryData.init(currentValue:queryAnchor:audience:version:)(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v7 = sub_2321FE6D4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  if (a1)
  {
    v9 = a4;
    v10 = objc_msgSend(a1, sel_data);
    if (v10)
    {
      v11 = v10;
      v12 = sub_2321FDAD4();
      v14 = v13;

    }
    else
    {
      v12 = 0;
      v14 = 0xF000000000000000;
    }
    a4 = v9;
  }
  else
  {
    v12 = 0;
    v14 = 0xF000000000000000;
  }
  sub_2321FE6B0();
  sub_232015CE4(v12, v14, 1, a2);
  v16 = v15;

  sub_23201602C(v12, v14);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a4, v7);
  return v16;
}

uint64_t HKCodableSummaryData.init(trendAnalysis:queryAnchor:audience:version:)(void *a1, void *a2, int a3, uint64_t a4)
{
  return sub_232008094(a1, a2, a3, a4, 2);
}

uint64_t HKCodableSummaryData.init(correlatedTrendAnalysis:queryAnchor:audience:version:)(void *a1, void *a2, int a3, uint64_t a4)
{
  return sub_232008094(a1, a2, a3, a4, 3);
}

uint64_t HKCodableSummaryData.init(chartModel:queryAnchor:audience:version:)(void *a1, void *a2, int a3, uint64_t a4)
{
  return sub_232008094(a1, a2, a3, a4, 0);
}

uint64_t sub_232008094(void *a1, void *a2, int a3, uint64_t a4, int a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  _DWORD v24[4];
  void *v25;
  int v26;

  v24[3] = a3;
  v9 = sub_2321FE6D4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = a5;
  v25 = a2;
  v13 = a4;
  if (a1 && (v14 = objc_msgSend(a1, sel_data)) != 0)
  {
    v15 = v14;
    v16 = sub_2321FDAD4();
    v18 = v17;

  }
  else
  {
    v16 = 0;
    v18 = 0xF000000000000000;
  }
  v19 = v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  v20 = v25;
  sub_232015CE4(v16, v18, v26, v25);
  v22 = v21;

  sub_23201602C(v16, v18);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v19, v9);
  return v22;
}

uint64_t HKCodableSummaryData.isContentCompatibleWithCurrentVersion.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char *v20;
  _QWORD v22[8];

  sub_2320057B8(0, &qword_2541B28D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v22[5] = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v22[4] = (char *)v22 - v5;
  v6 = MEMORY[0x24BDAC7A8](v4);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v22 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v11 = sub_2321FE6D4();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v22[6] = (char *)v22 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v22[7] = (char *)v22 - v18;
  MEMORY[0x24BDAC7A8](v17);
  if (objc_msgSend(v0, sel_hasContentData) && objc_msgSend(v0, sel_hasKindRawValue))
  {
    v22[3] = v10;
    v19 = objc_msgSend(v0, sel_kindRawValue);
    if (v19)
    {
      v22[1] = v11;
      v22[2] = v12;
      sub_232200EC4();

      v20 = (char *)&loc_232008408
          + *((int *)qword_232008B50
            + _sSo20HKCodableSummaryDataC9SummariesE4KindO8rawValueAESgSS_tcfC_0());
      __asm { BR              X10 }
    }
  }
  else
  {
    LOBYTE(v19) = 0;
  }
  return v19 & 1;
}

uint64_t HKCodableSummaryCurrentValue.kind.getter()
{
  void *v0;
  id v1;
  void *v2;

  v1 = objc_msgSend(v0, sel_kindRawValue);
  if (!v1)
    return 22;
  v2 = v1;
  sub_232200EC4();

  return _sSo28HKCodableSummaryCurrentValueC9SummariesE4KindO03rawD0AESgSS_tcfC_0();
}

uint64_t static HKCodableSummaryCurrentValue.currentCodeVersion(for:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;

  if (a1 == 22)
  {
    v3 = sub_2321FE6D4();
    v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56);
    v5 = a2;
    v6 = 1;
  }
  else
  {
    sub_2321FE6B0();
    v3 = sub_2321FE6D4();
    v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56);
    v5 = a2;
    v6 = 0;
  }
  return v4(v5, v6, 1, v3);
}

id (*sub_232008C70(uint64_t a1))(uint64_t)
{
  void *v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = objc_msgSend(v1, sel_hasLatestSupportedVersion);
  return sub_232016E5C;
}

id (*sub_232008CB0(_QWORD *a1))(uint64_t)
{
  void *v1;

  a1[1] = v1;
  *a1 = objc_msgSend(v1, sel_latestSupportedVersion);
  return sub_232016E60;
}

id (*sub_232008CF0(uint64_t a1))(uint64_t)
{
  void *v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = objc_msgSend(v1, sel_hasMinimumSupportedVersion);
  return sub_232016E64;
}

id (*sub_232008D30(_QWORD *a1))(uint64_t)
{
  void *v1;

  a1[1] = v1;
  *a1 = objc_msgSend(v1, sel_minimumSupportedVersion);
  return sub_232016E68;
}

uint64_t HKCodableSummaryCurrentValue.Kind.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_232008DB4 + 4 * byte_232210724[a1]))(0x7974697669746361, 0xEF7972616D6D7553);
}

uint64_t sub_232008DB4()
{
  return 0x6472754262694661;
}

uint64_t sub_232008DD4()
{
  return 0x7078456F69647561;
}

uint64_t sub_232008DF8()
{
  return 0x6172676F69647561;
}

uint64_t sub_232008E14()
{
  return 0x4D65636E616C6162;
}

uint64_t sub_232008E38()
{
  return 0x657250646F6F6C62;
}

uint64_t sub_232008E60()
{
  return 0x79726F6765746163;
}

uint64_t sub_232008E78()
{
  return 0x69466F6964726163;
}

unint64_t sub_232008E9C()
{
  return 0xD000000000000011;
}

void sub_232008FC0()
{
  JUMPOUT(0x232008FD4);
}

uint64_t sub_232008FE0()
{
  return 0x7461777265646E75;
}

uint64_t sub_232009004(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = HKCodableSummaryCurrentValue.Kind.rawValue.getter(*a1);
  v5 = v4;
  if (v3 == HKCodableSummaryCurrentValue.Kind.rawValue.getter(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_232201ADC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_23200908C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_232201B78();
  HKCodableSummaryCurrentValue.Kind.rawValue.getter(v1);
  sub_232200F3C();
  swift_bridgeObjectRelease();
  return sub_232201B9C();
}

uint64_t sub_2320090EC()
{
  unsigned __int8 *v0;

  HKCodableSummaryCurrentValue.Kind.rawValue.getter(*v0);
  sub_232200F3C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23200912C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_232201B78();
  HKCodableSummaryCurrentValue.Kind.rawValue.getter(v1);
  sub_232200F3C();
  swift_bridgeObjectRelease();
  return sub_232201B9C();
}

uint64_t sub_232009188@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _sSo28HKCodableSummaryCurrentValueC9SummariesE4KindO03rawD0AESgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_2320091B4@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = HKCodableSummaryCurrentValue.Kind.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

id HKCodableSummaryCurrentValue.unwrappedValue()()
{
  void *v0;
  id v1;
  void *v2;
  char v3;

  v1 = objc_msgSend(v0, sel_kindRawValue);
  if (v1
    && (v2 = v1,
        sub_232200EC4(),
        v2,
        v3 = _sSo28HKCodableSummaryCurrentValueC9SummariesE4KindO03rawD0AESgSS_tcfC_0(),
        v3 != 22))
  {
    return sub_232009258(v3);
  }
  else
  {
    return 0;
  }
}

id sub_232009258(char a1)
{
  void *v1;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;

  if (!objc_msgSend(v1, sel_hasValueData))
    return 0;
  sub_232014FF0(a1);
  v4 = v3;
  if (v3)
  {
    v5 = objc_msgSend(v1, sel_valueData);
    if (v5)
    {
      v6 = sub_2321FDAD4();
      v8 = v7;

      v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      v5 = (id)sub_2321FDAC8();
      sub_232003ED4(v6, v8);
    }
    else
    {
      v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    }
    v4 = objc_msgSend(v9, sel_initWithData_, v5);

  }
  return v4;
}

uint64_t HKCodableSummaryCurrentValue.queryConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_getObjectType();
  v3 = sub_23220039C();
  MEMORY[0x24BDAC7A8](v3);
  if (objc_msgSend(v1, sel_hasQueryConfigurationData)
    && (v4 = objc_msgSend(v1, sel_queryConfigurationData)) != 0)
  {
    v5 = v4;
    v6 = sub_2321FDAD4();
    v8 = v7;

    sub_2321FD7F8();
    swift_allocObject();
    sub_2321FD7EC();
    v9 = sub_2321FFD78();
    sub_232000590(&qword_2541B2A68, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0], MEMORY[0x24BE4ADB8]);
    sub_2321FD7E0();
    sub_232003ED4(v6, v8);
    swift_release();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, 0, 1, v9);
  }
  else
  {
    v10 = sub_2321FFD78();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 1, 1, v10);
  }
}

uint64_t static HKCodableSummaryAudiogramValue.currentCodeVersion.getter()
{
  return sub_2321FE6B0();
}

id HKCodableSummaryCurrentValue.init(categoryValue:queryConfiguration:supplementaryValue:metadata:)(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_232009710(a1, a2, a3, a4, 6);
}

id sub_232009710(void *a1, uint64_t a2, void *a3, uint64_t a4, int a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id result;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  int v21;
  _OWORD v22[2];
  uint64_t v23;

  v21 = a5;
  sub_2320057B8(0, (unint64_t *)&qword_2541B2A70, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v20 - v10;
  result = objc_msgSend(a1, sel_data);
  if (result)
  {
    v13 = result;
    v14 = sub_2321FDAD4();
    v16 = v15;

    v17 = sub_2321FFD78();
    v18 = *(_QWORD *)(v17 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v11, a2, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v11, 0, 1, v17);
    v23 = 0;
    memset(v22, 0, sizeof(v22));
    v19 = sub_232015828(v14, v16, v21, (uint64_t)v11, (uint64_t)a3, a4, (uint64_t)v22);

    sub_232003ED4(v14, v16);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a2, v17);
    return v19;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKCodableSummaryCurrentValue.init(timePeriodValue:queryConfiguration:supplementaryValue:metadata:)(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id result;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t (*v16)(uint64_t);
  id v17;
  _OWORD v18[2];
  uint64_t v19;

  sub_2320057B8(0, (unint64_t *)&qword_2541B2A70, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v18 - v9;
  result = objc_msgSend(a1, sel_data);
  if (result)
  {
    v12 = result;
    v13 = sub_2321FDAD4();
    v15 = v14;

    v16 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0];
    sub_232016080(a2, (uint64_t)v10, (unint64_t *)&qword_2541B2A70, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0]);
    v19 = 0;
    memset(v18, 0, sizeof(v18));
    v17 = sub_232015828(v13, v15, 17, (uint64_t)v10, (uint64_t)a3, a4, (uint64_t)v18);

    sub_232003ED4(v13, v15);
    sub_232016D88(a2, (unint64_t *)&qword_2541B2A70, v16);
    return v17;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKCodableSummaryCurrentValue.init(cardioFitnessValue:queryConfiguration:supplementaryValue:)(void *a1, uint64_t a2, void *a3)
{
  return sub_232009C6C(a1, a2, a3, 7);
}

id HKCodableSummaryCurrentValue.init(sleepDurationValue:queryConfiguration:supplementaryValue:)(void *a1, uint64_t a2, void *a3)
{
  return sub_2320099D4(a1, a2, a3, 15);
}

id HKCodableSummaryCurrentValue.init(audioExposureValue:queryConfiguration:supplementaryValue:)(void *a1, uint64_t a2, void *a3)
{
  return sub_2320099D4(a1, a2, a3, 2);
}

id sub_2320099D4(void *a1, uint64_t a2, void *a3, int a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id result;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t (*v16)(uint64_t);
  id v17;
  _OWORD v18[2];
  uint64_t v19;

  sub_2320057B8(0, (unint64_t *)&qword_2541B2A70, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v18 - v9;
  result = objc_msgSend(a1, sel_data);
  if (result)
  {
    v12 = result;
    v13 = sub_2321FDAD4();
    v15 = v14;

    v16 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0];
    sub_232016080(a2, (uint64_t)v10, (unint64_t *)&qword_2541B2A70, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0]);
    v19 = 0;
    memset(v18, 0, sizeof(v18));
    v17 = sub_232015828(v13, v15, a4, (uint64_t)v10, (uint64_t)a3, 0, (uint64_t)v18);

    sub_232003ED4(v13, v15);
    sub_232016D88(a2, (unint64_t *)&qword_2541B2A70, v16);
    return v17;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKCodableSummaryCurrentValue.init(audiogramValue:queryConfiguration:supplementaryValue:)(void *a1, uint64_t a2, void *a3)
{
  return sub_2320099D4(a1, a2, a3, 3);
}

id HKCodableSummaryCurrentValue.init(activitySummaryValue:supplementaryValue:)(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id result;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  _QWORD v15[5];

  sub_2320057B8(0, (unint64_t *)&qword_2541B2A70, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v15[-1] - v5;
  result = objc_msgSend(a1, sel_data);
  if (result)
  {
    v8 = result;
    v9 = sub_2321FDAD4();
    v11 = v10;

    v12 = sub_2321FFD78();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 1, 1, v12);
    v15[3] = sub_232003E9C(0, &qword_2541AF0A8);
    v15[4] = &off_2500FEA98;
    v15[0] = a1;
    v13 = sub_232015828(v9, v11, 0, (uint64_t)v6, (uint64_t)a2, 0, (uint64_t)v15);

    sub_232003ED4(v9, v11);
    return v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKCodableSummaryCurrentValue.init(aFibBurdenValue:queryConfiguration:supplementaryValue:)(void *a1, uint64_t a2, void *a3)
{
  return sub_232009C6C(a1, a2, a3, 1);
}

id sub_232009C6C(void *a1, uint64_t a2, void *a3, int a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id result;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  _OWORD v19[2];
  uint64_t v20;

  sub_2320057B8(0, (unint64_t *)&qword_2541B2A70, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v19 - v9;
  result = objc_msgSend(a1, sel_data);
  if (result)
  {
    v12 = result;
    v13 = sub_2321FDAD4();
    v15 = v14;

    v16 = sub_2321FFD78();
    v17 = *(_QWORD *)(v16 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v10, a2, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v10, 0, 1, v16);
    v20 = 0;
    memset(v19, 0, sizeof(v19));
    v18 = sub_232015828(v13, v15, a4, (uint64_t)v10, (uint64_t)a3, 0, (uint64_t)v19);

    sub_232003ED4(v13, v15);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a2, v16);
    return v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKCodableSummaryCurrentValue.init(bloodPressureValue:queryConfiguration:supplementaryValue:)(void *a1, uint64_t a2, void *a3)
{
  return sub_2320099D4(a1, a2, a3, 5);
}

id HKCodableSummaryCurrentValue.init(electrocardiogramValue:queryConfiguration:supplementaryValue:)(void *a1, uint64_t a2, void *a3)
{
  return sub_2320099D4(a1, a2, a3, 8);
}

id HKCodableSummaryCurrentValue.init(ongoingFactorsValue:queryConfiguration:supplementaryValue:)(void *a1, uint64_t a2, void *a3)
{
  return sub_2320099D4(a1, a2, a3, 12);
}

id HKCodableSummaryCurrentValue.init(visionPrescriptionValue:queryConfiguration:supplementaryValue:)(void *a1, uint64_t a2, void *a3)
{
  return sub_2320099D4(a1, a2, a3, 18);
}

id HKCodableSummaryCurrentValue.init(walkingSteadinessValue:queryConfiguration:supplementaryValue:)(void *a1, uint64_t a2, void *a3)
{
  return sub_2320099D4(a1, a2, a3, 19);
}

id HKCodableSummaryCurrentValue.init(breathingDisturbancesValue:queryConfiguration:supplementaryValue:)(void *a1, uint64_t a2, void *a3)
{
  return sub_2320099D4(a1, a2, a3, 20);
}

id HKCodableSummaryCurrentValue.init(underwaterDepthValue:queryConfiguration:supplementaryValue:)(void *a1, uint64_t a2, void *a3)
{
  return sub_2320099D4(a1, a2, a3, 21);
}

id HKCodableSummaryCurrentValue.init(balanceMetricsValue:queryConfiguration:supplementaryValue:)(void *a1, uint64_t a2, void *a3)
{
  return sub_2320099D4(a1, a2, a3, 4);
}

id HKCodableSummaryCurrentValue.init(stateOfMindValue:queryConfiguration:supplementaryValue:)(void *a1, uint64_t a2, void *a3)
{
  return sub_2320099D4(a1, a2, a3, 16);
}

id HKCodableSummaryCurrentValue.init(gad7Value:queryConfiguration:supplementaryValue:)(void *a1, uint64_t a2, void *a3)
{
  return sub_2320099D4(a1, a2, a3, 9);
}

id HKCodableSummaryCurrentValue.init(phq9Value:queryConfiguration:supplementaryValue:)(void *a1, uint64_t a2, void *a3)
{
  return sub_2320099D4(a1, a2, a3, 13);
}

id HKCodableSummaryCurrentValue.init(mostRecentRangeValue:queryConfiguration:supplementaryValue:)(void *a1, uint64_t a2, void *a3)
{
  return sub_2320099D4(a1, a2, a3, 10);
}

void HKCodableSummaryQuantityValue.date.getter()
{
  sub_2320104FC((SEL *)&selRef_dateData);
}

id HKCodableSummaryCategoryValue.init(categoryValue:date:)(uint64_t a1, uint64_t a2)
{
  id result;
  id v5;
  void *v6;
  double v7;
  uint64_t v8;

  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    v5 = result;
    objc_msgSend(v5, sel_setCategoryValue_, a1);
    v6 = (void *)sub_2321FDBF4();
    v7 = MEMORY[0x2348FEDA8]();

    objc_msgSend(v5, sel_setDateData_, v7);
    v8 = sub_2321FDC6C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a2, v8);
    return v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void HKCodableSummaryCategoryValue.date.getter()
{
  sub_2320104FC((SEL *)&selRef_dateData);
}

id HKCodableSummaryCardioFitnessValue.init(quantity:date:cardioFitnessLevel:dataConfiguration:)(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id result;
  void *v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  double v14;
  uint64_t v15;

  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    v9 = result;
    sub_232003E9C(0, &qword_2541B7968);
    v10 = v9;
    v11 = a1;
    v12 = (void *)sub_23220147C();
    objc_msgSend(v10, sel_setValue_, v12);

    v13 = (void *)sub_2321FDBF4();
    v14 = MEMORY[0x2348FEDA8]();

    objc_msgSend(v10, sel_setDateData_, v14);
    objc_msgSend(v10, sel_setClassificationRawValue_, a3);
    objc_msgSend(v10, sel_setLevelViewDataConfiguration_, a4);

    v15 = sub_2321FDC6C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(a2, v15);
    return v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKCodableSummaryCardioFitnessValue.cardioFitnessLevel.getter()
{
  void *v0;

  if (objc_msgSend(v0, sel_hasClassificationRawValue))
    return objc_msgSend(v0, sel_classificationRawValue);
  else
    return 0;
}

void HKCodableSummaryCardioFitnessValue.date.getter()
{
  sub_2320104FC((SEL *)&selRef_dateData);
}

id HKCodableSummaryActivityRingsValue.init(activitySummary:date:hasEverHadAWatch:activityResumeDate:)(void *a1, char *a2, int a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id result;
  id v24;
  void *v25;
  double v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  void *v36;
  id v37;
  void *v38;
  id v39;
  void *v40;
  void (*v41)(char *, uint64_t);
  double v42;
  id v43;
  id v44;
  void *v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  void *v50;
  void (*v51)(char *, char *, uint64_t);
  void (*v52)(char *, uint64_t, uint64_t, uint64_t);
  int v53;
  char *v54;
  char *v55;
  void (*v56)(char *, uint64_t);
  char *v57;
  char *v58;
  void *v59;
  double v60;
  char *v61;
  id v62;
  uint64_t v63;
  void *v64;
  void (*v65)(void);
  uint64_t v66;
  char *v67;
  void *v68;
  double v69;
  uint64_t v70;
  uint64_t (*v71)(uint64_t);
  char *v72;
  void *v73;
  double v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  int v81;
  uint64_t v82;

  v82 = a4;
  v81 = a3;
  sub_2320057B8(0, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v80 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v79 = (char *)&v75 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v75 - v11;
  v13 = sub_2321FDC6C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v77 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v76 = (char *)&v75 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v75 = (char *)&v75 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v75 - v21;
  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (!result)
  {
    __break(1u);
    return result;
  }
  v24 = result;
  v78 = a2;
  v25 = (void *)sub_2321FDBF4();
  v26 = MEMORY[0x2348FEDA8]();

  objc_msgSend(v24, sel_setDateData_, v26);
  objc_msgSend(v24, sel_setActivityMoveMode_, objc_msgSend(a1, sel_activityMoveMode));
  sub_232003E9C(0, &qword_2541B7968);
  v27 = objc_msgSend(a1, sel_activeEnergyBurned);
  v28 = (void *)sub_23220147C();
  objc_msgSend(v24, sel_setActiveEnergyBurned_, v28);

  v29 = objc_msgSend(a1, sel_activeEnergyBurnedGoal);
  v30 = (void *)sub_23220147C();
  objc_msgSend(v24, sel_setActiveEnergyBurnedGoal_, v30);

  v31 = objc_msgSend(a1, sel_appleMoveTime);
  v32 = (void *)sub_23220147C();
  objc_msgSend(v24, sel_setAppleMoveTime_, v32);

  v33 = objc_msgSend(a1, sel_appleMoveTimeGoal);
  v34 = (void *)sub_23220147C();
  objc_msgSend(v24, sel_setAppleMoveTimeGoal_, v34);

  v35 = objc_msgSend(a1, sel_appleExerciseTime);
  v36 = (void *)sub_23220147C();
  objc_msgSend(v24, sel_setAppleExerciseTime_, v36);

  v37 = objc_msgSend(a1, sel_appleStandHours);
  v38 = (void *)sub_23220147C();
  objc_msgSend(v24, sel_setAppleStandHours_, v38);

  v39 = objc_msgSend(a1, sel__creationDate);
  sub_2321FDC30();

  v40 = (void *)sub_2321FDBF4();
  v41 = *(void (**)(char *, uint64_t))(v14 + 8);
  v41(v22, v13);
  v42 = MEMORY[0x2348FEDA8](v40);

  objc_msgSend(v24, sel_setCreationDate_, v42);
  v43 = objc_msgSend(a1, sel_exerciseTimeGoal);
  if (v43)
  {
    v44 = v43;
    v45 = (void *)sub_23220147C();
    objc_msgSend(v24, sel_setAppleExerciseTimeGoal_, v45);

  }
  v46 = objc_msgSend(a1, sel_standHoursGoal);
  if (v46)
  {
    v47 = v46;
    v48 = (void *)sub_23220147C();
    objc_msgSend(v24, sel_setAppleStandHoursGoal_, v48);

  }
  v49 = objc_msgSend(a1, sel__startDate);
  if (v49)
  {
    v50 = v49;
    sub_2321FDC30();

    v51 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v51(v12, v22, v13);
    v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    v52(v12, 0, 1, v13);
    v53 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
    v54 = v78;
    if (v53 != 1)
    {
      v55 = v12;
      v56 = v41;
      v57 = v78;
      v58 = v75;
      v51(v75, v55, v13);
      v59 = (void *)sub_2321FDBF4();
      v60 = MEMORY[0x2348FEDA8]();

      objc_msgSend(v24, sel_setStartDate_, v60);
      v61 = v58;
      v54 = v57;
      v41 = v56;
      v56(v61, v13);
      goto LABEL_11;
    }
  }
  else
  {
    v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    v52(v12, 1, 1, v13);
    v54 = v78;
  }
  sub_232016D88((uint64_t)v12, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
LABEL_11:
  v62 = objc_msgSend(a1, sel__endDate);
  v63 = v82;
  if (!v62)
  {
    v66 = (uint64_t)v79;
    v52(v79, 1, 1, v13);
    goto LABEL_15;
  }
  v64 = v62;
  sub_2321FDC30();

  v65 = *(void (**)(void))(v14 + 32);
  v66 = (uint64_t)v79;
  v65();
  v52((char *)v66, 0, 1, v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v66, 1, v13) == 1)
  {
LABEL_15:
    sub_232016D88(v66, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    goto LABEL_16;
  }
  v67 = v76;
  ((void (*)(char *, uint64_t, uint64_t))v65)(v76, v66, v13);
  v68 = (void *)sub_2321FDBF4();
  v69 = MEMORY[0x2348FEDA8]();

  objc_msgSend(v24, sel_setEndDate_, v69);
  v41(v67, v13);
LABEL_16:
  v70 = (uint64_t)v80;
  objc_msgSend(v24, sel_setHasEverHadAWatch_, v81 & 1);
  objc_msgSend(v24, sel_setPaused_, objc_msgSend(a1, sel_isPaused));
  sub_232016080(v63, v70, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v70, 1, v13) == 1)
  {

    v71 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
    sub_232016D88(v63, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    v41(v54, v13);
    sub_232016D88(v70, &qword_2541B7618, v71);
  }
  else
  {
    v72 = v77;
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v77, v70, v13);
    v73 = (void *)sub_2321FDBF4();
    v74 = MEMORY[0x2348FEDA8]();

    objc_msgSend(v24, sel_setActivityResumeDate_, v74);
    sub_232016D88(v63, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    v41(v54, v13);
    v41(v72, v13);
  }
  return v24;
}

void HKCodableSummaryActivityRingsValue.date.getter()
{
  sub_2320104FC((SEL *)&selRef_dateData);
}

id HKCodableSummaryActivityRingsValue.activitySummary.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  id result;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void (*v23)(char *, uint64_t);
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;

  v1 = v0;
  v2 = sub_2321FDC6C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = 0;
  if (!objc_msgSend(v0, sel_hasActivityMoveMode))
    return v6;
  if (!objc_msgSend(v0, sel_hasActiveEnergyBurned)
    || !objc_msgSend(v0, sel_hasActiveEnergyBurnedGoal)
    || !objc_msgSend(v0, sel_hasAppleMoveTime)
    || !objc_msgSend(v0, sel_hasAppleMoveTimeGoal)
    || !objc_msgSend(v0, sel_hasAppleExerciseTime)
    || !objc_msgSend(v0, sel_hasAppleStandHours)
    || !objc_msgSend(v0, sel_hasCreationDate))
  {
    return 0;
  }
  v7 = objc_msgSend(v0, sel_activityMoveMode);
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD38E8]), sel_init);
  objc_msgSend(v6, sel_setActivityMoveMode_, v7);
  result = objc_msgSend(v1, sel_activeEnergyBurned);
  if (!result)
  {
    __break(1u);
    goto LABEL_32;
  }
  v9 = result;
  v10 = (void *)sub_232201470();

  objc_msgSend(v6, sel_setActiveEnergyBurned_, v10);
  result = objc_msgSend(v1, sel_activeEnergyBurnedGoal);
  if (!result)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v11 = result;
  v12 = (void *)sub_232201470();

  objc_msgSend(v6, sel_setActiveEnergyBurnedGoal_, v12);
  result = objc_msgSend(v1, sel_appleMoveTime);
  if (!result)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v13 = result;
  v14 = (void *)sub_232201470();

  objc_msgSend(v6, sel_setAppleMoveTime_, v14);
  result = objc_msgSend(v1, sel_appleMoveTimeGoal);
  if (!result)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v15 = result;
  v16 = (void *)sub_232201470();

  objc_msgSend(v6, sel_setAppleMoveTimeGoal_, v16);
  result = objc_msgSend(v1, sel_appleExerciseTime);
  if (!result)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v17 = result;
  v18 = (void *)sub_232201470();

  objc_msgSend(v6, sel_setAppleExerciseTime_, v18);
  result = objc_msgSend(v1, sel_appleStandHours);
  if (!result)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v19 = result;
  v20 = (void *)sub_232201470();

  objc_msgSend(v6, sel_setAppleStandHours_, v20);
  objc_msgSend(v1, sel_creationDate);
  v21 = (id)HKDecodeDateForValue();
  sub_2321FDC30();

  v22 = (void *)sub_2321FDBF4();
  v23 = *(void (**)(char *, uint64_t))(v3 + 8);
  v23(v5, v2);
  objc_msgSend(v6, sel__setCreationDate_, v22);

  if (objc_msgSend(v1, sel_hasAppleExerciseTimeGoal))
  {
    result = objc_msgSend(v1, sel_appleExerciseTimeGoal);
    if (result)
    {
      v24 = result;
      v25 = (void *)sub_232201470();

      objc_msgSend(v6, sel_setExerciseTimeGoal_, v25);
      goto LABEL_18;
    }
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
LABEL_18:
  if (!objc_msgSend(v1, sel_hasAppleStandHoursGoal))
  {
LABEL_21:
    if (objc_msgSend(v1, sel_hasStartDate))
    {
      objc_msgSend(v1, sel_startDate);
      v28 = (id)HKDecodeDateForValue();
      sub_2321FDC30();

      v29 = (void *)sub_2321FDBF4();
      v23(v5, v2);
      objc_msgSend(v6, sel__setStartDate_, v29);

    }
    if (objc_msgSend(v1, sel_hasEndDate))
    {
      objc_msgSend(v1, sel_endDate);
      v30 = (id)HKDecodeDateForValue();
      sub_2321FDC30();

      v31 = (void *)sub_2321FDBF4();
      v23(v5, v2);
      objc_msgSend(v6, sel__setEndDate_, v31);

    }
    if (objc_msgSend(v1, sel_hasPaused))
      v32 = objc_msgSend(v1, sel_paused);
    else
      v32 = 0;
    objc_msgSend(v6, sel_setPaused_, v32);
    return v6;
  }
  result = objc_msgSend(v1, sel_appleStandHoursGoal);
  if (result)
  {
    v26 = result;
    v27 = (void *)sub_232201470();

    objc_msgSend(v6, sel_setStandHoursGoal_, v27);
    goto LABEL_21;
  }
LABEL_38:
  __break(1u);
  return result;
}

id HKCodableSummaryActivityRingsValue.standHoursGoal.getter()
{
  return sub_23200ADCC((SEL *)&selRef_hasAppleStandHoursGoal, (SEL *)&selRef_appleStandHoursGoal);
}

id HKCodableSummaryActivityRingsValue.exerciseTimeGoal.getter()
{
  return sub_23200ADCC((SEL *)&selRef_hasAppleExerciseTimeGoal, (SEL *)&selRef_appleExerciseTimeGoal);
}

id sub_23200ADCC(SEL *a1, SEL *a2)
{
  void *v2;
  id result;
  void *v5;
  uint64_t v6;

  if (!objc_msgSend(v2, *a1))
    return 0;
  result = objc_msgSend(v2, *a2);
  if (result)
  {
    v5 = result;
    v6 = sub_232201470();

    return (id)v6;
  }
  __break(1u);
  return result;
}

id HKCodableSummaryTimePeriodValue.init(timeInterval:date:)(uint64_t a1, double a2)
{
  id result;
  id v5;
  void *v6;
  double v7;
  uint64_t v8;

  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    v5 = result;
    objc_msgSend(v5, sel_setTimeInterval_, a2);
    v6 = (void *)sub_2321FDBF4();
    v7 = MEMORY[0x2348FEDA8]();

    objc_msgSend(v5, sel_setDateData_, v7);
    v8 = sub_2321FDC6C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a1, v8);
    return v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKCodableSummarySleepDurationValue.init(inBedDuration:asleepDuration:endOfSleepDate:)(uint64_t a1, char a2, uint64_t a3, double a4)
{
  id result;
  id v9;
  double v10;
  id v11;
  void *v12;
  double v13;
  uint64_t v14;

  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    v9 = result;
    objc_msgSend(v9, sel_setInBedDuration_, a4);
    if ((a2 & 1) == 0)
    {
      v10 = *(double *)&a1;
      v11 = v9;
      objc_msgSend(v11, sel_setAsleepDuration_, v10);

    }
    v12 = (void *)sub_2321FDBF4();
    v13 = MEMORY[0x2348FEDA8]();

    objc_msgSend(v9, sel_setEndOfSleepTimeIntervalSinceReferenceDate_, v13);
    v14 = sub_2321FDC6C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a3, v14);
    return v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKCodableSummarySleepDurationValue.hasEndOfSleepDate.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_hasEndOfSleepTimeIntervalSinceReferenceDate);
}

void HKCodableSummarySleepDurationValue.endOfSleepDate.getter()
{
  sub_2320104FC((SEL *)&selRef_endOfSleepTimeIntervalSinceReferenceDate);
}

uint64_t HKCodableSummarySleepDurationValue.endOfSleepDate.setter(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v4;
  double v5;
  uint64_t v6;

  v2 = v1;
  v4 = (void *)sub_2321FDBF4();
  v5 = MEMORY[0x2348FEDA8]();

  objc_msgSend(v2, sel_setEndOfSleepTimeIntervalSinceReferenceDate_, v5);
  v6 = sub_2321FDC6C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
}

void (*HKCodableSummarySleepDurationValue.endOfSleepDate.modify(_QWORD *a1))(void ***a1, char a2)
{
  void *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  id v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_2321FDC6C();
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  objc_msgSend(v1, sel_endOfSleepTimeIntervalSinceReferenceDate);
  v7 = (id)HKDecodeDateForValue();
  sub_2321FDC30();

  return sub_23200B10C;
}

void sub_23200B10C(void ***a1, char a2)
{
  void **v2;
  void *v3;
  void *v4;
  void *v5;
  void (**v6)(void *, void *, void *);
  void *v7;
  void *v8;
  double v9;
  void (*v10)(void *, void *, void *);
  void *v11;
  double v12;

  v2 = *a1;
  v3 = (*a1)[3];
  v4 = (*a1)[4];
  v5 = (*a1)[1];
  v6 = (void (**)(void *, void *, void *))(*a1)[2];
  v7 = **a1;
  if ((a2 & 1) != 0)
  {
    v6[2]((*a1)[3], v4, v5);
    v8 = (void *)sub_2321FDBF4();
    v9 = MEMORY[0x2348FEDA8]();

    objc_msgSend(v7, sel_setEndOfSleepTimeIntervalSinceReferenceDate_, v9);
    v10 = v6[1];
    ((void (*)(void *, void *))v10)(v3, v5);
  }
  else
  {
    v11 = (void *)sub_2321FDBF4();
    v12 = MEMORY[0x2348FEDA8]();

    objc_msgSend(v7, sel_setEndOfSleepTimeIntervalSinceReferenceDate_, v12);
    v10 = v6[1];
  }
  ((void (*)(void *, void *))v10)(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

id HKCodableAFibBurdenValue.decodedDayIndexRange.getter()
{
  void *v0;
  id result;
  void *v2;
  uint64_t v3;

  if (!objc_msgSend(v0, sel_hasDayIndexRange))
    return 0;
  result = objc_msgSend(v0, sel_dayIndexRange);
  if (result)
  {
    v2 = result;
    v3 = sub_232201530();

    return (id)v3;
  }
  __break(1u);
  return result;
}

id HKCodableSummaryAudioExposureValue.init(leqQuantity:secondsListened:daysAggregated:lastUpdatedDate:)(void *a1, uint64_t a2, uint64_t a3, double a4)
{
  id result;
  void *v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  double v14;
  uint64_t v15;

  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    v9 = result;
    sub_232003E9C(0, &qword_2541B7968);
    v10 = v9;
    v11 = a1;
    v12 = (void *)sub_23220147C();
    objc_msgSend(v10, sel_setLeqQuantity_, v12);

    objc_msgSend(v10, sel_setSecondsListened_, a4);
    objc_msgSend(v10, sel_setDaysAggregated_, a2);
    v13 = (void *)sub_2321FDBF4();
    v14 = MEMORY[0x2348FEDA8]();

    objc_msgSend(v10, sel_setLastUpdatedDateData_, v14);
    v15 = sub_2321FDC6C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(a3, v15);
    return v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKCodableSummaryAudiogramValue.init(audiogram:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id result;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  double v26;
  id v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  void *v44;
  id v45;
  unint64_t v46;
  unint64_t v47;
  id v48;
  void *v49;
  id v50;
  id v51;
  uint64_t v52;
  void *v53;
  id v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;

  v2 = sub_2321FDC6C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (!result)
  {
LABEL_31:
    __break(1u);
    return result;
  }
  v7 = result;
  v8 = objc_msgSend(a1, sel_averageLeftEarSensitivity);
  if (v8)
  {
    v9 = v8;
    sub_232003E9C(0, &qword_2541B7968);
    v10 = v9;
    v11 = (void *)sub_23220147C();
    objc_msgSend(v7, sel_setAverageLeftEarSensitivity_, v11);

  }
  v12 = objc_msgSend(a1, sel_averageRightEarSensitivity);
  if (v12)
  {
    v13 = v12;
    sub_232003E9C(0, &qword_2541B7968);
    v14 = v13;
    v15 = (void *)sub_23220147C();
    objc_msgSend(v7, sel_setAverageRightEarSensitivity_, v15);

  }
  v16 = objc_msgSend(a1, sel_minimumSensitivity);
  if (v16)
  {
    v17 = v16;
    sub_232003E9C(0, &qword_2541B7968);
    v18 = v17;
    v19 = (void *)sub_23220147C();
    objc_msgSend(v7, sel_setMinimumSensitivity_, v19);

  }
  v20 = objc_msgSend(a1, sel_maximumSensitivity);
  if (v20)
  {
    v21 = v20;
    sub_232003E9C(0, &qword_2541B7968);
    v22 = v21;
    v23 = (void *)sub_23220147C();
    objc_msgSend(v7, sel_setMaximumSensitivity_, v23);

  }
  v24 = objc_msgSend(a1, sel_endDate);
  sub_2321FDC30();

  v25 = (void *)sub_2321FDBF4();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v26 = MEMORY[0x2348FEDA8](v25);

  objc_msgSend(v7, sel_setTimestampData_, v26);
  v27 = objc_msgSend(a1, sel_sensitivityPoints);
  sub_232003E9C(0, &qword_2541B0CA8);
  v28 = sub_232201038();

  if (v28 >> 62)
  {
    swift_bridgeObjectRetain();
    v29 = sub_232201998();
    swift_bridgeObjectRelease();
    v54 = v7;
    if (v29)
      goto LABEL_12;
  }
  else
  {
    v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
    v54 = v7;
    if (v29)
    {
LABEL_12:
      v57 = MEMORY[0x24BEE4AF8];
      result = (id)sub_232013814(0, v29 & ~(v29 >> 63), 0);
      if (v29 < 0)
      {
        __break(1u);
      }
      else
      {
        v53 = a1;
        v30 = 0;
        v31 = v57;
        while (1)
        {
          v32 = (v28 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x2348FEA30](v30, v28)
              : *(id *)(v28 + 8 * v30 + 32);
          v33 = v32;
          v34 = objc_allocWithZone(MEMORY[0x24BE4A330]);
          v35 = v33;
          result = objc_msgSend(v34, sel_init);
          if (!result)
            break;
          v36 = result;
          sub_232003E9C(0, &qword_2541B7968);
          v37 = v36;
          v38 = objc_msgSend(v35, sel_frequency);
          v39 = (void *)sub_23220147C();
          objc_msgSend(v37, sel_setFrequency_, v39);

          v40 = objc_msgSend(v35, sel_leftEarSensitivity);
          if (v40)
          {
            v41 = v40;
            v42 = (void *)sub_23220147C();
            objc_msgSend(v37, sel_setLeftEarSensitivity_, v42);

          }
          v43 = objc_msgSend(v35, sel_rightEarSensitivity);
          v44 = v37;
          if (v43)
          {
            v45 = v43;
            v44 = (void *)sub_23220147C();
            objc_msgSend(v37, sel_setRightEarSensitivity_, v44);

          }
          v56 = sub_232003E9C(0, &qword_2541B0D08);

          *(_QWORD *)&v55 = v37;
          v57 = v31;
          v47 = *(_QWORD *)(v31 + 16);
          v46 = *(_QWORD *)(v31 + 24);
          if (v47 >= v46 >> 1)
          {
            sub_232013814(v46 > 1, v47 + 1, 1);
            v31 = v57;
          }
          ++v30;
          *(_QWORD *)(v31 + 16) = v47 + 1;
          sub_232015B58(&v55, (_OWORD *)(v31 + 32 * v47 + 32));
          if (v29 == v30)
          {
            swift_bridgeObjectRelease();
            a1 = v53;
            goto LABEL_28;
          }
        }
      }
      __break(1u);
      goto LABEL_31;
    }
  }
  swift_bridgeObjectRelease();
LABEL_28:
  v48 = objc_allocWithZone(MEMORY[0x24BDBCEB8]);
  v49 = (void *)sub_232201020();
  swift_bridgeObjectRelease();
  v50 = objc_msgSend(v48, sel_initWithArray_, v49);

  v51 = v54;
  objc_msgSend(v54, sel_setSensitivityPoints_, v50);

  return v51;
}

id HKCodableAudiogramSensitivityPoint.init(sensitivityPoint:)(void *a1)
{
  id result;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;

  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    v3 = result;
    sub_232003E9C(0, &qword_2541B7968);
    v4 = v3;
    v5 = objc_msgSend(a1, sel_frequency);
    v6 = (void *)sub_23220147C();
    objc_msgSend(v4, sel_setFrequency_, v6);

    v7 = objc_msgSend(a1, sel_leftEarSensitivity);
    if (v7)
    {
      v8 = v7;
      v9 = (void *)sub_23220147C();
      objc_msgSend(v4, sel_setLeftEarSensitivity_, v9);

    }
    v10 = objc_msgSend(a1, sel_rightEarSensitivity);
    v11 = v4;
    if (v10)
    {
      v12 = v10;
      v11 = (void *)sub_23220147C();
      objc_msgSend(v4, sel_setRightEarSensitivity_, v11);

    }
    return v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void HKCodableSummaryAudiogramValue.timestamp.getter()
{
  sub_2320104FC((SEL *)&selRef_timestampData);
}

uint64_t sub_23200BAF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t result;
  id v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  void *v48;
  id v49;
  uint64_t v50;
  _QWORD v51[2];
  id v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;

  sub_2320164C0();
  v59 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v54 = (char *)v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v58 = (char *)v51 - v5;
  sub_232016524(0, &qword_2541B7028, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE1B68]);
  v61 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v60 = (char *)v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v51 - v9;
  sub_232016524(0, (unint64_t *)&qword_2541B6FC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE08B8]);
  v55 = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v57 = (char *)v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v56 = (uint64_t)v51 - v14;
  v15 = sub_232200DB0();
  v63 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)v51 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19);
  v62 = (char *)v51 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)v51 - v24;
  result = (uint64_t)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    v27 = (id)result;
    v28 = sub_2321FDEA0();
    MEMORY[0x24BDAC7A8](v28);
    v51[-2] = a1;
    v29 = sub_232006104((void (*)(uint64_t *__return_ptr, uint64_t))sub_2320165A0, (uint64_t)&v51[-4], v28);
    swift_bridgeObjectRelease();
    sub_23200C4F8(v29, &qword_2541B7120);
    swift_bridgeObjectRelease();
    v30 = objc_allocWithZone(MEMORY[0x24BDBCEB8]);
    v31 = (void *)sub_232201020();
    swift_bridgeObjectRelease();
    v32 = objc_msgSend(v30, sel_initWithArray_, v31);

    objc_msgSend(v27, sel_setBaselineComparisons_, v32);
    sub_2321FDF18();
    v33 = sub_232200DA4();
    v34 = v63;
    v35 = *(void (**)(char *, uint64_t))(v63 + 8);
    v35(v25, v15);
    v52 = v27;
    objc_msgSend(v27, sel_setMorningIndex_, v33);
    v51[1] = sub_232003E9C(0, &qword_2541B70F0);
    sub_2321FDF30();
    v36 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
    v36(v25, v10, v15);
    sub_2320165BC((uint64_t)v10);
    v37 = (uint64_t)v60;
    v53 = a1;
    sub_2321FDF30();
    v36(v21, (char *)(v37 + *(int *)(v61 + 36)), v15);
    sub_2320165BC(v37);
    sub_232200D74();
    v38 = v62;
    sub_232200D80();
    v35(v18, v15);
    v35(v21, v15);
    sub_232000590(&qword_2541B6BF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24A8]);
    result = sub_232200E4C();
    if ((result & 1) != 0)
    {
      v40 = v58;
      v39 = v59;
      v41 = &v58[*(int *)(v59 + 48)];
      v42 = *(void (**)(char *, char *, uint64_t))(v63 + 32);
      v42(v58, v25, v15);
      v42(v41, v38, v15);
      v43 = v54;
      v44 = &v54[*(int *)(v39 + 48)];
      v36(v54, v40, v15);
      v36(v44, v41, v15);
      v45 = (uint64_t)v57;
      v42(v57, v43, v15);
      v35(v44, v15);
      v46 = &v43[*(int *)(v39 + 48)];
      v42(v43, v40, v15);
      v42(v46, v41, v15);
      v42((char *)(v45 + *(int *)(v55 + 36)), v46, v15);
      v35(v43, v15);
      sub_23201666C(v45, v56, (unint64_t *)&qword_2541B6FC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE08B8]);
      v47 = sub_232201368();
      v48 = (void *)MEMORY[0x2348FE6B8](v47);
      v49 = v52;
      objc_msgSend(v52, sel_setBaselineRange_, v48);

      v50 = sub_2321FDF60();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(v53, v50);
      return (uint64_t)v49;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_23200C068@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t result;
  uint64_t v16;
  _QWORD *v17;

  v17 = a2;
  v3 = sub_2321FDEC4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2321FDFD8();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v16 - v12;
  sub_2321FDF3C();
  sub_232003E9C(0, &qword_2541B7120);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  v14 = sub_23200C1C0((uint64_t)v6, (uint64_t)v11);
  result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  *v17 = v14;
  return result;
}

id sub_23200C1C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id result;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;

  v4 = sub_2321FE014();
  MEMORY[0x24BDAC7A8](v4);
  v28 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, &qword_2541B69E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FDB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v27 - v7;
  v9 = sub_2321FDE7C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v27 - v14;
  v16 = sub_2321FDF0C();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    v20 = result;
    v27 = a1;
    objc_msgSend(v20, sel_setDataType_, sub_2321FDEB8());
    sub_232003E9C(0, &qword_2541B7110);
    sub_2321FDFCC();
    v21 = sub_23200DFE8((uint64_t)v18);
    objc_msgSend(v20, sel_setAggregate_, v21);

    sub_2321FDFB4();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_232016D88((uint64_t)v8, &qword_2541B69E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FDB0]);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
      sub_232003E9C(0, &qword_2541B7108);
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
      v22 = sub_23200E368((uint64_t)v13);
      objc_msgSend(v20, sel_setBaseline_, v22);

      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    }
    v23 = (uint64_t)v28;
    sub_232003E9C(0, &qword_2541B7128);
    sub_2321FDF90();
    v24 = sub_23200DC04(v23);
    objc_msgSend(v20, sel_setAvailability_, v24);

    v25 = sub_2321FDFD8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(a2, v25);
    v26 = sub_2321FDEC4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v27, v26);
    return v20;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23200C4F8(unint64_t a1, unint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t i;
  unint64_t v8;
  unint64_t v9;
  id *v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  _OWORD v14[2];
  uint64_t v15;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_232201998();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v5 = MEMORY[0x24BEE4AF8];
  if (!v4)
    return v5;
  v15 = MEMORY[0x24BEE4AF8];
  result = sub_232013814(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v4; ++i)
      {
        MEMORY[0x2348FEA30](i, a1);
        sub_232003E9C(0, a2);
        swift_dynamicCast();
        v5 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_232013814(0, *(_QWORD *)(v5 + 16) + 1, 1);
          v5 = v15;
        }
        v9 = *(_QWORD *)(v5 + 16);
        v8 = *(_QWORD *)(v5 + 24);
        if (v9 >= v8 >> 1)
        {
          sub_232013814(v8 > 1, v9 + 1, 1);
          v5 = v15;
        }
        *(_QWORD *)(v5 + 16) = v9 + 1;
        sub_232015B58(v14, (_OWORD *)(v5 + 32 * v9 + 32));
      }
    }
    else
    {
      v10 = (id *)(a1 + 32);
      sub_232003E9C(0, a2);
      do
      {
        v11 = *v10;
        swift_dynamicCast();
        v5 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_232013814(0, *(_QWORD *)(v5 + 16) + 1, 1);
          v5 = v15;
        }
        v13 = *(_QWORD *)(v5 + 16);
        v12 = *(_QWORD *)(v5 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_232013814(v12 > 1, v13 + 1, 1);
          v5 = v15;
        }
        *(_QWORD *)(v5 + 16) = v13 + 1;
        sub_232015B58(v14, (_OWORD *)(v5 + 32 * v13 + 32));
        ++v10;
        --v4;
      }
      while (v4);
    }
    return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_23200C748(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_232013814(0, v1, 0);
    v2 = v9;
    v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_232013814(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_232013814(v5 > 1, v6 + 1, 1);
        v2 = v9;
      }
      v4 += 16;
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_232015B58(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_23200C86C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  __int128 v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v14 = MEMORY[0x24BEE4AF8];
    sub_2320138D0(0, v1, 0);
    v2 = v14;
    v4 = (uint64_t *)(a1 + 40);
    v5 = MEMORY[0x24BEE0D00];
    do
    {
      v7 = *(v4 - 1);
      v6 = *v4;
      v14 = v2;
      v8 = *(_QWORD *)(v2 + 16);
      v9 = *(_QWORD *)(v2 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v9 >> 1)
      {
        sub_2320138D0(v9 > 1, v8 + 1, 1);
        v2 = v14;
      }
      v4 += 2;
      v12 = v5;
      v13 = sub_2320168D8();
      *(_QWORD *)&v11 = v7;
      *((_QWORD *)&v11 + 1) = v6;
      *(_QWORD *)(v2 + 16) = v8 + 1;
      sub_2320167F8(&v11, v2 + 40 * v8 + 32);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_23200C964(unint64_t a1)
{
  return sub_23200C4F8(a1, &qword_2541B7498);
}

uint64_t sub_23200C978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  id v61;
  void *v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t result;
  uint64_t v69;
  id v70;
  void *v71;
  char v72;
  char v73;
  int v74;
  uint64_t v75;
  void (*v76)(char *, _QWORD, uint64_t);
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  void (*v80)(_QWORD, _QWORD, _QWORD);
  uint64_t v81;
  char v82;
  unint64_t v83;
  uint64_t v84;
  void (*v85)(uint64_t, uint64_t, uint64_t, void (*)(_QWORD, _QWORD, _QWORD));
  uint64_t v86;
  uint64_t v87;
  void (*v88)(char *, uint64_t);
  unsigned int (*v89)(uint64_t, uint64_t, _QWORD);
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  char v98;
  uint64_t v99;
  void (*v100)(_QWORD, _QWORD);
  uint64_t v101;
  unint64_t v102;
  char v103;
  uint64_t v104;
  uint64_t (*v105)(uint64_t);
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  char v109;
  char *v110;
  uint64_t v111;
  void (*v112)(_QWORD, _QWORD);
  char *v113;
  uint64_t v114;
  void (*v115)(char *, char *, _QWORD);
  char *v116;
  void (*v117)(_QWORD, _QWORD);
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  char *v124;
  char *v125;
  char *v126;
  char *v127;
  uint64_t v128;
  char *v129;
  char *v130;
  char *v131;
  char *v132;
  char *v133;
  char *v134;
  char *v135;
  char *v136;
  char *v137;
  char *v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  void (*v143)(_QWORD, _QWORD, _QWORD);
  char *v144;
  char *v145;
  uint64_t v146;
  id v147;
  uint64_t v148;

  v146 = a1;
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v119 - v6;
  v8 = sub_232200DB0();
  MEMORY[0x24BDAC7A8](v8);
  v130 = (char *)&v119 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, &qword_2541B6A28, (uint64_t (*)(uint64_t))MEMORY[0x24BE40238], v4);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v129 = (char *)&v119 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v132 = (char *)&v119 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v135 = (char *)&v119 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v137 = (char *)&v119 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v140 = (char *)&v119 - v19;
  v139 = sub_2321FDEC4();
  v20 = *(_QWORD *)(v139 - 8);
  v21 = MEMORY[0x24BDAC7A8](v139);
  v131 = (char *)&v119 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v134 = (char *)&v119 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v145 = (char *)&v119 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v141 = (char *)&v119 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&v119 - v29;
  v31 = sub_2321FDFD8();
  v142 = *(_QWORD *)(v31 - 8);
  v143 = (void (*)(_QWORD, _QWORD, _QWORD))v31;
  v32 = MEMORY[0x24BDAC7A8](v31);
  v127 = (char *)&v119 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x24BDAC7A8](v32);
  v126 = (char *)&v119 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v125 = (char *)&v119 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v124 = (char *)&v119 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  v122 = (char *)&v119 - v41;
  v42 = MEMORY[0x24BDAC7A8](v40);
  v123 = (char *)&v119 - v43;
  v44 = MEMORY[0x24BDAC7A8](v42);
  v133 = (char *)&v119 - v45;
  v46 = MEMORY[0x24BDAC7A8](v44);
  v136 = (char *)&v119 - v47;
  v48 = MEMORY[0x24BDAC7A8](v46);
  v138 = (char *)&v119 - v49;
  MEMORY[0x24BDAC7A8](v48);
  v144 = (char *)&v119 - v50;
  sub_232016608();
  MEMORY[0x24BDAC7A8](v51);
  v53 = (char *)&v119 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232016524(0, &qword_2541B7028, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE1B68]);
  v55 = v54;
  v56 = *(_QWORD *)(v54 - 8);
  v57 = MEMORY[0x24BDAC7A8](v54);
  v128 = (uint64_t)&v119 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v57);
  v60 = (char *)&v119 - v59;
  v147 = v2;
  v61 = objc_msgSend(v2, sel_baselineComparisons);
  if (!v61
    || (v62 = v61,
        v148 = 0,
        sub_232003E9C(0, &qword_2541B7120),
        sub_23220102C(),
        v62,
        (v64 = v148) == 0))
  {
    v67 = sub_2321FDF60();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(a2, 1, 1, v67);
  }
  v120 = v7;
  v121 = a2;
  MEMORY[0x24BDAC7A8](v63);
  *(&v119 - 2) = (char *)v146;
  v65 = sub_23209C66C((void (*)(id *))sub_232016C70, (uint64_t)(&v119 - 4), v64);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v65 + 16))
  {
    sub_232016C88();
    v66 = sub_2322019C8();
  }
  else
  {
    v66 = MEMORY[0x24BEE4B00];
  }
  v148 = v66;
  v69 = swift_bridgeObjectRetain();
  sub_2320148FC(v69, 1, (unint64_t *)&v148);
  swift_bridgeObjectRelease();
  v146 = v148;
  v70 = objc_msgSend(v147, sel_baselineRange);
  if (!v70)
  {
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
    return result;
  }
  v71 = v70;
  sub_232201530();
  v73 = v72;

  if ((v73 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v56 + 56))(v53, 1, 1, v55);
    v75 = v121;
  }
  else
  {
    sub_23220135C();
    v74 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 48))(v53, 1, v55);
    v75 = v121;
    if (v74 != 1)
    {
      v119 = v60;
      sub_23201666C((uint64_t)v53, (uint64_t)v60, &qword_2541B7028, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE1B68]);
      v76 = *(void (**)(char *, _QWORD, uint64_t))(v20 + 104);
      v77 = v139;
      v76(v30, *MEMORY[0x24BE3FE10], v139);
      v78 = v146;
      if (*(_QWORD *)(v146 + 16))
      {
        v79 = sub_23216ABE8((uint64_t)v30);
        v81 = v142;
        v80 = v143;
        if ((v82 & 1) != 0)
        {
          v83 = *(_QWORD *)(v78 + 56) + *(_QWORD *)(v142 + 72) * v79;
          v84 = (uint64_t)v140;
          (*(void (**)(char *, unint64_t, _QWORD))(v142 + 16))(v140, v83, v143);
          v85 = *(void (**)(uint64_t, uint64_t, uint64_t, void (*)(_QWORD, _QWORD, _QWORD)))(v81 + 56);
          v85(v84, 0, 1, v80);
          goto LABEL_19;
        }
      }
      else
      {
        v81 = v142;
        v80 = v143;
      }
      v85 = *(void (**)(uint64_t, uint64_t, uint64_t, void (*)(_QWORD, _QWORD, _QWORD)))(v81 + 56);
      v84 = (uint64_t)v140;
      v85((uint64_t)v140, 1, 1, v80);
LABEL_19:
      v87 = (uint64_t)v145;
      v88 = *(void (**)(char *, uint64_t))(v20 + 8);
      v88(v30, v77);
      v89 = *(unsigned int (**)(uint64_t, uint64_t, _QWORD))(v81 + 48);
      if (v89(v84, 1, v80) == 1)
      {
        sub_2320165BC((uint64_t)v119);
        swift_release();
        sub_232016D88(v84, &qword_2541B6A28, (uint64_t (*)(uint64_t))MEMORY[0x24BE40238]);
        goto LABEL_15;
      }
      v143 = *(void (**)(_QWORD, _QWORD, _QWORD))(v81 + 32);
      v143(v144, v84, v80);
      v90 = (uint64_t)v141;
      v76(v141, *MEMORY[0x24BE3FDC8], v77);
      v91 = v146;
      if (*(_QWORD *)(v146 + 16))
      {
        v92 = sub_23216ABE8(v90);
        if ((v93 & 1) != 0)
        {
          v94 = v137;
          (*(void (**)(char *, unint64_t, _QWORD))(v81 + 16))(v137, *(_QWORD *)(v91 + 56) + *(_QWORD *)(v81 + 72) * v92, v80);
          v95 = 0;
          v87 = (uint64_t)v145;
          goto LABEL_27;
        }
        v95 = 1;
        v87 = (uint64_t)v145;
      }
      else
      {
        v95 = 1;
      }
      v94 = v137;
LABEL_27:
      v85((uint64_t)v94, v95, 1, v80);
      v88(v141, v77);
      if (v89((uint64_t)v94, 1, v80) == 1)
      {
        swift_release();
        (*(void (**)(char *, void (*)(_QWORD, _QWORD, _QWORD)))(v81 + 8))(v144, v80);
      }
      else
      {
        v143(v138, v94, v80);
        v76((char *)v87, *MEMORY[0x24BE3FDD0], v77);
        v96 = v146;
        if (*(_QWORD *)(v146 + 16) && (v97 = sub_23216ABE8(v87), (v98 & 1) != 0))
        {
          v94 = v135;
          (*(void (**)(char *, unint64_t, _QWORD))(v81 + 16))(v135, *(_QWORD *)(v96 + 56) + *(_QWORD *)(v81 + 72) * v97, v80);
          v99 = 0;
        }
        else
        {
          v99 = 1;
          v94 = v135;
        }
        v85((uint64_t)v94, v99, 1, v80);
        v88(v145, v77);
        if (v89((uint64_t)v94, 1, v80) == 1)
        {
          swift_release();
          v100 = *(void (**)(_QWORD, _QWORD))(v81 + 8);
          v100(v138, v80);
        }
        else
        {
          v143(v136, v94, v80);
          v101 = (uint64_t)v134;
          v76(v134, *MEMORY[0x24BE3FDD8], v77);
          if (*(_QWORD *)(v96 + 16) && (v102 = sub_23216ABE8(v101), (v103 & 1) != 0))
          {
            v94 = v132;
            (*(void (**)(char *, unint64_t, _QWORD))(v81 + 16))(v132, *(_QWORD *)(v96 + 56) + *(_QWORD *)(v81 + 72) * v102, v80);
            v104 = 0;
          }
          else
          {
            v104 = 1;
            v94 = v132;
          }
          v85((uint64_t)v94, v104, 1, v80);
          v88(v134, v77);
          if (v89((uint64_t)v94, 1, v80) != 1)
          {
            v143(v133, v94, v80);
            v107 = (uint64_t)v131;
            v76(v131, *MEMORY[0x24BE3FDC0], v77);
            if (*(_QWORD *)(v96 + 16) && (v108 = sub_23216ABE8(v107), (v109 & 1) != 0))
            {
              v110 = v129;
              (*(void (**)(char *, unint64_t, _QWORD))(v81 + 16))(v129, *(_QWORD *)(v96 + 56) + *(_QWORD *)(v81 + 72) * v108, v80);
              v111 = 0;
            }
            else
            {
              v111 = 1;
              v110 = v129;
            }
            v85((uint64_t)v110, v111, 1, v80);
            swift_release();
            v88(v131, v77);
            if (v89((uint64_t)v110, 1, v80) != 1)
            {
              v113 = v123;
              v143(v123, v110, v80);
              objc_msgSend(v147, sel_morningIndex);
              sub_232200D98();
              sub_2320166B8((uint64_t)v119, v128);
              v114 = sub_2321FDC6C();
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 56))(v120, 1, 1, v114);
              v115 = *(void (**)(char *, char *, _QWORD))(v81 + 16);
              v115(v122, v144, v80);
              v115(v124, v138, v80);
              v115(v125, v136, v80);
              v116 = v133;
              v115(v126, v133, v80);
              v115(v127, v113, v80);
              sub_2321FDF24();
              v117 = *(void (**)(_QWORD, _QWORD))(v81 + 8);
              v117(v113, v80);
              v117(v116, v80);
              v117(v136, v80);
              v117(v138, v80);
              v117(v144, v80);
              sub_2320165BC((uint64_t)v119);
              v118 = sub_2321FDF60();
              return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 56))(v121, 0, 1, v118);
            }
            v112 = *(void (**)(_QWORD, _QWORD))(v81 + 8);
            v112(v133, v80);
            v112(v136, v80);
            v112(v138, v80);
            v112(v144, v80);
            sub_2320165BC((uint64_t)v119);
            v105 = (uint64_t (*)(uint64_t))MEMORY[0x24BE40238];
            v106 = (uint64_t)v110;
            goto LABEL_43;
          }
          swift_release();
          v100 = *(void (**)(_QWORD, _QWORD))(v81 + 8);
          v100(v136, v80);
          v100(v138, v80);
        }
        v100(v144, v80);
      }
      sub_2320165BC((uint64_t)v119);
      v105 = (uint64_t (*)(uint64_t))MEMORY[0x24BE40238];
      v106 = (uint64_t)v94;
LABEL_43:
      sub_232016D88(v106, &qword_2541B6A28, v105);
      v75 = v121;
      goto LABEL_15;
    }
  }
  swift_release();
  sub_232002CEC((uint64_t)v53, (uint64_t (*)(_QWORD))sub_232016608);
LABEL_15:
  v86 = sub_2321FDF60();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56))(v75, 1, 1, v86);
}

uint64_t sub_23200D660@<X0>(void **a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  unint64_t *v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;

  v33 = a2;
  v34 = a3;
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B69F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FE20], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v31 - v6;
  v8 = sub_2321FDEC4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v32 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, &qword_2541B6A28, (uint64_t (*)(uint64_t))MEMORY[0x24BE40238], v4);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v31 - v12;
  v14 = sub_2321FDFD8();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a1;
  sub_23200D8F8(v33, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    v19 = &qword_2541B6A28;
    v20 = (uint64_t (*)(uint64_t))MEMORY[0x24BE40238];
    v21 = (uint64_t)v13;
LABEL_5:
    sub_232016D88(v21, v19, v20);
    sub_232016D1C();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v34, 1, 1, v23);
  }
  v22 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v22(v17, v13, v14);
  objc_msgSend(v18, sel_dataType);
  sub_2321FDEAC();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    v19 = &qword_2541B69F8;
    v20 = (uint64_t (*)(uint64_t))MEMORY[0x24BE3FE20];
    v21 = (uint64_t)v7;
    goto LABEL_5;
  }
  v25 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v26 = v32;
  v25(v32, v7, v8);
  sub_232016D1C();
  v28 = v27;
  v29 = v34;
  v30 = &v34[*(int *)(v27 + 48)];
  v25(v34, v26, v8);
  v22(v30, v17, v14);
  return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v29, 0, 1, v28);
}

id sub_23200D8F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  id v22;
  void *v23;
  id result;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v31 = a1;
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B69E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FDB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v30 - v7;
  v9 = sub_2321FDF0C();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, &qword_2541B6A30, (uint64_t (*)(uint64_t))MEMORY[0x24BE403A0], v5);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v30 - v13;
  v15 = sub_2321FE014();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v30 - v20;
  v22 = objc_msgSend(v3, sel_availability);
  if (!v22)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
    goto LABEL_8;
  }
  v23 = v22;
  sub_23200DE40((uint64_t)v14);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
LABEL_8:
    sub_232016D88((uint64_t)v14, &qword_2541B6A30, (uint64_t (*)(uint64_t))MEMORY[0x24BE403A0]);
    v27 = sub_2321FDFD8();
    return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(a2, 1, 1, v27);
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v14, v15);
  result = objc_msgSend(v3, sel_aggregate);
  if (!result)
  {
    __break(1u);
    goto LABEL_13;
  }
  v25 = result;
  sub_23200E4CC(v31, (uint64_t)v11);

  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v21, v15);
  if (!objc_msgSend(v3, sel_hasBaseline))
  {
    v28 = sub_2321FDE7C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v8, 1, 1, v28);
    goto LABEL_10;
  }
  result = objc_msgSend(v3, sel_baseline);
  if (!result)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  v26 = result;
  sub_23200E874();

LABEL_10:
  sub_2321FDFC0();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
  v29 = sub_2321FDFD8();
  return (id)(*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(a2, 0, 1, v29);
}

id sub_23200DC04(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id result;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_232016524(0, &qword_2541B7028, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE1B68]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v21 - v8;
  sub_232016608();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v21 - v14;
  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    v17 = result;
    sub_2321FDFF0();
    sub_23200054C((uint64_t)v15, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_232016608);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v13, 1, v3) == 1)
    {
      v18 = 0;
    }
    else
    {
      sub_23201666C((uint64_t)v13, (uint64_t)v9, &qword_2541B7028, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE1B68]);
      sub_232003E9C(0, &qword_2541B70F0);
      sub_2320166B8((uint64_t)v9, (uint64_t)v7);
      v19 = sub_232201380();
      v18 = (void *)MEMORY[0x2348FE6B8](v19);
      sub_2320165BC((uint64_t)v9);
    }
    sub_232002CEC((uint64_t)v15, (uint64_t (*)(_QWORD))sub_232016608);
    objc_msgSend(v17, sel_setAnalyzedRange_, v18);

    objc_msgSend(v17, sel_setCount_, sub_2321FDFFC());
    objc_msgSend(v17, sel_setRequiredCount_, sub_2321FE008());

    v20 = sub_2321FE014();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(a1, v20);
    return v17;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_23200DE40@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id result;
  void *v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_232016608();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend(v1, sel_hasCount) || !objc_msgSend(v1, sel_hasRequiredCount))
  {
    v10 = sub_2321FE014();
    return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 1, 1, v10);
  }
  if (!objc_msgSend(v1, sel_hasAnalyzedRange))
    goto LABEL_8;
  result = objc_msgSend(v1, sel_analyzedRange);
  if (result)
  {
    v7 = result;
    sub_232201530();
    v9 = v8;

    if ((v9 & 1) == 0)
    {
      sub_23220135C();
LABEL_9:
      objc_msgSend(v1, sel_count);
      objc_msgSend(v1, sel_requiredCount);
      return (id)sub_2321FDFE4();
    }
LABEL_8:
    sub_232016524(0, &qword_2541B7028, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE1B68]);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v5, 1, 1, v11);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

id sub_23200DFE8(uint64_t a1)
{
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id result;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void *v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;

  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v30 - v4;
  sub_2320057B8(0, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], v2);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v30 - v7;
  v9 = sub_2321FDC6C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v31 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_232200DB0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    v17 = result;
    sub_2321FDEDC();
    v18 = sub_232200DA4();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    objc_msgSend(v17, sel_setMorningIndex_, v18);
    v19 = sub_2321FDF00();
    if (v19)
    {
      v20 = (void *)v19;
      sub_232003E9C(0, &qword_2541B7968);
      v21 = v20;
      v22 = (void *)sub_23220147C();
      objc_msgSend(v17, sel_setQuantity_, v22);

    }
    sub_2321FDEF4();
    v23 = sub_2321FD8B8();
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v5, 1, v23) == 1)
    {
      sub_232016D88((uint64_t)v5, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    }
    else
    {
      sub_2321FD870();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
      {
        v26 = v31;
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v31, v8, v9);
        v27 = (void *)sub_2321FDBF4();
        v28 = MEMORY[0x2348FEDA8]();

        objc_msgSend(v17, sel_setLatestSampleEndDate_, v28);
        v29 = sub_2321FDF0C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(a1, v29);
        (*(void (**)(char *, uint64_t))(v10 + 8))(v26, v9);
        return v17;
      }
    }

    v25 = sub_2321FDF0C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(a1, v25);
    sub_232016D88((uint64_t)v8, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    return v17;
  }
  __break(1u);
  return result;
}

id sub_23200E368(uint64_t a1)
{
  id result;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;

  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    v3 = result;
    sub_232003E9C(0, &qword_2541B7968);
    v4 = v3;
    sub_2321FDE70();
    v5 = (void *)sub_23220147C();
    objc_msgSend(v4, sel_setMiddle_, v5);

    v6 = (void *)sub_2321FDE58();
    v7 = objc_msgSend(v6, sel_minimum);

    v8 = (void *)sub_23220147C();
    objc_msgSend(v4, sel_setMedialRangeMinimum_, v8);

    v9 = (void *)sub_2321FDE58();
    v10 = objc_msgSend(v9, sel_maximum);

    v11 = (void *)sub_23220147C();
    objc_msgSend(v4, sel_setMedialRangeMaximum_, v11);

    v12 = sub_2321FDE7C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a1, v12);
    return v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_23200E4CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id result;
  void *v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unsigned int v30;
  unsigned int *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;

  v3 = v2;
  v37 = a2;
  v5 = sub_2321FDED0();
  v34 = *(_QWORD *)(v5 - 8);
  v35 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v36 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v32 - v9;
  v11 = sub_2321FDC6C();
  v32 = *(_QWORD *)(v11 - 8);
  v33 = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  MEMORY[0x24BDAC7A8](v12);
  sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], v7);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v32 - v14;
  v16 = sub_2321FDDD4();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_232200DB0();
  MEMORY[0x24BDAC7A8](v20);
  objc_msgSend(v3, sel_morningIndex);
  sub_232200D98();
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a1, v16);
  if (objc_msgSend(v3, sel_hasQuantity))
  {
    result = objc_msgSend(v3, sel_quantity);
    if (!result)
    {
      __break(1u);
      return result;
    }
    v22 = result;
    v23 = objc_msgSend((id)objc_opt_self(), sel_createWithCodableQuantity_, result);

  }
  if (objc_msgSend(v3, sel_hasLatestSampleEndDate))
  {
    objc_msgSend(v3, sel_latestSampleEndDate);
    v24 = (id)HKDecodeDateForValue();
    sub_2321FDC30();

    objc_msgSend(v3, sel_latestSampleEndDate);
    v25 = (id)HKDecodeDateForValue();
    sub_2321FDC30();

    sub_2321FD87C();
    v26 = sub_2321FD8B8();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v15, 0, 1, v26);
  }
  else
  {
    v27 = sub_2321FD8B8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v15, 1, 1, v27);
  }
  v28 = v36;
  v29 = v35;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v10, 1, 1, v33);
  v30 = objc_msgSend(v3, sel_hasQuantity);
  v31 = (unsigned int *)MEMORY[0x24BE3FE88];
  if (!v30)
    v31 = (unsigned int *)MEMORY[0x24BE3FE80];
  (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v28, *v31, v29);
  return (id)sub_2321FDEE8();
}

id sub_23200E874()
{
  void *v0;
  id result;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;

  result = objc_msgSend(v0, sel_middle);
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v2 = result;
  v3 = (void *)objc_opt_self();
  v4 = objc_msgSend(v3, sel_createWithCodableQuantity_, v2);

  result = objc_msgSend(v0, sel_medialRangeMinimum);
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v5 = result;
  v6 = objc_msgSend(v3, sel_createWithCodableQuantity_, result);

  result = objc_msgSend(v0, sel_medialRangeMaximum);
  if (result)
  {
    v7 = result;
    v8 = objc_msgSend(v3, sel_createWithCodableQuantity_, result);

    objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3E60]), sel_initWithMinimum_maximum_isMinimumInclusive_isMaximumInclusive_, v6, v8, 1, 1);
    v9 = (void *)objc_opt_self();
    v10 = objc_msgSend(v9, sel_countUnit);
    v11 = objc_msgSend(v3, sel_quantityWithUnit_doubleValue_, v10, 0.0);

    v12 = objc_msgSend(v9, sel_countUnit);
    v13 = (id)HKQuantityRangeInclusive();

    return (id)sub_2321FDE64();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t HKCodableSummaryBloodPressureValue.init(correlation:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t result;
  uint64_t v22;

  v2 = sub_2321FDC6C();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232003E9C(0, (unint64_t *)&qword_2541B0C28);
  v5 = (void *)MEMORY[0x2348FE4B4]((id)*MEMORY[0x24BDD33A8]);
  v6 = (void *)MEMORY[0x2348FE4B4]((id)*MEMORY[0x24BDD33A0]);
  v7 = objc_msgSend(a1, sel_objectsForType_, v5);
  sub_232003E9C(0, &qword_2541B0D68);
  sub_232016040((unint64_t *)&qword_2541B0D70, &qword_2541B0D68, 0x24BDD3ED8, MEMORY[0x24BEE5BD8]);
  v8 = sub_2322010BC();

  v9 = (void *)sub_23200EDAC(v8, (uint64_t (*)(uint64_t))sub_232131E74, (uint64_t (*)(uint64_t, uint64_t, BOOL, uint64_t))sub_232131B68);
  swift_bridgeObjectRelease();
  if (v9)
  {
    objc_opt_self();
    v10 = swift_dynamicCastObjCClass();
    if (v10)
    {
      v11 = (void *)v10;
      v12 = objc_msgSend(a1, sel_objectsForType_, v6);
      v13 = sub_2322010BC();

      v14 = (void *)sub_23200EDAC(v13, (uint64_t (*)(uint64_t))sub_232131E74, (uint64_t (*)(uint64_t, uint64_t, BOOL, uint64_t))sub_232131B68);
      swift_bridgeObjectRelease();
      if (v14)
      {
        objc_opt_self();
        v15 = swift_dynamicCastObjCClass();
        if (v15)
        {
          v16 = (void *)v15;
          v17 = objc_msgSend(v11, sel_quantity);
          v18 = objc_msgSend(v16, sel_quantity);
          v19 = objc_msgSend(a1, sel_endDate);
          sub_2321FDC30();

          v20 = HKCodableSummaryBloodPressureValue.init(systolicValue:diastolicValue:timestamp:)(v17, v18, (uint64_t)v4);
          return (uint64_t)v20;
        }

      }
    }
    else
    {

    }
  }
  result = sub_232201968();
  __break(1u);
  return result;
}

uint64_t sub_23200ED84(uint64_t a1)
{
  return sub_23200EDAC(a1, (uint64_t (*)(uint64_t))sub_232131E74, (uint64_t (*)(uint64_t, uint64_t, BOOL, uint64_t))sub_232131E60);
}

uint64_t sub_23200ED98(uint64_t a1)
{
  return sub_23200EDAC(a1, (uint64_t (*)(uint64_t))sub_232131E74, (uint64_t (*)(uint64_t, uint64_t, BOOL, uint64_t))sub_232131B7C);
}

uint64_t sub_23200EDAC(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(uint64_t, uint64_t, BOOL, uint64_t))
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  char v15;

  v5 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v6 = sub_232201794();
    v8 = v7;
    v9 = sub_232201824();
    v11 = MEMORY[0x2348FE934](v6, v8, v9, v10);
    swift_bridgeObjectRelease();
    if ((v11 & 1) != 0)
    {
LABEL_3:
      sub_2320167EC(v6, v8, v5 != 0);
      return 0;
    }
LABEL_7:
    v12 = a3(v6, v8, v5 != 0, a1);
    sub_2320167EC(v6, v8, v5 != 0);
    return v12;
  }
  result = a2(a1);
  if ((v15 & 1) == 0)
  {
    v8 = v14;
    if (*(_DWORD *)(a1 + 36) == (_DWORD)v14)
    {
      v6 = result;
      if (result == 1 << *(_BYTE *)(a1 + 32))
        goto LABEL_3;
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

id HKCodableSummaryBloodPressureValue.init(systolicValue:diastolicValue:timestamp:)(void *a1, void *a2, uint64_t a3)
{
  id result;
  id v7;
  id v8;
  id v9;
  void *v10;
  double v11;
  uint64_t v12;

  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    v7 = result;
    v8 = objc_msgSend(a1, sel_codableRepresentation);
    objc_msgSend(v7, sel_setSystolicValue_, v8);

    v9 = objc_msgSend(a2, sel_codableRepresentation);
    objc_msgSend(v7, sel_setDiastolicValue_, v9);

    v10 = (void *)sub_2321FDBF4();
    v11 = MEMORY[0x2348FEDA8]();

    objc_msgSend(v7, sel_setTimestampData_, v11);
    v12 = sub_2321FDC6C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a3, v12);
    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void HKCodableSummaryBloodPressureValue.timestamp.getter()
{
  sub_2320104FC((SEL *)&selRef_timestampData);
}

id HKCodableSummaryElectrocardiogramValue.init(algorithmVersion:classification:timestamp:averageHeartRate:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id result;
  id v9;
  void *v10;
  double v11;
  id v12;
  uint64_t v13;

  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (!result)
    goto LABEL_8;
  v9 = result;
  result = objc_msgSend(v9, sel_setAlgorithmVersionRawValue_, a1);
  if (a2 < 0)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  objc_msgSend(v9, sel_setClassificationRawValue_, a2);
  v10 = (void *)sub_2321FDBF4();
  v11 = MEMORY[0x2348FEDA8]();

  objc_msgSend(v9, sel_setTimestampData_, v11);
  if (a4)
    v12 = objc_msgSend(a4, sel_codableRepresentation);
  else
    v12 = 0;
  objc_msgSend(v9, sel_setAverageHeartRate_, v12);

  v13 = sub_2321FDC6C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a3, v13);
  return v9;
}

void HKCodableSummaryElectrocardiogramValue.timestamp.getter()
{
  sub_2320104FC((SEL *)&selRef_timestampData);
}

id HKCodableSummaryOngoingFactorsValue.init(categoryValueRawValues:earliestStartDate:latestEndDate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id result;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t i;
  uint64_t v11;
  id v12;
  void *v13;
  double v14;
  void *v15;
  double v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);

  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    v7 = result;
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
    {
      v9 = result;
      swift_bridgeObjectRetain();
      for (i = 0; i != v8; ++i)
      {
        v11 = *(_QWORD *)(a1 + 8 * i + 32);
        objc_msgSend(v9, sel_addCategoryValueRawValues_, v11);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v12 = result;
    }
    swift_bridgeObjectRelease();
    v13 = (void *)sub_2321FDBF4();
    v14 = MEMORY[0x2348FEDA8]();

    objc_msgSend(v7, sel_setEarliestStartDate_, v14);
    v15 = (void *)sub_2321FDBF4();
    v16 = MEMORY[0x2348FEDA8]();

    objc_msgSend(v7, sel_setLatestEndDate_, v16);
    v17 = sub_2321FDC6C();
    v18 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8);
    v18(a3, v17);
    v18(a2, v17);
    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void HKCodableSummaryOngoingFactorsValue.earliestStartDateTimestamp.getter()
{
  sub_2320104FC((SEL *)&selRef_earliestStartDate);
}

void HKCodableSummaryOngoingFactorsValue.latestEndDateTimestamp.getter()
{
  sub_2320104FC((SEL *)&selRef_latestEndDate);
}

uint64_t HKCodableSummaryOngoingFactorsValue.init(ongoingSamples:)(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  id v31;
  void *v32;
  id v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char *v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  id v43;
  void *v44;
  id v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  void *v56;
  id v57;
  unint64_t v58;
  unint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  void (*v65)(char *, uint64_t);
  unsigned int (*v66)(char *, uint64_t, uint64_t);
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;

  v3 = sub_23220039C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v75 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v77 = (char *)&v66 - v10;
  v11 = sub_2321FDC6C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v69 = (char *)&v66 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v70 = (char *)&v66 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v74 = (char *)&v66 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v66 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v76 = (char *)&v66 - v25;
  v26 = sub_23200F958(a1);
  swift_bridgeObjectRelease();
  if (!v26)
  {
LABEL_29:
    sub_232200318();
    v49 = sub_232200390();
    v50 = sub_2322012E4();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v51 = 0;
      _os_log_impl(&dword_231FFB000, v49, v50, "Unable to get ongoing samples, earlier start date or latest end date to create an ongoing factors value", v51, 2u);
      MEMORY[0x2348FF468](v51, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return 0;
  }
  v67 = v15;
  v68 = v1;
  if (v26 >> 62)
  {
    swift_bridgeObjectRetain();
    v27 = sub_232201998();
    swift_bridgeObjectRelease();
  }
  else
  {
    v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  v28 = MEMORY[0x24BEE4AF8];
  v78 = v11;
  v72 = v4;
  v73 = v3;
  v71 = v6;
  if (v27)
  {
    v79 = MEMORY[0x24BEE4AF8];
    result = sub_232013888(0, v27 & ~(v27 >> 63), 0);
    if (v27 < 0)
    {
      __break(1u);
      goto LABEL_47;
    }
    v30 = 0;
    v28 = v79;
    do
    {
      if ((v26 & 0xC000000000000001) != 0)
        v31 = (id)MEMORY[0x2348FEA30](v30, v26);
      else
        v31 = *(id *)(v26 + 8 * v30 + 32);
      v32 = v31;
      v33 = objc_msgSend(v31, sel_startDate);
      sub_2321FDC30();

      v79 = v28;
      v35 = *(_QWORD *)(v28 + 16);
      v34 = *(_QWORD *)(v28 + 24);
      if (v35 >= v34 >> 1)
      {
        sub_232013888(v34 > 1, v35 + 1, 1);
        v28 = v79;
      }
      ++v30;
      *(_QWORD *)(v28 + 16) = v35 + 1;
      v36 = v28
          + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))
          + *(_QWORD *)(v12 + 72) * v35;
      v11 = v78;
      (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v36, v24, v78);
    }
    while (v27 != v30);
    v4 = v72;
    v3 = v73;
    v6 = v71;
  }
  v37 = v77;
  sub_23200FB80(v28, v77);
  swift_bridgeObjectRelease();
  v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v38(v37, 1, v11) == 1)
  {
    v39 = v37;
LABEL_28:
    swift_bridgeObjectRelease();
    sub_232016D88((uint64_t)v39, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    goto LABEL_29;
  }
  v77 = *(char **)(v12 + 32);
  ((void (*)(char *, char *, uint64_t))v77)(v76, v37, v11);
  v40 = MEMORY[0x24BEE4AF8];
  if (!v27)
    goto LABEL_26;
  v66 = v38;
  v79 = MEMORY[0x24BEE4AF8];
  result = sub_232013888(0, v27 & ~(v27 >> 63), 0);
  if (v27 < 0)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  v41 = 0;
  v40 = v79;
  v42 = v70;
  do
  {
    if ((v26 & 0xC000000000000001) != 0)
      v43 = (id)MEMORY[0x2348FEA30](v41, v26);
    else
      v43 = *(id *)(v26 + 8 * v41 + 32);
    v44 = v43;
    v45 = objc_msgSend(v43, sel_endDate);
    sub_2321FDC30();

    v79 = v40;
    v47 = *(_QWORD *)(v40 + 16);
    v46 = *(_QWORD *)(v40 + 24);
    if (v47 >= v46 >> 1)
    {
      sub_232013888(v46 > 1, v47 + 1, 1);
      v40 = v79;
    }
    ++v41;
    *(_QWORD *)(v40 + 16) = v47 + 1;
    v48 = v40
        + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))
        + *(_QWORD *)(v12 + 72) * v47;
    v11 = v78;
    ((void (*)(unint64_t, char *, uint64_t))v77)(v48, v42, v78);
  }
  while (v27 != v41);
  v4 = v72;
  v3 = v73;
  v6 = v71;
  v38 = v66;
LABEL_26:
  v39 = v75;
  sub_23200FED0(v40, v75);
  swift_bridgeObjectRelease();
  if (v38(v39, 1, v11) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v76, v11);
    goto LABEL_28;
  }
  ((void (*)(char *, char *, uint64_t))v77)(v74, v39, v11);
  if (!v27)
  {
    swift_bridgeObjectRelease();
    v54 = MEMORY[0x24BEE4AF8];
LABEL_44:
    v60 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v61 = (uint64_t)v69;
    v62 = v76;
    v60(v69, v76, v11);
    v63 = (uint64_t)v67;
    v64 = v74;
    v60(v67, v74, v11);
    v52 = HKCodableSummaryOngoingFactorsValue.init(categoryValueRawValues:earliestStartDate:latestEndDate:)(v54, v61, v63);
    v65 = *(void (**)(char *, uint64_t))(v12 + 8);
    v65(v64, v11);
    v65(v62, v11);
    return (uint64_t)v52;
  }
  v79 = MEMORY[0x24BEE4AF8];
  result = sub_23201385C(0, v27 & ~(v27 >> 63), 0);
  if ((v27 & 0x8000000000000000) == 0)
  {
    v53 = 0;
    v54 = v79;
    do
    {
      if ((v26 & 0xC000000000000001) != 0)
        v55 = (id)MEMORY[0x2348FEA30](v53, v26);
      else
        v55 = *(id *)(v26 + 8 * v53 + 32);
      v56 = v55;
      v57 = objc_msgSend(v55, sel_value);

      v79 = v54;
      v59 = *(_QWORD *)(v54 + 16);
      v58 = *(_QWORD *)(v54 + 24);
      if (v59 >= v58 >> 1)
      {
        sub_23201385C(v58 > 1, v59 + 1, 1);
        v54 = v79;
      }
      ++v53;
      *(_QWORD *)(v54 + 16) = v59 + 1;
      *(_QWORD *)(v54 + 8 * v59 + 32) = v57;
    }
    while (v27 != v53);
    swift_bridgeObjectRelease();
    v11 = v78;
    goto LABEL_44;
  }
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_23200F958(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v12;

  v1 = a1;
  v12 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_18;
  sub_2322018FC();
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (i = 0; ; ++i)
      {
        MEMORY[0x2348FEA30](i, v1);
        v4 = i + 1;
        if (__OFADD__(i, 1))
          break;
        objc_opt_self();
        if (!swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_2322018E4();
        sub_232201908();
        sub_232201914();
        sub_2322018F0();
        if (v4 == v2)
          return v12;
      }
      __break(1u);
    }
    else
    {
      v5 = 0;
      v6 = v1 + 32;
      while (1)
      {
        v7 = v5 + 1;
        if (__OFADD__(v5, 1))
          break;
        v8 = *(void **)(v6 + 8 * v5);
        objc_opt_self();
        v9 = swift_dynamicCastObjCClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        v1 = v9;
        v10 = v8;
        sub_2322018E4();
        sub_232201908();
        sub_232201914();
        sub_2322018F0();
        ++v5;
        if (v7 == v2)
          return v12;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_232201998();
    swift_bridgeObjectRelease();
    sub_2322018FC();
    swift_bridgeObjectRetain();
    v2 = sub_232201998();
    swift_bridgeObjectRelease();
  }
  return v12;
}

uint64_t sub_23200FB3C(uint64_t a1)
{
  uint64_t v1;
  double v2;
  uint64_t v3;
  double *v4;
  double v5;
  double v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v2 = *(double *)(a1 + 32);
  v3 = v1 - 1;
  if (v1 != 1)
  {
    v4 = (double *)(a1 + 40);
    do
    {
      v5 = *v4++;
      v6 = v5;
      if (v5 < v2)
        v2 = v6;
      --v3;
    }
    while (v3);
  }
  return *(_QWORD *)&v2;
}

uint64_t sub_23200FB80@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  unint64_t v26;
  char v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, unint64_t, uint64_t);

  sub_2320057B8(0, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v29 - v8;
  v10 = sub_2321FDC6C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v29 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  if (!v17)
  {
    v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v18(v9, 1, 1, v10);
    goto LABEL_7;
  }
  v31 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v34 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
  v34(v9, a1 + v31, v10);
  v32 = a1;
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v18(v9, 0, 1, v10);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v19(v9, 1, v10) == 1)
  {
LABEL_7:
    sub_232016D88((uint64_t)v9, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    v23 = a2;
    v24 = 1;
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v23, v24, 1, v10);
  }
  v30 = a2;
  v20 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v20(v16, v9, v10);
  swift_bridgeObjectRetain();
  v21 = v17 - 1;
  if (v21)
  {
    v33 = *(_QWORD *)(v11 + 72);
    v26 = v32 + v33 + v31;
    while (1)
    {
      v34(v7, v26, v10);
      v18(v7, 0, 1, v10);
      if (v19(v7, 1, v10) == 1)
        break;
      v20(v14, v7, v10);
      sub_232000590((unint64_t *)&qword_2541AF160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
      v27 = sub_232200E34();
      v28 = *(void (**)(char *, uint64_t))(v11 + 8);
      if ((v27 & 1) != 0)
      {
        v28(v16, v10);
        v20(v16, v14, v10);
      }
      else
      {
        v28(v14, v10);
      }
      v26 += v33;
      if (!--v21)
        goto LABEL_4;
    }
  }
  else
  {
LABEL_4:
    v18(v7, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  sub_232016D88((uint64_t)v7, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  v22 = v30;
  v20(v30, v16, v10);
  v23 = v22;
  v24 = 0;
  return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v23, v24, 1, v10);
}

uint64_t sub_23200FE8C(uint64_t a1)
{
  uint64_t v1;
  double v2;
  uint64_t v3;
  double *v4;
  double v5;
  double v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v2 = *(double *)(a1 + 32);
  v3 = v1 - 1;
  if (v1 != 1)
  {
    v4 = (double *)(a1 + 40);
    do
    {
      v5 = *v4++;
      v6 = v5;
      if (v2 < v5)
        v2 = v6;
      --v3;
    }
    while (v3);
  }
  return *(_QWORD *)&v2;
}

uint64_t sub_23200FED0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  unint64_t v26;
  char v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, unint64_t, uint64_t);

  sub_2320057B8(0, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v29 - v8;
  v10 = sub_2321FDC6C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v29 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  if (!v17)
  {
    v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v18(v9, 1, 1, v10);
    goto LABEL_7;
  }
  v31 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v34 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
  v34(v9, a1 + v31, v10);
  v32 = a1;
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v18(v9, 0, 1, v10);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v19(v9, 1, v10) == 1)
  {
LABEL_7:
    sub_232016D88((uint64_t)v9, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    v23 = a2;
    v24 = 1;
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v23, v24, 1, v10);
  }
  v30 = a2;
  v20 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v20(v16, v9, v10);
  swift_bridgeObjectRetain();
  v21 = v17 - 1;
  if (v21)
  {
    v33 = *(_QWORD *)(v11 + 72);
    v26 = v32 + v33 + v31;
    while (1)
    {
      v34(v7, v26, v10);
      v18(v7, 0, 1, v10);
      if (v19(v7, 1, v10) == 1)
        break;
      v20(v14, v7, v10);
      sub_232000590((unint64_t *)&qword_2541AF160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
      v27 = sub_232200E34();
      v28 = *(void (**)(char *, uint64_t))(v11 + 8);
      if ((v27 & 1) != 0)
      {
        v28(v16, v10);
        v20(v16, v14, v10);
      }
      else
      {
        v28(v14, v10);
      }
      v26 += v33;
      if (!--v21)
        goto LABEL_4;
    }
  }
  else
  {
LABEL_4:
    v18(v7, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  sub_232016D88((uint64_t)v7, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  v22 = v30;
  v20(v30, v16, v10);
  v23 = v22;
  v24 = 0;
  return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v23, v24, 1, v10);
}

id HKCodableSummaryVisionPrescriptionValue.init(visionPrescription:hasImage:)(void *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id result;
  id v9;
  id v10;
  void *v11;
  double v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;

  v4 = sub_2321FDC6C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    v9 = result;
    v10 = objc_msgSend(a1, sel_dateIssued);
    sub_2321FDC30();

    v11 = (void *)sub_2321FDBF4();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v12 = MEMORY[0x2348FEDA8](v11);

    objc_msgSend(v9, sel_setTimestampData_, v12);
    v13 = objc_msgSend(a1, sel_leftSphere);
    if (v13)
    {
      v14 = v13;
      v15 = objc_msgSend(v13, sel_codableRepresentation);

    }
    else
    {
      v15 = 0;
    }
    objc_msgSend(v9, sel_setLeftEyeSphere_, v15);

    v16 = objc_msgSend(a1, sel_rightSphere);
    if (v16)
    {
      v17 = v16;
      v18 = objc_msgSend(v16, sel_codableRepresentation);

    }
    else
    {
      v18 = 0;
    }
    objc_msgSend(v9, sel_setRightEyeSphere_, v18);

    sub_232003E9C(0, &qword_255F9C070);
    v19 = a1;
    v20 = HKCodablePrescriptionType.init(from:)(v19);
    objc_msgSend(v9, sel_setPrescriptionType_, v20);

    objc_msgSend(v9, sel_setHasImage_, a2 & 1);
    return v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKCodablePrescriptionType.init(from:)(void *a1)
{
  id result;
  id v3;
  id v4;
  id v5;

  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    v3 = result;
    v4 = objc_msgSend(a1, sel_prescriptionType);
    if (v4 == (id)1)
    {
      v5 = (id)HKVisionPrescriptionTypeDetailedLongLocalizedString();
      if (!v5)
      {
        sub_232200EC4();
        v5 = (id)sub_232200E94();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      if (v4 == (id)2)
      {
        objc_msgSend(v3, sel_setContacts_, 1);
        v5 = v3;
LABEL_9:

        return v3;
      }
      v5 = (id)sub_232200E94();
    }
    objc_msgSend(v3, sel_setGlassesDescription_, v5);

    goto LABEL_9;
  }
  __break(1u);
  return result;
}

void HKCodableSummaryVisionPrescriptionValue.timestamp.getter()
{
  sub_2320104FC((SEL *)&selRef_timestampData);
}

void sub_2320104FC(SEL *a1)
{
  void *v1;
  id v2;

  objc_msgSend(v1, *a1);
  v2 = (id)HKDecodeDateForValue();
  sub_2321FDC30();

}

id HKCodableSummaryWalkingSteadinessValue.init(codableQuantity:classification:dataConfiguration:)(void *a1, uint64_t a2, void *a3)
{
  id result;
  id v7;

  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    v7 = result;
    objc_msgSend(v7, sel_setQuantity_, a1);
    objc_msgSend(v7, sel_setClassificationRawValue_, a2);
    objc_msgSend(v7, sel_setLevelViewDataConfiguration_, a3);

    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2320105E8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  objc_class *ObjCClassFromMetadata;
  id v15;
  uint32_t *p_align;
  id v17;
  char v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  double v26;
  double v27;
  id v28;
  id v29;
  double v30;
  double v31;
  double v32;
  id v33;
  double v34;
  id v35;
  double v36;
  double v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  id v48;
  uint64_t v49;
  id v50;
  id v51;
  id v52;
  id v53;
  uint64_t result;
  uint64_t v55;
  void *v56;
  id v57;
  uint64_t v58;
  Class v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v64 = sub_2322002C4();
  v2 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v4 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2321FDC6C();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2322002D0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(a1, sel_quantityType);
  v13 = objc_msgSend(v12, sel_code);

  if (v13 == (id)275)
  {
    ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
    v15 = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_init);
    if (v15)
    {
      p_align = &stru_25010DFE8.align;
      v17 = objc_msgSend(a1, sel_quantity);
      v63 = sub_23220162C();
      if ((v18 & 1) != 0)
      {

        return 0;
      }
      else
      {
        v59 = ObjCClassFromMetadata;
        v60 = v7;
        v57 = v15;
        v58 = v9;
        v61 = v11;
        v19 = sub_232201638();
        v20 = *(_QWORD *)(v19 + 16);
        if (v20)
        {
          v62 = v19;
          v55 = v8;
          v56 = a1;
          v65 = MEMORY[0x24BEE4AF8];
          sub_232013830(0, v20, 0);
          v21 = v65;
          v22 = (void *)objc_opt_self();
          v23 = 0;
          while (1)
          {
            v24 = *(_QWORD *)(v62 + 8 * v23 + 32);
            v25 = (id)HKAppleSleepingBreathingDisturbancesMinimumQuantityForClassification();
            objc_msgSend(v25, sel__value);
            v27 = v26;

            v28 = objc_msgSend(v22, sel_countUnit);
            if (v24 == 1)
            {
              v29 = (id)HKAppleSleepingBreathingDisturbancesMinimumQuantityForClassification();
              objc_msgSend(v29, sel__value);
              v31 = v30;

              v32 = v31 + 29.0;
            }
            else
            {
              if (v24)
                goto LABEL_24;
              v33 = (id)HKAppleSleepingBreathingDisturbancesMinimumQuantityForClassification();
              objc_msgSend(v33, sel__value);
              v32 = v34;

            }
            v35 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v28, v32);

            objc_msgSend(v35, sel__value);
            v37 = v36;

            if (v27 > v37)
              break;
            sub_2322002A0();
            v65 = v21;
            v39 = *(_QWORD *)(v21 + 16);
            v38 = *(_QWORD *)(v21 + 24);
            if (v39 >= v38 >> 1)
            {
              sub_232013830(v38 > 1, v39 + 1, 1);
              v21 = v65;
            }
            ++v23;
            *(_QWORD *)(v21 + 16) = v39 + 1;
            (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v21+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v39, v4, v64);
            if (v20 == v23)
            {
              swift_bridgeObjectRelease();
              v8 = v55;
              a1 = v56;
              p_align = (_DWORD *)(&stru_25010DFE8 + 24);
              goto LABEL_18;
            }
          }
          __break(1u);
          goto LABEL_22;
        }
        swift_bridgeObjectRelease();
LABEL_18:
        sub_232015BA4();
        v41 = v40;
        v43 = v42;
        v44 = objc_msgSend(a1, *((SEL *)p_align + 305));
        objc_msgSend(v44, sel__value);
        v46 = v45;

        v66 = v43;
        v67 = v46;
        v65 = v41;
        sub_232200E28();
        v47 = v61;
        sub_23220027C();
        sub_232003E9C(0, &qword_2541B56B0);
        v48 = objc_msgSend(a1, *((SEL *)p_align + 305));
        v49 = (uint64_t)v60;
        sub_232093434(a1);
        v50 = HKCodableSummaryQuantityValue.init(quantity:date:)(v48, v49);
        v51 = sub_232006C3C();
        v52 = objc_msgSend(objc_allocWithZone(v59), sel_init);
        if (!v52)
          goto LABEL_23;
        v15 = v52;
        v53 = v52;
        objc_msgSend(v53, sel_setQuantity_, v50);
        objc_msgSend(v53, sel_setClassificationRawValue_, v63);
        objc_msgSend(v53, sel_setLevelViewDataConfiguration_, v51);

        (*(void (**)(char *, uint64_t))(v58 + 8))(v47, v8);
      }
    }
    else
    {

    }
    return (uint64_t)v15;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_232201968();
  __break(1u);
  return result;
}

id sub_232010B24(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id result;
  id v7;
  id v8;
  void *v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;

  v2 = sub_2321FDC6C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    v7 = result;
    v8 = objc_msgSend(a1, sel_startDate);
    sub_2321FDC30();

    v9 = (void *)sub_2321FDBF4();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v10 = MEMORY[0x2348FEDA8](v9);

    objc_msgSend(v7, sel_setDateData_, v10);
    objc_msgSend(v7, sel_setReflectiveInterval_, objc_msgSend(a1, sel_reflectiveInterval));
    objc_msgSend(a1, sel_valence);
    objc_msgSend(v7, sel_setValence_);
    v11 = sub_2322012B4();
    v12 = *(_QWORD *)(v11 + 16);
    if (v12)
    {
      v13 = (uint64_t *)(v11 + 32);
      do
      {
        v14 = *v13++;
        objc_msgSend(v7, sel_addLabels_, v14);
        --v12;
      }
      while (v12);
    }
    swift_bridgeObjectRelease();
    v15 = sub_2322012C0();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (uint64_t *)(v15 + 32);
      do
      {
        v18 = *v17++;
        objc_msgSend(v7, sel_addDomains_, v18);
        --v16;
      }
      while (v16);
    }

    swift_bridgeObjectRelease();
    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_232010CF0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id result;
  id v7;
  id v8;
  void *v9;
  double v10;
  uint64_t v11;

  v2 = sub_2321FDC6C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    v7 = result;
    v8 = objc_msgSend(a1, sel_startDate);
    sub_2321FDC30();

    v9 = (void *)sub_2321FDBF4();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v10 = MEMORY[0x2348FEDA8](v9);

    objc_msgSend(v7, sel_setDateData_, v10);
    objc_msgSend(v7, sel_setScore_, objc_msgSend(a1, sel_score));
    objc_msgSend(v7, sel_setRisk_, objc_msgSend(a1, sel_risk));

    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_232010E44(void *a1, void *a2, uint64_t a3)
{
  id result;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  double v14;
  uint64_t v15;

  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    v7 = result;
    sub_232003E9C(0, &qword_2541B7968);
    v8 = v7;
    v9 = a1;
    v10 = (void *)sub_23220147C();
    objc_msgSend(v8, sel_setMinimumValue_, v10);

    v11 = a2;
    v12 = (void *)sub_23220147C();
    objc_msgSend(v8, sel_setMaximumValue_, v12);

    v13 = (void *)sub_2321FDBF4();
    v14 = MEMORY[0x2348FEDA8]();

    objc_msgSend(v8, sel_setDateData_, v14);
    v15 = sub_2321FDC6C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(a3, v15);
    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKCodableSummaryTrendValue.init(engineOutput:coveredDateRange:dataPresencePoints:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id result;
  void *v9;
  uint64_t (*v10)(uint64_t);
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;

  sub_2320057B8(0, &qword_2541B2AA8, (uint64_t (*)(uint64_t))MEMORY[0x24BE4B528], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v16 - v6;
  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    v9 = result;
    v10 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4B528];
    sub_232016080(a1, (uint64_t)v7, &qword_2541B2AA8, (uint64_t (*)(uint64_t))MEMORY[0x24BE4B528]);
    v11 = v9;
    HKCodableSummaryTrendValue.engineOutput.setter((uint64_t)v7);
    sub_23220021C();
    v12 = (void *)sub_232200E94();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_setCoveredDateRangeRawValue_, v12);

    sub_23200C4F8(a3, &qword_2541B0D40);
    swift_bridgeObjectRelease();
    v13 = objc_allocWithZone(MEMORY[0x24BDBCEB8]);
    v14 = (void *)sub_232201020();
    swift_bridgeObjectRelease();
    v15 = objc_msgSend(v13, sel_initWithArray_, v14);

    objc_msgSend(v11, sel_setDataPresencePoints_, v15);
    sub_232016D88(a1, &qword_2541B2AA8, v10);
    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t HKCodableSummaryTrendValue.engineOutput.setter(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;

  v2 = v1;
  ObjectType = swift_getObjectType();
  v4 = sub_23220039C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4B528];
  sub_2320057B8(0, &qword_2541B2AA8, (uint64_t (*)(uint64_t))MEMORY[0x24BE4B528], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v22 - v10;
  v12 = sub_2321FFF04();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232016080(a1, (uint64_t)v11, &qword_2541B2AA8, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    v16 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4B528];
    sub_232016D88((uint64_t)v11, &qword_2541B2AA8, (uint64_t (*)(uint64_t))MEMORY[0x24BE4B528]);
    objc_msgSend(v2, sel_setAnalysisData_, 0);
    return sub_232016D88(a1, &qword_2541B2AA8, v16);
  }
  else
  {
    v23 = v2;
    v24 = v7;
    v26 = v4;
    v27 = a1;
    v25 = v5;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    sub_2321FD81C();
    swift_allocObject();
    sub_2321FD810();
    sub_232000590(&qword_2541AF1A0, (uint64_t (*)(uint64_t))MEMORY[0x24BE4B528], MEMORY[0x24BE4B530]);
    v18 = sub_2321FD804();
    v20 = v19;
    swift_release();
    v21 = (void *)sub_2321FDAC8();
    sub_232003ED4(v18, v20);
    objc_msgSend(v23, sel_setAnalysisData_, v21);

    sub_232016D88(v27, &qword_2541B2AA8, (uint64_t (*)(uint64_t))MEMORY[0x24BE4B528]);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
}

void HKCodableSummaryTrendValue.coveredDateRange.setter(char a1)
{
  void *v1;
  id v2;

  if (a1 == 6)
  {
    v2 = 0;
    objc_msgSend(v1, sel_setCoveredDateRangeRawValue_, 0);
  }
  else
  {
    sub_23220021C();
    v2 = (id)sub_232200E94();
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_setCoveredDateRangeRawValue_, v2);
  }

}

uint64_t HKCodableSummaryTrendValue.engineOutput.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_getObjectType();
  v3 = sub_23220039C();
  MEMORY[0x24BDAC7A8](v3);
  if (objc_msgSend(v1, sel_hasAnalysisData)
    && (v4 = objc_msgSend(v1, sel_analysisData)) != 0)
  {
    v5 = v4;
    v6 = sub_2321FDAD4();
    v8 = v7;

    sub_2321FD7F8();
    swift_allocObject();
    sub_2321FD7EC();
    v9 = sub_2321FFF04();
    sub_232000590(&qword_2541AF1A8, (uint64_t (*)(uint64_t))MEMORY[0x24BE4B528], MEMORY[0x24BE4B538]);
    sub_2321FD7E0();
    sub_232003ED4(v6, v8);
    swift_release();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, 0, 1, v9);
  }
  else
  {
    v10 = sub_2321FFF04();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 1, 1, v10);
  }
}

void (*HKCodableSummaryTrendValue.engineOutput.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  size_t v4;
  void *v5;

  *a1 = v1;
  sub_2320057B8(0, &qword_2541B2AA8, (uint64_t (*)(uint64_t))MEMORY[0x24BE4B528], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64);
  a1[1] = malloc(v4);
  v5 = malloc(v4);
  a1[2] = v5;
  HKCodableSummaryTrendValue.engineOutput.getter((uint64_t)v5);
  return sub_232011A44;
}

void sub_232011A44(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  uint64_t (*v4)(uint64_t);

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4B528];
    sub_232016080(*(_QWORD *)(a1 + 16), (uint64_t)v2, &qword_2541B2AA8, (uint64_t (*)(uint64_t))MEMORY[0x24BE4B528]);
    HKCodableSummaryTrendValue.engineOutput.setter((uint64_t)v2);
    sub_232016D88((uint64_t)v3, &qword_2541B2AA8, v4);
  }
  else
  {
    HKCodableSummaryTrendValue.engineOutput.setter(*(_QWORD *)(a1 + 16));
  }
  free(v3);
  free(v2);
}

uint64_t HKCodableSummaryTrendValue.coveredDateRange.getter()
{
  void *v0;
  id v1;
  void *v2;

  if (objc_msgSend(v0, sel_hasCoveredDateRangeRawValue))
  {
    v1 = objc_msgSend(v0, sel_coveredDateRangeRawValue);
    if (v1)
    {
      v2 = v1;
      sub_232200EC4();

      JUMPOUT(0x2348FD38CLL);
    }
  }
  return 6;
}

void (*HKCodableSummaryTrendValue.coveredDateRange.modify(_QWORD *a1))(uint64_t a1)
{
  void *v1;
  char *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  *a1 = v1;
  v2 = (char *)(a1 + 1);
  if (objc_msgSend(v1, sel_hasCoveredDateRangeRawValue)
    && (v3 = objc_msgSend(v1, sel_coveredDateRangeRawValue)) != 0)
  {
    v4 = v3;
    v5 = sub_232200EC4();
    v7 = v6;

    v8 = MEMORY[0x2348FD38C](v5, v7);
  }
  else
  {
    v8 = 6;
  }
  *v2 = v8;
  return sub_232011BDC;
}

void sub_232011BDC(uint64_t a1)
{
  id v2;
  id v3;
  id v4;

  if (*(_BYTE *)(a1 + 8) == 6)
  {
    v2 = 0;
  }
  else
  {
    sub_23220021C();
    v3 = (id)sub_232200E94();
    swift_bridgeObjectRelease();
    v2 = v3;
  }
  v4 = v2;
  objc_msgSend(*(id *)a1, sel_setCoveredDateRangeRawValue_);

}

id HKCodableSummaryTrendResults.init(values:version:)(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id result;
  id v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_2320057B8(0, &qword_2541B28D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - v5;
  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    v8 = result;
    sub_23200C4F8(a1, &qword_2541B0C88);
    swift_bridgeObjectRelease();
    v9 = objc_allocWithZone(MEMORY[0x24BDBCEB8]);
    v10 = (void *)sub_232201020();
    swift_bridgeObjectRelease();
    v11 = objc_msgSend(v9, sel_initWithArray_, v10);

    objc_msgSend(v8, sel_setTrendValues_, v11);
    v12 = sub_2321FE6D4();
    v13 = *(_QWORD *)(v12 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v6, a2, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v6, 0, 1, v12);
    sub_232016040(&qword_2541B0CD8, &qword_2541B0CE0, 0x24BE4A528, (uint64_t)&protocol conformance descriptor for HKCodableSummaryTrendResults);
    sub_2321FF268();

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a2, v12);
    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t HKCodableSummaryTrendResults.trendValuesArray.getter()
{
  return sub_232011FF4(&qword_2541B0C88);
}

id HKCodableSummaryCorrelatedTrendResults.init(values:version:)(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id result;
  id v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_2320057B8(0, &qword_2541B28D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - v5;
  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    v8 = result;
    sub_23200C4F8(a1, &qword_255F9C078);
    swift_bridgeObjectRelease();
    v9 = objc_allocWithZone(MEMORY[0x24BDBCEB8]);
    v10 = (void *)sub_232201020();
    swift_bridgeObjectRelease();
    v11 = objc_msgSend(v9, sel_initWithArray_, v10);

    objc_msgSend(v8, sel_setTrendValues_, v11);
    v12 = sub_2321FE6D4();
    v13 = *(_QWORD *)(v12 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v6, a2, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v6, 0, 1, v12);
    sub_232016040(&qword_255F9C068, &qword_255F9C060, 0x24BE4A4A8, (uint64_t)&protocol conformance descriptor for HKCodableSummaryCorrelatedTrendResults);
    sub_2321FF268();

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a2, v12);
    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t HKCodableSummaryCorrelatedTrendResults.trendValuesArray.getter()
{
  return sub_232011FF4(&qword_255F9C078);
}

uint64_t sub_232011FF4(unint64_t *a1)
{
  void *v1;
  id v3;
  void *v4;

  v3 = objc_msgSend(v1, sel_trendValues);
  if (v3)
  {
    v4 = v3;
    sub_232003E9C(0, a1);
    sub_23220102C();

  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

id HKCodableSummaryCorrelatedTrendValue.init(objectType:trendValue:)(void *a1, void *a2)
{
  id v4;
  id result;
  id v6;
  void *v7;

  v4 = objc_msgSend(a1, sel_identifier);
  sub_232200EC4();

  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    v6 = result;
    v7 = (void *)sub_232200E94();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setObjectTypeIdentifier_, v7);

    objc_msgSend(v6, sel_setTrendValue_, a2);
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKCodableSummaryCorrelatedTrendValue.init(objectTypeIdentifier:trendValue:)(uint64_t a1, uint64_t a2, void *a3)
{
  id result;
  id v5;
  void *v6;

  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    v5 = result;
    v6 = (void *)sub_232200E94();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setObjectTypeIdentifier_, v6);

    objc_msgSend(v5, sel_setTrendValue_, a3);
    return v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKCodableSummaryCorrelatedTrendValue.objectType.getter()
{
  void *v0;
  void *v1;
  id v2;
  id v3;

  if (!objc_msgSend(v0, sel_hasObjectTypeIdentifier))
    return 0;
  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v0, sel_objectTypeIdentifier);
  v3 = objc_msgSend(v1, sel__typeWithIdentifier_, v2);

  return v3;
}

uint64_t HKCodableChartSharableModel.values(for:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  ObjectType = swift_getObjectType();
  v6 = sub_23220039C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a1)
  {
    case 3:
      if (!objc_msgSend(v2, sel_hasSixMonthData)
        || !objc_msgSend(v2, sel_hasSixMonthDateInterval))
      {
        goto LABEL_22;
      }
      v10 = objc_msgSend(v2, sel_sixMonthData);
      if (!v10)
      {
        __break(1u);
        goto LABEL_28;
      }
      *a2 = v10;
      v11 = objc_msgSend(v2, sel_sixMonthDateInterval);
      if (v11)
      {
LABEL_21:
        v15 = v11;
        sub_2320160D8();
        v17 = v16;
        sub_232201500();

        return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a2, 0, 1, v17);
      }
      __break(1u);
LABEL_7:
      if (!objc_msgSend(v2, sel_hasMonthData)
        || !objc_msgSend(v2, sel_hasMonthDateInterval))
      {
        goto LABEL_22;
      }
      v12 = objc_msgSend(v2, sel_monthData);
      if (!v12)
      {
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      *a2 = v12;
      v11 = objc_msgSend(v2, sel_monthDateInterval);
      if (v11)
        goto LABEL_21;
      __break(1u);
LABEL_12:
      if (!objc_msgSend(v2, sel_hasWeekData) || !objc_msgSend(v2, sel_hasWeekDateInterval))
        goto LABEL_22;
      v13 = objc_msgSend(v2, sel_weekData);
      if (!v13)
      {
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      *a2 = v13;
      v11 = objc_msgSend(v2, sel_weekDateInterval);
      if (v11)
        goto LABEL_21;
      __break(1u);
LABEL_17:
      if (objc_msgSend(v2, sel_hasDayData) && objc_msgSend(v2, sel_hasDayDateInterval))
      {
        v14 = objc_msgSend(v2, sel_dayData);
        if (v14)
        {
          *a2 = v14;
          v11 = objc_msgSend(v2, sel_dayDateInterval);
          if (v11)
            goto LABEL_21;
LABEL_31:
          __break(1u);
          JUMPOUT(0x2320126F8);
        }
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
LABEL_22:
      sub_2320160D8();
      return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a2, 1, 1, v19);
    case 4:
      goto LABEL_7;
    case 5:
      goto LABEL_12;
    case 6:
      goto LABEL_17;
    default:
      sub_232200354();
      v20 = sub_232200390();
      v21 = sub_2322012E4();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = swift_slowAlloc();
        v30 = swift_slowAlloc();
        v31 = v30;
        *(_DWORD *)v22 = 136315394;
        v32 = ObjectType;
        swift_getMetatypeMetadata();
        v23 = sub_232200F00();
        v32 = sub_232013174(v23, v24, &v31);
        sub_232201710();
        swift_bridgeObjectRelease();
        *(_WORD *)(v22 + 12) = 2080;
        v32 = a1;
        type metadata accessor for HKTimeScope(0);
        v25 = sub_232200F00();
        v32 = sub_232013174(v25, v26, &v31);
        sub_232201710();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_231FFB000, v20, v21, "[%s]: Unsupported time scope for charts: %s", (uint8_t *)v22, 0x16u);
        v27 = v30;
        swift_arrayDestroy();
        MEMORY[0x2348FF468](v27, -1, -1);
        MEMORY[0x2348FF468](v22, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      sub_2320160D8();
      return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(a2, 1, 1, v28);
  }
}

Swift::String __swiftcall HKCodableChartSharableModel.logModelBytes()()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  unsigned int v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  unsigned int v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  unsigned int v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  unsigned int v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  Swift::String result;

  v1 = v0;
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1490]), sel_init);
  objc_msgSend(v2, sel_setCountStyle_, 1);
  if (objc_msgSend(v0, sel_hasDayData))
  {
    v3 = objc_msgSend(v0, sel_dayData);
    if (!v3)
    {
      __break(1u);
      goto LABEL_27;
    }
    v4 = v3;
    v5 = objc_msgSend(v3, sel_hasQueryDataObject);

    if (v5)
    {
      v6 = objc_msgSend(v1, sel_dayData);
      if (!v6)
      {
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      v7 = v6;
      v8 = objc_msgSend(v6, sel_queryDataObject);

      if (v8)
      {
        sub_2321FDAD4();
        v10 = v9;

        __asm { BR              X10 }
      }
    }
  }
  if (!objc_msgSend(v1, sel_hasWeekData))
    goto LABEL_13;
  v11 = objc_msgSend(v1, sel_weekData);
  if (!v11)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v12 = v11;
  v13 = objc_msgSend(v11, sel_hasQueryDataObject);

  if (v13)
  {
    v14 = objc_msgSend(v1, sel_weekData);
    if (!v14)
    {
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    v15 = v14;
    v16 = objc_msgSend(v14, sel_queryDataObject);

    if (v16)
    {
      sub_2321FDAD4();
      v18 = v17;

      __asm { BR              X10 }
    }
  }
LABEL_13:
  if (!objc_msgSend(v1, sel_hasMonthData))
    goto LABEL_19;
  v19 = objc_msgSend(v1, sel_monthData);
  if (!v19)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v20 = v19;
  v21 = objc_msgSend(v19, sel_hasQueryDataObject);

  if (v21)
  {
    v22 = objc_msgSend(v1, sel_monthData);
    if (!v22)
    {
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    v23 = v22;
    v24 = objc_msgSend(v22, sel_queryDataObject);

    if (v24)
    {
      sub_2321FDAD4();
      v26 = v25;

      __asm { BR              X10 }
    }
  }
LABEL_19:
  if (!objc_msgSend(v1, sel_hasSixMonthData))
    goto LABEL_25;
  v27 = objc_msgSend(v1, sel_sixMonthData);
  if (!v27)
    goto LABEL_29;
  v28 = v27;
  v29 = objc_msgSend(v27, sel_hasQueryDataObject);

  if (!v29)
    goto LABEL_25;
  v30 = objc_msgSend(v1, sel_sixMonthData);
  if (!v30)
  {
LABEL_33:
    __break(1u);
    JUMPOUT(0x232012D98);
  }
  v31 = v30;
  v32 = objc_msgSend(v30, sel_queryDataObject);

  if (v32)
  {
    sub_2321FDAD4();
    v34 = v33;

    __asm { BR              X10 }
  }
LABEL_25:

  v35 = 0;
  v36 = (void *)0xE000000000000000;
  result._object = v36;
  result._countAndFlagsBits = v35;
  return result;
}

uint64_t sub_232012DD8()
{
  uint64_t v0;

  v0 = sub_2321FE6D4();
  sub_232016724(v0, qword_2541BF4F8);
  sub_23201670C(v0, (uint64_t)qword_2541BF4F8);
  return sub_2321FE6B0();
}

id sub_232012E28(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id result;
  void *v6;
  id v7;
  char **v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_2320057B8(0, &qword_2541B28D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v12 - v3;
  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (!result)
  {
    __break(1u);
    return result;
  }
  v6 = result;
  if (a1 == 2)
  {
    a1 = 1;
    objc_msgSend(result, sel_setHasIsUsingWheelchair_, 1);
  }
  else
  {
    if (a1 != 1)
    {
      v7 = result;
      if (a1)
        a1 = 0;
      v8 = &selRef_setHasIsUsingWheelchair_;
      goto LABEL_11;
    }
    objc_msgSend(result, sel_setHasIsUsingWheelchair_, 1);
    a1 = 0;
  }
  v8 = &selRef_setIsUsingWheelchair_;
LABEL_11:
  objc_msgSend(v6, *v8, a1);
  if (qword_2541B0C90 != -1)
    swift_once();
  v9 = sub_2321FE6D4();
  v10 = sub_23201670C(v9, (uint64_t)qword_2541BF4F8);
  v11 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v4, v10, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v4, 0, 1, v9);
  sub_232016040(&qword_2541B0C98, (unint64_t *)&qword_2541B0CA0, 0x24BE4A570, (uint64_t)&protocol conformance descriptor for HKCodableWheelchairSetting);
  sub_2321FF268();

  return v6;
}

uint64_t sub_232012FF0()
{
  return swift_slowAlloc();
}

uint64_t sub_232012FF8(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

void sub_23201302C()
{
  JUMPOUT(0x2348FF468);
}

uint64_t sub_232013038(uint64_t a1)
{
  uint64_t result;

  if (a1 < 0)
  {
    result = sub_23220195C();
    __break(1u);
  }
  else if (a1)
  {
    sub_232016A8C(0, (unint64_t *)&qword_2541B5888);
    result = sub_232201068();
    *(_QWORD *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

uint64_t sub_2320130E4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_232013104(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_232013174(v6, v7, a3);
  v8 = *a1 + 8;
  sub_232201710();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_232013174(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_232013244(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_232015B68((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_232015B68((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_232016AFC((uint64_t)v12);
  return v7;
}

uint64_t sub_232013244(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_23220171C();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_2320133FC(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_2322018D8();
  if (!v8)
  {
    sub_23220195C();
    __break(1u);
LABEL_17:
    result = sub_2322019E0();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_2320133FC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_232013490(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_232013604(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_232013604(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_232013490(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_23204E4C8(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_2322018A8();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_23220195C();
      __break(1u);
LABEL_10:
      v2 = sub_232200F60();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_2322019E0();
    __break(1u);
LABEL_14:
    result = sub_23220195C();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

uint64_t sub_232013604(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_232000608(0, &qword_2541B5858, MEMORY[0x24BEE4260], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_2322019E0();
  __break(1u);
  return result;
}

_BYTE **sub_232013764(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

uint64_t sub_232013774(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23201455C(a1, a2, a3, (_QWORD *)*v3, &qword_2541B57B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47D40]);
  *v3 = result;
  return result;
}

uint64_t sub_2320137A0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23201455C(a1, a2, a3, (_QWORD *)*v3, &qword_2541B57A0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47758]);
  *v3 = result;
  return result;
}

uint64_t sub_2320137CC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23201455C(a1, a2, a3, (_QWORD *)*v3, &qword_2541B5780, (uint64_t (*)(uint64_t))sub_232016B30);
  *v3 = result;
  return result;
}

uint64_t sub_2320137F8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_232013AF4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_232013814(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_232013C78(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_232013830(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23201455C(a1, a2, a3, (_QWORD *)*v3, &qword_2541B71A8, (uint64_t (*)(uint64_t))MEMORY[0x24BE4BC18]);
  *v3 = result;
  return result;
}

uint64_t sub_23201385C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2320143F4(a1, a2, a3, *v3, &qword_2541B5838, MEMORY[0x24BEE1768]);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_232013888(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23201455C(a1, a2, a3, (_QWORD *)*v3, &qword_2541B5790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  *v3 = result;
  return result;
}

uint64_t sub_2320138B4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_232013DFC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2320138D0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23201474C(a1, a2, a3, (_QWORD *)*v3, (void (*)(_QWORD))sub_23201691C, (unint64_t *)&qword_2541B5888);
  *v3 = result;
  return result;
}

uint64_t sub_232013904(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23201455C(a1, a2, a3, (_QWORD *)*v3, &qword_2541B78B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0]);
  *v3 = result;
  return result;
}

uint64_t sub_232013930(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23201455C(a1, a2, a3, (_QWORD *)*v3, &qword_255F9C0C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FE20]);
  *v3 = result;
  return result;
}

uint64_t sub_23201395C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_232013F8C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_232013978(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23201455C(a1, a2, a3, (_QWORD *)*v3, &qword_2541B7178, (uint64_t (*)(uint64_t))MEMORY[0x24BE40238]);
  *v3 = result;
  return result;
}

uint64_t sub_2320139A4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2320140E0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2320139C0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23201425C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_2320139DC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2320143F4(a1, a2, a3, *v3, &qword_2541B5850, MEMORY[0x24BEE4008]);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_232013A08(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23201455C(a1, a2, a3, (_QWORD *)*v3, &qword_2541B5788, (uint64_t (*)(uint64_t))sub_232016768);
  *v3 = result;
  return result;
}

uint64_t sub_232013A34(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23201474C(a1, a2, a3, (_QWORD *)*v3, (void (*)(_QWORD))sub_232016874, (unint64_t *)&qword_2541B28F0);
  *v3 = result;
  return result;
}

uint64_t sub_232013A68(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23201455C(a1, a2, a3, (_QWORD *)*v3, &qword_2541B5818, (uint64_t (*)(uint64_t))sub_232016980);
  *v3 = result;
  return result;
}

uint64_t sub_232013A94(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23201455C(a1, a2, a3, (_QWORD *)*v3, &qword_255F9C0B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE48068]);
  *v3 = result;
  return result;
}

uint64_t sub_232013AC0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23201474C(a1, a2, a3, (_QWORD *)*v3, (void (*)(_QWORD))sub_232016810, &qword_2541B28E8);
  *v3 = result;
  return result;
}

uint64_t sub_232013AF4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_232000608(0, &qword_2541B5830, MEMORY[0x24BEE13C8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_2322019E0();
  __break(1u);
  return result;
}

uint64_t sub_232013C64(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23201455C(a1, a2, a3, a4, &qword_255F9C090, (uint64_t (*)(uint64_t))type metadata accessor for TrendNotificationModel);
}

uint64_t sub_232013C78(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_232000608(0, &qword_2541B5868, MEMORY[0x24BEE4AD8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_2322019E0();
  __break(1u);
  return result;
}

uint64_t sub_232013DFC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_232000608(0, (unint64_t *)&qword_2541B78C0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_2322019E0();
  __break(1u);
  return result;
}

uint64_t sub_232013F78(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23201455C(a1, a2, a3, a4, &qword_2541B71C0, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
}

uint64_t sub_232013F8C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_232016C04();
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  v15 = 16 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    memcpy(v13, v14, v15);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_2322019E0();
  __break(1u);
  return result;
}

uint64_t sub_2320140E0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_232000608(0, qword_255F9C0C8, (uint64_t)&type metadata for LocalizationOverride, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_2322019E0();
  __break(1u);
  return result;
}

uint64_t sub_23201425C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_2320057B8(0, &qword_2541B5828, (uint64_t (*)(uint64_t))sub_232016DCC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (_QWORD *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8)
      memmove(v10 + 4, a4 + 4, 32 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    sub_232016DCC();
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_2322019E0();
  __break(1u);
  return result;
}

uint64_t sub_2320143F4(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v8 = *((_QWORD *)a4 + 3);
    v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v9 = a2;
    }
  }
  else
  {
    v9 = a2;
  }
  v10 = *((_QWORD *)a4 + 2);
  if (v9 <= v10)
    v11 = *((_QWORD *)a4 + 2);
  else
    v11 = v9;
  if (v11)
  {
    sub_232000608(0, a5, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v12 = (char *)swift_allocObject();
    v13 = j__malloc_size(v12);
    v14 = v13 - 32;
    if (v13 < 32)
      v14 = v13 - 25;
    *((_QWORD *)v12 + 2) = v10;
    *((_QWORD *)v12 + 3) = 2 * (v14 >> 3);
  }
  else
  {
    v12 = (char *)MEMORY[0x24BEE4AF8];
  }
  v15 = v12 + 32;
  v16 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v12 != a4 || v15 >= &v16[8 * v10])
      memmove(v15, v16, 8 * v10);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v16 >= &v15[8 * v10] || v15 >= &v16[8 * v10])
  {
    memcpy(v15, v16, 8 * v10);
LABEL_30:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_32:
  result = sub_2322019E0();
  __break(1u);
  return result;
}

uint64_t sub_23201455C(char a1, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  sub_2320057B8(0, a5, a6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_2322019E0();
  __break(1u);
  return result;
}

uint64_t sub_23201474C(char a1, int64_t a2, char a3, _QWORD *a4, void (*a5)(_QWORD), unint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    a5(0);
    v13 = (_QWORD *)swift_allocObject();
    v14 = j__malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v15 = (unint64_t)(v13 + 4);
  v16 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11)
      memmove(v13 + 4, a4 + 4, 40 * v11);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    sub_232016A8C(0, a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  result = sub_2322019E0();
  __break(1u);
  return result;
}

void sub_2320148FC(uint64_t a1, int a2, unint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  void *v31;
  id v32;
  unint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, unint64_t);
  void (*v41)(char *, char *, uint64_t);
  unint64_t v42;
  char v43;
  uint64_t v44;
  _BOOL8 v45;
  uint64_t v46;
  char v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[2];
  uint64_t v55;
  void (*v56)(char *, char *, unint64_t);
  int v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t *v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  unint64_t v68;
  id v69;

  v62 = a3;
  v6 = sub_2321FDFD8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v66 = (char *)v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2321FDEC4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232016D1C();
  v14 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a1 + 16);
  if (v18)
  {
    v57 = a2;
    v54[1] = v3;
    v55 = v18;
    v19 = &v17[*(int *)(v14 + 48)];
    v54[0] = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v20 = a1 + v54[0];
    v60 = *(_QWORD *)(v15 + 72);
    v58 = a1;
    swift_bridgeObjectRetain();
    sub_23200054C(v20, (uint64_t)v17, (uint64_t (*)(_QWORD))sub_232016D1C);
    v64 = v9;
    v65 = v10;
    v56 = *(void (**)(char *, char *, unint64_t))(v10 + 32);
    v56(v12, v17, v9);
    v63 = v7;
    v21 = *(unint64_t **)(v7 + 32);
    v59 = v19;
    v61 = v6;
    ((void (*)(char *, char *, uint64_t))v21)(v66, v19, v6);
    v22 = *v62;
    v24 = sub_23216ABE8((uint64_t)v12);
    v25 = *(_QWORD *)(v22 + 16);
    v26 = (v23 & 1) == 0;
    v27 = v25 + v26;
    if (__OFADD__(v25, v26))
      goto LABEL_23;
    LOBYTE(v9) = v23;
    if (*(_QWORD *)(v22 + 24) >= v27)
    {
      v30 = v65;
      if ((v57 & 1) == 0)
        goto LABEL_25;
      goto LABEL_9;
    }
    sub_2320A500C(v27, v57 & 1);
    v28 = sub_23216ABE8((uint64_t)v12);
    if ((v9 & 1) == (v29 & 1))
    {
      v24 = v28;
      while (1)
      {
        v30 = v65;
LABEL_9:
        if ((v9 & 1) != 0)
          break;
        v33 = v21;
        v21 = v62;
        v9 = *v62;
        *(_QWORD *)(*v62 + 8 * (v24 >> 6) + 64) |= 1 << v24;
        v56((char *)(*(_QWORD *)(v9 + 48) + *(_QWORD *)(v30 + 72) * v24), v12, v64);
        v34 = v61;
        ((void (*)(unint64_t, char *, uint64_t))v33)(*(_QWORD *)(v9 + 56) + *(_QWORD *)(v63 + 72) * v24, v66, v61);
        v35 = *(_QWORD *)(v9 + 16);
        v36 = __OFADD__(v35, 1);
        v37 = v35 + 1;
        if (!v36)
        {
          *(_QWORD *)(v9 + 16) = v37;
          v38 = v55 - 1;
          if (v55 == 1)
          {
LABEL_22:
            swift_bridgeObjectRelease_n();
            return;
          }
          v24 = v58 + v60 + v54[0];
          while (1)
          {
            sub_23200054C(v24, (uint64_t)v17, (uint64_t (*)(_QWORD))sub_232016D1C);
            v39 = v34;
            v40 = *(void (**)(char *, char *, unint64_t))(v65 + 32);
            v40(v12, v17, v64);
            v41 = *(void (**)(char *, char *, uint64_t))(v63 + 32);
            v41(v66, v59, v39);
            v42 = *v21;
            v9 = sub_23216ABE8((uint64_t)v12);
            v44 = *(_QWORD *)(v42 + 16);
            v45 = (v43 & 1) == 0;
            v46 = v44 + v45;
            if (__OFADD__(v44, v45))
              break;
            v47 = v43;
            if (*(_QWORD *)(v42 + 24) < v46)
            {
              sub_2320A500C(v46, 1);
              v48 = sub_23216ABE8((uint64_t)v12);
              if ((v47 & 1) != (v49 & 1))
                goto LABEL_26;
              v9 = v48;
            }
            v50 = v65;
            if ((v47 & 1) != 0)
              goto LABEL_10;
            v21 = v62;
            v51 = (_QWORD *)*v62;
            *(_QWORD *)(*v62 + 8 * (v9 >> 6) + 64) |= 1 << v9;
            v40((char *)(v51[6] + *(_QWORD *)(v50 + 72) * v9), v12, v64);
            v34 = v61;
            v41((char *)(v51[7] + *(_QWORD *)(v63 + 72) * v9), v66, v61);
            v52 = v51[2];
            v36 = __OFADD__(v52, 1);
            v53 = v52 + 1;
            if (v36)
              goto LABEL_24;
            v51[2] = v53;
            v24 += v60;
            if (!--v38)
              goto LABEL_22;
          }
LABEL_23:
          __break(1u);
        }
LABEL_24:
        __break(1u);
LABEL_25:
        sub_2320A4124();
      }
LABEL_10:
      v31 = (void *)swift_allocError();
      swift_willThrow();
      v69 = v31;
      v32 = v31;
      sub_232016A8C(0, (unint64_t *)&qword_2541B78D0);
      if ((swift_dynamicCast() & 1) != 0)
        goto LABEL_27;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v66, v61);
      (*(void (**)(char *, unint64_t))(v65 + 8))(v12, v64);
      swift_bridgeObjectRelease();

    }
    else
    {
LABEL_26:
      sub_232201B30();
      __break(1u);
LABEL_27:
      v67 = 0;
      v68 = 0xE000000000000000;
      sub_23220189C();
      sub_232200F48();
      sub_232201920();
      sub_232200F48();
      sub_232201968();
      __break(1u);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_232014E50(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_232014EF0(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 80);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v1 = *(_QWORD *)(a1 + 88);
  if (v1)
  {
    v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4)
    v7 = 4;
  v8 = v7 - 4;
  v9 = (unint64_t *)(a1 + 96);
  v2 = 192;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t _sSo28HKCodableSummaryCurrentValueC9SummariesE4KindO03rawD0AESgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_232201B00();
  swift_bridgeObjectRelease();
  if (v0 >= 0x16)
    return 22;
  else
    return v0;
}

void sub_232014FF0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23201501C()
{
  return sub_232003E9C(0, &qword_2541AF0A8);
}

id sub_2320151CC(uint64_t a1, unint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  id result;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  void *v39;
  uint64_t (*v40)(uint64_t);
  uint64_t v41;
  _QWORD v42[3];
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  id v47;
  uint64_t v48;

  v8 = v7;
  v43 = a5;
  v48 = a4;
  v14 = sub_23220039C();
  v42[1] = *(_QWORD *)(v14 - 8);
  v42[2] = v14;
  MEMORY[0x24BDAC7A8](v14);
  v45 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B28D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v42 - v18;
  sub_2320057B8(0, (unint64_t *)&qword_2541B2A70, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0], v16);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)v42 - v21;
  v46 = sub_2321FFD78();
  v23 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v25 = (char *)v42 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = v8;
  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    v47 = result;
    if (a2 >> 60 != 15)
    {
      sub_232016B1C(a1, a2);
      v27 = v19;
      v28 = v23;
      v29 = a6;
      v30 = (void *)sub_2321FDAC8();
      objc_msgSend(v47, sel_setValueData_, v30);

      a6 = v29;
      v23 = v28;
      v19 = v27;
      sub_23201602C(a1, a2);
    }
    v31 = v47;
    if (a3 != 22)
    {
      HKCodableSummaryCurrentValue.Kind.rawValue.getter(a3);
      v32 = (void *)sub_232200E94();
      swift_bridgeObjectRelease();
      objc_msgSend(v31, sel_setKindRawValue_, v32);

    }
    if (a6)
      objc_msgSend(v31, sel_setSupplementaryValue_, a6);
    if (a7)
    {
      v33 = (void *)sub_232200DBC();
      swift_bridgeObjectRelease();
      v34 = objc_msgSend(v33, sel_codableMetadata);

      objc_msgSend(v31, sel_setMetadataDictionary_, v34);
    }
    sub_232016080(v48, (uint64_t)v22, (unint64_t *)&qword_2541B2A70, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0]);
    v35 = v46;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v22, 1, v46) == 1)
    {
      sub_232016D88((uint64_t)v22, (unint64_t *)&qword_2541B2A70, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0]);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v25, v22, v35);
      sub_2321FD81C();
      swift_allocObject();
      sub_2321FD810();
      sub_232000590(&qword_2541AF198, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0], MEMORY[0x24BE4ADB0]);
      v36 = sub_2321FD804();
      v38 = v37;
      swift_release();
      v39 = (void *)sub_2321FDAC8();
      sub_232003ED4(v36, v38);
      objc_msgSend(v31, sel_setQueryConfigurationData_, v39);

      (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v35);
    }
    v40 = (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70];
    v41 = v43;
    sub_232016080(v43, (uint64_t)v19, &qword_2541B28D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70]);
    sub_232016040((unint64_t *)&qword_2541B0CC8, &qword_2541B0CD0, 0x24BE4A4B8, (uint64_t)&protocol conformance descriptor for HKCodableSummaryCurrentValue);
    sub_2321FF268();

    sub_232016D88(v41, &qword_2541B28D0, v40);
    sub_232016D88(v48, (unint64_t *)&qword_2541B2A70, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0]);
    return v31;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_232015828(uint64_t a1, unint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  uint64_t (*v30)(uint64_t);
  uint64_t (*v31)(uint64_t);
  id v32;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  _QWORD v40[3];
  uint64_t v41;
  uint64_t v42;

  v38 = a6;
  v36 = a2;
  v37 = a5;
  v39 = a3;
  v35 = a1;
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, (unint64_t *)&qword_2541B2A70, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v34 - v11;
  sub_2320057B8(0, &qword_2541B28D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], v9);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v34 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v34 - v20;
  sub_23200054C(a7, (uint64_t)v40, (uint64_t (*)(_QWORD))sub_232016A28);
  v22 = v41;
  if (!v41)
  {
    sub_232002CEC((uint64_t)v40, (uint64_t (*)(_QWORD))sub_232016A28);
    v27 = sub_2321FE6D4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v19, 1, 1, v27);
    goto LABEL_5;
  }
  v23 = v42;
  sub_232016AD8(v40, v41);
  (*(void (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23);
  v24 = sub_2321FE6D4();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56);
  v26(v19, 0, 1, v24);
  sub_232016AFC((uint64_t)v40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v19, 1, v24) == 1)
  {
LABEL_5:
    sub_2321FE6B0();
    v28 = sub_2321FE6D4();
    v29 = (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v21, 0, 1, v28);
    sub_232016D88((uint64_t)v19, &qword_2541B28D0, v29);
    goto LABEL_6;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v21, v19, v24);
  v26(v21, 0, 1, v24);
LABEL_6:
  v30 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0];
  sub_232016080(a4, (uint64_t)v12, (unint64_t *)&qword_2541B2A70, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0]);
  v31 = (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70];
  sub_232016080((uint64_t)v21, (uint64_t)v16, &qword_2541B28D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70]);
  v32 = sub_2320151CC(v35, v36, v39, (uint64_t)v12, (uint64_t)v16, v37, v38);
  sub_232002CEC(a7, (uint64_t (*)(_QWORD))sub_232016A28);
  sub_232016D88(a4, (unint64_t *)&qword_2541B2A70, v30);
  sub_232016D88((uint64_t)v21, &qword_2541B28D0, v31);
  return v32;
}

_OWORD *sub_232015B58(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_232015B68(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_232015BA4()
{
  id v0;
  double v1;
  double v2;
  id v3;
  id v4;
  double v5;
  double v6;
  id v7;
  double v8;
  double v9;

  v0 = (id)HKAppleSleepingBreathingDisturbancesMinimumQuantityForClassification();
  objc_msgSend(v0, sel__value);
  v2 = v1;

  v3 = objc_msgSend((id)objc_opt_self(), sel_countUnit);
  v4 = (id)HKAppleSleepingBreathingDisturbancesMinimumQuantityForClassification();
  objc_msgSend(v4, sel__value);
  v6 = v5;

  v7 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v3, v6 + 29.0);
  objc_msgSend(v7, sel__value);
  v9 = v8;

  if (v2 > v9)
    __break(1u);
}

uint64_t _sSo20HKCodableSummaryDataC9SummariesE4KindO8rawValueAESgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_2322019F8();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

void sub_232015CE4(uint64_t a1, unint64_t a2, char a3, void *a4)
{
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;

  sub_2320057B8(0, &qword_2541B28D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v8);
  v9 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (v9)
  {
    v10 = v9;
    if (a4)
    {
      sub_232003E9C(0, &qword_2541B7EC0);
      v11 = a4;
      v12 = v10;
      v13 = v11;
      v14 = HKCodableQueryAnchor.init(queryAnchor:)(v13);
      objc_msgSend(v12, sel_setDatabaseChangesQueryAnchor_, v14);

    }
    else
    {
      v15 = v9;
    }
    if (a2 >> 60 != 15)
    {
      sub_2320169E4(a1, a2);
      v16 = (void *)sub_2321FDAC8();
      objc_msgSend(v10, sel_setContentData_, v16);

      sub_23201602C(a1, a2);
    }
    __asm { BR              X10 }
  }
  __break(1u);
  JUMPOUT(0x232016018);
}

uint64_t sub_23201602C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_232003ED4(a1, a2);
  return a1;
}

uint64_t sub_232016040(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_232003E9C(255, a2);
    result = MEMORY[0x2348FF39C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_232016080(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;

  sub_2320057B8(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_2320160D8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2541B5590)
  {
    sub_232003E9C(255, &qword_2541B55A0);
    sub_2321FD8B8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2541B5590);
  }
}

unint64_t sub_23201615C()
{
  unint64_t result;

  result = qword_255F9C080;
  if (!qword_255F9C080)
  {
    result = MEMORY[0x2348FF39C](&protocol conformance descriptor for HKCodableSummaryData.Kind, &type metadata for HKCodableSummaryData.Kind);
    atomic_store(result, (unint64_t *)&qword_255F9C080);
  }
  return result;
}

unint64_t sub_2320161A4()
{
  unint64_t result;

  result = qword_255F9C088;
  if (!qword_255F9C088)
  {
    result = MEMORY[0x2348FF39C](&protocol conformance descriptor for HKCodableSummaryCurrentValue.Kind, &type metadata for HKCodableSummaryCurrentValue.Kind);
    atomic_store(result, (unint64_t *)&qword_255F9C088);
  }
  return result;
}

_BYTE *initializeBufferWithCopyOfBuffer for SummaryModelConfiguration.Audience(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t _s4KindOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s4KindOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2320162D4 + 4 * byte_232210755[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_232016308 + 4 * byte_232210750[v4]))();
}

uint64_t sub_232016308(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232016310(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232016318);
  return result;
}

uint64_t sub_232016324(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23201632CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_232016330(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232016338(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232016344(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_23201634C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for HKCodableSummaryData.Kind()
{
  return &type metadata for HKCodableSummaryData.Kind;
}

uint64_t _s4KindOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEB)
    goto LABEL_17;
  if (a2 + 21 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 21) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 21;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 21;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 21;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x16;
  v8 = v6 - 22;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s4KindOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 21 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 21) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEA)
    return ((uint64_t (*)(void))((char *)&loc_232016440 + 4 * byte_23221075F[v4]))();
  *a1 = a2 + 21;
  return ((uint64_t (*)(void))((char *)sub_232016474 + 4 * byte_23221075A[v4]))();
}

uint64_t sub_232016474(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23201647C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232016484);
  return result;
}

uint64_t sub_232016490(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232016498);
  *(_BYTE *)result = a2 + 21;
  return result;
}

uint64_t sub_23201649C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2320164A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HKCodableSummaryCurrentValue.Kind()
{
  return &type metadata for HKCodableSummaryCurrentValue.Kind;
}

void sub_2320164C0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2541B6BE8)
  {
    sub_232200DB0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2541B6BE8);
  }
}

void sub_232016524(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v6 = sub_232200DB0();
    v7 = sub_232000590(&qword_2541B6BF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24A8]);
    v8 = a3(a1, v6, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_2320165A0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23200C068(a1, a2);
}

uint64_t sub_2320165BC(uint64_t a1)
{
  uint64_t v2;

  sub_232016524(0, &qword_2541B7028, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE1B68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_232016608()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B7030)
  {
    sub_232016524(255, &qword_2541B7028, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE1B68]);
    v0 = sub_2322016F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B7030);
  }
}

uint64_t sub_23201666C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;

  sub_232016524(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_2320166B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_232016524(0, &qword_2541B7028, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE1B68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23201670C(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t *sub_232016724(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void sub_232016768()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2541B27F8)
  {
    sub_2321FD8B8();
    sub_232000608(255, (unint64_t *)&qword_2541B5570, MEMORY[0x24BEE13C8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2541B27F8);
  }
}

uint64_t sub_2320167EC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_2320167F8(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void sub_232016810()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B57D8)
  {
    sub_232016A8C(255, &qword_2541B28E8);
    v0 = sub_232201AC4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B57D8);
  }
}

void sub_232016874()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B57E0)
  {
    sub_232016A8C(255, (unint64_t *)&qword_2541B28F0);
    v0 = sub_232201AC4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B57E0);
  }
}

unint64_t sub_2320168D8()
{
  unint64_t result;

  result = qword_2541B0BE8;
  if (!qword_2541B0BE8)
  {
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2541B0BE8);
  }
  return result;
}

void sub_23201691C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B5860)
  {
    sub_232016A8C(255, (unint64_t *)&qword_2541B5888);
    v0 = sub_232201AC4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B5860);
  }
}

void sub_232016980()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B3070)
  {
    sub_232016A8C(255, (unint64_t *)&qword_2541B28F0);
    v0 = sub_2322006A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B3070);
  }
}

uint64_t sub_2320169E4(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

void sub_232016A28()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B3E48)
  {
    sub_232016A8C(255, &qword_2541B3E40);
    v0 = sub_2322016F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B3E48);
  }
}

uint64_t sub_232016A8C(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

_QWORD *sub_232016AD8(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_232016AFC(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_232016B1C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_2320169E4(a1, a2);
  return a1;
}

void sub_232016B30()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2541B27E0)
  {
    sub_2321FD8B8();
    sub_232016BA0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2541B27E0);
  }
}

void sub_232016BA0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B5540)
  {
    sub_232003E9C(255, (unint64_t *)&qword_2541B0D78);
    v0 = sub_232201080();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B5540);
  }
}

void sub_232016C04()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B71D0)
  {
    sub_232000608(255, (unint64_t *)&qword_2541B5570, MEMORY[0x24BEE13C8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    v0 = sub_232201AC4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B71D0);
  }
}

uint64_t sub_232016C70@<X0>(void **a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;

  return sub_23200D660(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_232016C88()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_2541B7158)
  {
    sub_2321FDEC4();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BE3FE20];
    sub_2321FDFD8();
    sub_232000590(&qword_2541B69E8, v0, MEMORY[0x24BE3FE38]);
    v1 = sub_2322019D4();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_2541B7158);
  }
}

void sub_232016D1C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2541B6A00)
  {
    sub_2321FDEC4();
    sub_2321FDFD8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2541B6A00);
  }
}

uint64_t sub_232016D88(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;

  sub_2320057B8(0, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_232016DCC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2541B5488)
  {
    sub_232000608(255, (unint64_t *)&qword_2541B78A0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2541B5488);
  }
}

uint64_t sub_232016E8C()
{
  void **v0;
  void *v1;

  v1 = *v0;
  if ((objc_msgSend(v1, sel_paused) & 1) == 0
    && (objc_msgSend(v1, sel_hasAppleStandHoursGoal) & 1) != 0)
  {
    objc_msgSend(v1, sel_hasAppleExerciseTimeGoal);
  }
  return sub_2321FE6B0();
}

id sub_232016F04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  char *v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;

  v0 = sub_23220039C();
  v29 = *(_QWORD *)(v0 - 8);
  v30 = v0;
  MEMORY[0x24BDAC7A8](v0);
  v32 = (char *)&v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_2321FF844();
  v27 = *(_QWORD *)(v2 - 8);
  v28 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2321FE710();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23201B23C();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2321FE734();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2321FE428();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_232000590(&qword_2541B2338, (uint64_t (*)(uint64_t))MEMORY[0x24BE47EC8], MEMORY[0x24BE47ED8]);
    swift_willThrowTypedImpl();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v15 = (void *)sub_2321FE3EC();
    v16 = (void *)*MEMORY[0x24BDD2DD0];
LABEL_5:
    v21 = v31;
    v19 = v16;
    v20 = 0;
    goto LABEL_6;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  sub_2321FE728();
  v18 = v17;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v15 = (void *)sub_2321FE3EC();
  v16 = (void *)*MEMORY[0x24BDD2DD0];
  if (!v18)
    goto LABEL_5;
  v19 = v16;
  v20 = (void *)sub_232200E94();
  swift_bridgeObjectRelease();
  v21 = v31;
LABEL_6:
  v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3BF8]), sel_initWithFeatureIdentifier_healthStore_currentCountryCode_, v19, v15, v20);

  sub_232003E9C(0, &qword_2541B27A8);
  sub_2321FF898();
  v23 = (void *)sub_2321FF850();
  v24 = objc_msgSend(v23, sel_areAllRequirementsSatisfied);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v21, v28);
  return v24;
}

uint64_t sub_2320173F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_232016080(v1, a1, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
}

uint64_t sub_232017424@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = sub_2321FE4A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_232017464(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 24));
}

uint64_t sub_232017470(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 28));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_2320174A4(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 40));
}

uint64_t sub_2320174B0@<X0>(uint64_t a1@<X8>)
{
  return sub_232017A78(type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request, a1);
}

uint64_t sub_2320174BC@<X0>(uint64_t a1@<X8>)
{
  return sub_232017A78(type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request, a1);
}

uint64_t sub_2320174C8@<X0>(uint64_t a1@<X8>)
{
  return sub_232017510(type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request, a1);
}

uint64_t sub_2320174D4@<X0>(uint64_t a1@<X8>)
{
  return sub_232017510(type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request, a1);
}

uint64_t sub_2320174E0@<X0>(uint64_t a1@<X8>)
{
  return sub_232017D20(type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request, a1);
}

uint64_t sub_2320174EC@<X0>(uint64_t a1@<X8>)
{
  return sub_232017510(type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request, a1);
}

uint64_t sub_2320174F8@<X0>(uint64_t a1@<X8>)
{
  return sub_232017510(type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request, a1);
}

uint64_t sub_232017504@<X0>(uint64_t a1@<X8>)
{
  return sub_232017510(type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request, a1);
}

uint64_t sub_232017510@<X0>(uint64_t (*a1)(_QWORD)@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  unint64_t v18;
  void (*v19)(unint64_t, _QWORD, uint64_t);
  unint64_t v20;
  _QWORD v22[3];

  v22[1] = a2;
  v22[0] = sub_2321FE38C();
  v4 = *(_QWORD *)(v22[0] - 8);
  MEMORY[0x24BDAC7A8](v22[0]);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (void *)sub_2321FE3F8();
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598];
  sub_232000608(0, (unint64_t *)&qword_2541B78C8, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232210D20;
  v10 = a1(0);
  *(_QWORD *)(inited + 32) = sub_2321FE464();
  v22[2] = inited;
  sub_232201050();
  v11 = *(_BYTE *)(v2 + *(int *)(v10 + 36));
  sub_2320057B8(0, &qword_2541B7530, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], v8);
  v12 = sub_2321FE194();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = swift_allocObject();
  if ((v11 & 1) != 0)
  {
    *(_OWORD *)(v16 + 16) = xmmword_232210D40;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v13 + 104))(v16 + v15, *MEMORY[0x24BE47410], v12);
  }
  else
  {
    *(_OWORD *)(v16 + 16) = xmmword_232210D30;
    v18 = v16 + v15;
    v19 = *(void (**)(unint64_t, _QWORD, uint64_t))(v13 + 104);
    v19(v18, *MEMORY[0x24BE47460], v12);
    v19(v18 + v14, *MEMORY[0x24BE47490], v12);
  }
  v17 = v7;
  sub_2321A492C(v16);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v20 = swift_bridgeObjectRetain();
  sub_2321A4950(v20);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, _QWORD))(v4 + 104))(v6, *MEMORY[0x24BE47918], v22[0]);
  sub_2321FE3B0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2320177AC@<X0>(uint64_t a1@<X8>)
{
  return sub_232017A78(type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request, a1);
}

uint64_t sub_2320177B8@<X0>(uint64_t a1@<X8>)
{
  return sub_2320177D0(type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request, a1);
}

uint64_t sub_2320177C4@<X0>(uint64_t a1@<X8>)
{
  return sub_2320177D0(type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request, a1);
}

uint64_t sub_2320177D0@<X0>(uint64_t (*a1)(_QWORD)@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  unint64_t v18;
  void (*v19)(unint64_t, _QWORD, uint64_t);
  unint64_t v20;
  _QWORD v22[3];

  v22[1] = a2;
  v22[0] = sub_2321FE38C();
  v4 = *(_QWORD *)(v22[0] - 8);
  MEMORY[0x24BDAC7A8](v22[0]);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (void *)sub_2321FE3F8();
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598];
  sub_232000608(0, (unint64_t *)&qword_2541B78C8, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232210D20;
  v10 = a1(0);
  *(_QWORD *)(inited + 32) = sub_2321FE464();
  v22[2] = inited;
  sub_232201050();
  v11 = *(_BYTE *)(v2 + *(int *)(v10 + 24));
  sub_2320057B8(0, &qword_2541B7530, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], v8);
  v12 = sub_2321FE194();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = swift_allocObject();
  if ((v11 & 1) != 0)
  {
    *(_OWORD *)(v16 + 16) = xmmword_232210D40;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v13 + 104))(v16 + v15, *MEMORY[0x24BE47410], v12);
  }
  else
  {
    *(_OWORD *)(v16 + 16) = xmmword_232210D30;
    v18 = v16 + v15;
    v19 = *(void (**)(unint64_t, _QWORD, uint64_t))(v13 + 104);
    v19(v18, *MEMORY[0x24BE47460], v12);
    v19(v18 + v14, *MEMORY[0x24BE47490], v12);
  }
  v17 = v7;
  sub_2321A492C(v16);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v20 = swift_bridgeObjectRetain();
  sub_2321A4950(v20);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, _QWORD))(v4 + 104))(v6, *MEMORY[0x24BE47918], v22[0]);
  sub_2321FE3B0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_232017A6C@<X0>(uint64_t a1@<X8>)
{
  return sub_232017A78(type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request, a1);
}

uint64_t sub_232017A78@<X0>(uint64_t (*a1)(_QWORD)@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  unint64_t v18;
  void (*v19)(unint64_t, _QWORD, uint64_t);
  unint64_t v20;
  _QWORD v22[3];

  v22[1] = a2;
  v22[0] = sub_2321FE38C();
  v4 = *(_QWORD *)(v22[0] - 8);
  MEMORY[0x24BDAC7A8](v22[0]);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (void *)sub_2321FE3F8();
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598];
  sub_232000608(0, (unint64_t *)&qword_2541B78C8, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232210D20;
  v10 = a1(0);
  *(_QWORD *)(inited + 32) = sub_2321FE464();
  v22[2] = inited;
  sub_232201050();
  v11 = *(_BYTE *)(v2 + *(int *)(v10 + 40));
  sub_2320057B8(0, &qword_2541B7530, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], v8);
  v12 = sub_2321FE194();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = swift_allocObject();
  if ((v11 & 1) != 0)
  {
    *(_OWORD *)(v16 + 16) = xmmword_232210D40;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v13 + 104))(v16 + v15, *MEMORY[0x24BE47410], v12);
  }
  else
  {
    *(_OWORD *)(v16 + 16) = xmmword_232210D30;
    v18 = v16 + v15;
    v19 = *(void (**)(unint64_t, _QWORD, uint64_t))(v13 + 104);
    v19(v18, *MEMORY[0x24BE47460], v12);
    v19(v18 + v14, *MEMORY[0x24BE47490], v12);
  }
  v17 = v7;
  sub_2321A492C(v16);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v20 = swift_bridgeObjectRetain();
  sub_2321A4950(v20);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, _QWORD))(v4 + 104))(v6, *MEMORY[0x24BE47918], v22[0]);
  sub_2321FE3B0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_232017D14@<X0>(uint64_t a1@<X8>)
{
  return sub_232017D20(type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request, a1);
}

uint64_t sub_232017D20@<X0>(uint64_t (*a1)(_QWORD)@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  unint64_t v18;
  void (*v19)(unint64_t, _QWORD, uint64_t);
  unint64_t v20;
  _QWORD v22[3];

  v22[1] = a2;
  v22[0] = sub_2321FE38C();
  v4 = *(_QWORD *)(v22[0] - 8);
  MEMORY[0x24BDAC7A8](v22[0]);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (void *)sub_2321FE3F8();
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598];
  sub_232000608(0, (unint64_t *)&qword_2541B78C8, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232210D20;
  v10 = a1(0);
  *(_QWORD *)(inited + 32) = sub_2321FE464();
  v22[2] = inited;
  sub_232201050();
  v11 = *(_BYTE *)(v2 + *(int *)(v10 + 20));
  sub_2320057B8(0, &qword_2541B7530, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], v8);
  v12 = sub_2321FE194();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = swift_allocObject();
  if ((v11 & 1) != 0)
  {
    *(_OWORD *)(v16 + 16) = xmmword_232210D40;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v13 + 104))(v16 + v15, *MEMORY[0x24BE47410], v12);
  }
  else
  {
    *(_OWORD *)(v16 + 16) = xmmword_232210D30;
    v18 = v16 + v15;
    v19 = *(void (**)(unint64_t, _QWORD, uint64_t))(v13 + 104);
    v19(v18, *MEMORY[0x24BE47460], v12);
    v19(v18 + v14, *MEMORY[0x24BE47490], v12);
  }
  v17 = v7;
  sub_2321A492C(v16);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v20 = swift_bridgeObjectRetain();
  sub_2321A4950(v20);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, _QWORD))(v4 + 104))(v6, *MEMORY[0x24BE47918], v22[0]);
  sub_2321FE3B0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_232017FBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t inited;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  unint64_t v15;
  void (*v16)(unint64_t, _QWORD, uint64_t);
  unint64_t v17;
  _QWORD v19[3];

  v19[1] = a1;
  v19[0] = sub_2321FE38C();
  v2 = *(_QWORD *)(v19[0] - 8);
  MEMORY[0x24BDAC7A8](v19[0]);
  v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (void *)sub_2321FE3F8();
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598];
  sub_232000608(0, (unint64_t *)&qword_2541B78C8, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232210D20;
  *(_QWORD *)(inited + 32) = sub_2321FE464();
  v19[2] = inited;
  sub_232201050();
  v8 = *(_BYTE *)(v1
                + *(int *)(type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request(0)
                         + 40));
  sub_2320057B8(0, &qword_2541B7530, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], v6);
  v9 = sub_2321FE194();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = swift_allocObject();
  if ((v8 & 1) != 0)
  {
    *(_OWORD *)(v13 + 16) = xmmword_232210D40;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v10 + 104))(v13 + v12, *MEMORY[0x24BE47410], v9);
  }
  else
  {
    *(_OWORD *)(v13 + 16) = xmmword_232210D30;
    v15 = v13 + v12;
    v16 = *(void (**)(unint64_t, _QWORD, uint64_t))(v10 + 104);
    v16(v15, *MEMORY[0x24BE47460], v9);
    v16(v15 + v11, *MEMORY[0x24BE47490], v9);
  }
  v14 = v5;
  sub_2321A492C(v13);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v17 = swift_bridgeObjectRetain();
  sub_2321A4950(v17);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, _QWORD))(v2 + 104))(v4, *MEMORY[0x24BE47918], v19[0]);
  sub_2321FE3B0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_23201824C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  unint64_t v20;
  void (*v21)(unint64_t, _QWORD, uint64_t);
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v34 = *v2;
  v5 = sub_2321FE38C();
  v30 = *(_QWORD *)(v5 - 8);
  v31 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2321FE3BC();
  v32 = *(_QWORD *)(v8 - 8);
  v33 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = a1;
  v29 = (id)sub_2321FE3F8();
  v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598];
  sub_232000608(0, (unint64_t *)&qword_2541B78C8, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232210D20;
  v13 = type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request(0);
  *(_QWORD *)(inited + 32) = sub_2321FE464();
  v37 = inited;
  sub_232201050();
  LOBYTE(v13) = *(_BYTE *)(a2 + *(int *)(v13 + 40));
  sub_2320057B8(0, &qword_2541B7530, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], v11);
  v14 = sub_2321FE194();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 72);
  v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  if ((v13 & 1) != 0)
  {
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_232210D40;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v15 + 104))(v18 + v17, *MEMORY[0x24BE47410], v14);
  }
  else
  {
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_232210D30;
    v20 = v18 + v17;
    v21 = *(void (**)(unint64_t, _QWORD, uint64_t))(v15 + 104);
    v21(v20, *MEMORY[0x24BE47460], v14);
    v21(v20 + v16, *MEMORY[0x24BE47490], v14);
  }
  v19 = v29;
  sub_2321A492C(v18);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v22 = swift_bridgeObjectRetain();
  sub_2321A4950(v22);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t))(v30 + 104))(v7, *MEMORY[0x24BE47918], v31);
  sub_2321FE3B0();

  swift_bridgeObjectRelease();
  v23 = v36;
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v36 + OBJC_IVAR____TtC9Summaries54CardioFitnessCurrentValueSummarySharableModelGenerator_domain, v10, v33);
  v24 = sub_232000590(&qword_2541B05C8, type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator, (uint64_t)&unk_232210E20);
  v25 = v35;
  v26 = static CurrentValueSummaryModelGenerating.makePublisher(generatorContext:request:)(v35, a2, v34, v24);
  sub_23201B200(a2);
  v27 = sub_2321FE440();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v25, v27);
  *(_QWORD *)(v23 + 16) = v26;
  return v23;
}

uint64_t sub_2320185B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  unint64_t v28;
  void (*v29)(unint64_t, _QWORD, uint64_t);
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  char *v40;
  id v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[4];

  v44 = sub_2321FE38C();
  v42 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v43 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2321FE3BC();
  v47 = *(_QWORD *)(v6 - 8);
  v48 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23201B054();
  v50 = *(_QWORD *)(v9 - 8);
  v51 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v40 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request(0);
  v45 = (*(uint64_t (**)(uint64_t))(a3 + *(int *)(v11 + 44)))(a2);
  v46 = sub_2321FE3EC();
  v12 = (void *)objc_opt_self();
  v13 = (void *)sub_2321FD858();
  v14 = objc_msgSend(v12, sel_predicateForSamplesWithinDateInterval_options_, v13, 0);

  sub_2321FE3D4();
  sub_232016AD8(v54, v54[3]);
  v15 = (void *)sub_2321FE314();
  v16 = (void *)sub_2321FE464();
  v17 = v14;
  v18 = sub_232201284();

  v41 = v17;
  sub_232016AFC((uint64_t)v54);
  v53 = v18;
  sub_2321FE434();
  v19 = (void *)sub_2321FE3F8();
  v20 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598];
  sub_232000608(0, (unint64_t *)&qword_2541B78C8, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232210D20;
  *(_QWORD *)(inited + 32) = sub_2321FE464();
  v52 = inited;
  sub_232201050();
  LOBYTE(a3) = *(_BYTE *)(a3 + *(int *)(v11 + 40));
  sub_2320057B8(0, &qword_2541B7530, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], v20);
  v22 = sub_2321FE194();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(_QWORD *)(v23 + 72);
  v25 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  if ((a3 & 1) != 0)
  {
    v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_232210D40;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v23 + 104))(v26 + v25, *MEMORY[0x24BE47410], v22);
  }
  else
  {
    v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_232210D30;
    v28 = v26 + v25;
    v29 = *(void (**)(unint64_t, _QWORD, uint64_t))(v23 + 104);
    v29(v28, *MEMORY[0x24BE47460], v22);
    v29(v28 + v24, *MEMORY[0x24BE47490], v22);
  }
  v27 = v19;
  sub_2321A492C(v26);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v30 = swift_bridgeObjectRetain();
  sub_2321A4950(v30);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t))(v42 + 104))(v43, *MEMORY[0x24BE47918], v44);
  sub_2321FE3B0();

  swift_bridgeObjectRelease();
  sub_23201B100();
  sub_232000590(&qword_2541B79D0, (uint64_t (*)(uint64_t))sub_23201B100, MEMORY[0x24BDB9AF8]);
  v31 = sub_232200738();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v8, v48);
  sub_232016AFC((uint64_t)v54);
  swift_release();
  v54[0] = v31;
  v32 = swift_allocObject();
  v33 = (void *)v46;
  *(_QWORD *)(v32 + 16) = v49;
  *(_QWORD *)(v32 + 24) = v33;
  *(_BYTE *)(v32 + 32) = v45 & 1;
  sub_232000608(0, &qword_2541B3528, (uint64_t)&type metadata for CardioFitnessCurrentValueSummarySharableModelGenerator.CardioFitnessSampleWrapper, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  v34 = v33;
  v35 = v40;
  sub_2322007A4();
  swift_release();
  swift_release();
  sub_232000590(&qword_2541AF200, (uint64_t (*)(uint64_t))sub_23201B054, MEMORY[0x24BDB96C0]);
  v36 = v51;
  v37 = sub_232200774();

  (*(void (**)(char *, uint64_t))(v50 + 8))(v35, v36);
  return v37;
}

double sub_232018B30@<D0>(void **a1@<X0>, void *a2@<X2>, char a3@<W3>, _QWORD *a4@<X8>)
{
  void *v5;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  double result;
  id v14;

  v5 = *a1;
  if (*a1 && (objc_opt_self(), (v8 = swift_dynamicCastObjCClass()) != 0))
  {
    v9 = (void *)v8;
    v10 = v5;
    v11 = sub_232018BD0(a2, v9, a3 & 1);
    *a4 = v9;
    a4[1] = a3 & 1;
    if (v12)
      v14 = v11;
    else
      v14 = 0;
    a4[2] = v14;
    a4[3] = v12 == 0;
    a4[4] = v12;
  }
  else
  {
    a4[4] = 0;
    result = 0.0;
    *(_OWORD *)a4 = 0u;
    *((_OWORD *)a4 + 1) = 0u;
  }
  return result;
}

id sub_232018BD0(void *a1, void *a2, char a3)
{
  uint64_t v6;
  id result;

  v6 = sub_23220039C();
  MEMORY[0x24BDAC7A8](v6);
  result = 0;
  if ((a3 & 1) != 0)
    return sub_232035A14(a2, a1);
  return result;
}

id sub_232018E38(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  id v33;
  void (*v34)(char *, _QWORD, uint64_t, uint64_t);
  id v35;
  id v36;
  id v37;
  char *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id result;
  void *v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  id v57;
  void *v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t);
  uint64_t v61;
  id v62;
  void *v63;
  void *v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  char *v69;
  id v70;
  uint64_t v71;
  id v72;
  char *v73;
  char *v74;
  id v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  _OWORD v86[2];
  uint64_t v87;
  _OWORD v88[2];
  uint64_t v89;
  _BYTE v90[16];

  v80 = a2;
  v3 = sub_2321FDC6C();
  MEMORY[0x24BDAC7A8](v3);
  v79 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2321FFD78();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0];
  v7 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v82 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v74 = (char *)&v71 - v10;
  v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v71 - v13;
  v15 = sub_2321FD8B8();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, (unint64_t *)&qword_2541B2A70, v6, v11);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v71 - v20;
  sub_2320057B8(0, &qword_2541B28D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], v11);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v71 - v26;
  sub_232019FF0(a1, (uint64_t)v86, (uint64_t)&unk_2541B3528, (uint64_t)&type metadata for CardioFitnessCurrentValueSummarySharableModelGenerator.CardioFitnessSampleWrapper, (uint64_t)type metadata accessor for SummaryModelQueryOutput, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_232000608);
  if (!*(_QWORD *)&v86[0])
  {
    sub_2321FE6B0();
    v59 = sub_2321FE6D4();
    v60 = (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v27, 0, 1, v59);
    sub_232003E9C(0, &qword_2541B0CD0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v21, 1, 1, v5);
    sub_232016080((uint64_t)v27, (uint64_t)v25, &qword_2541B28D0, v60);
    v49 = sub_2320151CC(0, 0xF000000000000000, 0xBu, (uint64_t)v21, (uint64_t)v25, 0, 0);
    sub_232003E50((uint64_t)v27);
    return v49;
  }
  v78 = v7;
  v76 = v21;
  v88[0] = v86[0];
  v88[1] = v86[1];
  v89 = v87;
  v81 = v16;
  v28 = *(void **)&v86[0];
  sub_232019FF0((uint64_t)&v89, (uint64_t)v90, (uint64_t)&qword_2541B2788, (uint64_t)sub_23201A040, (uint64_t)MEMORY[0x24BEE1C68], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_2320057B8);
  v29 = type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request(0);
  v30 = v80;
  v31 = v28;
  v32 = v81;
  v33 = v31;
  sub_23201A180((uint64_t)v90);
  sub_232200120();
  sub_232003E9C(0, &qword_2541B56C8);
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v14, v18, v15);
  v34 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56);
  v77 = v15;
  v34(v14, 0, 1, v15);
  v35 = HKCodableSummarySupplementaryValue.init(dateInterval:dataCount:)((uint64_t)v14, 1, 0);
  v36 = objc_msgSend(v33, sel_sampleType);
  v37 = objc_msgSend(v36, sel_code);

  if (v37 == (id)124 && (BYTE8(v88[0]) & 1) != 0 && (v75 = (id)sub_23201962C((uint64_t)v88)) != 0)
  {
    v38 = v74;
    sub_2321FFE50();
    v39 = v35;
    v40 = v78;
    v41 = v5;
    (*(void (**)(char *, _QWORD, uint64_t))(v78 + 104))(v38, *MEMORY[0x24BE4AD40], v5);
    v42 = v39;
    result = objc_msgSend(v75, sel_data);
    if (result)
    {
      v44 = result;
      v82 = (char *)sub_232003E9C(0, &qword_2541B0CD0);
      v45 = sub_2321FDAD4();
      v47 = v46;

      v48 = (uint64_t)v76;
      (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v76, v38, v41);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v40 + 56))(v48, 0, 1, v41);
      v85 = 0;
      v83 = 0u;
      v84 = 0u;
      v49 = sub_232015828(v45, v47, 7, v48, (uint64_t)v42, 0, (uint64_t)&v83);

      sub_232003ED4(v45, v47);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v38, v41);

      sub_23201B024((uint64_t)v90);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v18, v77);
      return v49;
    }
  }
  else
  {
    sub_232003E9C(0, &qword_2541B56B0);
    v50 = objc_msgSend(v33, sel_quantity);
    v51 = (uint64_t)v79;
    sub_232093434(v33);
    v52 = HKCodableSummaryQuantityValue.init(quantity:date:)(v50, v51);
    v53 = v30 + *(int *)(v29 + 32);
    v54 = sub_232200180();
    v55 = v82;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v82, v53, v54);
    v56 = v78;
    (*(void (**)(char *, _QWORD, uint64_t))(v78 + 104))(v55, *MEMORY[0x24BE4AD70], v5);
    v57 = objc_msgSend(v33, sel_metadata);
    v73 = v18;
    v72 = v33;
    if (v57)
    {
      v58 = v57;
      v80 = sub_232200DD4();

    }
    else
    {
      v80 = 0;
    }
    v61 = v5;
    v62 = v35;
    result = objc_msgSend(v52, sel_data);
    if (result)
    {
      v63 = result;
      v64 = v52;
      sub_232003E9C(0, &qword_2541B0CD0);
      v65 = sub_2321FDAD4();
      v67 = v66;

      v68 = (uint64_t)v76;
      v69 = v82;
      (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v76, v82, v61);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v56 + 56))(v68, 0, 1, v61);
      v85 = 0;
      v83 = 0u;
      v84 = 0u;
      v49 = sub_232015828(v65, v67, 14, v68, (uint64_t)v62, v80, (uint64_t)&v83);

      sub_232003ED4(v65, v67);
      (*(void (**)(char *, uint64_t))(v56 + 8))(v69, v61);
      v70 = v72;

      sub_23201B024((uint64_t)v90);
      (*(void (**)(char *, uint64_t))(v81 + 8))(v73, v77);
      return v49;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_23201962C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  id *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  id *v20;
  double v21;
  double v22;
  double v23;
  unint64_t v24;
  unint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  id v42;
  id v43;
  id v44;
  char *v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  id *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[2];
  uint64_t v57;
  char v58[8];
  _BYTE v59[16];
  uint64_t v60;
  char v61;

  v2 = sub_23220039C();
  v55 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2322002C4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2321FDC6C();
  MEMORY[0x24BDAC7A8](v9);
  v51 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_2322002D0();
  v52 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v50 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BEE1C68];
  sub_232019FF0(a1 + 16, (uint64_t)v59, (uint64_t)&qword_2541B5650, (uint64_t)type metadata accessor for HKCardioFitnessLevel, (uint64_t)MEMORY[0x24BEE1C68], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_2320057B8);
  v13 = (id *)a1;
  sub_232019FF0((uint64_t)v59, (uint64_t)&v60, (uint64_t)&qword_2541B5650, (uint64_t)type metadata accessor for HKCardioFitnessLevel, (uint64_t)v12, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_2320057B8);
  if ((v61 & 1) != 0 || !*(_QWORD *)(a1 + 32))
  {
    v54 = v2;
    sub_232200354();
    v26 = *(id *)a1;
    sub_232019FF0(a1 + 32, (uint64_t)v58, (uint64_t)&qword_2541B2788, (uint64_t)sub_23201A040, (uint64_t)MEMORY[0x24BEE1C68], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_2320057B8);
    v27 = v26;
    sub_23201A180((uint64_t)v58);
    v28 = v27;
    sub_23201A180((uint64_t)v58);
    v29 = v28;
    sub_23201A180((uint64_t)v58);
    v30 = v29;
    sub_23201A180((uint64_t)v58);
    v31 = sub_232200390();
    v32 = sub_2322012E4();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = swift_slowAlloc();
      v34 = swift_slowAlloc();
      v57 = v34;
      *(_DWORD *)v33 = 136315650;
      v56[0] = v53;
      swift_getMetatypeMetadata();
      v35 = sub_232200F00();
      v56[0] = sub_232013174(v35, v36, &v57);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 12) = 2080;
      v37 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
      sub_232019FF0((uint64_t)v59, (uint64_t)v56, (uint64_t)&qword_2541B5650, (uint64_t)type metadata accessor for HKCardioFitnessLevel, (uint64_t)MEMORY[0x24BEE1C68], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_2320057B8);
      sub_2320057B8(0, &qword_2541B5650, (uint64_t (*)(uint64_t))type metadata accessor for HKCardioFitnessLevel, v37);
      v38 = sub_232200F00();
      v56[0] = sub_232013174(v38, v39, &v57);
      sub_232201710();

      swift_bridgeObjectRelease();
      sub_23201B024((uint64_t)v58);

      sub_23201B024((uint64_t)v58);
      *(_WORD *)(v33 + 22) = 2080;
      sub_232019FF0((uint64_t)v58, (uint64_t)v56, (uint64_t)&qword_2541B2788, (uint64_t)sub_23201A040, (uint64_t)v37, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_2320057B8);
      sub_23201A180((uint64_t)v58);
      sub_2320057B8(0, &qword_2541B2788, (uint64_t (*)(uint64_t))sub_23201A040, v37);
      v40 = sub_232200F00();
      v56[0] = sub_232013174(v40, v41, &v57);
      sub_232201710();

      swift_bridgeObjectRelease();
      sub_23201B024((uint64_t)v58);

      sub_23201B024((uint64_t)v58);
      _os_log_impl(&dword_231FFB000, v31, v32, "[%s]: Unable to generate HKCodableSummaryCardioFitnessValue, cardio fitness data is missing. level:%s, data:%s. Falling back to quantity kind", (uint8_t *)v33, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v34, -1, -1);
      MEMORY[0x2348FF468](v33, -1, -1);
    }
    else
    {

      sub_23201B024((uint64_t)v58);
      sub_23201B024((uint64_t)v58);

      sub_23201B024((uint64_t)v58);
      sub_23201B024((uint64_t)v58);
    }

    (*(void (**)(char *, uint64_t))(v55 + 8))(v4, v54);
    return 0;
  }
  v55 = v60;
  v14 = swift_bridgeObjectRetain();
  v15 = sub_23201A1A8(v14);
  swift_bridgeObjectRelease();
  if (v15 < 0 || (v15 & 0x4000000000000000) != 0)
    goto LABEL_21;
  v16 = *(_QWORD *)(v15 + 16);
  if (!v16)
  {
LABEL_22:
    swift_release();
LABEL_23:
    v43 = *v13;
    v44 = objc_msgSend(v43, sel_quantity);
    objc_msgSend(v44, sel__value);

    v45 = v50;
    sub_23220027C();
    v46 = sub_232006C3C();
    sub_232003E9C(0, &qword_2541B0D20);
    v47 = objc_msgSend(v43, sel_quantity);
    v48 = objc_msgSend(v43, sel_endDate);
    v49 = (uint64_t)v51;
    sub_2321FDC30();

    v42 = HKCodableSummaryCardioFitnessValue.init(quantity:date:cardioFitnessLevel:dataConfiguration:)(v47, v49, v55, v46);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v45, v54);
    return (uint64_t)v42;
  }
  while (1)
  {
    v53 = v13;
    v56[0] = MEMORY[0x24BEE4AF8];
    result = sub_232013830(0, v16 & ~(v16 >> 63), 0);
    if (v16 < 0)
      break;
    v18 = 0;
    v19 = v56[0];
    while (1)
    {
      v20 = (v15 & 0xC000000000000001) != 0
          ? (id *)MEMORY[0x2348FEA30](v18, v15)
          : (id *)*(id *)(v15 + 8 * v18 + 32);
      v13 = v20;
      objc_msgSend(v20, sel_vo2MaxLowerBound);
      v22 = v21;
      objc_msgSend(v13, sel_vo2MaxUpperBound);
      if (v22 > v23)
        break;
      objc_msgSend(v13, sel_cardioFitnessLevel);
      sub_2322002A0();

      v56[0] = v19;
      v25 = *(_QWORD *)(v19 + 16);
      v24 = *(_QWORD *)(v19 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_232013830(v24 > 1, v25 + 1, 1);
        v19 = v56[0];
      }
      ++v18;
      *(_QWORD *)(v19 + 16) = v25 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v19+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v25, v8, v5);
      if (v16 == v18)
      {
        swift_release();
        v13 = v53;
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
    v16 = sub_232201998();
    swift_release();
    if (!v16)
      goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_232019D78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC9Summaries54CardioFitnessCurrentValueSummarySharableModelGenerator_domain;
  v2 = sub_2321FE3BC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_232019DD0()
{
  return type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator(0);
}

uint64_t type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator(uint64_t a1)
{
  return sub_23201A14C(a1, (uint64_t *)&unk_2541AF070);
}

uint64_t sub_232019DEC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2321FE3BC();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

id sub_232019E6C(uint64_t a1, uint64_t a2)
{
  _BYTE v4[40];

  sub_232019FF0(a1, (uint64_t)v4, (uint64_t)&unk_2541B3528, (uint64_t)&type metadata for CardioFitnessCurrentValueSummarySharableModelGenerator.CardioFitnessSampleWrapper, (uint64_t)type metadata accessor for SummaryModelQueryOutput, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_232000608);
  return sub_232018E38((uint64_t)v4, a2);
}

uint64_t sub_232019EC4()
{
  return swift_retain();
}

uint64_t sub_232019ED0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC9Summaries54CardioFitnessCurrentValueSummarySharableModelGenerator_domain;
  v4 = sub_2321FE3BC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

_UNKNOWN **sub_232019F18()
{
  return &off_2500FEAB0;
}

uint64_t sub_232019F24(uint64_t a1)
{
  uint64_t result;

  result = sub_232000590(&qword_2541B05C0, type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator, (uint64_t)&unk_232210D98);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

_UNKNOWN **sub_232019F60()
{
  return &off_2500FEAF8;
}

uint64_t sub_232019F6C(uint64_t a1)
{
  uint64_t result;

  result = sub_232000590(&qword_2541B05D0, type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator, (uint64_t)&unk_232210DC8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

_UNKNOWN **sub_232019FA8()
{
  return &off_2500FEB10;
}

uint64_t sub_232019FB4(uint64_t a1)
{
  uint64_t result;

  result = sub_232000590(&qword_2541B4D90, type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator, (uint64_t)&unk_232210DF4);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_232019FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8;

  v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a2, a1, v8);
  return a2;
}

void sub_23201A040()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B10C8)
  {
    sub_232003E9C(255, (unint64_t *)&qword_2541B0D78);
    sub_232003E9C(255, &qword_2541B0C80);
    sub_23201A0F8(qword_2541B0D80, (unint64_t *)&qword_2541B0D78);
    v0 = sub_232200DEC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B10C8);
  }
}

uint64_t sub_23201A0F8(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_232003E9C(255, a2);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BEE5BD8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request(uint64_t a1)
{
  return sub_23201A14C(a1, (uint64_t *)&unk_2541AF060);
}

uint64_t sub_23201A14C(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23201A180(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23201A1A8(unint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  if ((a1 & 0xC000000000000001) != 0)
  {
    v2 = sub_2322017DC();
    if (v2)
      goto LABEL_3;
    return MEMORY[0x24BEE4AF8];
  }
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return MEMORY[0x24BEE4AF8];
LABEL_3:
  if (v2 <= 0)
  {
    v3 = (uint64_t *)MEMORY[0x24BEE4AF8];
  }
  else
  {
    sub_232000608(0, (unint64_t *)&qword_2541B78C8, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v3 = (uint64_t *)swift_allocObject();
    v4 = j__malloc_size(v3);
    v5 = v4 - 32;
    if (v4 < 32)
      v5 = v4 - 25;
    v3[2] = v2;
    v3[3] = (2 * (v5 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  v6 = sub_23201A644((uint64_t)&v8, v3 + 4, v2, a1);
  result = sub_23201B04C();
  if (v6 == v2)
    return (uint64_t)v3;
  __break(1u);
  return result;
}

uint64_t sub_23201A2B8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;

  if ((a1 & 0xC000000000000001) != 0)
  {
    v2 = sub_2322017DC();
    if (v2)
      goto LABEL_3;
    return MEMORY[0x24BEE4AF8];
  }
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return MEMORY[0x24BEE4AF8];
LABEL_3:
  if (v2 <= 0)
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  else
  {
    sub_232000608(0, (unint64_t *)&qword_2541B78C8, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v3 = (_QWORD *)swift_allocObject();
    v4 = j__malloc_size(v3);
    v5 = v4 - 32;
    if (v4 < 32)
      v5 = v4 - 25;
    v3[2] = v2;
    v3[3] = (2 * (v5 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  v6 = sub_23201A914(&v8, v3 + 4, v2, a1);
  result = sub_23201B04C();
  if (v6 == (_QWORD *)v2)
    return (uint64_t)v3;
  __break(1u);
  return result;
}

_QWORD *sub_23201A3C8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_232000608(0, (unint64_t *)&qword_2541B78C0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v3 = (_QWORD *)swift_allocObject();
  v4 = j__malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_23201AC1C((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_23201B04C();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t sub_23201A4C0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x24BEE4AF8];
    v8 = 2 * v5;
    if (v5 <= 0)
    {
      v9 = (_QWORD *)MEMORY[0x24BEE4AF8];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0)
          goto LABEL_19;
        v12 = a2 + 16 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8)
          goto LABEL_19;
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      sub_232000608(0, (unint64_t *)&qword_2541B78C0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
      v9 = (_QWORD *)swift_allocObject();
      v10 = j__malloc_size(v9);
      v11 = v10 - 32;
      if (v10 < 32)
        v11 = v10 - 17;
      v9[2] = v5;
      v9[3] = 2 * (v11 >> 4);
      if (v4 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_2322019E0();
  __break(1u);
  return result;
}

uint64_t sub_23201A644(uint64_t result, uint64_t *a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t *v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;

  v4 = a4;
  v6 = a2;
  v7 = (_QWORD *)result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    result = sub_23220192C();
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v4 = result | 0x8000000000000000;
    if (v6)
      goto LABEL_3;
LABEL_36:
    v11 = 0;
    a3 = 0;
LABEL_45:
    *v7 = v4;
    v7[1] = v8;
    v7[2] = v9;
    v7[3] = v11;
    v7[4] = v10;
    return a3;
  }
  v19 = -1 << *(_BYTE *)(a4 + 32);
  v8 = a4 + 64;
  v20 = ~v19;
  v21 = -v19;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  else
    v22 = -1;
  v10 = v22 & *(_QWORD *)(a4 + 64);
  v9 = v20;
  if (!a2)
    goto LABEL_36;
LABEL_3:
  if (!a3)
  {
    v11 = 0;
    goto LABEL_45;
  }
  if (a3 < 0)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  v23 = v9;
  v11 = 0;
  v12 = 0;
  v24 = (unint64_t)(v9 + 64) >> 6;
  while ((v4 & 0x8000000000000000) != 0)
  {
    if (!sub_232201950())
    {
      a3 = v12;
LABEL_44:
      v9 = v23;
      goto LABEL_45;
    }
    swift_unknownObjectRelease();
    sub_232003E9C(0, &qword_2541B0C80);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v15 = v25;
    result = swift_unknownObjectRelease();
    if (!v25)
      goto LABEL_43;
LABEL_8:
    ++v12;
    *v6++ = v15;
    if (v12 == a3)
      goto LABEL_44;
  }
  if (v10)
  {
    v13 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v14 = v13 | (v11 << 6);
    goto LABEL_7;
  }
  v16 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
    goto LABEL_47;
  }
  if (v16 >= v24)
    goto LABEL_39;
  v17 = *(_QWORD *)(v8 + 8 * v16);
  if (v17)
    goto LABEL_23;
  v11 += 2;
  if (v16 + 1 >= v24)
  {
    v10 = 0;
    v11 = v16;
    goto LABEL_43;
  }
  v17 = *(_QWORD *)(v8 + 8 * v11);
  if (v17)
  {
LABEL_16:
    v16 = v11;
LABEL_23:
    v10 = (v17 - 1) & v17;
    v14 = __clz(__rbit64(v17)) + (v16 << 6);
    v11 = v16;
LABEL_7:
    result = (uint64_t)*(id *)(*(_QWORD *)(v4 + 56) + 8 * v14);
    v15 = result;
    if (!result)
      goto LABEL_43;
    goto LABEL_8;
  }
  v18 = v16 + 2;
  if (v16 + 2 >= v24)
    goto LABEL_39;
  v17 = *(_QWORD *)(v8 + 8 * v18);
  if (v17)
  {
LABEL_22:
    v16 = v18;
    goto LABEL_23;
  }
  v11 = v16 + 3;
  if (v16 + 3 >= v24)
  {
    v10 = 0;
    v11 = v16 + 2;
    goto LABEL_43;
  }
  v17 = *(_QWORD *)(v8 + 8 * v11);
  if (v17)
    goto LABEL_16;
  v18 = v16 + 4;
  if (v16 + 4 >= v24)
  {
LABEL_39:
    v10 = 0;
LABEL_43:
    a3 = v12;
    goto LABEL_44;
  }
  v17 = *(_QWORD *)(v8 + 8 * v18);
  if (v17)
    goto LABEL_22;
  while (1)
  {
    v16 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v16 >= v24)
    {
      v10 = 0;
      v11 = v24 - 1;
      goto LABEL_43;
    }
    v17 = *(_QWORD *)(v8 + 8 * v16);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_48:
  __break(1u);
  return result;
}

_QWORD *sub_23201A914(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;

  v4 = a4;
  v6 = a2;
  v24 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_2322017A0();
    sub_232003E9C(0, (unint64_t *)&qword_2541B74A0);
    sub_23201A0F8((unint64_t *)&qword_2541B0C08, (unint64_t *)&qword_2541B74A0);
    result = (_QWORD *)sub_2322010F8();
    v4 = v27;
    v7 = v28;
    v8 = v29;
    v9 = v30;
    v10 = v31;
    if (v6)
      goto LABEL_3;
LABEL_36:
    v11 = 0;
    goto LABEL_38;
  }
  v9 = 0;
  v19 = -1 << *(_BYTE *)(a4 + 32);
  v7 = a4 + 56;
  v8 = ~v19;
  v20 = -v19;
  if (v20 < 64)
    v21 = ~(-1 << v20);
  else
    v21 = -1;
  v10 = v21 & *(_QWORD *)(a4 + 56);
  if (!a2)
    goto LABEL_36;
LABEL_3:
  if (!a3)
  {
    v11 = 0;
LABEL_38:
    v22 = v24;
LABEL_41:
    *v22 = v4;
    v22[1] = v7;
    v22[2] = v8;
    v22[3] = v9;
    v22[4] = v10;
    return (_QWORD *)v11;
  }
  if (a3 < 0)
    goto LABEL_48;
  v11 = 0;
  v25 = (unint64_t)(v8 + 64) >> 6;
  v23 = v8;
  while (1)
  {
    if (v4 < 0)
    {
      if (!sub_23220180C())
        goto LABEL_40;
      sub_232003E9C(0, (unint64_t *)&qword_2541B74A0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v14 = v26;
      result = (_QWORD *)swift_unknownObjectRelease();
      if (!v26)
        goto LABEL_40;
      goto LABEL_8;
    }
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v9 << 6);
      goto LABEL_7;
    }
    v15 = v9 + 1;
    if (__OFADD__(v9, 1))
      break;
    if (v15 >= v25)
    {
      v10 = 0;
      goto LABEL_40;
    }
    v16 = *(_QWORD *)(v7 + 8 * v15);
    if (v16)
      goto LABEL_23;
    v17 = v9 + 2;
    if (v9 + 2 >= v25)
    {
      v10 = 0;
      ++v9;
      goto LABEL_40;
    }
    v16 = *(_QWORD *)(v7 + 8 * v17);
    if (!v16)
    {
      if (v9 + 3 >= v25)
        goto LABEL_44;
      v16 = *(_QWORD *)(v7 + 8 * (v9 + 3));
      if (v16)
      {
        v15 = v9 + 3;
        goto LABEL_23;
      }
      v17 = v9 + 4;
      if (v9 + 4 >= v25)
      {
        v10 = 0;
        v9 += 3;
        goto LABEL_40;
      }
      v16 = *(_QWORD *)(v7 + 8 * v17);
      if (!v16)
      {
        v15 = v9 + 5;
        if (v9 + 5 >= v25)
        {
LABEL_44:
          v10 = 0;
          v9 = v17;
          goto LABEL_40;
        }
        v16 = *(_QWORD *)(v7 + 8 * v15);
        if (!v16)
        {
          v18 = v9 + 6;
          while (v25 != v18)
          {
            v16 = *(_QWORD *)(v7 + 8 * v18++);
            if (v16)
            {
              v15 = v18 - 1;
              goto LABEL_23;
            }
          }
          v10 = 0;
          v9 = v25 - 1;
          goto LABEL_40;
        }
        goto LABEL_23;
      }
    }
    v15 = v17;
LABEL_23:
    v10 = (v16 - 1) & v16;
    v13 = __clz(__rbit64(v16)) + (v15 << 6);
    v9 = v15;
LABEL_7:
    result = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v13);
    v14 = result;
    if (!result)
      goto LABEL_40;
LABEL_8:
    ++v11;
    *v6++ = v14;
    if (v11 == a3)
    {
      v11 = a3;
LABEL_40:
      v8 = v23;
      v22 = v24;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_23201AC1C(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_23201AE18(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  __int128 v21[2];
  __int128 v22[2];

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v13 = 0;
LABEL_36:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v13;
  }
  if (!a3)
  {
    v12 = 0;
    v13 = 0;
    goto LABEL_36;
  }
  if (a3 < 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v20 = -1 << *(_BYTE *)(a4 + 32);
  while (v9)
  {
    v15 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v16 = v15 | (v12 << 6);
LABEL_9:
    ++v13;
    sub_23201B304(*(_QWORD *)(a4 + 56) + 40 * v16, (uint64_t)v21);
    sub_2320167F8(v21, (uint64_t)v22);
    result = sub_2320167F8(v22, v11);
    v11 += 40;
    if (v13 == a3)
    {
      v13 = a3;
LABEL_35:
      v7 = v20;
      goto LABEL_36;
    }
  }
  v17 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v17 >= v14)
    goto LABEL_34;
  v18 = *(_QWORD *)(v6 + 8 * v17);
  if (v18)
    goto LABEL_23;
  v19 = v12 + 2;
  ++v12;
  if (v17 + 1 >= v14)
    goto LABEL_34;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_16;
  v12 = v17 + 1;
  if (v17 + 2 >= v14)
    goto LABEL_34;
  v18 = *(_QWORD *)(v6 + 8 * (v17 + 2));
  if (v18)
  {
    v17 += 2;
    goto LABEL_23;
  }
  v12 = v17 + 2;
  if (v17 + 3 >= v14)
    goto LABEL_34;
  v18 = *(_QWORD *)(v6 + 8 * (v17 + 3));
  if (v18)
  {
    v17 += 3;
    goto LABEL_23;
  }
  v19 = v17 + 4;
  v12 = v17 + 3;
  if (v17 + 4 >= v14)
  {
LABEL_34:
    v9 = 0;
    goto LABEL_35;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_16:
    v17 = v19;
LABEL_23:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
    goto LABEL_9;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v12 = v14 - 1;
      goto LABEL_34;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_23;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_23201B024(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23201B04C()
{
  return swift_release();
}

void sub_23201B054()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2C88)
  {
    sub_23201B100();
    sub_232000608(255, &qword_2541B3528, (uint64_t)&type metadata for CardioFitnessCurrentValueSummarySharableModelGenerator.CardioFitnessSampleWrapper, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for SummaryModelQueryOutput);
    sub_232000590(&qword_2541B79D0, (uint64_t (*)(uint64_t))sub_23201B100, MEMORY[0x24BDB9AF8]);
    v0 = sub_232200540();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2C88);
  }
}

void sub_23201B100()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B3010)
  {
    sub_23201B16C();
    sub_232002B9C();
    v0 = sub_232200624();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B3010);
  }
}

void sub_23201B16C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B5710)
  {
    sub_232003E9C(255, &qword_2541B0D68);
    v0 = sub_2322016F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B5710);
  }
}

uint64_t sub_23201B1D0()
{
  uint64_t v0;

  return swift_deallocObject();
}

double sub_23201B1F4@<D0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_232018B30(a1, *(void **)(v2 + 24), *(_BYTE *)(v2 + 32), a2);
}

uint64_t sub_23201B200(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_23201B23C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B27C0)
  {
    sub_2321FE734();
    sub_2321FE710();
    sub_232000590(&qword_2541B2338, (uint64_t (*)(uint64_t))MEMORY[0x24BE47EC8], MEMORY[0x24BE47ED8]);
    v0 = sub_232201BA8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B27C0);
  }
}

unint64_t sub_23201B2CC()
{
  unint64_t result;

  result = qword_255F9C148;
  if (!qword_255F9C148)
  {
    type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request(255);
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255F9C148);
  }
  return result;
}

uint64_t sub_23201B304(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t initializeBufferWithCopyOfBuffer for CardioFitnessCurrentValueSummarySharableModelGenerator.CardioFitnessSampleWrapper(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for CardioFitnessCurrentValueSummarySharableModelGenerator.CardioFitnessSampleWrapper(id *a1)
{

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CardioFitnessCurrentValueSummarySharableModelGenerator.CardioFitnessSampleWrapper(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v4 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CardioFitnessCurrentValueSummarySharableModelGenerator.CardioFitnessSampleWrapper(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for CardioFitnessCurrentValueSummarySharableModelGenerator.CardioFitnessSampleWrapper(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for CardioFitnessCurrentValueSummarySharableModelGenerator.CardioFitnessSampleWrapper(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CardioFitnessCurrentValueSummarySharableModelGenerator.CardioFitnessSampleWrapper(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CardioFitnessCurrentValueSummarySharableModelGenerator.CardioFitnessSampleWrapper(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.CardioFitnessSampleWrapper()
{
  return &type metadata for CardioFitnessCurrentValueSummarySharableModelGenerator.CardioFitnessSampleWrapper;
}

char *sub_23201B574(char *a1, uint64_t *a2, int *a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  uint64_t v30;
  id v31;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    v4 = (char *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_2321FD8B8();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v4, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))(v4, a2, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
    }
    v11 = a3[5];
    v12 = &v4[v11];
    v13 = (char *)a2 + v11;
    v14 = sub_2321FE4A0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    v15 = a3[7];
    v4[a3[6]] = *((_BYTE *)a2 + a3[6]);
    v16 = &v4[v15];
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = v17[1];
    *(_QWORD *)v16 = *v17;
    *((_QWORD *)v16 + 1) = v18;
    v19 = a3[8];
    v20 = &v4[v19];
    v21 = (char *)a2 + v19;
    v22 = sub_232200180();
    v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
    swift_bridgeObjectRetain();
    v23(v20, v21, v22);
    v24 = a3[9];
    v25 = a3[10];
    v26 = *(void **)((char *)a2 + v24);
    *(_QWORD *)&v4[v24] = v26;
    v4[v25] = *((_BYTE *)a2 + v25);
    v27 = a3[11];
    v28 = &v4[v27];
    v29 = (uint64_t *)((char *)a2 + v27);
    v30 = v29[1];
    *(_QWORD *)v28 = *v29;
    *((_QWORD *)v28 + 1) = v30;
    v31 = v26;
  }
  swift_retain();
  return v4;
}

uint64_t sub_23201B71C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_2321FD8B8();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = a1 + a2[5];
  v7 = sub_2321FE4A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  v8 = a1 + a2[8];
  v9 = sub_232200180();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);

  return swift_release();
}

char *sub_23201B7EC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  id v29;

  v6 = sub_2321FD8B8();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_2321FE4A0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  v13 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = v16;
  v17 = a3[8];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_232200180();
  v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
  swift_bridgeObjectRetain();
  v21(v18, v19, v20);
  v22 = a3[9];
  v23 = a3[10];
  v24 = *(void **)&a2[v22];
  *(_QWORD *)&a1[v22] = v24;
  a1[v23] = a2[v23];
  v25 = a3[11];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = *((_QWORD *)v27 + 1);
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *((_QWORD *)v26 + 1) = v28;
  v29 = v24;
  swift_retain();
  return a1;
}

char *sub_23201B96C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v6 = sub_2321FD8B8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_2321FE4A0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  a1[a3[6]] = a2[a3[6]];
  v16 = a3[7];
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a3[8];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = sub_232200180();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = *(void **)&a2[v23];
  v25 = *(void **)&a1[v23];
  *(_QWORD *)&a1[v23] = v24;
  v26 = v24;

  a1[a3[10]] = a2[a3[10]];
  v27 = a3[11];
  v28 = &a1[v27];
  v29 = &a2[v27];
  v30 = *((_QWORD *)v29 + 1);
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *((_QWORD *)v28 + 1) = v30;
  swift_retain();
  swift_release();
  return a1;
}

char *sub_23201BB54(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_2321FD8B8();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_2321FE4A0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  v13 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  v14 = a3[8];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = sub_232200180();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  v18 = a3[10];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  a1[v18] = a2[v18];
  *(_OWORD *)&a1[a3[11]] = *(_OWORD *)&a2[a3[11]];
  return a1;
}

char *sub_23201BCA4(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;

  v6 = sub_2321FD8B8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_2321FE4A0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v20 = *(_QWORD *)v18;
  v19 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v17 = v20;
  *((_QWORD *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  v21 = a3[8];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = sub_232200180();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 40))(v22, v23, v24);
  v25 = a3[9];
  v26 = *(void **)&a1[v25];
  *(_QWORD *)&a1[v25] = *(_QWORD *)&a2[v25];

  v27 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  *(_OWORD *)&a1[v27] = *(_OWORD *)&a2[v27];
  swift_release();
  return a1;
}

uint64_t sub_23201BE64()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23201BE70(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_2321FE4A0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_10:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_232200180();
    v12 = *(_QWORD *)(v8 - 8);
    v13 = a3[8];
    goto LABEL_10;
  }
  v14 = *(_QWORD *)(a1 + a3[7] + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_23201BF58()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23201BF64(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    result = sub_2321FE4A0();
    v14 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = result;
      v15 = a4[5];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(a1 + a4[7] + 8) = (a2 - 1);
        return result;
      }
      v10 = sub_232200180();
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[8];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_23201C048()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_2320057B8(319, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
  {
    sub_2321FE4A0();
    if (v1 <= 0x3F)
    {
      sub_232200180();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

id sub_23201C130(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id result;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  id v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  id v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  id v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  id v53;
  id v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _OWORD v63[2];
  uint64_t v64;
  uint64_t v65;

  v62 = sub_23220039C();
  v6 = *(_QWORD *)(v62 - 8);
  v7 = MEMORY[0x24BDAC7A8](v62);
  v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v59 - v10;
  sub_23201C800();
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v59 - v16;
  objc_opt_self();
  v18 = swift_dynamicCastObjCClass();
  if (!v18)
  {
    sub_232200354();
    v35 = a1;
    v36 = sub_232200390();
    v37 = sub_2322012E4();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = swift_slowAlloc();
      v61 = swift_slowAlloc();
      *(_QWORD *)&v63[0] = v61;
      *(_DWORD *)v38 = 136315394;
      v39 = sub_232201BF0();
      v65 = sub_232013174(v39, v40, (uint64_t *)v63);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 12) = 2080;
      v60 = v38 + 14;
      v41 = objc_msgSend(v35, sel_sampleType);
      v42 = objc_msgSend(v41, sel_identifier);

      v43 = sub_232200EC4();
      v45 = v44;

      v65 = sub_232013174(v43, v45, (uint64_t *)v63);
      sub_232201710();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v36, v37, "[%s]: Unsupported sample type: %s", (uint8_t *)v38, 0x16u);
      v46 = v61;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v46, -1, -1);
      MEMORY[0x2348FF468](v38, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v62);
    return 0;
  }
  v19 = (void *)v18;
  sub_232003E9C(0, &qword_255F9C098);
  v20 = a1;
  v21 = sub_2320105E8(v19);
  if (!v21)
  {
    sub_232200354();
    v47 = v20;
    v48 = sub_232200390();
    v49 = sub_2322012E4();
    if (os_log_type_enabled(v48, v49))
    {
      v50 = swift_slowAlloc();
      v61 = swift_slowAlloc();
      *(_QWORD *)&v63[0] = v61;
      *(_DWORD *)v50 = 136315394;
      v51 = sub_232201BF0();
      v65 = sub_232013174(v51, v52, (uint64_t *)v63);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v50 + 12) = 2080;
      v60 = v50 + 14;
      v53 = v47;
      v54 = objc_msgSend(v53, sel_description);
      v55 = sub_232200EC4();
      v57 = v56;

      v65 = sub_232013174(v55, v57, (uint64_t *)v63);
      sub_232201710();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v48, v49, "[%s]: Unable to create breathing disturbances data for sample: %s", (uint8_t *)v50, 0x16u);
      v58 = v61;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v58, -1, -1);
      MEMORY[0x2348FF468](v50, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v62);
    return 0;
  }
  v22 = (void *)v21;
  v23 = a2
      + *(int *)(type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request(0) + 32);
  v24 = sub_232200180();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v17, v23, v24);
  v25 = *MEMORY[0x24BE4AD70];
  v26 = sub_2321FFD78();
  v27 = *(_QWORD *)(v26 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 104))(v17, v25, v26);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v17, 0, 1, v26);
  v28 = a3;
  result = objc_msgSend(v22, sel_data);
  if (result)
  {
    v30 = result;
    sub_232003E9C(0, &qword_2541B0CD0);
    v31 = sub_2321FDAD4();
    v33 = v32;

    sub_23201C854((uint64_t)v17, (uint64_t)v15);
    v64 = 0;
    memset(v63, 0, sizeof(v63));
    v34 = sub_232015828(v31, v33, 20, (uint64_t)v15, (uint64_t)v28, 0, (uint64_t)v63);

    sub_232003ED4(v31, v33);
    sub_23201C898((uint64_t)v17);

    return v34;
  }
  __break(1u);
  return result;
}

uint64_t sub_23201C72C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC9Summaries57MostRecentSampleCurrentValueSummarySharableModelGenerator_domain;
  v2 = sub_2321FE3BC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_23201C788()
{
  return type metadata accessor for BreathingDisturbancesCurrentValueSummarySharableModelGenerator();
}

uint64_t type metadata accessor for BreathingDisturbancesCurrentValueSummarySharableModelGenerator()
{
  uint64_t result;

  result = qword_255F9C178;
  if (!qword_255F9C178)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23201C7CC()
{
  return swift_updateClassMetadata2();
}

void sub_23201C800()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2A70)
  {
    sub_2321FFD78();
    v0 = sub_2322016F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2A70);
  }
}

uint64_t sub_23201C854(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23201C800();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23201C898(uint64_t a1)
{
  uint64_t v2;

  sub_23201C800();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23201C8D4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void (*v12)(unint64_t, _QWORD, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v16 = a2;
  v15 = sub_2321FE38C();
  v3 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2321FE3F8();
  sub_2320057B8(0, &qword_2541B7530, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v6 = sub_2321FE194();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 72);
  v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_232210EF0;
  v11 = v10 + v9;
  v12 = *(void (**)(unint64_t, _QWORD, uint64_t))(v7 + 104);
  v12(v11, *MEMORY[0x24BE47460], v6);
  v12(v11 + v8, *MEMORY[0x24BE47490], v6);
  v12(v11 + 2 * v8, *MEMORY[0x24BE47410], v6);
  v12(v11 + 3 * v8, *MEMORY[0x24BE47448], v6);
  v12(v11 + 4 * v8, *MEMORY[0x24BE47440], v6);
  v17 = a1;
  sub_2320057B8(0, &qword_2541B54E8, type metadata accessor for SummaryModelConfiguration, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_232025E68((unint64_t *)&qword_2541B54F0, &qword_2541B54E8, type metadata accessor for SummaryModelConfiguration, MEMORY[0x24BEE12E0]);
  sub_232000590(&qword_2541B3930, type metadata accessor for SummaryModelConfiguration, (uint64_t)&protocol conformance descriptor for SummaryModelConfiguration);
  if ((unint64_t)sub_232201110() >> 62)
  {
    sub_232003E9C(0, (unint64_t *)&qword_2541B74A0);
    sub_232201980();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_232201AE8();
    sub_232003E9C(0, (unint64_t *)&qword_2541B74A0);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BE47918], v15);
  return sub_2321FE3A4();
}

uint64_t sub_23201CB7C(uint64_t a1, uint64_t a2)
{
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[6];

  v4 = (uint64_t (*)(uint64_t, uint64_t))sub_232201224();
  v5 = v4(a1, a2);
  swift_release();
  v8[5] = v5;
  sub_2321FE434();
  sub_232025DB0(0);
  sub_232000590(&qword_2541B3028, (uint64_t (*)(uint64_t))sub_232025DB0, MEMORY[0x24BDB9AF8]);
  v6 = sub_232200738();
  sub_232016AFC((uint64_t)v8);
  swift_release();
  return v6;
}

uint64_t sub_23201CC4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[6];

  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23220120C();
  v7 = v6(a1, a2, a3);
  swift_release();
  v10[5] = v7;
  sub_2321FE434();
  sub_232025CF0(0);
  sub_232000590(&qword_2541B3018, (uint64_t (*)(uint64_t))sub_232025CF0, MEMORY[0x24BDB9AF8]);
  v8 = sub_232200738();
  sub_232016AFC((uint64_t)v10);
  swift_release();
  return v8;
}

uint64_t sub_23201CD24()
{
  return HKCodableSummaryData.isContentCompatibleWithCurrentVersion.getter() & 1;
}

_QWORD *sub_23201CD48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t, uint64_t);
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  void *v37;
  id v38;
  char *v39;
  char *v40;
  void (*v41)(char *, uint64_t, uint64_t);
  NSObject *v42;
  os_log_type_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  void *v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  char *v54;
  void (*v55)(char *, uint64_t);
  char *v56;
  uint64_t v57;
  unint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  os_log_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  char *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t (*v73)(void);
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  void *v84;
  void *v85;
  id v86;
  id v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *result;
  uint64_t v94;
  os_log_t v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  id v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  void (*v105)(char *, uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107;
  id v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  void (*v119)(char *, uint64_t, uint64_t);
  char *v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD v128[4];

  v4 = v3;
  v123 = a3;
  v125 = *(_QWORD *)v4;
  v7 = sub_2321FE3BC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v109 = v9;
  v110 = (char *)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232024D3C();
  v112 = v10;
  v111 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v122 = (char *)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232024EB4();
  v114 = *(_QWORD *)(v12 - 8);
  v115 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v113 = (char *)&v94 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2321FE440();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v104 = (char *)&v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v121 = (char *)&v94 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v120 = (char *)&v94 - v21;
  v106 = v22;
  MEMORY[0x24BDAC7A8](v20);
  v99 = (char *)&v94 - v23;
  v103 = sub_23220039C();
  v102 = *(_QWORD *)(v103 - 8);
  MEMORY[0x24BDAC7A8](v103);
  v25 = (char *)&v94 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = sub_2321FDDD4();
  v26 = *(_QWORD *)(v126 - 8);
  MEMORY[0x24BDAC7A8](v126);
  v28 = (char *)&v94 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = v15;
  v119 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v119(&v4[OBJC_IVAR____TtC9Summaries39SummariesSharableModelGeneratorPipeline_context], a1, v14);
  v116 = v8;
  v117 = v7;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v124 = a2;
  v105 = v29;
  v29(&v4[OBJC_IVAR____TtC9Summaries39SummariesSharableModelGeneratorPipeline_domain], a2, v7);
  v30 = objc_msgSend(objc_allocWithZone((Class)sub_2321FEB9C()), sel_init);
  *(_QWORD *)&v4[OBJC_IVAR____TtC9Summaries39SummariesSharableModelGeneratorPipeline_calendarCache] = v30;
  v31 = v30;
  sub_2321FE3D4();
  sub_232016AD8(v128, v128[3]);
  v32 = (void *)sub_2321FE314();
  v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A658]), sel_initWithHealthStore_, v32);

  sub_232016AFC((uint64_t)v128);
  v108 = v31;
  v34 = objc_msgSend(v31, sel_currentCalendar);
  sub_2321FDD68();

  v35 = objc_allocWithZone(MEMORY[0x24BE4A5B0]);
  v36 = (void *)sub_2321FDD5C();
  v37 = (void *)sub_232200E94();
  v38 = objc_msgSend(v35, sel_initWithCalendar_queryIdentifier_, v36, v37);

  v39 = v28;
  v40 = v99;
  (*(void (**)(char *, uint64_t))(v26 + 8))(v39, v126);
  objc_msgSend(v33, sel_setSleepDataSourceProvider_, v38);

  v118 = v4;
  *(_QWORD *)&v4[OBJC_IVAR____TtC9Summaries39SummariesSharableModelGeneratorPipeline_chartFactory] = v33;
  v41 = v119;
  v100 = v33;
  sub_232200318();
  v41(v40, a1, v14);
  v41(v120, a1, v14);
  v126 = a1;
  v41(v121, a1, v14);
  v101 = v25;
  v42 = sub_232200390();
  v43 = sub_2322012FC();
  v44 = v43;
  if (os_log_type_enabled(v42, v43))
  {
    v45 = swift_slowAlloc();
    v96 = v44;
    v46 = v45;
    v97 = swift_slowAlloc();
    v127 = v97;
    *(_DWORD *)v46 = 136315906;
    v95 = v42;
    v128[0] = v125;
    swift_getMetatypeMetadata();
    v47 = sub_232200F00();
    v128[0] = sub_232013174(v47, v48, &v127);
    sub_232201710();
    swift_bridgeObjectRelease();
    *(_WORD *)(v46 + 12) = 2080;
    v49 = (void *)sub_2321FE3F8();
    v50 = sub_2321FE1B8();
    v52 = v51;

    v128[0] = sub_232013174(v50, v52, &v127);
    sub_232201710();
    swift_bridgeObjectRelease();
    v53 = v107;
    v54 = v40;
    v55 = *(void (**)(char *, uint64_t))(v107 + 8);
    v55(v54, v14);
    *(_WORD *)(v46 + 22) = 2080;
    v56 = v120;
    sub_2321FE3E0();
    v57 = sub_2321FE83C();
    v128[0] = sub_232013174(v57, v58, &v127);
    sub_232201710();
    swift_bridgeObjectRelease();
    v55(v56, v14);
    *(_WORD *)(v46 + 32) = 2080;
    v59 = v104;
    v60 = v121;
    v41(v104, (uint64_t)v121, v14);
    v61 = sub_232200F00();
    v128[0] = sub_232013174(v61, v62, &v127);
    sub_232201710();
    swift_bridgeObjectRelease();
    v121 = (char *)v55;
    v55(v60, v14);
    v63 = v95;
    _os_log_impl(&dword_231FFB000, v95, (os_log_type_t)v96, "[%s]_<%s>_%s: Initializing publisher for context: %s", (uint8_t *)v46, 0x2Au);
    v64 = v97;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v64, -1, -1);
    MEMORY[0x2348FF468](v46, -1, -1);

    (*(void (**)(char *, uint64_t))(v102 + 8))(v101, v103);
    v65 = v125;
  }
  else
  {
    v53 = v107;
    v66 = *(void (**)(char *, uint64_t))(v107 + 8);
    v66(v40, v14);
    v66(v120, v14);
    v67 = v121;
    v121 = (char *)v66;
    v66(v67, v14);

    (*(void (**)(char *, uint64_t))(v102 + 8))(v101, v103);
    v65 = v125;
    v59 = v104;
  }
  v128[0] = v123;
  v41(v59, v126, v14);
  v68 = *(unsigned __int8 *)(v53 + 80);
  v104 = (char *)(v68 | 7);
  v69 = (v68 + 16) & ~v68;
  v120 = (char *)v69;
  v70 = (v106 + v69 + 7) & 0xFFFFFFFFFFFFFFF8;
  v71 = swift_allocObject();
  v107 = *(_QWORD *)(v53 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v107)(v71 + v69, v59, v14);
  *(_QWORD *)(v71 + v70) = v65;
  sub_232024E20();
  v72 = v14;
  v73 = MEMORY[0x24BDB9AE0];
  sub_232025C30(0, &qword_2541B24C0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
  v74 = MEMORY[0x24BDB9AF8];
  sub_232000590(&qword_2541B24A8, (uint64_t (*)(uint64_t))sub_232024E20, MEMORY[0x24BDB9AF8]);
  sub_232025CB0(&qword_2541B24B8, &qword_2541B24C0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v73, v74);
  sub_2322007D4();
  swift_release();
  v75 = v59;
  v76 = v72;
  v98 = v72;
  v119(v59, v126, v72);
  v77 = v110;
  v78 = v117;
  v105(v110, v124, v117);
  v79 = (v70 + 15) & 0xFFFFFFFFFFFFFFF8;
  v80 = v116;
  v81 = (v79 + *(unsigned __int8 *)(v116 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80);
  v82 = (v109 + v81 + 7) & 0xFFFFFFFFFFFFFFF8;
  v83 = swift_allocObject();
  ((void (*)(char *, char *, uint64_t))v107)(&v120[v83], v75, v76);
  v84 = v100;
  *(_QWORD *)(v83 + v70) = v100;
  v85 = v108;
  *(_QWORD *)(v83 + v79) = v108;
  (*(void (**)(unint64_t, char *, uint64_t))(v80 + 32))(v83 + v81, v77, v78);
  *(_QWORD *)(v83 + v82) = v125;
  sub_232016A8C(0, &qword_2541B28D8);
  sub_232000590(&qword_2541B2440, (uint64_t (*)(uint64_t))sub_232024D3C, MEMORY[0x24BDB9740]);
  v86 = v85;
  v87 = v84;
  v89 = v112;
  v88 = v113;
  v90 = v122;
  sub_232200780();
  swift_release();
  (*(void (**)(char *, uint64_t))(v111 + 8))(v90, v89);
  sub_232000590(&qword_2541B23B0, (uint64_t (*)(uint64_t))sub_232024EB4, MEMORY[0x24BDB94C8]);
  v91 = v115;
  v92 = sub_232200774();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v124, v78);
  ((void (*)(uint64_t, uint64_t))v121)(v126, v98);
  (*(void (**)(char *, uint64_t))(v114 + 8))(v88, v91);
  result = v118;
  *(_QWORD *)((char *)v118 + OBJC_IVAR____TtC9Summaries39SummariesSharableModelGeneratorPipeline_publisher) = v92;
  return result;
}

uint64_t sub_23201D7A4@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  void (*v21)(char *, uint64_t, uint64_t);
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void *v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  char *v38;
  uint64_t v39;
  unint64_t v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t result;
  _QWORD v48[2];
  os_log_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;

  v52 = a3;
  v58 = a4;
  sub_232025C30(0, &qword_255F9C2B8, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9E10]);
  v7 = v6;
  v53 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v48 - v8;
  v10 = sub_2321FE440();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v48 - v15;
  v17 = sub_23220039C();
  v56 = *(_QWORD *)(v17 - 8);
  v57 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *a1;
  sub_232200318();
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v21(v16, a2, v10);
  v54 = v14;
  v21(v14, a2, v10);
  v22 = v20;
  v23 = v20;
  v55 = v19;
  v24 = sub_232200390();
  v25 = sub_2322012E4();
  v26 = v25;
  if (os_log_type_enabled(v24, v25))
  {
    v27 = swift_slowAlloc();
    v50 = v26;
    v28 = v27;
    v51 = swift_slowAlloc();
    v60 = v51;
    *(_DWORD *)v28 = 136315906;
    v49 = v24;
    v29 = sub_232201BF0();
    v59 = sub_232013174(v29, v30, &v60);
    v52 = v7;
    v48[1] = &v60;
    sub_232201710();
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 12) = 2080;
    v31 = (void *)sub_2321FE3F8();
    v32 = v9;
    v33 = sub_2321FE1B8();
    v35 = v34;

    v36 = v33;
    v9 = v32;
    v59 = sub_232013174(v36, v35, &v60);
    sub_232201710();
    swift_bridgeObjectRelease();
    v37 = *(void (**)(char *, uint64_t))(v11 + 8);
    v37(v16, v10);
    *(_WORD *)(v28 + 22) = 2080;
    v38 = v54;
    sub_2321FE3E0();
    v39 = sub_2321FE83C();
    v59 = sub_232013174(v39, v40, &v60);
    v7 = v52;
    sub_232201710();
    swift_bridgeObjectRelease();
    v37(v38, v10);
    *(_WORD *)(v28 + 32) = 2080;
    v59 = (uint64_t)v20;
    v41 = v20;
    sub_232016A8C(0, (unint64_t *)&qword_2541B78D0);
    v42 = sub_232200F00();
    v59 = sub_232013174(v42, v43, &v60);
    sub_232201710();
    swift_bridgeObjectRelease();

    v24 = v49;
    _os_log_impl(&dword_231FFB000, v49, (os_log_type_t)v50, "[%s]_%s_%s: Failed to create requests publisher: %s", (uint8_t *)v28, 0x2Au);
    v44 = v51;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v44, -1, -1);
    MEMORY[0x2348FF468](v28, -1, -1);
  }
  else
  {
    v45 = *(void (**)(char *, uint64_t))(v11 + 8);
    v45(v16, v10);
    v45(v54, v10);

  }
  (*(void (**)(char *, uint64_t))(v56 + 8))(v55, v57);
  sub_2320057B8(0, (unint64_t *)&unk_2541B2348, type metadata accessor for SummaryModelConfiguration.Request, MEMORY[0x24BE41D18]);
  sub_2322006C0();
  sub_232025CB0(qword_255F9C2C0, &qword_255F9C2B8, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9E10], MEMORY[0x24BDB9E20]);
  v46 = sub_232200774();
  result = (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v9, v7);
  *v58 = v46;
  return result;
}

void sub_23201DC34(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, NSObject *a4@<X3>, uint64_t a5@<X4>, NSObject *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10;
  NSObject *v11;
  Class isa;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  NSObject *v33;
  void *v34;
  NSObject *v35;
  id v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, NSObject *);
  NSObject *v39;
  id v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  void *v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  void (*v53)(char *, NSObject *);
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  void *v57;
  id v58;
  id v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  os_log_t v63;
  char *v64;
  unint64_t v65;
  void (*v66)(char *, uint64_t, NSObject *);
  void *v67;
  NSObject *v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  void *v73;
  Class v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  void (*v78)(char *, os_log_t);
  os_log_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  char *v90;
  void *v91;
  uint64_t v92;
  id v93;
  uint64_t v94;
  os_log_t v95;
  uint64_t v96;
  char *v97;
  void (*v98)(char *, uint64_t, NSObject *);
  NSObject *v99;
  char *v100;
  NSObject *v101;
  os_log_type_t v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  char *v108;
  void *v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  void (*v113)(char *, os_log_t);
  char *v114;
  os_log_t v115;
  char *v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  unint64_t v127;
  unint64_t v128;
  os_log_t v129;
  char *v130;
  void (*v131)(char *, NSObject *);
  char *v132;
  uint64_t v133;
  uint64_t v134;
  id v135;
  id v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t *v142;
  void (*v143)(char *, NSObject *);
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t *v149;
  void (*v150)(char *, NSObject *);
  uint64_t v151;
  char *v152;
  os_log_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  os_log_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t *v162;
  unint64_t v163;
  id v164;
  char *v165;
  _QWORD v166[5];
  __int128 v167;
  uint64_t v168;
  __int128 v169[3];

  v158 = a6;
  v156 = a5;
  v153 = a4;
  v162 = (uint64_t *)a7;
  v155 = sub_2321FE3BC();
  v159 = *(char **)(v155 - 8);
  MEMORY[0x24BDAC7A8](v155);
  v157 = (char *)&v151 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2321FE440();
  isa = v11[-1].isa;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v151 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v151 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v151 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)&v151 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22);
  v152 = (char *)&v151 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v154 = (char *)&v151 - v27;
  v161 = sub_23220039C();
  v160 = *(_QWORD *)(v161 - 8);
  v28 = MEMORY[0x24BDAC7A8](v161);
  v29 = MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)&v151 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v34 = *(void **)(a1 + 8);
  v163 = *(_QWORD *)a1;
  v164 = v34;
  if (*(_BYTE *)(a1 + 16))
  {
    if (*(_BYTE *)(a1 + 16) == 1)
    {
      v35 = v33;
      v36 = v164;
      sub_232200318();
      v37 = (uint64_t)isa;
      v38 = (void (*)(char *, uint64_t, NSObject *))*((_QWORD *)isa + 2);
      v39 = v11;
      v38(v18, a2, v11);
      v38(v15, a2, v11);
      v40 = v36;
      v41 = v163;
      swift_bridgeObjectRetain_n();
      v164 = v40;
      v42 = sub_232200390();
      v43 = sub_2322012FC();
      v44 = v43;
      if (os_log_type_enabled(v42, v43))
      {
        v45 = swift_slowAlloc();
        v151 = v37;
        v46 = v45;
        v154 = (char *)swift_slowAlloc();
        *(_QWORD *)&v167 = v154;
        *(_DWORD *)v46 = 136316162;
        v153 = v42;
        *(_QWORD *)&v169[0] = v158;
        swift_getMetatypeMetadata();
        LODWORD(v152) = v44;
        v47 = sub_232200F00();
        *(_QWORD *)&v169[0] = sub_232013174(v47, v48, (uint64_t *)&v167);
        v158 = v35;
        sub_232201710();
        swift_bridgeObjectRelease();
        *(_WORD *)(v46 + 12) = 2080;
        v49 = (void *)sub_2321FE3F8();
        v50 = sub_2321FE1B8();
        v52 = v51;

        *(_QWORD *)&v169[0] = sub_232013174(v50, v52, (uint64_t *)&v167);
        sub_232201710();
        swift_bridgeObjectRelease();
        v53 = *(void (**)(char *, NSObject *))(v151 + 8);
        v53(v18, v39);
        *(_WORD *)(v46 + 22) = 2080;
        sub_2321FE3E0();
        v54 = sub_2321FE83C();
        *(_QWORD *)&v169[0] = sub_232013174(v54, v55, (uint64_t *)&v167);
        sub_232201710();
        swift_bridgeObjectRelease();
        v53(v15, v39);
        *(_WORD *)(v46 + 32) = 2048;
        v56 = *(_QWORD *)(v41 + 16);
        swift_bridgeObjectRelease();
        *(_QWORD *)&v169[0] = v56;
        sub_232201710();
        swift_bridgeObjectRelease();
        *(_WORD *)(v46 + 42) = 2080;
        v57 = v164;
        v58 = v164;
        v59 = objc_msgSend(v58, sel_description);
        v60 = sub_232200EC4();
        v62 = v61;

        *(_QWORD *)&v169[0] = sub_232013174(v60, v62, (uint64_t *)&v167);
        sub_232201710();

        swift_bridgeObjectRelease();
        v63 = v153;
        _os_log_impl(&dword_231FFB000, v153, (os_log_type_t)v152, "[%s]_<%s>_%s: Emitting updateAnchorMetadata for %ld sharable models to anchor %s", (uint8_t *)v46, 0x34u);
        v64 = v154;
        swift_arrayDestroy();
        MEMORY[0x2348FF468](v64, -1, -1);
        MEMORY[0x2348FF468](v46, -1, -1);

        (*(void (**)(os_log_t, uint64_t))(v160 + 8))(v158, v161);
      }
      else
      {
        swift_bridgeObjectRelease();
        v131 = *(void (**)(char *, NSObject *))(v37 + 8);
        v131(v18, v39);
        v131(v15, v39);

        v57 = v164;
        swift_bridgeObjectRelease();
        (*(void (**)(NSObject *, uint64_t))(v160 + 8))(v35, v161);
      }
      v132 = v157;
      v133 = v156;
      v134 = v155;
      v135 = v57;
      v136 = sub_232024934(v41, v135);

      sub_2320057B8(0, &qword_2541B57D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE48110], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v137 = *(_QWORD *)(sub_2321FE7F4() - 8);
      v138 = (*(unsigned __int8 *)(v137 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v137 + 80);
      v139 = swift_allocObject();
      *(_OWORD *)(v139 + 16) = xmmword_232210D40;
      *(_QWORD *)(v139 + v138) = v136;
      (*(void (**)(void))(v137 + 104))();
      (*((void (**)(char *, uint64_t, uint64_t))v159 + 2))(v132, v133, v134);
      v140 = sub_2321FE860();
      v141 = MEMORY[0x24BE48208];
      v142 = v162;
      v162[3] = v140;
      v142[4] = v141;
      sub_2320251BC(v142);
      sub_2321FE854();

    }
    else
    {
      v90 = (char *)&v151 - v32;
      v166[3] = sub_232003E9C(0, (unint64_t *)&qword_2541B7EC8);
      v166[4] = &protocol witness table for HKHealthChartFactory;
      v166[0] = a3;
      sub_232003E9C(0, &qword_2541B10E0);
      v92 = v163;
      v91 = v164;
      sub_2320251F8(v163, v164, 2);
      v93 = a3;
      v94 = sub_2322014D0();
      v95 = v158;
      sub_23201EDC0(v92, a2, (uint64_t)v166, (uint64_t)v153, v94, v96, (uint64_t)&v167);
      swift_release();
      sub_232016AFC((uint64_t)v166);
      if (v168)
      {
        sub_2320167F8(&v167, (uint64_t)v169);
        v97 = v90;
        sub_232200318();
        v98 = (void (*)(char *, uint64_t, NSObject *))*((_QWORD *)isa + 2);
        v99 = v11;
        v98(v154, a2, v11);
        v100 = v152;
        v98(v152, a2, v99);
        sub_23201B304((uint64_t)v169, (uint64_t)&v167);
        sub_2320251F8(v92, v91, 2);
        sub_2320251F8(v92, v91, 2);
        sub_2320251F8(v92, v91, 2);
        sub_2320251F8(v92, v91, 2);
        sub_2320251F8(v92, v91, 2);
        swift_retain();
        v101 = sub_232200390();
        v102 = sub_2322012FC();
        v103 = v102;
        if (os_log_type_enabled(v101, v102))
        {
          v104 = swift_slowAlloc();
          v153 = v99;
          v105 = v104;
          v157 = (char *)swift_slowAlloc();
          v165 = v157;
          v166[0] = v95;
          *(_DWORD *)v105 = 136316674;
          LODWORD(v156) = v103;
          swift_getMetatypeMetadata();
          v159 = v97;
          v158 = v101;
          v106 = sub_232200F00();
          v166[0] = sub_232013174(v106, v107, (uint64_t *)&v165);
          sub_232201710();
          swift_bridgeObjectRelease();
          *(_WORD *)(v105 + 12) = 2080;
          v108 = v154;
          v109 = (void *)sub_2321FE3F8();
          v110 = sub_2321FE1B8();
          v112 = v111;

          v166[0] = sub_232013174(v110, v112, (uint64_t *)&v165);
          sub_232201710();
          swift_bridgeObjectRelease();
          v113 = (void (*)(char *, os_log_t))*((_QWORD *)isa + 1);
          v114 = v108;
          v115 = v153;
          v113(v114, v153);
          *(_WORD *)(v105 + 22) = 2080;
          v116 = v152;
          sub_2321FE3E0();
          v117 = sub_2321FE83C();
          v166[0] = sub_232013174(v117, v118, (uint64_t *)&v165);
          sub_232201710();
          swift_bridgeObjectRelease();
          v113(v116, v115);
          *(_WORD *)(v105 + 32) = 2080;
          if (*(_BYTE *)(v92 + 16))
            v119 = 0x676E6972616873;
          else
            v119 = 0x7972616D697270;
          v166[0] = sub_232013174(v119, 0xE700000000000000, (uint64_t *)&v165);
          sub_232201710();
          swift_bridgeObjectRelease();
          sub_232025240(v92, v91, 2);
          sub_232025240(v92, v91, 2);
          *(_WORD *)(v105 + 42) = 2080;
          sub_232016AD8(&v167, v168);
          swift_getDynamicType();
          v120 = sub_232201BF0();
          v166[0] = sub_232013174(v120, v121, (uint64_t *)&v165);
          sub_232201710();
          swift_bridgeObjectRelease();
          sub_232016AFC((uint64_t)&v167);
          *(_WORD *)(v105 + 52) = 2080;
          v122 = sub_232003E9C(0, (unint64_t *)&qword_2541B7EA8);
          v123 = swift_bridgeObjectRetain();
          v124 = MEMORY[0x2348FE1C0](v123, v122);
          v126 = v125;
          swift_bridgeObjectRelease();
          v166[0] = sub_232013174(v124, v126, (uint64_t *)&v165);
          sub_232201710();
          swift_bridgeObjectRelease();
          sub_232025240(v92, v91, 2);
          sub_232025240(v92, v91, 2);
          *(_WORD *)(v105 + 62) = 2080;
          v127 = AnchoredTypeState.logDescription.getter();
          v166[0] = sub_232013174(v127, v128, (uint64_t *)&v165);
          sub_232201710();
          swift_bridgeObjectRelease();
          sub_232025240(v92, v91, 2);
          sub_232025240(v92, v91, 2);
          v129 = v158;
          _os_log_impl(&dword_231FFB000, v158, (os_log_type_t)v156, "[%s]_<%s>_%s_audience=%s: Emitting %s for type: %s, typeState: %s", (uint8_t *)v105, 0x48u);
          v130 = v157;
          swift_arrayDestroy();
          MEMORY[0x2348FF468](v130, -1, -1);
          MEMORY[0x2348FF468](v105, -1, -1);

          sub_232025240(v92, v91, 2);
          (*(void (**)(char *, uint64_t))(v160 + 8))(v159, v161);
        }
        else
        {
          sub_232025240(v92, v91, 2);
          v150 = (void (*)(char *, NSObject *))*((_QWORD *)isa + 1);
          v150(v154, v99);
          v150(v100, v99);
          sub_232025240(v92, v91, 2);
          sub_232025240(v92, v91, 2);
          sub_232016AFC((uint64_t)&v167);
          sub_232025240(v92, v91, 2);
          sub_232025240(v92, v91, 2);
          swift_release();

          swift_release();
          (*(void (**)(char *, uint64_t))(v160 + 8))(v97, v161);
        }
        sub_2320167F8(v169, (uint64_t)v162);
      }
      else
      {
        sub_232025240(v92, v91, 2);
        sub_2320254AC((uint64_t)&v167, &qword_255F9C220, &qword_2541B28D8);
        v149 = v162;
        v162[4] = 0;
        *(_OWORD *)v149 = 0u;
        *((_OWORD *)v149 + 1) = 0u;
      }
    }
  }
  else
  {
    v65 = v163;
    swift_bridgeObjectRetain();
    sub_232200318();
    v66 = (void (*)(char *, uint64_t, NSObject *))*((_QWORD *)isa + 2);
    v66(v24, a2, v11);
    v66(v21, a2, v11);
    v67 = v164;
    sub_2320251F8(v65, v164, 0);
    swift_bridgeObjectRetain();
    v68 = sub_232200390();
    v69 = sub_2322012FC();
    if (os_log_type_enabled(v68, (os_log_type_t)v69))
    {
      LODWORD(v152) = v69;
      v154 = v31;
      v70 = swift_slowAlloc();
      v151 = swift_slowAlloc();
      *(_QWORD *)&v167 = v151;
      *(_DWORD *)v70 = 136315906;
      *(_QWORD *)&v169[0] = v158;
      swift_getMetatypeMetadata();
      v153 = v11;
      v71 = sub_232200F00();
      *(_QWORD *)&v169[0] = sub_232013174(v71, v72, (uint64_t *)&v167);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v70 + 12) = 2080;
      v73 = (void *)sub_2321FE3F8();
      v74 = isa;
      v75 = sub_2321FE1B8();
      v77 = v76;

      *(_QWORD *)&v169[0] = sub_232013174(v75, v77, (uint64_t *)&v167);
      v65 = v163;
      sub_232201710();
      swift_bridgeObjectRelease();
      v78 = (void (*)(char *, os_log_t))*((_QWORD *)v74 + 1);
      v79 = v153;
      v78(v24, v153);
      *(_WORD *)(v70 + 22) = 2080;
      sub_2321FE3E0();
      v80 = sub_2321FE83C();
      *(_QWORD *)&v169[0] = sub_232013174(v80, v81, (uint64_t *)&v167);
      sub_232201710();
      swift_bridgeObjectRelease();
      v78(v21, v79);
      *(_WORD *)(v70 + 32) = 2048;
      if (v65 >> 62)
      {
        swift_bridgeObjectRetain();
        v82 = sub_232201998();
        sub_232025240(v65, v164, 0);
      }
      else
      {
        v82 = *(_QWORD *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      v83 = v162;
      v84 = v160;
      v85 = v157;
      v86 = v156;
      v87 = v155;
      v88 = v164;
      sub_232025240(v65, v164, 0);
      *(_QWORD *)&v169[0] = v82;
      sub_232201710();
      sub_232025240(v65, v88, 0);
      _os_log_impl(&dword_231FFB000, v68, (os_log_type_t)v152, "[%s]_<%s>_%s: Emitting reuse for %ld shared summaries", (uint8_t *)v70, 0x2Au);
      v89 = v151;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v89, -1, -1);
      MEMORY[0x2348FF468](v70, -1, -1);

      (*(void (**)(char *, uint64_t))(v84 + 8))(v154, v161);
    }
    else
    {
      sub_232025240(v65, v67, 0);
      v143 = (void (*)(char *, NSObject *))*((_QWORD *)isa + 1);
      v143(v24, v11);
      v143(v21, v11);
      sub_232025240(v65, v67, 0);

      (*(void (**)(char *, uint64_t))(v160 + 8))(v31, v161);
      v83 = v162;
      v85 = v157;
      v86 = v156;
      v87 = v155;
    }
    sub_2320057B8(0, &qword_2541B57D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE48110], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v144 = *(_QWORD *)(sub_2321FE7F4() - 8);
    v145 = (*(unsigned __int8 *)(v144 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v144 + 80);
    v146 = swift_allocObject();
    *(_OWORD *)(v146 + 16) = xmmword_232210D40;
    *(_QWORD *)(v146 + v145) = v65;
    (*(void (**)(void))(v144 + 104))();
    (*((void (**)(char *, uint64_t, uint64_t))v159 + 2))(v85, v86, v87);
    v147 = sub_2321FE860();
    v148 = MEMORY[0x24BE48208];
    v83[3] = v147;
    v83[4] = v148;
    sub_2320251BC(v83);
    sub_2321FE854();
  }
}

void sub_23201EDC0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  _QWORD v20[4];
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v30 = a5;
  v29 = a6;
  v20[1] = a4;
  v20[0] = a3;
  v33 = a2;
  v34 = a7;
  v24 = type metadata accessor for CorrelatedTrendSummarySharableModelGenerator.Request(0);
  MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_2321FE440();
  v20[2] = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_2321FFF1C();
  v27 = *(_QWORD *)(v31 - 8);
  v10 = MEMORY[0x24BDAC7A8](v31);
  v23 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v26 = (char *)v20 - v12;
  v22 = sub_2321FFE08();
  v20[3] = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v13 = sub_2321FFD78();
  MEMORY[0x24BDAC7A8](v13);
  sub_232025288(0);
  MEMORY[0x24BDAC7A8](v14);
  v15 = type metadata accessor for SummaryModelConfiguration.Kind(0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = a1;
  v18 = *(_QWORD *)(a1 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_modelConfiguration)
      + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind;
  swift_beginAccess();
  sub_23200054C(v18, (uint64_t)v17, type metadata accessor for SummaryModelConfiguration.Kind);
  v19 = (char *)sub_23201F044 + 4 * byte_232210F10[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23201F044()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  void *v9;
  uint64_t v10;

  v3 = *v1;
  sub_232025384();
  v5 = (uint64_t)v1 + *(int *)(v4 + 48);
  swift_release();
  sub_232025468(v5, v0, (uint64_t (*)(_QWORD))sub_232025288);
  v6 = *(_QWORD *)(v2 - 176);
  v7 = v6 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_currentTypeState;
  v8 = *(unsigned __int8 *)(v6
                          + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_requestedByUnanchoredSignal);
  v9 = (void *)SummaryModelConfiguration.modelUniqueIdentifier.getter();
  sub_23201F6B4(*(_QWORD *)(v2 - 168), v7, v8, v9, v10, *(_BYTE *)(v6 + 16), v3, v0, *(_QWORD **)(v2 - 160), *(_QWORD *)(v2 - 304), *(uint64_t (**)(void))(v2 - 200), *(void (**)(char *, uint64_t))(v2 - 208));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_232002CEC(v0, (uint64_t (*)(_QWORD))sub_232025288);
}

uint64_t sub_23201F46C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC9Summaries39SummariesSharableModelGeneratorPipeline_domain;
  v2 = sub_2321FE3BC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC9Summaries39SummariesSharableModelGeneratorPipeline_context;
  v4 = sub_2321FE440();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_23201F514()
{
  return type metadata accessor for SummariesSharableModelGeneratorPipeline();
}

uint64_t type metadata accessor for SummariesSharableModelGeneratorPipeline()
{
  uint64_t result;

  result = qword_2541B79F8;
  if (!qword_2541B79F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23201F558()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2321FE3BC();
  if (v1 <= 0x3F)
  {
    result = sub_2321FE440();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_23201F600()
{
  return swift_retain();
}

uint64_t sub_23201F614@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC9Summaries39SummariesSharableModelGeneratorPipeline_domain;
  v4 = sub_2321FE3BC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23201F65C()
{
  return sub_232000590(&qword_2541B79F0, (uint64_t (*)(uint64_t))type metadata accessor for SummariesSharableModelGeneratorPipeline, (uint64_t)&unk_232210F48);
}

uint64_t sub_23201F688()
{
  return sub_232000590(&qword_2541B3930, type metadata accessor for SummaryModelConfiguration, (uint64_t)&protocol conformance descriptor for SummaryModelConfiguration);
}

uint64_t sub_23201F6B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t (*a11)(void), void (*a12)(char *, uint64_t))
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  char v38;
  _QWORD *v39;
  void (*v40)(char *, uint64_t);
  uint64_t (*v41)(void);
  uint64_t v42;
  char *v43;
  id v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t (*v73)(void);
  void (*v74)(char *, uint64_t);
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  char *v80;
  uint64_t v81;
  _QWORD v82[4];
  __int128 v83;
  __int128 v84;
  _UNKNOWN **v85;

  v75 = a9;
  v76 = a8;
  v79 = a4;
  v80 = (char *)a7;
  LODWORD(v78) = a3;
  v71 = a1;
  v73 = a11;
  v74 = a12;
  LODWORD(v77) = a6 & 1;
  v70 = sub_2321FE440();
  v69 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v72 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_2321FDDD4();
  v64 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v60 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_2321FDC6C();
  v63 = *(_QWORD *)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65);
  v61 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_2321FF568();
  v62 = *(_QWORD *)(v66 - 8);
  MEMORY[0x24BDAC7A8](v66);
  v68 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232025288(0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_2321FE4A0();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = (int *)type metadata accessor for ChartSharableModelGenerator.Request(0);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v59 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v59 - v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v24, a2, v21);
  sub_23200054C(v76, (uint64_t)v20, (uint64_t (*)(_QWORD))sub_232025288);
  v31 = (uint64_t)&v28[v25[9]];
  v32 = sub_2321FD8B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 1, 1, v32);
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v28, v24, v21);
  v28[v25[5]] = v78;
  v33 = &v28[v25[6]];
  v34 = (uint64_t)v80;
  *(_QWORD *)v33 = v79;
  *((_QWORD *)v33 + 1) = a5;
  *(_QWORD *)&v28[v25[7]] = v34;
  v28[v25[8]] = v77;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_232025424((uint64_t)v20, v31);
  v80 = v30;
  sub_232025468((uint64_t)v28, (uint64_t)v30, type metadata accessor for ChartSharableModelGenerator.Request);
  v81 = sub_2321FE464();
  sub_232003E9C(0, (unint64_t *)&qword_2541B7EA8);
  sub_232016A8C(0, &qword_2541B29D0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v85 = 0;
    v83 = 0u;
    v84 = 0u;
    sub_2320254AC((uint64_t)&v83, &qword_2541B29D8, &qword_2541B29D0);
LABEL_7:
    v40 = v74;
    v39 = v75;
    v42 = (uint64_t)v72;
    v41 = v73;
    v35 = v71;
    v50 = v70;
    v51 = v69;
    sub_23201B304(a10, (uint64_t)&v83);
    goto LABEL_10;
  }
  sub_2320167F8(&v83, (uint64_t)v82);
  sub_232016AD8(v82, v82[3]);
  if ((sub_2321FF424() & 1) == 0)
  {
    sub_232016AFC((uint64_t)v82);
    goto LABEL_7;
  }
  v35 = v71;
  sub_2321FE3D4();
  sub_232016AD8(&v83, *((uint64_t *)&v84 + 1));
  v79 = (id)sub_2321FE344();
  sub_232016AFC((uint64_t)&v83);
  sub_232003E9C(0, qword_2541B74A8);
  v36 = (void *)sub_2321FE464();
  v37 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_electrocardiogramType);
  v38 = sub_2322016A4();

  v78 = sub_2321FE464();
  v40 = v74;
  v39 = v75;
  v42 = (uint64_t)v72;
  v41 = v73;
  v43 = v60;
  sub_2321FE3D4();
  sub_232016AD8(&v83, *((uint64_t *)&v84 + 1));
  v77 = sub_2321FE314();
  v44 = v79;
  v45 = v61;
  sub_2321FDC60();
  sub_2321FDDA4();
  if ((v38 & 1) != 0)
  {
    v46 = v43;
    v47 = v68;
    sub_2321FD84C();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v46, v67);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v45, v65);
    (*(void (**)(char *, _QWORD, uint64_t))(v62 + 104))(v47, *MEMORY[0x24BE44518], v66);
    v48 = sub_2321FF7FC();
    swift_allocObject();
    v49 = sub_2321FF7F0();
  }
  else
  {
    v52 = v43;
    v53 = v68;
    sub_2321FD84C();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v52, v67);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v45, v65);
    (*(void (**)(char *, _QWORD, uint64_t))(v62 + 104))(v53, *MEMORY[0x24BE44518], v66);
    v48 = sub_2321FF580();
    swift_allocObject();
    v49 = sub_2321FF55C();
  }
  v54 = v49;
  sub_232016AFC((uint64_t)&v83);
  *((_QWORD *)&v84 + 1) = v48;
  v85 = &protocol witness table for DataTypeMostRecentSamplesQuery;

  *(_QWORD *)&v83 = v54;
  sub_232016AFC((uint64_t)v82);
  v50 = v70;
  v51 = v69;
LABEL_10:
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 16))(v42, v35, v50);
  v55 = (uint64_t)v80;
  sub_23200054C((uint64_t)v80, (uint64_t)v28, type metadata accessor for ChartSharableModelGenerator.Request);
  sub_23201B304((uint64_t)&v83, (uint64_t)v82);
  v56 = type metadata accessor for ChartSharableModelGenerator(0);
  swift_allocObject();
  v57 = sub_232155DD4(v42, (uint64_t)v28, (uint64_t)v82, v41, v40);
  v39[3] = v56;
  v39[4] = sub_232000590(&qword_2541B3B90, type metadata accessor for ChartSharableModelGenerator, (uint64_t)&unk_232217B04);
  *v39 = v57;
  sub_232016AFC((uint64_t)&v83);
  return sub_232002CEC(v55, type metadata accessor for ChartSharableModelGenerator.Request);
}

uint64_t sub_23201FE74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, void *a8@<X7>, uint64_t **a9@<X8>, char a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  int v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t **v110;
  uint64_t (*v111)(char *, uint64_t);
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  void (*v117)(char *, uint64_t, uint64_t);
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(char *, char *, uint64_t);
  char *v124;
  uint64_t v125;
  int *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v136;
  char *v137;
  void (*v138)(char *, uint64_t, uint64_t);
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  int *v148;
  uint64_t v149;
  id v150;
  _QWORD *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t *v156;
  char v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  int *v163;
  _QWORD *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t *v171;
  uint64_t v172;
  void (*v173)(char *, uint64_t, uint64_t);
  char *v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  void (*v180)(char *, char *, uint64_t);
  char *v181;
  uint64_t v182;
  uint64_t v183;
  int *v184;
  uint64_t v185;
  id v186;
  _QWORD *v187;
  void *v188;
  id v189;
  uint64_t v190;
  uint64_t *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  void (*v195)(char *, uint64_t, uint64_t);
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  unint64_t *v200;
  uint64_t (*v201)();
  uint64_t v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  int *v206;
  _QWORD *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t *v214;
  uint64_t v215;
  char *v216;
  uint64_t v217;
  int *v218;
  _QWORD *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t (*v223)(uint64_t);
  uint64_t v224;
  uint64_t v225;
  uint64_t *v226;
  uint64_t **v227;
  unint64_t *v228;
  void *v229;
  uint64_t (*v230)(uint64_t);
  void (*v231)(char *, uint64_t, uint64_t);
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  int *v248;
  uint64_t v249;
  id v250;
  _QWORD *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  void (*v259)(char *, uint64_t, uint64_t);
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  void (*v263)(char *, uint64_t, uint64_t);
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  void (*v267)(char *, uint64_t, uint64_t);
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t *v271;
  int *v272;
  _QWORD *v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  char v281;
  uint64_t v282;
  uint64_t v283;
  char *v284;
  uint64_t v285;
  uint64_t v286;
  char *v287;
  uint64_t v288;
  int *v289;
  _QWORD *v290;
  uint64_t v291;
  void (*v292)(char *, uint64_t, uint64_t);
  char *v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t *v297;
  uint64_t v298;
  uint64_t v299;
  char *v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  char *v305;
  uint64_t v306;
  uint64_t v307;
  char *v308;
  uint64_t v309;
  uint64_t v310;
  char *v311;
  uint64_t v312;
  uint64_t v313;
  int *v314;
  id v315;
  _QWORD *v316;
  char *v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t *v323;
  uint64_t v324;
  char *v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  char *v329;
  uint64_t v330;
  uint64_t v331;
  int *v332;
  id (**v333)();
  id v334;
  _QWORD *v335;
  uint64_t (*v336)(uint64_t);
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t (*v340)(uint64_t);
  uint64_t v341;
  uint64_t *v342;
  unint64_t *v343;
  void *v344;
  uint64_t v345;
  char *v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  int *v352;
  id v353;
  _QWORD *v354;
  uint64_t v355;
  uint64_t v356;
  int *v357;
  _QWORD *v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  int *v367;
  _QWORD *v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t *v375;
  uint64_t v376;
  char *v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  int *v382;
  uint64_t v383;
  id v384;
  _QWORD *v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t *v390;
  NSObject *v391;
  os_log_type_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  unint64_t v396;
  char *v397;
  void *v398;
  uint64_t v399;
  unint64_t v400;
  unint64_t v401;
  char *v402;
  uint64_t v403;
  uint64_t v404;
  unint64_t v405;
  void (*v406)(char *, uint64_t);
  uint64_t **v407;
  uint64_t v408;
  char *v409;
  char *v410;
  uint64_t v411;
  char *v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  void (*v416)(char *, uint64_t, uint64_t);
  char *v417;
  char *v418;
  uint64_t v419;
  uint64_t v420;
  char *v421;
  char *v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  char *v429;
  uint64_t v430;
  uint64_t v431;
  char *v432;
  uint64_t v433;
  char *v434;
  uint64_t v435;
  char *v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  char *v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  char *v447;
  uint64_t v448;
  uint64_t v449;
  char *v450;
  char *v451;
  uint64_t v452;
  uint64_t v453;
  char *v454;
  uint64_t v455;
  uint64_t v456;
  char *v457;
  uint64_t v458;
  uint64_t v459;
  char *v460;
  uint64_t v461;
  uint64_t v462;
  char *v463;
  char *v464;
  uint64_t v465;
  uint64_t v466;
  char *v467;
  char *v468;
  char *v469;
  uint64_t v470;
  uint64_t v471;
  char *v472;
  char *v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  char *v479;
  uint64_t v480;
  char *v481;
  uint64_t v482;
  uint64_t v483;
  id v484;
  char *v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  char *v489;
  uint64_t v490;
  char *v491;
  uint64_t v492;
  char *v493;
  char *v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t **v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  char *v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  int v507;
  int v508;
  uint64_t v509;
  uint64_t v510;

  v484 = a8;
  v505 = a7;
  v506 = a5;
  v502 = a4;
  v504 = a3;
  v497 = a2;
  v498 = a1;
  v499 = a9;
  v507 = a10 & 1;
  v508 = a6;
  v415 = sub_23220039C();
  v414 = *(_QWORD *)(v415 - 8);
  MEMORY[0x24BDAC7A8](v415);
  v422 = (char *)&v408 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v458 = type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request(0);
  v11 = MEMORY[0x24BDAC7A8](v458);
  v459 = (uint64_t)&v408 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v463 = (char *)&v408 - v13;
  v462 = sub_23220015C();
  v461 = *(_QWORD *)(v462 - 8);
  MEMORY[0x24BDAC7A8](v462);
  v460 = (char *)&v408 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v419 = type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request(0);
  v15 = MEMORY[0x24BDAC7A8](v419);
  v420 = (uint64_t)&v408 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v421 = (char *)&v408 - v17;
  v423 = type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request(0);
  v18 = MEMORY[0x24BDAC7A8](v423);
  v424 = (uint64_t)&v408 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v425 = (uint64_t)&v408 - v20;
  v431 = type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request(0);
  v21 = MEMORY[0x24BDAC7A8](v431);
  v432 = (char *)&v408 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v433 = (uint64_t)&v408 - v23;
  v411 = type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request(0);
  v24 = MEMORY[0x24BDAC7A8](v411);
  v412 = (char *)&v408 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v413 = (uint64_t)&v408 - v26;
  v428 = type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request(0);
  v27 = MEMORY[0x24BDAC7A8](v428);
  v429 = (char *)&v408 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v430 = (uint64_t)&v408 - v29;
  v452 = type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request(0);
  v30 = MEMORY[0x24BDAC7A8](v452);
  v453 = (uint64_t)&v408 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v457 = (char *)&v408 - v32;
  v456 = sub_2322000CC();
  v455 = *(_QWORD *)(v456 - 8);
  MEMORY[0x24BDAC7A8](v456);
  v454 = (char *)&v408 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v435 = type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request(0);
  v34 = MEMORY[0x24BDAC7A8](v435);
  v436 = (char *)&v408 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v34);
  v438 = (uint64_t)&v408 - v36;
  v437 = sub_2321FFE5C();
  v443 = *(_QWORD *)(v437 - 8);
  v37 = MEMORY[0x24BDAC7A8](v437);
  v434 = (char *)&v408 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v37);
  v442 = (char *)&v408 - v39;
  v470 = type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request(0);
  v40 = MEMORY[0x24BDAC7A8](v470);
  v441 = (uint64_t)&v408 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = MEMORY[0x24BDAC7A8](v40);
  v471 = (uint64_t)&v408 - v43;
  MEMORY[0x24BDAC7A8](v42);
  v472 = (char *)&v408 - v44;
  v475 = sub_2322001B0();
  v474 = *(_QWORD *)(v475 - 8);
  MEMORY[0x24BDAC7A8](v475);
  v473 = (char *)&v408 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v480 = type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request(0);
  v46 = MEMORY[0x24BDAC7A8](v480);
  v481 = (char *)&v408 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v46);
  v483 = (uint64_t)&v408 - v48;
  v482 = sub_2321FFF40();
  v490 = *(_QWORD *)(v482 - 8);
  v49 = MEMORY[0x24BDAC7A8](v482);
  v479 = (char *)&v408 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v49);
  v489 = (char *)&v408 - v51;
  v445 = type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request(0);
  v52 = MEMORY[0x24BDAC7A8](v445);
  v446 = (uint64_t)&v408 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v52);
  v450 = (char *)&v408 - v54;
  v449 = sub_232200084();
  v448 = *(_QWORD *)(v449 - 8);
  MEMORY[0x24BDAC7A8](v449);
  v447 = (char *)&v408 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = (int *)type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request(0);
  v57 = MEMORY[0x24BDAC7A8](v56);
  v493 = (char *)&v408 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v57);
  v60 = (char *)&v408 - v59;
  v496 = sub_232200024();
  v500 = *(_QWORD *)(v496 - 8);
  MEMORY[0x24BDAC7A8](v496);
  v503 = (char *)&v408 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  v486 = type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request(0);
  v62 = MEMORY[0x24BDAC7A8](v486);
  v64 = (char *)&v408 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v62);
  v488 = (uint64_t)&v408 - v65;
  v487 = sub_2322001A4();
  v495 = *(_QWORD *)(v487 - 8);
  v66 = MEMORY[0x24BDAC7A8](v487);
  v485 = (char *)&v408 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v66);
  v494 = (char *)&v408 - v68;
  v501 = sub_2321FE440();
  v69 = *(_QWORD *)(v501 - 8);
  v70 = MEMORY[0x24BDAC7A8](v501);
  v418 = (char *)&v408 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = MEMORY[0x24BDAC7A8](v70);
  v464 = (char *)&v408 - v73;
  MEMORY[0x24BDAC7A8](v72);
  v75 = (char *)&v408 - v74;
  sub_232025288(0);
  MEMORY[0x24BDAC7A8](v76);
  v492 = (uint64_t)&v408 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_2321FE4A0();
  v79 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78);
  v491 = (char *)&v408 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
  v466 = type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request(0);
  v81 = MEMORY[0x24BDAC7A8](v466);
  v478 = (uint64_t)&v408 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = MEMORY[0x24BDAC7A8](v81);
  v465 = (uint64_t)&v408 - v84;
  MEMORY[0x24BDAC7A8](v83);
  v469 = (char *)&v408 - v85;
  v476 = sub_232200180();
  v477 = *(_QWORD *)(v476 - 8);
  v86 = MEMORY[0x24BDAC7A8](v476);
  v468 = (char *)&v408 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = MEMORY[0x24BDAC7A8](v86);
  v451 = (char *)&v408 - v89;
  MEMORY[0x24BDAC7A8](v88);
  v467 = (char *)&v408 - v90;
  v91 = sub_2321FFD78();
  v92 = *(_QWORD *)(v91 - 8);
  v93 = MEMORY[0x24BDAC7A8](v91);
  v410 = (char *)&v408 - ((v94 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = MEMORY[0x24BDAC7A8](v93);
  v417 = (char *)&v408 - v96;
  MEMORY[0x24BDAC7A8](v95);
  v98 = (char *)&v408 - v97;
  v416 = *(void (**)(char *, uint64_t, uint64_t))(v92 + 16);
  v416((char *)&v408 - v97, v502, v91);
  v99 = (*(uint64_t (**)(char *, uint64_t))(v92 + 88))(v98, v91);
  if (v99 == *MEMORY[0x24BE4AD28])
  {
    (*(void (**)(char *, uint64_t))(v92 + 96))(v98, v91);
    v100 = v500;
    v101 = v503;
    v102 = v98;
    v103 = v496;
    (*(void (**)(char *, char *, uint64_t))(v500 + 32))(v503, v102, v496);
    (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v60, v101, v103);
    (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(&v60[v56[5]], v506, v78);
    sub_23200054C(v505, (uint64_t)&v60[v56[7]], (uint64_t (*)(_QWORD))sub_232025288);
    v60[v56[6]] = v508 & 1;
    v104 = &v60[v56[8]];
    v105 = v498;
    v106 = v504;
    *(_QWORD *)v104 = v497;
    *((_QWORD *)v104 + 1) = v106;
    v60[v56[9]] = v507;
    (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v75, v105, v501);
    v107 = (uint64_t)v493;
    sub_23200054C((uint64_t)v60, (uint64_t)v493, type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request);
    v108 = type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator(0);
    swift_allocObject();
    swift_bridgeObjectRetain();
    v109 = sub_232089C90((uint64_t)v75, v107);
    v110 = v499;
    v499[3] = (uint64_t *)v108;
    v110[4] = (uint64_t *)sub_232000590(&qword_2541B7AD0, type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator, (uint64_t)&unk_232213644);
    *v110 = v109;
    sub_232002CEC((uint64_t)v60, type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request);
    v111 = *(uint64_t (**)(char *, uint64_t))(v100 + 8);
    v112 = v101;
LABEL_5:
    v134 = v103;
    return v111(v112, v134);
  }
  v113 = v503;
  v114 = v500;
  v426 = v79;
  v439 = v92;
  v427 = v78;
  v440 = v91;
  v493 = v98;
  v444 = v69;
  v409 = v75;
  if (v99 == *MEMORY[0x24BE4AD80])
  {
    v115 = (uint64_t)v493;
    (*(void (**)(char *, uint64_t))(v439 + 96))(v493, v440);
    v116 = v494;
    v117 = *(void (**)(char *, uint64_t, uint64_t))(v495 + 32);
    v118 = v495;
    v103 = v487;
    v117(v494, v115, v487);
    v119 = v426;
    v120 = v491;
    v121 = v427;
    (*(void (**)(char *, uint64_t, uint64_t))(v426 + 16))(v491, v506, v427);
    v122 = v492;
    sub_23200054C(v505, v492, (uint64_t (*)(_QWORD))sub_232025288);
    v123 = *(void (**)(char *, char *, uint64_t))(v118 + 16);
    v124 = v485;
    v123(v485, v116, v103);
    v125 = sub_2321FD8B8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v125 - 8) + 56))(v64, 1, 1, v125);
    v126 = (int *)v486;
    (*(void (**)(char *, char *, uint64_t))(v119 + 32))(&v64[*(int *)(v486 + 20)], v120, v121);
    v64[v126[6]] = v508 & 1;
    v127 = v504;
    swift_bridgeObjectRetain();
    sub_232025424(v122, (uint64_t)v64);
    v128 = &v64[v126[7]];
    *(_QWORD *)v128 = v497;
    *((_QWORD *)v128 + 1) = v127;
    v117(&v64[v126[8]], (uint64_t)v124, v103);
    v64[v126[9]] = v507;
    v129 = v488;
    sub_232025468((uint64_t)v64, v488, type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request);
    v130 = (uint64_t)v409;
    (*(void (**)(char *, uint64_t, uint64_t))(v444 + 16))(v409, v498, v501);
    sub_23200054C(v129, (uint64_t)v64, type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request);
    v131 = type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator(0);
    swift_allocObject();
    v132 = sub_2321E4DC4(v130, (uint64_t)v64);
    v133 = (uint64_t *)v499;
    v499[3] = (uint64_t *)v131;
    v133[4] = sub_232000590(&qword_2541B0720, type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator, (uint64_t)&unk_23221A148);
    *v133 = v132;
    sub_232002CEC(v129, type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelGenerator.Request);
    v112 = v494;
    v111 = *(uint64_t (**)(char *, uint64_t))(v495 + 8);
    goto LABEL_5;
  }
  if (v99 == *MEMORY[0x24BE4AD90])
  {
    v136 = (uint64_t)v493;
    (*(void (**)(char *, uint64_t))(v439 + 96))(v493, v440);
    v137 = v489;
    v138 = *(void (**)(char *, uint64_t, uint64_t))(v490 + 32);
    v139 = v490;
    v140 = v482;
    v138(v489, v136, v482);
    v141 = v426;
    v142 = v491;
    v143 = v427;
    (*(void (**)(char *, uint64_t, uint64_t))(v426 + 16))(v491, v506, v427);
    v144 = v492;
    sub_23200054C(v505, v492, (uint64_t (*)(_QWORD))sub_232025288);
    v145 = v479;
    (*(void (**)(char *, char *, uint64_t))(v139 + 16))(v479, v137, v140);
    v146 = sub_2321FD8B8();
    v147 = (uint64_t)v481;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v146 - 8) + 56))(v481, 1, 1, v146);
    v148 = (int *)v480;
    (*(void (**)(uint64_t, char *, uint64_t))(v141 + 32))(v147 + *(int *)(v480 + 20), v142, v143);
    *(_BYTE *)(v147 + v148[6]) = v508 & 1;
    v149 = v504;
    swift_bridgeObjectRetain();
    v150 = v484;
    sub_232025424(v144, v147);
    v151 = (_QWORD *)(v147 + v148[7]);
    *v151 = v497;
    v151[1] = v149;
    v138((char *)(v147 + v148[8]), (uint64_t)v145, v140);
    *(_QWORD *)(v147 + v148[9]) = v150;
    *(_BYTE *)(v147 + v148[10]) = v507;
    v152 = v483;
    sub_232025468(v147, v483, type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request);
    sub_23200054C(v152, v147, type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request);
    v153 = (uint64_t)v409;
    (*(void (**)(char *, uint64_t, uint64_t))(v444 + 16))(v409, v498, v501);
    v154 = type metadata accessor for SleepDurationValueSummarySharableModelGenerator(0);
    swift_allocObject();
    v155 = sub_2321F5F74(v147, v153);
    v156 = (uint64_t *)v499;
    v499[3] = (uint64_t *)v154;
    v156[4] = sub_232000590(&qword_2541B02B0, type metadata accessor for SleepDurationValueSummarySharableModelGenerator, (uint64_t)&unk_23221AD10);
    *v156 = v155;
    sub_232002CEC(v152, type metadata accessor for SleepDurationValueSummarySharableModelGenerator.Request);
    v112 = v489;
    v111 = *(uint64_t (**)(char *, uint64_t))(v490 + 8);
LABEL_9:
    v134 = v140;
    return v111(v112, v134);
  }
  v157 = v508;
  v158 = (uint64_t)v493;
  if (v99 == *MEMORY[0x24BE4AD88])
  {
    (*(void (**)(char *, uint64_t))(v439 + 96))(v493, v440);
    v159 = v474;
    v160 = v473;
    v161 = v475;
    (*(void (**)(char *, uint64_t, uint64_t))(v474 + 32))(v473, v158, v475);
    v162 = (uint64_t)v472;
    (*(void (**)(char *, uint64_t, uint64_t))(v426 + 16))(v472, v506, v427);
    v163 = (int *)v470;
    (*(void (**)(uint64_t, char *, uint64_t))(v159 + 16))(v162 + *(int *)(v470 + 28), v160, v161);
    sub_23200054C(v505, v162 + v163[9], (uint64_t (*)(_QWORD))sub_232025288);
    *(_BYTE *)(v162 + v163[5]) = v157 & 1;
    v164 = (_QWORD *)(v162 + v163[6]);
    v165 = v498;
    v166 = v504;
    *v164 = v497;
    v164[1] = v166;
    *(_QWORD *)(v162 + v163[8]) = 0;
    *(_BYTE *)(v162 + v163[10]) = v507;
    v167 = (uint64_t)v409;
    (*(void (**)(char *, uint64_t, uint64_t))(v444 + 16))(v409, v165, v501);
    v168 = v471;
    sub_23200054C(v162, v471, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request);
    v169 = type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator(0);
    swift_allocObject();
    swift_bridgeObjectRetain();
    v170 = sub_232025F60(v167, v168);
    v171 = (uint64_t *)v499;
    v499[3] = (uint64_t *)v169;
    v171[4] = sub_232000590(&qword_2541B0B10, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator, (uint64_t)&unk_232211054);
    *v171 = v170;
    sub_232002CEC(v162, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request);
    v111 = *(uint64_t (**)(char *, uint64_t))(v159 + 8);
    v112 = v160;
LABEL_12:
    v134 = v161;
    return v111(v112, v134);
  }
  if (v99 == *MEMORY[0x24BE4AD70])
  {
    (*(void (**)(char *, uint64_t))(v439 + 96))(v493, v440);
    v172 = v477;
    v173 = *(void (**)(char *, uint64_t, uint64_t))(v477 + 32);
    v174 = v468;
    v175 = v476;
    v173(v468, v158, v476);
    v176 = v426;
    v177 = v491;
    v178 = v427;
    (*(void (**)(char *, uint64_t, uint64_t))(v426 + 16))(v491, v506, v427);
    v179 = v492;
    sub_23200054C(v505, v492, (uint64_t (*)(_QWORD))sub_232025288);
    v180 = *(void (**)(char *, char *, uint64_t))(v172 + 16);
    v181 = v467;
    v180(v467, v174, v175);
    v182 = sub_2321FD8B8();
    v183 = (uint64_t)v469;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v182 - 8) + 56))(v469, 1, 1, v182);
    v184 = (int *)v466;
    (*(void (**)(uint64_t, char *, uint64_t))(v176 + 32))(v183 + *(int *)(v466 + 20), v177, v178);
    *(_BYTE *)(v183 + v184[6]) = v157 & 1;
    v185 = v504;
    swift_bridgeObjectRetain();
    v186 = v484;
    sub_232025424(v179, v183);
    v187 = (_QWORD *)(v183 + v184[7]);
    *v187 = v497;
    v187[1] = v185;
    v173((char *)(v183 + v184[8]), (uint64_t)v181, v175);
    *(_QWORD *)(v183 + v184[9]) = v186;
    *(_BYTE *)(v183 + v184[10]) = v507;
    sub_232025468(v183, v478, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
    v188 = (void *)sub_2321FE464();
    v189 = objc_msgSend(v188, sel_code);

    v190 = v498;
    v191 = (uint64_t *)v499;
    v192 = (uint64_t)v409;
    v193 = v501;
    v194 = v444;
    switch((unint64_t)v189)
    {
      case 0x113uLL:
        v195 = *(void (**)(char *, uint64_t, uint64_t))(v444 + 16);
        v195(v409, v498, v501);
        sub_23200054C(v478, v183, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
        v196 = type metadata accessor for BreathingDisturbancesCurrentValueSummarySharableModelGenerator();
        swift_allocObject();
        v197 = (uint64_t)v464;
        v195(v464, v192, v193);
        v198 = v465;
        sub_23200054C(v183, v465, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
        v199 = sub_2321D0358(v197, v198);
        sub_232002CEC(v183, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
        (*(void (**)(uint64_t, uint64_t))(v194 + 8))(v192, v193);
        v191[3] = v196;
        v200 = (unint64_t *)&unk_255F9C238;
        v201 = type metadata accessor for BreathingDisturbancesCurrentValueSummarySharableModelGenerator;
        goto LABEL_28;
      case 0x114uLL:
      case 0x115uLL:
      case 0x116uLL:
      case 0x117uLL:
      case 0x118uLL:
      case 0x119uLL:
      case 0x11AuLL:
      case 0x11BuLL:
      case 0x11DuLL:
      case 0x11EuLL:
        goto LABEL_24;
      case 0x11CuLL:
        v259 = *(void (**)(char *, uint64_t, uint64_t))(v444 + 16);
        v259(v409, v498, v501);
        sub_23200054C(v478, v183, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
        v260 = type metadata accessor for StateOfMindCurrentValueSummarySharableModelGenerator();
        swift_allocObject();
        v261 = (uint64_t)v464;
        v259(v464, v192, v193);
        v262 = v465;
        sub_23200054C(v183, v465, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
        v199 = sub_2321D0358(v261, v262);
        sub_232002CEC(v183, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
        (*(void (**)(uint64_t, uint64_t))(v194 + 8))(v192, v193);
        v191[3] = v260;
        v200 = (unint64_t *)&unk_2541B4CB0;
        v201 = type metadata accessor for StateOfMindCurrentValueSummarySharableModelGenerator;
        goto LABEL_28;
      case 0x11FuLL:
        v263 = *(void (**)(char *, uint64_t, uint64_t))(v444 + 16);
        v263(v409, v498, v501);
        sub_23200054C(v478, v183, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
        v264 = type metadata accessor for GAD7AssessmentCurrentValueSummarySharableModelGenerator();
        swift_allocObject();
        v265 = (uint64_t)v464;
        v263(v464, v192, v193);
        v266 = v465;
        sub_23200054C(v183, v465, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
        v199 = sub_2321D0358(v265, v266);
        sub_232002CEC(v183, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
        (*(void (**)(uint64_t, uint64_t))(v194 + 8))(v192, v193);
        v191[3] = v264;
        v200 = (unint64_t *)&unk_2541B4DA0;
        v201 = type metadata accessor for GAD7AssessmentCurrentValueSummarySharableModelGenerator;
        goto LABEL_28;
      case 0x120uLL:
        v267 = *(void (**)(char *, uint64_t, uint64_t))(v444 + 16);
        v267(v409, v498, v501);
        sub_23200054C(v478, v183, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
        v268 = type metadata accessor for PHQ9AssessmentCurrentValueSummarySharableModelGenerator();
        swift_allocObject();
        v269 = (uint64_t)v464;
        v267(v464, v192, v193);
        v270 = v465;
        sub_23200054C(v183, v465, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
        v199 = sub_2321D0358(v269, v270);
        sub_232002CEC(v183, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
        (*(void (**)(uint64_t, uint64_t))(v194 + 8))(v192, v193);
        v191[3] = v268;
        v200 = (unint64_t *)&unk_2541B4E80;
        v201 = type metadata accessor for PHQ9AssessmentCurrentValueSummarySharableModelGenerator;
LABEL_28:
        v191[4] = sub_232000590(v200, (uint64_t (*)(uint64_t))v201, (uint64_t)&unk_2322197EC);
        *v191 = v199;
        v237 = v478;
        break;
      default:
        v190 = v498;
        v191 = (uint64_t *)v499;
        v192 = (uint64_t)v409;
        v193 = v501;
        v194 = v444;
        if (v189 == (id)144)
        {
          v231 = *(void (**)(char *, uint64_t, uint64_t))(v444 + 16);
          v231(v409, v498, v501);
          v232 = v478;
          sub_23200054C(v478, v183, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
          v233 = type metadata accessor for ElectrocardiogramCurrentValueSummarySharableModelGenerator();
          swift_allocObject();
          v234 = (uint64_t)v464;
          v231(v464, v192, v193);
          v235 = v465;
          sub_23200054C(v183, v465, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
          v236 = sub_2321D0358(v234, v235);
          sub_232002CEC(v183, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
          (*(void (**)(uint64_t, uint64_t))(v194 + 8))(v192, v193);
          v191[3] = v233;
          v191[4] = sub_232000590(&qword_2541B0988, (uint64_t (*)(uint64_t))type metadata accessor for ElectrocardiogramCurrentValueSummarySharableModelGenerator, (uint64_t)&unk_2322197EC);
          *v191 = v236;
          v237 = v232;
        }
        else
        {
LABEL_24:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v194 + 16))(v192, v190, v193);
          v256 = v478;
          sub_23200054C(v478, v183, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
          v257 = type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator(0);
          swift_allocObject();
          v258 = sub_2321D0358(v192, v183);
          v191[3] = v257;
          v191[4] = sub_232000590(&qword_2541B7DB8, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator, (uint64_t)&unk_2322197EC);
          *v191 = v258;
          v237 = v256;
        }
        break;
    }
    sub_232002CEC(v237, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
    v111 = *(uint64_t (**)(char *, uint64_t))(v477 + 8);
    v112 = v468;
    v271 = &v509;
    goto LABEL_30;
  }
  v202 = (uint64_t)v469;
  if (v99 == *MEMORY[0x24BE4AD60])
  {
    (*(void (**)(char *, uint64_t))(v439 + 96))(v493, v440);
    v203 = v461;
    v204 = v460;
    v140 = v462;
    (*(void (**)(char *, uint64_t, uint64_t))(v461 + 32))(v460, v158, v462);
    v205 = (uint64_t)v463;
    (*(void (**)(char *, char *, uint64_t))(v203 + 16))(v463, v204, v140);
    v206 = (int *)v458;
    sub_23200054C(v505, v205 + *(int *)(v458 + 20), (uint64_t (*)(_QWORD))sub_232025288);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v426 + 16))(v205 + v206[7], v506, v427);
    *(_BYTE *)(v205 + v206[6]) = v507;
    *(_BYTE *)(v205 + v206[8]) = v157 & 1;
    v207 = (_QWORD *)(v205 + v206[9]);
    v208 = v498;
    v209 = v504;
    *v207 = v497;
    v207[1] = v209;
    v210 = (uint64_t)v409;
    (*(void (**)(char *, uint64_t, uint64_t))(v444 + 16))(v409, v208, v501);
    v211 = v459;
    sub_23200054C(v205, v459, type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request);
    v212 = type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator(0);
    swift_allocObject();
    swift_bridgeObjectRetain();
    v213 = sub_2321F8B2C(v210, v211);
    v214 = (uint64_t *)v499;
    v499[3] = (uint64_t *)v212;
    v214[4] = sub_232000590(&qword_2541B4FF8, type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator, (uint64_t)&unk_23221AE4C);
    *v214 = v213;
    sub_232002CEC(v205, type metadata accessor for MostRecentRangeCurrentValueSummarySharableModelGenerator.Request);
    v111 = *(uint64_t (**)(char *, uint64_t))(v203 + 8);
    v112 = v204;
    goto LABEL_9;
  }
  if (v99 == *MEMORY[0x24BE4AD38])
  {
    (*(void (**)(char *, uint64_t))(v439 + 96))(v493, v440);
    v215 = v455;
    v216 = v454;
    v161 = v456;
    (*(void (**)(char *, uint64_t, uint64_t))(v455 + 32))(v454, v158, v456);
    v217 = (uint64_t)v457;
    (*(void (**)(char *, char *, uint64_t))(v215 + 16))(v457, v216, v161);
    v218 = (int *)v452;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v426 + 16))(v217 + *(int *)(v452 + 20), v506, v427);
    sub_23200054C(v505, v217 + v218[7], (uint64_t (*)(_QWORD))sub_232025288);
    *(_BYTE *)(v217 + v218[6]) = v157 & 1;
    v219 = (_QWORD *)(v217 + v218[8]);
    v220 = v498;
    v221 = v504;
    *v219 = v497;
    v219[1] = v221;
    *(_BYTE *)(v217 + v218[9]) = v507;
    v222 = (uint64_t)v409;
    (*(void (**)(char *, uint64_t, uint64_t))(v444 + 16))(v409, v220, v501);
    v223 = type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request;
    v224 = v453;
    sub_23200054C(v217, v453, type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request);
    v225 = type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator(0);
    swift_allocObject();
    swift_bridgeObjectRetain();
    v226 = sub_232067240(v222, v224);
    v227 = v499;
    v499[3] = (uint64_t *)v225;
    v228 = &qword_2541B0460;
    v229 = &unk_232212734;
    v230 = type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator;
LABEL_33:
    v227[4] = (uint64_t *)sub_232000590(v228, v230, (uint64_t)v229);
    *v227 = v226;
    sub_232002CEC(v217, v223);
    v111 = *(uint64_t (**)(char *, uint64_t))(v215 + 8);
    v112 = v216;
    goto LABEL_12;
  }
  if (v99 == *MEMORY[0x24BE4AD98])
  {
    (*(void (**)(char *, uint64_t))(v439 + 96))(v493, v440);
    v503 = *(char **)(v477 + 32);
    v238 = v477;
    v239 = v467;
    v240 = v476;
    ((void (*)(char *, uint64_t, uint64_t))v503)(v467, v158, v476);
    v241 = v426;
    v242 = v491;
    v243 = v427;
    (*(void (**)(char *, uint64_t, uint64_t))(v426 + 16))(v491, v506, v427);
    v244 = v492;
    sub_23200054C(v505, v492, (uint64_t (*)(_QWORD))sub_232025288);
    v245 = v451;
    (*(void (**)(char *, char *, uint64_t))(v238 + 16))(v451, v239, v240);
    v246 = sub_2321FD8B8();
    v247 = v465;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v246 - 8) + 56))(v465, 1, 1, v246);
    v248 = (int *)v466;
    (*(void (**)(uint64_t, char *, uint64_t))(v241 + 32))(v247 + *(int *)(v466 + 20), v242, v243);
    *(_BYTE *)(v247 + v248[6]) = v508 & 1;
    v249 = v504;
    swift_bridgeObjectRetain();
    v250 = v484;
    sub_232025424(v244, v247);
    v251 = (_QWORD *)(v247 + v248[7]);
    *v251 = v497;
    v251[1] = v249;
    ((void (*)(uint64_t, char *, uint64_t))v503)(v247 + v248[8], v245, v240);
    *(_QWORD *)(v247 + v248[9]) = v250;
    *(_BYTE *)(v247 + v248[10]) = v507;
    sub_232025468(v247, v202, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
    v252 = (uint64_t)v409;
    (*(void (**)(char *, uint64_t, uint64_t))(v444 + 16))(v409, v498, v501);
    sub_23200054C(v202, v247, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
    v253 = type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator(0);
    swift_allocObject();
    v254 = sub_2321D0358(v252, v247);
    v255 = (uint64_t *)v499;
    v499[3] = (uint64_t *)v253;
    v255[4] = sub_232000590(&qword_2541B7DB8, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator, (uint64_t)&unk_2322197EC);
    *v255 = v254;
    sub_232002CEC(v202, type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request);
    return (*(uint64_t (**)(char *, uint64_t))(v477 + 8))(v467, v240);
  }
  if (v99 == *MEMORY[0x24BE4AD30])
  {
    (*(void (**)(char *, uint64_t))(v439 + 96))(v493, v440);
    v215 = v448;
    v216 = v447;
    v161 = v449;
    (*(void (**)(char *, uint64_t, uint64_t))(v448 + 32))(v447, v158, v449);
    v217 = (uint64_t)v450;
    (*(void (**)(char *, char *, uint64_t))(v215 + 16))(v450, v216, v161);
    v272 = (int *)v445;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v426 + 16))(v217 + *(int *)(v445 + 20), v506, v427);
    sub_23200054C(v505, v217 + v272[7], (uint64_t (*)(_QWORD))sub_232025288);
    *(_BYTE *)(v217 + v272[6]) = v508 & 1;
    v273 = (_QWORD *)(v217 + v272[8]);
    v274 = v498;
    v275 = v504;
    *v273 = v497;
    v273[1] = v275;
    *(_BYTE *)(v217 + v272[9]) = v507;
    v276 = (uint64_t)v409;
    (*(void (**)(char *, uint64_t, uint64_t))(v444 + 16))(v409, v274, v501);
    v223 = type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request;
    v277 = v446;
    sub_23200054C(v217, v446, type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator.Request);
    v278 = type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator(0);
    swift_allocObject();
    swift_bridgeObjectRetain();
    v226 = sub_2321C3484(v276, v277);
    v227 = v499;
    v499[3] = (uint64_t *)v278;
    v228 = (unint64_t *)&unk_2541B7C40;
    v229 = &unk_232219064;
    v230 = type metadata accessor for SampleCountCurrentValueSummarySharableModelGenerator;
    goto LABEL_33;
  }
  v280 = v504;
  v279 = v505;
  v281 = v507;
  if (v99 == *MEMORY[0x24BE4AD20])
  {
    v282 = (uint64_t)v493;
    (*(void (**)(char *, uint64_t))(v439 + 96))(v493, v440);
    v283 = v474;
    v284 = v473;
    v285 = v282;
    v286 = v475;
    (*(void (**)(char *, uint64_t, uint64_t))(v474 + 32))(v473, v285, v475);
    v287 = (char *)objc_msgSend((id)objc_opt_self(), sel_predicateForCategorySamplesWithOperatorType_value_, 4, 0);
    v503 = v287;
    v288 = (uint64_t)v472;
    (*(void (**)(char *, uint64_t, uint64_t))(v426 + 16))(v472, v506, v427);
    v289 = (int *)v470;
    (*(void (**)(uint64_t, char *, uint64_t))(v283 + 16))(v288 + *(int *)(v470 + 28), v284, v286);
    sub_23200054C(v279, v288 + v289[9], (uint64_t (*)(_QWORD))sub_232025288);
    *(_BYTE *)(v288 + v289[5]) = v508 & 1;
    v290 = (_QWORD *)(v288 + v289[6]);
    v291 = v498;
    *v290 = v497;
    v290[1] = v280;
    *(_QWORD *)(v288 + v289[8]) = v287;
    *(_BYTE *)(v288 + v289[10]) = v281;
    v292 = *(void (**)(char *, uint64_t, uint64_t))(v444 + 16);
    v293 = v409;
    v294 = v501;
    v292(v409, v291, v501);
    v295 = v471;
    sub_23200054C(v288, v471, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request);
    v296 = type metadata accessor for StandHoursCurrentValueSummarySharableModelGenerator(0);
    swift_allocObject();
    v297 = (uint64_t *)v499;
    v298 = (uint64_t)v464;
    v292(v464, (uint64_t)v293, v294);
    v299 = v441;
    sub_23200054C(v295, v441, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request);
    swift_bridgeObjectRetain();
    v300 = v503;
    v301 = sub_232025F60(v298, v299);
    sub_232002CEC(v295, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request);
    (*(void (**)(char *, uint64_t))(v444 + 8))(v293, v294);
    v297[3] = v296;
    v297[4] = sub_232000590(&qword_2541B0378, type metadata accessor for StandHoursCurrentValueSummarySharableModelGenerator, (uint64_t)&unk_232211054);

    *v297 = v301;
    sub_232002CEC(v288, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request);
    v111 = *(uint64_t (**)(char *, uint64_t))(v474 + 8);
    v112 = v473;
    v271 = (uint64_t *)&v507;
LABEL_30:
    v134 = *(v271 - 32);
    return v111(v112, v134);
  }
  if (v99 == *MEMORY[0x24BE4AD50])
  {
    v302 = (uint64_t)v493;
    (*(void (**)(char *, uint64_t))(v439 + 96))(v493, v440);
    v303 = v279;
    v304 = v443;
    v503 = *(char **)(v443 + 32);
    v305 = v442;
    v306 = v437;
    ((void (*)(char *, uint64_t, uint64_t))v503)(v442, v302, v437);
    v307 = v426;
    v308 = v491;
    v309 = v427;
    (*(void (**)(char *, uint64_t, uint64_t))(v426 + 16))(v491, v506, v427);
    v310 = v492;
    sub_23200054C(v303, v492, (uint64_t (*)(_QWORD))sub_232025288);
    v311 = v434;
    (*(void (**)(char *, char *, uint64_t))(v304 + 16))(v434, v305, v306);
    v312 = sub_2321FD8B8();
    v313 = (uint64_t)v436;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v312 - 8) + 56))(v436, 1, 1, v312);
    v314 = (int *)v435;
    (*(void (**)(uint64_t, char *, uint64_t))(v307 + 32))(v313 + *(int *)(v435 + 20), v308, v309);
    *(_BYTE *)(v313 + v314[6]) = v508 & 1;
    swift_bridgeObjectRetain();
    v315 = v484;
    sub_232025424(v310, v313);
    v316 = (_QWORD *)(v313 + v314[7]);
    *v316 = v497;
    v316[1] = v280;
    v317 = v311;
    v318 = v306;
    ((void (*)(uint64_t, char *, uint64_t))v503)(v313 + v314[8], v317, v306);
    *(_QWORD *)(v313 + v314[9]) = v315;
    *(_BYTE *)(v313 + v314[10]) = v507;
    v319 = v438;
    sub_232025468(v313, v438, type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request);
    v320 = (uint64_t)v409;
    (*(void (**)(char *, uint64_t, uint64_t))(v444 + 16))(v409, v498, v501);
    sub_23200054C(v319, v313, type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request);
    v321 = type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator(0);
    swift_allocObject();
    v322 = sub_2321B0FE4(v320, v313);
    v323 = (uint64_t *)v499;
    v499[3] = (uint64_t *)v321;
    v323[4] = sub_232000590(&qword_2541B08B0, type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator, (uint64_t)&unk_2322187C8);
    *v323 = v322;
    sub_232002CEC(v319, type metadata accessor for OngoingFactorsCurrentValueSummarySharableModelGenerator.Request);
    return (*(uint64_t (**)(char *, uint64_t))(v443 + 8))(v442, v318);
  }
  if (v99 == *MEMORY[0x24BE4AD40])
  {
    v324 = v426;
    v325 = v491;
    v326 = v427;
    (*(void (**)(char *, uint64_t, uint64_t))(v426 + 16))(v491, v506, v427);
    v327 = v279;
    v328 = v492;
    sub_23200054C(v327, v492, (uint64_t (*)(_QWORD))sub_232025288);
    swift_bridgeObjectRetain();
    v329 = v467;
    sub_232200174();
    v330 = sub_2321FD8B8();
    v331 = (uint64_t)v432;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v330 - 8) + 56))(v432, 1, 1, v330);
    v332 = (int *)v431;
    v333 = (id (**)())(v331 + *(int *)(v431 + 44));
    *v333 = sub_232016F04;
    v333[1] = 0;
    (*(void (**)(uint64_t, char *, uint64_t))(v324 + 32))(v331 + v332[5], v325, v326);
    *(_BYTE *)(v331 + v332[6]) = v508 & 1;
    v334 = v484;
    sub_232025424(v328, v331);
    v335 = (_QWORD *)(v331 + v332[7]);
    *v335 = v497;
    v335[1] = v280;
    (*(void (**)(uint64_t, char *, uint64_t))(v477 + 32))(v331 + v332[8], v329, v476);
    *(_QWORD *)(v331 + v332[9]) = v334;
    *(_BYTE *)(v331 + v332[10]) = v281;
    v336 = type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request;
    v337 = v433;
    sub_232025468(v331, v433, type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request);
    v338 = (uint64_t)v409;
    (*(void (**)(char *, uint64_t, uint64_t))(v444 + 16))(v409, v498, v501);
    sub_23200054C(v337, v331, type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator.Request);
    v339 = type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator(0);
    v340 = type metadata accessor for CardioFitnessCurrentValueSummarySharableModelGenerator;
    swift_allocObject();
    v341 = sub_23201824C(v338, v331);
    v342 = (uint64_t *)v499;
    v499[3] = (uint64_t *)v339;
    v343 = &qword_2541B05C0;
    v344 = &unk_232210D98;
LABEL_44:
    v342[4] = sub_232000590(v343, v340, (uint64_t)v344);
    *v342 = v341;
    v363 = v337;
LABEL_45:
    sub_232002CEC(v363, v336);
    v111 = *(uint64_t (**)(char *, uint64_t))(v439 + 8);
    v112 = v493;
    v271 = (uint64_t *)&v472;
    goto LABEL_30;
  }
  v345 = v427;
  if (v99 == *MEMORY[0x24BE4AD18])
  {
    v346 = v491;
    v347 = v426;
    (*(void (**)(char *, uint64_t, uint64_t))(v426 + 16))(v491, v506, v427);
    v348 = v279;
    v349 = v492;
    sub_23200054C(v348, v492, (uint64_t (*)(_QWORD))sub_232025288);
    v350 = sub_2321FD8B8();
    v351 = (uint64_t)v429;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v350 - 8) + 56))(v429, 1, 1, v350);
    v352 = (int *)v428;
    (*(void (**)(uint64_t, char *, uint64_t))(v347 + 32))(v351 + *(int *)(v428 + 24), v346, v345);
    *(_BYTE *)(v351 + v352[7]) = v508 & 1;
    swift_bridgeObjectRetain();
    v353 = v484;
    sub_232025424(v349, v351);
    *(_BYTE *)(v351 + v352[5]) = v281;
    v354 = (_QWORD *)(v351 + v352[8]);
    *v354 = v497;
    v354[1] = v280;
    *(_QWORD *)(v351 + v352[9]) = v353;
    v336 = type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request;
    v337 = v430;
    sub_232025468(v351, v430, type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request);
    v355 = (uint64_t)v409;
    (*(void (**)(char *, uint64_t, uint64_t))(v444 + 16))(v409, v498, v501);
    sub_23200054C(v337, v351, type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator.Request);
    v356 = type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator(0);
    v340 = type metadata accessor for AFibBurdenCurrentValueSummarySharableModelGenerator;
    swift_allocObject();
    v341 = sub_2321B3CBC(v355, v351);
    v342 = (uint64_t *)v499;
    v499[3] = (uint64_t *)v356;
    v343 = (unint64_t *)&unk_2541B4BD0;
    v344 = &unk_232218904;
    goto LABEL_44;
  }
  if (v99 == *MEMORY[0x24BE4AD78])
  {
    v337 = v425;
    sub_23200054C(v505, v425, (uint64_t (*)(_QWORD))sub_232025288);
    v357 = (int *)v423;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v426 + 16))(v337 + *(int *)(v423 + 24), v506, v427);
    *(_BYTE *)(v337 + v357[5]) = v281;
    *(_BYTE *)(v337 + v357[7]) = v508 & 1;
    v358 = (_QWORD *)(v337 + v357[8]);
    v359 = v498;
    *v358 = v497;
    v358[1] = v280;
    v360 = (uint64_t)v409;
    (*(void (**)(char *, uint64_t, uint64_t))(v444 + 16))(v409, v359, v501);
    v336 = type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request;
    v361 = v424;
    sub_23200054C(v337, v424, type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator.Request);
    v362 = type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator(0);
    v340 = type metadata accessor for VisionPrescriptionCurrentValueSummarySharableModelGenerator;
    swift_allocObject();
    swift_bridgeObjectRetain();
    v341 = sub_232161D78(v360, v361);
    v342 = (uint64_t *)v499;
    v499[3] = (uint64_t *)v362;
    v343 = (unint64_t *)&unk_2541B5388;
    v344 = &unk_232217F3C;
    goto LABEL_44;
  }
  if (v99 == *MEMORY[0x24BE4AD68])
  {
    v364 = (uint64_t)v493;
    (*(void (**)(char *, uint64_t))(v439 + 96))(v493, v440);
    v365 = v114;
    v140 = v496;
    (*(void (**)(char *, uint64_t, uint64_t))(v114 + 32))(v113, v364, v496);
    v366 = (uint64_t)v421;
    (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v421, v113, v140);
    v367 = (int *)v419;
    sub_23200054C(v505, v366 + *(int *)(v419 + 20), (uint64_t (*)(_QWORD))sub_232025288);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v426 + 16))(v366 + v367[7], v506, v427);
    *(_BYTE *)(v366 + v367[6]) = v507;
    *(_BYTE *)(v366 + v367[8]) = v508 & 1;
    v368 = (_QWORD *)(v366 + v367[9]);
    v369 = v498;
    v370 = v504;
    *v368 = v497;
    v368[1] = v370;
    v371 = (uint64_t)v409;
    (*(void (**)(char *, uint64_t, uint64_t))(v444 + 16))(v409, v369, v501);
    v372 = v420;
    sub_23200054C(v366, v420, type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request);
    v373 = type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator(0);
    swift_allocObject();
    swift_bridgeObjectRetain();
    v374 = sub_232165E14(v371, v372);
    v375 = (uint64_t *)v499;
    v499[3] = (uint64_t *)v373;
    v375[4] = sub_232000590(&qword_2541B5208, type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator, (uint64_t)&unk_2322183EC);
    *v375 = v374;
    sub_232002CEC(v366, type metadata accessor for UnderwaterDepthCurrentValueSummarySharableModelGenerator.Request);
    v111 = *(uint64_t (**)(char *, uint64_t))(v365 + 8);
    v112 = v503;
    goto LABEL_9;
  }
  if (v99 == *MEMORY[0x24BE4AD48])
  {
    v376 = v426;
    v377 = v491;
    v378 = v427;
    (*(void (**)(char *, uint64_t, uint64_t))(v426 + 16))(v491, v506, v427);
    v379 = v492;
    sub_23200054C(v505, v492, (uint64_t (*)(_QWORD))sub_232025288);
    v380 = sub_2321FD8B8();
    v381 = (uint64_t)v412;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v380 - 8) + 56))(v412, 1, 1, v380);
    v382 = (int *)v411;
    (*(void (**)(uint64_t, char *, uint64_t))(v376 + 32))(v381 + *(int *)(v411 + 20), v377, v378);
    *(_BYTE *)(v381 + v382[6]) = v508 & 1;
    v383 = v504;
    swift_bridgeObjectRetain();
    v384 = v484;
    sub_232025424(v379, v381);
    v385 = (_QWORD *)(v381 + v382[7]);
    *v385 = v497;
    v385[1] = v383;
    *(_QWORD *)(v381 + v382[8]) = v384;
    *(_BYTE *)(v381 + v382[9]) = v507;
    v336 = type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request;
    v386 = v413;
    sub_232025468(v381, v413, type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request);
    sub_23200054C(v386, v381, type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request);
    v387 = (uint64_t)v409;
    (*(void (**)(char *, uint64_t, uint64_t))(v444 + 16))(v409, v498, v501);
    v388 = type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator(0);
    swift_allocObject();
    v389 = sub_23208C8CC(v381, v387);
    v390 = (uint64_t *)v499;
    v499[3] = (uint64_t *)v388;
    v390[4] = sub_232000590(&qword_255F9C230, type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator, (uint64_t)&unk_2322136C4);
    *v390 = v389;
    v363 = v386;
    goto LABEL_45;
  }
  sub_232200318();
  (*(void (**)(char *, uint64_t, uint64_t))(v444 + 16))(v418, v498, v501);
  v416(v417, v502, v440);
  v391 = sub_232200390();
  v392 = sub_2322012FC();
  if (os_log_type_enabled(v391, v392))
  {
    v393 = swift_slowAlloc();
    v394 = swift_slowAlloc();
    v510 = v394;
    *(_DWORD *)v393 = 136315650;
    v395 = sub_232201BF0();
    v509 = sub_232013174(v395, v396, &v510);
    sub_232201710();
    swift_bridgeObjectRelease();
    *(_WORD *)(v393 + 12) = 2080;
    v397 = v418;
    v398 = (void *)sub_2321FE3F8();
    v399 = sub_2321FE1B8();
    v401 = v400;

    v509 = sub_232013174(v399, v401, &v510);
    sub_232201710();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v444 + 8))(v397, v501);
    *(_WORD *)(v393 + 22) = 2080;
    v402 = v417;
    v403 = v440;
    v416(v410, (uint64_t)v417, v440);
    v404 = sub_232200F00();
    v509 = sub_232013174(v404, v405, &v510);
    sub_232201710();
    swift_bridgeObjectRelease();
    v406 = *(void (**)(char *, uint64_t))(v439 + 8);
    v406(v402, v403);
    _os_log_impl(&dword_231FFB000, v391, v392, "[%s]_%s: Unimplemented generator type for %s", (uint8_t *)v393, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v394, -1, -1);
    MEMORY[0x2348FF468](v393, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v444 + 8))(v418, v501);
    v406 = *(void (**)(char *, uint64_t))(v439 + 8);
    v406(v417, v440);
  }

  (*(void (**)(char *, uint64_t))(v414 + 8))(v422, v415);
  v407 = v499;
  v499[4] = 0;
  *(_OWORD *)v407 = 0u;
  *((_OWORD *)v407 + 1) = 0u;
  return ((uint64_t (*)(char *, uint64_t))v406)(v493, v440);
}

uint64_t sub_232022EF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t (*a8)(void)@<X7>, uint64_t **a9@<X8>, uint64_t a10)
{
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (**v58)(_BYTE *, uint64_t);
  int v59;
  BOOL v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  void (*v65)(_BYTE *, uint64_t);
  uint64_t v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE *v70;
  _BYTE *v71;
  void (*v72)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v73;
  int *v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  _BYTE *v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t **v82;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(_BYTE *, uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  _BYTE *v93;
  uint64_t v94;
  int *v95;
  _BYTE *v96;
  void (*v97)(_BYTE *, uint64_t);
  void *v98;
  void (*v99)(_BYTE *, uint64_t);
  void *v100;
  id v101;
  _BYTE *v102;
  void *v103;
  uint64_t v104;
  void *v105;
  id v106;
  _BYTE *v107;
  void (*v108)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  _BYTE *v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t **v119;
  void (*v120)(_BYTE *, uint64_t);
  _BYTE *v121;
  uint64_t v122;
  void (*v123)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _BYTE *v128;
  uint64_t v129;
  uint64_t v130;
  NSObject *v131;
  os_log_type_t v132;
  int v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  void *v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  void (*v141)(_BYTE *, uint64_t);
  _BYTE *v142;
  uint64_t v143;
  _BYTE *v144;
  uint64_t v145;
  unint64_t v146;
  _BYTE *v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  void (*v152)(_BYTE *, uint64_t);
  uint64_t **v153;
  _BYTE v154[16];
  uint64_t v155;
  _BYTE *v156;
  _BYTE *v157;
  _BYTE *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  _BYTE *v163;
  uint64_t v164;
  uint64_t v165;
  _BYTE *v166;
  _BYTE *v167;
  uint64_t v168;
  uint64_t v169;
  _BYTE *v170;
  _BYTE *v171;
  _BYTE *v172;
  uint64_t v173;
  _BYTE *v174;
  _BYTE *v175;
  _BYTE *v176;
  _BYTE *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  _BYTE *v183;
  uint64_t v184;
  _BYTE *v185;
  int v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t (*v190)(void);
  _BYTE *v191;
  uint64_t v192;
  _QWORD *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t **v197;
  uint64_t v198;
  uint64_t (**v199)(_BYTE *, uint64_t);
  uint64_t v200;
  uint64_t v201;
  _BYTE *v202;
  _BYTE *v203;
  uint64_t v204;
  uint64_t v205;
  _BYTE *v206;
  char v207[8];
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;

  v190 = a8;
  v188 = a7;
  v186 = a6;
  v184 = a5;
  v189 = a3;
  v187 = a2;
  v195 = a1;
  v197 = a9;
  v169 = sub_2321FFE08();
  v168 = *(_QWORD *)(v169 - 8);
  v11 = MEMORY[0x24BDAC7A8](v169);
  v13 = &v154[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v11);
  v167 = &v154[-v14];
  v162 = sub_23220039C();
  v161 = *(_QWORD *)(v162 - 8);
  MEMORY[0x24BDAC7A8](v162);
  v170 = &v154[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v155 = type metadata accessor for SleepTrendSummarySharableModelGenerator.Request(0);
  v16 = MEMORY[0x24BDAC7A8](v155);
  v163 = &v154[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v16);
  v166 = &v154[-v18];
  v160 = sub_2321FDD14();
  v159 = *(_QWORD *)(v160 - 8);
  MEMORY[0x24BDAC7A8](v160);
  v158 = &v154[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v165 = sub_2321FDDD4();
  v164 = *(_QWORD *)(v165 - 8);
  MEMORY[0x24BDAC7A8](v165);
  v183 = &v154[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v179 = sub_2321FFF40();
  v178 = *(_QWORD *)(v179 - 8);
  MEMORY[0x24BDAC7A8](v179);
  v177 = &v154[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v198 = sub_2321FE440();
  v196 = *(_QWORD *)(v198 - 8);
  v22 = MEMORY[0x24BDAC7A8](v198);
  v176 = &v154[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = MEMORY[0x24BDAC7A8](v22);
  v157 = &v154[-v25];
  MEMORY[0x24BDAC7A8](v24);
  v185 = &v154[-v26];
  v182 = sub_2321FE4A0();
  v201 = *(_QWORD *)(v182 - 8);
  MEMORY[0x24BDAC7A8](v182);
  v191 = &v154[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23202553C(0);
  MEMORY[0x24BDAC7A8](v28);
  v174 = &v154[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v194 = sub_2321FDC6C();
  v193 = *(_QWORD **)(v194 - 8);
  v30 = MEMORY[0x24BDAC7A8](v194);
  v156 = &v154[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v32 = MEMORY[0x24BDAC7A8](v30);
  v203 = &v154[-v33];
  MEMORY[0x24BDAC7A8](v32);
  v202 = &v154[-v34];
  v181 = sub_2321FFC4C();
  v180 = *(_QWORD *)(v181 - 8);
  v35 = MEMORY[0x24BDAC7A8](v181);
  v172 = &v154[-((v36 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v35);
  v38 = &v154[-v37];
  v173 = type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  v39 = MEMORY[0x24BDAC7A8](v173);
  v175 = &v154[-((v40 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v39);
  v42 = &v154[-v41];
  v43 = sub_232200024();
  v44 = *(_QWORD *)(v43 - 8);
  v204 = v43;
  v205 = v44;
  v45 = MEMORY[0x24BDAC7A8](v43);
  v171 = &v154[-((v46 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v45);
  v206 = &v154[-v47];
  v48 = sub_2321FFD78();
  v199 = *(uint64_t (***)(_BYTE *, uint64_t))(v48 - 8);
  v200 = v48;
  MEMORY[0x24BDAC7A8](v48);
  v50 = &v154[-((v49 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v51 = sub_2321FFD9C();
  v208 = a4;
  v52 = sub_23209C958((void (*)(_QWORD))sub_232025558, (uint64_t)v207, v51);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v52 + 16))
  {
    sub_232025570();
    v53 = sub_2322019C8();
  }
  else
  {
    v53 = MEMORY[0x24BEE4B00];
  }
  v209 = v53;
  v54 = swift_bridgeObjectRetain();
  sub_2320A3C80(v54, 1, &v209);
  swift_bridgeObjectRelease();
  v55 = v209;
  v56 = a4;
  sub_2321FFD90();
  v58 = v199;
  v57 = v200;
  v59 = v199[11](v50, v200);
  v60 = v59 == *MEMORY[0x24BE4AD28];
  v192 = v55;
  if (v60)
  {
    v58[12](v50, v57);
    v61 = v206;
    v199 = *(uint64_t (***)(_BYTE *, uint64_t))(v205 + 32);
    v62 = v205;
    v63 = v204;
    ((void (*)(_BYTE *, _BYTE *))v199)(v206, v50);
    sub_2321FFFE8();
    v64 = v202;
    sub_2321FFC40();
    v200 = a10;
    v65 = *(void (**)(_BYTE *, uint64_t))(v180 + 8);
    v66 = v181;
    v65(v38, v181);
    v67 = v171;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v62 + 16))(v171, v61, v63);
    v68 = (uint64_t)v174;
    sub_2321FFDFC();
    v69 = v182;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v201 + 16))(v191, v184, v182);
    v184 = sub_2321FFDB4();
    v70 = v172;
    sub_2321FFDA8();
    v71 = v203;
    sub_2321FFC40();
    v65(v70, v66);
    v72 = (void (*)(_BYTE *, _BYTE *, uint64_t))v193[4];
    v73 = v194;
    v72(v42, v64, v194);
    v74 = (int *)v173;
    v75 = v204;
    ((void (*)(_BYTE *, _BYTE *, uint64_t))v199)(&v42[*(int *)(v173 + 20)], v67, v204);
    sub_232025468(v68, (uint64_t)&v42[v74[6]], (uint64_t (*)(_QWORD))sub_23202553C);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v201 + 32))(&v42[v74[7]], v191, v69);
    v42[v74[8]] = v186 & 1;
    *(_QWORD *)&v42[v74[9]] = v184;
    *(_QWORD *)&v42[v74[10]] = v192;
    v72(&v42[v74[11]], v71, v73);
    v76 = &v42[v74[12]];
    v77 = v189;
    *v76 = v187;
    v76[1] = v77;
    v78 = (uint64_t)v185;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v196 + 16))(v185, v195, v198);
    v79 = v175;
    sub_23200054C((uint64_t)v42, (uint64_t)v175, type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request);
    sub_23201B304(v188, (uint64_t)&v209);
    v80 = type metadata accessor for StatisticTrendSummarySharableModelGenerator(0);
    swift_allocObject();
    swift_bridgeObjectRetain();
    v81 = sub_2320EA768(v78, (uint64_t)v79, (uint64_t)&v209, v190, v200);
    v82 = v197;
    v197[3] = (uint64_t *)v80;
    v82[4] = (uint64_t *)sub_232000590(&qword_2541B0140, type metadata accessor for StatisticTrendSummarySharableModelGenerator, (uint64_t)&unk_232215000);
    *v82 = v81;
    sub_232002CEC((uint64_t)v42, type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v205 + 8))(v206, v75);
  }
  else if (v59 == *MEMORY[0x24BE4AD90])
  {
    v58[12](v50, v57);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v178 + 32))(v177, v50, v179);
    sub_2321FFF34();
    sub_2320057B8(0, &qword_2541B57F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ABE8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v84 = sub_2321FFC94();
    v200 = a10;
    v85 = *(_QWORD *)(v84 - 8);
    v86 = (*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80);
    v87 = swift_allocObject();
    *(_OWORD *)(v87 + 16) = xmmword_232210D40;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v85 + 104))(v87 + v86, *MEMORY[0x24BE4ABD0], v84);
    v88 = *MEMORY[0x24BE4A9F8];
    v89 = v180;
    v90 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v180 + 104);
    v91 = v181;
    v90(v38, v88, v181);
    sub_23220000C();
    v92 = v159;
    v93 = v158;
    v94 = v160;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v159 + 104))(v158, *MEMORY[0x24BDCEF70], v160);
    sub_2321FDD20();
    (*(void (**)(_BYTE *, uint64_t))(v92 + 8))(v93, v94);
    v90(v38, v88, v91);
    v95 = (int *)v155;
    v96 = v203;
    sub_2321FFC40();
    v97 = *(void (**)(_BYTE *, uint64_t))(v89 + 8);
    v97(v38, v91);
    v98 = (void *)sub_2321FDBF4();
    v99 = (void (*)(_BYTE *, uint64_t))v193[1];
    v99(v96, v194);
    v199 = (uint64_t (**)(_BYTE *, uint64_t))v99;
    v100 = (void *)sub_2321FDD5C();
    v101 = objc_msgSend(v98, sel_hk_sleepDayStartWithCalendar_, v100);

    sub_2321FDC30();
    sub_2321FFDA8();
    v102 = v156;
    sub_2321FFC40();
    v97(v38, v91);
    v103 = (void *)sub_2321FDBF4();
    v104 = v194;
    v99(v102, v194);
    v105 = (void *)sub_2321FDD5C();
    v106 = objc_msgSend(v103, sel_hk_sleepDayStartWithCalendar_, v105);

    v107 = v203;
    sub_2321FDC30();

    v108 = (void (*)(_BYTE *, _BYTE *, uint64_t))v193[2];
    v109 = (uint64_t)v166;
    v110 = v104;
    v108(v166, v202, v104);
    v111 = v204;
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v205 + 16))(v109 + v95[5], v206, v204);
    v112 = sub_2321FFDB4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v201 + 16))(v109 + v95[8], v184, v182);
    v108((_BYTE *)(v109 + v95[10]), v107, v104);
    *(_QWORD *)(v109 + v95[6]) = v112;
    *(_QWORD *)(v109 + v95[7]) = v192;
    *(_BYTE *)(v109 + v95[9]) = v186 & 1;
    v113 = (_QWORD *)(v109 + v95[11]);
    v114 = v189;
    *v113 = v187;
    v113[1] = v114;
    v115 = (uint64_t)v185;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v196 + 16))(v185, v195, v198);
    v116 = v163;
    sub_23200054C(v109, (uint64_t)v163, type metadata accessor for SleepTrendSummarySharableModelGenerator.Request);
    sub_23201B304(v188, (uint64_t)&v209);
    v117 = type metadata accessor for SleepTrendSummarySharableModelGenerator(0);
    swift_allocObject();
    swift_bridgeObjectRetain();
    v118 = sub_23217C8F0(v115, (uint64_t)v116, (uint64_t)&v209, v190, v200);
    v119 = v197;
    v197[3] = (uint64_t *)v117;
    v119[4] = (uint64_t *)sub_232000590(&qword_2541AFED0, type metadata accessor for SleepTrendSummarySharableModelGenerator, (uint64_t)&unk_232218628);
    *v119 = v118;
    sub_232002CEC(v109, type metadata accessor for SleepTrendSummarySharableModelGenerator.Request);
    v120 = (void (*)(_BYTE *, uint64_t))v199;
    ((void (*)(_BYTE *, uint64_t))v199)(v203, v110);
    v120(v202, v110);
    (*(void (**)(_BYTE *, uint64_t))(v164 + 8))(v183, v165);
    (*(void (**)(_BYTE *, uint64_t))(v205 + 8))(v206, v111);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v178 + 8))(v177, v179);
  }
  else
  {
    v206 = v13;
    swift_release();
    v121 = v170;
    sub_232200318();
    v122 = v196;
    v123 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v196 + 16);
    v124 = v157;
    v125 = v195;
    v126 = v198;
    v123(v157, v195, v198);
    v123(v176, v125, v126);
    v127 = v168;
    v128 = v167;
    v129 = v56;
    v130 = v169;
    v205 = *(_QWORD *)(v168 + 16);
    ((void (*)(_BYTE *, uint64_t, uint64_t))v205)(v167, v129, v169);
    v131 = sub_232200390();
    v132 = sub_2322012FC();
    v133 = v132;
    if (os_log_type_enabled(v131, v132))
    {
      v134 = swift_slowAlloc();
      v204 = swift_slowAlloc();
      v209 = v204;
      *(_DWORD *)v134 = 136315906;
      LODWORD(v203) = v133;
      v135 = sub_232201BF0();
      v210 = sub_232013174(v135, v136, &v209);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v134 + 12) = 2080;
      v137 = (void *)sub_2321FE3F8();
      v138 = sub_2321FE1B8();
      v140 = v139;

      v210 = sub_232013174(v138, v140, &v209);
      sub_232201710();
      swift_bridgeObjectRelease();
      v141 = *(void (**)(_BYTE *, uint64_t))(v122 + 8);
      v142 = v124;
      v143 = v198;
      v141(v142, v198);
      *(_WORD *)(v134 + 22) = 2080;
      v144 = v176;
      sub_2321FE3E0();
      v145 = sub_2321FE83C();
      v210 = sub_232013174(v145, v146, &v209);
      sub_232201710();
      swift_bridgeObjectRelease();
      v141(v144, v143);
      *(_WORD *)(v134 + 32) = 2080;
      v147 = v167;
      v148 = v169;
      ((void (*)(_BYTE *, _BYTE *, uint64_t))v205)(v206, v167, v169);
      v149 = sub_232200F00();
      v210 = sub_232013174(v149, v150, &v209);
      sub_232201710();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v168 + 8))(v147, v148);
      _os_log_impl(&dword_231FFB000, v131, (os_log_type_t)v203, "[%s]_%s_%s: Unimplemented trend generator type for %s", (uint8_t *)v134, 0x2Au);
      v151 = v204;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v151, -1, -1);
      MEMORY[0x2348FF468](v134, -1, -1);

      (*(void (**)(_BYTE *, uint64_t))(v161 + 8))(v170, v162);
    }
    else
    {
      v152 = *(void (**)(_BYTE *, uint64_t))(v122 + 8);
      v152(v124, v126);
      v152(v176, v126);
      (*(void (**)(_BYTE *, uint64_t))(v127 + 8))(v128, v130);

      (*(void (**)(_BYTE *, uint64_t))(v161 + 8))(v121, v162);
    }
    v153 = v197;
    v197[4] = 0;
    *(_OWORD *)v153 = 0u;
    *((_OWORD *)v153 + 1) = 0u;
    return v199[1](v50, v200);
  }
}

uint64_t sub_23202407C@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_2320057B8(0, &qword_2541B2A58, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AD10], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v21 - v6;
  v8 = *a1;
  *a2 = v8;
  sub_2321FFDB4();
  v9 = sub_2321FFDCC();
  if (v9)
  {
    v10 = v9;
    if (*(_QWORD *)(v9 + 16) && (v11 = sub_23216AC54(v8), (v12 & 1) != 0))
    {
      v13 = v11;
      v22 = *(_QWORD *)(v10 + 56);
      v14 = sub_2321FFD6C();
      v23 = v2;
      v15 = *(_QWORD *)(v14 - 8);
      (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v7, v22 + *(_QWORD *)(v15 + 72) * v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
    }
    else
    {
      v16 = sub_2321FFD6C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v7, 1, 1, v16);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = sub_2321FFD6C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v7, 1, 1, v17);
  }
  sub_23202561C();
  v19 = v18;
  sub_2321FFDD8();
  sub_2321FFE68();
  swift_bridgeObjectRelease();
  sub_232025680((uint64_t)v7);
  return (*(uint64_t (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a2, 0, 1, v19);
}

uint64_t *sub_232024258(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v8 = *a4;
  v9 = sub_2321FE3BC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320E4004(a1, (uint64_t)v12);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))((uint64_t)a4 + OBJC_IVAR____TtC9Summaries44CorrelatedTrendSummarySharableModelGenerator_domain, v12, v9);
  sub_23200054C((uint64_t)a2, (uint64_t)a4 + OBJC_IVAR____TtC9Summaries44CorrelatedTrendSummarySharableModelGenerator_request, type metadata accessor for CorrelatedTrendSummarySharableModelGenerator.Request);
  v13 = sub_232024398(a1, a2, a3, v8);
  v14 = sub_2321FFF1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a3, v14);
  sub_232002CEC((uint64_t)a2, type metadata accessor for CorrelatedTrendSummarySharableModelGenerator.Request);
  v15 = sub_2321FE440();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(a1, v15);
  *(uint64_t *)((char *)a4 + OBJC_IVAR____TtC9Summaries44CorrelatedTrendSummarySharableModelGenerator_publisher) = v13;
  return a4;
}

uint64_t sub_232024398(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char v64[16];
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70[5];

  v53 = a4;
  v46 = a3;
  v48 = a1;
  v7 = sub_2321FE440();
  v58 = *(_QWORD *)(v7 - 8);
  v59 = v7;
  v60 = *(_QWORD *)(v58 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v57 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CorrelatedTrendSummarySharableModelGenerator.Request(0);
  v55 = *(_QWORD *)(v9 - 8);
  v56 = *(_QWORD *)(v55 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v54 = (uint64_t)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320256D4();
  v12 = *(_QWORD *)(v11 - 8);
  v62 = v11;
  v63 = v12;
  MEMORY[0x24BDAC7A8](v11);
  v61 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320257F4(0);
  v15 = v14;
  v49 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320258FC(0, &qword_255F9C278, v18, sub_23202596C, MEMORY[0x24BDB98D0]);
  v20 = v19;
  v51 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v46 - v21;
  sub_232025988();
  v50 = v23;
  v52 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v46 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_2321FFF1C();
  v70[3] = v26;
  v70[4] = MEMORY[0x24BE4B540];
  v27 = sub_2320251BC(v70);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, v46, v26);
  v28 = a2;
  v47 = a2;
  v29 = *a2;
  v65 = a4;
  v66 = a1;
  v67 = v28;
  v68 = v70;
  swift_bridgeObjectRetain();
  v30 = sub_23200620C((void (*)(uint64_t *__return_ptr, uint64_t))sub_232025A98, (uint64_t)v64, v29);
  swift_bridgeObjectRelease();
  v69 = v30;
  sub_232025818();
  sub_2320057B8(0, (unint64_t *)&qword_255F9C298, (uint64_t (*)(uint64_t))sub_232025818, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_2320258E0();
  sub_232025E68(&qword_255F9C2A0, (unint64_t *)&qword_255F9C298, (uint64_t (*)(uint64_t))sub_232025818, MEMORY[0x24BEE12C8]);
  sub_2322005E8();
  sub_23202596C();
  sub_232200810();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v17, v15);
  sub_232003E9C(0, &qword_255F9C060);
  sub_232025A30();
  sub_2322007A4();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v22, v20);
  sub_232000590(&qword_255F9C2A8, (uint64_t (*)(uint64_t))sub_232025988, MEMORY[0x24BDB96C0]);
  v31 = v50;
  v32 = sub_232200774();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v25, v31);
  v69 = v32;
  v33 = v54;
  sub_23200054C((uint64_t)v47, v54, type metadata accessor for CorrelatedTrendSummarySharableModelGenerator.Request);
  v34 = v58;
  v35 = v59;
  v36 = v57;
  (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v57, v48, v59);
  v37 = (*(unsigned __int8 *)(v55 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
  v38 = (v56 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
  v39 = v34;
  v40 = (*(unsigned __int8 *)(v34 + 80) + v38 + 8) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  v41 = swift_allocObject();
  sub_232025468(v33, v41 + v37, type metadata accessor for CorrelatedTrendSummarySharableModelGenerator.Request);
  *(_QWORD *)(v41 + v38) = v53;
  (*(void (**)(unint64_t, char *, uint64_t))(v39 + 32))(v41 + v40, v36, v35);
  sub_232025780();
  sub_2320057B8(0, &qword_2541B54B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE48110], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_232000590(&qword_255F9C250, (uint64_t (*)(uint64_t))sub_232025780, MEMORY[0x24BDB9AF8]);
  v42 = v61;
  sub_2322007A4();
  swift_release();
  sub_232000590(&qword_255F9C2B0, (uint64_t (*)(uint64_t))sub_2320256D4, MEMORY[0x24BDB96C0]);
  v43 = v62;
  v44 = sub_232200774();
  swift_release();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v42, v43);
  sub_232016AFC((uint64_t)v70);
  return v44;
}

id sub_232024934(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id result;
  void *v30;
  void (*v31)(char *, uint64_t, uint64_t);
  char *v32;
  char *v33;
  char *v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD v37[2];
  unint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  id v44;
  uint64_t v45;
  unint64_t v46;

  v44 = a2;
  v4 = sub_2321FE608();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v43 = (char *)v37 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v42 = (char *)v37 - v13;
  v14 = *(_QWORD *)(a1 + 16);
  if (v14)
  {
    v40 = v12;
    v41 = v11;
    v15 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v37[1] = v2;
    v38 = v15;
    v16 = a1 + v15;
    v17 = *(_QWORD *)(v11 + 72);
    v37[0] = a1;
    swift_bridgeObjectRetain();
    v18 = MEMORY[0x24BEE4AF8];
    v39 = v7;
    v45 = v17;
    while (1)
    {
      v20 = sub_2321FE5E4();
      v22 = v21;
      v23 = objc_allocWithZone(MEMORY[0x24BE4A4C0]);
      v24 = (void *)sub_2321FDAC8();
      sub_232003ED4(v20, v22);
      v25 = objc_msgSend(v23, sel_initWithData_, v24);

      if (v25)
      {
        v46 = v18;
        sub_232003E9C(0, &qword_2541B7EC0);
        v26 = HKCodableQueryAnchor.init(queryAnchor:)(v44);
        objc_msgSend(v25, sel_setDatabaseChangesQueryAnchor_, v26);

        v27 = v40;
        v28 = v41;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v40, v16, v4);
        result = objc_msgSend(v25, sel_data);
        if (!result)
        {
          __break(1u);
          return result;
        }
        v30 = result;
        sub_2321FDAD4();

        sub_2321FE5F0();
        v31 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 32);
        v32 = v43;
        v31(v43, v27, v4);
        v33 = v42;
        v31(v42, (uint64_t)v32, v4);
        v34 = v39;
        v31(v39, (uint64_t)v33, v4);
        v18 = v46;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v18 = sub_232096C94(0, *(_QWORD *)(v18 + 16) + 1, 1, v18);
        v36 = *(_QWORD *)(v18 + 16);
        v35 = *(_QWORD *)(v18 + 24);
        if (v36 >= v35 >> 1)
          v18 = sub_232096C94(v35 > 1, v36 + 1, 1, v18);
        *(_QWORD *)(v18 + 16) = v36 + 1;
        v19 = v45;
        v31((char *)(v18 + v38 + v36 * v45), (uint64_t)v34, v4);
      }
      else
      {
        v19 = v45;
      }
      v16 += v19;
      if (!--v14)
      {
        swift_bridgeObjectRelease();
        return (id)v18;
      }
    }
  }
  return (id)MEMORY[0x24BEE4AF8];
}

id sub_232024C50()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v0 = sub_2321FE5E4();
  v2 = v1;
  v3 = objc_allocWithZone(MEMORY[0x24BE4A4C0]);
  v4 = (void *)sub_2321FDAC8();
  sub_232003ED4(v0, v2);
  v5 = objc_msgSend(v3, sel_initWithData_, v4);

  if (!v5)
    return 0;
  if (objc_msgSend(v5, sel_hasContentData)
    && objc_msgSend(v5, sel_hasDatabaseChangesQueryAnchor)
    && (v6 = objc_msgSend(v5, sel_databaseChangesQueryAnchor)) != 0)
  {
    v7 = v6;
    v8 = HKCodableQueryAnchor.queryAnchor.getter();

  }
  else
  {
    v8 = 0;
  }

  return v8;
}

void sub_232024D3C()
{
  uint64_t (*v0)(void);
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  if (!qword_2541B2448)
  {
    sub_232024E20();
    v0 = MEMORY[0x24BDB9AE0];
    sub_232025C30(255, &qword_2541B24C0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
    v1 = MEMORY[0x24BDB9AF8];
    sub_232000590(&qword_2541B24A8, (uint64_t (*)(uint64_t))sub_232024E20, MEMORY[0x24BDB9AF8]);
    sub_232025CB0(&qword_2541B24B8, &qword_2541B24C0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v0, v1);
    v2 = sub_23220057C();
    if (!v3)
      atomic_store(v2, (unint64_t *)&qword_2541B2448);
  }
}

void sub_232024E20()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B24B0)
  {
    sub_2320057B8(255, (unint64_t *)&unk_2541B2348, type metadata accessor for SummaryModelConfiguration.Request, MEMORY[0x24BE41D18]);
    sub_232016A8C(255, (unint64_t *)&qword_2541B78D0);
    v0 = sub_232200624();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B24B0);
  }
}

void sub_232024EB4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B23B8)
  {
    sub_232024D3C();
    sub_232016A8C(255, &qword_2541B28D8);
    sub_232000590(&qword_2541B2440, (uint64_t (*)(uint64_t))sub_232024D3C, MEMORY[0x24BDB9740]);
    v0 = sub_2322004EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B23B8);
  }
}

uint64_t sub_232024F58()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_2321FE440();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_232024FC4@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(sub_2321FE440() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_23201D7A4(a1, v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)), a2);
}

uint64_t sub_232025024()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v1 = sub_2321FE440();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = sub_2321FE3BC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + v5 + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + v8, v6);
  return swift_deallocObject();
}

void sub_232025114(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v5 = *(_QWORD *)(sub_2321FE440() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(sub_2321FE3BC() - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + v8 + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  sub_23201DC34(a1, v2 + v6, *(void **)(v2 + v7), *(NSObject **)(v2 + v8), v2 + v10, *(NSObject **)(v2 + ((*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFF8)), a2);
}

uint64_t *sub_2320251BC(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

id sub_2320251F8(uint64_t a1, void *a2, char a3)
{
  id result;

  switch(a3)
  {
    case 2:
      return (id)swift_retain();
    case 1:
      swift_bridgeObjectRetain();
      return a2;
    case 0:
      return (id)swift_bridgeObjectRetain();
  }
  return result;
}

void sub_232025240(uint64_t a1, void *a2, char a3)
{
  switch(a3)
  {
    case 2:
      swift_release();
      break;
    case 1:
      swift_bridgeObjectRelease();

      break;
    case 0:
      swift_bridgeObjectRelease();
      break;
  }
}

void sub_232025288(uint64_t a1)
{
  sub_2320057B8(a1, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

void sub_2320252A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2FD8)
  {
    v0 = sub_232200624();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2FD8);
  }
}

void sub_232025308(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_232025384()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_2541B5508)
  {
    sub_2320057B8(255, &qword_2541B5510, (uint64_t (*)(uint64_t))type metadata accessor for HKTimeScope, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_232025288(255);
    sub_2320252A4();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_2541B5508);
  }
}

uint64_t sub_232025424(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_232025288(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_232025468(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2320254AC(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t v4;

  sub_2320254E8(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_2320254E8(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_232016A8C(255, a3);
    v4 = sub_2322016F8();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_23202553C(uint64_t a1)
{
  sub_2320057B8(a1, &qword_2541AF190, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AB30], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

uint64_t sub_232025558@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_23202407C(a1, a2);
}

void sub_232025570()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B5750)
  {
    sub_2321FFEA4();
    sub_2320255D8();
    v0 = sub_2322019D4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B5750);
  }
}

unint64_t sub_2320255D8()
{
  unint64_t result;

  result = qword_2541B2AE0;
  if (!qword_2541B2AE0)
  {
    result = MEMORY[0x2348FF39C](MEMORY[0x24BE4BBA0], MEMORY[0x24BE4BB98]);
    atomic_store(result, (unint64_t *)&qword_2541B2AE0);
  }
  return result;
}

void sub_23202561C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2541B2AE8)
  {
    sub_2321FFEA4();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2541B2AE8);
  }
}

uint64_t sub_232025680(uint64_t a1)
{
  uint64_t v2;

  sub_2320057B8(0, &qword_2541B2A58, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AD10], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2320256D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9C240)
  {
    sub_232025780();
    sub_2320057B8(255, &qword_2541B54B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE48110], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_232000590(&qword_255F9C250, (uint64_t (*)(uint64_t))sub_232025780, MEMORY[0x24BDB9AF8]);
    v0 = sub_232200540();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9C240);
  }
}

void sub_232025780()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9C248)
  {
    sub_232003E9C(255, &qword_255F9C060);
    v0 = sub_232200624();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9C248);
  }
}

void sub_2320257F4(uint64_t a1)
{
  sub_2320258FC(a1, &qword_255F9C258, (uint64_t (*)(uint64_t))sub_232025818, sub_2320258E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB99B8]);
}

void sub_232025818()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9C260)
  {
    sub_23202587C();
    v0 = sub_232200624();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9C260);
  }
}

void sub_23202587C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9C268)
  {
    sub_232003E9C(255, &qword_255F9C078);
    v0 = sub_232201080();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9C268);
  }
}

uint64_t sub_2320258E0()
{
  return sub_232000590(&qword_255F9C270, (uint64_t (*)(uint64_t))sub_232025818, MEMORY[0x24BDB9AF8]);
}

void sub_2320258FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*a2)
  {
    v9 = a3(255);
    v10 = a4();
    v11 = a5(a1, v9, v10);
    if (!v12)
      atomic_store(v11, a2);
  }
}

uint64_t sub_23202596C()
{
  return sub_232000590(&qword_255F9C280, (uint64_t (*)(uint64_t))sub_2320257F4, MEMORY[0x24BDB99D8]);
}

void sub_232025988()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9C288)
  {
    sub_2320258FC(255, &qword_255F9C278, (uint64_t (*)(uint64_t))sub_2320257F4, sub_23202596C, MEMORY[0x24BDB98D0]);
    sub_232003E9C(255, &qword_255F9C060);
    sub_232025A30();
    v0 = sub_232200540();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9C288);
  }
}

unint64_t sub_232025A30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F9C290;
  if (!qword_255F9C290)
  {
    sub_2320258FC(255, &qword_255F9C278, (uint64_t (*)(uint64_t))sub_2320257F4, sub_23202596C, MEMORY[0x24BDB98D0]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB98D8], v1);
    atomic_store(result, (unint64_t *)&qword_255F9C290);
  }
  return result;
}

uint64_t sub_232025A98@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_2320E4340(a1, v2[3], v2[4], v2[5], a2);
}

uint64_t sub_232025AB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for CorrelatedTrendSummarySharableModelGenerator.Request(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = sub_2321FE440();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_bridgeObjectRelease();
  v8 = v0 + v3 + *(int *)(v1 + 20);
  v9 = sub_2321FE4A0();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

void sub_232025BA8(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(type metadata accessor for CorrelatedTrendSummarySharableModelGenerator.Request(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(unsigned __int8 *)(*(_QWORD *)(sub_2321FE440() - 8) + 80);
  sub_2320E47C8(a1, v2 + v6, v2 + ((v7 + v8 + 8) & ~v8), a2);
}

void sub_232025C30(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_2320057B8(255, (unint64_t *)&unk_2541B2348, type metadata accessor for SummaryModelConfiguration.Request, MEMORY[0x24BE41D18]);
    v7 = a3(a1, v6, MEMORY[0x24BEE4078], MEMORY[0x24BEE40A8]);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_232025CB0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_232025C30(255, a2, a3);
    result = MEMORY[0x2348FF39C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_232025CF0(uint64_t a1)
{
  sub_232025DE8(a1, &qword_2541B3020, (uint64_t (*)(uint64_t))sub_232025D0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
}

void sub_232025D0C(uint64_t a1)
{
  sub_232025DE8(a1, &qword_2541B5870, (uint64_t (*)(uint64_t))sub_232025D28, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BEE4408]);
}

void sub_232025D28()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B5478)
  {
    sub_232003E9C(255, (unint64_t *)&qword_2541B7EA8);
    sub_2321FD8B8();
    sub_232003DA4();
    v0 = sub_232200DEC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B5478);
  }
}

void sub_232025DB0(uint64_t a1)
{
  sub_232025DE8(a1, &qword_2541B3030, (uint64_t (*)(uint64_t))sub_232025DCC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
}

void sub_232025DCC(uint64_t a1)
{
  sub_232025DE8(a1, &qword_2541B5878, MEMORY[0x24BE45A68], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BEE4408]);
}

void sub_232025DE8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = sub_232016A8C(255, (unint64_t *)&qword_2541B78D0);
    v9 = a4(a1, v7, v8, MEMORY[0x24BEE3F20]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_232025E68(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_2320057B8(255, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2348FF39C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_232025EB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_232026DE8(v2 + *(int *)(a1 + 36), a2, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

uint64_t sub_232025EE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_2321FE4A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_232025F20(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 20));
}

uint64_t sub_232025F2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 24));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_232025F60(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t inited;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  unint64_t v19;
  void (*v20)(unint64_t, _QWORD, uint64_t);
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v33 = *v2;
  v5 = sub_2321FE38C();
  v29 = *(_QWORD *)(v5 - 8);
  v30 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2321FE3BC();
  v31 = *(_QWORD *)(v8 - 8);
  v32 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = a1;
  v28 = (id)sub_2321FE3F8();
  sub_232027434();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232210D20;
  *(_QWORD *)(inited + 32) = sub_2321FE464();
  v36 = inited;
  sub_232201050();
  v12 = *(_BYTE *)(a2
                 + *(int *)(type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request(0)
                          + 40));
  sub_2320057B8(0, &qword_2541B7530, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v13 = sub_2321FE194();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  if ((v12 & 1) != 0)
  {
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_232210D40;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v14 + 104))(v17 + v16, *MEMORY[0x24BE47410], v13);
  }
  else
  {
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_232210D30;
    v19 = v17 + v16;
    v20 = *(void (**)(unint64_t, _QWORD, uint64_t))(v14 + 104);
    v20(v19, *MEMORY[0x24BE47460], v13);
    v20(v19 + v15, *MEMORY[0x24BE47490], v13);
  }
  v18 = v28;
  sub_2321A492C(v17);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v21 = swift_bridgeObjectRetain();
  sub_2321A4950(v21);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t))(v29 + 104))(v7, *MEMORY[0x24BE47918], v30);
  sub_2321FE3B0();

  swift_bridgeObjectRelease();
  v22 = v35;
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v35 + OBJC_IVAR____TtC9Summaries71MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator_domain, v10, v32);
  v23 = sub_232000590(&qword_2541B0B18, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator, (uint64_t)&unk_2322110DC);
  v24 = v34;
  v25 = static CurrentValueSummaryModelGenerating.makePublisher(generatorContext:request:)(v34, a2, v33, v23);
  sub_232002CEC(a2, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request);
  v26 = sub_2321FE440();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v24, v26);
  *(_QWORD *)(v22 + 16) = v25;
  return v22;
}

uint64_t sub_2320262B0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, (unint64_t *)&unk_2541B5560, (uint64_t (*)(uint64_t))sub_232026D78, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (uint64_t *)((char *)&v24 - v6);
  sub_232026D78();
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232026DE8(a1, (uint64_t)v7, (unint64_t *)&unk_2541B5560, (uint64_t (*)(uint64_t))sub_232026D78, v4);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9) == 1)
  {
    sub_232016D88((uint64_t)v7, (unint64_t *)&unk_2541B5560, (uint64_t (*)(uint64_t))sub_232026D78);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v10 + 56))(a2, 1, 1, v9);
  }
  else
  {
    v14 = *(int *)(v9 + 48);
    v15 = &v12[v14];
    v16 = (char *)v7 + v14;
    v17 = *(int *)(v9 + 64);
    v18 = *v7;
    v19 = sub_2321FDC6C();
    v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32);
    v20(v15, v16, v19);
    v21 = *(uint64_t *)((char *)v7 + v17);
    v22 = (char *)a2 + *(int *)(v9 + 48);
    v23 = *(int *)(v9 + 64);
    *a2 = v18;
    v20(v22, v15, v19);
    *(_QWORD *)((char *)a2 + v23) = v21;
    return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a2, 0, 1, v9);
  }
}

id sub_232026458(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  double *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double *v27;
  uint64_t v28;
  _QWORD *v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  uint64_t v34;
  uint64_t v35;
  void (*v36)(_QWORD, _QWORD, _QWORD);
  id v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  id result;
  id v49;
  void *v50;
  double v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  void *v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t (*v67)(uint64_t);
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  _QWORD **v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _OWORD v78[2];
  uint64_t v79;

  v71 = a2;
  v77 = a1;
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B28D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v74 = (_QWORD **)((char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v70 - v6;
  sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], v2);
  MEMORY[0x24BDAC7A8](v8);
  v73 = (char *)&v70 - v9;
  sub_2320057B8(0, (unint64_t *)&qword_2541B2A70, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0], v2);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v76 = (uint64_t)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v75 = (uint64_t)&v70 - v13;
  sub_2320057B8(0, &qword_2541B3548, (uint64_t (*)(uint64_t))sub_232026D78, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v70 - v15;
  sub_2320057B8(0, (unint64_t *)&unk_2541B5560, (uint64_t (*)(uint64_t))sub_232026D78, v2);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (double *)((char *)&v70 - v18);
  sub_232026D78();
  v21 = v20;
  v22 = *(_QWORD *)(v20 - 8);
  v23 = MEMORY[0x24BDAC7A8](v20);
  v70 = (_QWORD **)((char *)&v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = MEMORY[0x24BDAC7A8](v23);
  v27 = (double *)((char *)&v70 - v26);
  MEMORY[0x24BDAC7A8](v25);
  v29 = (_QWORD **)((char *)&v70 - v28);
  sub_232026DE8(v77, (uint64_t)v16, &qword_2541B3548, (uint64_t (*)(uint64_t))sub_232026D78, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  v31 = 1;
  if (v30(v16, 1, v21) != 1)
  {
    sub_232026E38((uint64_t)v16, (uint64_t)v19);
    v31 = 0;
  }
  (*(void (**)(double *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v19, v31, 1, v21);
  if (v30((char *)v19, 1, v21) == 1)
  {
    sub_232016D88((uint64_t)v19, (unint64_t *)&unk_2541B5560, (uint64_t (*)(uint64_t))sub_232026D78);
    sub_2321FE6B0();
    v32 = sub_2321FE6D4();
    v33 = (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v7, 0, 1, v32);
    sub_232003E9C(0, &qword_2541B0CD0);
    v34 = sub_2321FFD78();
    v35 = v76;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v76, 1, 1, v34);
    v36 = (void (*)(_QWORD, _QWORD, _QWORD))v74;
    sub_232026DE8((uint64_t)v7, (uint64_t)v74, &qword_2541B28D0, v33, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v37 = sub_2320151CC(0, 0xF000000000000000, 0xBu, v35, (uint64_t)v36, 0, 0);
    sub_232016D88((uint64_t)v7, &qword_2541B28D0, v33);
    return v37;
  }
  v38 = *(int *)(v21 + 48);
  v39 = (char *)v29 + v38;
  v40 = *(int *)(v21 + 64);
  v41 = (char *)v19 + v38;
  v42 = *v19;
  *v29 = *(_QWORD *)v19;
  v43 = sub_2321FDC6C();
  v44 = *(_QWORD *)(v43 - 8);
  (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v39, v41, v43);
  v45 = *(_QWORD *)((char *)v19 + v40);
  v77 = v40;
  *(_QWORD *)((char *)v29 + v40) = v45;
  v46 = (char *)v27 + *(int *)(v21 + 48);
  v47 = *(int *)(v21 + 64);
  *v27 = v42;
  v74 = *(_QWORD ***)(v44 + 16);
  ((void (*)(char *, char *, uint64_t))v74)(v46, v39, v43);
  *(_QWORD *)((char *)v27 + v47) = v45;
  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A510]), sel_init);
  if (result)
  {
    v49 = result;
    objc_msgSend(v49, sel_setTimeInterval_, v42);
    v50 = (void *)sub_2321FDBF4();
    v51 = MEMORY[0x2348FEDA8]();

    objc_msgSend(v49, sel_setDateData_, v51);
    v52 = *(void (**)(char *, uint64_t))(v44 + 8);
    v52(v46, v43);
    v53 = v75;
    (*(void (**)(uint64_t))(v72 + 104))(v71);
    v54 = sub_2321FFD78();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v53, 0, 1, v54);
    sub_232003E9C(0, &qword_2541B56C8);
    v55 = (uint64_t)v73;
    sub_2321FD840();
    v56 = sub_2321FD8B8();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v55, 0, 1, v56);
    v57 = v39;
    v58 = v70;
    v59 = (char *)v70 + *(int *)(v21 + 48);
    v60 = *(int *)(v21 + 64);
    *v70 = *v29;
    ((void (*)(char *, char *, uint64_t))v74)(v59, v57, v43);
    v61 = *(_QWORD *)((char *)v29 + v77);
    *(_QWORD *)((char *)v58 + v60) = v61;
    v62 = HKCodableSummarySupplementaryValue.init(dateInterval:dataCount:)(v55, v61, 0);
    v52(v59, v43);
    result = objc_msgSend(v49, sel_data);
    if (result)
    {
      v63 = result;
      sub_232003E9C(0, &qword_2541B0CD0);
      v64 = sub_2321FDAD4();
      v66 = v65;

      v67 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0];
      v69 = v75;
      v68 = v76;
      sub_232026DE8(v75, v76, (unint64_t *)&qword_2541B2A70, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v79 = 0;
      memset(v78, 0, sizeof(v78));
      v37 = sub_232015828(v64, v66, 17, v68, (uint64_t)v62, 0, (uint64_t)v78);

      sub_232003ED4(v64, v66);
      sub_232016D88(v69, (unint64_t *)&qword_2541B2A70, v67);
      sub_232002CEC((uint64_t)v29, (uint64_t (*)(_QWORD))sub_232026D78);
      return v37;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_232026AF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_232026BD4(a1, MEMORY[0x24BE4AD88], a2);
}

uint64_t sub_232026B04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC9Summaries71MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator_domain;
  v2 = sub_2321FE3BC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_232026B5C()
{
  return type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator(0);
}

uint64_t type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator(uint64_t a1)
{
  return sub_23201A14C(a1, (uint64_t *)&unk_2541B0B28);
}

uint64_t sub_232026B80@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC9Summaries71MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator_domain;
  v4 = sub_2321FE3BC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_232026BC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_232026BD4(a1, MEMORY[0x24BE4AD20], a2);
}

uint64_t sub_232026BD4@<X0>(uint64_t a1@<X0>, unsigned int *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = a1
     + *(int *)(type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request(0)
              + 28);
  v6 = sub_2322001B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a3, v5, v6);
  v7 = *a2;
  v8 = sub_2321FFD78();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(a3, v7, v8);
}

uint64_t sub_232026C50()
{
  return type metadata accessor for StandHoursCurrentValueSummarySharableModelGenerator(0);
}

uint64_t type metadata accessor for StandHoursCurrentValueSummarySharableModelGenerator(uint64_t a1)
{
  return sub_23201A14C(a1, (uint64_t *)&unk_2541B0380);
}

uint64_t sub_232026C6C()
{
  return swift_updateClassMetadata2();
}

_UNKNOWN **sub_232026CA0()
{
  return &off_2500FECF0;
}

uint64_t sub_232026CAC(uint64_t a1)
{
  uint64_t result;

  result = sub_232000590(&qword_2541B0B10, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator, (uint64_t)&unk_232211054);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

_UNKNOWN **sub_232026CE8()
{
  return &off_2500FED38;
}

uint64_t sub_232026CF4(uint64_t a1)
{
  uint64_t result;

  result = sub_232000590(&qword_2541B0B20, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator, (uint64_t)&unk_232211084);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

_UNKNOWN **sub_232026D30()
{
  return &off_2500FED50;
}

uint64_t sub_232026D3C(uint64_t a1)
{
  uint64_t result;

  result = sub_232000590(&qword_2541B5460, type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator, (uint64_t)&unk_2322110B0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_232026D78()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_2541B5558)
  {
    sub_2321FDC6C();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_2541B5558);
  }
}

uint64_t sub_232026DE8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v7;

  sub_2320057B8(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_232026E38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_232026D78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_232026E7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t inited;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  unint64_t v24;
  void (*v25)(unint64_t, _QWORD, uint64_t);
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[4];

  v33 = sub_2321FE38C();
  v31 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v32 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2321FE3BC();
  v34 = *(_QWORD *)(v5 - 8);
  v35 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320272F0();
  v36 = *(_QWORD *)(v8 - 8);
  v37 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2321FE3D4();
  sub_232016AD8(v40, v40[3]);
  v11 = (void *)sub_2321FE314();
  v12 = (void *)sub_2321FE464();
  v13 = type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request(0);
  v14 = sub_232201290();

  sub_232016AFC((uint64_t)v40);
  v39 = v14;
  sub_2321FE434();
  v15 = (void *)sub_2321FE3F8();
  sub_232027434();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232210D20;
  *(_QWORD *)(inited + 32) = sub_2321FE464();
  v38 = inited;
  sub_232201050();
  v17 = *(_BYTE *)(a3 + *(int *)(v13 + 40));
  sub_2320057B8(0, &qword_2541B7530, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v18 = sub_2321FE194();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_QWORD *)(v19 + 72);
  v21 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  if ((v17 & 1) != 0)
  {
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_232210D40;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v19 + 104))(v22 + v21, *MEMORY[0x24BE47410], v18);
  }
  else
  {
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_232210D30;
    v24 = v22 + v21;
    v25 = *(void (**)(unint64_t, _QWORD, uint64_t))(v19 + 104);
    v25(v24, *MEMORY[0x24BE47460], v18);
    v25(v24 + v20, *MEMORY[0x24BE47490], v18);
  }
  v23 = v15;
  sub_2321A492C(v22);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v26 = swift_bridgeObjectRetain();
  sub_2321A4950(v26);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t))(v31 + 104))(v32, *MEMORY[0x24BE47918], v33);
  sub_2321FE3B0();

  swift_bridgeObjectRelease();
  sub_23202739C();
  sub_232000590(&qword_2541AF2E0, (uint64_t (*)(uint64_t))sub_23202739C, MEMORY[0x24BDB9AF8]);
  v27 = sub_232200738();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v7, v35);
  sub_232016AFC((uint64_t)v40);
  swift_release();
  v40[0] = v27;
  sub_2320057B8(0, &qword_2541B3548, (uint64_t (*)(uint64_t))sub_232026D78, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  sub_2322007A4();
  swift_release();
  sub_232000590(&qword_2541AF1E0, (uint64_t (*)(uint64_t))sub_2320272F0, MEMORY[0x24BDB96C0]);
  v28 = v37;
  v29 = sub_232200774();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v28);
  return v29;
}

void sub_2320272F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2C48)
  {
    sub_23202739C();
    sub_2320057B8(255, &qword_2541B3548, (uint64_t (*)(uint64_t))sub_232026D78, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
    sub_232000590(&qword_2541AF2E0, (uint64_t (*)(uint64_t))sub_23202739C, MEMORY[0x24BDB9AF8]);
    v0 = sub_232200540();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2C48);
  }
}

void sub_23202739C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2FE0)
  {
    sub_2320057B8(255, (unint64_t *)&unk_2541B5560, (uint64_t (*)(uint64_t))sub_232026D78, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    sub_232002B9C();
    v0 = sub_232200624();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2FE0);
  }
}

uint64_t type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSummarySharableModelGenerator.Request(uint64_t a1)
{
  return sub_23201A14C(a1, qword_2541B0A68);
}

void sub_232027434()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B78C8)
  {
    v0 = sub_232201AC4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B78C8);
  }
}

_QWORD *sub_23202748C(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  id v25;
  uint64_t v26;
  uint64_t v27;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v27 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2321FE4A0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v12 = a3[7];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_2322001B0();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
    v17 = a3[8];
    v18 = a3[9];
    v19 = *(void **)((char *)a2 + v17);
    *(_QWORD *)((char *)a1 + v17) = v19;
    v20 = (char *)a1 + v18;
    v21 = (char *)a2 + v18;
    v22 = sub_2321FD8B8();
    v23 = *(_QWORD *)(v22 - 8);
    v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    v25 = v19;
    if (v24(v21, 1, v22))
    {
      sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  }
  return a1;
}

uint64_t sub_232027624(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v4 = sub_2321FE4A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  v5 = a1 + a2[7];
  v6 = sub_2322001B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);

  v7 = a1 + a2[9];
  v8 = sub_2321FD8B8();
  v9 = *(_QWORD *)(v8 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  return result;
}

uint64_t sub_2320276F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(const void *, uint64_t, uint64_t);
  id v24;
  uint64_t v25;

  v6 = sub_2321FE4A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_2322001B0();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  v15(v12, v13, v14);
  v16 = a3[8];
  v17 = a3[9];
  v18 = *(void **)(a2 + v16);
  *(_QWORD *)(a1 + v16) = v18;
  v19 = (void *)(a1 + v17);
  v20 = (const void *)(a2 + v17);
  v21 = sub_2321FD8B8();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48);
  v24 = v18;
  if (v23(v20, 1, v21))
  {
    sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v22 + 16))(v19, v20, v21);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_232027860(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(void *, uint64_t, uint64_t);
  int v24;
  int v25;
  uint64_t v26;

  v6 = sub_2321FE4A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v7 = a3[6];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[7];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_2322001B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = a3[8];
  v15 = *(void **)(a1 + v14);
  v16 = *(void **)(a2 + v14);
  *(_QWORD *)(a1 + v14) = v16;
  v17 = v16;

  v18 = a3[9];
  v19 = (void *)(a1 + v18);
  v20 = (void *)(a2 + v18);
  v21 = sub_2321FD8B8();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v22 + 48);
  v24 = v23(v19, 1, v21);
  v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 24))(v19, v20, v21);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v22 + 8))(v19, v21);
    goto LABEL_6;
  }
  if (v25)
  {
LABEL_6:
    sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v22 + 16))(v19, v20, v21);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
LABEL_7:
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_232027A2C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_2321FE4A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_2322001B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = sub_2321FD8B8();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_232027B78(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(void *, uint64_t, uint64_t);
  int v24;
  int v25;
  uint64_t v26;

  v6 = sub_2321FE4A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[7];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_2322001B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = a3[8];
  v17 = *(void **)(a1 + v16);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);

  v18 = a3[9];
  v19 = (void *)(a1 + v18);
  v20 = (void *)(a2 + v18);
  v21 = sub_2321FD8B8();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v22 + 48);
  v24 = v23(v19, 1, v21);
  v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 40))(v19, v20, v21);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v22 + 8))(v19, v21);
    goto LABEL_6;
  }
  if (v25)
  {
LABEL_6:
    sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v22 + 32))(v19, v20, v21);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
LABEL_7:
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_232027D2C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_232027D38(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_2321FE4A0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = sub_2322001B0();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[7];
    }
    else
    {
      sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v8 = v16;
      v14 = *(_QWORD *)(v16 - 8);
      v15 = a3[9];
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[6] + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_232027E20()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_232027E2C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = sub_2321FE4A0();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[6] + 8) = (a2 - 1);
      return result;
    }
    v13 = sub_2322001B0();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[7];
    }
    else
    {
      sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v10 = v16;
      v14 = *(_QWORD *)(v16 - 8);
      v15 = a4[9];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_232027F10()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_2321FE4A0();
  if (v0 <= 0x3F)
  {
    sub_2322001B0();
    if (v1 <= 0x3F)
    {
      sub_2320057B8(319, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_232027FE4(uint64_t a1, unint64_t a2)
{
  void **v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  void *v68;
  void *v69;
  void **v70;
  void *v71;
  char *v72;
  void *v73;
  char *v74;
  uint64_t v75;
  id v76;
  id v77;
  id v78;
  void *v79;
  char *v80;
  void *v81;
  id v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  char *v87;
  void *v88;
  char *v89;
  void *v90;
  id v91;
  id v92;
  id v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  void (*v100)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v101;
  void *v102;
  unint64_t v103;
  id v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  void (**v108)(char *, uint64_t, _QWORD);
  int v109;
  char *v110;
  NSObject *v111;
  os_log_type_t v112;
  uint64_t v113;
  id v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  void (**v124)(char *, uint64_t, _QWORD);
  char *v125;
  NSObject *v126;
  os_log_type_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  __int128 v148;
  uint64_t v149;
  __int128 v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  uint64_t v158;
  char *v159;
  unint64_t v160;
  __int128 v161;
  __int128 v162;
  void *v163;
  id v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  __int128 v169;
  uint64_t v170;
  __int128 v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  _QWORD *v179;
  char *v180;
  char *v181;
  char *v182;
  __int128 v183;
  char *v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  id v189;
  void (*v190)(char *, uint64_t);
  uint64_t v191;
  char *v193;
  char *v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  char *v202;
  char *v203;
  uint64_t v204;
  char *v205;
  char *v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  char *v214;
  char *v215;
  uint64_t v216;
  char *v217;
  char *v218;
  char *v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  void *v237;
  char *v238;
  void **v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  char *v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  void (**v254)(char *, uint64_t, _QWORD);
  uint64_t v255;
  char *v256;
  char *v257;
  uint64_t v258;
  uint64_t v259;
  __int128 v260;
  __int128 v261;
  char *v262;

  v257 = (char *)a2;
  v222 = a1;
  sub_23202CAC8(0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v201 = (char *)&v193 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v217 = (char *)&v193 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v220 = (char *)&v193 - v8;
  v221 = sub_2321FE6D4();
  v237 = *(void **)(v221 - 8);
  v9 = MEMORY[0x24BDAC7A8](v221);
  v218 = (char *)&v193 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v219 = (char *)&v193 - v11;
  v12 = MEMORY[0x24BDB9DE0];
  sub_2320057B8(0, &qword_2541B3068, (uint64_t (*)(uint64_t))sub_23202CAE4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v246 = v13;
  v249 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v248 = (char *)&v193 - v14;
  sub_23202CB00();
  v224 = v15;
  v223 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v242 = (char *)&v193 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23202CCA8();
  v227 = v17;
  v226 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v225 = (char *)&v193 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23202CEF8(0, &qword_255F9C370, v19, sub_23202CAE4, (void (*)(void))sub_23202CF78);
  v230 = v20;
  v229 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v228 = (char *)&v193 - v21;
  sub_23202CF94();
  v233 = v22;
  v232 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v231 = (char *)&v193 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23202D0DC();
  v236 = v24;
  v235 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v234 = (char *)&v193 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23202F4A8(0, &qword_255F9C3B0, sub_23202D1C4, (void (*)(void))sub_23202D250);
  v207 = v26;
  MEMORY[0x24BDAC7A8](v26);
  v206 = (char *)&v193 - v27;
  sub_23202D26C();
  v211 = v28;
  v209 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v208 = (char *)&v193 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23202D430();
  v204 = v30;
  v212 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v210 = (char *)&v193 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x24BEE4AE0] + 8;
  sub_232000608(0, (unint64_t *)&qword_2541B3098, MEMORY[0x24BEE4AE0] + 8, (uint64_t (*)(_QWORD, uint64_t))v12);
  v196 = v33;
  v198 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v194 = (char *)&v193 - v34;
  sub_23202ED00(0, &qword_255F9C400, v32, MEMORY[0x24BDBA1B0]);
  v197 = v35;
  v199 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v195 = (char *)&v193 - v36;
  v37 = (char *)sub_23220039C();
  v250 = *((_QWORD *)v37 - 1);
  v251 = v37;
  v38 = MEMORY[0x24BDAC7A8](v37);
  v244 = (char *)&v193 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = MEMORY[0x24BDAC7A8](v38);
  v213 = (char *)&v193 - v41;
  v42 = MEMORY[0x24BDAC7A8](v40);
  v238 = (char *)&v193 - v43;
  MEMORY[0x24BDAC7A8](v42);
  v202 = (char *)&v193 - v44;
  sub_23202CAE4(0);
  v253 = v45;
  v46 = MEMORY[0x24BDAC7A8](v45);
  v247 = (char *)&v193 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v46);
  v216 = (uint64_t)&v193 - v48;
  v49 = sub_2321FE308();
  v254 = *(void (***)(char *, uint64_t, _QWORD))(v49 - 8);
  v255 = v49;
  MEMORY[0x24BDAC7A8](v49);
  v203 = (char *)&v193 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23202FAA4(0, &qword_255F9C3C0, sub_23202D324, (void (*)(void))sub_23202D354);
  v241 = v51;
  v240 = *(_QWORD *)(v51 - 8);
  v52 = MEMORY[0x24BDAC7A8](v51);
  v205 = (char *)&v193 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v52);
  v243 = (char *)&v193 - v54;
  sub_23202D234(0);
  v56 = MEMORY[0x24BDAC7A8](v55);
  v215 = (char *)&v193 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v56);
  v214 = (char *)&v193 - v58;
  v252 = sub_2321FDC6C();
  v59 = *(_QWORD *)(v252 - 8);
  v60 = *(char **)(v59 + 64);
  v61 = MEMORY[0x24BDAC7A8](v252);
  v62 = MEMORY[0x24BDAC7A8](v61);
  v64 = (char *)&v193 - v63;
  MEMORY[0x24BDAC7A8](v62);
  v66 = (char *)&v193 - v65;
  v67 = type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError();
  MEMORY[0x24BDAC7A8](v67);
  v239 = v2;
  v70 = v2;
  v68 = *v2;
  v69 = v70[1];
  v71 = (void *)sub_2322011C4();
  v245 = sub_2321D5890(v69);
  v256 = v72;

  v73 = (void *)sub_23202DF34((unint64_t)v257, (uint64_t)v69);
  v74 = v238;
  v237 = v69;
  v220 = v60;
  v193 = (char *)&v193 - ((unint64_t)(v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  v257 = v66;
  v244 = v64;
  v200 = v59;
  v75 = (uint64_t)v239;
  if (v73)
  {
    v76 = v73;
    objc_msgSend(v76, sel_endDate);
    v77 = (id)HKDecodeDateForValue();
    sub_2321FDC30();

    if ((objc_msgSend(v76, sel_hasSampleUUID) & 1) != 0
      && (v78 = objc_msgSend(v76, sel_sampleUUID)) != 0)
    {
      v79 = v78;
      v238 = (char *)sub_232200EC4();
      v248 = v80;

    }
    else
    {
      v238 = 0;
      v248 = 0;
    }
    v81 = *(void **)(v75 + 16);
    sub_2321FD7F8();
    swift_allocObject();
    v82 = v68;
    v83 = v81;
    v84 = sub_2321FD7EC();
    sub_2321FD81C();
    swift_allocObject();
    v85 = sub_2321FD810();
    v86 = objc_allocWithZone(MEMORY[0x24BDD3B20]);
    v87 = (char *)v82;
    v88 = (void *)sub_232200E94();
    v89 = (char *)objc_msgSend(v86, sel_initWithProtectionCategory_domain_healthStore_, 0, v88, v83);

    *(_QWORD *)&v260 = v87;
    BYTE8(v260) = 0;
    v246 = v85;
    v247 = (char *)v84;
    *(_QWORD *)&v261 = v84;
    *((_QWORD *)&v261 + 1) = v85;
    v218 = v89;
    v262 = v89;
    v90 = *(void **)(v75 + 80);
    sub_2321FE128();
    swift_allocObject();
    v91 = v83;
    v92 = v90;
    v249 = sub_2321FE104();
    objc_msgSend(v76, sel_endDate);
    v93 = (id)HKDecodeDateForValue();
    v94 = v244;
    sub_2321FDC30();

    v95 = *(_QWORD *)(v75 + 24);
    v96 = v200;
    v97 = (uint64_t)v214;
    v98 = v94;
    v99 = v252;
    v239 = *(void ***)(v200 + 16);
    ((void (*)(char *, char *, uint64_t))v239)(v214, v98, v252);
    v100 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v96 + 56);
    v100(v97, 0, 1, v99);
    v101 = (uint64_t)v215;
    sub_2321FDBAC();
    v100(v101, 0, 1, v99);
    v219 = v87;
    v102 = v87;
    v103 = (unint64_t)v256;
    v221 = sub_23202A130(v102, v95, v97, v101, v245, (uint64_t)v256, (uint64_t)&unk_2500FF018, (uint64_t)sub_23202FC0C, (uint64_t)&unk_2500FF040, (uint64_t)sub_23202FC54);
    sub_232002CEC(v101, (uint64_t (*)(_QWORD))sub_23202D234);
    sub_232002CEC(v97, (uint64_t (*)(_QWORD))sub_23202D234);
    v259 = sub_2320FDC9C(v237);
    *(_QWORD *)(swift_allocObject() + 16) = v76;
    sub_23202D324(0);
    sub_23202D354();
    v104 = v76;
    v105 = v243;
    sub_2322007F8();
    swift_release();
    swift_release();
    v106 = v216;
    sub_23200054C(v222, v216, (uint64_t (*)(_QWORD))sub_23202CAE4);
    v108 = v254;
    v107 = v255;
    v109 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v254[6])(v106, 1, v255);
    v237 = v104;
    if (v109 == 1)
    {
      sub_232002CEC(v106, (uint64_t (*)(_QWORD))sub_23202CAE4);
    }
    else
    {
      v119 = v203;
      v108[4](v203, v106, v107);
      v120 = sub_2321FE2D8();
      v121 = sub_2321FE4F4();
      v123 = sub_23209D140(v121, v122, v120);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v123 & 1) != 0)
      {
        v124 = v108;
        v125 = v202;
        sub_232200318();
        swift_bridgeObjectRetain_n();
        v126 = sub_232200390();
        v127 = sub_2322012FC();
        if (os_log_type_enabled(v126, v127))
        {
          v128 = swift_slowAlloc();
          v129 = swift_slowAlloc();
          v259 = v129;
          *(_DWORD *)v128 = 136315394;
          v258 = sub_232013174(0xD00000000000002DLL, 0x8000000232211160, &v259);
          sub_232201710();
          *(_WORD *)(v128 + 12) = 2080;
          swift_bridgeObjectRetain();
          v258 = sub_232013174(v245, v103, &v259);
          sub_232201710();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_231FFB000, v126, v127, "%s The previous feed item is a mismatch file for identifier %s", (uint8_t *)v128, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x2348FF468](v129, -1, -1);
          MEMORY[0x2348FF468](v128, -1, -1);

          (*(void (**)(char *, char *))(v250 + 8))(v202, v251);
        }
        else
        {

          swift_bridgeObjectRelease_n();
          (*(void (**)(char *, char *))(v250 + 8))(v125, v251);
        }
        v136 = MEMORY[0x24BEE4AE0];
        v142 = v197;
        v143 = v196;
        v144 = v195;
        v145 = v194;
        v146 = MEMORY[0x24BEE4AE0] + 8;
        sub_2322006B4();
        sub_232002B9C();
        sub_232200684();
        (*(void (**)(char *, uint64_t))(v198 + 8))(v145, v143);
        sub_23202ECB8(&qword_255F9C420, &qword_255F9C400, v146);
        v141 = sub_232200774();
        (*(void (**)(char *, uint64_t))(v199 + 8))(v144, v142);
        ((void (*)(char *, uint64_t))v124[1])(v203, v107);
        goto LABEL_19;
      }
      ((void (*)(char *, uint64_t))v108[1])(v119, v107);
    }
    v134 = v241;
    v135 = v240;
    v136 = MEMORY[0x24BEE4AE0];
    v137 = v204;
    v259 = v221;
    sub_232002B9C();
    sub_23202D1C4(0);
    sub_23202D250();
    sub_232200864();
    (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v205, v105, v134);
    sub_23202D370();
    sub_23202D3D0();
    v138 = v208;
    sub_2322004D4();
    sub_232000590(&qword_255F9C3F8, (uint64_t (*)(uint64_t))sub_23202D26C, MEMORY[0x24BDB9450]);
    v139 = v210;
    v140 = v211;
    sub_2322007A4();
    (*(void (**)(char *, uint64_t))(v209 + 8))(v138, v140);
    sub_232000590(&qword_255F9C410, (uint64_t (*)(uint64_t))sub_23202D430, MEMORY[0x24BDB96C0]);
    v141 = sub_232200774();
    (*(void (**)(char *, uint64_t))(v212 + 8))(v139, v137);
LABEL_19:
    v259 = v141;
    v147 = swift_allocObject();
    v255 = v141;
    v148 = *(_OWORD *)(v75 + 48);
    *(_OWORD *)(v147 + 48) = *(_OWORD *)(v75 + 32);
    *(_OWORD *)(v147 + 64) = v148;
    *(_OWORD *)(v147 + 80) = *(_OWORD *)(v75 + 64);
    v149 = *(_QWORD *)(v75 + 80);
    v150 = *(_OWORD *)(v75 + 16);
    *(_OWORD *)(v147 + 16) = *(_OWORD *)v75;
    *(_OWORD *)(v147 + 32) = v150;
    v151 = v249;
    *(_QWORD *)(v147 + 96) = v149;
    *(_QWORD *)(v147 + 104) = v151;
    swift_retain();
    sub_23202E788(v75);
    swift_retain();
    sub_23220060C();
    sub_23202ED00(0, (unint64_t *)&qword_2541B3040, v136 + 8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_2320057B8(0, (unint64_t *)&qword_2541B28E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE48068], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    sub_23202CBC0();
    sub_23202CC44();
    sub_232000590((unint64_t *)&qword_2541B2F08, (uint64_t (*)(uint64_t))sub_23202CBC0, MEMORY[0x24BDB9AF8]);
    sub_232200828();
    swift_release();
    swift_release();
    v152 = v193;
    v153 = v252;
    ((void (*)(char *, char *, uint64_t))v239)(v193, v257, v252);
    v154 = *(unsigned __int8 *)(v200 + 80);
    v155 = v200;
    v156 = (v154 + 32) & ~v154;
    v222 = v154 | 7;
    v251 = v220 + 7;
    v157 = (unint64_t)&v220[v156 + 7] & 0xFFFFFFFFFFFFFFF8;
    v158 = swift_allocObject();
    v159 = v248;
    *(_QWORD *)(v158 + 16) = v238;
    *(_QWORD *)(v158 + 24) = v159;
    v248 = v159;
    v250 = *(_QWORD *)(v155 + 32);
    ((void (*)(uint64_t, char *, uint64_t))v250)(v158 + v156, v152, v153);
    v160 = v158 + v157;
    v161 = *(_OWORD *)(v75 + 48);
    *(_OWORD *)(v160 + 32) = *(_OWORD *)(v75 + 32);
    *(_OWORD *)(v160 + 48) = v161;
    *(_OWORD *)(v160 + 64) = *(_OWORD *)(v75 + 64);
    *(_QWORD *)(v160 + 80) = *(_QWORD *)(v75 + 80);
    v162 = *(_OWORD *)(v75 + 16);
    *(_OWORD *)v160 = *(_OWORD *)v75;
    *(_OWORD *)(v160 + 16) = v162;
    v163 = v237;
    *(_QWORD *)(v158 + ((v157 + 95) & 0xFFFFFFFFFFFFFFF8)) = v237;
    v164 = v163;
    sub_23202E788(v75);
    swift_bridgeObjectRetain();
    sub_23220060C();
    sub_23202CE10();
    sub_23202CEF8(0, &qword_255F9C348, sub_23202CD74, (void (*)(uint64_t))sub_23202CE10, (void (*)(void))sub_23202CE74);
    sub_232000590(&qword_2541B7360, (uint64_t (*)(uint64_t))sub_23202CB00, MEMORY[0x24BDB98F0]);
    sub_23202CE90();
    v165 = v242;
    v166 = v225;
    v167 = v224;
    sub_232200828();
    swift_release();
    (*(void (**)(char *, uint64_t))(v223 + 8))(v165, v167);
    v168 = swift_allocObject();
    v169 = *(_OWORD *)(v75 + 48);
    *(_OWORD *)(v168 + 48) = *(_OWORD *)(v75 + 32);
    *(_OWORD *)(v168 + 64) = v169;
    *(_OWORD *)(v168 + 80) = *(_OWORD *)(v75 + 64);
    v170 = *(_QWORD *)(v75 + 80);
    v171 = *(_OWORD *)(v75 + 16);
    *(_OWORD *)(v168 + 16) = *(_OWORD *)v75;
    *(_OWORD *)(v168 + 32) = v171;
    *(_QWORD *)(v168 + 96) = v170;
    *(_QWORD *)(v168 + 104) = v164;
    *(_QWORD *)(v168 + 112) = v249;
    v172 = swift_allocObject();
    *(_QWORD *)(v172 + 16) = sub_23202EB20;
    *(_QWORD *)(v172 + 24) = v168;
    v254 = (void (**)(char *, uint64_t, _QWORD))v164;
    sub_23202E788(v75);
    sub_23202CF78();
    swift_retain();
    v173 = v228;
    v174 = v227;
    sub_2322007A4();
    swift_release();
    (*(void (**)(char *, uint64_t))(v226 + 8))(v166, v174);
    v175 = v193;
    v176 = v252;
    ((void (*)(char *, char *, uint64_t))v239)(v193, v257, v252);
    v177 = (v154 + 48) & ~v154;
    v178 = (unint64_t)&v251[v177] & 0xFFFFFFFFFFFFFFF8;
    v179 = (_QWORD *)swift_allocObject();
    v180 = v248;
    v179[2] = v238;
    v179[3] = v180;
    v181 = v256;
    v179[4] = v245;
    v179[5] = v181;
    ((void (*)(char *, char *, uint64_t))v250)((char *)v179 + v177, v175, v176);
    v182 = (char *)v179 + v178;
    v183 = v261;
    *(_OWORD *)v182 = v260;
    *((_OWORD *)v182 + 1) = v183;
    *((_QWORD *)v182 + 4) = v262;
    v256 = v219;
    swift_retain();
    swift_retain();
    v251 = v218;
    sub_23220060C();
    sub_23202CD88(0, &qword_255F9C388, sub_23202CAE4);
    sub_23202D074();
    sub_23202FBCC(&qword_255F9C390, (uint64_t)&qword_255F9C388, (uint64_t)sub_23202CAE4, (uint64_t (*)(uint64_t))sub_23202CD88);
    v184 = v231;
    v185 = v230;
    sub_232200828();
    swift_release();
    (*(void (**)(char *, uint64_t))(v229 + 8))(v173, v185);
    sub_23202D1D8(0, (unint64_t *)&qword_2541B2EC8, sub_23202CAE4);
    sub_232000590(&qword_255F9C3A8, (uint64_t (*)(uint64_t))sub_23202CF94, MEMORY[0x24BDB98F0]);
    sub_23202FBCC((unint64_t *)&qword_2541AF280, (uint64_t)&qword_2541B2EC8, (uint64_t)sub_23202CAE4, (uint64_t (*)(uint64_t))sub_23202D1D8);
    v186 = v234;
    v187 = v233;
    sub_2322007D4();
    (*(void (**)(char *, uint64_t))(v232 + 8))(v184, v187);
    sub_232000590(&qword_255F9C418, (uint64_t (*)(uint64_t))sub_23202D0DC, MEMORY[0x24BDB9740]);
    v188 = v236;
    v133 = sub_232200774();
    swift_release();
    swift_release();

    swift_release();
    swift_release();

    swift_release();
    v189 = v254;

    (*(void (**)(char *, uint64_t))(v235 + 8))(v186, v188);
    (*(void (**)(char *, uint64_t))(v240 + 8))(v243, v241);
    v190 = *(void (**)(char *, uint64_t))(v200 + 8);
    v191 = v252;
    v190(v244, v252);
    v190(v257, v191);
    return v133;
  }
  swift_bridgeObjectRelease();
  v110 = v74;
  sub_232200318();
  sub_23202E788(v75);
  sub_23202E788(v75);
  v111 = sub_232200390();
  v112 = sub_2322012FC();
  if (os_log_type_enabled(v111, v112))
  {
    v113 = swift_slowAlloc();
    v257 = (char *)swift_slowAlloc();
    *(_QWORD *)&v260 = v257;
    *(_DWORD *)v113 = 136446466;
    v259 = sub_232013174(0xD00000000000002DLL, 0x8000000232211160, (uint64_t *)&v260);
    sub_232201710();
    *(_WORD *)(v113 + 12) = 2080;
    v114 = objc_msgSend(v237, sel_identifier);
    v115 = sub_232200EC4();
    v117 = v116;

    v259 = sub_232013174(v115, v117, (uint64_t *)&v260);
    sub_232201710();
    swift_bridgeObjectRelease();
    sub_23202E80C(v75);
    sub_23202E80C(v75);
    _os_log_impl(&dword_231FFB000, v111, v112, "%{public}s No samples found for %s", (uint8_t *)v113, 0x16u);
    v118 = (unint64_t)v257;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v118, -1, -1);
    MEMORY[0x2348FF468](v113, -1, -1);
  }
  else
  {
    sub_23202E80C(v75);
    sub_23202E80C(v75);
  }

  (*(void (**)(char *, char *))(v250 + 8))(v110, v251);
  v131 = v248;
  v130 = v249;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v254[7])(v247, 1, 1, v255);
  sub_2322006B4();
  sub_23202E6B0();
  v132 = v246;
  v133 = sub_232200774();
  (*(void (**)(char *, uint64_t))(v130 + 8))(v131, v132);
  return v133;
}

uint64_t sub_23202A090(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_23202A0B0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_23202A130(a1, a2, a3, a4, a5, a6, (uint64_t)&unk_2500FF018, (uint64_t)sub_23202FC0C, (uint64_t)&unk_2500FF040, (uint64_t)sub_23202FC54);
}

uint64_t sub_23202A0F0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_23202A130(a1, a2, a3, a4, a5, a6, (uint64_t)&unk_2500FF108, (uint64_t)sub_2320314BC, (uint64_t)&unk_2500FF130, (uint64_t)sub_2320315A8);
}

uint64_t sub_23202A130(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v46 = a8;
  v42 = a2;
  v43 = a7;
  v51 = a5;
  v52 = a6;
  v41 = a4;
  v53 = a10;
  v49 = a3;
  v50 = a9;
  sub_23202FAA4(0, &qword_2541B7348, sub_23202D1C4, (void (*)(void))sub_23202D250);
  v55 = *(_QWORD *)(v11 - 8);
  v56 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v54 = (char *)&v40 - v12;
  sub_23202FB08();
  v44 = *(_QWORD *)(v13 - 8);
  v45 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23202D234(0);
  v47 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v48 = v17;
  v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, &qword_2541B73B8, v19, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v21 = v20;
  v22 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v40 - v23;
  v25 = objc_msgSend(a1, sel_profileIdentifier);
  v26 = objc_msgSend(v25, sel_type);

  if (v26 == (id)1)
  {
    sub_23200054C(v41, (uint64_t)v18, (uint64_t (*)(_QWORD))sub_23202D234);
    sub_2322006B4();
    sub_23202FCD0();
    v27 = sub_232200774();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  }
  else
  {
    v28 = objc_msgSend(a1, sel_profileIdentifier);
    v57 = sub_2322015B4();
    *(_QWORD *)(swift_allocObject() + 16) = a1;
    sub_23202CD88(0, &qword_2541B7390, sub_23202D234);
    sub_23202D1C4(0);
    sub_23202FBCC(&qword_2541AF278, (uint64_t)&qword_2541B7390, (uint64_t)sub_23202D234, (uint64_t (*)(uint64_t))sub_23202CD88);
    sub_23202D250();
    v29 = a1;
    sub_2322007D4();
    swift_release();
    swift_release();
    sub_232000590(&qword_255F9C4B8, (uint64_t (*)(uint64_t))sub_23202FB08, MEMORY[0x24BDB9740]);
    v30 = v45;
    v27 = sub_232200774();

    (*(void (**)(char *, uint64_t))(v44 + 8))(v15, v30);
  }
  v57 = v27;
  sub_23200054C(v49, (uint64_t)v18, (uint64_t (*)(_QWORD))sub_23202D234);
  v31 = (*(unsigned __int8 *)(v47 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  v32 = (_QWORD *)swift_allocObject();
  v33 = v51;
  v34 = v52;
  v32[2] = a1;
  v32[3] = v33;
  v32[4] = v34;
  sub_232025468((uint64_t)v18, (uint64_t)v32 + v31, (uint64_t (*)(_QWORD))sub_23202D234);
  sub_23202D1C4(0);
  sub_23202D250();
  v35 = a1;
  swift_retain();
  swift_bridgeObjectRetain();
  v36 = v54;
  sub_2322007F8();
  swift_release();
  swift_release();
  sub_23202FC70();
  v37 = v56;
  v38 = sub_232200774();
  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v36, v37);
  return v38;
}

uint64_t sub_23202A530(uint64_t a1, void *a2)
{
  uint64_t (*v4)(_QWORD);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  uint64_t v11;

  sub_23202D338(0);
  v4 = (uint64_t (*)(_QWORD))sub_23202D338;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23200054C(a1, (uint64_t)v7, (uint64_t (*)(_QWORD))sub_23202D338);
  v8 = type metadata accessor for SummaryAlertContentState();
  v9 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8) != 1)
  {
    v9 = sub_2321F40C4(a2);
    v4 = (uint64_t (*)(_QWORD))type metadata accessor for SummaryAlertContentState;
  }
  sub_232002CEC((uint64_t)v7, v4);
  return v9 & 1;
}

uint64_t sub_23202A5F8()
{
  void **v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;

  v1 = *v0;
  v2 = (void *)sub_2322011C4();
  sub_2321D5890(v0[1]);
  sub_232200F48();

  v3 = objc_allocWithZone(MEMORY[0x24BDD3C98]);
  v4 = v1;
  v5 = (void *)sub_232200E94();
  v6 = objc_msgSend(v3, sel_initWithCategory_domainName_healthStore_, 1, v5, v4);

  sub_2321123E8();
  sub_2321FE128();
  sub_232000590(&qword_2541B2330, (uint64_t (*)(uint64_t))MEMORY[0x24BE47380], MEMORY[0x24BE47378]);
  v7 = sub_2321FE8FC();
  swift_bridgeObjectRelease();

  swift_release();
  return v7;
}

uint64_t sub_23202A75C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, void *a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  char v19;
  void *v20;
  void *v21;
  id v22;
  unint64_t v23;
  unint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v39 = a6;
  v40 = a1;
  v38 = sub_23220039C();
  v10 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2321FDC6C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a3, v13);
  if (!a2)
  {
    sub_2321FDAEC();
    sub_232201098();
  }
  v17 = *(void (**)(char *, uint64_t))(v14 + 8);
  swift_bridgeObjectRetain();
  v17(v16, v13);
  v18 = v40;
  v19 = sub_2322016C8();
  swift_bridgeObjectRelease();
  if ((v19 & 1) != 0)
  {
    v20 = (void *)sub_2322011C4();
    v21 = *(void **)(a4 + 8);
    v37 = a5;
    v22 = sub_232114754((uint64_t)v20, v21, a5);
    v24 = v23;

    sub_23220036C();
    swift_bridgeObjectRetain_n();
    v25 = sub_232200390();
    v26 = sub_2322012FC();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = swift_slowAlloc();
      v36 = v22;
      v28 = v27;
      v29 = swift_slowAlloc();
      v42 = v29;
      *(_DWORD *)v28 = 136446466;
      v41 = sub_232013174(0xD00000000000002DLL, 0x8000000232211160, &v42);
      sub_232201710();
      *(_WORD *)(v28 + 12) = 2080;
      swift_bridgeObjectRetain();
      v41 = sub_232013174((uint64_t)v36, v24, &v42);
      sub_232201710();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_231FFB000, v25, v26, "%{public}s Removing any notifications that may have been delivered: %s", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      v30 = v29;
      v18 = v40;
      MEMORY[0x2348FF468](v30, -1, -1);
      v31 = v28;
      v22 = v36;
      MEMORY[0x2348FF468](v31, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v38);
    swift_getObjectType();
    sub_232000608(0, (unint64_t *)&qword_2541B78C0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_232210D40;
    *(_QWORD *)(v32 + 32) = v22;
    *(_QWORD *)(v32 + 40) = v24;
    sub_2321FE74C();
    swift_bridgeObjectRelease();
    a5 = v37;
  }
  v33 = sub_232114A1C(v18, a5);
  v42 = *(_QWORD *)(a4 + 72);
  *(_BYTE *)(swift_allocObject() + 16) = v33 & 1;
  sub_23202CD74(0);
  sub_23202CE10();
  sub_23202CE74();
  swift_retain();
  sub_2322007A4();
  swift_release();
  return swift_release();
}

uint64_t sub_23202AB3C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  void *v26;
  char *v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  unint64_t v40;
  void *v41;
  id v42;
  uint64_t v44;
  uint64_t *v45;
  int v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v45 = a5;
  v46 = a2;
  v51 = a6;
  v9 = sub_23220039C();
  v48 = *(_QWORD *)(v9 - 8);
  v49 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v50 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23202CDF4(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2321FE584();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v44 - v19;
  sub_23202CAE4(0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = a4;
  sub_23211E5A8(a1, a4, (uint64_t)v23);
  v24 = (char *)sub_2322011C4();
  if (!v24)
    return sub_232025468((uint64_t)v23, v51, (uint64_t (*)(_QWORD))sub_23202CAE4);
  v25 = v24;
  if (objc_msgSend(v24, sel_type) != (id)2)
  {
LABEL_9:

    return sub_232025468((uint64_t)v23, v51, (uint64_t (*)(_QWORD))sub_23202CAE4);
  }
  sub_23200054C(a1, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_23202CDF4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
  {
    v32 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v32(v20, v13, v14);
    v33 = sub_2321FE308();
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v23, 1, v33))
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v20, v14);
      v49 = *v45;
      v50 = v25;
      v34 = (*(unsigned __int8 *)(v15 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      v35 = (v16 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
      v36 = swift_allocObject();
      v37 = *(_OWORD *)(a3 + 48);
      *(_OWORD *)(v36 + 56) = *(_OWORD *)(a3 + 32);
      *(_OWORD *)(v36 + 72) = v37;
      *(_OWORD *)(v36 + 88) = *(_OWORD *)(a3 + 64);
      v38 = *(_OWORD *)(a3 + 16);
      *(_OWORD *)(v36 + 24) = *(_OWORD *)a3;
      *(_BYTE *)(v36 + 16) = v46 & 1;
      v39 = *(_QWORD *)(a3 + 80);
      *(_OWORD *)(v36 + 40) = v38;
      v40 = v36 + v34;
      v41 = v47;
      *(_QWORD *)(v36 + 104) = v39;
      *(_QWORD *)(v36 + 112) = v41;
      v32((char *)v40, v18, v14);
      *(_QWORD *)(v36 + v35) = v49;
      sub_23202E788(a3);
      v42 = v41;
      swift_retain();
      sub_2321FE20C();

      (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
      return sub_232025468((uint64_t)v23, v51, (uint64_t (*)(_QWORD))sub_23202CAE4);
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
    goto LABEL_9;
  }
  v26 = v25;
  sub_232002CEC((uint64_t)v13, (uint64_t (*)(_QWORD))sub_23202CDF4);
  v27 = v50;
  sub_232200318();
  v28 = sub_232200390();
  v29 = sub_2322012E4();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc();
    v31 = swift_slowAlloc();
    v53 = v31;
    *(_DWORD *)v30 = 136315138;
    v52 = sub_232013174(0xD00000000000002DLL, 0x8000000232211160, &v53);
    sub_232201710();
    _os_log_impl(&dword_231FFB000, v28, v29, "%s No profileDisplayName for a summarySharing alert notification.", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v31, -1, -1);
    MEMORY[0x2348FF468](v30, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v48 + 8))(v27, v49);
  return sub_232025468((uint64_t)v23, v51, (uint64_t (*)(_QWORD))sub_23202CAE4);
}

uint64_t sub_23202AF6C(uint64_t a1, char a2, uint64_t a3, void *a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v30 = sub_23220039C();
  v11 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2321FDC6C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v18 = *a6;
    swift_retain();
    sub_2321FDBAC();
    sub_23202D4F0(a4, a5, v18, v17, a3);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    swift_release();
    sub_232003E9C(0, &qword_255F9C460);
    sub_232002B9C();
    sub_232200618();
    return swift_release();
  }
  else
  {
    sub_23220036C();
    sub_23202E788(a3);
    sub_23202E788(a3);
    v20 = sub_232200390();
    v21 = sub_2322012FC();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc();
      v29 = swift_slowAlloc();
      v32 = v29;
      *(_DWORD *)v22 = 136315394;
      v31 = sub_232013174(0xD00000000000002DLL, 0x8000000232211160, &v32);
      sub_232201710();
      *(_WORD *)(v22 + 12) = 2080;
      v28[1] = v22 + 14;
      v23 = objc_msgSend(*(id *)(a3 + 8), sel_identifier);
      v24 = sub_232200EC4();
      v26 = v25;

      v31 = sub_232013174(v24, v26, &v32);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_23202E80C(a3);
      sub_23202E80C(a3);
      _os_log_impl(&dword_231FFB000, v20, v21, "%s Not generating notification for %s", (uint8_t *)v22, 0x16u);
      v27 = v29;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v27, -1, -1);
      MEMORY[0x2348FF468](v22, -1, -1);
    }
    else
    {
      sub_23202E80C(a3);
      sub_23202E80C(a3);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v30);
  }
}

uint64_t sub_23202B27C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t result;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  void (**v70)(char *, _QWORD);
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;

  v61 = a7;
  v68 = a6;
  v60 = a5;
  v64 = a4;
  v67 = a3;
  v59 = a2;
  v84 = a1;
  v87 = a8;
  sub_23202CAE4(0);
  v86 = v8;
  v82 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v83 = v9;
  v85 = (uint64_t)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, &qword_255F9C428, (uint64_t (*)(uint64_t))type metadata accessor for SummaryAlertContentState, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v70 = *(void (***)(char *, _QWORD))(v10 - 8);
  v71 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v69 = (char *)&v59 - v11;
  sub_23202ED00(0, &qword_255F9C430, MEMORY[0x24BDCDDE8], MEMORY[0x24BDBA1B0]);
  v76 = v12;
  v74 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v73 = (char *)&v59 - v13;
  sub_23202ED68();
  v77 = *(_QWORD *)(v14 - 8);
  v78 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v75 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23202EE44();
  v80 = *(_QWORD *)(v16 - 8);
  v81 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v79 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_2321FDC6C();
  v62 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (int *)type metadata accessor for SummaryAlertContentState();
  v65 = *((_QWORD *)v20 - 1);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v59 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = v22;
  MEMORY[0x24BDAC7A8](v21);
  v88 = (uint64_t)&v59 - v24;
  sub_23202EED8(0);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v59 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v59 - v29;
  v31 = sub_2321FDCC0();
  v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56);
  v32(v30, 1, 1, v31);
  if (v67)
  {
    sub_2321FDC78();
    sub_232002CEC((uint64_t)v30, (uint64_t (*)(_QWORD))sub_23202EED8);
    sub_232025468((uint64_t)v28, (uint64_t)v30, (uint64_t (*)(_QWORD))sub_23202EED8);
  }
  v33 = v62;
  v34 = v63;
  (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v19, v68, v63);
  v72 = v30;
  sub_23200054C((uint64_t)v30, (uint64_t)v28, (uint64_t (*)(_QWORD))sub_23202EED8);
  v35 = (uint64_t)&v23[v20[6]];
  v32((char *)v35, 1, 1, v31);
  v36 = v60;
  *(_QWORD *)v23 = v64;
  *((_QWORD *)v23 + 1) = v36;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(&v23[v20[5]], v19, v34);
  swift_bridgeObjectRetain();
  sub_23202EEF4((uint64_t)v28, v35);
  v23[v20[7]] = 1;
  v23[v20[8]] = 0;
  v37 = v88;
  sub_232025468((uint64_t)v23, v88, (uint64_t (*)(_QWORD))type metadata accessor for SummaryAlertContentState);
  v38 = *(void **)(v61 + 32);
  sub_23200054C(v37, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for SummaryAlertContentState);
  swift_retain();
  v39 = v38;
  v40 = v69;
  sub_2322006B4();
  v41 = MEMORY[0x24BDCDDE8];
  v42 = v73;
  v43 = v71;
  sub_23220069C();
  v70[1](v40, v43);
  sub_23200054C(v37, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for SummaryAlertContentState);
  v44 = (*(unsigned __int8 *)(v65 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
  v45 = swift_allocObject();
  *(_QWORD *)(v45 + 16) = v39;
  sub_232025468((uint64_t)v23, v45 + v44, (uint64_t (*)(_QWORD))type metadata accessor for SummaryAlertContentState);
  v70 = (void (**)(char *, _QWORD))v39;
  sub_23220060C();
  sub_23202ED00(0, (unint64_t *)&qword_2541B3040, MEMORY[0x24BEE4AE0] + 8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  v71 = v46;
  sub_23202ECB8((unint64_t *)&qword_255F9C440, &qword_255F9C430, v41);
  sub_23202CC44();
  v48 = v75;
  v47 = v76;
  sub_232200828();
  swift_release();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v42, v47);
  sub_232000590(&qword_255F9C450, (uint64_t (*)(uint64_t))sub_23202ED68, MEMORY[0x24BDB98F0]);
  v49 = v78;
  v50 = sub_232200774();

  swift_release();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v48, v49);
  v89 = v50;
  v51 = v85;
  sub_23200054C(v84, v85, (uint64_t (*)(_QWORD))sub_23202CAE4);
  v52 = (*(unsigned __int8 *)(v82 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
  v53 = swift_allocObject();
  sub_232025468(v51, v53 + v52, (uint64_t (*)(_QWORD))sub_23202CAE4);
  v54 = swift_allocObject();
  *(_QWORD *)(v54 + 16) = sub_23202F108;
  *(_QWORD *)(v54 + 24) = v53;
  v55 = v79;
  sub_2322007A4();
  swift_release();
  swift_release();
  sub_232000590(&qword_255F9C458, (uint64_t (*)(uint64_t))sub_23202EE44, MEMORY[0x24BDB96C0]);
  v56 = v81;
  v57 = sub_232200774();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v55, v56);
  sub_232002CEC(v88, (uint64_t (*)(_QWORD))type metadata accessor for SummaryAlertContentState);
  result = sub_232002CEC((uint64_t)v72, (uint64_t (*)(_QWORD))sub_23202EED8);
  *v87 = v57;
  return result;
}

uint64_t sub_23202B998@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  sub_23202CAE4(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, &qword_2541B3068, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v32 - v11;
  v13 = sub_23220039C();
  v36 = *(_QWORD *)(v13 - 8);
  v37 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a1;
  sub_232200318();
  v17 = v16;
  v18 = v16;
  v19 = sub_232200390();
  v20 = sub_2322012E4();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    v33 = v10;
    v22 = v21;
    v23 = swift_slowAlloc();
    v35 = a2;
    v32 = v23;
    v39 = v23;
    *(_DWORD *)v22 = 136446466;
    v34 = v6;
    v38 = sub_232013174(0xD00000000000002DLL, 0x8000000232211160, &v39);
    sub_232201710();
    *(_WORD *)(v22 + 12) = 2082;
    v38 = (uint64_t)v16;
    v24 = v16;
    sub_232002B9C();
    v25 = sub_232200F0C();
    v38 = sub_232013174(v25, v26, &v39);
    v6 = v34;
    sub_232201710();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_231FFB000, v19, v20, "%{public}s Shared Alert Feed Item Error: %{public}s", (uint8_t *)v22, 0x16u);
    v27 = v32;
    swift_arrayDestroy();
    a2 = v35;
    MEMORY[0x2348FF468](v27, -1, -1);
    v28 = v22;
    v10 = v33;
    MEMORY[0x2348FF468](v28, -1, -1);
  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v37);
  v29 = sub_2321FE308();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v6, 1, 1, v29);
  sub_2322006B4();
  sub_23202E6B0();
  v30 = sub_232200774();
  result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  *a2 = v30;
  return result;
}

uint64_t sub_23202BCC4(void *a1, void *a2, uint64_t a3, unint64_t a4)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  os_log_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  os_log_t v43;
  int v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v48 = a3;
  v49 = a4;
  sub_23202D234(0);
  v7 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, &qword_2541B73B8, v10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v42 - v14;
  v16 = sub_23220039C();
  v50 = *(_QWORD *)(v16 - 8);
  v51 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232200318();
  v19 = a2;
  v20 = a1;
  v21 = v19;
  v22 = a1;
  v23 = sub_232200390();
  v24 = sub_2322012E4();
  v25 = v24;
  if (os_log_type_enabled(v23, v24))
  {
    v26 = swift_slowAlloc();
    v46 = v15;
    v27 = v26;
    v45 = swift_slowAlloc();
    v53 = v45;
    *(_DWORD *)v27 = 136315650;
    v44 = v25;
    v52 = sub_232013174(v48, v49, &v53);
    v49 = v7;
    sub_232201710();
    *(_WORD *)(v27 + 12) = 2080;
    v47 = v13;
    v28 = (void *)sub_2322011C4();
    v29 = sub_2321FE1AC();
    v43 = v23;
    v30 = v29;
    v48 = v12;
    v32 = v31;

    v52 = sub_232013174(v30, v32, &v53);
    v13 = v47;
    sub_232201710();

    v12 = v48;
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 22) = 2080;
    v52 = (uint64_t)a1;
    v33 = a1;
    sub_232002B9C();
    v34 = sub_232200F0C();
    v52 = sub_232013174(v34, v35, &v53);
    sub_232201710();
    swift_bridgeObjectRelease();

    v36 = v43;
    _os_log_impl(&dword_231FFB000, v43, (os_log_type_t)v44, "[%s]_%s: fetchIncomingAcceptedEntryDateAccepted error %s", (uint8_t *)v27, 0x20u);
    v37 = v45;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v37, -1, -1);
    v38 = v27;
    v15 = v46;
    MEMORY[0x2348FF468](v38, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v50 + 8))(v18, v51);
  v39 = sub_2321FDC6C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v9, 1, 1, v39);
  sub_2322006B4();
  sub_23202FCD0();
  v40 = sub_232200774();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return v40;
}

uint64_t sub_23202C06C(uint64_t a1, char *a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  unsigned int (*v33)(char *, uint64_t, uint64_t);
  char *v34;
  char *v35;
  char *v36;
  NSObject *v37;
  os_log_type_t v38;
  int v39;
  unint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  char *v46;
  void (*v47)(char *, char *, uint64_t);
  char *v48;
  char *v49;
  char *v50;
  NSObject *v51;
  os_log_type_t v52;
  int v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  char *v59;
  char v60;
  char *v61;
  void (*v62)(char *, char *, uint64_t);
  char *v63;
  char *v64;
  NSObject *v65;
  os_log_type_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  void (*v77)(char *, uint64_t);
  uint64_t v78;
  unint64_t v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  char *v84;
  void (*v86)(char *, uint64_t);
  uint64_t v87;
  int v88;
  int v89;
  _QWORD *v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;

  v97 = a6;
  v98 = a7;
  v93 = (char *)a5;
  v99 = a3;
  v10 = sub_23220039C();
  v100 = *(_QWORD *)(v10 - 8);
  v101 = v10;
  v11 = MEMORY[0x24BDAC7A8](v10);
  v91 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v92 = (char *)&v87 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v94 = (char *)&v87 - v15;
  sub_23202D234(0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v87 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v87 - v20;
  v22 = sub_2321FDC6C();
  v23 = *(_QWORD **)(v22 - 8);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v96 = (char *)&v87 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v95 = (char *)&v87 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v87 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&v87 - v31;
  sub_23200054C(a1, (uint64_t)v21, (uint64_t (*)(_QWORD))sub_23202D234);
  v33 = (unsigned int (*)(char *, uint64_t, uint64_t))v23[6];
  if (v33(v21, 1, v22) == 1)
  {
    sub_232002CEC((uint64_t)v21, (uint64_t (*)(_QWORD))sub_23202D234);
    v34 = v94;
    sub_232200318();
    v35 = a2;
    swift_bridgeObjectRetain_n();
    v36 = v35;
    v37 = sub_232200390();
    v38 = sub_2322012E4();
    v39 = v38;
    v40 = a4;
    if (os_log_type_enabled(v37, v38))
    {
      v41 = swift_slowAlloc();
      v96 = (char *)swift_slowAlloc();
      v103 = v96;
      *(_DWORD *)v41 = 136315651;
      LODWORD(v95) = v39;
      v102 = sub_232013174(v97, v98, (uint64_t *)&v103);
      sub_232201710();
      *(_WORD *)(v41 + 12) = 2080;
      v42 = (void *)sub_2322011C4();
      v43 = sub_2321FE1AC();
      v45 = v44;

      v102 = sub_232013174(v43, v45, (uint64_t *)&v103);
      sub_232201710();

      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 22) = 2081;
      swift_bridgeObjectRetain();
      v102 = sub_232013174(v99, v40, (uint64_t *)&v103);
      sub_232201710();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_231FFB000, v37, (os_log_type_t)v95, "[%s]_%s: Unable to access sharing entry date accepted for identifier %{private}s", (uint8_t *)v41, 0x20u);
      v46 = v96;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v46, -1, -1);
      MEMORY[0x2348FF468](v41, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v100 + 8))(v34, v101);
LABEL_19:
    v60 = 0;
    return v60 & 1;
  }
  v94 = a2;
  v47 = (void (*)(char *, char *, uint64_t))v23[4];
  v47(v32, v21, v22);
  sub_23200054C((uint64_t)v93, (uint64_t)v19, (uint64_t (*)(_QWORD))sub_23202D234);
  if (v33(v19, 1, v22) == 1)
  {
    v90 = v23;
    v93 = v32;
    sub_232002CEC((uint64_t)v19, (uint64_t (*)(_QWORD))sub_23202D234);
    v48 = v91;
    sub_232200318();
    v49 = v94;
    swift_bridgeObjectRetain_n();
    v50 = v49;
    v51 = sub_232200390();
    v52 = sub_2322012FC();
    v53 = v52;
    if (os_log_type_enabled(v51, v52))
    {
      v54 = swift_slowAlloc();
      v96 = (char *)swift_slowAlloc();
      v103 = v96;
      *(_DWORD *)v54 = 136315651;
      LODWORD(v95) = v53;
      v102 = sub_232013174(v97, v98, (uint64_t *)&v103);
      sub_232201710();
      *(_WORD *)(v54 + 12) = 2080;
      v55 = (void *)sub_2322011C4();
      v56 = sub_2321FE1AC();
      v58 = v57;

      v102 = sub_232013174(v56, v58, (uint64_t *)&v103);
      sub_232201710();

      swift_bridgeObjectRelease();
      *(_WORD *)(v54 + 22) = 2081;
      swift_bridgeObjectRetain();
      v102 = sub_232013174(v99, a4, (uint64_t *)&v103);
      sub_232201710();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_231FFB000, v51, (os_log_type_t)v95, "[%s]_%s: Provided model date is nil for identifier %{private}s", (uint8_t *)v54, 0x20u);
      v59 = v96;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v59, -1, -1);
      MEMORY[0x2348FF468](v54, -1, -1);

      (*(void (**)(char *, uint64_t))(v100 + 8))(v91, v101);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v100 + 8))(v48, v101);
    }
    ((void (*)(char *, uint64_t))v90[1])(v93, v22);
    goto LABEL_19;
  }
  v47(v30, v19, v22);
  sub_232000590((unint64_t *)&qword_2541AF160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
  v89 = sub_232200E34();
  v60 = v89 ^ 1;
  v61 = v92;
  sub_232200318();
  v62 = (void (*)(char *, char *, uint64_t))v23[2];
  v62(v95, v32, v22);
  v91 = v30;
  v62(v96, v30, v22);
  v63 = v94;
  swift_bridgeObjectRetain_n();
  v64 = v63;
  v65 = sub_232200390();
  v66 = sub_2322012FC();
  v67 = v66;
  if (os_log_type_enabled(v65, v66))
  {
    v68 = swift_slowAlloc();
    v93 = v32;
    v90 = v23;
    v69 = v68;
    v94 = (char *)swift_slowAlloc();
    v103 = v94;
    *(_DWORD *)v69 = 136316419;
    v88 = v67;
    v102 = sub_232013174(v97, v98, (uint64_t *)&v103);
    sub_232201710();
    *(_WORD *)(v69 + 12) = 2080;
    v70 = (void *)sub_2322011C4();
    v71 = sub_2321FE1AC();
    v98 = a4;
    v73 = v72;

    v102 = sub_232013174(v71, v73, (uint64_t *)&v103);
    sub_232201710();

    swift_bridgeObjectRelease();
    *(_WORD *)(v69 + 22) = 2081;
    sub_232000590(&qword_2541AF170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
    v74 = v95;
    v75 = sub_232201AB8();
    v102 = sub_232013174(v75, v76, (uint64_t *)&v103);
    sub_232201710();
    swift_bridgeObjectRelease();
    v77 = (void (*)(char *, uint64_t))v90[1];
    v77(v74, v22);
    *(_WORD *)(v69 + 32) = 2080;
    if ((v89 & 1) != 0)
      v78 = 544501614;
    else
      v78 = 0;
    if ((v89 & 1) != 0)
      v79 = 0xE400000000000000;
    else
      v79 = 0xE000000000000000;
    v102 = sub_232013174(v78, v79, (uint64_t *)&v103);
    sub_232201710();
    swift_bridgeObjectRelease();
    *(_WORD *)(v69 + 42) = 2081;
    v80 = v96;
    v81 = sub_232201AB8();
    v102 = sub_232013174(v81, v82, (uint64_t *)&v103);
    sub_232201710();
    swift_bridgeObjectRelease();
    v77(v80, v22);
    *(_WORD *)(v69 + 52) = 2081;
    v83 = v98;
    swift_bridgeObjectRetain();
    v102 = sub_232013174(v99, v83, (uint64_t *)&v103);
    sub_232201710();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_231FFB000, v65, (os_log_type_t)v88, "[%s]_%s Threshold date %{private}s is %sbefore model date %{private}s for identifier %{private}s", (uint8_t *)v69, 0x3Eu);
    v84 = v94;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v84, -1, -1);
    MEMORY[0x2348FF468](v69, -1, -1);

    (*(void (**)(char *, uint64_t))(v100 + 8))(v92, v101);
    v77(v91, v22);
    v77(v93, v22);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    v86 = (void (*)(char *, uint64_t))v23[1];
    v86(v96, v22);
    v86(v95, v22);

    (*(void (**)(char *, uint64_t))(v100 + 8))(v61, v101);
    v86(v91, v22);
    v86(v32, v22);
  }
  return v60 & 1;
}

void sub_23202CAC8(uint64_t a1)
{
  sub_2320057B8(a1, &qword_2541B28D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

void sub_23202CAE4(uint64_t a1)
{
  sub_2320057B8(a1, &qword_2541B28A8, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

void sub_23202CB00()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B7368)
  {
    sub_23202CBC0();
    sub_23202ED00(255, (unint64_t *)&qword_2541B3040, MEMORY[0x24BEE4AE0] + 8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_232000590((unint64_t *)&qword_2541B2F08, (uint64_t (*)(uint64_t))sub_23202CBC0, MEMORY[0x24BDB9AF8]);
    sub_23202CC44();
    v0 = sub_2322005C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B7368);
  }
}

void sub_23202CBC0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2F10)
  {
    sub_2320057B8(255, (unint64_t *)&qword_2541B28E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE48068], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    sub_232002B9C();
    v0 = sub_232200624();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2F10);
  }
}

unint64_t sub_23202CC44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541AF300;
  if (!qword_2541AF300)
  {
    sub_23202ED00(255, (unint64_t *)&qword_2541B3040, MEMORY[0x24BEE4AE0] + 8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB9AF8], v1);
    atomic_store(result, (unint64_t *)&qword_2541AF300);
  }
  return result;
}

void sub_23202CCA8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9C340)
  {
    sub_23202CEF8(255, &qword_255F9C348, sub_23202CD74, (void (*)(uint64_t))sub_23202CE10, (void (*)(void))sub_23202CE74);
    sub_23202CB00();
    sub_23202CE90();
    sub_232000590(&qword_2541B7360, (uint64_t (*)(uint64_t))sub_23202CB00, MEMORY[0x24BDB98F0]);
    v0 = sub_2322005C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9C340);
  }
}

void sub_23202CD74(uint64_t a1)
{
  sub_23202CD88(a1, &qword_255F9C350, sub_23202CDF4);
}

void sub_23202CD88(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    sub_232002B9C();
    v4 = sub_232200624();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_23202CDF4(uint64_t a1)
{
  sub_2320057B8(a1, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

void sub_23202CE10()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255F9C358)
  {
    sub_23202CDF4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255F9C358);
  }
}

uint64_t sub_23202CE74()
{
  return sub_232000590(&qword_255F9C360, (uint64_t (*)(uint64_t))sub_23202CD74, MEMORY[0x24BDB9AF8]);
}

unint64_t sub_23202CE90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F9C368;
  if (!qword_255F9C368)
  {
    sub_23202CEF8(255, &qword_255F9C348, sub_23202CD74, (void (*)(uint64_t))sub_23202CE10, (void (*)(void))sub_23202CE74);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB96C0], v1);
    atomic_store(result, (unint64_t *)&qword_255F9C368);
  }
  return result;
}

void sub_23202CEF8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t), void (*a5)(void))
{
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    a3(255);
    a4(255);
    a5();
    v8 = sub_232200540();
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_23202CF78()
{
  return sub_232000590(&qword_255F9C378, (uint64_t (*)(uint64_t))sub_23202CCA8, MEMORY[0x24BDB98F0]);
}

void sub_23202CF94()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9C380)
  {
    sub_23202CD88(255, &qword_255F9C388, sub_23202CAE4);
    sub_23202CEF8(255, &qword_255F9C370, (void (*)(uint64_t))sub_23202CCA8, sub_23202CAE4, (void (*)(void))sub_23202CF78);
    sub_23202FBCC(&qword_255F9C390, (uint64_t)&qword_255F9C388, (uint64_t)sub_23202CAE4, (uint64_t (*)(uint64_t))sub_23202CD88);
    sub_23202D074();
    v0 = sub_2322005C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9C380);
  }
}

unint64_t sub_23202D074()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F9C398;
  if (!qword_255F9C398)
  {
    sub_23202CEF8(255, &qword_255F9C370, (void (*)(uint64_t))sub_23202CCA8, sub_23202CAE4, (void (*)(void))sub_23202CF78);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB96C0], v1);
    atomic_store(result, (unint64_t *)&qword_255F9C398);
  }
  return result;
}

void sub_23202D0DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9C3A0)
  {
    sub_23202CF94();
    sub_23202D1D8(255, (unint64_t *)&qword_2541B2EC8, sub_23202CAE4);
    sub_232000590(&qword_255F9C3A8, (uint64_t (*)(uint64_t))sub_23202CF94, MEMORY[0x24BDB98F0]);
    sub_23202FBCC((unint64_t *)&qword_2541AF280, (uint64_t)&qword_2541B2EC8, (uint64_t)sub_23202CAE4, (uint64_t (*)(uint64_t))sub_23202D1D8);
    v0 = sub_23220057C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9C3A0);
  }
}

void sub_23202D1C4(uint64_t a1)
{
  sub_23202D1D8(a1, &qword_2541B7398, sub_23202D234);
}

void sub_23202D1D8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_232200624();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_23202D234(uint64_t a1)
{
  sub_2320057B8(a1, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

uint64_t sub_23202D250()
{
  return sub_232000590(&qword_2541B58D0, (uint64_t (*)(uint64_t))sub_23202D1C4, MEMORY[0x24BDB9AF8]);
}

void sub_23202D26C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9C3B8)
  {
    sub_23202F4A8(255, &qword_255F9C3B0, sub_23202D1C4, (void (*)(void))sub_23202D250);
    sub_23202FAA4(255, &qword_255F9C3C0, sub_23202D324, (void (*)(void))sub_23202D354);
    sub_23202D370();
    sub_23202D3D0();
    v0 = sub_2322004C8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9C3B8);
  }
}

void sub_23202D324(uint64_t a1)
{
  sub_23202CD88(a1, &qword_255F9C3C8, sub_23202D338);
}

void sub_23202D338(uint64_t a1)
{
  sub_2320057B8(a1, &qword_255F9C3D0, (uint64_t (*)(uint64_t))type metadata accessor for SummaryAlertContentState, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

uint64_t sub_23202D354()
{
  return sub_232000590(&qword_255F9C3D8, (uint64_t (*)(uint64_t))sub_23202D324, MEMORY[0x24BDB9AF8]);
}

unint64_t sub_23202D370()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F9C3E0;
  if (!qword_255F9C3E0)
  {
    sub_23202F4A8(255, &qword_255F9C3B0, sub_23202D1C4, (void (*)(void))sub_23202D250);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB95F8], v1);
    atomic_store(result, (unint64_t *)&qword_255F9C3E0);
  }
  return result;
}

unint64_t sub_23202D3D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F9C3E8;
  if (!qword_255F9C3E8)
  {
    sub_23202FAA4(255, &qword_255F9C3C0, sub_23202D324, (void (*)(void))sub_23202D354);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB97F8], v1);
    atomic_store(result, (unint64_t *)&qword_255F9C3E8);
  }
  return result;
}

void sub_23202D430()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9C3F0)
  {
    sub_23202D26C();
    sub_232000590(&qword_255F9C3F8, (uint64_t (*)(uint64_t))sub_23202D26C, MEMORY[0x24BDB9450]);
    v0 = sub_232200540();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9C3F0);
  }
}

uint64_t type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError()
{
  uint64_t result;

  result = qword_255F9C550;
  if (!qword_255F9C550)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23202D4F0(void *a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  unsigned int v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  NSObject *v40;
  os_log_type_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  _QWORD *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  __int128 v67;
  void *v68;
  id v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v80;
  void (*v81)(char *, char *, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  __int128 v113;
  _QWORD v114[5];

  v90 = a4;
  v93 = a2;
  v96 = sub_2321FE584();
  v95 = *(_QWORD *)(v96 - 8);
  MEMORY[0x24BDAC7A8](v96);
  v92 = v8;
  v94 = (char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_2321FF52C();
  v88 = *(_QWORD *)(v89 - 8);
  MEMORY[0x24BDAC7A8](v89);
  v87 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23202F2A4();
  v100 = v10;
  v99 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v98 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23202F350();
  v103 = *(_QWORD *)(v12 - 8);
  v104 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v101 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23202F5B0();
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v102 = (char *)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_23220039C();
  v84 = *(_QWORD *)(v85 - 8);
  MEMORY[0x24BDAC7A8](v85);
  v91 = (char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_2321FDC6C();
  v110 = *(_QWORD *)(v19 - 8);
  v111 = v19;
  v20 = *(_QWORD *)(v110 + 64);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v86 = (char *)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v80 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v80 - v25;
  v114[3] = sub_2321FE128();
  v114[4] = sub_232000590(&qword_2541B2330, (uint64_t (*)(uint64_t))MEMORY[0x24BE47380], MEMORY[0x24BE47378]);
  v114[0] = a3;
  v27 = *(_QWORD *)a5;
  swift_retain();
  v28 = (void *)sub_2322011C4();
  *(_QWORD *)&v113 = sub_2321D5890(*(void **)(a5 + 8));
  *((_QWORD *)&v113 + 1) = v29;
  sub_232200F48();

  v30 = *((_QWORD *)&v113 + 1);
  v108 = v113;
  objc_msgSend(a1, sel_endDate);
  v31 = (id)HKDecodeDateForValue();
  v109 = v26;
  sub_2321FDC30();

  v32 = objc_msgSend(a1, sel_hasSampleUUID);
  v105 = v16;
  v106 = v15;
  v82 = v27;
  if (v32 && (v33 = objc_msgSend(a1, sel_sampleUUID)) != 0)
  {
    v34 = v33;
    v35 = sub_232200EC4();
    v37 = v36;

    v81 = *(void (**)(char *, char *, uint64_t))(v110 + 16);
    v81(v24, v109, v111);
    v107 = v37;
    if (v37)
      goto LABEL_7;
  }
  else
  {
    v81 = *(void (**)(char *, char *, uint64_t))(v110 + 16);
    v81(v24, v109, v111);
  }
  sub_2321FDAEC();
  v35 = sub_232201098();
  v107 = v38;
LABEL_7:
  v39 = v91;
  v83 = v35;
  v91 = *(char **)(v110 + 8);
  ((void (*)(char *, uint64_t))v91)(v24, v111);
  sub_23220036C();
  swift_bridgeObjectRetain_n();
  v40 = sub_232200390();
  v41 = sub_2322012FC();
  v42 = os_log_type_enabled(v40, v41);
  v97 = a1;
  if (v42)
  {
    v43 = swift_slowAlloc();
    v44 = swift_slowAlloc();
    *(_QWORD *)&v113 = v44;
    *(_DWORD *)v43 = 136446466;
    v112 = sub_232013174(0xD00000000000002DLL, 0x8000000232211160, (uint64_t *)&v113);
    sub_232201710();
    *(_WORD *)(v43 + 12) = 2080;
    swift_bridgeObjectRetain();
    v112 = sub_232013174(v108, v30, (uint64_t *)&v113);
    sub_232201710();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_231FFB000, v40, v41, "%{public}s Proceeding with notification for %s", (uint8_t *)v43, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v44, -1, -1);
    MEMORY[0x2348FF468](v43, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v84 + 8))(v39, v85);
  v45 = v88;
  v46 = v87;
  v47 = v89;
  (*(void (**)(char *, _QWORD, uint64_t))(v88 + 104))(v87, *MEMORY[0x24BE44488], v89);
  sub_23202F71C();
  v48 = sub_2321FF0E8();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v47);
  *(_QWORD *)&v113 = v48;
  v49 = v86;
  v50 = v111;
  v81(v86, v90, v111);
  v51 = v110;
  v52 = (*(unsigned __int8 *)(v110 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80);
  v53 = swift_allocObject();
  v54 = *(_OWORD *)(a5 + 48);
  *(_OWORD *)(v53 + 48) = *(_OWORD *)(a5 + 32);
  *(_OWORD *)(v53 + 64) = v54;
  *(_OWORD *)(v53 + 80) = *(_OWORD *)(a5 + 64);
  *(_QWORD *)(v53 + 96) = *(_QWORD *)(a5 + 80);
  v55 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(v53 + 16) = *(_OWORD *)a5;
  *(_OWORD *)(v53 + 32) = v55;
  (*(void (**)(unint64_t, char *, uint64_t))(v51 + 32))(v53 + v52, v49, v50);
  v56 = (_QWORD *)(v53 + ((v20 + v52 + 7) & 0xFFFFFFFFFFFFFFF8));
  v57 = v108;
  *v56 = v108;
  v56[1] = v30;
  swift_bridgeObjectRetain();
  sub_23202E788(a5);
  sub_23220060C();
  sub_2320252A4();
  sub_23202D1C4(0);
  sub_232000590(&qword_2541AF2D8, (uint64_t (*)(uint64_t))sub_2320252A4, MEMORY[0x24BDB9AF8]);
  sub_23202D250();
  v58 = v98;
  sub_232200888();
  swift_release();
  swift_release();
  v59 = v95;
  v60 = v94;
  v61 = v96;
  (*(void (**)(char *, uint64_t, uint64_t))(v95 + 16))(v94, v93, v96);
  v62 = (*(unsigned __int8 *)(v59 + 80) + 144) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  v63 = swift_allocObject();
  *(_QWORD *)(v63 + 16) = v57;
  *(_QWORD *)(v63 + 24) = v30;
  v64 = v107;
  *(_QWORD *)(v63 + 32) = v83;
  *(_QWORD *)(v63 + 40) = v64;
  v65 = *(_OWORD *)(a5 + 48);
  *(_OWORD *)(v63 + 80) = *(_OWORD *)(a5 + 32);
  *(_OWORD *)(v63 + 96) = v65;
  *(_OWORD *)(v63 + 112) = *(_OWORD *)(a5 + 64);
  v66 = *(_QWORD *)(a5 + 80);
  v67 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(v63 + 48) = *(_OWORD *)a5;
  *(_OWORD *)(v63 + 64) = v67;
  v68 = v97;
  *(_QWORD *)(v63 + 128) = v66;
  *(_QWORD *)(v63 + 136) = v68;
  (*(void (**)(unint64_t, char *, uint64_t))(v59 + 32))(v63 + v62, v60, v61);
  sub_23202E788(a5);
  v69 = v68;
  sub_23220060C();
  sub_23202CD88(0, &qword_255F9C470, (void (*)(uint64_t))sub_23202F42C);
  sub_23202F534();
  sub_23202FBCC(&qword_255F9C480, (uint64_t)&qword_255F9C470, (uint64_t)sub_23202F42C, (uint64_t (*)(uint64_t))sub_23202CD88);
  v70 = v101;
  v71 = v100;
  sub_23220087C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v99 + 8))(v58, v71);
  sub_23201B304((uint64_t)v114, (uint64_t)&v113);
  v72 = swift_allocObject();
  sub_2320167F8(&v113, v72 + 16);
  v73 = swift_allocObject();
  *(_QWORD *)(v73 + 16) = sub_23202F9E8;
  *(_QWORD *)(v73 + 24) = v72;
  sub_23220060C();
  sub_232003E9C(0, &qword_255F9C460);
  sub_23202F678();
  v74 = MEMORY[0x24BDB98F0];
  sub_232000590(&qword_255F9C4A0, (uint64_t (*)(uint64_t))sub_23202F350, MEMORY[0x24BDB98F0]);
  sub_232000590(&qword_255F9C498, (uint64_t (*)(uint64_t))sub_23202F678, MEMORY[0x24BDB96C0]);
  v75 = v102;
  v76 = v104;
  sub_232200828();
  swift_release();
  (*(void (**)(char *, uint64_t))(v103 + 8))(v70, v76);
  sub_232000590(&qword_255F9C4B0, (uint64_t (*)(uint64_t))sub_23202F5B0, v74);
  v77 = v106;
  v78 = sub_232200774();
  (*(void (**)(char *, uint64_t))(v105 + 8))(v75, v77);
  ((void (*)(char *, uint64_t))v91)(v109, v111);
  sub_232016AFC((uint64_t)v114);
  return v78;
}

unint64_t sub_23202DF34(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  char v18;
  _QWORD *v19;
  double v20;
  double v21;
  double v22;
  double v23;
  void *v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  char v35;
  id v36;
  char v37;
  char *v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  NSObject *v44;
  int v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  id v49;
  id v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  char v54;
  _QWORD *v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  void *v65;
  char *v66;
  NSObject *v67;
  unint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;

  v3 = v2;
  v6 = (_QWORD *)sub_23220039C();
  v7 = *(v6 - 1);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23202CAC8(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2321FE6D4();
  v69 = *(_QWORD *)(v13 - 8);
  v70 = (id)v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
    goto LABEL_31;
  v16 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v16; v16 = sub_232201998())
  {
    v66 = v9;
    v67 = v16;
    v64 = v7;
    v65 = (void *)a2;
    v62 = v3;
    v63 = v6;
    sub_232003E9C(0, &qword_2541B0CC0);
    v6 = 0;
    v9 = (char *)a1;
    v68 = a1 & 0xC000000000000001;
    v3 = 4;
    while (1)
    {
      v7 = v3 - 4;
      v17 = v68 ? (id)MEMORY[0x2348FEA30](v3 - 4, v9) : *(id *)&v9[8 * v3];
      a1 = (unint64_t)v17;
      a2 = v3 - 3;
      if (__OFADD__(v7, 1))
        break;
      sub_232201128();
      sub_2321FF25C();
      v18 = sub_2321FE6A4();
      sub_232002CEC((uint64_t)v12, (uint64_t (*)(_QWORD))sub_23202CAC8);
      (*(void (**)(char *, id))(v69 + 8))(v15, v70);
      if ((v18 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError();
        sub_232000590(&qword_255F9C4C0, (uint64_t (*)(uint64_t))type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError, (uint64_t)&unk_2322111E4);
        swift_allocError();
        v26 = v25;
        sub_23202E710();
        *v26 = sub_232201BF0();
        v26[1] = v27;
        sub_232201128();
        sub_2321FF25C();
        swift_storeEnumTagMultiPayload();
        swift_willThrow();

LABEL_29:
        return a1;
      }
      if (v6)
      {
        v19 = v6;
        objc_msgSend((id)a1, sel_endDate);
        v21 = v20;
        objc_msgSend(v19, sel_endDate);
        v23 = v22;

        if (v23 >= v21)
          v24 = (void *)a1;
        else
          v24 = v19;
        if (v23 >= v21)
          a1 = (unint64_t)v19;

      }
      ++v3;
      v6 = (_QWORD *)a1;
      if (a2 == v67)
      {
        swift_bridgeObjectRelease();
        v28 = (void *)objc_opt_self();
        v6 = (id)a1;
        v29 = objc_msgSend(v6, sel_dataType);
        v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithLongLong_, v29);
        v31 = objc_msgSend(v28, sel_dataTypeWithNumber_, v30);

        v32 = v65;
        if (v31)
        {
          sub_232003E9C(0, (unint64_t *)&qword_2541B74A0);
          v33 = v32;
          v34 = v31;
          v35 = sub_2322016A4();

          if ((v35 & 1) != 0)
          {
            v36 = v34;
            v37 = sub_232201158();

            if ((v37 & 1) != 0)
            {

              return a1;
            }
          }
        }
        v38 = v66;
        sub_232200318();
        v39 = v31;
        v40 = v32;
        v41 = v39;
        v42 = v40;
        v43 = v41;
        v44 = sub_232200390();
        v45 = sub_2322012E4();
        if (os_log_type_enabled(v44, (os_log_type_t)v45))
        {
          LODWORD(v65) = v45;
          v67 = v44;
          a1 = swift_slowAlloc();
          v69 = swift_slowAlloc();
          v72 = v69;
          *(_DWORD *)a1 = 136446978;
          v71 = sub_232013174(0xD00000000000002DLL, 0x8000000232211160, &v72);
          sub_232201710();
          *(_WORD *)(a1 + 12) = 2080;
          v71 = (uint64_t)v31;
          sub_23202FD30();
          v70 = v43;
          v46 = v43;
          v47 = sub_232200F00();
          v71 = sub_232013174(v47, v48, &v72);
          sub_232201710();

          swift_bridgeObjectRelease();
          *(_WORD *)(a1 + 22) = 2080;
          v68 = a1 + 24;
          v49 = v42;
          v50 = objc_msgSend(v49, sel_description);
          v51 = sub_232200EC4();
          v53 = v52;

          v71 = sub_232013174(v51, v53, &v72);
          sub_232201710();

          swift_bridgeObjectRelease();
          *(_WORD *)(a1 + 32) = 2080;
          if (v31)
            v54 = sub_232201158() & 1;
          else
            v54 = 2;
          v55 = v63;
          v56 = v67;
          v57 = v65;
          LOBYTE(v71) = v54;
          sub_232000608(0, &qword_255F9C4D0, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
          v58 = sub_232200F00();
          v71 = sub_232013174(v58, v59, &v72);
          sub_232201710();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_231FFB000, v56, v57, "%{public}s Unexpected data type %s. Expected %s to conform to alert event type: %s", (uint8_t *)a1, 0x2Au);
          v60 = v69;
          swift_arrayDestroy();
          MEMORY[0x2348FF468](v60, -1, -1);
          MEMORY[0x2348FF468](a1, -1, -1);

          (*(void (**)(char *, _QWORD *))(v64 + 8))(v66, v55);
          v43 = v70;
        }
        else
        {

          (*(void (**)(char *, _QWORD *))(v64 + 8))(v38, v63);
        }
        type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError();
        sub_232000590(&qword_255F9C4C0, (uint64_t (*)(uint64_t))type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError, (uint64_t)&unk_2322111E4);
        swift_allocError();
        swift_storeEnumTagMultiPayload();
        swift_willThrow();

        goto LABEL_29;
      }
    }
    __break(1u);
LABEL_31:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return 0;
}

unint64_t sub_23202E6B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541AF310;
  if (!qword_2541AF310)
  {
    sub_2320057B8(255, &qword_2541B3068, (uint64_t (*)(uint64_t))sub_23202CAE4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB9DF8], v1);
    atomic_store(result, (unint64_t *)&qword_2541AF310);
  }
  return result;
}

void sub_23202E710()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_255F9C408)
  {
    sub_2321FE6D4();
    sub_23202CAC8(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_255F9C408);
  }
}

uint64_t sub_23202E788(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  v4 = *(void **)(a1 + 24);
  v5 = *(void **)(a1 + 32);
  v6 = *(void **)(a1 + 80);
  v7 = *(id *)a1;
  v8 = v2;
  v9 = v3;
  v10 = v4;
  v11 = v5;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v12 = v6;
  return a1;
}

uint64_t sub_23202E80C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v2 = *(void **)a1;
  v3 = *(void **)(a1 + 8);
  v4 = *(void **)(a1 + 16);
  v5 = *(void **)(a1 + 24);
  v6 = *(void **)(a1 + 32);

  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return a1;
}

uint64_t sub_23202E890()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23202E8B4(uint64_t a1)
{
  uint64_t v1;

  return sub_23202A530(a1, *(void **)(v1 + 16));
}

uint64_t sub_23202E8BC()
{
  id *v0;

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23202E928@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23202A5F8();
  *a1 = result;
  return result;
}

uint64_t sub_23202E958()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_2321FDC6C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23202EA3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(sub_2321FDC6C() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23202A75C(a1, *(_QWORD *)(v2 + 24), v2 + v6, v2 + v7, *(void **)(v2 + ((v7 + 95) & 0xFFFFFFFFFFFFF8)), a2);
}

uint64_t sub_23202EAAC()
{
  id *v0;

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23202EB20@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_23202AB3C(a1, a2, v3 + 16, *(void **)(v3 + 104), (uint64_t *)(v3 + 112), a3);
}

uint64_t sub_23202EB30()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23202EB54(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, _QWORD);
  uint64_t v4;

  v3 = *(uint64_t (**)(uint64_t, _QWORD))(v1 + 16);
  sub_23202CE10();
  return v3(a1, *(unsigned __int8 *)(a1 + *(int *)(v4 + 48)));
}

uint64_t sub_23202EB9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_2321FDC6C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23202EC50@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(sub_2321FDC6C() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_23202B27C(a1, v2[2], v2[3], v2[4], v2[5], (uint64_t)v2 + v6, (uint64_t)v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8), a2);
}

uint64_t sub_23202ECB8(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_23202ED00(255, a2, a3, MEMORY[0x24BDBA1B0]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDBA1D0], v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_23202ED00(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, unint64_t, _QWORD))
{
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_232002B9C();
    v9 = a4(a1, a3, v8, MEMORY[0x24BEE3F20]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_23202ED68()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  if (!qword_255F9C438)
  {
    sub_23202ED00(255, (unint64_t *)&qword_2541B3040, MEMORY[0x24BEE4AE0] + 8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    v0 = MEMORY[0x24BDCDDE8];
    sub_23202ED00(255, &qword_255F9C430, MEMORY[0x24BDCDDE8], MEMORY[0x24BDBA1B0]);
    sub_23202CC44();
    sub_23202ECB8((unint64_t *)&qword_255F9C440, &qword_255F9C430, v0);
    v1 = sub_2322005C4();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_255F9C438);
  }
}

void sub_23202EE44()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9C448)
  {
    sub_23202ED00(255, (unint64_t *)&qword_2541B3040, MEMORY[0x24BEE4AE0] + 8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_23202CAE4(255);
    sub_23202CC44();
    v0 = sub_232200540();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9C448);
  }
}

void sub_23202EED8(uint64_t a1)
{
  sub_2320057B8(a1, &qword_2541B69C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

uint64_t sub_23202EEF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23202EED8(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23202EF38@<X0>(uint64_t *a1@<X8>)
{
  return sub_2320FE4D4(a1);
}

uint64_t sub_23202EF50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for SummaryAlertContentState();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);

  v3 = v0 + ((v2 + 24) & ~v2);
  swift_bridgeObjectRelease();
  v4 = v3 + *(int *)(v1 + 20);
  v5 = sub_2321FDC6C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v3 + *(int *)(v1 + 24);
  v7 = sub_2321FDCC0();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  return swift_deallocObject();
}

uint64_t sub_23202F024@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for SummaryAlertContentState();
  return sub_2320FE550(a1, a2);
}

uint64_t sub_23202F074()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23202CAE4(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = sub_2321FE308();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v3, v4);
  return swift_deallocObject();
}

uint64_t sub_23202F108@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_23202CAE4(0);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  return sub_23200054C(v1 + ((v4 + 16) & ~v4), a1, (uint64_t (*)(_QWORD))sub_23202CAE4);
}

uint64_t sub_23202F150()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_23202F170()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_2321FE584();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  (*(void (**)(char *, uint64_t))(v2 + 8))((char *)v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23202F248(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(sub_2321FE584() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_23202AF6C(a1, *(_BYTE *)(v1 + 16), v1 + 24, *(void **)(v1 + 112), v1 + v4, (uint64_t *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

void sub_23202F2A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B7358)
  {
    sub_23202D1C4(255);
    sub_2320252A4();
    sub_23202D250();
    sub_232000590(&qword_2541AF2D8, (uint64_t (*)(uint64_t))sub_2320252A4, MEMORY[0x24BDB9AF8]);
    v0 = sub_2322005C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B7358);
  }
}

void sub_23202F350()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9C468)
  {
    sub_23202CD88(255, &qword_255F9C470, (void (*)(uint64_t))sub_23202F42C);
    sub_23202F4A8(255, &qword_2541B7338, (void (*)(uint64_t))sub_23202F2A4, (void (*)(void))sub_23202F534);
    sub_23202FBCC(&qword_255F9C480, (uint64_t)&qword_255F9C470, (uint64_t)sub_23202F42C, (uint64_t (*)(uint64_t))sub_23202CD88);
    sub_23202F550();
    v0 = sub_2322005C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9C468);
  }
}

void sub_23202F42C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255F9C478)
  {
    sub_232003E9C(255, &qword_255F9C460);
    sub_2321FE7DC();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255F9C478);
  }
}

void sub_23202F4A8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    sub_232002B9C();
    a4();
    v6 = sub_23220051C();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_23202F534()
{
  return sub_232000590(&qword_2541B7350, (uint64_t (*)(uint64_t))sub_23202F2A4, MEMORY[0x24BDB98F0]);
}

unint64_t sub_23202F550()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B7330;
  if (!qword_2541B7330)
  {
    sub_23202F4A8(255, &qword_2541B7338, (void (*)(uint64_t))sub_23202F2A4, (void (*)(void))sub_23202F534);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB95F8], v1);
    atomic_store(result, (unint64_t *)&qword_2541B7330);
  }
  return result;
}

void sub_23202F5B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9C488)
  {
    sub_23202F678();
    sub_23202F350();
    sub_232000590(&qword_255F9C498, (uint64_t (*)(uint64_t))sub_23202F678, MEMORY[0x24BDB96C0]);
    sub_232000590(&qword_255F9C4A0, (uint64_t (*)(uint64_t))sub_23202F350, MEMORY[0x24BDB98F0]);
    v0 = sub_2322005C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9C488);
  }
}

void sub_23202F678()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9C490)
  {
    sub_23202ED00(255, (unint64_t *)&qword_2541B3040, MEMORY[0x24BEE4AE0] + 8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_232003E9C(255, &qword_255F9C460);
    sub_23202CC44();
    v0 = sub_232200540();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9C490);
  }
}

unint64_t sub_23202F71C()
{
  unint64_t result;

  result = qword_255F9C4A8;
  if (!qword_255F9C4A8)
  {
    result = MEMORY[0x2348FF39C](&unk_232216220, &type metadata for AlertFeedItemWithNotificationSchedulerFactory);
    atomic_store(result, (unint64_t *)&qword_255F9C4A8);
  }
  return result;
}

uint64_t sub_23202F760()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_2321FDC6C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  (*(void (**)(char *, uint64_t))(v2 + 8))((char *)v0 + v3, v1);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23202F834@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;

  v3 = *(_QWORD *)(sub_2321FDC6C() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (uint64_t *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_232112710(v1 + 16, v1 + v4, *v5, v5[1], a1);
}

uint64_t sub_23202F89C()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_2321FE584();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 144) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  (*(void (**)(char *, uint64_t))(v2 + 8))((char *)v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23202F968@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_2321FE584() - 8) + 80);
  return sub_2321129E8(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), v1 + 48, *(void **)(v1 + 136), v1 + ((v3 + 144) & ~v3), a1);
}

uint64_t sub_23202F9C4()
{
  uint64_t v0;

  sub_232016AFC(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_23202F9E8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_232114000(a1, a2, (_QWORD *)(v3 + 16), a3);
}

uint64_t sub_23202F9F0(char *a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, char *);
  uint64_t v4;
  uint64_t v5;

  v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 16);
  v4 = *(_QWORD *)a1;
  sub_23202F42C();
  return v3(v4, &a1[*(int *)(v5 + 48)]);
}

uint64_t sub_23202FA44()
{
  return swift_deallocObject();
}

uint64_t sub_23202FA54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v5 = *(_BYTE *)(v2 + 16);
  sub_23202CE10();
  v7 = *(int *)(v6 + 48);
  result = sub_23200054C(a1, a2, (uint64_t (*)(_QWORD))sub_23202CDF4);
  *(_BYTE *)(a2 + v7) = v5;
  return result;
}

void sub_23202FAA4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4();
    v6 = sub_2322005AC();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_23202FB08()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B7340)
  {
    sub_23202CD88(255, &qword_2541B7390, sub_23202D234);
    sub_23202D1C4(255);
    sub_23202FBCC(&qword_2541AF278, (uint64_t)&qword_2541B7390, (uint64_t)sub_23202D234, (uint64_t (*)(uint64_t))sub_23202CD88);
    sub_23202D250();
    v0 = sub_23220057C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B7340);
  }
}

uint64_t sub_23202FBCC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a4(255);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB9AF8], v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23202FC0C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23202BCC4(*a1, *(void **)(v2 + 16), 0xD00000000000002DLL, 0x8000000232211160);
  *a2 = result;
  return result;
}

uint64_t sub_23202FC54(uint64_t a1)
{
  return sub_2320315C4(a1, 0xD00000000000002DLL, 0x8000000232211160);
}

unint64_t sub_23202FC70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B58C0;
  if (!qword_2541B58C0)
  {
    sub_23202FAA4(255, &qword_2541B7348, sub_23202D1C4, (void (*)(void))sub_23202D250);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB97F8], v1);
    atomic_store(result, (unint64_t *)&qword_2541B58C0);
  }
  return result;
}

unint64_t sub_23202FCD0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B58E8;
  if (!qword_2541B58E8)
  {
    sub_2320057B8(255, &qword_2541B73B8, (uint64_t (*)(uint64_t))sub_23202D234, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB9DF8], v1);
    atomic_store(result, (unint64_t *)&qword_2541B58E8);
  }
  return result;
}

void sub_23202FD30()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9C4C8)
  {
    sub_232003E9C(255, (unint64_t *)&qword_2541B74A0);
    v0 = sub_2322016F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9C4C8);
  }
}

uint64_t sub_23202FD94(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  void (*v10)(char *, uint64_t);
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  char v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t *v27;
  unint64_t v28;
  const char *v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_23202CAC8(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2321FE6D4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2321FE6B0();
  sub_232003E9C(0, &qword_2541B0CB8);
  sub_232016040(&qword_2541B0CB0, &qword_2541B0CB8, 0x24BE4A370, (uint64_t)&protocol conformance descriptor for HKCodableChartSharableModel);
  sub_2321FF25C();
  v9 = sub_2321FE6A4();
  sub_232002CEC((uint64_t)v4, (uint64_t (*)(_QWORD))sub_23202CAC8);
  v10 = *(void (**)(char *, uint64_t))(v6 + 8);
  v10(v8, v5);
  if ((v9 & 1) == 0)
  {
    type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError();
    sub_232000590(&qword_255F9C4C0, (uint64_t (*)(uint64_t))type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError, (uint64_t)&unk_2322111E4);
    swift_allocError();
    v23 = v22;
    sub_23202E710();
    *v23 = sub_232201BF0();
    v23[1] = v24;
    sub_2321FE6B0();
    v21 = (uint64_t)a1;
    sub_2321FF25C();
LABEL_16:
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return v21;
  }
  if (!objc_msgSend(a1, sel_hasSixMonthData)
    || (v11 = objc_msgSend(a1, sel_sixMonthData)) == 0)
  {
    v21 = type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError();
    sub_232000590(&qword_255F9C4C0, (uint64_t (*)(uint64_t))type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError, (uint64_t)&unk_2322111E4);
    swift_allocError();
    *v25 = 0xD000000000000024;
    v25[1] = 0x8000000232203150;
    goto LABEL_16;
  }
  v12 = v11;
  if (!objc_msgSend(v11, sel_hasType) || objc_msgSend(v12, sel_type) != 11)
  {
    v21 = type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError();
    sub_232000590(&qword_255F9C4C0, (uint64_t (*)(uint64_t))type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError, (uint64_t)&unk_2322111E4);
    swift_allocError();
    v28 = 0xD000000000000025;
    v29 = "Query data type is not a notification";
LABEL_19:
    *v27 = v28;
    v27[1] = (unint64_t)(v29 - 32) | 0x8000000000000000;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();

    return v21;
  }
  if (!objc_msgSend(v12, sel_hasQueryDataObject))
    goto LABEL_20;
  v13 = objc_msgSend(v12, sel_queryDataObject);
  if (v13)
  {
    v14 = sub_2321FDAD4();
    v16 = v15;

    v13 = (id)sub_2321FDAC8();
    sub_232003ED4(v14, v16);
  }
  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A3F0]), sel_initWithData_, v13);

  if (!v17)
  {
LABEL_20:
    v21 = type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError();
    sub_232000590(&qword_255F9C4C0, (uint64_t (*)(uint64_t))type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError, (uint64_t)&unk_2322111E4);
    swift_allocError();
    v28 = 0xD00000000000002ALL;
    v29 = "Can not access six month query data object";
    goto LABEL_19;
  }
  sub_232003E9C(0, qword_255F9C4D8);
  sub_232201128();
  sub_2321FF25C();
  v18 = sub_2321FE6A4();
  sub_232002CEC((uint64_t)v4, (uint64_t (*)(_QWORD))sub_23202CAC8);
  v10(v8, v5);
  if ((v18 & 1) != 0)
  {
    v19 = objc_msgSend(v17, sel_samples);
    if (v19
      && (v20 = v19,
          v34 = 0,
          sub_232003E9C(0, &qword_2541B0CC0),
          sub_23220102C(),
          v20,
          (v21 = v34) != 0))
    {

    }
    else
    {
      swift_bridgeObjectRelease();

      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError();
    sub_232000590(&qword_255F9C4C0, (uint64_t (*)(uint64_t))type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError, (uint64_t)&unk_2322111E4);
    swift_allocError();
    v31 = v30;
    sub_23202E710();
    *v31 = sub_232201BF0();
    v31[1] = v32;
    sub_232201128();
    v21 = (uint64_t)v17;
    sub_2321FF25C();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();

  }
  return v21;
}

void *sub_232030364(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  id v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  void *v16;
  char *v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v23;
  uint64_t v24;

  sub_23202CAC8(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2321FE6D4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2321FE6B0();
  sub_232003E9C(0, (unint64_t *)&qword_2541B0C70);
  sub_232016040(&qword_2541B0C68, (unint64_t *)&qword_2541B0C70, 0x24BE4A4C0, (uint64_t)&protocol conformance descriptor for HKCodableSummaryData);
  sub_2321FF25C();
  v9 = sub_2321FE6A4();
  sub_232002CEC((uint64_t)v4, (uint64_t (*)(_QWORD))sub_23202CAC8);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) == 0)
  {
    type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError();
    sub_232000590(&qword_255F9C4C0, (uint64_t (*)(uint64_t))type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError, (uint64_t)&unk_2322111E4);
    swift_allocError();
    v19 = v18;
    sub_23202E710();
    *v19 = sub_232201BF0();
    v19[1] = v20;
    sub_2321FE6B0();
    sub_2321FF25C();
LABEL_9:
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return a1;
  }
  if (!objc_msgSend(a1, sel_hasContentData)
    || (v10 = objc_msgSend(a1, sel_contentData)) == 0)
  {
    type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError();
    sub_232000590(&qword_255F9C4C0, (uint64_t (*)(uint64_t))type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError, (uint64_t)&unk_2322111E4);
    swift_allocError();
    *v21 = 0xD00000000000001BLL;
    v21[1] = 0x80000002322030D0;
    goto LABEL_9;
  }
  v11 = v10;
  v12 = sub_2321FDAD4();
  v14 = v13;

  if (objc_msgSend(a1, sel_hasKindRawValue))
  {
    v15 = objc_msgSend(a1, sel_kindRawValue);
    if (v15)
    {
      v16 = v15;
      sub_232200EC4();

      v17 = (char *)&loc_232030554
          + dword_23203088C[_sSo20HKCodableSummaryDataC9SummariesE4KindO8rawValueAESgSS_tcfC_0()];
      __asm { BR              X10 }
    }
  }
  a1 = (void *)type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError();
  sub_232000590(&qword_255F9C4C0, (uint64_t (*)(uint64_t))type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError, (uint64_t)&unk_2322111E4);
  swift_allocError();
  *v23 = 0xD000000000000024;
  v23[1] = 0x80000002322030F0;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  sub_232003ED4(v12, v14);
  return a1;
}

uint64_t *sub_2320308A0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      sub_23202E710();
      v12 = v11;
      v13 = *(int *)(v11 + 48);
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = sub_2321FE6D4();
      v17 = *(_QWORD *)(v16 - 8);
      v18 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
      swift_bridgeObjectRetain();
      v18(v14, v15, v16);
      v19 = *(int *)(v12 + 64);
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v21, 1, v16))
      {
        sub_23202CAC8(0);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        v18(v20, v21, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
      }
      goto LABEL_10;
    }
    if (!EnumCaseMultiPayload)
    {
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t sub_232030A24(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    swift_bridgeObjectRelease();
    sub_23202E710();
    v4 = v3;
    v5 = a1 + *(int *)(v3 + 48);
    v6 = sub_2321FE6D4();
    v7 = *(_QWORD *)(v6 - 8);
    v9 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v9(v5, v6);
    v8 = a1 + *(int *)(v4 + 64);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6);
    if (!(_DWORD)result)
      return ((uint64_t (*)(uint64_t, uint64_t))v9)(v8, v6);
  }
  else if (!(_DWORD)result)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *sub_232030B08(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    sub_23202E710();
    v10 = v9;
    v11 = *(int *)(v9 + 48);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_2321FE6D4();
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
    swift_bridgeObjectRetain();
    v16(v12, v13, v14);
    v17 = *(int *)(v10 + 64);
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v19, 1, v14))
    {
      sub_23202CAC8(0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      v16(v18, v19, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
    }
    goto LABEL_8;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    swift_bridgeObjectRetain();
LABEL_8:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *sub_232030C64(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  if (a1 != a2)
  {
    sub_232002CEC((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      sub_23202E710();
      v8 = v7;
      v9 = *(int *)(v7 + 48);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_2321FE6D4();
      v13 = *(_QWORD *)(v12 - 8);
      v14 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
      swift_bridgeObjectRetain();
      v14(v10, v11, v12);
      v15 = *(int *)(v8 + 64);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v17, 1, v12))
      {
        sub_23202CAC8(0);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        v14(v16, v17, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v12);
      }
      goto LABEL_9;
    }
    if (!EnumCaseMultiPayload)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_232030DE8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    sub_23202E710();
    v7 = v6;
    v8 = *(int *)(v6 + 48);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_2321FE6D4();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v13(v9, v10, v11);
    v14 = *(int *)(v7 + 64);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v16, 1, v11))
    {
      sub_23202CAC8(0);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v13(v15, v16, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_232030F1C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  if (a1 != a2)
  {
    sub_232002CEC((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory.GenerationError);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      sub_23202E710();
      v7 = v6;
      v8 = *(int *)(v6 + 48);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_2321FE6D4();
      v12 = *(_QWORD *)(v11 - 8);
      v13 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v13(v9, v10, v11);
      v14 = *(int *)(v7 + 64);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v16, 1, v11))
      {
        sub_23202CAC8(0);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        v13(v15, v16, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for SummaryModelConfiguration.ModelIdentifierKind(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for SummaryModelConfiguration.ModelIdentifierKind(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_232031084()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_232031094()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[6];

  v5[4] = &unk_2322111C0;
  v0 = sub_2321FE6D4();
  if (v1 <= 0x3F)
  {
    sub_23202CAC8(319);
    if (v3 > 0x3F)
    {
      return v2;
    }
    else
    {
      swift_getTupleTypeLayout3();
      v5[5] = v5;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return v0;
}

void destroy for AlertFeedItemWithNotificationSchedulerFactory(id *a1)
{

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

}

uint64_t initializeWithCopy for AlertFeedItemWithNotificationSchedulerFactory(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v7;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v8;
  v9 = *(void **)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v9;
  v10 = v3;
  v11 = v4;
  v12 = v5;
  v13 = v6;
  v14 = v7;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v15 = v9;
  return a1;
}

uint64_t assignWithCopy for AlertFeedItemWithNotificationSchedulerFactory(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  v13 = *(void **)(a2 + 24);
  v14 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v13;
  v15 = v13;

  v16 = *(void **)(a2 + 32);
  v17 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v16;
  v18 = v16;

  v19 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 48) = v19;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_retain();
  swift_release();
  v20 = *(void **)(a2 + 80);
  v21 = *(void **)(a1 + 80);
  *(_QWORD *)(a1 + 80) = v20;
  v22 = v20;

  return a1;
}

__n128 initializeWithTake for AlertFeedItemWithNotificationSchedulerFactory(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for AlertFeedItemWithNotificationSchedulerFactory(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  v6 = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_unknownObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  v8 = *(void **)(a1 + 80);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);

  return a1;
}

uint64_t getEnumTagSinglePayload for AlertFeedItemWithNotificationSchedulerFactory(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AlertFeedItemWithNotificationSchedulerFactory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AlertFeedItemWithNotificationSchedulerFactory()
{
  return &type metadata for AlertFeedItemWithNotificationSchedulerFactory;
}

uint64_t sub_2320314BC@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23202BCC4(*a1, *(void **)(v2 + 16), 0xD000000000000034, 0x80000002322031E0);
  *a2 = result;
  return result;
}

uint64_t sub_232031504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23202D234(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 40) & ~v2;

  swift_bridgeObjectRelease();
  v4 = sub_2321FDC6C();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v3, v4);
  return swift_deallocObject();
}

uint64_t sub_2320315A8(uint64_t a1)
{
  return sub_2320315C4(a1, 0xD000000000000034, 0x80000002322031E0);
}

uint64_t sub_2320315C4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;

  sub_23202D234(0);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80);
  return sub_23202C06C(a1, *(char **)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), v3 + ((v8 + 40) & ~v8), a2, a3) & 1;
}

uint64_t sub_232031638@<X0>(uint64_t a1@<X8>)
{
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  _OWORD v9[2];
  _BYTE v10[24];
  uint64_t v11;

  sub_232031768();
  v2 = (void *)sub_232201344();
  sub_2321FE44C();
  v3 = (void *)sub_232200E94();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_valueForKey_, v3);

  if (v4)
  {
    sub_232201758();

    swift_unknownObjectRelease();
  }
  else
  {

    memset(v9, 0, sizeof(v9));
  }
  sub_2320317A4((uint64_t)v9, (uint64_t)v10);
  if (v11)
  {
    v5 = sub_2321FDC6C();
    v6 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a1, v6 ^ 1u, 1, v5);
  }
  else
  {
    sub_232031840((uint64_t)v10);
    v8 = sub_2321FDC6C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, 1, 1, v8);
  }
}

unint64_t sub_232031768()
{
  unint64_t result;

  result = qword_2541B0C30;
  if (!qword_2541B0C30)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2541B0C30);
  }
  return result;
}

uint64_t sub_2320317A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2320317E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_2320317E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B5890)
  {
    v0 = sub_2322016F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B5890);
  }
}

uint64_t sub_232031840(uint64_t a1)
{
  uint64_t v2;

  sub_2320317E8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for AFibBurdenAdditionalInputSignalsProvider()
{
  return &type metadata for AFibBurdenAdditionalInputSignalsProvider;
}

uint64_t sub_23203188C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v0 = sub_2321FFB5C();
  MEMORY[0x24BDAC7A8](v0);
  sub_232031990();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_232210D30;
  v2 = sub_2321FFB44();
  *(_QWORD *)(v1 + 56) = v2;
  v3 = sub_232031A38();
  *(_QWORD *)(v1 + 64) = v3;
  sub_2320251BC((uint64_t *)(v1 + 32));
  sub_2321FFB50();
  sub_2321FFB38();
  sub_2321FFB74();
  *(_QWORD *)(v1 + 96) = v2;
  *(_QWORD *)(v1 + 104) = v3;
  sub_2320251BC((uint64_t *)(v1 + 72));
  sub_2321FFB68();
  return v1;
}

void sub_232031990()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B7190)
  {
    sub_2320319E4();
    v0 = sub_232201AC4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B7190);
  }
}

unint64_t sub_2320319E4()
{
  unint64_t result;

  result = qword_2541B6B80;
  if (!qword_2541B6B80)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_2541B6B80);
  }
  return result;
}

unint64_t sub_232031A38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B6B38;
  if (!qword_2541B6B38)
  {
    v1 = sub_2321FFB44();
    result = MEMORY[0x2348FF39C](MEMORY[0x24BE47130], v1);
    atomic_store(result, (unint64_t *)&qword_2541B6B38);
  }
  return result;
}

ValueMetadata *type metadata accessor for SummariesFirstRestoreUtilities()
{
  return &type metadata for SummariesFirstRestoreUtilities;
}

uint64_t sub_232031A90@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_232201578();
  *a1 = result & 1;
  return result;
}

uint64_t sub_232031AC4(unsigned __int8 *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  ValueMetadata *v14;
  uint64_t v15;

  v2 = sub_23220039C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *a1;
  sub_232200318();
  v7 = sub_232200390();
  v8 = sub_2322012FC();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    *(_DWORD *)v9 = 136315394;
    v14 = &type metadata for SummariesFirstRestoreUtilities;
    v15 = v10;
    sub_232035964();
    v11 = sub_232200F00();
    v14 = (ValueMetadata *)sub_232013174(v11, v12, &v15);
    sub_232201710();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 1024;
    LODWORD(v14) = v6;
    sub_232201710();
    _os_log_impl(&dword_231FFB000, v7, v8, "[%s]: Received new firstRestoreConcluded value: %{BOOL}d", (uint8_t *)v9, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v10, -1, -1);
    MEMORY[0x2348FF468](v9, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_232031C80(uint64_t a1, uint64_t (*a2)(void), uint64_t a3)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  id v18;
  void *v19;
  unint64_t v20;
  uint64_t (*v21)(void);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(void);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char *v40;
  char *v41;
  ValueMetadata *v42;
  unint64_t v43;

  v35 = a2;
  v5 = sub_23220039C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v40 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2321FE38C();
  v33 = *(_QWORD *)(v8 - 8);
  v34 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2321FE3BC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v41 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (id)_HKAllObjectTypes();
  sub_232003E9C(0, (unint64_t *)&qword_2541B74A0);
  v15 = sub_232201038();

  v43 = MEMORY[0x24BEE4AF8];
  if ((unint64_t)v15 >> 62)
  {
    if (v15 < 0)
      v14 = v15;
    else
      v14 = (v15 & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
    v16 = sub_232201998();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v38 = v6;
  v39 = v5;
  v36 = v12;
  v37 = v11;
  if (v16)
  {
    if (v16 < 1)
    {
      __break(1u);
LABEL_26:
      swift_bridgeObjectRetain();
      v29 = sub_232201998();
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    v32 = a3;
    for (i = 0; i != v16; ++i)
    {
      if ((v15 & 0xC000000000000001) != 0)
        v18 = (id)MEMORY[0x2348FEA30](i, v15);
      else
        v18 = *(id *)(v15 + 8 * i + 32);
      v19 = v18;
      if (objc_msgSend(v18, sel_enabled))
      {
        sub_2322018E4();
        sub_232201908();
        sub_232201914();
        sub_2322018F0();
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease();
    v20 = v43;
    a3 = v32;
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = MEMORY[0x24BEE4AF8];
  }
  v22 = v34;
  v21 = v35;
  v23 = v33;
  sub_2321FE3F8();
  (*(void (**)(char *, _QWORD, uint64_t))(v23 + 104))(v10, *MEMORY[0x24BE47910], v22);
  v24 = (uint64_t)v41;
  sub_2321FE3A4();
  v25 = sub_2320348B8(a1, v24, v21, a3);
  MEMORY[0x24BDAC7A8](v25);
  *(&v31 - 2) = a1;
  v26 = sub_2320321B4(sub_232034C4C, (uint64_t)(&v31 - 4), v20);
  MEMORY[0x24BDAC7A8](v26);
  *(&v31 - 2) = a1;
  *(&v31 - 1) = v25;
  v5 = sub_23203344C((void (*)(unint64_t *__return_ptr, id *))sub_232034C68, (uint64_t)(&v31 - 4), v26);
  swift_bridgeObjectRelease();
  v10 = v40;
  sub_232200318();
  swift_bridgeObjectRetain_n();
  v14 = sub_232200390();
  LOBYTE(a3) = sub_2322012FC();
  if (!os_log_type_enabled(v14, (os_log_type_t)a3))
  {

    swift_release();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, unint64_t))(v38 + 8))(v10, v39);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v24, v37);
    return v5;
  }
  a1 = swift_slowAlloc();
  v15 = swift_slowAlloc();
  v43 = v15;
  *(_DWORD *)a1 = 136315394;
  v42 = &type metadata for DiskSummaryModelConfigurationProvider;
  sub_232034C80();
  v27 = sub_232200F00();
  v42 = (ValueMetadata *)sub_232013174(v27, v28, (uint64_t *)&v43);
  sub_232201710();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 12) = 2048;
  if (v5 >> 62)
    goto LABEL_26;
  v29 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_18:
  swift_bridgeObjectRelease();
  v42 = (ValueMetadata *)v29;
  sub_232201710();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_231FFB000, v14, (os_log_type_t)a3, "[%s]: Extracted %ld summary model configurations for generation", (uint8_t *)a1, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x2348FF468](v15, -1, -1);
  MEMORY[0x2348FF468](a1, -1, -1);

  swift_release();
  (*(void (**)(char *, unint64_t))(v38 + 8))(v10, v39);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v41, v37);
  return v5;
}

uint64_t sub_2320321A0(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  return sub_2320321B4(a1, a2, a3);
}

uint64_t sub_2320321B4(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;

  v4 = a3;
  v19 = MEMORY[0x24BEE4AF8];
  if (a3 >> 62)
    goto LABEL_18;
  v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      v8 = 0;
      v16 = v4 & 0xFFFFFFFFFFFFFF8;
      v17 = v4 & 0xC000000000000001;
      v15 = v4;
      while (v17)
      {
        v9 = (id)MEMORY[0x2348FEA30](v8, v4);
LABEL_9:
        v10 = v9;
        v11 = v8 + 1;
        if (__OFADD__(v8, 1))
          goto LABEL_17;
        v18 = v9;
        v12 = a2;
        v13 = a1(&v18);
        if (v3)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return v12;
        }
        if ((v13 & 1) != 0)
        {
          sub_2322018E4();
          sub_232201908();
          v4 = v15;
          sub_232201914();
          sub_2322018F0();
        }
        else
        {

        }
        ++v8;
        if (v11 == v7)
        {
          v12 = v19;
          goto LABEL_20;
        }
      }
      if (v8 < *(_QWORD *)(v16 + 16))
        break;
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      v7 = sub_232201998();
      if (!v7)
        goto LABEL_19;
    }
    v9 = *(id *)(v4 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_19:
  v12 = MEMORY[0x24BEE4AF8];
LABEL_20:
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_232032358(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(_QWORD);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v27 = sub_2321FDEC4();
  v7 = *(_QWORD *)(v27 - 8);
  v8 = MEMORY[0x24BDAC7A8](v27);
  v26 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v20 - v11;
  v13 = MEMORY[0x24BEE4AF8];
  v28 = MEMORY[0x24BEE4AF8];
  v25 = *(_QWORD *)(a3 + 16);
  if (v25)
  {
    v14 = 0;
    v22 = a2;
    v23 = a3;
    v21 = a1;
    while (v14 < *(_QWORD *)(a3 + 16))
    {
      v15 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      v13 = *(_QWORD *)(v7 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v12, a3 + v15 + v13 * v14, v27);
      v16 = a1(v12);
      if (v3)
      {
        (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v27);
        swift_bridgeObjectRelease();
        swift_release();
        return v13;
      }
      if ((v16 & 1) != 0)
      {
        v24 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
        v24(v26, v12, v27);
        v17 = v28;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_232013930(0, *(_QWORD *)(v17 + 16) + 1, 1);
          v17 = v28;
        }
        v19 = *(_QWORD *)(v17 + 16);
        v18 = *(_QWORD *)(v17 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_232013930(v18 > 1, v19 + 1, 1);
          v17 = v28;
        }
        *(_QWORD *)(v17 + 16) = v19 + 1;
        result = ((uint64_t (*)(unint64_t, char *, uint64_t))v24)(v17 + v15 + v19 * v13, v26, v27);
        v28 = v17;
        a3 = v23;
        a1 = v21;
      }
      else
      {
        result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v27);
      }
      if (v25 == ++v14)
      {
        v13 = v28;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

void sub_232032568(void **a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t inited;
  char v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  unsigned int v31;
  _QWORD v32[2];
  int v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[4];
  uint64_t v37[4];
  uint64_t v38;

  v38 = sub_23220039C();
  v3 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v5 = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0];
  sub_2320057B8(0, (unint64_t *)&qword_2541B2A70, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v32 - v8;
  v10 = *a1;
  sub_232201194();
  v11 = sub_2321FFD78();
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v9, 1, v11);
  sub_232016D88((uint64_t)v9, (unint64_t *)&qword_2541B2A70, v6);
  if ((_DWORD)a1 == 1)
    return;
  sub_232035344(0, (unint64_t *)&qword_2541B78C8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232210D20;
  *(_QWORD *)(inited + 32) = objc_msgSend((id)objc_opt_self(), sel_activitySummaryType);
  v37[0] = inited;
  sub_232201050();
  v13 = sub_232032A18((uint64_t)v10, v37[0]);
  swift_bridgeObjectRelease();
  if ((v13 & 1) != 0)
  {
    sub_232200354();
    v14 = v10;
    v15 = sub_232200390();
    v16 = sub_2322012FC();
    v17 = v16;
    if (os_log_type_enabled(v15, v16))
    {
      v18 = swift_slowAlloc();
      v33 = v17;
      v19 = v18;
      v34 = swift_slowAlloc();
      v37[0] = v34;
      *(_DWORD *)v19 = 136315394;
      v36[0] = &type metadata for DiskSummaryModelConfigurationProvider;
      sub_232034C80();
      v20 = sub_232200F00();
      v35 = v1;
      v36[0] = sub_232013174(v20, v21, v37);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2080;
      v32[1] = v19 + 14;
      v22 = v14;
      v23 = objc_msgSend(v22, sel_description);
      v24 = sub_232200EC4();
      v26 = v25;

      v36[0] = sub_232013174(v24, v26, v37);
      sub_232201710();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v15, (os_log_type_t)v33, "[%s]: Excluding this configuration because it's in our exclusion list: %s", (uint8_t *)v19, 0x16u);
      v27 = v34;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v27, -1, -1);
      MEMORY[0x2348FF468](v19, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v38);
    return;
  }
  v28 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (!v28)
  {
    __break(1u);
    goto LABEL_14;
  }
  v29 = v28;
  v30 = objc_msgSend(v28, sel_features);

  if (!v30)
  {
LABEL_14:
    __break(1u);
    return;
  }
  v31 = objc_msgSend(v30, sel_snidgets);

  if (v31 && (sub_2321FE404() & 1) != 0)
  {
    sub_2321FE3D4();
    sub_232016AD8(v37, v37[3]);
    sub_2321FE338();
    sub_232016AD8(v36, v36[3]);
    sub_232201140();
    sub_2321FE71C();
    swift_bridgeObjectRelease();
    sub_232016AFC((uint64_t)v36);
    sub_232016AFC((uint64_t)v37);
  }
}

uint64_t sub_232032A18(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  char v7;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  id v13;
  char v14;

  if (a2 >> 62)
    goto LABEL_20;
  v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; v3 = sub_232201998())
  {
    v4 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      v5 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      v5 = (id)MEMORY[0x2348FEA30](0, a2);
LABEL_5:
      v6 = v5;
      sub_232003E9C(0, (unint64_t *)&qword_2541B74A0);
      v7 = sub_2322016A4();

      if ((v7 & 1) != 0)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v3 == 1)
        goto LABEL_18;
      if (v4)
        break;
      v4 = 5;
      while (1)
      {
        v12 = v4 - 3;
        if (__OFADD__(v4 - 4, 1))
          break;
        v13 = *(id *)(a2 + 8 * v4);
        v14 = sub_2322016A4();

        if ((v14 & 1) != 0)
          goto LABEL_6;
        ++v4;
        if (v12 == v3)
          goto LABEL_18;
      }
      __break(1u);
    }
    v9 = 1;
    while (1)
    {
      MEMORY[0x2348FEA30](v9, a2);
      v10 = v9 + 1;
      if (__OFADD__(v9, 1))
        break;
      v11 = sub_2322016A4();
      swift_unknownObjectRelease();
      if ((v11 & 1) != 0)
        goto LABEL_6;
      ++v9;
      if (v10 == v3)
        goto LABEL_18;
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

void sub_232032B9C(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  unint64_t v16;
  id v17;
  unint64_t v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  os_log_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD v41[3];
  os_log_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  ValueMetadata *v46;
  uint64_t v47;
  uint64_t v48;

  v9 = sub_23220039C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  objc_opt_self();
  v14 = swift_dynamicCastObjCClass();
  if (v14)
  {
    v15 = (void *)v14;
    v16 = MEMORY[0x24BEE4AF8];
    *a4 = MEMORY[0x24BEE4AF8];
    v17 = v13;
    v18 = sub_232034CB8(v15, a2);
    sub_23209D3F4(v18);
    if ((sub_2321FE404() & 1) == 0)
    {
      v19 = (void *)sub_2321FE3F8();
      v20 = (void *)sub_2321FE1A0();

      if (v20 && (v21 = objc_msgSend(v20, sel_type), v20, v21 == (id)3))
      {
        v16 = MEMORY[0x24BEE4AF8];
      }
      else
      {
        v37 = sub_2321FFDC0();
        v38 = v17;
        swift_retain();
        v16 = sub_23203468C(v37, v15, a3);
        swift_bridgeObjectRelease();

        swift_release();
      }
    }
    sub_23209D3F4(v16);
    sub_232032F2C(v15, a2, a3);
    sub_23209D3F4(v39);
    sub_232035054(v15, a2, a3);
    sub_23209D3F4(v40);

  }
  else
  {
    sub_232200354();
    v22 = v13;
    v23 = sub_232200390();
    v24 = sub_2322012FC();
    v25 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      v26 = swift_slowAlloc();
      v43 = v25;
      v27 = v26;
      v44 = swift_slowAlloc();
      v48 = v44;
      *(_DWORD *)v27 = 136315394;
      v45 = v4;
      v46 = &type metadata for DiskSummaryModelConfigurationProvider;
      sub_232034C80();
      v42 = v23;
      v28 = sub_232200F00();
      v46 = (ValueMetadata *)sub_232013174(v28, v29, &v48);
      v41[2] = &v47;
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2080;
      v41[1] = v27 + 14;
      v30 = v22;
      v31 = objc_msgSend(v30, sel_description);
      v32 = sub_232200EC4();
      v34 = v33;

      v46 = (ValueMetadata *)sub_232013174(v32, v34, &v48);
      sub_232201710();

      swift_bridgeObjectRelease();
      v35 = v42;
      _os_log_impl(&dword_231FFB000, v42, (os_log_type_t)v43, "[%s]: Summaries only supports sample types; you'll need a special configuration for %s",
        (uint8_t *)v27,
        0x16u);
      v36 = v44;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v36, -1, -1);
      MEMORY[0x2348FF468](v27, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    *a4 = MEMORY[0x24BEE4AF8];
  }
}

void sub_232032F2C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  unsigned int v16;
  id v17;
  void *v18;
  id v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v45 = a3;
  sub_2320057B8(0, (unint64_t *)&qword_2541B2A70, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v44 - v5;
  v7 = type metadata accessor for SummaryModelConfiguration.Kind(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (uint64_t *)((char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = (void *)sub_2321FE3F8();
  v11 = (void *)sub_2321FE1A0();

  if (v11)
  {
    v12 = objc_msgSend(v11, sel_type);

    if (v12 == (id)3)
    {
      v13 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
      if (!v13)
      {
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
      v14 = v13;
      v15 = objc_msgSend(v13, sel_features);

      if (!v15)
      {
LABEL_28:
        __break(1u);
        return;
      }
      v16 = objc_msgSend(v15, sel_snidgetsTinker);

      if (!v16)
        return;
    }
  }
  v17 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (!v17)
  {
    __break(1u);
    goto LABEL_26;
  }
  v18 = v17;
  v19 = objc_msgSend(v17, sel_features);

  if (!v19)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v20 = objc_msgSend(v19, sel_snidgets);

  if ((v20 & 1) == 0 && (sub_2321FE404() & 1) != 0)
    return;
  v47 = MEMORY[0x24BEE4AF8];
  v21 = HKObjectType.summaryChartModelConfiguration.getter();
  v22 = v21;
  v24 = v23;
  if (v21)
  {
    if (v21 == 1)
      return;
    sub_232035344(0, (unint64_t *)&qword_2541B78C8);
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_232210D20;
    *(_QWORD *)(v25 + 32) = a1;
    v46 = v25;
    sub_232201050();
    v26 = v46;
    sub_232025384();
    v28 = (uint64_t)v9 + *(int *)(v27 + 48);
    v29 = *(int *)(v27 + 64);
    *v9 = v22;
    v30 = sub_2321FFD78();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v6, 1, 1, v30);
    swift_bridgeObjectRetain();
    sub_232033C50(a1, 0, (uint64_t)v6, v28);
    sub_232016D88((uint64_t)v6, (unint64_t *)&qword_2541B2A70, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0]);
    *(uint64_t *)((char *)v9 + v29) = v45;
    swift_storeEnumTagMultiPayload();
    type metadata accessor for SummaryModelConfiguration(0);
    v31 = swift_allocObject();
    sub_232035280((uint64_t)v9, v31 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind);
    *(_QWORD *)(v31 + 16) = v26;
    *(_BYTE *)(v31 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_audience) = 0;
    v32 = swift_retain();
    MEMORY[0x2348FE190](v32);
    if (*(_QWORD *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_23220105C();
    sub_232201074();
    sub_232201050();
  }
  if ((sub_2321FE404() & 1) != 0 || (v33 = (void *)sub_2321FE3F8(), v34 = sub_232034E90(), v33, !v34))
  {
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  if (!v24)
  {
LABEL_23:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRelease();
  sub_232035344(0, (unint64_t *)&qword_2541B78C8);
  v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_232210D20;
  *(_QWORD *)(v35 + 32) = a1;
  v46 = v35;
  sub_232201050();
  v36 = v46;
  sub_232025384();
  v38 = (uint64_t)v9 + *(int *)(v37 + 48);
  v39 = *(int *)(v37 + 64);
  *v9 = v24;
  v40 = sub_2321FFD78();
  v41 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0];
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v6, 1, 1, v40);
  sub_232033C50(a1, 1, (uint64_t)v6, v38);
  sub_232016D88((uint64_t)v6, (unint64_t *)&qword_2541B2A70, v41);
  *(uint64_t *)((char *)v9 + v39) = v45;
  swift_storeEnumTagMultiPayload();
  type metadata accessor for SummaryModelConfiguration(0);
  v42 = swift_allocObject();
  sub_232035280((uint64_t)v9, v42 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind);
  *(_QWORD *)(v42 + 16) = v36;
  *(_BYTE *)(v42 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_audience) = 1;
  v43 = swift_retain();
  MEMORY[0x2348FE190](v43);
  if (*(_QWORD *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_23220105C();
  sub_232201074();
  sub_232201050();
}

uint64_t sub_23203344C(void (*a1)(unint64_t *__return_ptr, id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t i;
  id v8;
  void *v9;
  uint64_t v10;
  unint64_t v12;
  id v13;
  uint64_t v14;

  v14 = MEMORY[0x24BEE4AF8];
  if (a3 >> 62)
    goto LABEL_13;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; v6 = sub_232201998())
  {
    for (i = 4; ; ++i)
    {
      v8 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2348FEA30](i - 4, a3) : *(id *)(a3 + 8 * i);
      v9 = v8;
      v10 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v13 = v8;
      a1(&v12, &v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return swift_bridgeObjectRelease();
      }

      sub_23209D3F4(v12);
      if (v10 == v6)
      {
        swift_bridgeObjectRelease();
        return v14;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_232033598@<X0>(unsigned __int8 *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  void *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  int v67;
  uint64_t *v68;
  uint64_t v69;

  v68 = a3;
  v65 = type metadata accessor for SummaryModelConfiguration.Kind(0);
  v5 = MEMORY[0x24BDAC7A8](v65);
  v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v66 = (char *)&v60 - v8;
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v60 - v11;
  sub_2320057B8(0, (unint64_t *)&qword_2541B2A70, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0], v9);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v60 - v17;
  v19 = sub_2321FFD78();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = *a1;
  v23 = a2;
  sub_232201194();
  v24 = v20;
  v25 = v19;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v18, 1, v19) != 1)
  {
    v63 = v7;
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v22, v18, v19);
    v28 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
    v28(v16, v22, v19);
    v62 = v24;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v16, 0, 1, v19);
    v29 = v23;
    sub_232033C50(v23, v67, (uint64_t)v16, (uint64_t)v12);
    sub_232016D88((uint64_t)v16, (unint64_t *)&qword_2541B2A70, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0]);
    sub_232035388();
    v31 = v66;
    v32 = (uint64_t)&v66[*(int *)(v30 + 48)];
    v28(v66, v22, v19);
    v64 = v12;
    sub_232016080((uint64_t)v12, v32, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
    swift_storeEnumTagMultiPayload();
    v33 = objc_msgSend(v29, sel_identifier);
    v34 = sub_232200EC4();
    v36 = v35;

    v37 = sub_232200EC4();
    v61 = v22;
    if (v37 == v34 && v38 == v36)
    {
      v39 = (uint64_t)v31;
      swift_bridgeObjectRelease();
    }
    else
    {
      v39 = (uint64_t)v31;
      v40 = sub_232201ADC();
      swift_bridgeObjectRelease();
      if ((v40 & 1) == 0)
      {
        v49 = sub_232200EC4();
        v51 = (uint64_t)v64;
        if (v49 == v34 && v50 == v36)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v52 = sub_232201ADC();
          swift_bridgeObjectRelease();
          if ((v52 & 1) == 0)
          {
            if (sub_232200EC4() == v34 && v55 == v36)
            {
              swift_bridgeObjectRelease_n();
              v56 = (uint64_t)v63;
            }
            else
            {
              v57 = sub_232201ADC();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v56 = (uint64_t)v63;
              if ((v57 & 1) == 0)
              {
                sub_232035344(0, (unint64_t *)&qword_2541B78C8);
                v58 = swift_allocObject();
                *(_OWORD *)(v58 + 16) = xmmword_232210D20;
                *(_QWORD *)(v58 + 32) = v29;
                v69 = v58;
                sub_232201050();
                v42 = v69;
                v59 = v29;
                sub_232016D88(v51, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
                (*(void (**)(char *, uint64_t))(v62 + 8))(v61, v25);
                sub_232035280(v39, v56);
                type metadata accessor for SummaryModelConfiguration(0);
                v27 = swift_allocObject();
                v47 = v27 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind;
                v48 = v56;
                goto LABEL_9;
              }
            }
            sub_232035410(v39, v56);
            type metadata accessor for BalanceSummaryModelConfiguration();
            swift_allocObject();
            v27 = (uint64_t)sub_2321BE9B4(v56, v67);
            sub_232035454(v39);
            sub_232016D88(v51, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
            result = (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v61, v25);
            goto LABEL_10;
          }
        }
        swift_bridgeObjectRelease();
        sub_232035344(0, (unint64_t *)&qword_2541B78C8);
        v53 = swift_allocObject();
        *(_OWORD *)(v53 + 16) = xmmword_232210D20;
        *(_QWORD *)(v53 + 32) = v29;
        v69 = v53;
        sub_232201050();
        v42 = v69;
        v54 = v29;
        sub_232016D88(v51, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
        (*(void (**)(char *, uint64_t))(v62 + 8))(v61, v25);
        v44 = (uint64_t)v63;
        sub_232035280(v39, (uint64_t)v63);
        type metadata accessor for AFibBurdenSummaryModelConfiguration();
        v45 = swift_allocObject();
        v27 = v45;
        v46 = OBJC_IVAR____TtC9Summaries35AFibBurdenSummaryModelConfiguration_keyValueDomainChangePublisher;
LABEL_8:
        *(_QWORD *)(v45 + v46) = 0;
        v47 = v45 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind;
        v48 = v44;
LABEL_9:
        result = sub_232035280(v48, v47);
        *(_QWORD *)(v27 + 16) = v42;
        *(_BYTE *)(v27 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_audience) = v67;
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    sub_232035344(0, (unint64_t *)&qword_2541B78C8);
    v41 = swift_allocObject();
    *(_OWORD *)(v41 + 16) = xmmword_232210D20;
    *(_QWORD *)(v41 + 32) = v29;
    v69 = v41;
    sub_232201050();
    v42 = v69;
    v43 = v29;
    sub_232016D88((uint64_t)v64, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v61, v25);
    v44 = (uint64_t)v63;
    sub_232035280(v39, (uint64_t)v63);
    type metadata accessor for CardioFitnessSummaryModelConfiguration();
    v45 = swift_allocObject();
    v27 = v45;
    *(_QWORD *)(v45 + OBJC_IVAR____TtC9Summaries38CardioFitnessSummaryModelConfiguration_characteristicChangePublisher) = 0;
    v46 = OBJC_IVAR____TtC9Summaries38CardioFitnessSummaryModelConfiguration_featureStatusChangePublisher;
    goto LABEL_8;
  }
  result = sub_232016D88((uint64_t)v18, (unint64_t *)&qword_2541B2A70, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0]);
  v27 = 0;
LABEL_10:
  *v68 = v27;
  return result;
}

id sub_232033C50@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  void *v38;
  id v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  unint64_t v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  char v59;
  void (*v60)(char *, uint64_t);
  id result;
  void *v62;
  char *v63;
  char *v64;
  id v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char v71;
  char *v72;
  char v73;
  char *v74;
  char *v75;
  void (*v76)(char *, char *, uint64_t);
  char *v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t);
  uint64_t v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, unint64_t, uint64_t);
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  void (*v104)(char *, uint64_t);
  void *v105;

  v103 = (char *)a3;
  v105 = a1;
  v99 = a4;
  LODWORD(v102) = a2 & 1;
  v5 = sub_2321FDDD4();
  v94 = *(_QWORD *)(v5 - 8);
  v95 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v93 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v96 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v85 = (char *)&v81 - v11;
  v92 = sub_2321FFC94();
  v86 = *(_QWORD *)(v92 - 8);
  v12 = MEMORY[0x24BDAC7A8](v92);
  v90 = (char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v91 = (char *)&v81 - v14;
  v15 = sub_232200024();
  v88 = *(_QWORD *)(v15 - 8);
  v89 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v87 = (char *)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, (unint64_t *)&qword_2541B2A70, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0], v7);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v81 - v18;
  sub_2320344CC();
  v21 = v20;
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v81 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_2321FDC6C();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v98 = (char *)&v81 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v97 = (char *)&v81 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&v81 - v31;
  v33 = MEMORY[0x24BDAC7A8](v30);
  v35 = (char *)&v81 - v34;
  MEMORY[0x24BDAC7A8](v33);
  v37 = (char *)&v81 - v36;
  sub_2321FDC60();
  v38 = (void *)sub_2321FDBF4();
  v100 = v25;
  v104 = *(void (**)(char *, uint64_t))(v25 + 8);
  v104(v35, v24);
  v39 = (id)HKEndOfDayForDate();

  v101 = v37;
  sub_2321FDC30();

  v40 = *(int *)(v21 + 64);
  v41 = v105;
  v42 = (uint64_t)&v23[v40];
  *v23 = v102;
  *((_QWORD *)v23 + 1) = v41;
  sub_232016080((uint64_t)v103, (uint64_t)&v23[v40], (unint64_t *)&qword_2541B2A70, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0]);
  if ((a2 & 1) != 0)
  {
    v103 = v32;
    objc_opt_self();
    v45 = swift_dynamicCastObjCClass();
    v46 = v96;
    if (v45)
    {
      v47 = (void *)v45;
      v48 = sub_2321FFD78();
      v49 = *(_QWORD *)(v48 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v42, 1, v48) != 1)
      {
        sub_232016080(v42, (uint64_t)v19, (unint64_t *)&qword_2541B2A70, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0]);
        if ((*(unsigned int (**)(char *, uint64_t))(v49 + 88))(v19, v48) == *MEMORY[0x24BE4AD28])
        {
          v83 = v42;
          (*(void (**)(char *, uint64_t))(v49 + 96))(v19, v48);
          (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v87, v19, v89);
          v50 = v41;
          v51 = sub_2321FFFF4();
          v52 = v86;
          v54 = v91;
          v53 = v92;
          (*(void (**)(char *, _QWORD, uint64_t))(v86 + 104))(v91, *MEMORY[0x24BE4ABC8], v92);
          v102 = *(_QWORD *)(v51 + 16);
          if (v102)
          {
            v81 = v50;
            v55 = (*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
            v82 = v51;
            v56 = v51 + v55;
            v57 = v90;
            v84 = *(void (**)(char *, unint64_t, uint64_t))(v52 + 16);
            v84(v90, v56, v53);
            sub_232000590(&qword_2541B2A20, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ABE8], MEMORY[0x24BE4AC08]);
            v58 = v53;
            v59 = sub_232200E64();
            v60 = *(void (**)(char *, uint64_t))(v52 + 8);
            v60(v57, v58);
            if ((v59 & 1) != 0)
            {
LABEL_8:
              v60(v91, v92);
              swift_bridgeObjectRelease();
              result = objc_msgSend(v47, sel__rollingBaselineConfiguration);
              v42 = v83;
              if (result)
              {
                v62 = result;
                objc_msgSend(result, sel_maximumWindowDuration);

                v63 = v93;
                sub_2321FDDA4();
                v64 = v85;
                v44 = v101;
                sub_2321FDBD0();
                (*(void (**)(char *, uint64_t))(v94 + 8))(v63, v95);
                v43 = v100;
                result = (id)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v100 + 48))(v64, 1, v24);
                v32 = v103;
                if ((_DWORD)result != 1)
                {
                  sub_2321FDC18();
                  v65 = v81;

                  (*(void (**)(char *, uint64_t))(v88 + 8))(v87, v89);
                  v104(v64, v24);
                  goto LABEL_24;
                }
LABEL_31:
                __break(1u);
                return result;
              }
LABEL_30:
              __break(1u);
              goto LABEL_31;
            }
            if (v102 != 1)
            {
              v86 = *(_QWORD *)(v86 + 72);
              v67 = v82 + v86 + v55;
              v68 = 1;
              v66 = v92;
              while (1)
              {
                v69 = v90;
                result = (id)((uint64_t (*)(char *, unint64_t, uint64_t))v84)(v90, v67, v66);
                v70 = v68 + 1;
                if (__OFADD__(v68, 1))
                  break;
                v71 = sub_232200E64();
                v72 = v69;
                v73 = v71;
                v60(v72, v66);
                if ((v73 & 1) != 0)
                  goto LABEL_8;
                ++v68;
                v67 += v86;
                v66 = v92;
                if (v70 == v102)
                {
                  v46 = v96;
                  goto LABEL_20;
                }
              }
              __break(1u);
LABEL_29:
              __break(1u);
              goto LABEL_30;
            }
            v46 = v96;
            v66 = v92;
LABEL_20:
            v50 = v81;
            v60(v91, v66);
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v52 + 8))(v54, v53);
          }

          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v88 + 8))(v87, v89);
          v42 = v83;
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v49 + 8))(v19, v48);
        }
      }
    }
    v74 = v93;
    sub_2321FDDA4();
    v44 = v101;
    sub_2321FDBD0();
    (*(void (**)(char *, uint64_t))(v94 + 8))(v74, v95);
    v43 = v100;
    result = (id)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v100 + 48))(v46, 1, v24);
    if ((_DWORD)result != 1)
    {
      v32 = v103;
      (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v103, v46, v24);
      goto LABEL_24;
    }
    goto LABEL_29;
  }
  sub_2321FDBA0();
  v43 = v100;
  v44 = v101;
LABEL_24:
  sub_232016D88(v42, (unint64_t *)&qword_2541B2A70, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0]);
  if ((sub_232201188() & 1) != 0)
  {
    v75 = v97;
    sub_2321FDBAC();
    v76 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
  }
  else
  {
    v76 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
    v75 = v97;
    v76(v97, v44, v24);
  }
  v77 = v98;
  v76(v35, v32, v24);
  v76(v77, v75, v24);
  v78 = v99;
  sub_2321FD87C();
  v79 = v104;
  v104(v75, v24);
  v79(v32, v24);
  v79(v44, v24);
  v80 = sub_2321FD8B8();
  return (id)(*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56))(v78, 0, 1, v80);
}

void sub_2320344CC()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_2541B3928)
  {
    sub_232003E9C(255, (unint64_t *)&qword_2541B74A0);
    sub_2320057B8(255, (unint64_t *)&qword_2541B2A70, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_2541B3928);
  }
}

uint64_t sub_23203456C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_232034574(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t i;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;

  result = MEMORY[0x24BEE4AF8];
  v11 = MEMORY[0x24BEE4AF8];
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v5; ++i)
    {
      v10 = *(_BYTE *)(a1 + i + 32);
      v8 = sub_232033598(&v10, a2, &v9);
      if (v2)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (v9)
      {
        MEMORY[0x2348FE190](v8);
        if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23220105C();
        sub_232201074();
        sub_232201050();
      }
    }
    swift_bridgeObjectRelease();
    return v11;
  }
  return result;
}

uint64_t sub_23203468C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  _QWORD v23[2];
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v28 = type metadata accessor for SummaryModelConfiguration.Kind(0);
  MEMORY[0x24BDAC7A8](v28);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BEE4AF8];
  v30 = MEMORY[0x24BEE4AF8];
  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    v23[1] = v3;
    v11 = sub_2321FFE08();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v26 = v12;
    v27 = v11;
    v14 = *(_QWORD *)(v12 + 72);
    v23[0] = a1;
    swift_bridgeObjectRetain();
    v25 = MEMORY[0x24BEE4AD0] + 8;
    v24 = xmmword_232210D20;
    do
    {
      v15 = *(_QWORD *)(sub_2321FFDB4() + 16);
      swift_bridgeObjectRelease();
      if (v15)
      {
        sub_232035344(0, (unint64_t *)&qword_2541B78C8);
        v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = v24;
        *(_QWORD *)(v16 + 32) = a2;
        v29 = v16;
        sub_232201050();
        v17 = v29;
        sub_2320352C4();
        v19 = *(int *)(v18 + 48);
        (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v8, v13, v27);
        *(_QWORD *)&v8[v19] = a3;
        swift_storeEnumTagMultiPayload();
        type metadata accessor for SummaryModelConfiguration(0);
        v20 = swift_allocObject();
        sub_232035280((uint64_t)v8, v20 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind);
        *(_QWORD *)(v20 + 16) = v17;
        *(_BYTE *)(v20 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_audience) = 1;
        v21 = a2;
        v22 = swift_retain();
        MEMORY[0x2348FE190](v22);
        if (*(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23220105C();
        sub_232201074();
        sub_232201050();
      }
      v13 += v14;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    return v30;
  }
  return result;
}

uint64_t sub_2320348B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v28[2];
  uint64_t (*v29)(void);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[4];

  v28[1] = a4;
  v29 = a3;
  v30 = a2;
  sub_232035490();
  v5 = v4;
  v31 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232035614();
  v9 = v8;
  v32 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232035694();
  v13 = *(_QWORD *)(v12 - 8);
  v33 = v12;
  v34 = v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23203570C();
  v17 = *(_QWORD *)(v16 - 8);
  v35 = v16;
  v36 = v17;
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2321FE3D4();
  sub_232016AD8(v38, v38[3]);
  v20 = (void *)sub_2321FE314();
  v21 = v29();

  sub_232016AFC((uint64_t)v38);
  v37 = v21;
  sub_2321FE434();
  sub_232035534();
  sub_232000590(&qword_2541AF2F8, (uint64_t (*)(uint64_t))sub_232035534, MEMORY[0x24BDB9AF8]);
  v22 = sub_232200738();
  sub_232016AFC((uint64_t)v38);
  swift_release();
  v38[0] = v22;
  sub_23220075C();
  swift_release();
  sub_2322004E0();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v5);
  sub_232000590(&qword_2541AF1B8, (uint64_t (*)(uint64_t))sub_232035614, MEMORY[0x24BDB94C8]);
  sub_232200858();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v11, v9);
  sub_232000590(&qword_2541B2BA8, (uint64_t (*)(uint64_t))sub_232035694, MEMORY[0x24BDB9658]);
  v23 = v33;
  sub_23220078C();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v15, v23);
  sub_232000590(&qword_2541B2B58, (uint64_t (*)(uint64_t))sub_23203570C, MEMORY[0x24BDB9568]);
  v24 = v35;
  v25 = sub_232200744();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v19, v24);
  v38[0] = v25;
  sub_232035784();
  sub_232000590(&qword_2541B2B30, (uint64_t (*)(uint64_t))sub_232035784, MEMORY[0x24BDB9510]);
  v26 = sub_232200774();
  swift_release();
  return v26;
}

uint64_t sub_232034C4C(void **a1)
{
  char v1;

  sub_232032568(a1);
  return v1 & 1;
}

void sub_232034C68(void **a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_232032B9C(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

unint64_t sub_232034C80()
{
  unint64_t result;

  result = qword_2541B4808;
  if (!qword_2541B4808)
  {
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_2541B4808);
  }
  return result;
}

uint64_t sub_232034CB8(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t inited;
  char v9;
  void *v10;
  id v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[8];

  v19[7] = *MEMORY[0x24BDAC8D0];
  v4 = sub_2321FE440();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232035344(0, &qword_2541B5820);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232210D40;
  *(_BYTE *)(inited + 32) = 0;
  v9 = sub_2321FE404();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  if ((v9 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    v10 = (void *)sub_2321FE3EC();
    v11 = objc_msgSend(v10, sel_profileIdentifier);

    v12 = objc_msgSend(v11, sel_type);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (v12 == (id)1)
    {
      v14 = *(_QWORD *)(inited + 16);
      v13 = *(_QWORD *)(inited + 24);
      if (v14 >= v13 >> 1)
        inited = (uint64_t)sub_232096CA8((char *)(v13 > 1), v14 + 1, 1, (char *)inited);
      *(_QWORD *)(inited + 16) = v14 + 1;
      *(_BYTE *)(inited + v14 + 32) = 1;
    }
  }
  v15 = a1;
  v16 = swift_bridgeObjectRetain();
  v17 = sub_232034574(v16, v15);
  swift_bridgeObjectRelease_n();

  return v17;
}

BOOL sub_232034E90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  void *v5;
  char *v6;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v0 = sub_23220039C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (void *)sub_2321FE1A0();
  if (v4)
  {
    v5 = v4;
    v6 = (char *)objc_msgSend(v4, sel_type);

    return (unint64_t)(v6 - 1) < 2;
  }
  else
  {
    sub_232200318();
    v8 = sub_232200390();
    v9 = sub_2322012F0();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      v13 = v11;
      *(_DWORD *)v10 = 136315138;
      v12 = sub_232013174(0xD000000000000025, 0x80000002322112A0, &v13);
      sub_232201710();
      _os_log_impl(&dword_231FFB000, v8, v9, "%s: Unable to detect source profile type, we only generate charts for specific profiles", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v11, -1, -1);
      MEMORY[0x2348FF468](v10, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return 0;
  }
}

void sub_232035054(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  __int128 v21;
  uint64_t v22;

  v5 = type metadata accessor for SummaryModelConfiguration.Kind(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (uint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((sub_2321FE404() & 1) == 0)
  {
    v8 = (void *)sub_2321FE3F8();
    v9 = (void *)sub_2321FE1A0();

    if (!v9 || (v10 = objc_msgSend(v9, sel_type), v9, v10 != (id)3))
    {
      v11 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
      if (v11)
      {
        v12 = v11;
        v13 = objc_msgSend(v11, sel_features);

        if (v13)
        {
          v14 = objc_msgSend(v13, sel_bloodPressureTrends);

          if (v14)
          {
            v15 = sub_2321FFDE4();
            sub_232035344(0, (unint64_t *)&qword_2541B78C8);
            v16 = swift_allocObject();
            v21 = xmmword_232210D20;
            *(_OWORD *)(v16 + 16) = xmmword_232210D20;
            v17 = swift_allocObject();
            *(_OWORD *)(v17 + 16) = v21;
            *(_QWORD *)(v17 + 32) = a1;
            v22 = v17;
            sub_232201050();
            v18 = v22;
            *v7 = v15;
            v7[1] = a3;
            swift_storeEnumTagMultiPayload();
            type metadata accessor for SummaryModelConfiguration(0);
            v19 = swift_allocObject();
            sub_232035280((uint64_t)v7, v19 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind);
            *(_QWORD *)(v19 + 16) = v18;
            *(_BYTE *)(v19 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_audience) = 1;
            *(_QWORD *)(v16 + 32) = v19;
            v22 = v16;
            sub_232201050();
            v20 = a1;
            swift_retain();
          }
          return;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
    }
  }
}

uint64_t sub_232035280(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SummaryModelConfiguration.Kind(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_2320352C4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2541B2A78)
  {
    sub_2321FFE08();
    sub_2320358B0(255, (unint64_t *)&qword_2541B2FD8, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2541B2A78);
  }
}

void sub_232035344(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_232201AC4();
    if (!v4)
      atomic_store(v3, a2);
  }
}

void sub_232035388()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2541B2A60)
  {
    sub_2321FFD78();
    sub_2320057B8(255, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2541B2A60);
  }
}

uint64_t sub_232035410(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SummaryModelConfiguration.Kind(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_232035454(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SummaryModelConfiguration.Kind(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_232035490()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2B20)
  {
    sub_232035534();
    sub_232003E9C(255, &qword_2541B10E8);
    sub_232000590(&qword_2541AF2F8, (uint64_t (*)(uint64_t))sub_232035534, MEMORY[0x24BDB9AF8]);
    v0 = sub_2322004EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2B20);
  }
}

void sub_232035534()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B3038)
  {
    sub_232035598();
    v0 = sub_232200624();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B3038);
  }
}

void sub_232035598()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B5880)
  {
    sub_232003E9C(255, &qword_2541B10E8);
    sub_232002B9C();
    v0 = sub_232201BA8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B5880);
  }
}

void sub_232035614()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2B28)
  {
    sub_232035534();
    sub_232000590(&qword_2541AF2F8, (uint64_t (*)(uint64_t))sub_232035534, MEMORY[0x24BDB9AF8]);
    v0 = sub_2322004EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2B28);
  }
}

void sub_232035694()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2BB0)
  {
    sub_232035614();
    sub_232000590(&qword_2541AF1B8, (uint64_t (*)(uint64_t))sub_232035614, MEMORY[0x24BDB94C8]);
    v0 = sub_232200534();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2BB0);
  }
}

void sub_23203570C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2B60)
  {
    sub_232035694();
    sub_232000590(&qword_2541B2BA8, (uint64_t (*)(uint64_t))sub_232035694, MEMORY[0x24BDB9658]);
    v0 = sub_232200510();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2B60);
  }
}

void sub_232035784()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2B38)
  {
    sub_2320357FC();
    sub_232000590(&qword_2541B2E80, (uint64_t (*)(uint64_t))sub_2320357FC, MEMORY[0x24BDB99F0]);
    v0 = sub_2322004F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2B38);
  }
}

void sub_2320357FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2E88)
  {
    sub_23203570C();
    sub_2320358B0(255, &qword_2541B2908, MEMORY[0x24BE41130]);
    sub_232000590(&qword_2541B2B58, (uint64_t (*)(uint64_t))sub_23203570C, MEMORY[0x24BDB9568]);
    sub_23203590C();
    v0 = sub_2322005F4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2E88);
  }
}

void sub_2320358B0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, _QWORD, _QWORD, _QWORD))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, MEMORY[0x24BEE1328], MEMORY[0x24BEE4078], MEMORY[0x24BEE40A8]);
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_23203590C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B2900;
  if (!qword_2541B2900)
  {
    sub_2320358B0(255, &qword_2541B2908, MEMORY[0x24BE41130]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BE41138], v1);
    atomic_store(result, (unint64_t *)&qword_2541B2900);
  }
  return result;
}

unint64_t sub_232035964()
{
  unint64_t result;

  result = qword_2541B3140;
  if (!qword_2541B3140)
  {
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_2541B3140);
  }
  return result;
}

ValueMetadata *type metadata accessor for DiskSummaryModelConfigurationProvider()
{
  return &type metadata for DiskSummaryModelConfigurationProvider;
}

unint64_t sub_2320359AC(uint64_t a1)
{
  unint64_t result;

  result = sub_2320359D0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2320359D0()
{
  unint64_t result;

  result = qword_2541B47F8;
  if (!qword_2541B47F8)
  {
    result = MEMORY[0x2348FF39C](&unk_2322112E8, &type metadata for DiskSummaryModelConfigurationProvider);
    atomic_store(result, (unint64_t *)&qword_2541B47F8);
  }
  return result;
}

id sub_232035A14(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  double v20;
  double v21;
  id v22;
  id v23;
  void *v24;
  id v26[2];

  v26[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = sub_2321FDC6C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26[0] = 0;
  v8 = objc_msgSend(a2, sel_biologicalSexWithError_, v26);
  if (v8
    && (v9 = v8,
        v10 = v26[0],
        v11 = objc_msgSend(v9, sel_biologicalSex),
        v9,
        v26[0] = 0,
        (v12 = objc_msgSend(a2, sel_dateOfBirthComponentsWithError_, v26)) != 0))
  {
    v13 = v12;
    v14 = v26[0];
    v15 = objc_msgSend(a1, sel_endDate);
    sub_2321FDC30();

    v16 = (void *)sub_2321FDBF4();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v17 = objc_msgSend(v13, sel_hk_ageWithCurrentDate_, v16);

    v18 = (void *)objc_opt_self();
    v19 = objc_msgSend(a1, sel_quantity);
    objc_msgSend(v19, sel__value);
    v21 = v20;

    v22 = objc_msgSend(v18, sel_cardioFitnessLevelForVO2Max_biologicalSex_age_, v11, v17, v21);
    v23 = objc_msgSend(v18, sel_cardioFitnessDataForBiologicalSex_age_, v11, v17);
    if (v23)
    {
      v24 = v23;
      sub_232003E9C(0, (unint64_t *)&qword_2541B0D78);
      sub_232003E9C(0, &qword_2541B0C80);
      sub_232036AC0();
      sub_232200DD4();

    }
    else
    {
      sub_232036A7C();
      swift_allocError();
      swift_willThrow();

    }
  }
  else
  {
    v22 = v26[0];
    sub_2321FDA5C();

    swift_willThrow();
  }
  return v22;
}

uint64_t sub_232035CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  ValueMetadata *v38;
  _UNKNOWN **v39;
  __int128 v40;
  uint64_t v41;
  __int128 v42;
  ValueMetadata *v43;
  _UNKNOWN **v44;

  v7 = sub_232200180();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v32 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v32 - v18;
  sub_232036B5C(a2, (uint64_t)&v40, &qword_2541B6EC8, &qword_2541B6EC0);
  sub_232036B18(a1, (uint64_t)v19);
  if (v41)
  {
    swift_retain();
    sub_232003F18((uint64_t)v19);
    sub_2320167F8(&v40, (uint64_t)&v42);
  }
  else
  {
    v32 = *((_QWORD *)v19 + 2);
    v34 = a2;
    v33 = v7;
    v20 = *MEMORY[0x24BDD2DD0];
    v21 = v14;
    v22 = a3;
    v23 = v10;
    v24 = v8;
    v25 = objc_allocWithZone(MEMORY[0x24BDD3BF8]);
    swift_retain();
    v26 = v25;
    v8 = v24;
    v10 = v23;
    a3 = v22;
    v14 = v21;
    v27 = v20;
    v7 = v33;
    a2 = v34;
    v28 = objc_msgSend(v26, sel_initWithFeatureIdentifier_healthStore_currentCountryCode_, v27, v32, 0);
    v43 = &type metadata for HealthStoreCardioFitnessAvailabilityProvider;
    v44 = &off_2500FF318;
    *(_QWORD *)&v42 = v28;
    sub_232003F18((uint64_t)v19);
    sub_2320254AC((uint64_t)&v40, &qword_2541B6EC8, &qword_2541B6EC0);
  }
  sub_2320167F8(&v42, v3 + qword_2541B6FA8);
  sub_232036B5C(a3, (uint64_t)&v35, &qword_2541B6DA0, &qword_2541B6D98);
  sub_232036B18(a1, (uint64_t)v17);
  if (v36)
  {
    sub_232003F18((uint64_t)v17);
    sub_2320167F8(&v35, (uint64_t)&v37);
  }
  else
  {
    v29 = (void *)*((_QWORD *)v17 + 2);
    v38 = &type metadata for HealthStoreCardioFitnessMetadataProvider;
    v39 = &off_2500FF308;
    *(_QWORD *)&v37 = v29;
    v30 = v29;
    sub_232003F18((uint64_t)v17);
    sub_2320254AC((uint64_t)&v35, &qword_2541B6DA0, &qword_2541B6D98);
  }
  sub_2320167F8(&v37, v3 + qword_2541B6FA0);
  swift_release();
  sub_232036B18(a1, (uint64_t)v14);
  sub_232200174();
  sub_2320254AC(a3, &qword_2541B6DA0, &qword_2541B6D98);
  sub_2320254AC(a2, &qword_2541B6EC8, &qword_2541B6EC0);
  sub_232003F18(a1);
  sub_232036BAC((uint64_t)v14, v3 + qword_2541BF5D0);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v3 + qword_2541BF5C8, v10, v7);
  return v3;
}

void sub_232036070(void *a1, void *a2, void (*a3)(id, _QWORD), uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  void *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  char *v49;
  char *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  void (*v55)(id, _QWORD);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;

  v58 = a4;
  v51 = a2;
  v54 = a1;
  v6 = sub_23220039C();
  v56 = *(_QWORD *)(v6 - 8);
  v57 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_2321FDC6C();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23201C800();
  MEMORY[0x24BDAC7A8](v10);
  v50 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2321FFD78();
  v52 = *(_QWORD *)(v12 - 8);
  v53 = v12;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v49 = (char *)&v49 - v16;
  v17 = sub_2321FF844();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232016AD8((_QWORD *)(v4 + qword_2541B6FA8), *(_QWORD *)(v4 + qword_2541B6FA8 + 24));
  sub_232003E9C(0, &qword_2541B27A8);
  sub_2321FF898();
  v55 = a3;
  v21 = (void *)sub_2321FF850();
  LODWORD(a3) = objc_msgSend(v21, sel_areAllRequirementsSatisfied);

  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  if ((_DWORD)a3)
  {
    v22 = sub_232036728(v54);
    v23 = v49;
    sub_2321FFE50();
    v25 = v52;
    v24 = v53;
    (*(void (**)(char *, _QWORD, uint64_t))(v52 + 104))(v23, *MEMORY[0x24BE4AD40], v53);
    v26 = v51;
    v27 = objc_msgSend(v22, sel_data);
    if (v27)
    {
      v28 = v27;
      sub_232003E9C(0, &qword_2541B0CD0);
      v29 = sub_2321FDAD4();
      v31 = v30;

      v32 = (uint64_t)v50;
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v50, v23, v24);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v32, 0, 1, v24);
      v61 = 0;
      v59 = 0u;
      v60 = 0u;
      v33 = sub_232015828(v29, v31, 7, v32, (uint64_t)v26, 0, (uint64_t)&v59);

      sub_232003ED4(v29, v31);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v23, v24);
      v34 = v33;
      v55(v33, 0);

      return;
    }
    goto LABEL_8;
  }
  sub_232003E9C(0, &qword_2541B56B0);
  v35 = v54;
  v36 = objc_msgSend(v54, sel_quantity);
  sub_232093434(v35);
  v37 = HKCodableSummaryQuantityValue.init(quantity:date:)(v36, (uint64_t)v9);
  sub_232200174();
  v39 = v52;
  v38 = v53;
  (*(void (**)(char *, _QWORD, uint64_t))(v52 + 104))(v15, *MEMORY[0x24BE4AD70], v53);
  v40 = v51;
  v41 = objc_msgSend(v37, sel_data);
  if (!v41)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return;
  }
  v42 = v41;
  sub_232003E9C(0, &qword_2541B0CD0);
  v43 = sub_2321FDAD4();
  v45 = v44;

  v46 = (uint64_t)v50;
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v50, v15, v38);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v39 + 56))(v46, 0, 1, v38);
  v61 = 0;
  v59 = 0u;
  v60 = 0u;
  v47 = sub_232015828(v43, v45, 14, v46, (uint64_t)v40, 0, (uint64_t)&v59);

  sub_232003ED4(v43, v45);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v15, v38);
  v48 = v47;
  v55(v47, 0);

}

char *sub_232036728(void *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void **v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  _QWORD v21[2];
  uint64_t v22;

  v4 = sub_2321FDC6C();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2322002D0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (void **)sub_232016AD8(&v1[qword_2541B6FA0], *(_QWORD *)&v1[qword_2541B6FA0 + 24]);
  v12 = sub_232035A14(a1, *v11);
  if (!v2)
  {
    v13 = (uint64_t)v12;
    v14 = swift_bridgeObjectRetain();
    v15 = sub_23201A1A8(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_232036C98(v15, v13);
    v22 = v13;
    swift_release();
    swift_bridgeObjectRelease();
    v16 = objc_msgSend(a1, sel_quantity);
    objc_msgSend(v16, sel__value);

    sub_23220027C();
    v21[1] = sub_232003E9C(0, &qword_2541B0D20);
    v17 = objc_msgSend(a1, sel_quantity);
    v18 = objc_msgSend(a1, sel_endDate);
    sub_2321FDC30();

    v19 = sub_232006C3C();
    v1 = (char *)HKCodableSummaryCardioFitnessValue.init(quantity:date:cardioFitnessLevel:dataConfiguration:)(v17, (uint64_t)v6, v22, v19);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return v1;
}

uint64_t sub_23203694C()
{
  uint64_t v0;

  sub_232016AFC(v0 + qword_2541B6FA8);
  return sub_232016AFC(v0 + qword_2541B6FA0);
}

uint64_t sub_232036978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_232003F18(v0 + qword_2541BF5D0);
  v1 = v0 + qword_2541BF5C8;
  v2 = sub_232200180();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_232016AFC(v0 + qword_2541B6FA8);
  sub_232016AFC(v0 + qword_2541B6FA0);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CardioFitnessMostRecentSampleCurrentValueSharableModelStep()
{
  uint64_t result;

  result = qword_2541B6FB0;
  if (!qword_2541B6FB0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_232036A3C()
{
  return swift_initClassMetadata2();
}

unint64_t sub_232036A7C()
{
  unint64_t result;

  result = qword_255F9C588;
  if (!qword_255F9C588)
  {
    result = MEMORY[0x2348FF39C](&unk_232211500, &type metadata for HealthStoreCardioFitnessMetadataProvider.CardioFitnessFetchError);
    atomic_store(result, (unint64_t *)&qword_255F9C588);
  }
  return result;
}

unint64_t sub_232036AC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B0D80[0];
  if (!qword_2541B0D80[0])
  {
    v1 = sub_232003E9C(255, (unint64_t *)&qword_2541B0D78);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, qword_2541B0D80);
  }
  return result;
}

uint64_t sub_232036B18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_232036B5C(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4)
{
  uint64_t v6;

  sub_2320254E8(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_232036BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_232036BF0()
{
  return 1;
}

uint64_t sub_232036BF8()
{
  sub_232201B78();
  sub_232201B84();
  return sub_232201B9C();
}

uint64_t sub_232036C38()
{
  return sub_232201B84();
}

uint64_t sub_232036C5C()
{
  sub_232201B78();
  sub_232201B84();
  return sub_232201B9C();
}

uint64_t sub_232036C98(unint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  id v12;
  void *v13;
  double v14;
  double v15;
  double v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v21 = a2;
  v20 = sub_2322002C4();
  v5 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
    goto LABEL_17;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v9 = MEMORY[0x24BEE4AF8];
    if (!v8)
      return v9;
    v22 = MEMORY[0x24BEE4AF8];
    result = sub_232013830(0, v8 & ~(v8 >> 63), 0);
    if (v8 < 0)
      break;
    v19[1] = v3;
    v11 = 0;
    v9 = v22;
    v3 = a1 & 0xC000000000000001;
    while (v8 != v11)
    {
      if (v3)
        v12 = (id)MEMORY[0x2348FEA30](v11, a1);
      else
        v12 = *(id *)(a1 + 8 * v11 + 32);
      v13 = v12;
      objc_msgSend(v12, sel_vo2MaxLowerBound);
      v15 = v14;
      objc_msgSend(v13, sel_vo2MaxUpperBound);
      if (v15 > v16)
        goto LABEL_16;
      objc_msgSend(v13, sel_cardioFitnessLevel);
      sub_2322002A0();

      v22 = v9;
      v18 = *(_QWORD *)(v9 + 16);
      v17 = *(_QWORD *)(v9 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_232013830(v17 > 1, v18 + 1, 1);
        v9 = v22;
      }
      ++v11;
      *(_QWORD *)(v9 + 16) = v18 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v18, v7, v20);
      if (v8 == v11)
        return v9;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
    v8 = sub_232201998();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for HealthStoreCardioFitnessMetadataProvider()
{
  return &type metadata for HealthStoreCardioFitnessMetadataProvider;
}

ValueMetadata *type metadata accessor for HealthStoreCardioFitnessAvailabilityProvider()
{
  return &type metadata for HealthStoreCardioFitnessAvailabilityProvider;
}

uint64_t getEnumTagSinglePayload for HealthStoreCardioFitnessMetadataProvider.CardioFitnessFetchError(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for HealthStoreCardioFitnessMetadataProvider.CardioFitnessFetchError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_232036F5C + 4 * byte_232211340[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_232036F7C + 4 * byte_232211345[v4]))();
}

_BYTE *sub_232036F5C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_232036F7C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_232036F84(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_232036F8C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_232036F94(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_232036F9C(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_232036FA8()
{
  return 0;
}

ValueMetadata *type metadata accessor for HealthStoreCardioFitnessMetadataProvider.CardioFitnessFetchError()
{
  return &type metadata for HealthStoreCardioFitnessMetadataProvider.CardioFitnessFetchError;
}

unint64_t sub_232036FC4()
{
  unint64_t result;

  result = qword_255F9C590[0];
  if (!qword_255F9C590[0])
  {
    result = MEMORY[0x2348FF39C](&unk_2322114B8, &type metadata for HealthStoreCardioFitnessMetadataProvider.CardioFitnessFetchError);
    atomic_store(result, qword_255F9C590);
  }
  return result;
}

uint64_t sub_232037008()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_232037010()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = sub_2322016F8();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_2320370A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  unsigned int v11;
  uint64_t v14;
  uint64_t v15;
  const void *v16;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  if (*(_DWORD *)(v7 + 84))
    v10 = *(_QWORD *)(v7 + 64);
  else
    v10 = *(_QWORD *)(v7 + 64) + 1;
  v11 = v8 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (v11 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || ((v10 + (v9 & ~v8) + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + (((v11 | 7) + 16) & ~(unint64_t)(v11 | 7)));
    swift_retain();
  }
  else
  {
    v15 = ~v8;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    v16 = (const void *)(((unint64_t)a2 + v9) & v15);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(v16, 1, v5))
    {
      memcpy((void *)(((unint64_t)v4 + v9) & v15), v16, v10);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v15, v16, v5);
      (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(((unint64_t)v4 + v9) & v15, 0, 1, v5);
    }
    *(_QWORD *)(((((unint64_t)v4 + v9) & v15) + v10 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v16 + v10 + 7) & 0xFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_23203720C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6))
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v8, v6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2320372A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  int v14;
  size_t v15;
  size_t v16;
  size_t v17;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(a3 + 24);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v7 + v10;
  v12 = (void *)((v11 + a1) & ~v10);
  v13 = (const void *)((v11 + a2) & ~v10);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v13, 1, v8))
  {
    v14 = *(_DWORD *)(v9 + 84);
    v15 = *(_QWORD *)(v9 + 64);
    if (v14)
      v16 = v15;
    else
      v16 = v15 + 1;
    memcpy(v12, v13, v16);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v12, v13, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v12, 0, 1, v8);
    v14 = *(_DWORD *)(v9 + 84);
    v15 = *(_QWORD *)(v9 + 64);
  }
  if (v14)
    v17 = v15;
  else
    v17 = v15 + 1;
  *(_QWORD *)(((unint64_t)v12 + v17 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v13 + v17 + 7) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2320373AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  size_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(a3 + 24);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v7 + v10;
  v12 = (void *)((v11 + a1) & ~v10);
  v13 = (void *)((v11 + a2) & ~v10);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  v15 = v14(v12, 1, v8);
  v16 = v14(v13, 1, v8);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 16))(v12, v13, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v12, 0, 1, v8);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 24))(v12, v13, v8);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v12, v8);
  }
  if (*(_DWORD *)(v9 + 84))
    v17 = *(_QWORD *)(v9 + 64);
  else
    v17 = *(_QWORD *)(v9 + 64) + 1;
  memcpy(v12, v13, v17);
LABEL_10:
  if (*(_DWORD *)(v9 + 84))
    v18 = *(_QWORD *)(v9 + 64);
  else
    v18 = *(_QWORD *)(v9 + 64) + 1;
  *(_QWORD *)(((unint64_t)v12 + v18 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v13 + v18 + 7) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_232037508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  int v14;
  size_t v15;
  size_t v16;
  size_t v17;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(a3 + 24);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v7 + v10;
  v12 = (void *)((v11 + a1) & ~v10);
  v13 = (const void *)((v11 + a2) & ~v10);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v13, 1, v8))
  {
    v14 = *(_DWORD *)(v9 + 84);
    v15 = *(_QWORD *)(v9 + 64);
    if (v14)
      v16 = v15;
    else
      v16 = v15 + 1;
    memcpy(v12, v13, v16);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v12, v13, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v12, 0, 1, v8);
    v14 = *(_DWORD *)(v9 + 84);
    v15 = *(_QWORD *)(v9 + 64);
  }
  if (v14)
    v17 = v15;
  else
    v17 = v15 + 1;
  *(_QWORD *)(((unint64_t)v12 + v17 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v13 + v17 + 7) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_232037608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  size_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(a3 + 24);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v7 + v10;
  v12 = (void *)((v11 + a1) & ~v10);
  v13 = (void *)((v11 + a2) & ~v10);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  v15 = v14(v12, 1, v8);
  v16 = v14(v13, 1, v8);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 32))(v12, v13, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v12, 0, 1, v8);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 40))(v12, v13, v8);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v12, v8);
  }
  if (*(_DWORD *)(v9 + 84))
    v17 = *(_QWORD *)(v9 + 64);
  else
    v17 = *(_QWORD *)(v9 + 64) + 1;
  memcpy(v12, v13, v17);
LABEL_10:
  if (*(_DWORD *)(v9 + 84))
    v18 = *(_QWORD *)(v9 + 64);
  else
    v18 = *(_QWORD *)(v9 + 64) + 1;
  *(_QWORD *)(((unint64_t)v12 + v18 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v13 + v18 + 7) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23203775C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v19;
  unint64_t v20;
  unsigned int v21;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v9 <= v6)
    v10 = *(_DWORD *)(v5 + 84);
  else
    v10 = v9;
  if (v10 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  v11 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v11;
  if (!a2)
    return 0;
  v12 = *(unsigned __int8 *)(v7 + 80);
  v13 = *(_QWORD *)(v5 + 64) + v12;
  v14 = v11 + 7;
  if (v10 < a2)
  {
    if (((((v14 + (v13 & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v15 = 2;
    else
      v15 = a2 - v10 + 1;
    if (v15 >= 0x10000)
      v16 = 4;
    else
      v16 = 2;
    if (v15 < 0x100)
      v16 = 1;
    if (v15 >= 2)
      v17 = v16;
    else
      v17 = 0;
    __asm { BR              X6 }
  }
  if (v6 == v10)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v5 + 48))(a1, *(unsigned int *)(v5 + 84), v4);
  v19 = (v13 + a1) & ~v12;
  if (v9 == v10)
  {
    if (v8 < 2)
      return 0;
    v21 = (*(uint64_t (**)(uint64_t))(v7 + 48))(v19);
    if (v21 >= 2)
      return v21 - 1;
    else
      return 0;
  }
  else
  {
    v20 = *(_QWORD *)((v14 + v19) & 0xFFFFFFFFFFFFF8);
    if (v20 >= 0xFFFFFFFF)
      LODWORD(v20) = -1;
    return (v20 + 1);
  }
}

void sub_2320378E8(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  unsigned int v18;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  v9 = *(_DWORD *)(v8 + 84);
  if (v9)
    v10 = v9 - 1;
  else
    v10 = 0;
  if (v10 <= *(_DWORD *)(v7 + 84))
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = v10;
  if (v11 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  v12 = *(unsigned __int8 *)(v8 + 80);
  v14 = *(_QWORD *)(v8 + 64);
  if (!v9)
    ++v14;
  v13 = *(_QWORD *)(v7 + 64) + v12;
  if (v11 < a3)
  {
    v15 = a3 - v11;
    if ((((_DWORD)v14 + 7 + (v13 & ~(_DWORD)v12)) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v16 = v15 + 1;
    else
      v16 = 2;
    if (v16 >= 0x10000)
      v17 = 4;
    else
      v17 = 2;
    if (v16 < 0x100)
      v17 = 1;
    if (v16 >= 2)
      v6 = v17;
    else
      v6 = 0;
  }
  if (a2 > v11)
  {
    if ((((_DWORD)v14 + 7 + (v13 & ~(_DWORD)v12)) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      v18 = ~v11 + a2;
      bzero(a1, ((v14 + 7 + (v13 & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 8);
      *a1 = v18;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X4 }
}

void sub_232037A08(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;

  *(_BYTE *)(v12 + v13) = 0;
  if ((_DWORD)a1)
  {
    if ((_DWORD)v4 == v8)
    {
      v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
      v15 = v12;
      a2 = v4;
      a3 = a4;
LABEL_6:
      v14(v15, a1, a2, a3);
      return;
    }
    v15 = (v11 + v12) & v5;
    if (v9 == v8)
    {
      a1 = (a1 + 1);
      v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
      goto LABEL_6;
    }
    if ((a1 & 0x80000000) != 0)
      v16 = a1 ^ 0x80000000;
    else
      v16 = (a1 - 1);
    *(_QWORD *)((v10 + v15) & 0xFFFFFFFFFFFFFFF8) = v16;
  }
}

uint64_t type metadata accessor for SnidgetHarnessViewFeedItemGeneratorInputModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_232043E5C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SnidgetHarnessViewFeedItemGeneratorInputModel);
}

uint64_t sub_232037AC0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_232037AC8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = sub_2322016F8();
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for SnidgetFeedItemMetadata(319);
        if (v4 <= 0x3F)
        {
          swift_initStructMetadata();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t *sub_232037B90(uint64_t *a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  void *v26;
  const void *v27;
  size_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  void *v34;
  const void *v35;
  _QWORD *v36;
  _QWORD *v37;
  void *v38;
  const void *v39;
  unsigned int (*v40)(const void *, uint64_t, uint64_t);
  size_t v42;
  size_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  size_t __n;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  unint64_t v61;

  v51 = a3[2];
  v3 = *(_QWORD *)(v51 - 8);
  v53 = a3[3];
  v4 = *(_QWORD *)(v53 - 8);
  v60 = *(_DWORD *)(v4 + 80);
  v5 = v60;
  v50 = *(_QWORD *)(v3 + 64) + v60;
  v52 = v4;
  v55 = a3[4];
  v6 = *(_QWORD *)(v55 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v49 = *(_QWORD *)(v4 + 64) + v7;
  v48 = v6;
  if (*(_DWORD *)(v6 + 84))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  v57 = sub_2321FE65C();
  v9 = *(_QWORD *)(v57 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v58 = sub_2321FD8B8();
  v11 = *(_QWORD *)(v58 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = v10 | v12 | 7;
  __n = v8;
  v59 = v9;
  if (*(_DWORD *)(v9 + 84))
    v14 = *(_QWORD *)(v9 + 64);
  else
    v14 = *(_QWORD *)(v9 + 64) + 1;
  v54 = *(_QWORD *)(v58 - 8);
  if (*(_DWORD *)(v11 + 84))
    v15 = *(_QWORD *)(v11 + 64);
  else
    v15 = *(_QWORD *)(v11 + 64) + 1;
  v16 = *(_DWORD *)(v3 + 80);
  v17 = v13 | (v7 | v60 | v16);
  if (v17 != 7
    || ((v7 | v60 | v10 | *(_DWORD *)(v11 + 80) | v16) & 0x100000) != 0
    || v15
     + ((v12
       + 8
       + ((v14 + 7 + ((v10 + 1) & ~(unint64_t)v10)) & 0xFFFFFFFFFFFFFFF8)) & ~v12)
     + ((v13 + v8 + ((v49 + (v50 & ~(unint64_t)v60)) & ~(unint64_t)v7)) & ~v13) > 0x18)
  {
    v20 = *a2;
    *a1 = *a2;
    v21 = v20 + ((v17 + 16) & ~v17);
    swift_retain();
  }
  else
  {
    v46 = v10 + 1;
    v47 = v14 + 7;
    v42 = v14;
    v61 = v12 + 8;
    v22 = ~v5;
    v23 = ~(unint64_t)v7;
    v43 = v15;
    v44 = ~v13;
    v45 = ~(unint64_t)v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v3 + 16))(a1, a2, v51);
    v24 = ((unint64_t)a1 + v50) & ~v5;
    v25 = ((unint64_t)a2 + v50) & v22;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v52 + 16))(v24, v25, v53);
    v26 = (void *)((v24 + v49) & v23);
    v27 = (const void *)((v25 + v49) & v23);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v48 + 48))(v27, 1, v55))
    {
      v29 = __n;
      memcpy(v26, v27, __n);
      v30 = v54;
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v48 + 16))(v26, v27, v55);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v26, 0, 1, v55);
      v30 = v54;
      v29 = __n;
    }
    v31 = ~v12;
    v32 = (_BYTE *)(((unint64_t)v26 + v29 + v13) & v44);
    v33 = (_BYTE *)(((unint64_t)v27 + v29 + v13) & v44);
    *v32 = *v33;
    v34 = (void *)((unint64_t)&v32[v46] & v45);
    v35 = (const void *)((unint64_t)&v33[v46] & v45);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v59 + 48))(v35, 1, v57))
    {
      memcpy(v34, v35, v42);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v59 + 16))(v34, v35, v57);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v34, 0, 1, v57);
    }
    v36 = (_QWORD *)(((unint64_t)v34 + v47) & 0xFFFFFFFFFFFFFFF8);
    v37 = (_QWORD *)(((unint64_t)v35 + v47) & 0xFFFFFFFFFFFFFFF8);
    *v36 = *v37;
    v38 = (void *)(((unint64_t)v36 + v61) & v31);
    v39 = (const void *)(((unint64_t)v37 + v61) & v31);
    v40 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48);
    swift_bridgeObjectRetain();
    if (v40(v39, 1, v58))
    {
      memcpy(v38, v39, v43);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v30 + 16))(v38, v39, v58);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v38, 0, 1, v58);
    }
    return a1;
  }
  return (uint64_t *)v21;
}

uint64_t sub_232037F58(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;

  v4 = *(_QWORD *)(a2[2] - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(_QWORD *)(a2[3] - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v7);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a2[4];
  v10 = *(_QWORD *)(v9 - 8);
  v11 = (v7 + v8 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v11, 1, v9))
    (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v11, v9);
  v12 = *(_DWORD *)(v10 + 84);
  v13 = *(_QWORD *)(v10 + 64);
  v14 = sub_2321FE65C();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = sub_2321FD8B8();
  v18 = v12 == 0;
  v19 = *(_QWORD *)(v17 - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v13 + v11;
  if (v18)
    ++v21;
  v22 = (v16 + ((v21 + (v16 | v20 | 7)) & ~(v16 | v20 | 7)) + 1) & ~v16;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v22, 1, v14))
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v22, v14);
  v23 = v22 + *(_QWORD *)(v15 + 64);
  if (!*(_DWORD *)(v15 + 84))
    ++v23;
  v24 = (v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  v25 = (v20 + v24 + 8) & ~v20;
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v25, 1, v17);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v25, v17);
  return result;
}

uint64_t sub_2320380F8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  int v19;
  uint64_t v20;
  size_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  void *v32;
  const void *v33;
  int v34;
  size_t v35;
  size_t v36;
  size_t v37;
  _QWORD *v38;
  _QWORD *v39;
  void *v40;
  const void *v41;
  unsigned int (*v42)(const void *, uint64_t, uint64_t);
  size_t v43;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = a3[4];
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = v12 + v15;
  v17 = (void *)((v16 + v10) & ~v15);
  v18 = (const void *)((v16 + v11) & ~v15);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v18, 1, v13))
  {
    v19 = *(_DWORD *)(v14 + 84);
    v20 = *(_QWORD *)(v14 + 64);
    if (v19)
      v21 = *(_QWORD *)(v14 + 64);
    else
      v21 = v20 + 1;
    memcpy(v17, v18, v21);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v17, v18, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
    v19 = *(_DWORD *)(v14 + 84);
    v20 = *(_QWORD *)(v14 + 64);
  }
  if (v19)
    v22 = v20;
  else
    v22 = v20 + 1;
  v23 = sub_2321FE65C();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(unsigned __int8 *)(v24 + 80);
  v26 = sub_2321FD8B8();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(unsigned __int8 *)(v27 + 80);
  v29 = v25 | v28 | 7;
  v30 = (_BYTE *)(((unint64_t)v17 + v29 + v22) & ~v29);
  v31 = (_BYTE *)(((unint64_t)v18 + v29 + v22) & ~v29);
  *v30 = *v31;
  v32 = (void *)((unint64_t)&v30[v25 + 1] & ~v25);
  v33 = (const void *)((unint64_t)&v31[v25 + 1] & ~v25);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48))(v33, 1, v23))
  {
    v34 = *(_DWORD *)(v24 + 84);
    v35 = *(_QWORD *)(v24 + 64);
    if (v34)
      v36 = v35;
    else
      v36 = v35 + 1;
    memcpy(v32, v33, v36);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 16))(v32, v33, v23);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v32, 0, 1, v23);
    v34 = *(_DWORD *)(v24 + 84);
    v35 = *(_QWORD *)(v24 + 64);
  }
  if (v34)
    v37 = v35;
  else
    v37 = v35 + 1;
  v38 = (_QWORD *)(((unint64_t)v32 + v37 + 7) & 0xFFFFFFFFFFFFFFF8);
  v39 = (_QWORD *)(((unint64_t)v33 + v37 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v38 = *v39;
  v40 = (void *)(((unint64_t)v38 + v28 + 8) & ~v28);
  v41 = (const void *)(((unint64_t)v39 + v28 + 8) & ~v28);
  v42 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48);
  swift_bridgeObjectRetain();
  if (v42(v41, 1, v26))
  {
    if (*(_DWORD *)(v27 + 84))
      v43 = *(_QWORD *)(v27 + 64);
    else
      v43 = *(_QWORD *)(v27 + 64) + 1;
    memcpy(v40, v41, v43);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v27 + 16))(v40, v41, v26);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v40, 0, 1, v26);
  }
  return a1;
}

uint64_t sub_23203838C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t (*v19)(void *, uint64_t, uint64_t);
  int v20;
  size_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  void *v32;
  void *v33;
  uint64_t (*v34)(void *, uint64_t, uint64_t);
  int v35;
  int v36;
  size_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  void *v41;
  void *v42;
  uint64_t (*v43)(void *, uint64_t, uint64_t);
  int v44;
  size_t v45;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = a3[4];
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = v12 + v15;
  v17 = (void *)((v16 + v10) & ~v15);
  v18 = (void *)((v16 + v11) & ~v15);
  v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v11) = v19(v17, 1, v13);
  v20 = v19(v18, 1, v13);
  if ((_DWORD)v11)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v17, v18, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v17, v18, v13);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v17, v13);
  }
  if (*(_DWORD *)(v14 + 84))
    v21 = *(_QWORD *)(v14 + 64);
  else
    v21 = *(_QWORD *)(v14 + 64) + 1;
  memcpy(v17, v18, v21);
LABEL_10:
  if (*(_DWORD *)(v14 + 84))
    v22 = *(_QWORD *)(v14 + 64);
  else
    v22 = *(_QWORD *)(v14 + 64) + 1;
  v23 = sub_2321FE65C();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(unsigned __int8 *)(v24 + 80);
  v26 = sub_2321FD8B8();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(unsigned __int8 *)(v27 + 80);
  v29 = v25 | v28 | 7;
  v30 = (_BYTE *)(((unint64_t)v17 + v29 + v22) & ~v29);
  v31 = (_BYTE *)(((unint64_t)v18 + v29 + v22) & ~v29);
  *v30 = *v31;
  v32 = (void *)((unint64_t)&v30[v25 + 1] & ~v25);
  v33 = (void *)((unint64_t)&v31[v25 + 1] & ~v25);
  v34 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
  v35 = v34(v32, 1, v23);
  v36 = v34(v33, 1, v23);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 16))(v32, v33, v23);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v32, 0, 1, v23);
      goto LABEL_22;
    }
  }
  else
  {
    if (!v36)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 24))(v32, v33, v23);
      goto LABEL_22;
    }
    (*(void (**)(void *, uint64_t))(v24 + 8))(v32, v23);
  }
  if (*(_DWORD *)(v24 + 84))
    v37 = *(_QWORD *)(v24 + 64);
  else
    v37 = *(_QWORD *)(v24 + 64) + 1;
  memcpy(v32, v33, v37);
LABEL_22:
  if (*(_DWORD *)(v24 + 84))
    v38 = *(_QWORD *)(v24 + 64);
  else
    v38 = *(_QWORD *)(v24 + 64) + 1;
  v39 = (_QWORD *)(((unint64_t)v32 + v38 + 7) & 0xFFFFFFFFFFFFFFF8);
  v40 = (_QWORD *)(((unint64_t)v33 + v38 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v39 = *v40;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v41 = (void *)(((unint64_t)v39 + v28 + 8) & ~v28);
  v42 = (void *)(((unint64_t)v40 + v28 + 8) & ~v28);
  v43 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v27 + 48);
  LODWORD(v39) = v43(v41, 1, v26);
  v44 = v43(v42, 1, v26);
  if ((_DWORD)v39)
  {
    if (!v44)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 16))(v41, v42, v26);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v41, 0, 1, v26);
      return a1;
    }
  }
  else
  {
    if (!v44)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 24))(v41, v42, v26);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v27 + 8))(v41, v26);
  }
  if (*(_DWORD *)(v27 + 84))
    v45 = *(_QWORD *)(v27 + 64);
  else
    v45 = *(_QWORD *)(v27 + 64) + 1;
  memcpy(v41, v42, v45);
  return a1;
}

uint64_t sub_2320386F8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  int v19;
  uint64_t v20;
  size_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  void *v32;
  const void *v33;
  int v34;
  size_t v35;
  size_t v36;
  size_t v37;
  _QWORD *v38;
  _QWORD *v39;
  void *v40;
  const void *v41;
  size_t v42;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = a3[4];
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = v12 + v15;
  v17 = (void *)((v16 + v10) & ~v15);
  v18 = (const void *)((v16 + v11) & ~v15);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v18, 1, v13))
  {
    v19 = *(_DWORD *)(v14 + 84);
    v20 = *(_QWORD *)(v14 + 64);
    if (v19)
      v21 = *(_QWORD *)(v14 + 64);
    else
      v21 = v20 + 1;
    memcpy(v17, v18, v21);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v17, v18, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
    v19 = *(_DWORD *)(v14 + 84);
    v20 = *(_QWORD *)(v14 + 64);
  }
  if (v19)
    v22 = v20;
  else
    v22 = v20 + 1;
  v23 = sub_2321FE65C();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(unsigned __int8 *)(v24 + 80);
  v26 = sub_2321FD8B8();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(unsigned __int8 *)(v27 + 80);
  v29 = v25 | v28 | 7;
  v30 = (_BYTE *)(((unint64_t)v17 + v29 + v22) & ~v29);
  v31 = (_BYTE *)(((unint64_t)v18 + v29 + v22) & ~v29);
  *v30 = *v31;
  v32 = (void *)((unint64_t)&v30[v25 + 1] & ~v25);
  v33 = (const void *)((unint64_t)&v31[v25 + 1] & ~v25);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48))(v33, 1, v23))
  {
    v34 = *(_DWORD *)(v24 + 84);
    v35 = *(_QWORD *)(v24 + 64);
    if (v34)
      v36 = v35;
    else
      v36 = v35 + 1;
    memcpy(v32, v33, v36);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v32, v33, v23);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v32, 0, 1, v23);
    v34 = *(_DWORD *)(v24 + 84);
    v35 = *(_QWORD *)(v24 + 64);
  }
  if (v34)
    v37 = v35;
  else
    v37 = v35 + 1;
  v38 = (_QWORD *)(((unint64_t)v32 + v37 + 7) & 0xFFFFFFFFFFFFFFF8);
  v39 = (_QWORD *)(((unint64_t)v33 + v37 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v38 = *v39;
  v40 = (void *)(((unint64_t)v38 + v28 + 8) & ~v28);
  v41 = (const void *)(((unint64_t)v39 + v28 + 8) & ~v28);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48))(v41, 1, v26))
  {
    if (*(_DWORD *)(v27 + 84))
      v42 = *(_QWORD *)(v27 + 64);
    else
      v42 = *(_QWORD *)(v27 + 64) + 1;
    memcpy(v40, v41, v42);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v27 + 32))(v40, v41, v26);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v40, 0, 1, v26);
  }
  return a1;
}

uint64_t sub_232038988(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t (*v19)(void *, uint64_t, uint64_t);
  int v20;
  size_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  void *v32;
  void *v33;
  uint64_t (*v34)(void *, uint64_t, uint64_t);
  int v35;
  int v36;
  size_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  void *v41;
  void *v42;
  uint64_t (*v43)(void *, uint64_t, uint64_t);
  int v44;
  int v45;
  size_t v46;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = a3[4];
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = v12 + v15;
  v17 = (void *)((v16 + v10) & ~v15);
  v18 = (void *)((v16 + v11) & ~v15);
  v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v11) = v19(v17, 1, v13);
  v20 = v19(v18, 1, v13);
  if ((_DWORD)v11)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 32))(v17, v18, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 40))(v17, v18, v13);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v17, v13);
  }
  if (*(_DWORD *)(v14 + 84))
    v21 = *(_QWORD *)(v14 + 64);
  else
    v21 = *(_QWORD *)(v14 + 64) + 1;
  memcpy(v17, v18, v21);
LABEL_10:
  if (*(_DWORD *)(v14 + 84))
    v22 = *(_QWORD *)(v14 + 64);
  else
    v22 = *(_QWORD *)(v14 + 64) + 1;
  v23 = sub_2321FE65C();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(unsigned __int8 *)(v24 + 80);
  v26 = sub_2321FD8B8();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(unsigned __int8 *)(v27 + 80);
  v29 = v25 | v28 | 7;
  v30 = (_BYTE *)(((unint64_t)v17 + v29 + v22) & ~v29);
  v31 = (_BYTE *)(((unint64_t)v18 + v29 + v22) & ~v29);
  *v30 = *v31;
  v32 = (void *)((unint64_t)&v30[v25 + 1] & ~v25);
  v33 = (void *)((unint64_t)&v31[v25 + 1] & ~v25);
  v34 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
  v35 = v34(v32, 1, v23);
  v36 = v34(v33, 1, v23);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 32))(v32, v33, v23);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v32, 0, 1, v23);
      goto LABEL_22;
    }
  }
  else
  {
    if (!v36)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 40))(v32, v33, v23);
      goto LABEL_22;
    }
    (*(void (**)(void *, uint64_t))(v24 + 8))(v32, v23);
  }
  if (*(_DWORD *)(v24 + 84))
    v37 = *(_QWORD *)(v24 + 64);
  else
    v37 = *(_QWORD *)(v24 + 64) + 1;
  memcpy(v32, v33, v37);
LABEL_22:
  if (*(_DWORD *)(v24 + 84))
    v38 = *(_QWORD *)(v24 + 64);
  else
    v38 = *(_QWORD *)(v24 + 64) + 1;
  v39 = (_QWORD *)(((unint64_t)v32 + v38 + 7) & 0xFFFFFFFFFFFFFFF8);
  v40 = (_QWORD *)(((unint64_t)v33 + v38 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v39 = *v40;
  swift_bridgeObjectRelease();
  v41 = (void *)(((unint64_t)v39 + v28 + 8) & ~v28);
  v42 = (void *)(((unint64_t)v40 + v28 + 8) & ~v28);
  v43 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v27 + 48);
  v44 = v43(v41, 1, v26);
  v45 = v43(v42, 1, v26);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 32))(v41, v42, v26);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v41, 0, 1, v26);
      return a1;
    }
  }
  else
  {
    if (!v45)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 40))(v41, v42, v26);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v27 + 8))(v41, v26);
  }
  if (*(_DWORD *)(v27 + 84))
    v46 = *(_QWORD *)(v27 + 64);
  else
    v46 = *(_QWORD *)(v27 + 64) + 1;
  memcpy(v41, v42, v46);
  return a1;
}

uint64_t sub_232038CEC(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  unint64_t v37;
  char v38;
  int v39;
  unsigned int v41;
  int v42;
  int v43;
  uint64_t (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int v55;
  uint64_t v56;
  unsigned int v57;
  uint64_t v58;

  v58 = a3[2];
  v4 = *(_QWORD *)(v58 - 8);
  v5 = *(unsigned int *)(v4 + 84);
  v56 = a3[3];
  v6 = *(_QWORD *)(v56 - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v57 = v7;
  if (v7 <= v5)
    v7 = *(_DWORD *)(v4 + 84);
  v54 = a3[4];
  v8 = *(_QWORD *)(v54 - 8);
  v9 = *(_DWORD *)(v8 + 84);
  v10 = v9 - 1;
  if (!v9)
    v10 = 0;
  v55 = v10;
  if (v10 <= v7)
    v11 = v7;
  else
    v11 = v10;
  v53 = sub_2321FE65C();
  v12 = *(_QWORD *)(v53 - 8);
  v13 = *(unsigned int *)(v12 + 84);
  if ((_DWORD)v13)
    v14 = v13 - 1;
  else
    v14 = 0;
  v15 = sub_2321FD8B8();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int *)(v16 + 84);
  v18 = v17 - 1;
  if (!(_DWORD)v17)
    v18 = 0;
  if (v14 <= v18)
    v19 = v18;
  else
    v19 = v14;
  if (v19 <= 0x7FFFFFFF)
    v20 = 0x7FFFFFFF;
  else
    v20 = v19;
  if (v20 <= v11)
    v21 = v11;
  else
    v21 = v20;
  v22 = *(_QWORD *)(v8 + 64);
  if (!v9)
    ++v22;
  if ((_DWORD)v13)
    v23 = *(_QWORD *)(v12 + 64);
  else
    v23 = *(_QWORD *)(v12 + 64) + 1;
  if ((_DWORD)v17)
    v24 = *(_QWORD *)(v16 + 64);
  else
    v24 = *(_QWORD *)(v16 + 64) + 1;
  if (!a2)
    return 0;
  v25 = v15;
  v26 = *(unsigned __int8 *)(v6 + 80);
  v27 = *(_QWORD *)(v4 + 64) + v26;
  v28 = *(_QWORD *)(v6 + 64);
  v29 = *(unsigned __int8 *)(v12 + 80);
  v30 = *(unsigned __int8 *)(v16 + 80);
  v31 = v29 | v30 | 7;
  v32 = *(unsigned __int8 *)(v8 + 80);
  v33 = v29 + 1;
  v34 = v23 + 7;
  v35 = v30 + 8;
  v36 = a2 - v21;
  if (a2 <= v21)
    goto LABEL_50;
  v37 = v24
      + ((v35 + ((v34 + (v33 & ~v29)) & 0xFFFFFFFFFFFFFFF8)) & ~v30)
      + ((v31 + v22 + ((v28 + v32 + (v27 & ~v26)) & ~v32)) & ~v31);
  v38 = 8 * v37;
  if (v37 > 3)
    goto LABEL_33;
  v41 = ((v36 + ~(-1 << v38)) >> v38) + 1;
  if (HIWORD(v41))
  {
    v39 = *(_DWORD *)(a1 + v37);
    if (v39)
      goto LABEL_41;
  }
  else
  {
    if (v41 <= 0xFF)
    {
      if (v41 < 2)
        goto LABEL_50;
LABEL_33:
      v39 = *(unsigned __int8 *)(a1 + v37);
      if (!*(_BYTE *)(a1 + v37))
        goto LABEL_50;
LABEL_41:
      v42 = (v39 - 1) << v38;
      if (v37 > 3)
        v42 = 0;
      if ((_DWORD)v37)
      {
        if (v37 <= 3)
          v43 = v37;
        else
          v43 = 4;
        __asm { BR              X12 }
      }
      return v21 + v42 + 1;
    }
    v39 = *(unsigned __int16 *)(a1 + v37);
    if (*(_WORD *)(a1 + v37))
      goto LABEL_41;
  }
LABEL_50:
  if ((_DWORD)v5 == v21)
  {
    v44 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    v46 = v58;
    v45 = a1;
    v47 = v5;
    return v44(v45, v47, v46);
  }
  v45 = (v27 + a1) & ~v26;
  if (v57 == v21)
  {
    v44 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    v47 = v57;
    v46 = v56;
    return v44(v45, v47, v46);
  }
  v48 = (v45 + v28 + v32) & ~v32;
  if (v55 == v21)
  {
    v49 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 48))(v48, v9, v54, v31);
    goto LABEL_64;
  }
  v50 = (v33 + ((v48 + v22 + v31) & ~v31)) & ~v29;
  if (v14 == v20)
  {
    v49 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 48))(v50, v13, v53, v31);
    goto LABEL_64;
  }
  v51 = (unint64_t *)((v34 + v50) & 0xFFFFFFFFFFFFFFF8);
  if ((v19 & 0x80000000) != 0)
  {
    v49 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v16 + 48))(((unint64_t)v51 + v35) & ~v30, v17, v25, v31);
LABEL_64:
    if (v49 >= 2)
      return v49 - 1;
    else
      return 0;
  }
  v52 = *v51;
  if (v52 >= 0xFFFFFFFF)
    LODWORD(v52) = -1;
  return (v52 + 1);
}

void sub_232039070(_BYTE *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  int v13;
  unsigned int v14;
  uint64_t v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  size_t v26;
  BOOL v27;
  unsigned int v28;
  int v29;
  unsigned int v30;
  int v31;
  int v32;
  int v34;

  v5 = *(_QWORD *)(a4[2] - 8);
  v6 = *(_QWORD *)(a4[3] - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  v8 = *(_QWORD *)(a4[4] - 8);
  v9 = *(_DWORD *)(v8 + 84);
  v10 = v9 - 1;
  if (!v9)
    v10 = 0;
  if (v10 <= v7)
    v11 = v7;
  else
    v11 = v10;
  v12 = *(_QWORD *)(sub_2321FE65C() - 8);
  v13 = *(_DWORD *)(v12 + 84);
  if (v13)
    v14 = v13 - 1;
  else
    v14 = 0;
  v34 = 0;
  v15 = *(_QWORD *)(sub_2321FD8B8() - 8);
  v16 = *(_DWORD *)(v15 + 84);
  v17 = v16 - 1;
  if (!v16)
    v17 = 0;
  if (v14 <= v17)
    v18 = v17;
  else
    v18 = v14;
  if (v18 <= 0x7FFFFFFF)
    v19 = 0x7FFFFFFF;
  else
    v19 = v18;
  if (v19 <= v11)
    v20 = v11;
  else
    v20 = v19;
  if (v9)
    v21 = *(_QWORD *)(v8 + 64);
  else
    v21 = *(_QWORD *)(v8 + 64) + 1;
  v22 = *(_QWORD *)(v12 + 64);
  if (!v13)
    ++v22;
  v25 = *(_QWORD *)(v15 + 64);
  if (!v16)
    ++v25;
  v24 = *(unsigned __int8 *)(v15 + 80);
  v23 = *(unsigned __int8 *)(v12 + 80);
  v26 = (((v23 | v24 | 7)
        + v21
        + ((*(_QWORD *)(v6 + 64)
          + *(unsigned __int8 *)(v8 + 80)
          + ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))) & ~(v23 | v24 | 7))
      + v25
      + ((v24 + 8 + ((v22 + 7 + ((v23 + 1) & ~v23)) & 0xFFFFFFFFFFFFFFF8)) & ~v24);
  v27 = a3 >= v20;
  v28 = a3 - v20;
  if (v28 != 0 && v27)
  {
    if (v26 <= 3)
    {
      v30 = ((v28 + ~(-1 << (8 * v26))) >> (8 * v26)) + 1;
      if (HIWORD(v30))
      {
        v29 = 4;
      }
      else
      {
        v29 = v30 > 1;
        if (v30 >= 0x100)
          v29 = 2;
      }
    }
    else
    {
      v29 = 1;
    }
    v34 = v29;
  }
  if (v20 < a2)
  {
    v31 = ~v20 + a2;
    if (v26 < 4)
    {
      if ((_DWORD)v26)
      {
        v32 = v31 & ~(-1 << (8 * v26));
        bzero(a1, v26);
        if ((_DWORD)v26 == 3)
        {
          *(_WORD *)a1 = v32;
          a1[2] = BYTE2(v32);
        }
        else if ((_DWORD)v26 == 2)
        {
          *(_WORD *)a1 = v32;
        }
        else
        {
          *a1 = v32;
        }
      }
    }
    else
    {
      bzero(a1, v26);
      *(_DWORD *)a1 = v31;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X24 }
}

void sub_2320393BC()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = v0;
}

void sub_2320393C4()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = v0;
}

void sub_232039470()
{
  char v0;
  _BYTE *v1;

  *v1 = v0;
}

void sub_2320394F0()
{
  __int16 v0;
  _WORD *v1;

  *v1 = v0;
}

void sub_2320394F8()
{
  int v0;
  uint64_t v1;

  *(_WORD *)v1 = v0;
  *(_BYTE *)(v1 + 2) = BYTE2(v0);
}

void sub_232039508()
{
  int v0;
  _DWORD *v1;

  *v1 = v0;
}

uint64_t type metadata accessor for SnidgetHarnessGeneratorFeedItemModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_232043E5C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SnidgetHarnessGeneratorFeedItemModel);
}

void *sub_23203952C(void *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  void *v5;
  id v6;
  id v8;
  id v9;

  if ((unint64_t)a1 >= 2)
  {
    v5 = (void *)a3;
    if (a3 >= 2)
    {
      sub_2320442D0(a1);
      sub_2320442D0(v5);
      sub_23209D274(a4);
    }
    else
    {
      v6 = a1;
      swift_bridgeObjectRetain();
      v5 = 0;
    }
    v8 = v5;
    swift_bridgeObjectRetain();
    v9 = a1;
    sub_23204428C(a1, v5);
  }
  return a1;
}

id sub_2320395F0@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  id *v21;
  uint64_t v22;
  id result;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  char *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;

  v3 = type metadata accessor for MostRecentRangeSnidgetFeedItemModelProvider();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23220039C();
  v47 = *(_QWORD *)(v6 - 8);
  v48 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v49 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B2930, (uint64_t (*)(uint64_t))MEMORY[0x24BE42FE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v46 - v10;
  sub_232025288(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, qword_2541B78E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47DF8], v8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v46 - v16;
  v18 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (id *)((char *)v1 + *(int *)(v3 + 24));
  if (((_BYTE)v21[1] & 1) != 0)
  {
    sub_232000344(0);
    return (id)(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a1, 1, 1, v22);
  }
  else
  {
    v46 = a1;
    result = objc_msgSend((id)objc_opt_self(), sel_sharedInstanceForHealthStore_, *v1);
    if (result)
    {
      v24 = result;
      v25 = v21[2];
      v26 = objc_msgSend(v24, sel_displayTypeForObjectType_, v25);

      if (v26)
      {
        v27 = sub_2321FE65C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v17, 1, 1, v27);
        v28 = sub_2321FD8B8();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v14, 1, 1, v28);
        sub_2320D71E8(0, (uint64_t)v17, MEMORY[0x24BEE4AF8], (uint64_t)v14, v20);
        sub_2321FF208();
        v29 = sub_2321FEF5C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v11, 1, 1, v29);
        v30 = v26;
        v31 = sub_2321FF1FC();
        sub_232000344(0);
        v33 = v32;
        v34 = v46;
        sub_23200054C((uint64_t)v20, (uint64_t)v46 + *(int *)(v32 + 52), type metadata accessor for SnidgetFeedItemMetadata);

        v34[1] = 0;
        v34[2] = 0;
        *v34 = v31;
        sub_232002CEC((uint64_t)v20, type metadata accessor for SnidgetFeedItemMetadata);
        return (id)(*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v34, 0, 1, v33);
      }
      else
      {
        v35 = v49;
        sub_232200318();
        sub_23200054C((uint64_t)v1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for MostRecentRangeSnidgetFeedItemModelProvider);
        v36 = sub_232200390();
        v37 = sub_2322012E4();
        if (os_log_type_enabled(v36, v37))
        {
          v38 = swift_slowAlloc();
          v39 = swift_slowAlloc();
          v51 = v39;
          *(_DWORD *)v38 = 136446466;
          v50 = sub_232013174(0xD00000000000002BLL, 0x80000002322033B0, &v51);
          sub_232201710();
          *(_WORD *)(v38 + 12) = 2080;
          v40 = objc_msgSend(*(id *)&v5[*(int *)(v3 + 24) + 16], sel_sensitiveLoggingIdentifier);
          v41 = sub_232200EC4();
          v43 = v42;

          v50 = sub_232013174(v41, v43, &v51);
          sub_232201710();
          swift_bridgeObjectRelease();
          sub_232002CEC((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for MostRecentRangeSnidgetFeedItemModelProvider);
          _os_log_impl(&dword_231FFB000, v36, v37, "[%{public}s]: No display type could be found for %s for error case feedItem", (uint8_t *)v38, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x2348FF468](v39, -1, -1);
          MEMORY[0x2348FF468](v38, -1, -1);

          (*(void (**)(char *, uint64_t))(v47 + 8))(v49, v48);
        }
        else
        {
          sub_232002CEC((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for MostRecentRangeSnidgetFeedItemModelProvider);

          (*(void (**)(char *, uint64_t))(v47 + 8))(v35, v48);
        }
        v44 = v46;
        sub_232000344(0);
        return (id)(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v44, 1, 1, v45);
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_232039B5C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  id *v21;
  uint64_t v22;
  id result;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;

  v3 = type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23220039C();
  v47 = *(_QWORD *)(v6 - 8);
  v48 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v49 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B2930, (uint64_t (*)(uint64_t))MEMORY[0x24BE42FE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v46 - v10;
  sub_232025288(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, qword_2541B78E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47DF8], v8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v46 - v16;
  v18 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (id *)((char *)v1 + *(int *)(v3 + 24));
  if (((_BYTE)v21[1] & 1) != 0)
  {
    sub_232044A00(0);
    return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a1, 1, 1, v22);
  }
  else
  {
    v46 = a1;
    result = objc_msgSend((id)objc_opt_self(), sel_sharedInstanceForHealthStore_, *v1);
    if (result)
    {
      v24 = result;
      v25 = v21[2];
      v26 = objc_msgSend(v24, sel_displayTypeForObjectType_, v25);

      if (v26)
      {
        v27 = sub_2321FE65C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v17, 1, 1, v27);
        v28 = sub_2321FD8B8();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v14, 1, 1, v28);
        sub_2320D71E8(0, (uint64_t)v17, MEMORY[0x24BEE4AF8], (uint64_t)v14, v20);
        sub_2321FF208();
        v29 = sub_2321FEF5C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v11, 1, 1, v29);
        v30 = v26;
        v31 = sub_2321FF1FC();
        sub_232044A00(0);
        v33 = v32;
        v34 = v46;
        sub_23200054C((uint64_t)v20, v46 + *(int *)(v32 + 52), type metadata accessor for SnidgetFeedItemMetadata);

        *(_QWORD *)v34 = v31;
        *(_OWORD *)(v34 + 8) = xmmword_2322116E0;
        *(_QWORD *)(v34 + 24) = 0;
        sub_232002CEC((uint64_t)v20, type metadata accessor for SnidgetFeedItemMetadata);
        return (id)(*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v34, 0, 1, v33);
      }
      else
      {
        v35 = v49;
        sub_232200318();
        sub_23200054C((uint64_t)v1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider);
        v36 = sub_232200390();
        v37 = sub_2322012E4();
        if (os_log_type_enabled(v36, v37))
        {
          v38 = swift_slowAlloc();
          v39 = swift_slowAlloc();
          v51 = v39;
          *(_DWORD *)v38 = 136446466;
          v50 = sub_232013174(0xD000000000000029, 0x8000000232203410, &v51);
          sub_232201710();
          *(_WORD *)(v38 + 12) = 2080;
          v40 = objc_msgSend(*(id *)&v5[*(int *)(v3 + 24) + 16], sel_sensitiveLoggingIdentifier);
          v41 = sub_232200EC4();
          v43 = v42;

          v50 = sub_232013174(v41, v43, &v51);
          sub_232201710();
          swift_bridgeObjectRelease();
          sub_232002CEC((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider);
          _os_log_impl(&dword_231FFB000, v36, v37, "[%{public}s]: No display type could be found for %s for error case feedItem", (uint8_t *)v38, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x2348FF468](v39, -1, -1);
          MEMORY[0x2348FF468](v38, -1, -1);

          (*(void (**)(char *, uint64_t))(v47 + 8))(v49, v48);
        }
        else
        {
          sub_232002CEC((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider);

          (*(void (**)(char *, uint64_t))(v47 + 8))(v35, v48);
        }
        v44 = v46;
        sub_232044A00(0);
        return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v44, 1, 1, v45);
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_23203A0D4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  id *v21;
  uint64_t v22;
  id result;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;

  v3 = type metadata accessor for StateOfMindSnidgetFeedItemModelProvider();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23220039C();
  v47 = *(_QWORD *)(v6 - 8);
  v48 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v49 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B2930, (uint64_t (*)(uint64_t))MEMORY[0x24BE42FE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v46 - v10;
  sub_232025288(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, qword_2541B78E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47DF8], v8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v46 - v16;
  v18 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (id *)((char *)v1 + *(int *)(v3 + 20));
  if (((_BYTE)v21[1] & 1) != 0)
  {
    sub_232044DE8(0);
    return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a1, 1, 1, v22);
  }
  else
  {
    v46 = a1;
    result = objc_msgSend((id)objc_opt_self(), sel_sharedInstanceForHealthStore_, *v1);
    if (result)
    {
      v24 = result;
      v25 = v21[2];
      v26 = objc_msgSend(v24, sel_displayTypeForObjectType_, v25);

      if (v26)
      {
        v27 = sub_2321FE65C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v17, 1, 1, v27);
        v28 = sub_2321FD8B8();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v14, 1, 1, v28);
        sub_2320D71E8(0, (uint64_t)v17, MEMORY[0x24BEE4AF8], (uint64_t)v14, v20);
        sub_2321FF208();
        v29 = sub_2321FEF5C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v11, 1, 1, v29);
        v30 = v26;
        v31 = sub_2321FF1FC();
        sub_232044DE8(0);
        v33 = v32;
        v34 = v46;
        sub_23200054C((uint64_t)v20, v46 + *(int *)(v32 + 52), type metadata accessor for SnidgetFeedItemMetadata);

        *(_QWORD *)(v34 + 8) = 0;
        *(_QWORD *)(v34 + 16) = 0;
        *(_QWORD *)v34 = v31;
        *(_BYTE *)(v34 + 24) = 1;
        sub_232002CEC((uint64_t)v20, type metadata accessor for SnidgetFeedItemMetadata);
        return (id)(*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v34, 0, 1, v33);
      }
      else
      {
        v35 = v49;
        sub_232200318();
        sub_23200054C((uint64_t)v1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindSnidgetFeedItemModelProvider);
        v36 = sub_232200390();
        v37 = sub_2322012E4();
        if (os_log_type_enabled(v36, v37))
        {
          v38 = swift_slowAlloc();
          v39 = swift_slowAlloc();
          v51 = v39;
          *(_DWORD *)v38 = 136446466;
          v50 = sub_232013174(0xD000000000000027, 0x8000000232203470, &v51);
          sub_232201710();
          *(_WORD *)(v38 + 12) = 2080;
          v40 = objc_msgSend(*(id *)&v5[*(int *)(v3 + 20) + 16], sel_sensitiveLoggingIdentifier);
          v41 = sub_232200EC4();
          v43 = v42;

          v50 = sub_232013174(v41, v43, &v51);
          sub_232201710();
          swift_bridgeObjectRelease();
          sub_232002CEC((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindSnidgetFeedItemModelProvider);
          _os_log_impl(&dword_231FFB000, v36, v37, "[%{public}s]: No display type could be found for %s for error case feedItem", (uint8_t *)v38, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x2348FF468](v39, -1, -1);
          MEMORY[0x2348FF468](v38, -1, -1);

          (*(void (**)(char *, uint64_t))(v47 + 8))(v49, v48);
        }
        else
        {
          sub_232002CEC((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindSnidgetFeedItemModelProvider);

          (*(void (**)(char *, uint64_t))(v47 + 8))(v35, v48);
        }
        v44 = v46;
        sub_232044DE8(0);
        return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v44, 1, 1, v45);
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_23203A648@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  id *v24;
  uint64_t v25;
  id result;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;
  uint64_t (*v39)(_QWORD);
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(_QWORD);
  char *v57;
  uint64_t v58;
  uint64_t v59;

  v53 = a2;
  v54 = a3;
  v56 = a1;
  v6 = a1(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v50 - v7;
  v9 = sub_23220039C();
  v55 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v57 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B2930, (uint64_t (*)(uint64_t))MEMORY[0x24BE42FE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v50 - v13;
  sub_232025288(0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, qword_2541B78E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47DF8], v11);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v50 - v19;
  v21 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = (id *)((char *)v4 + *(int *)(v6 + 24));
  if (((_BYTE)v24[1] & 1) != 0)
  {
    sub_232000344(0);
    return (id)(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a4, 1, 1, v25);
  }
  else
  {
    v51 = v9;
    v52 = a4;
    result = objc_msgSend((id)objc_opt_self(), sel_sharedInstanceForHealthStore_, *v4);
    if (result)
    {
      v27 = result;
      v28 = v24[2];
      v29 = objc_msgSend(v27, sel_displayTypeForObjectType_, v28);

      if (v29)
      {
        v30 = sub_2321FE65C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v20, 1, 1, v30);
        v31 = sub_2321FD8B8();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v17, 1, 1, v31);
        sub_2320D71E8(0, (uint64_t)v20, MEMORY[0x24BEE4AF8], (uint64_t)v17, v23);
        sub_2321FF208();
        v32 = sub_2321FEF5C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v14, 1, 1, v32);
        v33 = v29;
        v34 = sub_2321FF1FC();
        sub_232000344(0);
        v36 = v35;
        v37 = v52;
        sub_23200054C((uint64_t)v23, (uint64_t)v52 + *(int *)(v35 + 52), type metadata accessor for SnidgetFeedItemMetadata);

        v37[1] = 0;
        v37[2] = 0;
        *v37 = v34;
        sub_232002CEC((uint64_t)v23, type metadata accessor for SnidgetFeedItemMetadata);
        return (id)(*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v37, 0, 1, v36);
      }
      else
      {
        v38 = v57;
        sub_232200318();
        v39 = v56;
        sub_23200054C((uint64_t)v4, (uint64_t)v8, v56);
        v40 = sub_232200390();
        v41 = sub_2322012E4();
        if (os_log_type_enabled(v40, v41))
        {
          v42 = swift_slowAlloc();
          v43 = swift_slowAlloc();
          v59 = v43;
          *(_DWORD *)v42 = 136446466;
          v58 = sub_232013174(v53, v54, &v59);
          sub_232201710();
          *(_WORD *)(v42 + 12) = 2080;
          v44 = objc_msgSend(*(id *)&v8[*(int *)(v6 + 24) + 16], sel_sensitiveLoggingIdentifier);
          v45 = sub_232200EC4();
          v47 = v46;

          v58 = sub_232013174(v45, v47, &v59);
          sub_232201710();
          swift_bridgeObjectRelease();
          sub_232002CEC((uint64_t)v8, v56);
          _os_log_impl(&dword_231FFB000, v40, v41, "[%{public}s]: No display type could be found for %s for error case feedItem", (uint8_t *)v42, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x2348FF468](v43, -1, -1);
          MEMORY[0x2348FF468](v42, -1, -1);

          (*(void (**)(char *, uint64_t))(v55 + 8))(v57, v51);
        }
        else
        {
          sub_232002CEC((uint64_t)v8, v39);

          (*(void (**)(char *, uint64_t))(v55 + 8))(v38, v51);
        }
        v48 = v52;
        sub_232000344(0);
        return (id)(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v48, 1, 1, v49);
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_23203ABA4@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  id *v26;
  uint64_t v27;
  id result;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  char *v39;
  uint64_t (*v40)(_QWORD);
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t (*v51)(_QWORD);
  uint64_t *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(_QWORD);
  char *v58;
  uint64_t v59;
  uint64_t v60;

  v53 = a3;
  v54 = a4;
  v57 = a1;
  v8 = a1(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v51 - v9;
  v11 = sub_23220039C();
  v55 = *(_QWORD *)(v11 - 8);
  v56 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v58 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B2930, (uint64_t (*)(uint64_t))MEMORY[0x24BE42FE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v51 - v15;
  sub_232025288(0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, qword_2541B78E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47DF8], v13);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v51 - v21;
  v23 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v51 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = (id *)((char *)v5 + *(int *)(v8 + 20));
  if (((_BYTE)v26[1] & 1) != 0)
  {
    v27 = a2(0);
    return (id)(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(a5, 1, 1, v27);
  }
  else
  {
    v51 = a2;
    v52 = a5;
    result = objc_msgSend((id)objc_opt_self(), sel_sharedInstanceForHealthStore_, *v5);
    if (result)
    {
      v29 = result;
      v30 = v26[2];
      v31 = objc_msgSend(v29, sel_displayTypeForObjectType_, v30);

      if (v31)
      {
        v32 = sub_2321FE65C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v22, 1, 1, v32);
        v33 = sub_2321FD8B8();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v19, 1, 1, v33);
        sub_2320D71E8(0, (uint64_t)v22, MEMORY[0x24BEE4AF8], (uint64_t)v19, v25);
        sub_2321FF208();
        v34 = sub_2321FEF5C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v16, 1, 1, v34);
        v35 = v31;
        v36 = sub_2321FF1FC();
        v37 = v51(0);
        v38 = v52;
        sub_23200054C((uint64_t)v25, (uint64_t)v52 + *(int *)(v37 + 52), type metadata accessor for SnidgetFeedItemMetadata);

        v38[1] = 0;
        v38[2] = 0;
        *v38 = v36;
        sub_232002CEC((uint64_t)v25, type metadata accessor for SnidgetFeedItemMetadata);
        return (id)(*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v38, 0, 1, v37);
      }
      else
      {
        v39 = v58;
        sub_232200318();
        v40 = v57;
        sub_23200054C((uint64_t)v5, (uint64_t)v10, v57);
        v41 = sub_232200390();
        v42 = sub_2322012E4();
        if (os_log_type_enabled(v41, v42))
        {
          v43 = swift_slowAlloc();
          v44 = swift_slowAlloc();
          v60 = v44;
          *(_DWORD *)v43 = 136446466;
          v59 = sub_232013174(v53, v54, &v60);
          sub_232201710();
          *(_WORD *)(v43 + 12) = 2080;
          v45 = objc_msgSend(*(id *)&v10[*(int *)(v8 + 20) + 16], sel_sensitiveLoggingIdentifier);
          v46 = sub_232200EC4();
          v48 = v47;

          v59 = sub_232013174(v46, v48, &v60);
          sub_232201710();
          swift_bridgeObjectRelease();
          sub_232002CEC((uint64_t)v10, v57);
          _os_log_impl(&dword_231FFB000, v41, v42, "[%{public}s]: No display type could be found for %s for error case feedItem", (uint8_t *)v43, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x2348FF468](v44, -1, -1);
          MEMORY[0x2348FF468](v43, -1, -1);

          (*(void (**)(char *, uint64_t))(v55 + 8))(v58, v56);
        }
        else
        {
          sub_232002CEC((uint64_t)v10, v40);

          (*(void (**)(char *, uint64_t))(v55 + 8))(v39, v56);
        }
        v49 = v52;
        v50 = v51(0);
        return (id)(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v49, 1, 1, v50);
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_23203B104@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  id *v21;
  uint64_t v22;
  id result;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;

  v3 = type metadata accessor for BalanceSnidgetFeedItemModelProvider();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23220039C();
  v47 = *(_QWORD *)(v6 - 8);
  v48 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v49 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B2930, (uint64_t (*)(uint64_t))MEMORY[0x24BE42FE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v46 - v10;
  sub_232025288(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, qword_2541B78E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47DF8], v8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v46 - v16;
  v18 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (id *)((char *)v1 + *(int *)(v3 + 20));
  if (((_BYTE)v21[1] & 1) != 0)
  {
    sub_23204467C(0);
    return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a1, 1, 1, v22);
  }
  else
  {
    v46 = a1;
    result = objc_msgSend((id)objc_opt_self(), sel_sharedInstanceForHealthStore_, *v1);
    if (result)
    {
      v24 = result;
      v25 = v21[2];
      v26 = objc_msgSend(v24, sel_displayTypeForObjectType_, v25);

      if (v26)
      {
        v27 = sub_2321FE65C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v17, 1, 1, v27);
        v28 = sub_2321FD8B8();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v14, 1, 1, v28);
        sub_2320D71E8(0, (uint64_t)v17, MEMORY[0x24BEE4AF8], (uint64_t)v14, v20);
        sub_2321FF208();
        v29 = sub_2321FEF5C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v11, 1, 1, v29);
        v30 = v26;
        v31 = sub_2321FF1FC();
        sub_23204467C(0);
        v33 = v32;
        v34 = v46;
        sub_23200054C((uint64_t)v20, v46 + *(int *)(v32 + 52), type metadata accessor for SnidgetFeedItemMetadata);

        *(_QWORD *)v34 = v31;
        *(_OWORD *)(v34 + 8) = 0u;
        *(_OWORD *)(v34 + 24) = 0u;
        sub_232002CEC((uint64_t)v20, type metadata accessor for SnidgetFeedItemMetadata);
        return (id)(*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v34, 0, 1, v33);
      }
      else
      {
        v35 = v49;
        sub_232200318();
        sub_23200054C((uint64_t)v1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for BalanceSnidgetFeedItemModelProvider);
        v36 = sub_232200390();
        v37 = sub_2322012E4();
        if (os_log_type_enabled(v36, v37))
        {
          v38 = swift_slowAlloc();
          v39 = swift_slowAlloc();
          v51 = v39;
          *(_DWORD *)v38 = 136446466;
          v50 = sub_232013174(0xD000000000000023, 0x8000000232203380, &v51);
          sub_232201710();
          *(_WORD *)(v38 + 12) = 2080;
          v40 = objc_msgSend(*(id *)&v5[*(int *)(v3 + 20) + 16], sel_sensitiveLoggingIdentifier);
          v41 = sub_232200EC4();
          v43 = v42;

          v50 = sub_232013174(v41, v43, &v51);
          sub_232201710();
          swift_bridgeObjectRelease();
          sub_232002CEC((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for BalanceSnidgetFeedItemModelProvider);
          _os_log_impl(&dword_231FFB000, v36, v37, "[%{public}s]: No display type could be found for %s for error case feedItem", (uint8_t *)v38, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x2348FF468](v39, -1, -1);
          MEMORY[0x2348FF468](v38, -1, -1);

          (*(void (**)(char *, uint64_t))(v47 + 8))(v49, v48);
        }
        else
        {
          sub_232002CEC((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for BalanceSnidgetFeedItemModelProvider);

          (*(void (**)(char *, uint64_t))(v47 + 8))(v35, v48);
        }
        v44 = v46;
        sub_23204467C(0);
        return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v44, 1, 1, v45);
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_23203B678@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  id *v26;
  uint64_t v27;
  id result;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t (*v40)(_QWORD);
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(_QWORD);
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(_QWORD);
  char *v58;
  uint64_t v59;
  uint64_t v60;

  v53 = a3;
  v54 = a4;
  v57 = a1;
  v8 = a1(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v51 - v9;
  v11 = sub_23220039C();
  v55 = *(_QWORD *)(v11 - 8);
  v56 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v58 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B2930, (uint64_t (*)(uint64_t))MEMORY[0x24BE42FE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v51 - v15;
  sub_232025288(0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, qword_2541B78E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47DF8], v13);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v51 - v21;
  v23 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v51 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = (id *)((char *)v5 + *(int *)(v8 + 20));
  if (((_BYTE)v26[1] & 1) != 0)
  {
    v27 = a2(0);
    return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(a5, 1, 1, v27);
  }
  else
  {
    v51 = a2;
    v52 = a5;
    result = objc_msgSend((id)objc_opt_self(), sel_sharedInstanceForHealthStore_, *v5);
    if (result)
    {
      v29 = result;
      v30 = v26[2];
      v31 = objc_msgSend(v29, sel_displayTypeForObjectType_, v30);

      if (v31)
      {
        v32 = sub_2321FE65C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v22, 1, 1, v32);
        v33 = sub_2321FD8B8();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v19, 1, 1, v33);
        sub_2320D71E8(0, (uint64_t)v22, MEMORY[0x24BEE4AF8], (uint64_t)v19, v25);
        sub_2321FF208();
        v34 = sub_2321FEF5C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v16, 1, 1, v34);
        v35 = v31;
        v36 = sub_2321FF1FC();
        v37 = v51(0);
        v38 = v52;
        sub_23200054C((uint64_t)v25, v52 + *(int *)(v37 + 52), type metadata accessor for SnidgetFeedItemMetadata);

        *(_QWORD *)v38 = v36;
        *(_QWORD *)(v38 + 8) = 0;
        *(_BYTE *)(v38 + 16) = 1;
        sub_232002CEC((uint64_t)v25, type metadata accessor for SnidgetFeedItemMetadata);
        return (id)(*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v38, 0, 1, v37);
      }
      else
      {
        v39 = v58;
        sub_232200318();
        v40 = v57;
        sub_23200054C((uint64_t)v5, (uint64_t)v10, v57);
        v41 = sub_232200390();
        v42 = sub_2322012E4();
        if (os_log_type_enabled(v41, v42))
        {
          v43 = swift_slowAlloc();
          v44 = swift_slowAlloc();
          v60 = v44;
          *(_DWORD *)v43 = 136446466;
          v59 = sub_232013174(v53, v54, &v60);
          sub_232201710();
          *(_WORD *)(v43 + 12) = 2080;
          v45 = objc_msgSend(*(id *)&v10[*(int *)(v8 + 20) + 16], sel_sensitiveLoggingIdentifier);
          v46 = sub_232200EC4();
          v48 = v47;

          v59 = sub_232013174(v46, v48, &v60);
          sub_232201710();
          swift_bridgeObjectRelease();
          sub_232002CEC((uint64_t)v10, v57);
          _os_log_impl(&dword_231FFB000, v41, v42, "[%{public}s]: No display type could be found for %s for error case feedItem", (uint8_t *)v43, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x2348FF468](v44, -1, -1);
          MEMORY[0x2348FF468](v43, -1, -1);

          (*(void (**)(char *, uint64_t))(v55 + 8))(v58, v56);
        }
        else
        {
          sub_232002CEC((uint64_t)v10, v40);

          (*(void (**)(char *, uint64_t))(v55 + 8))(v39, v56);
        }
        v49 = v52;
        v50 = v51(0);
        return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v49, 1, 1, v50);
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_23203BBDC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_23203BBF0(a1, a2);
}

uint64_t sub_23203BBF0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  int v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  _QWORD *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  os_log_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t result;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  _QWORD *v74;
  os_log_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94[3];
  uint64_t v95;

  v80 = a2;
  sub_232025288(0);
  MEMORY[0x24BDAC7A8](v3);
  v91 = (uint64_t)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x24BDAC7A8](v93);
  v79 = (uint64_t)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232000344(0);
  v7 = v6;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v88 = (uint64_t)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v87 = (uint64_t)&v74 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v82 = (uint64_t)&v74 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v86 = (_QWORD **)((char *)&v74 - v14);
  v15 = type metadata accessor for MostRecentRangeSnidgetFeedItemModelProvider();
  MEMORY[0x24BDAC7A8](v15);
  v81 = (uint64_t)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23220039C();
  v83 = *(_QWORD *)(v17 - 8);
  v84 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v89 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *a1;
  v19 = a1[1];
  v21 = a1[2];
  sub_232043EC8();
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 24) = xmmword_2322116F0;
  *(_QWORD *)(v22 + 16) = v20;
  swift_beginAccess();
  v23 = *(_QWORD *)(v22 + 24);
  *(_QWORD *)(v22 + 24) = v19;
  swift_retain();
  v24 = v15;
  swift_retain();
  swift_retain();
  sub_2320459C8(v23);
  v25 = v85;
  swift_beginAccess();
  v90 = v22;
  *(_QWORD *)(v22 + 32) = v21;
  v26 = (uint64_t)a1;
  swift_release();
  v27 = v25 + *(int *)(v15 + 24);
  if (objc_msgSend(*(id *)(v27 + 16), sel_isAbleToWriteHealthSensitiveLogs))
  {
    v78 = v7;
    sub_232200318();
    v28 = v81;
    sub_23200054C(v25, v81, (uint64_t (*)(_QWORD))type metadata accessor for MostRecentRangeSnidgetFeedItemModelProvider);
    sub_23200054C((uint64_t)a1, (uint64_t)v86, (uint64_t (*)(_QWORD))sub_232000344);
    v29 = (uint64_t)a1;
    v30 = v82;
    sub_23200054C(v29, v82, (uint64_t (*)(_QWORD))sub_232000344);
    sub_23200054C(v26, v87, (uint64_t (*)(_QWORD))sub_232000344);
    sub_23200054C(v26, v88, (uint64_t (*)(_QWORD))sub_232000344);
    v31 = sub_232200390();
    v32 = sub_2322012FC();
    v33 = v32;
    if (os_log_type_enabled(v31, v32))
    {
      v34 = swift_slowAlloc();
      v35 = (_QWORD *)swift_slowAlloc();
      v74 = v35;
      v85 = swift_slowAlloc();
      v94[0] = v85;
      *(_DWORD *)v34 = 138413315;
      v76 = v33;
      v36 = v28 + *(int *)(v24 + 24);
      v37 = v28;
      v38 = *(void **)(v36 + 16);
      v75 = v31;
      v95 = (uint64_t)v38;
      v77 = v27;
      v39 = v38;
      sub_232201710();
      *v35 = v38;
      sub_232002CEC(v37, (uint64_t (*)(_QWORD))type metadata accessor for MostRecentRangeSnidgetFeedItemModelProvider);
      *(_WORD *)(v34 + 12) = 2080;
      v40 = v86;
      v95 = *v86;
      sub_2321FF208();
      swift_retain();
      v41 = sub_232200F00();
      v95 = sub_232013174(v41, v42, v94);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC((uint64_t)v40, (uint64_t (*)(_QWORD))sub_232000344);
      *(_WORD *)(v34 + 22) = 2081;
      v95 = *(_QWORD *)(v30 + 8);
      sub_232043E88(0);
      swift_retain();
      v43 = sub_232200F00();
      v95 = sub_232013174(v43, v44, v94);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v30, (uint64_t (*)(_QWORD))sub_232000344);
      *(_WORD *)(v34 + 32) = 2080;
      v45 = v87;
      v95 = *(_QWORD *)(v87 + 16);
      sub_2320057B8(0, &qword_2541B29C8, (uint64_t (*)(uint64_t))MEMORY[0x24BE43C88], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      swift_retain();
      v46 = sub_232200F00();
      v95 = sub_232013174(v46, v47, v94);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v45, (uint64_t (*)(_QWORD))sub_232000344);
      *(_WORD *)(v34 + 42) = 2080;
      v7 = v78;
      v48 = v88;
      sub_23200054C(v88 + *(int *)(v78 + 52), v79, type metadata accessor for SnidgetFeedItemMetadata);
      v49 = sub_232200F00();
      v95 = sub_232013174(v49, v50, v94);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v48, (uint64_t (*)(_QWORD))sub_232000344);
      v51 = v75;
      _os_log_impl(&dword_231FFB000, v75, (os_log_type_t)v76, "Created hosting content for %@: header=%s, cv=%{private}s, viz=%s, metadata=%s", (uint8_t *)v34, 0x34u);
      sub_2320057B8(0, (unint64_t *)&qword_2541B78B0, (uint64_t (*)(uint64_t))sub_232044250, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v52 = v74;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v52, -1, -1);
      v53 = v85;
      swift_arrayDestroy();
      v54 = v53;
      v27 = v77;
      MEMORY[0x2348FF468](v54, -1, -1);
      MEMORY[0x2348FF468](v34, -1, -1);

      (*(void (**)(char *, uint64_t))(v83 + 8))(v89, v84);
    }
    else
    {
      sub_232002CEC(v28, (uint64_t (*)(_QWORD))type metadata accessor for MostRecentRangeSnidgetFeedItemModelProvider);
      sub_232002CEC((uint64_t)v86, (uint64_t (*)(_QWORD))sub_232000344);
      sub_232002CEC(v30, (uint64_t (*)(_QWORD))sub_232000344);
      sub_232002CEC(v87, (uint64_t (*)(_QWORD))sub_232000344);
      sub_232002CEC(v88, (uint64_t (*)(_QWORD))sub_232000344);

      (*(void (**)(char *, uint64_t))(v83 + 8))(v89, v84);
      v7 = v78;
    }
  }
  v55 = *(void **)(v27 + 16);
  v56 = v26 + *(int *)(v7 + 52);
  v57 = v91;
  sub_23200054C(v56 + *(int *)(v93 + 28), v91, (uint64_t (*)(_QWORD))sub_232025288);
  sub_2320440DC();
  v58 = swift_allocObject();
  v59 = v58 + qword_2541BF780;
  v60 = sub_2321FD8B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v59, 1, 1, v60);
  v61 = v55;
  v62 = objc_msgSend(v61, sel_identifier);
  v63 = sub_232200EC4();
  v65 = v64;

  *(_QWORD *)(v58 + 16) = v63;
  *(_QWORD *)(v58 + 24) = v65;
  swift_beginAccess();
  sub_232025424(v57, v59);
  swift_endAccess();
  v94[0] = v58;
  sub_232000590(&qword_2541B3638, (uint64_t (*)(uint64_t))sub_2320440DC, (uint64_t)&unk_2322121BC);
  v66 = v92;
  v67 = sub_2321FF0B8();
  if (v66)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    v70 = v67;
    v71 = v68;
    swift_release();
    sub_2320057B8(0, &qword_2541B3D50, (uint64_t (*)(uint64_t))sub_232043EC8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HostingConfigurationContent);
    v73 = v80;
    result = sub_23200054C(v56, (uint64_t)v80 + *(int *)(v72 + 32), type metadata accessor for SnidgetFeedItemMetadata);
    *v73 = v90;
    v73[1] = v70;
    v73[2] = v71;
  }
  return result;
}

uint64_t sub_23203C49C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  int v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  os_log_t v50;
  _QWORD *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t result;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  _QWORD *v72;
  os_log_t v73;
  int v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v76 = a2;
  sub_232025288(0);
  MEMORY[0x24BDAC7A8](v3);
  v89 = (uint64_t)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x24BDAC7A8](v91);
  v75 = (uint64_t)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232044A00(0);
  v81 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v86 = (uint64_t)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v85 = (uint64_t)&v72 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v84 = (uint64_t)&v72 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v83 = (uint64_t *)((char *)&v72 - v13);
  v80 = type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider();
  MEMORY[0x24BDAC7A8](v80);
  v77 = (uint64_t)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_23220039C();
  v78 = *(_QWORD *)(v79 - 8);
  MEMORY[0x24BDAC7A8](v79);
  v87 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a1;
  v16 = a1[1];
  v18 = a1[2];
  v19 = a1[3];
  sub_232044A80();
  v20 = swift_allocObject();
  *(int64x2_t *)(v20 + 24) = vdupq_n_s64(1uLL);
  *(_QWORD *)(v20 + 40) = 0;
  *(_QWORD *)(v20 + 16) = v17;
  swift_beginAccess();
  v21 = *(_QWORD *)(v20 + 24);
  *(_QWORD *)(v20 + 24) = v16;
  v22 = v80;
  v23 = v82;
  swift_retain();
  sub_232044C68(v18);
  v24 = a1;
  swift_retain();
  sub_2320459C8(v21);
  v25 = v81;
  swift_beginAccess();
  v26 = *(_QWORD *)(v20 + 32);
  *(_QWORD *)(v20 + 32) = v18;
  *(_QWORD *)(v20 + 40) = v19;
  v88 = v20;
  sub_232044C9C(v26);
  v27 = v23 + *(int *)(v22 + 24);
  if (objc_msgSend(*(id *)(v27 + 16), sel_isAbleToWriteHealthSensitiveLogs))
  {
    sub_232200318();
    v28 = v77;
    sub_23200054C(v23, v77, (uint64_t (*)(_QWORD))type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider);
    sub_23200054C((uint64_t)a1, (uint64_t)v83, (uint64_t (*)(_QWORD))sub_232044A00);
    sub_23200054C((uint64_t)a1, v84, (uint64_t (*)(_QWORD))sub_232044A00);
    sub_23200054C((uint64_t)a1, v85, (uint64_t (*)(_QWORD))sub_232044A00);
    sub_23200054C((uint64_t)a1, v86, (uint64_t (*)(_QWORD))sub_232044A00);
    v29 = sub_232200390();
    v30 = sub_2322012FC();
    v31 = v30;
    if (os_log_type_enabled(v29, v30))
    {
      v32 = swift_slowAlloc();
      v33 = (_QWORD *)swift_slowAlloc();
      v72 = v33;
      v82 = swift_slowAlloc();
      v94 = v82;
      *(_DWORD *)v32 = 138413315;
      v74 = v31;
      v34 = v28 + *(int *)(v22 + 24);
      v80 = v27;
      v35 = *(void **)(v34 + 16);
      v73 = v29;
      v92 = (uint64_t)v35;
      v36 = v35;
      sub_232201710();
      *v33 = v35;
      sub_232002CEC(v28, (uint64_t (*)(_QWORD))type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider);
      *(_WORD *)(v32 + 12) = 2080;
      v37 = v83;
      v92 = *v83;
      sub_2321FF208();
      swift_retain();
      v38 = sub_232200F00();
      v92 = sub_232013174(v38, v39, &v94);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC((uint64_t)v37, (uint64_t (*)(_QWORD))sub_232044A00);
      *(_WORD *)(v32 + 22) = 2081;
      v40 = v84;
      v92 = *(_QWORD *)(v84 + 8);
      sub_232043E88(0);
      swift_retain();
      v41 = sub_232200F00();
      v92 = sub_232013174(v41, v42, &v94);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v40, (uint64_t (*)(_QWORD))sub_232044A00);
      *(_WORD *)(v32 + 32) = 2080;
      v43 = v85;
      v44 = *(_QWORD *)(v85 + 24);
      v92 = *(_QWORD *)(v85 + 16);
      v93 = v44;
      sub_232044C68(v92);
      sub_23204617C(0, &qword_2541B47E8);
      v45 = sub_232200F00();
      v92 = sub_232013174(v45, v46, &v94);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v43, (uint64_t (*)(_QWORD))sub_232044A00);
      *(_WORD *)(v32 + 42) = 2080;
      v47 = v86;
      sub_23200054C(v86 + *(int *)(v25 + 52), v75, type metadata accessor for SnidgetFeedItemMetadata);
      v48 = sub_232200F00();
      v92 = sub_232013174(v48, v49, &v94);
      v27 = v80;
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v47, (uint64_t (*)(_QWORD))sub_232044A00);
      v50 = v73;
      _os_log_impl(&dword_231FFB000, v73, (os_log_type_t)v74, "Created hosting content for %@: header=%s, cv=%{private}s, viz=%s, metadata=%s", (uint8_t *)v32, 0x34u);
      sub_2320057B8(0, (unint64_t *)&qword_2541B78B0, (uint64_t (*)(uint64_t))sub_232044250, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v51 = v72;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v51, -1, -1);
      v52 = v82;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v52, -1, -1);
      MEMORY[0x2348FF468](v32, -1, -1);

    }
    else
    {
      sub_232002CEC(v28, (uint64_t (*)(_QWORD))type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider);
      sub_232002CEC((uint64_t)v83, (uint64_t (*)(_QWORD))sub_232044A00);
      sub_232002CEC(v84, (uint64_t (*)(_QWORD))sub_232044A00);
      sub_232002CEC(v85, (uint64_t (*)(_QWORD))sub_232044A00);
      sub_232002CEC(v86, (uint64_t (*)(_QWORD))sub_232044A00);

    }
    (*(void (**)(char *, uint64_t))(v78 + 8))(v87, v79);
  }
  v53 = *(void **)(v27 + 16);
  v54 = (uint64_t)v24 + *(int *)(v25 + 52);
  v55 = v89;
  sub_23200054C(v54 + *(int *)(v91 + 28), v89, (uint64_t (*)(_QWORD))sub_232025288);
  sub_232044CCC();
  v56 = swift_allocObject();
  v57 = v56 + qword_2541BF780;
  v58 = sub_2321FD8B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v57, 1, 1, v58);
  v59 = v53;
  v60 = objc_msgSend(v59, sel_identifier);
  v61 = sub_232200EC4();
  v63 = v62;

  *(_QWORD *)(v56 + 16) = v61;
  *(_QWORD *)(v56 + 24) = v63;
  swift_beginAccess();
  sub_232025424(v55, v57);
  swift_endAccess();
  v92 = v56;
  sub_232000590(&qword_2541B35D8, (uint64_t (*)(uint64_t))sub_232044CCC, (uint64_t)&unk_2322121BC);
  v64 = v90;
  v65 = sub_2321FF0B8();
  if (v64)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    v68 = v65;
    v69 = v66;
    swift_release();
    sub_2320057B8(0, &qword_2541B3D20, (uint64_t (*)(uint64_t))sub_232044A80, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HostingConfigurationContent);
    v71 = v76;
    result = sub_23200054C(v54, (uint64_t)v76 + *(int *)(v70 + 32), type metadata accessor for SnidgetFeedItemMetadata);
    *v71 = v88;
    v71[1] = v68;
    v71[2] = v69;
  }
  return result;
}

uint64_t sub_23203CD20@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  void *v35;
  id v36;
  _QWORD *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t result;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  _QWORD *v72;
  os_log_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;

  v77 = a2;
  sub_232025288(0);
  MEMORY[0x24BDAC7A8](v3);
  v89 = (uint64_t)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x24BDAC7A8](v81);
  v76 = (uint64_t)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232044DE8(0);
  v91 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v86 = (uint64_t)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v85 = (uint64_t)&v72 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v84 = (uint64_t)&v72 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v83 = (_QWORD **)((char *)&v72 - v13);
  v14 = type metadata accessor for StateOfMindSnidgetFeedItemModelProvider();
  MEMORY[0x24BDAC7A8](v14);
  v78 = (uint64_t)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_23220039C();
  v79 = *(_QWORD *)(v80 - 8);
  MEMORY[0x24BDAC7A8](v80);
  v87 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)a1;
  v18 = *(_QWORD *)(a1 + 8);
  v19 = *(_QWORD *)(a1 + 16);
  v20 = *(_BYTE *)(a1 + 24);
  sub_232044DFC();
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 24) = xmmword_2322116F0;
  *(_BYTE *)(v21 + 40) = 1;
  *(_QWORD *)(v21 + 16) = v17;
  swift_beginAccess();
  v22 = *(_QWORD *)(v21 + 24);
  *(_QWORD *)(v21 + 24) = v18;
  swift_retain();
  v23 = v82;
  swift_retain();
  sub_2320459C8(v22);
  swift_beginAccess();
  *(_QWORD *)(v21 + 32) = v19;
  v88 = v21;
  *(_BYTE *)(v21 + 40) = v20;
  v24 = v81;
  v25 = v23 + *(int *)(v14 + 20);
  if (objc_msgSend(*(id *)(v25 + 16), sel_isAbleToWriteHealthSensitiveLogs))
  {
    v26 = v14;
    sub_232200318();
    v27 = v78;
    sub_23200054C(v23, v78, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindSnidgetFeedItemModelProvider);
    sub_23200054C(a1, (uint64_t)v83, (uint64_t (*)(_QWORD))sub_232044DE8);
    sub_23200054C(a1, v84, (uint64_t (*)(_QWORD))sub_232044DE8);
    sub_23200054C(a1, v85, (uint64_t (*)(_QWORD))sub_232044DE8);
    sub_23200054C(a1, v86, (uint64_t (*)(_QWORD))sub_232044DE8);
    v28 = sub_232200390();
    v29 = sub_2322012FC();
    v30 = v29;
    if (os_log_type_enabled(v28, v29))
    {
      v31 = swift_slowAlloc();
      v74 = v30;
      v32 = v31;
      v33 = (_QWORD *)swift_slowAlloc();
      v72 = v33;
      v82 = swift_slowAlloc();
      v94 = v82;
      *(_DWORD *)v32 = 138413315;
      v73 = v28;
      v34 = v24;
      v35 = *(void **)(v27 + *(int *)(v26 + 20) + 16);
      v75 = v25;
      v92 = (uint64_t)v35;
      v36 = v35;
      sub_232201710();
      *v33 = v35;
      v24 = v34;
      sub_232002CEC(v27, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindSnidgetFeedItemModelProvider);
      *(_WORD *)(v32 + 12) = 2080;
      v37 = v83;
      v92 = *v83;
      sub_2321FF208();
      swift_retain();
      v38 = sub_232200F00();
      v92 = sub_232013174(v38, v39, &v94);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC((uint64_t)v37, (uint64_t (*)(_QWORD))sub_232044DE8);
      *(_WORD *)(v32 + 22) = 2081;
      v40 = v84;
      v92 = *(_QWORD *)(v84 + 8);
      sub_232043E88(0);
      swift_retain();
      v41 = sub_232200F00();
      v92 = sub_232013174(v41, v42, &v94);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v40, (uint64_t (*)(_QWORD))sub_232044DE8);
      *(_WORD *)(v32 + 32) = 2080;
      v43 = v85;
      v44 = *(_BYTE *)(v85 + 24);
      v92 = *(_QWORD *)(v85 + 16);
      v93 = v44;
      sub_23204617C(0, &qword_2541B45C8);
      v45 = sub_232200F00();
      v92 = sub_232013174(v45, v46, &v94);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v43, (uint64_t (*)(_QWORD))sub_232044DE8);
      *(_WORD *)(v32 + 42) = 2080;
      v47 = v86;
      sub_23200054C(v86 + *(int *)(v91 + 52), v76, type metadata accessor for SnidgetFeedItemMetadata);
      v48 = sub_232200F00();
      v92 = sub_232013174(v48, v49, &v94);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v47, (uint64_t (*)(_QWORD))sub_232044DE8);
      v28 = v73;
      _os_log_impl(&dword_231FFB000, v73, (os_log_type_t)v74, "Created hosting content for %@: header=%s, cv=%{private}s, viz=%s, metadata=%s", (uint8_t *)v32, 0x34u);
      sub_2320057B8(0, (unint64_t *)&qword_2541B78B0, (uint64_t (*)(uint64_t))sub_232044250, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v50 = v72;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v50, -1, -1);
      v51 = v82;
      swift_arrayDestroy();
      v52 = v51;
      v25 = v75;
      MEMORY[0x2348FF468](v52, -1, -1);
      MEMORY[0x2348FF468](v32, -1, -1);
    }
    else
    {
      sub_232002CEC(v27, (uint64_t (*)(_QWORD))type metadata accessor for StateOfMindSnidgetFeedItemModelProvider);
      sub_232002CEC((uint64_t)v83, (uint64_t (*)(_QWORD))sub_232044DE8);
      sub_232002CEC(v84, (uint64_t (*)(_QWORD))sub_232044DE8);
      sub_232002CEC(v85, (uint64_t (*)(_QWORD))sub_232044DE8);
      sub_232002CEC(v86, (uint64_t (*)(_QWORD))sub_232044DE8);
    }

    (*(void (**)(char *, uint64_t))(v79 + 8))(v87, v80);
  }
  v53 = *(void **)(v25 + 16);
  v54 = a1 + *(int *)(v91 + 52);
  v55 = v89;
  sub_23200054C(v54 + *(int *)(v24 + 28), v89, (uint64_t (*)(_QWORD))sub_232025288);
  sub_232044FE4();
  v56 = swift_allocObject();
  v57 = v56 + qword_2541BF780;
  v58 = sub_2321FD8B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v57, 1, 1, v58);
  v59 = v53;
  v60 = objc_msgSend(v59, sel_identifier);
  v61 = sub_232200EC4();
  v63 = v62;

  *(_QWORD *)(v56 + 16) = v61;
  *(_QWORD *)(v56 + 24) = v63;
  swift_beginAccess();
  sub_232025424(v55, v57);
  swift_endAccess();
  v92 = v56;
  sub_232000590(&qword_2541B35C8, (uint64_t (*)(uint64_t))sub_232044FE4, (uint64_t)&unk_2322121BC);
  v64 = v90;
  v65 = sub_2321FF0B8();
  if (v64)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    v68 = v65;
    v69 = v66;
    swift_release();
    sub_2320057B8(0, &qword_2541B3D18, (uint64_t (*)(uint64_t))sub_232044DFC, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HostingConfigurationContent);
    v71 = v77;
    result = sub_23200054C(v54, (uint64_t)v77 + *(int *)(v70 + 32), type metadata accessor for SnidgetFeedItemMetadata);
    *v71 = v88;
    v71[1] = v68;
    v71[2] = v69;
  }
  return result;
}

uint64_t sub_23203D5A0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t *v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t result;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  _QWORD *v75;
  os_log_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93[3];
  uint64_t v94;

  v80 = a2;
  sub_232025288(0);
  MEMORY[0x24BDAC7A8](v3);
  v90 = (uint64_t)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x24BDAC7A8](v5);
  v79 = (uint64_t)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232045B4C(0);
  v92 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v87 = (uint64_t)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v86 = (uint64_t)&v75 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v85 = (uint64_t)&v75 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v84 = (_QWORD **)((char *)&v75 - v14);
  v15 = type metadata accessor for ECGSnidgetFeedItemModelProvider();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23220039C();
  v81 = *(_QWORD *)(v18 - 8);
  v82 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v88 = (char *)&v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)a1;
  v21 = *(_QWORD *)(a1 + 8);
  v22 = *(_BYTE *)(a1 + 16);
  sub_232045B60();
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 24) = 1;
  v24 = (uint64_t *)(v23 + 24);
  *(_BYTE *)(v23 + 32) = 1;
  v25 = (_BYTE *)(v23 + 32);
  v89 = v23;
  *(_QWORD *)(v23 + 16) = v20;
  swift_beginAccess();
  v26 = *v24;
  *v24 = v21;
  swift_retain();
  v27 = v83;
  swift_retain();
  sub_2320459C8(v26);
  swift_beginAccess();
  *v25 = v22;
  v28 = v5;
  v29 = v27 + *(int *)(v15 + 20);
  if (objc_msgSend(*(id *)(v29 + 16), sel_isAbleToWriteHealthSensitiveLogs))
  {
    sub_232200318();
    v30 = (uint64_t)v17;
    sub_23200054C(v27, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for ECGSnidgetFeedItemModelProvider);
    sub_23200054C(a1, (uint64_t)v84, (uint64_t (*)(_QWORD))sub_232045B4C);
    sub_23200054C(a1, v85, (uint64_t (*)(_QWORD))sub_232045B4C);
    sub_23200054C(a1, v86, (uint64_t (*)(_QWORD))sub_232045B4C);
    sub_23200054C(a1, v87, (uint64_t (*)(_QWORD))sub_232045B4C);
    v31 = sub_232200390();
    v32 = sub_2322012FC();
    v33 = v32;
    if (os_log_type_enabled(v31, v32))
    {
      v34 = swift_slowAlloc();
      v77 = v33;
      v35 = v34;
      v36 = (_QWORD *)swift_slowAlloc();
      v75 = v36;
      v83 = swift_slowAlloc();
      v93[0] = v83;
      *(_DWORD *)v35 = 138413315;
      v76 = v31;
      v37 = v30 + *(int *)(v15 + 20);
      v78 = v29;
      v38 = a1;
      v39 = v28;
      v40 = *(void **)(v37 + 16);
      v94 = (uint64_t)v40;
      v41 = v40;
      sub_232201710();
      *v36 = v40;
      v28 = v39;
      a1 = v38;
      sub_232002CEC(v30, (uint64_t (*)(_QWORD))type metadata accessor for ECGSnidgetFeedItemModelProvider);
      *(_WORD *)(v35 + 12) = 2080;
      v42 = v84;
      v94 = *v84;
      sub_2321FF208();
      swift_retain();
      v43 = sub_232200F00();
      v94 = sub_232013174(v43, v44, v93);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC((uint64_t)v42, (uint64_t (*)(_QWORD))sub_232045B4C);
      *(_WORD *)(v35 + 22) = 2081;
      v45 = v85;
      v94 = *(_QWORD *)(v85 + 8);
      sub_232043E88(0);
      swift_retain();
      v46 = sub_232200F00();
      v94 = sub_232013174(v46, v47, v93);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v45, (uint64_t (*)(_QWORD))sub_232045B4C);
      *(_WORD *)(v35 + 32) = 2080;
      v48 = v86;
      LOBYTE(v94) = *(_BYTE *)(v86 + 16);
      sub_23204617C(0, &qword_2541B3C70);
      v49 = sub_232200F00();
      v94 = sub_232013174(v49, v50, v93);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v48, (uint64_t (*)(_QWORD))sub_232045B4C);
      *(_WORD *)(v35 + 42) = 2080;
      v51 = v87;
      sub_23200054C(v87 + *(int *)(v92 + 52), v79, type metadata accessor for SnidgetFeedItemMetadata);
      v52 = sub_232200F00();
      v94 = sub_232013174(v52, v53, v93);
      sub_232201710();
      v29 = v78;
      swift_bridgeObjectRelease();
      sub_232002CEC(v51, (uint64_t (*)(_QWORD))sub_232045B4C);
      v31 = v76;
      _os_log_impl(&dword_231FFB000, v76, (os_log_type_t)v77, "Created hosting content for %@: header=%s, cv=%{private}s, viz=%s, metadata=%s", (uint8_t *)v35, 0x34u);
      sub_2320057B8(0, (unint64_t *)&qword_2541B78B0, (uint64_t (*)(uint64_t))sub_232044250, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v54 = v75;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v54, -1, -1);
      v55 = v83;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v55, -1, -1);
      MEMORY[0x2348FF468](v35, -1, -1);
    }
    else
    {
      sub_232002CEC(v30, (uint64_t (*)(_QWORD))type metadata accessor for ECGSnidgetFeedItemModelProvider);
      sub_232002CEC((uint64_t)v84, (uint64_t (*)(_QWORD))sub_232045B4C);
      sub_232002CEC(v85, (uint64_t (*)(_QWORD))sub_232045B4C);
      sub_232002CEC(v86, (uint64_t (*)(_QWORD))sub_232045B4C);
      sub_232002CEC(v87, (uint64_t (*)(_QWORD))sub_232045B4C);
    }

    (*(void (**)(char *, uint64_t))(v81 + 8))(v88, v82);
  }
  v56 = *(void **)(v29 + 16);
  v57 = a1 + *(int *)(v92 + 52);
  v58 = v90;
  sub_23200054C(v57 + *(int *)(v28 + 28), v90, (uint64_t (*)(_QWORD))sub_232025288);
  sub_232045D48();
  v59 = swift_allocObject();
  v60 = v59 + qword_2541BF780;
  v61 = sub_2321FD8B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v60, 1, 1, v61);
  v62 = v56;
  v63 = objc_msgSend(v62, sel_identifier);
  v64 = sub_232200EC4();
  v66 = v65;

  *(_QWORD *)(v59 + 16) = v64;
  *(_QWORD *)(v59 + 24) = v66;
  swift_beginAccess();
  sub_232025424(v58, v60);
  swift_endAccess();
  v93[0] = v59;
  sub_232000590(&qword_2541B35E8, (uint64_t (*)(uint64_t))sub_232045D48, (uint64_t)&unk_2322121BC);
  v67 = v91;
  v68 = sub_2321FF0B8();
  if (v67)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    v71 = v68;
    v72 = v69;
    swift_release();
    sub_2320057B8(0, &qword_2541B3D28, (uint64_t (*)(uint64_t))sub_232045B60, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HostingConfigurationContent);
    v74 = v80;
    result = sub_23200054C(v57, (uint64_t)v80 + *(int *)(v73 + 32), type metadata accessor for SnidgetFeedItemMetadata);
    *v74 = v89;
    v74[1] = v71;
    v74[2] = v72;
  }
  return result;
}

uint64_t sub_23203DDFC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  int v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  _QWORD *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  os_log_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t result;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  _QWORD *v74;
  os_log_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94[3];
  uint64_t v95;

  v80 = a2;
  sub_232025288(0);
  MEMORY[0x24BDAC7A8](v3);
  v91 = (uint64_t)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x24BDAC7A8](v93);
  v79 = (uint64_t)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232045100(0);
  v7 = v6;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v88 = (uint64_t)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v87 = (uint64_t)&v74 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v82 = (uint64_t)&v74 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v86 = (_QWORD **)((char *)&v74 - v14);
  v15 = type metadata accessor for SleepSnidgetFeedItemModelProvider();
  MEMORY[0x24BDAC7A8](v15);
  v81 = (uint64_t)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23220039C();
  v83 = *(_QWORD *)(v17 - 8);
  v84 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v89 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *a1;
  v19 = a1[1];
  v21 = a1[2];
  sub_23204511C();
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 24) = xmmword_2322116F0;
  *(_QWORD *)(v22 + 16) = v20;
  swift_beginAccess();
  v23 = *(_QWORD *)(v22 + 24);
  *(_QWORD *)(v22 + 24) = v19;
  swift_retain();
  v24 = v15;
  swift_retain();
  swift_retain();
  sub_2320459C8(v23);
  v25 = v85;
  swift_beginAccess();
  v90 = v22;
  *(_QWORD *)(v22 + 32) = v21;
  v26 = (uint64_t)a1;
  swift_release();
  v27 = v25 + *(int *)(v15 + 20);
  if (objc_msgSend(*(id *)(v27 + 16), sel_isAbleToWriteHealthSensitiveLogs))
  {
    v78 = v7;
    sub_232200318();
    v28 = v81;
    sub_23200054C(v25, v81, (uint64_t (*)(_QWORD))type metadata accessor for SleepSnidgetFeedItemModelProvider);
    sub_23200054C((uint64_t)a1, (uint64_t)v86, (uint64_t (*)(_QWORD))sub_232045100);
    v29 = (uint64_t)a1;
    v30 = v82;
    sub_23200054C(v29, v82, (uint64_t (*)(_QWORD))sub_232045100);
    sub_23200054C(v26, v87, (uint64_t (*)(_QWORD))sub_232045100);
    sub_23200054C(v26, v88, (uint64_t (*)(_QWORD))sub_232045100);
    v31 = sub_232200390();
    v32 = sub_2322012FC();
    v33 = v32;
    if (os_log_type_enabled(v31, v32))
    {
      v34 = swift_slowAlloc();
      v35 = (_QWORD *)swift_slowAlloc();
      v74 = v35;
      v85 = swift_slowAlloc();
      v94[0] = v85;
      *(_DWORD *)v34 = 138413315;
      v76 = v33;
      v36 = v28 + *(int *)(v24 + 20);
      v37 = v28;
      v38 = *(void **)(v36 + 16);
      v75 = v31;
      v95 = (uint64_t)v38;
      v77 = v27;
      v39 = v38;
      sub_232201710();
      *v35 = v38;
      sub_232002CEC(v37, (uint64_t (*)(_QWORD))type metadata accessor for SleepSnidgetFeedItemModelProvider);
      *(_WORD *)(v34 + 12) = 2080;
      v40 = v86;
      v95 = *v86;
      sub_2321FF208();
      swift_retain();
      v41 = sub_232200F00();
      v95 = sub_232013174(v41, v42, v94);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC((uint64_t)v40, (uint64_t (*)(_QWORD))sub_232045100);
      *(_WORD *)(v34 + 22) = 2081;
      v95 = *(_QWORD *)(v30 + 8);
      sub_232043E88(0);
      swift_retain();
      v43 = sub_232200F00();
      v95 = sub_232013174(v43, v44, v94);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v30, (uint64_t (*)(_QWORD))sub_232045100);
      *(_WORD *)(v34 + 32) = 2080;
      v45 = v87;
      v95 = *(_QWORD *)(v87 + 16);
      sub_2320057B8(0, &qword_2541B37C0, (uint64_t (*)(uint64_t))type metadata accessor for SleepSnidgetViewContainer.ViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      swift_retain();
      v46 = sub_232200F00();
      v95 = sub_232013174(v46, v47, v94);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v45, (uint64_t (*)(_QWORD))sub_232045100);
      *(_WORD *)(v34 + 42) = 2080;
      v7 = v78;
      v48 = v88;
      sub_23200054C(v88 + *(int *)(v78 + 52), v79, type metadata accessor for SnidgetFeedItemMetadata);
      v49 = sub_232200F00();
      v95 = sub_232013174(v49, v50, v94);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v48, (uint64_t (*)(_QWORD))sub_232045100);
      v51 = v75;
      _os_log_impl(&dword_231FFB000, v75, (os_log_type_t)v76, "Created hosting content for %@: header=%s, cv=%{private}s, viz=%s, metadata=%s", (uint8_t *)v34, 0x34u);
      sub_2320057B8(0, (unint64_t *)&qword_2541B78B0, (uint64_t (*)(uint64_t))sub_232044250, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v52 = v74;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v52, -1, -1);
      v53 = v85;
      swift_arrayDestroy();
      v54 = v53;
      v27 = v77;
      MEMORY[0x2348FF468](v54, -1, -1);
      MEMORY[0x2348FF468](v34, -1, -1);

      (*(void (**)(char *, uint64_t))(v83 + 8))(v89, v84);
    }
    else
    {
      sub_232002CEC(v28, (uint64_t (*)(_QWORD))type metadata accessor for SleepSnidgetFeedItemModelProvider);
      sub_232002CEC((uint64_t)v86, (uint64_t (*)(_QWORD))sub_232045100);
      sub_232002CEC(v30, (uint64_t (*)(_QWORD))sub_232045100);
      sub_232002CEC(v87, (uint64_t (*)(_QWORD))sub_232045100);
      sub_232002CEC(v88, (uint64_t (*)(_QWORD))sub_232045100);

      (*(void (**)(char *, uint64_t))(v83 + 8))(v89, v84);
      v7 = v78;
    }
  }
  v55 = *(void **)(v27 + 16);
  v56 = v26 + *(int *)(v7 + 52);
  v57 = v91;
  sub_23200054C(v56 + *(int *)(v93 + 28), v91, (uint64_t (*)(_QWORD))sub_232025288);
  sub_2320452AC();
  v58 = swift_allocObject();
  v59 = v58 + qword_2541BF780;
  v60 = sub_2321FD8B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v59, 1, 1, v60);
  v61 = v55;
  v62 = objc_msgSend(v61, sel_identifier);
  v63 = sub_232200EC4();
  v65 = v64;

  *(_QWORD *)(v58 + 16) = v63;
  *(_QWORD *)(v58 + 24) = v65;
  swift_beginAccess();
  sub_232025424(v57, v59);
  swift_endAccess();
  v94[0] = v58;
  sub_232000590(&qword_2541B3618, (uint64_t (*)(uint64_t))sub_2320452AC, (uint64_t)&unk_2322121BC);
  v66 = v92;
  v67 = sub_2321FF0B8();
  if (v66)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    v70 = v67;
    v71 = v68;
    swift_release();
    sub_2320057B8(0, &qword_2541B3D40, (uint64_t (*)(uint64_t))sub_23204511C, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HostingConfigurationContent);
    v73 = v80;
    result = sub_23200054C(v56, (uint64_t)v80 + *(int *)(v72 + 32), type metadata accessor for SnidgetFeedItemMetadata);
    *v73 = v90;
    v73[1] = v70;
    v73[2] = v71;
  }
  return result;
}

uint64_t sub_23203E6A8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  int v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  void *v37;
  id v38;
  uint64_t *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  os_log_t v53;
  _QWORD *v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t result;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  os_log_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  char *v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;

  v78 = a2;
  sub_232025288(0);
  MEMORY[0x24BDAC7A8](v3);
  v92 = (uint64_t)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x24BDAC7A8](v94);
  v77 = (uint64_t)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23204467C(0);
  v84 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v89 = (uint64_t)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v88 = (_QWORD **)((char *)&v75 - v10);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v87 = (uint64_t)&v75 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v86 = (uint64_t *)((char *)&v75 - v13);
  v83 = type metadata accessor for BalanceSnidgetFeedItemModelProvider();
  MEMORY[0x24BDAC7A8](v83);
  v79 = (uint64_t)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_23220039C();
  v80 = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81);
  v90 = (char *)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a1;
  v17 = a1[1];
  v18 = a1[2];
  v19 = a1[3];
  v82 = a1[4];
  sub_232044690();
  v20 = (_QWORD *)swift_allocObject();
  v20[3] = 1;
  v20[5] = 0;
  v20[6] = 0;
  v20[4] = 0;
  v20[2] = v16;
  swift_beginAccess();
  v21 = v20[3];
  v20[3] = v17;
  v22 = v83;
  swift_retain();
  v23 = v82;
  sub_232044854(v18);
  v24 = v85;
  swift_retain();
  v25 = v21;
  v26 = v84;
  sub_2320459C8(v25);
  swift_beginAccess();
  v27 = v20[4];
  v20[4] = v18;
  v28 = a1;
  v20[5] = v19;
  v20[6] = v23;
  v91 = v20;
  sub_23204488C(v27);
  v29 = v24 + *(int *)(v22 + 20);
  if (objc_msgSend(*(id *)(v29 + 16), sel_isAbleToWriteHealthSensitiveLogs))
  {
    sub_232200318();
    v30 = v79;
    sub_23200054C(v24, v79, (uint64_t (*)(_QWORD))type metadata accessor for BalanceSnidgetFeedItemModelProvider);
    sub_23200054C((uint64_t)a1, (uint64_t)v86, (uint64_t (*)(_QWORD))sub_23204467C);
    sub_23200054C((uint64_t)a1, v87, (uint64_t (*)(_QWORD))sub_23204467C);
    sub_23200054C((uint64_t)a1, (uint64_t)v88, (uint64_t (*)(_QWORD))sub_23204467C);
    sub_23200054C((uint64_t)a1, v89, (uint64_t (*)(_QWORD))sub_23204467C);
    v31 = sub_232200390();
    v32 = sub_2322012FC();
    v33 = v32;
    if (os_log_type_enabled(v31, v32))
    {
      v34 = swift_slowAlloc();
      v35 = (_QWORD *)swift_slowAlloc();
      v75 = v35;
      v85 = swift_slowAlloc();
      v98 = v85;
      *(_DWORD *)v34 = 138413315;
      LODWORD(v82) = v33;
      v36 = v30 + *(int *)(v22 + 20);
      v83 = v29;
      v37 = *(void **)(v36 + 16);
      v76 = v31;
      v95 = (uint64_t)v37;
      v38 = v37;
      sub_232201710();
      *v35 = v37;
      sub_232002CEC(v30, (uint64_t (*)(_QWORD))type metadata accessor for BalanceSnidgetFeedItemModelProvider);
      *(_WORD *)(v34 + 12) = 2080;
      v39 = v86;
      v95 = *v86;
      sub_2321FF208();
      swift_retain();
      v40 = sub_232200F00();
      v95 = sub_232013174(v40, v41, &v98);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC((uint64_t)v39, (uint64_t (*)(_QWORD))sub_23204467C);
      *(_WORD *)(v34 + 22) = 2081;
      v42 = v87;
      v95 = *(_QWORD *)(v87 + 8);
      sub_232043E88(0);
      swift_retain();
      v43 = sub_232200F00();
      v95 = sub_232013174(v43, v44, &v98);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v42, (uint64_t (*)(_QWORD))sub_23204467C);
      *(_WORD *)(v34 + 32) = 2080;
      v45 = v88;
      v46 = v88[3];
      v47 = v88[4];
      v95 = v88[2];
      v96 = v46;
      v97 = v47;
      sub_232044854(v95);
      sub_23204617C(0, &qword_2541B6E38);
      v48 = sub_232200F00();
      v95 = sub_232013174(v48, v49, &v98);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC((uint64_t)v45, (uint64_t (*)(_QWORD))sub_23204467C);
      *(_WORD *)(v34 + 42) = 2080;
      v50 = v89;
      sub_23200054C(v89 + *(int *)(v26 + 52), v77, type metadata accessor for SnidgetFeedItemMetadata);
      v51 = sub_232200F00();
      v95 = sub_232013174(v51, v52, &v98);
      v29 = v83;
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v50, (uint64_t (*)(_QWORD))sub_23204467C);
      v53 = v76;
      _os_log_impl(&dword_231FFB000, v76, (os_log_type_t)v82, "Created hosting content for %@: header=%s, cv=%{private}s, viz=%s, metadata=%s", (uint8_t *)v34, 0x34u);
      sub_2320057B8(0, (unint64_t *)&qword_2541B78B0, (uint64_t (*)(uint64_t))sub_232044250, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v54 = v75;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v54, -1, -1);
      v55 = v85;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v55, -1, -1);
      MEMORY[0x2348FF468](v34, -1, -1);

    }
    else
    {
      sub_232002CEC(v30, (uint64_t (*)(_QWORD))type metadata accessor for BalanceSnidgetFeedItemModelProvider);
      sub_232002CEC((uint64_t)v86, (uint64_t (*)(_QWORD))sub_23204467C);
      sub_232002CEC(v87, (uint64_t (*)(_QWORD))sub_23204467C);
      sub_232002CEC((uint64_t)v88, (uint64_t (*)(_QWORD))sub_23204467C);
      sub_232002CEC(v89, (uint64_t (*)(_QWORD))sub_23204467C);

    }
    (*(void (**)(char *, uint64_t))(v80 + 8))(v90, v81);
  }
  v56 = *(void **)(v29 + 16);
  v57 = (uint64_t)v28 + *(int *)(v26 + 52);
  v58 = v92;
  sub_23200054C(v57 + *(int *)(v94 + 28), v92, (uint64_t (*)(_QWORD))sub_232025288);
  sub_2320448C4();
  v59 = swift_allocObject();
  v60 = v59 + qword_2541BF780;
  v61 = sub_2321FD8B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v60, 1, 1, v61);
  v62 = v56;
  v63 = objc_msgSend(v62, sel_identifier);
  v64 = sub_232200EC4();
  v66 = v65;

  *(_QWORD *)(v59 + 16) = v64;
  *(_QWORD *)(v59 + 24) = v66;
  swift_beginAccess();
  sub_232025424(v58, v60);
  swift_endAccess();
  v95 = v59;
  sub_232000590(&qword_2541B6CD0, (uint64_t (*)(uint64_t))sub_2320448C4, (uint64_t)&unk_2322121BC);
  v67 = v93;
  v68 = sub_2321FF0B8();
  if (v67)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    v71 = v68;
    v72 = v69;
    swift_release();
    sub_2320057B8(0, &qword_2541B6D90, (uint64_t (*)(uint64_t))sub_232044690, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HostingConfigurationContent);
    v74 = v78;
    result = sub_23200054C(v57, (uint64_t)v78 + *(int *)(v73 + 32), type metadata accessor for SnidgetFeedItemMetadata);
    *v74 = v91;
    v74[1] = v71;
    v74[2] = v72;
  }
  return result;
}

uint64_t sub_23203EF54@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t *v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t result;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  _QWORD *v75;
  os_log_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93[3];
  uint64_t v94;

  v80 = a2;
  sub_232025288(0);
  MEMORY[0x24BDAC7A8](v3);
  v90 = (uint64_t)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x24BDAC7A8](v5);
  v79 = (uint64_t)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232045E64(0);
  v92 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v87 = (uint64_t)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v86 = (uint64_t)&v75 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v85 = (uint64_t)&v75 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v84 = (_QWORD **)((char *)&v75 - v14);
  v15 = type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23220039C();
  v81 = *(_QWORD *)(v18 - 8);
  v82 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v88 = (char *)&v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)a1;
  v21 = *(_QWORD *)(a1 + 8);
  v22 = *(_BYTE *)(a1 + 16);
  sub_232045E78();
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 24) = 1;
  v24 = (uint64_t *)(v23 + 24);
  *(_BYTE *)(v23 + 32) = 1;
  v25 = (_BYTE *)(v23 + 32);
  v89 = v23;
  *(_QWORD *)(v23 + 16) = v20;
  swift_beginAccess();
  v26 = *v24;
  *v24 = v21;
  swift_retain();
  v27 = v83;
  swift_retain();
  sub_2320459C8(v26);
  swift_beginAccess();
  *v25 = v22;
  v28 = v5;
  v29 = v27 + *(int *)(v15 + 20);
  if (objc_msgSend(*(id *)(v29 + 16), sel_isAbleToWriteHealthSensitiveLogs))
  {
    sub_232200318();
    v30 = (uint64_t)v17;
    sub_23200054C(v27, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider);
    sub_23200054C(a1, (uint64_t)v84, (uint64_t (*)(_QWORD))sub_232045E64);
    sub_23200054C(a1, v85, (uint64_t (*)(_QWORD))sub_232045E64);
    sub_23200054C(a1, v86, (uint64_t (*)(_QWORD))sub_232045E64);
    sub_23200054C(a1, v87, (uint64_t (*)(_QWORD))sub_232045E64);
    v31 = sub_232200390();
    v32 = sub_2322012FC();
    v33 = v32;
    if (os_log_type_enabled(v31, v32))
    {
      v34 = swift_slowAlloc();
      v77 = v33;
      v35 = v34;
      v36 = (_QWORD *)swift_slowAlloc();
      v75 = v36;
      v83 = swift_slowAlloc();
      v93[0] = v83;
      *(_DWORD *)v35 = 138413315;
      v76 = v31;
      v37 = v30 + *(int *)(v15 + 20);
      v78 = v29;
      v38 = a1;
      v39 = v28;
      v40 = *(void **)(v37 + 16);
      v94 = (uint64_t)v40;
      v41 = v40;
      sub_232201710();
      *v36 = v40;
      v28 = v39;
      a1 = v38;
      sub_232002CEC(v30, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider);
      *(_WORD *)(v35 + 12) = 2080;
      v42 = v84;
      v94 = *v84;
      sub_2321FF208();
      swift_retain();
      v43 = sub_232200F00();
      v94 = sub_232013174(v43, v44, v93);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC((uint64_t)v42, (uint64_t (*)(_QWORD))sub_232045E64);
      *(_WORD *)(v35 + 22) = 2081;
      v45 = v85;
      v94 = *(_QWORD *)(v85 + 8);
      sub_232043E88(0);
      swift_retain();
      v46 = sub_232200F00();
      v94 = sub_232013174(v46, v47, v93);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v45, (uint64_t (*)(_QWORD))sub_232045E64);
      *(_WORD *)(v35 + 32) = 2080;
      v48 = v86;
      LOBYTE(v94) = *(_BYTE *)(v86 + 16);
      sub_23204617C(0, &qword_2541B3D68);
      v49 = sub_232200F00();
      v94 = sub_232013174(v49, v50, v93);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v48, (uint64_t (*)(_QWORD))sub_232045E64);
      *(_WORD *)(v35 + 42) = 2080;
      v51 = v87;
      sub_23200054C(v87 + *(int *)(v92 + 52), v79, type metadata accessor for SnidgetFeedItemMetadata);
      v52 = sub_232200F00();
      v94 = sub_232013174(v52, v53, v93);
      sub_232201710();
      v29 = v78;
      swift_bridgeObjectRelease();
      sub_232002CEC(v51, (uint64_t (*)(_QWORD))sub_232045E64);
      v31 = v76;
      _os_log_impl(&dword_231FFB000, v76, (os_log_type_t)v77, "Created hosting content for %@: header=%s, cv=%{private}s, viz=%s, metadata=%s", (uint8_t *)v35, 0x34u);
      sub_2320057B8(0, (unint64_t *)&qword_2541B78B0, (uint64_t (*)(uint64_t))sub_232044250, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v54 = v75;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v54, -1, -1);
      v55 = v83;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v55, -1, -1);
      MEMORY[0x2348FF468](v35, -1, -1);
    }
    else
    {
      sub_232002CEC(v30, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider);
      sub_232002CEC((uint64_t)v84, (uint64_t (*)(_QWORD))sub_232045E64);
      sub_232002CEC(v85, (uint64_t (*)(_QWORD))sub_232045E64);
      sub_232002CEC(v86, (uint64_t (*)(_QWORD))sub_232045E64);
      sub_232002CEC(v87, (uint64_t (*)(_QWORD))sub_232045E64);
    }

    (*(void (**)(char *, uint64_t))(v81 + 8))(v88, v82);
  }
  v56 = *(void **)(v29 + 16);
  v57 = a1 + *(int *)(v92 + 52);
  v58 = v90;
  sub_23200054C(v57 + *(int *)(v28 + 28), v90, (uint64_t (*)(_QWORD))sub_232025288);
  sub_232046060();
  v59 = swift_allocObject();
  v60 = v59 + qword_2541BF780;
  v61 = sub_2321FD8B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v60, 1, 1, v61);
  v62 = v56;
  v63 = objc_msgSend(v62, sel_identifier);
  v64 = sub_232200EC4();
  v66 = v65;

  *(_QWORD *)(v59 + 16) = v64;
  *(_QWORD *)(v59 + 24) = v66;
  swift_beginAccess();
  sub_232025424(v58, v60);
  swift_endAccess();
  v93[0] = v59;
  sub_232000590(&qword_2541B35F8, (uint64_t (*)(uint64_t))sub_232046060, (uint64_t)&unk_2322121BC);
  v67 = v91;
  v68 = sub_2321FF0B8();
  if (v67)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    v71 = v68;
    v72 = v69;
    swift_release();
    sub_2320057B8(0, &qword_2541B3D30, (uint64_t (*)(uint64_t))sub_232045E78, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HostingConfigurationContent);
    v74 = v80;
    result = sub_23200054C(v57, (uint64_t)v80 + *(int *)(v73 + 32), type metadata accessor for SnidgetFeedItemMetadata);
    *v74 = v89;
    v74[1] = v71;
    v74[2] = v72;
  }
  return result;
}

uint64_t sub_23203F7B0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  int v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  _QWORD *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  os_log_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t result;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  _QWORD *v74;
  os_log_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94[3];
  uint64_t v95;

  v80 = a2;
  sub_232025288(0);
  MEMORY[0x24BDAC7A8](v3);
  v91 = (uint64_t)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x24BDAC7A8](v93);
  v79 = (uint64_t)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232045710(0);
  v7 = v6;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v88 = (uint64_t)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v87 = (uint64_t)&v74 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v82 = (uint64_t)&v74 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v86 = (_QWORD **)((char *)&v74 - v14);
  v15 = type metadata accessor for AudioExposureSnidgetFeedItemModelProvider();
  MEMORY[0x24BDAC7A8](v15);
  v81 = (uint64_t)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23220039C();
  v83 = *(_QWORD *)(v17 - 8);
  v84 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v89 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *a1;
  v19 = a1[1];
  v21 = a1[2];
  sub_23204576C();
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 24) = xmmword_2322116F0;
  *(_QWORD *)(v22 + 16) = v20;
  swift_beginAccess();
  v23 = *(_QWORD *)(v22 + 24);
  *(_QWORD *)(v22 + 24) = v19;
  swift_retain();
  v24 = v15;
  swift_retain();
  swift_retain();
  sub_2320459C8(v23);
  v25 = v85;
  swift_beginAccess();
  v90 = v22;
  *(_QWORD *)(v22 + 32) = v21;
  v26 = (uint64_t)a1;
  swift_release();
  v27 = v25 + *(int *)(v15 + 24);
  if (objc_msgSend(*(id *)(v27 + 16), sel_isAbleToWriteHealthSensitiveLogs))
  {
    v78 = v7;
    sub_232200318();
    v28 = v81;
    sub_23200054C(v25, v81, (uint64_t (*)(_QWORD))type metadata accessor for AudioExposureSnidgetFeedItemModelProvider);
    sub_23200054C((uint64_t)a1, (uint64_t)v86, (uint64_t (*)(_QWORD))sub_232045710);
    v29 = (uint64_t)a1;
    v30 = v82;
    sub_23200054C(v29, v82, (uint64_t (*)(_QWORD))sub_232045710);
    sub_23200054C(v26, v87, (uint64_t (*)(_QWORD))sub_232045710);
    sub_23200054C(v26, v88, (uint64_t (*)(_QWORD))sub_232045710);
    v31 = sub_232200390();
    v32 = sub_2322012FC();
    v33 = v32;
    if (os_log_type_enabled(v31, v32))
    {
      v34 = swift_slowAlloc();
      v35 = (_QWORD *)swift_slowAlloc();
      v74 = v35;
      v85 = swift_slowAlloc();
      v94[0] = v85;
      *(_DWORD *)v34 = 138413315;
      v76 = v33;
      v36 = v28 + *(int *)(v24 + 24);
      v37 = v28;
      v38 = *(void **)(v36 + 16);
      v75 = v31;
      v95 = (uint64_t)v38;
      v77 = v27;
      v39 = v38;
      sub_232201710();
      *v35 = v38;
      sub_232002CEC(v37, (uint64_t (*)(_QWORD))type metadata accessor for AudioExposureSnidgetFeedItemModelProvider);
      *(_WORD *)(v34 + 12) = 2080;
      v40 = v86;
      v95 = *v86;
      sub_2321FF208();
      swift_retain();
      v41 = sub_232200F00();
      v95 = sub_232013174(v41, v42, v94);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC((uint64_t)v40, (uint64_t (*)(_QWORD))sub_232045710);
      *(_WORD *)(v34 + 22) = 2081;
      v95 = *(_QWORD *)(v30 + 8);
      sub_23204572C(0);
      swift_retain();
      v43 = sub_232200F00();
      v95 = sub_232013174(v43, v44, v94);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v30, (uint64_t (*)(_QWORD))sub_232045710);
      *(_WORD *)(v34 + 32) = 2080;
      v45 = v87;
      v95 = *(_QWORD *)(v87 + 16);
      sub_2320057B8(0, &qword_2541B29C8, (uint64_t (*)(uint64_t))MEMORY[0x24BE43C88], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      swift_retain();
      v46 = sub_232200F00();
      v95 = sub_232013174(v46, v47, v94);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v45, (uint64_t (*)(_QWORD))sub_232045710);
      *(_WORD *)(v34 + 42) = 2080;
      v7 = v78;
      v48 = v88;
      sub_23200054C(v88 + *(int *)(v78 + 52), v79, type metadata accessor for SnidgetFeedItemMetadata);
      v49 = sub_232200F00();
      v95 = sub_232013174(v49, v50, v94);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v48, (uint64_t (*)(_QWORD))sub_232045710);
      v51 = v75;
      _os_log_impl(&dword_231FFB000, v75, (os_log_type_t)v76, "Created hosting content for %@: header=%s, cv=%{private}s, viz=%s, metadata=%s", (uint8_t *)v34, 0x34u);
      sub_2320057B8(0, (unint64_t *)&qword_2541B78B0, (uint64_t (*)(uint64_t))sub_232044250, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v52 = v74;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v52, -1, -1);
      v53 = v85;
      swift_arrayDestroy();
      v54 = v53;
      v27 = v77;
      MEMORY[0x2348FF468](v54, -1, -1);
      MEMORY[0x2348FF468](v34, -1, -1);

      (*(void (**)(char *, uint64_t))(v83 + 8))(v89, v84);
    }
    else
    {
      sub_232002CEC(v28, (uint64_t (*)(_QWORD))type metadata accessor for AudioExposureSnidgetFeedItemModelProvider);
      sub_232002CEC((uint64_t)v86, (uint64_t (*)(_QWORD))sub_232045710);
      sub_232002CEC(v30, (uint64_t (*)(_QWORD))sub_232045710);
      sub_232002CEC(v87, (uint64_t (*)(_QWORD))sub_232045710);
      sub_232002CEC(v88, (uint64_t (*)(_QWORD))sub_232045710);

      (*(void (**)(char *, uint64_t))(v83 + 8))(v89, v84);
      v7 = v78;
    }
  }
  v55 = *(void **)(v27 + 16);
  v56 = v26 + *(int *)(v7 + 52);
  v57 = v91;
  sub_23200054C(v56 + *(int *)(v93 + 28), v91, (uint64_t (*)(_QWORD))sub_232025288);
  sub_2320459D8();
  v58 = swift_allocObject();
  v59 = v58 + qword_2541BF780;
  v60 = sub_2321FD8B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v59, 1, 1, v60);
  v61 = v55;
  v62 = objc_msgSend(v61, sel_identifier);
  v63 = sub_232200EC4();
  v65 = v64;

  *(_QWORD *)(v58 + 16) = v63;
  *(_QWORD *)(v58 + 24) = v65;
  swift_beginAccess();
  sub_232025424(v57, v59);
  swift_endAccess();
  v94[0] = v58;
  sub_232000590(&qword_2541B35B8, (uint64_t (*)(uint64_t))sub_2320459D8, (uint64_t)&unk_2322121BC);
  v66 = v92;
  v67 = sub_2321FF0B8();
  if (v66)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    v70 = v67;
    v71 = v68;
    swift_release();
    sub_2320057B8(0, &qword_2541B3D10, (uint64_t (*)(uint64_t))sub_23204576C, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HostingConfigurationContent);
    v73 = v80;
    result = sub_23200054C(v56, (uint64_t)v80 + *(int *)(v72 + 32), type metadata accessor for SnidgetFeedItemMetadata);
    *v73 = v90;
    v73[1] = v70;
    v73[2] = v71;
  }
  return result;
}

uint64_t sub_23204005C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t *v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t result;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  _QWORD *v75;
  os_log_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93[3];
  uint64_t v94;

  v80 = a2;
  sub_232025288(0);
  MEMORY[0x24BDAC7A8](v3);
  v90 = (uint64_t)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x24BDAC7A8](v5);
  v79 = (uint64_t)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320453F8(0);
  v92 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v87 = (uint64_t)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v86 = (uint64_t)&v75 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v85 = (uint64_t)&v75 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v84 = (_QWORD **)((char *)&v75 - v14);
  v15 = type metadata accessor for GAD7AssessmentSnidgetFeedItemModelProvider();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23220039C();
  v81 = *(_QWORD *)(v18 - 8);
  v82 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v88 = (char *)&v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)a1;
  v21 = *(_QWORD *)(a1 + 8);
  v22 = *(_BYTE *)(a1 + 16);
  sub_23204540C();
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 24) = 1;
  v24 = (uint64_t *)(v23 + 24);
  *(_BYTE *)(v23 + 32) = 1;
  v25 = (_BYTE *)(v23 + 32);
  v89 = v23;
  *(_QWORD *)(v23 + 16) = v20;
  swift_beginAccess();
  v26 = *v24;
  *v24 = v21;
  swift_retain();
  v27 = v83;
  swift_retain();
  sub_2320459C8(v26);
  swift_beginAccess();
  *v25 = v22;
  v28 = v5;
  v29 = v27 + *(int *)(v15 + 20);
  if (objc_msgSend(*(id *)(v29 + 16), sel_isAbleToWriteHealthSensitiveLogs))
  {
    sub_232200318();
    v30 = (uint64_t)v17;
    sub_23200054C(v27, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for GAD7AssessmentSnidgetFeedItemModelProvider);
    sub_23200054C(a1, (uint64_t)v84, (uint64_t (*)(_QWORD))sub_2320453F8);
    sub_23200054C(a1, v85, (uint64_t (*)(_QWORD))sub_2320453F8);
    sub_23200054C(a1, v86, (uint64_t (*)(_QWORD))sub_2320453F8);
    sub_23200054C(a1, v87, (uint64_t (*)(_QWORD))sub_2320453F8);
    v31 = sub_232200390();
    v32 = sub_2322012FC();
    v33 = v32;
    if (os_log_type_enabled(v31, v32))
    {
      v34 = swift_slowAlloc();
      v77 = v33;
      v35 = v34;
      v36 = (_QWORD *)swift_slowAlloc();
      v75 = v36;
      v83 = swift_slowAlloc();
      v93[0] = v83;
      *(_DWORD *)v35 = 138413315;
      v76 = v31;
      v37 = v30 + *(int *)(v15 + 20);
      v78 = v29;
      v38 = a1;
      v39 = v28;
      v40 = *(void **)(v37 + 16);
      v94 = (uint64_t)v40;
      v41 = v40;
      sub_232201710();
      *v36 = v40;
      v28 = v39;
      a1 = v38;
      sub_232002CEC(v30, (uint64_t (*)(_QWORD))type metadata accessor for GAD7AssessmentSnidgetFeedItemModelProvider);
      *(_WORD *)(v35 + 12) = 2080;
      v42 = v84;
      v94 = *v84;
      sub_2321FF208();
      swift_retain();
      v43 = sub_232200F00();
      v94 = sub_232013174(v43, v44, v93);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC((uint64_t)v42, (uint64_t (*)(_QWORD))sub_2320453F8);
      *(_WORD *)(v35 + 22) = 2081;
      v45 = v85;
      v94 = *(_QWORD *)(v85 + 8);
      sub_232043E88(0);
      swift_retain();
      v46 = sub_232200F00();
      v94 = sub_232013174(v46, v47, v93);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v45, (uint64_t (*)(_QWORD))sub_2320453F8);
      *(_WORD *)(v35 + 32) = 2080;
      v48 = v86;
      LOBYTE(v94) = *(_BYTE *)(v86 + 16);
      sub_23204617C(0, &qword_2541B3E28);
      v49 = sub_232200F00();
      v94 = sub_232013174(v49, v50, v93);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v48, (uint64_t (*)(_QWORD))sub_2320453F8);
      *(_WORD *)(v35 + 42) = 2080;
      v51 = v87;
      sub_23200054C(v87 + *(int *)(v92 + 52), v79, type metadata accessor for SnidgetFeedItemMetadata);
      v52 = sub_232200F00();
      v94 = sub_232013174(v52, v53, v93);
      sub_232201710();
      v29 = v78;
      swift_bridgeObjectRelease();
      sub_232002CEC(v51, (uint64_t (*)(_QWORD))sub_2320453F8);
      v31 = v76;
      _os_log_impl(&dword_231FFB000, v76, (os_log_type_t)v77, "Created hosting content for %@: header=%s, cv=%{private}s, viz=%s, metadata=%s", (uint8_t *)v35, 0x34u);
      sub_2320057B8(0, (unint64_t *)&qword_2541B78B0, (uint64_t (*)(uint64_t))sub_232044250, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v54 = v75;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v54, -1, -1);
      v55 = v83;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v55, -1, -1);
      MEMORY[0x2348FF468](v35, -1, -1);
    }
    else
    {
      sub_232002CEC(v30, (uint64_t (*)(_QWORD))type metadata accessor for GAD7AssessmentSnidgetFeedItemModelProvider);
      sub_232002CEC((uint64_t)v84, (uint64_t (*)(_QWORD))sub_2320453F8);
      sub_232002CEC(v85, (uint64_t (*)(_QWORD))sub_2320453F8);
      sub_232002CEC(v86, (uint64_t (*)(_QWORD))sub_2320453F8);
      sub_232002CEC(v87, (uint64_t (*)(_QWORD))sub_2320453F8);
    }

    (*(void (**)(char *, uint64_t))(v81 + 8))(v88, v82);
  }
  v56 = *(void **)(v29 + 16);
  v57 = a1 + *(int *)(v92 + 52);
  v58 = v90;
  sub_23200054C(v57 + *(int *)(v28 + 28), v90, (uint64_t (*)(_QWORD))sub_232025288);
  sub_2320455F4();
  v59 = swift_allocObject();
  v60 = v59 + qword_2541BF780;
  v61 = sub_2321FD8B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v60, 1, 1, v61);
  v62 = v56;
  v63 = objc_msgSend(v62, sel_identifier);
  v64 = sub_232200EC4();
  v66 = v65;

  *(_QWORD *)(v59 + 16) = v64;
  *(_QWORD *)(v59 + 24) = v66;
  swift_beginAccess();
  sub_232025424(v58, v60);
  swift_endAccess();
  v93[0] = v59;
  sub_232000590(&qword_2541B3608, (uint64_t (*)(uint64_t))sub_2320455F4, (uint64_t)&unk_2322121BC);
  v67 = v91;
  v68 = sub_2321FF0B8();
  if (v67)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    v71 = v68;
    v72 = v69;
    swift_release();
    sub_2320057B8(0, &qword_2541B3D38, (uint64_t (*)(uint64_t))sub_23204540C, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HostingConfigurationContent);
    v74 = v80;
    result = sub_23200054C(v57, (uint64_t)v80 + *(int *)(v73 + 32), type metadata accessor for SnidgetFeedItemMetadata);
    *v74 = v89;
    v74[1] = v71;
    v74[2] = v72;
  }
  return result;
}

uint64_t sub_2320408B8@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(_QWORD);
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  int v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  void *v36;
  id v37;
  _QWORD *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  os_log_t v50;
  _QWORD *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t result;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  _QWORD *v72;
  os_log_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t (*v80)(_QWORD);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94[3];
  uint64_t v95;

  v93 = a1;
  v78 = a3;
  sub_232025288(0);
  MEMORY[0x24BDAC7A8](v5);
  v90 = (uint64_t)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x24BDAC7A8](v92);
  v77 = (uint64_t)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232000344(0);
  v9 = v8;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v87 = (uint64_t)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v86 = (uint64_t)&v72 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v85 = (uint64_t)&v72 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v84 = (_QWORD **)((char *)&v72 - v16);
  v80 = a2;
  v17 = a2(0);
  MEMORY[0x24BDAC7A8](v17);
  v79 = (uint64_t)&v72 - v18;
  v82 = sub_23220039C();
  v81 = *(_QWORD *)(v82 - 8);
  MEMORY[0x24BDAC7A8](v82);
  v88 = (char *)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *a1;
  v20 = a1[1];
  v22 = a1[2];
  sub_232043EC8();
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 24) = xmmword_2322116F0;
  *(_QWORD *)(v23 + 16) = v21;
  swift_beginAccess();
  v24 = *(_QWORD *)(v23 + 24);
  *(_QWORD *)(v23 + 24) = v20;
  swift_retain();
  swift_retain();
  v25 = v83;
  swift_retain();
  sub_2320459C8(v24);
  swift_beginAccess();
  v89 = v23;
  *(_QWORD *)(v23 + 32) = v22;
  swift_release();
  v76 = v17;
  v26 = v25 + *(int *)(v17 + 20);
  if (objc_msgSend(*(id *)(v26 + 16), sel_isAbleToWriteHealthSensitiveLogs))
  {
    v75 = v9;
    sub_232200318();
    v27 = v79;
    v28 = v80;
    sub_23200054C(v25, v79, v80);
    v29 = (uint64_t)v93;
    sub_23200054C((uint64_t)v93, (uint64_t)v84, (uint64_t (*)(_QWORD))sub_232000344);
    sub_23200054C(v29, v85, (uint64_t (*)(_QWORD))sub_232000344);
    sub_23200054C(v29, v86, (uint64_t (*)(_QWORD))sub_232000344);
    sub_23200054C(v29, v87, (uint64_t (*)(_QWORD))sub_232000344);
    v30 = sub_232200390();
    v31 = sub_2322012FC();
    v32 = v31;
    if (os_log_type_enabled(v30, v31))
    {
      v33 = swift_slowAlloc();
      v34 = (_QWORD *)swift_slowAlloc();
      v72 = v34;
      v83 = swift_slowAlloc();
      v94[0] = v83;
      *(_DWORD *)v33 = 138413315;
      v74 = v32;
      v35 = v27;
      v36 = *(void **)(v27 + *(int *)(v76 + 20) + 16);
      v73 = v30;
      v95 = (uint64_t)v36;
      v76 = v26;
      v37 = v36;
      sub_232201710();
      *v34 = v36;
      sub_232002CEC(v35, v28);
      *(_WORD *)(v33 + 12) = 2080;
      v38 = v84;
      v95 = *v84;
      sub_2321FF208();
      swift_retain();
      v39 = sub_232200F00();
      v95 = sub_232013174(v39, v40, v94);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC((uint64_t)v38, (uint64_t (*)(_QWORD))sub_232000344);
      *(_WORD *)(v33 + 22) = 2081;
      v41 = v85;
      v95 = *(_QWORD *)(v85 + 8);
      sub_232043E88(0);
      swift_retain();
      v42 = sub_232200F00();
      v95 = sub_232013174(v42, v43, v94);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v41, (uint64_t (*)(_QWORD))sub_232000344);
      *(_WORD *)(v33 + 32) = 2080;
      v44 = v86;
      v95 = *(_QWORD *)(v86 + 16);
      sub_2320057B8(0, &qword_2541B29C8, (uint64_t (*)(uint64_t))MEMORY[0x24BE43C88], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      swift_retain();
      v45 = sub_232200F00();
      v95 = sub_232013174(v45, v46, v94);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v44, (uint64_t (*)(_QWORD))sub_232000344);
      *(_WORD *)(v33 + 42) = 2080;
      v9 = v75;
      v47 = v87;
      sub_23200054C(v87 + *(int *)(v75 + 52), v77, type metadata accessor for SnidgetFeedItemMetadata);
      v48 = sub_232200F00();
      v95 = sub_232013174(v48, v49, v94);
      sub_232201710();
      v26 = v76;
      swift_bridgeObjectRelease();
      sub_232002CEC(v47, (uint64_t (*)(_QWORD))sub_232000344);
      v50 = v73;
      _os_log_impl(&dword_231FFB000, v73, (os_log_type_t)v74, "Created hosting content for %@: header=%s, cv=%{private}s, viz=%s, metadata=%s", (uint8_t *)v33, 0x34u);
      sub_2320057B8(0, (unint64_t *)&qword_2541B78B0, (uint64_t (*)(uint64_t))sub_232044250, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v51 = v72;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v51, -1, -1);
      v52 = v83;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v52, -1, -1);
      MEMORY[0x2348FF468](v33, -1, -1);

      (*(void (**)(char *, uint64_t))(v81 + 8))(v88, v82);
    }
    else
    {
      sub_232002CEC(v27, v28);
      sub_232002CEC((uint64_t)v84, (uint64_t (*)(_QWORD))sub_232000344);
      sub_232002CEC(v85, (uint64_t (*)(_QWORD))sub_232000344);
      sub_232002CEC(v86, (uint64_t (*)(_QWORD))sub_232000344);
      sub_232002CEC(v87, (uint64_t (*)(_QWORD))sub_232000344);

      (*(void (**)(char *, uint64_t))(v81 + 8))(v88, v82);
      v9 = v75;
    }
  }
  v53 = *(void **)(v26 + 16);
  v54 = (uint64_t)v93 + *(int *)(v9 + 52);
  v55 = v90;
  sub_23200054C(v54 + *(int *)(v92 + 28), v90, (uint64_t (*)(_QWORD))sub_232025288);
  sub_2320440DC();
  v56 = swift_allocObject();
  v57 = v56 + qword_2541BF780;
  v58 = sub_2321FD8B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v57, 1, 1, v58);
  v59 = v53;
  v60 = objc_msgSend(v59, sel_identifier);
  v61 = sub_232200EC4();
  v63 = v62;

  *(_QWORD *)(v56 + 16) = v61;
  *(_QWORD *)(v56 + 24) = v63;
  swift_beginAccess();
  sub_232025424(v55, v57);
  swift_endAccess();
  v94[0] = v56;
  sub_232000590(&qword_2541B3638, (uint64_t (*)(uint64_t))sub_2320440DC, (uint64_t)&unk_2322121BC);
  v64 = v91;
  v65 = sub_2321FF0B8();
  if (v64)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    v68 = v65;
    v69 = v66;
    swift_release();
    sub_2320057B8(0, &qword_2541B3D50, (uint64_t (*)(uint64_t))sub_232043EC8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HostingConfigurationContent);
    v71 = v78;
    result = sub_23200054C(v54, (uint64_t)v78 + *(int *)(v70 + 32), type metadata accessor for SnidgetFeedItemMetadata);
    *v71 = v89;
    v71[1] = v68;
    v71[2] = v69;
  }
  return result;
}

uint64_t sub_23204118C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t *v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t result;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  _QWORD *v75;
  os_log_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93[3];
  uint64_t v94;

  v80 = a2;
  sub_232025288(0);
  MEMORY[0x24BDAC7A8](v3);
  v90 = (uint64_t)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x24BDAC7A8](v5);
  v79 = (uint64_t)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320453F8(0);
  v92 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v87 = (uint64_t)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v86 = (uint64_t)&v75 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v85 = (uint64_t)&v75 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v84 = (_QWORD **)((char *)&v75 - v14);
  v15 = type metadata accessor for PHQ9AssessmentSnidgetFeedItemModelProvider();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23220039C();
  v81 = *(_QWORD *)(v18 - 8);
  v82 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v88 = (char *)&v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)a1;
  v21 = *(_QWORD *)(a1 + 8);
  v22 = *(_BYTE *)(a1 + 16);
  sub_23204540C();
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 24) = 1;
  v24 = (uint64_t *)(v23 + 24);
  *(_BYTE *)(v23 + 32) = 1;
  v25 = (_BYTE *)(v23 + 32);
  v89 = v23;
  *(_QWORD *)(v23 + 16) = v20;
  swift_beginAccess();
  v26 = *v24;
  *v24 = v21;
  swift_retain();
  v27 = v83;
  swift_retain();
  sub_2320459C8(v26);
  swift_beginAccess();
  *v25 = v22;
  v28 = v5;
  v29 = v27 + *(int *)(v15 + 20);
  if (objc_msgSend(*(id *)(v29 + 16), sel_isAbleToWriteHealthSensitiveLogs))
  {
    sub_232200318();
    v30 = (uint64_t)v17;
    sub_23200054C(v27, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for PHQ9AssessmentSnidgetFeedItemModelProvider);
    sub_23200054C(a1, (uint64_t)v84, (uint64_t (*)(_QWORD))sub_2320453F8);
    sub_23200054C(a1, v85, (uint64_t (*)(_QWORD))sub_2320453F8);
    sub_23200054C(a1, v86, (uint64_t (*)(_QWORD))sub_2320453F8);
    sub_23200054C(a1, v87, (uint64_t (*)(_QWORD))sub_2320453F8);
    v31 = sub_232200390();
    v32 = sub_2322012FC();
    v33 = v32;
    if (os_log_type_enabled(v31, v32))
    {
      v34 = swift_slowAlloc();
      v77 = v33;
      v35 = v34;
      v36 = (_QWORD *)swift_slowAlloc();
      v75 = v36;
      v83 = swift_slowAlloc();
      v93[0] = v83;
      *(_DWORD *)v35 = 138413315;
      v76 = v31;
      v37 = v30 + *(int *)(v15 + 20);
      v78 = v29;
      v38 = a1;
      v39 = v28;
      v40 = *(void **)(v37 + 16);
      v94 = (uint64_t)v40;
      v41 = v40;
      sub_232201710();
      *v36 = v40;
      v28 = v39;
      a1 = v38;
      sub_232002CEC(v30, (uint64_t (*)(_QWORD))type metadata accessor for PHQ9AssessmentSnidgetFeedItemModelProvider);
      *(_WORD *)(v35 + 12) = 2080;
      v42 = v84;
      v94 = *v84;
      sub_2321FF208();
      swift_retain();
      v43 = sub_232200F00();
      v94 = sub_232013174(v43, v44, v93);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC((uint64_t)v42, (uint64_t (*)(_QWORD))sub_2320453F8);
      *(_WORD *)(v35 + 22) = 2081;
      v45 = v85;
      v94 = *(_QWORD *)(v85 + 8);
      sub_232043E88(0);
      swift_retain();
      v46 = sub_232200F00();
      v94 = sub_232013174(v46, v47, v93);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v45, (uint64_t (*)(_QWORD))sub_2320453F8);
      *(_WORD *)(v35 + 32) = 2080;
      v48 = v86;
      LOBYTE(v94) = *(_BYTE *)(v86 + 16);
      sub_23204617C(0, &qword_2541B3E28);
      v49 = sub_232200F00();
      v94 = sub_232013174(v49, v50, v93);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v48, (uint64_t (*)(_QWORD))sub_2320453F8);
      *(_WORD *)(v35 + 42) = 2080;
      v51 = v87;
      sub_23200054C(v87 + *(int *)(v92 + 52), v79, type metadata accessor for SnidgetFeedItemMetadata);
      v52 = sub_232200F00();
      v94 = sub_232013174(v52, v53, v93);
      sub_232201710();
      v29 = v78;
      swift_bridgeObjectRelease();
      sub_232002CEC(v51, (uint64_t (*)(_QWORD))sub_2320453F8);
      v31 = v76;
      _os_log_impl(&dword_231FFB000, v76, (os_log_type_t)v77, "Created hosting content for %@: header=%s, cv=%{private}s, viz=%s, metadata=%s", (uint8_t *)v35, 0x34u);
      sub_2320057B8(0, (unint64_t *)&qword_2541B78B0, (uint64_t (*)(uint64_t))sub_232044250, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v54 = v75;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v54, -1, -1);
      v55 = v83;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v55, -1, -1);
      MEMORY[0x2348FF468](v35, -1, -1);
    }
    else
    {
      sub_232002CEC(v30, (uint64_t (*)(_QWORD))type metadata accessor for PHQ9AssessmentSnidgetFeedItemModelProvider);
      sub_232002CEC((uint64_t)v84, (uint64_t (*)(_QWORD))sub_2320453F8);
      sub_232002CEC(v85, (uint64_t (*)(_QWORD))sub_2320453F8);
      sub_232002CEC(v86, (uint64_t (*)(_QWORD))sub_2320453F8);
      sub_232002CEC(v87, (uint64_t (*)(_QWORD))sub_2320453F8);
    }

    (*(void (**)(char *, uint64_t))(v81 + 8))(v88, v82);
  }
  v56 = *(void **)(v29 + 16);
  v57 = a1 + *(int *)(v92 + 52);
  v58 = v90;
  sub_23200054C(v57 + *(int *)(v28 + 28), v90, (uint64_t (*)(_QWORD))sub_232025288);
  sub_2320455F4();
  v59 = swift_allocObject();
  v60 = v59 + qword_2541BF780;
  v61 = sub_2321FD8B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v60, 1, 1, v61);
  v62 = v56;
  v63 = objc_msgSend(v62, sel_identifier);
  v64 = sub_232200EC4();
  v66 = v65;

  *(_QWORD *)(v59 + 16) = v64;
  *(_QWORD *)(v59 + 24) = v66;
  swift_beginAccess();
  sub_232025424(v58, v60);
  swift_endAccess();
  v93[0] = v59;
  sub_232000590(&qword_2541B3608, (uint64_t (*)(uint64_t))sub_2320455F4, (uint64_t)&unk_2322121BC);
  v67 = v91;
  v68 = sub_2321FF0B8();
  if (v67)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    v71 = v68;
    v72 = v69;
    swift_release();
    sub_2320057B8(0, &qword_2541B3D38, (uint64_t (*)(uint64_t))sub_23204540C, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HostingConfigurationContent);
    v74 = v80;
    result = sub_23200054C(v57, (uint64_t)v80 + *(int *)(v73 + 32), type metadata accessor for SnidgetFeedItemMetadata);
    *v74 = v89;
    v74[1] = v71;
    v74[2] = v72;
  }
  return result;
}

uint64_t sub_2320419E8@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(_QWORD);
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  int v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  void *v36;
  id v37;
  _QWORD *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  os_log_t v50;
  _QWORD *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t result;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  _QWORD *v72;
  os_log_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t (*v80)(_QWORD);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94[3];
  uint64_t v95;

  v93 = a1;
  v78 = a3;
  sub_232025288(0);
  MEMORY[0x24BDAC7A8](v5);
  v90 = (uint64_t)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x24BDAC7A8](v92);
  v77 = (uint64_t)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232000344(0);
  v9 = v8;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v87 = (uint64_t)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v86 = (uint64_t)&v72 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v85 = (uint64_t)&v72 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v84 = (_QWORD **)((char *)&v72 - v16);
  v80 = a2;
  v17 = a2(0);
  MEMORY[0x24BDAC7A8](v17);
  v79 = (uint64_t)&v72 - v18;
  v82 = sub_23220039C();
  v81 = *(_QWORD *)(v82 - 8);
  MEMORY[0x24BDAC7A8](v82);
  v88 = (char *)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *a1;
  v20 = a1[1];
  v22 = a1[2];
  sub_232043EC8();
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 24) = xmmword_2322116F0;
  *(_QWORD *)(v23 + 16) = v21;
  swift_beginAccess();
  v24 = *(_QWORD *)(v23 + 24);
  *(_QWORD *)(v23 + 24) = v20;
  swift_retain();
  swift_retain();
  v25 = v83;
  swift_retain();
  sub_2320459C8(v24);
  swift_beginAccess();
  v89 = v23;
  *(_QWORD *)(v23 + 32) = v22;
  swift_release();
  v76 = v17;
  v26 = v25 + *(int *)(v17 + 24);
  if (objc_msgSend(*(id *)(v26 + 16), sel_isAbleToWriteHealthSensitiveLogs))
  {
    v75 = v9;
    sub_232200318();
    v27 = v79;
    v28 = v80;
    sub_23200054C(v25, v79, v80);
    v29 = (uint64_t)v93;
    sub_23200054C((uint64_t)v93, (uint64_t)v84, (uint64_t (*)(_QWORD))sub_232000344);
    sub_23200054C(v29, v85, (uint64_t (*)(_QWORD))sub_232000344);
    sub_23200054C(v29, v86, (uint64_t (*)(_QWORD))sub_232000344);
    sub_23200054C(v29, v87, (uint64_t (*)(_QWORD))sub_232000344);
    v30 = sub_232200390();
    v31 = sub_2322012FC();
    v32 = v31;
    if (os_log_type_enabled(v30, v31))
    {
      v33 = swift_slowAlloc();
      v34 = (_QWORD *)swift_slowAlloc();
      v72 = v34;
      v83 = swift_slowAlloc();
      v94[0] = v83;
      *(_DWORD *)v33 = 138413315;
      v74 = v32;
      v35 = v27;
      v36 = *(void **)(v27 + *(int *)(v76 + 24) + 16);
      v73 = v30;
      v95 = (uint64_t)v36;
      v76 = v26;
      v37 = v36;
      sub_232201710();
      *v34 = v36;
      sub_232002CEC(v35, v28);
      *(_WORD *)(v33 + 12) = 2080;
      v38 = v84;
      v95 = *v84;
      sub_2321FF208();
      swift_retain();
      v39 = sub_232200F00();
      v95 = sub_232013174(v39, v40, v94);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC((uint64_t)v38, (uint64_t (*)(_QWORD))sub_232000344);
      *(_WORD *)(v33 + 22) = 2081;
      v41 = v85;
      v95 = *(_QWORD *)(v85 + 8);
      sub_232043E88(0);
      swift_retain();
      v42 = sub_232200F00();
      v95 = sub_232013174(v42, v43, v94);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v41, (uint64_t (*)(_QWORD))sub_232000344);
      *(_WORD *)(v33 + 32) = 2080;
      v44 = v86;
      v95 = *(_QWORD *)(v86 + 16);
      sub_2320057B8(0, &qword_2541B29C8, (uint64_t (*)(uint64_t))MEMORY[0x24BE43C88], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      swift_retain();
      v45 = sub_232200F00();
      v95 = sub_232013174(v45, v46, v94);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v44, (uint64_t (*)(_QWORD))sub_232000344);
      *(_WORD *)(v33 + 42) = 2080;
      v9 = v75;
      v47 = v87;
      sub_23200054C(v87 + *(int *)(v75 + 52), v77, type metadata accessor for SnidgetFeedItemMetadata);
      v48 = sub_232200F00();
      v95 = sub_232013174(v48, v49, v94);
      sub_232201710();
      v26 = v76;
      swift_bridgeObjectRelease();
      sub_232002CEC(v47, (uint64_t (*)(_QWORD))sub_232000344);
      v50 = v73;
      _os_log_impl(&dword_231FFB000, v73, (os_log_type_t)v74, "Created hosting content for %@: header=%s, cv=%{private}s, viz=%s, metadata=%s", (uint8_t *)v33, 0x34u);
      sub_2320057B8(0, (unint64_t *)&qword_2541B78B0, (uint64_t (*)(uint64_t))sub_232044250, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v51 = v72;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v51, -1, -1);
      v52 = v83;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v52, -1, -1);
      MEMORY[0x2348FF468](v33, -1, -1);

      (*(void (**)(char *, uint64_t))(v81 + 8))(v88, v82);
    }
    else
    {
      sub_232002CEC(v27, v28);
      sub_232002CEC((uint64_t)v84, (uint64_t (*)(_QWORD))sub_232000344);
      sub_232002CEC(v85, (uint64_t (*)(_QWORD))sub_232000344);
      sub_232002CEC(v86, (uint64_t (*)(_QWORD))sub_232000344);
      sub_232002CEC(v87, (uint64_t (*)(_QWORD))sub_232000344);

      (*(void (**)(char *, uint64_t))(v81 + 8))(v88, v82);
      v9 = v75;
    }
  }
  v53 = *(void **)(v26 + 16);
  v54 = (uint64_t)v93 + *(int *)(v9 + 52);
  v55 = v90;
  sub_23200054C(v54 + *(int *)(v92 + 28), v90, (uint64_t (*)(_QWORD))sub_232025288);
  sub_2320440DC();
  v56 = swift_allocObject();
  v57 = v56 + qword_2541BF780;
  v58 = sub_2321FD8B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v57, 1, 1, v58);
  v59 = v53;
  v60 = objc_msgSend(v59, sel_identifier);
  v61 = sub_232200EC4();
  v63 = v62;

  *(_QWORD *)(v56 + 16) = v61;
  *(_QWORD *)(v56 + 24) = v63;
  swift_beginAccess();
  sub_232025424(v55, v57);
  swift_endAccess();
  v94[0] = v56;
  sub_232000590(&qword_2541B3638, (uint64_t (*)(uint64_t))sub_2320440DC, (uint64_t)&unk_2322121BC);
  v64 = v91;
  v65 = sub_2321FF0B8();
  if (v64)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    v68 = v65;
    v69 = v66;
    swift_release();
    sub_2320057B8(0, &qword_2541B3D50, (uint64_t (*)(uint64_t))sub_232043EC8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HostingConfigurationContent);
    v71 = v78;
    result = sub_23200054C(v54, (uint64_t)v78 + *(int *)(v70 + 32), type metadata accessor for SnidgetFeedItemMetadata);
    *v71 = v89;
    v71[1] = v68;
    v71[2] = v69;
  }
  return result;
}

uint64_t sub_2320422BC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  int v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  _QWORD *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  os_log_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t result;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  _QWORD *v74;
  os_log_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94[3];
  uint64_t v95;

  v80 = a2;
  sub_232025288(0);
  MEMORY[0x24BDAC7A8](v3);
  v91 = (uint64_t)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x24BDAC7A8](v93);
  v79 = (uint64_t)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232044300(0);
  v7 = v6;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v88 = (uint64_t)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v87 = (uint64_t)&v74 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v82 = (uint64_t)&v74 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v86 = (_QWORD **)((char *)&v74 - v14);
  v15 = type metadata accessor for WalkingSteadinessSnidgetFeedItemModelProvider();
  MEMORY[0x24BDAC7A8](v15);
  v81 = (uint64_t)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23220039C();
  v83 = *(_QWORD *)(v17 - 8);
  v84 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v89 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *a1;
  v19 = a1[1];
  v21 = a1[2];
  sub_2320443A0();
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 24) = xmmword_2322116F0;
  *(_QWORD *)(v22 + 16) = v20;
  swift_beginAccess();
  v23 = *(_QWORD *)(v22 + 24);
  *(_QWORD *)(v22 + 24) = v19;
  swift_retain();
  v24 = v15;
  swift_retain();
  swift_retain();
  sub_2320459C8(v23);
  v25 = v85;
  swift_beginAccess();
  v90 = v22;
  *(_QWORD *)(v22 + 32) = v21;
  v26 = (uint64_t)a1;
  swift_release();
  v27 = v25 + *(int *)(v15 + 20);
  if (objc_msgSend(*(id *)(v27 + 16), sel_isAbleToWriteHealthSensitiveLogs))
  {
    v78 = v7;
    sub_232200318();
    v28 = v81;
    sub_23200054C(v25, v81, (uint64_t (*)(_QWORD))type metadata accessor for WalkingSteadinessSnidgetFeedItemModelProvider);
    sub_23200054C((uint64_t)a1, (uint64_t)v86, (uint64_t (*)(_QWORD))sub_232044300);
    v29 = (uint64_t)a1;
    v30 = v82;
    sub_23200054C(v29, v82, (uint64_t (*)(_QWORD))sub_232044300);
    sub_23200054C(v26, v87, (uint64_t (*)(_QWORD))sub_232044300);
    sub_23200054C(v26, v88, (uint64_t (*)(_QWORD))sub_232044300);
    v31 = sub_232200390();
    v32 = sub_2322012FC();
    v33 = v32;
    if (os_log_type_enabled(v31, v32))
    {
      v34 = swift_slowAlloc();
      v35 = (_QWORD *)swift_slowAlloc();
      v74 = v35;
      v85 = swift_slowAlloc();
      v94[0] = v85;
      *(_DWORD *)v34 = 138413315;
      v76 = v33;
      v36 = v28 + *(int *)(v24 + 20);
      v37 = v28;
      v38 = *(void **)(v36 + 16);
      v75 = v31;
      v95 = (uint64_t)v38;
      v77 = v27;
      v39 = v38;
      sub_232201710();
      *v35 = v38;
      sub_232002CEC(v37, (uint64_t (*)(_QWORD))type metadata accessor for WalkingSteadinessSnidgetFeedItemModelProvider);
      *(_WORD *)(v34 + 12) = 2080;
      v40 = v86;
      v95 = *v86;
      sub_2321FF208();
      swift_retain();
      v41 = sub_232200F00();
      v95 = sub_232013174(v41, v42, v94);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC((uint64_t)v40, (uint64_t (*)(_QWORD))sub_232044300);
      *(_WORD *)(v34 + 22) = 2081;
      v95 = *(_QWORD *)(v30 + 8);
      sub_232043E88(0);
      swift_retain();
      v43 = sub_232200F00();
      v95 = sub_232013174(v43, v44, v94);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v30, (uint64_t (*)(_QWORD))sub_232044300);
      *(_WORD *)(v34 + 32) = 2080;
      v45 = v87;
      v95 = *(_QWORD *)(v87 + 16);
      sub_2320057B8(0, &qword_2541B33E8, (uint64_t (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      swift_retain();
      v46 = sub_232200F00();
      v95 = sub_232013174(v46, v47, v94);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v45, (uint64_t (*)(_QWORD))sub_232044300);
      *(_WORD *)(v34 + 42) = 2080;
      v7 = v78;
      v48 = v88;
      sub_23200054C(v88 + *(int *)(v78 + 52), v79, type metadata accessor for SnidgetFeedItemMetadata);
      v49 = sub_232200F00();
      v95 = sub_232013174(v49, v50, v94);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v48, (uint64_t (*)(_QWORD))sub_232044300);
      v51 = v75;
      _os_log_impl(&dword_231FFB000, v75, (os_log_type_t)v76, "Created hosting content for %@: header=%s, cv=%{private}s, viz=%s, metadata=%s", (uint8_t *)v34, 0x34u);
      sub_2320057B8(0, (unint64_t *)&qword_2541B78B0, (uint64_t (*)(uint64_t))sub_232044250, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v52 = v74;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v52, -1, -1);
      v53 = v85;
      swift_arrayDestroy();
      v54 = v53;
      v27 = v77;
      MEMORY[0x2348FF468](v54, -1, -1);
      MEMORY[0x2348FF468](v34, -1, -1);

      (*(void (**)(char *, uint64_t))(v83 + 8))(v89, v84);
    }
    else
    {
      sub_232002CEC(v28, (uint64_t (*)(_QWORD))type metadata accessor for WalkingSteadinessSnidgetFeedItemModelProvider);
      sub_232002CEC((uint64_t)v86, (uint64_t (*)(_QWORD))sub_232044300);
      sub_232002CEC(v30, (uint64_t (*)(_QWORD))sub_232044300);
      sub_232002CEC(v87, (uint64_t (*)(_QWORD))sub_232044300);
      sub_232002CEC(v88, (uint64_t (*)(_QWORD))sub_232044300);

      (*(void (**)(char *, uint64_t))(v83 + 8))(v89, v84);
      v7 = v78;
    }
  }
  v55 = *(void **)(v27 + 16);
  v56 = v26 + *(int *)(v7 + 52);
  v57 = v91;
  sub_23200054C(v56 + *(int *)(v93 + 28), v91, (uint64_t (*)(_QWORD))sub_232025288);
  sub_232044530();
  v58 = swift_allocObject();
  v59 = v58 + qword_2541BF780;
  v60 = sub_2321FD8B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v59, 1, 1, v60);
  v61 = v55;
  v62 = objc_msgSend(v61, sel_identifier);
  v63 = sub_232200EC4();
  v65 = v64;

  *(_QWORD *)(v58 + 16) = v63;
  *(_QWORD *)(v58 + 24) = v65;
  swift_beginAccess();
  sub_232025424(v57, v59);
  swift_endAccess();
  v94[0] = v58;
  sub_232000590(&qword_2541B3628, (uint64_t (*)(uint64_t))sub_232044530, (uint64_t)&unk_2322121BC);
  v66 = v92;
  v67 = sub_2321FF0B8();
  if (v66)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    v70 = v67;
    v71 = v68;
    swift_release();
    sub_2320057B8(0, &qword_2541B3D48, (uint64_t (*)(uint64_t))sub_2320443A0, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HostingConfigurationContent);
    v73 = v80;
    result = sub_23200054C(v56, (uint64_t)v80 + *(int *)(v72 + 32), type metadata accessor for SnidgetFeedItemMetadata);
    *v73 = v90;
    v73[1] = v70;
    v73[2] = v71;
  }
  return result;
}

uint64_t sub_232042B68@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  int v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  _QWORD *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  os_log_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t result;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  _QWORD *v74;
  os_log_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94[3];
  uint64_t v95;

  v80 = a2;
  sub_232025288(0);
  MEMORY[0x24BDAC7A8](v3);
  v91 = (uint64_t)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x24BDAC7A8](v93);
  v79 = (uint64_t)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232044300(0);
  v7 = v6;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v88 = (uint64_t)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v87 = (uint64_t)&v74 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v82 = (uint64_t)&v74 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v86 = (_QWORD **)((char *)&v74 - v14);
  v15 = type metadata accessor for BreathingDisturbancesValueSnidgetFeedItemModelProvider();
  MEMORY[0x24BDAC7A8](v15);
  v81 = (uint64_t)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23220039C();
  v83 = *(_QWORD *)(v17 - 8);
  v84 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v89 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *a1;
  v19 = a1[1];
  v21 = a1[2];
  sub_2320443A0();
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 24) = xmmword_2322116F0;
  *(_QWORD *)(v22 + 16) = v20;
  swift_beginAccess();
  v23 = *(_QWORD *)(v22 + 24);
  *(_QWORD *)(v22 + 24) = v19;
  swift_retain();
  v24 = v15;
  swift_retain();
  swift_retain();
  sub_2320459C8(v23);
  v25 = v85;
  swift_beginAccess();
  v90 = v22;
  *(_QWORD *)(v22 + 32) = v21;
  v26 = (uint64_t)a1;
  swift_release();
  v27 = v25 + *(int *)(v15 + 20);
  if (objc_msgSend(*(id *)(v27 + 16), sel_isAbleToWriteHealthSensitiveLogs))
  {
    v78 = v7;
    sub_232200318();
    v28 = v81;
    sub_23200054C(v25, v81, (uint64_t (*)(_QWORD))type metadata accessor for BreathingDisturbancesValueSnidgetFeedItemModelProvider);
    sub_23200054C((uint64_t)a1, (uint64_t)v86, (uint64_t (*)(_QWORD))sub_232044300);
    v29 = (uint64_t)a1;
    v30 = v82;
    sub_23200054C(v29, v82, (uint64_t (*)(_QWORD))sub_232044300);
    sub_23200054C(v26, v87, (uint64_t (*)(_QWORD))sub_232044300);
    sub_23200054C(v26, v88, (uint64_t (*)(_QWORD))sub_232044300);
    v31 = sub_232200390();
    v32 = sub_2322012FC();
    v33 = v32;
    if (os_log_type_enabled(v31, v32))
    {
      v34 = swift_slowAlloc();
      v35 = (_QWORD *)swift_slowAlloc();
      v74 = v35;
      v85 = swift_slowAlloc();
      v94[0] = v85;
      *(_DWORD *)v34 = 138413315;
      v76 = v33;
      v36 = v28 + *(int *)(v24 + 20);
      v37 = v28;
      v38 = *(void **)(v36 + 16);
      v75 = v31;
      v95 = (uint64_t)v38;
      v77 = v27;
      v39 = v38;
      sub_232201710();
      *v35 = v38;
      sub_232002CEC(v37, (uint64_t (*)(_QWORD))type metadata accessor for BreathingDisturbancesValueSnidgetFeedItemModelProvider);
      *(_WORD *)(v34 + 12) = 2080;
      v40 = v86;
      v95 = *v86;
      sub_2321FF208();
      swift_retain();
      v41 = sub_232200F00();
      v95 = sub_232013174(v41, v42, v94);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC((uint64_t)v40, (uint64_t (*)(_QWORD))sub_232044300);
      *(_WORD *)(v34 + 22) = 2081;
      v95 = *(_QWORD *)(v30 + 8);
      sub_232043E88(0);
      swift_retain();
      v43 = sub_232200F00();
      v95 = sub_232013174(v43, v44, v94);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v30, (uint64_t (*)(_QWORD))sub_232044300);
      *(_WORD *)(v34 + 32) = 2080;
      v45 = v87;
      v95 = *(_QWORD *)(v87 + 16);
      sub_2320057B8(0, &qword_2541B33E8, (uint64_t (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      swift_retain();
      v46 = sub_232200F00();
      v95 = sub_232013174(v46, v47, v94);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v45, (uint64_t (*)(_QWORD))sub_232044300);
      *(_WORD *)(v34 + 42) = 2080;
      v7 = v78;
      v48 = v88;
      sub_23200054C(v88 + *(int *)(v78 + 52), v79, type metadata accessor for SnidgetFeedItemMetadata);
      v49 = sub_232200F00();
      v95 = sub_232013174(v49, v50, v94);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v48, (uint64_t (*)(_QWORD))sub_232044300);
      v51 = v75;
      _os_log_impl(&dword_231FFB000, v75, (os_log_type_t)v76, "Created hosting content for %@: header=%s, cv=%{private}s, viz=%s, metadata=%s", (uint8_t *)v34, 0x34u);
      sub_2320057B8(0, (unint64_t *)&qword_2541B78B0, (uint64_t (*)(uint64_t))sub_232044250, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v52 = v74;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v52, -1, -1);
      v53 = v85;
      swift_arrayDestroy();
      v54 = v53;
      v27 = v77;
      MEMORY[0x2348FF468](v54, -1, -1);
      MEMORY[0x2348FF468](v34, -1, -1);

      (*(void (**)(char *, uint64_t))(v83 + 8))(v89, v84);
    }
    else
    {
      sub_232002CEC(v28, (uint64_t (*)(_QWORD))type metadata accessor for BreathingDisturbancesValueSnidgetFeedItemModelProvider);
      sub_232002CEC((uint64_t)v86, (uint64_t (*)(_QWORD))sub_232044300);
      sub_232002CEC(v30, (uint64_t (*)(_QWORD))sub_232044300);
      sub_232002CEC(v87, (uint64_t (*)(_QWORD))sub_232044300);
      sub_232002CEC(v88, (uint64_t (*)(_QWORD))sub_232044300);

      (*(void (**)(char *, uint64_t))(v83 + 8))(v89, v84);
      v7 = v78;
    }
  }
  v55 = *(void **)(v27 + 16);
  v56 = v26 + *(int *)(v7 + 52);
  v57 = v91;
  sub_23200054C(v56 + *(int *)(v93 + 28), v91, (uint64_t (*)(_QWORD))sub_232025288);
  sub_232044530();
  v58 = swift_allocObject();
  v59 = v58 + qword_2541BF780;
  v60 = sub_2321FD8B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v59, 1, 1, v60);
  v61 = v55;
  v62 = objc_msgSend(v61, sel_identifier);
  v63 = sub_232200EC4();
  v65 = v64;

  *(_QWORD *)(v58 + 16) = v63;
  *(_QWORD *)(v58 + 24) = v65;
  swift_beginAccess();
  sub_232025424(v57, v59);
  swift_endAccess();
  v94[0] = v58;
  sub_232000590(&qword_2541B3628, (uint64_t (*)(uint64_t))sub_232044530, (uint64_t)&unk_2322121BC);
  v66 = v92;
  v67 = sub_2321FF0B8();
  if (v66)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    v70 = v67;
    v71 = v68;
    swift_release();
    sub_2320057B8(0, &qword_2541B3D48, (uint64_t (*)(uint64_t))sub_2320443A0, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HostingConfigurationContent);
    v73 = v80;
    result = sub_23200054C(v56, (uint64_t)v80 + *(int *)(v72 + 32), type metadata accessor for SnidgetFeedItemMetadata);
    *v73 = v90;
    v73[1] = v70;
    v73[2] = v71;
  }
  return result;
}

id sub_232043414@<X0>(uint64_t *a1@<X8>)
{
  return sub_23203A648((uint64_t (*)(_QWORD))type metadata accessor for TimePeriodSnidgetFeedItemModelProvider, 0xD000000000000026, 0x8000000232203640, a1);
}

uint64_t sub_232043448@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2320419E8(a1, (uint64_t (*)(_QWORD))type metadata accessor for TimePeriodSnidgetFeedItemModelProvider, a2);
}

uint64_t sub_232043464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6)
{
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t, uint64_t);
  int v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  char v44;
  char *v46;
  char v47;
  void (*v48)(char *, uint64_t);
  void (*v49)(char *, uint64_t);
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t TupleTypeMetadata2;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;

  v57 = a6;
  v63 = a5;
  v60 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = v11;
  v12 = sub_2322016F8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v13 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v14 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v16 = (char *)&v50 - v15;
  v58 = *(_QWORD *)(v12 - 8);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v50 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v50 - v23;
  v61 = a2;
  if ((sub_232200E64() & 1) == 0)
    goto LABEL_8;
  v55 = v19;
  v56 = v13;
  v52 = v10;
  v26 = v62;
  v27 = type metadata accessor for SnidgetHarnessViewFeedItemGeneratorInputModel(0, a3, v62, v25);
  v28 = *(int *)(v27 + 36);
  v54 = a1;
  v29 = a1 + v28;
  v30 = v58;
  v31 = *(void (**)(char *, uint64_t, uint64_t))(v58 + 16);
  v31(v24, v29, v12);
  v53 = v27;
  v31(v22, v61 + *(int *)(v27 + 36), v12);
  v32 = TupleTypeMetadata2;
  v33 = &v16[*(int *)(TupleTypeMetadata2 + 48)];
  v31(v16, (uint64_t)v24, v12);
  v63 = v33;
  v31(v33, (uint64_t)v22, v12);
  v34 = v60;
  v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v60 + 48);
  v36 = v35(v16, 1, v26);
  v37 = v32;
  if (v36 == 1)
  {
    v38 = *(void (**)(char *, uint64_t))(v30 + 8);
    v38(v22, v12);
    v38(v24, v12);
    if (v35(v63, 1, v62) == 1)
    {
      v38(v16, v12);
LABEL_11:
      v44 = sub_232043CD8(*(_QWORD *)(v54 + *(int *)(v53 + 40)), *(_QWORD *)(v61 + *(int *)(v53 + 40)));
      return v44 & 1;
    }
    goto LABEL_7;
  }
  v50 = v22;
  v51 = v24;
  v39 = v30;
  v40 = v55;
  v31(v55, (uint64_t)v16, v12);
  v42 = v62;
  v41 = v63;
  if (v35(v63, 1, v62) == 1)
  {
    v43 = *(void (**)(char *, uint64_t))(v39 + 8);
    v43(v50, v12);
    v43(v51, v12);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v40, v42);
LABEL_7:
    (*(void (**)(char *, uint64_t))(v56 + 8))(v16, v37);
    goto LABEL_8;
  }
  v46 = v52;
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v52, v41, v42);
  v47 = sub_232200E64();
  v48 = *(void (**)(char *, uint64_t))(v34 + 8);
  v48(v46, v42);
  v49 = *(void (**)(char *, uint64_t))(v39 + 8);
  v49(v50, v12);
  v49(v51, v12);
  v48(v40, v42);
  v49(v16, v12);
  if ((v47 & 1) != 0)
    goto LABEL_11;
LABEL_8:
  v44 = 0;
  return v44 & 1;
}

uint64_t sub_2320437CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_232043464(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), *(char **)(a4 - 8), *(_QWORD *)(a4 - 16));
}

uint64_t sub_2320437E0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_23203C49C(a1, a2);
}

uint64_t sub_2320437F8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_23203CD20(a1, a2);
}

id sub_23204380C@<X0>(uint64_t *a1@<X8>)
{
  return sub_23203ABA4((uint64_t (*)(_QWORD))type metadata accessor for VisionPrescriptionSnidgetFeedItemModelProvider, (uint64_t (*)(_QWORD))sub_232000344, 0xD00000000000002ELL, 0x80000002322033E0, a1);
}

uint64_t sub_232043848@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2320408B8(a1, (uint64_t (*)(_QWORD))type metadata accessor for VisionPrescriptionSnidgetFeedItemModelProvider, a2);
}

id sub_232043864@<X0>(uint64_t *a1@<X8>)
{
  return sub_23203A648((uint64_t (*)(_QWORD))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider, 0xD000000000000029, 0x80000002322032E0, a1);
}

uint64_t sub_232043898@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2320419E8(a1, (uint64_t (*)(_QWORD))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider, a2);
}

id sub_2320438B4@<X0>(uint64_t *a1@<X8>)
{
  return sub_23203A648((uint64_t (*)(_QWORD))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider, 0xD000000000000029, 0x8000000232203310, a1);
}

uint64_t sub_2320438E8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2320419E8(a1, (uint64_t (*)(_QWORD))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider, a2);
}

id sub_232043904@<X0>(uint64_t a1@<X8>)
{
  return sub_23203B678((uint64_t (*)(_QWORD))type metadata accessor for GAD7AssessmentSnidgetFeedItemModelProvider, (uint64_t (*)(_QWORD))sub_2320453F8, 0xD00000000000002ALL, 0x8000000232203500, a1);
}

uint64_t sub_232043940@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_23204005C(a1, a2);
}

void *sub_232043954@<X0>(void *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  void *result;
  uint64_t v7;
  uint64_t v8;

  result = sub_23203952C(a1, a2, a3, a4);
  *a5 = result;
  a5[1] = v7;
  a5[2] = v8;
  return result;
}

id sub_23204397C@<X0>(uint64_t a1@<X8>)
{
  return sub_23203B678((uint64_t (*)(_QWORD))type metadata accessor for ECGSnidgetFeedItemModelProvider, (uint64_t (*)(_QWORD))sub_232045B4C, 0xD00000000000001FLL, 0x8000000232203530, a1);
}

uint64_t sub_2320439B8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_23203D5A0(a1, a2);
}

uint64_t sub_2320439D0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23203E6A8(a1, a2);
}

id sub_2320439E4@<X0>(uint64_t *a1@<X8>)
{
  return sub_23203A648((uint64_t (*)(_QWORD))type metadata accessor for UnderwaterDepthSnidgetFeedItemModelProvider, 0xD00000000000002BLL, 0x8000000232203440, a1);
}

uint64_t sub_232043A18@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2320419E8(a1, (uint64_t (*)(_QWORD))type metadata accessor for UnderwaterDepthSnidgetFeedItemModelProvider, a2);
}

id sub_232043A34@<X0>(uint64_t *a1@<X8>)
{
  return sub_23203ABA4((uint64_t (*)(_QWORD))type metadata accessor for BreathingDisturbancesValueSnidgetFeedItemModelProvider, (uint64_t (*)(_QWORD))sub_232044300, 0xD000000000000036, 0x8000000232203340, a1);
}

uint64_t sub_232043A70@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_232042B68(a1, a2);
}

id sub_232043A84@<X0>(uint64_t *a1@<X8>)
{
  return sub_23203ABA4((uint64_t (*)(_QWORD))type metadata accessor for WalkingSteadinessSnidgetFeedItemModelProvider, (uint64_t (*)(_QWORD))sub_232044300, 0xD00000000000002DLL, 0x8000000232203610, a1);
}

uint64_t sub_232043AC0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2320422BC(a1, a2);
}

id sub_232043AD4@<X0>(uint64_t *a1@<X8>)
{
  return sub_23203ABA4((uint64_t (*)(_QWORD))type metadata accessor for AudiogramSnidgetFeedItemModelProvider, (uint64_t (*)(_QWORD))sub_232000344, 0xD000000000000025, 0x80000002322035B0, a1);
}

uint64_t sub_232043B10@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2320408B8(a1, (uint64_t (*)(_QWORD))type metadata accessor for AudiogramSnidgetFeedItemModelProvider, a2);
}

id sub_232043B2C@<X0>(uint64_t *a1@<X8>)
{
  return sub_23203A648((uint64_t (*)(_QWORD))type metadata accessor for BloodPressureSnidgetFeedItemModelProvider, 0xD000000000000029, 0x8000000232203580, a1);
}

uint64_t sub_232043B60@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2320419E8(a1, (uint64_t (*)(_QWORD))type metadata accessor for BloodPressureSnidgetFeedItemModelProvider, a2);
}

id sub_232043B7C@<X0>(uint64_t *a1@<X8>)
{
  return sub_23203ABA4((uint64_t (*)(_QWORD))type metadata accessor for SleepSnidgetFeedItemModelProvider, (uint64_t (*)(_QWORD))sub_232045100, 0xD000000000000021, 0x80000002322034A0, a1);
}

uint64_t sub_232043BB8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_23203DDFC(a1, a2);
}

uint64_t sub_232043BCC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_23203F7B0(a1, a2);
}

id sub_232043BE0@<X0>(uint64_t a1@<X8>)
{
  return sub_23203B678((uint64_t (*)(_QWORD))type metadata accessor for PHQ9AssessmentSnidgetFeedItemModelProvider, (uint64_t (*)(_QWORD))sub_2320453F8, 0xD00000000000002ALL, 0x80000002322034D0, a1);
}

uint64_t sub_232043C1C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_23204118C(a1, a2);
}

id sub_232043C30@<X0>(uint64_t *a1@<X8>)
{
  return sub_23203ABA4((uint64_t (*)(_QWORD))type metadata accessor for OngoingFactorsSnidgetFeedItemModelProvider, (uint64_t (*)(_QWORD))sub_232000344, 0xD00000000000002ALL, 0x8000000232203550, a1);
}

uint64_t sub_232043C6C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2320408B8(a1, (uint64_t (*)(_QWORD))type metadata accessor for OngoingFactorsSnidgetFeedItemModelProvider, a2);
}

id sub_232043C88@<X0>(uint64_t a1@<X8>)
{
  return sub_23203B678((uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider, (uint64_t (*)(_QWORD))sub_232045E64, 0xD000000000000026, 0x80000002322035E0, a1);
}

uint64_t sub_232043CC4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_23203EF54(a1, a2);
}

uint64_t sub_232043CD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(char *, uint64_t);
  BOOL v20;
  uint64_t v22;
  uint64_t v23;

  v4 = sub_2321FE2A8();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v22 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v17 = 1;
    }
    else
    {
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v22 = *(_QWORD *)(v8 + 72);
      v23 = v8;
      v13 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      v14 = v11 - 1;
      do
      {
        v15 = a1;
        v13(v10, a1 + v12, v4);
        v16 = a2;
        v13(v7, a2 + v12, v4);
        sub_232000590(&qword_2541B28A0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47758], MEMORY[0x24BE47770]);
        v17 = sub_232200E64();
        v18 = *(void (**)(char *, uint64_t))(v23 + 8);
        v18(v7, v4);
        v18(v10, v4);
        v20 = v14-- != 0;
        if ((v17 & 1) == 0)
          break;
        v12 += v22;
        a2 = v16;
        a1 = v15;
      }
      while (v20);
    }
  }
  else
  {
    v17 = 0;
  }
  return v17 & 1;
}

uint64_t sub_232043E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x2348FF2E8](a1, v6, a5);
}

void sub_232043E88(uint64_t a1)
{
  sub_2320258FC(a1, &qword_2541B2978, (uint64_t (*)(uint64_t))MEMORY[0x24BE44BD0], sub_232043EAC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE43730]);
}

uint64_t sub_232043EAC()
{
  return sub_232000590(&qword_2541B2A10, (uint64_t (*)(uint64_t))MEMORY[0x24BE44BD0], MEMORY[0x24BE44BC8]);
}

uint64_t sub_232043EC8()
{
  uint64_t result;
  uint64_t (*v1)(uint64_t);
  uint64_t (*v2)(uint64_t);
  uint64_t (*v3)(uint64_t);

  result = qword_2541B35B0;
  if (!qword_2541B35B0)
  {
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BE44BD0];
    sub_2320258FC(255, &qword_2541B2998, (uint64_t (*)(uint64_t))MEMORY[0x24BE44BD0], sub_232043EAC, MEMORY[0x24BE43750]);
    sub_2321FF004();
    v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BE432B8];
    sub_2320458E0((unint64_t *)&qword_2541B2990, &qword_2541B2998, v1, sub_232043EAC);
    sub_232000590(&qword_2541B2938, v2, MEMORY[0x24BE432B0]);
    sub_23204403C(&qword_2541B2970, MEMORY[0x24BE43748]);
    sub_23204403C((unint64_t *)&unk_2541B2960, MEMORY[0x24BE43740]);
    v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BE43C88];
    sub_232000590(&qword_2541B7628, (uint64_t (*)(uint64_t))MEMORY[0x24BE43C88], MEMORY[0x24BE43CA0]);
    sub_232000590(&qword_2541B29C0, v3, MEMORY[0x24BE43C98]);
    type metadata accessor for SnidgetHarnessPluginView.ViewModel();
  }
  return result;
}

uint64_t sub_23204403C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  _QWORD v8[2];

  result = *a1;
  if (!result)
  {
    sub_232043E88(255);
    v6 = v5;
    v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BE44BB0];
    v8[0] = sub_232000590((unint64_t *)&unk_2541B2A00, (uint64_t (*)(uint64_t))MEMORY[0x24BE44BB0], MEMORY[0x24BE44BC0]);
    v8[1] = sub_232000590(&qword_2541B29F8, v7, MEMORY[0x24BE44BB8]);
    result = MEMORY[0x2348FF39C](a2, v6, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2320440DC()
{
  uint64_t result;
  uint64_t (*v1)(uint64_t);
  uint64_t (*v2)(uint64_t);
  uint64_t (*v3)(uint64_t);

  result = qword_2541B3640;
  if (!qword_2541B3640)
  {
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BE44BD0];
    sub_2320258FC(255, &qword_2541B2998, (uint64_t (*)(uint64_t))MEMORY[0x24BE44BD0], sub_232043EAC, MEMORY[0x24BE43750]);
    sub_2321FF004();
    v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BE432B8];
    sub_2320458E0((unint64_t *)&qword_2541B2990, &qword_2541B2998, v1, sub_232043EAC);
    sub_232000590(&qword_2541B2938, v2, MEMORY[0x24BE432B0]);
    sub_23204403C(&qword_2541B2970, MEMORY[0x24BE43748]);
    sub_23204403C((unint64_t *)&unk_2541B2960, MEMORY[0x24BE43740]);
    v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BE43C88];
    sub_232000590(&qword_2541B7628, (uint64_t (*)(uint64_t))MEMORY[0x24BE43C88], MEMORY[0x24BE43CA0]);
    sub_232000590(&qword_2541B29C0, v3, MEMORY[0x24BE43C98]);
    type metadata accessor for SnidgetHarnessPluginView.ActionHandlerData();
  }
  return result;
}

unint64_t sub_232044250()
{
  unint64_t result;

  result = qword_2541B74A8[0];
  if (!qword_2541B74A8[0])
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, qword_2541B74A8);
  }
  return result;
}

void sub_23204428C(void *a1, void *a2)
{
  if ((unint64_t)a1 >= 2)
  {

    swift_bridgeObjectRelease();
  }
}

void *sub_2320442D0(void *result)
{
  id v1;

  if ((unint64_t)result >= 2)
  {
    v1 = result;
    return (void *)swift_bridgeObjectRetain();
  }
  return result;
}

void sub_232044300(uint64_t a1)
{
  sub_23204431C(a1, (unint64_t *)&unk_2541B47B8, (uint64_t (*)(uint64_t))sub_232043E88, (uint64_t (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel);
}

void sub_23204431C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*a2)
  {
    v8 = sub_2321FF208();
    v9 = a3(255);
    v10 = a4(255);
    v11 = type metadata accessor for SnidgetHarnessGeneratorFeedItemModel(a1, v8, v9, v10);
    if (!v12)
      atomic_store(v11, a2);
  }
}

uint64_t sub_2320443A0()
{
  uint64_t result;
  uint64_t (*v1)(uint64_t);

  result = qword_2541B35A8;
  if (!qword_2541B35A8)
  {
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BE44BD0];
    sub_2320258FC(255, &qword_2541B2998, (uint64_t (*)(uint64_t))MEMORY[0x24BE44BD0], sub_232043EAC, MEMORY[0x24BE43750]);
    sub_2320458E0((unint64_t *)&qword_2541B2990, &qword_2541B2998, v1, sub_232043EAC);
    sub_2320444EC();
    sub_23204403C(&qword_2541B2970, MEMORY[0x24BE43748]);
    sub_23204403C((unint64_t *)&unk_2541B2960, MEMORY[0x24BE43740]);
    sub_232000590(&qword_2541B7658, (uint64_t (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel, (uint64_t)&protocol conformance descriptor for SnidgetLevelChartView.ViewModel);
    sub_232000590(&qword_2541B33E0, (uint64_t (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel, (uint64_t)&protocol conformance descriptor for SnidgetLevelChartView.ViewModel);
    type metadata accessor for SnidgetHarnessPluginView.ViewModel();
  }
  return result;
}

unint64_t sub_2320444EC()
{
  unint64_t result;

  result = qword_2541B33F0;
  if (!qword_2541B33F0)
  {
    result = MEMORY[0x2348FF39C](&protocol conformance descriptor for SnidgetLevelChartView, &type metadata for SnidgetLevelChartView);
    atomic_store(result, (unint64_t *)&qword_2541B33F0);
  }
  return result;
}

uint64_t sub_232044530()
{
  uint64_t result;
  uint64_t (*v1)(uint64_t);

  result = qword_2541B3630;
  if (!qword_2541B3630)
  {
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BE44BD0];
    sub_2320258FC(255, &qword_2541B2998, (uint64_t (*)(uint64_t))MEMORY[0x24BE44BD0], sub_232043EAC, MEMORY[0x24BE43750]);
    sub_2320458E0((unint64_t *)&qword_2541B2990, &qword_2541B2998, v1, sub_232043EAC);
    sub_2320444EC();
    sub_23204403C(&qword_2541B2970, MEMORY[0x24BE43748]);
    sub_23204403C((unint64_t *)&unk_2541B2960, MEMORY[0x24BE43740]);
    sub_232000590(&qword_2541B7658, (uint64_t (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel, (uint64_t)&protocol conformance descriptor for SnidgetLevelChartView.ViewModel);
    sub_232000590(&qword_2541B33E0, (uint64_t (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel, (uint64_t)&protocol conformance descriptor for SnidgetLevelChartView.ViewModel);
    type metadata accessor for SnidgetHarnessPluginView.ActionHandlerData();
  }
  return result;
}

void sub_23204467C(uint64_t a1)
{
  sub_232044A14(a1, &qword_2541B6EF8, (uint64_t)&type metadata for SnidgetMultiValueLevelChartView.ViewModel);
}

uint64_t sub_232044690()
{
  uint64_t result;
  uint64_t (*v1)(uint64_t);

  result = qword_2541B6CC8;
  if (!qword_2541B6CC8)
  {
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BE44BD0];
    sub_2320258FC(255, &qword_2541B2998, (uint64_t (*)(uint64_t))MEMORY[0x24BE44BD0], sub_232043EAC, MEMORY[0x24BE43750]);
    type metadata accessor for SnidgetMultiValueLevelChartView(255);
    sub_2320458E0((unint64_t *)&qword_2541B2990, &qword_2541B2998, v1, sub_232043EAC);
    sub_232000590(&qword_2541B6E50, type metadata accessor for SnidgetMultiValueLevelChartView, (uint64_t)&unk_23221916C);
    sub_23204403C(&qword_2541B2970, MEMORY[0x24BE43748]);
    sub_23204403C((unint64_t *)&unk_2541B2960, MEMORY[0x24BE43740]);
    sub_2320447CC();
    sub_232044810();
    type metadata accessor for SnidgetHarnessPluginView.ViewModel();
  }
  return result;
}

unint64_t sub_2320447CC()
{
  unint64_t result;

  result = qword_2541B6E30;
  if (!qword_2541B6E30)
  {
    result = MEMORY[0x2348FF39C](&unk_232219144, &type metadata for SnidgetMultiValueLevelChartView.ViewModel);
    atomic_store(result, (unint64_t *)&qword_2541B6E30);
  }
  return result;
}

unint64_t sub_232044810()
{
  unint64_t result;

  result = qword_2541B6E28;
  if (!qword_2541B6E28)
  {
    result = MEMORY[0x2348FF39C](&unk_23221911C, &type metadata for SnidgetMultiValueLevelChartView.ViewModel);
    atomic_store(result, (unint64_t *)&qword_2541B6E28);
  }
  return result;
}

uint64_t sub_232044854(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_23204488C(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2320448C4()
{
  uint64_t result;
  uint64_t (*v1)(uint64_t);

  result = qword_2541B6CD8;
  if (!qword_2541B6CD8)
  {
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BE44BD0];
    sub_2320258FC(255, &qword_2541B2998, (uint64_t (*)(uint64_t))MEMORY[0x24BE44BD0], sub_232043EAC, MEMORY[0x24BE43750]);
    type metadata accessor for SnidgetMultiValueLevelChartView(255);
    sub_2320458E0((unint64_t *)&qword_2541B2990, &qword_2541B2998, v1, sub_232043EAC);
    sub_232000590(&qword_2541B6E50, type metadata accessor for SnidgetMultiValueLevelChartView, (uint64_t)&unk_23221916C);
    sub_23204403C(&qword_2541B2970, MEMORY[0x24BE43748]);
    sub_23204403C((unint64_t *)&unk_2541B2960, MEMORY[0x24BE43740]);
    sub_2320447CC();
    sub_232044810();
    type metadata accessor for SnidgetHarnessPluginView.ActionHandlerData();
  }
  return result;
}

void sub_232044A00(uint64_t a1)
{
  sub_232044A14(a1, &qword_2541B4790, (uint64_t)&type metadata for CardioFitnessSnidgetVisualizationView.ViewModel);
}

void sub_232044A14(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v6 = sub_2321FF208();
    sub_232043E88(255);
    v8 = type metadata accessor for SnidgetHarnessGeneratorFeedItemModel(a1, v6, v7, a3);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_232044A80()
{
  uint64_t result;
  uint64_t (*v1)(uint64_t);

  result = qword_2541B3580;
  if (!qword_2541B3580)
  {
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BE44BD0];
    sub_2320258FC(255, &qword_2541B2998, (uint64_t (*)(uint64_t))MEMORY[0x24BE44BD0], sub_232043EAC, MEMORY[0x24BE43750]);
    sub_2320458E0((unint64_t *)&qword_2541B2990, &qword_2541B2998, v1, sub_232043EAC);
    sub_232044B9C();
    sub_23204403C(&qword_2541B2970, MEMORY[0x24BE43748]);
    sub_23204403C((unint64_t *)&unk_2541B2960, MEMORY[0x24BE43740]);
    sub_232044BE0();
    sub_232044C24();
    type metadata accessor for SnidgetHarnessPluginView.ViewModel();
  }
  return result;
}

unint64_t sub_232044B9C()
{
  unint64_t result;

  result = qword_2541B47F0;
  if (!qword_2541B47F0)
  {
    result = MEMORY[0x2348FF39C](&unk_232212C8C, &type metadata for CardioFitnessSnidgetVisualizationView);
    atomic_store(result, (unint64_t *)&qword_2541B47F0);
  }
  return result;
}

unint64_t sub_232044BE0()
{
  unint64_t result;

  result = qword_2541B47E0;
  if (!qword_2541B47E0)
  {
    result = MEMORY[0x2348FF39C](&unk_232212C64, &type metadata for CardioFitnessSnidgetVisualizationView.ViewModel);
    atomic_store(result, (unint64_t *)&qword_2541B47E0);
  }
  return result;
}

unint64_t sub_232044C24()
{
  unint64_t result;

  result = qword_2541B47D8;
  if (!qword_2541B47D8)
  {
    result = MEMORY[0x2348FF39C](&unk_232212C3C, &type metadata for CardioFitnessSnidgetVisualizationView.ViewModel);
    atomic_store(result, (unint64_t *)&qword_2541B47D8);
  }
  return result;
}

uint64_t sub_232044C68(uint64_t result)
{
  if (result != 1)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_232044C9C(uint64_t result)
{
  if (result != 1)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_232044CCC()
{
  uint64_t result;
  uint64_t (*v1)(uint64_t);

  result = qword_2541B35E0;
  if (!qword_2541B35E0)
  {
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BE44BD0];
    sub_2320258FC(255, &qword_2541B2998, (uint64_t (*)(uint64_t))MEMORY[0x24BE44BD0], sub_232043EAC, MEMORY[0x24BE43750]);
    sub_2320458E0((unint64_t *)&qword_2541B2990, &qword_2541B2998, v1, sub_232043EAC);
    sub_232044B9C();
    sub_23204403C(&qword_2541B2970, MEMORY[0x24BE43748]);
    sub_23204403C((unint64_t *)&unk_2541B2960, MEMORY[0x24BE43740]);
    sub_232044BE0();
    sub_232044C24();
    type metadata accessor for SnidgetHarnessPluginView.ActionHandlerData();
  }
  return result;
}

void sub_232044DE8(uint64_t a1)
{
  sub_232044A14(a1, &qword_2541B4788, (uint64_t)&type metadata for StateOfMindSnidgetVisualizationView.ViewModel);
}

uint64_t sub_232044DFC()
{
  uint64_t result;
  uint64_t (*v1)(uint64_t);

  result = qword_2541B3578;
  if (!qword_2541B3578)
  {
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BE44BD0];
    sub_2320258FC(255, &qword_2541B2998, (uint64_t (*)(uint64_t))MEMORY[0x24BE44BD0], sub_232043EAC, MEMORY[0x24BE43750]);
    sub_2320458E0((unint64_t *)&qword_2541B2990, &qword_2541B2998, v1, sub_232043EAC);
    sub_232044F18();
    sub_23204403C(&qword_2541B2970, MEMORY[0x24BE43748]);
    sub_23204403C((unint64_t *)&unk_2541B2960, MEMORY[0x24BE43740]);
    sub_232044F5C();
    sub_232044FA0();
    type metadata accessor for SnidgetHarnessPluginView.ViewModel();
  }
  return result;
}

unint64_t sub_232044F18()
{
  unint64_t result;

  result = qword_2541B45D0;
  if (!qword_2541B45D0)
  {
    result = MEMORY[0x2348FF39C](&unk_232212F14, &type metadata for StateOfMindSnidgetVisualizationView);
    atomic_store(result, (unint64_t *)&qword_2541B45D0);
  }
  return result;
}

unint64_t sub_232044F5C()
{
  unint64_t result;

  result = qword_2541B45C0;
  if (!qword_2541B45C0)
  {
    result = MEMORY[0x2348FF39C](&unk_232212EEC, &type metadata for StateOfMindSnidgetVisualizationView.ViewModel);
    atomic_store(result, (unint64_t *)&qword_2541B45C0);
  }
  return result;
}

unint64_t sub_232044FA0()
{
  unint64_t result;

  result = qword_2541B45B8;
  if (!qword_2541B45B8)
  {
    result = MEMORY[0x2348FF39C](&unk_232212EC4, &type metadata for StateOfMindSnidgetVisualizationView.ViewModel);
    atomic_store(result, (unint64_t *)&qword_2541B45B8);
  }
  return result;
}

uint64_t sub_232044FE4()
{
  uint64_t result;
  uint64_t (*v1)(uint64_t);

  result = qword_2541B35D0;
  if (!qword_2541B35D0)
  {
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BE44BD0];
    sub_2320258FC(255, &qword_2541B2998, (uint64_t (*)(uint64_t))MEMORY[0x24BE44BD0], sub_232043EAC, MEMORY[0x24BE43750]);
    sub_2320458E0((unint64_t *)&qword_2541B2990, &qword_2541B2998, v1, sub_232043EAC);
    sub_232044F18();
    sub_23204403C(&qword_2541B2970, MEMORY[0x24BE43748]);
    sub_23204403C((unint64_t *)&unk_2541B2960, MEMORY[0x24BE43740]);
    sub_232044F5C();
    sub_232044FA0();
    type metadata accessor for SnidgetHarnessPluginView.ActionHandlerData();
  }
  return result;
}

void sub_232045100(uint64_t a1)
{
  sub_23204431C(a1, &qword_2541B47B0, (uint64_t (*)(uint64_t))sub_232043E88, (uint64_t (*)(uint64_t))type metadata accessor for SleepSnidgetViewContainer.ViewModel);
}

uint64_t sub_23204511C()
{
  uint64_t result;
  uint64_t (*v1)(uint64_t);

  result = qword_2541B35A0;
  if (!qword_2541B35A0)
  {
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BE44BD0];
    sub_2320258FC(255, &qword_2541B2998, (uint64_t (*)(uint64_t))MEMORY[0x24BE44BD0], sub_232043EAC, MEMORY[0x24BE43750]);
    sub_2320458E0((unint64_t *)&qword_2541B2990, &qword_2541B2998, v1, sub_232043EAC);
    sub_232045268();
    sub_23204403C(&qword_2541B2970, MEMORY[0x24BE43748]);
    sub_23204403C((unint64_t *)&unk_2541B2960, MEMORY[0x24BE43740]);
    sub_232000590(&qword_2541B36F8, (uint64_t (*)(uint64_t))type metadata accessor for SleepSnidgetViewContainer.ViewModel, (uint64_t)&unk_2322180A4);
    sub_232000590(&qword_2541B36F0, (uint64_t (*)(uint64_t))type metadata accessor for SleepSnidgetViewContainer.ViewModel, (uint64_t)&unk_23221807C);
    type metadata accessor for SnidgetHarnessPluginView.ViewModel();
  }
  return result;
}

unint64_t sub_232045268()
{
  unint64_t result;

  result = qword_2541B37C8;
  if (!qword_2541B37C8)
  {
    result = MEMORY[0x2348FF39C](&unk_232218160, &type metadata for SleepSnidgetViewContainer);
    atomic_store(result, (unint64_t *)&qword_2541B37C8);
  }
  return result;
}

uint64_t sub_2320452AC()
{
  uint64_t result;
  uint64_t (*v1)(uint64_t);

  result = qword_2541B3620;
  if (!qword_2541B3620)
  {
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BE44BD0];
    sub_2320258FC(255, &qword_2541B2998, (uint64_t (*)(uint64_t))MEMORY[0x24BE44BD0], sub_232043EAC, MEMORY[0x24BE43750]);
    sub_2320458E0((unint64_t *)&qword_2541B2990, &qword_2541B2998, v1, sub_232043EAC);
    sub_232045268();
    sub_23204403C(&qword_2541B2970, MEMORY[0x24BE43748]);
    sub_23204403C((unint64_t *)&unk_2541B2960, MEMORY[0x24BE43740]);
    sub_232000590(&qword_2541B36F8, (uint64_t (*)(uint64_t))type metadata accessor for SleepSnidgetViewContainer.ViewModel, (uint64_t)&unk_2322180A4);
    sub_232000590(&qword_2541B36F0, (uint64_t (*)(uint64_t))type metadata accessor for SleepSnidgetViewContainer.ViewModel, (uint64_t)&unk_23221807C);
    type metadata accessor for SnidgetHarnessPluginView.ActionHandlerData();
  }
  return result;
}

void sub_2320453F8(uint64_t a1)
{
  sub_232044A14(a1, &qword_2541B47A8, (uint64_t)&type metadata for EmptySnidgetVisualizationView.ViewModel);
}

uint64_t sub_23204540C()
{
  uint64_t result;
  uint64_t (*v1)(uint64_t);

  result = qword_2541B3598;
  if (!qword_2541B3598)
  {
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BE44BD0];
    sub_2320258FC(255, &qword_2541B2998, (uint64_t (*)(uint64_t))MEMORY[0x24BE44BD0], sub_232043EAC, MEMORY[0x24BE43750]);
    sub_2320458E0((unint64_t *)&qword_2541B2990, &qword_2541B2998, v1, sub_232043EAC);
    sub_232045528();
    sub_23204403C(&qword_2541B2970, MEMORY[0x24BE43748]);
    sub_23204403C((unint64_t *)&unk_2541B2960, MEMORY[0x24BE43740]);
    sub_23204556C();
    sub_2320455B0();
    type metadata accessor for SnidgetHarnessPluginView.ViewModel();
  }
  return result;
}

unint64_t sub_232045528()
{
  unint64_t result;

  result = qword_2541B3E30;
  if (!qword_2541B3E30)
  {
    result = MEMORY[0x2348FF39C](&unk_232213330, &type metadata for EmptySnidgetVisualizationView);
    atomic_store(result, (unint64_t *)&qword_2541B3E30);
  }
  return result;
}

unint64_t sub_23204556C()
{
  unint64_t result;

  result = qword_2541B3E20;
  if (!qword_2541B3E20)
  {
    result = MEMORY[0x2348FF39C](&unk_232213308, &type metadata for EmptySnidgetVisualizationView.ViewModel);
    atomic_store(result, (unint64_t *)&qword_2541B3E20);
  }
  return result;
}

unint64_t sub_2320455B0()
{
  unint64_t result;

  result = qword_2541B3E18;
  if (!qword_2541B3E18)
  {
    result = MEMORY[0x2348FF39C](&unk_2322132E0, &type metadata for EmptySnidgetVisualizationView.ViewModel);
    atomic_store(result, (unint64_t *)&qword_2541B3E18);
  }
  return result;
}

uint64_t sub_2320455F4()
{
  uint64_t result;
  uint64_t (*v1)(uint64_t);

  result = qword_2541B3610;
  if (!qword_2541B3610)
  {
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BE44BD0];
    sub_2320258FC(255, &qword_2541B2998, (uint64_t (*)(uint64_t))MEMORY[0x24BE44BD0], sub_232043EAC, MEMORY[0x24BE43750]);
    sub_2320458E0((unint64_t *)&qword_2541B2990, &qword_2541B2998, v1, sub_232043EAC);
    sub_232045528();
    sub_23204403C(&qword_2541B2970, MEMORY[0x24BE43748]);
    sub_23204403C((unint64_t *)&unk_2541B2960, MEMORY[0x24BE43740]);
    sub_23204556C();
    sub_2320455B0();
    type metadata accessor for SnidgetHarnessPluginView.ActionHandlerData();
  }
  return result;
}

void sub_232045710(uint64_t a1)
{
  sub_23204431C(a1, &qword_2541B4780, (uint64_t (*)(uint64_t))sub_23204572C, (uint64_t (*)(uint64_t))MEMORY[0x24BE43C88]);
}

void sub_23204572C(uint64_t a1)
{
  sub_2320258FC(a1, (unint64_t *)&unk_2541B2950, (uint64_t (*)(uint64_t))MEMORY[0x24BE44370], sub_232045750, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE43730]);
}

uint64_t sub_232045750()
{
  return sub_232000590(&qword_2541B29F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE44370], MEMORY[0x24BE44368]);
}

uint64_t sub_23204576C()
{
  uint64_t result;
  uint64_t (*v1)(uint64_t);
  uint64_t (*v2)(uint64_t);
  uint64_t (*v3)(uint64_t);

  result = qword_2541B3570;
  if (!qword_2541B3570)
  {
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BE44370];
    sub_2320258FC(255, &qword_2541B2988, (uint64_t (*)(uint64_t))MEMORY[0x24BE44370], sub_232045750, MEMORY[0x24BE43750]);
    sub_2321FF004();
    v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BE432B8];
    sub_2320458E0((unint64_t *)&qword_2541B2980, &qword_2541B2988, v1, sub_232045750);
    sub_232000590(&qword_2541B2938, v2, MEMORY[0x24BE432B0]);
    sub_232045928(&qword_2541B2948, MEMORY[0x24BE43748]);
    sub_232045928(&qword_2541B2940, MEMORY[0x24BE43740]);
    v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BE43C88];
    sub_232000590(&qword_2541B7628, (uint64_t (*)(uint64_t))MEMORY[0x24BE43C88], MEMORY[0x24BE43CA0]);
    sub_232000590(&qword_2541B29C0, v3, MEMORY[0x24BE43C98]);
    type metadata accessor for SnidgetHarnessPluginView.ViewModel();
  }
  return result;
}

uint64_t sub_2320458E0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_2320258FC(255, a2, a3, a4, MEMORY[0x24BE43750]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BE43760], v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_232045928(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  _QWORD v8[2];

  result = *a1;
  if (!result)
  {
    sub_23204572C(255);
    v6 = v5;
    v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BE44350];
    v8[0] = sub_232000590(&qword_2541B29E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE44350], MEMORY[0x24BE44360]);
    v8[1] = sub_232000590(&qword_2541B29E0, v7, MEMORY[0x24BE44358]);
    result = MEMORY[0x2348FF39C](a2, v6, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2320459C8(uint64_t result)
{
  if (result != 1)
    return swift_release();
  return result;
}

uint64_t sub_2320459D8()
{
  uint64_t result;
  uint64_t (*v1)(uint64_t);
  uint64_t (*v2)(uint64_t);
  uint64_t (*v3)(uint64_t);

  result = qword_2541B35C0;
  if (!qword_2541B35C0)
  {
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BE44370];
    sub_2320258FC(255, &qword_2541B2988, (uint64_t (*)(uint64_t))MEMORY[0x24BE44370], sub_232045750, MEMORY[0x24BE43750]);
    sub_2321FF004();
    v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BE432B8];
    sub_2320458E0((unint64_t *)&qword_2541B2980, &qword_2541B2988, v1, sub_232045750);
    sub_232000590(&qword_2541B2938, v2, MEMORY[0x24BE432B0]);
    sub_232045928(&qword_2541B2948, MEMORY[0x24BE43748]);
    sub_232045928(&qword_2541B2940, MEMORY[0x24BE43740]);
    v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BE43C88];
    sub_232000590(&qword_2541B7628, (uint64_t (*)(uint64_t))MEMORY[0x24BE43C88], MEMORY[0x24BE43CA0]);
    sub_232000590(&qword_2541B29C0, v3, MEMORY[0x24BE43C98]);
    type metadata accessor for SnidgetHarnessPluginView.ActionHandlerData();
  }
  return result;
}

void sub_232045B4C(uint64_t a1)
{
  sub_232044A14(a1, &qword_2541B4798, (uint64_t)&type metadata for ECGSnidgetVisualizationView.ViewModel);
}

uint64_t sub_232045B60()
{
  uint64_t result;
  uint64_t (*v1)(uint64_t);

  result = qword_2541B3588;
  if (!qword_2541B3588)
  {
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BE44BD0];
    sub_2320258FC(255, &qword_2541B2998, (uint64_t (*)(uint64_t))MEMORY[0x24BE44BD0], sub_232043EAC, MEMORY[0x24BE43750]);
    sub_2320458E0((unint64_t *)&qword_2541B2990, &qword_2541B2998, v1, sub_232043EAC);
    sub_232045C7C();
    sub_23204403C(&qword_2541B2970, MEMORY[0x24BE43748]);
    sub_23204403C((unint64_t *)&unk_2541B2960, MEMORY[0x24BE43740]);
    sub_232045CC0();
    sub_232045D04();
    type metadata accessor for SnidgetHarnessPluginView.ViewModel();
  }
  return result;
}

unint64_t sub_232045C7C()
{
  unint64_t result;

  result = qword_2541B3C78;
  if (!qword_2541B3C78)
  {
    result = MEMORY[0x2348FF39C](&unk_23221577C, &type metadata for ECGSnidgetVisualizationView);
    atomic_store(result, (unint64_t *)&qword_2541B3C78);
  }
  return result;
}

unint64_t sub_232045CC0()
{
  unint64_t result;

  result = qword_2541B3C68;
  if (!qword_2541B3C68)
  {
    result = MEMORY[0x2348FF39C](&unk_232215754, &type metadata for ECGSnidgetVisualizationView.ViewModel);
    atomic_store(result, (unint64_t *)&qword_2541B3C68);
  }
  return result;
}

unint64_t sub_232045D04()
{
  unint64_t result;

  result = qword_2541B3C60;
  if (!qword_2541B3C60)
  {
    result = MEMORY[0x2348FF39C](&unk_23221572C, &type metadata for ECGSnidgetVisualizationView.ViewModel);
    atomic_store(result, (unint64_t *)&qword_2541B3C60);
  }
  return result;
}

uint64_t sub_232045D48()
{
  uint64_t result;
  uint64_t (*v1)(uint64_t);

  result = qword_2541B35F0;
  if (!qword_2541B35F0)
  {
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BE44BD0];
    sub_2320258FC(255, &qword_2541B2998, (uint64_t (*)(uint64_t))MEMORY[0x24BE44BD0], sub_232043EAC, MEMORY[0x24BE43750]);
    sub_2320458E0((unint64_t *)&qword_2541B2990, &qword_2541B2998, v1, sub_232043EAC);
    sub_232045C7C();
    sub_23204403C(&qword_2541B2970, MEMORY[0x24BE43748]);
    sub_23204403C((unint64_t *)&unk_2541B2960, MEMORY[0x24BE43740]);
    sub_232045CC0();
    sub_232045D04();
    type metadata accessor for SnidgetHarnessPluginView.ActionHandlerData();
  }
  return result;
}

void sub_232045E64(uint64_t a1)
{
  sub_232044A14(a1, &qword_2541B47A0, (uint64_t)&type metadata for AFibHistoryVisualizationView.ViewModel);
}

uint64_t sub_232045E78()
{
  uint64_t result;
  uint64_t (*v1)(uint64_t);

  result = qword_2541B3590;
  if (!qword_2541B3590)
  {
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BE44BD0];
    sub_2320258FC(255, &qword_2541B2998, (uint64_t (*)(uint64_t))MEMORY[0x24BE44BD0], sub_232043EAC, MEMORY[0x24BE43750]);
    sub_2320458E0((unint64_t *)&qword_2541B2990, &qword_2541B2998, v1, sub_232043EAC);
    sub_232045F94();
    sub_23204403C(&qword_2541B2970, MEMORY[0x24BE43748]);
    sub_23204403C((unint64_t *)&unk_2541B2960, MEMORY[0x24BE43740]);
    sub_232045FD8();
    sub_23204601C();
    type metadata accessor for SnidgetHarnessPluginView.ViewModel();
  }
  return result;
}

unint64_t sub_232045F94()
{
  unint64_t result;

  result = qword_2541B3D70;
  if (!qword_2541B3D70)
  {
    result = MEMORY[0x2348FF39C](&unk_23221A6B4, &type metadata for AFibHistoryVisualizationView);
    atomic_store(result, (unint64_t *)&qword_2541B3D70);
  }
  return result;
}

unint64_t sub_232045FD8()
{
  unint64_t result;

  result = qword_2541B3D60;
  if (!qword_2541B3D60)
  {
    result = MEMORY[0x2348FF39C](&unk_23221A68C, &type metadata for AFibHistoryVisualizationView.ViewModel);
    atomic_store(result, (unint64_t *)&qword_2541B3D60);
  }
  return result;
}

unint64_t sub_23204601C()
{
  unint64_t result;

  result = qword_2541B3D58;
  if (!qword_2541B3D58)
  {
    result = MEMORY[0x2348FF39C](&unk_23221A664, &type metadata for AFibHistoryVisualizationView.ViewModel);
    atomic_store(result, (unint64_t *)&qword_2541B3D58);
  }
  return result;
}

uint64_t sub_232046060()
{
  uint64_t result;
  uint64_t (*v1)(uint64_t);

  result = qword_2541B3600;
  if (!qword_2541B3600)
  {
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BE44BD0];
    sub_2320258FC(255, &qword_2541B2998, (uint64_t (*)(uint64_t))MEMORY[0x24BE44BD0], sub_232043EAC, MEMORY[0x24BE43750]);
    sub_2320458E0((unint64_t *)&qword_2541B2990, &qword_2541B2998, v1, sub_232043EAC);
    sub_232045F94();
    sub_23204403C(&qword_2541B2970, MEMORY[0x24BE43748]);
    sub_23204403C((unint64_t *)&unk_2541B2960, MEMORY[0x24BE43740]);
    sub_232045FD8();
    sub_23204601C();
    type metadata accessor for SnidgetHarnessPluginView.ActionHandlerData();
  }
  return result;
}

void sub_23204617C(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_2322016F8();
    if (!v4)
      atomic_store(v3, a2);
  }
}

void sub_2320461C4(void *a1, void *a2, void (*a3)(id, _QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  id v26;
  id v27;
  _OWORD v28[2];
  uint64_t v29;

  v4 = v3;
  sub_23201C800();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v28 - v12;
  sub_232003E9C(0, &qword_255F9C0B0);
  v14 = (void *)sub_232010CEC(a1);
  v15 = v4 + qword_2541BF5C8;
  v16 = sub_232200180();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v15, v16);
  v17 = *MEMORY[0x24BE4AD70];
  v18 = sub_2321FFD78();
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 104))(v13, v17, v18);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v13, 0, 1, v18);
  v20 = a2;
  v21 = objc_msgSend(v14, sel_data);
  if (v21)
  {
    v22 = v21;
    sub_232003E9C(0, &qword_2541B0CD0);
    v23 = sub_2321FDAD4();
    v25 = v24;

    sub_23201C854((uint64_t)v13, (uint64_t)v11);
    v29 = 0;
    memset(v28, 0, sizeof(v28));
    v26 = sub_232015828(v23, v25, 9, (uint64_t)v11, (uint64_t)v20, 0, (uint64_t)v28);

    sub_232003ED4(v23, v25);
    sub_232002CEC((uint64_t)v13, (uint64_t (*)(_QWORD))sub_23201C800);
    v27 = v26;
    a3(v26, 0);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2320463EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_232002CEC(v0 + qword_2541BF5D0, type metadata accessor for SummariesFullProfileExecutor.Request);
  v1 = v0 + qword_2541BF5C8;
  v2 = sub_232200180();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GAD7AssessmentMostRecentSampleCurrentValueSharableModelStep()
{
  uint64_t result;

  result = qword_255F9C5C0;
  if (!qword_255F9C5C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_232046498()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2320464D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_2321FDD14();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BDCEF70], v0);
  sub_2321FDD20();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void sub_232046568(id a1, char a2, void (*a3)(id, id, uint64_t))
{
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;

  if ((a2 & 1) != 0)
  {
    v5 = a1;
    v6 = a1;
    v7 = 0;
    v8 = 1;
  }
  else
  {
    v9 = a1;
    v6 = a1;
    v7 = a1;
    v8 = 0;
  }
  a3(v6, v7, v8);
  sub_232047860(a1);
}

uint64_t sub_2320465D0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void (*v22)(uint64_t);
  uint64_t v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  char *v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  char *v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  char *v40;
  char *v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  Class v47;
  id v48;
  id v49;
  void *v50;
  void (*v51)(char *, char *, uint64_t);
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;

  v62 = a1;
  v63 = *v2;
  v64 = a2;
  sub_2320164C0();
  v59 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v55 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v53 = (char *)&v51 - v6;
  sub_232047674();
  v56 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v57 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v60 = (uint64_t)&v51 - v10;
  v11 = sub_2321FDC6C();
  MEMORY[0x24BDAC7A8](v11);
  v12 = sub_232200DB0();
  v52 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_2321FDDD4();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v51 - v20;
  v22 = *(void (**)(uint64_t))((char *)v2
                                       + OBJC_IVAR____TtC9Summaries36BalanceCurrentValueSharableModelStep_gregorianCalendarInCurrentTimeZoneProvider);
  v23 = swift_retain();
  v22(v23);
  swift_release();
  v65 = v2;
  v24 = *(void (**)(uint64_t))((char *)v2
                                       + OBJC_IVAR____TtC9Summaries36BalanceCurrentValueSharableModelStep_currentDateProvider);
  v25 = swift_retain();
  v24(v25);
  swift_release();
  v61 = v16;
  v26 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  v58 = v21;
  v27 = v21;
  v28 = v14;
  v66 = v15;
  v26(v19, v27, v15);
  v54 = v19;
  sub_232200D8C();
  sub_232000590(&qword_2541B6BF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24A8]);
  result = sub_232200E4C();
  if ((result & 1) != 0)
  {
    v30 = v59;
    v31 = v52;
    v32 = v53;
    v33 = &v53[*(int *)(v59 + 48)];
    v51 = v26;
    v34 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
    v34(v53, v28, v12);
    v34(v33, v28, v12);
    v35 = v55;
    v36 = &v55[*(int *)(v30 + 48)];
    v34(v55, v32, v12);
    v34(v36, v33, v12);
    v37 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
    v38 = (uint64_t)v57;
    v37(v57, v35, v12);
    v39 = *(void (**)(char *, uint64_t))(v31 + 8);
    v39(v36, v12);
    v40 = &v35[*(int *)(v30 + 48)];
    v37(v35, v32, v12);
    v37(v40, v33, v12);
    v37((char *)(v38 + *(int *)(v56 + 36)), v40, v12);
    v39(v35, v12);
    sub_2320476EC(v38, v60);
    v41 = v58;
    v51(v54, v58, v66);
    v42 = (_QWORD *)swift_allocObject();
    v44 = v64;
    v43 = v65;
    v45 = v62;
    v42[2] = v65;
    v42[3] = v45;
    v46 = v63;
    v42[4] = v44;
    v42[5] = v46;
    sub_23204776C();
    v48 = objc_allocWithZone(v47);
    swift_retain();
    swift_retain();
    v49 = (id)sub_2321FDF6C();
    v50 = (void *)sub_232200E94();
    objc_msgSend(v49, sel_setDebugIdentifier_, v50);

    objc_msgSend(*(id *)((char *)v43 + OBJC_IVAR____TtC9Summaries36BalanceCurrentValueSharableModelStep_request + 16), sel_executeQuery_, v49);
    v39(v28, v12);
    return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v41, v66);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_232046A58(uint64_t a1, _QWORD *a2, char a3, uint64_t a4, void (*a5)(id, uint64_t), uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v11 = sub_23220039C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v42 - v16;
  if ((a3 & 1) != 0)
  {
    v45 = v12;
    v28 = a2;
    sub_232200300();
    v29 = a2;
    v30 = a2;
    v31 = sub_232200390();
    v32 = sub_2322012E4();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = swift_slowAlloc();
      v34 = swift_slowAlloc();
      v44 = a6;
      v35 = (_QWORD *)v34;
      v43 = swift_slowAlloc();
      v47 = v43;
      *(_DWORD *)v33 = 136446466;
      v42 = v11;
      v36 = sub_232201BF0();
      v46 = sub_232013174(v36, v37, &v47);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 12) = 2114;
      v38 = a2;
      v39 = _swift_stdlib_bridgeErrorToNSError();
      v46 = v39;
      sub_232201710();
      *v35 = v39;
      sub_2320477E4(a2, 1);
      sub_2320477E4(a2, 1);
      _os_log_impl(&dword_231FFB000, v31, v32, "[%{public}s] query failed with error: %{public}@", (uint8_t *)v33, 0x16u);
      sub_2320477F0();
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v35, -1, -1);
      v40 = v43;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v40, -1, -1);
      MEMORY[0x2348FF468](v33, -1, -1);

      (*(void (**)(char *, uint64_t))(v45 + 8))(v15, v42);
    }
    else
    {
      sub_2320477E4(a2, 1);
      sub_2320477E4(a2, 1);

      (*(void (**)(char *, uint64_t))(v45 + 8))(v15, v11);
    }
    v41 = a2;
    a5(a2, 1);
    sub_2320477E4(a2, 1);
    sub_2320477E4(a2, 1);
  }
  else
  {
    v43 = a4;
    sub_232200300();
    sub_232047854(a2, 0);
    swift_bridgeObjectRetain();
    v18 = sub_232200390();
    v19 = sub_2322012FC();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = swift_slowAlloc();
      v42 = v11;
      v21 = v20;
      v22 = swift_slowAlloc();
      v44 = a6;
      v23 = v22;
      v47 = v22;
      *(_DWORD *)v21 = 136446466;
      v24 = sub_232201BF0();
      v46 = sub_232013174(v24, v25, &v47);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2080;
      v46 = a2[2];
      v45 = v12;
      v26 = sub_232201AB8();
      v46 = sub_232013174(v26, v27, &v47);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_2320477E4(a2, 0);
      sub_2320477E4(a2, 0);
      _os_log_impl(&dword_231FFB000, v18, v19, "[%{public}s] query found %s summarie(s).", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v23, -1, -1);
      MEMORY[0x2348FF468](v21, -1, -1);

      (*(void (**)(char *, uint64_t))(v45 + 8))(v17, v42);
    }
    else
    {
      sub_2320477E4(a2, 0);
      sub_2320477E4(a2, 0);

      (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
    }
    sub_232046F28((uint64_t)a2, a5);
  }
}

void sub_232046F28(uint64_t a1, void (*a2)(id, uint64_t))
{
  uint64_t v4;
  id v5;
  void *v6;
  id v7;

  if (a1 && *(_QWORD *)(a1 + 16))
  {
    v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_2321FDF60() - 8) + 80);
    v5 = sub_232046FF4(a1 + ((v4 + 32) & ~v4));
    v7 = v5;
    a2(v5, 0);

  }
  else
  {
    sub_23204786C();
    v6 = (void *)swift_allocError();
    a2(v6, 1);

  }
}

id sub_232046FF4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t, uint64_t);
  NSObject *v22;
  os_log_type_t v23;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id result;
  void *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  os_log_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t, uint64_t);
  char *v58;
  uint64_t v59;
  char *v60;
  _OWORD v61[2];
  uint64_t v62;
  uint64_t v63;

  v52 = *v1;
  sub_23201C800();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v60 = (char *)&v47 - v8;
  v9 = sub_232200DB0();
  v53 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2321FDF60();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v58 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v47 - v16;
  v18 = sub_23220039C();
  v55 = *(_QWORD *)(v18 - 8);
  v56 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232200300();
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v59 = v12;
  v57 = v21;
  v21(v17, a1, v12);
  v22 = sub_232200390();
  v23 = sub_2322012FC();
  v51 = v23;
  v24 = os_log_type_enabled(v22, v23);
  v54 = v7;
  if (v24)
  {
    v25 = swift_slowAlloc();
    v50 = v2;
    v26 = v25;
    v49 = swift_slowAlloc();
    *(_QWORD *)&v61[0] = v49;
    *(_DWORD *)v26 = 136315394;
    v48 = v22;
    v27 = sub_232201BF0();
    v63 = sub_232013174(v27, v28, (uint64_t *)v61);
    v52 = a1;
    sub_232201710();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 2080;
    v47 = v26 + 14;
    sub_2321FDF18();
    sub_232000590(&qword_2541B6BF8, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C8]);
    v29 = sub_232201AB8();
    v31 = v30;
    (*(void (**)(char *, uint64_t))(v53 + 8))(v11, v9);
    v63 = sub_232013174(v29, v31, (uint64_t *)v61);
    a1 = v52;
    sub_232201710();
    swift_bridgeObjectRelease();
    v32 = v59;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v59);
    v22 = v48;
    _os_log_impl(&dword_231FFB000, v48, (os_log_type_t)v51, "[%s] encoding summary with morning index: %s", (uint8_t *)v26, 0x16u);
    v33 = v49;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v33, -1, -1);
    MEMORY[0x2348FF468](v26, -1, -1);
  }
  else
  {
    v32 = v59;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v59);
  }

  (*(void (**)(char *, uint64_t))(v55 + 8))(v20, v56);
  sub_232003E9C(0, &qword_2541B7118);
  v34 = (uint64_t)v58;
  v57(v58, a1, v32);
  v35 = (void *)sub_23200BAF0(v34);
  v36 = (uint64_t)v60;
  sub_2321FFE50();
  v37 = *MEMORY[0x24BE4AD48];
  v38 = sub_2321FFD78();
  v39 = *(_QWORD *)(v38 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 104))(v36, v37, v38);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
  result = objc_msgSend(v35, sel_data);
  if (result)
  {
    v41 = result;
    sub_232003E9C(0, &qword_2541B0CD0);
    v42 = sub_2321FDAD4();
    v44 = v43;

    v45 = (uint64_t)v54;
    sub_23201C854(v36, (uint64_t)v54);
    v62 = 0;
    memset(v61, 0, sizeof(v61));
    v46 = sub_232015828(v42, v44, 4, v45, 0, 0, (uint64_t)v61);
    sub_232003ED4(v42, v44);

    sub_232002CEC(v36, (uint64_t (*)(_QWORD))sub_23201C800);
    return v46;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2320474C0()
{
  uint64_t v0;

  sub_232002CEC(v0 + OBJC_IVAR____TtC9Summaries36BalanceCurrentValueSharableModelStep_request, type metadata accessor for SummariesFullProfileExecutor.Request);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_232047520()
{
  return type metadata accessor for BalanceCurrentValueSharableModelStep();
}

uint64_t type metadata accessor for BalanceCurrentValueSharableModelStep()
{
  uint64_t result;

  result = qword_2541B6EE8;
  if (!qword_2541B6EE8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_232047564()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SummariesFullProfileExecutor.Request(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_2320475E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a2;
  *(_QWORD *)(v5 + 24) = a3;
  swift_retain();
  sub_2320465D0((uint64_t)sub_232047668, v5);
  return swift_release();
}

uint64_t sub_232047644()
{
  swift_release();
  return swift_deallocObject();
}

void sub_232047668(void *a1, char a2)
{
  uint64_t v2;

  sub_232046568(a1, a2 & 1, *(void (**)(id, id, uint64_t))(v2 + 16));
}

void sub_232047674()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B6FC0)
  {
    sub_232200DB0();
    sub_232000590(&qword_2541B6BF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24A8]);
    v0 = sub_232200E58();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B6FC0);
  }
}

uint64_t sub_2320476EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_232047674();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_232047730()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23204775C(uint64_t a1, _QWORD *a2, char a3)
{
  uint64_t v3;

  sub_232046A58(a1, a2, a3 & 1, *(_QWORD *)(v3 + 16), *(void (**)(id, uint64_t))(v3 + 24), *(_QWORD *)(v3 + 32));
}

void sub_23204776C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B6A20)
  {
    sub_2321FDF60();
    sub_232000590(&qword_2541B6A10, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FFB0], MEMORY[0x24BE3FFA8]);
    v0 = sub_2321FDF78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B6A20);
  }
}

void sub_2320477E4(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

void sub_2320477F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B78B0)
  {
    sub_232003E9C(255, qword_2541B74A8);
    v0 = sub_2322016F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B78B0);
  }
}

id sub_232047854(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)swift_bridgeObjectRetain();
}

void sub_232047860(id a1)
{

}

unint64_t sub_23204786C()
{
  unint64_t result;

  result = qword_255F9C688;
  if (!qword_255F9C688)
  {
    result = MEMORY[0x2348FF39C](&unk_232211820, &type metadata for BalanceCurrentValueSharableModelStep.BalanceProcessingError);
    atomic_store(result, (unint64_t *)&qword_255F9C688);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for BalanceCurrentValueSharableModelStep.BalanceProcessingError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2320478F0 + 4 * asc_232211740[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_232047910 + 4 * byte_232211745[v4]))();
}

_BYTE *sub_2320478F0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_232047910(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_232047918(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_232047920(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_232047928(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_232047930(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for BalanceCurrentValueSharableModelStep.BalanceProcessingError()
{
  return &type metadata for BalanceCurrentValueSharableModelStep.BalanceProcessingError;
}

unint64_t sub_232047950()
{
  unint64_t result;

  result = qword_255F9C690;
  if (!qword_255F9C690)
  {
    result = MEMORY[0x2348FF39C](&unk_2322117F8, &type metadata for BalanceCurrentValueSharableModelStep.BalanceProcessingError);
    atomic_store(result, (unint64_t *)&qword_255F9C690);
  }
  return result;
}

uint64_t sub_232047994(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(void);
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v40 = a1;
  v4 = sub_2321FE440();
  v41 = *(_QWORD *)(v4 - 8);
  v42 = v4;
  v43 = *(_QWORD *)(v41 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232048C28();
  v7 = v6;
  v35 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232048DBC();
  v36 = v10;
  v38 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232048F70();
  v14 = *(_QWORD *)(v13 - 8);
  v45 = v13;
  v46 = v14;
  MEMORY[0x24BDAC7A8](v13);
  v44 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = a2;
  *(_QWORD *)(swift_allocObject() + 16) = v2;
  sub_232048D04();
  v16 = MEMORY[0x24BDB9E10];
  sub_232049030(0, &qword_2541B30C8, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9E10]);
  sub_232000590((unint64_t *)&qword_2541AF300, (uint64_t (*)(uint64_t))sub_232048D04, MEMORY[0x24BDB9AF8]);
  sub_232048D7C(&qword_2541AF338, &qword_2541B30C8, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))v16, MEMORY[0x24BDB9E20]);
  sub_2322007D4();
  swift_release();
  sub_232000590(&qword_2541AF238, (uint64_t (*)(uint64_t))sub_232048C28, MEMORY[0x24BDB9740]);
  sub_232200834();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v7);
  sub_232000590(&qword_2541AF1C0, (uint64_t (*)(uint64_t))sub_232048DBC, MEMORY[0x24BDB9530]);
  v17 = v40;
  v18 = v36;
  v19 = sub_232200720();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v18);
  v47 = v19;
  v20 = v41;
  v21 = v42;
  v22 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v39, v17, v42);
  v23 = v20;
  v24 = (*(unsigned __int8 *)(v20 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v25 = (v43 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  v26 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v23 + 32))(v26 + v24, v22, v21);
  *(_QWORD *)(v26 + v25) = v37;
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = sub_232049114;
  *(_QWORD *)(v27 + 24) = v26;
  v28 = MEMORY[0x24BDB9AE0];
  sub_232049030(0, &qword_2541B3048, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_232016A8C(0, &qword_2541B28D8);
  sub_232048D7C(&qword_2541AF308, &qword_2541B3048, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))v28, MEMORY[0x24BDB9AF8]);
  v29 = v44;
  sub_2322007A4();
  swift_release();
  swift_release();
  sub_232000590(&qword_2541AF210, (uint64_t (*)(uint64_t))sub_232048F70, MEMORY[0x24BDB96C0]);
  v30 = v45;
  v31 = v29;
  v32 = sub_232200774();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v31, v30);
  return v32;
}

uint64_t sub_232047DAC@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;

  v6 = sub_23220039C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  sub_232200318();
  v11 = v10;
  v12 = v10;
  v13 = sub_232200390();
  v14 = sub_2322012E4();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v24[1] = a3;
    v16 = v15;
    v17 = swift_slowAlloc();
    v25 = v17;
    v26 = a2;
    *(_DWORD *)v16 = 136446466;
    swift_getMetatypeMetadata();
    v18 = sub_232200F00();
    v26 = sub_232013174(v18, v19, &v25);
    sub_232201710();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2082;
    v26 = (uint64_t)v10;
    v20 = v10;
    sub_232016A8C(0, (unint64_t *)&qword_2541B78D0);
    v21 = sub_232200F00();
    v26 = sub_232013174(v21, v22, &v25);
    sub_232201710();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_231FFB000, v13, v14, "[%{public}s] Darwin notification publisher failed due to error: %{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v17, -1, -1);
    MEMORY[0x2348FF468](v16, -1, -1);
  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return sub_2322006C0();
}

uint64_t sub_232048014@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v6 = sub_2321FE440();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_23220039C();
  v10 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232200318();
  v13 = sub_232200390();
  v14 = sub_2322012FC();
  if (os_log_type_enabled(v13, v14))
  {
    v29 = a1;
    v15 = swift_slowAlloc();
    v30 = a3;
    v16 = (uint8_t *)v15;
    v17 = swift_slowAlloc();
    v28 = v6;
    v18 = v17;
    v32 = v17;
    v33 = a2;
    v27 = v7;
    *(_DWORD *)v16 = 136446210;
    swift_getMetatypeMetadata();
    v19 = sub_232200F00();
    v33 = sub_232013174(v19, v20, &v32);
    a1 = v29;
    v7 = v27;
    sub_232201710();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_231FFB000, v13, v14, "[%{public}s] Submitting a sharable model generator for wheelchair setting", v16, 0xCu);
    swift_arrayDestroy();
    v21 = v18;
    v6 = v28;
    MEMORY[0x2348FF468](v21, -1, -1);
    v22 = v16;
    a3 = v30;
    MEMORY[0x2348FF468](v22, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v31);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v23 = type metadata accessor for WheelchairSettingModelGenerator();
  swift_allocObject();
  v24 = sub_2320F9FDC((uint64_t)v9);
  a3[3] = v23;
  result = sub_232000590(&qword_2541AFB20, (uint64_t (*)(uint64_t))type metadata accessor for WheelchairSettingModelGenerator, (uint64_t)&unk_232215680);
  a3[4] = result;
  *a3 = v24;
  return result;
}

uint64_t sub_232048270()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC9Summaries39WheelchairSettingModelGeneratorPipeline_domain;
  v2 = sub_2321FE3BC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  v3 = v0 + OBJC_IVAR____TtC9Summaries39WheelchairSettingModelGeneratorPipeline_context;
  v4 = sub_2321FE440();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t sub_2320482F8()
{
  return type metadata accessor for WheelchairSettingModelGeneratorPipeline();
}

uint64_t type metadata accessor for WheelchairSettingModelGeneratorPipeline()
{
  uint64_t result;

  result = qword_2541AFFB8;
  if (!qword_2541AFFB8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23204833C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2321FE3BC();
  if (v1 <= 0x3F)
  {
    result = sub_2321FE440();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_2320483D0()
{
  return swift_retain();
}

uint64_t sub_2320483E4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC9Summaries39WheelchairSettingModelGeneratorPipeline_domain;
  v4 = sub_2321FE3BC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

_QWORD *sub_23204842C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  void *v22;
  uint64_t v23;
  id v24;
  void (*v25)(char *, uint64_t);
  void (*v26)(char *, char *, uint64_t);
  _QWORD *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;

  v36 = *v3;
  v37 = a3;
  v6 = sub_2321FE38C();
  v33 = *(_QWORD *)(v6 - 8);
  v34 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v35 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2321FE440();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232048AA0();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_2321FE3BC();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = v3;
  v19 = (char *)v3 + OBJC_IVAR____TtC9Summaries39WheelchairSettingModelGeneratorPipeline_context;
  v20 = v9;
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v21(v19, a1, v8);
  v39 = a2;
  sub_232048BA8(a2, (uint64_t)v14);
  v21(v11, a1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    v31 = v20;
    v32 = a1;
    v22 = (void *)sub_2321FE3F8();
    v23 = qword_2541B3FF0;
    v24 = v22;
    if (v23 != -1)
      swift_once();
    (*(void (**)(char *, _QWORD, uint64_t))(v33 + 104))(v35, *MEMORY[0x24BE47910], v34);
    swift_bridgeObjectRetain();
    sub_2321FE3B0();

    v25 = *(void (**)(char *, uint64_t))(v31 + 8);
    v25(v11, v8);
    sub_232048BEC((uint64_t)v14);
    v26 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    a1 = v32;
  }
  else
  {
    v25 = *(void (**)(char *, uint64_t))(v20 + 8);
    v25(v11, v8);
    v26 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v26(v18, v14, v15);
  }
  v27 = v38;
  v26((char *)v38 + OBJC_IVAR____TtC9Summaries39WheelchairSettingModelGeneratorPipeline_domain, v18, v15);
  v28 = sub_232047994(a1, v37);
  sub_232048BEC(v39);
  v25((char *)a1, v8);
  *(_QWORD *)((char *)v27 + OBJC_IVAR____TtC9Summaries39WheelchairSettingModelGeneratorPipeline_publisher) = v28;
  return v27;
}

_QWORD *sub_2320486E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  id v18;
  void *v19;
  _QWORD *result;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  sub_232048AA0();
  MEMORY[0x24BDAC7A8](v2);
  v37 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2321FE440();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v36 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232048AF4();
  v33 = *(_QWORD *)(v6 - 8);
  v34 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2321FE38C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_2321FE3BC();
  v13 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (void *)sub_2321FE3F8();
  v17 = qword_2541B3FF0;
  v18 = v16;
  if (v17 != -1)
    swift_once();
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BE47910], v9);
  swift_bridgeObjectRetain();
  sub_2321FE3B0();

  v19 = (void *)sub_2321FE41C();
  result = (_QWORD *)*MEMORY[0x24BDD46E8];
  if (*MEMORY[0x24BDD46E8])
  {
    v21 = a1;
    sub_232200F54();
    sub_2321FF8C8();
    v22 = (uint64_t (*)(uint64_t))MEMORY[0x24BE458A0];
    swift_allocObject();
    v32 = v19;
    v40 = sub_2321FF8BC();
    sub_232016A8C(0, (unint64_t *)&qword_2541B78D0);
    sub_232000590(&qword_2541B2A18, v22, MEMORY[0x24BE45898]);
    sub_232200864();
    swift_release();
    sub_232000590(&qword_2541B2B68, (uint64_t (*)(uint64_t))sub_232048AF4, MEMORY[0x24BDB95F8]);
    v23 = v34;
    v24 = sub_232200774();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v8, v23);
    v26 = v38;
    v25 = v39;
    v27 = (uint64_t)v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v36, v21, v39);
    v28 = (uint64_t)v37;
    v29 = v35;
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v37, v15, v35);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v28, 0, 1, v29);
    type metadata accessor for WheelchairSettingModelGeneratorPipeline();
    swift_allocObject();
    v30 = sub_23204842C(v27, v28, v24);

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v21, v25);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v29);
    return v30;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_232048AA0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B28B0)
  {
    sub_2321FE3BC();
    v0 = sub_2322016F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B28B0);
  }
}

void sub_232048AF4()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_2541B2B70)
  {
    sub_2321FF8C8();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BE458A0];
    sub_232016A8C(255, (unint64_t *)&qword_2541B78D0);
    sub_232000590(&qword_2541B2A18, v0, MEMORY[0x24BE45898]);
    v1 = sub_23220051C();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_2541B2B70);
  }
}

uint64_t sub_232048BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_232048AA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_232048BEC(uint64_t a1)
{
  uint64_t v2;

  sub_232048AA0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_232048C28()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_2541B2D60)
  {
    sub_232048D04();
    v0 = MEMORY[0x24BDB9E10];
    sub_232049030(255, &qword_2541B30C8, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9E10]);
    sub_232000590((unint64_t *)&qword_2541AF300, (uint64_t (*)(uint64_t))sub_232048D04, MEMORY[0x24BDB9AF8]);
    sub_232048D7C(&qword_2541AF338, &qword_2541B30C8, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))v0, MEMORY[0x24BDB9E20]);
    v1 = sub_23220057C();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_2541B2D60);
  }
}

void sub_232048D04()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B3040)
  {
    sub_232016A8C(255, (unint64_t *)&qword_2541B78D0);
    v0 = sub_232200624();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B3040);
  }
}

uint64_t sub_232048D7C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(_QWORD, uint64_t, _QWORD, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_232049030(255, a2, a3);
    result = MEMORY[0x2348FF39C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_232048DBC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2B50)
  {
    sub_232048E84();
    sub_232048C28();
    sub_232000590(&qword_2541B2E50, (uint64_t (*)(uint64_t))sub_232048E84, MEMORY[0x24BDB9970]);
    sub_232000590(&qword_2541AF238, (uint64_t (*)(uint64_t))sub_232048C28, MEMORY[0x24BDB9740]);
    v0 = sub_232200504();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2B50);
  }
}

void sub_232048E84()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2E58)
  {
    sub_232048F18();
    sub_232000590(&qword_2541B5550, (uint64_t (*)(uint64_t))sub_232048F18, MEMORY[0x24BEE12C8]);
    v0 = sub_2322005D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2E58);
  }
}

void sub_232048F18()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B5548)
  {
    v0 = sub_232201080();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B5548);
  }
}

void sub_232048F70()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_2541B2C98)
  {
    v0 = MEMORY[0x24BDB9AE0];
    sub_232049030(255, &qword_2541B3048, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_232016A8C(255, &qword_2541B28D8);
    sub_232048D7C(&qword_2541AF308, &qword_2541B3048, (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))v0, MEMORY[0x24BDB9AF8]);
    v1 = sub_232200540();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_2541B2C98);
  }
}

void sub_232049030(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, uint64_t, _QWORD, _QWORD))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, MEMORY[0x24BEE4AE0] + 8, MEMORY[0x24BEE4078], MEMORY[0x24BEE40A8]);
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_232049090()
{
  return swift_deallocObject();
}

uint64_t sub_2320490A0@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_232047DAC(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_2320490A8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_2321FE440();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_232049114@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(sub_2321FE440() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_232048014(v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)), a1);
}

uint64_t sub_232049164()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_232049188()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;

  sub_232003F18(v0 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_request);
  v1 = v0 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_configuration;
  v2 = sub_2321FFE08();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_232016AFC(v0 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_trendAnalysisEngine);
  v3 = v0 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_statisticsQueryConfiguration;
  v4 = sub_232200024();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_anchorDate;
  v6 = sub_2321FDC6C();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(v0 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_endingDate, v6);
  v8 = v0 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_queryDateInterval;
  v9 = sub_2321FD8B8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_2320492D8()
{
  return type metadata accessor for SleepTrendSharableModelStep();
}

uint64_t type metadata accessor for SleepTrendSharableModelStep()
{
  uint64_t result;

  result = qword_255F9C6C0;
  if (!qword_255F9C6C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23204931C()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_232049350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  char *v16;
  char v17;
  id v18;
  id v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint8_t *v28;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v4 = v3;
  v34 = a3;
  v32 = a1;
  v6 = sub_23220039C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23204A004();
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = a2;
  v15 = (void *)sub_2321FE3EC();
  v16 = sub_2320A9680((uint64_t)v15);
  if ((v17 & 1) != 0)
  {
    sub_232200318();
    v21 = sub_232200390();
    v22 = sub_2322012E4();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = swift_slowAlloc();
      v31 = v15;
      v24 = (uint8_t *)v23;
      v25 = swift_slowAlloc();
      v35 = v25;
      *(_DWORD *)v24 = 136315138;
      v36 = v4;
      swift_getMetatypeMetadata();
      v26 = sub_232200F00();
      v36 = sub_232013174(v26, v27, &v35);
      sub_232201710();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v21, v22, "[%s]: Failed to fetch ECG active algorithm version", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v25, -1, -1);
      v28 = v24;
      v15 = v31;
      MEMORY[0x2348FF468](v28, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v20 = sub_2321D08EC(v32, v33, v34);

  }
  else
  {
    v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v16);
    v36 = sub_2321D08EC(v32, v33, v34);
    *(_QWORD *)(swift_allocObject() + 16) = v18;
    sub_23204A098();
    sub_23204A104(0);
    sub_232000590(&qword_2541B2F50, (uint64_t (*)(uint64_t))sub_23204A098, MEMORY[0x24BDB9AF8]);
    v19 = v18;
    sub_2322007A4();
    swift_release();
    swift_release();
    sub_232000590(&qword_255F9C7C8, (uint64_t (*)(uint64_t))sub_23204A004, MEMORY[0x24BDB96C0]);
    v20 = sub_232200774();

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  return v20;
}

void sub_232049698(void **a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  void *v4;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char isUniquelyReferenced_nonNull_native;
  void *v14;
  _OWORD v15[2];
  __int128 v16;
  uint64_t v17;

  v4 = *a1;
  if (*a1)
  {
    v6 = v4;
    v7 = objc_msgSend(v6, sel_metadata);
    if (v7)
    {
      v8 = v7;
      sub_232200DD4();

    }
    else
    {
      sub_2320E2BF4(MEMORY[0x24BEE4AF8]);
    }
    v9 = sub_232200EC4();
    v11 = v10;
    v17 = sub_232003E9C(0, (unint64_t *)&qword_2541B0D78);
    *(_QWORD *)&v16 = a2;
    sub_232015B58(&v16, v15);
    v12 = a2;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_2320E300C(v15, v9, v11, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14 = (void *)sub_232200DBC();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel__setMetadata_, v14);

  }
  *a3 = v4;
}

id sub_232049804(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  id v31;
  id result;
  void *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  id v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  id v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  id v57;
  id v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t);
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _OWORD v69[2];
  uint64_t v70;
  uint64_t v71;

  v4 = sub_23220039C();
  v68 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v65 - v8;
  sub_2320002B4(0, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v65 - v11;
  sub_2320002B4(0, (unint64_t *)&qword_2541B2A70, (void (*)(uint64_t))MEMORY[0x24BE4ADA0]);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v65 - v17;
  objc_opt_self();
  v19 = swift_dynamicCastObjCClass();
  if (!v19)
  {
    sub_232200354();
    v38 = a1;
    v39 = sub_232200390();
    v40 = sub_2322012E4();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = swift_slowAlloc();
      v67 = swift_slowAlloc();
      *(_QWORD *)&v69[0] = v67;
      *(_DWORD *)v41 = 136315394;
      v42 = sub_232201BF0();
      v71 = sub_232013174(v42, v43, (uint64_t *)v69);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 12) = 2080;
      v44 = v38;
      v45 = objc_msgSend(v44, sel_description);
      v46 = sub_232200EC4();
      v66 = v4;
      v47 = v46;
      v49 = v48;

      v71 = sub_232013174(v47, v49, (uint64_t *)v69);
      sub_232201710();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v39, v40, "[%s]: Unsupported sample type: %s", (uint8_t *)v41, 0x16u);
      v50 = v67;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v50, -1, -1);
      MEMORY[0x2348FF468](v41, -1, -1);

      (*(void (**)(char *, uint64_t))(v68 + 8))(v7, v66);
      return 0;
    }

    v63 = *(void (**)(char *, uint64_t))(v68 + 8);
    v64 = v7;
LABEL_12:
    v63(v64, v4);
    return 0;
  }
  v20 = (void *)v19;
  v21 = a1;
  v22 = sub_232049EDC(v20);
  if (!v22)
  {
    sub_232200354();
    v51 = v21;
    v52 = sub_232200390();
    v53 = sub_2322012E4();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = swift_slowAlloc();
      v67 = swift_slowAlloc();
      *(_QWORD *)&v69[0] = v67;
      *(_DWORD *)v54 = 136315394;
      v55 = sub_232201BF0();
      v71 = sub_232013174(v55, v56, (uint64_t *)v69);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v54 + 12) = 2080;
      v66 = v54 + 14;
      v57 = v51;
      v58 = objc_msgSend(v57, sel_description);
      v59 = sub_232200EC4();
      v61 = v60;

      v71 = sub_232013174(v59, v61, (uint64_t *)v69);
      sub_232201710();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v52, v53, "[%s]: Unable to create ECG data for sample: %s", (uint8_t *)v54, 0x16u);
      v62 = v67;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v62, -1, -1);
      MEMORY[0x2348FF468](v54, -1, -1);

    }
    else
    {

    }
    v63 = *(void (**)(char *, uint64_t))(v68 + 8);
    v64 = v9;
    goto LABEL_12;
  }
  v23 = v22;
  v24 = a2
      + *(int *)(type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request(0) + 32);
  v25 = sub_232200180();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v18, v24, v25);
  v26 = *MEMORY[0x24BE4AD70];
  v27 = sub_2321FFD78();
  v28 = *(_QWORD *)(v27 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 104))(v18, v26, v27);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v18, 0, 1, v27);
  sub_232003E9C(0, &qword_2541B56C8);
  v29 = v21;
  sub_232201674();

  v30 = sub_2321FD8B8();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v12, 0, 1, v30);
  v31 = HKCodableSummarySupplementaryValue.init(dateInterval:dataCount:)((uint64_t)v12, 1, 0);
  result = objc_msgSend(v23, sel_data);
  if (result)
  {
    v33 = result;
    sub_232003E9C(0, &qword_2541B0CD0);
    v34 = sub_2321FDAD4();
    v36 = v35;

    sub_23201C854((uint64_t)v18, (uint64_t)v16);
    v70 = 0;
    memset(v69, 0, sizeof(v69));
    v37 = sub_232015828(v34, v36, 8, (uint64_t)v16, (uint64_t)v31, 0, (uint64_t)v69);

    sub_232003ED4(v34, v36);
    sub_23201C898((uint64_t)v18);

    return v37;
  }
  __break(1u);
  return result;
}

uint64_t sub_232049E98()
{
  return type metadata accessor for ElectrocardiogramCurrentValueSummarySharableModelGenerator();
}

uint64_t type metadata accessor for ElectrocardiogramCurrentValueSummarySharableModelGenerator()
{
  uint64_t result;

  result = qword_2541B0990;
  if (!qword_2541B0990)
    return swift_getSingletonMetadata();
  return result;
}

id sub_232049EDC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v11;

  v2 = sub_2321FDC6C();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(a1, sel__algorithmVersion);
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, sel_integerValue);

  }
  else
  {
    v7 = 0;
  }
  sub_232003E9C(0, &qword_2541AF0B8);
  v8 = objc_msgSend(a1, sel_privateClassification);
  v9 = objc_msgSend(a1, sel_endDate);
  sub_2321FDC30();

  return HKCodableSummaryElectrocardiogramValue.init(algorithmVersion:classification:timestamp:averageHeartRate:)((uint64_t)v7, (uint64_t)v8, (uint64_t)v4, objc_msgSend(a1, sel_averageHeartRate));
}

void sub_23204A004()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2C18)
  {
    sub_23204A098();
    sub_23204A104(255);
    sub_232000590(&qword_2541B2F50, (uint64_t (*)(uint64_t))sub_23204A098, MEMORY[0x24BDB9AF8]);
    v0 = sub_232200540();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2C18);
  }
}

void sub_23204A098()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2F58)
  {
    sub_23204A104(255);
    sub_232002B9C();
    v0 = sub_232200624();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2F58);
  }
}

void sub_23204A104(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t Output;
  uint64_t v6;

  if (!qword_2541B3568)
  {
    v2 = sub_232003E9C(255, &qword_2541B0D68);
    Output = type metadata accessor for SummaryModelQueryOutput(a1, v2, v3, v4);
    if (!v6)
      atomic_store(Output, (unint64_t *)&qword_2541B3568);
  }
}

uint64_t sub_23204A168()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_23204A18C(void **a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_232049698(a1, *(void **)(v2 + 16), a2);
}

ValueMetadata *type metadata accessor for CardioFitnessAdditionalInputSignalProvider()
{
  return &type metadata for CardioFitnessAdditionalInputSignalProvider;
}

uint64_t sub_23204A1A8()
{
  uint64_t v0;
  uint64_t inited;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;

  sub_23204A348(0, (unint64_t *)&qword_2541B7190, (void (*)(uint64_t))sub_2320319E4);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_232211930;
  sub_23204A348(0, &qword_2541B71D8, type metadata accessor for HKFeatureIdentifier);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232210D40;
  v2 = (void *)*MEMORY[0x24BDD2DD0];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BDD2DD0];
  v3 = v2;
  sub_2321AA318(inited);
  swift_setDeallocating();
  type metadata accessor for HKFeatureIdentifier(0);
  swift_arrayDestroy();
  v4 = sub_2321FE764();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BE48018];
  *(_QWORD *)(v0 + 56) = v4;
  *(_QWORD *)(v0 + 64) = sub_232000590(&qword_2541B6A78, v5, MEMORY[0x24BE48008]);
  sub_2320251BC((uint64_t *)(v0 + 32));
  sub_2321FE758();
  sub_23204A394();
  v6 = sub_2321FFB44();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BE47138];
  *(_QWORD *)(v0 + 96) = v6;
  v8 = sub_232000590((unint64_t *)&qword_2541B6B38, v7, MEMORY[0x24BE47130]);
  *(_QWORD *)(v0 + 104) = v8;
  sub_2320251BC((uint64_t *)(v0 + 72));
  sub_2321FE8C0();
  sub_23204A464();
  *(_QWORD *)(v0 + 136) = v6;
  *(_QWORD *)(v0 + 144) = v8;
  sub_2320251BC((uint64_t *)(v0 + 112));
  sub_2321FE8A8();
  return v0;
}

void sub_23204A348(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_232201AC4();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_23204A394()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B6AA0)
  {
    type metadata accessor for HKBiologicalSex(255);
    sub_232000590((unint64_t *)&unk_2541B7050, (uint64_t (*)(uint64_t))type metadata accessor for HKBiologicalSex, MEMORY[0x24BE485C8]);
    sub_232000590(&qword_2541B7040, (uint64_t (*)(uint64_t))type metadata accessor for HKBiologicalSex, MEMORY[0x24BE485C0]);
    sub_232000590(&qword_2541B7048, (uint64_t (*)(uint64_t))type metadata accessor for HKBiologicalSex, (uint64_t)&unk_2322102E0);
    v0 = sub_2321FE8E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B6AA0);
  }
}

void sub_23204A464()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_2541B6A90)
  {
    sub_2321FD960();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0];
    sub_232000590(&qword_2541B69A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE20]);
    sub_232000590(&qword_2541B6998, v0, MEMORY[0x24BDCBE00]);
    sub_232000590(&qword_2541B69A0, v0, MEMORY[0x24BDCBE18]);
    v1 = sub_2321FE8E4();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_2541B6A90);
  }
}

void sub_23204A534(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  unsigned int v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  _QWORD v14[6];

  sub_23204AD50();
  v3 = swift_allocObject();
  *(_DWORD *)(v3 + 32) = 0;
  *(_BYTE *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v1 + 24) = v3;
  *(_QWORD *)(v1 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE32808]), sel_initWithHealthStore_, a1);
  v4 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (!v4)
  {
    __break(1u);
    goto LABEL_7;
  }
  v5 = v4;
  v6 = objc_msgSend(v4, sel_features);

  if (!v6)
  {
LABEL_7:
    __break(1u);
    return;
  }
  v7 = objc_msgSend(v6, sel_pauseRings);

  if (v7)
  {
    v8 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    v9 = objc_msgSend((id)objc_opt_self(), sel_initialPauseStateLoadedNotification);
    v10 = objc_msgSend((id)objc_opt_self(), sel_mainQueue);
    v11 = swift_allocObject();
    swift_weakInit();
    v14[4] = sub_23204ADD0;
    v14[5] = v11;
    v14[0] = MEMORY[0x24BDAC760];
    v14[1] = 1107296256;
    v14[2] = sub_23204A96C;
    v14[3] = &unk_2500FF7F8;
    v12 = _Block_copy(v14);
    swift_release();
    v13 = objc_msgSend(v8, sel_addObserverForName_object_queue_usingBlock_, v9, 0, v10, v12);

    _Block_release(v12);
    swift_unknownObjectRelease();

  }
  else
  {

  }
}

uint64_t sub_23204A758()
{
  uint64_t result;
  uint64_t v1;
  os_unfair_lock_s *v2;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    v2 = *(os_unfair_lock_s **)(result + 24);
    swift_retain();
    os_unfair_lock_lock(v2 + 8);
    sub_23204A7EC((uint64_t)&v2[4], v1);
    os_unfair_lock_unlock(v2 + 8);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_23204A7EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *);
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_23202D234(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)a1 = 1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v19 = a1;
    v20 = v2;
    v10 = *(void **)(a2 + 16);
    swift_bridgeObjectRetain_n();
    v11 = v8 + 40;
    do
    {
      v13 = *(void (**)(char *))(v11 - 8);
      swift_retain();
      v14 = objc_msgSend(v10, sel_resumeDate);
      if (v14)
      {
        v15 = v14;
        sub_2321FDC30();

        v16 = sub_2321FDC6C();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v7, 0, 1, v16);
      }
      else
      {
        v12 = sub_2321FDC6C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v7, 1, 1, v12);
      }
      v13(v7);
      sub_23204ADF0((uint64_t)v7);
      swift_release();
      v11 += 16;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease_n();
    a1 = v19;
  }
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = MEMORY[0x24BEE4AF8];
  return result;
}

uint64_t sub_23204A96C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *);
  uint64_t v8;

  v2 = sub_2321FD8D0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(char *))(a1 + 32);
  sub_2321FD8C4();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_23204AA10(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t result;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;

  sub_23202D234(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)a1 == 1)
  {
    v11 = objc_msgSend(*(id *)(a4 + 16), sel_resumeDate);
    if (v11)
    {
      v12 = v11;
      sub_2321FDC30();

      v13 = sub_2321FDC6C();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v10, 0, 1, v13);
    }
    else
    {
      v20 = sub_2321FDC6C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v10, 1, 1, v20);
    }
    a2(v10);
    return sub_23204ADF0((uint64_t)v10);
  }
  else
  {
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = a2;
    *(_QWORD *)(v14 + 24) = a3;
    v15 = *(_QWORD **)(a1 + 8);
    swift_retain();
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_232096DB4(0, v15[2] + 1, 1, v15);
      v15 = (_QWORD *)result;
    }
    v18 = v15[2];
    v17 = v15[3];
    if (v18 >= v17 >> 1)
    {
      result = (uint64_t)sub_232096DB4((_QWORD *)(v17 > 1), v18 + 1, 1, v15);
      v15 = (_QWORD *)result;
    }
    v15[2] = v18 + 1;
    v19 = &v15[2 * v18];
    v19[4] = sub_23204AE50;
    v19[5] = v14;
    *(_QWORD *)(a1 + 8) = v15;
  }
  return result;
}

uint64_t sub_23204ABB0()
{
  uint64_t v0;

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for HealthStoreActivityRingsResumeDateProvider()
{
  return objc_opt_self();
}

uint64_t initializeBufferWithCopyOfBuffer for HealthStoreActivityRingsResumeDateProvider.State(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for HealthStoreActivityRingsResumeDateProvider.State()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for HealthStoreActivityRingsResumeDateProvider.State(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for HealthStoreActivityRingsResumeDateProvider.State(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t assignWithTake for HealthStoreActivityRingsResumeDateProvider.State(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HealthStoreActivityRingsResumeDateProvider.State(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HealthStoreActivityRingsResumeDateProvider.State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HealthStoreActivityRingsResumeDateProvider.State()
{
  return &type metadata for HealthStoreActivityRingsResumeDateProvider.State;
}

void sub_23204AD50()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B7150)
  {
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_2322018CC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B7150);
  }
}

uint64_t sub_23204ADAC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23204ADD0()
{
  return sub_23204A758();
}

uint64_t sub_23204ADD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23204ADE8()
{
  return swift_release();
}

uint64_t sub_23204ADF0(uint64_t a1)
{
  uint64_t v2;

  sub_23202D234(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23204AE2C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23204AE50()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

id sub_23204AE74()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id result;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC9Summaries17AlertLocalization____lazy_storage___displayTypeController;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9Summaries17AlertLocalization____lazy_storage___displayTypeController);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC9Summaries17AlertLocalization____lazy_storage___displayTypeController);
LABEL_5:
    v6 = v2;
    return v3;
  }
  result = objc_msgSend((id)objc_opt_self(), sel_sharedInstanceForHealthStore_, *(_QWORD *)(v0 + OBJC_IVAR____TtC9Summaries17AlertLocalization_healthStore));
  if (result)
  {
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = result;
    v3 = result;

    v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_23204AF00(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t inited;
  uint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  void *v79;
  id v80;

  v79 = a4;
  v80 = a1;
  v10 = sub_2321FE584();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23204DD38(a2, a5, (uint64_t)v13);
  if (!v6)
  {
    v75 = 0;
    v76 = v11;
    v77 = v10;
    v78 = v13;
    v14 = v80;
    v15 = objc_msgSend(v80, sel_identifier);
    v16 = sub_232200EC4();
    v18 = v17;

    if (sub_232200EC4() == v16 && v19 == v18)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v10 = sub_232201ADC();
      swift_bridgeObjectRelease();
      if ((v10 & 1) == 0)
      {
        if (sub_232200EC4() == v16 && v21 == v18)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v10 = sub_232201ADC();
          swift_bridgeObjectRelease();
          if ((v10 & 1) == 0)
          {
            if (sub_232200EC4() == v16 && v23 == v18)
            {
              swift_bridgeObjectRelease();
              goto LABEL_36;
            }
            v10 = sub_232201ADC();
            swift_bridgeObjectRelease();
            if ((v10 & 1) != 0)
            {
LABEL_36:
              swift_bridgeObjectRelease();
              if (*(_BYTE *)(v5 + OBJC_IVAR____TtC9Summaries17AlertLocalization_isUserNotification) != 1)
              {
                v40 = 0xD000000000000015;
                v41 = "HIGH_HEART_RATE_EVENT";
LABEL_33:
                v30 = (uint64_t)v78;
                v42 = v75;
                v43 = sub_23204C1B8(v79, v40, (unint64_t)(v41 - 32) | 0x8000000000000000, (uint64_t)v78);
                if (v42)
                {
LABEL_34:
                  v31 = v76;
                  goto LABEL_25;
                }
LABEL_43:
                v10 = v43;
                v31 = v76;
                goto LABEL_25;
              }
LABEL_29:
              sub_232035344(0, (unint64_t *)&qword_2541B78C0);
              inited = swift_initStackObject();
              *(_OWORD *)(inited + 16) = xmmword_232210D40;
              v30 = (uint64_t)v78;
              *(_QWORD *)(inited + 32) = sub_2321FE56C();
              *(_QWORD *)(inited + 40) = v34;
              v35 = (void *)objc_opt_self();
              v36 = (void *)sub_232200E94();
              sub_23200C748(inited);
              v37 = (void *)sub_232201020();
              swift_bridgeObjectRelease();
              v38 = objc_msgSend(v35, sel_localizedUserNotificationStringForKey_arguments_, v36, v37);
LABEL_30:
              v39 = v38;

              v10 = sub_232200EC4();
              swift_setDeallocating();
LABEL_31:
              swift_arrayDestroy();
              goto LABEL_24;
            }
            if (sub_232200EC4() == v16 && v44 == v18)
            {
              swift_bridgeObjectRelease();
              goto LABEL_42;
            }
            v10 = sub_232201ADC();
            swift_bridgeObjectRelease();
            if ((v10 & 1) != 0)
            {
LABEL_42:
              swift_bridgeObjectRelease();
              v30 = (uint64_t)v78;
              v45 = v75;
              v43 = sub_23204BEEC(v79);
              if (v45)
                goto LABEL_34;
              goto LABEL_43;
            }
            if (sub_232200EC4() == v16 && v46 == v18)
            {
              swift_bridgeObjectRelease();
LABEL_48:
              swift_bridgeObjectRelease();
              v48 = *(_BYTE *)(v5 + OBJC_IVAR____TtC9Summaries17AlertLocalization_isUserNotification);
              if (v48)
                v49 = 0xD000000000000038;
              else
                v49 = 0xD00000000000003BLL;
              if (*(_BYTE *)(v5 + OBJC_IVAR____TtC9Summaries17AlertLocalization_isUserNotification))
                v50 = 0x8000000232204030;
              else
                v50 = 0x8000000232203FF0;
LABEL_54:
              sub_232035344(0, (unint64_t *)&qword_2541B78C0);
              v51 = swift_initStackObject();
              *(_OWORD *)(v51 + 16) = xmmword_232210D40;
              v30 = (uint64_t)v78;
              *(_QWORD *)(v51 + 32) = sub_2321FE56C();
              *(_QWORD *)(v51 + 40) = v52;
              v10 = sub_232088E70(v49, v50, v48, 0, 0xE000000000000000, v51);
              swift_setDeallocating();
              swift_arrayDestroy();
LABEL_23:
              swift_bridgeObjectRelease();
LABEL_24:
              v31 = v76;
LABEL_25:
              (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v77);
              return v10;
            }
            v47 = sub_232201ADC();
            swift_bridgeObjectRelease();
            if ((v47 & 1) != 0)
              goto LABEL_48;
            if (sub_232200EC4() == v16 && v53 == v18)
            {
              swift_bridgeObjectRelease();
LABEL_59:
              swift_bridgeObjectRelease();
              v10 = (uint64_t)v79;
              if (v79)
              {
                v55 = v79;
                if (!objc_msgSend(v55, sel_hasCategoryValue))
                {
                  sub_23204FAB0();
                  swift_allocError();
                  *(_QWORD *)v62 = v10;
                  *(_BYTE *)(v62 + 8) = 0;
                  swift_willThrow();
                  v30 = (uint64_t)v78;
                  goto LABEL_34;
                }
                v56 = (uint64_t)objc_msgSend(v55, sel_categoryValue);

              }
              else
              {
                v56 = 1;
              }
              v30 = (uint64_t)v78;
              if (*(_BYTE *)(v5 + OBJC_IVAR____TtC9Summaries17AlertLocalization_isUserNotification) != 1)
              {
                v60 = v75;
                v43 = sub_23204D9F0(v56);
                if (v60)
                  goto LABEL_34;
                goto LABEL_43;
              }
              sub_232035344(0, (unint64_t *)&qword_2541B78C0);
              v57 = swift_initStackObject();
              *(_OWORD *)(v57 + 16) = xmmword_232210D40;
              *(_QWORD *)(v57 + 32) = sub_2321FE56C();
              *(_QWORD *)(v57 + 40) = v58;
              v59 = (void *)objc_opt_self();
              v36 = (void *)sub_232200E94();
              sub_23200C748(v57);
              v37 = (void *)sub_232201020();
              swift_bridgeObjectRelease();
              v38 = objc_msgSend(v59, sel_localizedUserNotificationStringForKey_arguments_, v36, v37);
              goto LABEL_30;
            }
            v54 = sub_232201ADC();
            swift_bridgeObjectRelease();
            if ((v54 & 1) != 0)
              goto LABEL_59;
            if (sub_232200EC4() == v16 && v61 == v18)
            {
              swift_bridgeObjectRelease();
LABEL_72:
              swift_bridgeObjectRelease();
              v48 = *(_BYTE *)(v5 + OBJC_IVAR____TtC9Summaries17AlertLocalization_isUserNotification);
              if (v48)
                v49 = 0xD000000000000037;
              else
                v49 = 0xD000000000000034;
              if (*(_BYTE *)(v5 + OBJC_IVAR____TtC9Summaries17AlertLocalization_isUserNotification))
                v50 = 0x8000000232203F70;
              else
                v50 = 0x8000000232203F30;
              goto LABEL_54;
            }
            v10 = sub_232201ADC();
            swift_bridgeObjectRelease();
            if ((v10 & 1) != 0)
              goto LABEL_72;
            if (sub_232200EC4() == v16 && v63 == v18)
              goto LABEL_80;
            v10 = sub_232201ADC();
            swift_bridgeObjectRelease();
            if ((v10 & 1) == 0)
            {
              if (sub_232200EC4() == v16 && v66 == v18)
                goto LABEL_80;
              v10 = sub_232201ADC();
              swift_bridgeObjectRelease();
              if ((v10 & 1) != 0)
                goto LABEL_82;
              if (sub_232200EC4() == v16 && v67 == v18)
                goto LABEL_80;
              v10 = sub_232201ADC();
              swift_bridgeObjectRelease();
              if ((v10 & 1) != 0)
                goto LABEL_82;
              if (sub_232200EC4() == v16 && v68 == v18)
              {
LABEL_80:
                swift_bridgeObjectRelease();
                goto LABEL_82;
              }
              v10 = sub_232201ADC();
              swift_bridgeObjectRelease();
              if ((v10 & 1) == 0)
              {
                if (sub_232200EC4() == v16 && v69 == v18)
                {
                  swift_bridgeObjectRelease_n();
                }
                else
                {
                  v10 = sub_232201ADC();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if ((v10 & 1) == 0)
                  {
                    sub_23204FAB0();
                    swift_allocError();
                    *(_QWORD *)v73 = v14;
                    *(_BYTE *)(v73 + 8) = 1;
                    v74 = v14;
                    swift_willThrow();
LABEL_83:
                    v31 = v76;
                    v30 = (uint64_t)v78;
                    goto LABEL_25;
                  }
                }
                v70 = *(_BYTE *)(v5 + OBJC_IVAR____TtC9Summaries17AlertLocalization_isUserNotification);
                sub_232035344(0, (unint64_t *)&qword_2541B78C0);
                v71 = swift_initStackObject();
                *(_OWORD *)(v71 + 16) = xmmword_232210D40;
                v30 = (uint64_t)v78;
                *(_QWORD *)(v71 + 32) = sub_2321FE56C();
                *(_QWORD *)(v71 + 40) = v72;
                v10 = sub_2320898C0(0xD00000000000002DLL, 0x8000000232203F00, v70, v71);
                swift_setDeallocating();
                goto LABEL_31;
              }
            }
LABEL_82:
            swift_bridgeObjectRelease();
            v64 = v75;
            v65 = sub_23204E080(v14, (uint64_t)v78);
            if (!v64)
            {
              v10 = v65;
              v31 = v76;
              v30 = (uint64_t)v78;
              goto LABEL_25;
            }
            goto LABEL_83;
          }
        }
        swift_bridgeObjectRelease();
        if (*(_BYTE *)(v5 + OBJC_IVAR____TtC9Summaries17AlertLocalization_isUserNotification) != 1)
        {
          v40 = 0xD000000000000014;
          v41 = "LOW_HEART_RATE_EVENT";
          goto LABEL_33;
        }
        goto LABEL_29;
      }
    }
    swift_bridgeObjectRelease();
    v24 = *(_BYTE *)(v5 + OBJC_IVAR____TtC9Summaries17AlertLocalization_isUserNotification);
    if (v24)
      v25 = 0xD000000000000033;
    else
      v25 = 0xD000000000000038;
    if (*(_BYTE *)(v5 + OBJC_IVAR____TtC9Summaries17AlertLocalization_isUserNotification))
      v26 = 0x8000000232204090;
    else
      v26 = 0x80000002322040F0;
    sub_232035344(0, (unint64_t *)&qword_2541B78C0);
    v27 = swift_initStackObject();
    *(_OWORD *)(v27 + 16) = xmmword_232210D40;
    v28 = (uint64_t)v78;
    *(_QWORD *)(v27 + 32) = sub_2321FE56C();
    *(_QWORD *)(v27 + 40) = v29;
    v10 = sub_232089510(v25, v26, v24, a3, v27);
    v30 = v28;
    swift_setDeallocating();
    swift_arrayDestroy();
    goto LABEL_23;
  }
  return v10;
}

uint64_t sub_23204BB20(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  id v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  id v39;

  v39 = a1;
  v7 = sub_2321FDD08();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_232200E7C();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2321FE584();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23204DD38(a2, a3, (uint64_t)v16);
  if (!v4)
  {
    v36[2] = v9;
    v37 = v14;
    v36[1] = v12;
    v38 = v13;
    v17 = v39;
    v18 = objc_msgSend(v39, sel_identifier);
    v19 = sub_232200EC4();
    v21 = v20;

    if (sub_232200EC4() != v19 || v22 != v21)
    {
      v24 = sub_232201ADC();
      swift_bridgeObjectRelease();
      if ((v24 & 1) != 0)
        goto LABEL_10;
      if (sub_232200EC4() != v19 || v25 != v21)
      {
        v28 = sub_232201ADC();
        swift_bridgeObjectRelease();
        if ((v28 & 1) != 0)
          goto LABEL_10;
        if (sub_232200EC4() != v19 || v29 != v21)
        {
          v30 = sub_232201ADC();
          swift_bridgeObjectRelease();
          if ((v30 & 1) != 0)
            goto LABEL_10;
          if (sub_232200EC4() != v19 || v31 != v21)
          {
            v32 = sub_232201ADC();
            swift_bridgeObjectRelease();
            if ((v32 & 1) == 0)
            {
              if (sub_232200EC4() == v19 && v33 == v21)
              {
                swift_bridgeObjectRelease_n();
              }
              else
              {
                v34 = sub_232201ADC();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((v34 & 1) == 0)
                {
                  v3 = 0;
                  goto LABEL_11;
                }
              }
              sub_232200E70();
              if (qword_2541B7488 != -1)
                swift_once();
              v35 = (id)qword_2541BF760;
              sub_2321FDCFC();
              v26 = sub_232200EF4();
LABEL_27:
              v3 = v26;
LABEL_11:
              (*(void (**)(char *, uint64_t))(v37 + 8))(v16, v38);
              return v3;
            }
LABEL_10:
            swift_bridgeObjectRelease();
            v26 = sub_23204F448(v17);
            goto LABEL_27;
          }
        }
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  return v3;
}

uint64_t sub_23204BEEC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  char v15;
  uint64_t inited;
  uint64_t v17;
  uint64_t v18;

  if (!a1)
  {
    v15 = *(_BYTE *)(v1 + OBJC_IVAR____TtC9Summaries17AlertLocalization_isUserNotification);
    sub_232035344(0, (unint64_t *)&qword_2541B78C0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_232210D40;
    *(_QWORD *)(inited + 32) = sub_2321FE56C();
    *(_QWORD *)(inited + 40) = v17;
    v1 = sub_232088E70(0xD00000000000003ELL, 0x8000000232203E20, v15, 0, 0xE000000000000000, inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    return v1;
  }
  v3 = sub_232200EC4();
  v5 = v4;
  v6 = a1;
  v7 = sub_23204EF5C(v6, v3, v5);
  swift_bridgeObjectRelease();
  if (!v7)
  {
LABEL_9:
    sub_23204FAB0();
    swift_allocError();
    *(_QWORD *)v18 = a1;
    *(_BYTE *)(v18 + 8) = 0;
    swift_willThrow();
    return v1;
  }
  objc_opt_self();
  v8 = (void *)swift_dynamicCastObjCClass();
  if (!v8)
  {

    goto LABEL_9;
  }
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC9Summaries17AlertLocalization_isUserNotification) == 1)
  {
    sub_232035344(0, (unint64_t *)&qword_2541B78C0);
    v9 = swift_initStackObject();
    *(_OWORD *)(v9 + 16) = xmmword_232210D40;
    *(_QWORD *)(v9 + 32) = sub_2321FE56C();
    *(_QWORD *)(v9 + 40) = v10;
    v11 = (void *)objc_opt_self();
    v12 = (void *)sub_232200E94();
    sub_23200C748(v9);
    v13 = (void *)sub_232201020();
    swift_bridgeObjectRelease();
    v14 = objc_msgSend(v11, sel_localizedUserNotificationStringForKey_arguments_, v12, v13);

    v1 = sub_232200EC4();
    swift_setDeallocating();
    swift_arrayDestroy();
  }
  else
  {
    v1 = (uint64_t)sub_23204D608(v8);
  }

  return v1;
}

uint64_t sub_23204C1B8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t inited;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[2];
  uint64_t v57;

  v6 = v4;
  v53 = a2;
  v54 = a3;
  v57 = sub_2321FDC6C();
  v9 = *(_QWORD *)(v57 - 8);
  v10 = MEMORY[0x24BDAC7A8](v57);
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v47 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v47 - v16;
  if (a1)
  {
    v52 = a4;
    v18 = a1;
    sub_23204D3D0(v18);
    v20 = v19;
    v22 = v21;

    if (v5)
      return v22;
    v51 = v20;
    v55 = v22;
    v49 = sub_23204D208(10);
    v50 = v23;
    v24 = v18;
    if (objc_msgSend(v24, sel_hasStartDate))
    {
      objc_msgSend(v24, sel_startDate);
      v25 = (id)HKDecodeDateForValue();
      sub_2321FDC30();

      a4 = v52;
      v26 = v57;
      goto LABEL_9;
    }

    a4 = v52;
  }
  else
  {
    v27 = sub_232088E70(0xD00000000000002ALL, 0x8000000232203DB0, *(_BYTE *)(v6 + OBJC_IVAR____TtC9Summaries17AlertLocalization_isUserNotification), 0, 0xE000000000000000, MEMORY[0x24BEE4AF8]);
    v55 = v28;
    v22 = v6;
    v29 = sub_23204D208(10);
    if (v5)
    {
      swift_bridgeObjectRelease();
      return v22;
    }
    v49 = v29;
    v50 = v30;
    v51 = v27;
  }
  sub_2321FDC60();
  sub_2321FDBE8();
  v26 = v57;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v57);
LABEL_9:
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v17, v15, v26);
  v31 = sub_23204C6A4((uint64_t)v17);
  v33 = v32;
  v35 = sub_23204CB14((uint64_t)v17);
  v52 = a4;
  if (qword_2541B7488 != -1)
    swift_once();
  v48 = sub_2321FDA14();
  sub_2320057B8(0, (unint64_t *)&qword_2541B5860, (uint64_t (*)(uint64_t))sub_23204FB8C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_232210D30;
  v37 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v36 + 56) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v36 + 64) = v37;
  *(_QWORD *)(v36 + 32) = v35;
  *(_QWORD *)(v36 + 96) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v36 + 104) = sub_2320168D8();
  *(_QWORD *)(v36 + 72) = v31;
  *(_QWORD *)(v36 + 80) = v33;
  v38 = sub_232200EA0();
  v48 = v39;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v56[0] = 0;
  v56[1] = 0xE000000000000000;
  sub_23220189C();
  swift_bridgeObjectRelease();
  strcpy((char *)v56, "SHARED_ALERT_");
  HIWORD(v56[1]) = -4864;
  sub_232200F48();
  sub_232200F48();
  v40 = v56[1];
  v54 = v56[0];
  v41 = *(_BYTE *)(v6 + OBJC_IVAR____TtC9Summaries17AlertLocalization_isUserNotification);
  sub_232035344(0, (unint64_t *)&qword_2541B78C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232211A00;
  *(_QWORD *)(inited + 32) = sub_2321FE56C();
  v43 = v51;
  *(_QWORD *)(inited + 40) = v44;
  *(_QWORD *)(inited + 48) = v43;
  v45 = v54;
  v46 = v49;
  *(_QWORD *)(inited + 56) = v55;
  *(_QWORD *)(inited + 64) = v46;
  *(_QWORD *)(inited + 72) = v50;
  *(_QWORD *)(inited + 80) = v38;
  *(_QWORD *)(inited + 88) = v48;
  v22 = sub_232088E70(v45, v40, v41, 0, 0xE000000000000000, inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v57);
  return v22;
}

uint64_t sub_23204C6A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  void (*v39)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v56 = a1;
  v2 = sub_2321FDB70();
  v54 = *(_QWORD *)(v2 - 8);
  v55 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v53 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2321FDB4C();
  v51 = *(_QWORD *)(v4 - 8);
  v52 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v48 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2321FDB58();
  v49 = *(_QWORD *)(v6 - 8);
  v50 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v47 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2321FDA8C();
  MEMORY[0x24BDAC7A8](v8);
  v46 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2321FDE28();
  MEMORY[0x24BDAC7A8](v10);
  v45 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2321FDDD4();
  v43 = *(_QWORD *)(v12 - 8);
  v44 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_2321FDD08();
  v15 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B2840, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDEE8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v41 - v20;
  sub_2320057B8(0, &qword_2541B2848, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDF30], v18);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v41 - v23;
  v25 = sub_2321FDB88();
  v42 = *(_QWORD *)(v25 - 8);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v41 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v26);
  v31 = (char *)&v41 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)&v41 - v32;
  v34 = sub_2321FDB04();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v24, 1, 1, v34);
  v35 = sub_2321FDAF8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v21, 1, 1, v35);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v1 + OBJC_IVAR____TtC9Summaries17AlertLocalization_locale, v41);
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v14, v1 + OBJC_IVAR____TtC9Summaries17AlertLocalization_calendar, v44);
  sub_2321FDE04();
  sub_2321FDA80();
  sub_2321FDB10();
  v36 = v48;
  sub_2321FDB34();
  v37 = v47;
  sub_2321FDB28();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v36, v52);
  sub_2321FDB1C();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v37, v50);
  v38 = v53;
  sub_2321FDB64();
  sub_2321FDB7C();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v38, v55);
  v39 = *(void (**)(char *, uint64_t))(v42 + 8);
  v39(v28, v25);
  sub_232000590(&qword_2541B2850, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE2A0], MEMORY[0x24BDCE290]);
  sub_2321FDC54();
  v39(v31, v25);
  v39(v33, v25);
  return v57;
}

uint64_t sub_23204CB14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t result;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unsigned __int8 *v39;
  char v40;
  char v41;
  unint64_t v42;
  unsigned __int8 *v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  unsigned __int8 *v47;
  unsigned int v48;
  uint64_t v49;
  unint64_t v50;
  void (*v51)(char *, uint64_t);
  unsigned __int8 *v52;
  unsigned int v53;
  uint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;

  v2 = v1;
  v72 = a1;
  v3 = sub_2321FDB4C();
  v70 = *(_QWORD *)(v3 - 8);
  v71 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v67 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2321FDB58();
  v68 = *(_QWORD *)(v5 - 8);
  v69 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v66 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2321FDA8C();
  MEMORY[0x24BDAC7A8](v7);
  v65 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2321FDE28();
  MEMORY[0x24BDAC7A8](v9);
  v64 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2321FDDD4();
  v62 = *(_QWORD *)(v11 - 8);
  v63 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_2321FDD08();
  v14 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B2840, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDEE8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v59 - v19;
  sub_2320057B8(0, &qword_2541B2848, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDF30], v17);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v59 - v22;
  v24 = sub_2321FDB88();
  v60 = *(_QWORD *)(v24 - 8);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v59 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v59 - v28;
  v30 = sub_2321FDB04();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v23, 1, 1, v30);
  v31 = sub_2321FDAF8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v20, 1, 1, v31);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v2 + OBJC_IVAR____TtC9Summaries17AlertLocalization_locale, v61);
  (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v13, v2 + OBJC_IVAR____TtC9Summaries17AlertLocalization_calendar, v63);
  v32 = (uint64_t)v64;
  sub_2321FDE04();
  sub_2321FDA80();
  sub_2321FDB10();
  v33 = v67;
  sub_2321FDB40();
  v34 = v66;
  sub_2321FDB28();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v33, v71);
  sub_2321FDB1C();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v34, v69);
  sub_232000590(&qword_2541B2850, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE2A0], MEMORY[0x24BDCE290]);
  sub_2321FDC54();
  result = v73;
  v36 = HIBYTE(v74) & 0xF;
  v37 = v73 & 0xFFFFFFFFFFFFLL;
  if ((v74 & 0x2000000000000000) != 0)
    v38 = HIBYTE(v74) & 0xF;
  else
    v38 = v73 & 0xFFFFFFFFFFFFLL;
  if (!v38)
  {
    swift_bridgeObjectRelease();
    goto LABEL_54;
  }
  if ((v74 & 0x1000000000000000) != 0)
  {
    v32 = (uint64_t)sub_23204E5B0(v73, v74, 10);
    v56 = v55;
    swift_bridgeObjectRelease();
    if ((v56 & 1) == 0)
      goto LABEL_45;
    goto LABEL_54;
  }
  if ((v74 & 0x2000000000000000) == 0)
  {
    if ((v73 & 0x1000000000000000) != 0)
      v39 = (unsigned __int8 *)((v74 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v39 = (unsigned __int8 *)sub_2322018D8();
    v32 = (uint64_t)sub_23204E694(v39, v37, 10);
    v41 = v40 & 1;
LABEL_44:
    swift_bridgeObjectRelease();
    if ((v41 & 1) == 0)
    {
LABEL_45:
      v51 = *(void (**)(char *, uint64_t))(v60 + 8);
      v51(v27, v24);
      v51(v29, v24);
      return v32;
    }
LABEL_54:
    sub_23204FAB0();
    swift_allocError();
    *(_QWORD *)v57 = 2;
    *(_BYTE *)(v57 + 8) = 5;
    swift_willThrow();
    v58 = *(void (**)(char *, uint64_t))(v60 + 8);
    v58(v27, v24);
    v58(v29, v24);
    return v32;
  }
  v74 &= 0xFFFFFFFFFFFFFFuLL;
  if (v73 == 43)
  {
    if (!v36)
      goto LABEL_58;
    if (v36 == 1 || (BYTE1(v73) - 48) > 9u)
      goto LABEL_31;
    v32 = (BYTE1(v73) - 48);
    if (v36 != 2)
    {
      if ((BYTE2(v73) - 48) > 9u)
        goto LABEL_31;
      v32 = 10 * (BYTE1(v73) - 48) + (BYTE2(v73) - 48);
      v42 = v36 - 3;
      if (v42)
      {
        v43 = (unsigned __int8 *)&v73 + 3;
        while (1)
        {
          v44 = *v43 - 48;
          if (v44 > 9)
            goto LABEL_31;
          v45 = 10 * v32;
          if ((unsigned __int128)(v32 * (__int128)10) >> 64 != (10 * v32) >> 63)
            goto LABEL_31;
          v32 = v45 + v44;
          if (__OFADD__(v45, v44))
            goto LABEL_31;
          v41 = 0;
          ++v43;
          if (!--v42)
            goto LABEL_44;
        }
      }
    }
LABEL_43:
    v41 = 0;
    goto LABEL_44;
  }
  if (v73 != 45)
  {
    if (!v36 || (v73 - 48) > 9u)
      goto LABEL_31;
    v32 = (v73 - 48);
    if (v36 != 1)
    {
      if ((BYTE1(v73) - 48) > 9u)
        goto LABEL_31;
      v32 = 10 * (v73 - 48) + (BYTE1(v73) - 48);
      v46 = v36 - 2;
      if (v46)
      {
        v47 = (unsigned __int8 *)&v73 + 2;
        while (1)
        {
          v48 = *v47 - 48;
          if (v48 > 9)
            goto LABEL_31;
          v49 = 10 * v32;
          if ((unsigned __int128)(v32 * (__int128)10) >> 64 != (10 * v32) >> 63)
            goto LABEL_31;
          v32 = v49 + v48;
          if (__OFADD__(v49, v48))
            goto LABEL_31;
          v41 = 0;
          ++v47;
          if (!--v46)
            goto LABEL_44;
        }
      }
    }
    goto LABEL_43;
  }
  if (v36)
  {
    if (v36 != 1 && (BYTE1(v73) - 48) <= 9u)
    {
      if (v36 == 2)
      {
        v41 = 0;
        v32 = -(uint64_t)(BYTE1(v73) - 48);
        goto LABEL_44;
      }
      if ((BYTE2(v73) - 48) <= 9u)
      {
        v32 = -10 * (BYTE1(v73) - 48) - (BYTE2(v73) - 48);
        v50 = v36 - 3;
        if (!v50)
          goto LABEL_43;
        v52 = (unsigned __int8 *)&v73 + 3;
        while (1)
        {
          v53 = *v52 - 48;
          if (v53 > 9)
            break;
          v54 = 10 * v32;
          if ((unsigned __int128)(v32 * (__int128)10) >> 64 != (10 * v32) >> 63)
            break;
          v32 = v54 - v53;
          if (__OFSUB__(v54, v53))
            break;
          v41 = 0;
          ++v52;
          if (!--v50)
            goto LABEL_44;
        }
      }
    }
LABEL_31:
    v32 = 0;
    v41 = 1;
    goto LABEL_44;
  }
  __break(1u);
LABEL_58:
  __break(1u);
  return result;
}

id sub_23204D208(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v13;

  v3 = sub_2321FDD08();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16F0]), sel_init);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v1 + OBJC_IVAR____TtC9Summaries17AlertLocalization_locale, v3);
  v8 = (void *)sub_2321FDCE4();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  objc_msgSend(v7, sel_setLocale_, v8);

  objc_msgSend(v7, sel_setNumberStyle_, 1);
  objc_msgSend(v7, sel_setUsesGroupingSeparator_, 1);
  objc_msgSend(v7, sel_setMaximumFractionDigits_, 0);
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, a1);
  v10 = objc_msgSend(v7, sel_stringFromNumber_, v9);

  if (v10)
  {
    v9 = (id)sub_232200EC4();

  }
  else
  {
    sub_23204FAB0();
    swift_allocError();
    *(_QWORD *)v11 = 2;
    *(_BYTE *)(v11 + 8) = 5;
    swift_willThrow();

  }
  return v9;
}

void sub_23204D3D0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;

  v3 = sub_232200EC4();
  v5 = sub_23204EF5C(a1, v3, v4);
  swift_bridgeObjectRelease();
  if (!v5)
    goto LABEL_7;
  objc_opt_self();
  v6 = swift_dynamicCastObjCClass();
  if (!v6)
  {

LABEL_7:
    sub_23204FAB0();
    swift_allocError();
    *(_QWORD *)v16 = a1;
    *(_BYTE *)(v16 + 8) = 0;
    v17 = a1;
    swift_willThrow();
    return;
  }
  v7 = v6;
  v8 = objc_allocWithZone(MEMORY[0x24BDD16E0]);
  v9 = v5;
  v10 = objc_msgSend(v8, sel_initWithInteger_, 5);
  v11 = sub_23204AE74();
  v12 = objc_msgSend(v11, sel_displayTypeWithIdentifier_, v10);

  if (v12)
  {

    v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A640]), sel_initWithQuantity_, v7);
    v14 = objc_msgSend(v13, sel_stringWithDisplayType_unitController_, v12, *(_QWORD *)(v1 + OBJC_IVAR____TtC9Summaries17AlertLocalization_unitPreferenceController));
    if (v14)
    {
      v15 = v14;
      sub_232200EC4();

    }
    else
    {
      sub_23204FAB0();
      swift_allocError();
      *(_QWORD *)v19 = 1;
      *(_BYTE *)(v19 + 8) = 5;
      swift_willThrow();

    }
  }
  else
  {
    sub_23204FAB0();
    swift_allocError();
    *(_QWORD *)v18 = 5;
    *(_BYTE *)(v18 + 8) = 2;
    swift_willThrow();

  }
}

NSObject *sub_23204D608(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  double v8;
  double v9;
  uint64_t v14;
  char *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  const char *v23;
  unint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t inited;
  uint64_t v28;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v3 = sub_23220039C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend((id)objc_opt_self(), sel_decibelAWeightedSoundPressureLevelUnit);
  objc_msgSend(a1, sel_doubleValueForUnit_, v7);
  v9 = v8;

  if (v9 >= 80.0 && v9 < 85.0)
  {
    v23 = "SHARED_ALERT_ENVIRONMENTAL_AUDIO_LEVELS_DESCRIPTION_80_%@";
LABEL_24:
    v24 = (unint64_t)(v23 - 32) | 0x8000000000000000;
    v25 = 0xD000000000000039;
LABEL_25:
    v26 = *(_BYTE *)(v1 + OBJC_IVAR____TtC9Summaries17AlertLocalization_isUserNotification);
    sub_232035344(0, (unint64_t *)&qword_2541B78C0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_232210D40;
    *(_QWORD *)(inited + 32) = sub_2321FE56C();
    *(_QWORD *)(inited + 40) = v28;
    v16 = sub_232088E70(v25, v24, v26, 0, 0xE000000000000000, inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_bridgeObjectRelease();
    return v16;
  }
  if (v9 >= 85.0 && v9 < 90.0)
  {
    v23 = "SHARED_ALERT_ENVIRONMENTAL_AUDIO_LEVELS_DESCRIPTION_85_%@";
    goto LABEL_24;
  }
  if (v9 >= 90.0 && v9 < 95.0)
  {
    v23 = "SHARED_ALERT_ENVIRONMENTAL_AUDIO_LEVELS_DESCRIPTION_90_%@";
    goto LABEL_24;
  }
  if (v9 >= 95.0 && v9 < 100.0)
  {
    v23 = "SHARED_ALERT_ENVIRONMENTAL_AUDIO_LEVELS_DESCRIPTION_95_%@";
    goto LABEL_24;
  }
  if (v9 >= 100.0)
  {
    v25 = 0xD00000000000003ALL;
    v24 = 0x8000000232203C70;
    goto LABEL_25;
  }
  v14 = v4;
  v15 = v6;
  sub_232200318();
  v16 = sub_232200390();
  v17 = sub_2322012E4();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v33 = v3;
    v19 = v18;
    v20 = swift_slowAlloc();
    v35 = v20;
    *(_DWORD *)v19 = 136315394;
    v32 = v19 + 4;
    v21 = sub_232201BF0();
    v34 = sub_232013174(v21, v22, &v35);
    sub_232201710();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2048;
    v34 = *(_QWORD *)&v9;
    sub_232201710();
    _os_log_impl(&dword_231FFB000, v16, v17, "%s [Audio Exposure] Unsupported audio exposure level %f", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v20, -1, -1);
    MEMORY[0x2348FF468](v19, -1, -1);

    (*(void (**)(char *, uint64_t))(v14 + 8))(v15, v33);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v14 + 8))(v15, v3);
  }
  sub_23204FAB0();
  swift_allocError();
  *(_QWORD *)v30 = a1;
  *(_BYTE *)(v30 + 8) = 3;
  v31 = a1;
  swift_willThrow();
  return v16;
}

uint64_t sub_23204D9F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  const char *v10;
  char v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v3 = sub_23220039C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1 - 1;
  v8 = 0xD00000000000003BLL;
  v9 = 0x8000000232203C30;
  switch(v7)
  {
    case 0:
      v9 = 0x8000000232203BA0;
      v8 = 0xD00000000000003ALL;
      goto LABEL_6;
    case 1:
      v8 = 0xD00000000000003FLL;
      v10 = "SHARED_ALERT_WALKING_STEADINESS_DESCRIPTION_INITIAL_VERY_LOW_%@";
      goto LABEL_5;
    case 2:
      goto LABEL_6;
    case 3:
      v8 = 0xD000000000000040;
      v10 = "SHARED_ALERT_WALKING_STEADINESS_DESCRIPTION_REPEATED_VERY_LOW_%@";
LABEL_5:
      v9 = (unint64_t)(v10 - 32) | 0x8000000000000000;
LABEL_6:
      v11 = *(_BYTE *)(v1 + OBJC_IVAR____TtC9Summaries17AlertLocalization_isUserNotification);
      sub_232035344(0, (unint64_t *)&qword_2541B78C0);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_232210D40;
      *(_QWORD *)(inited + 32) = sub_2321FE56C();
      *(_QWORD *)(inited + 40) = v13;
      v14 = sub_232088E70(v8, v9, v11, 0, 0xE000000000000000, inited);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_bridgeObjectRelease();
      break;
    default:
      sub_232200318();
      v14 = (uint64_t)v6;
      v16 = sub_232200390();
      v17 = sub_2322012E4();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = swift_slowAlloc();
        v24 = swift_slowAlloc();
        v26 = v24;
        *(_DWORD *)v18 = 136315394;
        v19 = sub_232201BF0();
        v25 = sub_232013174(v19, v20, &v26);
        sub_232201710();
        swift_bridgeObjectRelease();
        *(_WORD *)(v18 + 12) = 2080;
        v25 = 0x8000000232203C30;
        type metadata accessor for HKCategoryValueAppleWalkingSteadinessEvent(0);
        v21 = sub_232200F00();
        v25 = sub_232013174(v21, v22, &v26);
        sub_232201710();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_231FFB000, v16, v17, "%s [Walking Steadiness] Unsupported steadiness event %s", (uint8_t *)v18, 0x16u);
        v14 = v24;
        swift_arrayDestroy();
        MEMORY[0x2348FF468](v14, -1, -1);
        MEMORY[0x2348FF468](v18, -1, -1);
      }

      (*(void (**)(char *, unint64_t))(v4 + 8))(v6, 0xD00000000000003BLL);
      sub_23204FAB0();
      swift_allocError();
      *(_QWORD *)v23 = 0x8000000232203C30;
      *(_BYTE *)(v23 + 8) = 4;
      swift_willThrow();
      break;
  }
  return v14;
}

uint64_t sub_23204DD38@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  char *v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = sub_23220039C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - v11;
  sub_23204FAF4(a2, (uint64_t)&v30 - v11);
  v13 = sub_2321FE584();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a3, v12, v13);
  v30 = v7;
  v31 = v6;
  sub_232016D88((uint64_t)v12, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8]);
  v15 = (void *)sub_2321FE1A0();
  if (v15)
  {
    v16 = v15;
    v17 = objc_msgSend(v15, sel_type);

    if (v17 == (id)1)
      return sub_2321FE560();
  }
  v19 = v9;
  sub_232200318();
  v20 = a1;
  v21 = sub_232200390();
  v22 = sub_2322012E4();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    v32 = swift_slowAlloc();
    v34 = v32;
    *(_DWORD *)v23 = 136315395;
    v24 = sub_232201BF0();
    v33 = sub_232013174(v24, v25, &v34);
    sub_232201710();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2081;
    v26 = sub_2321FE1B8();
    v33 = sub_232013174(v26, v27, &v34);
    sub_232201710();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_231FFB000, v21, v22, "%s Unexpected empty profile display name with non-primary profile %{private}s", (uint8_t *)v23, 0x16u);
    v28 = v32;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v28, -1, -1);
    MEMORY[0x2348FF468](v23, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v30 + 8))(v19, v31);
  sub_23204FAB0();
  swift_allocError();
  *(_QWORD *)v29 = 0;
  *(_BYTE *)(v29 + 8) = 5;
  return swift_willThrow();
}

uint64_t sub_23204E080(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;

  v6 = sub_2321FDD08();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_232200E7C();
  MEMORY[0x24BDAC7A8](v7);
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC9Summaries17AlertLocalization_isUserNotification) == 1)
  {
    sub_232035344(0, (unint64_t *)&qword_2541B78C0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_232210D40;
    *(_QWORD *)(inited + 32) = sub_2321FE56C();
    *(_QWORD *)(inited + 40) = v9;
    v10 = (void *)objc_opt_self();
    v11 = (void *)sub_232200E94();
    sub_23200C748(inited);
    v12 = (void *)sub_232201020();
    swift_bridgeObjectRelease();
    v13 = objc_msgSend(v10, sel_localizedUserNotificationStringForKey_arguments_, v11, v12);

    a2 = sub_232200EC4();
    swift_setDeallocating();
    swift_arrayDestroy();
  }
  else
  {
    sub_23204F210(a1);
    if (!v3)
    {
      swift_bridgeObjectRetain();
      sub_232200E70();
      if (qword_2541B7488 != -1)
        swift_once();
      v14 = (id)qword_2541BF760;
      sub_2321FDCFC();
      sub_232200EF4();
      swift_bridgeObjectRelease();
      sub_232002E08();
      a2 = sub_232201728();
      swift_bridgeObjectRelease();
    }
  }
  return a2;
}

uint64_t sub_23204E330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC9Summaries17AlertLocalization_calendar;
  v2 = sub_2321FDDD4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC9Summaries17AlertLocalization_locale;
  v4 = sub_2321FDD08();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_23204E3D8()
{
  return type metadata accessor for AlertLocalization();
}

uint64_t type metadata accessor for AlertLocalization()
{
  uint64_t result;

  result = qword_2541AF610;
  if (!qword_2541AF610)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23204E41C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2321FDDD4();
  if (v1 <= 0x3F)
  {
    result = sub_2321FDD08();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

_QWORD *sub_23204E4C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_232035344(0, &qword_2541B5858);
  v4 = (_QWORD *)swift_allocObject();
  v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_23204E538(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_232200F9C();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x2348FE0F4](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

unsigned __int8 *sub_23204E5B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_232200FB4();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_23204E910();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_2322018D8();
  }
LABEL_7:
  v11 = sub_23204E694(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_23204E694(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_23204E910()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_232200FC0();
  v4 = sub_23204E98C(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_23204E98C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_23204EAD0(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_23204E4C8(v9, 0);
      v12 = sub_23204EBBC((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    v13 = MEMORY[0x2348FE0AC](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x2348FE0ACLL);
LABEL_9:
      sub_2322018D8();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x2348FE0AC]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_23204EAD0(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_23204E538(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_23204E538(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_232200F84();
  }
  __break(1u);
  return result;
}

unint64_t sub_23204EBBC(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_23204E538(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_232200F90();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_2322018D8();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_23204E538(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_232200F6C();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

void *sub_23204EDCC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;

  if (a1 >> 62)
    goto LABEL_20;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; v5 = sub_232201998())
  {
    v6 = 4;
    while (1)
    {
      v7 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2348FEA30](v6 - 4, a1) : *(id *)(a1 + 8 * v6);
      v8 = v7;
      v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1))
        break;
      v10 = objc_msgSend(v7, sel_key);
      if (v10)
      {
        v11 = v10;
        v12 = sub_232200EC4();
        v14 = v13;

        if (v12 == a2 && v14 == a3)
        {
          swift_bridgeObjectRelease();
LABEL_18:
          swift_bridgeObjectRelease();
          return v8;
        }
        v16 = sub_232201ADC();
        swift_bridgeObjectRelease();
        if ((v16 & 1) != 0)
          goto LABEL_18;
      }

      ++v6;
      if (v9 == v5)
        goto LABEL_21;
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_21:
  swift_bridgeObjectRelease();
  return 0;
}

void *sub_23204EF5C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  unint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  char v26[32];
  _OWORD v27[2];
  __int128 v28;
  uint64_t v29;
  unint64_t v30;

  v6 = sub_2321FDA74();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(a1, sel_metadataDictionary);
  if (!v10)
    return 0;
  v11 = v10;
  if (!objc_msgSend(a1, sel_hasMetadataDictionary)
    || (v12 = objc_msgSend(v11, sel_keyValuePairs)) == 0)
  {

    return 0;
  }
  v23 = a2;
  v24 = a3;
  v30 = MEMORY[0x24BEE4AF8];
  v13 = v12;
  sub_232201650();
  v22 = v13;

  sub_232000590(&qword_2541AF150, (uint64_t (*)(uint64_t))MEMORY[0x24BDCD520], MEMORY[0x24BDCD530]);
  sub_232201704();
  while (v29)
  {
    sub_232015B58(&v28, v27);
    sub_232015B68((uint64_t)v27, (uint64_t)v26);
    sub_23204FB50();
    if (swift_dynamicCast())
    {
      v14 = v25;
      if ((objc_msgSend(v25, sel_hasKey) & 1) != 0)
      {
        v15 = sub_232016AFC((uint64_t)v27);
        MEMORY[0x2348FE190](v15);
        if (*(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23220105C();
        sub_232201074();
        sub_232201050();
        goto LABEL_8;
      }

    }
    sub_232016AFC((uint64_t)v27);
LABEL_8:
    sub_232201704();
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v18 = v30;
  v19 = v24;
  swift_bridgeObjectRetain();
  v16 = sub_23204EDCC(v18, v23, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v16)
  {
    v20 = v16;
    sub_2322015E4();
    v16 = v21;

    swift_bridgeObjectRelease();
  }
  else
  {

  }
  return v16;
}

unint64_t sub_23204F210(void *a1)
{
  unint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  id v20;

  v2 = 0xD000000000000037;
  v3 = objc_msgSend(a1, sel_identifier);
  v4 = sub_232200EC4();
  v6 = v5;

  v8 = 0xD000000000000048;
  if (sub_232200EC4() == v4 && v7 == v6)
  {
LABEL_14:
    v2 = v8;
    goto LABEL_15;
  }
  v10 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
LABEL_6:
    v2 = v8;
LABEL_16:
    swift_bridgeObjectRelease();
    return v2;
  }
  if (sub_232200EC4() == v4 && v11 == v6)
    goto LABEL_15;
  v13 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v13 & 1) != 0)
    goto LABEL_16;
  v8 = 0xD000000000000040;
  if (sub_232200EC4() == v4 && v14 == v6)
    goto LABEL_14;
  v16 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v16 & 1) != 0)
    goto LABEL_6;
  v2 = 0xD000000000000041;
  if (sub_232200EC4() == v4 && v17 == v6)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  v18 = sub_232201ADC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v18 & 1) == 0)
  {
    sub_23204FAB0();
    swift_allocError();
    *(_QWORD *)v19 = a1;
    *(_BYTE *)(v19 + 8) = 1;
    v20 = a1;
    swift_willThrow();
  }
  return v2;
}

uint64_t sub_23204F448(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  id v15;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;

  sub_2320057B8(0, (unint64_t *)&qword_2541AF178, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v17 - v4;
  v6 = sub_2321FDD08();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = sub_232200E7C();
  MEMORY[0x24BDAC7A8](v8);
  sub_23204F210(a1);
  if (!v1)
  {
    v18 = v7;
    v19 = v6;
    swift_bridgeObjectRetain();
    sub_232200E70();
    if (qword_2541B7488 != -1)
      swift_once();
    v9 = (id)qword_2541BF760;
    sub_2321FDCFC();
    v17[1] = 0x80000002322039C0;
    v10 = sub_232200EF4();
    v12 = v11;
    swift_bridgeObjectRelease();
    sub_232035344(0, (unint64_t *)&qword_2541B78C0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_232210D30;
    *(_QWORD *)(inited + 32) = sub_2321FE56C();
    *(_QWORD *)(inited + 40) = v14;
    *(_QWORD *)(inited + 48) = v10;
    *(_QWORD *)(inited + 56) = v12;
    sub_232200E70();
    v15 = (id)qword_2541BF760;
    sub_2321FDCFC();
    sub_232200EF4();
    sub_2321FDCF0();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v5, 0, 1, v19);
    sub_23200C86C(inited);
    v6 = sub_232200ED0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_232016D88((uint64_t)v5, (unint64_t *)&qword_2541AF178, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8]);
    swift_setDeallocating();
    swift_arrayDestroy();
  }
  return v6;
}

uint64_t sub_23204F74C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  id v15;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;

  v2 = sub_2321FDD08();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_232200E7C();
  MEMORY[0x24BDAC7A8](v3);
  v4 = objc_msgSend(a1, sel_identifier);
  v5 = sub_232200EC4();
  v7 = v6;

  if (sub_232200EC4() == v5 && v8 == v7)
    goto LABEL_13;
  v10 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
    goto LABEL_14;
  if (sub_232200EC4() == v5 && v11 == v7)
    goto LABEL_13;
  v13 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v13 & 1) != 0)
    goto LABEL_14;
  if (sub_232200EC4() == v5 && v14 == v7)
    goto LABEL_13;
  v17 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v17 & 1) != 0)
    goto LABEL_14;
  if (sub_232200EC4() == v5 && v18 == v7)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  v19 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v19 & 1) != 0)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    sub_232200E70();
    if (qword_2541B7488 == -1)
    {
LABEL_15:
      v15 = (id)qword_2541BF760;
      sub_2321FDCFC();
      return sub_232200EF4();
    }
LABEL_27:
    swift_once();
    goto LABEL_15;
  }
  if (sub_232200EC4() == v5 && v20 == v7)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_24;
  }
  v21 = sub_232201ADC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v21 & 1) != 0)
  {
LABEL_24:
    sub_232200E70();
    if (qword_2541B7488 == -1)
      goto LABEL_15;
    goto LABEL_27;
  }
  return 0;
}

unint64_t sub_23204FAB0()
{
  unint64_t result;

  result = qword_255F9C7D0;
  if (!qword_255F9C7D0)
  {
    result = MEMORY[0x2348FF39C](&unk_232211A98, &type metadata for AlertLocalization.AlertLocalizationError);
    atomic_store(result, (unint64_t *)&qword_255F9C7D0);
  }
  return result;
}

uint64_t sub_23204FAF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23204FB50()
{
  unint64_t result;

  result = qword_2541B0CE8;
  if (!qword_2541B0CE8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2541B0CE8);
  }
  return result;
}

unint64_t sub_23204FB8C()
{
  unint64_t result;

  result = qword_2541B5888;
  if (!qword_2541B5888)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_2541B5888);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for AlertLocalization.AlertLocalizationError(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_23204FC24(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

id sub_23204FC24(id result, unsigned __int8 a2)
{
  if (a2 <= 3u && a2 != 2)
    return result;
  return result;
}

void destroy for AlertLocalization.AlertLocalizationError(uint64_t a1)
{
  sub_23204FC4C(*(id *)a1, *(_BYTE *)(a1 + 8));
}

void sub_23204FC4C(id a1, unsigned __int8 a2)
{
  if (a2 <= 3u && a2 != 2)

}

uint64_t assignWithCopy for AlertLocalization.AlertLocalizationError(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_23204FC24(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_23204FC4C(v5, v6);
  return a1;
}

uint64_t initializeWithTake for AlertLocalization.AlertLocalizationError(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for AlertLocalization.AlertLocalizationError(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_23204FC4C(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for AlertLocalization.AlertLocalizationError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 251);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 5)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AlertLocalization.AlertLocalizationError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 251;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_23204FD90(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 4u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 5);
}

uint64_t sub_23204FDA8(uint64_t result, unsigned int a2)
{
  if (a2 >= 5)
  {
    *(_QWORD *)result = a2 - 5;
    LOBYTE(a2) = 5;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AlertLocalization.AlertLocalizationError()
{
  return &type metadata for AlertLocalization.AlertLocalizationError;
}

uint64_t sub_23204FDD4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  id v20;
  id v21;
  uint64_t inited;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, _QWORD *);
  uint64_t v27;
  char *v28;
  char v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(_QWORD, uint64_t);
  void *v35;
  void (*v36)(uint64_t, _QWORD, uint64_t, uint64_t);
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(_QWORD, uint64_t);
  void *v41;
  void (*v42)(uint64_t, _QWORD, uint64_t, uint64_t);
  void *v43;
  char v44;
  uint64_t (*v45)(uint64_t);
  uint64_t v46;
  uint64_t (*v47)(_QWORD, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  void *v59;
  void *v60;
  void (*v61)(uint64_t, _QWORD, uint64_t, uint64_t);
  void (*v62)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(uint64_t);
  uint64_t v67;
  uint64_t (*v68)(_QWORD, uint64_t);
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char v74;
  uint64_t v75;
  void *v76;
  void (*v77)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD v83[2];
  char *v84;
  void *v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  void (**v90)(uint64_t, void *);
  void *v91;
  id v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v97;
  __int128 v98;
  uint64_t v99;

  v1 = (_QWORD *)sub_2321FDDD4();
  v90 = (void (**)(uint64_t, void *))*(v1 - 1);
  v91 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v89 = (char *)v83 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v88 = (char *)v83 - v5;
  sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], v3);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v86 = (char *)v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v87 = (char *)v83 - v9;
  v10 = (_QWORD *)sub_2321FFD00();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80];
  v12 = *(v10 - 1);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v84 = (char *)v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v83 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v83 - v18;
  v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3C40]), sel_init);
  v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A910]), sel_initWithHealthStore_, v20);
  type metadata accessor for SummaryTrendFeedItemStringBuilder();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v20;
  *(_QWORD *)(inited + 24) = v21;
  v94 = inited;
  v23 = (int *)type metadata accessor for SummariesInternalSettingsView();
  sub_2320057B8(0, qword_255F9C7E0, v11, MEMORY[0x24BDF42C0]);
  v25 = v24;
  v92 = v20;
  v93 = v21;
  sub_232200BD0();
  (*(void (**)(char *, char *, _QWORD *))(v12 + 16))(v17, v19, v10);
  v83[1] = v25;
  sub_232200BDC();
  v26 = *(void (**)(char *, _QWORD *))(v12 + 8);
  v85 = v10;
  v26(v19, v10);
  v27 = v23[10];
  v95 = v0;
  v28 = (char *)(v0 + v27);
  v29 = *v28;
  v30 = *((_QWORD *)v28 + 1);
  LOBYTE(v98) = v29;
  *((_QWORD *)&v98 + 1) = v30;
  sub_232000608(0, &qword_255F9CBD8, MEMORY[0x24BEE1328], MEMORY[0x24BDF42C0]);
  sub_232200BD0();
  if (v96 == 1)
  {
    v31 = objc_msgSend((id)objc_opt_self(), sel_countUnit);
    v86 = (char *)objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v31, 20.0);

    v32 = v95;
    v33 = *(_QWORD *)(v95 + 8);
    LOBYTE(v98) = *(_BYTE *)v95;
    *((_QWORD *)&v98 + 1) = v33;
    v34 = (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0];
    sub_232000608(0, &qword_255F9CBB8, (uint64_t)&type metadata for SupportedTrendTypes, MEMORY[0x24BDF42C0]);
    sub_232200BD0();
    sub_2320507E4((char)v96);
    v85 = v35;
    v98 = *(_OWORD *)(v32 + 16);
    sub_232000608(0, &qword_255F9CBC0, MEMORY[0x24BE475B0], v34);
    sub_232200BD0();
    v36 = v96;
    v37 = (void *)sub_2321FE1A0();

    if (v37)
    {
      v84 = (char *)objc_msgSend(v37, sel_type);

    }
    else
    {
      v84 = 0;
    }
    v44 = v37 == 0;
    v45 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCBA28];
    sub_2320057B8(0, &qword_255F9CC10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBA28], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    sub_2321FD900();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_232210D40;
    v46 = v95;
    v47 = (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0];
    sub_2320057B8(0, &qword_255F9C7D8, v45, MEMORY[0x24BDF42C0]);
    sub_232200BD0();
    v48 = (uint64_t)v87;
    sub_2321FE560();
    v49 = sub_2321FE584();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v48, 0, 1, v49);
    v50 = v46 + v23[12];
    v51 = sub_2321FD8B8();
    v52 = *(_QWORD *)(v51 - 8);
    v53 = (uint64_t)v88;
    (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v88, v50, v51);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v52 + 56))(v53, 0, 1, v51);
    v54 = (char *)(v46 + v23[8]);
    v55 = *v54;
    v56 = *((_QWORD *)v54 + 1);
    LOBYTE(v98) = v55;
    *((_QWORD *)&v98 + 1) = v56;
    sub_232000608(0, &qword_255F9CBC8, MEMORY[0x24BE4BB98], v47);
    sub_232200BD0();
    LODWORD(v51) = v96;
    v98 = *(_OWORD *)(v46 + v23[9]);
    sub_232000608(0, &qword_255F9CBD0, MEMORY[0x24BEE1768], v47);
    sub_232200BD0();
    v57 = (uint64_t *)v96;
    v58 = (uint64_t)v89;
    sub_2321FDDA4();
    v59 = v86;
    v60 = v85;
    sub_2321E8F9C(v86, v85, (uint64_t)v84, v44, v48, v53, v51, v57, 0, v58);
    v62 = v61;
    v64 = v63;

    v90[1](v58, v91);
    sub_232016D88(v53, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
    v65 = v48;
  }
  else
  {
    v38 = v95;
    v39 = *(_QWORD *)(v95 + 8);
    LOBYTE(v98) = *(_BYTE *)v95;
    *((_QWORD *)&v98 + 1) = v39;
    v40 = (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0];
    sub_232000608(0, &qword_255F9CBB8, (uint64_t)&type metadata for SupportedTrendTypes, MEMORY[0x24BDF42C0]);
    sub_232200BD0();
    sub_2320507E4((char)v96);
    v91 = v41;
    v98 = *(_OWORD *)(v38 + 16);
    sub_232000608(0, &qword_255F9CBC0, MEMORY[0x24BE475B0], v40);
    sub_232200BD0();
    v42 = v96;
    v43 = (void *)sub_2321FE1A0();

    v83[0] = v26;
    if (v43)
    {
      v90 = (void (**)(uint64_t, void *))objc_msgSend(v43, sel_type);

    }
    else
    {
      v90 = 0;
    }
    v66 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCBA28];
    sub_2320057B8(0, &qword_255F9CC10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBA28], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    sub_2321FD900();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_232210D40;
    v67 = v95;
    v68 = (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF42C0];
    sub_2320057B8(0, &qword_255F9C7D8, v66, MEMORY[0x24BDF42C0]);
    sub_232200BD0();
    v69 = v86;
    sub_2321FE560();
    v70 = sub_2321FE584();
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v69, 0, 1, v70);
    v71 = (uint64_t)v84;
    sub_232200BD0();
    v72 = v67 + v23[12];
    v73 = (char *)(v67 + v23[8]);
    v74 = *v73;
    v75 = *((_QWORD *)v73 + 1);
    LOBYTE(v98) = v74;
    *((_QWORD *)&v98 + 1) = v75;
    sub_232000608(0, &qword_255F9CBC8, MEMORY[0x24BE4BB98], v68);
    sub_232200BD0();
    LODWORD(v66) = v96;
    v98 = *(_OWORD *)(v67 + v23[9]);
    sub_232000608(0, &qword_255F9CBD0, MEMORY[0x24BEE1768], v68);
    sub_232200BD0();
    v76 = v91;
    sub_2321E8610(v91, (uint64_t)v90, v43 == 0, (uint64_t)v69, v71, v72, (int)v66, v96, 0);
    v62 = v77;
    v64 = v78;

    ((void (*)(uint64_t, void *))v83[0])(v71, v85);
    v65 = (uint64_t)v69;
  }
  sub_232016D88(v65, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8]);
  swift_bridgeObjectRelease();
  v79 = (_QWORD *)(v95 + v23[11]);
  v80 = v79[1];
  v81 = v79[2];
  *(_QWORD *)&v98 = *v79;
  *((_QWORD *)&v98 + 1) = v80;
  v99 = v81;
  v96 = v62;
  v97 = v64;
  sub_232000608(0, &qword_255F9CC08, MEMORY[0x24BEE0D00], MEMORY[0x24BDF42C0]);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_232200BDC();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

void sub_2320507E4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23205080C()
{
  sub_232003E9C(0, (unint64_t *)&qword_2541B0C28);
  return MEMORY[0x2348FE4B4]((id)*MEMORY[0x24BDD3340]);
}

id sub_232050B24()
{
  sub_232003E9C(0, &qword_255F9CC18);
  return objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_workoutType);
}

uint64_t sub_232050BAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t);
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(char *, char *, uint64_t);
  char v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char v100;
  char v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  void (*v107)(char *, uint64_t);
  uint64_t v108;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t OpaqueTypeConformance2;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  int v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t *v136;
  char *v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  char v153;
  char v154;
  char v155;
  char v156;
  __int128 v157;
  uint64_t v158;
  unint64_t v159;
  char v160;
  uint64_t v161;
  uint64_t v162;
  char v163;
  id v164;

  v136 = a1;
  v141 = sub_2321FFD00();
  v126 = *(_QWORD *)(v141 - 8);
  MEMORY[0x24BDAC7A8](v141);
  v122 = (char *)&v110 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = sub_2321FD900();
  v120 = *(_QWORD *)(v140 - 8);
  MEMORY[0x24BDAC7A8](v140);
  v117 = (char *)&v110 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = type metadata accessor for SummariesInternalSettingsView();
  v4 = *(_QWORD *)(v150 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v150);
  v6 = (char *)&v110 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232055F54();
  v112 = v7;
  OpaqueTypeConformance2 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v110 = (char *)&v110 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320577F0(0);
  v114 = v9;
  v115 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v111 = (char *)&v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232057898(0);
  v116 = v11;
  v118 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v137 = (char *)&v110 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320579BC(0);
  v119 = v13;
  v121 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v139 = (char *)&v110 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232057B00(0);
  v124 = v15;
  v125 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v138 = (char *)&v110 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232057CA0(0);
  v128 = v17;
  v129 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v123 = (char *)&v110 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232057EB4(0);
  v134 = v19;
  v135 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v127 = (char *)&v110 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320580B4(0);
  v145 = v21;
  v144 = *(_QWORD *)(v21 - 8);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v142 = (char *)&v110 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v143 = (char *)&v110 - v24;
  sub_232200A38();
  v133 = sub_232200AD4();
  v131 = v25;
  v130 = v26;
  v132 = v27;
  v152 = v1;
  sub_232055FE8(0);
  sub_232000590(&qword_255F9CB58, (uint64_t (*)(uint64_t))sub_232055FE8, MEMORY[0x24BDF5428]);
  sub_232200ABC();
  v28 = v1;
  v29 = *(_QWORD *)(v1 + 8);
  LOBYTE(v157) = *(_BYTE *)v1;
  *((_QWORD *)&v157 + 1) = v29;
  sub_232000608(0, &qword_255F9CBB8, (uint64_t)&type metadata for SupportedTrendTypes, MEMORY[0x24BDF42C0]);
  sub_232200BD0();
  sub_23200054C(v1, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for SummariesInternalSettingsView);
  v30 = *(unsigned __int8 *)(v4 + 80);
  v31 = (v30 + 16) & ~v30;
  v147 = v30 | 7;
  v148 = v31 + v5;
  v32 = swift_allocObject();
  v33 = v31;
  v149 = v31;
  sub_232025468((uint64_t)v6, v32 + v31, (uint64_t (*)(_QWORD))type metadata accessor for SummariesInternalSettingsView);
  v34 = sub_232000590(&qword_255F9CB68, (uint64_t (*)(uint64_t))sub_232055F54, MEMORY[0x24BDF1A30]);
  v35 = sub_232055F00();
  v36 = v111;
  v37 = v112;
  v38 = v110;
  sub_232200B7C();
  swift_release();
  (*(void (**)(char *, uint64_t))(OpaqueTypeConformance2 + 8))(v38, v37);
  v146 = v28;
  v157 = *(_OWORD *)(v28 + 16);
  sub_232000608(0, &qword_255F9CBC0, MEMORY[0x24BE475B0], MEMORY[0x24BDF42C0]);
  sub_232200BD0();
  v151 = v6;
  sub_23200054C(v28, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for SummariesInternalSettingsView);
  v39 = swift_allocObject();
  sub_232025468((uint64_t)v6, v39 + v33, (uint64_t (*)(_QWORD))type metadata accessor for SummariesInternalSettingsView);
  *(_QWORD *)&v157 = v37;
  *((_QWORD *)&v157 + 1) = &type metadata for SupportedTrendTypes;
  v158 = v34;
  v159 = v35;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v40 = sub_232057978();
  v41 = v114;
  sub_232200B7C();
  swift_release();

  (*(void (**)(char *, uint64_t))(v115 + 8))(v36, v41);
  v42 = v146;
  sub_2320057B8(0, &qword_255F9C7D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBA28], MEMORY[0x24BDF42C0]);
  v43 = v117;
  sub_232200BD0();
  v44 = (uint64_t)v151;
  sub_23200054C(v42, (uint64_t)v151, (uint64_t (*)(_QWORD))type metadata accessor for SummariesInternalSettingsView);
  v45 = swift_allocObject();
  v46 = v149;
  sub_232025468(v44, v45 + v149, (uint64_t (*)(_QWORD))type metadata accessor for SummariesInternalSettingsView);
  *(_QWORD *)&v157 = v41;
  *((_QWORD *)&v157 + 1) = MEMORY[0x24BE475B0];
  v158 = OpaqueTypeConformance2;
  v159 = v40;
  v115 = swift_getOpaqueTypeConformance2();
  v47 = sub_232000590(&qword_255F9CB88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBA28], MEMORY[0x24BDCBA40]);
  v48 = v43;
  v49 = v116;
  v50 = v140;
  v51 = v137;
  sub_232200B7C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v120 + 8))(v48, v50);
  v52 = v49;
  (*(void (**)(char *, uint64_t))(v118 + 8))(v51, v49);
  v53 = v146;
  v54 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80];
  sub_2320057B8(0, qword_255F9C7E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80], MEMORY[0x24BDF42C0]);
  v55 = v122;
  sub_232200BD0();
  v56 = (uint64_t)v151;
  sub_23200054C(v53, (uint64_t)v151, (uint64_t (*)(_QWORD))type metadata accessor for SummariesInternalSettingsView);
  v57 = swift_allocObject();
  sub_232025468(v56, v57 + v46, (uint64_t (*)(_QWORD))type metadata accessor for SummariesInternalSettingsView);
  *(_QWORD *)&v157 = v52;
  *((_QWORD *)&v157 + 1) = v140;
  v158 = v115;
  v159 = v47;
  v58 = swift_getOpaqueTypeConformance2();
  v59 = sub_232000590(qword_255F9BE50, v54, MEMORY[0x24BE4AC98]);
  v60 = v119;
  v61 = v141;
  v62 = v139;
  sub_232200B7C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v126 + 8))(v55, v61);
  (*(void (**)(char *, uint64_t))(v121 + 8))(v62, v60);
  v63 = v150;
  v64 = v53 + *(int *)(v150 + 32);
  v65 = *(_BYTE *)v64;
  v66 = *(_QWORD *)(v64 + 8);
  LOBYTE(v157) = v65;
  *((_QWORD *)&v157 + 1) = v66;
  sub_232000608(0, &qword_255F9CBC8, MEMORY[0x24BE4BB98], MEMORY[0x24BDF42C0]);
  sub_232200BD0();
  v67 = (uint64_t)v151;
  sub_23200054C(v53, (uint64_t)v151, (uint64_t (*)(_QWORD))type metadata accessor for SummariesInternalSettingsView);
  v68 = swift_allocObject();
  v69 = v149;
  sub_232025468(v67, v68 + v149, (uint64_t (*)(_QWORD))type metadata accessor for SummariesInternalSettingsView);
  *(_QWORD *)&v157 = v60;
  *((_QWORD *)&v157 + 1) = v141;
  v158 = v58;
  v159 = v59;
  v141 = swift_getOpaqueTypeConformance2();
  v70 = sub_232057E70();
  v71 = v123;
  v72 = v124;
  v73 = v138;
  sub_232200B7C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v125 + 8))(v73, v72);
  v74 = *(int *)(v63 + 36);
  v75 = v146;
  v157 = *(_OWORD *)(v146 + v74);
  sub_232000608(0, &qword_255F9CBD0, MEMORY[0x24BEE1768], MEMORY[0x24BDF42C0]);
  sub_232200BD0();
  v76 = (uint64_t)v151;
  sub_23200054C(v75, (uint64_t)v151, (uint64_t (*)(_QWORD))type metadata accessor for SummariesInternalSettingsView);
  v77 = swift_allocObject();
  sub_232025468(v76, v77 + v69, (uint64_t (*)(_QWORD))type metadata accessor for SummariesInternalSettingsView);
  *(_QWORD *)&v157 = v72;
  *((_QWORD *)&v157 + 1) = MEMORY[0x24BE4BB98];
  v158 = v141;
  v159 = v70;
  v78 = swift_getOpaqueTypeConformance2();
  v79 = MEMORY[0x24BEE1788];
  v80 = v127;
  v81 = v128;
  sub_232200B7C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v129 + 8))(v71, v81);
  v82 = v75 + *(int *)(v150 + 40);
  v83 = *(_BYTE *)v82;
  v84 = *(_QWORD *)(v82 + 8);
  LOBYTE(v157) = v83;
  *((_QWORD *)&v157 + 1) = v84;
  sub_232000608(0, &qword_255F9CBD8, MEMORY[0x24BEE1328], MEMORY[0x24BDF42C0]);
  sub_232200BD0();
  sub_23200054C(v75, v76, (uint64_t (*)(_QWORD))type metadata accessor for SummariesInternalSettingsView);
  v85 = swift_allocObject();
  sub_232025468(v76, v85 + v149, (uint64_t (*)(_QWORD))type metadata accessor for SummariesInternalSettingsView);
  *(_QWORD *)&v157 = v81;
  *((_QWORD *)&v157 + 1) = MEMORY[0x24BEE1768];
  v158 = v78;
  v159 = v79;
  swift_getOpaqueTypeConformance2();
  v86 = v142;
  v87 = v134;
  sub_232200B7C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v135 + 8))(v80, v87);
  v88 = v144;
  v89 = v143;
  v90 = v145;
  (*(void (**)(char *, char *, uint64_t))(v144 + 32))(v143, v86, v145);
  v151 = (char *)sub_232200A2C();
  sub_23205445C((uint64_t)&v157);
  v150 = v157;
  LOBYTE(v76) = BYTE8(v157);
  v91 = v158;
  v148 = v159;
  LOBYTE(v78) = v160;
  v147 = v161;
  v149 = v162;
  LOBYTE(v80) = v163;
  LOBYTE(v157) = v130 & 1;
  v92 = *(void (**)(char *, char *, uint64_t))(v88 + 16);
  v92(v86, v89, v90);
  LOBYTE(v164) = 1;
  v156 = v76;
  v155 = v78;
  v154 = (char)v80;
  v153 = 1;
  v93 = v157;
  LODWORD(v146) = v157;
  v94 = v136;
  v95 = v133;
  v96 = v131;
  *v136 = v133;
  v94[1] = v96;
  *((_BYTE *)v94 + 16) = v93;
  v94[3] = v132;
  sub_2320584C0();
  v98 = v97;
  v92((char *)v94 + *(int *)(v97 + 48), v86, v90);
  v99 = (char *)v94 + *(int *)(v98 + 64);
  v100 = (char)v164;
  v101 = v156;
  LOBYTE(v80) = v155;
  v102 = v154;
  *(_QWORD *)v99 = v151;
  *((_QWORD *)v99 + 1) = 0;
  v99[16] = v100;
  *((_QWORD *)v99 + 3) = v150;
  v99[32] = v101;
  v103 = v148;
  *((_QWORD *)v99 + 5) = v91;
  *((_QWORD *)v99 + 6) = v103;
  v99[56] = (char)v80;
  v104 = v149;
  *((_QWORD *)v99 + 8) = v147;
  *((_QWORD *)v99 + 9) = v104;
  v99[80] = v102;
  v105 = (char *)v94 + *(int *)(v98 + 80);
  LOBYTE(v104) = v153;
  *(_QWORD *)v105 = 0;
  v105[8] = v104;
  v106 = v95;
  sub_232058648(v95, v96, v146);
  swift_bridgeObjectRetain();
  sub_232058648(v91, v103, (char)v80);
  v107 = *(void (**)(char *, uint64_t))(v144 + 8);
  swift_bridgeObjectRetain();
  v108 = v145;
  v107(v143, v145);
  sub_232058658(v91, v103, v155);
  swift_bridgeObjectRelease();
  v107(v142, v108);
  sub_232058658(v106, v96, v157);
  return swift_bridgeObjectRelease();
}

uint64_t sub_232051AF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_QWORD, _QWORD, _QWORD);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t);
  int *v48;
  uint64_t (*v49)(uint64_t);
  uint64_t (*v50)(uint64_t);
  uint64_t v51;
  char v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  void (*v57)(_QWORD, _QWORD, _QWORD);
  _QWORD *v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  void (*v64)(_QWORD, _QWORD, _QWORD);
  unint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  int *v78;
  int *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t);
  void (*v90)(char *, uint64_t);
  void (*v91)(char *, uint64_t);
  void (*v92)(char *, uint64_t);
  void (*v93)(char *, uint64_t);
  void (*v94)(char *, uint64_t);
  void (*v95)(char *, uint64_t);
  void (*v96)(char *, uint64_t);
  uint64_t v97;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  void (*v105)(_QWORD, _QWORD, _QWORD);
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  void (*v111)(char *, char *, uint64_t);
  uint64_t v112;
  char *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  char *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  __int128 v146;

  v112 = a2;
  v102 = type metadata accessor for SummariesInternalSettingsView();
  v110 = *(_QWORD *)(v102 - 8);
  v111 = *(void (**)(char *, char *, uint64_t))(v110 + 64);
  MEMORY[0x24BDAC7A8](v102);
  v109 = (uint64_t *)((char *)&v99 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = MEMORY[0x24BDF1FA8];
  v5 = MEMORY[0x24BDF1F80];
  sub_2320577A8(0, &qword_255F9CB50, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], MEMORY[0x24BDF4398]);
  v142 = v6;
  v131 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v141 = (char *)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v124 = (char *)&v99 - v9;
  sub_23205740C();
  v128 = v10;
  v130 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v127 = (char *)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v120 = (char *)&v99 - v13;
  sub_232056FDC();
  v138 = v14;
  v129 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v125 = (char *)&v99 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v133 = (char *)&v99 - v17;
  v107 = (_QWORD *)sub_232200A14();
  v108 = *(v107 - 1);
  MEMORY[0x24BDAC7A8](v107);
  v104 = (char *)&v99 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320577A8(0, &qword_255F9CA60, v4, v5, MEMORY[0x24BDF46B0]);
  v105 = v19;
  v106 = *((_QWORD *)v19 - 1);
  MEMORY[0x24BDAC7A8](v19);
  v103 = (char *)&v99 - v20;
  sub_232056E9C(0);
  v144 = v21;
  v140 = *(_QWORD *)(v21 - 8);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v143 = (char *)&v99 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v139 = (char *)&v99 - v24;
  v25 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870];
  sub_2320057B8(0, &qword_255F9CC20, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80], MEMORY[0x24BDF4870]);
  MEMORY[0x24BDAC7A8](v26);
  v101 = (char *)&v99 - v27;
  sub_232056AA4();
  v135 = v28;
  v126 = *(_QWORD *)(v28 - 8);
  v29 = MEMORY[0x24BDAC7A8](v28);
  v119 = (char *)&v99 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29);
  v137 = (char *)&v99 - v31;
  sub_2320057B8(0, &qword_255F9CC28, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBA28], v25);
  MEMORY[0x24BDAC7A8](v32);
  v100 = (char *)&v99 - v33;
  sub_2320565EC();
  v134 = v34;
  v123 = *(_QWORD *)(v34 - 8);
  v35 = MEMORY[0x24BDAC7A8](v34);
  v116 = (char *)&v99 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v35);
  v136 = (char *)&v99 - v37;
  sub_2320562E0();
  v118 = v38;
  v122 = *(_QWORD *)(v38 - 8);
  v39 = MEMORY[0x24BDAC7A8](v38);
  v115 = (char *)&v99 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v39);
  v132 = (char *)&v99 - v41;
  sub_2320560E4();
  v114 = v42;
  v121 = *(_QWORD *)(v42 - 8);
  v43 = MEMORY[0x24BDAC7A8](v42);
  v113 = (char *)&v99 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v43);
  v117 = (char *)&v99 - v45;
  sub_232200A38();
  v46 = *(_QWORD *)(a1 + 8);
  LOBYTE(v146) = *(_BYTE *)a1;
  *((_QWORD *)&v146 + 1) = v46;
  v47 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0];
  sub_232000608(0, &qword_255F9CBB8, (uint64_t)&type metadata for SupportedTrendTypes, MEMORY[0x24BDF42C0]);
  sub_232200BE8();
  sub_23205617C();
  sub_232055A08();
  sub_232056288();
  sub_232200C24();
  sub_232200A38();
  v146 = *(_OWORD *)(a1 + 16);
  sub_232000608(0, &qword_255F9CBC0, MEMORY[0x24BE475B0], v47);
  sub_232200BE8();
  v145 = a1;
  sub_232056394(0);
  sub_232056490();
  sub_232000590(&qword_255F9C968, (uint64_t (*)(uint64_t))sub_232056394, MEMORY[0x24BDF5428]);
  sub_232200C24();
  v99 = sub_232200A38();
  v48 = (int *)v102;
  v49 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCBA28];
  sub_2320057B8(0, &qword_255F9C7D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBA28], v47);
  sub_232200BE8();
  sub_2321FD900();
  sub_2320566C8(0);
  sub_232000590(&qword_255F9C9A8, v49, MEMORY[0x24BDCBA38]);
  sub_232000590(&qword_255F9C9E0, (uint64_t (*)(uint64_t))sub_2320566C8, MEMORY[0x24BDF5428]);
  sub_232200C24();
  v100 = (char *)sub_232200A38();
  v50 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80];
  sub_2320057B8(0, qword_255F9C7E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80], MEMORY[0x24BDF42C0]);
  sub_232200BE8();
  sub_2321FFD00();
  sub_232056B80(0);
  sub_232000590(&qword_255F9CA20, v50, MEMORY[0x24BE4AC90]);
  sub_232000590(&qword_255F9CA50, (uint64_t (*)(uint64_t))sub_232056B80, MEMORY[0x24BDF5428]);
  sub_232200C24();
  v51 = a1 + v48[10];
  v52 = *(_BYTE *)v51;
  v53 = *(_QWORD *)(v51 + 8);
  LOBYTE(v146) = v52;
  *((_QWORD *)&v146 + 1) = v53;
  sub_232000608(0, &qword_255F9CBD8, MEMORY[0x24BEE1328], MEMORY[0x24BDF42C0]);
  sub_232200BE8();
  v54 = v103;
  sub_232200C3C();
  v55 = v104;
  sub_232200A08();
  sub_232056F74();
  sub_232000590(&qword_255F9CA70, (uint64_t (*)(uint64_t))MEMORY[0x24BDEE6D8], MEMORY[0x24BDEE6B8]);
  v56 = v143;
  v57 = v105;
  v58 = v107;
  sub_232200B28();
  (*(void (**)(char *, _QWORD *))(v108 + 8))(v55, v58);
  (*(void (**)(char *, void (*)(_QWORD, _QWORD, _QWORD)))(v106 + 8))(v54, v57);
  (*(void (**)(char *, char *, uint64_t))(v140 + 32))(v139, v56, v144);
  sub_232200A38();
  v59 = a1 + v48[8];
  v60 = *(_BYTE *)v59;
  v61 = *(_QWORD *)(v59 + 8);
  LOBYTE(v146) = v60;
  *((_QWORD *)&v146 + 1) = v61;
  sub_232000608(0, &qword_255F9CBC8, MEMORY[0x24BE4BB98], MEMORY[0x24BDF42C0]);
  sub_232200BE8();
  sub_232057090(0);
  sub_2320255D8();
  v62 = MEMORY[0x24BDF5428];
  sub_232000590(&qword_255F9CAE0, (uint64_t (*)(uint64_t))sub_232057090, MEMORY[0x24BDF5428]);
  sub_232200C24();
  sub_232200A38();
  v146 = *(_OWORD *)(a1 + v48[9]);
  sub_232000608(0, &qword_255F9CBD0, MEMORY[0x24BEE1768], MEMORY[0x24BDF42C0]);
  sub_232200BE8();
  sub_2320574B4(0);
  sub_232000590(&qword_255F9CB48, (uint64_t (*)(uint64_t))sub_2320574B4, v62);
  v63 = v120;
  sub_232200C24();
  sub_232200A38();
  v64 = (void (*)(_QWORD, _QWORD, _QWORD))v109;
  sub_23200054C(a1, (uint64_t)v109, (uint64_t (*)(_QWORD))type metadata accessor for SummariesInternalSettingsView);
  v65 = (*(unsigned __int8 *)(v110 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80);
  v66 = swift_allocObject();
  sub_232025468((uint64_t)v64, v66 + v65, (uint64_t (*)(_QWORD))type metadata accessor for SummariesInternalSettingsView);
  v67 = v124;
  sub_232200BF4();
  v104 = *(char **)(v121 + 16);
  v68 = v113;
  v69 = v114;
  ((void (*)(char *, char *, uint64_t))v104)(v113, v117, v114);
  v105 = *(void (**)(_QWORD, _QWORD, _QWORD))(v122 + 16);
  v70 = v115;
  v105(v115, v132, v118);
  v106 = *(_QWORD *)(v123 + 16);
  v71 = v116;
  ((void (*)(char *, char *, uint64_t))v106)(v116, v136, v134);
  v107 = *(_QWORD **)(v126 + 16);
  v72 = v119;
  ((void (*)(char *, char *, uint64_t))v107)(v119, v137, v135);
  v108 = *(_QWORD *)(v140 + 16);
  ((void (*)(char *, char *, uint64_t))v108)(v143, v139, v144);
  v109 = *(uint64_t **)(v129 + 16);
  v73 = v125;
  ((void (*)(char *, char *, uint64_t))v109)(v125, v133, v138);
  v110 = *(_QWORD *)(v130 + 16);
  v74 = v127;
  v75 = v63;
  v76 = v128;
  ((void (*)(char *, char *, uint64_t))v110)(v127, v75, v128);
  v111 = *(void (**)(char *, char *, uint64_t))(v131 + 16);
  v111(v141, v67, v142);
  v77 = v112;
  ((void (*)(uint64_t, char *, uint64_t))v104)(v112, v68, v69);
  sub_232056004();
  v79 = v78;
  v80 = v118;
  v105(v77 + v78[12], v70, v118);
  v81 = v71;
  v82 = v134;
  ((void (*)(uint64_t, char *, uint64_t))v106)(v77 + v79[16], v81, v134);
  v83 = v135;
  ((void (*)(uint64_t, char *, uint64_t))v107)(v77 + v79[20], v72, v135);
  v84 = v144;
  ((void (*)(uint64_t, char *, uint64_t))v108)(v77 + v79[24], v143, v144);
  v85 = v73;
  v86 = v138;
  ((void (*)(uint64_t, char *, uint64_t))v109)(v77 + v79[28], v85, v138);
  ((void (*)(uint64_t, char *, uint64_t))v110)(v77 + v79[32], v74, v76);
  v87 = (char *)(v77 + v79[36]);
  v88 = v142;
  v111(v87, v141, v142);
  v89 = *(void (**)(char *, uint64_t))(v131 + 8);
  v89(v124, v88);
  v90 = *(void (**)(char *, uint64_t))(v130 + 8);
  v90(v120, v76);
  v91 = *(void (**)(char *, uint64_t))(v129 + 8);
  v91(v133, v86);
  v92 = *(void (**)(char *, uint64_t))(v140 + 8);
  v92(v139, v84);
  v93 = *(void (**)(char *, uint64_t))(v126 + 8);
  v93(v137, v83);
  v94 = *(void (**)(char *, uint64_t))(v123 + 8);
  v94(v136, v82);
  v95 = *(void (**)(char *, uint64_t))(v122 + 8);
  v95(v132, v80);
  v96 = *(void (**)(char *, uint64_t))(v121 + 8);
  v97 = v114;
  v96(v117, v114);
  v89(v141, v142);
  v90(v127, v128);
  v91(v125, v138);
  v92(v143, v144);
  v93(v119, v135);
  v94(v116, v134);
  v95(v115, v80);
  return ((uint64_t (*)(char *, uint64_t))v96)(v113, v97);
}

uint64_t sub_232052B8C()
{
  sub_232000608(0, &qword_255F9C8B0, (uint64_t)&type metadata for SupportedTrendTypes, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_232056230(&qword_255F9C8E8, MEMORY[0x24BEE12D8]);
  sub_2320588CC();
  return sub_232200C84();
}

uint64_t sub_232052C40@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;

  sub_232052C98(*a1);
  sub_232002E08();
  result = sub_232200AE0();
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v4;
  *(_BYTE *)(a2 + 16) = v5 & 1;
  *(_QWORD *)(a2 + 24) = v6;
  return result;
}

uint64_t sub_232052C98(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_232052CD8 + 4 * byte_232211AE0[a1]))(0x4520657669746341, 0xED0000796772656ELL);
}

uint64_t sub_232052CD8()
{
  return 0x73614D2079646F42;
}

uint64_t sub_232052CF4()
{
  return 0x2073746867696C46;
}

unint64_t sub_232052D18()
{
  return 0xD000000000000010;
}

unint64_t sub_232052DF0()
{
  return 0xD000000000000012;
}

uint64_t sub_232052E08()
{
  return 0x6E41207065656C53;
}

uint64_t sub_232052E2C()
{
  return 0x756F432070657453;
}

uint64_t sub_232052E54()
{
  return 0x46206F6964726143;
}

uint64_t sub_232052E78()
{
  return 0x52206F6964726143;
}

void sub_232052E9C()
{
  JUMPOUT(0x232052EB0);
}

uint64_t sub_232052EBC()
{
  return 0x7374756F6B726F57;
}

void sub_232052ED4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  void *v19;
  id v20;
  char v21;
  void *v22;

  sub_232200A38();
  v4 = sub_232200AD4();
  v6 = v5;
  v8 = v7;
  v10 = v9 & 1;
  v22 = (void *)sub_2321FE1D0();
  v11 = v22;
  sub_232200A38();
  v12 = sub_232200AD4();
  v14 = v13;
  v16 = v15;
  v18 = v17 & 1;
  v21 = v17 & 1;
  v19 = *(void **)(a1 + *(int *)(type metadata accessor for SummariesInternalSettingsView() + 56));
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v8;
  *(_QWORD *)(a2 + 32) = v22;
  *(_QWORD *)(a2 + 40) = v22;
  *(_QWORD *)(a2 + 48) = v12;
  *(_QWORD *)(a2 + 56) = v14;
  *(_BYTE *)(a2 + 64) = v18;
  *(_QWORD *)(a2 + 72) = v16;
  *(_QWORD *)(a2 + 80) = v19;
  *(_QWORD *)(a2 + 88) = v19;
  v20 = v19;
  sub_232058648(v4, v6, v10);
  swift_bridgeObjectRetain();
  sub_23205889C(v22);
  sub_23205888C(v22);
  sub_232058648(v12, v14, v21);
  swift_bridgeObjectRetain();
  sub_23205889C(v19);
  sub_23205888C(v19);
  sub_232058658(v12, v14, v21);
  swift_bridgeObjectRelease();
  sub_2320588BC(v19);
  sub_2320588AC(v19);
  sub_232058658(v4, v6, v10);
  swift_bridgeObjectRelease();
  sub_2320588BC(v22);
  sub_2320588AC(v22);
}

uint64_t sub_2320530AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  int v31;
  void (*v32)(char *, char *, uint64_t);
  void (*v33)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  void (*v57)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  void (*v65)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  char *v73;
  char *v74;
  void (*v75)(char *, char *, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  void (*v98)(uint64_t, _QWORD, uint64_t, uint64_t);
  void (*v99)(char *, char *, uint64_t);
  uint64_t v100;
  uint64_t v101;
  void (*v102)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;

  v94 = a1;
  sub_23205879C();
  MEMORY[0x24BDAC7A8](v1);
  v106 = (char *)&v88 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232056834();
  MEMORY[0x24BDAC7A8](v3);
  v105 = (uint64_t)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232058814();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320567CC(0);
  v109 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2321FD900();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232056748(0);
  v107 = v15;
  v16 = MEMORY[0x24BDAC7A8](v15);
  v93 = (uint64_t)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v92 = (uint64_t)&v88 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v91 = (char *)&v88 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v100 = (uint64_t)&v88 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v108 = (uint64_t)&v88 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v104 = (uint64_t)&v88 - v26;
  sub_232200A38();
  v96 = sub_232200AD4();
  v88 = v27;
  v29 = v28;
  v31 = v30 & 1;
  v95 = v14;
  sub_2321FD8DC();
  v101 = v12;
  v32 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v32(v7, v14, v11);
  v99 = v32;
  v33 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56);
  v33(v7, 0, 1, v11);
  v97 = v7;
  v98 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v33;
  v34 = v105;
  sub_23200054C((uint64_t)v7, v105, (uint64_t (*)(_QWORD))sub_232058814);
  sub_23200054C(v34, (uint64_t)&v10[*(int *)(v109 + 36)], (uint64_t (*)(_QWORD))sub_232056834);
  v35 = v96;
  v36 = v88;
  *(_QWORD *)v10 = v96;
  *((_QWORD *)v10 + 1) = v36;
  v37 = v31;
  LODWORD(v90) = v31;
  v10[16] = v31;
  *((_QWORD *)v10 + 3) = v29;
  v38 = v36;
  sub_232058648(v35, v36, v37);
  swift_bridgeObjectRetain();
  sub_232002CEC(v34, (uint64_t (*)(_QWORD))sub_232056834);
  sub_232002CEC((uint64_t)v7, (uint64_t (*)(_QWORD))sub_232058814);
  v39 = (uint64_t)v106;
  v40 = v95;
  v41 = v11;
  v32(v106, v95, v11);
  v33((char *)v39, 0, 1, v11);
  sub_2320057B8(0, &qword_255F9C9C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBA28], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v102 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56);
  v103 = v42;
  v102(v39, 0, 1, v42);
  v43 = v108;
  sub_23200054C(v39, v108 + *(int *)(v107 + 36), (uint64_t (*)(_QWORD))sub_23205879C);
  sub_23200054C((uint64_t)v10, v43, (uint64_t (*)(_QWORD))sub_2320567CC);
  sub_232002CEC(v39, (uint64_t (*)(_QWORD))sub_23205879C);
  sub_232002CEC((uint64_t)v10, (uint64_t (*)(_QWORD))sub_2320567CC);
  v101 = *(_QWORD *)(v101 + 8);
  v44 = v40;
  ((void (*)(char *, uint64_t))v101)(v40, v11);
  sub_232058658(v96, v38, v90);
  swift_bridgeObjectRelease();
  sub_232025468(v43, v104, (uint64_t (*)(_QWORD))sub_232056748);
  sub_232200A38();
  v45 = sub_232200AD4();
  v88 = v46;
  v48 = v47;
  LODWORD(v11) = v49 & 1;
  v50 = v44;
  sub_2321FD8E8();
  v51 = (uint64_t)v97;
  v52 = v50;
  v53 = v41;
  v89 = v41;
  v54 = v41;
  v55 = v99;
  v99(v97, v52, v54);
  v56 = v53;
  v57 = v98;
  v98(v51, 0, 1, v56);
  v58 = v105;
  sub_23200054C(v51, v105, (uint64_t (*)(_QWORD))sub_232058814);
  sub_23200054C(v58, (uint64_t)&v10[*(int *)(v109 + 36)], (uint64_t (*)(_QWORD))sub_232056834);
  v96 = v45;
  v59 = v88;
  *(_QWORD *)v10 = v45;
  *((_QWORD *)v10 + 1) = v59;
  LODWORD(v90) = v11;
  v10[16] = v11;
  *((_QWORD *)v10 + 3) = v48;
  v60 = v45;
  v61 = v59;
  sub_232058648(v60, v59, v11);
  swift_bridgeObjectRetain();
  sub_232002CEC(v58, (uint64_t (*)(_QWORD))sub_232056834);
  sub_232002CEC(v51, (uint64_t (*)(_QWORD))sub_232058814);
  v62 = (uint64_t)v106;
  v63 = v95;
  v64 = v89;
  v55(v106, v95, v89);
  v65 = v57;
  v57(v62, 0, 1, v64);
  v102(v62, 0, 1, v103);
  v66 = v100;
  sub_23200054C(v62, v100 + *(int *)(v107 + 36), (uint64_t (*)(_QWORD))sub_23205879C);
  sub_23200054C((uint64_t)v10, v66, (uint64_t (*)(_QWORD))sub_2320567CC);
  sub_232002CEC(v62, (uint64_t (*)(_QWORD))sub_23205879C);
  sub_232002CEC((uint64_t)v10, (uint64_t (*)(_QWORD))sub_2320567CC);
  ((void (*)(char *, uint64_t))v101)(v63, v64);
  sub_232058658(v96, v61, v90);
  swift_bridgeObjectRelease();
  sub_232025468(v66, v108, (uint64_t (*)(_QWORD))sub_232056748);
  sub_232200A38();
  v67 = sub_232200AD4();
  v69 = v68;
  v96 = v70;
  LOBYTE(v66) = v71 & 1;
  sub_2321FD8F4();
  v72 = (uint64_t)v97;
  v73 = v63;
  v74 = v63;
  v75 = v99;
  v99(v97, v73, v64);
  v65(v72, 0, 1, v64);
  v76 = v105;
  sub_23200054C(v72, v105, (uint64_t (*)(_QWORD))sub_232058814);
  sub_23200054C(v76, (uint64_t)&v10[*(int *)(v109 + 36)], (uint64_t (*)(_QWORD))sub_232056834);
  v90 = v67;
  *(_QWORD *)v10 = v67;
  *((_QWORD *)v10 + 1) = v69;
  v10[16] = v66;
  *((_QWORD *)v10 + 3) = v96;
  sub_232058648(v67, v69, v66);
  swift_bridgeObjectRetain();
  sub_232002CEC(v76, (uint64_t (*)(_QWORD))sub_232056834);
  sub_232002CEC(v72, (uint64_t (*)(_QWORD))sub_232058814);
  v77 = (uint64_t)v106;
  v75(v106, v74, v64);
  v98(v77, 0, 1, v64);
  v102(v77, 0, 1, v103);
  v78 = (uint64_t)v91;
  sub_23200054C(v77, (uint64_t)&v91[*(int *)(v107 + 36)], (uint64_t (*)(_QWORD))sub_23205879C);
  sub_23200054C((uint64_t)v10, v78, (uint64_t (*)(_QWORD))sub_2320567CC);
  sub_232002CEC(v77, (uint64_t (*)(_QWORD))sub_23205879C);
  sub_232002CEC((uint64_t)v10, (uint64_t (*)(_QWORD))sub_2320567CC);
  ((void (*)(char *, uint64_t))v101)(v74, v64);
  sub_232058658(v90, v69, v66);
  swift_bridgeObjectRelease();
  v79 = v100;
  sub_232025468(v78, v100, (uint64_t (*)(_QWORD))sub_232056748);
  v80 = v104;
  sub_23200054C(v104, v78, (uint64_t (*)(_QWORD))sub_232056748);
  v81 = v108;
  v82 = v92;
  sub_23200054C(v108, v92, (uint64_t (*)(_QWORD))sub_232056748);
  v83 = v93;
  sub_23200054C(v79, v93, (uint64_t (*)(_QWORD))sub_232056748);
  v84 = v94;
  sub_23200054C(v78, v94, (uint64_t (*)(_QWORD))sub_232056748);
  sub_2320566E4();
  v86 = v85;
  sub_23200054C(v82, v84 + *(int *)(v85 + 48), (uint64_t (*)(_QWORD))sub_232056748);
  sub_23200054C(v83, v84 + *(int *)(v86 + 64), (uint64_t (*)(_QWORD))sub_232056748);
  sub_232002CEC(v79, (uint64_t (*)(_QWORD))sub_232056748);
  sub_232002CEC(v81, (uint64_t (*)(_QWORD))sub_232056748);
  sub_232002CEC(v80, (uint64_t (*)(_QWORD))sub_232056748);
  sub_232002CEC(v83, (uint64_t (*)(_QWORD))sub_232056748);
  sub_232002CEC(v82, (uint64_t (*)(_QWORD))sub_232056748);
  return sub_232002CEC(v78, (uint64_t (*)(_QWORD))sub_232056748);
}

uint64_t sub_2320539DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  int v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  void (*v31)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  void (*v45)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  int v62;
  void (*v63)(char *, _QWORD, uint64_t, uint64_t);
  char *v64;
  void (*v65)(char *, uint64_t);
  void (*v66)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t);
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;

  v72 = a1;
  sub_2320586AC();
  MEMORY[0x24BDAC7A8](v1);
  v77 = (char *)&v60 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232056C2C();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232058724();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232056C18(0);
  v10 = v9;
  v68 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2321FFD00();
  v14 = *(void (**)(char *, uint64_t))(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232056BFC(0);
  v78 = v17;
  v18 = MEMORY[0x24BDAC7A8](v17);
  v71 = (uint64_t)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v70 = (char *)&v60 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v76 = (uint64_t)&v60 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v79 = (uint64_t)&v60 - v24;
  sub_232200A38();
  v74 = sub_232200AD4();
  v75 = v25;
  v61 = v26;
  v28 = v27 & 1;
  v29 = *MEMORY[0x24BE4AC68];
  v65 = v14;
  v69 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v14 + 13);
  v73 = v16;
  v69(v16, v29, v13);
  v30 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v14 + 2);
  v30(v8, v16, v13);
  v31 = (void (*)(char *, _QWORD, uint64_t, uint64_t))*((_QWORD *)v14 + 7);
  v31(v8, 0, 1, v13);
  v63 = v31;
  sub_23200054C((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(_QWORD))sub_232058724);
  v32 = (uint64_t)&v12[*(int *)(v10 + 36)];
  v64 = v5;
  sub_23200054C((uint64_t)v5, v32, (uint64_t (*)(_QWORD))sub_232056C2C);
  v33 = v74;
  v34 = v61;
  *(_QWORD *)v12 = v74;
  *((_QWORD *)v12 + 1) = v34;
  v62 = v28;
  v12[16] = v28;
  *((_QWORD *)v12 + 3) = v75;
  sub_232058648(v33, v34, v28);
  swift_bridgeObjectRetain();
  sub_232002CEC((uint64_t)v5, (uint64_t (*)(_QWORD))sub_232056C2C);
  v35 = (uint64_t)v8;
  sub_232002CEC((uint64_t)v8, (uint64_t (*)(_QWORD))sub_232058724);
  v36 = (uint64_t)v77;
  v37 = v73;
  v30(v77, v73, v13);
  v31((char *)v36, 0, 1, v13);
  sub_2320057B8(0, &qword_2541B2A40, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v66 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56);
  v67 = v38;
  v66(v36, 0, 1, v38);
  v39 = v76;
  sub_23200054C(v36, v76 + *(int *)(v78 + 36), (uint64_t (*)(_QWORD))sub_2320586AC);
  sub_23200054C((uint64_t)v12, v39, (uint64_t (*)(_QWORD))sub_232056C18);
  sub_232002CEC(v36, (uint64_t (*)(_QWORD))sub_2320586AC);
  sub_232002CEC((uint64_t)v12, (uint64_t (*)(_QWORD))sub_232056C18);
  v65 = (void (*)(char *, uint64_t))*((_QWORD *)v65 + 1);
  v65(v37, v13);
  sub_232058658(v74, v34, v62);
  swift_bridgeObjectRelease();
  sub_232025468(v39, v79, (uint64_t (*)(_QWORD))sub_232056BFC);
  sub_232200A38();
  v40 = sub_232200AD4();
  v42 = v41;
  v75 = v43;
  LOBYTE(v31) = v44 & 1;
  v69(v37, *MEMORY[0x24BE4AC60], v13);
  v30((char *)v35, v37, v13);
  v45 = v63;
  v63((char *)v35, 0, 1, v13);
  v46 = (uint64_t)v64;
  sub_23200054C(v35, (uint64_t)v64, (uint64_t (*)(_QWORD))sub_232058724);
  sub_23200054C(v46, (uint64_t)&v12[*(int *)(v68 + 36)], (uint64_t (*)(_QWORD))sub_232056C2C);
  v74 = v40;
  *(_QWORD *)v12 = v40;
  *((_QWORD *)v12 + 1) = v42;
  v12[16] = (char)v31;
  *((_QWORD *)v12 + 3) = v75;
  v47 = v40;
  v48 = v42;
  v49 = v42;
  LOBYTE(v42) = (_BYTE)v31;
  sub_232058648(v47, v48, (char)v31);
  swift_bridgeObjectRetain();
  sub_232002CEC(v46, (uint64_t (*)(_QWORD))sub_232056C2C);
  sub_232002CEC(v35, (uint64_t (*)(_QWORD))sub_232058724);
  v50 = v77;
  v51 = v73;
  v30(v77, v73, v13);
  v45(v50, 0, 1, v13);
  v52 = (uint64_t)v50;
  v66((uint64_t)v50, 0, 1, v67);
  v53 = (uint64_t)v70;
  sub_23200054C(v52, (uint64_t)&v70[*(int *)(v78 + 36)], (uint64_t (*)(_QWORD))sub_2320586AC);
  sub_23200054C((uint64_t)v12, v53, (uint64_t (*)(_QWORD))sub_232056C18);
  sub_232002CEC(v52, (uint64_t (*)(_QWORD))sub_2320586AC);
  sub_232002CEC((uint64_t)v12, (uint64_t (*)(_QWORD))sub_232056C18);
  v65(v51, v13);
  sub_232058658(v74, v49, v42);
  swift_bridgeObjectRelease();
  v54 = v76;
  sub_232025468(v53, v76, (uint64_t (*)(_QWORD))sub_232056BFC);
  v55 = v79;
  sub_23200054C(v79, v53, (uint64_t (*)(_QWORD))sub_232056BFC);
  v56 = v71;
  sub_23200054C(v54, v71, (uint64_t (*)(_QWORD))sub_232056BFC);
  v57 = v72;
  sub_23200054C(v53, v72, (uint64_t (*)(_QWORD))sub_232056BFC);
  sub_232056B9C();
  sub_23200054C(v56, v57 + *(int *)(v58 + 48), (uint64_t (*)(_QWORD))sub_232056BFC);
  sub_232002CEC(v54, (uint64_t (*)(_QWORD))sub_232056BFC);
  sub_232002CEC(v55, (uint64_t (*)(_QWORD))sub_232056BFC);
  sub_232002CEC(v56, (uint64_t (*)(_QWORD))sub_232056BFC);
  return sub_232002CEC(v53, (uint64_t (*)(_QWORD))sub_232056BFC);
}

uint64_t sub_232054098@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_232200A38();
  result = sub_232200AD4();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  *(_QWORD *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_23205410C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;

  sub_232200A38();
  v2 = sub_232200AD4();
  v4 = v3;
  v6 = v5;
  v8 = v7 & 1;
  sub_232200A38();
  v9 = sub_232200AD4();
  v11 = v10;
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v4;
  v13 = v12 & 1;
  *(_BYTE *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v6;
  *(_WORD *)(a1 + 32) = 1028;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_BYTE *)(a1 + 56) = v12 & 1;
  *(_QWORD *)(a1 + 64) = v14;
  *(_WORD *)(a1 + 72) = 1285;
  sub_232058648(v2, v4, v8);
  swift_bridgeObjectRetain();
  sub_232058648(v9, v11, v13);
  swift_bridgeObjectRetain();
  sub_232058658(v9, v11, v13);
  swift_bridgeObjectRelease();
  sub_232058658(v2, v4, v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23205425C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  char v25;

  sub_232200A38();
  v2 = sub_232200AD4();
  v23 = v3;
  v24 = v2;
  v5 = v4;
  v7 = v6 & 1;
  sub_232200A38();
  v8 = sub_232200AD4();
  v10 = v9;
  v12 = v11;
  v14 = v13 & 1;
  sub_232200A38();
  v15 = sub_232200AD4();
  v17 = v16;
  v18 = v7;
  v25 = v7;
  v20 = v19 & 1;
  *(_QWORD *)a1 = v24;
  *(_QWORD *)(a1 + 8) = v23;
  *(_BYTE *)(a1 + 16) = v18;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = 1;
  *(_BYTE *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 1;
  *(_WORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = v8;
  *(_QWORD *)(a1 + 72) = v10;
  *(_BYTE *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = v12;
  *(_QWORD *)(a1 + 96) = 2;
  *(_BYTE *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = 2;
  *(_WORD *)(a1 + 120) = 0;
  *(_QWORD *)(a1 + 128) = v15;
  *(_QWORD *)(a1 + 136) = v16;
  *(_BYTE *)(a1 + 144) = v19 & 1;
  *(_QWORD *)(a1 + 152) = v21;
  *(_QWORD *)(a1 + 160) = 3;
  *(_BYTE *)(a1 + 168) = 0;
  *(_QWORD *)(a1 + 176) = 3;
  *(_WORD *)(a1 + 184) = 0;
  sub_232058648(v24, v23, v18);
  swift_bridgeObjectRetain();
  sub_232058648(v8, v10, v14);
  swift_bridgeObjectRetain();
  sub_232058648(v15, v17, v20);
  swift_bridgeObjectRetain();
  sub_232058658(v15, v17, v20);
  swift_bridgeObjectRelease();
  sub_232058658(v8, v10, v14);
  swift_bridgeObjectRelease();
  sub_232058658(v24, v23, v25);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23205445C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;

  type metadata accessor for SummariesInternalSettingsView();
  sub_232000608(0, &qword_255F9CC08, MEMORY[0x24BEE0D00], MEMORY[0x24BDF42C0]);
  sub_232200BD0();
  sub_232002E08();
  v2 = sub_232200AE0();
  v4 = v3;
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  v6 = v5 & 1;
  *(_QWORD *)(a1 + 16) = v2;
  *(_QWORD *)(a1 + 24) = v3;
  *(_BYTE *)(a1 + 32) = v5 & 1;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 56) = 1;
  sub_232058648(v2, v3, v5 & 1);
  swift_bridgeObjectRetain();
  sub_232058658(v2, v4, v6);
  return swift_bridgeObjectRelease();
}

void sub_232054554(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  void *v32;
  char *v33;
  void *v34;
  id v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  __int128 v44;
  uint64_t v45;

  v2 = sub_2321FDCC0();
  v40 = *(_QWORD *)(v2 - 8);
  v41 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v39 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2321FDC6C();
  MEMORY[0x24BDAC7A8](v4);
  v38 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2321FFD00();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v37 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v36 - v10;
  v12 = sub_2321FD900();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v36 - v17;
  LOBYTE(v42) = 0;
  sub_232200BC4();
  v19 = *((_QWORD *)&v44 + 1);
  *(_BYTE *)a1 = v44;
  *(_QWORD *)(a1 + 8) = v19;
  v42 = sub_2321FE1D0();
  sub_232200BC4();
  *(_OWORD *)(a1 + 16) = v44;
  v20 = (int *)type metadata accessor for SummariesInternalSettingsView();
  sub_2321FD8DC();
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v18, v12);
  sub_232200BC4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v11, *MEMORY[0x24BE4AC68], v6);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v37, v11, v6);
  sub_232200BC4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
  v21 = a1 + v20[8];
  LOBYTE(v42) = 4;
  sub_232200BC4();
  v22 = *((_QWORD *)&v44 + 1);
  *(_BYTE *)v21 = v44;
  *(_QWORD *)(v21 + 8) = v22;
  v23 = v20[9];
  v42 = 1;
  sub_232200BC4();
  *(_OWORD *)(a1 + v23) = v44;
  v24 = a1 + v20[10];
  LOBYTE(v42) = 0;
  sub_232200BC4();
  v25 = *((_QWORD *)&v44 + 1);
  *(_BYTE *)v24 = v44;
  *(_QWORD *)(v24 + 8) = v25;
  v26 = a1 + v20[11];
  v42 = 0;
  v43 = 0xE000000000000000;
  sub_232200BC4();
  v27 = v45;
  *(_OWORD *)v26 = v44;
  *(_QWORD *)(v26 + 16) = v27;
  sub_2321FDC3C();
  sub_2321FD888();
  v28 = v20[13];
  v29 = objc_msgSend((id)objc_opt_self(), sel_countUnit);
  v30 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v29, 15.0);

  *(_QWORD *)(a1 + v28) = v30;
  v31 = v20[14];
  v32 = (void *)objc_opt_self();
  v33 = v39;
  sub_2321FDCB4();
  v34 = (void *)sub_2321FDC90();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v33, v41);
  v35 = objc_msgSend(v32, sel__profileWithUUID_type_, v34, 2);

  *(_QWORD *)(a1 + v31) = v35;
}

uint64_t type metadata accessor for SummariesInternalSettingsView()
{
  uint64_t result;

  result = qword_255F9C840;
  if (!qword_255F9C840)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t getEnumTagSinglePayload for SupportedTrendTypes(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xED)
    goto LABEL_17;
  if (a2 + 19 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 19) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 19;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 19;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 19;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x14;
  v8 = v6 - 20;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SupportedTrendTypes(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 19 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 19) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xED)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEC)
    return ((uint64_t (*)(void))((char *)&loc_232054A74 + 4 * byte_232211AF9[v4]))();
  *a1 = a2 + 19;
  return ((uint64_t (*)(void))((char *)sub_232054AA8 + 4 * byte_232211AF4[v4]))();
}

uint64_t sub_232054AA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232054AB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232054AB8);
  return result;
}

uint64_t sub_232054AC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232054ACCLL);
  *(_BYTE *)result = a2 + 19;
  return result;
}

uint64_t sub_232054AD0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232054AD8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SupportedTrendTypes()
{
  return &type metadata for SupportedTrendTypes;
}

uint64_t *sub_232054AF4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  void *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  id v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  id v43;
  id v44;
  uint64_t v45;
  void (*v47)(char *, char *, uint64_t);
  char *v48;
  char *v49;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v45 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v45 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = (void *)a2[2];
    a1[1] = a2[1];
    a1[2] = (uint64_t)v7;
    a1[3] = a2[3];
    v8 = a3[6];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_2321FD900();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_retain();
    v13 = v7;
    swift_retain();
    v12(v9, v10, v11);
    v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0];
    sub_2320057B8(0, &qword_255F9C7D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBA28], MEMORY[0x24BDF42C0]);
    *(_QWORD *)&v9[*(int *)(v15 + 28)] = *(_QWORD *)&v10[*(int *)(v15 + 28)];
    v16 = a3[7];
    v17 = (char *)v4 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_2321FFD00();
    v20 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80];
    v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
    swift_retain();
    v21(v17, v18, v19);
    sub_2320057B8(0, qword_255F9C7E0, v20, v14);
    *(_QWORD *)&v17[*(int *)(v22 + 28)] = *(_QWORD *)&v18[*(int *)(v22 + 28)];
    v23 = a3[8];
    v24 = a3[9];
    v25 = (char *)v4 + v23;
    v26 = (char *)a2 + v23;
    *v25 = *v26;
    *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
    v27 = (uint64_t *)((char *)v4 + v24);
    v28 = (uint64_t *)((char *)a2 + v24);
    v29 = v28[1];
    *v27 = *v28;
    v27[1] = v29;
    v30 = a3[10];
    v31 = a3[11];
    v32 = (char *)v4 + v30;
    v33 = (char *)a2 + v30;
    *v32 = *v33;
    *((_QWORD *)v32 + 1) = *((_QWORD *)v33 + 1);
    v34 = (uint64_t *)((char *)v4 + v31);
    v35 = (uint64_t *)((char *)a2 + v31);
    v36 = v35[1];
    *v34 = *v35;
    v34[1] = v36;
    v34[2] = v35[2];
    v37 = a3[12];
    v48 = (char *)a2 + v37;
    v49 = (char *)v4 + v37;
    v38 = sub_2321FD8B8();
    v47 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v47(v49, v48, v38);
    v39 = a3[13];
    v40 = a3[14];
    v41 = *(void **)((char *)a2 + v39);
    *(uint64_t *)((char *)v4 + v39) = (uint64_t)v41;
    v42 = *(void **)((char *)a2 + v40);
    *(uint64_t *)((char *)v4 + v40) = (uint64_t)v42;
    v43 = v41;
    v44 = v42;
  }
  return v4;
}

void sub_232054D44(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;

  swift_release();

  swift_release();
  v4 = a1 + a2[6];
  v5 = sub_2321FD900();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCBA28];
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0];
  sub_2320057B8(0, &qword_255F9C7D8, v6, MEMORY[0x24BDF42C0]);
  swift_release();
  v8 = a1 + a2[7];
  v9 = sub_2321FFD00();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80];
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  sub_2320057B8(0, qword_255F9C7E0, v10, v7);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  v11 = a1 + a2[12];
  v12 = sub_2321FD8B8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);

}

uint64_t sub_232054EB4(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  id v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  id v42;
  id v43;
  void (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2321FD900();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_retain();
  v12 = v6;
  swift_retain();
  v11(v8, v9, v10);
  v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0];
  sub_2320057B8(0, &qword_255F9C7D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBA28], MEMORY[0x24BDF42C0]);
  *(_QWORD *)(v8 + *(int *)(v14 + 28)) = *(_QWORD *)(v9 + *(int *)(v14 + 28));
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_2321FFD00();
  v19 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80];
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  swift_retain();
  v20(v16, v17, v18);
  sub_2320057B8(0, qword_255F9C7E0, v19, v13);
  *(_QWORD *)(v16 + *(int *)(v21 + 28)) = *(_QWORD *)(v17 + *(int *)(v21 + 28));
  v22 = a3[8];
  v23 = a3[9];
  v24 = a1 + v22;
  v25 = a2 + v22;
  *(_BYTE *)v24 = *(_BYTE *)v25;
  *(_QWORD *)(v24 + 8) = *(_QWORD *)(v25 + 8);
  v26 = (_QWORD *)(a1 + v23);
  v27 = (_QWORD *)(a2 + v23);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  v29 = a3[10];
  v30 = a3[11];
  v31 = a1 + v29;
  v32 = a2 + v29;
  *(_BYTE *)v31 = *(_BYTE *)v32;
  *(_QWORD *)(v31 + 8) = *(_QWORD *)(v32 + 8);
  v33 = (_QWORD *)(a1 + v30);
  v34 = (_QWORD *)(a2 + v30);
  v35 = v34[1];
  *v33 = *v34;
  v33[1] = v35;
  v33[2] = v34[2];
  v36 = a3[12];
  v46 = a2 + v36;
  v47 = a1 + v36;
  v37 = sub_2321FD8B8();
  v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  v45(v47, v46, v37);
  v38 = a3[13];
  v39 = a3[14];
  v40 = *(void **)(a2 + v38);
  *(_QWORD *)(a1 + v38) = v40;
  v41 = *(void **)(a2 + v39);
  *(_QWORD *)(a1 + v39) = v41;
  v42 = v40;
  v43 = v41;
  return a1;
}

uint64_t sub_2320550D8(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  id v41;
  uint64_t v42;
  void *v43;
  void *v44;
  id v45;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  v6 = *(void **)(a1 + 16);
  v7 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  v8 = v7;

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  v9 = a3[6];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_2321FD900();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCBA28];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0];
  sub_2320057B8(0, &qword_255F9C7D8, v13, MEMORY[0x24BDF42C0]);
  *(_QWORD *)(v10 + *(int *)(v15 + 28)) = *(_QWORD *)(v11 + *(int *)(v15 + 28));
  swift_retain();
  swift_release();
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_2321FFD00();
  v20 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  sub_2320057B8(0, qword_255F9C7E0, v20, v14);
  *(_QWORD *)(v17 + *(int *)(v21 + 28)) = *(_QWORD *)(v18 + *(int *)(v21 + 28));
  swift_retain();
  swift_release();
  v22 = a3[8];
  v23 = a1 + v22;
  v24 = a2 + v22;
  *(_BYTE *)v23 = *(_BYTE *)v24;
  *(_QWORD *)(v23 + 8) = *(_QWORD *)(v24 + 8);
  swift_retain();
  swift_release();
  v25 = a3[9];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (_QWORD *)(a2 + v25);
  *v26 = *v27;
  v26[1] = v27[1];
  swift_retain();
  swift_release();
  v28 = a3[10];
  v29 = a1 + v28;
  v30 = a2 + v28;
  *(_BYTE *)v29 = *(_BYTE *)v30;
  *(_QWORD *)(v29 + 8) = *(_QWORD *)(v30 + 8);
  swift_retain();
  swift_release();
  v31 = a3[11];
  v32 = (_QWORD *)(a1 + v31);
  v33 = a2 + v31;
  *v32 = *(_QWORD *)(a2 + v31);
  v32[1] = *(_QWORD *)(a2 + v31 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v32[2] = *(_QWORD *)(v33 + 16);
  swift_retain();
  swift_release();
  v34 = a3[12];
  v35 = a1 + v34;
  v36 = a2 + v34;
  v37 = sub_2321FD8B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 24))(v35, v36, v37);
  v38 = a3[13];
  v39 = *(void **)(a2 + v38);
  v40 = *(void **)(a1 + v38);
  *(_QWORD *)(a1 + v38) = v39;
  v41 = v39;

  v42 = a3[14];
  v43 = *(void **)(a2 + v42);
  v44 = *(void **)(a1 + v42);
  *(_QWORD *)(a1 + v42) = v43;
  v45 = v43;

  return a1;
}

_OWORD *sub_232055360(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2321FD900();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCBA28];
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0];
  sub_2320057B8(0, &qword_255F9C7D8, v11, MEMORY[0x24BDF42C0]);
  *(_QWORD *)&v8[*(int *)(v13 + 28)] = *(_QWORD *)&v9[*(int *)(v13 + 28)];
  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_2321FFD00();
  v18 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80];
  (*(void (**)(char *, char *))(*(_QWORD *)(v17 - 8) + 32))(v15, v16);
  sub_2320057B8(0, qword_255F9C7E0, v18, v12);
  *(_QWORD *)&v15[*(int *)(v19 + 28)] = *(_QWORD *)&v16[*(int *)(v19 + 28)];
  v20 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v20) = *(_OWORD *)((char *)a2 + v20);
  v21 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *((_QWORD *)v22 + 2) = *((_QWORD *)v23 + 2);
  v24 = a3[12];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = sub_2321FD8B8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
  v28 = a3[14];
  *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
  *(_QWORD *)((char *)a1 + v28) = *(_QWORD *)((char *)a2 + v28);
  return a1;
}

uint64_t sub_2320554D8(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void *v42;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  v6 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2321FD900();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCBA28];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0];
  sub_2320057B8(0, &qword_255F9C7D8, v11, MEMORY[0x24BDF42C0]);
  *(_QWORD *)(v8 + *(int *)(v13 + 28)) = *(_QWORD *)(v9 + *(int *)(v13 + 28));
  swift_release();
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = sub_2321FFD00();
  v18 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80];
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16);
  sub_2320057B8(0, qword_255F9C7E0, v18, v12);
  *(_QWORD *)(v15 + *(int *)(v19 + 28)) = *(_QWORD *)(v16 + *(int *)(v19 + 28));
  swift_release();
  v20 = a3[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_BYTE *)v21 = *(_BYTE *)v22;
  *(_QWORD *)(v21 + 8) = *(_QWORD *)(v22 + 8);
  swift_release();
  v23 = a3[9];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (uint64_t *)(a2 + v23);
  v27 = *v25;
  v26 = v25[1];
  *v24 = v27;
  v24[1] = v26;
  swift_release();
  v28 = a3[10];
  v29 = a1 + v28;
  v30 = a2 + v28;
  *(_BYTE *)v29 = *(_BYTE *)v30;
  *(_QWORD *)(v29 + 8) = *(_QWORD *)(v30 + 8);
  swift_release();
  v31 = a3[11];
  v32 = (_QWORD *)(a1 + v31);
  v33 = a2 + v31;
  v34 = *(_QWORD *)(a2 + v31 + 8);
  *v32 = *(_QWORD *)(a2 + v31);
  v32[1] = v34;
  swift_bridgeObjectRelease();
  v32[2] = *(_QWORD *)(v33 + 16);
  swift_release();
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  v38 = sub_2321FD8B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = *(void **)(a1 + v39);
  *(_QWORD *)(a1 + v39) = *(_QWORD *)(a2 + v39);

  v41 = a3[14];
  v42 = *(void **)(a1 + v41);
  *(_QWORD *)(a1 + v41) = *(_QWORD *)(a2 + v41);

  return a1;
}

uint64_t sub_2320556FC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_232055708(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  sub_2320057B8(0, &qword_255F9C7D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBA28], MEMORY[0x24BDF42C0]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  sub_2320057B8(0, qword_255F9C7E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80], MEMORY[0x24BDF42C0]);
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[7];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_2321FD8B8();
    v7 = *(_QWORD *)(v8 - 8);
    v9 = a3[12];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[11] + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_232055804()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_232055810(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_2320057B8(0, &qword_255F9C7D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBA28], MEMORY[0x24BDF42C0]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[6];
  }
  else
  {
    sub_2320057B8(0, qword_255F9C7E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80], MEMORY[0x24BDF42C0]);
    v9 = *(_QWORD *)(v12 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v12;
      v11 = a4[7];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(a1 + a4[11] + 8) = (a2 - 1);
        return;
      }
      v10 = sub_2321FD8B8();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = a4[12];
    }
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

void sub_232055908()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_2320057B8(319, &qword_255F9C7D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBA28], MEMORY[0x24BDF42C0]);
  if (v0 <= 0x3F)
  {
    sub_2320057B8(319, qword_255F9C7E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80], MEMORY[0x24BDF42C0]);
    if (v1 <= 0x3F)
    {
      sub_2321FD8B8();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

unint64_t sub_232055A08()
{
  unint64_t result;

  result = qword_255F9C8A0;
  if (!qword_255F9C8A0)
  {
    result = MEMORY[0x2348FF39C](&unk_232211C38, &type metadata for SupportedTrendTypes);
    atomic_store(result, (unint64_t *)&qword_255F9C8A0);
  }
  return result;
}

uint64_t sub_232055A54()
{
  return sub_232200B34();
}

uint64_t sub_232055A70(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_232055AAC + 4 * byte_232211AFE[a1]))(0x6E45657669746341, 0xEC00000079677265);
}

uint64_t sub_232055AAC()
{
  return 0x7373614D79646F42;
}

uint64_t sub_232055AC4()
{
  return 0x4373746867696C46;
}

uint64_t sub_232055AE8()
{
  return 0x706D655479646F42;
}

uint64_t sub_232055B0C()
{
  return 0x6573696372657845;
}

uint64_t sub_232055B30()
{
  return 0x756F48646E617453;
}

uint64_t sub_232055B4C()
{
  return 0x756C47646F6F6C42;
}

uint64_t sub_232055B6C()
{
  return 0x446E75526B6C6157;
}

uint64_t sub_232055B90()
{
  return 0x446E696C75736E49;
}

uint64_t sub_232055BB4()
{
  return 0x536C7566646E694DLL;
}

unint64_t sub_232055BD8()
{
  return 0xD000000000000010;
}

uint64_t sub_232055CCC()
{
  return 0x7374756F6B726F57;
}

uint64_t sub_232055CE4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_232055A70(*a1);
  v5 = v4;
  if (v3 == sub_232055A70(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_232201ADC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_232055D6C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_232201B78();
  sub_232055A70(v1);
  sub_232200F3C();
  swift_bridgeObjectRelease();
  return sub_232201B9C();
}

uint64_t sub_232055DCC()
{
  unsigned __int8 *v0;

  sub_232055A70(*v0);
  sub_232200F3C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_232055E0C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_232201B78();
  sub_232055A70(v1);
  sub_232200F3C();
  swift_bridgeObjectRelease();
  return sub_232201B9C();
}

uint64_t sub_232055E68@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_232058910();
  *a1 = result;
  return result;
}

uint64_t sub_232055E94@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_232055A70(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_232055EBC(_QWORD *a1@<X8>)
{
  *a1 = &unk_2500FDCB8;
}

void sub_232055ECC(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t sub_232055ED8()
{
  return sub_232056230(&qword_255F9C8A8, MEMORY[0x24BEE12E0]);
}

unint64_t sub_232055F00()
{
  unint64_t result;

  result = qword_255F9C8B8;
  if (!qword_255F9C8B8)
  {
    result = MEMORY[0x2348FF39C](&unk_232211C78, &type metadata for SupportedTrendTypes);
    atomic_store(result, (unint64_t *)&qword_255F9C8B8);
  }
  return result;
}

uint64_t sub_232055F44()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_232055F54()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9C8C0)
  {
    sub_232055FE8(255);
    sub_232000590(&qword_255F9CB58, (uint64_t (*)(uint64_t))sub_232055FE8, MEMORY[0x24BDF5428]);
    v0 = sub_232200AC8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9C8C0);
  }
}

void sub_232055FE8(uint64_t a1)
{
  sub_2320057B8(a1, &qword_255F9C8C8, (uint64_t (*)(uint64_t))sub_232056004, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_232056004()
{
  unint64_t TupleTypeMetadata;
  uint64_t v1;

  if (!qword_255F9C8D0)
  {
    sub_2320560E4();
    sub_2320562E0();
    sub_2320565EC();
    sub_232056AA4();
    sub_232056E9C(255);
    sub_232056FDC();
    sub_23205740C();
    sub_2320577A8(255, &qword_255F9CB50, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], MEMORY[0x24BDF4398]);
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_255F9C8D0);
  }
}

void sub_2320560E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9C8D8)
  {
    sub_23205617C();
    sub_232055A08();
    sub_232056288();
    v0 = sub_232200C30();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9C8D8);
  }
}

void sub_23205617C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9C8E0)
  {
    sub_232000608(255, &qword_255F9C8B0, (uint64_t)&type metadata for SupportedTrendTypes, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    sub_232056230(&qword_255F9C8E8, MEMORY[0x24BEE12D8]);
    sub_232055A08();
    v0 = sub_232200C90();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9C8E0);
  }
}

uint64_t sub_232056230(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_232000608(255, &qword_255F9C8B0, (uint64_t)&type metadata for SupportedTrendTypes, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2348FF39C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_232056288()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_255F9C8F0;
  if (!qword_255F9C8F0)
  {
    sub_23205617C();
    v2 = MEMORY[0x24BDF1F80];
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDF4A08], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255F9C8F0);
  }
  return result;
}

void sub_2320562E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9C8F8)
  {
    sub_232056394(255);
    sub_232056490();
    sub_232000590(&qword_255F9C968, (uint64_t (*)(uint64_t))sub_232056394, MEMORY[0x24BDF5428]);
    v0 = sub_232200C30();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9C8F8);
  }
}

void sub_232056394(uint64_t a1)
{
  sub_2320057B8(a1, &qword_255F9C900, (uint64_t (*)(uint64_t))sub_2320563B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_2320563B0(uint64_t a1)
{
  sub_2320570D0(a1, &qword_255F9C908, &qword_255F9C910, sub_2320563D4, (void (*)(uint64_t))sub_2320564D4);
}

void sub_2320563D4(uint64_t a1)
{
  sub_2320567E0(a1, &qword_255F9C918, (void (*)(uint64_t))sub_2320563E8);
}

void sub_2320563E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9C920)
  {
    sub_2320571F0(255, &qword_255F9C928, (void (*)(void))sub_232056490);
    sub_232057248(&qword_255F9C938, &qword_255F9C928, (void (*)(void))sub_232056490);
    v0 = sub_232200A98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9C920);
  }
}

unint64_t sub_232056490()
{
  unint64_t result;

  result = qword_255F9C930;
  if (!qword_255F9C930)
  {
    result = MEMORY[0x2348FF39C](MEMORY[0x24BE475B8], MEMORY[0x24BE475B0]);
    atomic_store(result, (unint64_t *)&qword_255F9C930);
  }
  return result;
}

void sub_2320564D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9C940)
  {
    sub_23205654C();
    sub_232000590(&qword_255F9C960, (uint64_t (*)(uint64_t))sub_23205654C, MEMORY[0x24BDEDAB0]);
    v0 = sub_232200A98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9C940);
  }
}

void sub_23205654C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  if (!qword_255F9C948)
  {
    v0 = MEMORY[0x24BE475B0];
    sub_232000608(255, &qword_255F9C950, MEMORY[0x24BE475B0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    sub_2320573A0(&qword_255F9C958, &qword_255F9C950, v0, (uint64_t (*)(void))sub_232056490);
    v1 = sub_232200948();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_255F9C948);
  }
}

void sub_2320565EC()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_255F9C970)
  {
    sub_2321FD900();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCBA28];
    sub_2320566C8(255);
    sub_232000590(&qword_255F9C9A8, v0, MEMORY[0x24BDCBA38]);
    sub_232000590(&qword_255F9C9E0, (uint64_t (*)(uint64_t))sub_2320566C8, MEMORY[0x24BDF5428]);
    v1 = sub_232200C30();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_255F9C970);
  }
}

void sub_2320566C8(uint64_t a1)
{
  sub_2320057B8(a1, &qword_255F9C978, (uint64_t (*)(uint64_t))sub_2320566E4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_2320566E4()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_255F9C980)
  {
    sub_232056748(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_255F9C980);
  }
}

void sub_232056748(uint64_t a1)
{
  sub_232056764(a1, &qword_255F9C988, sub_2320567CC, (void (*)(uint64_t))sub_232056924);
}

void sub_232056764(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4(255);
    v6 = sub_232200924();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_2320567CC(uint64_t a1)
{
  sub_2320567E0(a1, &qword_255F9C990, (void (*)(uint64_t))sub_232056834);
}

void sub_2320567E0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_232200924();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_232056834()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9C998)
  {
    sub_2320568AC();
    sub_232000590(&qword_255F9C9B0, (uint64_t (*)(uint64_t))sub_2320568AC, MEMORY[0x24BDEDAB0]);
    v0 = sub_232200A98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9C998);
  }
}

void sub_2320568AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9C9A0)
  {
    sub_2321FD900();
    sub_232000590(&qword_255F9C9A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBA28], MEMORY[0x24BDCBA38]);
    v0 = sub_232200948();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9C9A0);
  }
}

void sub_232056924()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9C9B8)
  {
    sub_23205699C();
    sub_232000590(&qword_255F9C9D8, (uint64_t (*)(uint64_t))sub_23205699C, MEMORY[0x24BDEDAB0]);
    v0 = sub_232200A98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9C9B8);
  }
}

void sub_23205699C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9C9C0)
  {
    sub_2320057B8(255, &qword_255F9C9C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBA28], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    sub_232056A14();
    v0 = sub_232200948();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9C9C0);
  }
}

unint64_t sub_232056A14()
{
  unint64_t result;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  result = qword_255F9C9D0;
  if (!qword_255F9C9D0)
  {
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCBA28];
    sub_2320057B8(255, &qword_255F9C9C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBA28], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v3 = v2;
    v4 = sub_232000590(&qword_255F9C9A8, v1, MEMORY[0x24BDCBA38]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BEE4AB0], v3, &v4);
    atomic_store(result, (unint64_t *)&qword_255F9C9D0);
  }
  return result;
}

void sub_232056AA4()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_255F9C9E8)
  {
    sub_2321FFD00();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80];
    sub_232056B80(255);
    sub_232000590(&qword_255F9CA20, v0, MEMORY[0x24BE4AC90]);
    sub_232000590(&qword_255F9CA50, (uint64_t (*)(uint64_t))sub_232056B80, MEMORY[0x24BDF5428]);
    v1 = sub_232200C30();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_255F9C9E8);
  }
}

void sub_232056B80(uint64_t a1)
{
  sub_2320057B8(a1, &qword_255F9C9F0, (uint64_t (*)(uint64_t))sub_232056B9C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_232056B9C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255F9C9F8)
  {
    sub_232056BFC(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255F9C9F8);
  }
}

void sub_232056BFC(uint64_t a1)
{
  sub_232056764(a1, &qword_255F9CA00, sub_232056C18, (void (*)(uint64_t))sub_232056D1C);
}

void sub_232056C18(uint64_t a1)
{
  sub_2320567E0(a1, &qword_255F9CA08, (void (*)(uint64_t))sub_232056C2C);
}

void sub_232056C2C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9CA10)
  {
    sub_232056CA4();
    sub_232000590(&qword_255F9CA28, (uint64_t (*)(uint64_t))sub_232056CA4, MEMORY[0x24BDEDAB0]);
    v0 = sub_232200A98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9CA10);
  }
}

void sub_232056CA4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9CA18)
  {
    sub_2321FFD00();
    sub_232000590(&qword_255F9CA20, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80], MEMORY[0x24BE4AC90]);
    v0 = sub_232200948();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9CA18);
  }
}

void sub_232056D1C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9CA30)
  {
    sub_232056D94();
    sub_232000590(&qword_255F9CA48, (uint64_t (*)(uint64_t))sub_232056D94, MEMORY[0x24BDEDAB0]);
    v0 = sub_232200A98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9CA30);
  }
}

void sub_232056D94()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9CA38)
  {
    sub_2320057B8(255, &qword_2541B2A40, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    sub_232056E0C();
    v0 = sub_232200948();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9CA38);
  }
}

unint64_t sub_232056E0C()
{
  unint64_t result;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  result = qword_255F9CA40;
  if (!qword_255F9CA40)
  {
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80];
    sub_2320057B8(255, &qword_2541B2A40, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v3 = v2;
    v4 = sub_232000590(&qword_255F9CA20, v1, MEMORY[0x24BE4AC90]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BEE4AB0], v3, &v4);
    atomic_store(result, (unint64_t *)&qword_255F9CA40);
  }
  return result;
}

void sub_232056E9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!qword_255F9CA58)
  {
    sub_2320577A8(255, &qword_255F9CA60, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], MEMORY[0x24BDF46B0]);
    v3 = v2;
    v4 = sub_232200A14();
    v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEE6D8];
    v8[0] = v3;
    v8[1] = v4;
    v8[2] = sub_232056F74();
    v8[3] = sub_232000590(&qword_255F9CA70, v5, MEMORY[0x24BDEE6B8]);
    v6 = MEMORY[0x2348FF33C](a1, v8, MEMORY[0x24BDF2460], 0);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_255F9CA58);
  }
}

unint64_t sub_232056F74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F9CA68;
  if (!qword_255F9CA68)
  {
    sub_2320577A8(255, &qword_255F9CA60, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], MEMORY[0x24BDF46B0]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDF46D0], v1);
    atomic_store(result, (unint64_t *)&qword_255F9CA68);
  }
  return result;
}

void sub_232056FDC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9CA78)
  {
    sub_232057090(255);
    sub_2320255D8();
    sub_232000590(&qword_255F9CAE0, (uint64_t (*)(uint64_t))sub_232057090, MEMORY[0x24BDF5428]);
    v0 = sub_232200C30();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9CA78);
  }
}

void sub_232057090(uint64_t a1)
{
  sub_2320057B8(a1, &qword_255F9CA80, (uint64_t (*)(uint64_t))sub_2320570AC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_2320570AC(uint64_t a1)
{
  sub_2320570D0(a1, &qword_255F9CA88, &qword_255F9CA90, sub_232057134, (void (*)(uint64_t))sub_232057288);
}

void sub_2320570D0(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t), void (*a5)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v7;

  if (!*a2)
  {
    sub_232056764(255, a3, a4, a5);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_232057134(uint64_t a1)
{
  sub_2320567E0(a1, &qword_255F9CA98, (void (*)(uint64_t))sub_232057148);
}

void sub_232057148()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9CAA0)
  {
    sub_2320571F0(255, &qword_255F9CAA8, (void (*)(void))sub_2320255D8);
    sub_232057248(&qword_255F9CAB0, &qword_255F9CAA8, (void (*)(void))sub_2320255D8);
    v0 = sub_232200A98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9CAA0);
  }
}

void sub_2320571F0(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3();
    v4 = sub_232200948();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_232057248(unint64_t *a1, unint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_2320571F0(255, a2, a3);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDEDAB0], v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_232057288()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9CAB8)
  {
    sub_232057300();
    sub_232000590(&qword_255F9CAD8, (uint64_t (*)(uint64_t))sub_232057300, MEMORY[0x24BDEDAB0]);
    v0 = sub_232200A98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9CAB8);
  }
}

void sub_232057300()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  if (!qword_255F9CAC0)
  {
    v0 = MEMORY[0x24BE4BB98];
    sub_232000608(255, &qword_255F9CAC8, MEMORY[0x24BE4BB98], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    sub_2320573A0(&qword_255F9CAD0, &qword_255F9CAC8, v0, (uint64_t (*)(void))sub_2320255D8);
    v1 = sub_232200948();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_255F9CAC0);
  }
}

uint64_t sub_2320573A0(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_232000608(255, a2, a3, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    v8 = v7;
    v9 = a4();
    result = MEMORY[0x2348FF39C](MEMORY[0x24BEE4AB0], v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

void sub_23205740C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9CAE8)
  {
    sub_2320574B4(255);
    sub_232000590(&qword_255F9CB48, (uint64_t (*)(uint64_t))sub_2320574B4, MEMORY[0x24BDF5428]);
    v0 = sub_232200C30();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9CAE8);
  }
}

void sub_2320574B4(uint64_t a1)
{
  sub_2320057B8(a1, &qword_255F9CAF0, (uint64_t (*)(uint64_t))sub_2320574D0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_2320574D0()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_255F9CAF8)
  {
    sub_232056764(255, &qword_255F9CB00, sub_23205754C, (void (*)(uint64_t))sub_232057648);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_255F9CAF8);
  }
}

void sub_23205754C(uint64_t a1)
{
  sub_2320567E0(a1, &qword_255F9CB08, (void (*)(uint64_t))sub_232057560);
}

void sub_232057560()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9CB10)
  {
    sub_2320577A8(255, &qword_255F9CB18, MEMORY[0x24BEE1768], MEMORY[0x24BEE1778], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDEDA90]);
    sub_2320575E0();
    v0 = sub_232200A98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9CB10);
  }
}

unint64_t sub_2320575E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F9CB20;
  if (!qword_255F9CB20)
  {
    sub_2320577A8(255, &qword_255F9CB18, MEMORY[0x24BEE1768], MEMORY[0x24BEE1778], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDEDA90]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDEDAB0], v1);
    atomic_store(result, (unint64_t *)&qword_255F9CB20);
  }
  return result;
}

void sub_232057648()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9CB28)
  {
    sub_2320576C0();
    sub_232000590(&qword_255F9CB40, (uint64_t (*)(uint64_t))sub_2320576C0, MEMORY[0x24BDEDAB0]);
    v0 = sub_232200A98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9CB28);
  }
}

void sub_2320576C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9CB30)
  {
    sub_232000608(255, &qword_2541B5580, MEMORY[0x24BEE1768], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    sub_232057738();
    v0 = sub_232200948();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9CB30);
  }
}

unint64_t sub_232057738()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_255F9CB38;
  if (!qword_255F9CB38)
  {
    sub_232000608(255, &qword_2541B5580, MEMORY[0x24BEE1768], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    v2 = MEMORY[0x24BEE1778];
    result = MEMORY[0x2348FF39C](MEMORY[0x24BEE4AB0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255F9CB38);
  }
  return result;
}

void sub_2320577A8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v6 = a5(0, a3, a4);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_2320577F0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[4];

  if (!qword_255F9CB60)
  {
    sub_232055F54();
    v5[0] = v2;
    v5[1] = &type metadata for SupportedTrendTypes;
    v5[2] = sub_232000590(&qword_255F9CB68, (uint64_t (*)(uint64_t))sub_232055F54, MEMORY[0x24BDF1A30]);
    v5[3] = sub_232055F00();
    v3 = MEMORY[0x2348FF33C](a1, v5, MEMORY[0x24BDF3908], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_255F9CB60);
  }
}

void sub_232057898(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t OpaqueTypeConformance2;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD v9[4];

  if (!qword_255F9CB70)
  {
    sub_2320577F0(255);
    v3 = v2;
    sub_232055F54();
    sub_232000590(&qword_255F9CB68, (uint64_t (*)(uint64_t))sub_232055F54, MEMORY[0x24BDF1A30]);
    sub_232055F00();
    v4 = MEMORY[0x24BDF3908];
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v6 = sub_232057978();
    v9[0] = v3;
    v9[1] = MEMORY[0x24BE475B0];
    v9[2] = OpaqueTypeConformance2;
    v9[3] = v6;
    v7 = MEMORY[0x2348FF33C](a1, v9, v4, 0);
    if (!v8)
      atomic_store(v7, (unint64_t *)&qword_255F9CB70);
  }
}

unint64_t sub_232057978()
{
  unint64_t result;

  result = qword_255F9CB78;
  if (!qword_255F9CB78)
  {
    result = MEMORY[0x2348FF39C](MEMORY[0x24BE475C0], MEMORY[0x24BE475B0]);
    atomic_store(result, (unint64_t *)&qword_255F9CB78);
  }
  return result;
}

void sub_2320579BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD v9[4];

  if (!qword_255F9CB80)
  {
    sub_232057898(255);
    v3 = v2;
    v4 = sub_2321FD900();
    v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCBA28];
    sub_2320577F0(255);
    sub_232055F54();
    sub_232000590(&qword_255F9CB68, (uint64_t (*)(uint64_t))sub_232055F54, MEMORY[0x24BDF1A30]);
    sub_232055F00();
    v6 = MEMORY[0x24BDF3908];
    swift_getOpaqueTypeConformance2();
    sub_232057978();
    v9[0] = v3;
    v9[1] = v4;
    v9[2] = swift_getOpaqueTypeConformance2();
    v9[3] = sub_232000590(&qword_255F9CB88, v5, MEMORY[0x24BDCBA40]);
    v7 = MEMORY[0x2348FF33C](a1, v9, v6, 0);
    if (!v8)
      atomic_store(v7, (unint64_t *)&qword_255F9CB80);
  }
}

void sub_232057B00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD v10[4];

  if (!qword_255F9CB90)
  {
    sub_2320579BC(255);
    v3 = v2;
    v4 = sub_2321FFD00();
    v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80];
    sub_232057898(255);
    sub_2321FD900();
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCBA28];
    sub_2320577F0(255);
    sub_232055F54();
    sub_232000590(&qword_255F9CB68, (uint64_t (*)(uint64_t))sub_232055F54, MEMORY[0x24BDF1A30]);
    sub_232055F00();
    v7 = MEMORY[0x24BDF3908];
    swift_getOpaqueTypeConformance2();
    sub_232057978();
    swift_getOpaqueTypeConformance2();
    sub_232000590(&qword_255F9CB88, v6, MEMORY[0x24BDCBA40]);
    v10[0] = v3;
    v10[1] = v4;
    v10[2] = swift_getOpaqueTypeConformance2();
    v10[3] = sub_232000590(qword_255F9BE50, v5, MEMORY[0x24BE4AC98]);
    v8 = MEMORY[0x2348FF33C](a1, v10, v7, 0);
    if (!v9)
      atomic_store(v8, (unint64_t *)&qword_255F9CB90);
  }
}

void sub_232057CA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t OpaqueTypeConformance2;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD v10[4];

  if (!qword_255F9CB98)
  {
    sub_232057B00(255);
    v3 = v2;
    sub_2320579BC(255);
    sub_2321FFD00();
    sub_232057898(255);
    sub_2321FD900();
    v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCBA28];
    sub_2320577F0(255);
    sub_232055F54();
    sub_232000590(&qword_255F9CB68, (uint64_t (*)(uint64_t))sub_232055F54, MEMORY[0x24BDF1A30]);
    sub_232055F00();
    v5 = MEMORY[0x24BDF3908];
    swift_getOpaqueTypeConformance2();
    sub_232057978();
    swift_getOpaqueTypeConformance2();
    sub_232000590(&qword_255F9CB88, v4, MEMORY[0x24BDCBA40]);
    swift_getOpaqueTypeConformance2();
    sub_232000590(qword_255F9BE50, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80], MEMORY[0x24BE4AC98]);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v7 = sub_232057E70();
    v10[0] = v3;
    v10[1] = MEMORY[0x24BE4BB98];
    v10[2] = OpaqueTypeConformance2;
    v10[3] = v7;
    v8 = MEMORY[0x2348FF33C](a1, v10, v5, 0);
    if (!v9)
      atomic_store(v8, (unint64_t *)&qword_255F9CB98);
  }
}

unint64_t sub_232057E70()
{
  unint64_t result;

  result = qword_255F9CBA0;
  if (!qword_255F9CBA0)
  {
    result = MEMORY[0x2348FF39C](MEMORY[0x24BE4BBA8], MEMORY[0x24BE4BB98]);
    atomic_store(result, (unint64_t *)&qword_255F9CBA0);
  }
  return result;
}

void sub_232057EB4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t OpaqueTypeConformance2;
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!qword_255F9CBA8)
  {
    sub_232057CA0(255);
    v3 = v2;
    sub_232057B00(255);
    sub_2320579BC(255);
    sub_2321FFD00();
    sub_232057898(255);
    sub_2321FD900();
    sub_2320577F0(255);
    sub_232055F54();
    sub_232000590(&qword_255F9CB68, (uint64_t (*)(uint64_t))sub_232055F54, MEMORY[0x24BDF1A30]);
    sub_232055F00();
    v4 = MEMORY[0x24BDF3908];
    swift_getOpaqueTypeConformance2();
    sub_232057978();
    swift_getOpaqueTypeConformance2();
    sub_232000590(&qword_255F9CB88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBA28], MEMORY[0x24BDCBA40]);
    swift_getOpaqueTypeConformance2();
    sub_232000590(qword_255F9BE50, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80], MEMORY[0x24BE4AC98]);
    swift_getOpaqueTypeConformance2();
    sub_232057E70();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v8[0] = v3;
    v8[1] = MEMORY[0x24BEE1768];
    v8[2] = OpaqueTypeConformance2;
    v8[3] = MEMORY[0x24BEE1788];
    v6 = MEMORY[0x2348FF33C](a1, v8, v4, 0);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_255F9CBA8);
  }
}

void sub_2320580B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!qword_255F9CBB0)
  {
    sub_232057EB4(255);
    v7 = v2;
    sub_232057CA0(255);
    sub_232057B00(255);
    sub_2320579BC(255);
    sub_2321FFD00();
    sub_232057898(255);
    sub_2321FD900();
    sub_2320577F0(255);
    sub_232055F54();
    sub_232000590(&qword_255F9CB68, (uint64_t (*)(uint64_t))sub_232055F54, MEMORY[0x24BDF1A30]);
    sub_232055F00();
    v3 = MEMORY[0x24BDF3908];
    swift_getOpaqueTypeConformance2();
    sub_232057978();
    swift_getOpaqueTypeConformance2();
    sub_232000590(&qword_255F9CB88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBA28], MEMORY[0x24BDCBA40]);
    swift_getOpaqueTypeConformance2();
    sub_232000590(qword_255F9BE50, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80], MEMORY[0x24BE4AC98]);
    swift_getOpaqueTypeConformance2();
    sub_232057E70();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v8[0] = v7;
    v8[1] = MEMORY[0x24BEE1328];
    v8[2] = OpaqueTypeConformance2;
    v8[3] = MEMORY[0x24BEE1340];
    v5 = MEMORY[0x2348FF33C](a1, v8, v3, 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_255F9CBB0);
  }
}

uint64_t sub_2320582EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_232051AF4(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_232058300()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;

  v1 = (int *)type metadata accessor for SummariesInternalSettingsView();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();

  swift_release();
  v4 = v3 + v1[6];
  v5 = sub_2321FD900();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCBA28];
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0];
  sub_2320057B8(0, &qword_255F9C7D8, v6, MEMORY[0x24BDF42C0]);
  swift_release();
  v8 = v3 + v1[7];
  v9 = sub_2321FFD00();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80];
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  sub_2320057B8(0, qword_255F9C7E0, v10, v7);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  v11 = v3 + v1[12];
  v12 = sub_2321FD8B8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);

  return swift_deallocObject();
}

void sub_2320584C0()
{
  unint64_t TupleTypeMetadata;
  uint64_t v1;

  if (!qword_255F9CBE0)
  {
    sub_2320580B4(255);
    sub_23205854C();
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_255F9CBE0);
  }
}

void sub_23205854C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9CBE8)
  {
    sub_2320585C4(255);
    sub_232000590(&qword_255F9CC00, (uint64_t (*)(uint64_t))sub_2320585C4, MEMORY[0x24BDF5428]);
    v0 = sub_232200C0C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9CBE8);
  }
}

void sub_2320585C4(uint64_t a1)
{
  sub_2320057B8(a1, &qword_255F9CBF0, (uint64_t (*)(uint64_t))sub_2320585E0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_2320585E0()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_255F9CBF8)
  {
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_255F9CBF8);
  }
}

uint64_t sub_232058648(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain();
  else
    return swift_bridgeObjectRetain();
}

uint64_t sub_232058658(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release();
  else
    return swift_bridgeObjectRelease();
}

void sub_232058668(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_232052ED4(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_232058674()
{
  type metadata accessor for SummariesInternalSettingsView();
  return sub_23204FDD4();
}

void sub_2320586AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9CC30)
  {
    sub_2320057B8(255, &qword_2541B2A40, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    sub_232056E0C();
    v0 = sub_23220093C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9CC30);
  }
}

void sub_232058724()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9CC38)
  {
    sub_2321FFD00();
    sub_232000590(&qword_255F9CA20, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80], MEMORY[0x24BE4AC90]);
    v0 = sub_23220093C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9CC38);
  }
}

void sub_23205879C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9CC40)
  {
    sub_2320057B8(255, &qword_255F9C9C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBA28], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    sub_232056A14();
    v0 = sub_23220093C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9CC40);
  }
}

void sub_232058814()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9CC48)
  {
    sub_2321FD900();
    sub_232000590(&qword_255F9C9A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBA28], MEMORY[0x24BDCBA38]);
    v0 = sub_23220093C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9CC48);
  }
}

id sub_23205888C(id result)
{
  if (result != (id)2)
    return sub_23205889C(result);
  return result;
}

id sub_23205889C(id result)
{
  if (result != (id)1)
    return result;
  return result;
}

void sub_2320588AC(id a1)
{
  if (a1 != (id)2)
    sub_2320588BC(a1);
}

void sub_2320588BC(id a1)
{
  if (a1 != (id)1)

}

unint64_t sub_2320588CC()
{
  unint64_t result;

  result = qword_255F9CC50;
  if (!qword_255F9CC50)
  {
    result = MEMORY[0x2348FF39C](&unk_232211B90, &type metadata for SupportedTrendTypes);
    atomic_store(result, (unint64_t *)&qword_255F9CC50);
  }
  return result;
}

uint64_t sub_232058910()
{
  unint64_t v0;

  v0 = sub_232201B00();
  swift_bridgeObjectRelease();
  if (v0 >= 0x14)
    return 20;
  else
    return v0;
}

uint64_t sub_232058960()
{
  return sub_232000590(&qword_255F9CC58, (uint64_t (*)(uint64_t))sub_23205898C, MEMORY[0x24BDF5428]);
}

void sub_23205898C(uint64_t a1)
{
  sub_2320057B8(a1, qword_255F9CC60, (uint64_t (*)(uint64_t))sub_2320584C0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

uint64_t sub_2320589A8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v43 = *v1;
  v3 = sub_2321FE440();
  v4 = *(_QWORD *)(v3 - 8);
  v37 = v3;
  v38 = v4;
  v41 = *(_QWORD *)(v4 + 64);
  v5 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v40 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232059948();
  v8 = *(_QWORD *)(v7 - 8);
  v44 = v7;
  v45 = v8;
  MEMORY[0x24BDAC7A8](v7);
  v42 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2321FE38C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_2321FE3BC();
  v14 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v36 = a1;
  v17((char *)v1 + OBJC_IVAR____TtC9Summaries34SummariesSettingsGeneratorPipeline_context, a1, v3);
  v34 = sub_2321FE3F8();
  sub_2320057B8(0, &qword_2541B7530, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v18 = sub_2321FE194();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_232210D40;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v19 + 104))(v21 + v20, *MEMORY[0x24BE474D0], v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BE47910], v10);
  sub_2321FE3A4();
  v22 = v35;
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v35 + OBJC_IVAR____TtC9Summaries34SummariesSettingsGeneratorPipeline_domain, v16, v39);
  v23 = v40;
  v25 = v36;
  v24 = v37;
  v17(v40, v36, v37);
  v26 = v38;
  v27 = (*(unsigned __int8 *)(v38 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  v28 = (v41 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v26 + 32))(v29 + v27, v23, v24);
  *(_QWORD *)(v29 + v28) = v43;
  sub_2320599C0();
  sub_232000590(&qword_2541B79A8, (uint64_t (*)(uint64_t))sub_2320599C0, MEMORY[0x24BDB9AF8]);
  v30 = v42;
  sub_2322006F0();
  sub_232000590(&qword_2541AF348, (uint64_t (*)(uint64_t))sub_232059948, MEMORY[0x24BDB9E90]);
  v31 = v44;
  v32 = sub_232200774();
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v24);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v30, v31);
  result = v22;
  *(_QWORD *)(v22 + OBJC_IVAR____TtC9Summaries34SummariesSettingsGeneratorPipeline_publisher) = v32;
  return result;
}

uint64_t sub_232058D0C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t result;
  _BYTE v11[40];
  uint64_t v12[5];

  sub_232016980();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_232058E18(a1, v12);
  sub_23201B304((uint64_t)v12, (uint64_t)v11);
  sub_232016A8C(0, (unint64_t *)&qword_2541B28F0);
  sub_2322006B4();
  sub_232000590(&qword_2541AF318, (uint64_t (*)(uint64_t))sub_232016980, MEMORY[0x24BDB9DF8]);
  v9 = sub_232200774();
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  result = sub_232016AFC((uint64_t)v12);
  *a2 = v9;
  return result;
}

uint64_t sub_232058E18@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t *v33;
  uint64_t v34;

  v33 = a2;
  sub_2320057B8(0, &qword_2541B3068, (uint64_t (*)(uint64_t))sub_23202CAE4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v34 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v32 = (char *)v29 - v4;
  v5 = sub_2321FE38C();
  v30 = *(_QWORD *)(v5 - 8);
  v31 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2321FE3BC();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_2321FE440();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23202CAE4(0);
  v29[0] = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v29 - v17;
  v19 = sub_232059AF0();
  v29[1] = v20;
  v29[2] = v19;
  sub_232059108(a1, (uint64_t)v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  sub_2321FE3F8();
  sub_2320057B8(0, &qword_2541B7530, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v21 = sub_2321FE194();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_232210D40;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v22 + 104))(v24 + v23, *MEMORY[0x24BE474D0], v21);
  (*(void (**)(char *, _QWORD, uint64_t))(v30 + 104))(v7, *MEMORY[0x24BE47910], v31);
  sub_2321FE3A4();
  sub_232059C2C((uint64_t)v18, (uint64_t)v16);
  sub_2322006B4();
  v25 = sub_2321FE4D0();
  v26 = MEMORY[0x24BE47A60];
  v27 = v33;
  v33[3] = v25;
  v27[4] = v26;
  sub_2320251BC(v27);
  sub_23202E6B0();
  sub_2321FE4B8();
  return sub_232059C70((uint64_t)v18);
}

uint64_t sub_232059108@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t inited;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v31 = a1;
  v39 = a2;
  v2 = sub_23220039C();
  v35 = *(_QWORD *)(v2 - 8);
  v36 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_2321FEBB4();
  v33 = *(_QWORD *)(v3 - 8);
  v34 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v32 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_2321FE194();
  v5 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2321FEDD0();
  v29 = *(_QWORD *)(v8 - 8);
  v30 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2321FEF50();
  v37 = *(_QWORD *)(v11 - 8);
  v38 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2541B7488 != -1)
    swift_once();
  sub_2321FDA14();
  sub_2321FDA14();
  sub_2321FEDB8();
  sub_2321FEF2C();
  v27 = sub_2321FEF44();
  v26 = v14;
  sub_2320169E4(v27, v14);
  sub_232059AF0();
  type metadata accessor for SignificantChangesNotificationSwitchCellViewController();
  sub_2321FE1DC();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BE474D0], v28);
  sub_2321FE3F8();
  v15 = v39;
  v16 = v27;
  v17 = v26;
  sub_2321FE248();
  sub_2321FEF38();
  sub_2321FEDC4();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v30);
  sub_2321FE23C();
  sub_232059CAC();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232210D40;
  *(_QWORD *)(inited + 32) = sub_2321FE524();
  *(_QWORD *)(inited + 40) = v19;
  sub_2321AA940(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  sub_2321FE2E4();
  v20 = v32;
  v21 = v33;
  v22 = v34;
  (*(void (**)(char *, _QWORD, uint64_t))(v33 + 104))(v32, *MEMORY[0x24BE41968], v34);
  sub_2321FEBA8();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v20, v22);
  sub_2321FE2F0();
  sub_2321FE230();
  sub_232003ED4(v16, v17);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v38);
  v23 = sub_2321FE308();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v15, 0, 1, v23);
}

uint64_t sub_23205978C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC9Summaries34SummariesSettingsGeneratorPipeline_domain;
  v2 = sub_2321FE3BC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC9Summaries34SummariesSettingsGeneratorPipeline_context;
  v4 = sub_2321FE440();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_232059814()
{
  return type metadata accessor for SummariesSettingsGeneratorPipeline();
}

uint64_t type metadata accessor for SummariesSettingsGeneratorPipeline()
{
  uint64_t result;

  result = qword_2541AF438;
  if (!qword_2541AF438)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_232059858()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2321FE3BC();
  if (v1 <= 0x3F)
  {
    result = sub_2321FE440();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_2320598EC()
{
  return swift_retain();
}

uint64_t sub_232059900@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC9Summaries34SummariesSettingsGeneratorPipeline_domain;
  v4 = sub_2321FE3BC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void sub_232059948()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B3118)
  {
    sub_2320599C0();
    sub_232000590(&qword_2541B79A8, (uint64_t (*)(uint64_t))sub_2320599C0, MEMORY[0x24BDB9AF8]);
    v0 = sub_2322006FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B3118);
  }
}

void sub_2320599C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2F18)
  {
    sub_232016A8C(255, (unint64_t *)&qword_2541B28F0);
    v0 = sub_232200624();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2F18);
  }
}

uint64_t sub_232059A34()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_2321FE440();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_232059AA0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_2321FE440() - 8) + 80);
  return sub_232058D0C(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_232059AF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  void *v5;
  id v6;
  _QWORD v8[2];

  v0 = sub_2321FDCC0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (void *)sub_2321FE3F8();
  v5 = (void *)sub_2321FE1A0();

  if (v5)
  {
    v6 = objc_msgSend(v5, sel_identifier);

    sub_2321FDCA8();
    sub_2321FDC84();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  v8[0] = 0;
  v8[1] = 0xE000000000000000;
  sub_23220189C();
  sub_232200F48();
  sub_232200F48();
  swift_bridgeObjectRelease();
  return v8[0];
}

uint64_t sub_232059C2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23202CAE4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_232059C70(uint64_t a1)
{
  uint64_t v2;

  sub_23202CAE4(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_232059CAC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B78C0)
  {
    v0 = sub_232201AC4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B78C0);
  }
}

uint64_t sub_232059D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_232059D0C(a1, a2, a3, a4, (uint64_t)&off_2500FF4B0);
}

uint64_t sub_232059D0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void (*v18)(uint64_t, uint64_t (*)(void *, void *, char), uint64_t, uint64_t, uint64_t);
  uint64_t v20;

  v10 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232059FA0(a1, (uint64_t)v13);
  v14 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v15 = (v12 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = swift_allocObject();
  sub_23205A0DC((uint64_t)v13, v16 + v14);
  v17 = (_QWORD *)(v16 + v15);
  *v17 = a2;
  v17[1] = a3;
  v18 = *(void (**)(uint64_t, uint64_t (*)(void *, void *, char), uint64_t, uint64_t, uint64_t))(a5 + 16);
  swift_retain();
  v18(a1, sub_23205A120, v16, a4, a5);
  return swift_release();
}

uint64_t sub_232059E10(void *a1, void *a2, char a3, uint64_t a4, void (*a5)(_QWORD *))
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void **v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  uint64_t (*v21)(_QWORD);
  uint64_t v22;
  id v23;
  uint64_t v25;

  sub_23205A18C();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  v16 = (void **)((char *)&v25 - v15);
  if ((a3 & 1) != 0)
  {
    *v12 = a1;
    swift_storeEnumTagMultiPayload();
    v23 = a1;
    a5(v12);
    v21 = (uint64_t (*)(_QWORD))sub_23205A18C;
    v22 = (uint64_t)v12;
  }
  else
  {
    sub_232059FA0(a4, (uint64_t)&v25 - v15);
    v17 = *v16;
    v18 = v16[1];
    sub_23205A1F8(a1, a2, 0);
    v19 = a2;
    v20 = a1;
    sub_23205A224(v17, v18);
    *v16 = a1;
    v16[1] = a2;
    sub_232059FA0((uint64_t)v16, (uint64_t)v12);
    swift_storeEnumTagMultiPayload();
    a5(v12);
    sub_23205A254(a1, a2, 0);
    sub_232002CEC((uint64_t)v12, (uint64_t (*)(_QWORD))sub_23205A18C);
    v21 = type metadata accessor for SummariesFullProfileExecutor.StepResult;
    v22 = (uint64_t)v16;
  }
  return sub_232002CEC(v22, v21);
}

uint64_t sub_232059F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_232059D0C(a1, a2, a3, a4, (uint64_t)&off_250105120);
}

uint64_t sub_232059FA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_232059FE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  v2 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  if (*(_QWORD *)v2 != 1)
  {

  }
  v3 = *(void **)(v2 + 16);
  if (v3 != (void *)1)
  {

  }
  v4 = v2 + *(int *)(v1 + 28);
  v5 = sub_2321FDDD4();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23205A0DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23205A120(void *a1, void *a2, char a3)
{
  uint64_t v3;
  char v6;
  uint64_t v7;
  unint64_t v8;

  v6 = a3 & 1;
  v7 = *(_QWORD *)(type metadata accessor for SummariesFullProfileExecutor.StepResult(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return sub_232059E10(a1, a2, v6, v3 + v8, *(void (**)(_QWORD *))(v3 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

void sub_23205A18C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B71F0)
  {
    type metadata accessor for SummariesFullProfileExecutor.StepResult(255);
    sub_232002B9C();
    v0 = sub_232201BA8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B71F0);
  }
}

id sub_23205A1F8(void *a1, void *a2, char a3)
{
  id v4;

  if ((a3 & 1) != 0)
    return a1;
  v4 = a2;
  return a1;
}

void sub_23205A224(void *a1, void *a2)
{
  if (a1 != (void *)1)
  {

  }
}

void sub_23205A254(void *a1, void *a2, char a3)
{
  if ((a3 & 1) != 0)
  {

  }
  else
  {

  }
}

uint64_t sub_23205A280(uint64_t a1, uint64_t a2, char a3)
{
  char v5;
  uint64_t v6;

  v5 = a3 & 1;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + OBJC_IVAR____TtC9Summaries38CardioFitnessSummaryModelConfiguration_characteristicChangePublisher) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC9Summaries38CardioFitnessSummaryModelConfiguration_featureStatusChangePublisher) = 0;
  sub_232035280(a2, v6 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind);
  *(_QWORD *)(v6 + 16) = a1;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_audience) = v5;
  return v6;
}

uint64_t sub_23205A308(uint64_t a1)
{
  uint64_t *v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t);
  id v38;
  unint64_t v39;
  void (*v40)(_QWORD);
  char *v41;
  void *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  void *v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  unint64_t v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t);
  unint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t result;
  uint64_t v77;
  void (*v78)(uint64_t);
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  unsigned int v99;
  __int128 v100;
  unsigned int v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  id v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void (*v126)(uint64_t);
  uint64_t v127;
  unsigned int v128;
  void (*v129)(char *, _QWORD, uint64_t);
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  char *v134;
  id v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  _QWORD v139[4];
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;

  v119 = a1;
  v130 = *v1;
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, (unint64_t *)&qword_2541B5628, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v117 = (char *)&v92 - v4;
  sub_23205B34C();
  v105 = v5;
  v104 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v103 = (char *)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23205B5B8();
  v113 = v7;
  v111 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v109 = (char *)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23205B680();
  v116 = v9;
  v115 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v114 = (char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23205B414(0, &qword_2541B23F8, &qword_2541B24D0, (void (*)(uint64_t))MEMORY[0x24BE45750], &qword_2541B24C8);
  v112 = v11;
  v110 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v108 = (char *)&v92 - v12;
  sub_23205B414(0, (unint64_t *)&qword_2541B2BE0, (unint64_t *)&qword_2541B2EE8, (void (*)(uint64_t))MEMORY[0x24BE479F0], &qword_2541B2EE0);
  v107 = v13;
  v106 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v134 = (char *)&v92 - v14;
  sub_2320057B8(0, (unint64_t *)&unk_2541B2920, (uint64_t (*)(uint64_t))MEMORY[0x24BE41A90], v2);
  MEMORY[0x24BDAC7A8](v15);
  v138 = (char *)&v92 - v16;
  v98 = sub_2321FE710();
  v97 = *(_QWORD *)(v98 - 8);
  MEMORY[0x24BDAC7A8](v98);
  v96 = (char *)&v92 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23201B23C();
  v135 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v121 = (char *)&v92 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_2321FE734();
  v94 = *(_QWORD *)(v95 - 8);
  MEMORY[0x24BDAC7A8](v95);
  v93 = (char *)&v92 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = sub_2321FE38C();
  v131 = *(char **)(v136 - 8);
  MEMORY[0x24BDAC7A8](v136);
  v22 = (char *)&v92 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = sub_2321FE3BC();
  v127 = *(_QWORD *)(v137 - 8);
  v23 = MEMORY[0x24BDAC7A8](v137);
  v132 = (char *)&v92 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v92 - v25;
  v118 = (id)sub_2321FE3F8();
  v27 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598];
  sub_232000608(0, (unint64_t *)&qword_2541B78C8, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232210D20;
  sub_232003E9C(0, (unint64_t *)&qword_2541B0C28);
  *(_QWORD *)(inited + 32) = MEMORY[0x2348FE4B4]((id)*MEMORY[0x24BDD36A0]);
  v140 = inited;
  sub_232201050();
  sub_2320057B8(0, &qword_2541B7530, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], v27);
  v30 = v29;
  v31 = sub_2321FE194();
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(_QWORD *)(v32 + 72);
  v34 = *(unsigned __int8 *)(v32 + 80);
  v35 = (v34 + 32) & ~v34;
  v123 = v30;
  v102 = v35 + 2 * v33;
  v122 = v34 | 7;
  v36 = swift_allocObject();
  v100 = xmmword_232210D30;
  *(_OWORD *)(v36 + 16) = xmmword_232210D30;
  v125 = v35;
  v37 = *(void (**)(uint64_t))(v32 + 104);
  v101 = *MEMORY[0x24BE47460];
  v37(v36 + v35);
  v124 = v33;
  v99 = *MEMORY[0x24BE47490];
  v126 = v37;
  v37(v36 + v35 + v33);
  v38 = v118;
  sub_2321A492C(v36);
  swift_setDeallocating();
  v120 = v31;
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v39 = swift_bridgeObjectRetain();
  sub_2321A4950(v39);
  swift_bridgeObjectRelease();
  v40 = (void (*)(_QWORD))*((_QWORD *)v131 + 13);
  v128 = *MEMORY[0x24BE47918];
  v129 = (void (*)(char *, _QWORD, uint64_t))v40;
  v40(v22);
  v131 = v22;
  sub_2321FE3B0();

  v41 = v121;
  swift_bridgeObjectRelease();
  v42 = (void *)sub_2321FE41C();
  v127 = *(_QWORD *)(v127 + 8);
  ((void (*)(char *, uint64_t))v127)(v26, v137);
  sub_2321FE428();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v43 = v97;
    v44 = v96;
    v45 = v41;
    v46 = v98;
    (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v96, v45, v98);
    sub_232000590(&qword_2541B2338, (uint64_t (*)(uint64_t))MEMORY[0x24BE47EC8], MEMORY[0x24BE47ED8]);
    swift_willThrowTypedImpl();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v46);
    v47 = 0;
  }
  else
  {
    v48 = v94;
    v49 = v93;
    v50 = v41;
    v51 = v95;
    (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v93, v50, v95);
    sub_2321FE728();
    v47 = v52;
    (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v51);
  }
  v53 = (id)*MEMORY[0x24BDD2DD0];
  v54 = (void *)sub_2321FE3EC();
  v55 = v133;
  if (v47)
  {
    v56 = (void *)sub_232200E94();
    swift_bridgeObjectRelease();
  }
  else
  {
    v56 = 0;
  }
  v135 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3BF8]), sel_initWithFeatureIdentifier_healthStore_currentCountryCode_, v53, v54, v56);

  v57 = sub_2321FEBFC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v138, 1, 1, v57);
  sub_2321FE3D4();
  sub_232016AD8(v139, v139[3]);
  v58 = sub_2321FE314();
  v141 = sub_232003E9C(0, &qword_2541B55F0);
  v142 = MEMORY[0x24BE41DA0];
  v140 = v58;
  sub_232201BF0();
  v59 = (void *)sub_2321FE3F8();
  v60 = *(_QWORD *)(v55 + 16);
  v118 = v42;
  if (v60 >> 62)
  {
    sub_232003E9C(0, (unint64_t *)&qword_2541B74A0);
    swift_bridgeObjectRetain();
    sub_232201980();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_232201AE8();
    sub_232003E9C(0, (unint64_t *)&qword_2541B74A0);
  }
  v61 = (_BYTE *)(v55 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_audience);
  swift_beginAccess();
  if ((*v61 & 1) != 0)
  {
    v62 = v125;
    v63 = swift_allocObject();
    *(_OWORD *)(v63 + 16) = xmmword_232210D40;
    ((void (*)(uint64_t, _QWORD, uint64_t))v126)(v63 + v62, *MEMORY[0x24BE47410], v120);
  }
  else
  {
    v63 = swift_allocObject();
    *(_OWORD *)(v63 + 16) = v100;
    v65 = v63 + v125;
    v66 = v120;
    v67 = v126;
    ((void (*)(uint64_t, _QWORD, uint64_t))v126)(v63 + v125, v101, v120);
    ((void (*)(uint64_t, _QWORD, uint64_t))v67)(v65 + v124, v99, v66);
  }
  v64 = v59;
  sub_2321A492C(v63);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v68 = swift_bridgeObjectRetain();
  sub_2321A4950(v68);
  swift_bridgeObjectRelease();
  v129(v131, v128, v136);
  v69 = v132;
  sub_2321FE3B0();

  swift_bridgeObjectRelease();
  sub_2321FE41C();
  ((void (*)(char *, uint64_t))v127)(v69, v137);
  sub_2321FEC14();
  sub_2321FEBE4();
  swift_allocObject();
  v70 = sub_2321FEBF0();
  sub_232016AFC((uint64_t)v139);
  v71 = OBJC_IVAR____TtC9Summaries38CardioFitnessSummaryModelConfiguration_characteristicChangePublisher;
  *(_QWORD *)(v55 + OBJC_IVAR____TtC9Summaries38CardioFitnessSummaryModelConfiguration_characteristicChangePublisher) = v70;
  swift_release();
  sub_232003E9C(0, &qword_2541B27A8);
  v140 = sub_2321FF8A4();
  v72 = (void (*)(uint64_t))MEMORY[0x24BE45750];
  sub_23202D1D8(0, &qword_2541B24D0, (void (*)(uint64_t))MEMORY[0x24BE45750]);
  sub_23205B4A8(&qword_2541B24C8, &qword_2541B24D0, v72);
  v73 = sub_232200774();
  swift_release();
  v140 = v73;
  v74 = sub_232200774();
  swift_release();
  v75 = OBJC_IVAR____TtC9Summaries38CardioFitnessSummaryModelConfiguration_featureStatusChangePublisher;
  *(_QWORD *)(v55 + OBJC_IVAR____TtC9Summaries38CardioFitnessSummaryModelConfiguration_featureStatusChangePublisher) = v74;
  result = swift_release();
  if (*(_QWORD *)(v55 + v71))
  {
    swift_retain();
    v77 = sub_2321FEC08();
    swift_release();
    v140 = v77;
    v78 = (void (*)(uint64_t))MEMORY[0x24BE479F0];
    sub_23202D1D8(0, (unint64_t *)&qword_2541B2EE8, (void (*)(uint64_t))MEMORY[0x24BE479F0]);
    sub_23205B4A8(&qword_2541B2EE0, (unint64_t *)&qword_2541B2EE8, v78);
    sub_2322007A4();
    result = swift_release();
    if (*(_QWORD *)(v55 + v75))
    {
      v140 = *(_QWORD *)(v55 + v75);
      swift_retain();
      v79 = v108;
      sub_2322007A4();
      swift_release();
      sub_23205B4E8();
      sub_23205B550();
      v80 = v103;
      v81 = v107;
      v82 = v112;
      sub_2322007EC();
      sub_232000590(&qword_2541B2468, (uint64_t (*)(uint64_t))sub_23205B34C, MEMORY[0x24BDB9798]);
      v83 = v109;
      v84 = v105;
      sub_232200834();
      (*(void (**)(char *, uint64_t))(v104 + 8))(v80, v84);
      v85 = v118;
      v140 = (uint64_t)v118;
      v86 = sub_2322014A0();
      v87 = (uint64_t)v117;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56))(v117, 1, 1, v86);
      sub_232003E9C(0, &qword_2541B0C48);
      sub_232000590(&qword_2541B23D0, (uint64_t (*)(uint64_t))sub_23205B5B8, MEMORY[0x24BDB9530]);
      sub_23205B734();
      v88 = v114;
      v89 = v113;
      sub_232200840();
      sub_23205B78C(v87);
      (*(void (**)(char *, uint64_t))(v111 + 8))(v83, v89);
      sub_232000590(&qword_2541B2498, (uint64_t (*)(uint64_t))sub_23205B680, MEMORY[0x24BDB9A08]);
      v90 = v116;
      v91 = sub_232200774();

      (*(void (**)(char *, uint64_t))(v115 + 8))(v88, v90);
      (*(void (**)(char *, uint64_t))(v110 + 8))(v79, v82);
      (*(void (**)(char *, uint64_t))(v106 + 8))(v134, v81);
      return v91;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_23205B240()
{
  swift_release();
  return swift_release();
}

uint64_t sub_23205B26C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_232035454(v0 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_23205B2C8()
{
  return type metadata accessor for CardioFitnessSummaryModelConfiguration();
}

uint64_t type metadata accessor for CardioFitnessSummaryModelConfiguration()
{
  uint64_t result;

  result = qword_2541B4918;
  if (!qword_2541B4918)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23205B30C()
{
  return swift_updateClassMetadata2();
}

void sub_23205B34C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2470)
  {
    sub_23205B414(255, (unint64_t *)&qword_2541B2BE0, (unint64_t *)&qword_2541B2EE8, (void (*)(uint64_t))MEMORY[0x24BE479F0], &qword_2541B2EE0);
    sub_23205B414(255, &qword_2541B23F8, &qword_2541B24D0, (void (*)(uint64_t))MEMORY[0x24BE45750], &qword_2541B24C8);
    sub_23205B4E8();
    sub_23205B550();
    v0 = sub_232200594();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2470);
  }
}

void sub_23205B414(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t), unint64_t *a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_23202D1D8(255, a3, a4);
    sub_23205B4A8(a5, a3, a4);
    v9 = sub_232200540();
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_23205B4A8(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_23202D1D8(255, a2, a3);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB9AF8], v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23205B4E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B2BD8;
  if (!qword_2541B2BD8)
  {
    sub_23205B414(255, (unint64_t *)&qword_2541B2BE0, (unint64_t *)&qword_2541B2EE8, (void (*)(uint64_t))MEMORY[0x24BE479F0], &qword_2541B2EE0);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB96C0], v1);
    atomic_store(result, (unint64_t *)&qword_2541B2BD8);
  }
  return result;
}

unint64_t sub_23205B550()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B23F0;
  if (!qword_2541B23F0)
  {
    sub_23205B414(255, &qword_2541B23F8, &qword_2541B24D0, (void (*)(uint64_t))MEMORY[0x24BE45750], &qword_2541B24C8);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB96C0], v1);
    atomic_store(result, (unint64_t *)&qword_2541B23F0);
  }
  return result;
}

void sub_23205B5B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B23D8)
  {
    sub_232048E84();
    sub_23205B34C();
    sub_232000590(&qword_2541B2E50, (uint64_t (*)(uint64_t))sub_232048E84, MEMORY[0x24BDB9970]);
    sub_232000590(&qword_2541B2468, (uint64_t (*)(uint64_t))sub_23205B34C, MEMORY[0x24BDB9798]);
    v0 = sub_232200504();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B23D8);
  }
}

void sub_23205B680()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B24A0)
  {
    sub_23205B5B8();
    sub_232003E9C(255, &qword_2541B0C48);
    sub_232000590(&qword_2541B23D0, (uint64_t (*)(uint64_t))sub_23205B5B8, MEMORY[0x24BDB9530]);
    sub_23205B734();
    v0 = sub_232200600();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B24A0);
  }
}

unint64_t sub_23205B734()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B0C40;
  if (!qword_2541B0C40)
  {
    v1 = sub_232003E9C(255, &qword_2541B0C48);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BEE5670], v1);
    atomic_store(result, (unint64_t *)&qword_2541B0C40);
  }
  return result;
}

uint64_t sub_23205B78C(uint64_t a1)
{
  uint64_t v2;

  sub_2320057B8(0, (unint64_t *)&qword_2541B5628, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_23205B7E0(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  id *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  id v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v58 = a5;
  v10 = type metadata accessor for SharingChartFeedItemFactory(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v55 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (id *)((char *)&v55 - v18);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v55 - v20;
  v22 = sub_23220039C();
  v23 = MEMORY[0x24BDAC7A8](v22);
  v24 = (void *)MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)&v55 - v27;
  if (!a1)
  {
    v56 = v26;
    v57 = v24;
    v39 = v25;
    sub_232200318();
    sub_23205BEB4(v5, (uint64_t)v16);
    v40 = (uint64_t)v13;
    sub_23205BEB4(v5, (uint64_t)v13);
    v55 = v39;
    v41 = sub_232200390();
    v42 = sub_2322012FC();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = swift_slowAlloc();
      v44 = swift_slowAlloc();
      v60 = v44;
      *(_DWORD *)v43 = 136315394;
      v45 = sub_23205C778();
      v59 = sub_232013174(v45, v46, &v60);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_23205BEF8((uint64_t)v16);
      *(_WORD *)(v43 + 12) = 2080;
      v47 = objc_msgSend(*(id *)(v40 + 8), sel_sensitiveLoggingIdentifier);
      v48 = sub_232200EC4();
      v50 = v49;

      v59 = sub_232013174(v48, v50, &v60);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_23205BEF8(v40);
      _os_log_impl(&dword_231FFB000, v41, v42, "%s: version mismatch found for %s", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v44, -1, -1);
      MEMORY[0x2348FF468](v43, -1, -1);
    }
    else
    {
      sub_23205BEF8((uint64_t)v16);
      sub_23205BEF8((uint64_t)v13);
    }

    (*(void (**)(uint64_t, id))(v56 + 8))(v55, v57);
    goto LABEL_13;
  }
  if (a1 == (void *)1)
  {
    v56 = v26;
    v57 = v24;
    sub_232200318();
    sub_23205BEB4(v5, (uint64_t)v21);
    sub_23205BEB4(v5, (uint64_t)v19);
    v29 = sub_232200390();
    v30 = sub_2322012FC();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc();
      v55 = swift_slowAlloc();
      v60 = v55;
      *(_DWORD *)v31 = 136315394;
      v32 = sub_23205C778();
      v59 = sub_232013174(v32, v33, &v60);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_23205BEF8((uint64_t)v21);
      *(_WORD *)(v31 + 12) = 2080;
      v34 = objc_msgSend(v19[1], sel_sensitiveLoggingIdentifier);
      v35 = sub_232200EC4();
      v37 = v36;

      v59 = sub_232013174(v35, v37, &v60);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_23205BEF8((uint64_t)v19);
      _os_log_impl(&dword_231FFB000, v29, v30, "%s: chart model not found for %s", (uint8_t *)v31, 0x16u);
      v38 = v55;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v38, -1, -1);
      MEMORY[0x2348FF468](v31, -1, -1);
    }
    else
    {
      sub_23205BEF8((uint64_t)v21);
      sub_23205BEF8((uint64_t)v19);
    }

    (*(void (**)(char *, id))(v56 + 8))(v28, v57);
LABEL_13:
    v51 = sub_2321FE308();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v58, 1, 1, v51);
    return;
  }
  if ((unint64_t)a3 >= 2)
  {
    v52 = a3;
    swift_bridgeObjectRetain();
  }
  else
  {
    a3 = 0;
    a4 = 0;
  }
  v57 = a1;
  swift_bridgeObjectRetain();
  v53 = sub_23205BF34(a3, a4);
  sub_23205C3E0((uint64_t)v57, a2, (uint64_t)v53, v54, v58);
  sub_23205D3E8((uint64_t)v53);
  sub_23205D414(a3);
  swift_bridgeObjectRelease();

}

uint64_t sub_23205BD50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC9Summaries29SummaryChartFeedItemGenerator_domain;
  v2 = sub_2321FE3BC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_23205BDB0()
{
  return type metadata accessor for SummaryChartFeedItemGenerator(0);
}

uint64_t type metadata accessor for SummaryChartFeedItemGenerator(uint64_t a1)
{
  return sub_23201A14C(a1, (uint64_t *)&unk_2541B3E50);
}

uint64_t sub_23205BDCC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2321FE3BC();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23205BE44()
{
  return swift_retain();
}

uint64_t sub_23205BE58@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC9Summaries29SummaryChartFeedItemGenerator_domain;
  v4 = sub_2321FE3BC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for SharingChartFeedItemFactory(uint64_t a1)
{
  return sub_23201A14C(a1, (uint64_t *)&unk_2541B2568);
}

uint64_t sub_23205BEB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SharingChartFeedItemFactory(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23205BEF8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SharingChartFeedItemFactory(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_23205BF34(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  os_log_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  void *v42;
  uint64_t v43;
  unint64_t v44;
  _QWORD v46[2];
  os_log_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59[2];

  v3 = v2;
  v6 = sub_2321FDE28();
  v56 = *(_QWORD *)(v6 - 8);
  v57 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v55 = (char *)v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, (unint64_t *)&qword_2541AF178, (void (*)(uint64_t))MEMORY[0x24BDCEEA8]);
  v9 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = type metadata accessor for SharingChartFeedItemFactory(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)v46 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v46 - v17;
  v19 = sub_23220039C();
  v20 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v52 = v21;
    v53 = v20;
    v54 = a1;
    swift_bridgeObjectRetain();
    sub_232200318();
    sub_23205BEB4(v3, (uint64_t)v18);
    sub_23205BEB4(v3, (uint64_t)v16);
    sub_23205BEB4(v3, (uint64_t)v13);
    v24 = sub_232200390();
    v25 = sub_2322012CC();
    v51 = v25;
    if (os_log_type_enabled(v24, v25))
    {
      v26 = swift_slowAlloc();
      v49 = v3;
      v27 = v26;
      v48 = swift_slowAlloc();
      v59[0] = v48;
      *(_DWORD *)v27 = 136315650;
      v50 = a2;
      v47 = v24;
      v28 = sub_23205C778();
      v58 = sub_232013174(v28, v29, v59);
      v46[0] = v9;
      v46[1] = v59;
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_23205BEF8((uint64_t)v18);
      *(_WORD *)(v27 + 12) = 2080;
      sub_2321FDD8C();
      v30 = sub_232200F00();
      v58 = sub_232013174(v30, v31, v59);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_23205BEF8((uint64_t)v16);
      *(_WORD *)(v27 + 22) = 2080;
      v32 = v55;
      sub_2321FDDB0();
      sub_23205D4E0();
      v33 = v57;
      v34 = sub_232201AB8();
      v36 = v35;
      (*(void (**)(char *, uint64_t))(v56 + 8))(v32, v33);
      v58 = sub_232013174(v34, v36, v59);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_23205BEF8((uint64_t)v13);
      v37 = v47;
      _os_log_impl(&dword_231FFB000, v47, (os_log_type_t)v51, "%s: Using calendar with locale: %s, timeZone: %s", (uint8_t *)v27, 0x20u);
      v38 = v48;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v38, -1, -1);
      v39 = v27;
      v3 = v49;
      MEMORY[0x2348FF468](v39, -1, -1);

    }
    else
    {
      sub_23205BEF8((uint64_t)v18);
      sub_23205BEF8((uint64_t)v16);
      sub_23205BEF8((uint64_t)v13);

    }
    (*(void (**)(char *, uint64_t))(v52 + 8))(v23, v53);
    v40 = v54;
    v41 = objc_msgSend(v54, sel_trendValues);
    if (!v41
      || (v42 = v41,
          v59[0] = 0,
          sub_232003E9C(0, &qword_2541B0C88),
          sub_23220102C(),
          v42,
          (v44 = v59[0]) == 0))
    {
      v43 = swift_bridgeObjectRelease();
      v44 = MEMORY[0x24BEE4AF8];
    }
    MEMORY[0x24BDAC7A8](v43);
    v46[-2] = v3;
    a1 = (void *)sub_23209CBC0((void (*)(uint64_t *__return_ptr, id *))sub_23205D4A4, (uint64_t)&v46[-4], v44);

    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t sub_23205C3E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v6 = v5;
  v40 = a5;
  v11 = type metadata accessor for SharingChartFeedItemFactory(0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (id *)((char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v37 - v15;
  v17 = sub_23220039C();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v39 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A348]), sel_init);
  if (v20)
  {
    v21 = v20;
    objc_msgSend(v20, sel_setChartModel_, a1);
    if (a3)
    {
      swift_bridgeObjectRetain();
      sub_23220159C();
      swift_bridgeObjectRetain();
    }
    else
    {
      a4 = MEMORY[0x24BEE4AF8];
    }
    v33 = v40;
    v42 = a2;
    swift_bridgeObjectRetain();
    sub_23209D274(a4);
    sub_23205C90C(v21, v42);
    swift_bridgeObjectRelease();

    v34 = sub_2321FE308();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v33, 0, 1, v34);
  }
  else
  {
    v38 = v17;
    sub_232200318();
    sub_23205BEB4(v6, (uint64_t)v16);
    sub_23205BEB4(v6, (uint64_t)v14);
    v22 = sub_232200390();
    v23 = sub_2322012E4();
    v24 = v18;
    if (os_log_type_enabled(v22, v23))
    {
      v25 = swift_slowAlloc();
      v26 = swift_slowAlloc();
      v42 = v26;
      *(_DWORD *)v25 = 136315394;
      v27 = sub_23205C778();
      v41 = sub_232013174(v27, v28, &v42);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_23205BEF8((uint64_t)v16);
      *(_WORD *)(v25 + 12) = 2080;
      v37 = v25 + 14;
      v29 = objc_msgSend(v14[1], sel_sensitiveLoggingIdentifier, v25 + 14);
      v30 = sub_232200EC4();
      v32 = v31;

      v41 = sub_232013174(v30, v32, &v42);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_23205BEF8((uint64_t)v14);
      _os_log_impl(&dword_231FFB000, v22, v23, "%s: failed to make chart feed item for %s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v26, -1, -1);
      MEMORY[0x2348FF468](v25, -1, -1);
    }
    else
    {
      sub_23205BEF8((uint64_t)v16);
      sub_23205BEF8((uint64_t)v14);
    }

    (*(void (**)(char *, uint64_t))(v24 + 8))(v39, v38);
    v36 = sub_2321FE308();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v40, 1, 1, v36);
  }
}

unint64_t sub_23205C778()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  unint64_t v8;
  unint64_t v9;

  v1 = sub_2321FDCC0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = 0;
  v9 = 0xE000000000000000;
  sub_23220189C();
  swift_bridgeObjectRelease();
  v8 = 0xD00000000000001ELL;
  v9 = 0x8000000232204440;
  v5 = objc_msgSend(*v0, sel_profileIdentifier);
  v6 = objc_msgSend(v5, sel_identifier);

  sub_2321FDCA8();
  sub_2321FDC84();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_232200F48();
  swift_bridgeObjectRelease();
  sub_232200F48();
  type metadata accessor for SharingChartFeedItemFactory(0);
  sub_232200F48();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_23205C90C(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  uint64_t inited;
  void *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char *v40;
  uint64_t v42;
  id v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  id v49;
  unint64_t v50;

  v3 = v2;
  v42 = a2;
  v5 = type metadata accessor for SharingChartFeedItemFactory(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v45 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v44 = (char *)&v42 - v8;
  v9 = sub_23220039C();
  v46 = *(_QWORD *)(v9 - 8);
  v47 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v48 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2321FE194();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  v43 = a1;
  v15 = objc_msgSend(a1, sel_data, v42);
  if (v15)
  {
    v16 = v15;
    sub_2321FDAD4();

  }
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BE47440], v11);
  objc_msgSend(*(id *)v3, sel_profileIdentifier);
  sub_2321FE248();
  sub_232027434();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232210D20;
  v18 = *(void **)(v3 + 8);
  *(_QWORD *)(inited + 32) = v18;
  v50 = inited;
  sub_232201050();
  v19 = v50;
  v20 = (uint64_t)v44;
  if (!(v50 >> 62))
  {
    v21 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10);
    v22 = v18;
    v23 = (uint64_t)v45;
    if (!v21)
      goto LABEL_7;
    goto LABEL_5;
  }
  v24 = v18;
  swift_bridgeObjectRetain();
  v25 = sub_232201998();
  swift_bridgeObjectRelease();
  v23 = (uint64_t)v45;
  if (v25)
LABEL_5:
    sub_2321A9D34(v19);
LABEL_7:
  swift_bridgeObjectRelease();
  sub_2321FE260();
  sub_2321FE230();
  v26 = swift_bridgeObjectRetain();
  sub_2321AAADC(v26);
  swift_bridgeObjectRelease();
  sub_2321FE2C0();
  v27 = v48;
  sub_232200318();
  sub_23205BEB4(v3, v20);
  sub_23205BEB4(v3, v23);
  v28 = v43;
  v29 = sub_232200390();
  v30 = sub_2322012FC();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = swift_slowAlloc();
    v45 = (char *)swift_slowAlloc();
    v50 = (unint64_t)v45;
    *(_DWORD *)v31 = 136315651;
    v32 = sub_23205C778();
    v49 = (id)sub_232013174(v32, v33, (uint64_t *)&v50);
    sub_232201710();
    swift_bridgeObjectRelease();
    sub_23205BEF8(v20);
    *(_WORD *)(v31 + 12) = 2080;
    v34 = objc_msgSend(*(id *)(v23 + 8), sel_sensitiveLoggingIdentifier);
    v35 = sub_232200EC4();
    v37 = v36;

    v49 = (id)sub_232013174(v35, v37, (uint64_t *)&v50);
    sub_232201710();
    swift_bridgeObjectRelease();
    sub_23205BEF8(v23);
    *(_WORD *)(v31 + 22) = 2081;
    v49 = objc_msgSend(v28, sel_chartModel);
    sub_23205D440();
    v38 = sub_232200F00();
    v49 = (id)sub_232013174(v38, v39, (uint64_t *)&v50);
    sub_232201710();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_231FFB000, v29, v30, "%s: Created chart feed item for %s with %{private}s", (uint8_t *)v31, 0x20u);
    v40 = v45;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v40, -1, -1);
    MEMORY[0x2348FF468](v31, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v48, v47);
  }
  else
  {
    sub_23205BEF8(v20);
    sub_23205BEF8(v23);

    return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v27, v47);
  }
}

id sub_23205CE1C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  id v44;
  int v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v54 = type metadata accessor for SharingChartFeedItemFactory(0);
  v2 = MEMORY[0x24BDAC7A8](v54);
  v56 = (uint64_t)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v53 - v4;
  v6 = sub_23220039C();
  v58 = *(void **)(v6 - 8);
  v59 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v57 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, &qword_2541B28C0, (void (*)(uint64_t))MEMORY[0x24BE47CC8]);
  MEMORY[0x24BDAC7A8](v8);
  v53 = (char *)&v53 - v9;
  sub_2320002B4(0, &qword_2541B2A50, (void (*)(uint64_t))MEMORY[0x24BE4ACD0]);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v53 - v11;
  v13 = sub_2321FFD54();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v55 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, &qword_2541B2AA8, (void (*)(uint64_t))MEMORY[0x24BE4B528]);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v53 - v17;
  v19 = sub_2321FFF04();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  HKCodableSummaryTrendValue.engineOutput.getter((uint64_t)v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_23200040C((uint64_t)v18, &qword_2541B2AA8, (void (*)(uint64_t))MEMORY[0x24BE4B528]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
    sub_2321FFEB0();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
      sub_23200040C((uint64_t)v12, &qword_2541B2A50, (void (*)(uint64_t))MEMORY[0x24BE4ACD0]);
    }
    else
    {
      v23 = v55;
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v55, v12, v13);
      if (objc_msgSend(a1, sel_hasCoveredDateRangeRawValue))
      {
        v24 = objc_msgSend(a1, sel_coveredDateRangeRawValue);
        if (v24)
        {
          v25 = v24;
          v26 = sub_232200EC4();
          v28 = v27;

          v29 = v26;
          v23 = v55;
          v30 = MEMORY[0x2348FD38C](v29, v28);
          if (v30 != 6)
          {
            v46 = v30;
            v47 = type metadata accessor for TrendComponentBuilder();
            v48 = *(void **)(v60 + 8);
            v58 = *(void **)v60;
            v59 = v47;
            v49 = v60 + *(int *)(v54 + 24);
            v50 = sub_2321FE584();
            v51 = (uint64_t)v23;
            v52 = (uint64_t)v53;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v53, 1, 1, v50);
            v44 = sub_2321DA0B0(v58, v48, v49, v51, v46, v52);
            sub_23200040C(v52, &qword_2541B28C0, (void (*)(uint64_t))MEMORY[0x24BE47CC8]);
            (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v51, v13);
            (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
            return v44;
          }
        }
      }
      (*(void (**)(char *, uint64_t))(v14 + 8))(v23, v13);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    }
  }
  v31 = v57;
  sub_232200318();
  v32 = v60;
  sub_23205BEB4(v60, (uint64_t)v5);
  v33 = v56;
  sub_23205BEB4(v32, v56);
  v34 = sub_232200390();
  v35 = sub_2322012FC();
  if (os_log_type_enabled(v34, v35))
  {
    v36 = swift_slowAlloc();
    v60 = swift_slowAlloc();
    v62 = v60;
    *(_DWORD *)v36 = 136315394;
    v37 = sub_23205C778();
    v61 = sub_232013174(v37, v38, &v62);
    sub_232201710();
    swift_bridgeObjectRelease();
    sub_23205BEF8((uint64_t)v5);
    *(_WORD *)(v36 + 12) = 2080;
    v39 = objc_msgSend(*(id *)(v33 + 8), sel_sensitiveLoggingIdentifier);
    v40 = sub_232200EC4();
    v42 = v41;

    v61 = sub_232013174(v40, v42, &v62);
    sub_232201710();
    swift_bridgeObjectRelease();
    sub_23205BEF8(v33);
    _os_log_impl(&dword_231FFB000, v34, v35, "%s: %s SummaryTrendValue did not have appropriate info to make mean shift model for chart.", (uint8_t *)v36, 0x16u);
    v43 = v60;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v43, -1, -1);
    MEMORY[0x2348FF468](v36, -1, -1);
  }
  else
  {
    sub_23205BEF8((uint64_t)v5);
    sub_23205BEF8(v33);
  }

  (*((void (**)(char *, uint64_t))v58 + 1))(v31, v59);
  return 0;
}

uint64_t sub_23205D3E8(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_23205D414(void *result)
{
  if (result)
  {

    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

void sub_23205D440()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B5670)
  {
    sub_232003E9C(255, &qword_2541B0CB8);
    v0 = sub_2322016F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B5670);
  }
}

id sub_23205D4A4@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = sub_23205CE1C(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_23205D4E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B2888;
  if (!qword_2541B2888)
  {
    v1 = sub_2321FDE28();
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDCF548], v1);
    atomic_store(result, (unint64_t *)&qword_2541B2888);
  }
  return result;
}

char *sub_23205D528(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[1];
    *((_QWORD *)a1 + 1) = v8;
    v9 = a3[6];
    v10 = &a1[v9];
    v11 = (uint64_t)a2 + v9;
    v12 = sub_2321FDDD4();
    v13 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    v14 = v4;
    v15 = v8;
    v13(v10, v11, v12);
    v16 = a3[7];
    v17 = a3[8];
    v18 = &v7[v16];
    v19 = (char **)((char *)a2 + v16);
    v20 = v19[1];
    *(_QWORD *)v18 = *v19;
    *((_QWORD *)v18 + 1) = v20;
    v7[v17] = *((_BYTE *)a2 + v17);
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_23205D600(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  v4 = (char *)a1 + *(int *)(a2 + 24);
  v5 = sub_2321FDDD4();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

_QWORD *sub_23205D668(_QWORD *a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  v6 = *(void **)a2;
  v7 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v7;
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = a2 + v8;
  v11 = sub_2321FDDD4();
  v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v13 = v6;
  v14 = v7;
  v12(v9, v10, v11);
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_QWORD *)((char *)a1 + v15);
  v18 = (_QWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  *((_BYTE *)a1 + v16) = *(_BYTE *)(a2 + v16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23205D710(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  v9 = *(void **)(a2 + 8);
  v10 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v9;
  v11 = v9;

  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_2321FDDD4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  v16 = a3[7];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

_OWORD *sub_23205D7D4(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2321FDDD4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
  return a1;
}

uint64_t sub_23205D854(uint64_t a1, _QWORD *a2, int *a3)
{
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = a2[1];

  v8 = a3[6];
  v9 = a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_2321FDDD4();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

uint64_t sub_23205D900()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23205D90C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2321FDDD4();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_23205D988()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_23205D994(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_2321FDDD4();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_23205DA08()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2321FDDD4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23205DA98()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  swift_getAssociatedTypeWitness();
  result = sub_2322016F8();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    result = sub_2322016F8();
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_23205DB78@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *);
  uint64_t v28;

  v25 = a5;
  v26 = a2;
  v28 = a4;
  v27 = a1;
  v24 = a3;
  v9 = *(_QWORD *)(a3 - 8);
  v10 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v13 + 16);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v10);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v6);
  v22 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    v27(v18, v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (v7)
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v25, v12, v24);
    v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(a6, v22, 1);
}

uint64_t sub_23205DD08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

uint64_t sub_23205DD20(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t TupleTypeMetadata;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  __int128 *v12;
  _OWORD *v13;
  unint64_t v14;
  __int128 v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v4 = a1;
  v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    TupleTypeMetadata = *v5;
    MEMORY[0x24BDAC7A8](a1);
    v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
LABEL_12:
    v22 = 32;
    v23 = a2;
    do
    {
      if (a2 == 1)
        v24 = 0;
      else
        v24 = *(_DWORD *)(TupleTypeMetadata + v22);
      v26 = *v5++;
      v25 = v26;
      v27 = *v4++;
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(&v8[v24], v27);
      v22 += 16;
      --v23;
    }
    while (v23);
    return sub_232200CCC();
  }
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v11 = 0;
    if (a2 < 4)
      goto LABEL_9;
    if ((unint64_t)(v10 - (char *)v5) < 0x20)
      goto LABEL_9;
    v11 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    v12 = (__int128 *)(v5 + 2);
    v13 = v10 + 16;
    v14 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v15 = *v12;
      *(v13 - 1) = *(v12 - 1);
      *v13 = v15;
      v12 += 2;
      v13 += 2;
      v14 -= 4;
    }
    while (v14);
    if (v11 != a2)
    {
LABEL_9:
      v16 = a2 - v11;
      v17 = v11;
      v18 = &v10[8 * v11];
      v19 = &v5[v17];
      do
      {
        v20 = *v19++;
        *(_QWORD *)v18 = v20;
        v18 += 8;
        --v16;
      }
      while (v16);
    }
  }
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  MEMORY[0x24BDAC7A8](TupleTypeMetadata);
  v8 = (char *)&v29 - v21;
  if (a2)
    goto LABEL_12;
  return sub_232200CCC();
}

BOOL sub_23205DED4(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_23205DEE4()
{
  return sub_232201B84();
}

uint64_t sub_23205DF08(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6956726564616568 && a2 == 0xEF6C65646F4D7765;
  if (v2 || (sub_232201ADC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000232204480 || (sub_232201ADC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000002322044A0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_232201ADC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23205E074()
{
  sub_232201B78();
  sub_232201B84();
  return sub_232201B9C();
}

uint64_t sub_23205E0B8(char a1)
{
  if (!a1)
    return 0x6956726564616568;
  if (a1 == 1)
    return 0xD000000000000015;
  return 0xD000000000000016;
}

BOOL sub_23205E11C(char *a1, char *a2)
{
  return sub_23205DED4(*a1, *a2);
}

uint64_t sub_23205E15C()
{
  return sub_23205E074();
}

uint64_t sub_23205E190()
{
  return sub_23205DEE4();
}

uint64_t sub_23205E1C4()
{
  sub_232201B78();
  sub_23205DEE4();
  return sub_232201B9C();
}

uint64_t sub_23205E218()
{
  char *v0;

  return sub_23205E0B8(*v0);
}

uint64_t sub_23205E24C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _BYTE *a4@<X8>)
{
  return sub_2320606D4(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23205DF08, a4);
}

uint64_t sub_23205E258()
{
  return 0;
}

uint64_t sub_23205E264@<X0>(_QWORD *a1@<X1>, _BYTE *a2@<X8>)
{
  return sub_232060728(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_232062730, a2);
}

uint64_t sub_23205E270(uint64_t a1)
{
  MEMORY[0x2348FF39C](&unk_232212480, a1);
  return sub_232201BD8();
}

uint64_t sub_23205E2A4(uint64_t a1)
{
  MEMORY[0x2348FF39C](&unk_232212480, a1);
  return sub_232201BE4();
}

uint64_t sub_23205E2D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release();
  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 152);
  swift_getAssociatedTypeWitness();
  v2 = sub_2322016F8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 160);
  swift_getAssociatedTypeWitness();
  v4 = sub_2322016F8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t sub_23205E3A8()
{
  sub_23205E2D8();
  return swift_deallocClassInstance();
}

void type metadata accessor for SnidgetHarnessPluginView.ViewModel()
{
  JUMPOUT(0x2348FF2E8);
}

void sub_23205E3D8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  __int128 v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 104);
  v3 = *(_QWORD *)(*v0 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = sub_2322016F8();
  v16 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v10 - v4;
  v5 = *(_QWORD *)(v1 + 96);
  v6 = *(_QWORD *)(v1 + 80);
  v17 = swift_getAssociatedTypeWitness();
  v18 = sub_2322016F8();
  v20 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v19 = (char *)&v10 - v7;
  v8 = *(_QWORD *)(v1 + 112);
  v9 = *(_QWORD *)(v1 + 136);
  v21 = v6;
  v22 = v3;
  v23 = v5;
  v24 = v2;
  v25 = v8;
  v14 = *(_OWORD *)(v1 + 120);
  v26 = v14;
  v12 = v9;
  v27 = v9;
  type metadata accessor for SnidgetHarnessPluginView.ViewModel.CodingKeys();
}

uint64_t sub_23205E520(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  MEMORY[0x2348FF39C](&unk_232212480, a1);
  v4 = sub_232201AA0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - v6;
  sub_232016AD8(v1, v1[3]);
  sub_232201BC0();
  *(_QWORD *)(v3 - 152) = v2[2];
  *(_BYTE *)(v3 - 176) = 0;
  sub_2321FF208();
  sub_232000590(&qword_2541B29A0, (uint64_t (*)(uint64_t))MEMORY[0x24BE43908], MEMORY[0x24BE42DA0]);
  v8 = *(_QWORD *)(v3 - 184);
  sub_232201A94();
  if (v8)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *(_QWORD *)(v3 - 184) = v5;
  v11 = *(_QWORD *)(v3 - 232);
  v10 = *(_QWORD *)(v3 - 224);
  v12 = (char *)v2 + *(_QWORD *)(*v2 + 152);
  swift_beginAccess();
  v13 = *(_QWORD *)(v3 - 208);
  (*(void (**)(_QWORD, char *, uint64_t))(*(_QWORD *)(v3 - 192) + 16))(*(_QWORD *)(v3 - 200), v12, v13);
  *(_BYTE *)(v3 - 176) = 1;
  sub_232201A64();
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v3 - 192) + 8))(*(_QWORD *)(v3 - 200), v13);
  v14 = (char *)v2 + *(_QWORD *)(*v2 + 160);
  swift_beginAccess();
  v15 = *(_QWORD *)(v3 - 280);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v11, v14, v15);
  *(_BYTE *)(v3 - 65) = 2;
  sub_232201A64();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v15);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v3 - 184) + 8))(v7, v4);
}

uint64_t sub_23205E760(uint64_t a1)
{
  return sub_232060A90(a1, (void (*)(uint64_t))sub_23205E80C);
}

void sub_23205E77C()
{
  unint64_t v0;

  sub_2320057B8(319, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_initClassMetadata2();
}

void sub_23205E80C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[30];

  v15[20] = a1;
  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  swift_getAssociatedTypeWitness();
  v5 = sub_2322016F8();
  v15[10] = *(_QWORD *)(v5 - 8);
  v15[11] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v15[0] = (char *)v15 - v6;
  v7 = v2[12];
  v8 = v2[10];
  swift_getAssociatedTypeWitness();
  v9 = sub_2322016F8();
  v15[13] = *(_QWORD *)(v9 - 8);
  v15[14] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v15[2] = (char *)v15 - v10;
  v11 = v2[14];
  v12 = v2[15];
  v13 = v2[16];
  v14 = v2[17];
  v15[9] = v8;
  v15[21] = v8;
  v15[22] = v4;
  v15[5] = v4;
  v15[4] = v7;
  v15[23] = v7;
  v15[24] = v3;
  v15[6] = v3;
  v15[18] = v11;
  v15[25] = v11;
  v15[26] = v12;
  v15[8] = v12;
  v15[15] = v13;
  v15[27] = v13;
  v15[28] = v14;
  v15[7] = v14;
  type metadata accessor for SnidgetHarnessPluginView.ViewModel.CodingKeys();
}

uint64_t sub_23205E964(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  MEMORY[0x2348FF39C](&unk_232212480, a1);
  v6 = sub_232201A4C();
  *(_QWORD *)(v5 - 296) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v32 - v8;
  v10 = *(void (**)(void))(*(_QWORD *)(v1 - 8) + 56);
  *(_QWORD *)(v5 - 192) = v4 + *(_QWORD *)(v3 + 152);
  v10();
  v11 = *(_QWORD *)(*(_QWORD *)v4 + 160);
  *(_QWORD *)(v5 - 184) = v4;
  v12 = v4 + v11;
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56);
  *(_QWORD *)(v5 - 312) = v2;
  v13(v12, 1, 1, v2);
  sub_232016AD8(*(_QWORD **)(v5 - 160), *(_QWORD *)(*(_QWORD *)(v5 - 160) + 24));
  v14 = v9;
  v15 = *(_QWORD *)(v5 - 168);
  sub_232201BB4();
  *(_QWORD *)(v5 - 224) = v12;
  if (v15)
  {
    v20 = *(_QWORD *)(v5 - 240);
    v19 = *(_QWORD *)(v5 - 232);
    v21 = *(_QWORD *)(v5 - 272);
    v22 = *(_QWORD *)(v5 - 280);
    v23 = *(_QWORD *)(v5 - 200);
    v24 = *(_QWORD *)(v5 - 288);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v5 - 216) + 8))(*(_QWORD *)(v5 - 192), *(_QWORD *)(v5 - 208));
    (*(void (**)(_QWORD, uint64_t))(v20 + 8))(*(_QWORD *)(v5 - 224), v19);
    *(_QWORD *)(v5 - 152) = *(_QWORD *)(v5 - 248);
    *(_QWORD *)(v5 - 144) = v22;
    *(_QWORD *)(v5 - 136) = v24;
    *(_QWORD *)(v5 - 128) = v21;
    v25 = *(_QWORD *)(v5 - 256);
    *(_QWORD *)(v5 - 120) = *(_QWORD *)(v5 - 176);
    *(_QWORD *)(v5 - 112) = v25;
    v26 = *(_QWORD *)(v5 - 264);
    *(_QWORD *)(v5 - 104) = v23;
    *(_QWORD *)(v5 - 96) = v26;
    type metadata accessor for SnidgetHarnessPluginView.ViewModel();
  }
  v16 = *(_QWORD *)(v5 - 304);
  sub_2321FF208();
  v17 = (uint64_t (*)(uint64_t))MEMORY[0x24BE43908];
  *(_BYTE *)(v5 - 65) = 0;
  sub_232000590(&qword_2541B0EE0, v17, MEMORY[0x24BE42DA8]);
  v18 = *(_QWORD *)(v5 - 296);
  sub_232201A40();
  v28 = *(_QWORD *)(v5 - 184);
  *(_QWORD *)(v28 + 16) = *(_QWORD *)(v5 - 152);
  *(_BYTE *)(v5 - 152) = 1;
  sub_232201A10();
  v29 = *(_QWORD *)(v5 - 192);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v5 - 216) + 40))(v29, v16, *(_QWORD *)(v5 - 208));
  swift_endAccess();
  *(_BYTE *)(v5 - 152) = 2;
  v30 = *(_QWORD *)(v5 - 320);
  sub_232201A10();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v18);
  v31 = *(_QWORD *)(v5 - 224);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v5 - 240) + 40))(v31, v30, *(_QWORD *)(v5 - 232));
  swift_endAccess();
  sub_232016AFC(*(_QWORD *)(v5 - 160));
  return v28;
}

void sub_23205ECAC()
{
  type metadata accessor for SnidgetHarnessPluginView.ViewModel();
}

uint64_t sub_23205ECE4()
{
  uint64_t *v0;
  uint64_t result;

  result = sub_23220063C();
  *v0 = result;
  return result;
}

uint64_t sub_23205ED04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2348FF39C](&unk_232212274, a3);
  return sub_2321FF0C4();
}

uint64_t sub_23205ED6C(uint64_t a1)
{
  MEMORY[0x2348FF39C](&unk_232212274, a1);
  return sub_2321FF0B8();
}

uint64_t sub_23205EDAC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23205E760(a1);
  if (!v2)
    *a2 = result;
  return result;
}

void sub_23205EDD4()
{
  sub_23205E3D8();
}

void sub_23205EDF4()
{
  type metadata accessor for SnidgetHarnessPluginView.ViewModel();
}

uint64_t sub_23205EE28(uint64_t a1)
{
  MEMORY[0x2348FF39C](&unk_2322122AC, a1);
  return sub_232200900();
}

void sub_23205EE5C(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_2321FF664();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
  type metadata accessor for SnidgetHarnessPluginView();
}

void sub_23205EEEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  *(_QWORD *)(v1 + *(int *)(a1 + 92)) = 0;
  v2 = (uint64_t *)(v1 + *(int *)(a1 + 96));
  sub_2321FEF20();
  sub_232000590(&qword_2541B1200, (uint64_t (*)(uint64_t))MEMORY[0x24BE42FA0], MEMORY[0x24BE42F98]);
  *v2 = sub_2322009A8();
  v2[1] = v3;
  type metadata accessor for SnidgetHarnessPluginView.ViewModel();
}

void sub_23205EF64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;

  sub_2321FEE0C();
  v2 = sub_2321FEE00();
  v3 = (uint64_t *)(v0 + *(int *)(v1 + 84));
  *v3 = v2;
  v3[1] = v4;
  sub_2321FEDDC();
  sub_23205EDF4();
}

uint64_t sub_23205EFA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  *v5 = a1;
  v5[1] = a2;
  sub_2321FEDE8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  result = swift_release();
  *(_QWORD *)(v2 + v7) = v8;
  return result;
}

uint64_t sub_23205EFF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  __int128 v21;
  void (*v22)(char *, char *, uint64_t);
  void (*v23)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  _QWORD v39[6];
  _QWORD v40[2];
  uint64_t v41;

  v31 = a3;
  sub_2320626CC(255, a2);
  v29 = *(_QWORD *)(a1 + 16);
  sub_2322016F8();
  v28 = *(_QWORD *)(a1 + 24);
  v4 = sub_2322016F8();
  v5 = sub_232200924();
  v6 = *(_QWORD *)(a1 + 40);
  v41 = *(_QWORD *)(v6 + 8);
  v40[0] = MEMORY[0x2348FF39C](MEMORY[0x24BDF5578], v4, &v41);
  v40[1] = MEMORY[0x24BDEDBB8];
  v7 = MEMORY[0x2348FF39C](MEMORY[0x24BDED308], v5, v40);
  v39[2] = v5;
  v39[3] = MEMORY[0x24BEE0D00];
  v39[4] = v7;
  v39[5] = MEMORY[0x24BEE0D10];
  sub_232200C18();
  swift_getTupleTypeMetadata3();
  v8 = sub_232200CC0();
  v9 = MEMORY[0x24BDF5428];
  MEMORY[0x2348FF39C](MEMORY[0x24BDF5428], v8);
  sub_232200C0C();
  swift_getTupleTypeMetadata3();
  v10 = sub_232200CC0();
  MEMORY[0x2348FF39C](v9, v10);
  v11 = sub_232200C54();
  v27 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v26 - v12;
  v14 = sub_232200924();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v26 - v19;
  sub_232200A5C();
  v32 = v29;
  v33 = v28;
  v34 = *(_QWORD *)(a1 + 32);
  v35 = v6;
  v21 = *(_OWORD *)(a1 + 64);
  v36 = *(_OWORD *)(a1 + 48);
  v37 = v21;
  v38 = v30;
  sub_232200C48();
  sub_2321FDE34();
  sub_232200C9C();
  v25 = MEMORY[0x2348FF39C](MEMORY[0x24BDF4700], v11);
  sub_232200B64();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v11);
  v39[0] = v25;
  v39[1] = MEMORY[0x24BDEDBB8];
  MEMORY[0x2348FF39C](MEMORY[0x24BDED308], v14, v39);
  v22 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  v22(v20, v18, v14);
  v23 = *(void (**)(char *, uint64_t))(v15 + 8);
  v23(v18, v14);
  v22(v31, v20, v14);
  return ((uint64_t (*)(char *, uint64_t))v23)(v20, v14);
}

void sub_23205F384(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[5];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[2];
  uint64_t v48;

  v31 = a8;
  v38 = a7;
  v34 = a6;
  v37 = a4;
  v33 = a2;
  v35 = a1;
  v32 = a9;
  v36 = a10;
  sub_2322016F8();
  v23[2] = a3;
  v12 = sub_2322016F8();
  v13 = sub_232200924();
  v14 = *(_QWORD *)(a5 + 8);
  v23[3] = a5;
  v48 = v14;
  v47[0] = MEMORY[0x2348FF39C](MEMORY[0x24BDF5578], v12, &v48);
  v47[1] = MEMORY[0x24BDEDBB8];
  v15 = MEMORY[0x2348FF39C](MEMORY[0x24BDED308], v13, v47);
  v39 = v13;
  v40 = MEMORY[0x24BEE0D00];
  v41 = v15;
  v42 = MEMORY[0x24BEE0D10];
  sub_232200C18();
  swift_getTupleTypeMetadata3();
  v29 = sub_232200CC0();
  v28 = MEMORY[0x2348FF39C](MEMORY[0x24BDF5428], v29);
  v16 = sub_232200C0C();
  v30 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  MEMORY[0x24BDAC7A8](v17);
  v27 = (char *)v23 - v18;
  v26 = sub_2321FEDA0();
  v25 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v24 = sub_2321FF220();
  MEMORY[0x24BDAC7A8](v24);
  sub_2320626CC(0, v19);
  v23[4] = *(_QWORD *)(v20 - 8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  MEMORY[0x24BDAC7A8](v21);
  v23[1] = (char *)v23 - v22;
  v39 = v33;
  v40 = a3;
  v41 = v37;
  v42 = a5;
  v43 = v34;
  v44 = v38;
  v45 = v31;
  v46 = v36;
  type metadata accessor for SnidgetHarnessPluginView();
}

uint64_t sub_23205F680(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t OpaqueTypeConformance2;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);

  swift_retain();
  sub_2321FF214();
  sub_232062738(a1);
  swift_retain();
  sub_2321FEEFC();
  swift_release();
  sub_2321FF1F0();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 448) + 8))(v2, *(_QWORD *)(v9 - 440));
  (*(void (**)(uint64_t, _QWORD))(v7 + 8))(v4, *(_QWORD *)(v9 - 456));
  v11 = *(_QWORD *)(v9 - 464);
  v12 = *(_QWORD *)(v9 - 488);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v12, v8, v5);
  sub_232200A20();
  *(_QWORD *)(v9 - 320) = *(_QWORD *)(v9 - 384);
  *(_QWORD *)(v9 - 312) = *(_QWORD *)(v9 - 480);
  *(_QWORD *)(v9 - 304) = *(_QWORD *)(v9 - 352);
  *(_QWORD *)(v9 - 296) = *(_QWORD *)(v9 - 472);
  *(_QWORD *)(v9 - 288) = *(_QWORD *)(v9 - 376);
  *(_QWORD *)(v9 - 280) = *(_QWORD *)(v9 - 344);
  *(_QWORD *)(v9 - 272) = v6;
  *(_QWORD *)(v9 - 264) = *(_QWORD *)(v9 - 360);
  *(_QWORD *)(v9 - 256) = *(_QWORD *)(v9 - 368);
  sub_232200C00();
  v13 = MEMORY[0x2348FF39C](MEMORY[0x24BDF4498], v3);
  v14 = *(_QWORD *)(v9 - 408);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  v16 = *(_QWORD *)(v9 - 432);
  v15(v16, v1, v3);
  v17 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v17(v1, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v8, v12, v5);
  *(_QWORD *)(v9 - 192) = 0x4037000000000000;
  *(_BYTE *)(v9 - 184) = 0;
  *(_QWORD *)(v9 - 176) = v8;
  *(_QWORD *)(v9 - 168) = v9 - 192;
  v15(v1, v16, v3);
  *(_QWORD *)(v9 - 160) = v1;
  *(_QWORD *)(v9 - 216) = v5;
  *(_QWORD *)(v9 - 208) = MEMORY[0x24BDF4638];
  *(_QWORD *)(v9 - 200) = v3;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v19 = MEMORY[0x24BDF4610];
  *(_QWORD *)(v9 - 240) = OpaqueTypeConformance2;
  *(_QWORD *)(v9 - 232) = v19;
  *(_QWORD *)(v9 - 224) = v13;
  sub_23205DD20((uint64_t *)(v9 - 176), 3uLL, v9 - 216);
  v17(v16, v3);
  v20 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v20(v12, v5);
  v17(v1, v3);
  return ((uint64_t (*)(uint64_t, uint64_t))v20)(v8, v5);
}

void sub_23205F904(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[8];
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[2];
  uint64_t v67;

  v55 = a7;
  v56 = a8;
  v54 = a6;
  v33 = a1;
  v50 = a9;
  v53 = a10;
  swift_getAssociatedTypeWitness();
  v14 = sub_2322016F8();
  v40 = *(_QWORD *)(v14 - 8);
  v41 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v38 = (char *)v31 - v15;
  v16 = a3;
  v17 = sub_2322016F8();
  v48 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v39 = (char *)v31 - v18;
  v36 = v17;
  v19 = sub_232200924();
  v49 = *(_QWORD *)(v19 - 8);
  v45 = v19;
  MEMORY[0x24BDAC7A8](v19);
  v43 = (char *)v31 - v20;
  v67 = *(_QWORD *)(a5 + 8);
  v35 = MEMORY[0x2348FF39C](MEMORY[0x24BDF5578], v17, &v67);
  v66[0] = v35;
  v66[1] = MEMORY[0x24BDEDBB8];
  v44 = MEMORY[0x2348FF39C](MEMORY[0x24BDED308], v19, v66);
  v58 = v19;
  v59 = MEMORY[0x24BEE0D00];
  v60 = v44;
  v61 = MEMORY[0x24BEE0D10];
  v21 = sub_232200C18();
  v22 = *(_QWORD *)(v21 - 8);
  v46 = v21;
  v47 = v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v37 = (char *)v31 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v42 = (char *)v31 - v25;
  v31[1] = a4;
  swift_getAssociatedTypeWitness();
  v32 = sub_2322016F8();
  v51 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v31[0] = a2;
  v52 = sub_2322016F8();
  v31[6] = *(_QWORD *)(v52 - 8);
  v26 = MEMORY[0x24BDAC7A8](v52);
  v34 = (char *)v31 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v31[2] = (char *)v31 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v57 = (char *)v31 - v30;
  v58 = a2;
  v59 = v16;
  v31[3] = v16;
  v60 = a4;
  v61 = a5;
  v31[5] = a5;
  v62 = v54;
  v63 = v55;
  v64 = v56;
  v65 = v53;
  type metadata accessor for SnidgetHarnessPluginView();
}

uint64_t sub_23205FC1C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t);

  v1[4] = a1;
  v10 = v1[9];
  v11 = *(_QWORD *)(v10 + *(int *)(a1 + 88) + 8);
  v12 = v11 + *(_QWORD *)(*(_QWORD *)v11 + 152);
  swift_beginAccess();
  v13 = v12;
  v14 = v1[8];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1[27] + 16))(v3, v13, v14);
  v15 = *v1;
  v1[48] = *v1;
  v1[49] = v6;
  v16 = v1[1];
  v1[50] = v16;
  v1[51] = v2;
  v1[52] = v7;
  v1[53] = v5;
  v1[54] = v8;
  v1[55] = v4;
  v1[56] = v10;
  v17 = v1[2];
  v18 = v15;
  sub_23205DB78((void (*)(char *, char *))sub_2320627E4, (uint64_t)(v1 + 46), MEMORY[0x24BEE4078], v15, v19, v17);
  (*(void (**)(uint64_t, uint64_t))(v1[27] + 8))(v3, v14);
  v20 = v16;
  *(_QWORD *)(v9 - 192) = *(_QWORD *)(v16 + 8);
  v21 = v1[28];
  v22 = MEMORY[0x2348FF39C](MEMORY[0x24BDF5578], v21, v9 - 192);
  v23 = v1[6];
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16);
  v1[7] = (uint64_t)v24;
  v1[8] = v22;
  v24(v1[33], v17, v21);
  v25 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v1[27] = (uint64_t)v25;
  v25(v17, v21);
  v26 = v1[4];
  v27 = *(_QWORD *)(v10 + *(int *)(v26 + 88) + 8);
  v28 = v27 + *(_QWORD *)(*(_QWORD *)v27 + 160);
  swift_beginAccess();
  v29 = v1[16];
  v30 = v1[14];
  v31 = v28;
  v32 = v1[17];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v30, v31, v32);
  v33 = v1[3];
  v1[36] = v18;
  v1[37] = v33;
  v34 = v1[5];
  v1[38] = v20;
  v1[39] = v34;
  v35 = v1[31];
  v1[40] = v1[30];
  v1[41] = v35;
  v36 = v1[29];
  v1[42] = v1[32];
  v1[43] = v36;
  v1[44] = v10;
  v37 = v1[15];
  sub_23205DB78((void (*)(char *, char *))sub_232062800, (uint64_t)(v1 + 34), MEMORY[0x24BEE4078], v33, v38, v37);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v30, v32);
  sub_232200C9C();
  v39 = v1[12];
  v40 = v1[19];
  sub_232200B64();
  (*(void (**)(uint64_t, uint64_t))(v1[24] + 8))(v37, v39);
  v41 = (uint64_t *)(v10 + *(int *)(v26 + 84));
  v43 = *v41;
  v42 = v41[1];
  *(_QWORD *)(v9 - 240) = v43;
  *(_QWORD *)(v9 - 232) = v42;
  v44 = v1[13];
  v45 = v1[21];
  sub_232200B4C();
  (*(void (**)(uint64_t, uint64_t))(v1[25] + 8))(v40, v45);
  v46 = v1[22];
  v47 = MEMORY[0x2348FF39C](MEMORY[0x24BDF44C8], v46);
  v48 = v1[23];
  v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16);
  v50 = v1[18];
  v49(v50, v44, v46);
  v51 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
  v51(v44, v46);
  v52 = v1[10];
  v53 = v1[33];
  v54 = v1[28];
  ((void (*)(uint64_t, uint64_t, uint64_t))v1[7])(v52, v53, v54);
  *(_QWORD *)(v9 - 256) = 0;
  *(_BYTE *)(v9 - 248) = 1;
  *(_QWORD *)(v9 - 240) = v52;
  *(_QWORD *)(v9 - 232) = v9 - 256;
  v49(v44, v50, v46);
  *(_QWORD *)(v9 - 224) = v44;
  v55 = MEMORY[0x24BDF4638];
  v1[61] = v54;
  v1[62] = v55;
  v1[63] = v46;
  v56 = MEMORY[0x24BDF4610];
  v1[58] = v1[8];
  v1[59] = v56;
  v1[60] = v47;
  sub_23205DD20((uint64_t *)(v9 - 240), 3uLL, (uint64_t)(v1 + 61));
  v51(v50, v46);
  v57 = (void (*)(uint64_t, uint64_t))v1[27];
  v57(v53, v54);
  v51(v44, v46);
  return ((uint64_t (*)(uint64_t, uint64_t))v57)(v52, v54);
}

void sub_23205FFD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_getAssociatedTypeWitness();
  v0 = sub_2322016F8();
  v1 = MEMORY[0x24BDAC7A8](v0);
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_2321FEE0C();
  MEMORY[0x24BDAC7A8](v2);
  type metadata accessor for SnidgetHarnessPluginView();
}

uint64_t sub_232060100(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v6 - 176) = *(_QWORD *)(v5 + *(int *)(a1 + 84));
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 16))(v4, *(_QWORD *)(v6 - 168), v2);
  v8 = *(_QWORD *)(v5 + *(int *)(a1 + 92));
  if (v8)
  {
    v9 = v8 + *(_QWORD *)(*(_QWORD *)v8 + 152);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v6 - 216) + 16))(v3, v9, *(_QWORD *)(v6 - 208));
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56))(v3, 1, 1, v2);
  }
  swift_bridgeObjectRetain();
  sub_2321FEDF4();
  return sub_2321FEE90();
}

void sub_2320601DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_getAssociatedTypeWitness();
  v0 = sub_2322016F8();
  v1 = MEMORY[0x24BDAC7A8](v0);
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_2321FEE0C();
  MEMORY[0x24BDAC7A8](v2);
  type metadata accessor for SnidgetHarnessPluginView();
}

uint64_t sub_232060314(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v6 - 176) = *(_QWORD *)(v5 + *(int *)(a1 + 84));
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 16))(v4, *(_QWORD *)(v6 - 168), v2);
  v8 = *(_QWORD *)(v5 + *(int *)(a1 + 92));
  if (v8)
  {
    v9 = v8 + *(_QWORD *)(*(_QWORD *)v8 + 160);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v6 - 216) + 16))(v3, v9, *(_QWORD *)(v6 - 208));
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56))(v3, 1, 1, v2);
  }
  swift_bridgeObjectRetain();
  sub_2321FEDF4();
  return sub_2321FEE90();
}

BOOL sub_2320603F0(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_232060400()
{
  return sub_232201B84();
}

uint64_t sub_232060424(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000014 && a2 == 0x80000002322044C0 || (sub_232201ADC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000002322044E0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_232201ADC();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23206050C()
{
  sub_232201B78();
  sub_232201B84();
  return sub_232201B9C();
}

unint64_t sub_232060550(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000015;
  else
    return 0xD000000000000014;
}

BOOL sub_23206058C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2320603F0(*a1, *a2);
}

uint64_t sub_2320605CC()
{
  return sub_23206050C();
}

uint64_t sub_232060604()
{
  return sub_232060400();
}

uint64_t sub_23206063C()
{
  sub_232201B78();
  sub_232060400();
  return sub_232201B9C();
}

unint64_t sub_232060690()
{
  char *v0;

  return sub_232060550(*v0);
}

uint64_t sub_2320606C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _BYTE *a4@<X8>)
{
  return sub_2320606D4(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_232060424, a4);
}

uint64_t sub_2320606D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD)@<X4>, _BYTE *a5@<X8>)
{
  uint64_t result;

  result = a4(a1, a2, a3[2], a3[3], a3[4], a3[5], a3[6], a3[7], a3[8], a3[9]);
  *a5 = result;
  return result;
}

uint64_t sub_23206071C@<X0>(_QWORD *a1@<X1>, _BYTE *a2@<X8>)
{
  return sub_232060728(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_232062E00, a2);
}

uint64_t sub_232060728@<X0>(_QWORD *a1@<X1>, uint64_t (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD)@<X3>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = a2(a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9]);
  *a3 = result;
  return result;
}

uint64_t sub_232060764(uint64_t a1)
{
  MEMORY[0x2348FF39C](&unk_2322124D0, a1);
  return sub_232201BD8();
}

uint64_t sub_232060798(uint64_t a1)
{
  MEMORY[0x2348FF39C](&unk_2322124D0, a1);
  return sub_232201BE4();
}

uint64_t sub_2320607CC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_232016D88(v0 + qword_2541BF780, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
  return swift_deallocClassInstance();
}

void type metadata accessor for SnidgetHarnessPluginView.ActionHandlerData()
{
  JUMPOUT(0x2348FF2E8);
}

void sub_232060820()
{
  _QWORD *v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  char *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  v1 = (_OWORD *)*v0;
  sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v6 - v3;
  v4 = v1[6];
  v7 = v1[5];
  v8 = v4;
  v5 = v1[8];
  v9 = v1[7];
  v10 = v5;
  type metadata accessor for SnidgetHarnessPluginView.ActionHandlerData.CodingKeys();
}

uint64_t sub_2320608B8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;

  MEMORY[0x2348FF39C](&unk_2322124D0, a1);
  v4 = sub_232201AA0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v13 - v6;
  sub_232016AD8(v1, v1[3]);
  sub_232201BC0();
  *(_BYTE *)(v3 - 144) = 0;
  swift_bridgeObjectRetain();
  v8 = *(_QWORD *)(v3 - 152);
  sub_232201A70();
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v10 = v2 + qword_2541BF780;
    swift_beginAccess();
    v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878];
    v12 = *(_QWORD *)(v3 - 160);
    sub_232016080(v10, v12, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
    *(_BYTE *)(v3 - 65) = 1;
    sub_2321FD8B8();
    sub_232000590(&qword_2541B27E8, v11, MEMORY[0x24BDCB888]);
    sub_232201A64();
    sub_232016D88(v12, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_232060A74(uint64_t a1)
{
  return sub_232060A90(a1, (void (*)(uint64_t))sub_232060B20);
}

uint64_t sub_232060A90(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4;

  v4 = swift_allocObject();
  a2(a1);
  return v4;
}

uint64_t sub_232060AE0()
{
  return swift_initClassMetadata2();
}

void sub_232060B20()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[6];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = (_QWORD *)*v0;
  sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v11[0] = (char *)v11 - v3;
  v4 = v1[10];
  v5 = v1[12];
  v6 = v1[13];
  v7 = v1[14];
  v8 = v1[15];
  v9 = v1[16];
  v10 = v1[17];
  v12 = v1[11];
  v13 = v4;
  v16 = v4;
  v17 = v12;
  v11[4] = v6;
  v11[5] = v5;
  v18 = v5;
  v19 = v6;
  v11[2] = v8;
  v11[3] = v7;
  v20 = v7;
  v21 = v8;
  v14 = v10;
  v15 = v9;
  v22 = v9;
  v23 = v10;
  type metadata accessor for SnidgetHarnessPluginView.ActionHandlerData.CodingKeys();
}

uint64_t sub_232060BD4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  MEMORY[0x2348FF39C](&unk_2322124D0, a1);
  v4 = sub_232201A4C();
  *(_QWORD *)(v3 - 248) = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v29 - v6;
  v8 = qword_2541BF780;
  *(_QWORD *)(v3 - 168) = v1;
  v9 = v1 + v8;
  v10 = sub_2321FD8B8();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  *(_QWORD *)(v3 - 176) = v9;
  v11(v9, 1, 1, v10);
  v12 = v2[3];
  *(_QWORD *)(v3 - 160) = v2;
  sub_232016AD8(v2, v12);
  v13 = *(_QWORD *)(v3 - 72);
  sub_232201BB4();
  if (v13)
  {
    v19 = *(_QWORD *)(v3 - 208);
    v18 = *(_QWORD *)(v3 - 200);
    v21 = *(_QWORD *)(v3 - 224);
    v20 = *(_QWORD *)(v3 - 216);
    v23 = *(_QWORD *)(v3 - 240);
    v22 = *(_QWORD *)(v3 - 232);
    sub_232016D88(*(_QWORD *)(v3 - 176), &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
    *(_QWORD *)(v3 - 152) = v18;
    *(_QWORD *)(v3 - 144) = v19;
    *(_QWORD *)(v3 - 136) = v20;
    *(_QWORD *)(v3 - 128) = v21;
    *(_QWORD *)(v3 - 120) = v22;
    *(_QWORD *)(v3 - 112) = v23;
    v24 = *(_QWORD *)(v3 - 192);
    *(_QWORD *)(v3 - 104) = *(_QWORD *)(v3 - 184);
    *(_QWORD *)(v3 - 96) = v24;
    type metadata accessor for SnidgetHarnessPluginView.ActionHandlerData();
  }
  v14 = v5;
  v15 = *(_QWORD *)(v3 - 256);
  v16 = *(_QWORD *)(v3 - 248);
  *(_BYTE *)(v3 - 152) = 0;
  v17 = sub_232201A1C();
  v26 = *(_QWORD *)(v3 - 168);
  *(_QWORD *)(v26 + 16) = v17;
  *(_QWORD *)(v26 + 24) = v27;
  *(_BYTE *)(v3 - 152) = 1;
  sub_232000590(&qword_2541B11D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], MEMORY[0x24BDCB8A8]);
  sub_232201A10();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v7, v16);
  v28 = *(_QWORD *)(v3 - 176);
  swift_beginAccess();
  sub_2320628C8(v15, v28, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
  swift_endAccess();
  sub_232016AFC(*(_QWORD *)(v3 - 160));
  return v26;
}

uint64_t sub_232060E40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2348FF39C](&unk_2322121BC, a3);
  return sub_2321FF0C4();
}

uint64_t sub_232060EA8(uint64_t a1)
{
  MEMORY[0x2348FF39C](&unk_2322121BC, a1);
  return sub_2321FF0B8();
}

uint64_t sub_232060EE8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_232060A74(a1);
  if (!v2)
    *a2 = result;
  return result;
}

void sub_232060F10()
{
  sub_232060820();
}

uint64_t sub_232060F30()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  void (*v30)(_QWORD, _QWORD);
  unint64_t v31;
  unint64_t v32;
  char *v33;
  void (*v34)(_QWORD, _QWORD);
  __int128 v35;
  __int128 v36;
  __int128 v37;
  char *v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  _QWORD v43[13];
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;

  v52 = *v0;
  v1 = sub_23220039C();
  v54 = *(_QWORD *)(v1 - 8);
  v55 = v1;
  v2 = MEMORY[0x24BDAC7A8](v1);
  v43[11] = (char *)v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v53 = (char *)v43 - v4;
  v51 = sub_2321FF40C();
  v49 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v48 = (char *)v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_2321FF244();
  v47 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v46 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_2321FED4C();
  MEMORY[0x24BDAC7A8](v44);
  v45 = (char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v9);
  v43[12] = (char *)v43 - v10;
  sub_2320057B8(0, &qword_2541B0ED8, (uint64_t (*)(uint64_t))MEMORY[0x24BE42678], v8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v43 - v12;
  v14 = sub_2321FF664();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)v43 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)v43 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)v43 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)v43 - v28;
  sub_2321FF484();
  sub_2321FF640();
  v30 = *(void (**)(_QWORD, _QWORD))(v15 + 8);
  v32 = v31;
  v33 = v29;
  v34 = v30;
  v30(v33, v14);
  if (v32 >> 60 != 15)
  {
    v43[5] = v13;
    v43[6] = v27;
    v43[7] = v24;
    v43[8] = v21;
    v43[9] = v34;
    v43[4] = v18;
    v43[10] = v14;
    sub_2321FD7F8();
    swift_allocObject();
    sub_2321FD7EC();
    v35 = *(_OWORD *)(v52 + qword_2541BF768 + 16);
    v36 = *(_OWORD *)(v52 + qword_2541BF768 + 32);
    v37 = *(_OWORD *)(v52 + qword_2541BF768 + 48);
    v56 = *(_OWORD *)(v52 + qword_2541BF768);
    v57 = v35;
    v58 = v36;
    v59 = v37;
    type metadata accessor for SnidgetHarnessPluginView.ActionHandlerData();
  }
  v38 = v53;
  sub_23220033C();
  v39 = sub_232200390();
  v40 = sub_2322012E4();
  if (os_log_type_enabled(v39, v40))
  {
    v41 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v41 = 0;
    _os_log_impl(&dword_231FFB000, v39, v40, "SnidgetActionHandler: unable to read object type", v41, 2u);
    MEMORY[0x2348FF468](v41, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v38, v55);
}

uint64_t sub_232061B2C(uint64_t a1)
{
  swift_allocObject();
  return sub_232061B64(a1);
}

uint64_t sub_232061B64(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_2321FF664();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v5 = sub_2321FF490();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v5;
}

uint64_t sub_232061C00()
{
  _s9Summaries29SummaryTrendViewActionHandlerCfd_0();
  return swift_deallocClassInstance();
}

void type metadata accessor for SnidgetHarnessPluginView.ActionHandler()
{
  JUMPOUT(0x2348FF2E8);
}

uint64_t sub_232061C28()
{
  return swift_allocateGenericValueMetadata();
}

void sub_232061C30()
{
  unint64_t v0;

  sub_2320057B8(319, &qword_2541B7630, (uint64_t (*)(uint64_t))MEMORY[0x24BE44980], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

char *sub_232061CD0(char *a1, uint64_t *a2, int *a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    v4 = (char *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_2321FF664();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_2320057B8(0, &qword_2541B7630, (uint64_t (*)(uint64_t))MEMORY[0x24BE44980], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v4, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))(v4, a2, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
    }
    v11 = a3[21];
    v12 = a3[22];
    v13 = &v4[v11];
    v14 = (uint64_t *)((char *)a2 + v11);
    v15 = v14[1];
    *(_QWORD *)v13 = *v14;
    *((_QWORD *)v13 + 1) = v15;
    v16 = &v4[v12];
    v17 = (uint64_t *)((char *)a2 + v12);
    v18 = v17[1];
    *(_QWORD *)v16 = *v17;
    *((_QWORD *)v16 + 1) = v18;
    v19 = a3[24];
    *(_QWORD *)&v4[a3[23]] = *(uint64_t *)((char *)a2 + a3[23]);
    v20 = &v4[v19];
    v21 = (uint64_t *)((char *)a2 + v19);
    v23 = *v21;
    v22 = v21[1];
    *(_QWORD *)v20 = v23;
    *((_QWORD *)v20 + 1) = v22;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_232061E18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_2321FF664();
  v3 = *(_QWORD *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_release();
}

char *sub_232061EAC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_2321FF664();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_2320057B8(0, &qword_2541B7630, (uint64_t (*)(uint64_t))MEMORY[0x24BE44980], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[21];
  v10 = a3[22];
  v11 = &a1[v9];
  v12 = &a2[v9];
  v13 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = v13;
  v14 = &a1[v10];
  v15 = &a2[v10];
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = v16;
  v17 = a3[24];
  *(_QWORD *)&a1[a3[23]] = *(_QWORD *)&a2[a3[23]];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v21 = *(_QWORD *)v19;
  v20 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = v21;
  *((_QWORD *)v18 + 1) = v20;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

char *sub_232061FCC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;

  v6 = sub_2321FF664();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_2320057B8(0, &qword_2541B7630, (uint64_t (*)(uint64_t))MEMORY[0x24BE44980], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = a3[21];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a3[22];
  v16 = &a1[v15];
  v17 = &a2[v15];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
  swift_retain();
  swift_release();
  *(_QWORD *)&a1[a3[23]] = *(_QWORD *)&a2[a3[23]];
  swift_retain();
  swift_release();
  v18 = a3[24];
  v19 = &a1[v18];
  v20 = &a2[v18];
  *(_QWORD *)&a1[v18] = *(_QWORD *)&a2[v18];
  swift_retain();
  swift_release();
  *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
  return a1;
}

char *sub_23206217C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_2321FF664();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_2320057B8(0, &qword_2541B7630, (uint64_t (*)(uint64_t))MEMORY[0x24BE44980], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[22];
  *(_OWORD *)&a1[a3[21]] = *(_OWORD *)&a2[a3[21]];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  v10 = a3[24];
  *(_QWORD *)&a1[a3[23]] = *(_QWORD *)&a2[a3[23]];
  *(_OWORD *)&a1[v10] = *(_OWORD *)&a2[v10];
  return a1;
}

char *sub_232062268(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;

  v6 = sub_2321FF664();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_2320057B8(0, &qword_2541B7630, (uint64_t (*)(uint64_t))MEMORY[0x24BE44980], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = a3[21];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v16 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = v16;
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  v17 = a3[22];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v21 = *(_QWORD *)v19;
  v20 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = v21;
  *((_QWORD *)v18 + 1) = v20;
  swift_release();
  *(_QWORD *)&a1[a3[23]] = *(_QWORD *)&a2[a3[23]];
  swift_release();
  v22 = a3[24];
  v23 = &a1[v22];
  v24 = &a2[v22];
  *(_QWORD *)&a1[v22] = *(_QWORD *)v24;
  swift_release();
  *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
  return a1;
}

uint64_t sub_2320623E8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2320623F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  sub_2320057B8(0, &qword_2541B7630, (uint64_t (*)(uint64_t))MEMORY[0x24BE44980], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 84) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23206248C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_232062498(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  sub_2320057B8(0, &qword_2541B7630, (uint64_t (*)(uint64_t))MEMORY[0x24BE44980], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, v8);
  else
    *(_QWORD *)(a1 + *(int *)(a4 + 84) + 8) = (a2 - 1);
}

void type metadata accessor for SnidgetHarnessPluginView()
{
  JUMPOUT(0x2348FF2E8);
}

uint64_t sub_232062538()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_232062584(uint64_t a1@<X8>)
{
  sub_23205EE5C(a1);
}

uint64_t sub_2320625B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_232016080(v1, a1, &qword_2541B7630, (uint64_t (*)(uint64_t))MEMORY[0x24BE44980]);
}

uint64_t sub_2320625E4(uint64_t a1)
{
  uint64_t v1;

  return sub_2320628C8(a1, v1, &qword_2541B7630, (uint64_t (*)(uint64_t))MEMORY[0x24BE44980]);
}

uint64_t (*sub_23206260C())()
{
  return nullsub_1;
}

void sub_232062620()
{
  JUMPOUT(0x2348FF39CLL);
}

void sub_232062630()
{
  JUMPOUT(0x2348FF39CLL);
}

void sub_232062640()
{
  JUMPOUT(0x2348FF39CLL);
}

void sub_232062650()
{
  JUMPOUT(0x2348FF39CLL);
}

void sub_232062660()
{
  JUMPOUT(0x2348FF39CLL);
}

void sub_232062670()
{
  JUMPOUT(0x2348FF39CLL);
}

void sub_232062680()
{
  JUMPOUT(0x2348FF39CLL);
}

void sub_232062690()
{
  JUMPOUT(0x2348FF39CLL);
}

void sub_2320626A0()
{
  JUMPOUT(0x2348FF39CLL);
}

void sub_2320626B0()
{
  JUMPOUT(0x2348FF39CLL);
}

uint64_t sub_2320626C0()
{
  return MEMORY[0x24BDB9D70];
}

void sub_2320626CC(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;

  if (!qword_2541B1220)
  {
    v2 = MEMORY[0x2348FF33C](0, a2, MEMORY[0x24BE438E8], 0);
    if (!v3)
      atomic_store(v2, (unint64_t *)&qword_2541B1220);
  }
}

void sub_232062724()
{
  sub_2320627AC((void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23205F384);
}

uint64_t sub_232062730()
{
  return 3;
}

uint64_t sub_232062738(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = *(_QWORD *)(v1 + *(int *)(a1 + 96));
  if (!result)
  {
    sub_2321FEF20();
    sub_232000590(&qword_2541B1200, (uint64_t (*)(uint64_t))MEMORY[0x24BE42FA0], MEMORY[0x24BE42F98]);
    result = sub_23220099C();
    __break(1u);
  }
  return result;
}

void sub_2320627A0()
{
  sub_2320627AC((void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23205F904);
}

void sub_2320627AC(void (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  a1(v1[10], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9]);
  JUMPOUT(0x2320627D8);
}

uint64_t sub_2320627E4(uint64_t a1, uint64_t a2)
{
  return sub_23206281C(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23205FFD4);
}

uint64_t sub_232062800(uint64_t a1, uint64_t a2)
{
  return sub_23206281C(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_2320601DC);
}

uint64_t sub_23206281C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))
{
  _QWORD *v3;

  return a3(a1, v3[10], v3[2], v3[3], v3[4], v3[5], v3[6], v3[7], v3[8], v3[9], a2);
}

unint64_t sub_23206285C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B13C8;
  if (!qword_2541B13C8)
  {
    sub_2320057B8(255, &qword_2541B13C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE42510], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2541B13C8);
  }
  return result;
}

void type metadata accessor for SnidgetHarnessPluginView.ActionHandlerData.CodingKeys()
{
  JUMPOUT(0x2348FF2E8);
}

uint64_t sub_2320628C8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;

  sub_2320057B8(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a2, a1, v6);
  return a2;
}

void type metadata accessor for SnidgetHarnessPluginView.ViewModel.CodingKeys()
{
  JUMPOUT(0x2348FF2E8);
}

uint64_t sub_23206292C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t getEnumTagSinglePayload for SummariesPromotionGeneratorPipeline.FitnessPromotionType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_2320629C4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_232062A10 + 4 * byte_232211E85[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_232062A44 + 4 * byte_232211E80[v4]))();
}

uint64_t sub_232062A44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232062A4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232062A54);
  return result;
}

uint64_t sub_232062A60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232062A68);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_232062A6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232062A74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for SummaryModelConfiguration.Audience(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_232062B10(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_232062B5C + 4 * byte_232211E8F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_232062B90 + 4 * byte_232211E8A[v4]))();
}

uint64_t sub_232062B90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232062B98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232062BA0);
  return result;
}

uint64_t sub_232062BAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232062BB4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_232062BB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232062BC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_232062BCC(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

uint64_t sub_232062BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[6];
  _QWORD v16[2];
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 24);
  sub_2320626CC(255, a2);
  sub_2322016F8();
  v3 = sub_2322016F8();
  v4 = sub_232200924();
  v17 = *(_QWORD *)(v2 + 8);
  v5 = MEMORY[0x2348FF39C](MEMORY[0x24BDF5578], v3, &v17);
  v6 = MEMORY[0x24BDEDBB8];
  v16[0] = v5;
  v16[1] = MEMORY[0x24BDEDBB8];
  v7 = MEMORY[0x24BDED308];
  v8 = MEMORY[0x2348FF39C](MEMORY[0x24BDED308], v4, v16);
  v15[2] = v4;
  v15[3] = MEMORY[0x24BEE0D00];
  v15[4] = v8;
  v15[5] = MEMORY[0x24BEE0D10];
  sub_232200C18();
  swift_getTupleTypeMetadata3();
  v9 = sub_232200CC0();
  v10 = MEMORY[0x24BDF5428];
  MEMORY[0x2348FF39C](MEMORY[0x24BDF5428], v9);
  sub_232200C0C();
  swift_getTupleTypeMetadata3();
  v11 = sub_232200CC0();
  MEMORY[0x2348FF39C](v10, v11);
  v12 = sub_232200C54();
  v13 = sub_232200924();
  v15[0] = MEMORY[0x2348FF39C](MEMORY[0x24BDF4700], v12);
  v15[1] = v6;
  return MEMORY[0x2348FF39C](v7, v13, v15);
}

void sub_232062DA0()
{
  JUMPOUT(0x2348FF39CLL);
}

void sub_232062DB0()
{
  JUMPOUT(0x2348FF39CLL);
}

void sub_232062DC0()
{
  JUMPOUT(0x2348FF39CLL);
}

void sub_232062DD0()
{
  JUMPOUT(0x2348FF39CLL);
}

void sub_232062DE0()
{
  JUMPOUT(0x2348FF39CLL);
}

void sub_232062DF0()
{
  JUMPOUT(0x2348FF39CLL);
}

uint64_t sub_232062E00()
{
  return 2;
}

uint64_t sub_232062E0C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_232062E18(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_232062E94()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_232062EA0(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider()
{
  uint64_t result;

  result = qword_2541B2610;
  if (!qword_2541B2610)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_232062F5C(uint64_t a1)
{
  uint64_t result;

  result = sub_232000590(&qword_2541B6F00, (uint64_t (*)(uint64_t))type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider, (uint64_t)&unk_232212578);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_232062F98()
{
  return sub_232063000(&qword_2541B73F0, &qword_2541B73F8, (uint64_t (*)(uint64_t, _QWORD *))type metadata accessor for SnidgetHarnessPluginView.ActionHandler, (uint64_t)&unk_2322120D8);
}

uint64_t sub_232062FCC()
{
  return sub_232063000(&qword_2541B3668, &qword_2541B3670, (uint64_t (*)(uint64_t, _QWORD *))type metadata accessor for SnidgetHarnessPluginView, (uint64_t)&unk_232212090);
}

uint64_t sub_232063000(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_232063040(255, a2, a3);
    result = MEMORY[0x2348FF39C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_232063040(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD v9[8];

  if (!*a2)
  {
    sub_231FFFDE4(255, &qword_2541B2998, MEMORY[0x24BE43750]);
    v9[0] = v6;
    v9[1] = &type metadata for CardioFitnessSnidgetVisualizationView;
    v9[2] = sub_23200409C();
    v9[3] = sub_232044B9C();
    v9[4] = sub_231FFFE84(&qword_2541B2970, MEMORY[0x24BE43748]);
    v9[5] = sub_231FFFE84((unint64_t *)&unk_2541B2960, MEMORY[0x24BE43740]);
    v9[6] = sub_232044BE0();
    v9[7] = sub_232044C24();
    v7 = a3(a1, v9);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_232063130(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  int v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;
  uint64_t *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  unint64_t v53;
  id v54;
  void *v55;
  char v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  id v60;
  id v61;
  uint64_t v62;
  unint64_t v63;
  id v64;
  _BYTE *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  char *v70;
  id v71;
  uint64_t *v72;
  void *v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  void *v79;

  v72 = a4;
  v5 = (uint64_t)v4;
  v74 = a1;
  v75 = a3;
  v71 = a2;
  v67 = type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider();
  MEMORY[0x24BDAC7A8](v67);
  v68 = (uint64_t *)((char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_23220039C();
  v69 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v70 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, &qword_2541B2930, (void (*)(uint64_t))MEMORY[0x24BE42FE0]);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v66 - v10;
  sub_2320002B4(0, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v66 - v13;
  sub_2320002B4(0, qword_2541B78E0, (void (*)(uint64_t))MEMORY[0x24BE47DF8]);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v66 - v16;
  v18 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = objc_msgSend((id)objc_opt_self(), sel_sharedInstanceForHealthStore_, *v4);
  if (!v21)
  {
    __break(1u);
    return;
  }
  v22 = v21;
  sub_232003E9C(0, (unint64_t *)&qword_2541B0C28);
  v23 = (void *)MEMORY[0x2348FE4B4]((id)*MEMORY[0x24BDD36A0]);
  v24 = objc_msgSend(v22, sel_displayTypeForObjectType_, v23);

  v73 = v24;
  if (!v24)
  {
    sub_232000300();
    swift_allocError();
    swift_willThrow();
    return;
  }
  v25 = v74;
  if (!objc_msgSend(v74, sel_hasKindRawValue))
    goto LABEL_10;
  v26 = objc_msgSend(v25, sel_kindRawValue);
  v66 = v7;
  if (v26)
  {
    v27 = v26;
    sub_232200EC4();

    v28 = _sSo28HKCodableSummaryCurrentValueC9SummariesE4KindO03rawD0AESgSS_tcfC_0();
    if (v28 == 7)
    {
      v29 = v73;
      sub_232064714(v73, v25, v75, v72);
      goto LABEL_16;
    }
    if (v28 != 11)
    {
      if (v28 == 14)
      {
        v29 = v73;
        sub_2320638F8(v73, v25, (uint64_t)v71, v75, v72);
LABEL_16:

        return;
      }
      goto LABEL_11;
    }
LABEL_10:
    v30 = sub_2321FE65C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v17, 1, 1, v30);
    v31 = sub_2321FD8B8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v14, 1, 1, v31);
    v32 = v75;
    swift_bridgeObjectRetain();
    sub_2320D71E8(0, (uint64_t)v17, v32, (uint64_t)v14, v20);
    sub_2321FF208();
    v33 = sub_2321FEF5C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v11, 1, 1, v33);
    v34 = v73;
    v35 = sub_2321FF1FC();
    sub_232044A00(0);
    v37 = v72;
    sub_23200054C((uint64_t)v20, (uint64_t)v72 + *(int *)(v36 + 52), type metadata accessor for SnidgetFeedItemMetadata);

    *v37 = v35;
    *(_OWORD *)(v37 + 1) = xmmword_2322116E0;
    v37[3] = 0;
    sub_232002CEC((uint64_t)v20, type metadata accessor for SnidgetFeedItemMetadata);
    return;
  }
LABEL_11:
  v38 = v70;
  sub_232200318();
  v39 = v68;
  sub_23200054C(v5, (uint64_t)v68, (uint64_t (*)(_QWORD))type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider);
  v40 = v71;
  swift_bridgeObjectRetain_n();
  v41 = v25;
  v42 = v40;
  v43 = v41;
  v44 = v42;
  v45 = v43;
  v46 = v44;
  v47 = v45;
  v48 = sub_232200390();
  v49 = sub_2322012E4();
  if (os_log_type_enabled(v48, v49))
  {
    v50 = swift_slowAlloc();
    v51 = (void *)swift_slowAlloc();
    v79 = v51;
    *(_DWORD *)v50 = 136315650;
    v52 = sub_232085230(*v39, *((unsigned __int8 *)v39 + *(int *)(v67 + 24) + 8));
    v76 = sub_232013174(v52, v53, (uint64_t *)&v79);
    sub_232201710();
    swift_bridgeObjectRelease();
    sub_232002CEC((uint64_t)v39, (uint64_t (*)(_QWORD))type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider);
    *(_WORD *)(v50 + 12) = 2080;
    v54 = objc_msgSend(v47, sel_kindRawValue);
    v74 = v51;
    if (v54)
    {
      v55 = v54;
      sub_232200EC4();

      v56 = _sSo28HKCodableSummaryCurrentValueC9SummariesE4KindO03rawD0AESgSS_tcfC_0();
    }
    else
    {
      v56 = 22;
    }
    LOBYTE(v76) = v56;
    sub_23204617C(0, &qword_2541B56A0);
    v57 = sub_232200F00();
    v76 = sub_232013174(v57, v58, (uint64_t *)&v79);
    sub_232201710();
    v59 = v75;
    swift_bridgeObjectRelease_n();

    swift_bridgeObjectRelease();
    *(_WORD *)(v50 + 22) = 2080;
    v76 = (uint64_t)v47;
    v77 = v71;
    v78 = v59;
    sub_232065854(0);
    v60 = v47;
    v61 = v46;
    swift_bridgeObjectRetain();
    v62 = sub_232200F00();
    v76 = sub_232013174(v62, v63, (uint64_t *)&v79);
    sub_232201710();
    swift_bridgeObjectRelease_n();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_231FFB000, v48, v49, "[%s]: unsupported model kind=%s on model=%s", (uint8_t *)v50, 0x20u);
    v64 = v74;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v64, -1, -1);
    MEMORY[0x2348FF468](v50, -1, -1);

    (*(void (**)(char *, uint64_t))(v69 + 8))(v70, v66);
  }
  else
  {
    sub_232002CEC((uint64_t)v39, (uint64_t (*)(_QWORD))type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider);

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v38, v66);
  }
  sub_232005578();
  swift_allocError();
  *v65 = 0;
  swift_willThrow();

}

void sub_2320638F8(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  objc_class *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t *v50;
  char *v51;
  uint64_t v52;
  _BYTE *v53;
  char *v54;
  id v55;
  void *v56;
  uint64_t v57;
  Class v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  id *inited;
  void *v63;
  id v64;
  objc_class *v65;
  id v66;
  id v67;
  uint64_t v68;
  objc_class *v69;
  void *v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  NSObject *v87;
  char *v88;
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t, uint64_t, uint64_t);
  void *v91;
  NSObject *v92;
  void (*v93)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  id v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(char *, uint64_t, uint64_t, uint64_t);
  char *v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  id v112;
  id v113;
  void *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  id v118;
  id v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t *v126;
  _BYTE *v127;
  uint64_t v128;
  id *v129;
  id v130;
  uint64_t v131;
  char *v132;
  char *v133;
  char *v134;
  char *v135;
  char *v136;
  objc_class *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  char *v141;
  char *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  char *v155;
  void *v156;
  uint64_t *v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  void *v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;

  v161 = a2;
  v157 = a5;
  v158 = a4;
  v149 = a3;
  v156 = a1;
  v5 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x24BDAC7A8](v5);
  v155 = (char *)&v129 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, qword_2541B78E0, (void (*)(uint64_t))MEMORY[0x24BE47DF8]);
  MEMORY[0x24BDAC7A8](v7);
  v153 = (char *)&v129 - v8;
  sub_2320002B4(0, &qword_2541B2368, (void (*)(uint64_t))MEMORY[0x24BE445A8]);
  MEMORY[0x24BDAC7A8](v9);
  v141 = (char *)&v129 - v10;
  sub_2320002B4(0, &qword_2541B2930, (void (*)(uint64_t))MEMORY[0x24BE42FE0]);
  MEMORY[0x24BDAC7A8](v11);
  v159 = (char *)&v129 - v12;
  v152 = sub_2321FD8B8();
  v154 = *(_QWORD *)(v152 - 8);
  MEMORY[0x24BDAC7A8](v152);
  v140 = (char *)&v129 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, &qword_2541B7F60, v14);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v160 = (uint64_t)&v129 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v150 = (uint64_t)&v129 - v18;
  v148 = sub_2321FDDD4();
  v147 = *(_QWORD *)(v148 - 8);
  MEMORY[0x24BDAC7A8](v148);
  v146 = (char *)&v129 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, (unint64_t *)&unk_2541B29B0, (void (*)(uint64_t))MEMORY[0x24BE43C58]);
  MEMORY[0x24BDAC7A8](v20);
  v144 = (char *)&v129 - v21;
  sub_2320002B4(0, (unint64_t *)&qword_2541B2868, (void (*)(uint64_t))sub_23200021C);
  MEMORY[0x24BDAC7A8](v22);
  v142 = (char *)&v129 - v23;
  v145 = sub_2321FDC6C();
  v143 = *(_QWORD *)(v145 - 8);
  v24 = MEMORY[0x24BDAC7A8](v145);
  v139 = (char *)&v129 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v129 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v129 - v29;
  sub_2320002B4(0, (unint64_t *)&qword_2541B2838, (void (*)(uint64_t))MEMORY[0x24BDCC5A8]);
  v32 = MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)&v129 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x24BDAC7A8](v32);
  v37 = (char *)&v129 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v39 = (objc_class *)((char *)&v129 - v38);
  v40 = sub_2321FD9F0();
  v41 = *(_QWORD *)(v40 - 8);
  v42 = MEMORY[0x24BDAC7A8](v40);
  v44 = (char *)&v129 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v42);
  v46 = (char *)&v129 - v45;
  v47 = v162;
  sub_2320845C0(v161);
  if (!v47)
  {
    v162 = 0;
    v137 = v39;
    v134 = v30;
    v132 = v44;
    v136 = v37;
    v133 = v34;
    v135 = v28;
    v161 = v46;
    v138 = v41;
    v50 = v157;
    v49 = v158;
    v51 = v159;
    v52 = v160;
    v53 = v155;
    if (v48)
    {
      v54 = v48;
      if (objc_msgSend(v48, sel_hasValue))
      {
        v55 = objc_msgSend(v54, sel_value);
        if (v55)
        {
          v56 = v55;
          v155 = v54;
          v57 = v151;
          v58 = *(Class *)v151;
          v59 = v57 + *(int *)(type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider() + 24);
          v60 = *(int *)(type metadata accessor for SnidgetFeedItemGeneratorRequest(0) + 32);
          v131 = v59;
          v61 = *(void **)(v59 + v60);
          type metadata accessor for MostRecentSampleSnidgetStringBuilder();
          inited = (id *)swift_initStackObject();
          inited[2] = v58;
          v63 = (void *)objc_opt_self();
          v64 = v61;
          v65 = v58;
          v66 = objc_msgSend(v63, sel_sharedInstanceForHealthStore_, v65);
          inited[4] = v66;
          if (!v61)
          {
            v67 = v66;
            v64 = objc_msgSend(v67, sel_createHKUnitPreferenceController);

          }
          v68 = v138;
          v69 = v137;
          v137 = v65;

          inited[3] = v64;
          v70 = (void *)sub_232201470();
          MostRecentSampleSnidgetStringBuilder.makeMostRecentSampleQuantityPrimaryAttributedString(displayType:quantity:)(v156, v70, (uint64_t)v69);

          if ((*(unsigned int (**)(objc_class *, uint64_t, uint64_t))(v68 + 48))(v69, 1, v40) == 1)
          {
            sub_23200040C((uint64_t)v69, (unint64_t *)&qword_2541B2838, (void (*)(uint64_t))MEMORY[0x24BDCC5A8]);
            sub_232005578();
            swift_allocError();
            *v71 = 0;
            swift_willThrow();
            swift_setDeallocating();

            return;
          }
          v129 = inited;
          v130 = v56;
          (*(void (**)(void *, objc_class *, uint64_t))(v68 + 32))(v161, v69, v40);
          v78 = v149;
          if (v149)
          {
            v151 = *(_QWORD *)(v151 + 8);
            objc_msgSend(v155, sel_dateData);
            v79 = (id)HKDecodeDateForValue();
            v80 = v134;
            sub_2321FDC30();

            sub_23200021C();
            v82 = (uint64_t)v142;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v142, 1, 1, v81);
            v83 = sub_2321FF298();
            v84 = (uint64_t)v144;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v144, 1, 1, v83);
            v85 = v146;
            sub_2321FDDA4();
            v86 = v162;
            v87 = sub_2321234DC(v137, v151, v131, v78, v80, v82, v84, 0);
            v162 = v86;
            v88 = v136;
            if (v86)
            {

              swift_release();
              (*(void (**)(char *, uint64_t))(v147 + 8))(v85, v148);
              sub_23200040C(v84, (unint64_t *)&unk_2541B29B0, (void (*)(uint64_t))MEMORY[0x24BE43C58]);
              sub_23200040C(v82, (unint64_t *)&qword_2541B2868, (void (*)(uint64_t))sub_23200021C);
              (*(void (**)(void *, uint64_t))(v143 + 8))(v80, v145);
              (*(void (**)(void *, uint64_t))(v138 + 8))(v161, v40);
              v89 = 1;
LABEL_22:
              sub_232044C9C(v89);
              return;
            }
            v92 = v87;
            (*(void (**)(char *, uint64_t))(v147 + 8))(v85, v148);
            sub_23200040C(v84, (unint64_t *)&unk_2541B29B0, (void (*)(uint64_t))MEMORY[0x24BE43C58]);
            sub_23200040C(v82, (unint64_t *)&qword_2541B2868, (void (*)(uint64_t))sub_23200021C);
            (*(void (**)(void *, uint64_t))(v143 + 8))(v80, v145);
            sub_232044C9C(1);
            v93 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v154 + 56);
            v94 = v150;
            v95 = v152;
            v93(v150, 1, 1, v152);
            if (v92)
            {
              v151 = (uint64_t)v92;
              if (v92 != 1)
              {
                swift_retain();
                v96 = v140;
                sub_2321FF280();
                sub_2321FD894();
                (*(void (**)(char *, uint64_t))(v154 + 8))(v96, v95);
                objc_msgSend(v155, sel_dateData);
                v97 = v95;
                v98 = (id)HKDecodeDateForValue();
                sub_2321FDC30();

                sub_2321FD87C();
                swift_release();
                sub_23200040C(v94, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
                v93(v52, 0, 1, v97);
                sub_2320004F8(v52, v94);
              }
            }
            else
            {
              v151 = 0;
            }
            v91 = v156;
          }
          else
          {
            v90 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v154 + 56);
            v151 = 1;
            v90(v150, 1, 1, v152);
            v91 = v156;
            v88 = v136;
          }
          sub_2321FF208();
          sub_232000448();
          v100 = *(int *)(v99 + 48);
          v101 = v91;
          objc_msgSend(v155, sel_dateData);
          v102 = (id)HKDecodeDateForValue();
          v103 = v159;
          sub_2321FDC30();

          v103[v100] = 0;
          v104 = *MEMORY[0x24BE42FD8];
          v105 = sub_2321FEF5C();
          v106 = *(_QWORD *)(v105 - 8);
          (*(void (**)(char *, uint64_t, uint64_t))(v106 + 104))(v103, v104, v105);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v106 + 56))(v103, 0, 1, v105);
          v159 = (char *)sub_2321FF1FC();
          v107 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v138 + 56);
          v108 = v88;
          v109 = v138;
          v110 = v40;
          v107(v108, 1, 1, v40);
          (*(void (**)(char *, void *, uint64_t))(v109 + 16))(v132, v161, v40);
          v107(v133, 1, 1, v40);
          v163 = 0x5F74656764696E53;
          v164 = 0xE800000000000000;
          v111 = *(id *)(v131 + 16);
          v112 = objc_msgSend(v111, sel_description);
          sub_232200EC4();

          sub_232200F48();
          swift_bridgeObjectRelease();
          v113 = v130;
          v114 = (void *)sub_232201470();
          objc_msgSend(v114, sel__value);

          v115 = v141;
          sub_2321FF598();
          swift_bridgeObjectRelease();
          v116 = sub_2321FF5A4();
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v116 - 8) + 56))(v115, 0, 1, v116);
          sub_2321FF6C4();
          swift_allocObject();
          v156 = (void *)sub_2321FF6B8();
          v117 = v151;
          sub_232044C68(v151);
          v118 = v155;
          objc_msgSend(v155, sel_dateData);
          v119 = (id)HKDecodeDateForValue();
          sub_2321FDC30();

          v120 = (uint64_t)v153;
          sub_2321FE62C();
          v121 = sub_2321FE65C();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v121 - 8) + 56))(v120, 0, 1, v121);
          v122 = v150;
          v123 = v160;
          sub_2320055BC(v150, v160);
          sub_232044A00(0);
          v126 = v157;
          v125 = v158;
          v127 = (char *)v157 + *(int *)(v124 + 52);
          swift_bridgeObjectRetain();
          sub_2320D71E8(1, v120, v125, v123, v127);

          swift_release();
          v128 = (uint64_t)v156;
          *v126 = (uint64_t)v159;
          v126[1] = v128;
          v126[2] = v117;
          v126[3] = 0;
          sub_23200040C(v122, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
          (*(void (**)(void *, uint64_t))(v138 + 8))(v161, v110);
          v89 = v117;
          goto LABEL_22;
        }
      }

    }
    v72 = sub_2321FE65C();
    v73 = (uint64_t)v153;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v153, 1, 1, v72);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v154 + 56))(v52, 1, 1, v152);
    swift_bridgeObjectRetain();
    sub_2320D71E8(0, v73, v49, v52, v53);
    sub_2321FF208();
    v74 = sub_2321FEF5C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v51, 1, 1, v74);
    v75 = v156;
    v76 = sub_2321FF1FC();
    sub_232044A00(0);
    sub_23200054C((uint64_t)v53, (uint64_t)v50 + *(int *)(v77 + 52), type metadata accessor for SnidgetFeedItemMetadata);
    *v50 = v76;
    *(_OWORD *)(v50 + 1) = xmmword_2322116E0;
    v50[3] = 0;
    sub_232002CEC((uint64_t)v53, type metadata accessor for SnidgetFeedItemMetadata);
  }
}

void sub_232064714(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t *v42;
  _BYTE *v43;
  uint64_t v44;
  char *v45;
  id v46;
  void **v47;
  void *v48;
  id *v49;
  uint64_t v50;
  void *v51;
  id *inited;
  void *v53;
  id v54;
  id v55;
  id v56;
  void *v57;
  id v58;
  id v59;
  void *v60;
  id v61;
  void *v62;
  id v63;
  void *v64;
  void *v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE *v77;
  id v78;
  void *v79;
  id v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(char *, char *, uint64_t);
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  id v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v100;
  void (*v101)(char *, void *, uint64_t);
  char *v102;
  id v103;
  id v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  void **v108;
  id v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  uint64_t v117;
  _BYTE *v118;
  char *v119;
  void (*v120)(char *, uint64_t);
  id *v121;
  id *v122;
  uint64_t v123;
  char *v124;
  char *v125;
  char *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  char *v138;
  char *v139;
  void **v140;
  char *v141;
  char *v142;
  void *v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t *v147;
  void *v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;

  v146 = a3;
  v147 = a4;
  v148 = a2;
  v143 = a1;
  v4 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x24BDAC7A8](v4);
  v144 = (char *)&v121 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  MEMORY[0x24BDAC7A8](v6);
  v145 = (char *)&v121 - v7;
  v8 = sub_2321FDC6C();
  MEMORY[0x24BDAC7A8](v8);
  v136 = (char *)&v121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, qword_2541B78E0, (void (*)(uint64_t))MEMORY[0x24BE47DF8]);
  MEMORY[0x24BDAC7A8](v10);
  v142 = (char *)&v121 - v11;
  sub_2320002B4(0, &qword_2541B2368, (void (*)(uint64_t))MEMORY[0x24BE445A8]);
  MEMORY[0x24BDAC7A8](v12);
  v139 = (char *)&v121 - v13;
  sub_2320002B4(0, (unint64_t *)&qword_2541B2838, (void (*)(uint64_t))MEMORY[0x24BDCC5A8]);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v138 = (char *)&v121 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v137 = (char *)&v121 - v17;
  sub_2320002B4(0, &qword_2541B2930, (void (*)(uint64_t))MEMORY[0x24BE42FE0]);
  MEMORY[0x24BDAC7A8](v18);
  v141 = (char *)&v121 - v19;
  v135 = sub_2322002D0();
  v134 = *(_QWORD *)(v135 - 8);
  MEMORY[0x24BDAC7A8](v135);
  v132 = (uint64_t)&v121 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = sub_2321FEA7C();
  v130 = *(_QWORD *)(v133 - 8);
  v21 = MEMORY[0x24BDAC7A8](v133);
  v131 = (char *)&v121 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v121 - v23;
  v25 = sub_2321FEB84();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v121 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_2321FD9F0();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)&v121 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x24BDAC7A8](v31);
  v36 = (char *)&v121 - v35;
  MEMORY[0x24BDAC7A8](v34);
  v38 = (char *)&v121 - v37;
  v39 = v151;
  sub_2320845FC(v148);
  v151 = v39;
  if (v39)
    return;
  v126 = v28;
  v127 = v26;
  v123 = v25;
  v124 = v24;
  v125 = v33;
  v128 = v36;
  v148 = v38;
  v129 = v30;
  v41 = v146;
  v42 = v147;
  v43 = v144;
  v44 = (uint64_t)v145;
  if (!v40)
  {
LABEL_14:
    v69 = sub_2321FE65C();
    v70 = (uint64_t)v142;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v142, 1, 1, v69);
    v71 = sub_2321FD8B8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v44, 1, 1, v71);
    swift_bridgeObjectRetain();
    sub_2320D71E8(0, v70, v41, v44, v43);
    sub_2321FF208();
    v72 = sub_2321FEF5C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v141, 1, 1, v72);
    v73 = v143;
    v74 = sub_2321FF1FC();
    sub_232044A00(0);
    sub_23200054C((uint64_t)v43, (uint64_t)v42 + *(int *)(v75 + 52), type metadata accessor for SnidgetFeedItemMetadata);
    *v42 = v74;
    *(_OWORD *)(v42 + 1) = xmmword_2322116E0;
    v42[3] = 0;
    sub_232002CEC((uint64_t)v43, type metadata accessor for SnidgetFeedItemMetadata);
    return;
  }
  v45 = v40;
  if (!objc_msgSend(v40, sel_hasClassificationRawValue)
    || (v46 = objc_msgSend(v45, sel_classificationRawValue),
        !objc_msgSend(v45, sel_hasLevelViewDataConfiguration))
    || !objc_msgSend(v45, sel_hasDateData)
    || !objc_msgSend(v45, sel_hasValue))
  {

    goto LABEL_14;
  }
  v144 = v45;
  v47 = v140;
  v48 = *v140;
  v49 = (void **)((char *)v47 + *(int *)(type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider() + 24));
  v50 = *(int *)(type metadata accessor for SnidgetFeedItemGeneratorRequest(0) + 32);
  v122 = v49;
  v51 = *(id *)((char *)v49 + v50);
  type metadata accessor for MostRecentSampleSnidgetStringBuilder();
  inited = (id *)swift_initStackObject();
  inited[2] = v48;
  v53 = (void *)objc_opt_self();
  v54 = v51;
  v55 = v48;
  v56 = objc_msgSend(v53, sel_sharedInstanceForHealthStore_, v55);
  v57 = v56;
  inited[4] = v56;
  if (!v51)
  {
    v58 = v55;
    v59 = v56;
    v54 = objc_msgSend(v59, sel_createHKUnitPreferenceController);

    v55 = v58;
  }
  v60 = v148;

  inited[3] = v54;
  v61 = objc_msgSend((id)objc_opt_self(), sel_localizedStringForCardioFitnessLevel_, v46);
  if (v61)
  {
    v62 = v61;
    sub_232200EC4();

    SnidgetStringBuilder.makePrimaryAttributedString(localizedString:)();
    swift_bridgeObjectRelease();
    v63 = objc_msgSend(v144, sel_value);
    if (v63)
    {
      v64 = v63;
      v65 = (void *)sub_232201470();

      v66 = v143;
      v67 = v151;
      sub_232065310(v143, v65, (uint64_t)inited, (uint64_t)v128);
      v151 = v67;
      v68 = v127;
      if (v67)
      {
        (*(void (**)(void *, uint64_t))(v129 + 8))(v60, v29);

        swift_setDeallocating();
      }
      else
      {

        v78 = objc_msgSend(v144, sel_levelViewDataConfiguration);
        v121 = inited;
        if (v78)
        {
          v79 = v78;
          v80 = objc_msgSend(v66, sel_objectType, v121);
          v81 = v126;
          sub_2321FEB90();
          v82 = v124;
          v83 = v123;
          (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v124, v81, v123);
          v84 = v130;
          v85 = v133;
          (*(void (**)(char *, _QWORD, uint64_t))(v130 + 104))(v82, *MEMORY[0x24BE41348], v133);
          v86 = v132;
          LevelView.DataConfiguration.init(codable:)(v79, v132);
          (*(void (**)(char *, uint64_t))(v68 + 8))(v126, v83);
          v87 = *(void (**)(char *, char *, uint64_t))(v84 + 32);
          v88 = v131;
          v87(v131, v82, v85);
          type metadata accessor for SnidgetLevelChartView.ViewModel();
          v89 = swift_allocObject();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v134 + 32))(v89 + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_dataConfiguration, v86, v135);
          v140 = (void **)v89;
          v87((char *)(v89 + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_accentColor), v88, v85);
          v135 = 0;
        }
        else
        {
          v140 = 0;
          v135 = 1;
        }
        sub_2321FF208();
        sub_232000448();
        v91 = *(int *)(v90 + 48);
        v92 = v66;
        objc_msgSend(v144, sel_dateData);
        v93 = (id)HKDecodeDateForValue();
        v94 = v141;
        sub_2321FDC30();

        v94[v91] = 0;
        v95 = *MEMORY[0x24BE42FD8];
        v96 = sub_2321FEF5C();
        v97 = *(_QWORD *)(v96 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v97 + 104))(v94, v95, v96);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v94, 0, 1, v96);
        v143 = (void *)sub_2321FF1FC();
        v98 = v129;
        v99 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v129 + 56);
        v100 = v29;
        v99(v137, 1, 1, v29);
        v101 = *(void (**)(char *, void *, uint64_t))(v98 + 16);
        v101(v125, v148, v100);
        v102 = v138;
        v101(v138, v128, v100);
        v99(v102, 0, 1, v100);
        v149 = 0x5F74656764696E53;
        v150 = 0xE800000000000000;
        v103 = v122[2];
        v104 = objc_msgSend(v103, sel_description);
        sub_232200EC4();

        sub_232200F48();
        swift_bridgeObjectRelease();
        v105 = v139;
        sub_2321FF58C();
        swift_bridgeObjectRelease();
        v106 = sub_2321FF5A4();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 56))(v105, 0, 1, v106);
        sub_2321FF6C4();
        swift_allocObject();
        v141 = (char *)sub_2321FF6B8();
        v107 = v135;
        v108 = v140;
        sub_232044C68(v135);
        v109 = v144;
        objc_msgSend(v144, sel_dateData);
        v110 = (id)HKDecodeDateForValue();
        sub_2321FDC30();

        v111 = (uint64_t)v142;
        sub_2321FE62C();
        v112 = sub_2321FE65C();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 56))(v111, 0, 1, v112);
        v113 = sub_2321FD8B8();
        v114 = (uint64_t)v145;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v113 - 8) + 56))(v145, 1, 1, v113);
        sub_232044A00(0);
        v117 = v146;
        v116 = v147;
        v118 = (char *)v147 + *(int *)(v115 + 52);
        swift_bridgeObjectRetain();
        sub_2320D71E8(1, v111, v117, v114, v118);

        sub_232044C9C(v107);
        swift_release();
        v119 = v141;
        *v116 = (uint64_t)v143;
        v116[1] = (uint64_t)v119;
        v116[2] = v107;
        v116[3] = (uint64_t)v108;
        v120 = *(void (**)(char *, uint64_t))(v129 + 8);
        v120(v128, v100);
        v120((char *)v148, v100);
      }
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_232005578();
    v76 = swift_allocError();
    *v77 = 0;
    v151 = v76;
    swift_willThrow();

  }
}

void sub_232065310(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  uint64_t v17;
  char v18;
  double v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  unint64_t v40;
  id v41;
  id v42;
  os_log_t v43;
  uint64_t v44;
  _BYTE *v45;
  _BYTE *v46;
  uint64_t v47;
  os_log_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v49 = a4;
  v5 = v4;
  v9 = type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_23220039C();
  v51 = *(_QWORD *)(v12 - 8);
  v52 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(void **)(a3 + 24);
  v16 = objc_msgSend(v15, sel_unitForChartingDisplayType_, a1);
  if (!v16)
    v16 = objc_msgSend(a2, sel__unit);
  v17 = SnidgetStringBuilder.makeSafeDouble(displayType:quantity:preferredUnit:)(a1, a2, v16);
  if ((v18 & 1) != 0)
  {
    sub_232200318();
    sub_23200054C(v5, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider);
    v29 = a2;
    v30 = v16;
    v31 = v29;
    v32 = v30;
    v33 = sub_232200390();
    v34 = sub_2322012E4();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = swift_slowAlloc();
      v50 = v14;
      v36 = v35;
      v37 = swift_slowAlloc();
      v48 = v33;
      v38 = (_QWORD *)v37;
      v49 = swift_slowAlloc();
      v54 = v49;
      *(_DWORD *)v36 = 136315650;
      v39 = sub_232085230(*v11, *((unsigned __int8 *)v11 + *(int *)(v9 + 24) + 8));
      v53 = sub_232013174(v39, v40, &v54);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider);
      *(_WORD *)(v36 + 12) = 2112;
      v53 = (uint64_t)v31;
      v41 = v31;
      sub_232201710();
      *v38 = v31;

      *(_WORD *)(v36 + 22) = 2112;
      v53 = (uint64_t)v32;
      v42 = v32;
      sub_232201710();
      v38[1] = v32;

      v43 = v48;
      _os_log_impl(&dword_231FFB000, v48, v34, "[%s]: Failed to create vo2 max string for cardio fitness sup text with quantity=%@ and preferredUnit=%@", (uint8_t *)v36, 0x20u);
      sub_2320477F0();
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v38, -1, -1);
      v44 = v49;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v44, -1, -1);
      MEMORY[0x2348FF468](v36, -1, -1);

      (*(void (**)(char *, uint64_t))(v51 + 8))(v50, v52);
    }
    else
    {
      sub_232002CEC((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider);

      (*(void (**)(char *, uint64_t))(v51 + 8))(v14, v52);
    }
    sub_232005578();
    swift_allocError();
    *v45 = 0;
    swift_willThrow();

  }
  else
  {
    v19 = *(double *)&v17;
    v20 = objc_msgSend(a1, sel_presentation);
    v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, v19);
    v22 = objc_msgSend(v20, sel_adjustedValueForDaemonValue_, v21);

    v23 = objc_msgSend(a1, sel_hk_valueFormatterForUnit_, v16);
    v24 = v22;
    v25 = (void *)sub_2321FF604();
    v26 = (void *)sub_2321FF628();
    v27 = objc_msgSend(v23, sel_attributedStringFromValue_displayType_unitController_valueFont_unitFont_, v24, a1, v15, v25, v26);

    if (v27)
    {
      v28 = objc_msgSend(v27, sel_string);
      sub_232200EC4();

      SnidgetStringBuilder.makeSupplementaryAttributedString(localizedString:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_232005578();
      swift_allocError();
      *v46 = 0;
      swift_willThrow();

    }
  }
}

void sub_232065834(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_232063130(*(void **)a1, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16), a2);
}

void sub_232065854(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_255F9CD40[0])
  {
    v2 = sub_232003E9C(255, &qword_2541B0CD0);
    v3 = sub_232003E9C(255, &qword_2541B0CB8);
    v5 = type metadata accessor for SnidgetHarnessViewFeedItemGeneratorInputModel(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, qword_255F9CD40);
  }
}

uint64_t sub_2320658D8@<X0>(void **a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = sub_23220039C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2321FE608();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = *a1;
  v37 = (uint64_t)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232065BE4(v13, v37);
  sub_232200318();
  v14 = sub_232200390();
  v15 = sub_2322012FC();
  if (os_log_type_enabled(v14, v15))
  {
    v35 = v7;
    v16 = swift_slowAlloc();
    v34 = v6;
    v17 = (uint8_t *)v16;
    v18 = swift_slowAlloc();
    *(_QWORD *)&v36 = v10;
    v19 = v18;
    v38 = v18;
    v39 = a2;
    *(_DWORD *)v17 = 136315138;
    swift_getMetatypeMetadata();
    v20 = sub_232200F00();
    v39 = sub_232013174(v20, v21, &v38);
    sub_232201710();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_231FFB000, v14, v15, "[%s]: Emitting sharing chart model for Activity", v17, 0xCu);
    swift_arrayDestroy();
    v22 = v19;
    v10 = v36;
    MEMORY[0x2348FF468](v22, -1, -1);
    MEMORY[0x2348FF468](v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v34);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  v23 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598];
  sub_2320057B8(0, &qword_2541B57D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE48110], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v24 = sub_2321FE7F4();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  v27 = swift_allocObject();
  v36 = xmmword_232210D40;
  *(_OWORD *)(v27 + 16) = xmmword_232210D40;
  v28 = (uint64_t *)(v27 + v26);
  sub_2320057B8(0, &qword_2541B57B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47D40], v23);
  v29 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = v36;
  v31 = v30 + v29;
  v32 = v37;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 16))(v31, v37, v10);
  *v28 = v30;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v25 + 104))(v28, *MEMORY[0x24BE480E0], v24);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v32, v10);
  *a3 = v27;
  return result;
}

void sub_232065BE4(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[4];

  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, (unint64_t *)&qword_2541AF178, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v35 - v6;
  sub_2320057B8(0, &qword_2541AF180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], v4);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v35 - v9;
  v11 = sub_2321FE6D4();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v35[2] = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v35 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v35 - v18;
  v20 = a1;
  sub_2321FE6B0();
  v35[1] = a2;
  if (a1 && (v21 = objc_msgSend(v20, sel_data)) != 0)
  {
    v22 = v21;
    v23 = sub_2321FDAD4();
    v25 = v24;

  }
  else
  {
    v23 = 0;
    v25 = 0xF000000000000000;
  }
  sub_23206615C();
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v19, v11);
  sub_232015CE4(v23, v25, 0, 0);
  v27 = v26;
  sub_23201602C(v23, v25);

  (*(void (**)(char *, uint64_t))(v12 + 8))(v19, v11);
  sub_2321FE6B0();
  sub_2320057B8(0, (unint64_t *)&qword_2541B57E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE45940], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_2321FF8E0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_232210D40;
  v28 = (void *)objc_opt_self();
  v29 = objc_msgSend(v28, sel_activitySummaryType);
  sub_23220117C();

  sub_232027434();
  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_232210D20;
  *(_QWORD *)(v30 + 32) = objc_msgSend(v28, sel_activitySummaryType);
  v35[3] = v30;
  sub_232201050();
  v31 = objc_msgSend(v27, sel_data);
  if (v31)
  {
    v32 = v31;
    sub_2321FDAD4();

    sub_2321FDE1C();
    v33 = sub_2321FDE28();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v10, 0, 1, v33);
    sub_2321FDCFC();
    v34 = sub_2321FDD08();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v7, 0, 1, v34);
    sub_2321FE5A8();

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_232065FB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC9Summaries35ActivityChartSharableModelGenerator_domain;
  v2 = sub_2321FE3BC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC9Summaries35ActivityChartSharableModelGenerator_generatorContext;
  v4 = sub_2321FE440();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t sub_232066038()
{
  return type metadata accessor for ActivityChartSharableModelGenerator();
}

uint64_t type metadata accessor for ActivityChartSharableModelGenerator()
{
  uint64_t result;

  result = qword_2541B44E0;
  if (!qword_2541B44E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23206607C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2321FE3BC();
  if (v1 <= 0x3F)
  {
    result = sub_2321FE440();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_232066114@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC9Summaries35ActivityChartSharableModelGenerator_domain;
  v4 = sub_2321FE3BC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_23206615C()
{
  unint64_t result;

  result = qword_2541B0C70;
  if (!qword_2541B0C70)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2541B0C70);
  }
  return result;
}

uint64_t sub_232066198(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v21 = a1;
  v22 = sub_232200180();
  v6 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_232200024();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v21 - v17;
  sub_232036B18(a1, (uint64_t)&v21 - v17);
  sub_2322000B4();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v3 + qword_2541BF5C0, v12, v9);
  sub_232036B18((uint64_t)v18, (uint64_t)v16);
  sub_232200174();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_232003F18((uint64_t)v18);
  sub_232036BAC((uint64_t)v16, v3 + qword_2541BF5D0);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v3 + qword_2541BF5C8, v8, v22);
  v19 = sub_2322000CC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(a2, v19);
  sub_232003F18(v21);
  return v3;
}

id sub_232066380(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  double v35;
  double v36;
  uint64_t v37;
  char *v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id result;
  void *v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  void (*v54)(uint64_t);
  uint64_t v55;
  _BYTE *v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  _BYTE *v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  _BYTE *v64;
  void *v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  void (**v86)(char *, id);
  id v87;
  _OWORD v88[2];
  uint64_t v89;

  sub_2320002B4(0, &qword_2541B28D0, (void (*)(uint64_t))MEMORY[0x24BE47E70]);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v81 = (uint64_t)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v82 = (char *)&v75 - v7;
  v8 = (_QWORD *)sub_23220039C();
  v86 = (void (**)(char *, id))*(v8 - 1);
  v87 = v8;
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v75 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v75 - v15;
  v80 = sub_232200024();
  v78 = *(_QWORD *)(v80 - 8);
  MEMORY[0x24BDAC7A8](v80);
  v79 = (char *)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, (unint64_t *)&qword_2541B2A70, (void (*)(uint64_t))MEMORY[0x24BE4ADA0]);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v85 = (uint64_t)&v75 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v84 = (char *)&v75 - v21;
  sub_2320002B4(0, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  MEMORY[0x24BDAC7A8](v22);
  v76 = (char *)&v75 - v23;
  v24 = sub_2321FDC6C();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = MEMORY[0x24BDAC7A8](v24);
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v75 - v27;
  v77 = a2;
  v29 = sub_2321FDBF4();
  v30 = objc_msgSend(a1, sel_statisticsForDate_, v29);

  if (!v30)
  {
    sub_232066DA4();
    swift_allocError();
    *v56 = 1;
    swift_willThrow();
    return (id)v29;
  }
  v31 = objc_msgSend(v30, sel_averageQuantity);
  if (!v31)
  {
    sub_232200318();
    v57 = sub_232200390();
    v58 = sub_2322012F0();
    v29 = v58;
    if (os_log_type_enabled(v57, v58))
    {
      v59 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v59 = 0;
      _os_log_impl(&dword_231FFB000, v57, (os_log_type_t)v29, "No average quantity computed by statistics collection", v59, 2u);
      MEMORY[0x2348FF468](v59, -1, -1);
    }

    v86[1](v11, v87);
    sub_232066DA4();
    swift_allocError();
    *v60 = 3;
    swift_willThrow();

    return (id)v29;
  }
  v75 = v31;
  v32 = objc_msgSend(v30, sel_duration);
  if (!v32)
  {
    sub_232200318();
    v61 = sub_232200390();
    v62 = sub_2322012F0();
    v29 = v62;
    if (os_log_type_enabled(v61, v62))
    {
      v63 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v63 = 0;
      _os_log_impl(&dword_231FFB000, v61, (os_log_type_t)v29, "No duration quantity computed by statistics collection", v63, 2u);
      MEMORY[0x2348FF468](v63, -1, -1);
    }

    v86[1](v14, v87);
    sub_232066DA4();
    swift_allocError();
    *v64 = 3;
    swift_willThrow();

    return (id)v29;
  }
  v33 = v32;
  v34 = objc_msgSend((id)objc_opt_self(), sel_secondUnit);
  objc_msgSend(v33, sel_doubleValueForUnit_, v34);
  v36 = v35;

  if (v36 <= 2.22507386e-308)
  {
    v65 = v33;
    sub_232200318();
    v66 = sub_232200390();
    v67 = sub_2322012E4();
    if (os_log_type_enabled(v66, v67))
    {
      v68 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v68 = 0;
      _os_log_impl(&dword_231FFB000, v66, v67, "Computed statistic with nil duration, which is unsupported", v68, 2u);
      MEMORY[0x2348FF468](v68, -1, -1);
    }

    v86[1](v16, v87);
    v69 = (uint64_t)v82;
    sub_2321FE6B0();
    v70 = sub_2321FE6D4();
    v71 = (void (*)(uint64_t))MEMORY[0x24BE47E70];
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v69, 0, 1, v70);
    sub_232003E9C(0, &qword_2541B0CD0);
    v72 = sub_2321FFD78();
    v73 = v85;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v85, 1, 1, v72);
    v74 = v81;
    sub_2320004AC(v69, v81, &qword_2541B28D0, v71);
    v29 = (uint64_t)sub_2320151CC(0, 0xF000000000000000, 0xBu, v73, v74, 0, 0);
    sub_23200040C(v69, &qword_2541B28D0, v71);

    return (id)v29;
  }
  v87 = v33;
  sub_232003E9C(0, &qword_2541B0D10);
  v37 = *MEMORY[0x24BDD2B68];
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v28, v77, v24);
  v86 = (void (**)(char *, id))v75;
  v38 = (char *)HKCodableSummaryAudioExposureValue.init(leqQuantity:secondsListened:daysAggregated:lastUpdatedDate:)(v86, v37, (uint64_t)v28, v36);
  sub_232003E9C(0, &qword_2541B56C8);
  v39 = objc_msgSend(v30, sel_startDate);
  sub_2321FDC30();

  v40 = objc_msgSend(v30, sel_endDate);
  sub_2321FDC30();

  v41 = (uint64_t)v76;
  sub_2321FD87C();
  v42 = sub_2321FD8B8();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v41, 0, 1, v42);
  v43 = HKCodableSummarySupplementaryValue.init(dateInterval:dataCount:)(v41, (uint64_t)objc_msgSend(v30, sel_dataCount), 0);
  (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v79, &v83[qword_2541BF5C0], v80);
  v44 = (uint64_t)v84;
  sub_2322000C0();
  v45 = *MEMORY[0x24BE4AD38];
  v46 = sub_2321FFD78();
  v47 = *(_QWORD *)(v46 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 104))(v44, v45, v46);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
  v48 = v43;
  v83 = v38;
  result = objc_msgSend(v38, sel_data);
  if (result)
  {
    v50 = result;
    sub_232003E9C(0, &qword_2541B0CD0);
    v51 = sub_2321FDAD4();
    v53 = v52;

    v54 = (void (*)(uint64_t))MEMORY[0x24BE4ADA0];
    v55 = v85;
    sub_2320004AC(v44, v85, (unint64_t *)&qword_2541B2A70, (void (*)(uint64_t))MEMORY[0x24BE4ADA0]);
    v89 = 0;
    memset(v88, 0, sizeof(v88));
    v29 = (uint64_t)sub_232015828(v51, v53, 2, v55, (uint64_t)v48, 0, (uint64_t)v88);

    sub_232003ED4(v51, v53);
    sub_23200040C(v44, (unint64_t *)&qword_2541B2A70, v54);

    return (id)v29;
  }
  __break(1u);
  return result;
}

uint64_t sub_232066CA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_232003F18(v0 + qword_2541BF5D0);
  v1 = v0 + qword_2541BF5C8;
  v2 = sub_232200180();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + qword_2541BF5C0;
  v4 = sub_232200024();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AudioExposureCurrentValueSharableModelStep()
{
  uint64_t result;

  result = qword_255F9CD70;
  if (!qword_255F9CD70)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_232066D70()
{
  return swift_initClassMetadata2();
}

unint64_t sub_232066DA4()
{
  unint64_t result;

  result = qword_255F9CE70;
  if (!qword_255F9CE70)
  {
    result = MEMORY[0x2348FF39C](&unk_232217174, &type metadata for StatisticsCurrentValueSharableModelStep.StatisticsProcessingError);
    atomic_store(result, (unint64_t *)&qword_255F9CE70);
  }
  return result;
}

uint64_t sub_232066DE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  int v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;

  v54 = a1;
  v52 = a2;
  v2 = sub_2321FDDC8();
  v48 = *(_QWORD *)(v2 - 8);
  v49 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v47 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2321FDDD4();
  v45 = *(_QWORD *)(v4 - 8);
  v46 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v43 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v44 = (char *)&v41 - v7;
  v8 = sub_2321FD8B8();
  v50 = *(_QWORD *)(v8 - 8);
  v51 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v53 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2321FDC6C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v41 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v41 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v41 - v21;
  v23 = sub_232200024();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v41 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322000B4();
  v27 = sub_232200018();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  if (v27 != 3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v52, v54, v51);
  v41 = v20;
  v42 = v14;
  sub_2321FD870();
  sub_2321FD840();
  v28 = v43;
  sub_2321FDDA4();
  v29 = v47;
  v30 = v48;
  v31 = v49;
  (*(void (**)(char *, _QWORD, uint64_t))(v48 + 104))(v47, *MEMORY[0x24BDCF220], v49);
  sub_2321FD894();
  v32 = (uint64_t)v44;
  sub_2321FDD80();
  v33 = *(void (**)(char *, uint64_t))(v11 + 8);
  v33(v17, v10);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v29, v31);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v28, v46);
  v34 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v32, 1, v10);
  v36 = v51;
  v35 = v52;
  v37 = v50;
  if (v34 == 1)
  {
    (*(void (**)(char *, uint64_t))(v50 + 8))(v53, v51);
    v33(v22, v10);
    sub_232016D88(v32, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v35, v54, v36);
  }
  else
  {
    v39 = v41;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v41, v32, v10);
    v40 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    v40(v17, v39, v10);
    v40(v42, v22, v10);
    sub_2321FD87C();
    v33(v39, v10);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v53, v36);
    return ((uint64_t (*)(char *, uint64_t))v33)(v22, v10);
  }
}

uint64_t sub_2320671C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_232026DE8(v2 + *(int *)(a1 + 28), a2, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

uint64_t sub_232067200(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 32));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_232067234(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 36));
}

uint64_t *sub_232067240(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t inited;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  unint64_t v19;
  void (*v20)(unint64_t, _QWORD, uint64_t);
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v3 = v2;
  v33 = *v3;
  v30 = sub_2321FE38C();
  v28 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v29 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2321FE3BC();
  v31 = *(_QWORD *)(v7 - 8);
  v32 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = a1;
  v27 = (id)sub_2321FE3F8();
  sub_232027434();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232210D20;
  v11 = type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request(0);
  *(_QWORD *)(inited + 32) = sub_2321FE464();
  v35 = inited;
  sub_232201050();
  v12 = *(_BYTE *)(a2 + *(int *)(v11 + 36));
  sub_2320057B8(0, &qword_2541B7530, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v13 = sub_2321FE194();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  if ((v12 & 1) != 0)
  {
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_232210D40;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v14 + 104))(v17 + v16, *MEMORY[0x24BE47410], v13);
  }
  else
  {
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_232210D30;
    v19 = v17 + v16;
    v20 = *(void (**)(unint64_t, _QWORD, uint64_t))(v14 + 104);
    v20(v19, *MEMORY[0x24BE47460], v13);
    v20(v19 + v15, *MEMORY[0x24BE47490], v13);
  }
  v18 = v27;
  sub_2321A492C(v17);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v21 = swift_bridgeObjectRetain();
  sub_2321A4950(v21);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t))(v28 + 104))(v29, *MEMORY[0x24BE47918], v30);
  sub_2321FE3B0();

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))((uint64_t)v3 + OBJC_IVAR____TtC9Summaries54AudioExposureCurrentValueSummarySharableModelGenerator_domain, v9, v32);
  sub_232069FA8(a2, (uint64_t)v3 + OBJC_IVAR____TtC9Summaries54AudioExposureCurrentValueSummarySharableModelGenerator_request);
  v22 = sub_232000590(&qword_2541B0468, type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator, (uint64_t)&unk_232212718);
  v23 = v34;
  v24 = static CurrentValueSummaryModelGenerating.makePublisher(generatorContext:request:)(v34, a2, v33, v22);
  sub_232069FEC(a2);
  v25 = sub_2321FE440();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v23, v25);
  *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC9Summaries54AudioExposureCurrentValueSummarySharableModelGenerator_publisher) = v24;
  return v3;
}

uint64_t sub_2320675B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = (void *)sub_232201260();
  v5 = objc_msgSend(v4, sel_statistics);

  sub_232003E9C(0, (unint64_t *)&qword_2541B7EB8);
  v6 = sub_232201038();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_232201998();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  v8 = sub_23220126C();
  v9 = *(_QWORD *)(v8 - 8);
  if (v7)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(a2, a1, v8);
    v10 = 0;
  }
  else
  {
    v10 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, v10, 1, v8);
}

uint64_t sub_2320676B8(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t);
  unsigned int (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, char *, uint64_t);
  char *v62;
  uint64_t v63;
  _QWORD *v64;
  unsigned int (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  id v70;
  uint64_t v71;
  uint64_t (*v72)(uint64_t);
  uint64_t v73;
  id v74;
  uint64_t result;
  char *v76;
  uint64_t v77;
  void *v78;
  void *v79;
  char *v80;
  char *v81;
  id v82;
  char *v83;
  void *v84;
  uint64_t v85;
  id v86;
  void *v87;
  id v88;
  double v89;
  double v90;
  id v91;
  void *v92;
  char *v93;
  char *v94;
  void (*v95)(char *, uint64_t, uint64_t, uint64_t);
  NSObject *v96;
  os_log_type_t v97;
  uint8_t *v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  id v103;
  char *v104;
  uint64_t v105;
  uint64_t (*v106)(uint64_t);
  uint64_t v107;
  char *v108;
  NSObject *v109;
  os_log_type_t v110;
  uint8_t *v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  id v116;
  uint64_t v117;
  uint64_t (*v118)(uint64_t);
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  unsigned int v123;
  uint64_t v124;
  uint64_t v125;
  id v126;
  char *v127;
  unsigned __int8 v128;
  void (*v129)(char *, uint64_t);
  int v130;
  uint64_t v131;
  void (*v132)(char *, char *, uint64_t);
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  id v143;
  id v144;
  id v145;
  void *v146;
  uint64_t v147;
  unint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  void (*v152)(char *, uint64_t);
  uint64_t v153;
  char *v154;
  id v155;
  id v156;
  void (*v157)(char *, uint64_t, uint64_t);
  uint64_t v158;
  uint64_t (*v159)(uint64_t, uint64_t, uint64_t);
  void (*v160)(char *, uint64_t);
  char *v161;
  char *v162;
  char *v163;
  uint64_t v164;
  char *v165;
  char *v166;
  char *v167;
  uint64_t v168;
  char *v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  char *v178;
  char *v179;
  void (*v180)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  id v189;
  uint64_t v190;
  _OWORD v191[2];
  uint64_t v192;
  uint64_t v193;

  v180 = a3;
  v189 = a2;
  v187 = a1;
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B28D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v184 = (uint64_t)&v153 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v185 = (char *)&v153 - v7;
  v176 = sub_23220039C();
  v175 = *(_QWORD *)(v176 - 8);
  v8 = MEMORY[0x24BDAC7A8](v176);
  v177 = (char *)&v153 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v166 = (char *)&v153 - v10;
  sub_2320057B8(0, (unint64_t *)&qword_2541B2A70, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0], v3);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v186 = (uint64_t)&v153 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v172 = (uint64_t)&v153 - v14;
  v173 = sub_232200024();
  v168 = *(_QWORD *)(v173 - 8);
  v15 = MEMORY[0x24BDAC7A8](v173);
  v169 = (char *)&v153 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v167 = (char *)&v153 - v17;
  sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], v3);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v162 = (char *)&v153 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v163 = (char *)&v153 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v164 = (uint64_t)&v153 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v153 - v25;
  sub_2320057B8(0, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], v3);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v165 = (char *)&v153 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v179 = (char *)&v153 - v30;
  v31 = sub_2321FDC6C();
  v181 = *(_QWORD *)(v31 - 8);
  v182 = v31;
  v32 = MEMORY[0x24BDAC7A8](v31);
  v161 = (char *)&v153 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x24BDAC7A8](v32);
  v170 = (char *)&v153 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v171 = (char *)&v153 - v37;
  MEMORY[0x24BDAC7A8](v36);
  v178 = (char *)&v153 - v38;
  v39 = (uint64_t (*)(uint64_t))MEMORY[0x24BE45AD8];
  sub_2320057B8(0, &qword_2541B3560, (uint64_t (*)(uint64_t))MEMORY[0x24BE45AD8], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  MEMORY[0x24BDAC7A8](v40);
  v42 = (char *)&v153 - v41;
  sub_2320057B8(0, &qword_2541B55D8, v39, v3);
  MEMORY[0x24BDAC7A8](v43);
  v45 = (char *)&v153 - v44;
  v46 = sub_23220126C();
  v47 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v183 = (char *)&v153 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_2321FFD78();
  v50 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v52 = (char *)&v153 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_2322000CC();
  (*(void (**)(char *, id, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v52, v189, v53);
  v54 = *MEMORY[0x24BE4AD38];
  v190 = v50;
  v55 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 104);
  v188 = v49;
  v55(v52, v54, v49);
  sub_232026DE8(v187, (uint64_t)v42, &qword_2541B3560, v39, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  v56 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
  v57 = 1;
  if (v56(v42, 1, v46) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v45, v42, v46);
    v57 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56))(v45, v57, 1, v46);
  if (v56(v45, 1, v46) == 1)
  {
    sub_232016D88((uint64_t)v45, &qword_2541B55D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE45AD8]);
LABEL_5:
    v58 = v186;
    v59 = v188;
    v60 = v190;
LABEL_10:
    v70 = v185;
    sub_2321FE6B0();
    v71 = sub_2321FE6D4();
    v72 = (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70];
    (*(void (**)(id, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v70, 0, 1, v71);
    sub_232003E9C(0, &qword_2541B0CD0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 56))(v58, 1, 1, v59);
    v73 = v184;
    sub_232026DE8((uint64_t)v70, v184, &qword_2541B28D0, v72, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v74 = sub_2320151CC(0, 0xF000000000000000, 0xBu, v58, v73, 0, 0);
    sub_232016D88((uint64_t)v70, &qword_2541B28D0, v72);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v60 + 8))(v52, v59);
    return (uint64_t)v74;
  }
  v61 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
  v62 = v183;
  v187 = v46;
  v61(v183, v45, v46);
  sub_232026DE8((uint64_t)v180, (uint64_t)v26, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v63 = sub_2321FD8B8();
  v64 = *(_QWORD **)(v63 - 8);
  v65 = (unsigned int (*)(char *, uint64_t, uint64_t))v64[6];
  if (v65(v26, 1, v63) == 1)
  {
    sub_232016D88((uint64_t)v26, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
    v66 = (uint64_t)v179;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v181 + 56))(v179, 1, 1, v182);
    v60 = v190;
LABEL_9:
    (*(void (**)(char *, uint64_t))(v47 + 8))(v62, v187);
    sub_232016D88(v66, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    v58 = v186;
    v59 = v188;
    goto LABEL_10;
  }
  v66 = (uint64_t)v179;
  sub_2321FD870();
  v160 = (void (*)(char *, uint64_t))v64[1];
  v160(v26, v63);
  v68 = v181;
  v67 = v182;
  v180 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v181 + 56);
  v180(v66, 0, 1, v182);
  v159 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v68 + 48);
  v69 = v159(v66, 1, v67);
  v60 = v190;
  if (v69 == 1)
    goto LABEL_9;
  v158 = v47;
  v76 = v178;
  v157 = *(void (**)(char *, uint64_t, uint64_t))(v68 + 32);
  v157(v178, v66, v67);
  v77 = v67;
  v78 = (void *)sub_232201260();
  v79 = (void *)sub_2321FDBF4();
  v80 = (char *)objc_msgSend(v78, sel_statisticsForDate_, v79);

  if (!v80)
  {
    (*(void (**)(char *, uint64_t))(v68 + 8))(v76, v77);
    (*(void (**)(char *, uint64_t))(v158 + 8))(v183, v187);
    goto LABEL_5;
  }
  v81 = v80;
  v82 = objc_msgSend(v80, sel_averageQuantity);
  v83 = v177;
  v179 = v81;
  if (!v82)
    goto LABEL_20;
  v84 = v82;
  v85 = v68;
  v86 = objc_msgSend(v81, sel_duration);
  if (!v86)
  {

LABEL_20:
    sub_232200318();
    v96 = sub_232200390();
    v97 = sub_2322012E4();
    if (os_log_type_enabled(v96, v97))
    {
      v98 = (uint8_t *)swift_slowAlloc();
      v99 = swift_slowAlloc();
      v193 = v99;
      *(_DWORD *)v98 = 136315138;
      *(_QWORD *)&v191[0] = v174;
      swift_getMetatypeMetadata();
      v100 = sub_232200F00();
      *(_QWORD *)&v191[0] = sub_232013174(v100, v101, &v193);
      sub_232201710();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v96, v97, "[%s]: cannot classify audio exposure without both LEQ and duration", v98, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v99, -1, -1);
      MEMORY[0x2348FF468](v98, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v175 + 8))(v83, v176);
    v103 = v185;
    v102 = v186;
    v59 = v188;
    v104 = v178;
    v60 = v190;
    sub_2321FE6B0();
    v105 = sub_2321FE6D4();
    v106 = (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70];
    (*(void (**)(id, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 56))(v103, 0, 1, v105);
    sub_232003E9C(0, &qword_2541B0CD0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 56))(v102, 1, 1, v59);
    v107 = v184;
    sub_232026DE8((uint64_t)v103, v184, &qword_2541B28D0, v106, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v74 = sub_2320151CC(0, 0xF000000000000000, 0xBu, v102, v107, 0, 0);
    sub_232016D88((uint64_t)v103, &qword_2541B28D0, v106);
    goto LABEL_26;
  }
  v87 = v86;
  v88 = objc_msgSend((id)objc_opt_self(), sel_secondUnit);
  objc_msgSend(v87, sel_doubleValueForUnit_, v88);
  v90 = v89;

  v60 = v190;
  v155 = v87;
  v156 = v84;
  if (v90 <= 2.22507386e-308)
  {
    v108 = v166;
    sub_232200318();
    v109 = sub_232200390();
    v110 = sub_2322012E4();
    if (os_log_type_enabled(v109, v110))
    {
      v111 = (uint8_t *)swift_slowAlloc();
      v112 = swift_slowAlloc();
      *(_QWORD *)&v191[0] = v112;
      *(_DWORD *)v111 = 136315138;
      v113 = sub_2320689E0();
      v193 = sub_232013174(v113, v114, (uint64_t *)v191);
      sub_232201710();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v109, v110, "[%s]: Found sample with nil-duration, which is unsupported", v111, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v112, -1, -1);
      MEMORY[0x2348FF468](v111, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v175 + 8))(v108, v176);
    v116 = v185;
    v115 = v186;
    v59 = v188;
    v104 = v178;
    sub_2321FE6B0();
    v117 = sub_2321FE6D4();
    v118 = (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70];
    (*(void (**)(id, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 56))(v116, 0, 1, v117);
    sub_232003E9C(0, &qword_2541B0CD0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 56))(v115, 1, 1, v59);
    v119 = v184;
    sub_232026DE8((uint64_t)v116, v184, &qword_2541B28D0, v118, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v74 = sub_2320151CC(0, 0xF000000000000000, 0xBu, v115, v119, 0, 0);
    sub_232016D88((uint64_t)v116, &qword_2541B28D0, v118);

LABEL_26:
    (*(void (**)(char *, uint64_t))(v181 + 8))(v104, v182);
    (*(void (**)(char *, uint64_t))(v158 + 8))(v183, v187);
    goto LABEL_11;
  }
  v91 = objc_msgSend(v179, sel_mostRecentQuantityDateInterval);
  if (v91)
  {
    v92 = v91;
    v93 = v163;
    sub_2321FD864();

    v94 = v93;
    v95 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v64[7];
    v95(v94, 0, 1, v63);
  }
  else
  {
    v95 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v64[7];
    v94 = v163;
    v95(v163, 1, 1, v63);
  }
  v120 = v171;
  v121 = (uint64_t)v94;
  v122 = v164;
  sub_2320004F8(v121, v164);
  v123 = v65((char *)v122, 1, v63);
  v124 = (uint64_t)v165;
  v154 = v52;
  if (v123 == 1)
  {
    sub_232016D88(v122, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
    v180(v124, 1, 1, v182);
LABEL_31:
    v126 = objc_msgSend(v179, sel_endDate);
    sub_2321FDC30();

    sub_232016D88(v124, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    goto LABEL_33;
  }
  sub_2321FD870();
  v160((char *)v122, v63);
  v125 = v182;
  v180(v124, 0, 1, v182);
  if (v159(v124, 1, v125) == 1)
    goto LABEL_31;
  v157(v120, v124, v125);
LABEL_33:
  v189 = v156;
  v127 = v167;
  sub_2322000B4();
  v128 = sub_232200018();
  v129 = *(void (**)(char *, uint64_t))(v168 + 8);
  v129(v127, v173);
  v130 = v128;
  v131 = 1;
  if (v130 != 2)
  {
    if (v130 != 3)
      goto LABEL_44;
    v131 = *MEMORY[0x24BDD2B68];
  }
  sub_232003E9C(0, &qword_2541B0D10);
  v132 = *(void (**)(char *, char *, uint64_t))(v85 + 16);
  v133 = (uint64_t)v170;
  v132(v170, v120, v182);
  v134 = (char *)HKCodableSummaryAudioExposureValue.init(leqQuantity:secondsListened:daysAggregated:lastUpdatedDate:)(v189, v131, v133, v90);
  v135 = v172;
  v136 = v188;
  (*(void (**)(uint64_t, char *, uint64_t))(v60 + 16))(v172, v154, v188);
  v137 = 1;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v60 + 56))(v135, 0, 1, v136);
  v138 = v169;
  sub_2322000B4();
  v139 = sub_232200018();
  v129(v138, v173);
  if (v139 != 2)
  {
    if (v139 != 3)
      goto LABEL_44;
    v137 = *MEMORY[0x24BDD2B68];
  }
  v185 = v134;
  sub_232003E9C(0, &qword_2541B56C8);
  if (__OFSUB__(0, v137))
  {
    __break(1u);
  }
  else
  {
    v140 = v171;
    sub_2321FDBB8();
    v141 = v182;
    v132(v170, v140, v182);
    v142 = (uint64_t)v162;
    sub_2321FD87C();
    v95((char *)v142, 0, 1, v63);
    v143 = HKCodableSummarySupplementaryValue.init(dateInterval:dataCount:)(v142, (uint64_t)objc_msgSend(v179, sel_dataCount), 0);
    v144 = v185;
    v145 = objc_msgSend(v185, sel_data);
    if (v145)
    {
      v146 = v145;
      sub_232003E9C(0, &qword_2541B0CD0);
      v147 = sub_2321FDAD4();
      v149 = v148;

      v150 = v172;
      v151 = v186;
      sub_232026DE8(v172, v186, (unint64_t *)&qword_2541B2A70, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v192 = 0;
      memset(v191, 0, sizeof(v191));
      v74 = sub_232015828(v147, v149, 2, v151, (uint64_t)v143, 0, (uint64_t)v191);

      sub_232003ED4(v147, v149);
      sub_232016D88(v150, (unint64_t *)&qword_2541B2A70, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0]);

      v152 = *(void (**)(char *, uint64_t))(v181 + 8);
      v152(v140, v141);
      v152(v178, v141);
      (*(void (**)(char *, uint64_t))(v158 + 8))(v183, v187);
      v59 = v188;
      v52 = v154;
      goto LABEL_11;
    }
  }
  __break(1u);
LABEL_44:
  result = sub_232201968();
  __break(1u);
  return result;
}

uint64_t sub_2320689E0()
{
  swift_getMetatypeMetadata();
  return sub_232200F00();
}

uint64_t sub_232068A0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC9Summaries54AudioExposureCurrentValueSummarySharableModelGenerator_domain;
  v2 = sub_2321FE3BC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  sub_232069FEC(v0 + OBJC_IVAR____TtC9Summaries54AudioExposureCurrentValueSummarySharableModelGenerator_request);
  return swift_deallocClassInstance();
}

uint64_t sub_232068A7C()
{
  return type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator(0);
}

uint64_t type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator(uint64_t a1)
{
  return sub_23201A14C(a1, (uint64_t *)&unk_2541AF050);
}

uint64_t sub_232068A98()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2321FE3BC();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request(319);
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request(uint64_t a1)
{
  return sub_23201A14C(a1, qword_2541B03C0);
}

_QWORD *sub_232068B40(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2322000CC();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_2321FE4A0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[7];
    *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_2321FD8B8();
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v19 = a3[8];
    v20 = a3[9];
    v21 = (_QWORD *)((char *)a1 + v19);
    v22 = (_QWORD *)((char *)a2 + v19);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    *((_BYTE *)a1 + v20) = *((_BYTE *)a2 + v20);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_232068CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_2322000CC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_2321FE4A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 28);
  v8 = sub_2321FD8B8();
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_232068D74(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  v6 = sub_2322000CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2321FE4A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = sub_2321FD8B8();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v12, v13, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v17 = a3[8];
  v18 = a3[9];
  v19 = (_QWORD *)(a1 + v17);
  v20 = (_QWORD *)(a2 + v17);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  *(_BYTE *)(a1 + v18) = *(_BYTE *)(a2 + v18);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_232068EC0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;

  v6 = sub_2322000CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2321FE4A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v11 = a3[7];
  v12 = (void *)(a1 + v11);
  v13 = (void *)(a2 + v11);
  v14 = sub_2321FD8B8();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 24))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v12, v13, v14);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  v20 = a3[8];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_232069074(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_2322000CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2321FE4A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = sub_2321FD8B8();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v17 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v17) = *(_BYTE *)(a2 + v17);
  return a1;
}

uint64_t sub_2320691B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_2322000CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2321FE4A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v12 = (void *)(a1 + v11);
  v13 = (void *)(a2 + v11);
  v14 = sub_2321FD8B8();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  v20 = a3[8];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_232069354()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_232069360(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;

  v6 = sub_2322000CC();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_2321FE4A0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_7:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[7];
    goto LABEL_7;
  }
  v16 = *(_QWORD *)(a1 + a3[8] + 8);
  if (v16 >= 0xFFFFFFFF)
    LODWORD(v16) = -1;
  return (v16 + 1);
}

uint64_t sub_232069448()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_232069454(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v8 = sub_2322000CC();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
LABEL_8:
    v11(v12, a2, a2, v10);
    return;
  }
  v13 = sub_2321FE4A0();
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[5];
LABEL_7:
    v12 = a1 + v15;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v14 = *(_QWORD *)(v16 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v16;
    v15 = a4[7];
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + a4[8] + 8) = (a2 - 1);
}

void sub_232069538()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_2322000CC();
  if (v0 <= 0x3F)
  {
    sub_2321FE4A0();
    if (v1 <= 0x3F)
    {
      sub_2320057B8(319, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

_UNKNOWN **sub_232069604()
{
  return &off_250100200;
}

uint64_t sub_232069610(uint64_t a1)
{
  uint64_t result;

  result = sub_232000590(&qword_2541B0460, type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator, (uint64_t)&unk_232212734);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

_UNKNOWN **sub_23206964C()
{
  return &off_250100248;
}

uint64_t sub_232069658()
{
  return swift_retain();
}

uint64_t sub_23206966C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC9Summaries54AudioExposureCurrentValueSummarySharableModelGenerator_domain;
  v4 = sub_2321FE3BC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_2320696BC(uint64_t a1)
{
  uint64_t result;

  result = sub_232000590(&qword_2541B0470, type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator, (uint64_t)&unk_2322126E0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

_UNKNOWN **sub_2320696F8()
{
  return &off_250100260;
}

uint64_t sub_232069704(uint64_t a1)
{
  uint64_t result;

  result = sub_232000590(&qword_2541B4D88, type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator, (uint64_t)&unk_2322126FC);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_232069740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  void *v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  char *v27;
  void (*v28)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t inited;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  id v38;
  unint64_t v39;
  void (*v40)(unint64_t, _QWORD, uint64_t);
  unint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[4];

  v53 = a2;
  v50 = a1;
  v66 = sub_2321FE38C();
  v63 = *(_QWORD *)(v66 - 8);
  MEMORY[0x24BDAC7A8](v66);
  v64 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2321FE3BC();
  v69 = *(_QWORD *)(v5 - 8);
  v70 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v68 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v49 - v9;
  sub_2320057B8(0, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], v7);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v49 - v12;
  v56 = sub_232200024();
  v55 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_232201278();
  v57 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v51 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232069E90();
  v67 = v17;
  v65 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v62 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_2321FDC6C();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2321FD894();
  sub_2321FE3D4();
  sub_232016AD8(v72, v72[3]);
  v23 = (void *)sub_2321FE314();
  v54 = type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request(0);
  v52 = a3 + *(int *)(v54 + 20);
  v24 = (void *)sub_2321FE464();
  sub_2322000B4();
  v25 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  v59 = v22;
  v26 = v22;
  v27 = v51;
  v25(v13, v26, v19);
  v60 = v20;
  v28 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56);
  v61 = v19;
  v28(v13, 0, 1, v19);
  v29 = sub_2321FD8B8();
  v30 = *(_QWORD *)(v29 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v10, v50, v29);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v10, 0, 1, v29);
  sub_23220129C();

  sub_232016D88((uint64_t)v10, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
  sub_232016D88((uint64_t)v13, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v15, v56);
  sub_232016AFC((uint64_t)v72);
  sub_2321FE434();
  v31 = (void *)sub_2321FE3F8();
  sub_232027434();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232210D20;
  *(_QWORD *)(inited + 32) = sub_2321FE464();
  v71 = inited;
  sub_232201050();
  LOBYTE(v15) = *(_BYTE *)(a3 + *(int *)(v54 + 36));
  sub_2320057B8(0, &qword_2541B7530, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v33 = sub_2321FE194();
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(_QWORD *)(v34 + 72);
  v36 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  v37 = swift_allocObject();
  if ((v15 & 1) != 0)
  {
    *(_OWORD *)(v37 + 16) = xmmword_232210D40;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v34 + 104))(v37 + v36, *MEMORY[0x24BE47410], v33);
  }
  else
  {
    *(_OWORD *)(v37 + 16) = xmmword_232210D30;
    v39 = v37 + v36;
    v40 = *(void (**)(unint64_t, _QWORD, uint64_t))(v34 + 104);
    v40(v39, *MEMORY[0x24BE47460], v33);
    v40(v39 + v35, *MEMORY[0x24BE47490], v33);
  }
  v38 = v31;
  sub_2321A492C(v37);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v41 = swift_bridgeObjectRetain();
  sub_2321A4950(v41);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t))(v63 + 104))(v64, *MEMORY[0x24BE47918], v66);
  v42 = v68;
  sub_2321FE3B0();

  swift_bridgeObjectRelease();
  sub_232000590(&qword_2541B55E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE45AF0], MEMORY[0x24BE45AE8]);
  v43 = v58;
  v44 = sub_232200738();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v42, v70);
  sub_232016AFC((uint64_t)v72);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v27, v43);
  v72[0] = v44;
  sub_232069F3C();
  sub_2320057B8(0, &qword_2541B3560, (uint64_t (*)(uint64_t))MEMORY[0x24BE45AD8], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  sub_232000590(&qword_2541B2FE8, (uint64_t (*)(uint64_t))sub_232069F3C, MEMORY[0x24BDB9AF8]);
  v45 = v62;
  sub_2322007A4();
  swift_release();
  sub_232000590(&qword_2541B2C50, (uint64_t (*)(uint64_t))sub_232069E90, MEMORY[0x24BDB96C0]);
  v46 = v67;
  v47 = sub_232200774();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v45, v46);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v59, v61);
  return v47;
}

void sub_232069E90()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2C58)
  {
    sub_232069F3C();
    sub_2320057B8(255, &qword_2541B3560, (uint64_t (*)(uint64_t))MEMORY[0x24BE45AD8], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
    sub_232000590(&qword_2541B2FE8, (uint64_t (*)(uint64_t))sub_232069F3C, MEMORY[0x24BDB9AF8]);
    v0 = sub_232200540();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2C58);
  }
}

void sub_232069F3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2FF0)
  {
    sub_23220126C();
    sub_232002B9C();
    v0 = sub_232200624();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2FF0);
  }
}

uint64_t sub_232069FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_232069FEC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AudioExposureCurrentValueSummarySharableModelGenerator.Request(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_23206A028@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  void *v4;
  void *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)();
  unint64_t *v14;
  void *v15;
  uint64_t *v16;
  id v17;
  uint64_t v18;
  id v19;
  id result;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  unint64_t *v23;
  void *v24;
  uint64_t v25;
  uint64_t *v26;
  id v27;
  id v28;
  uint64_t *v29;
  id v30;
  uint64_t v31;
  uint64_t *v32;
  id v33;
  id v34;
  id v35;

  v5 = v4;
  v34 = a1;
  v35 = a2;
  v8 = sub_2321FDD14();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch((unint64_t)objc_msgSend(v5, sel_code))
  {
    case 0x3FuLL:
      v21 = type metadata accessor for SleepSnidgetFeedItemModelProvider();
      v22 = (uint64_t (*)(uint64_t))type metadata accessor for SleepSnidgetFeedItemModelProvider;
      a4[3] = v21;
      v23 = &qword_255F9CF18;
      v24 = &unk_232217840;
      goto LABEL_24;
    case 0x46uLL:
    case 0x4FuLL:
    case 0x63uLL:
    case 0xBDuLL:
      v12 = type metadata accessor for TimePeriodSnidgetFeedItemModelProvider();
      v13 = type metadata accessor for TimePeriodSnidgetFeedItemModelProvider;
      a4[3] = v12;
      v14 = qword_255F9BFD8;
      v15 = &unk_2322106E4;
      goto LABEL_3;
    case 0x50uLL:
      v12 = type metadata accessor for BloodPressureSnidgetFeedItemModelProvider();
      v13 = type metadata accessor for BloodPressureSnidgetFeedItemModelProvider;
      a4[3] = v12;
      v14 = &qword_255F9CF48;
      v15 = &unk_2322176B8;
      goto LABEL_3;
    case 0x5BuLL:
    case 0x5CuLL:
    case 0x5FuLL:
    case 0x60uLL:
    case 0x61uLL:
    case 0x9DuLL:
    case 0x9EuLL:
    case 0x9FuLL:
    case 0xA0uLL:
    case 0xA1uLL:
    case 0xA2uLL:
    case 0xA3uLL:
    case 0xA4uLL:
    case 0xA5uLL:
    case 0xA6uLL:
    case 0xA7uLL:
    case 0xA8uLL:
    case 0xA9uLL:
    case 0xAAuLL:
    case 0xABuLL:
    case 0xC9uLL:
    case 0xCAuLL:
    case 0xCBuLL:
    case 0xCCuLL:
    case 0xCDuLL:
    case 0xCEuLL:
    case 0xCFuLL:
    case 0xDCuLL:
    case 0xDDuLL:
    case 0xDEuLL:
    case 0xDFuLL:
    case 0xE0uLL:
    case 0xE1uLL:
    case 0xE2uLL:
    case 0xE5uLL:
    case 0xE6uLL:
    case 0xE7uLL:
    case 0xE8uLL:
    case 0xE9uLL:
    case 0xEAuLL:
    case 0xEBuLL:
    case 0xF0uLL:
    case 0xF1uLL:
    case 0xF2uLL:
    case 0xF3uLL:
    case 0xF4uLL:
    case 0x106uLL:
    case 0x107uLL:
    case 0x108uLL:
    case 0x109uLL:
    case 0x139uLL:
    case 0x13AuLL:
      v12 = type metadata accessor for CategoryValueSnidgetFeedItemModelProvider();
      v13 = type metadata accessor for CategoryValueSnidgetFeedItemModelProvider;
      a4[3] = v12;
      v14 = &qword_255F9CEF0;
      v15 = &unk_232214608;
      goto LABEL_3;
    case 0x64uLL:
      v21 = type metadata accessor for ActivitySummarySnidgetFeedItemModelProvider(0);
      v22 = type metadata accessor for ActivitySummarySnidgetFeedItemModelProvider;
      a4[3] = v21;
      v23 = (unint64_t *)&unk_2541B6F08;
      v24 = &unk_232219FFC;
      goto LABEL_24;
    case 0x7CuLL:
      v12 = type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider();
      v13 = type metadata accessor for CardioFitnessSnidgetFeedItemModelProvider;
      a4[3] = v12;
      v14 = &qword_2541B6F00;
      v15 = &unk_232212578;
      goto LABEL_3;
    case 0x90uLL:
      v21 = type metadata accessor for ECGSnidgetFeedItemModelProvider();
      v22 = (uint64_t (*)(uint64_t))type metadata accessor for ECGSnidgetFeedItemModelProvider;
      a4[3] = v21;
      v23 = &qword_255F9CF38;
      v24 = &unk_232215804;
      goto LABEL_24;
    case 0x91uLL:
      v21 = type metadata accessor for AudiogramSnidgetFeedItemModelProvider();
      v22 = (uint64_t (*)(uint64_t))type metadata accessor for AudiogramSnidgetFeedItemModelProvider;
      a4[3] = v21;
      v23 = &qword_255F9CF50;
      v24 = &unk_2322175E4;
      goto LABEL_24;
    case 0xACuLL:
    case 0xADuLL:
      v12 = type metadata accessor for AudioExposureSnidgetFeedItemModelProvider();
      v13 = type metadata accessor for AudioExposureSnidgetFeedItemModelProvider;
      a4[3] = v12;
      v14 = &qword_255F9CF30;
      v15 = &unk_232217D78;
      goto LABEL_3;
    case 0xBFuLL:
    case 0xC0uLL:
    case 0xC1uLL:
      v21 = type metadata accessor for OngoingFactorsSnidgetFeedItemModelProvider();
      v22 = (uint64_t (*)(uint64_t))type metadata accessor for OngoingFactorsSnidgetFeedItemModelProvider;
      a4[3] = v21;
      v23 = (unint64_t *)&unk_255F9CF40;
      v24 = &unk_23221A0D8;
      goto LABEL_24;
    case 0xF8uLL:
      v25 = type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider();
      a4[3] = v25;
      a4[4] = sub_232000590(&qword_255F9CF58, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenSnidgetFeedItemModelProvider, (uint64_t)&unk_23221A73C);
      v26 = sub_2320251BC(a4);
      sub_23206A5B0(a3, (uint64_t)v26 + *(int *)(v25 + 20));
      v27 = objc_allocWithZone(MEMORY[0x24BDD3968]);
      v28 = v34;
      result = objc_msgSend(v27, sel_init);
      *v26 = (uint64_t)v28;
      *(uint64_t *)((char *)v26 + *(int *)(v25 + 24)) = (uint64_t)result;
      return result;
    case 0xF9uLL:
      v21 = type metadata accessor for WalkingSteadinessSnidgetFeedItemModelProvider();
      v22 = (uint64_t (*)(uint64_t))type metadata accessor for WalkingSteadinessSnidgetFeedItemModelProvider;
      a4[3] = v21;
      v23 = &qword_255F9CF60;
      v24 = &unk_23221732C;
      goto LABEL_24;
    case 0x101uLL:
      v21 = type metadata accessor for VisionPrescriptionSnidgetFeedItemModelProvider();
      v22 = (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionSnidgetFeedItemModelProvider;
      a4[3] = v21;
      v23 = &qword_255F9CF00;
      v24 = &unk_23221325C;
      goto LABEL_24;
    case 0x10DuLL:
      v12 = type metadata accessor for UnderwaterDepthSnidgetFeedItemModelProvider();
      v13 = type metadata accessor for UnderwaterDepthSnidgetFeedItemModelProvider;
      a4[3] = v12;
      v14 = &qword_255F9CF08;
      v15 = &unk_232215E08;
      goto LABEL_3;
    case 0x113uLL:
      v21 = type metadata accessor for BreathingDisturbancesValueSnidgetFeedItemModelProvider();
      v22 = (uint64_t (*)(uint64_t))type metadata accessor for BreathingDisturbancesValueSnidgetFeedItemModelProvider;
      a4[3] = v21;
      v23 = &qword_255F9CEF8;
      v24 = &unk_2322160A4;
      goto LABEL_24;
    case 0x115uLL:
      v12 = type metadata accessor for MostRecentRangeSnidgetFeedItemModelProvider();
      v13 = type metadata accessor for MostRecentRangeSnidgetFeedItemModelProvider;
      a4[3] = v12;
      v14 = &qword_255F9BD28;
      v15 = &unk_232210544;
      goto LABEL_3;
    case 0x11CuLL:
      v21 = type metadata accessor for StateOfMindSnidgetFeedItemModelProvider();
      v22 = (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindSnidgetFeedItemModelProvider;
      a4[3] = v21;
      v23 = &qword_255F9CF10;
      v24 = &unk_232212F9C;
      goto LABEL_24;
    case 0x11FuLL:
      v21 = type metadata accessor for GAD7AssessmentSnidgetFeedItemModelProvider();
      v22 = (uint64_t (*)(uint64_t))type metadata accessor for GAD7AssessmentSnidgetFeedItemModelProvider;
      a4[3] = v21;
      v23 = &qword_255F9CF28;
      v24 = &unk_232214C18;
      goto LABEL_24;
    case 0x120uLL:
      v21 = type metadata accessor for PHQ9AssessmentSnidgetFeedItemModelProvider();
      v22 = (uint64_t (*)(uint64_t))type metadata accessor for PHQ9AssessmentSnidgetFeedItemModelProvider;
      a4[3] = v21;
      v23 = &qword_255F9CF20;
      v24 = &unk_2322196D8;
LABEL_24:
      a4[4] = sub_232000590(v23, v22, (uint64_t)v24);
      v29 = sub_2320251BC(a4);
      sub_23206A5B0(a3, (uint64_t)v29 + *(int *)(v21 + 20));
      v30 = v34;
      *v29 = (uint64_t)v34;
      result = v30;
      break;
    case 0x131uLL:
      v31 = type metadata accessor for BalanceSnidgetFeedItemModelProvider();
      a4[3] = v31;
      a4[4] = sub_232000590(&qword_2541B6ED0, (uint64_t (*)(uint64_t))type metadata accessor for BalanceSnidgetFeedItemModelProvider, (uint64_t)&unk_232215C70);
      v32 = sub_2320251BC(a4);
      sub_23206A5B0(a3, (uint64_t)v32 + *(int *)(v31 + 20));
      *v32 = (uint64_t)v34;
      (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BDCEF70], v8);
      v33 = v34;
      sub_2321FDD20();
      result = (id)(*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      break;
    default:
      v12 = type metadata accessor for QuantityValueSnidgetFeedItemModelProvider();
      v13 = type metadata accessor for QuantityValueSnidgetFeedItemModelProvider;
      a4[3] = v12;
      v14 = &qword_2541B5BC0;
      v15 = &unk_2322134E8;
LABEL_3:
      a4[4] = sub_232000590(v14, (uint64_t (*)(uint64_t))v13, (uint64_t)v15);
      v16 = sub_2320251BC(a4);
      sub_23206A5B0(a3, (uint64_t)v16 + *(int *)(v12 + 24));
      v17 = v34;
      v18 = (uint64_t)v35;
      *v16 = (uint64_t)v34;
      v16[1] = v18;
      v19 = v17;
      result = v35;
      break;
  }
  return result;
}

uint64_t sub_23206A5B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for ActivityDataTypeDetailConfigurationProvider()
{
  return &type metadata for ActivityDataTypeDetailConfigurationProvider;
}

uint64_t sub_23206A604(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  uint64_t *v8;
  uint64_t v10;
  id v11;
  uint64_t v12;
  char v13;
  ValueMetadata *v14;
  unint64_t v15;

  v2 = sub_2321FF364();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2321FF3AC();
  sub_2321FF3D0();
  v14 = &type metadata for ActivityDataTypeDetailConfigurationProvider.CustomChartComponent;
  v15 = sub_23206A818();
  v11 = 0;
  LOBYTE(v12) = 1;
  sub_2321FF418();
  sub_2321FF700();
  swift_bridgeObjectRelease();
  sub_23206A85C((uint64_t)&v11);
  sub_2321FF3B8();
  v6 = objc_msgSend((id)objc_opt_self(), sel_activitySummaryType);
  v14 = &type metadata for ActivityDataTypeDetailConfigurationProvider.CustomDescriptionComponent;
  v15 = sub_23206A940();
  v11 = v6;
  v12 = 0;
  v13 = 1;
  sub_2321FF700();
  swift_bridgeObjectRelease();
  sub_23206A85C((uint64_t)&v11);
  v7 = a1;
  sub_2321FF358();
  sub_2321FF3C4();
  v14 = (ValueMetadata *)v2;
  v15 = MEMORY[0x24BE43E10];
  v8 = sub_2320251BC((uint64_t *)&v11);
  (*(void (**)(uint64_t *, char *, uint64_t))(v3 + 16))(v8, v5, v2);
  sub_2321FF700();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return sub_23206A85C((uint64_t)&v11);
}

uint64_t sub_23206A7F4(void *a1)
{
  return sub_23206A604(a1);
}

unint64_t sub_23206A818()
{
  unint64_t result;

  result = qword_2541B13A0;
  if (!qword_2541B13A0)
  {
    result = MEMORY[0x2348FF39C](&unk_232212A28, &type metadata for ActivityDataTypeDetailConfigurationProvider.CustomChartComponent);
    atomic_store(result, (unint64_t *)&qword_2541B13A0);
  }
  return result;
}

uint64_t sub_23206A85C(uint64_t a1)
{
  uint64_t v2;

  sub_23206A898();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_23206A898()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B1218)
  {
    sub_23206A8EC();
    v0 = sub_2322016F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B1218);
  }
}

unint64_t sub_23206A8EC()
{
  unint64_t result;

  result = qword_2541B1210;
  if (!qword_2541B1210)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_2541B1210);
  }
  return result;
}

unint64_t sub_23206A940()
{
  unint64_t result;

  result = qword_2541B13A8;
  if (!qword_2541B13A8)
  {
    result = MEMORY[0x2348FF39C](&unk_2322129F8, &type metadata for ActivityDataTypeDetailConfigurationProvider.CustomDescriptionComponent);
    atomic_store(result, (unint64_t *)&qword_2541B13A8);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ActivityDataTypeDetailConfigurationProvider.CustomDescriptionComponent(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = v3;
  return a1;
}

void destroy for ActivityDataTypeDetailConfigurationProvider.CustomDescriptionComponent(id *a1)
{

}

uint64_t assignWithCopy for ActivityDataTypeDetailConfigurationProvider.CustomDescriptionComponent(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v7;
  return a1;
}

uint64_t assignWithTake for ActivityDataTypeDetailConfigurationProvider.CustomDescriptionComponent(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityDataTypeDetailConfigurationProvider.CustomDescriptionComponent(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityDataTypeDetailConfigurationProvider.CustomDescriptionComponent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityDataTypeDetailConfigurationProvider.CustomDescriptionComponent()
{
  return &type metadata for ActivityDataTypeDetailConfigurationProvider.CustomDescriptionComponent;
}

uint64_t getEnumTagSinglePayload for ActivityDataTypeDetailConfigurationProvider.CustomChartComponent(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ActivityDataTypeDetailConfigurationProvider.CustomChartComponent(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ActivityDataTypeDetailConfigurationProvider.CustomChartComponent()
{
  return &type metadata for ActivityDataTypeDetailConfigurationProvider.CustomChartComponent;
}

uint64_t sub_23206AB4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v10;

  v3 = sub_2321FF40C();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)v1;
  v7 = *(_BYTE *)(v1 + 8);
  (*(void (**)(char *, uint64_t))(v8 + 16))(v5, a1);
  type metadata accessor for ActivityDataTypeDetailChartDataSource();
  swift_allocObject();
  return sub_232098478(v5, v6, v7);
}

void sub_23206ABFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  v3 = sub_2321FF40C();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + 8);
  v7 = *(unsigned __int8 *)(v1 + 16);
  (*(void (**)(char *, uint64_t))(v8 + 16))(v5, a1);
  type metadata accessor for ActivityDataTypeDetailDescriptionDataSource();
  swift_allocObject();
  sub_2320E0238((uint64_t)v5, v6, v7);
}

uint64_t sub_23206ACAC(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = sub_2321FDDD4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2321FDDA4();
  v6 = sub_23206AEA8(a1, (uint64_t)v5);
  v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v9 = 0;
  if ((v8 & 1) == 0)
  {
    if (a1 == 4 || a1 == 5)
    {
      if (qword_2541B7488 != -1)
        swift_once();
      sub_2321FDA14();
      sub_2320057B8(0, (unint64_t *)&qword_2541B5860, (uint64_t (*)(uint64_t))sub_23204FB8C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v10 = swift_allocObject();
      v11 = MEMORY[0x24BEE1768];
      *(_OWORD *)(v10 + 16) = xmmword_232210D40;
      v12 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v10 + 56) = v11;
      *(_QWORD *)(v10 + 64) = v12;
      *(_QWORD *)(v10 + 32) = v6;
      v9 = sub_232200EA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      return 0;
    }
  }
  return v9;
}

uint64_t sub_23206AEA8(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unsigned int *v18;
  unint64_t v19;
  uint64_t v20;
  void (*v21)(unint64_t, char *, uint64_t);
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;

  v38 = a2;
  v3 = sub_2321FDC6C();
  v37 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v33 - v7;
  v9 = sub_2321FD960();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v40 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2321FDDC8();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v39 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v33 - v16;
  if (a1 == 4)
  {
    v35 = v9;
    v36 = v3;
    v34 = v10;
    v18 = (unsigned int *)MEMORY[0x24BDCF220];
  }
  else
  {
    if (a1 != 5)
      return 0;
    v35 = v9;
    v36 = v3;
    v34 = v10;
    v18 = (unsigned int *)MEMORY[0x24BDCF1E8];
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))((char *)&v33 - v16, *v18, v12);
  sub_2320057B8(0, &qword_2541B5798, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF290], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v19 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_232210D40;
  v21 = *(void (**)(unint64_t, char *, uint64_t))(v13 + 16);
  v21(v20 + v19, v17, v12);
  sub_2321AA91C(v20);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_2321FD894();
  sub_2321FD870();
  v22 = v40;
  sub_2321FDD44();
  swift_bridgeObjectRelease();
  v23 = v36;
  v24 = *(void (**)(char *, uint64_t))(v37 + 8);
  v24(v6, v36);
  v24(v8, v23);
  v25 = v39;
  v21((unint64_t)v39, v17, v12);
  v26 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v25, v12);
  if (v26 != *MEMORY[0x24BDCF250])
  {
    v29 = v34;
    v28 = v35;
    if (v26 == *MEMORY[0x24BDCF220])
    {
      v30 = sub_2321FD924();
LABEL_11:
      v27 = v30;
      (*(void (**)(char *, uint64_t))(v29 + 8))(v22, v28);
      goto LABEL_12;
    }
    if (v26 == *MEMORY[0x24BDCF1E8])
    {
      v30 = sub_2321FD90C();
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v22, v35);
    v31 = *(void (**)(char *, uint64_t))(v13 + 8);
    v31(v17, v12);
    v31(v25, v12);
    return 0;
  }
  v27 = sub_2321FD93C();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v22, v35);
LABEL_12:
  (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v12);
  return v27;
}

id sub_23206B218()
{
  uint64_t v0;
  void *v1;
  id v2;
  id result;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 24);
  if (v1)
  {
    v2 = *(id *)(v0 + 24);
LABEL_5:
    v5 = v1;
    return v2;
  }
  result = objc_msgSend((id)objc_opt_self(), sel_sharedInstanceForHealthStore_, *(_QWORD *)(v0 + 16));
  if (result)
  {
    v4 = *(void **)(v0 + 24);
    *(_QWORD *)(v0 + 24) = result;
    v2 = result;

    v1 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_23206B294(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  const char *v20;
  unint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;
  char v26;
  const char *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  char v59;
  id v60;
  NSObject *v61;
  os_log_type_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  id v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  NSObject *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  NSObject *v75;
  uint64_t v76;
  uint64_t v77;

  v3 = sub_23220039C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(a1, sel_identifier);
  v8 = sub_232200EC4();
  v10 = v9;

  if (sub_232200EC4() == v8 && v11 == v10)
  {
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v13 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v13 & 1) != 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    v18 = *(_BYTE *)(v1 + 32);
    v19 = 0xD000000000000027;
    v20 = "TRENDS_NOTIFICATION_TITLE_ACTIVE_ENERGY";
LABEL_16:
    v21 = (unint64_t)(v20 - 32) | 0x8000000000000000;
    v22 = MEMORY[0x24BEE4AF8];
    return sub_232088E70(v19, v21, v18, 0, 0xE000000000000000, v22);
  }
  if (sub_232200EC4() == v8 && v14 == v10)
  {
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  v16 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v16 & 1) != 0)
  {
LABEL_20:
    swift_bridgeObjectRelease();
    v18 = *(_BYTE *)(v1 + 32);
    v19 = 0xD000000000000020;
    v20 = "TRENDS_NOTIFICATION_TITLE_WEIGHT";
    goto LABEL_16;
  }
  if (sub_232200EC4() == v8 && v17 == v10)
  {
    swift_bridgeObjectRelease();
LABEL_22:
    swift_bridgeObjectRelease();
    v18 = *(_BYTE *)(v1 + 32);
    v19 = 0xD000000000000029;
    v20 = "TRENDS_NOTIFICATION_TITLE_FLIGHTS_CLIMBED";
    goto LABEL_16;
  }
  v24 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v24 & 1) != 0)
    goto LABEL_22;
  if (sub_232200EC4() == v8 && v25 == v10)
  {
    swift_bridgeObjectRelease();
LABEL_27:
    swift_bridgeObjectRelease();
    v18 = *(_BYTE *)(v1 + 32);
    v27 = "TRENDS_NOTIFICATION_TITLE_BODY_TEMPERATURE";
LABEL_28:
    v21 = (unint64_t)(v27 - 32) | 0x8000000000000000;
    v22 = MEMORY[0x24BEE4AF8];
    v19 = 0xD00000000000002ALL;
    return sub_232088E70(v19, v21, v18, 0, 0xE000000000000000, v22);
  }
  v26 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v26 & 1) != 0)
    goto LABEL_27;
  if (sub_232200EC4() == v8 && v28 == v10)
  {
    swift_bridgeObjectRelease();
LABEL_33:
    swift_bridgeObjectRelease();
    v18 = *(_BYTE *)(v1 + 32);
    v27 = "TRENDS_NOTIFICATION_TITLE_EXERCISE_MINUTES";
    goto LABEL_28;
  }
  v29 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v29 & 1) != 0)
    goto LABEL_33;
  if (sub_232200EC4() == v8 && v30 == v10)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRelease();
    v18 = *(_BYTE *)(v1 + 32);
    v19 = 0xD000000000000027;
    v20 = "TRENDS_NOTIFICATION_TITLE_STAND_MINUTES";
    goto LABEL_16;
  }
  v31 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v31 & 1) != 0)
    goto LABEL_38;
  if (sub_232200EC4() == v8 && v32 == v10)
  {
    swift_bridgeObjectRelease();
LABEL_43:
    swift_bridgeObjectRelease();
    v18 = *(_BYTE *)(v1 + 32);
    v19 = 0xD000000000000027;
    v20 = "TRENDS_NOTIFICATION_TITLE_BLOOD_GLUCOSE";
    goto LABEL_16;
  }
  v33 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v33 & 1) != 0)
    goto LABEL_43;
  if (sub_232200EC4() == v8 && v34 == v10)
  {
    swift_bridgeObjectRelease();
LABEL_48:
    swift_bridgeObjectRelease();
    v18 = *(_BYTE *)(v1 + 32);
    v19 = 0xD000000000000032;
    v20 = "TRENDS_NOTIFICATION_TITLE_WALKING_RUNNING_DISTANCE";
    goto LABEL_16;
  }
  v35 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v35 & 1) != 0)
    goto LABEL_48;
  if (sub_232200EC4() == v8 && v36 == v10)
  {
    swift_bridgeObjectRelease();
LABEL_53:
    swift_bridgeObjectRelease();
    v18 = *(_BYTE *)(v1 + 32);
    v27 = "TRENDS_NOTIFICATION_TITLE_INSULIN_DELIVERY";
    goto LABEL_28;
  }
  v37 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v37 & 1) != 0)
    goto LABEL_53;
  if (sub_232200EC4() == v8 && v38 == v10)
  {
    swift_bridgeObjectRelease();
LABEL_58:
    swift_bridgeObjectRelease();
    v18 = *(_BYTE *)(v1 + 32);
    v19 = 0xD000000000000029;
    v20 = "TRENDS_NOTIFICATION_TITLE_MINDFUL_MINUTES";
    goto LABEL_16;
  }
  v39 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v39 & 1) != 0)
    goto LABEL_58;
  if (sub_232200EC4() == v8 && v40 == v10)
  {
    swift_bridgeObjectRelease();
LABEL_63:
    swift_bridgeObjectRelease();
    v18 = *(_BYTE *)(v1 + 32);
    v19 = 0xD00000000000002BLL;
    v20 = "TRENDS_NOTIFICATION_TITLE_OXYGEN_SATURATION";
    goto LABEL_16;
  }
  v41 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v41 & 1) != 0)
    goto LABEL_63;
  if (sub_232200EC4() == v8 && v42 == v10)
  {
    swift_bridgeObjectRelease();
LABEL_68:
    swift_bridgeObjectRelease();
    v18 = *(_BYTE *)(v1 + 32);
    v27 = "TRENDS_NOTIFICATION_TITLE_RESPIRATORY_RATE";
    goto LABEL_28;
  }
  v43 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v43 & 1) != 0)
    goto LABEL_68;
  if (sub_232200EC4() == v8 && v44 == v10)
  {
    swift_bridgeObjectRelease();
LABEL_73:
    swift_bridgeObjectRelease();
    v18 = *(_BYTE *)(v1 + 32);
    v19 = 0xD00000000000002CLL;
    v20 = "TRENDS_NOTIFICATION_TITLE_RESTING_HEART_RATE";
    goto LABEL_16;
  }
  v45 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v45 & 1) != 0)
    goto LABEL_73;
  if (sub_232200EC4() == v8 && v46 == v10)
  {
    swift_bridgeObjectRelease();
LABEL_78:
    swift_bridgeObjectRelease();
    v18 = *(_BYTE *)(v1 + 32);
    v19 = 0xD000000000000028;
    v20 = "TRENDS_NOTIFICATION_TITLE_SLEEP_ANALYSIS";
    goto LABEL_16;
  }
  v47 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v47 & 1) != 0)
    goto LABEL_78;
  if (sub_232200EC4() == v8 && v48 == v10)
  {
    swift_bridgeObjectRelease();
LABEL_83:
    swift_bridgeObjectRelease();
    v18 = *(_BYTE *)(v1 + 32);
    v19 = 0xD00000000000001FLL;
    v20 = "TRENDS_NOTIFICATION_TITLE_STEPS";
    goto LABEL_16;
  }
  v49 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v49 & 1) != 0)
    goto LABEL_83;
  if (sub_232200EC4() == v8 && v50 == v10)
  {
    swift_bridgeObjectRelease();
LABEL_88:
    swift_bridgeObjectRelease();
    v18 = *(_BYTE *)(v1 + 32);
    v19 = 0xD000000000000020;
    v20 = "TRENDS_NOTIFICATION_TITLE_PUSHES";
    goto LABEL_16;
  }
  v51 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v51 & 1) != 0)
    goto LABEL_88;
  if (sub_232200EC4() == v8 && v52 == v10)
  {
    swift_bridgeObjectRelease();
LABEL_93:
    swift_bridgeObjectRelease();
    v18 = *(_BYTE *)(v1 + 32);
    v19 = 0xD000000000000028;
    v20 = "TRENDS_NOTIFICATION_TITLE_CARDIO_FITNESS";
    goto LABEL_16;
  }
  v53 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v53 & 1) != 0)
    goto LABEL_93;
  if (sub_232200EC4() == v8 && v54 == v10)
  {
    swift_bridgeObjectRelease();
LABEL_98:
    swift_bridgeObjectRelease();
    v18 = *(_BYTE *)(v1 + 32);
    v19 = 0xD000000000000029;
    v20 = "TRENDS_NOTIFICATION_TITLE_CARDIO_RECOVERY";
    goto LABEL_16;
  }
  v55 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v55 & 1) != 0)
    goto LABEL_98;
  if (sub_232200EC4() == v8 && v56 == v10)
  {
    swift_bridgeObjectRelease();
LABEL_103:
    swift_bridgeObjectRelease();
    v18 = *(_BYTE *)(v1 + 32);
    v19 = 0xD00000000000002CLL;
    v20 = "TRENDS_NOTIFICATION_TITLE_WALKING_HEART_RATE";
    goto LABEL_16;
  }
  v57 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v57 & 1) != 0)
    goto LABEL_103;
  if (sub_232200EC4() == v8 && v58 == v10)
  {
    swift_bridgeObjectRelease_n();
LABEL_108:
    v18 = *(_BYTE *)(v1 + 32);
    v19 = 0xD000000000000022;
    v20 = "TRENDS_NOTIFICATION_TITLE_WORKOUTS";
    goto LABEL_16;
  }
  v59 = sub_232201ADC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v59 & 1) != 0)
    goto LABEL_108;
  sub_232200318();
  v60 = a1;
  v61 = sub_232200390();
  v62 = sub_2322012E4();
  v75 = v61;
  v74 = v62;
  if (os_log_type_enabled(v61, v62))
  {
    v63 = swift_slowAlloc();
    v73 = swift_slowAlloc();
    v77 = v73;
    *(_DWORD *)v63 = 136315395;
    v64 = sub_232201BF0();
    v76 = sub_232013174(v64, v65, &v77);
    sub_232201710();
    swift_bridgeObjectRelease();
    *(_WORD *)(v63 + 12) = 2081;
    v66 = objc_msgSend(v60, sel_identifier);
    v67 = sub_232200EC4();
    v69 = v68;

    v76 = sub_232013174(v67, v69, &v77);
    sub_232201710();

    swift_bridgeObjectRelease();
    v70 = v75;
    _os_log_impl(&dword_231FFB000, v75, (os_log_type_t)v74, "%s Unexpected object type %{private}s for trend notification title", (uint8_t *)v63, 0x16u);
    v71 = v73;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v71, -1, -1);
    MEMORY[0x2348FF468](v63, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return 0;
}

uint64_t sub_23206BE44(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t inited;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  char v98;
  id v100;
  NSObject *v101;
  os_log_type_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  id v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  id v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;

  v123 = 0x455F455649544341;
  v124 = a3;
  v115 = *v3;
  sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v117 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v116 = (uint64_t)&v111 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v121 = (uint64_t)&v111 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v111 - v11;
  v13 = sub_2321FE584();
  v118 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v114 = (char *)&v111 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23220039C();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v122 = (char *)&v111 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v112 = (char *)&v111 - v19;
  v119 = a1;
  v20 = objc_msgSend(a1, sel_identifier);
  v21 = sub_232200EC4();
  v23 = v22;

  if (sub_232200EC4() == v21 && v24 == v23)
  {
    v25 = a2;
LABEL_4:
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  v25 = a2;
  v26 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v26 & 1) != 0)
    goto LABEL_6;
  v123 = 0x544847494557;
  if (sub_232200EC4() == v21 && v51 == v23)
    goto LABEL_4;
  v60 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v60 & 1) != 0)
    goto LABEL_6;
  v123 = 0x5F53544847494C46;
  if (sub_232200EC4() == v21 && v61 == v23)
    goto LABEL_4;
  v62 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v62 & 1) != 0)
    goto LABEL_6;
  v123 = 0xD000000000000010;
  if (sub_232200EC4() == v21 && v63 == v23)
    goto LABEL_4;
  v64 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v64 & 1) != 0)
    goto LABEL_6;
  if (sub_232200EC4() == v21 && v65 == v23)
    goto LABEL_4;
  v66 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v66 & 1) != 0)
    goto LABEL_6;
  if (sub_232200EC4() == v21 && v67 == v23)
  {
    v123 = 0x494D5F444E415453;
    goto LABEL_4;
  }
  v68 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v68 & 1) != 0)
  {
    v123 = 0x494D5F444E415453;
    goto LABEL_6;
  }
  if (sub_232200EC4() == v21 && v69 == v23)
  {
    v123 = 0x4C475F444F4F4C42;
    goto LABEL_4;
  }
  v70 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v70 & 1) != 0)
  {
    v123 = 0x4C475F444F4F4C42;
    goto LABEL_6;
  }
  v113 = v16;
  v111 = v15;
  v72 = 0xD000000000000018;
  if (sub_232200EC4() == v21 && v71 == v23)
    goto LABEL_41;
  v73 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v73 & 1) != 0)
    goto LABEL_44;
  if (sub_232200EC4() == v21 && v74 == v23)
    goto LABEL_42;
  v75 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v75 & 1) != 0)
    goto LABEL_45;
  if (sub_232200EC4() == v21 && v76 == v23)
  {
    v123 = 0x5F4C5546444E494DLL;
    goto LABEL_42;
  }
  v77 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v77 & 1) != 0)
  {
    v123 = 0x5F4C5546444E494DLL;
    goto LABEL_45;
  }
  v72 = 0xD000000000000011;
  if (sub_232200EC4() == v21 && v78 == v23)
  {
LABEL_41:
    v123 = v72;
LABEL_42:
    v15 = v111;
    v16 = v113;
    goto LABEL_4;
  }
  v79 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v79 & 1) != 0)
  {
LABEL_44:
    v123 = v72;
LABEL_45:
    v15 = v111;
    v16 = v113;
    goto LABEL_6;
  }
  if (sub_232200EC4() == v21 && v80 == v23)
    goto LABEL_42;
  v81 = sub_232201ADC();
  swift_bridgeObjectRelease();
  v15 = v111;
  v16 = v113;
  if ((v81 & 1) != 0)
  {
LABEL_6:
    swift_bridgeObjectRelease();
    if (v25 != 1)
      goto LABEL_7;
LABEL_95:
    v125 = 0;
    v126 = 0xE000000000000000;
    sub_23220189C();
    swift_bridgeObjectRelease();
    v125 = 0xD000000000000019;
    v126 = 0x8000000232204AC0;
    sub_232200F48();
    swift_bridgeObjectRelease();
    sub_232200F48();
    v52 = sub_232088E70(v125, v126, *(_BYTE *)(v120 + 32), 0, 0xE000000000000000, MEMORY[0x24BEE4AF8]);
    swift_bridgeObjectRelease();
    return v52;
  }
  v72 = 0xD000000000000012;
  if (sub_232200EC4() == v21 && v82 == v23)
    goto LABEL_41;
  v83 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v83 & 1) != 0)
    goto LABEL_44;
  if (sub_232200EC4() == v21 && v84 == v23)
  {
    v123 = 0x4E415F5045454C53;
    goto LABEL_42;
  }
  v85 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v85 & 1) != 0)
  {
    v123 = 0x4E415F5045454C53;
    goto LABEL_45;
  }
  if (sub_232200EC4() == v21 && v86 == v23)
  {
    v123 = 0x5350455453;
    goto LABEL_42;
  }
  v87 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v87 & 1) != 0)
  {
    v123 = 0x5350455453;
    goto LABEL_45;
  }
  if (sub_232200EC4() == v21 && v88 == v23)
  {
    v123 = 0x534548535550;
    goto LABEL_42;
  }
  v89 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v89 & 1) != 0)
  {
    v123 = 0x534548535550;
    goto LABEL_45;
  }
  if (sub_232200EC4() == v21 && v90 == v23)
  {
    v123 = 0x465F4F4944524143;
    goto LABEL_42;
  }
  v91 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v91 & 1) != 0)
  {
    v123 = 0x465F4F4944524143;
    goto LABEL_45;
  }
  if (sub_232200EC4() == v21 && v92 == v23)
  {
    v123 = 0x525F4F4944524143;
    goto LABEL_42;
  }
  v93 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v93 & 1) != 0)
  {
    v123 = 0x525F4F4944524143;
    goto LABEL_45;
  }
  v94 = sub_232200EC4();
  v123 = 0xD000000000000012;
  if (v94 == v21 && v95 == v23)
    goto LABEL_42;
  v96 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v96 & 1) != 0)
    goto LABEL_45;
  v123 = 0x5354554F4B524F57;
  if (sub_232200EC4() == v21 && v97 == v23)
    goto LABEL_42;
  v98 = sub_232201ADC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v98 & 1) == 0)
  {
    sub_232200318();
    v100 = v119;
    v101 = sub_232200390();
    v102 = sub_2322012E4();
    if (os_log_type_enabled(v101, v102))
    {
      v103 = swift_slowAlloc();
      v104 = swift_slowAlloc();
      v125 = v104;
      *(_DWORD *)v103 = 136315395;
      v105 = sub_232201BF0();
      v127 = sub_232013174(v105, v106, &v125);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v103 + 12) = 2081;
      v107 = objc_msgSend(v100, sel_identifier);
      v108 = sub_232200EC4();
      v110 = v109;

      v127 = sub_232013174(v108, v110, &v125);
      sub_232201710();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v101, v102, "%s Unexpected object type %{private}s for trend notification body", (uint8_t *)v103, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v104, -1, -1);
      MEMORY[0x2348FF468](v103, -1, -1);

    }
    else
    {

    }
    v48 = *(void (**)(char *, uint64_t))(v113 + 8);
    v49 = v112;
    goto LABEL_12;
  }
  v15 = v111;
  v16 = v113;
  if (v25 == 1)
    goto LABEL_95;
LABEL_7:
  v27 = v25;
  if (v25 == 2)
  {
    sub_23204FAF4(v124, (uint64_t)v12);
    v28 = v118;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48))(v12, 1, v13) != 1)
    {
      v53 = v114;
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v114, v12, v13);
      v125 = 0;
      v126 = 0xE000000000000000;
      sub_23220189C();
      swift_bridgeObjectRelease();
      v125 = 0xD000000000000019;
      v126 = 0x8000000232204AC0;
      sub_232200F48();
      swift_bridgeObjectRelease();
      sub_232200F48();
      v54 = v28;
      v55 = v125;
      v56 = v126;
      v57 = *(_BYTE *)(v120 + 32);
      sub_232059CAC();
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_232210D40;
      *(_QWORD *)(inited + 32) = sub_2321FE56C();
      *(_QWORD *)(inited + 40) = v59;
      v52 = sub_232088E70(v55, v56, v57, 0, 0xE000000000000000, inited);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v53, v13);
      return v52;
    }
    sub_23206F724((uint64_t)v12);
  }
  v113 = v16;
  swift_bridgeObjectRelease();
  v29 = v122;
  sub_232200318();
  v30 = v121;
  sub_23204FAF4(v124, v121);
  v31 = v119;
  v32 = sub_232200390();
  v33 = sub_2322012F0();
  v34 = v33;
  if (!os_log_type_enabled(v32, v33))
  {

    sub_23206F724(v30);
    v48 = *(void (**)(char *, uint64_t))(v113 + 8);
    v49 = v29;
    v50 = v15;
    goto LABEL_17;
  }
  v35 = swift_slowAlloc();
  LODWORD(v123) = v34;
  v36 = v35;
  v124 = swift_slowAlloc();
  v125 = v124;
  *(_DWORD *)v36 = 136315907;
  v37 = sub_232201BF0();
  v127 = sub_232013174(v37, v38, &v125);
  v111 = v15;
  sub_232201710();
  swift_bridgeObjectRelease();
  *(_WORD *)(v36 + 12) = 2081;
  v39 = objc_msgSend(v31, sel_identifier);
  v40 = sub_232200EC4();
  v42 = v41;

  v127 = sub_232013174(v40, v42, &v125);
  sub_232201710();

  swift_bridgeObjectRelease();
  *(_WORD *)(v36 + 22) = 2081;
  v127 = v27;
  type metadata accessor for HKProfileType(0);
  v43 = sub_232200F00();
  v127 = sub_232013174(v43, v44, &v125);
  sub_232201710();
  swift_bridgeObjectRelease();
  *(_WORD *)(v36 + 32) = 2081;
  sub_23204FAF4(v30, v116);
  v45 = sub_232200F00();
  v127 = sub_232013174(v45, v46, &v125);
  sub_232201710();
  swift_bridgeObjectRelease();
  sub_23206F724(v30);
  _os_log_impl(&dword_231FFB000, v32, (os_log_type_t)v123, "%s Unexpected trend notification body configuration. Identifier: %{private}s. Profile: %{private}s ProfileDisplayName: %{private}s", (uint8_t *)v36, 0x2Au);
  v47 = v124;
  swift_arrayDestroy();
  MEMORY[0x2348FF468](v47, -1, -1);
  MEMORY[0x2348FF468](v36, -1, -1);

  v48 = *(void (**)(char *, uint64_t))(v113 + 8);
  v49 = v122;
LABEL_12:
  v50 = v111;
LABEL_17:
  v48(v49, v50);
  return 0;
}

uint64_t sub_23206CFA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v16;

  v6 = swift_bridgeObjectRetain();
  v7 = sub_2321A4950(v6);
  swift_bridgeObjectRelease();
  v8 = sub_23201A2B8(v7);
  swift_bridgeObjectRelease();
  swift_retain();
  v9 = sub_23206F564(v8, v3);
  swift_release();
  swift_release();
  v16 = v9;
  swift_bridgeObjectRetain();
  sub_23206EAB0((uint64_t *)&v16);
  swift_bridgeObjectRelease();
  v10 = v16[2];
  if (v10 == 1)
  {
    v12 = v16[4];
    v13 = v16[5];
    swift_bridgeObjectRetain();
    swift_release();
    v14 = sub_23206D2F4(v12, v13, a2, a3);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (v10 == 2)
    {
      v11 = sub_23206D888(v16, a2, a3);
    }
    else if (v10 == 3)
    {
      v11 = sub_23206DEB4(v16, a2, a3);
    }
    else
    {
      v11 = sub_23206E520((uint64_t)v16, a2, a3);
    }
    v14 = v11;
    swift_release();
  }
  return v14;
}

void sub_23206D0F0(id *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  char v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v5 = *a1;
  v6 = objc_msgSend(*a1, sel_identifier);
  v7 = sub_232200EC4();
  v9 = v8;

  if (sub_232200EC4() == v7 && v10 == v9)
  {
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  v12 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    v23 = *(_BYTE *)(a2 + 32);
    v24 = 0xD00000000000003FLL;
    v25 = 0x8000000232204A80;
    v26 = MEMORY[0x24BEE4AF8];
LABEL_15:
    *a3 = sub_232088E70(v24, v25, v23, 0, 0xE000000000000000, v26);
    a3[1] = v27;
    return;
  }
  if (sub_232200EC4() == v7 && v13 == v9)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_17;
  }
  v15 = sub_232201ADC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
  {
LABEL_17:
    v23 = *(_BYTE *)(a2 + 32);
    v25 = 0x8000000232204A40;
    v26 = MEMORY[0x24BEE4AF8];
    v24 = 0xD00000000000003CLL;
    goto LABEL_15;
  }
  v16 = sub_23206B218();
  v17 = objc_msgSend(v16, sel_displayTypeForObjectType_, v5);

  if (v17)
  {
    v18 = objc_msgSend(v17, sel_localization);

    v19 = objc_msgSend(v18, sel_embeddedDisplayName);
    v20 = sub_232200EC4();
    v22 = v21;

    *a3 = v20;
    a3[1] = v22;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
  }
}

uint64_t sub_23206D2F4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t inited;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v43[12];
  int v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53[2];

  v5 = v4;
  v51 = a1;
  v46 = *v4;
  v9 = sub_23220039C();
  v49 = *(_QWORD *)(v9 - 8);
  v50 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v43[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v48 = v12;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v47 = &v43[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v43[-v16];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v43[-v18];
  v20 = sub_2321FE584();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = &v43[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a3 == 1)
  {
    v35 = *((_BYTE *)v5 + 32);
    sub_232059CAC();
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_232210D40;
    *(_QWORD *)(inited + 32) = v51;
    *(_QWORD *)(inited + 40) = a2;
    swift_bridgeObjectRetain();
    v37 = sub_232088E70(0xD000000000000030, 0x8000000232204980, v35, 0, 0xE000000000000000, inited);
    swift_setDeallocating();
    swift_arrayDestroy();
  }
  else
  {
    if (a3 == 2)
    {
      sub_23204FAF4(a4, (uint64_t)v19);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) != 1)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v21 + 32))(v23, v19, v20);
        v38 = *((_BYTE *)v5 + 32);
        sub_232059CAC();
        v39 = swift_initStackObject();
        *(_OWORD *)(v39 + 16) = xmmword_232210D30;
        *(_QWORD *)(v39 + 32) = sub_2321FE56C();
        v40 = v51;
        *(_QWORD *)(v39 + 40) = v41;
        *(_QWORD *)(v39 + 48) = v40;
        *(_QWORD *)(v39 + 56) = a2;
        swift_bridgeObjectRetain();
        v37 = sub_232088E70(0xD000000000000032, 0x80000002322049C0, v38, 0, 0xE000000000000000, v39);
        swift_setDeallocating();
        swift_arrayDestroy();
        (*(void (**)(_BYTE *, uint64_t))(v21 + 8))(v23, v20);
        return v37;
      }
      sub_23206F724((uint64_t)v19);
    }
    sub_232200318();
    sub_23204FAF4(a4, (uint64_t)v17);
    swift_bridgeObjectRetain_n();
    v24 = sub_232200390();
    v25 = sub_2322012F0();
    v26 = v25;
    if (os_log_type_enabled(v24, v25))
    {
      v27 = swift_slowAlloc();
      v45 = swift_slowAlloc();
      v53[0] = v45;
      *(_DWORD *)v27 = 136316163;
      v44 = v26;
      v28 = sub_232201BF0();
      v52 = sub_232013174(v28, v29, v53);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2080;
      v52 = sub_232013174(0xD000000000000054, 0x8000000232204920, v53);
      sub_232201710();
      *(_WORD *)(v27 + 22) = 2081;
      swift_bridgeObjectRetain();
      v52 = sub_232013174(v51, a2, v53);
      sub_232201710();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v27 + 32) = 2081;
      v52 = a3;
      type metadata accessor for HKProfileType(0);
      v30 = sub_232200F00();
      v52 = sub_232013174(v30, v31, v53);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 42) = 2081;
      sub_23204FAF4((uint64_t)v17, (uint64_t)v47);
      v32 = sub_232200F00();
      v52 = sub_232013174(v32, v33, v53);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_23206F724((uint64_t)v17);
      _os_log_impl(&dword_231FFB000, v24, (os_log_type_t)v44, "%s %s Error | Object Types: %{private}s. Profile: %{private}s. ProfileDisplayName: %{private}s", (uint8_t *)v27, 0x34u);
      v34 = v45;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v34, -1, -1);
      MEMORY[0x2348FF468](v27, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_23206F724((uint64_t)v17);
    }

    (*(void (**)(_BYTE *, uint64_t))(v49 + 8))(v11, v50);
    return 0;
  }
  return v37;
}

uint64_t sub_23206D888(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  NSObject *v21;
  os_log_type_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  os_log_t v35;
  uint64_t v36;
  char v37;
  uint64_t result;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t inited;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[4];
  int v51;
  uint64_t v52;
  os_log_t v53;
  _BYTE *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59[2];

  v53 = *(os_log_t *)v3;
  v57 = sub_23220039C();
  v56 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  v8 = &v50[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v55 = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v54 = &v50[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = &v50[-v13];
  MEMORY[0x24BDAC7A8](v12);
  v16 = &v50[-v15];
  v17 = sub_2321FE584();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = &v50[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a2 == 1)
  {
    v37 = *(_BYTE *)(v3 + 32);
    sub_232059CAC();
    result = swift_initStackObject();
    *(_OWORD *)(result + 16) = xmmword_232210D30;
    v39 = a1[2];
    if (v39)
    {
      v40 = (_QWORD *)result;
      result = a1[5];
      v40[4] = a1[4];
      v40[5] = result;
      if (v39 != 1)
      {
        v41 = a1[6];
        v42 = a1[7];
        v40[6] = v41;
        v40[7] = v42;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v43 = sub_232088E70(0xD00000000000002ALL, 0x80000002322048C0, v37, 0, 0xE000000000000000, (uint64_t)v40);
        swift_setDeallocating();
        swift_arrayDestroy();
        return v43;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_18;
  }
  if (a2 != 2)
  {
LABEL_5:
    sub_232200318();
    sub_23204FAF4(a3, (uint64_t)v14);
    swift_bridgeObjectRetain_n();
    v21 = sub_232200390();
    v22 = sub_2322012F0();
    v23 = v22;
    if (os_log_type_enabled(v21, v22))
    {
      v24 = swift_slowAlloc();
      v52 = swift_slowAlloc();
      v59[0] = v52;
      *(_DWORD *)v24 = 136316163;
      v51 = v23;
      v25 = sub_232201BF0();
      v58 = sub_232013174(v25, v26, v59);
      v53 = v21;
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2080;
      v58 = sub_232013174(0xD000000000000044, 0x8000000232204870, v59);
      sub_232201710();
      *(_WORD *)(v24 + 22) = 2081;
      v27 = swift_bridgeObjectRetain();
      v28 = MEMORY[0x2348FE1C0](v27, MEMORY[0x24BEE0D00]);
      v30 = v29;
      swift_bridgeObjectRelease();
      v58 = sub_232013174(v28, v30, v59);
      sub_232201710();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 32) = 2081;
      v58 = a2;
      type metadata accessor for HKProfileType(0);
      v31 = sub_232200F00();
      v58 = sub_232013174(v31, v32, v59);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 42) = 2081;
      sub_23204FAF4((uint64_t)v14, (uint64_t)v54);
      v33 = sub_232200F00();
      v58 = sub_232013174(v33, v34, v59);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_23206F724((uint64_t)v14);
      v35 = v53;
      _os_log_impl(&dword_231FFB000, v53, (os_log_type_t)v51, "%s %s Error | Object Types: %{private}s. Profile: %{private}s. ProfileDisplayName: %{private}s", (uint8_t *)v24, 0x34u);
      v36 = v52;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v36, -1, -1);
      MEMORY[0x2348FF468](v24, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_23206F724((uint64_t)v14);

    }
    (*(void (**)(_BYTE *, uint64_t))(v56 + 8))(v8, v57);
    return 0;
  }
  sub_23204FAF4(a3, (uint64_t)v16);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_23206F724((uint64_t)v16);
    goto LABEL_5;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v18 + 32))(v20, v16, v17);
  v44 = *(_BYTE *)(v3 + 32);
  sub_232059CAC();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232211930;
  result = sub_2321FE56C();
  *(_QWORD *)(inited + 32) = result;
  *(_QWORD *)(inited + 40) = v46;
  v47 = a1[2];
  if (!v47)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  result = a1[5];
  *(_QWORD *)(inited + 48) = a1[4];
  *(_QWORD *)(inited + 56) = result;
  if (v47 != 1)
  {
    v48 = a1[6];
    v49 = a1[7];
    *(_QWORD *)(inited + 64) = v48;
    *(_QWORD *)(inited + 72) = v49;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v43 = sub_232088E70(0xD00000000000002CLL, 0x80000002322048F0, v44, 0, 0xE000000000000000, inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    (*(void (**)(_BYTE *, uint64_t))(v18 + 8))(v20, v17);
    return v43;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_23206DEB4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  NSObject *v21;
  os_log_type_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  os_log_t v35;
  uint64_t v36;
  char v37;
  uint64_t result;
  unint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t inited;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE v52[4];
  int v53;
  uint64_t v54;
  os_log_t v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61[2];

  v55 = *(os_log_t *)v3;
  v59 = sub_23220039C();
  v58 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v8 = &v52[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v57 = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v56 = &v52[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = &v52[-v13];
  MEMORY[0x24BDAC7A8](v12);
  v16 = &v52[-v15];
  v17 = sub_2321FE584();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = &v52[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a2 == 1)
  {
    v37 = *(_BYTE *)(v3 + 32);
    sub_232059CAC();
    result = swift_initStackObject();
    *(_OWORD *)(result + 16) = xmmword_232211930;
    v39 = a1[2];
    if (v39)
    {
      v40 = (_QWORD *)result;
      result = a1[5];
      v40[4] = a1[4];
      v40[5] = result;
      if (v39 != 1)
      {
        v41 = a1[7];
        v40[6] = a1[6];
        v40[7] = v41;
        if (v39 >= 3)
        {
          v42 = a1[8];
          v43 = a1[9];
          v40[8] = v42;
          v40[9] = v43;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v44 = sub_232088E70(0xD00000000000002FLL, 0x8000000232204800, v37, 0, 0xE000000000000000, (uint64_t)v40);
          swift_setDeallocating();
          swift_arrayDestroy();
          return v44;
        }
        goto LABEL_20;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (a2 != 2)
  {
LABEL_5:
    sub_232200318();
    sub_23204FAF4(a3, (uint64_t)v14);
    swift_bridgeObjectRetain_n();
    v21 = sub_232200390();
    v22 = sub_2322012F0();
    v23 = v22;
    if (os_log_type_enabled(v21, v22))
    {
      v24 = swift_slowAlloc();
      v54 = swift_slowAlloc();
      v61[0] = v54;
      *(_DWORD *)v24 = 136316163;
      v53 = v23;
      v25 = sub_232201BF0();
      v60 = sub_232013174(v25, v26, v61);
      v55 = v21;
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2080;
      v60 = sub_232013174(0xD000000000000046, 0x80000002322047B0, v61);
      sub_232201710();
      *(_WORD *)(v24 + 22) = 2081;
      v27 = swift_bridgeObjectRetain();
      v28 = MEMORY[0x2348FE1C0](v27, MEMORY[0x24BEE0D00]);
      v30 = v29;
      swift_bridgeObjectRelease();
      v60 = sub_232013174(v28, v30, v61);
      sub_232201710();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 32) = 2081;
      v60 = a2;
      type metadata accessor for HKProfileType(0);
      v31 = sub_232200F00();
      v60 = sub_232013174(v31, v32, v61);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 42) = 2081;
      sub_23204FAF4((uint64_t)v14, (uint64_t)v56);
      v33 = sub_232200F00();
      v60 = sub_232013174(v33, v34, v61);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_23206F724((uint64_t)v14);
      v35 = v55;
      _os_log_impl(&dword_231FFB000, v55, (os_log_type_t)v53, "%s %s Error | Object Types: %{private}s. Profile: %{private}s. ProfileDisplayName: %{private}s", (uint8_t *)v24, 0x34u);
      v36 = v54;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v36, -1, -1);
      MEMORY[0x2348FF468](v24, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_23206F724((uint64_t)v14);

    }
    (*(void (**)(_BYTE *, uint64_t))(v58 + 8))(v8, v59);
    return 0;
  }
  sub_23204FAF4(a3, (uint64_t)v16);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_23206F724((uint64_t)v16);
    goto LABEL_5;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v18 + 32))(v20, v16, v17);
  v45 = *(_BYTE *)(v3 + 32);
  sub_232059CAC();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232211A00;
  result = sub_2321FE56C();
  *(_QWORD *)(inited + 32) = result;
  *(_QWORD *)(inited + 40) = v47;
  v48 = a1[2];
  if (!v48)
    goto LABEL_21;
  result = a1[5];
  *(_QWORD *)(inited + 48) = a1[4];
  *(_QWORD *)(inited + 56) = result;
  if (v48 == 1)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v49 = a1[7];
  *(_QWORD *)(inited + 64) = a1[6];
  *(_QWORD *)(inited + 72) = v49;
  if (v48 >= 3)
  {
    v50 = a1[8];
    v51 = a1[9];
    *(_QWORD *)(inited + 80) = v50;
    *(_QWORD *)(inited + 88) = v51;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v44 = sub_232088E70(0xD000000000000031, 0x8000000232204830, v45, 0, 0xE000000000000000, inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    (*(void (**)(_BYTE *, uint64_t))(v18 + 8))(v20, v17);
    return v44;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_23206E520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_log_t *v3;
  os_log_t *v4;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  NSObject *v22;
  os_log_type_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  os_log_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t inited;
  uint64_t v41;
  _BYTE v43[12];
  int v44;
  uint64_t v45;
  os_log_t v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v4 = v3;
  v46 = *v3;
  v7 = sub_23220039C();
  v49 = *(_QWORD *)(v7 - 8);
  v50 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v43[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v48 = v10;
  v11 = MEMORY[0x24BDAC7A8](v10);
  v47 = &v43[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = &v43[-v14];
  MEMORY[0x24BDAC7A8](v13);
  v17 = &v43[-v16];
  v18 = sub_2321FE584();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = &v43[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a2 == 1)
    return sub_232088E70(0xD000000000000028, 0x8000000232204750, *((_BYTE *)v4 + 32), 0, 0xE000000000000000, MEMORY[0x24BEE4AF8]);
  if (a2 == 2)
  {
    sub_23204FAF4(a3, (uint64_t)v17);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) != 1)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v19 + 32))(v21, v17, v18);
      v39 = *((_BYTE *)v4 + 32);
      sub_232059CAC();
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_232210D40;
      *(_QWORD *)(inited + 32) = sub_2321FE56C();
      *(_QWORD *)(inited + 40) = v41;
      v38 = sub_232088E70(0xD00000000000002ALL, 0x8000000232204780, v39, 0, 0xE000000000000000, inited);
      swift_setDeallocating();
      swift_arrayDestroy();
      (*(void (**)(_BYTE *, uint64_t))(v19 + 8))(v21, v18);
      return v38;
    }
    sub_23206F724((uint64_t)v17);
  }
  sub_232200318();
  sub_23204FAF4(a3, (uint64_t)v15);
  swift_bridgeObjectRetain_n();
  v22 = sub_232200390();
  v23 = sub_2322012F0();
  v24 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    v25 = swift_slowAlloc();
    v45 = swift_slowAlloc();
    v52 = v45;
    *(_DWORD *)v25 = 136316163;
    v44 = v24;
    v26 = sub_232201BF0();
    v51 = sub_232013174(v26, v27, &v52);
    v46 = v22;
    sub_232201710();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2080;
    v51 = sub_232013174(0xD000000000000048, 0x8000000232204700, &v52);
    sub_232201710();
    *(_WORD *)(v25 + 22) = 2081;
    v28 = swift_bridgeObjectRetain();
    v29 = MEMORY[0x2348FE1C0](v28, MEMORY[0x24BEE0D00]);
    v31 = v30;
    swift_bridgeObjectRelease();
    v51 = sub_232013174(v29, v31, &v52);
    sub_232201710();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 32) = 2081;
    v51 = a2;
    type metadata accessor for HKProfileType(0);
    v32 = sub_232200F00();
    v51 = sub_232013174(v32, v33, &v52);
    sub_232201710();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 42) = 2081;
    sub_23204FAF4((uint64_t)v15, (uint64_t)v47);
    v34 = sub_232200F00();
    v51 = sub_232013174(v34, v35, &v52);
    sub_232201710();
    swift_bridgeObjectRelease();
    sub_23206F724((uint64_t)v15);
    v36 = v46;
    _os_log_impl(&dword_231FFB000, v46, (os_log_type_t)v44, "%s %s Error | Object Types: %{private}s. Profile: %{private}s. ProfileDisplayName: %{private}s", (uint8_t *)v25, 0x34u);
    v37 = v45;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v37, -1, -1);
    MEMORY[0x2348FF468](v25, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_23206F724((uint64_t)v15);

  }
  (*(void (**)(_BYTE *, uint64_t))(v49 + 8))(v9, v50);
  return 0;
}

uint64_t sub_23206EA64()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TrendLocalization()
{
  return objc_opt_self();
}

uint64_t sub_23206EAB0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_232111A18(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_23206EB18(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_23206EB18(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  BOOL v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *__dst;

  v3 = a1[1];
  result = sub_232201AAC();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      return sub_23206F200(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_160;
  v105 = result;
  v102 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v11 = (char *)MEMORY[0x24BEE4AF8];
LABEL_118:
      v94 = v11;
      v104 = v8;
      if (v12 >= 2)
      {
        v95 = *v102;
        do
        {
          v96 = v12 - 2;
          if (v12 < 2)
            goto LABEL_147;
          if (!v95)
            goto LABEL_159;
          v97 = v94;
          v98 = *(_QWORD *)&v94[16 * v96 + 32];
          v99 = *(_QWORD *)&v94[16 * v12 + 24];
          sub_23206F2CC((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(_QWORD *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1)
            break;
          if (v99 < v98)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v97 = sub_2321119F0((uint64_t)v97);
          if (v96 >= *((_QWORD *)v97 + 2))
            goto LABEL_149;
          v100 = &v97[16 * v96 + 32];
          *(_QWORD *)v100 = v98;
          *((_QWORD *)v100 + 1) = v99;
          v101 = *((_QWORD *)v97 + 2);
          if (v12 > v101)
            goto LABEL_150;
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          v94 = v97;
          *((_QWORD *)v97 + 2) = v101 - 1;
          v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v104 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_232201068();
    *(_QWORD *)(v7 + 16) = v6;
    v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v103 = v10 + 8;
  v11 = (char *)MEMORY[0x24BEE4AF8];
  v106 = v3;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = (uint64_t *)(v10 + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v19 = 0;
    }
    else
    {
      v19 = sub_232201ADC();
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v21 = (_QWORD *)(v103 + 16 * v20);
    do
    {
      v23 = (_QWORD *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if ((v19 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v19 ^ sub_232201ADC()) & 1) != 0)
      {
        goto LABEL_36;
      }
      v21 += 2;
      v22 = v20 + 1;
      v9 = v20;
      v20 = v22;
    }
    while (v22 < v3);
    v20 = v22;
LABEL_36:
    v9 = v20;
    if ((v19 & 1) != 0)
    {
LABEL_37:
      if (v20 < v13)
        goto LABEL_155;
      if (v13 < v20)
      {
        v25 = 16 * v20;
        v26 = 16 * v13;
        v27 = v20;
        v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10)
              goto LABEL_158;
            v29 = v10 + v25;
            v30 = *(_QWORD *)(v10 + v26);
            v31 = *(_QWORD *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(_QWORD *)(v29 - 16) = v30;
            *(_QWORD *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_151;
      if (v9 - v13 < v105)
        break;
    }
LABEL_67:
    if (v9 < v13)
      goto LABEL_146;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_232111724(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v41 = *((_QWORD *)v11 + 2);
    v40 = *((_QWORD *)v11 + 3);
    v12 = v41 + 1;
    if (v41 >= v40 >> 1)
      v11 = sub_232111724((char *)(v40 > 1), v41 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v42 = v11 + 32;
    v43 = &v11[16 * v41 + 32];
    *(_QWORD *)v43 = v13;
    *((_QWORD *)v43 + 1) = v9;
    if (v41)
    {
      v107 = v9;
      while (1)
      {
        v44 = v12 - 1;
        if (v12 >= 4)
        {
          v49 = &v42[16 * v12];
          v50 = *((_QWORD *)v49 - 8);
          v51 = *((_QWORD *)v49 - 7);
          v55 = __OFSUB__(v51, v50);
          v52 = v51 - v50;
          if (v55)
            goto LABEL_135;
          v54 = *((_QWORD *)v49 - 6);
          v53 = *((_QWORD *)v49 - 5);
          v55 = __OFSUB__(v53, v54);
          v47 = v53 - v54;
          v48 = v55;
          if (v55)
            goto LABEL_136;
          v56 = v12 - 2;
          v57 = &v42[16 * v12 - 32];
          v59 = *(_QWORD *)v57;
          v58 = *((_QWORD *)v57 + 1);
          v55 = __OFSUB__(v58, v59);
          v60 = v58 - v59;
          if (v55)
            goto LABEL_138;
          v55 = __OFADD__(v47, v60);
          v61 = v47 + v60;
          if (v55)
            goto LABEL_141;
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            v81 = *(_QWORD *)v79;
            v80 = *((_QWORD *)v79 + 1);
            v55 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            if (v55)
              goto LABEL_145;
            v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v73 = *((_QWORD *)v11 + 4);
            v74 = *((_QWORD *)v11 + 5);
            v55 = __OFSUB__(v74, v73);
            v66 = v74 - v73;
            v67 = v55;
            goto LABEL_99;
          }
          v46 = *((_QWORD *)v11 + 4);
          v45 = *((_QWORD *)v11 + 5);
          v55 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          v48 = v55;
        }
        if ((v48 & 1) != 0)
          goto LABEL_137;
        v56 = v12 - 2;
        v62 = &v42[16 * v12 - 32];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v65 = __OFSUB__(v63, v64);
        v66 = v63 - v64;
        v67 = v65;
        if (v65)
          goto LABEL_140;
        v68 = &v42[16 * v44];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v55 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v55)
          goto LABEL_143;
        if (__OFADD__(v66, v71))
          goto LABEL_144;
        if (v66 + v71 >= v47)
        {
          v72 = v47 < v71;
LABEL_105:
          if (v72)
            v44 = v56;
          goto LABEL_107;
        }
LABEL_99:
        if ((v67 & 1) != 0)
          goto LABEL_139;
        v75 = &v42[16 * v44];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v55 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v55)
          goto LABEL_142;
        if (v78 < v66)
          goto LABEL_15;
LABEL_107:
        v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        v84 = v10;
        if (!v10)
          goto LABEL_157;
        v85 = v11;
        v86 = &v42[16 * v83];
        v87 = *(_QWORD *)v86;
        v88 = v42;
        v89 = v44;
        v90 = &v42[16 * v44];
        v91 = *((_QWORD *)v90 + 1);
        v92 = v84;
        sub_23206F2CC((char *)(v84 + 16 * *(_QWORD *)v86), (char *)(v84 + 16 * *(_QWORD *)v90), v84 + 16 * v91, __dst);
        if (v1)
          goto LABEL_115;
        if (v91 < v87)
          goto LABEL_132;
        if (v89 > *((_QWORD *)v85 + 2))
          goto LABEL_133;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v88[16 * v83 + 8] = v91;
        v93 = *((_QWORD *)v85 + 2);
        if (v89 >= v93)
          goto LABEL_134;
        v11 = v85;
        v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        v42 = v88;
        *((_QWORD *)v85 + 2) = v93 - 1;
        v10 = v92;
        v9 = v107;
        if (v93 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v106;
    if (v9 >= v106)
    {
      v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105))
    goto LABEL_153;
  if (v13 + v105 >= v3)
    v32 = v3;
  else
    v32 = v13 + v105;
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      v33 = (_QWORD *)(v10 + 16 * v9);
      do
      {
        v34 = (uint64_t *)(v10 + 16 * v9);
        v35 = *v34;
        v36 = v34[1];
        v37 = v13;
        v38 = v33;
        do
        {
          v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_232201ADC() & 1) == 0)
            break;
          if (!v10)
            goto LABEL_156;
          v35 = *v38;
          v36 = v38[1];
          *(_OWORD *)v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  result = sub_23220195C();
  __break(1u);
  return result;
}

uint64_t sub_23206F200(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  BOOL v13;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    result = *v9;
    v10 = v9[1];
    v11 = v6;
    v12 = (uint64_t *)v8;
    while (1)
    {
      v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (result = sub_232201ADC(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      result = *v12;
      v10 = v12[1];
      *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_23206F2CC(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t result;
  char *v25;
  char *v26;
  char *v27;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v27 = __src;
  v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v17 = &v4[16 * v13];
      v25 = v17;
      v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v18 = (char *)(a3 - 16);
        v19 = v6;
        while (1)
        {
          v20 = v18 + 16;
          v21 = *((_QWORD *)v19 - 2);
          v22 = *((_QWORD *)v19 - 1);
          v19 -= 16;
          v23 = *((_QWORD *)v17 - 2) == v21 && *((_QWORD *)v17 - 1) == v22;
          if (v23 || (sub_232201ADC() & 1) == 0)
          {
            v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17)
              *(_OWORD *)v18 = *((_OWORD *)v17 - 1);
            v19 = v6;
            v17 -= 16;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v20 != v6 || v18 >= v6)
              *(_OWORD *)v18 = *(_OWORD *)v19;
            v27 = v19;
            if (v19 <= v7)
              goto LABEL_50;
          }
          v18 -= 16;
          v6 = v19;
          if (v17 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        v15 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
        if (v15 || (sub_232201ADC() & 1) == 0)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v26 = v4;
          v16 = v6;
        }
        else
        {
          v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      v27 = v7;
    }
LABEL_50:
    sub_232111830((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  result = sub_2322019E0();
  __break(1u);
  return result;
}

_QWORD *sub_23206F564(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  id v20;

  if (a1 >> 62)
    goto LABEL_19;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = sub_232201998())
  {
    v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v6 = 4;
    v16 = v4;
    while (1)
    {
      v8 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2348FEA30](v6 - 4, a1) : *(id *)(a1 + 8 * v6);
      v9 = v8;
      v10 = v6 - 3;
      if (__OFADD__(v6 - 4, 1))
        break;
      v20 = v8;
      sub_23206D0F0(&v20, a2, &v18);
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v5;
      }

      v11 = v19;
      if (v19)
      {
        v12 = v18;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v5 = sub_232096810(0, v5[2] + 1, 1, v5);
        v14 = v5[2];
        v13 = v5[3];
        if (v14 >= v13 >> 1)
          v5 = sub_232096810((_QWORD *)(v13 > 1), v14 + 1, 1, v5);
        v5[2] = v14 + 1;
        v7 = &v5[2 * v14];
        v7[4] = v12;
        v7[5] = v11;
        v4 = v16;
      }
      ++v6;
      if (v10 == v4)
      {
        swift_bridgeObjectRelease();
        return v5;
      }
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return (_QWORD *)MEMORY[0x24BEE4AF8];
}

uint64_t sub_23206F724(uint64_t a1)
{
  uint64_t v2;

  sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23206F77C(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  _QWORD *v23;
  id v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  _QWORD v42[4];
  __int128 v43;
  __int128 v44;
  unint64_t v45;

  v36 = a2;
  v3 = sub_23220039C();
  v38 = *(_QWORD *)(v3 - 8);
  v39 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v37 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v33 - v6;
  v8 = sub_2321FF40C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_2321FF418();
  v34 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_msgSend(a1, sel_identifier);
  v15 = sub_232200EC4();
  v17 = v16;

  if (v15 == 0xD00000000000001FLL && v17 == 0x8000000232204FA0 || (sub_232201ADC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    *((_QWORD *)&v44 + 1) = &type metadata for ActivityDataTypeDetailConfigurationProvider;
    v18 = sub_23206FE68();
LABEL_5:
    v45 = v18;
    goto LABEL_6;
  }
  if (v15 == 0xD000000000000017 && v17 == 0x8000000232204FC0)
  {
    swift_bridgeObjectRelease();
LABEL_17:
    *((_QWORD *)&v44 + 1) = &type metadata for WorkoutsDataTypeDetailConfigurationProvider;
    v18 = sub_23206FE24();
    goto LABEL_5;
  }
  v32 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v32 & 1) != 0)
    goto LABEL_17;
  v45 = 0;
  v43 = 0u;
  v44 = 0u;
LABEL_6:
  sub_23206FD40((uint64_t)&v43, (uint64_t)&v40);
  if (v41)
  {
    sub_2320167F8(&v40, (uint64_t)v42);
    sub_232016AD8(v42, v42[3]);
    sub_2321FF6AC();
    v25 = v36;
    sub_2321FF34C();
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v25, v8);
    v26 = objc_allocWithZone((Class)sub_2321FF478());
    v27 = a1;
    v28 = sub_2321FF460();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v35);
    sub_23206FDE8((uint64_t)&v43);
    sub_232016AFC((uint64_t)v42);
  }
  else
  {
    sub_23206FDE8((uint64_t)&v40);
    sub_232200354();
    v19 = a1;
    v20 = sub_232200390();
    v21 = sub_2322012E4();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v22 = 138412290;
      v42[0] = v19;
      v24 = v19;
      sub_232201710();
      *v23 = v19;

      _os_log_impl(&dword_231FFB000, v20, v21, "[SummariesAppDelegate] No custom detail view controller or configuration provided for %@", v22, 0xCu);
      sub_2320477F0();
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v23, -1, -1);
      MEMORY[0x2348FF468](v22, -1, -1);
    }
    else
    {

    }
    v30 = v38;
    v29 = v39;

    (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v29);
    sub_23206FDE8((uint64_t)&v43);
    return 0;
  }
  return v28;
}

uint64_t sub_23206FD40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23206FD84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_23206FD84()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B1230)
  {
    sub_232016A8C(255, &qword_2541B1228);
    v0 = sub_2322016F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B1230);
  }
}

uint64_t sub_23206FDE8(uint64_t a1)
{
  uint64_t v2;

  sub_23206FD84();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23206FE24()
{
  unint64_t result;

  result = qword_255F9D0A0;
  if (!qword_255F9D0A0)
  {
    result = MEMORY[0x2348FF39C](&unk_232216F5C, &type metadata for WorkoutsDataTypeDetailConfigurationProvider);
    atomic_store(result, (unint64_t *)&qword_255F9D0A0);
  }
  return result;
}

unint64_t sub_23206FE68()
{
  unint64_t result;

  result = qword_2541B0EE8;
  if (!qword_2541B0EE8)
  {
    result = MEMORY[0x2348FF39C](&unk_23221298C, &type metadata for ActivityDataTypeDetailConfigurationProvider);
    atomic_store(result, (unint64_t *)&qword_2541B0EE8);
  }
  return result;
}

uint64_t sub_23206FEAC()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_232200708();
  swift_release();
  swift_release();
  return v1;
}

id sub_23206FF48()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CardioFitnessFeatureStatus();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23206FFF4()
{
  return type metadata accessor for CardioFitnessFeatureStatus();
}

uint64_t type metadata accessor for CardioFitnessFeatureStatus()
{
  uint64_t result;

  result = qword_2541B5920;
  if (!qword_2541B5920)
    return swift_getSingletonMetadata();
  return result;
}

void sub_232070038()
{
  unint64_t v0;

  sub_2320057B8(319, &qword_2541AF360, (uint64_t (*)(uint64_t))sub_2320700D4, MEMORY[0x24BDB9EF0]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_2320700D4(uint64_t a1)
{
  sub_2320057B8(a1, qword_2541B7218, (uint64_t (*)(uint64_t))sub_2320700F0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

unint64_t sub_2320700F0()
{
  unint64_t result;

  result = qword_2541B7210;
  if (!qword_2541B7210)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2541B7210);
  }
  return result;
}

uint64_t sub_23207019C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_232200708();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_23207021C(void **a1, void **a2)
{
  void *v2;
  void *v3;
  id v4;
  id v5;

  v2 = *a1;
  v3 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  v4 = v2;
  v5 = v3;
  return sub_232200714();
}

void sub_232070290(void *a1, uint64_t a2, void (*a3)(id, uint64_t), void *a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void);
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  _QWORD *v32;
  id v33;
  void *v34;
  void *v35;
  void *v36;
  id v37;
  uint64_t v38;
  _BYTE *v39;
  id v40[2];
  void (*v41)(id, uint64_t);
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD aBlock[6];

  v42 = a1;
  sub_23207162C();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (uint64_t *)((char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_2321FDC6C();
  v43 = *(_QWORD *)(v10 - 8);
  v44 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2321FD8B8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (_QWORD *)swift_allocObject();
  v41 = a3;
  v17[2] = a3;
  v17[3] = a4;
  v18 = a4;
  v46 = v17;
  v17[4] = v4;
  v19 = v4;
  v20 = v4 + qword_2541BF5D0;
  v21 = *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28);
  v45 = v20;
  v22 = *(void **)(v20 + v21);
  objc_opt_self();
  v23 = swift_dynamicCastObjCClass();
  if (v23)
  {
    v24 = v23;
    v25 = *(uint64_t (**)(void))(*(_QWORD *)v19 + 184);
    v40[1] = v18;
    swift_retain_n();
    swift_retain_n();
    v41 = v22;
    v40[0] = (id)v25();
    v26 = objc_msgSend(v42, sel_endDate);
    sub_2321FDC30();

    sub_2321FD840();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v12, v44);
    v27 = (void *)sub_2322000F0();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3E98]), sel_initWithSampleType_predicate_, v24, v27);
    sub_232027434();
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_232210D20;
    *(_QWORD *)(v29 + 32) = v28;
    aBlock[0] = v29;
    sub_232201050();
    v30 = v28;
    sub_2322000FC();
    v31 = swift_allocObject();
    v32 = v46;
    *(_QWORD *)(v31 + 16) = sub_2320716D4;
    *(_QWORD *)(v31 + 24) = v32;
    v33 = objc_allocWithZone(MEMORY[0x24BDD3F00]);
    sub_232003E9C(0, &qword_2541B5930);
    swift_retain();
    v34 = (void *)sub_232201020();
    swift_bridgeObjectRelease();
    sub_232003E9C(0, (unint64_t *)&qword_2541B78A8);
    v35 = (void *)sub_232201020();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_232071704;
    aBlock[5] = v31;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2321BE3EC;
    aBlock[3] = &unk_250100468;
    v36 = _Block_copy(aBlock);
    v37 = objc_msgSend(v33, sel_initWithQueryDescriptors_limit_sortDescriptors_resultsHandler_, v34, 0, v35, v36);

    _Block_release(v36);
    swift_release();
    objc_msgSend(*(id *)(v45 + 16), sel_executeQuery_, v37);
    swift_release();
    swift_release();
    swift_release();

  }
  else
  {
    sub_232003BC0(0);
    sub_232000590((unint64_t *)&qword_255F9BF70, (uint64_t (*)(uint64_t))sub_232003BC0, (uint64_t)&unk_232217A40);
    v38 = swift_allocError();
    *v39 = 0;
    *v9 = v38;
    swift_storeEnumTagMultiPayload();
    swift_retain_n();
    swift_retain_n();
    sub_232070718((uint64_t)v9, v41);
    sub_232002CEC((uint64_t)v9, (uint64_t (*)(_QWORD))sub_23207162C);
    swift_release();
    swift_release();
    swift_release();
  }
}

void sub_232070718(uint64_t a1, void (*a2)(id, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id *v9;
  uint64_t (*v10)(_QWORD);
  id v11;
  id v12;
  id v13;
  uint64_t v14;

  sub_2320002B4(0, (unint64_t *)&unk_2541B5560, (void (*)(uint64_t))sub_232026D78);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - v5;
  sub_23207162C();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (id *)((char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23200054C(a1, (uint64_t)v9, v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = *v9;
    v12 = *v9;
    a2(v11, 1);

  }
  else
  {
    sub_232071790((uint64_t)v9, (uint64_t)v6);
    v13 = sub_232070BA0((uint64_t)v6);
    a2(v13, 0);

    sub_23200040C((uint64_t)v6, (unint64_t *)&unk_2541B5560, (void (*)(uint64_t))sub_232026D78);
  }
}

unint64_t sub_23207086C(uint64_t a1, unint64_t a2, void *a3, void (*a4)(_QWORD *), uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t result;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  id v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void (*v36)();
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  void (*v42)(_QWORD *);

  sub_232071724();
  v10 = v9;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (uint64_t *)((char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v11);
  v15 = (uint64_t *)((char *)&v39 - v14);
  sub_23207162C();
  result = MEMORY[0x24BDAC7A8](v16);
  v19 = (uint64_t *)((char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a2)
  {
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      v20 = sub_232201998();
      if (v20)
      {
LABEL_4:
        result = v20 - 1;
        if (__OFSUB__(v20, 1))
        {
          __break(1u);
        }
        else
        {
          v42 = a4;
          if ((a2 & 0xC000000000000001) == 0)
          {
            if ((result & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else if (result < *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              v21 = *(id *)(a2 + 8 * result + 32);
LABEL_9:
              v22 = v21;
              swift_bridgeObjectRelease();
              sub_2322000E4();
              v24 = v23;
              v25 = (char *)v15 + *(int *)(v10 + 48);
              *v15 = v23;
              sub_232200108();
              v40 = v22;
              v41 = a5;
              if (a2 >> 62)
              {
                swift_bridgeObjectRetain();
                v26 = sub_232201998();
                swift_bridgeObjectRelease();
              }
              else
              {
                v26 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
              }
              *(_QWORD *)((char *)v15 + *(int *)(v10 + 64)) = v26;
              v28 = (char *)v13 + *(int *)(v10 + 48);
              v29 = *(int *)(v10 + 64);
              *v13 = v24;
              v30 = sub_2321FDC6C();
              v31 = *(_QWORD *)(v30 - 8);
              (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v25, v30);
              *(_QWORD *)((char *)v13 + v29) = v26;
              sub_232026D78();
              v33 = v32;
              v34 = (char *)v19 + *(int *)(v32 + 48);
              v35 = *(int *)(v33 + 64);
              *v19 = v24;
              (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v34, v28, v30);
              *(_QWORD *)((char *)v19 + v35) = v26;
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v19, 0, 1, v33);
              swift_storeEnumTagMultiPayload();
              v42(v19);

              sub_232002CEC((uint64_t)v19, (uint64_t (*)(_QWORD))sub_23207162C);
              v36 = sub_232071724;
              v37 = (uint64_t)v15;
              return sub_232002CEC(v37, (uint64_t (*)(_QWORD))v36);
            }
            __break(1u);
            return result;
          }
        }
        v21 = (id)MEMORY[0x2348FEA30](result, a2);
        goto LABEL_9;
      }
    }
    else
    {
      v20 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v20)
        goto LABEL_4;
    }
    swift_bridgeObjectRelease();
    sub_232026D78();
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v19, 1, 1, v38);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    if (!a3)
      return result;
    *v19 = a3;
    swift_storeEnumTagMultiPayload();
    v27 = a3;
  }
  a4(v19);
  v36 = sub_23207162C;
  v37 = (uint64_t)v19;
  return sub_232002CEC(v37, (uint64_t (*)(_QWORD))v36);
}

uint64_t sub_232070B98()
{
  return 0;
}

id sub_232070BA0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  double *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t);
  id result;
  id v45;
  void *v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  id v57;
  void *v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  void (*v62)(uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  char *v67;
  void (*v68)(char *, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _OWORD v75[2];
  uint64_t v76;

  v74 = a1;
  v70 = *v1;
  sub_2320002B4(0, &qword_2541B28D0, (void (*)(uint64_t))MEMORY[0x24BE47E70]);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v72 = (uint64_t)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v65 - v5;
  sub_2320002B4(0, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  MEMORY[0x24BDAC7A8](v7);
  v71 = (char *)&v65 - v8;
  sub_2320002B4(0, (unint64_t *)&qword_2541B2A70, (void (*)(uint64_t))MEMORY[0x24BE4ADA0]);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v73 = (uint64_t)&v65 - v13;
  sub_2320002B4(0, (unint64_t *)&unk_2541B5560, (void (*)(uint64_t))sub_232026D78);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (double *)((char *)&v65 - v15);
  sub_232026D78();
  v18 = v17;
  v19 = *(_QWORD *)(v17 - 8);
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (uint64_t *)((char *)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = MEMORY[0x24BDAC7A8](v20);
  v25 = (double *)((char *)&v65 - v24);
  MEMORY[0x24BDAC7A8](v23);
  v27 = (uint64_t *)((char *)&v65 - v26);
  sub_2320004AC(v74, (uint64_t)v16, (unint64_t *)&unk_2541B5560, (void (*)(uint64_t))sub_232026D78);
  if ((*(unsigned int (**)(double *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18) == 1)
  {
    sub_23200040C((uint64_t)v16, (unint64_t *)&unk_2541B5560, (void (*)(uint64_t))sub_232026D78);
    sub_2321FE6B0();
    v28 = sub_2321FE6D4();
    v29 = (void (*)(uint64_t))MEMORY[0x24BE47E70];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v6, 0, 1, v28);
    sub_232003E9C(0, &qword_2541B0CD0);
    v30 = sub_2321FFD78();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v12, 1, 1, v30);
    v31 = v72;
    sub_2320004AC((uint64_t)v6, v72, &qword_2541B28D0, v29);
    v32 = sub_2320151CC(0, 0xF000000000000000, 0xBu, (uint64_t)v12, v31, 0, 0);
    sub_23200040C((uint64_t)v6, &qword_2541B28D0, v29);
    return v32;
  }
  v67 = v12;
  v33 = *(int *)(v18 + 48);
  v34 = (uint64_t)v27 + v33;
  v35 = *(int *)(v18 + 64);
  v36 = (char *)v16 + v33;
  v37 = *v16;
  *v27 = *(_QWORD *)v16;
  v38 = sub_2321FDC6C();
  v39 = *(_QWORD *)(v38 - 8);
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v34, v36, v38);
  v40 = *(_QWORD *)((char *)v16 + v35);
  v74 = v35;
  *(_QWORD *)((char *)v27 + v35) = v40;
  v41 = (char *)v25 + *(int *)(v18 + 48);
  v42 = *(int *)(v18 + 64);
  *v25 = v37;
  v43 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 16);
  v72 = v34;
  v68 = v43;
  v43(v41, v34, v38);
  *(_QWORD *)((char *)v25 + v42) = v40;
  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A510]), sel_init);
  if (result)
  {
    v45 = result;
    objc_msgSend(v45, sel_setTimeInterval_, v37);
    v46 = (void *)sub_2321FDBF4();
    v47 = MEMORY[0x2348FEDA8]();

    objc_msgSend(v45, sel_setDateData_, v47);
    v66 = *(void (**)(char *, uint64_t))(v39 + 8);
    v66(v41, v38);
    v48 = v73;
    (*(void (**)(uint64_t))(v70 + 208))(v69 + qword_255FA9CB8);
    v49 = sub_2321FFD78();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v48, 0, 1, v49);
    sub_232003E9C(0, &qword_2541B56C8);
    v50 = (uint64_t)v71;
    v51 = v72;
    sub_2321FD840();
    v52 = sub_2321FD8B8();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v50, 0, 1, v52);
    v53 = (char *)v22 + *(int *)(v18 + 48);
    v54 = *(int *)(v18 + 64);
    *v22 = *v27;
    v68(v53, v51, v38);
    v55 = *(_QWORD *)((char *)v27 + v74);
    *(_QWORD *)((char *)v22 + v54) = v55;
    v56 = v45;
    v57 = HKCodableSummarySupplementaryValue.init(dateInterval:dataCount:)(v50, v55, 0);
    v66(v53, v38);
    result = objc_msgSend(v45, sel_data);
    if (result)
    {
      v58 = result;
      sub_232003E9C(0, &qword_2541B0CD0);
      v59 = sub_2321FDAD4();
      v61 = v60;

      v62 = (void (*)(uint64_t))MEMORY[0x24BE4ADA0];
      v63 = v73;
      v64 = (uint64_t)v67;
      sub_2320004AC(v73, (uint64_t)v67, (unint64_t *)&qword_2541B2A70, (void (*)(uint64_t))MEMORY[0x24BE4ADA0]);
      v76 = 0;
      memset(v75, 0, sizeof(v75));
      v32 = sub_232015828(v59, v61, 17, v64, (uint64_t)v57, 0, (uint64_t)v75);

      sub_232003ED4(v59, v61);
      sub_23200040C(v63, (unint64_t *)&qword_2541B2A70, v62);
      sub_232002CEC((uint64_t)v27, (uint64_t (*)(_QWORD))sub_232026D78);
      return v32;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2320711A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_232071310(a1, MEMORY[0x24BE4AD88], a2);
}

uint64_t sub_2320711B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + qword_255FA9CB8;
  v2 = sub_2322001B0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t sub_2320711EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_232002CEC(v0 + qword_2541BF5D0, type metadata accessor for SummariesFullProfileExecutor.Request);
  v1 = v0 + qword_2541BF5C8;
  v2 = sub_232200180();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + qword_255FA9CB8;
  v4 = sub_2322001B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSharableModelStep(uint64_t a1)
{
  return sub_23201A14C(a1, qword_255F9D138);
}

uint64_t sub_232071298()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2322001B0();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_232071304@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_232071310(a1, MEMORY[0x24BE4AD20], a2);
}

uint64_t sub_232071310@<X0>(uint64_t a1@<X0>, unsigned int *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_2322001B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a3, a1, v6);
  v7 = *a2;
  v8 = sub_2321FFD78();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(a3, v7, v8);
}

uint64_t sub_23207137C()
{
  uint64_t v0;

  type metadata accessor for HKCategoryValueAppleStandHour(0);
  sub_2321A47D0((uint64_t)&unk_2500FDA08);
  sub_232000590(&qword_255F9D360, (uint64_t (*)(uint64_t))type metadata accessor for HKCategoryValueAppleStandHour, MEMORY[0x24BDD26F8]);
  v0 = sub_232200D68();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2320713F8(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, char *, uint64_t);
  void (*v19)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v22 = a1;
  v5 = sub_232200180();
  v23 = *(_QWORD *)(v5 - 8);
  v24 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2322001B0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v21 - v16;
  sub_23200054C(a1, (uint64_t)&v21 - v16, type metadata accessor for SummariesFullProfileExecutor.Request);
  v18 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v18(v11, a2, v8);
  v18((char *)(v2 + qword_255FA9CB8), v11, v8);
  sub_23200054C((uint64_t)v17, (uint64_t)v15, type metadata accessor for SummariesFullProfileExecutor.Request);
  sub_232200174();
  v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v11, v8);
  sub_232002CEC((uint64_t)v17, type metadata accessor for SummariesFullProfileExecutor.Request);
  sub_232036BAC((uint64_t)v15, v2 + qword_2541BF5D0);
  (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v2 + qword_2541BF5C8, v7, v24);
  v19(a2, v8);
  sub_232002CEC(v22, type metadata accessor for SummariesFullProfileExecutor.Request);
  return v2;
}

uint64_t type metadata accessor for StandHoursCurrentValueSharableModelStep(uint64_t a1)
{
  return sub_23201A14C(a1, qword_255F9D260);
}

uint64_t sub_2320715F8()
{
  return swift_initClassMetadata2();
}

void sub_23207162C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9D368)
  {
    sub_2320002B4(255, (unint64_t *)&unk_2541B5560, (void (*)(uint64_t))sub_232026D78);
    sub_232002B9C();
    v0 = sub_232201BA8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9D368);
  }
}

uint64_t sub_2320716A8()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_2320716D4(uint64_t a1)
{
  uint64_t v1;

  sub_232070718(a1, *(void (**)(id, uint64_t))(v1 + 16));
}

uint64_t sub_2320716E0()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_232071704(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v3;

  return sub_23207086C(a1, a2, a3, *(void (**)(_QWORD *))(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_23207170C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23207171C()
{
  return swift_release();
}

void sub_232071724()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_255F9D370)
  {
    sub_2321FDC6C();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_255F9D370);
  }
}

uint64_t sub_232071790(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2320002B4(0, (unint64_t *)&unk_2541B5560, (void (*)(uint64_t))sub_232026D78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_2320717E4@<D0>(uint64_t a1@<X0>, double a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double result;
  _QWORD v16[2];
  uint64_t v17;
  uint64_t v18;
  double v19[3];
  uint64_t v20;

  v19[0] = a2;
  v18 = sub_2322014AC();
  v5 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_232201494();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v8);
  v10 = sub_232200CE4();
  MEMORY[0x24BDAC7A8](v10);
  v11 = (int *)type metadata accessor for TrendFeedItemStep();
  v17 = v11[8];
  v16[1] = sub_232003E9C(0, &qword_2541B0C48);
  sub_232200CD8();
  v20 = MEMORY[0x24BEE4AF8];
  sub_232000590(&qword_2541B70B0, v9, MEMORY[0x24BEE5698]);
  sub_2320057B8(0, &qword_2541B6FF8, v9, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_232071A98();
  sub_232201770();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEE5750], v18);
  *(_QWORD *)(a3 + v17) = sub_2322014B8();
  sub_23200054C(a1, a3, type metadata accessor for SummariesFullProfileExecutor.Request);
  v12 = a3 + v11[7];
  v13 = sub_2321FFE08();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v12, *(_QWORD *)&v19[0], v13);
  v14 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  sub_23201B304(a1 + *(int *)(v14 + 32), a3 + v11[5]);
  *(_OWORD *)v19 = *(_OWORD *)(a1 + *(int *)(v14 + 36));
  swift_unknownObjectRetain();
  sub_232002CEC(a1, type metadata accessor for SummariesFullProfileExecutor.Request);
  result = v19[0];
  *(_OWORD *)(a3 + v11[6]) = *(_OWORD *)v19;
  return result;
}

uint64_t type metadata accessor for TrendFeedItemStep()
{
  uint64_t result;

  result = qword_2541B6C60;
  if (!qword_2541B6C60)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_232071A98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B7000;
  if (!qword_2541B7000)
  {
    sub_2320057B8(255, &qword_2541B6FF8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2541B7000);
  }
  return result;
}

_QWORD *sub_232071AF8(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  id v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  __int128 v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  id v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  __int128 v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  id v54;
  id v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  uint64_t v61;
  void *v62;
  id v63;
  char *v65;
  int *v66;

  v3 = a1;
  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    v3 = (_QWORD *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    v8 = (void *)a2[2];
    *a1 = v5;
    a1[1] = v7;
    a1[2] = v8;
    v66 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
    v9 = v66[6];
    v10 = (char *)v3 + v9;
    v11 = (char *)a2 + v9;
    *((_BYTE *)v3 + v9) = *((_BYTE *)a2 + v9);
    v12 = (int *)_s14descr250103FA9O8WorkPlanVMa();
    v13 = v12[5];
    v65 = &v10[v13];
    v14 = &v11[v13];
    v15 = sub_2321FFACC();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_unknownObjectRetain();
    v17 = v8;
    v16(v65, v14, v15);
    v18 = v12[6];
    v19 = &v10[v18];
    v20 = &v11[v18];
    v21 = sub_2321FE584();
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    v24 = v12[7];
    v25 = &v10[v24];
    v26 = &v11[v24];
    sub_232071E50();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = v12[8];
    v29 = &v10[v28];
    v30 = &v11[v28];
    sub_232071EE4();
    v32 = v31;
    v33 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v30, 1, v31))
    {
      sub_2320057B8(0, &qword_2541B2518, (uint64_t (*)(uint64_t))sub_232071EE4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v29, v30, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v29, 0, 1, v32);
    }
    v35 = v66[7];
    v36 = *(void **)((char *)a2 + v35);
    *(_QWORD *)((char *)v3 + v35) = v36;
    v37 = v66[8];
    v38 = (char *)v3 + v37;
    v39 = (char *)a2 + v37;
    v40 = *(_OWORD *)((char *)a2 + v37 + 24);
    *(_OWORD *)((char *)v3 + v37 + 24) = v40;
    v41 = v40;
    v42 = **(void (***)(char *, char *, uint64_t))(v40 - 8);
    v43 = v36;
    v42(v38, v39, v41);
    *(_OWORD *)((char *)v3 + v66[9]) = *(_OWORD *)((char *)a2 + v66[9]);
    v44 = v66[10];
    v45 = *(void **)((char *)a2 + v44);
    *(_QWORD *)((char *)v3 + v44) = v45;
    v46 = v66[11];
    v47 = *(void **)((char *)a2 + v46);
    *(_QWORD *)((char *)v3 + v46) = v47;
    v48 = a3[5];
    v49 = (char *)v3 + v48;
    v50 = (char *)a2 + v48;
    v51 = *(_OWORD *)((char *)a2 + v48 + 24);
    *(_OWORD *)((char *)v3 + v48 + 24) = v51;
    v52 = v51;
    v53 = **(void (***)(char *, char *, uint64_t))(v51 - 8);
    swift_unknownObjectRetain();
    v54 = v45;
    v55 = v47;
    v53(v49, v50, v52);
    v56 = a3[7];
    *(_OWORD *)((char *)v3 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
    v57 = (char *)v3 + v56;
    v58 = (char *)a2 + v56;
    v59 = sub_2321FFE08();
    v60 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16);
    swift_unknownObjectRetain();
    v60(v57, v58, v59);
    v61 = a3[8];
    v62 = *(void **)((char *)a2 + v61);
    *(_QWORD *)((char *)v3 + v61) = v62;
    v63 = v62;
  }
  return v3;
}

void sub_232071E50()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2340)
  {
    type metadata accessor for HKMCPregnancyState(255);
    sub_232000590((unint64_t *)&unk_2541B2790, (uint64_t (*)(uint64_t))type metadata accessor for HKMCPregnancyState, (uint64_t)&unk_23220FD6C);
    v0 = sub_2321FEB48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2340);
  }
}

void sub_232071EE4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2510)
  {
    sub_232003E9C(255, (unint64_t *)&qword_2541B27B0);
    v0 = sub_232200D38();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2510);
  }
}

void sub_232071F48(uint64_t a1, int *a2)
{
  int *v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  swift_unknownObjectRelease();

  v4 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  v5 = a1 + v4[6];
  v6 = (int *)_s14descr250103FA9O8WorkPlanVMa();
  v7 = v5 + v6[5];
  v8 = sub_2321FFACC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v5 + v6[6];
  v10 = sub_2321FE584();
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  v12 = v5 + v6[7];
  sub_232071E50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  v14 = v5 + v6[8];
  sub_232071EE4();
  v16 = v15;
  v17 = *(_QWORD *)(v15 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v15))
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);

  sub_232016AFC(a1 + v4[8]);
  swift_unknownObjectRelease();

  sub_232016AFC(a1 + a2[5]);
  swift_unknownObjectRelease();
  v18 = a1 + a2[7];
  v19 = sub_2321FFE08();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);

}

uint64_t sub_2320720F8(uint64_t a1, uint64_t a2, int *a3)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  id v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t);
  id v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t, uint64_t);
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  void *v60;
  id v61;
  int *v63;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v5 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  v63 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  v6 = v63[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_BYTE *)(a1 + v6) = *(_BYTE *)(a2 + v6);
  v9 = (int *)_s14descr250103FA9O8WorkPlanVMa();
  v10 = v9[5];
  v11 = v7 + v10;
  v12 = v8 + v10;
  v13 = sub_2321FFACC();
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  swift_unknownObjectRetain();
  v15 = v5;
  v14(v11, v12, v13);
  v16 = v9[6];
  v17 = (void *)(v7 + v16);
  v18 = (const void *)(v8 + v16);
  v19 = sub_2321FE584();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 16))(v17, v18, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  v22 = v9[7];
  v23 = v7 + v22;
  v24 = v8 + v22;
  sub_232071E50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  v26 = v9[8];
  v27 = (void *)(v7 + v26);
  v28 = (const void *)(v8 + v26);
  sub_232071EE4();
  v30 = v29;
  v31 = *(_QWORD *)(v29 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v31 + 48))(v28, 1, v29))
  {
    sub_2320057B8(0, &qword_2541B2518, (uint64_t (*)(uint64_t))sub_232071EE4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v31 + 16))(v27, v28, v30);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v27, 0, 1, v30);
  }
  v33 = v63[7];
  v34 = *(void **)(a2 + v33);
  *(_QWORD *)(a1 + v33) = v34;
  v35 = v63[8];
  v36 = a1 + v35;
  v37 = a2 + v35;
  v38 = *(_OWORD *)(a2 + v35 + 24);
  *(_OWORD *)(a1 + v35 + 24) = v38;
  v39 = v38;
  v40 = **(void (***)(uint64_t, uint64_t, uint64_t))(v38 - 8);
  v41 = v34;
  v40(v36, v37, v39);
  *(_OWORD *)(a1 + v63[9]) = *(_OWORD *)(a2 + v63[9]);
  v42 = v63[10];
  v43 = *(void **)(a2 + v42);
  *(_QWORD *)(a1 + v42) = v43;
  v44 = v63[11];
  v45 = *(void **)(a2 + v44);
  *(_QWORD *)(a1 + v44) = v45;
  v46 = a3[5];
  v47 = a1 + v46;
  v48 = a2 + v46;
  v49 = *(_OWORD *)(a2 + v46 + 24);
  *(_OWORD *)(a1 + v46 + 24) = v49;
  v50 = v49;
  v51 = **(void (***)(uint64_t, uint64_t, uint64_t))(v49 - 8);
  swift_unknownObjectRetain();
  v52 = v43;
  v53 = v45;
  v51(v47, v48, v50);
  v54 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  v55 = a1 + v54;
  v56 = a2 + v54;
  v57 = sub_2321FFE08();
  v58 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 16);
  swift_unknownObjectRetain();
  v58(v55, v56, v57);
  v59 = a3[8];
  v60 = *(void **)(a2 + v59);
  *(_QWORD *)(a1 + v59) = v60;
  v61 = v60;
  return a1;
}

_QWORD *sub_232072428(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  id v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  void *v50;
  id v51;
  uint64_t v52;
  void *v53;
  void *v54;
  id v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  void *v66;
  id v67;
  uint64_t v69;
  int *v70;

  v5 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v5;
  v6 = (void *)a2[2];
  v7 = (void *)a1[2];
  a1[2] = v6;
  v8 = v6;

  v70 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  v9 = v70[6];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
  v12 = _s14descr250103FA9O8WorkPlanVMa();
  v13 = *(int *)(v12 + 20);
  v14 = &v10[v13];
  v15 = &v11[v13];
  v16 = sub_2321FFACC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  v69 = v12;
  v17 = *(int *)(v12 + 24);
  v18 = &v10[v17];
  v19 = &v11[v17];
  v20 = sub_2321FE584();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v24)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
LABEL_6:
    sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 24))(v18, v19, v20);
LABEL_7:
  v26 = *(int *)(v69 + 28);
  v27 = &v10[v26];
  v28 = &v11[v26];
  sub_232071E50();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 24))(v27, v28, v29);
  v30 = *(int *)(v69 + 32);
  v31 = &v10[v30];
  v32 = &v11[v30];
  sub_232071EE4();
  v34 = v33;
  v35 = *(_QWORD *)(v33 - 8);
  v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v31, 1, v33);
  v38 = v36(v32, 1, v34);
  if (!v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 24))(v31, v32, v34);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v35 + 8))(v31, v34);
    goto LABEL_12;
  }
  if (v38)
  {
LABEL_12:
    sub_2320057B8(0, &qword_2541B2518, (uint64_t (*)(uint64_t))sub_232071EE4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v31, v32, v34);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v31, 0, 1, v34);
LABEL_13:
  v40 = v70[7];
  v41 = *(void **)((char *)a2 + v40);
  v42 = *(void **)((char *)a1 + v40);
  *(_QWORD *)((char *)a1 + v40) = v41;
  v43 = v41;

  sub_2320727F4((_QWORD *)((char *)a1 + v70[8]), (_QWORD *)((char *)a2 + v70[8]));
  v44 = v70[9];
  v45 = (_QWORD *)((char *)a1 + v44);
  v46 = (_QWORD *)((char *)a2 + v44);
  v47 = v46[1];
  *v45 = *v46;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v45[1] = v47;
  v48 = v70[10];
  v49 = *(void **)((char *)a2 + v48);
  v50 = *(void **)((char *)a1 + v48);
  *(_QWORD *)((char *)a1 + v48) = v49;
  v51 = v49;

  v52 = v70[11];
  v53 = *(void **)((char *)a2 + v52);
  v54 = *(void **)((char *)a1 + v52);
  *(_QWORD *)((char *)a1 + v52) = v53;
  v55 = v53;

  sub_2320727F4((_QWORD *)((char *)a1 + a3[5]), (_QWORD *)((char *)a2 + a3[5]));
  v56 = a3[6];
  v57 = (_QWORD *)((char *)a1 + v56);
  v58 = (_QWORD *)((char *)a2 + v56);
  v59 = v58[1];
  *v57 = *v58;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v57[1] = v59;
  v60 = a3[7];
  v61 = (char *)a1 + v60;
  v62 = (char *)a2 + v60;
  v63 = sub_2321FFE08();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 24))(v61, v62, v63);
  v64 = a3[8];
  v65 = *(void **)((char *)a2 + v64);
  v66 = *(void **)((char *)a1 + v64);
  *(_QWORD *)((char *)a1 + v64) = v65;
  v67 = v65;

  return a1;
}

uint64_t *sub_2320727F4(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

uint64_t sub_23207295C(uint64_t a1, uint64_t a2, int *a3)
{
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v5 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  v6 = v5[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_BYTE *)(a1 + v6) = *(_BYTE *)(a2 + v6);
  v9 = (int *)_s14descr250103FA9O8WorkPlanVMa();
  v10 = v9[5];
  v11 = v7 + v10;
  v12 = v8 + v10;
  v13 = sub_2321FFACC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = v9[6];
  v15 = (void *)(v7 + v14);
  v16 = (const void *)(v8 + v14);
  v17 = sub_2321FE584();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  v20 = v9[7];
  v21 = v7 + v20;
  v22 = v8 + v20;
  sub_232071E50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
  v24 = v9[8];
  v25 = (void *)(v7 + v24);
  v26 = (const void *)(v8 + v24);
  sub_232071EE4();
  v28 = v27;
  v29 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48))(v26, 1, v27))
  {
    sub_2320057B8(0, &qword_2541B2518, (uint64_t (*)(uint64_t))sub_232071EE4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v29 + 32))(v25, v26, v28);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v25, 0, 1, v28);
  }
  *(_QWORD *)(a1 + v5[7]) = *(_QWORD *)(a2 + v5[7]);
  v31 = v5[8];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = *(_OWORD *)(v33 + 16);
  *(_OWORD *)v32 = *(_OWORD *)v33;
  *(_OWORD *)(v32 + 16) = v34;
  *(_QWORD *)(v32 + 32) = *(_QWORD *)(v33 + 32);
  *(_OWORD *)(a1 + v5[9]) = *(_OWORD *)(a2 + v5[9]);
  *(_QWORD *)(a1 + v5[10]) = *(_QWORD *)(a2 + v5[10]);
  *(_QWORD *)(a1 + v5[11]) = *(_QWORD *)(a2 + v5[11]);
  v35 = a3[5];
  v36 = a3[6];
  v37 = a1 + v35;
  v38 = a2 + v35;
  v39 = *(_OWORD *)(v38 + 16);
  *(_OWORD *)v37 = *(_OWORD *)v38;
  *(_OWORD *)(v37 + 16) = v39;
  v40 = *(_OWORD *)(a2 + v36);
  *(_QWORD *)(v37 + 32) = *(_QWORD *)(v38 + 32);
  *(_OWORD *)(a1 + v36) = v40;
  v41 = a3[7];
  v42 = a1 + v41;
  v43 = a2 + v41;
  v44 = sub_2321FFE08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

_QWORD *sub_232072C1C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  __int128 v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  __int128 v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v68;
  int *v69;

  v5 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRelease();
  v6 = a2[2];
  v7 = (void *)a1[2];
  a1[1] = v5;
  a1[2] = v6;

  v69 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  v8 = v69[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  *((_BYTE *)a1 + v8) = *((_BYTE *)a2 + v8);
  v11 = _s14descr250103FA9O8WorkPlanVMa();
  v12 = *(int *)(v11 + 20);
  v13 = &v9[v12];
  v14 = &v10[v12];
  v15 = sub_2321FFACC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v68 = v11;
  v16 = *(int *)(v11 + 24);
  v17 = &v9[v16];
  v18 = &v10[v16];
  v19 = sub_2321FE584();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
LABEL_6:
    sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 40))(v17, v18, v19);
LABEL_7:
  v25 = *(int *)(v68 + 28);
  v26 = &v9[v25];
  v27 = &v10[v25];
  sub_232071E50();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 40))(v26, v27, v28);
  v29 = *(int *)(v68 + 32);
  v30 = &v9[v29];
  v31 = &v10[v29];
  sub_232071EE4();
  v33 = v32;
  v34 = *(_QWORD *)(v32 - 8);
  v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
  v36 = v35(v30, 1, v32);
  v37 = v35(v31, 1, v33);
  if (!v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 40))(v30, v31, v33);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v30, v33);
    goto LABEL_12;
  }
  if (v37)
  {
LABEL_12:
    sub_2320057B8(0, &qword_2541B2518, (uint64_t (*)(uint64_t))sub_232071EE4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v30, v31, v33);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v30, 0, 1, v33);
LABEL_13:
  v39 = v69[7];
  v40 = *(void **)((char *)a1 + v39);
  *(_QWORD *)((char *)a1 + v39) = *(_QWORD *)((char *)a2 + v39);

  v41 = v69[8];
  v42 = (char *)a1 + v41;
  v43 = (char *)a2 + v41;
  sub_232016AFC((uint64_t)a1 + v41);
  v44 = *((_OWORD *)v43 + 1);
  *(_OWORD *)v42 = *(_OWORD *)v43;
  *((_OWORD *)v42 + 1) = v44;
  *((_QWORD *)v42 + 4) = *((_QWORD *)v43 + 4);
  v45 = v69[9];
  v46 = (_QWORD *)((char *)a1 + v45);
  v47 = (_QWORD *)((char *)a2 + v45);
  v48 = v47[1];
  *v46 = *v47;
  swift_unknownObjectRelease();
  v46[1] = v48;
  v49 = v69[10];
  v50 = *(void **)((char *)a1 + v49);
  *(_QWORD *)((char *)a1 + v49) = *(_QWORD *)((char *)a2 + v49);

  v51 = v69[11];
  v52 = *(void **)((char *)a1 + v51);
  *(_QWORD *)((char *)a1 + v51) = *(_QWORD *)((char *)a2 + v51);

  v53 = a3[5];
  v54 = (char *)a1 + v53;
  v55 = (char *)a2 + v53;
  sub_232016AFC((uint64_t)a1 + v53);
  v56 = *((_OWORD *)v55 + 1);
  *(_OWORD *)v54 = *(_OWORD *)v55;
  *((_OWORD *)v54 + 1) = v56;
  *((_QWORD *)v54 + 4) = *((_QWORD *)v55 + 4);
  v57 = a3[6];
  v58 = (_QWORD *)((char *)a1 + v57);
  v59 = (_QWORD *)((char *)a2 + v57);
  v60 = v59[1];
  *v58 = *v59;
  swift_unknownObjectRelease();
  v58[1] = v60;
  v61 = a3[7];
  v62 = (char *)a1 + v61;
  v63 = (char *)a2 + v61;
  v64 = sub_2321FFE08();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 40))(v62, v63, v64);
  v65 = a3[8];
  v66 = *(void **)((char *)a1 + v65);
  *(_QWORD *)((char *)a1 + v65) = *(_QWORD *)((char *)a2 + v65);

  return a1;
}

uint64_t sub_232072FE0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_232072FEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_2321FFE08();
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_232073098()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2320730A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
      return result;
    }
    v10 = sub_2321FFE08();
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_23207314C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for SummariesFullProfileExecutor.Request(319);
  if (v1 <= 0x3F)
  {
    result = sub_2321FFE08();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_2320731F0(void *a1, void (*a2)(_QWORD *), uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  id v11;
  uint64_t v13;

  sub_23205A18C();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  v10 = (uint64_t *)((char *)&v13 - v9);
  if (a1)
  {
    *v10 = a1;
    swift_storeEnumTagMultiPayload();
    v11 = a1;
  }
  else
  {
    sub_23200054C(a4, (uint64_t)&v13 - v9, type metadata accessor for SummariesFullProfileExecutor.StepResult);
    swift_storeEnumTagMultiPayload();
  }
  a2(v10);
  return sub_232002CEC((uint64_t)v10, (uint64_t (*)(_QWORD))sub_23205A18C);
}

uint64_t sub_2320732C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  int *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  void *v50;
  id v51;
  char *v52;
  void (*v53)(char *, char *, uint64_t);
  char *v54;
  uint64_t (**v55)();
  id v56;
  char v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  void *v64;
  char *v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  id v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  __int128 v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;

  v4 = v3;
  v81 = a2;
  v82 = a3;
  v6 = type metadata accessor for TrendFeedItemStep();
  v7 = *(_QWORD *)(v6 - 8);
  v73 = v6;
  v74 = v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v78 = (uint64_t)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = v9;
  MEMORY[0x24BDAC7A8](v8);
  v70 = (char *)&v68 - v10;
  sub_2320057B8(0, &qword_2541B2880, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v68 - v12;
  v14 = sub_2321FDDD4();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v85 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (int *)type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory(0);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v86 = (uint64_t)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (uint64_t *)((char *)&v68 - v20);
  v22 = (void *)sub_23207386C(a1);
  v79 = v23;
  v80 = v22;
  v24 = (char *)sub_232073A6C(a1);
  v76 = v25;
  v77 = v24;
  swift_getObjectType();
  v26 = sub_2321FE050();
  v27 = objc_allocWithZone(MEMORY[0x24BDD4018]);
  v72 = (void *)v26;
  v71 = objc_msgSend(v27, sel_initWithHealthStore_, v26);
  *(_QWORD *)&v84 = *(_QWORD *)(v3 + 16);
  v28 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  v83 = *(id *)(v3 + v28[11]);
  v29 = *(void **)(v3 + v28[7]);
  v30 = a1 + *(int *)(type metadata accessor for SummariesFullProfileExecutor.StepResult(0) + 28);
  v31 = (uint64_t)v70;
  v32 = v15;
  sub_232016080(v30, (uint64_t)v13, &qword_2541B2880, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8]);
  sub_23200054C(v4, v31, (uint64_t (*)(_QWORD))type metadata accessor for TrendFeedItemStep);
  v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14);
  v69 = v14;
  if (v33 == 1)
  {
    v34 = v31;
    v35 = *(void **)(v31 + v28[10]);
    v36 = (id)v84;
    v37 = v83;
    v38 = v29;
    v39 = objc_msgSend(v35, sel_currentCalendar);
    sub_2321FDD68();

    sub_232074C60((uint64_t)v13);
    v40 = v34;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v85, v13, v14);
    v41 = (id)v84;
    v42 = v83;
    v43 = v29;
    v40 = v31;
  }
  sub_232002CEC(v40, (uint64_t (*)(_QWORD))type metadata accessor for TrendFeedItemStep);
  v44 = v4 + v28[6];
  v45 = _s14descr250103FA9O8WorkPlanVMa();
  sub_232016080(v44 + *(int *)(v45 + 24), (uint64_t)v21 + v17[10], &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8]);
  v46 = v72;
  v47 = *(int *)(v73 + 24);
  v48 = *(void **)(v4 + *(int *)(v73 + 32));
  *v21 = v84;
  v21[1] = v46;
  v49 = v4;
  v50 = v71;
  v51 = v83;
  v21[2] = v71;
  v21[3] = v51;
  v21[4] = v29;
  v52 = (char *)v21 + v17[9];
  v53 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
  v84 = *(_OWORD *)(v49 + v47);
  v53(v52, v85, v69);
  *(_OWORD *)((char *)v21 + v17[11]) = v84;
  *(_QWORD *)((char *)v21 + v17[12]) = v48;
  *((_BYTE *)v21 + v17[13]) = 0;
  v54 = (char *)v21 + v17[14];
  v55 = (uint64_t (**)())((char *)v21 + v17[15]);
  *v55 = sub_232036FA8;
  v55[1] = 0;
  *((_BYTE *)v21 + v17[16]) = 1;
  sub_232071E50();
  swift_unknownObjectRetain();
  v56 = v48;
  v85 = v50;
  *(_QWORD *)&v84 = v46;
  sub_2321FEB18();
  v57 = v89;
  *(_QWORD *)v54 = v88;
  v54[8] = v57;
  sub_23200054C((uint64_t)v21, v86, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
  v58 = v78;
  sub_23200054C(v49, v78, (uint64_t (*)(_QWORD))type metadata accessor for TrendFeedItemStep);
  v59 = (*(unsigned __int8 *)(v74 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
  v60 = (v75 + v59 + 7) & 0xFFFFFFFFFFFFFFF8;
  v61 = swift_allocObject();
  sub_232025468(v58, v61 + v59, (uint64_t (*)(_QWORD))type metadata accessor for TrendFeedItemStep);
  v62 = (_QWORD *)(v61 + v60);
  v63 = v82;
  *v62 = v81;
  v62[1] = v63;
  swift_retain();
  v64 = v80;
  v65 = v77;
  sub_2320ACBE8(v80, v79, v77, v76, &v88);
  v87 = v88;
  v66 = swift_allocObject();
  *(_QWORD *)(v66 + 16) = sub_232074ECC;
  *(_QWORD *)(v66 + 24) = v61;
  sub_232074F4C();
  sub_232000590((unint64_t *)&qword_2541B2F80, (uint64_t (*)(uint64_t))sub_232074F4C, MEMORY[0x24BDB9AF8]);
  swift_retain();
  sub_232200750();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_232074FC8(v65);
  sub_232074FC8(v64);

  sub_232002CEC(v86, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
  return sub_232002CEC((uint64_t)v21, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
}

uint64_t sub_23207386C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t inited;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v22;

  v2 = v1;
  v4 = sub_2321FE2A8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void **)(a1 + 32);
  if (!v11)
    return 1;
  sub_232027434();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232210D20;
  v13 = *(void **)(v2 + *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28));
  *(_QWORD *)(inited + 32) = v13;
  v22 = inited;
  sub_232201050();
  v14 = v22;
  v15 = v2 + *(int *)(type metadata accessor for TrendFeedItemStep() + 28);
  v16 = sub_2321FFE08();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v10, v15, v16);
  swift_storeEnumTagMultiPayload();
  v17 = v11;
  v18 = v13;
  sub_2320F7D00(v14, (uint64_t)v10, 1);
  swift_bridgeObjectRelease();
  sub_232002CEC((uint64_t)v10, type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind);
  sub_2321FE29C();
  sub_2320057B8(0, &qword_2541B57A0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47758], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v19 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_232210D40;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v20 + v19, v7, v4);
  return (uint64_t)v11;
}

uint64_t sub_232073A6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  uint64_t inited;
  void *v14;
  unint64_t v15;
  id v16;
  id v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v21;

  v3 = sub_2321FE2A8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void **)(a1 + 16);
  v10 = *(void **)(a1 + 24);
  if (v11 == (void *)1 || v10 == 0)
    return 1;
  sub_232027434();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232210D20;
  v14 = *(void **)(v1 + *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28));
  *(_QWORD *)(inited + 32) = v14;
  v21 = inited;
  sub_232201050();
  v15 = v21;
  swift_storeEnumTagMultiPayload();
  sub_2320757AC(v11, v10);
  v16 = v10;
  v17 = v14;
  sub_2320F7D00(v15, (uint64_t)v9, 1);
  swift_bridgeObjectRelease();
  sub_232002CEC((uint64_t)v9, type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind);
  sub_2321FE29C();
  sub_2320057B8(0, &qword_2541B57A0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47758], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v18 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_232210D40;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v19 + v18, v6, v3);

  return (uint64_t)v10;
}

uint64_t sub_232073C58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  _QWORD v48[5];

  v43 = a3;
  v44 = a4;
  v40 = a2;
  v5 = type metadata accessor for TrendFeedItemStep();
  v39 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v41 = v6;
  v42 = (uint64_t)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2321FE308();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x24BEE4AF8];
  v45 = a1;
  if (v11)
  {
    v38 = v5;
    v48[0] = MEMORY[0x24BEE4AF8];
    sub_2320138B4(0, v11, 0);
    v13 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v14 = *(_QWORD *)(v8 + 72);
    v46 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v47 = v14;
    v15 = v8;
    do
    {
      v46(v10, v13, v7);
      v16 = sub_2321FE254();
      v18 = v17;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      v12 = v48[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2320138B4(0, *(_QWORD *)(v12 + 16) + 1, 1);
        v12 = v48[0];
      }
      v20 = *(_QWORD *)(v12 + 16);
      v19 = *(_QWORD *)(v12 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_2320138B4(v19 > 1, v20 + 1, 1);
        v12 = v48[0];
      }
      *(_QWORD *)(v12 + 16) = v20 + 1;
      v21 = v12 + 16 * v20;
      *(_QWORD *)(v21 + 32) = v16;
      *(_QWORD *)(v21 + 40) = v18;
      v13 += v47;
      --v11;
      v8 = v15;
    }
    while (v11);
    v5 = v38;
  }
  v22 = sub_2321AAC10(v12);
  swift_bridgeObjectRelease();
  v23 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  v24 = v40;
  v25 = *(void **)(v40 + *(int *)(v23 + 28));
  v26 = (void *)sub_2322011C4();
  v27 = sub_2321FFD60();
  v28 = sub_2320C2890(v25, (uint64_t)v26, v27);
  swift_bridgeObjectRelease();

  if (*(_QWORD *)(v22 + 16) <= *(_QWORD *)(v28 + 16) >> 3)
  {
    v48[0] = v28;
    sub_232074FF8(v22);
    v29 = v48[0];
  }
  else
  {
    v29 = sub_2320F2AA0(v22, v28);
  }
  sub_23201B304(v24 + *(int *)(v5 + 20), (uint64_t)v48);
  v47 = v48[4];
  v46 = (void (*)(char *, uint64_t, uint64_t))sub_232016AD8(v48, v48[3]);
  v30 = swift_bridgeObjectRetain();
  sub_23201A3C8(v30);
  swift_bridgeObjectRelease();
  v31 = v42;
  sub_23200054C(v24, v42, (uint64_t (*)(_QWORD))type metadata accessor for TrendFeedItemStep);
  v32 = (*(unsigned __int8 *)(v39 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  v33 = (v41 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
  v34 = (_QWORD *)swift_allocObject();
  v35 = v43;
  v34[2] = v29;
  v34[3] = v35;
  v34[4] = v44;
  sub_232025468(v31, (uint64_t)v34 + v32, (uint64_t (*)(_QWORD))type metadata accessor for TrendFeedItemStep);
  *(_QWORD *)((char *)v34 + v33) = v45;
  *(_QWORD *)((char *)v34 + ((v33 + 15) & 0xFFFFFFFFFFFFFFF8)) = v22;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_2321FE380();
  swift_release();
  swift_release();
  return sub_232016AFC((uint64_t)v48);
}

void sub_232073FC4(void *a1, uint64_t a2, void (*a3)(_QWORD), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  void (*v49)(_QWORD);
  _QWORD v50[2];
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(_QWORD);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58[4];

  v55 = a6;
  v12 = sub_23220039C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v50 - v17;
  if (a1)
  {
    v19 = a1;
    sub_232200318();
    swift_bridgeObjectRetain();
    v20 = a1;
    swift_bridgeObjectRetain();
    v21 = a1;
    v22 = sub_232200390();
    v23 = sub_2322012E4();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc();
      v55 = a4;
      v25 = v24;
      v52 = swift_slowAlloc();
      v58[0] = v52;
      *(_DWORD *)v25 = 136446722;
      v54 = a3;
      v26 = sub_232013174(0xD000000000000011, 0x8000000232212BB0, v58);
      v56 = v13;
      v57 = v26;
      sub_232201710();
      *(_WORD *)(v25 + 12) = 2080;
      swift_bridgeObjectRetain();
      v27 = sub_2322010C8();
      v53 = v12;
      v28 = v27;
      v30 = v29;
      swift_bridgeObjectRelease();
      v57 = sub_232013174(v28, v30, v58);
      sub_232201710();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 22) = 2082;
      v57 = (uint64_t)a1;
      v31 = a1;
      sub_232002B9C();
      v32 = sub_232200F00();
      v57 = sub_232013174(v32, v33, v58);
      a3 = v54;
      sub_232201710();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_231FFB000, v22, v23, "[%{public}s] Failed to delete %s: %{public}s", (uint8_t *)v25, 0x20u);
      v34 = v52;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v34, -1, -1);
      MEMORY[0x2348FF468](v25, -1, -1);

      (*(void (**)(char *, uint64_t))(v56 + 8))(v16, v53);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    }
    v45 = a1;
    a3(a1);

  }
  else
  {
    v52 = a5;
    v56 = v13;
    v54 = a3;
    sub_232200318();
    swift_bridgeObjectRetain_n();
    v35 = sub_232200390();
    v36 = sub_2322012FC();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = swift_slowAlloc();
      v51 = swift_slowAlloc();
      v58[0] = v51;
      *(_DWORD *)v37 = 136446466;
      v53 = v12;
      v57 = sub_232013174(0xD000000000000011, 0x8000000232212BB0, v58);
      sub_232201710();
      *(_WORD *)(v37 + 12) = 2080;
      v50[1] = v37 + 14;
      swift_bridgeObjectRetain();
      v38 = a7;
      v39 = sub_2322010C8();
      v40 = a4;
      v42 = v41;
      swift_bridgeObjectRelease();
      v43 = v39;
      a7 = v38;
      v57 = sub_232013174(v43, v42, v58);
      sub_232201710();
      swift_bridgeObjectRelease_n();
      a4 = v40;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v35, v36, "[%{public}s] Deleted %s", (uint8_t *)v37, 0x16u);
      v44 = v51;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v44, -1, -1);
      MEMORY[0x2348FF468](v37, -1, -1);

      (*(void (**)(char *, uint64_t))(v56 + 8))(v18, v53);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v18, v12);
    }
    v46 = v52;
    v47 = type metadata accessor for TrendFeedItemStep();
    sub_23201B304(v46 + *(int *)(v47 + 20), (uint64_t)v58);
    sub_232016AD8(v58, v58[3]);
    v48 = (_QWORD *)swift_allocObject();
    v49 = v54;
    v48[2] = a7;
    v48[3] = v49;
    v48[4] = a4;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_2321FE368();
    swift_release();
    sub_232016AFC((uint64_t)v58);
  }
}

uint64_t sub_232074570(void *a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  char *v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(_QWORD);
  uint64_t v47;
  uint64_t v48;

  v7 = sub_23220039C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v41 - v12;
  if (!a1)
  {
    sub_232200318();
    swift_bridgeObjectRetain_n();
    v29 = sub_232200390();
    v30 = sub_2322012FC();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc();
      v44 = v8;
      v32 = v31;
      v42 = swift_slowAlloc();
      v48 = v42;
      *(_DWORD *)v32 = 136446466;
      v46 = a3;
      v47 = sub_232013174(0xD000000000000011, 0x8000000232212BB0, &v48);
      v45 = a4;
      sub_232201710();
      *(_WORD *)(v32 + 12) = 2080;
      swift_bridgeObjectRetain();
      v33 = sub_2322010C8();
      v43 = v7;
      v34 = v33;
      v36 = v35;
      swift_bridgeObjectRelease();
      v47 = sub_232013174(v34, v36, &v48);
      a3 = v46;
      sub_232201710();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v29, v30, "[%{public}s] Updated %s", (uint8_t *)v32, 0x16u);
      v37 = v42;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v37, -1, -1);
      MEMORY[0x2348FF468](v32, -1, -1);

      (*(void (**)(char *, uint64_t))(v44 + 8))(v13, v43);
      return a3(a1);
    }

    swift_bridgeObjectRelease_n();
    v38 = *(void (**)(char *, uint64_t))(v8 + 8);
    v39 = v13;
LABEL_8:
    v38(v39, v7);
    return a3(a1);
  }
  v14 = a1;
  sub_232200318();
  swift_bridgeObjectRetain();
  v15 = a1;
  swift_bridgeObjectRetain();
  v16 = a1;
  v17 = sub_232200390();
  v18 = sub_2322012E4();
  if (!os_log_type_enabled(v17, v18))
  {

    swift_bridgeObjectRelease_n();
    v38 = *(void (**)(char *, uint64_t))(v8 + 8);
    v39 = v11;
    goto LABEL_8;
  }
  v19 = swift_slowAlloc();
  v44 = v8;
  v20 = v19;
  v42 = swift_slowAlloc();
  v48 = v42;
  *(_DWORD *)v20 = 136446722;
  v46 = a3;
  v47 = sub_232013174(0xD000000000000011, 0x8000000232212BB0, &v48);
  v45 = a4;
  sub_232201710();
  *(_WORD *)(v20 + 12) = 2080;
  swift_bridgeObjectRetain();
  v21 = sub_2322010C8();
  v43 = v7;
  v22 = v21;
  v24 = v23;
  swift_bridgeObjectRelease();
  v47 = sub_232013174(v22, v24, &v48);
  sub_232201710();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v20 + 22) = 2082;
  v47 = (uint64_t)a1;
  v25 = a1;
  sub_232002B9C();
  v26 = sub_232200F00();
  v47 = sub_232013174(v26, v27, &v48);
  a3 = v46;
  sub_232201710();
  swift_bridgeObjectRelease();

  _os_log_impl(&dword_231FFB000, v17, v18, "[%{public}s] Failed to update %s: %{public}s", (uint8_t *)v20, 0x20u);
  v28 = v42;
  swift_arrayDestroy();
  MEMORY[0x2348FF468](v28, -1, -1);
  MEMORY[0x2348FF468](v20, -1, -1);

  (*(void (**)(char *, uint64_t))(v44 + 8))(v11, v43);
  return a3(a1);
}

uint64_t sub_232074A58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v6 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23200054C(a1, (uint64_t)v9, type metadata accessor for SummariesFullProfileExecutor.StepResult);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a2;
  *(_QWORD *)(v11 + 24) = a3;
  sub_232025468((uint64_t)v9, v11 + v10, type metadata accessor for SummariesFullProfileExecutor.StepResult);
  swift_retain();
  sub_2320732C4(a1, (uint64_t)sub_232074C20, v11);
  return swift_release();
}

uint64_t sub_232074B40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  v3 = v0 + ((v2 + 32) & ~v2);
  if (*(_QWORD *)v3 != 1)
  {

  }
  v4 = *(void **)(v3 + 16);
  if (v4 != (void *)1)
  {

  }
  v5 = v3 + *(int *)(v1 + 28);
  v6 = sub_2321FDDD4();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  return swift_deallocObject();
}

uint64_t sub_232074C20(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SummariesFullProfileExecutor.StepResult(0) - 8)
                          + 80);
  return sub_2320731F0(a1, *(void (**)(_QWORD *))(v1 + 16), *(_QWORD *)(v1 + 24), v1 + ((v3 + 32) & ~v3));
}

uint64_t sub_232074C60(uint64_t a1)
{
  uint64_t v2;

  sub_2320057B8(0, &qword_2541B2880, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_232074CB4()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = (int *)type metadata accessor for TrendFeedItemStep();
  v2 = v0
     + ((*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80));
  swift_unknownObjectRelease();

  v3 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  v4 = v2 + v3[6];
  v5 = (int *)_s14descr250103FA9O8WorkPlanVMa();
  v6 = v4 + v5[5];
  v7 = sub_2321FFACC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v4 + v5[6];
  v9 = sub_2321FE584();
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  v11 = v4 + v5[7];
  sub_232071E50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = v4 + v5[8];
  sub_232071EE4();
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v13, 1, v14))
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v13, v15);

  sub_232016AFC(v2 + v3[8]);
  swift_unknownObjectRelease();

  sub_232016AFC(v2 + v1[5]);
  swift_unknownObjectRelease();
  v17 = v2 + v1[7];
  v18 = sub_2321FFE08();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_232074ECC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;

  v3 = *(_QWORD *)(type metadata accessor for TrendFeedItemStep() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (uint64_t *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_232073C58(a1, v1 + v4, *v5, v5[1]);
}

uint64_t sub_232074F20()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_232074F44(_QWORD *a1)
{
  uint64_t v1;

  return sub_2320AE524(a1, *(uint64_t (**)(_QWORD))(v1 + 16));
}

void sub_232074F4C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2F88)
  {
    sub_2320057B8(255, &qword_2541B5498, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v0 = sub_232200624();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2F88);
  }
}

void *sub_232074FC8(void *result)
{
  if ((unint64_t)result >= 2)
  {

    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_232074FF8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v14 >= v7)
      return swift_release();
    v15 = *(_QWORD *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      v8 = v14 + 1;
      if (v14 + 1 >= v7)
        return swift_release();
      v15 = *(_QWORD *)(v3 + 8 * v8);
      if (!v15)
      {
        v8 = v14 + 2;
        if (v14 + 2 >= v7)
          return swift_release();
        v15 = *(_QWORD *)(v3 + 8 * v8);
        if (!v15)
        {
          v8 = v14 + 3;
          if (v14 + 3 >= v7)
            return swift_release();
          v15 = *(_QWORD *)(v3 + 8 * v8);
          if (!v15)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    v11 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_23207518C(v12, v13);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v7)
    return swift_release();
  v15 = *(_QWORD *)(v3 + 8 * v16);
  if (v15)
  {
    v8 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v15 = *(_QWORD *)(v3 + 8 * v8);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_23207518C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v19;

  v5 = *v2;
  sub_232201B78();
  swift_bridgeObjectRetain();
  sub_232200F3C();
  v6 = sub_232201B9C();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  v9 = *(_QWORD *)(v5 + 48);
  v10 = (_QWORD *)(v9 + 16 * v8);
  v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_232201ADC() & 1) == 0)
  {
    v15 = ~v7;
    do
    {
      v8 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_18;
      v16 = (_QWORD *)(v9 + 16 * v8);
      v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_232201ADC() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v2;
  v19 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_2321A377C();
    v13 = v19;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v8);
  sub_232075318(v8);
  *v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

unint64_t sub_232075318(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_23220177C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_232201B78();
        swift_bridgeObjectRetain();
        sub_232200F3C();
        v10 = sub_232201B9C();
        swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_OWORD *)(v12 + 16 * v2);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_2320754DC()
{
  uint64_t v0;
  int *v1;
  unint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = (int *)type metadata accessor for TrendFeedItemStep();
  v2 = (*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_bridgeObjectRelease();
  swift_release();
  v3 = v0 + v2;
  swift_unknownObjectRelease();

  v4 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  v5 = v3 + v4[6];
  v6 = (int *)_s14descr250103FA9O8WorkPlanVMa();
  v7 = v5 + v6[5];
  v8 = sub_2321FFACC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v5 + v6[6];
  v10 = sub_2321FE584();
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  v12 = v5 + v6[7];
  sub_232071E50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  v14 = v5 + v6[8];
  sub_232071EE4();
  v16 = v15;
  v17 = *(_QWORD *)(v15 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v15))
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);

  sub_232016AFC(v3 + v4[8]);
  swift_unknownObjectRelease();

  sub_232016AFC(v3 + v1[5]);
  swift_unknownObjectRelease();
  v18 = v3 + v1[7];
  v19 = sub_2321FFE08();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_232075710(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for TrendFeedItemStep() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_232073FC4(a1, *(_QWORD *)(v1 + 16), *(void (**)(_QWORD))(v1 + 24), *(_QWORD *)(v1 + 32), v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_232075774()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2320757A0(void *a1)
{
  uint64_t v1;

  return sub_232074570(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(_QWORD))(v1 + 24), *(_QWORD *)(v1 + 32));
}

id sub_2320757AC(id result, void *a2)
{
  id v2;
  id v3;

  if (result != (id)1)
  {
    v3 = result;
    v2 = a2;
    return v3;
  }
  return result;
}

uint64_t sub_2320757DC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  char v14;
  uint64_t v15;

  sub_232076954(0, &qword_2541B5778, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEE3520]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v13 - v10;
  sub_232016AD8(a1, a1[3]);
  sub_232076910();
  sub_232201BC0();
  v15 = a2;
  v14 = 0;
  sub_2321FF2D4();
  sub_232000590(&qword_2541B29C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE43C88], MEMORY[0x24BE43C98]);
  sub_232201A64();
  if (!v3)
  {
    v15 = a3;
    v14 = 1;
    type metadata accessor for SnidgetLevelChartView.ViewModel();
    sub_232000590(&qword_2541B33E0, (uint64_t (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel, (uint64_t)&protocol conformance descriptor for SnidgetLevelChartView.ViewModel);
    sub_232201A64();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

BOOL sub_23207596C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_232075984()
{
  sub_232201B78();
  sub_232201B84();
  return sub_232201B9C();
}

uint64_t sub_2320759C8()
{
  return sub_232201B84();
}

uint64_t sub_2320759F0()
{
  sub_232201B78();
  sub_232201B84();
  return sub_232201B9C();
}

unint64_t sub_232075A30()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000021;
  else
    return 0xD00000000000001CLL;
}

uint64_t sub_232075A70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_232076610(a1, a2);
  *a3 = result;
  return result;
}

void sub_232075A94(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_232075AA0()
{
  sub_232076910();
  return sub_232201BD8();
}

uint64_t sub_232075AC8()
{
  sub_232076910();
  return sub_232201BE4();
}

uint64_t sub_232075AF0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_2320766F8(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_232075B18(_QWORD *a1)
{
  uint64_t *v1;

  return sub_2320757DC(a1, *v1, v1[1]);
}

unint64_t sub_232075B34()
{
  unint64_t result;

  result = qword_2541B7890;
  if (!qword_2541B7890)
  {
    result = MEMORY[0x2348FF39C](&unk_232212CC4, &type metadata for CardioFitnessSnidgetVisualizationView);
    atomic_store(result, (unint64_t *)&qword_2541B7890);
  }
  return result;
}

uint64_t sub_232075B78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(uint64_t, ValueMetadata *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[4];
  _QWORD v38[2];
  __int128 v39;
  uint64_t v40;
  _BYTE v41[8];
  uint64_t v42;
  uint64_t v43;

  v34 = a1;
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BE42880];
  sub_2320057B8(0, &qword_255F9D378, (uint64_t (*)(uint64_t))MEMORY[0x24BE43C88], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BE42880]);
  MEMORY[0x24BDAC7A8](v3);
  v30 = sub_2321FF004();
  v4 = *(_QWORD *)(v30 - 8);
  v5 = MEMORY[0x24BDAC7A8](v30);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v29 - v8;
  v10 = (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t))MEMORY[0x24BDEF380];
  sub_232077024(0, &qword_2541B12D8, MEMORY[0x24BDEF380]);
  v33 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v31 = (uint64_t)&v29 - v12;
  sub_232076238(0, &qword_2541B12D0, v10);
  v29 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (_OWORD *)((char *)&v29 - v14);
  sub_232076238(0, &qword_2541B12E8, MEMORY[0x24BDEF3B8]);
  v32 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v29 - v17;
  sub_2320057B8(0, &qword_2541B1118, (uint64_t (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel, v2);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v29 - v20;
  v39 = *(_OWORD *)(v1 + 16);
  sub_232076298((uint64_t)&v39 + 8, (uint64_t)v41, &qword_2541B33E8, (uint64_t (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel);
  sub_232076298((uint64_t)v41, (uint64_t)&v42, &qword_2541B33E8, (uint64_t (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel);
  if (v42)
  {
    *(_QWORD *)&v37[0] = v42;
    sub_2320763C4(v1 + 32, (uint64_t)v38);
    sub_2320763C4((uint64_t)v38, (uint64_t)&v43);
    if (v43 == 1)
      v22 = 0;
    else
      v22 = swift_retain();
    v40 = v22;
    sub_232076418((uint64_t)v41);
    sub_232076418((uint64_t)v41);
    type metadata accessor for SnidgetLevelChartView.ViewModel();
    swift_bridgeObjectRetain();
    sub_2321FEDF4();
    sub_232118BE8((uint64_t)v21, (uint64_t)v37);
    v25 = v37[1];
    *v15 = v37[0];
    v15[1] = v25;
    v26 = v37[3];
    v15[2] = v37[2];
    v15[3] = v26;
    swift_storeEnumTagMultiPayload();
    sub_232076508((uint64_t)v37);
    sub_232076380();
    sub_232000590(&qword_2541B1208, (uint64_t (*)(uint64_t))MEMORY[0x24BE432B8], MEMORY[0x24BE432A8]);
    sub_232200A80();
    sub_232076440((uint64_t)v18, v31);
    swift_storeEnumTagMultiPayload();
    sub_2320762F0();
    sub_232200A80();
    sub_232076494((uint64_t)v41);
    sub_2320764BC((uint64_t)v18);
    return sub_232076568((uint64_t)v37);
  }
  else
  {
    v23 = (uint64_t (*)(uint64_t))MEMORY[0x24BE43C88];
    sub_232076298((uint64_t)&v39, (uint64_t)&v40, &qword_2541B29C8, (uint64_t (*)(uint64_t))MEMORY[0x24BE43C88]);
    sub_232076298((uint64_t)&v40, (uint64_t)v38, &qword_2541B29C8, v23);
    if (v38[0])
    {
      v36 = v38[0];
      sub_2320763C4(v1 + 32, (uint64_t)&v43);
      sub_2320763C4((uint64_t)&v43, (uint64_t)v37);
      if (*(_QWORD *)&v37[0] == 1)
        v24 = 0;
      else
        v24 = swift_retain();
      v35 = v24;
      sub_232076418((uint64_t)&v40);
      sub_232076418((uint64_t)&v40);
      sub_2321FF2D4();
      swift_bridgeObjectRetain();
      sub_2321FEDF4();
      sub_2321FF010();
      v28 = v30;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v7, v30);
      (*(void (**)(_OWORD *, char *, uint64_t))(v4 + 16))(v15, v9, v28);
      swift_storeEnumTagMultiPayload();
      sub_232076380();
      sub_232000590(&qword_2541B1208, (uint64_t (*)(uint64_t))MEMORY[0x24BE432B8], MEMORY[0x24BE432A8]);
      sub_232200A80();
      sub_232076440((uint64_t)v18, v31);
      swift_storeEnumTagMultiPayload();
      sub_2320762F0();
      sub_232200A80();
      sub_232076494((uint64_t)&v40);
      sub_2320764BC((uint64_t)v18);
      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v28);
    }
    else
    {
      swift_storeEnumTagMultiPayload();
      sub_2320762F0();
      return sub_232200A80();
    }
  }
}

uint64_t sub_232076148@<X0>(uint64_t a1@<X8>)
{
  return sub_232075B78(a1);
}

__n128 sub_232076180@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __n128 result;
  __n128 v10;

  sub_2320765C8(0, &qword_2541B0ED0, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x24BE42880]);
  v5 = v4;
  v6 = sub_2321FEE00();
  v8 = v7;
  sub_2321FEDDC();
  sub_2321FEDE8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  result = v10;
  a2->n128_u64[0] = v6;
  a2->n128_u64[1] = v8;
  a2[1] = v10;
  a2[2] = v10;
  return result;
}

uint64_t sub_232076228()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_232076238(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_2321FF004();
    v7 = a3(a1, &type metadata for SnidgetLevelChartView, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_232076298(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;

  sub_2320057B8(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

unint64_t sub_2320762F0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_2541B12E0;
  if (!qword_2541B12E0)
  {
    sub_232076238(255, &qword_2541B12E8, MEMORY[0x24BDEF3B8]);
    v2 = v1;
    v3[0] = sub_232076380();
    v3[1] = sub_232000590(&qword_2541B1208, (uint64_t (*)(uint64_t))MEMORY[0x24BE432B8], MEMORY[0x24BE432A8]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDEF3E0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_2541B12E0);
  }
  return result;
}

unint64_t sub_232076380()
{
  unint64_t result;

  result = qword_2541B7670[0];
  if (!qword_2541B7670[0])
  {
    result = MEMORY[0x2348FF39C](&protocol conformance descriptor for SnidgetLevelChartView, &type metadata for SnidgetLevelChartView);
    atomic_store(result, qword_2541B7670);
  }
  return result;
}

uint64_t sub_2320763C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2320765C8(0, &qword_2541B47E8, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_232076418(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_232076440(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_232076238(0, &qword_2541B12E8, MEMORY[0x24BDEF3B8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_232076494(uint64_t a1)
{
  swift_release();
  return a1;
}

uint64_t sub_2320764BC(uint64_t a1)
{
  uint64_t v2;

  sub_232076238(0, &qword_2541B12E8, MEMORY[0x24BDEF3B8]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_232076508(uint64_t a1)
{
  sub_23207655C(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23207655C(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_retain();
  return result;
}

uint64_t sub_232076568(uint64_t a1)
{
  sub_2320765BC(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_2320765BC(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_release();
  return result;
}

void sub_2320765C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, ValueMetadata *))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, &type metadata for CardioFitnessSnidgetVisualizationView.ViewModel);
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_232076610(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD00000000000001CLL && a2 == 0x8000000232205190 || (sub_232201ADC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000002322051B0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_232201ADC();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2320766F8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  sub_232076954(0, qword_2541B0EF0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEE33E0]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v10 - v6;
  sub_232016AD8(a1, a1[3]);
  sub_232076910();
  sub_232201BB4();
  if (v1)
  {
    v8 = 0;
    sub_232016AFC((uint64_t)a1);
  }
  else
  {
    sub_2321FF2D4();
    HIBYTE(v10) = 0;
    sub_232000590(&qword_2541B7628, (uint64_t (*)(uint64_t))MEMORY[0x24BE43C88], MEMORY[0x24BE43CA0]);
    sub_232201A10();
    v8 = v11;
    type metadata accessor for SnidgetLevelChartView.ViewModel();
    HIBYTE(v10) = 1;
    sub_232000590(&qword_2541B7658, (uint64_t (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel, (uint64_t)&protocol conformance descriptor for SnidgetLevelChartView.ViewModel);
    swift_retain();
    sub_232201A10();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_retain();
    sub_232016AFC((uint64_t)a1);
    swift_release();
  }
  swift_release();
  return v8;
}

unint64_t sub_232076910()
{
  unint64_t result;

  result = qword_2541B7878;
  if (!qword_2541B7878)
  {
    result = MEMORY[0x2348FF39C](&unk_232212E10, &type metadata for CardioFitnessSnidgetVisualizationView.ViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2541B7878);
  }
  return result;
}

void sub_232076954(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_232076910();
    v7 = a3(a1, &type metadata for CardioFitnessSnidgetVisualizationView.ViewModel.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for CardioFitnessSnidgetVisualizationView.ViewModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2320769FC + 4 * byte_232212C35[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_232076A30 + 4 * byte_232212C30[v4]))();
}

uint64_t sub_232076A30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232076A38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232076A40);
  return result;
}

uint64_t sub_232076A4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232076A54);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_232076A58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232076A60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessSnidgetVisualizationView.ViewModel.CodingKeys()
{
  return &type metadata for CardioFitnessSnidgetVisualizationView.ViewModel.CodingKeys;
}

uint64_t destroy for CardioFitnessSnidgetVisualizationView.ViewModel()
{
  swift_release();
  return swift_release();
}

_QWORD *_s9Summaries37CardioFitnessSnidgetVisualizationViewV9ViewModelVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for CardioFitnessSnidgetVisualizationView.ViewModel(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for CardioFitnessSnidgetVisualizationView.ViewModel(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CardioFitnessSnidgetVisualizationView.ViewModel(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CardioFitnessSnidgetVisualizationView.ViewModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessSnidgetVisualizationView.ViewModel()
{
  return &type metadata for CardioFitnessSnidgetVisualizationView.ViewModel;
}

uint64_t destroy for CardioFitnessSnidgetVisualizationView(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  result = *(_QWORD *)(a1 + 32);
  if (result != 1)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for CardioFitnessSnidgetVisualizationView(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v5;
  v7 = a2 + 4;
  v6 = a2[4];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  if (v6 == 1)
  {
    *(_OWORD *)(a1 + 32) = *v7;
  }
  else
  {
    v8 = a2[5];
    *(_QWORD *)(a1 + 32) = v6;
    *(_QWORD *)(a1 + 40) = v8;
    swift_retain();
    swift_retain();
  }
  return a1;
}

_QWORD *assignWithCopy for CardioFitnessSnidgetVisualizationView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  v4 = a2[4];
  if (a1[4] != 1)
  {
    if (v4 != 1)
    {
      a1[4] = v4;
      swift_retain();
      swift_release();
      a1[5] = a2[5];
      swift_retain();
      swift_release();
      return a1;
    }
    sub_232076E18((uint64_t)(a1 + 4));
    goto LABEL_6;
  }
  if (v4 == 1)
  {
LABEL_6:
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    return a1;
  }
  a1[4] = v4;
  a1[5] = a2[5];
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_232076E18(uint64_t a1)
{
  swift_release();
  swift_release();
  return a1;
}

__n128 initializeWithTake for CardioFitnessSnidgetVisualizationView(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *assignWithTake for CardioFitnessSnidgetVisualizationView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  v5 = a2[4];
  if (a1[4] != 1)
  {
    if (v5 != 1)
    {
      a1[4] = v5;
      swift_release();
      a1[5] = a2[5];
      swift_release();
      return a1;
    }
    sub_232076E18((uint64_t)(a1 + 4));
  }
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  return a1;
}

uint64_t getEnumTagSinglePayload for CardioFitnessSnidgetVisualizationView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CardioFitnessSnidgetVisualizationView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessSnidgetVisualizationView()
{
  return &type metadata for CardioFitnessSnidgetVisualizationView;
}

unint64_t sub_232076FAC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_2541B12F0;
  if (!qword_2541B12F0)
  {
    sub_232077024(255, &qword_2541B12F8, MEMORY[0x24BDEF3B8]);
    v2 = v1;
    v3[0] = sub_2320762F0();
    v3[1] = MEMORY[0x24BDF5138];
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDEF3E0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_2541B12F0);
  }
  return result;
}

void sub_232077024(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_232076238(255, &qword_2541B12E8, MEMORY[0x24BDEF3B8]);
    v7 = a3(a1, v6, MEMORY[0x24BDF5158]);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_232077098()
{
  unint64_t result;

  result = qword_255F9D380;
  if (!qword_255F9D380)
  {
    result = MEMORY[0x2348FF39C](&unk_232212DE8, &type metadata for CardioFitnessSnidgetVisualizationView.ViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255F9D380);
  }
  return result;
}

unint64_t sub_2320770E0()
{
  unint64_t result;

  result = qword_2541B7888;
  if (!qword_2541B7888)
  {
    result = MEMORY[0x2348FF39C](&unk_232212D58, &type metadata for CardioFitnessSnidgetVisualizationView.ViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2541B7888);
  }
  return result;
}

unint64_t sub_232077128()
{
  unint64_t result;

  result = qword_2541B7880;
  if (!qword_2541B7880)
  {
    result = MEMORY[0x2348FF39C](&unk_232212D80, &type metadata for CardioFitnessSnidgetVisualizationView.ViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2541B7880);
  }
  return result;
}

void **sub_23207716C(void **a1, void **a2, uint64_t a3)
{
  int v3;
  char *v4;
  void **v5;
  uint64_t v6;
  char *v7;
  char *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  char *v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  char *v23;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = *(void **)((char *)a2 + v6);
    *(_QWORD *)v7 = v9;
    v7[8] = *((_BYTE *)a2 + v6 + 8);
    v10 = *(void **)((char *)a2 + v6 + 16);
    *((_QWORD *)v7 + 2) = v10;
    v11 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    v12 = *(int *)(v11 + 28);
    v23 = &v7[v12];
    v13 = &v8[v12];
    v14 = sub_2321FE938();
    v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    v16 = v4;
    v17 = v9;
    v18 = v10;
    v15(v23, v13, v14);
    v19 = *(int *)(v11 + 32);
    v20 = *(void **)&v8[v19];
    *(_QWORD *)&v7[v19] = v20;
    v21 = v20;
  }
  return v5;
}

void sub_232077264(id *a1, uint64_t a2)
{
  id *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v4 = (id *)((char *)a1 + *(int *)(a2 + 20));
  v5 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  v6 = (char *)v4 + *(int *)(v5 + 28);
  v7 = sub_2321FE938();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);

}

void **sub_2320772E4(void **a1, void **a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  char *v22;

  v4 = *a2;
  *a1 = *a2;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = *(void **)((char *)a2 + v5);
  *(_QWORD *)v6 = v8;
  v6[8] = *((_BYTE *)a2 + v5 + 8);
  v9 = *(void **)((char *)a2 + v5 + 16);
  *((_QWORD *)v6 + 2) = v9;
  v10 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  v11 = *(int *)(v10 + 28);
  v22 = &v6[v11];
  v12 = &v7[v11];
  v13 = sub_2321FE938();
  v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  v15 = v4;
  v16 = v8;
  v17 = v9;
  v14(v22, v12, v13);
  v18 = *(int *)(v10 + 32);
  v19 = *(void **)&v7[v18];
  *(_QWORD *)&v6[v18] = v19;
  v20 = v19;
  return a1;
}

void **sub_2320773B4(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = *(int *)(a3 + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = *(void **)((char *)a1 + v9);
  v13 = *(void **)((char *)a2 + v9);
  *(_QWORD *)v10 = v13;
  v14 = v13;

  v10[8] = v11[8];
  v15 = (void *)*((_QWORD *)v11 + 2);
  v16 = (void *)*((_QWORD *)v10 + 2);
  *((_QWORD *)v10 + 2) = v15;
  v17 = v15;

  v18 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  v19 = *(int *)(v18 + 28);
  v20 = &v10[v19];
  v21 = &v11[v19];
  v22 = sub_2321FE938();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = *(int *)(v18 + 32);
  v24 = *(void **)&v10[v23];
  v25 = *(void **)&v11[v23];
  *(_QWORD *)&v10[v23] = v25;
  v26 = v25;

  return a1;
}

_QWORD *sub_23207748C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  *(_QWORD *)v5 = *(_QWORD *)((char *)a2 + v4);
  v5[8] = *((_BYTE *)a2 + v4 + 8);
  *((_QWORD *)v5 + 2) = *(_QWORD *)((char *)a2 + v4 + 16);
  v7 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  v8 = *(int *)(v7 + 28);
  v9 = &v5[v8];
  v10 = &v6[v8];
  v11 = sub_2321FE938();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  *(_QWORD *)&v5[*(int *)(v7 + 32)] = *(_QWORD *)&v6[*(int *)(v7 + 32)];
  return a1;
}

void **sub_23207752C(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;

  v6 = *a1;
  *a1 = *a2;

  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(void **)((char *)a1 + v7);
  *(_QWORD *)v8 = *(_QWORD *)v9;

  v8[8] = v9[8];
  v11 = (void *)*((_QWORD *)v8 + 2);
  *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);

  v12 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  v13 = *(int *)(v12 + 28);
  v14 = &v8[v13];
  v15 = &v9[v13];
  v16 = sub_2321FE938();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v17 = *(int *)(v12 + 32);
  v18 = *(void **)&v8[v17];
  *(_QWORD *)&v8[v17] = *(_QWORD *)&v9[v17];

  return a1;
}

uint64_t sub_2320775F4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_232077600(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_23207767C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_232077688(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for StateOfMindSnidgetFeedItemModelProvider()
{
  uint64_t result;

  result = qword_2541B25D0;
  if (!qword_2541B25D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_232077738()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SnidgetFeedItemGeneratorRequest(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2320777BC(uint64_t a1)
{
  uint64_t result;

  result = sub_232000590(&qword_255F9CF10, (uint64_t (*)(uint64_t))type metadata accessor for StateOfMindSnidgetFeedItemModelProvider, (uint64_t)&unk_232212F9C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_2320777F8(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  id v36;
  unsigned int v37;
  void *v38;
  void *v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  void *v44;
  _BYTE *v45;
  void *v46;
  id v47;
  id *v48;
  void *v49;
  _QWORD *inited;
  void *v51;
  id v52;
  id v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  id v67;
  void (*v68)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  id v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _BYTE *v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  id *v103;
  id v104;
  id v105;
  id v106;
  id v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;

  v5 = v3;
  v117 = a2;
  v8 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v101 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v12);
  v116 = (char *)&v101 - v13;
  v14 = sub_2321FDC6C();
  MEMORY[0x24BDAC7A8](v14);
  v113 = (char *)&v101 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, qword_2541B78E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47DF8], v11);
  MEMORY[0x24BDAC7A8](v16);
  v115 = (char *)&v101 - v17;
  sub_2320057B8(0, &qword_2541B2368, (uint64_t (*)(uint64_t))MEMORY[0x24BE445A8], v11);
  MEMORY[0x24BDAC7A8](v18);
  v112 = (char *)&v101 - v19;
  sub_2320057B8(0, &qword_2541B2930, (uint64_t (*)(uint64_t))MEMORY[0x24BE42FE0], v11);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v101 - v21;
  sub_2320057B8(0, (unint64_t *)&qword_2541B2838, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], v11);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v111 = (uint64_t)&v101 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v101 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v114 = (uint64_t)&v101 - v29;
  v30 = sub_2321FD9F0();
  v119 = *(_QWORD *)(v30 - 8);
  v120 = v30;
  v31 = MEMORY[0x24BDAC7A8](v30);
  v110 = (char *)&v101 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v118 = (char *)&v101 - v33;
  v34 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (!v34)
  {
    __break(1u);
    goto LABEL_22;
  }
  v35 = v34;
  v36 = objc_msgSend(v34, sel_features);

  if (!v36)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v37 = objc_msgSend(v36, sel_chamomile);

  if (!v37)
  {
    sub_232005578();
    swift_allocError();
    *v45 = 0;
LABEL_10:
    swift_willThrow();
    return;
  }
  v108 = a3;
  v109 = v28;
  v38 = (void *)objc_opt_self();
  v39 = (void *)*v5;
  v40 = objc_msgSend(v38, sel_sharedInstanceForHealthStore_, *v5);
  if (!v40)
  {
LABEL_23:
    __break(1u);
    return;
  }
  v41 = v40;
  v42 = objc_msgSend((id)objc_opt_self(), sel_stateOfMindType);
  v43 = objc_msgSend(v41, sel_displayTypeForObjectType_, v42);

  if (!v43)
  {
    sub_232000300();
    swift_allocError();
    goto LABEL_10;
  }
  sub_232084638(a1);
  if (v4)
  {

    return;
  }
  v46 = v44;
  if (!v44)
    goto LABEL_16;
  v106 = v43;
  sub_232078CB4();
  v47 = v46;
  v107 = (id)sub_23207825C(v47);
  if (!v107)
  {

    v43 = v106;
LABEL_16:
    v56 = sub_2321FE65C();
    v57 = (uint64_t)v115;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v115, 1, 1, v56);
    v58 = sub_2321FD8B8();
    v59 = (uint64_t)v116;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v116, 1, 1, v58);
    v60 = v117;
    swift_bridgeObjectRetain();
    sub_2320D71E8(0, v57, v60, v59, v10);
    sub_2321FF208();
    v61 = sub_2321FEF5C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v22, 1, 1, v61);
    v62 = v43;
    v63 = sub_2321FF1FC();
    sub_232044DE8(0);
    v65 = v108;
    sub_23200054C((uint64_t)v10, v108 + *(int *)(v64 + 52), type metadata accessor for SnidgetFeedItemMetadata);

    *(_QWORD *)(v65 + 8) = 0;
    *(_QWORD *)(v65 + 16) = 0;
    *(_QWORD *)v65 = v63;
    *(_BYTE *)(v65 + 24) = 1;
    sub_232002CEC((uint64_t)v10, type metadata accessor for SnidgetFeedItemMetadata);
    return;
  }
  v105 = v47;
  v48 = (id *)((char *)v5 + *(int *)(type metadata accessor for StateOfMindSnidgetFeedItemModelProvider() + 20));
  v49 = *(id *)((char *)v48 + *(int *)(type metadata accessor for SnidgetFeedItemGeneratorRequest(0) + 32));
  type metadata accessor for MostRecentSampleSnidgetStringBuilder();
  inited = (_QWORD *)swift_initStackObject();
  inited[2] = v39;
  v51 = (void *)objc_opt_self();
  v104 = v49;
  v52 = v39;
  v53 = objc_msgSend(v51, sel_sharedInstanceForHealthStore_, v52);
  inited[4] = v53;
  v103 = v48;
  if (v49)
  {
    v54 = v120;
    v55 = v104;
  }
  else
  {
    v66 = v53;
    v55 = objc_msgSend(v66, sel_createHKUnitPreferenceController);

    v54 = v120;
  }

  inited[3] = v55;
  v67 = (id)HKUILocalizedStringForStateOfMind();
  sub_232200EC4();

  v104 = inited;
  SnidgetStringBuilder.makePrimaryAttributedString(localizedString:)();
  swift_bridgeObjectRelease();
  v68 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v119 + 56);
  v69 = v114;
  v68(v114, 1, 1, v54);
  v70 = sub_2322012C0();
  v71 = sub_2322012B4();
  sub_232078E0C(v70, v71);
  v73 = v72;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v74 = (uint64_t)v109;
  if (v73)
  {
    SnidgetStringBuilder.makeSupplementaryAttributedString(localizedString:)();
    swift_bridgeObjectRelease();
    sub_232079A90(v69);
    v68(v74, 0, 1, v120);
    sub_232079AE4(v74, v69);
  }
  sub_2321FF208();
  sub_232000448();
  v76 = *(int *)(v75 + 48);
  v102 = v106;
  objc_msgSend(v105, sel_dateData);
  v77 = (id)HKDecodeDateForValue();
  sub_2321FDC30();

  v22[v76] = 0;
  v78 = *MEMORY[0x24BE42FD8];
  v79 = sub_2321FEF5C();
  v80 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v68;
  v81 = v69;
  v82 = *(_QWORD *)(v79 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v82 + 104))(v22, v78, v79);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v22, 0, 1, v79);
  v106 = (id)sub_2321FF1FC();
  v83 = v120;
  v80(v109, 1, 1, v120);
  (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v110, v118, v83);
  sub_232079A34(v81, v111);
  v121 = 0x5F74656764696E53;
  v122 = 0xE800000000000000;
  v84 = v103[2];
  v85 = objc_msgSend(v84, sel_description);
  sub_232200EC4();

  sub_232200F48();
  swift_bridgeObjectRelease();
  v86 = v112;
  sub_2321FF58C();
  swift_bridgeObjectRelease();
  v87 = sub_2321FF5A4();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 56))(v86, 0, 1, v87);
  sub_2321FF6C4();
  swift_allocObject();
  v88 = sub_2321FF6B8();
  v89 = v105;
  objc_msgSend(v105, sel_valence);
  v91 = v90;
  objc_msgSend(v89, sel_dateData);
  v92 = (id)HKDecodeDateForValue();
  sub_2321FDC30();

  v93 = (uint64_t)v115;
  sub_2321FE62C();
  v94 = sub_2321FE65C();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 56))(v93, 0, 1, v94);
  v95 = sub_2321FD8B8();
  v96 = (uint64_t)v116;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 56))(v116, 1, 1, v95);
  sub_232044DE8(0);
  v98 = v108;
  v99 = (_BYTE *)(v108 + *(int *)(v97 + 52));
  v100 = v117;
  swift_bridgeObjectRetain();
  sub_2320D71E8(1, v93, v100, v96, v99);
  swift_release();

  *(_QWORD *)v98 = v106;
  *(_QWORD *)(v98 + 8) = v88;
  *(_QWORD *)(v98 + 16) = v91;
  *(_BYTE *)(v98 + 24) = 0;
  sub_232079A90(v114);
  (*(void (**)(char *, uint64_t))(v119 + 8))(v118, v120);
}

unint64_t sub_23207825C(void *a1)
{
  uint64_t v2;
  unint64_t result;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;

  v2 = sub_2321FDC6C();
  MEMORY[0x24BDAC7A8](v2);
  if (!objc_msgSend(a1, sel_hasDateData)
    || !objc_msgSend(a1, sel_hasReflectiveInterval)
    || (objc_msgSend(a1, sel_reflectiveInterval), !objc_msgSend(a1, sel_hasValence)))
  {

    return 0;
  }
  result = (unint64_t)objc_msgSend(a1, sel_labelsCount);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v4 = result;
    v5 = a1;
    sub_232078CF0(0, v4, v5, (SEL *)&selRef_labelsAtIndex_, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_232097110);

    result = (unint64_t)objc_msgSend(v5, sel_domainsCount);
    if ((result & 0x8000000000000000) == 0)
    {
      v6 = result;
      v7 = v5;
      sub_232078CF0(0, v6, v7, (SEL *)&selRef_domainsAtIndex_, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_2320970FC);

      objc_msgSend(v7, sel_dateData);
      v8 = (id)HKDecodeDateForValue();
      sub_2321FDC30();

      objc_msgSend(v7, sel_valence);
      sub_2320E2BF4(MEMORY[0x24BEE4AF8]);
      v9 = sub_2322012A8();

      return v9;
    }
  }
  __break(1u);
  return result;
}

int64_t sub_232078448(int64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(a2 + 16);
    if ((uint64_t)v2 >= result)
      v3 = result;
    else
      v3 = *(_QWORD *)(a2 + 16);
    if (!result)
      v3 = 0;
    if (v2 >= v3)
      return a2;
  }
  __break(1u);
  return result;
}

uint64_t sub_23207848C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23200054C(v2 + *(int *)(a1 + 20), a2, type metadata accessor for SnidgetFeedItemGeneratorRequest);
}

void sub_2320784B4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_2320777F8(*(void **)a1, *(_QWORD *)(a1 + 16), a2);
}

uint64_t sub_2320784D4()
{
  return 0x65636E656C6176;
}

uint64_t sub_2320784EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x65636E656C6176 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_232201ADC();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_232078580(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_23207858C()
{
  sub_232079E38();
  return sub_232201BD8();
}

uint64_t sub_2320785B4()
{
  sub_232079E38();
  return sub_232201BE4();
}

uint64_t sub_2320785DC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  sub_232079E7C(0, &qword_255F9D488, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEE33E0]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v13 - v8;
  sub_232016AD8(a1, a1[3]);
  sub_232079E38();
  sub_232201BB4();
  if (v2)
    return sub_232016AFC((uint64_t)a1);
  sub_232201A34();
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  result = sub_232016AFC((uint64_t)a1);
  *a2 = v11;
  return result;
}

uint64_t sub_23207870C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_232079E7C(0, &qword_2541B5770, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEE3520]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v8 - v5;
  sub_232016AD8(a1, a1[3]);
  sub_232079E38();
  sub_232201BC0();
  sub_232201A88();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_232078800()
{
  unint64_t result;

  result = qword_2541B45D8;
  if (!qword_2541B45D8)
  {
    result = MEMORY[0x2348FF39C](&unk_232212F4C, &type metadata for StateOfMindSnidgetVisualizationView);
    atomic_store(result, (unint64_t *)&qword_2541B45D8);
  }
  return result;
}

uint64_t sub_232078844@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  uint64_t v19;
  _OWORD v21[3];

  v2 = sub_2321FEA04();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2321FE9F8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232079D98();
  v11 = v10;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v21 - v15;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BE660D0], v2);
  sub_2321FE9EC();
  sub_232200C9C();
  sub_2322008C4();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v14, v9, v6);
  v17 = &v14[*(int *)(v11 + 36)];
  v18 = v21[1];
  *(_OWORD *)v17 = v21[0];
  *((_OWORD *)v17 + 1) = v18;
  *((_OWORD *)v17 + 2) = v21[2];
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_232079DF4((uint64_t)v14, (uint64_t)v16);
  sub_23200054C((uint64_t)v16, (uint64_t)v14, (uint64_t (*)(_QWORD))sub_232079D98);
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  sub_232079D34();
  sub_23200054C((uint64_t)v14, a1 + *(int *)(v19 + 48), (uint64_t (*)(_QWORD))sub_232079D98);
  sub_232002CEC((uint64_t)v16, (uint64_t (*)(_QWORD))sub_232079D98);
  return sub_232002CEC((uint64_t)v14, (uint64_t (*)(_QWORD))sub_232079D98);
}

uint64_t sub_232078A48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  *(_QWORD *)a1 = sub_232200A2C();
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  sub_232079CB8();
  return sub_232078844(a1 + *(int *)(v2 + 44));
}

double sub_232078A94@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  double result;
  double v7;

  sub_232000608(0, &qword_255F9D480, (uint64_t)&type metadata for StateOfMindSnidgetVisualizationView.ViewModel, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BE42880]);
  v5 = v4;
  sub_2321FEDDC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  result = v7;
  *a2 = v7;
  return result;
}

uint64_t sub_232078B0C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_232078B1C()
{
  return sub_232078B50(&qword_2541B73E0, &qword_2541B73E8, (uint64_t (*)(uint64_t, _QWORD *))type metadata accessor for SnidgetHarnessPluginView.ActionHandler, (uint64_t)&unk_2322120D8);
}

uint64_t sub_232078B50(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_232078BC4(255, a2, a3);
    result = MEMORY[0x2348FF39C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_232078B90()
{
  return sub_232078B50(&qword_2541B3658, &qword_2541B3660, (uint64_t (*)(uint64_t, _QWORD *))type metadata accessor for SnidgetHarnessPluginView, (uint64_t)&unk_232212090);
}

void sub_232078BC4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD v9[8];

  if (!*a2)
  {
    sub_231FFFDE4(255, &qword_2541B2998, MEMORY[0x24BE43750]);
    v9[0] = v6;
    v9[1] = &type metadata for StateOfMindSnidgetVisualizationView;
    v9[2] = sub_23200409C();
    v9[3] = sub_232044F18();
    v9[4] = sub_231FFFE84(&qword_2541B2970, MEMORY[0x24BE43748]);
    v9[5] = sub_231FFFE84((unint64_t *)&unk_2541B2960, MEMORY[0x24BE43740]);
    v9[6] = sub_232044F5C();
    v9[7] = sub_232044FA0();
    v7 = a3(a1, v9);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_232078CB4()
{
  unint64_t result;

  result = qword_2541B5600;
  if (!qword_2541B5600)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2541B5600);
  }
  return result;
}

uint64_t sub_232078CF0(uint64_t result, uint64_t a2, id a3, SEL *a4, uint64_t (*a5)(BOOL, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v7;
  id v10;
  unint64_t v11;
  unint64_t v12;

  if (result == a2)
  {
    return MEMORY[0x24BEE4AF8];
  }
  else
  {
    v7 = result;
    if (a2 >= result)
    {
      v5 = MEMORY[0x24BEE4AF8];
      while (v7 < a2)
      {
        v10 = objc_msgSend(a3, *a4, v7);
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = a5(0, *(_QWORD *)(v5 + 16) + 1, 1, v5);
          v5 = result;
        }
        v12 = *(_QWORD *)(v5 + 16);
        v11 = *(_QWORD *)(v5 + 24);
        if (v12 >= v11 >> 1)
        {
          result = a5(v11 > 1, v12 + 1, 1, v5);
          v5 = result;
        }
        ++v7;
        *(_QWORD *)(v5 + 16) = v12 + 1;
        *(_QWORD *)(v5 + 8 * v12 + 32) = v10;
        if (a2 == v7)
          return v5;
      }
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_232078E0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int64_t v51;
  uint64_t v52;
  unint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  uint64_t v103;
  unint64_t v104;
  _QWORD v106[5];
  uint64_t v107;
  unint64_t v108;
  int64_t v109;
  char *v110;
  unsigned int v111;
  void (*v112)(char *, uint64_t);
  unsigned int v113;
  void (*v114)(char *);
  void (*v115)(char *, uint64_t);
  void (*v116)(char *);
  uint64_t v117;
  char *v118;
  char *v119;
  char *v120;
  uint64_t v121;
  char *v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;

  v4 = sub_2321FDD08();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v106 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_232200E7C();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v106 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232079BA0(0, &qword_2541B2820, MEMORY[0x24BDCC218]);
  v125 = v10;
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v119 = (char *)v106 - v12;
  sub_232079BA0(0, &qword_2541B2818, MEMORY[0x24BDCC1F0]);
  v126 = v13;
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v118 = (char *)v106 - v15;
  sub_232079BA0(0, &qword_2541B2830, MEMORY[0x24BDCC228]);
  v121 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v120 = (char *)v106 - v18;
  v19 = *(_QWORD *)(a1 + 16);
  v20 = *(_QWORD *)(a2 + 16);
  v21 = MEMORY[0x24BEE4AF8];
  v109 = v19;
  v122 = v6;
  if (v19)
  {
    if (!v20)
    {
      v123 = v14;
      v108 = v17;
      v117 = v11;
      v110 = v9;
      v22 = MEMORY[0x24BEE4AF8];
      goto LABEL_11;
    }
  }
  else if (!v20)
  {
    return 0;
  }
  v123 = v14;
  v124 = a1;
  v108 = v17;
  v117 = v11;
  v110 = v9;
  v128 = MEMORY[0x24BEE4AF8];
  sub_2320138B4(0, v20, 0);
  v23 = 0;
  v22 = v128;
  do
  {
    v24 = (id)HKUILocalizedStringForStateOfMindLabel();
    v25 = sub_232200EC4();
    v27 = v26;

    v128 = v22;
    v29 = *(_QWORD *)(v22 + 16);
    v28 = *(_QWORD *)(v22 + 24);
    if (v29 >= v28 >> 1)
    {
      sub_2320138B4(v28 > 1, v29 + 1, 1);
      v22 = v128;
    }
    ++v23;
    *(_QWORD *)(v22 + 16) = v29 + 1;
    v30 = v22 + 16 * v29;
    *(_QWORD *)(v30 + 32) = v25;
    *(_QWORD *)(v30 + 40) = v27;
  }
  while (v20 != v23);
  if (!v19)
  {
    v31 = MEMORY[0x24BEE4AF8];
    goto LABEL_17;
  }
  a1 = v124;
  v21 = MEMORY[0x24BEE4AF8];
LABEL_11:
  v128 = v21;
  sub_2320138B4(0, v19, 0);
  v31 = v128;
  v32 = a1 + 32;
  do
  {
    v32 += 8;
    v33 = (id)HKUILocalizedStringForStateOfMindDomain();
    v34 = sub_232200EC4();
    v36 = v35;

    v128 = v31;
    v38 = *(_QWORD *)(v31 + 16);
    v37 = *(_QWORD *)(v31 + 24);
    if (v38 >= v37 >> 1)
    {
      sub_2320138B4(v37 > 1, v38 + 1, 1);
      v31 = v128;
    }
    *(_QWORD *)(v31 + 16) = v38 + 1;
    v39 = v31 + 16 * v38;
    *(_QWORD *)(v39 + 32) = v34;
    *(_QWORD *)(v39 + 40) = v36;
    --v19;
  }
  while (v19);
LABEL_17:
  v127 = v22;
  v111 = *MEMORY[0x24BDCC1E8];
  v114 = *(void (**)(char *))(v123 + 104);
  v40 = v118;
  v114(v118);
  v113 = *MEMORY[0x24BDCC208];
  v41 = v117;
  v116 = *(void (**)(char *))(v117 + 104);
  v42 = v119;
  v43 = v125;
  v116(v119);
  sub_232000608(0, (unint64_t *)&qword_2541B54F8, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  v45 = v44;
  v46 = sub_232079B40();
  v47 = v120;
  v124 = v45;
  sub_2321FD7D4();
  v112 = *(void (**)(char *, uint64_t))(v41 + 8);
  v112(v42, v43);
  v115 = *(void (**)(char *, uint64_t))(v123 + 8);
  v115(v40, v126);
  v123 = sub_232079C60();
  v48 = v121;
  sub_232200FCC();
  v117 = *(_QWORD *)(v108 + 8);
  ((void (*)(char *, uint64_t))v117)(v47, v48);
  v107 = v128;
  v108 = v129;
  v127 = v31;
  v49 = v126;
  ((void (*)(char *, _QWORD, uint64_t))v114)(v40, v111, v126);
  v50 = v125;
  ((void (*)(char *, _QWORD, uint64_t))v116)(v42, v113, v125);
  sub_2321FD7D4();
  v112(v42, v50);
  v115(v40, v49);
  v106[4] = v46;
  sub_232200FCC();
  ((void (*)(char *, uint64_t))v117)(v47, v48);
  v51 = v109;
  v52 = v20 + v109;
  if (__OFADD__(v20, v109))
  {
    __break(1u);
LABEL_55:
    swift_once();
LABEL_20:
    v54 = (id)qword_2541BF760;
    sub_2321FDCFC();
    v55 = sub_232200EF4();
    v106[3] = v56;
    v106[2] = v55;
    if (v20 >= 6)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v22 + 16) >= 6uLL)
        v67 = 6;
      else
        v67 = *(_QWORD *)(v22 + 16);
      sub_232201AF4();
      swift_unknownObjectRetain_n();
      v68 = swift_dynamicCastClass();
      if (!v68)
      {
        swift_bridgeObjectRelease();
        v68 = MEMORY[0x24BEE4AF8];
      }
      v69 = *(_QWORD *)(v68 + 16);
      swift_release();
      if (v69 == v67)
      {
        v70 = swift_dynamicCastClass();
        if (!v70)
        {
          swift_bridgeObjectRelease();
          v70 = MEMORY[0x24BEE4AF8];
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        v70 = sub_23201A4C0(v22, v22 + 32, 0, (2 * v67) | 1);
      }
      swift_bridgeObjectRelease();
      v127 = v70;
      v71 = v118;
      v72 = v126;
      ((void (*)(char *, _QWORD, uint64_t))v114)(v118, v111, v126);
      v73 = v119;
      v74 = v125;
      ((void (*)(char *, _QWORD, uint64_t))v116)(v119, v113, v125);
      v75 = v120;
      sub_2321FD7D4();
      v112(v73, v74);
      v115(v71, v72);
      v76 = v121;
      sub_232200FCC();
      ((void (*)(char *, uint64_t))v117)(v75, v76);
      swift_release();
      v77 = v128;
      v78 = v129;
      sub_2320057B8(0, (unint64_t *)&qword_2541B5860, (uint64_t (*)(uint64_t))sub_23204FB8C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v79 = swift_allocObject();
      *(_OWORD *)(v79 + 16) = xmmword_232210D30;
      v80 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v79 + 56) = MEMORY[0x24BEE1768];
      *(_QWORD *)(v79 + 64) = v80;
      *(_QWORD *)(v79 + 32) = v48;
      v66 = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v79 + 96) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v79 + 104) = sub_2320168D8();
      *(_QWORD *)(v79 + 72) = v77;
      *(_QWORD *)(v79 + 80) = v78;
      v81 = sub_232200EDC();
      v83 = v82;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v65 = 0;
      v53 = 0xE000000000000000;
      goto LABEL_42;
    }
    swift_bridgeObjectRelease();
    v57 = 6 - v20;
    v59 = sub_232078448(6 - v20, v31);
    v61 = v60;
    v63 = v62;
    if ((v62 & 1) != 0)
    {
      v106[0] = v58;
      v84 = sub_232201AF4();
      swift_unknownObjectRetain_n();
      v106[1] = v84;
      v85 = swift_dynamicCastClass();
      if (!v85)
      {
        swift_unknownObjectRelease();
        v85 = MEMORY[0x24BEE4AF8];
      }
      v86 = *(_QWORD *)(v85 + 16);
      swift_release();
      if (__OFSUB__(v63 >> 1, v61))
      {
        __break(1u);
      }
      else if (v86 == (v63 >> 1) - v61)
      {
        v64 = swift_dynamicCastClass();
        if (!v64)
        {
          swift_unknownObjectRelease();
          v64 = MEMORY[0x24BEE4AF8];
        }
        goto LABEL_40;
      }
      swift_unknownObjectRelease();
      v58 = v106[0];
    }
    v64 = sub_23201A4C0(v59, v58, v61, v63);
LABEL_40:
    v87 = v51 - v57;
    swift_unknownObjectRelease();
    v127 = v64;
    v88 = v118;
    v89 = v126;
    ((void (*)(char *, _QWORD, uint64_t))v114)(v118, v111, v126);
    v90 = v119;
    v91 = v125;
    ((void (*)(char *, _QWORD, uint64_t))v116)(v119, v113, v125);
    v92 = v120;
    sub_2321FD7D4();
    v112(v90, v91);
    v115(v88, v89);
    v93 = v121;
    sub_232200FCC();
    ((void (*)(char *, uint64_t))v117)(v92, v93);
    swift_release();
    v94 = v128;
    v95 = v129;
    sub_2320057B8(0, (unint64_t *)&qword_2541B5860, (uint64_t (*)(uint64_t))sub_23204FB8C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v96 = swift_allocObject();
    *(_OWORD *)(v96 + 16) = xmmword_232210D30;
    v97 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v96 + 56) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v96 + 64) = v97;
    *(_QWORD *)(v96 + 32) = v87;
    v66 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v96 + 96) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v96 + 104) = sub_2320168D8();
    *(_QWORD *)(v96 + 72) = v94;
    *(_QWORD *)(v96 + 80) = v95;
    v65 = sub_232200EDC();
    v99 = v98;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v53 = v99;
    goto LABEL_41;
  }
  v53 = v129;
  v48 = v52 - 6;
  if (v52 > 6)
  {
    sub_232200E70();
    if (qword_2541B7488 == -1)
      goto LABEL_20;
    goto LABEL_55;
  }
  v65 = v128;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v66 = MEMORY[0x24BEE0D00];
LABEL_41:
  v83 = v108;
  v81 = v107;
LABEL_42:
  v100 = HIBYTE(v83) & 0xF;
  if ((v83 & 0x2000000000000000) == 0)
    v100 = v81 & 0xFFFFFFFFFFFFLL;
  if (v100)
  {
    v101 = HIBYTE(v53) & 0xF;
    if ((v53 & 0x2000000000000000) == 0)
      v101 = v65 & 0xFFFFFFFFFFFFLL;
    if (v101)
    {
      sub_232200E70();
      if (qword_2541B7488 != -1)
        swift_once();
      v102 = (id)qword_2541BF760;
      sub_2321FDCFC();
      sub_232200EF4();
      sub_2320057B8(0, (unint64_t *)&qword_2541B5860, (uint64_t (*)(uint64_t))sub_23204FB8C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v103 = swift_allocObject();
      *(_OWORD *)(v103 + 16) = xmmword_232210D30;
      *(_QWORD *)(v103 + 56) = v66;
      v104 = sub_2320168D8();
      *(_QWORD *)(v103 + 32) = v81;
      *(_QWORD *)(v103 + 40) = v83;
      *(_QWORD *)(v103 + 96) = v66;
      *(_QWORD *)(v103 + 104) = v104;
      *(_QWORD *)(v103 + 64) = v104;
      *(_QWORD *)(v103 + 72) = v65;
      *(_QWORD *)(v103 + 80) = v53;
      swift_bridgeObjectRetain();
      v65 = sub_232200EE8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      return v81;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return v65;
}

uint64_t sub_232079A34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2320057B8(0, (unint64_t *)&qword_2541B2838, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_232079A90(uint64_t a1)
{
  uint64_t v2;

  sub_2320057B8(0, (unint64_t *)&qword_2541B2838, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_232079AE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2320057B8(0, (unint64_t *)&qword_2541B2838, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_232079B40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B5500;
  if (!qword_2541B5500)
  {
    sub_232000608(255, (unint64_t *)&qword_2541B54F8, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2541B5500);
  }
  return result;
}

void sub_232079BA0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD v11[4];

  if (!*a2)
  {
    v6 = sub_2321FD828();
    v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCB5F0];
    sub_232000608(255, (unint64_t *)&qword_2541B54F8, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    v11[0] = v6;
    v11[1] = v8;
    v11[2] = sub_232000590(&qword_2541B27D8, v7, MEMORY[0x24BDCB5E8]);
    v11[3] = sub_232079B40();
    v9 = a3(a1, v11);
    if (!v10)
      atomic_store(v9, a2);
  }
}

unint64_t sub_232079C60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B2828;
  if (!qword_2541B2828)
  {
    sub_232079BA0(255, &qword_2541B2830, MEMORY[0x24BDCC228]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDCC238], v1);
    atomic_store(result, (unint64_t *)&qword_2541B2828);
  }
  return result;
}

void sub_232079CB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9D460)
  {
    sub_2320057B8(255, &qword_255F9D468, (uint64_t (*)(uint64_t))sub_232079D34, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    v0 = sub_2322008E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9D460);
  }
}

void sub_232079D34()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255F9D470)
  {
    sub_232079D98();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255F9D470);
  }
}

void sub_232079D98()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9D478)
  {
    sub_2321FE9F8();
    v0 = sub_232200924();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9D478);
  }
}

uint64_t sub_232079DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_232079D98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_232079E38()
{
  unint64_t result;

  result = qword_2541B45A0;
  if (!qword_2541B45A0)
  {
    result = MEMORY[0x2348FF39C](&unk_2322130AC, &type metadata for StateOfMindSnidgetVisualizationView.ViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2541B45A0);
  }
  return result;
}

void sub_232079E7C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_232079E38();
    v7 = a3(a1, &type metadata for StateOfMindSnidgetVisualizationView.ViewModel.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for StateOfMindSnidgetVisualizationView.ViewModel.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_232079F18 + 4 * byte_232212E60[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_232079F38 + 4 * byte_232212E65[v4]))();
}

_BYTE *sub_232079F18(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_232079F38(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_232079F40(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_232079F48(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_232079F50(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_232079F58(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StateOfMindSnidgetVisualizationView.ViewModel.CodingKeys()
{
  return &type metadata for StateOfMindSnidgetVisualizationView.ViewModel.CodingKeys;
}

ValueMetadata *type metadata accessor for StateOfMindSnidgetVisualizationView.ViewModel()
{
  return &type metadata for StateOfMindSnidgetVisualizationView.ViewModel;
}

ValueMetadata *type metadata accessor for StateOfMindSnidgetVisualizationView()
{
  return &type metadata for StateOfMindSnidgetVisualizationView;
}

uint64_t sub_232079F94()
{
  return sub_232000590(&qword_255F9D490, (uint64_t (*)(uint64_t))sub_232079FC0, MEMORY[0x24BDF4498]);
}

void sub_232079FC0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9D498)
  {
    sub_2320057B8(255, &qword_255F9D468, (uint64_t (*)(uint64_t))sub_232079D34, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_23207A038();
    v0 = sub_232200C0C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9D498);
  }
}

unint64_t sub_23207A038()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F9D4A0;
  if (!qword_255F9D4A0)
  {
    sub_2320057B8(255, &qword_255F9D468, (uint64_t (*)(uint64_t))sub_232079D34, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDF5428], v1);
    atomic_store(result, (unint64_t *)&qword_255F9D4A0);
  }
  return result;
}

unint64_t sub_23207A09C()
{
  unint64_t result;

  result = qword_255F9D4A8[0];
  if (!qword_255F9D4A8[0])
  {
    result = MEMORY[0x2348FF39C](&unk_232213084, &type metadata for StateOfMindSnidgetVisualizationView.ViewModel.CodingKeys);
    atomic_store(result, qword_255F9D4A8);
  }
  return result;
}

unint64_t sub_23207A0E4()
{
  unint64_t result;

  result = qword_2541B45B0;
  if (!qword_2541B45B0)
  {
    result = MEMORY[0x2348FF39C](&unk_232212FF4, &type metadata for StateOfMindSnidgetVisualizationView.ViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2541B45B0);
  }
  return result;
}

unint64_t sub_23207A12C()
{
  unint64_t result;

  result = qword_2541B45A8;
  if (!qword_2541B45A8)
  {
    result = MEMORY[0x2348FF39C](&unk_23221301C, &type metadata for StateOfMindSnidgetVisualizationView.ViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2541B45A8);
  }
  return result;
}

_QWORD *sub_23207A170(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  id v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  __int128 v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  id v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  id v48;
  id v49;
  char *v51;
  int *v52;

  v4 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    *a1 = v6;
    a1 = (_QWORD *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    v8 = (void *)a2[2];
    *a1 = v6;
    a1[1] = v7;
    a1[2] = v8;
    v52 = (int *)v4;
    v9 = *(int *)(v4 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    v12 = (int *)_s14descr250103FA9O8WorkPlanVMa();
    v13 = v12[5];
    v51 = &v10[v13];
    v14 = &v11[v13];
    v15 = sub_2321FFACC();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_unknownObjectRetain();
    v17 = v8;
    v16(v51, v14, v15);
    v18 = v12[6];
    v19 = &v10[v18];
    v20 = &v11[v18];
    v21 = sub_2321FE584();
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      sub_2320002B4(0, &qword_2541B28C0, (void (*)(uint64_t))MEMORY[0x24BE47CC8]);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    v24 = v12[7];
    v25 = &v10[v24];
    v26 = &v11[v24];
    sub_232071E50();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = v12[8];
    v29 = &v10[v28];
    v30 = &v11[v28];
    sub_232071EE4();
    v32 = v31;
    v33 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v30, 1, v31))
    {
      sub_2320002B4(0, &qword_2541B2518, (void (*)(uint64_t))sub_232071EE4);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v29, v30, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v29, 0, 1, v32);
    }
    v35 = v52[7];
    v36 = *(void **)((char *)a2 + v35);
    *(_QWORD *)((char *)a1 + v35) = v36;
    v37 = v52[8];
    v38 = (char *)a1 + v37;
    v39 = (char *)a2 + v37;
    v40 = *(_OWORD *)((char *)a2 + v37 + 24);
    *(_OWORD *)((char *)a1 + v37 + 24) = v40;
    v41 = v40;
    v42 = **(void (***)(char *, char *, uint64_t))(v40 - 8);
    v43 = v36;
    v42(v38, v39, v41);
    *(_OWORD *)((char *)a1 + v52[9]) = *(_OWORD *)((char *)a2 + v52[9]);
    v44 = v52[10];
    v45 = *(void **)((char *)a2 + v44);
    *(_QWORD *)((char *)a1 + v44) = v45;
    v46 = v52[11];
    v47 = *(void **)((char *)a2 + v46);
    *(_QWORD *)((char *)a1 + v46) = v47;
    swift_unknownObjectRetain();
    v48 = v45;
    v49 = v47;
  }
  return a1;
}

void sub_23207A428(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  swift_unknownObjectRelease();

  v2 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  v3 = a1 + v2[6];
  v4 = (int *)_s14descr250103FA9O8WorkPlanVMa();
  v5 = v3 + v4[5];
  v6 = sub_2321FFACC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v3 + v4[6];
  v8 = sub_2321FE584();
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  v10 = v3 + v4[7];
  sub_232071E50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = v3 + v4[8];
  sub_232071EE4();
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v12, 1, v13))
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v12, v14);

  sub_232016AFC(a1 + v2[8]);
  swift_unknownObjectRelease();

}

uint64_t sub_23207A58C(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t);
  id v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  void *v44;
  id v45;
  id v46;
  int *v48;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  v48 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  v5 = v48[6];
  v6 = a1 + v5;
  v7 = a2 + v5;
  *(_BYTE *)(a1 + v5) = *(_BYTE *)(a2 + v5);
  v8 = (int *)_s14descr250103FA9O8WorkPlanVMa();
  v9 = v8[5];
  v10 = v6 + v9;
  v11 = v7 + v9;
  v12 = sub_2321FFACC();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_unknownObjectRetain();
  v14 = v4;
  v13(v10, v11, v12);
  v15 = v8[6];
  v16 = (void *)(v6 + v15);
  v17 = (const void *)(v7 + v15);
  v18 = sub_2321FE584();
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    sub_2320002B4(0, &qword_2541B28C0, (void (*)(uint64_t))MEMORY[0x24BE47CC8]);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  v21 = v8[7];
  v22 = v6 + v21;
  v23 = v7 + v21;
  sub_232071E50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
  v25 = v8[8];
  v26 = (void *)(v6 + v25);
  v27 = (const void *)(v7 + v25);
  sub_232071EE4();
  v29 = v28;
  v30 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48))(v27, 1, v28))
  {
    sub_2320002B4(0, &qword_2541B2518, (void (*)(uint64_t))sub_232071EE4);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v30 + 16))(v26, v27, v29);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v26, 0, 1, v29);
  }
  v32 = v48[7];
  v33 = *(void **)(a2 + v32);
  *(_QWORD *)(a1 + v32) = v33;
  v34 = v48[8];
  v35 = a1 + v34;
  v36 = a2 + v34;
  v37 = *(_OWORD *)(a2 + v34 + 24);
  *(_OWORD *)(a1 + v34 + 24) = v37;
  v38 = v37;
  v39 = **(void (***)(uint64_t, uint64_t, uint64_t))(v37 - 8);
  v40 = v33;
  v39(v35, v36, v38);
  *(_OWORD *)(a1 + v48[9]) = *(_OWORD *)(a2 + v48[9]);
  v41 = v48[10];
  v42 = *(void **)(a2 + v41);
  *(_QWORD *)(a1 + v41) = v42;
  v43 = v48[11];
  v44 = *(void **)(a2 + v43);
  *(_QWORD *)(a1 + v43) = v44;
  swift_unknownObjectRetain();
  v45 = v42;
  v46 = v44;
  return a1;
}

_QWORD *sub_23207A81C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  id v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;
  id v50;
  uint64_t v51;
  void *v52;
  void *v53;
  id v54;
  int *v56;
  _QWORD *v57;

  v4 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v4;
  v5 = (void *)a2[2];
  v6 = (void *)a1[2];
  a1[2] = v5;
  v7 = v5;

  v56 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  v57 = a2;
  v8 = v56[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  *((_BYTE *)a1 + v8) = *((_BYTE *)a2 + v8);
  v11 = (int *)_s14descr250103FA9O8WorkPlanVMa();
  v12 = v11[5];
  v13 = &v9[v12];
  v14 = &v10[v12];
  v15 = sub_2321FFACC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  v16 = v11[6];
  v17 = &v9[v16];
  v18 = &v10[v16];
  v19 = sub_2321FE584();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
LABEL_6:
    sub_2320002B4(0, &qword_2541B28C0, (void (*)(uint64_t))MEMORY[0x24BE47CC8]);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v17, v18, v19);
LABEL_7:
  v25 = v11[7];
  v26 = &v9[v25];
  v27 = &v10[v25];
  sub_232071E50();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 24))(v26, v27, v28);
  v29 = v11[8];
  v30 = &v9[v29];
  v31 = &v10[v29];
  sub_232071EE4();
  v33 = v32;
  v34 = *(_QWORD *)(v32 - 8);
  v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
  v36 = v35(v30, 1, v32);
  v37 = v35(v31, 1, v33);
  if (!v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 24))(v30, v31, v33);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v30, v33);
    goto LABEL_12;
  }
  if (v37)
  {
LABEL_12:
    sub_2320002B4(0, &qword_2541B2518, (void (*)(uint64_t))sub_232071EE4);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v30, v31, v33);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v30, 0, 1, v33);
LABEL_13:
  v39 = v56[7];
  v40 = *(void **)((char *)v57 + v39);
  v41 = *(void **)((char *)a1 + v39);
  *(_QWORD *)((char *)a1 + v39) = v40;
  v42 = v40;

  sub_2320727F4((_QWORD *)((char *)a1 + v56[8]), (_QWORD *)((char *)v57 + v56[8]));
  v43 = v56[9];
  v44 = (_QWORD *)((char *)a1 + v43);
  v45 = (_QWORD *)((char *)v57 + v43);
  v46 = v45[1];
  *v44 = *v45;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v44[1] = v46;
  v47 = v56[10];
  v48 = *(void **)((char *)v57 + v47);
  v49 = *(void **)((char *)a1 + v47);
  *(_QWORD *)((char *)a1 + v47) = v48;
  v50 = v48;

  v51 = v56[11];
  v52 = *(void **)((char *)v57 + v51);
  v53 = *(void **)((char *)a1 + v51);
  *(_QWORD *)((char *)a1 + v51) = v52;
  v54 = v52;

  return a1;
}

uint64_t sub_23207AB48(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  v5 = v4[6];
  v6 = a1 + v5;
  v7 = a2 + v5;
  *(_BYTE *)(a1 + v5) = *(_BYTE *)(a2 + v5);
  v8 = (int *)_s14descr250103FA9O8WorkPlanVMa();
  v9 = v8[5];
  v10 = v6 + v9;
  v11 = v7 + v9;
  v12 = sub_2321FFACC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  v13 = v8[6];
  v14 = (void *)(v6 + v13);
  v15 = (const void *)(v7 + v13);
  v16 = sub_2321FE584();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    sub_2320002B4(0, &qword_2541B28C0, (void (*)(uint64_t))MEMORY[0x24BE47CC8]);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v19 = v8[7];
  v20 = v6 + v19;
  v21 = v7 + v19;
  sub_232071E50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = v8[8];
  v24 = (void *)(v6 + v23);
  v25 = (const void *)(v7 + v23);
  sub_232071EE4();
  v27 = v26;
  v28 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48))(v25, 1, v26))
  {
    sub_2320002B4(0, &qword_2541B2518, (void (*)(uint64_t))sub_232071EE4);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v28 + 32))(v24, v25, v27);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v24, 0, 1, v27);
  }
  *(_QWORD *)(a1 + v4[7]) = *(_QWORD *)(a2 + v4[7]);
  v30 = v4[8];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v33 = *(_OWORD *)(v32 + 16);
  *(_OWORD *)v31 = *(_OWORD *)v32;
  *(_OWORD *)(v31 + 16) = v33;
  *(_QWORD *)(v31 + 32) = *(_QWORD *)(v32 + 32);
  *(_OWORD *)(a1 + v4[9]) = *(_OWORD *)(a2 + v4[9]);
  *(_QWORD *)(a1 + v4[10]) = *(_QWORD *)(a2 + v4[10]);
  *(_QWORD *)(a1 + v4[11]) = *(_QWORD *)(a2 + v4[11]);
  return a1;
}

_QWORD *sub_23207AD8C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  __int128 v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  void *v51;
  int *v53;
  _QWORD *v54;

  v4 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRelease();
  v5 = a2[2];
  v6 = (void *)a1[2];
  a1[1] = v4;
  a1[2] = v5;

  v53 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  v54 = a2;
  v7 = v53[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  *((_BYTE *)a1 + v7) = *((_BYTE *)a2 + v7);
  v10 = (int *)_s14descr250103FA9O8WorkPlanVMa();
  v11 = v10[5];
  v12 = &v8[v11];
  v13 = &v9[v11];
  v14 = sub_2321FFACC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = v10[6];
  v16 = &v8[v15];
  v17 = &v9[v15];
  v18 = sub_2321FE584();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
LABEL_6:
    sub_2320002B4(0, &qword_2541B28C0, (void (*)(uint64_t))MEMORY[0x24BE47CC8]);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 40))(v16, v17, v18);
LABEL_7:
  v24 = v10[7];
  v25 = &v8[v24];
  v26 = &v9[v24];
  sub_232071E50();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 40))(v25, v26, v27);
  v28 = v10[8];
  v29 = &v8[v28];
  v30 = &v9[v28];
  sub_232071EE4();
  v32 = v31;
  v33 = *(_QWORD *)(v31 - 8);
  v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v29, 1, v31);
  v36 = v34(v30, 1, v32);
  if (!v35)
  {
    if (!v36)
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 40))(v29, v30, v32);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v33 + 8))(v29, v32);
    goto LABEL_12;
  }
  if (v36)
  {
LABEL_12:
    sub_2320002B4(0, &qword_2541B2518, (void (*)(uint64_t))sub_232071EE4);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v29, v30, v32);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v29, 0, 1, v32);
LABEL_13:
  v38 = v53[7];
  v39 = *(void **)((char *)a1 + v38);
  *(_QWORD *)((char *)a1 + v38) = *(_QWORD *)((char *)v54 + v38);

  v40 = v53[8];
  v41 = (char *)a1 + v40;
  v42 = (char *)v54 + v40;
  sub_232016AFC((uint64_t)a1 + v40);
  v43 = *((_OWORD *)v42 + 1);
  *(_OWORD *)v41 = *(_OWORD *)v42;
  *((_OWORD *)v41 + 1) = v43;
  *((_QWORD *)v41 + 4) = *((_QWORD *)v42 + 4);
  v44 = v53[9];
  v45 = (_QWORD *)((char *)a1 + v44);
  v46 = (_QWORD *)((char *)v54 + v44);
  v47 = v46[1];
  *v45 = *v46;
  swift_unknownObjectRelease();
  v45[1] = v47;
  v48 = v53[10];
  v49 = *(void **)((char *)a1 + v48);
  *(_QWORD *)((char *)a1 + v48) = *(_QWORD *)((char *)v54 + v48);

  v50 = v53[11];
  v51 = *(void **)((char *)a1 + v50);
  *(_QWORD *)((char *)a1 + v50) = *(_QWORD *)((char *)v54 + v50);

  return a1;
}

uint64_t sub_23207B0A8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23207B0B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_23207B0F0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23207B0FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for CommitModelsStep()
{
  uint64_t result;

  result = qword_2541B6C50;
  if (!qword_2541B6C50)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23207B178()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SummariesFullProfileExecutor.Request(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23207B1E0(void *a1, char a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD *), uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v22 = a4;
  sub_23205A18C();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x24BDAC7A8](v13);
  if ((a2 & 1) != 0)
  {
    *v12 = a1;
    swift_storeEnumTagMultiPayload();
    v16 = a1;
    a5(v12);
    return sub_232002CEC((uint64_t)v12, (uint64_t (*)(_QWORD))sub_23205A18C);
  }
  else
  {
    v21 = a6;
    swift_retain();
    sub_23207B3D8(v22);
    sub_23200054C(v22, (uint64_t)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SummariesFullProfileExecutor.StepResult);
    v17 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = a5;
    *(_QWORD *)(v18 + 24) = v21;
    sub_232025468((uint64_t)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17, type metadata accessor for SummariesFullProfileExecutor.StepResult);
    swift_retain();
    sub_2321FE968();
    swift_bridgeObjectRelease();
    sub_23207CB40(a1, 0);
    return swift_release();
  }
}

uint64_t sub_23207B3D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t inited;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  int v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  void *v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  void *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  void *v41;
  void *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  void *v47;
  void *v48;
  void *v49;
  id v50;
  uint64_t v51;
  void *v52;
  unint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  id v59;
  void *v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  void *v67;
  void *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  void *v78;
  uint64_t v79;
  char *v80;
  unint64_t v81;
  void (*v82)(char *, char *, uint64_t);
  uint64_t v83;
  id v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  id v89;
  void *v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  void *v97;
  void *v98;
  char *v99;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  __int128 v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  void *v124;
  id v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;

  v3 = v2;
  v131 = *MEMORY[0x24BDAC8D0];
  sub_2320002B4(0, &qword_2541B5BB8, (void (*)(uint64_t))MEMORY[0x24BE4AE58]);
  MEMORY[0x24BDAC7A8](v5);
  v108 = (char *)&v105 - v6;
  v7 = sub_2321FFE08();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v107 = (char *)&v105 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = sub_2321FE6D4();
  v122 = *(_QWORD *)(v123 - 8);
  v10 = MEMORY[0x24BDAC7A8](v123);
  v106 = (char *)&v105 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v117 = (char *)&v105 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v121 = (char *)&v105 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v118 = (char *)&v105 - v16;
  v119 = type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind(0);
  MEMORY[0x24BDAC7A8](v119);
  v120 = (char *)&v105 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = MEMORY[0x24BEE4AF8];
  sub_232035344(0, &qword_2541B5820);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232210D40;
  *(_BYTE *)(inited + 32) = 0;
  v128 = v1;
  v19 = objc_msgSend(*(id *)(v1 + 16), sel_profileIdentifier);
  v20 = objc_msgSend(v19, sel_type);

  v110 = v7;
  v109 = v8;
  if (v20 == (id)1)
  {
    inited = (uint64_t)sub_232096CA8((char *)1, 2, 1, (char *)inited);
    v126 = 2;
    *(_QWORD *)(inited + 16) = 2;
    *(_BYTE *)(inited + 33) = 1;
LABEL_4:
    v21 = 0;
    v22 = *(void **)a1;
    v111 = MEMORY[0x24BEE4AD0] + 8;
    v115 = xmmword_232210D20;
    v114 = a1;
    v116 = inited;
    v124 = v22;
    while (1)
    {
      v23 = *(unsigned __int8 *)(inited + v21 + 32);
      if (v22 != (void *)1)
      {
        v24 = *(void **)(a1 + 8);
        v25 = *(_BYTE *)(inited + v21 + 32) ? *(void **)(a1 + 8) : v22;
        sub_2320757AC(v22, *(void **)(a1 + 8));
        v26 = v25;

        if (v25)
        {
          v127 = v3;
          sub_232035344(0, (unint64_t *)&qword_2541B78C8);
          v27 = swift_initStackObject();
          *(_OWORD *)(v27 + 16) = v115;
          v28 = *(void **)(v128 + *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28));
          *(_QWORD *)(v27 + 32) = v28;
          v129 = v27;
          sub_232201050();
          v29 = v129;
          v30 = (uint64_t)v120;
          swift_storeEnumTagMultiPayload();
          v31 = v28;
          v32 = sub_2320F7D00(v29, v30, v23);
          v34 = v33;
          swift_bridgeObjectRelease();
          sub_232002CEC(v30, type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind);
          v35 = v26;
          sub_2321FE6B0();
          v36 = objc_msgSend(v35, sel_data);
          if (v36)
          {
            v37 = v36;
            v38 = sub_2321FDAD4();
            v40 = v39;

          }
          else
          {
            v38 = 0;
            v40 = 0xF000000000000000;
          }
          sub_232003E9C(0, (unint64_t *)&qword_2541B0C70);
          sub_2321FE6B0();
          sub_232015CE4(v38, v40, 1, 0);
          v42 = v41;
          sub_23201602C(v38, v40);

          (*(void (**)(char *, uint64_t))(v122 + 8))(v118, v123);
          v43 = v127;
          v44 = sub_23207C03C(v42, v32, v34, v23);
          v3 = v43;
          if (v43)
          {
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            return swift_bridgeObjectRelease();
          }
          v45 = v44;
          swift_bridgeObjectRelease();
          v46 = v45;
          MEMORY[0x2348FE190]();
          if (*(_QWORD *)((v130 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v130 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_23220105C();
          sub_232201074();
          sub_232201050();

          a1 = v114;
          inited = v116;
          v22 = v124;
        }
      }
      v47 = *(void **)(a1 + 16);
      if (v47 != (void *)1)
      {
        v48 = *(void **)(a1 + 24);
        if (v23)
          v49 = *(void **)(a1 + 24);
        else
          v49 = *(void **)(a1 + 16);
        sub_2320757AC(*(id *)(a1 + 16), *(void **)(a1 + 24));
        v50 = v49;

        if (v49)
        {
          v127 = v3;
          sub_232035344(0, (unint64_t *)&qword_2541B78C8);
          v51 = swift_initStackObject();
          *(_OWORD *)(v51 + 16) = v115;
          v52 = *(void **)(v128 + *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28));
          *(_QWORD *)(v51 + 32) = v52;
          v129 = v51;
          sub_232201050();
          v53 = v129;
          v54 = (uint64_t)v120;
          swift_storeEnumTagMultiPayload();
          v55 = v52;
          v112 = sub_2320F7D00(v53, v54, v23);
          v57 = v56;
          swift_bridgeObjectRelease();
          sub_232002CEC(v54, type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind);
          v58 = v50;
          sub_2321FE6B0();
          v125 = v58;
          v59 = objc_msgSend(v58, sel_data);
          v113 = v57;
          if (v59)
          {
            v60 = v59;
            v61 = sub_2321FDAD4();
            v63 = v62;

          }
          else
          {
            v61 = 0;
            v63 = 0xF000000000000000;
          }
          sub_232003E9C(0, (unint64_t *)&qword_2541B0C70);
          v64 = v122;
          v65 = v117;
          v66 = v123;
          (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v121, v117, v123);
          sub_232015CE4(v61, v63, 0, 0);
          v68 = v67;
          sub_23201602C(v61, v63);

          (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v66);
          v69 = v127;
          v70 = sub_23207C03C(v68, v112, v113, v23);
          v3 = v69;
          if (v69)
          {
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            return swift_bridgeObjectRelease();
          }
          v71 = v70;
          swift_bridgeObjectRelease();
          v72 = v71;
          MEMORY[0x2348FE190]();
          a1 = v114;
          inited = v116;
          if (*(_QWORD *)((v130 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v130 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_23220105C();
          sub_232201074();
          sub_232201050();

        }
        v22 = v124;
      }
      if (v126 == ++v21)
      {
        v7 = v110;
        v8 = v109;
        goto LABEL_32;
      }
    }
  }
  v126 = *(_QWORD *)(inited + 16);
  if (v126)
    goto LABEL_4;
LABEL_32:
  swift_bridgeObjectRelease();
  v73 = *(void **)(v128 + *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28));
  v74 = sub_2321FFDC0();
  if (*(_QWORD *)(v74 + 16))
  {
    v75 = (uint64_t)v108;
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v108, v74 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), v7);
    v76 = 0;
  }
  else
  {
    v76 = 1;
    v75 = (uint64_t)v108;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v75, v76, 1, v7);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v75, 1, v7) == 1)
  {
    sub_23207CDC8(v75);
    return v130;
  }
  v77 = v107;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v107, v75, v7);
  v78 = *(void **)(a1 + 32);
  if (!v78)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v77, v7);
    return v130;
  }
  sub_232035344(0, (unint64_t *)&qword_2541B78C8);
  v79 = swift_initStackObject();
  *(_OWORD *)(v79 + 16) = xmmword_232210D20;
  *(_QWORD *)(v79 + 32) = v73;
  v129 = v79;
  sub_232201050();
  v80 = v77;
  v81 = v129;
  v82 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v83 = (uint64_t)v120;
  v82(v120, v80, v7);
  swift_storeEnumTagMultiPayload();
  v84 = v73;
  v85 = v78;
  v126 = sub_2320F7D00(v81, v83, 1);
  v87 = v86;
  swift_bridgeObjectRelease();
  sub_232002CEC(v83, type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind);
  v88 = v85;
  sub_2321FE6B0();
  v89 = objc_msgSend(v88, sel_data);
  v127 = v87;
  if (v89)
  {
    v90 = v89;
    v91 = sub_2321FDAD4();
    v93 = v92;

  }
  else
  {
    v91 = 0;
    v93 = 0xF000000000000000;
  }
  sub_232003E9C(0, (unint64_t *)&qword_2541B0C70);
  v94 = v122;
  v95 = v106;
  v96 = v123;
  (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v121, v106, v123);
  sub_232015CE4(v91, v93, 2, 0);
  v98 = v97;
  sub_23201602C(v91, v93);

  (*(void (**)(char *, uint64_t))(v94 + 8))(v95, v96);
  v99 = sub_23207C03C(v98, v126, v127, 1);
  if (!v3)
  {
    v101 = v99;
    swift_bridgeObjectRelease();
    v102 = v101;
    MEMORY[0x2348FE190]();
    v103 = v110;
    v104 = v109;
    if (*(_QWORD *)((v130 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v130 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_23220105C();
    sub_232201074();
    sub_232201050();

    (*(void (**)(char *, uint64_t))(v104 + 8))(v107, v103);
    return v130;
  }

  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v109 + 8))(v107, v110);
  return swift_bridgeObjectRelease();
}

char *sub_23207C03C(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t ObjCClassFromMetadata;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  char v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  char v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t inited;
  void *v40;
  unint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  char *result;
  char *v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  unint64_t v64;

  v57 = a2;
  v58 = a3;
  v6 = sub_2321FE6D4();
  v59 = *(_QWORD *)(v6 - 8);
  v60 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v63 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_2321FDD08();
  v8 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2321FDE28();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SummariesHealthPluginDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v16 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v17 = objc_msgSend(v16, sel_bundleIdentifier);

  if (!v17)
    goto LABEL_9;
  v56 = sub_232200EC4();
  v19 = v18;

  v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A400]), sel_init);
  if (!v20)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    sub_23207CE14();
    swift_allocError();
    swift_willThrow();
    return v14;
  }
  v21 = v20;
  v55 = v19;
  v22 = a4 & 1;
  v23 = objc_msgSend(a1, sel_data);
  if (v23)
  {
    v24 = sub_2321FDAD4();
    v54 = v11;
    v25 = v8;
    v26 = v21;
    v27 = v22;
    v29 = v28;

    v23 = (id)sub_2321FDAC8();
    v30 = v29;
    v22 = v27;
    v21 = v26;
    v8 = v25;
    v11 = v54;
    sub_232003ED4(v24, v30);
  }
  objc_msgSend(v21, sel_setUserData_, v23);

  sub_2321FDE1C();
  sub_2321FDDEC();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v31 = (void *)sub_232200E94();
  swift_bridgeObjectRelease();
  objc_msgSend(v21, sel_setSourceTimeZoneIdentifier_, v31);

  sub_2321FDCFC();
  sub_2321FDCD8();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v61);
  v32 = (void *)sub_232200E94();
  swift_bridgeObjectRelease();
  objc_msgSend(v21, sel_setSourceLocaleIdentifier_, v32);

  sub_2321FE5D8();
  sub_232003E9C(0, (unint64_t *)&qword_2541B7068);
  sub_2321FE6BC();
  v61 = sub_23220138C();
  v54 = v33;
  sub_2321FE6C8();
  v34 = sub_23220138C();
  v36 = v35;
  v37 = v62;
  v38 = sub_23207C508(v22);
  sub_232035344(0, (unint64_t *)&qword_2541B78C8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232210D20;
  v40 = *(void **)(v37 + *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28));
  *(_QWORD *)(inited + 32) = v40;
  v64 = inited;
  sub_232201050();
  v41 = v64;
  if (v64 >> 62)
  {
    v46 = v40;
    swift_bridgeObjectRetain();
    v47 = sub_232201998();
    swift_bridgeObjectRelease();
    if (v47)
      goto LABEL_7;
  }
  else
  {
    v42 = *(_QWORD *)((v64 & 0xFFFFFFFFFFFFF8) + 0x10);
    v43 = v40;
    if (v42)
    {
LABEL_7:
      sub_2321A9D34(v41);
      v45 = v44;
      goto LABEL_12;
    }
  }
  v45 = MEMORY[0x24BEE4B08];
LABEL_12:
  swift_bridgeObjectRelease();
  result = (char *)objc_msgSend(v21, sel_data);
  if (result)
  {
    v49 = result;
    v50 = sub_2321FDAD4();
    v52 = v51;

    objc_allocWithZone(MEMORY[0x24BDD3F30]);
    v53 = v58;
    swift_bridgeObjectRetain();
    v14 = (char *)sub_23207CC2C(v56, v55, v57, v53, v61, v54, v34, v36, v38, v45, v50, v52);

    (*(void (**)(char *, uint64_t))(v59 + 8))(v63, v60);
    return v14;
  }
  __break(1u);
  return result;
}

uint64_t sub_23207C508(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  char v6;
  uint64_t v7;
  uint64_t inited;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[48];

  v2 = sub_2321FF8E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((a1 & 1) != 0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = sub_232201ADC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0)
      return MEMORY[0x24BEE4B08];
  }
  sub_232035344(0, (unint64_t *)&qword_2541B78C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232210D40;
  type metadata accessor for SummariesFullProfileExecutor.Request(0);
  sub_23220117C();
  v9 = (void *)sub_2321FF8D4();
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  v10 = objc_msgSend(v9, sel_authorizationIdentifier);

  v11 = sub_232200EC4();
  v13 = v12;

  *(_QWORD *)(inited + 32) = v11;
  *(_QWORD *)(inited + 40) = v13;
  if (*(_QWORD *)(inited + 16))
    v7 = sub_2321AA940(inited);
  else
    v7 = MEMORY[0x24BEE4B08];
  swift_setDeallocating();
  swift_arrayDestroy();
  return v7;
}

uint64_t sub_23207C6B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD v21[3];
  uint64_t v22;

  v6 = v4;
  v22 = a2;
  v9 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v13 = *(_QWORD *)(a4 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[2] = *(_QWORD *)(v6 + 8);
  v21[1] = swift_getObjectType();
  sub_23200054C(v6, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for CommitModelsStep);
  sub_23200054C(a1, (uint64_t)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SummariesFullProfileExecutor.StepResult);
  v16 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v17 = (v14 + *(unsigned __int8 *)(v10 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v18 = swift_allocObject();
  sub_232025468((uint64_t)v15, v18 + v16, (uint64_t (*)(_QWORD))type metadata accessor for CommitModelsStep);
  sub_232025468((uint64_t)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17, type metadata accessor for SummariesFullProfileExecutor.StepResult);
  v19 = (_QWORD *)(v18 + ((v11 + v17 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v19 = v22;
  v19[1] = a3;
  swift_retain();
  sub_2321FE140();
  return swift_release();
}

uint64_t sub_23207C840()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int *v8;
  unint64_t v9;
  int *v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;

  v1 = *(_QWORD *)(type metadata accessor for CommitModelsStep() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = v2 + v3 + v5;
  v30 = v4;
  v7 = v0 + v2;
  swift_unknownObjectRelease();

  v8 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  v9 = v0 + v2 + v8[6];
  v10 = (int *)_s14descr250103FA9O8WorkPlanVMa();
  v11 = v9 + v10[5];
  v12 = sub_2321FFACC();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = v9 + v10[6];
  v14 = sub_2321FE584();
  v15 = *(_QWORD *)(v14 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    (*(void (**)(unint64_t, uint64_t))(v15 + 8))(v13, v14);
  v16 = v6 & ~v5;
  v17 = v9 + v10[7];
  sub_232071E50();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = v9 + v10[8];
  sub_232071EE4();
  v21 = v20;
  v22 = *(_QWORD *)(v20 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v22 + 48))(v19, 1, v20))
    (*(void (**)(unint64_t, uint64_t))(v22 + 8))(v19, v21);

  sub_232016AFC(v7 + v8[8]);
  swift_unknownObjectRelease();

  v23 = v0 + v16;
  v24 = *(void **)(v0 + v16);
  if (v24 != (void *)1)
  {

  }
  v25 = *(void **)(v23 + 16);
  if (v25 != (void *)1)
  {

  }
  v26 = v23 + *(int *)(v30 + 28);
  v27 = sub_2321FDDD4();
  v28 = *(_QWORD *)(v27 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23207CAB0(void *a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v4 = a2 & 1;
  v5 = *(_QWORD *)(type metadata accessor for CommitModelsStep() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(type metadata accessor for SummariesFullProfileExecutor.StepResult(0) - 8);
  v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = v2 + ((*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_23207B1E0(a1, v4, v2 + v6, v2 + v9, *(void (**)(_QWORD *))v10, *(_QWORD *)(v10 + 8));
}

void sub_23207CB40(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_release();
}

uint64_t sub_23207CB4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  v3 = v0 + ((v2 + 32) & ~v2);
  if (*(_QWORD *)v3 != 1)
  {

  }
  v4 = *(void **)(v3 + 16);
  if (v4 != (void *)1)
  {

  }
  v5 = v3 + *(int *)(v1 + 28);
  v6 = sub_2321FDDD4();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  return swift_deallocObject();
}

id sub_23207CC2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  id v21;

  v12 = (void *)sub_232200E94();
  swift_bridgeObjectRelease();
  v13 = (void *)sub_232200E94();
  swift_bridgeObjectRelease();
  v14 = (void *)sub_232200E94();
  swift_bridgeObjectRelease();
  v15 = (void *)sub_232200E94();
  swift_bridgeObjectRelease();
  v16 = (void *)sub_2322010B0();
  swift_bridgeObjectRelease();
  sub_232003E9C(0, (unint64_t *)&qword_2541B74A0);
  sub_23207CE58();
  v17 = (void *)sub_2322010B0();
  swift_bridgeObjectRelease();
  v18 = (void *)sub_2321FDAC8();
  v19 = objc_msgSend(v21, sel_initWithPackage_name_version_compatibilityVersion_authorizationIdentifiers_objectTypes_summaryData_, v12, v13, v14, v15, v16, v17, v18);
  sub_232003ED4(a11, a12);

  return v19;
}

uint64_t sub_23207CDC8(uint64_t a1)
{
  uint64_t v2;

  sub_2320002B4(0, &qword_2541B5BB8, (void (*)(uint64_t))MEMORY[0x24BE4AE58]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23207CE14()
{
  unint64_t result;

  result = qword_255F9D4D8;
  if (!qword_255F9D4D8)
  {
    result = MEMORY[0x2348FF39C](&unk_2322131C0, &type metadata for CommitModelsStep.CommitModelsStepError);
    atomic_store(result, (unint64_t *)&qword_255F9D4D8);
  }
  return result;
}

unint64_t sub_23207CE58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B0C08;
  if (!qword_2541B0C08)
  {
    v1 = sub_232003E9C(255, (unint64_t *)&qword_2541B74A0);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_2541B0C08);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CommitModelsStep.CommitModelsStepError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23207CEF0 + 4 * byte_232213100[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23207CF10 + 4 * byte_232213105[v4]))();
}

_BYTE *sub_23207CEF0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23207CF10(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23207CF18(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23207CF20(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23207CF28(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23207CF30(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CommitModelsStep.CommitModelsStepError()
{
  return &type metadata for CommitModelsStep.CommitModelsStepError;
}

unint64_t sub_23207CF50()
{
  unint64_t result;

  result = qword_255F9D4E0;
  if (!qword_255F9D4E0)
  {
    result = MEMORY[0x2348FF39C](&unk_232213198, &type metadata for CommitModelsStep.CommitModelsStepError);
    atomic_store(result, (unint64_t *)&qword_255F9D4E0);
  }
  return result;
}

uint64_t sub_23207CF94()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23207CFA0(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_23207D01C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_23207D028(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for VisionPrescriptionSnidgetFeedItemModelProvider()
{
  uint64_t result;

  result = qword_2541B2748;
  if (!qword_2541B2748)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23207D0D8(uint64_t a1)
{
  uint64_t result;

  result = sub_232000590(&qword_255F9CF00, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionSnidgetFeedItemModelProvider, (uint64_t)&unk_23221325C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_23207D114(void *a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  void *v33;
  char *v34;
  void *v35;
  id v36;
  void *v37;
  uint64_t v38;
  void *v39;
  char *v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  id v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  void *v54;
  void *v55;
  uint64_t inited;
  id v57;
  id v58;
  uint64_t v59;
  id v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  char *v74;
  void (*v75)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  id v77;
  id v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  id v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  _BYTE *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  _BYTE *v107;
  char *v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  char *v114;
  id v115;
  id v116;
  id v117;
  uint64_t v118;
  uint64_t v119[2];
  uint64_t v120;

  v117 = a1;
  v111 = a2;
  v112 = a3;
  v4 = type metadata accessor for VisionPrescriptionSnidgetFeedItemModelProvider();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v113 = (uint64_t)&v101 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (uint64_t *)((char *)&v101 - v7);
  v9 = (_QWORD *)sub_23220039C();
  v115 = (id)*(v9 - 1);
  v116 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v114 = (char *)&v101 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x24BDAC7A8](v11);
  v107 = (char *)&v101 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  MEMORY[0x24BDAC7A8](v13);
  v110 = (char *)&v101 - v14;
  v15 = sub_2321FDC6C();
  MEMORY[0x24BDAC7A8](v15);
  v104 = (char *)&v101 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, qword_2541B78E0, (void (*)(uint64_t))MEMORY[0x24BE47DF8]);
  MEMORY[0x24BDAC7A8](v17);
  v109 = (char *)&v101 - v18;
  sub_2320002B4(0, &qword_2541B2930, (void (*)(uint64_t))MEMORY[0x24BE42FE0]);
  MEMORY[0x24BDAC7A8](v19);
  v108 = (char *)&v101 - v20;
  sub_2320002B4(0, &qword_2541B2368, (void (*)(uint64_t))MEMORY[0x24BE445A8]);
  MEMORY[0x24BDAC7A8](v21);
  v103 = (char *)&v101 - v22;
  v101 = sub_2321FD9F0();
  v23 = *(_QWORD *)(v101 - 8);
  MEMORY[0x24BDAC7A8](v101);
  v106 = (char *)&v101 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, (unint64_t *)&qword_2541B2838, v25);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v105 = (char *)&v101 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v102 = (char *)&v101 - v29;
  v30 = (void *)objc_opt_self();
  v31 = (void *)*v3;
  v32 = objc_msgSend(v30, sel_sharedInstanceForHealthStore_, *v3);
  if (!v32)
  {
    __break(1u);
    return;
  }
  v33 = v32;
  v34 = (char *)v3 + *(int *)(v4 + 20);
  v35 = (void *)*((_QWORD *)v34 + 2);
  v36 = objc_msgSend(v32, sel_displayTypeForObjectType_, v35);

  if (v36)
  {
    v37 = v36;
    v38 = v118;
    sub_232084674(v117);
    if (v38)
    {

      return;
    }
    v54 = v39;
    if (v39)
    {
      if (objc_msgSend(v39, sel_hasPrescriptionType)
        && objc_msgSend(v54, sel_hasTimestampData))
      {
        v55 = *(void **)&v34[*(int *)(type metadata accessor for SnidgetFeedItemGeneratorRequest(0) + 32)];
        v117 = v55;
        type metadata accessor for SnidgetStringBuilder();
        inited = swift_initStackObject();
        *(_QWORD *)(inited + 16) = v31;
        v116 = (id)objc_opt_self();
        v115 = v55;
        v57 = v31;
        v58 = objc_msgSend(v116, sel_sharedInstanceForHealthStore_, v57);
        v59 = inited;
        *(_QWORD *)(inited + 32) = v58;
        if (v117)
        {
          v60 = v115;
        }
        else
        {
          v117 = v58;
          v60 = objc_msgSend(v117, sel_createHKUnitPreferenceController);

        }
        v73 = v59;
        *(_QWORD *)(v59 + 24) = v60;
        v74 = v102;
        v118 = v73;
        sub_23207DB9C(v54);
        v75 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
        v76 = v101;
        v75(v74, 0, 1, v101);
        sub_23207DCF4(v54);
        v75(v105, 1, 1, v76);
        v119[0] = 0x5F74656764696E53;
        v119[1] = 0xE800000000000000;
        v77 = v35;
        v78 = objc_msgSend(v77, sel_description);
        sub_232200EC4();

        sub_232200F48();
        swift_bridgeObjectRelease();
        v79 = v103;
        sub_2321FF58C();
        swift_bridgeObjectRelease();
        v80 = sub_2321FF5A4();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56))(v79, 0, 1, v80);
        sub_2321FF6C4();
        swift_allocObject();
        v81 = sub_2321FF6B8();
        sub_2321FF208();
        sub_232000448();
        v83 = *(int *)(v82 + 48);
        v84 = v37;
        objc_msgSend(v54, sel_timestampData);
        v85 = (id)HKDecodeDateForValue();
        v86 = v108;
        sub_2321FDC30();

        v86[v83] = 0;
        v87 = *MEMORY[0x24BE42FD8];
        v88 = sub_2321FEF5C();
        v89 = *(_QWORD *)(v88 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v89 + 104))(v86, v87, v88);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v86, 0, 1, v88);
        v90 = sub_2321FF1FC();
        v91 = v81;
        swift_retain();
        objc_msgSend(v54, sel_timestampData);
        v92 = (id)HKDecodeDateForValue();
        sub_2321FDC30();

        v93 = (uint64_t)v109;
        sub_2321FE62C();
        v94 = sub_2321FE65C();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 56))(v93, 0, 1, v94);
        v95 = sub_2321FD8B8();
        v96 = (uint64_t)v110;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 56))(v110, 1, 1, v95);
        sub_232000344(0);
        v99 = v111;
        v98 = v112;
        v100 = (char *)v112 + *(int *)(v97 + 52);
        swift_bridgeObjectRetain();
        sub_2320D71E8(1, v93, v99, v96, v100);

        swift_release();
        swift_release();

        *v98 = v90;
        v98[1] = v91;
        v98[2] = 0;
        return;
      }

    }
    v62 = sub_2321FE65C();
    v63 = (uint64_t)v109;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v109, 1, 1, v62);
    v64 = sub_2321FD8B8();
    v65 = (uint64_t)v110;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v110, 1, 1, v64);
    v66 = v111;
    swift_bridgeObjectRetain();
    v67 = v107;
    sub_2320D71E8(0, v63, v66, v65, v107);
    sub_2321FF208();
    v68 = sub_2321FEF5C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v108, 1, 1, v68);
    v69 = v37;
    v70 = sub_2321FF1FC();
    sub_232000344(0);
    v72 = v112;
    sub_23200054C((uint64_t)v67, (uint64_t)v112 + *(int *)(v71 + 52), type metadata accessor for SnidgetFeedItemMetadata);

    v72[1] = 0;
    v72[2] = 0;
    *v72 = v70;
    sub_232002CEC((uint64_t)v67, type metadata accessor for SnidgetFeedItemMetadata);
    return;
  }
  v40 = v114;
  sub_232200318();
  sub_23200054C((uint64_t)v3, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for VisionPrescriptionSnidgetFeedItemModelProvider);
  v41 = v113;
  sub_23200054C((uint64_t)v3, v113, (uint64_t (*)(_QWORD))type metadata accessor for VisionPrescriptionSnidgetFeedItemModelProvider);
  v42 = sub_232200390();
  v43 = sub_2322012E4();
  v44 = v43;
  if (os_log_type_enabled(v42, v43))
  {
    v45 = swift_slowAlloc();
    LODWORD(v117) = v44;
    v46 = v45;
    v118 = swift_slowAlloc();
    v119[0] = v118;
    *(_DWORD *)v46 = 136315394;
    v47 = sub_23208524C(*v8, *((unsigned __int8 *)v8 + *(int *)(v4 + 20) + 8));
    v120 = sub_232013174(v47, v48, v119);
    sub_232201710();
    swift_bridgeObjectRelease();
    sub_232002CEC((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for VisionPrescriptionSnidgetFeedItemModelProvider);
    *(_WORD *)(v46 + 12) = 2080;
    v49 = objc_msgSend(*(id *)(v41 + *(int *)(v4 + 20) + 16), sel_sensitiveLoggingIdentifier);
    v50 = sub_232200EC4();
    v52 = v51;

    v120 = sub_232013174(v50, v52, v119);
    sub_232201710();
    swift_bridgeObjectRelease();
    sub_232002CEC(v41, (uint64_t (*)(_QWORD))type metadata accessor for VisionPrescriptionSnidgetFeedItemModelProvider);
    _os_log_impl(&dword_231FFB000, v42, (os_log_type_t)v117, "[%s]: unable to find display type: %s", (uint8_t *)v46, 0x16u);
    v53 = v118;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v53, -1, -1);
    MEMORY[0x2348FF468](v46, -1, -1);
  }
  else
  {
    sub_232002CEC((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for VisionPrescriptionSnidgetFeedItemModelProvider);
    sub_232002CEC(v41, (uint64_t (*)(_QWORD))type metadata accessor for VisionPrescriptionSnidgetFeedItemModelProvider);
  }

  (*((void (**)(char *, id))v115 + 1))(v40, v116);
  sub_232005578();
  swift_allocError();
  *v61 = 0;
  swift_willThrow();
}

void sub_23207DB9C(void *a1)
{
  id v2;
  void *v3;
  unsigned int v4;
  id v5;
  id v6;
  void *v7;
  unsigned int v8;
  id v9;
  void *v10;

  if (!objc_msgSend(a1, sel_hasPrescriptionType))
    goto LABEL_4;
  v2 = objc_msgSend(a1, sel_prescriptionType);
  if (!v2)
  {
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v3 = v2;
  v4 = objc_msgSend(v2, sel_contacts);

  if (v4)
  {
LABEL_4:
    v5 = (id)HKVisionPrescriptionTypeLongLocalizedString();
LABEL_5:
    sub_232200EC4();

LABEL_6:
    SnidgetStringBuilder.makeSupplementaryAttributedString(localizedString:)();
    swift_bridgeObjectRelease();
    return;
  }
  v6 = objc_msgSend(a1, sel_prescriptionType);
  if (!v6)
    goto LABEL_14;
  v7 = v6;
  v8 = objc_msgSend(v6, sel_hasGlassesDescription);

  if (!v8)
    goto LABEL_6;
  v9 = objc_msgSend(a1, sel_prescriptionType);
  if (!v9)
    goto LABEL_15;
  v10 = v9;
  v5 = objc_msgSend(v9, sel_glassesDescription);

  if (v5)
    goto LABEL_5;
LABEL_16:
  __break(1u);
}

id sub_23207DCF4(void *a1)
{
  unsigned int v2;
  id result;
  void *v4;
  void *v5;
  id v6;
  double v7;
  double v8;
  int v9;
  double v10;
  void *v11;
  void *v12;
  id v13;
  double v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  void *v19;

  v2 = objc_msgSend(a1, sel_hasLeftEyeSphere);
  if (v2)
  {
    result = objc_msgSend(a1, sel_leftEyeSphere);
    if (!result)
    {
      __break(1u);
      goto LABEL_20;
    }
    v4 = result;
    v5 = (void *)sub_232201470();

    v6 = objc_msgSend((id)objc_opt_self(), sel_diopterUnit);
    objc_msgSend(v5, sel_doubleValueForUnit_, v6);
    v8 = v7;

    if ((objc_msgSend(a1, sel_hasRightEyeSphere) & 1) == 0)
    {
      v9 = 0;
      v10 = 0.0;
      goto LABEL_9;
    }
  }
  else
  {
    v8 = 0.0;
    if (!objc_msgSend(a1, sel_hasRightEyeSphere))
    {
      if (objc_msgSend(a1, sel_hasImage))
      {
        v17 = (id)HKVisionPrescriptionImageOnlyLocalizedString();
      }
      else
      {
        sub_23207DFAC();
        v18 = (void *)sub_23220168C();
        v19 = (void *)sub_23220168C();
        v17 = (id)HKVisionLeftRightLongLocalizedString();

      }
      sub_232200EC4();
      goto LABEL_18;
    }
  }
  result = objc_msgSend(a1, sel_rightEyeSphere);
  if (result)
  {
    v11 = result;
    v12 = (void *)sub_232201470();

    v13 = objc_msgSend((id)objc_opt_self(), sel_diopterUnit);
    objc_msgSend(v12, sel_doubleValueForUnit_, v13);
    v10 = v14;

    if (!v2)
    {
      v15 = 0;
      goto LABEL_14;
    }
    v9 = 1;
LABEL_9:
    v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, v8);
    if (!v9)
    {
      v16 = 0;
LABEL_15:
      v17 = (id)HKVisionLeftRightLongLocalizedString();
      sub_232200EC4();

LABEL_18:
      SnidgetStringBuilder.makePrimaryAttributedString(localizedString:)();
      return (id)swift_bridgeObjectRelease();
    }
LABEL_14:
    v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, v10);
    goto LABEL_15;
  }
LABEL_20:
  __break(1u);
  return result;
}

void sub_23207DF8C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_23207D114(*(void **)a1, *(_QWORD *)(a1 + 16), a2);
}

unint64_t sub_23207DFAC()
{
  unint64_t result;

  result = qword_2541B0D78;
  if (!qword_2541B0D78)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2541B0D78);
  }
  return result;
}

id sub_23207DFE8(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id result;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  id v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD v46[2];
  int v47;
  uint64_t v48;
  _OWORD v49[2];
  uint64_t v50;
  uint64_t v51;

  v6 = sub_23220039C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23201C800();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v46 - v14;
  objc_opt_self();
  v16 = swift_dynamicCastObjCClass();
  if (!v16)
  {
    sub_232200354();
    v32 = a1;
    v33 = sub_232200390();
    v34 = sub_2322012E4();
    v35 = v34;
    if (os_log_type_enabled(v33, v34))
    {
      v36 = swift_slowAlloc();
      v47 = v35;
      v37 = v36;
      v48 = swift_slowAlloc();
      *(_QWORD *)&v49[0] = v48;
      *(_DWORD *)v37 = 136315394;
      v38 = sub_232201BF0();
      v51 = sub_232013174(v38, v39, (uint64_t *)v49);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 2080;
      v46[1] = v37 + 14;
      v40 = v32;
      v41 = objc_msgSend(v40, sel_description);
      v42 = sub_232200EC4();
      v44 = v43;

      v51 = sub_232013174(v42, v44, (uint64_t *)v49);
      sub_232201710();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v33, (os_log_type_t)v47, "[%s]: Unsupported sample type: %s", (uint8_t *)v37, 0x16u);
      v45 = v48;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v45, -1, -1);
      MEMORY[0x2348FF468](v37, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return 0;
  }
  v17 = (void *)v16;
  sub_232003E9C(0, &qword_2541B56C0);
  v18 = a1;
  v19 = sub_232010B24(v17);
  v20 = a2
      + *(int *)(type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request(0) + 32);
  v21 = sub_232200180();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v15, v20, v21);
  v22 = *MEMORY[0x24BE4AD70];
  v23 = sub_2321FFD78();
  v24 = *(_QWORD *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 104))(v15, v22, v23);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v15, 0, 1, v23);
  v25 = a3;
  result = objc_msgSend(v19, sel_data);
  if (result)
  {
    v27 = result;
    sub_232003E9C(0, &qword_2541B0CD0);
    v28 = sub_2321FDAD4();
    v30 = v29;

    sub_23201C854((uint64_t)v15, (uint64_t)v13);
    v50 = 0;
    memset(v49, 0, sizeof(v49));
    v31 = sub_232015828(v28, v30, 16, (uint64_t)v13, (uint64_t)v25, 0, (uint64_t)v49);

    sub_232003ED4(v28, v30);
    sub_23201C898((uint64_t)v15);

    return v31;
  }
  __break(1u);
  return result;
}

uint64_t sub_23207E3FC()
{
  return type metadata accessor for StateOfMindCurrentValueSummarySharableModelGenerator();
}

uint64_t type metadata accessor for StateOfMindCurrentValueSummarySharableModelGenerator()
{
  uint64_t result;

  result = qword_2541B4CB8;
  if (!qword_2541B4CB8)
    return swift_getSingletonMetadata();
  return result;
}

double sub_23207E440@<D0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  double result;
  ValueMetadata *v5;
  _UNKNOWN **v6;

  v3 = (uint64_t)objc_msgSend(v1, sel_code);
  if (v3 <= 190)
  {
    if (v3 == 100)
    {
      v5 = &type metadata for ActivitySummaryAdditionalInputSignalsProvider;
      v6 = &off_250103A80;
      goto LABEL_12;
    }
    if (v3 == 124)
    {
      v5 = &type metadata for CardioFitnessAdditionalInputSignalProvider;
      v6 = &off_2500FF720;
      goto LABEL_12;
    }
  }
  else
  {
    switch(v3)
    {
      case 191:
        v5 = &type metadata for PregnancyAdditionalInputSignalsProvider;
        v6 = &off_250102868;
        goto LABEL_12;
      case 248:
        v5 = &type metadata for AFibBurdenAdditionalInputSignalsProvider;
        v6 = &off_2500FF190;
        goto LABEL_12;
      case 305:
        v5 = &type metadata for BalanceAdditionalInputSignalProvider;
        v6 = &off_250105460;
LABEL_12:
        *(_QWORD *)(a1 + 24) = v5;
        *(_QWORD *)(a1 + 32) = v6;
        return result;
    }
  }
  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_23207E510(void *a1, void *a2, void *a3, uint8_t *a4, void *a5, void *a6, uint8_t *a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void **v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  void **v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  void (*v52)(char *, uint64_t);
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  id v59;
  uint64_t v60;
  id v61;
  void *v62;
  id v63;
  id v64;
  NSObject *v65;
  os_log_type_t v66;
  uint64_t v67;
  uint8_t *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  id v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  id v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  id v82;
  id v83;
  void *v84;
  id v85;
  id v86;
  id v87;
  NSObject *v88;
  os_log_type_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unsigned int v93;
  void *v94;
  id v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  id v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  id v108;
  id v109;
  id v110;
  id v111;
  void **v112;
  void *v113;
  uint8_t *v114;
  uint8_t *v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;

  v115 = a7;
  v113 = a6;
  v114 = a4;
  v118 = a2;
  v119 = a3;
  v9 = sub_23220039C();
  v116 = *(_QWORD *)(v9 - 8);
  v117 = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v111 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v111 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v111 - v16;
  sub_2320002B4(0, &qword_2541B5598, (void (*)(uint64_t))sub_2320160D8);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (id *)((char *)&v111 - v19);
  sub_2320160D8();
  v22 = v21;
  v23 = *(_QWORD *)(v21 - 8);
  v24 = MEMORY[0x24BDAC7A8](v21);
  v26 = (id *)((char *)&v111 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v24);
  v28 = (id *)((char *)&v111 - v27);
  if (!a5)
    goto LABEL_4;
  v29 = a5;
  HKCodableChartSharableModel.values(for:)((uint64_t)v119, v20);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v23 + 48))(v20, 1, v22) == 1)
  {

    sub_23200040C((uint64_t)v20, &qword_2541B5598, (void (*)(uint64_t))sub_2320160D8);
LABEL_4:
    sub_232200318();
    v30 = a1;
    v31 = v118;
    v32 = v30;
    v33 = v31;
    v34 = sub_232200390();
    v35 = sub_2322012E4();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = swift_slowAlloc();
      v37 = swift_slowAlloc();
      v121 = v37;
      *(_DWORD *)v36 = 136315394;
      v38 = sub_23207F104((uint64_t)v32, v33);
      v120 = sub_232013174(v38, v39, &v121);
      sub_232201710();

      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 12) = 2080;
      v40 = (id)HKStringForHKTimeScope();
      if (!v40)
      {
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
        JUMPOUT(0x23207F0D0);
      }
      v41 = v40;
      v42 = sub_232200EC4();
      v44 = v43;

      v120 = sub_232013174(v42, v44, &v121);
      sub_232201710();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v34, v35, "%s: No readable chart model for %s", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v37, -1, -1);
      MEMORY[0x2348FF468](v36, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v116 + 8))(v12, v117);
    return 0;
  }
  v111 = v29;
  v112 = v28;
  v45 = *(int *)(v22 + 48);
  v46 = (char *)v28 + v45;
  v47 = (char *)v20 + v45;
  v48 = *v20;
  *v28 = *v20;
  v49 = sub_2321FD8B8();
  v50 = *(_QWORD *)(v49 - 8);
  (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v46, v47, v49);
  v51 = (char *)v26 + *(int *)(v22 + 48);
  *v26 = v48;
  (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v51, v46, v49);
  v52 = *(void (**)(char *, uint64_t))(v50 + 8);
  v53 = v48;
  v52(v51, v49);
  if (!objc_msgSend(v53, sel_hasType))
  {
    sub_232200318();
    v61 = a1;
    v62 = v118;
    v63 = v61;
    v64 = v62;
    v65 = sub_232200390();
    v66 = sub_2322012E4();
    if (os_log_type_enabled(v65, v66))
    {
      v67 = swift_slowAlloc();
      v119 = v53;
      v68 = (uint8_t *)v67;
      v69 = swift_slowAlloc();
      v121 = v69;
      *(_DWORD *)v68 = 136315138;
      v70 = sub_23207F104((uint64_t)v63, v64);
      v120 = sub_232013174(v70, v71, &v121);
      sub_232201710();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v65, v66, "%s: Chart model type missing, can't decode without it.", v68, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v69, -1, -1);
      MEMORY[0x2348FF468](v68, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v116 + 8))(v15, v117);
LABEL_19:
    sub_232002CEC((uint64_t)v112, (uint64_t (*)(_QWORD))sub_2320160D8);
    return 0;
  }
  switch(objc_msgSend(v53, sel_type))
  {
    case 0u:
      v54 = objc_msgSend(v53, sel_queryDataObject);
      v55 = (uint64_t)v112;
      if (v54)
      {
        v56 = sub_2321FDAD4();
        v58 = v57;

        v54 = (id)sub_2321FDAC8();
        sub_232003ED4(v56, v58);
      }
      v59 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A360]), sel_initWithData_, v54);

      if (!v59)
        goto LABEL_49;
      v60 = (uint64_t)sub_23207F20C(v59, a1, v118, (uint64_t)v114, v119, v113);
      goto LABEL_40;
    case 1u:
      v78 = objc_msgSend(v53, sel_queryDataObject);
      v55 = (uint64_t)v112;
      if (v78)
      {
        v79 = sub_2321FDAD4();
        v81 = v80;

        v78 = (id)sub_2321FDAC8();
        sub_232003ED4(v79, v81);
      }
      v59 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A368]), sel_initWithData_, v78);

      if (!v59)
        goto LABEL_51;
      sub_232081610(v59, (char *)a1, (uint64_t)v118, (uint64_t)v114, (void (**)(_QWORD, _QWORD))v113);
      goto LABEL_40;
    case 4u:
      v74 = objc_msgSend(v53, sel_queryDataObject);
      v55 = (uint64_t)v112;
      if (v74)
      {
        v75 = sub_2321FDAD4();
        v77 = v76;

        v74 = (id)sub_2321FDAC8();
        sub_232003ED4(v75, v77);
      }
      v59 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A350]), sel_initWithData_, v74);

      if (!v59)
        goto LABEL_50;
      v60 = (uint64_t)sub_2320827F8(v59, a1, v118, (uint64_t)v114, v113);
      goto LABEL_40;
    case 7u:
      v95 = objc_msgSend(v53, sel_queryDataObject);
      v55 = (uint64_t)v112;
      if (v95)
      {
        v96 = sub_2321FDAD4();
        v98 = v97;

        v95 = (id)sub_2321FDAC8();
        sub_232003ED4(v96, v98);
      }
      v59 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A378]), sel_initWithData_, v95);

      if (!v59)
        goto LABEL_52;
      v60 = (uint64_t)sub_232083868(v59, a1, v118, (uint64_t)v114, (uint64_t)v115);
      goto LABEL_40;
    case 9u:
      v99 = objc_msgSend(v53, sel_queryDataObject);
      v55 = (uint64_t)v112;
      if (v99)
      {
        v100 = sub_2321FDAD4();
        v102 = v101;

        v99 = (id)sub_2321FDAC8();
        sub_232003ED4(v100, v102);
      }
      v59 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A430]), sel_initWithData_, v99);

      if (!v59)
        goto LABEL_53;
      v60 = sub_2320804A4(v59, a1, v118, v114, (uint8_t *)v119, v115);
LABEL_40:
      v72 = v60;

      sub_232002CEC(v55, (uint64_t (*)(_QWORD))sub_2320160D8);
      return v72;
    case 0xCu:
      v103 = objc_msgSend(v53, sel_queryDataObject);
      v104 = (uint64_t)v112;
      if (v103)
      {
        v105 = sub_2321FDAD4();
        v107 = v106;

        v103 = (id)sub_2321FDAC8();
        sub_232003ED4(v105, v107);
      }
      v108 = v111;
      v109 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A338]), sel_initWithData_, v103);

      if (!v109)
        goto LABEL_54;
      v110 = objc_msgSend(v109, sel_quantityData);

      if (!v110)
        goto LABEL_55;
      v72 = (uint64_t)sub_23207F20C(v110, a1, v118, (uint64_t)v114, v119, v113);

      sub_232002CEC(v104, (uint64_t (*)(_QWORD))sub_2320160D8);
      break;
    default:
      sub_232200318();
      v82 = v53;
      v83 = a1;
      v84 = v118;
      v85 = v82;
      v86 = v83;
      v87 = v84;
      v88 = sub_232200390();
      v89 = sub_2322012E4();
      if (os_log_type_enabled(v88, v89))
      {
        v90 = swift_slowAlloc();
        v119 = (void *)swift_slowAlloc();
        v121 = (uint64_t)v119;
        *(_DWORD *)v90 = 136315394;
        v91 = sub_23207F104((uint64_t)v86, v87);
        v120 = sub_232013174(v91, v92, &v121);
        sub_232201710();

        swift_bridgeObjectRelease();
        *(_WORD *)(v90 + 12) = 1024;
        v93 = objc_msgSend(v85, sel_type);

        LODWORD(v120) = v93;
        sub_232201710();

        _os_log_impl(&dword_231FFB000, v88, v89, "%s: model parsing for this chart type isn't supported yet %d", (uint8_t *)v90, 0x12u);
        v94 = v119;
        swift_arrayDestroy();
        MEMORY[0x2348FF468](v94, -1, -1);
        MEMORY[0x2348FF468](v90, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v116 + 8))(v17, v117);
      goto LABEL_19;
  }
  return v72;
}

uint64_t sub_23207F104(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  sub_232201BF0();
  sub_232200F48();
  swift_bridgeObjectRelease();
  sub_232200F48();
  v3 = (void *)sub_2322011C4();
  sub_2321FE1AC();

  sub_232200F48();
  swift_bridgeObjectRelease();
  sub_232200F48();
  v4 = objc_msgSend(a2, sel_sensitiveLoggingIdentifier);
  sub_232200EC4();

  sub_232200F48();
  swift_bridgeObjectRelease();
  sub_232200F48();
  return 91;
}

id sub_23207F20C(void *a1, void *a2, void *a3, uint64_t a4, void *a5, void *a6)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t i;
  id v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  void (*v56)(char *, unint64_t);
  char *v57;
  unint64_t v58;
  id result;
  void *v60;
  id v61;
  id v62;
  uint64_t v63;
  id v64;
  id v65;
  void *v66;
  unint64_t v67;
  unint64_t v68;
  id v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  _QWORD *v74;
  id v75;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t);
  id v78;
  void *v79;
  id v80;
  void *v81;
  id v82;
  void *v83;
  id v84;
  id v85;
  id v86;
  void *v87;
  id v88;
  double v89;
  double v90;
  id v91;
  double v92;
  double v93;
  unint64_t v94;
  unint64_t v95;
  void *v96;
  id v97;
  double v98;
  double v99;
  id v100;
  double v101;
  double v102;
  id v103;
  void *v104;
  id v105;
  id v106;
  id v107;
  double v108;
  double v109;
  id v110;
  double v111;
  double v112;
  id v113;
  unint64_t v114;
  unint64_t v115;
  char *v116;
  id v117;
  id v118;
  id v119;
  id v120;
  NSObject *v121;
  os_log_type_t v122;
  uint8_t *v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  char *v127;
  id v128;
  id v129;
  id v130;
  id v131;
  NSObject *v132;
  os_log_type_t v133;
  uint8_t *v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  char *v139;
  id v140;
  id v141;
  id v142;
  unint64_t v143;
  char *v144;
  uint64_t v145;
  unint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  id v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  id v155;
  id v156;
  id v157;
  char *v158;
  char *v159;
  char *v160;
  uint64_t v161;
  unint64_t v162;
  uint64_t v163;
  id v164;
  char *v165;
  uint64_t v166;
  uint64_t v167[2];

  v157 = a2;
  v155 = a6;
  v156 = a3;
  v164 = a5;
  v161 = a4;
  v7 = sub_23220039C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v138 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (unint64_t)&v138 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v138 - v15;
  v17 = sub_2321FEE48();
  v153 = *(_QWORD *)(v17 - 8);
  v154 = v17;
  v18 = MEMORY[0x24BDAC7A8](v17);
  v158 = (char *)&v138 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v144 = (char *)&v138 - v20;
  sub_2320002B4(0, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v138 - v22;
  v24 = sub_2321FDC6C();
  v25 = MEMORY[0x24BDAC7A8](v24);
  v160 = (char *)&v138 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v159 = (char *)&v138 - v27;
  v28 = sub_2321FD8B8();
  v163 = *(_QWORD *)(v28 - 8);
  v29 = MEMORY[0x24BDAC7A8](v28);
  v152 = (char *)&v138 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v150 = (char *)&v138 - v32;
  MEMORY[0x24BDAC7A8](v31);
  v165 = (char *)&v138 - v33;
  if (!objc_msgSend(a1, sel_hasStatisticsCollection))
    goto LABEL_19;
  v34 = objc_msgSend(a1, sel_statisticsCollection);
  if (!v34)
    goto LABEL_19;
  v35 = v34;
  v148 = v8;
  if ((uint64_t)objc_msgSend(v34, sel_statisticsCount) < 1
    || (v36 = (unint64_t)HKCodableStatisticsCollection.codableStatisticsArray()()) == 0)
  {

    v8 = v148;
LABEL_19:
    sub_232200318();
    v45 = v157;
    v46 = v156;
    v47 = v45;
    v48 = v46;
    v49 = sub_232200390();
    v50 = sub_2322012FC();
    if (!os_log_type_enabled(v49, v50))
    {

      v56 = *(void (**)(char *, unint64_t))(v8 + 8);
      v57 = v11;
      v58 = v7;
      goto LABEL_23;
    }
    v51 = swift_slowAlloc();
    v143 = v7;
    v52 = (uint8_t *)v51;
    v53 = swift_slowAlloc();
    v167[0] = v53;
    *(_DWORD *)v52 = 136315138;
    v148 = v8;
    v54 = sub_23207F104((uint64_t)v47, v48);
    v166 = sub_232013174(v54, v55, v167);
    sub_232201710();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_231FFB000, v49, v50, "%s: unable to extract query data", v52, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v53, -1, -1);
    MEMORY[0x2348FF468](v52, -1, -1);

    v56 = *(void (**)(char *, unint64_t))(v148 + 8);
    v57 = v11;
LABEL_21:
    v58 = v143;
LABEL_23:
    v56(v57, v58);
    return 0;
  }
  v37 = v36;
  v167[0] = MEMORY[0x24BEE4AF8];
  if (v36 >> 62)
  {
LABEL_95:
    swift_bridgeObjectRetain();
    v38 = sub_232201998();
  }
  else
  {
    v38 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v149 = v28;
  v143 = v7;
  v140 = v35;
  v139 = v16;
  v162 = v14;
  if (v38)
  {
    v39 = objc_opt_self();
    if (v38 < 1)
    {
      __break(1u);
LABEL_97:
      swift_bridgeObjectRetain();
      v37 = sub_232201998();
      swift_bridgeObjectRelease();
      v35 = (id)v163;
      if (v37)
        goto LABEL_32;
LABEL_98:

      swift_bridgeObjectRelease();
      v7 = MEMORY[0x24BEE4AF8];

      return (id)v7;
    }
    v40 = (void *)v39;
    for (i = 0; i != v38; ++i)
    {
      if ((v37 & 0xC000000000000001) != 0)
        v42 = (id)MEMORY[0x2348FEA30](i, v37);
      else
        v42 = *(id *)(v37 + 8 * i + 32);
      v43 = v42;
      v44 = objc_msgSend(v40, sel_statisticsWithCodableStatistics_, v42);

      if (v44)
      {
        MEMORY[0x2348FE190]();
        if (*(_QWORD *)((v167[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v167[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23220105C();
        sub_232201074();
        sub_232201050();
      }
    }
    swift_bridgeObjectRelease();
    v14 = v167[0];
    v28 = v149;
  }
  else
  {
    swift_bridgeObjectRelease();
    v14 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  result = objc_msgSend((id)objc_opt_self(), sel_sharedInstanceForHealthStore_, v157);
  if (!result)
  {
    __break(1u);
    return result;
  }
  v60 = result;
  v61 = v156;
  v38 = (uint64_t)objc_msgSend(result, sel_displayTypeForObjectType_, v156);

  if (!v38)
  {
    swift_bridgeObjectRelease();
    v116 = (char *)v162;
    sub_232200318();
    v117 = v157;
    v118 = v61;
    v119 = v117;
    v120 = v118;
    v121 = sub_232200390();
    v122 = sub_2322012E4();
    if (os_log_type_enabled(v121, v122))
    {
      v123 = (uint8_t *)swift_slowAlloc();
      v124 = swift_slowAlloc();
      v167[0] = v124;
      *(_DWORD *)v123 = 136315138;
      v125 = sub_23207F104((uint64_t)v119, v120);
      v166 = sub_232013174(v125, v126, v167);
      sub_232201710();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v121, v122, "%s: Unable to instantiate display type", v123, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v124, -1, -1);
      MEMORY[0x2348FF468](v123, -1, -1);

    }
    else
    {

    }
    v56 = *(void (**)(char *, unint64_t))(v148 + 8);
    v57 = v116;
    goto LABEL_21;
  }
  v62 = objc_msgSend((id)v38, sel_chartingRules);
  v16 = (char *)objc_msgSend(v62, sel_chartStyleForTimeScope_, v164);

  if (v14 >> 62)
    goto LABEL_97;
  v37 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
  v35 = (id)v163;
  if (!v37)
    goto LABEL_98;
LABEL_32:
  v151 = (id)v38;
  v7 = MEMORY[0x24BEE4AF8];
  v146 = v14 & 0xC000000000000001;
  v63 = 4;
  v147 = v16;
  v145 = v37;
  while (1)
  {
    if (v146)
      v65 = (id)MEMORY[0x2348FEA30](v63 - 4, v14);
    else
      v65 = *(id *)(v14 + 8 * v63);
    v66 = v65;
    if (__OFADD__(v63 - 4, 1))
    {
      __break(1u);
      goto LABEL_95;
    }
    v162 = v63 - 3;
    v67 = v7;
    v68 = v14;
    v69 = objc_msgSend(v65, sel_startDate);
    sub_2321FDC30();

    v164 = v66;
    v70 = objc_msgSend(v66, sel_endDate);
    sub_2321FDC30();

    v71 = (uint64_t)v165;
    sub_2321FD87C();
    sub_2320055BC(v161, (uint64_t)v23);
    if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v35 + 6))(v23, 1, v28) == 1)
      break;
    v72 = (uint64_t)v150;
    (*((void (**)(char *, char *, uint64_t))v35 + 4))(v150, v23, v28);
    v73 = objc_msgSend(v151, sel_behavior);
    v74 = v35;
    v75 = objc_msgSend(v73, sel_preferredCalendarDayAlignment);

    LOBYTE(v73) = sub_23208076C(v71, v72, v76, (uint64_t)v75);
    v77 = (void (*)(uint64_t, uint64_t))v74[1];
    v77(v72, v28);
    if ((v73 & 1) != 0)
      goto LABEL_43;
    v77((uint64_t)v165, v28);
    v35 = (id)v163;
    v64 = v164;
    v14 = v68;
    v16 = v147;
    v7 = v67;
LABEL_34:
    v37 = v145;
LABEL_35:

    ++v63;
    if (v162 == v37)
    {

      swift_bridgeObjectRelease();
      return (id)v7;
    }
  }
  sub_23200040C((uint64_t)v23, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
LABEL_43:
  v16 = v147;
  v14 = v68;
  v64 = v164;
  if (v147 == (char *)1 || v147 == (char *)4)
  {
    v85 = objc_msgSend(v164, sel_averageQuantity);
    v7 = v67;
    if (v85
      || (v85 = objc_msgSend(v64, sel_sumQuantity)) != 0
      || (v85 = objc_msgSend(v64, sel_maximumQuantity)) != 0
      || (v85 = objc_msgSend(v64, sel_minimumQuantity)) != 0
      || (v85 = objc_msgSend(v64, sel_mostRecentQuantity)) != 0)
    {
      v86 = objc_msgSend(v155, sel_unitForChartingDisplayType_, v151);
      v37 = v145;
      if (v86)
      {
        v87 = v86;
        if ((objc_msgSend(v85, sel_isCompatibleWithUnit_, v86) & 1) != 0
          && (objc_msgSend(v87, sel_isNull) & 1) == 0)
        {
          objc_msgSend(v85, sel_doubleValueForUnit_, v87);
          v90 = v89;
          v91 = objc_msgSend(v151, sel_presentation);
          objc_msgSend(v91, sel_adjustedDoubleForDaemonDouble_, v90);
          v93 = v92;

          v88 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v87, v93);
        }
        else
        {
          v88 = v85;
        }
        v64 = v88;

      }
      else
      {
        v64 = v85;
      }
      (*(void (**)(char *, char *, uint64_t))(v163 + 16))(v152, v165, v149);
      objc_msgSend(v64, sel__value);
      sub_2321FEE24();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v7 = sub_232096930(0, *(_QWORD *)(v7 + 16) + 1, 1, v7);
      v95 = *(_QWORD *)(v7 + 16);
      v94 = *(_QWORD *)(v7 + 24);
      if (v95 >= v94 >> 1)
        v7 = sub_232096930(v94 > 1, v95 + 1, 1, v7);
      *(_QWORD *)(v7 + 16) = v95 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v153 + 32))(v7+ ((*(unsigned __int8 *)(v153 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v153 + 80))+ *(_QWORD *)(v153 + 72) * v95, v158, v154);

      v35 = (id)v163;
      v28 = v149;
      (*(void (**)(char *, uint64_t))(v163 + 8))(v165, v149);
      goto LABEL_35;
    }
LABEL_62:
    v35 = (id)v163;
    (*(void (**)(char *, uint64_t))(v163 + 8))(v165, v28);
    goto LABEL_34;
  }
  v7 = v67;
  if (v147 == (char *)3)
  {
    v78 = objc_msgSend(v164, sel_minimumQuantity);
    if (v78)
    {
      v79 = v78;
      v80 = objc_msgSend(v64, sel_maximumQuantity);
      v37 = v145;
      if (v80)
      {
        v81 = v80;
        v82 = objc_msgSend(v155, sel_unitForChartingDisplayType_, v151);
        v141 = v81;
        if (v82)
        {
          v83 = v82;
          if ((objc_msgSend(v79, sel_isCompatibleWithUnit_, v82) & 1) != 0
            && (objc_msgSend(v83, sel_isNull) & 1) == 0)
          {
            objc_msgSend(v79, sel_doubleValueForUnit_, v83);
            v99 = v98;
            v100 = objc_msgSend(v151, sel_presentation);
            objc_msgSend(v100, sel_adjustedDoubleForDaemonDouble_, v99);
            v102 = v101;

            v84 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v83, v102);
          }
          else
          {
            v84 = v79;
          }
          v97 = v84;

        }
        else
        {
          v97 = v79;
        }
        v142 = v97;
        v103 = objc_msgSend(v155, sel_unitForChartingDisplayType_, v151);
        if (v103)
        {
          v104 = v103;
          v105 = v141;
          if ((objc_msgSend(v141, sel_isCompatibleWithUnit_, v103) & 1) != 0
            && (objc_msgSend(v104, sel_isNull) & 1) == 0)
          {
            objc_msgSend(v105, sel_doubleValueForUnit_, v104);
            v109 = v108;
            v110 = objc_msgSend(v151, sel_presentation);
            objc_msgSend(v110, sel_adjustedDoubleForDaemonDouble_, v109);
            v112 = v111;

            v106 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v104, v112);
          }
          else
          {
            v106 = v105;
          }
          v107 = v106;

        }
        else
        {
          v107 = v141;
        }
        (*(void (**)(char *, char *, uint64_t))(v163 + 16))(v152, v165, v28);
        v64 = v107;
        v113 = v142;
        objc_msgSend(v142, sel__value);

        objc_msgSend(v64, sel__value);
        sub_2321FEE24();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v7 = sub_232096930(0, *(_QWORD *)(v7 + 16) + 1, 1, v7);
        v16 = v147;
        v115 = *(_QWORD *)(v7 + 16);
        v114 = *(_QWORD *)(v7 + 24);
        if (v115 >= v114 >> 1)
          v7 = sub_232096930(v114 > 1, v115 + 1, 1, v7);
        *(_QWORD *)(v7 + 16) = v115 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v153 + 32))(v7+ ((*(unsigned __int8 *)(v153 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v153 + 80))+ *(_QWORD *)(v153 + 72) * v115, v144, v154);

        v35 = (id)v163;
        v28 = v149;
        (*(void (**)(char *, uint64_t))(v163 + 8))(v165, v149);

      }
      else
      {
        v96 = (void *)v163;
        (*(void (**)(char *, uint64_t))(v163 + 8))(v165, v28);

        v35 = v96;
      }
      goto LABEL_35;
    }
    goto LABEL_62;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v127 = v139;
  sub_232200318();
  v128 = v157;
  v129 = v156;
  v130 = v128;
  v131 = v129;
  v132 = sub_232200390();
  v133 = sub_2322012E4();
  if (os_log_type_enabled(v132, v133))
  {
    v134 = (uint8_t *)swift_slowAlloc();
    v135 = swift_slowAlloc();
    v167[0] = v135;
    *(_DWORD *)v134 = 136315138;
    v136 = sub_23207F104((uint64_t)v130, v131);
    v166 = sub_232013174(v136, v137, v167);
    sub_232201710();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_231FFB000, v132, v133, "%s: cannot generate trend, received unsupported chart kind for quantity data source", v134, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v135, -1, -1);
    MEMORY[0x2348FF468](v134, -1, -1);

    (*(void (**)(char *, unint64_t))(v148 + 8))(v127, v143);
    (*(void (**)(char *, uint64_t))(v163 + 8))(v165, v149);
  }
  else
  {

    (*(void (**)(char *, unint64_t))(v148 + 8))(v127, v143);
    (*(void (**)(char *, uint64_t))(v163 + 8))(v165, v28);
  }
  return 0;
}

uint64_t sub_2320804A4(void *a1, void *a2, void *a3, uint8_t *a4, uint8_t *a5, uint8_t *a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  unint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint8_t *v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v12 = sub_23220039C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((uint64_t)objc_msgSend(a1, sel_sleepSummaryEntrysCount) < 1)
  {
    sub_232200318();
    v21 = a2;
    v22 = a3;
    v23 = v21;
    v24 = v22;
    v25 = sub_232200390();
    v26 = sub_2322012FC();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v35 = swift_slowAlloc();
      v37 = v35;
      v34 = v27;
      *(_DWORD *)v27 = 136315138;
      v33 = v27 + 4;
      v28 = sub_23207F104((uint64_t)v23, v24);
      v36 = sub_232013174(v28, v29, &v37);
      sub_232201710();

      swift_bridgeObjectRelease();
      v30 = v34;
      _os_log_impl(&dword_231FFB000, v25, v26, "%s: Sleep chart had no sleep summary entries", v34, 0xCu);
      v31 = v35;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v31, -1, -1);
      MEMORY[0x2348FF468](v30, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return 0;
  }
  else
  {
    v16 = objc_msgSend(a1, sel_daySummariesWithSourceTimeZone_, 0);
    sub_232003E9C(0, (unint64_t *)&qword_2541AF090);
    v17 = sub_232201038();

    MEMORY[0x24BDAC7A8](v18);
    *(&v33 - 4) = a4;
    *(&v33 - 3) = a6;
    *(&v33 - 2) = a5;
    sub_23209C358((void (*)(id *))sub_232083EDC, (uint64_t)(&v33 - 6), v17);
    v20 = v19;
    swift_bridgeObjectRelease();
  }
  return v20;
}

uint64_t sub_23208076C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  char v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  char v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t);
  char *v44;
  char *v45;
  void (*v46)(char *, uint64_t);
  void (*v47)(char *, uint64_t);
  char *v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v59 = a1;
  v56 = sub_23220039C();
  v6 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2321FD8B8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v57 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v58 = (char *)&v50 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v50 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v50 - v18;
  v20 = sub_2321FDC6C();
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = a4;
  if (a4)
  {
    v51 = v21;
    v52 = v20;
    v53 = v10;
    sub_232200318();
    v24 = sub_232200390();
    v25 = sub_2322012FC();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = swift_slowAlloc();
      v27 = swift_slowAlloc();
      v61 = v27;
      *(_DWORD *)v26 = 136446466;
      v50 = v26 + 4;
      v28 = sub_232201BF0();
      v54 = a2;
      v60 = sub_232013174(v28, v29, &v61);
      sub_232201710();
      a2 = v54;
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2048;
      v60 = v55;
      sub_232201710();
      _os_log_impl(&dword_231FFB000, v24, v25, "[%{public}s] unknown HKChartQueryCalendarDayAlignment with value %ld", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v27, -1, -1);
      MEMORY[0x2348FF468](v26, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v56);
    v38 = v59;
    sub_2321FD894();
    v39 = sub_2321FD8A0();
    v40 = v52;
    v41 = *(void (**)(char *, uint64_t))(v51 + 8);
    v41(v23, v52);
    v42 = v53;
    v43 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 16);
    v44 = v58;
    v43(v58, a2, v9);
    v45 = v57;
    v43(v57, v38, v9);
    if ((v39 & 1) != 0)
    {
      sub_2321FD870();
      v36 = sub_2321FD8A0();
      v41(v23, v40);
      v46 = *(void (**)(char *, uint64_t))(v42 + 8);
      v46(v45, v9);
      v46(v44, v9);
      return v36 & 1;
    }
    v47 = *(void (**)(char *, uint64_t))(v42 + 8);
    v47(v45, v9);
    v48 = v44;
LABEL_10:
    v47(v48, v9);
    v36 = 0;
    return v36 & 1;
  }
  v30 = v59;
  v31 = v21;
  sub_2321FD894();
  v32 = sub_2321FD8A0();
  v33 = *(void (**)(char *, uint64_t))(v31 + 8);
  v33(v23, v20);
  v34 = a2;
  v35 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v35(v19, v34, v9);
  v35(v17, v30, v9);
  if ((v32 & 1) == 0)
  {
    v47 = *(void (**)(char *, uint64_t))(v10 + 8);
    v47(v17, v9);
    v48 = v19;
    goto LABEL_10;
  }
  sub_2321FD870();
  v36 = sub_2321FD8A0();
  v33(v23, v20);
  v37 = *(void (**)(char *, uint64_t))(v10 + 8);
  v37(v17, v9);
  v37(v19, v9);
  return v36 & 1;
}

uint64_t sub_232080BAC@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  void *v21;
  void *v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v34 = a3;
  v35 = a4;
  sub_2320002B4(0, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v33 = (uint64_t)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v30 - v9;
  v11 = sub_2321FD8B8();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v31 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v32 = (char *)&v30 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v30 - v17;
  v19 = *a1;
  sub_2320055BC(a2, (uint64_t)v10);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v20(v10, 1, v11) == 1)
  {
    sub_23200040C((uint64_t)v10, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v18, v10, v11);
    v21 = (void *)sub_2321FD858();
    v22 = (void *)sub_2321FDD5C();
    v23 = objc_msgSend(v19, sel_hk_overlapsMidnightBasedDateInterval_gregorianCalendar_, v21, v22);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11);
    if ((v23 & 1) == 0)
    {
LABEL_6:
      v25 = sub_2321FEE48();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v35, 1, 1, v25);
    }
  }
  v24 = v33;
  sub_2320F44F0(v19, v34, v33);
  if (v20((char *)v24, 1, v11) == 1)
  {
    sub_23200040C(v24, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
    goto LABEL_6;
  }
  v27 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v32, v24, v11);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v31, v27, v11);
  objc_msgSend(v19, sel_sleepDuration);
  v28 = v35;
  sub_2321FEE24();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v27, v11);
  v29 = sub_2321FEE48();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 0, 1, v29);
}

uint64_t sub_232080E80@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  id v28;
  id v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  id v32;
  double v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  id v44;
  char v45[40];

  v40 = a5;
  v41 = a4;
  v42 = a2;
  v43 = a3;
  sub_2320002B4(0, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v38 - v9;
  v11 = sub_2321FDC6C();
  v12 = MEMORY[0x24BDAC7A8](v11);
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_2321FD8B8();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v38 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v38 - v21;
  sub_232083F04(a1, (uint64_t)v45);
  sub_232083FB8();
  if ((swift_dynamicCast() & 1) == 0)
  {
    v26 = sub_2321FEE48();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(a6, 1, 1, v26);
  }
  v38 = v17;
  v39 = a6;
  v23 = v44;
  v24 = objc_msgSend(v44, sel_startDate);
  sub_2321FDC30();

  v25 = objc_msgSend(v23, sel_endDate);
  sub_2321FDC30();

  sub_2321FD87C();
  sub_2320055BC(v43, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v10, 1, v13) == 1)
  {
    sub_23200040C((uint64_t)v10, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
LABEL_6:
    v32 = objc_msgSend((id)objc_opt_self(), sel_secondUnit);
    objc_msgSend(v42, sel_doubleValue);
    v34 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v32, v33);

    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v38, v22, v13);
    objc_msgSend(v34, sel__value);
    v35 = v39;
    sub_2321FEE24();
    swift_unknownObjectRelease();

    (*(void (**)(char *, uint64_t))(v14 + 8))(v22, v13);
    v36 = sub_2321FEE48();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v35, 0, 1, v36);
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v20, v10, v13);
  v28 = objc_msgSend(v40, sel_behavior);
  v29 = objc_msgSend(v28, sel_preferredCalendarDayAlignment);

  LOBYTE(v28) = sub_23208076C((uint64_t)v22, (uint64_t)v20, v30, (uint64_t)v29);
  v31 = *(void (**)(char *, uint64_t))(v14 + 8);
  v31(v20, v13);
  if ((v28 & 1) != 0)
    goto LABEL_6;
  v31(v22, v13);
  swift_unknownObjectRelease();
  v37 = sub_2321FEE48();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v39, 1, 1, v37);
}

uint64_t sub_232081264()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ChartModelParsing()
{
  return objc_opt_self();
}

uint64_t sub_232081294(unint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  double v22;
  double v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  id v33;
  id v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;

  v5 = v4;
  v43 = a3;
  v44 = a4;
  v42 = a2;
  v7 = sub_2321FDC6C();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v41 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v40 = (char *)&v32 - v10;
  sub_232016B30();
  v38 = *(_QWORD *)(v11 - 8);
  v39 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
    goto LABEL_15;
  v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v15 = MEMORY[0x24BEE4AF8];
    if (!v14)
      return v15;
    v45 = MEMORY[0x24BEE4AF8];
    result = sub_2320137CC(0, v14 & ~(v14 >> 63), 0);
    if (v14 < 0)
      break;
    v32 = v5;
    v15 = v45;
    v35 = a1 & 0xC000000000000001;
    v34 = (id)objc_opt_self();
    v33 = (id)objc_opt_self();
    v17 = 0;
    v36 = v14;
    v37 = a1;
    while (v14 != v17)
    {
      if (v35)
        v18 = (id)MEMORY[0x2348FEA30](v17, a1);
      else
        v18 = *(id *)(a1 + 8 * v17 + 32);
      v19 = v18;
      v20 = v42;
      v21 = objc_msgSend(v34, sel_quantityDistributionDataWithCodableQuantityDistributionData_sourceTimeZone_preferredUnit_, v18, 0, v42);
      objc_msgSend(v43, sel_doubleValue);
      v23 = v22;
      v24 = objc_allocWithZone(MEMORY[0x24BE4A7E0]);
      v25 = objc_msgSend(v24, sel_initWithHistogramData_bucketIncrement_unit_displayType_, v21, v20, v44, v23);

      v26 = objc_msgSend(v21, sel_startDate);
      sub_2321FDC30();

      v27 = objc_msgSend(v21, sel_endDate);
      sub_2321FDC30();

      sub_2321FD87C();
      v28 = objc_msgSend(v33, sel_segmentsFromChartPoint_zeroCountForGap_, v25, 6);
      sub_232003E9C(0, (unint64_t *)&qword_2541B0D78);
      v29 = sub_232201038();

      *(_QWORD *)&v13[*(int *)(v39 + 48)] = v29;
      v45 = v15;
      v31 = *(_QWORD *)(v15 + 16);
      v30 = *(_QWORD *)(v15 + 24);
      v5 = v31 + 1;
      if (v31 >= v30 >> 1)
      {
        sub_2320137CC(v30 > 1, v31 + 1, 1);
        v15 = v45;
      }
      ++v17;
      *(_QWORD *)(v15 + 16) = v5;
      sub_232083E98((uint64_t)v13, v15+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(_QWORD *)(v38 + 72) * v31);
      v14 = v36;
      a1 = v37;
      if (v36 == v17)
        return v15;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v14 = sub_232201998();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_232081610(void *a1, char *a2, uint64_t a3, uint64_t a4, void (**a5)(_QWORD, _QWORD))
{
  char *v5;
  char *v6;
  void (**v10)(_QWORD, _QWORD);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  id v48;
  id v49;
  void *v50;
  void *v51;
  id v52;
  id v53;
  void *v54;
  id v55;
  char *v56;
  id v57;
  id v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  char *v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, char *, uint64_t);
  char *v71;
  unint64_t v72;
  char *v73;
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  char v76;
  _BOOL4 v77;
  char v78;
  void (*v79)(char *, uint64_t);
  void (*v80)(char *, char *, uint64_t);
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  char v85;
  char *v86;
  char *v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t);
  uint64_t v90;
  char *v91;
  void (*v92)(char *, char *, uint64_t);
  uint64_t v93;
  uint64_t v94;
  id v95;
  void *v96;
  char *v97;
  id v98;
  double v99;
  double v100;
  void *v101;
  id v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  void *v106;
  id v107;
  char *v108;
  id v109;
  double v110;
  double v111;
  id v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  char *v117;
  char *v118;
  id v119;
  char *v120;
  id v121;
  id v122;
  char *v123;
  id v124;
  NSObject *v125;
  os_log_type_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  id v132;
  id v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  void (*v137)(char *, uint64_t);
  id v138;
  char *v139;
  id v140;
  char *v141;
  NSObject *v142;
  os_log_type_t v143;
  uint8_t *v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  char *v148;
  id v149;
  char *v150;
  id v151;
  char *v152;
  NSObject *v153;
  os_log_type_t v154;
  void (**v155)(_QWORD, _QWORD);
  uint8_t *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  char *v161;
  id v162;
  char *v163;
  id v164;
  char *v165;
  NSObject *v166;
  os_log_type_t v167;
  uint8_t *v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  id v172;
  id v173;
  uint64_t v174;
  unint64_t v175;
  uint64_t v176;
  uint64_t v177;
  id v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  char *v185;
  void (*v186)(char *, uint64_t, uint64_t);
  char *v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  void (*v199)(char *, char *, uint64_t);
  unint64_t v200;
  char *v201;
  char *v202;
  char *v203;
  char *v204;
  uint64_t v205;
  void (**v206)(_QWORD, _QWORD);
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;

  v6 = v5;
  v206 = a5;
  v195 = a4;
  v208 = sub_23220039C();
  v10 = *(void (***)(_QWORD, _QWORD))(v208 - 8);
  v11 = MEMORY[0x24BDAC7A8](v208);
  v207 = (char *)&v172 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v172 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v172 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v204 = (char *)&v172 - v19;
  v190 = sub_2321FEE48();
  v189 = *(_QWORD *)(v190 - 8);
  MEMORY[0x24BDAC7A8](v190);
  v201 = (char *)&v172 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v192 = sub_2321FDC6C();
  v184 = *(_QWORD *)(v192 - 8);
  MEMORY[0x24BDAC7A8](v192);
  v191 = (char *)&v172 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  MEMORY[0x24BDAC7A8](v22);
  v196 = (char *)&v172 - v23;
  v24 = sub_2321FD8B8();
  v198 = *(_QWORD *)(v24 - 8);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v183 = (char *)&v172 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v172 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v194 = (char *)&v172 - v30;
  sub_232016B30();
  v205 = v31;
  v180 = *(_QWORD *)(v31 - 8);
  v32 = MEMORY[0x24BDAC7A8](v31);
  v188 = (char *)&v172 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x24BDAC7A8](v32);
  v202 = (char *)&v172 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v203 = (char *)&v172 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v182 = (char *)&v172 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  v185 = (char *)&v172 - v41;
  MEMORY[0x24BDAC7A8](v40);
  v179 = (uint64_t)&v172 - v42;
  v43 = (unint64_t)HKCodableChartQuantityDistributionDataSourceQueryData.quantityDistributionArray()();
  if (!v43)
    goto LABEL_43;
  v44 = v43;
  objc_opt_self();
  v45 = swift_dynamicCastObjCClass();
  if (!v45)
  {
    v206 = v10;
    swift_bridgeObjectRelease();
    sub_232200318();
    v138 = (id)a3;
    v139 = a2;
    v140 = v138;
    v141 = v139;
    v142 = sub_232200390();
    v143 = sub_2322012E4();
    if (os_log_type_enabled(v142, v143))
    {
      v144 = (uint8_t *)swift_slowAlloc();
      v145 = swift_slowAlloc();
      v210 = v145;
      *(_DWORD *)v144 = 136315138;
      v146 = sub_23207F104((uint64_t)v141, v140);
      v209 = sub_232013174(v146, v147, &v210);
      sub_232201710();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v142, v143, "%s: Only quantity types are supported for quantity distribution charts.", v144, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v145, -1, -1);
      MEMORY[0x2348FF468](v144, -1, -1);

    }
    else
    {

    }
    ((void (**)(char *, uint64_t))v206)[1](v15, v208);
    return;
  }
  v46 = v45;
  v207 = v6;
  v47 = (void *)objc_opt_self();
  v48 = (id)a3;
  v49 = objc_msgSend(v47, sel_sharedInstanceForHealthStore_, a2);
  if (!v49)
    goto LABEL_64;
  v50 = v49;
  v51 = v48;
  v52 = objc_msgSend(v49, sel_displayTypeForObjectType_, v48);

  if (!v52)
  {
    swift_bridgeObjectRelease();
    sub_232200318();
    v149 = v51;
    v150 = a2;
    v151 = v149;
    v152 = v150;
    v153 = sub_232200390();
    v154 = sub_2322012E4();
    if (os_log_type_enabled(v153, v154))
    {
      v155 = v10;
      v156 = (uint8_t *)swift_slowAlloc();
      v157 = swift_slowAlloc();
      v206 = (void (**)(_QWORD, _QWORD))v18;
      v158 = v157;
      v210 = v157;
      *(_DWORD *)v156 = 136315138;
      v159 = sub_23207F104((uint64_t)v152, v151);
      v209 = sub_232013174(v159, v160, &v210);
      sub_232201710();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v153, v154, "%s: Unable to instantiate display type", v156, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v158, -1, -1);
      MEMORY[0x2348FF468](v156, -1, -1);

      v155[1](v206, v208);
    }
    else
    {

      ((void (**)(char *, uint64_t))v10)[1](v18, v208);
    }
    return;
  }
  v178 = v51;
  v53 = objc_msgSend(v206, sel_unitForChartingDisplayType_, v52);
  if (!v53)
  {
    v206 = v10;
    swift_bridgeObjectRelease();
    v161 = v204;
    sub_232200318();
    v162 = v178;
    v163 = a2;
    v164 = v162;
    v165 = v163;
    v166 = sub_232200390();
    v167 = sub_2322012E4();
    if (os_log_type_enabled(v166, v167))
    {
      v168 = (uint8_t *)swift_slowAlloc();
      v169 = swift_slowAlloc();
      v210 = v169;
      *(_DWORD *)v168 = 136315138;
      v170 = sub_23207F104((uint64_t)v165, v164);
      v209 = sub_232013174(v170, v171, &v210);
      sub_232201710();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v166, v167, "%s: Unable to instantiate preferred unit", v168, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v169, -1, -1);
      MEMORY[0x2348FF468](v168, -1, -1);

      ((void (**)(char *, uint64_t))v206)[1](v204, v208);
      return;
    }

    v137 = (void (*)(char *, uint64_t))v206[1];
    v148 = v161;
    goto LABEL_60;
  }
  v54 = v53;
  v55 = objc_msgSend((id)objc_opt_self(), sel_bucketSizeForQuantityType_preferredUnit_, v46, v53);
  v56 = v54;
  v57 = v55;
  v58 = v52;
  v59 = sub_232081294(v44, (uint64_t)v56, v57, (uint64_t)v58);
  swift_bridgeObjectRelease();

  v177 = *(_QWORD *)(v59 + 16);
  if (!v177)
  {

    swift_bridgeObjectRelease();
    v200 = MEMORY[0x24BEE4AF8];
    v63 = v178;
    goto LABEL_58;
  }
  v172 = v58;
  v173 = v57;
  v60 = 0;
  v176 = *(int *)(v205 + 48);
  v175 = v59 + ((*(unsigned __int8 *)(v180 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v180 + 80));
  v200 = MEMORY[0x24BEE4AF8];
  v61 = v192;
  v62 = v191;
  v10 = (void (**)(_QWORD, _QWORD))v196;
  v187 = v29;
  a2 = v185;
  v204 = v56;
  v174 = v59;
  while (1)
  {
    if (v60 >= *(_QWORD *)(v59 + 16))
      goto LABEL_63;
    v64 = *(_QWORD *)(v180 + 72);
    v181 = v60;
    v65 = v179;
    sub_232083E54(v175 + v64 * v60, v179);
    v66 = *(int *)(v205 + 48);
    v67 = *(_QWORD *)(v65 + v176);
    v68 = v198;
    v186 = *(void (**)(char *, uint64_t, uint64_t))(v198 + 32);
    v186(a2, v65, v24);
    v193 = v66;
    *(_QWORD *)&a2[v66] = v67;
    v69 = *(int *)(v205 + 48);
    v70 = *(void (**)(char *, char *, uint64_t))(v68 + 16);
    v71 = v182;
    v199 = v70;
    v70(v182, a2, v24);
    *(_QWORD *)&v71[v69] = v67;
    if (v67 >> 62)
    {
      swift_bridgeObjectRetain();
      a1 = (void *)sub_232201998();
      swift_bridgeObjectRelease();
      a3 = (uint64_t)a1 - 1;
      if (__OFSUB__(a1, 1))
      {
LABEL_42:
        __break(1u);
LABEL_43:
        sub_232200318();
        v119 = (id)a3;
        v120 = a2;
        v121 = a1;
        v122 = v119;
        v123 = v120;
        v124 = v121;
        v125 = sub_232200390();
        v126 = sub_2322012E4();
        if (os_log_type_enabled(v125, v126))
        {
          v127 = swift_slowAlloc();
          v128 = swift_slowAlloc();
          v206 = v10;
          v129 = v128;
          v210 = v128;
          *(_DWORD *)v127 = 136315394;
          v130 = sub_23207F104((uint64_t)v123, v122);
          v209 = sub_232013174(v130, v131, &v210);
          sub_232201710();

          swift_bridgeObjectRelease();
          *(_WORD *)(v127 + 12) = 2080;
          v132 = v124;
          v133 = objc_msgSend(v132, sel_description);
          v134 = sub_232200EC4();
          v136 = v135;

          v209 = sub_232013174(v134, v136, &v210);
          sub_232201710();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_231FFB000, v125, v126, "%s: Malformed protobuf query data: %s", (uint8_t *)v127, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x2348FF468](v129, -1, -1);
          MEMORY[0x2348FF468](v127, -1, -1);

          v137 = (void (*)(char *, uint64_t))v206[1];
        }
        else
        {

          v137 = (void (*)(char *, uint64_t))v10[1];
        }
        v148 = v207;
LABEL_60:
        v137(v148, v208);
        return;
      }
    }
    else
    {
      a1 = *(void **)((v67 & 0xFFFFFFFFFFFFF8) + 0x10);
      a3 = (uint64_t)a1 - 1;
      if (__OFSUB__(a1, 1))
        goto LABEL_42;
    }
    v206 = *(void (***)(_QWORD, _QWORD))(v198 + 8);
    ((void (*)(char *, uint64_t))v206)(v182, v24);
    if (a3 >= 1)
      break;
LABEL_8:
    v60 = v181 + 1;
    sub_232002CEC((uint64_t)a2, (uint64_t (*)(_QWORD))sub_232016B30);
    v63 = v178;
    v56 = v204;
    v59 = v174;
    if (v60 == v177)
    {

      swift_bridgeObjectRelease();
      v57 = v173;
LABEL_58:

      return;
    }
  }
  v72 = 0;
  v73 = v194;
  v197 = a3;
  while (1)
  {
    v208 = v72 + 2;
    v77 = __OFADD__(v72, 2);
    LODWORD(v207) = v77;
    sub_2320055BC(v195, (uint64_t)v10);
    if ((*(unsigned int (**)(void (**)(_QWORD, _QWORD), uint64_t, uint64_t))(v198 + 48))(v10, 1, v24) == 1)
    {
      sub_23200040C((uint64_t)v10, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
      goto LABEL_26;
    }
    v186(v73, (uint64_t)v10, v24);
    sub_2321FD894();
    v78 = sub_2321FD8A0();
    v79 = *(void (**)(char *, uint64_t))(v184 + 8);
    v79(v62, v61);
    v80 = v199;
    v199(v29, v73, v24);
    v81 = a2;
    v82 = v61;
    v83 = v29;
    v84 = v183;
    v80(v183, v81, v24);
    if ((v78 & 1) == 0)
    {
      v74 = (void (*)(char *, uint64_t))v206;
      ((void (*)(char *, uint64_t))v206)(v84, v24);
      v74(v83, v24);
      v74(v73, v24);
      v29 = v83;
      v61 = v82;
      a2 = v185;
LABEL_15:
      v75 = v197;
      goto LABEL_16;
    }
    sub_2321FD870();
    v85 = sub_2321FD8A0();
    v86 = v62;
    v87 = v62;
    v88 = v82;
    v79(v87, v82);
    v89 = (void (*)(char *, uint64_t))v206;
    ((void (*)(char *, uint64_t))v206)(v84, v24);
    v89(v83, v24);
    v89(v73, v24);
    a2 = v185;
    if ((v85 & 1) == 0)
    {
      v29 = v83;
      v73 = v194;
      v61 = v88;
      v62 = v86;
      goto LABEL_15;
    }
LABEL_26:
    v90 = *(int *)(v205 + 48);
    v91 = v203;
    v92 = v199;
    v199(v203, a2, v24);
    v93 = v193;
    v94 = *(_QWORD *)&a2[v193];
    *(_QWORD *)&v91[v90] = v94;
    if ((v94 & 0xC000000000000001) != 0)
    {
      v95 = v204;
      v117 = v204;
      swift_bridgeObjectRetain();
      v98 = (id)MEMORY[0x2348FEA30](v72, v94);
      swift_bridgeObjectRelease();
      goto LABEL_29;
    }
    v95 = v204;
    if (v72 >= *(_QWORD *)((v94 & 0xFFFFFFFFFFFFF8) + 0x10))
      break;
    v96 = *(void **)(v94 + 8 * v72 + 32);
    v97 = v204;
    v98 = v96;
LABEL_29:
    objc_msgSend(v98, sel_doubleValue, v172);
    v100 = v99;

    v101 = (void *)objc_opt_self();
    v102 = objc_msgSend(v101, sel_quantityWithUnit_doubleValue_, v95, v100);

    ((void (*)(char *, uint64_t))v206)(v203, v24);
    v103 = *(int *)(v205 + 48);
    v104 = v202;
    v92(v202, a2, v24);
    v105 = *(_QWORD *)&a2[v93];
    *(_QWORD *)&v104[v103] = v105;
    if ((v105 & 0xC000000000000001) != 0)
    {
      v107 = v204;
      v118 = v204;
      swift_bridgeObjectRetain();
      v109 = (id)MEMORY[0x2348FEA30](v72 + 1, v105);
      swift_bridgeObjectRelease();
    }
    else
    {
      if (v72 + 1 >= *(_QWORD *)((v105 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_62;
      v106 = *(void **)(v105 + 8 * v72 + 40);
      v107 = v204;
      v108 = v204;
      v109 = v106;
    }
    objc_msgSend(v109, sel_doubleValue);
    v111 = v110;

    v112 = objc_msgSend(v101, sel_quantityWithUnit_doubleValue_, v107, v111);
    ((void (*)(char *, uint64_t))v206)(v202, v24);
    v92(v188, a2, v24);
    objc_msgSend(v102, sel__value);
    objc_msgSend(v112, sel__value);
    sub_2321FEE24();
    v113 = v200;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v113 = sub_232096930(0, *(_QWORD *)(v113 + 16) + 1, 1, v113);
    v75 = v197;
    v115 = *(_QWORD *)(v113 + 16);
    v114 = *(_QWORD *)(v113 + 24);
    if (v115 >= v114 >> 1)
      v113 = sub_232096930(v114 > 1, v115 + 1, 1, v113);
    *(_QWORD *)(v113 + 16) = v115 + 1;
    v116 = (*(unsigned __int8 *)(v189 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v189 + 80);
    v200 = v113;
    (*(void (**)(unint64_t, char *, uint64_t))(v189 + 32))(v113 + v116 + *(_QWORD *)(v189 + 72) * v115, v201, v190);

    v61 = v192;
    v62 = v191;
    v29 = v187;
    v73 = v194;
LABEL_16:
    v76 = (char)v207;
    if (v208 >= v75)
      v76 = 1;
    v72 += 2;
    v10 = (void (**)(_QWORD, _QWORD))v196;
    if ((v76 & 1) != 0)
      goto LABEL_8;
  }
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
}

id sub_2320827F8(void *a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void *v37;
  id result;
  void *v39;
  void *v40;
  id v41;
  void *v42;
  id v43;
  void *v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  id v47;
  char *v48;
  char *v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  uint64_t v52;
  char v53;
  void (*v54)(char *, uint64_t);
  void (*v55)(char *, char *, uint64_t);
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char v61;
  id v62;
  void *v63;
  char *v64;
  id v65;
  void *v66;
  char *v67;
  void (*v68)(char *, uint64_t);
  char *v69;
  double v70;
  double v71;
  id v72;
  double v73;
  double v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  void (*v79)(char *, uint64_t);
  char *v80;
  id v81;
  id v82;
  id v83;
  id v84;
  NSObject *v85;
  os_log_type_t v86;
  uint8_t *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  id v91;
  id v92;
  id v93;
  id v94;
  NSObject *v95;
  os_log_type_t v96;
  uint8_t *v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  char *v106;
  char *v107;
  id v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  id v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  id v123;
  id v124;
  char *v125;
  char *v126;
  id v127;
  __int128 v128;
  __int128 v129;
  uint64_t v130;

  v105 = a5;
  v121 = a4;
  v124 = a1;
  v112 = sub_23220039C();
  v111 = *(_QWORD *)(v112 - 8);
  v7 = MEMORY[0x24BDAC7A8](v112);
  v109 = (char *)&v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v107 = (char *)&v101 - v9;
  v104 = sub_2321FEE48();
  v103 = *(_QWORD *)(v104 - 8);
  MEMORY[0x24BDAC7A8](v104);
  v106 = (char *)&v101 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  MEMORY[0x24BDAC7A8](v11);
  v120 = (uint64_t)&v101 - v12;
  v13 = sub_2321FD8B8();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v102 = (char *)&v101 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v117 = (char *)&v101 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v116 = (char *)&v101 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v101 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v101 - v24;
  v26 = sub_2321FDC6C();
  v122 = *(_QWORD *)(v26 - 8);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v119 = (char *)&v101 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v118 = (char *)&v101 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v126 = (char *)&v101 - v32;
  MEMORY[0x24BDAC7A8](v31);
  v125 = (char *)&v101 - v33;
  v34 = sub_2321FDA74();
  v110 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v36 = (char *)&v101 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = (void *)objc_opt_self();
  v123 = a2;
  result = objc_msgSend(v37, sel_sharedInstanceForHealthStore_, a2);
  if (!result)
  {
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
    return result;
  }
  v39 = result;
  v40 = a3;
  v41 = objc_msgSend(result, sel_displayTypeForObjectType_, a3);

  v113 = v41;
  if (!v41)
  {
    v80 = v109;
    sub_232200318();
    v81 = v123;
    v82 = v40;
    v83 = v81;
    v84 = v82;
    v85 = sub_232200390();
    v86 = sub_2322012E4();
    if (os_log_type_enabled(v85, v86))
    {
      v87 = (uint8_t *)swift_slowAlloc();
      v88 = swift_slowAlloc();
      *(_QWORD *)&v129 = v88;
      *(_DWORD *)v87 = 136315138;
      v89 = sub_23207F104((uint64_t)v83, v84);
      *(_QWORD *)&v128 = sub_232013174(v89, v90, (uint64_t *)&v129);
      sub_232201710();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v85, v86, "%s: Unable to instantiate display type", v87, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v88, -1, -1);
      MEMORY[0x2348FF468](v87, -1, -1);

    }
    else
    {

    }
LABEL_42:
    (*(void (**)(char *, uint64_t))(v111 + 8))(v80, v112);
    return 0;
  }
  v42 = v40;
  v43 = v124;
  if ((uint64_t)objc_msgSend(v124, sel_totalInsulinValuesCount) < 1)
  {
    v80 = v107;
    sub_232200318();
    v91 = v123;
    v92 = v42;
    v93 = v91;
    v94 = v92;
    v95 = sub_232200390();
    v96 = sub_2322012FC();
    if (os_log_type_enabled(v95, v96))
    {
      v97 = (uint8_t *)swift_slowAlloc();
      v98 = swift_slowAlloc();
      *(_QWORD *)&v129 = v98;
      *(_DWORD *)v97 = 136315138;
      v99 = sub_23207F104((uint64_t)v93, v94);
      *(_QWORD *)&v128 = sub_232013174(v99, v100, (uint64_t *)&v129);
      sub_232201710();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v95, v96, "%s: Insulin chart had no points", v97, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v98, -1, -1);
      MEMORY[0x2348FF468](v97, -1, -1);

    }
    else
    {

    }
    goto LABEL_42;
  }
  v111 = v34;
  result = objc_msgSend(v43, sel_totalInsulinValues);
  if (!result)
    goto LABEL_44;
  v44 = result;
  sub_232201650();

  sub_2321FDA68();
  v45 = v122;
  if (v130)
  {
    v112 = MEMORY[0x24BEE4AF8];
    v124 = (id)(MEMORY[0x24BEE4AD8] + 8);
    v114 = v25;
    v115 = v36;
    while (1)
    {
      sub_232015B58(&v129, &v128);
      sub_232003E9C(0, &qword_255F9D5C8);
      if (!swift_dynamicCast())
        goto LABEL_9;
      v47 = v127;
      objc_msgSend(v127, sel_startDate);
      v48 = v125;
      sub_2321FDAE0();
      v123 = v47;
      objc_msgSend(v47, sel_endDate);
      v49 = v126;
      sub_2321FDAE0();
      v50 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
      v51 = v118;
      v50(v118, v48, v26);
      v50(v119, v49, v26);
      sub_2321FD87C();
      v52 = v120;
      sub_2320055BC(v121, v120);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v52, 1, v13) == 1)
      {
        sub_23200040C(v52, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
LABEL_16:
        v62 = v123;
        if (objc_msgSend(v123, sel_hasInsulinQuantity))
        {
          result = objc_msgSend(v62, sel_insulinQuantity);
          v36 = v115;
          if (!result)
            goto LABEL_45;
          v63 = result;
          v108 = (id)objc_opt_self();
          v64 = (char *)objc_msgSend(v108, sel_createWithCodableQuantity_, v63);

          v65 = objc_msgSend(v105, sel_unitForChartingDisplayType_, v113);
          v109 = v64;
          if (v65)
          {
            v66 = v65;
            if ((objc_msgSend(v64, sel_isCompatibleWithUnit_, v65) & 1) != 0
              && (objc_msgSend(v66, sel_isNull) & 1) == 0)
            {
              objc_msgSend(v64, sel_doubleValueForUnit_, v66);
              v71 = v70;
              v72 = objc_msgSend(v113, sel_presentation);
              objc_msgSend(v72, sel_adjustedDoubleForDaemonDouble_, v71);
              v74 = v73;

              v67 = (char *)objc_msgSend(v108, sel_quantityWithUnit_doubleValue_, v66, v74);
            }
            else
            {
              v67 = v64;
            }
            v69 = v67;

          }
          else
          {
            v69 = v64;
          }
          (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v102, v25, v13);
          v108 = v69;
          objc_msgSend(v69, sel__value);
          sub_2321FEE24();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v112 = sub_232096930(0, *(_QWORD *)(v112 + 16) + 1, 1, v112);
          v75 = v112;
          v77 = *(_QWORD *)(v112 + 16);
          v76 = *(_QWORD *)(v112 + 24);
          if (v77 >= v76 >> 1)
            v75 = sub_232096930(v76 > 1, v77 + 1, 1, v112);
          *(_QWORD *)(v75 + 16) = v77 + 1;
          v78 = (*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80);
          v112 = v75;
          (*(void (**)(unint64_t, char *, uint64_t))(v103 + 32))(v75 + v78 + *(_QWORD *)(v103 + 72) * v77, v106, v104);

          (*(void (**)(char *, uint64_t))(v14 + 8))(v25, v13);
          v79 = *(void (**)(char *, uint64_t))(v45 + 8);
          v79(v126, v26);
          v79(v125, v26);

        }
        else
        {

          (*(void (**)(char *, uint64_t))(v14 + 8))(v25, v13);
          v68 = *(void (**)(char *, uint64_t))(v45 + 8);
          v68(v126, v26);
          v68(v125, v26);
          v36 = v115;
        }
        sub_2321FDA68();
        v45 = v122;
        if (!v130)
          goto LABEL_39;
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v23, v52, v13);
        sub_2321FD894();
        v53 = sub_2321FD8A0();
        v54 = *(void (**)(char *, uint64_t))(v45 + 8);
        v54(v51, v26);
        v55 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
        v56 = v116;
        v55(v116, v23, v13);
        v57 = v25;
        v58 = v23;
        v59 = v14;
        v60 = v117;
        v55(v117, v57, v13);
        if ((v53 & 1) != 0)
        {
          sub_2321FD870();
          v61 = sub_2321FD8A0();
          v54(v51, v26);
          v46 = *(void (**)(char *, uint64_t))(v59 + 8);
          v46(v60, v13);
          v46(v56, v13);
          v46(v58, v13);
          v14 = v59;
          v23 = v58;
          v25 = v114;
          v45 = v122;
          if ((v61 & 1) != 0)
            goto LABEL_16;
        }
        else
        {
          v46 = *(void (**)(char *, uint64_t))(v59 + 8);
          v46(v60, v13);
          v46(v56, v13);
          v46(v58, v13);
          v14 = v59;
          v23 = v58;
          v25 = v114;
          v45 = v122;
        }

        v46(v25, v13);
        v54(v126, v26);
        v54(v125, v26);
        v36 = v115;
LABEL_9:
        sub_2321FDA68();
        if (!v130)
          goto LABEL_39;
      }
    }
  }
  v112 = MEMORY[0x24BEE4AF8];
LABEL_39:
  (*(void (**)(char *, uint64_t))(v110 + 8))(v36, v111);

  return (id)v112;
}

uint64_t sub_2320834D8(uint64_t a1, void (*a2)(_QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  void (*v23)(char *, char *, uint64_t);
  char *v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void (*v32)(_QWORD, _QWORD);
  char *v33;
  uint64_t (*v34)(unint64_t, char *, uint64_t);
  char *v35;
  unint64_t v36;
  uint64_t v37;
  _BYTE v38[40];
  id v39;
  int64_t v40;

  sub_2320002B4(0, (unint64_t *)&unk_2541B2358, (void (*)(uint64_t))MEMORY[0x24BE42988]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v31 - v5;
  v7 = sub_2321FEE48();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v35 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v33 = (char *)&v31 - v11;
  v12 = *(_QWORD *)(a1 + 64);
  v37 = a1 + 64;
  v13 = 1 << *(_BYTE *)(a1 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v40 = (unint64_t)(v13 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v17 = 0;
  v36 = MEMORY[0x24BEE4AF8];
  v32 = a2;
  if (!v15)
    goto LABEL_7;
LABEL_4:
  v18 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (i = v18 | (v17 << 6); ; i = __clz(__rbit64(v21)) + (v17 << 6))
  {
    sub_232083F04(*(_QWORD *)(a1 + 48) + 40 * i, (uint64_t)v38);
    v39 = *(id *)(*(_QWORD *)(a1 + 56) + 8 * i);
    a2(v38, v39);
    sub_232002CEC((uint64_t)v38, (uint64_t (*)(_QWORD))sub_232083F40);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      result = sub_23200040C((uint64_t)v6, (unint64_t *)&unk_2541B2358, (void (*)(uint64_t))MEMORY[0x24BE42988]);
      if (v15)
        goto LABEL_4;
    }
    else
    {
      v23 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v24 = v33;
      v23(v33, v6, v7);
      v34 = (uint64_t (*)(unint64_t, char *, uint64_t))v23;
      v23(v35, v24, v7);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v36 = sub_232096930(0, *(_QWORD *)(v36 + 16) + 1, 1, v36);
      v26 = *(_QWORD *)(v36 + 16);
      v25 = *(_QWORD *)(v36 + 24);
      v27 = v26 + 1;
      a2 = v32;
      if (v26 >= v25 >> 1)
      {
        v31 = v26 + 1;
        v30 = sub_232096930(v25 > 1, v26 + 1, 1, v36);
        v27 = v31;
        v36 = v30;
      }
      v28 = v35;
      v29 = v36;
      *(_QWORD *)(v36 + 16) = v27;
      result = v34(v29+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v26, v28, v7);
      if (v15)
        goto LABEL_4;
    }
LABEL_7:
    v20 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v20 >= v40)
      goto LABEL_29;
    v21 = *(_QWORD *)(v37 + 8 * v20);
    ++v17;
    if (!v21)
    {
      v17 = v20 + 1;
      if (v20 + 1 >= v40)
        goto LABEL_29;
      v21 = *(_QWORD *)(v37 + 8 * v17);
      if (!v21)
      {
        v17 = v20 + 2;
        if (v20 + 2 >= v40)
          goto LABEL_29;
        v21 = *(_QWORD *)(v37 + 8 * v17);
        if (!v21)
        {
          v17 = v20 + 3;
          if (v20 + 3 >= v40)
            goto LABEL_29;
          v21 = *(_QWORD *)(v37 + 8 * v17);
          if (!v21)
            break;
        }
      }
    }
LABEL_22:
    v15 = (v21 - 1) & v21;
  }
  v22 = v20 + 4;
  if (v22 >= v40)
  {
LABEL_29:
    swift_release();
    return v36;
  }
  v21 = *(_QWORD *)(v37 + 8 * v22);
  if (v21)
  {
    v17 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    v17 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v17 >= v40)
      goto LABEL_29;
    v21 = *(_QWORD *)(v37 + 8 * v17);
    ++v22;
    if (v21)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
  return result;
}

id sub_232083868(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  id result;
  void *v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  id v30;
  unint64_t v31;
  id v32;
  id v33;
  id v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  id v45;
  id v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v10 = sub_23220039C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v53 - v15;
  result = objc_msgSend((id)objc_opt_self(), sel_sharedInstanceForHealthStore_, a2);
  if (result)
  {
    v18 = result;
    v58 = v11;
    v59 = v10;
    v19 = objc_msgSend(result, sel_displayTypeForObjectType_, a3);

    if (v19)
    {
      v56 = v19;
      if ((uint64_t)objc_msgSend(a1, sel_dateIntervalsToTotalsCount) >= 1)
      {
        v20 = objc_msgSend(a1, sel_dateIntervalsToTotals);
        if (v20)
        {
          v21 = v20;
          v61 = 0;
          sub_232003E9C(0, &qword_2541AF0A0);
          sub_23220102C();

          if (v61)
          {
            v22 = (void *)objc_opt_self();
            v23 = (void *)sub_232201020();
            swift_bridgeObjectRelease();
            v24 = objc_msgSend(v22, sel_timePeriodDataWithCodableData_, v23);

            sub_232003E9C(0, (unint64_t *)&qword_2541B0D78);
            v25 = sub_232200DD4();

            MEMORY[0x24BDAC7A8](v26);
            v27 = v57;
            *(&v53 - 4) = a4;
            *(&v53 - 3) = v27;
            *(&v53 - 2) = a5;
            v28 = v56;
            *(&v53 - 1) = (uint64_t)v56;
            v29 = sub_2320834D8(v25, (void (*)(_QWORD, _QWORD))sub_232083EF8);
            swift_bridgeObjectRelease();

            return (id)v29;
          }
        }
      }
      v30 = objc_msgSend(a1, sel_dateIntervalsToTotalsCount);
      if ((uint64_t)v30 <= 0)
        v31 = 0x80000002322052D0;
      else
        v31 = 0x8000000232205300;
      sub_232200318();
      v32 = a2;
      v33 = a3;
      v34 = v32;
      v35 = v33;
      swift_bridgeObjectRetain();
      v36 = sub_232200390();
      v37 = sub_2322012E4();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = 0xD000000000000026;
        if ((uint64_t)v30 > 0)
          v38 = 0xD00000000000003ELL;
        v54 = v38;
        v39 = swift_slowAlloc();
        v55 = swift_slowAlloc();
        v61 = v55;
        *(_DWORD *)v39 = 136315394;
        v40 = sub_23207F104((uint64_t)v34, v35);
        v60 = sub_232013174(v40, v41, &v61);
        sub_232201710();

        swift_bridgeObjectRelease();
        *(_WORD *)(v39 + 12) = 2082;
        swift_bridgeObjectRetain();
        v60 = sub_232013174(v54, v31, &v61);
        sub_232201710();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_231FFB000, v36, v37, "%s: %{public}s", (uint8_t *)v39, 0x16u);
        v42 = v55;
        swift_arrayDestroy();
        MEMORY[0x2348FF468](v42, -1, -1);
        MEMORY[0x2348FF468](v39, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }

      (*(void (**)(char *, uint64_t))(v58 + 8))(v16, v59);
    }
    else
    {
      sub_232200318();
      v43 = a2;
      v44 = a3;
      v45 = v43;
      v46 = v44;
      v47 = sub_232200390();
      v48 = sub_2322012E4();
      if (os_log_type_enabled(v47, v48))
      {
        v49 = (uint8_t *)swift_slowAlloc();
        v50 = swift_slowAlloc();
        v61 = v50;
        *(_DWORD *)v49 = 136315138;
        v51 = sub_23207F104((uint64_t)v45, v46);
        v60 = sub_232013174(v51, v52, &v61);
        sub_232201710();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_231FFB000, v47, v48, "%s: Unable to instantiate display type", v49, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2348FF468](v50, -1, -1);
        MEMORY[0x2348FF468](v49, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v58 + 8))(v14, v59);
    }
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_232083E54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_232016B30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_232083E98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_232016B30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_232083EDC@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_232080BAC(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 32), a2);
}

uint64_t sub_232083EF8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_232080E80(a1, a2, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(void **)(v3 + 40), a3);
}

uint64_t sub_232083F04(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

void sub_232083F40()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2541B5720)
  {
    sub_232003E9C(255, (unint64_t *)&qword_2541B0D78);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2541B5720);
  }
}

unint64_t sub_232083FB8()
{
  unint64_t result;

  result = qword_2541B5608;
  if (!qword_2541B5608)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_2541B5608);
  }
  return result;
}

uint64_t sub_23208400C()
{
  return 0;
}

uint64_t sub_232084018@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_232084044()
{
  sub_2320842B8();
  return sub_232201BD8();
}

uint64_t sub_23208406C()
{
  sub_2320842B8();
  return sub_232201BE4();
}

uint64_t sub_232084094(uint64_t a1)
{
  return sub_232016AFC(a1);
}

uint64_t sub_2320840B8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_232084260();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232016AD8(a1, a1[3]);
  sub_2320842B8();
  sub_232201BC0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_23208417C()
{
  unint64_t result;

  result = qword_2541B3E38;
  if (!qword_2541B3E38)
  {
    result = MEMORY[0x2348FF39C](&unk_232213368, &type metadata for EmptySnidgetVisualizationView);
    atomic_store(result, (unint64_t *)&qword_2541B3E38);
  }
  return result;
}

uint64_t sub_2320841C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_23208420C();
  v3 = v2;
  sub_2321FEDDC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
}

uint64_t sub_2320841FC()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_23208420C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9D5D0)
  {
    v0 = sub_2321FEE0C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9D5D0);
  }
}

void sub_232084260()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9D5D8)
  {
    sub_2320842B8();
    v0 = sub_232201AA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9D5D8);
  }
}

unint64_t sub_2320842B8()
{
  unint64_t result;

  result = qword_255F9D5E0;
  if (!qword_255F9D5E0)
  {
    result = MEMORY[0x2348FF39C](&unk_232213440, &type metadata for EmptySnidgetVisualizationView.ViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255F9D5E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for EmptySnidgetVisualizationView.ViewModel.CodingKeys()
{
  return &type metadata for EmptySnidgetVisualizationView.ViewModel.CodingKeys;
}

ValueMetadata *type metadata accessor for EmptySnidgetVisualizationView.ViewModel()
{
  return &type metadata for EmptySnidgetVisualizationView.ViewModel;
}

ValueMetadata *type metadata accessor for EmptySnidgetVisualizationView()
{
  return &type metadata for EmptySnidgetVisualizationView;
}

uint64_t sub_23208432C()
{
  return MEMORY[0x24BDF5138];
}

unint64_t sub_23208433C()
{
  unint64_t result;

  result = qword_255F9D5E8;
  if (!qword_255F9D5E8)
  {
    result = MEMORY[0x2348FF39C](&unk_2322133F0, &type metadata for EmptySnidgetVisualizationView.ViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255F9D5E8);
  }
  return result;
}

unint64_t sub_232084384()
{
  unint64_t result;

  result = qword_255F9D5F0;
  if (!qword_255F9D5F0)
  {
    result = MEMORY[0x2348FF39C](&unk_232213418, &type metadata for EmptySnidgetVisualizationView.ViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255F9D5F0);
  }
  return result;
}

uint64_t sub_2320843C8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2320843D4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_232084450()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_23208445C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for QuantityValueSnidgetFeedItemModelProvider()
{
  uint64_t result;

  result = qword_2541B2630;
  if (!qword_2541B2630)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23208450C(uint64_t a1)
{
  uint64_t result;

  result = sub_232000590(&qword_2541B5BC0, (uint64_t (*)(uint64_t))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider, (uint64_t)&unk_2322134E8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_232084548(void *a1)
{
  sub_232084A34(a1, 0x24BE4A4D8, 0xD00000000000002BLL, 0x80000002322033B0, &qword_2541B56F0);
}

void sub_232084584(void *a1)
{
  sub_232084A34(a1, 0x24BE4A510, 0xD000000000000026, 0x8000000232203640, &qword_2541B0CF8);
}

void sub_2320845C0(void *a1)
{
  sub_232084A34(a1, 0x24BE4A4F0, 0xD000000000000029, 0x8000000232203410, &qword_2541B56B0);
}

void sub_2320845FC(void *a1)
{
  sub_232084A34(a1, 0x24BE4A498, 0xD000000000000029, 0x8000000232203410, &qword_2541B0D20);
}

void sub_232084638(void *a1)
{
  sub_232084A34(a1, 0x24BE4A500, 0xD000000000000027, 0x8000000232203470, &qword_2541B56C0);
}

void sub_232084674(void *a1)
{
  sub_232084A34(a1, 0x24BE4A548, 0xD00000000000002ELL, 0x80000002322033E0, &qword_255F9C0A0);
}

void sub_2320846B0(void *a1)
{
  sub_232084A34(a1, 0x24BE4A4C8, 0xD00000000000001FLL, 0x8000000232203530, &qword_2541AF0B8);
}

void sub_2320846EC(void *a1)
{
  sub_232084A34(a1, 0x24BE4A4F8, 0xD000000000000021, 0x80000002322034A0, &qword_2541B0D28);
}

void sub_232084728(void *a1)
{
  sub_232084A34(a1, 0x24BE4A480, 0xD000000000000023, 0x8000000232203380, &qword_2541B7118);
}

void sub_232084764(void *a1)
{
  sub_232084A34(a1, 0x24BE4A478, 0xD000000000000025, 0x80000002322035B0, &qword_2541B0CF0);
}

void sub_2320847A0(void *a1)
{
  sub_232084A34(a1, 0x24BE4A460, 0xD000000000000026, 0x80000002322035E0, &qword_2541B56B8);
}

void sub_2320847DC(void *a1)
{
  sub_232084A34(a1, 0x24BE4A470, 0xD000000000000029, 0x8000000232205520, &qword_2541B0D10);
}

void sub_232084818(void *a1)
{
  sub_232084A34(a1, 0x24BE4A488, 0xD000000000000029, 0x8000000232203580, &qword_2541B0D18);
}

void sub_232084854(void *a1)
{
  sub_232084A34(a1, 0x24BE4A4A0, 0xD000000000000029, 0x8000000232203310, &qword_2541B56A8);
}

void sub_232084890(void *a1)
{
  sub_232084A34(a1, 0x24BE4A4D0, 0xD00000000000002ALL, 0x8000000232203500, &qword_255F9C0B0);
}

void sub_2320848CC(void *a1)
{
  sub_232084A34(a1, 0x24BE4A4E0, 0xD00000000000002ALL, 0x8000000232203550, &qword_2541AF0B0);
}

void sub_232084908(void *a1)
{
  sub_232084A34(a1, 0x24BE4A4E8, 0xD00000000000002ALL, 0x80000002322034D0, &qword_255F9C0A8);
}

void sub_232084944(void *a1)
{
  sub_232084A34(a1, 0x24BE4A468, 0xD00000000000002BLL, 0x8000000232205680, &qword_2541AF0A8);
}

void sub_232084980(void *a1)
{
  sub_232084A34(a1, 0x24BE4A540, 0xD00000000000002BLL, 0x8000000232203440, &qword_2541B56F8);
}

void sub_2320849BC(void *a1)
{
  sub_232084A34(a1, 0x24BE4A560, 0xD00000000000002DLL, 0x8000000232203610, &qword_2541B0D30);
}

void sub_2320849F8(void *a1)
{
  sub_232084A34(a1, 0x24BE4A490, 0xD000000000000036, 0x8000000232203340, &qword_255F9C098);
}

void sub_232084A34(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  void *v19;
  unsigned __int8 v20;
  id v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unsigned __int8 v37;
  id v38;
  void *v39;
  char v40;
  id v41;
  void *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  char *v46;
  id v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  BOOL v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v70 = a5;
  v72 = a2;
  sub_2320002B4(0, &qword_2541B28D0, (void (*)(uint64_t))MEMORY[0x24BE47E70]);
  v73 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23220039C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v65 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v71 = (char *)&v65 - v17;
  if (objc_msgSend(a1, sel_hasValueData))
  {
    v68 = a3;
    v69 = a4;
    v66 = v10;
    v67 = v9;
    v18 = objc_msgSend(a1, sel_kindRawValue);
    if (!v18
      || (v19 = v18,
          sub_232200EC4(),
          v19,
          v20 = _sSo28HKCodableSummaryCurrentValueC9SummariesE4KindO03rawD0AESgSS_tcfC_0(),
          v20 == 22))
    {
      if (objc_msgSend(a1, sel_hasKindRawValue))
      {
        v21 = objc_msgSend(a1, sel_kindRawValue);
        if (!v21)
        {
          __break(1u);
          return;
        }
        v22 = v21;
        v23 = sub_232200EC4();
        v25 = v24;

      }
      else
      {
        v25 = 0xE90000000000003ELL;
        v23 = 0x646E696B206F6E3CLL;
      }
      v27 = v68;
      v26 = v69;
      sub_232200318();
      v28 = a1;
      swift_bridgeObjectRetain();
      v29 = sub_232200390();
      v30 = sub_2322012E4();
      v31 = v30;
      if (os_log_type_enabled(v29, v30))
      {
        v32 = swift_slowAlloc();
        v70 = (unint64_t *)v23;
        v33 = v32;
        v72 = swift_slowAlloc();
        v75 = v72;
        *(_DWORD *)v33 = 136446722;
        LODWORD(v71) = v31;
        v74 = sub_232013174(v27, v26, &v75);
        sub_232201710();
        *(_WORD *)(v33 + 12) = 2080;
        swift_bridgeObjectRetain();
        v74 = sub_232013174((uint64_t)v70, v25, &v75);
        sub_232201710();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v33 + 22) = 2080;
        sub_232003E9C(0, &qword_2541B0CD0);
        sub_2320880B8();
        sub_2321FF25C();
        v34 = sub_232200F00();
        v74 = sub_232013174(v34, v35, &v75);
        sub_232201710();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_231FFB000, v29, (os_log_type_t)v71, "[%{public}s] Unknown kind received: %s, this model should have bumped its version: %s", (uint8_t *)v33, 0x20u);
        v36 = v72;
        swift_arrayDestroy();
        MEMORY[0x2348FF468](v36, -1, -1);
        MEMORY[0x2348FF468](v33, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v66 + 8))(v13, v67);
      goto LABEL_21;
    }
    v37 = v20;
    v38 = objc_msgSend(a1, sel_kindRawValue);
    if (!v38
      || (v39 = v38,
          sub_232200EC4(),
          v39,
          v40 = _sSo28HKCodableSummaryCurrentValueC9SummariesE4KindO03rawD0AESgSS_tcfC_0(),
          v40 == 22)
      || (v41 = sub_232009258(v40)) == 0)
    {
      sub_232200318();
      v56 = sub_232200390();
      v57 = sub_2322012E4();
      v58 = os_log_type_enabled(v56, v57);
      v60 = v68;
      v59 = v69;
      if (v58)
      {
        v61 = swift_slowAlloc();
        v62 = swift_slowAlloc();
        v75 = v62;
        *(_DWORD *)v61 = 136446466;
        v74 = sub_232013174(v60, v59, &v75);
        sub_232201710();
        *(_WORD *)(v61 + 12) = 2080;
        v63 = HKCodableSummaryCurrentValue.Kind.rawValue.getter(v37);
        v74 = sub_232013174(v63, v64, &v75);
        sub_232201710();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_231FFB000, v56, v57, "[%{public}s] Unable to unwrap value for kind %s", (uint8_t *)v61, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2348FF468](v62, -1, -1);
        MEMORY[0x2348FF468](v61, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v66 + 8))(v16, v67);
LABEL_21:
      sub_232000300();
      swift_allocError();
      swift_willThrow();
      return;
    }
    v42 = v41;
    objc_opt_self();
    v43 = swift_dynamicCastObjCClass();
    v45 = v68;
    v44 = v69;
    if (!v43)
    {
      v46 = v71;
      sub_232200318();
      v47 = v42;
      v48 = sub_232200390();
      v49 = sub_2322012E4();
      if (os_log_type_enabled(v48, v49))
      {
        v50 = swift_slowAlloc();
        v51 = swift_slowAlloc();
        v75 = v51;
        *(_DWORD *)v50 = 136446722;
        v74 = sub_232013174(v45, v44, &v75);
        sub_232201710();
        *(_WORD *)(v50 + 12) = 2080;
        swift_getObjectType();
        v52 = sub_232201BF0();
        v74 = sub_232013174(v52, v53, &v75);
        sub_232201710();

        swift_bridgeObjectRelease();
        *(_WORD *)(v50 + 22) = 2080;
        sub_232003E9C(0, v70);
        v54 = sub_232201BF0();
        v74 = sub_232013174(v54, v55, &v75);
        sub_232201710();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_231FFB000, v48, v49, "[%{public}s] Current value payload is of unknown type %s instead of %s", (uint8_t *)v50, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x2348FF468](v51, -1, -1);
        MEMORY[0x2348FF468](v50, -1, -1);

        (*(void (**)(char *, uint64_t))(v66 + 8))(v71, v67);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v66 + 8))(v46, v67);
      }
      sub_232000300();
      swift_allocError();
      swift_willThrow();

    }
  }
}

uint64_t sub_2320851F8(uint64_t a1, uint64_t a2)
{
  return sub_232085364(a1, a2, 0xD000000000000020);
}

uint64_t sub_232085214(uint64_t a1, uint64_t a2)
{
  return sub_232085364(a1, a2, 0xD000000000000029);
}

uint64_t sub_232085230(uint64_t a1, uint64_t a2)
{
  return sub_232085364(a1, a2, 0xD00000000000002CLL);
}

uint64_t sub_23208524C(uint64_t a1, uint64_t a2)
{
  return sub_232085364(a1, a2, 0xD000000000000031);
}

uint64_t sub_232085268(uint64_t a1, uint64_t a2)
{
  return sub_232085364(a1, a2, 0xD000000000000022);
}

uint64_t sub_232085284(uint64_t a1, uint64_t a2)
{
  return sub_232085364(a1, a2, 0xD000000000000024);
}

uint64_t sub_2320852A0(uint64_t a1, uint64_t a2)
{
  return sub_232085364(a1, a2, 0xD000000000000029);
}

uint64_t sub_2320852BC(uint64_t a1, uint64_t a2)
{
  return sub_232085364(a1, a2, 0xD00000000000002CLL);
}

uint64_t sub_2320852D8(uint64_t a1, uint64_t a2)
{
  return sub_232085364(a1, a2, 0xD00000000000002CLL);
}

uint64_t sub_2320852F4(uint64_t a1, uint64_t a2)
{
  return sub_232085364(a1, a2, 0xD00000000000002ELL);
}

uint64_t sub_232085310(uint64_t a1, uint64_t a2)
{
  return sub_232085364(a1, a2, 0xD000000000000030);
}

uint64_t sub_23208532C(uint64_t a1, uint64_t a2)
{
  return sub_232085364(a1, a2, 0xD000000000000039);
}

uint64_t sub_232085348(uint64_t a1, uint64_t a2)
{
  return sub_232085364(a1, a2, 0xD00000000000002ELL);
}

uint64_t sub_232085364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v4;

  sub_23220189C();
  swift_bridgeObjectRelease();
  v4 = (void *)sub_2322011C4();
  sub_2321FE1AC();

  sub_232200F48();
  swift_bridgeObjectRelease();
  sub_232200F48();
  sub_232200F48();
  swift_bridgeObjectRelease();
  return a3;
}

void sub_232085458(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  id v100;
  void *v101;
  void *v102;
  void (*v103)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  char *v108;
  NSObject *v109;
  os_log_type_t v110;
  int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  id v117;
  uint64_t v118;
  unint64_t v119;
  unint64_t v120;
  void *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t *v130;
  int v131;
  void *v132;
  id v133;
  uint64_t v134;
  void *v135;
  unsigned int v136;
  id v137;
  void *v138;
  id v139;
  id v140;
  _BYTE *v141;
  id v142;
  void *v143;
  unsigned int v144;
  id v145;
  void *v146;
  id v147;
  void (*v148)(uint64_t);
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  int v153;
  void **v154;
  void *v155;
  void *v156;
  id *inited;
  void *v158;
  id v159;
  id v160;
  id v161;
  id v162;
  id v163;
  void *v164;
  uint64_t v165;
  void (*v166)(uint64_t);
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t *v171;
  void *v172;
  void *v173;
  id *v174;
  void *v175;
  id v176;
  id v177;
  id v178;
  id v179;
  void *v180;
  uint64_t v181;
  void (*v182)(uint64_t);
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  int v187;
  _QWORD *v188;
  int v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  void *v197;
  void *v198;
  id *v199;
  void *v200;
  id v201;
  id v202;
  id v203;
  id v204;
  void *v205;
  void *v206;
  void *v207;
  void (*v208)(uint64_t);
  uint64_t v209;
  void *v210;
  int v211;
  char v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  void (*v216)(uint64_t);
  uint64_t v217;
  char *v218;
  void *v219;
  int v220;
  char *v221;
  uint64_t *v222;
  uint64_t v223;
  uint64_t v224;
  NSObject *v225;
  os_log_type_t v226;
  _BOOL4 v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  unint64_t v231;
  id v232;
  uint64_t v233;
  unint64_t v234;
  unint64_t v235;
  void *v236;
  void (*v237)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v238;
  uint64_t *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  void (*v243)(uint64_t);
  uint64_t v244;
  void *v245;
  void *v246;
  int v247;
  void *v248;
  char *v249;
  uint64_t v250;
  uint64_t v251;
  NSObject *v252;
  os_log_type_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  unint64_t v257;
  uint64_t v258;
  id v259;
  uint64_t v260;
  unint64_t v261;
  unint64_t v262;
  void *v263;
  uint64_t v264;
  uint64_t v265;
  void (*v266)(uint64_t, uint64_t, uint64_t, uint64_t);
  void *v267;
  char v268;
  uint64_t v269;
  uint32_t *p_align;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  char *v274;
  uint64_t v275;
  uint64_t v276;
  id v277;
  char *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  id v283;
  id v284;
  void *v285;
  char *v286;
  uint64_t v287;
  _QWORD *v288;
  id v289;
  id v290;
  uint64_t v291;
  uint64_t v292;
  void (*v293)(uint64_t);
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t *v298;
  _BYTE *v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  void (*v303)(uint64_t);
  _BYTE *v304;
  void (*v305)(uint64_t);
  void *v306;
  NSObject *v307;
  id v308;
  id v309;
  char *v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  char *v314;
  id v315;
  uint64_t v316;
  void (*v317)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v318;
  void *v319;
  char *v320;
  void *v321;
  NSObject *v322;
  uint64_t v323;
  uint64_t v324;
  void *v325;
  _QWORD *v326;
  uint64_t v327;
  void (*v328)(char *, uint64_t);
  id v329;
  void (*v330)(uint64_t, uint64_t, uint64_t, id);
  char *v331;
  id v332;
  uint64_t v333;
  uint64_t (*v334)(void);
  void (*v335)(uint64_t);
  id v336;
  _BYTE *v337;
  void (*v338)(char *, uint64_t);
  uint64_t v339;
  void (*v340)(uint64_t);
  uint64_t v341;
  uint64_t v342;
  void (*v343)(uint64_t, uint64_t, uint64_t, id);
  id v344;
  uint64_t v345;
  char *v346;
  char *v347;
  char *v348;
  uint64_t *v349;
  uint64_t v350;
  char *v351;
  char *v352;
  char *v353;
  char *v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  char *v360;
  uint64_t v361;
  char *v362;
  char *v363;
  char *v364;
  char *v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  char *v371;
  uint64_t *v372;
  uint64_t v373;
  uint64_t v374;
  char *v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t *v378;
  char *v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  char *v384;
  char *v385;
  uint64_t v386;
  char *v387;
  char *v388;
  uint64_t v389;
  uint64_t v390;
  char *v391;
  uint64_t v392;
  uint64_t v393;
  char *v394;
  _QWORD *v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  char *v402;
  char *v403;
  uint64_t v404;
  uint64_t *v405;
  uint64_t v406;
  uint64_t v407;
  id v408;
  id v409;
  void *v410;
  void *v411;
  uint64_t v412[2];
  uint64_t v413;

  v404 = a3;
  v358 = a2;
  v411 = a1;
  v405 = a4;
  v5 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v341 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, qword_2541B78E0, (void (*)(uint64_t))MEMORY[0x24BE47DF8]);
  MEMORY[0x24BDAC7A8](v8);
  v403 = (char *)&v341 - v9;
  sub_2320002B4(0, &qword_2541B2368, (void (*)(uint64_t))MEMORY[0x24BE445A8]);
  MEMORY[0x24BDAC7A8](v10);
  v364 = (char *)&v341 - v11;
  sub_2320002B4(0, &qword_2541B2930, (void (*)(uint64_t))MEMORY[0x24BE42FE0]);
  MEMORY[0x24BDAC7A8](v12);
  v402 = (char *)&v341 - v13;
  v14 = (void *)sub_2321FD8B8();
  v15 = (void (*)(uint64_t))MEMORY[0x24BDCB878];
  v408 = v14;
  v407 = *((_QWORD *)v14 - 1);
  MEMORY[0x24BDAC7A8](v14);
  v347 = (char *)&v341 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v357 = sub_2321FDDD4();
  v356 = *(_QWORD *)(v357 - 8);
  MEMORY[0x24BDAC7A8](v357);
  v354 = (char *)&v341 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, (unint64_t *)&qword_2541B2868, (void (*)(uint64_t))sub_23200021C);
  MEMORY[0x24BDAC7A8](v18);
  v353 = (char *)&v341 - v19;
  v355 = sub_2321FDC6C();
  v367 = *(_QWORD *)(v355 - 8);
  v20 = MEMORY[0x24BDAC7A8](v355);
  v346 = (char *)&v341 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v365 = (char *)&v341 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v352 = (char *)&v341 - v24;
  sub_2320002B4(0, (unint64_t *)&unk_2541B29B0, (void (*)(uint64_t))MEMORY[0x24BE43C58]);
  MEMORY[0x24BDAC7A8](v25);
  v386 = (uint64_t)&v341 - v26;
  v27 = sub_2321FD9F0();
  v28 = (void (*)(uint64_t))MEMORY[0x24BDCC5A8];
  v397 = v27;
  v396 = *(_QWORD *)(v27 - 8);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v363 = (char *)&v341 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29);
  v385 = (char *)&v341 - v31;
  v32 = type metadata accessor for QuantityValueSnidgetFeedItemModelProvider();
  v33 = MEMORY[0x24BDAC7A8](v32);
  v379 = (char *)&v341 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x24BDAC7A8](v33);
  v37 = (uint64_t *)((char *)&v341 - v36);
  v38 = MEMORY[0x24BDAC7A8](v35);
  v366 = (uint64_t)&v341 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  v378 = (uint64_t *)((char *)&v341 - v41);
  v42 = MEMORY[0x24BDAC7A8](v40);
  v350 = (uint64_t)&v341 - v43;
  MEMORY[0x24BDAC7A8](v42);
  v349 = (uint64_t *)((char *)&v341 - v44);
  v390 = sub_23220039C();
  v389 = *(_QWORD *)(v390 - 8);
  v45 = MEMORY[0x24BDAC7A8](v390);
  v47 = (char *)&v341 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = MEMORY[0x24BDAC7A8](v45);
  v375 = (char *)&v341 - v49;
  MEMORY[0x24BDAC7A8](v48);
  v351 = (char *)&v341 - v50;
  v374 = sub_232200180();
  v373 = *(_QWORD *)(v374 - 8);
  MEMORY[0x24BDAC7A8](v374);
  v371 = (char *)&v341 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232087FDC();
  v361 = v52;
  MEMORY[0x24BDAC7A8](v52);
  v372 = (uint64_t *)((char *)&v341 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2320002B4(0, &qword_2541B2A30, (void (*)(uint64_t))MEMORY[0x24BE4ABE8]);
  MEMORY[0x24BDAC7A8](v54);
  v370 = (uint64_t)&v341 - v55;
  v56 = sub_2322000D8();
  v57 = (void (*)(uint64_t))MEMORY[0x24BE4B918];
  v383 = v56;
  v382 = *(_QWORD *)(v56 - 8);
  v58 = MEMORY[0x24BDAC7A8](v56);
  v348 = (char *)&v341 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v58);
  v376 = (uint64_t)&v341 - v60;
  v381 = sub_232200024();
  v380 = *(_QWORD *)(v381 - 8);
  MEMORY[0x24BDAC7A8](v381);
  v388 = (char *)&v341 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, &qword_2541B7F60, v15);
  v63 = MEMORY[0x24BDAC7A8](v62);
  v406 = (uint64_t)&v341 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = MEMORY[0x24BDAC7A8](v63);
  v368 = (uint64_t)&v341 - v66;
  v67 = MEMORY[0x24BDAC7A8](v65);
  v69 = (char *)&v341 - v68;
  MEMORY[0x24BDAC7A8](v67);
  v392 = (uint64_t)&v341 - v70;
  sub_2320002B4(0, &qword_2541B2AD8, v57);
  v72 = MEMORY[0x24BDAC7A8](v71);
  v359 = (uint64_t)&v341 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = MEMORY[0x24BDAC7A8](v72);
  v369 = (uint64_t)&v341 - v75;
  MEMORY[0x24BDAC7A8](v74);
  v393 = (uint64_t)&v341 - v76;
  sub_2320002B4(0, (unint64_t *)&qword_2541B2A70, (void (*)(uint64_t))MEMORY[0x24BE4ADA0]);
  MEMORY[0x24BDAC7A8](v77);
  v79 = (char *)&v341 - v78;
  v398 = sub_2321FFD78();
  v400 = *(_QWORD *)(v398 - 8);
  v80 = MEMORY[0x24BDAC7A8](v398);
  v387 = (char *)&v341 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v80);
  v394 = (char *)&v341 - v82;
  sub_2320002B4(0, (unint64_t *)&qword_2541B2838, v28);
  v84 = MEMORY[0x24BDAC7A8](v83);
  v362 = (char *)&v341 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = MEMORY[0x24BDAC7A8](v84);
  v391 = (char *)&v341 - v87;
  v88 = MEMORY[0x24BDAC7A8](v86);
  v360 = (char *)&v341 - v89;
  v90 = MEMORY[0x24BDAC7A8](v88);
  v384 = (char *)&v341 - v91;
  v92 = MEMORY[0x24BDAC7A8](v90);
  v399 = (uint64_t)&v341 - v93;
  MEMORY[0x24BDAC7A8](v92);
  v401 = (uint64_t)&v341 - v94;
  v95 = objc_msgSend((id)objc_opt_self(), sel_sharedInstanceForHealthStore_, *v4);
  if (!v95)
  {
    __break(1u);
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  v96 = v95;
  v377 = v32;
  v97 = *(int *)(v32 + 24);
  v395 = v4;
  v98 = (uint64_t)v4 + v97;
  v99 = objc_msgSend(v95, sel_displayTypeForObjectType_, *(_QWORD *)(v98 + 16));

  v410 = v99;
  if (!v99)
  {
    sub_232000300();
    swift_allocError();
    swift_willThrow();
    return;
  }
  v345 = v98;
  v100 = v409;
  sub_232084A34(v411, 0x24BE4A4F0, 0xD000000000000029, 0x8000000232213470, &qword_2541B56B0);
  if (v100)
  {

    return;
  }
  v102 = v101;
  if (!v101)
  {
LABEL_13:
    v122 = sub_2321FE65C();
    v123 = (uint64_t)v403;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v122 - 8) + 56))(v403, 1, 1, v122);
    v124 = v406;
    (*(void (**)(uint64_t, uint64_t, uint64_t, id))(v407 + 56))(v406, 1, 1, v408);
    v125 = v404;
    swift_bridgeObjectRetain();
    sub_2320D71E8(0, v123, v125, v124, v7);
    sub_2321FF208();
    v126 = sub_2321FEF5C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v126 - 8) + 56))(v402, 1, 1, v126);
    v127 = v410;
    v128 = sub_2321FF1FC();
    sub_232000344(0);
    v130 = v405;
    sub_23200054C((uint64_t)v7, (uint64_t)v405 + *(int *)(v129 + 52), type metadata accessor for SnidgetFeedItemMetadata);

    v130[1] = 0;
    v130[2] = 0;
    *v130 = v128;
    sub_232002CEC((uint64_t)v7, type metadata accessor for SnidgetFeedItemMetadata);
    return;
  }
  if (!objc_msgSend(v101, sel_hasValue)
    || (v409 = objc_msgSend(v102, sel_value)) == 0)
  {

    goto LABEL_13;
  }
  v344 = v102;
  v103 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v396 + 56);
  v104 = v397;
  v103(v401, 1, 1, v397);
  v103(v399, 1, 1, v104);
  HKCodableSummaryCurrentValue.queryConfiguration.getter((uint64_t)v79);
  v105 = v400;
  v106 = v398;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v400 + 48))(v79, 1, v398) == 1)
  {
    sub_23200040C((uint64_t)v79, (unint64_t *)&qword_2541B2A70, (void (*)(uint64_t))MEMORY[0x24BE4ADA0]);
    sub_232200318();
    v107 = v395;
    sub_23200054C((uint64_t)v395, (uint64_t)v37, (uint64_t (*)(_QWORD))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider);
    v108 = v379;
    sub_23200054C((uint64_t)v107, (uint64_t)v379, (uint64_t (*)(_QWORD))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider);
    v109 = sub_232200390();
    v110 = sub_2322012E4();
    v111 = v110;
    if (os_log_type_enabled(v109, v110))
    {
      v112 = swift_slowAlloc();
      LODWORD(v408) = v111;
      v113 = v112;
      v411 = (void *)swift_slowAlloc();
      v412[0] = (uint64_t)v411;
      *(_DWORD *)v113 = 136315394;
      v114 = v377;
      v115 = sub_232085364(*v37, *((unsigned __int8 *)v37 + *(int *)(v377 + 24) + 8), 0xD00000000000002CLL);
      v413 = sub_232013174(v115, v116, v412);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC((uint64_t)v37, (uint64_t (*)(_QWORD))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider);
      *(_WORD *)(v113 + 12) = 2080;
      v117 = objc_msgSend(*(id *)&v108[*(int *)(v114 + 24) + 16], sel_sensitiveLoggingIdentifier);
      v118 = sub_232200EC4();
      v120 = v119;

      v413 = sub_232013174(v118, v120, v412);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC((uint64_t)v108, (uint64_t (*)(_QWORD))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider);
      _os_log_impl(&dword_231FFB000, v109, (os_log_type_t)v408, "[%s]: unreadable query configuration quantity type: %s", (uint8_t *)v113, 0x16u);
      v121 = v411;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v121, -1, -1);
      MEMORY[0x2348FF468](v113, -1, -1);
    }
    else
    {
      sub_232002CEC((uint64_t)v37, (uint64_t (*)(_QWORD))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider);
      sub_232002CEC((uint64_t)v108, (uint64_t (*)(_QWORD))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider);
    }

    (*(void (**)(char *, uint64_t))(v389 + 8))(v47, v390);
    v140 = v409;
    sub_232005578();
    swift_allocError();
    *v141 = 0;
    swift_willThrow();

LABEL_65:
    v305 = (void (*)(uint64_t))MEMORY[0x24BDCC5A8];
    sub_23200040C(v399, (unint64_t *)&qword_2541B2838, (void (*)(uint64_t))MEMORY[0x24BDCC5A8]);
    sub_23200040C(v401, (unint64_t *)&qword_2541B2838, v305);
    return;
  }
  v379 = (char *)v103;
  (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v394, v79, v106);
  sub_2322011AC();
  v131 = 1;
  v343 = *(void (**)(uint64_t, uint64_t, uint64_t, id))(v407 + 56);
  v343(v392, 1, 1, v408);
  v132 = v411;
  if (!objc_msgSend(v411, sel_hasSupplementaryValue))
  {
    v139 = 0;
    v134 = (uint64_t)v391;
    goto LABEL_28;
  }
  v133 = objc_msgSend(v132, sel_supplementaryValue);
  v134 = (uint64_t)v391;
  if (!v133)
    goto LABEL_75;
  v135 = v133;
  v136 = objc_msgSend(v133, sel_hasDataCount);

  if (v136)
  {
    v137 = objc_msgSend(v411, sel_supplementaryValue);
    if (!v137)
    {
LABEL_77:
      __break(1u);
      goto LABEL_78;
    }
    v138 = v137;
    v139 = objc_msgSend(v137, sel_dataCount);

  }
  else
  {
    v139 = 0;
  }
  v142 = objc_msgSend(v411, sel_supplementaryValue);
  if (!v142)
  {
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  v143 = v142;
  v131 = v136 ^ 1;
  v144 = objc_msgSend(v142, sel_hasDateInterval);

  if (v144)
  {
    v145 = objc_msgSend(v411, sel_supplementaryValue);
    if (v145)
    {
      v146 = v145;
      v147 = objc_msgSend(v145, sel_dateInterval);

      if (v147)
      {
        sub_232201500();

        v148 = (void (*)(uint64_t))MEMORY[0x24BDCB878];
        v149 = v392;
        sub_23200040C(v392, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
        v343((uint64_t)v69, 0, 1, v408);
        sub_23208806C((uint64_t)v69, v149, &qword_2541B7F60, v148);
        goto LABEL_28;
      }
LABEL_79:
      __break(1u);
      return;
    }
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
LABEL_28:
  v150 = v400;
  v151 = v387;
  v152 = v398;
  (*(void (**)(char *, char *, uint64_t))(v400 + 16))(v387, v394, v398);
  v153 = (*(uint64_t (**)(char *, uint64_t))(v150 + 88))(v151, v152);
  v154 = (void **)v395;
  if (v153 == *MEMORY[0x24BE4AD28])
  {
    (*(void (**)(char *, uint64_t))(v400 + 96))(v151, v152);
    (*(void (**)(char *, char *, uint64_t))(v380 + 32))(v388, v151, v381);
    v155 = *v154;
    v156 = *(void **)(v345 + *(int *)(type metadata accessor for SnidgetFeedItemGeneratorRequest(0) + 32));
    type metadata accessor for StatisticsSnidgetStringBuilder();
    inited = (id *)swift_initStackObject();
    inited[2] = v155;
    v158 = (void *)objc_opt_self();
    v159 = v156;
    v160 = v155;
    v161 = objc_msgSend(v158, sel_sharedInstanceForHealthStore_, v160);
    inited[4] = v161;
    if (!v156)
    {
      v162 = v161;
      v159 = objc_msgSend(v162, sel_createHKUnitPreferenceController);

    }
    v163 = v409;
    v411 = 0;

    inited[3] = v159;
    v164 = (void *)sub_232201470();
    v165 = (uint64_t)v384;
    StatisticsSnidgetStringBuilder.makeStatisticsQueryPrimaryAttributedString(displayType:quantity:)(v410, v164, (uint64_t)v384);

    v166 = (void (*)(uint64_t))MEMORY[0x24BDCC5A8];
    v167 = v401;
    sub_23200040C(v401, (unint64_t *)&qword_2541B2838, (void (*)(uint64_t))MEMORY[0x24BDCC5A8]);
    sub_23208806C(v165, v167, (unint64_t *)&qword_2541B2838, v166);
    v168 = v369;
    sub_2320004AC(v393, v369, &qword_2541B2AD8, (void (*)(uint64_t))MEMORY[0x24BE4B918]);
    v169 = v382;
    v170 = v383;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v382 + 48))(v168, 1, v383) == 1)
    {
      sub_23200040C(v168, &qword_2541B2AD8, (void (*)(uint64_t))MEMORY[0x24BE4B918]);
      v171 = v378;
      v134 = (uint64_t)v391;
    }
    else
    {
      v189 = v131;
      v190 = (uint64_t)v139;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v169 + 32))(v376, v168, v170);
      v191 = sub_2321FFFF4();
      v192 = *(_QWORD *)(v191 + 16);
      v193 = sub_2321FFC94();
      v194 = *(_QWORD *)(v193 - 8);
      if (v192)
      {
        v195 = v370;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v194 + 16))(v370, v191 + ((*(unsigned __int8 *)(v194 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v194 + 80)), v193);
        v196 = 0;
      }
      else
      {
        v196 = 1;
        v195 = v370;
      }
      v237 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v194 + 56);
      v238 = 1;
      v237(v195, v196, 1, v193);
      swift_bridgeObjectRelease();
      sub_232200000();
      v239 = v372;
      *v372 = v190;
      *((_BYTE *)v239 + 8) = v189;
      v240 = (uint64_t)v239 + *(int *)(v361 + 48);
      sub_2320004AC(v392, v240, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
      sub_2321FCC3C(v376, v195, v240, v190, v189);
      v134 = (uint64_t)v391;
      if (v241)
      {
        v242 = (uint64_t)v360;
        SnidgetStringBuilder.makeSupplementaryAttributedString(localizedString:)();
        swift_bridgeObjectRelease();
        v238 = 0;
        v171 = v378;
      }
      else
      {
        v171 = v378;
        v242 = (uint64_t)v360;
      }
      sub_232002CEC((uint64_t)v372, (uint64_t (*)(_QWORD))sub_232087FDC);
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v379)(v242, v238, 1, v397);
      sub_23200040C(v370, &qword_2541B2A30, (void (*)(uint64_t))MEMORY[0x24BE4ABE8]);
      (*(void (**)(uint64_t, uint64_t))(v382 + 8))(v376, v383);
      v243 = (void (*)(uint64_t))MEMORY[0x24BDCC5A8];
      v244 = v399;
      sub_23200040C(v399, (unint64_t *)&qword_2541B2838, (void (*)(uint64_t))MEMORY[0x24BDCC5A8]);
      sub_23208806C(v242, v244, (unint64_t *)&qword_2541B2838, v243);
    }
    v245 = (void *)sub_232201470();
    v246 = v410;
    v383 = SnidgetStringBuilder.makeQuantityFormattedDouble(displayType:quantity:)(v410, v245);
    LODWORD(v382) = v247;

    v248 = (void *)sub_232201470();
    v212 = StatisticsSnidgetStringBuilder.hasIndeterminateBaseline(displayType:quantity:)(v246, v248);

    swift_setDeallocating();
    (*(void (**)(char *, uint64_t))(v380 + 8))(v388, v381);
    LODWORD(v388) = 0;
    v213 = v397;
    v214 = v396;
    v188 = v395;
    goto LABEL_54;
  }
  if (v153 == *MEMORY[0x24BE4AD70])
  {
    v411 = 0;
    (*(void (**)(char *, uint64_t))(v400 + 96))(v151, v152);
    (*(void (**)(char *, char *, uint64_t))(v373 + 32))(v371, v151, v374);
    v172 = *v154;
    v173 = *(void **)(v345 + *(int *)(type metadata accessor for SnidgetFeedItemGeneratorRequest(0) + 32));
    type metadata accessor for MostRecentSampleSnidgetStringBuilder();
    v174 = (id *)swift_initStackObject();
    v174[2] = v172;
    v175 = (void *)objc_opt_self();
    v176 = v173;
    v177 = v172;
    v178 = objc_msgSend(v175, sel_sharedInstanceForHealthStore_, v177);
    v174[4] = v178;
    v342 = (uint64_t)v139;
    if (!v173)
    {
      v179 = v178;
      v176 = objc_msgSend(v179, sel_createHKUnitPreferenceController);

    }
    v174[3] = v176;
    v163 = v409;
    v180 = (void *)sub_232201470();
    v181 = (uint64_t)v384;
    MostRecentSampleSnidgetStringBuilder.makeMostRecentSampleQuantityPrimaryAttributedString(displayType:quantity:)(v410, v180, (uint64_t)v384);

    v182 = (void (*)(uint64_t))MEMORY[0x24BDCC5A8];
    v183 = v401;
    sub_23200040C(v401, (unint64_t *)&qword_2541B2838, (void (*)(uint64_t))MEMORY[0x24BDCC5A8]);
    sub_23208806C(v181, v183, (unint64_t *)&qword_2541B2838, v182);
    v184 = v359;
    sub_2320004AC(v393, v359, &qword_2541B2AD8, (void (*)(uint64_t))MEMORY[0x24BE4B918]);
    v185 = v382;
    v186 = v383;
    v187 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v382 + 48))(v184, 1, v383);
    v188 = v395;
    if (v187 == 1)
    {
      sub_23200040C(v184, &qword_2541B2AD8, (void (*)(uint64_t))MEMORY[0x24BE4B918]);
    }
    else
    {
      v215 = (uint64_t)v348;
      (*(void (**)(char *, uint64_t, uint64_t))(v185 + 32))(v348, v184, v186);
      MostRecentSampleSnidgetStringBuilder.makeMostRecentSampleSupplementaryString(supplementaryLabelConfiguration:supplementaryLabelInfo:)(v215, v342, v131, v392, v181);
      (*(void (**)(uint64_t, uint64_t))(v185 + 8))(v215, v186);
      v216 = (void (*)(uint64_t))MEMORY[0x24BDCC5A8];
      v217 = v399;
      sub_23200040C(v399, (unint64_t *)&qword_2541B2838, (void (*)(uint64_t))MEMORY[0x24BDCC5A8]);
      sub_23208806C(v181, v217, (unint64_t *)&qword_2541B2838, v216);
    }
    v213 = v397;
    v214 = v396;
    v171 = v378;
    v218 = v371;
    LODWORD(v388) = sub_232200168();
    v219 = (void *)sub_232201470();
    v383 = SnidgetStringBuilder.makeQuantityFormattedDouble(displayType:quantity:)(v410, v219);
    LODWORD(v382) = v220;

    swift_setDeallocating();
    (*(void (**)(char *, uint64_t))(v373 + 8))(v218, v374);
    v212 = 0;
    v134 = (uint64_t)v391;
    goto LABEL_54;
  }
  if (v153 == *MEMORY[0x24BE4AD30])
  {
    v411 = 0;
    v197 = (void *)*v395;
    v198 = *(void **)(v345 + *(int *)(type metadata accessor for SnidgetFeedItemGeneratorRequest(0) + 32));
    type metadata accessor for SnidgetStringBuilder();
    v199 = (id *)swift_initStackObject();
    v199[2] = v197;
    v200 = (void *)objc_opt_self();
    v201 = v198;
    v202 = v197;
    v203 = objc_msgSend(v200, sel_sharedInstanceForHealthStore_, v202);
    v199[4] = v203;
    v163 = v409;
    if (!v198)
    {
      v204 = v203;
      v201 = objc_msgSend(v204, sel_createHKUnitPreferenceController);

    }
    v205 = v384;

    v199[3] = v201;
    v206 = (void *)sub_232201470();
    v207 = v410;
    SnidgetStringBuilder.makeQuantityPrimaryAttributedString(displayType:quantity:)(v410, v206, v205);

    v208 = (void (*)(uint64_t))MEMORY[0x24BDCC5A8];
    v209 = v401;
    sub_23200040C(v401, (unint64_t *)&qword_2541B2838, (void (*)(uint64_t))MEMORY[0x24BDCC5A8]);
    sub_23208806C((uint64_t)v205, v209, (unint64_t *)&qword_2541B2838, v208);
    v210 = (void *)sub_232201470();
    v383 = SnidgetStringBuilder.makeQuantityFormattedDouble(displayType:quantity:)(v207, v210);
    LODWORD(v382) = v211;
    swift_setDeallocating();

    (*(void (**)(char *, uint64_t))(v400 + 8))(v387, v398);
    LODWORD(v388) = 0;
    v212 = 0;
    v213 = v397;
    v214 = v396;
    v188 = v395;
    v171 = v378;
LABEL_54:
    sub_2320004AC(v401, v134, (unint64_t *)&qword_2541B2838, (void (*)(uint64_t))MEMORY[0x24BDCC5A8]);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v214 + 48))(v134, 1, v213) == 1)
    {
      sub_23200040C(v134, (unint64_t *)&qword_2541B2838, (void (*)(uint64_t))MEMORY[0x24BDCC5A8]);
      v249 = v375;
      sub_232200318();
      sub_23200054C((uint64_t)v188, (uint64_t)v171, (uint64_t (*)(_QWORD))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider);
      v250 = (uint64_t)v188;
      v251 = v366;
      sub_23200054C(v250, v366, (uint64_t (*)(_QWORD))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider);
      v252 = sub_232200390();
      v253 = sub_2322012E4();
      if (os_log_type_enabled(v252, v253))
      {
        v254 = swift_slowAlloc();
        v411 = (void *)swift_slowAlloc();
        v412[0] = (uint64_t)v411;
        *(_DWORD *)v254 = 136315394;
        v255 = v377;
        v256 = sub_232085364(*v171, *((unsigned __int8 *)v171 + *(int *)(v377 + 24) + 8), 0xD00000000000002CLL);
        v413 = sub_232013174(v256, v257, v412);
        sub_232201710();
        swift_bridgeObjectRelease();
        sub_232002CEC((uint64_t)v171, (uint64_t (*)(_QWORD))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider);
        *(_WORD *)(v254 + 12) = 2080;
        v258 = v251;
        v259 = objc_msgSend(*(id *)(v251 + *(int *)(v255 + 24) + 16), sel_sensitiveLoggingIdentifier);
        v260 = sub_232200EC4();
        v262 = v261;

        v163 = v409;
        v413 = sub_232013174(v260, v262, v412);
        sub_232201710();
        swift_bridgeObjectRelease();
        sub_232002CEC(v258, (uint64_t (*)(_QWORD))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider);
        _os_log_impl(&dword_231FFB000, v252, v253, "[%s]: unable to create primary string for: %s", (uint8_t *)v254, 0x16u);
        v263 = v411;
        swift_arrayDestroy();
        MEMORY[0x2348FF468](v263, -1, -1);
        MEMORY[0x2348FF468](v254, -1, -1);

        (*(void (**)(char *, uint64_t))(v389 + 8))(v375, v390);
      }
      else
      {
        sub_232002CEC((uint64_t)v171, (uint64_t (*)(_QWORD))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider);
        sub_232002CEC(v251, (uint64_t (*)(_QWORD))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider);

        (*(void (**)(char *, uint64_t))(v389 + 8))(v249, v390);
      }
      sub_232005578();
      swift_allocError();
      *v304 = 0;
      swift_willThrow();

      sub_23200040C(v392, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
      sub_23200040C(v393, &qword_2541B2AD8, (void (*)(uint64_t))MEMORY[0x24BE4B918]);
      (*(void (**)(char *, uint64_t))(v400 + 8))(v394, v398);
      goto LABEL_65;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v214 + 32))(v385, v134, v213);
    v264 = sub_2321FF298();
    v265 = *(_QWORD *)(v264 - 8);
    v266 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v265 + 56);
    v266(v386, 1, 1, v264);
    sub_232003E9C(0, qword_2541B74A8);
    sub_232003E9C(0, (unint64_t *)&qword_2541B0C28);
    v267 = (void *)MEMORY[0x2348FE4B4]((id)*MEMORY[0x24BDD3398]);
    v268 = sub_2322016A4();

    if ((v268 & 1) != 0)
    {
      v269 = v386;
      sub_23200040C(v386, (unint64_t *)&unk_2541B29B0, (void (*)(uint64_t))MEMORY[0x24BE43C58]);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v265 + 104))(v269, *MEMORY[0x24BE43C40], v264);
      v266(v269, 0, 1, v264);
    }
    p_align = &stru_25010DFE8.align;
    v271 = v367;
    if ((v212 & 1) != 0)
    {
      v272 = v368;
      v343(v368, 1, 1, v408);
      v395 = 0;
      v273 = v396;
    }
    else
    {
      v306 = (void *)*v395;
      v307 = v395[1];
      v308 = v344;
      objc_msgSend(v344, sel_dateData);
      v309 = (id)HKDecodeDateForValue();
      v310 = v352;
      sub_2321FDC30();

      sub_23200021C();
      v312 = v311;
      v313 = (uint64_t)v353;
      v314 = &v353[*(int *)(v311 + 48)];
      objc_msgSend(v308, sel_dateData);
      v315 = (id)HKDecodeDateForValue();
      sub_2321FDC30();

      v316 = v355;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v271 + 56))(v313, 0, 1, v355);
      *(_QWORD *)v314 = v383;
      v314[8] = v382 & 1;
      v317 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v312 - 8) + 56);
      v318 = v312;
      v319 = v310;
      v317(v313, 0, 1, v318);
      v320 = v354;
      sub_2321FDDA4();
      v321 = v306;
      v322 = v307;
      v323 = v313;
      v324 = v386;
      v325 = v411;
      v326 = sub_2321234DC(v321, v322, v345, v358, v319, v313, v386, 0);
      v327 = v400;
      v273 = v396;
      v411 = v325;
      if (v325)
      {

        (*(void (**)(char *, uint64_t))(v356 + 8))(v320, v357);
        sub_23200040C(v323, (unint64_t *)&qword_2541B2868, (void (*)(uint64_t))sub_23200021C);
        (*(void (**)(void *, uint64_t))(v271 + 8))(v319, v316);
        sub_23200040C(v324, (unint64_t *)&unk_2541B29B0, (void (*)(uint64_t))MEMORY[0x24BE43C58]);
        (*(void (**)(char *, uint64_t))(v273 + 8))(v385, v397);
        sub_23200040C(v392, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
        sub_23200040C(v393, &qword_2541B2AD8, (void (*)(uint64_t))MEMORY[0x24BE4B918]);
        (*(void (**)(char *, uint64_t))(v327 + 8))(v394, v398);
        v303 = (void (*)(uint64_t))MEMORY[0x24BDCC5A8];
        v302 = v399;
        goto LABEL_68;
      }
      v328 = *(void (**)(char *, uint64_t))(v356 + 8);
      v395 = v326;
      v328(v320, v357);
      sub_23200040C(v323, (unint64_t *)&qword_2541B2868, (void (*)(uint64_t))sub_23200021C);
      (*(void (**)(void *, uint64_t))(v271 + 8))(v319, v316);
      v272 = v368;
      v329 = v408;
      v330 = v343;
      v343(v368, 1, 1, v408);
      if (!v395)
      {
        v395 = 0;
        v274 = v379;
        p_align = (_DWORD *)(&stru_25010DFE8 + 24);
        goto LABEL_62;
      }
      swift_retain();
      v331 = v347;
      sub_2321FF280();
      sub_2321FD894();
      (*(void (**)(char *, id))(v407 + 8))(v331, v329);
      objc_msgSend(v344, sel_dateData);
      v332 = (id)HKDecodeDateForValue();
      sub_2321FDC30();

      v333 = v406;
      sub_2321FD87C();
      swift_release();
      v334 = MEMORY[0x24BDCB878];
      sub_23200040C(v368, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
      v330(v333, 0, 1, v329);
      p_align = &stru_25010DFE8.align;
      v335 = (void (*)(uint64_t))v334;
      v272 = v368;
      sub_23208806C(v333, v368, &qword_2541B7F60, v335);
    }
    v274 = v379;
LABEL_62:
    sub_2321FF208();
    sub_232000448();
    v276 = *(int *)(v275 + 48);
    v408 = v410;
    objc_msgSend(v344, *((SEL *)p_align + 165));
    v277 = (id)HKDecodeDateForValue();
    v278 = v402;
    sub_2321FDC30();

    v278[v276] = v388 & 1;
    v279 = *MEMORY[0x24BE42FD8];
    v280 = sub_2321FEF5C();
    v281 = *(_QWORD *)(v280 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v281 + 104))(v278, v279, v280);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v281 + 56))(v278, 0, 1, v280);
    v410 = (void *)sub_2321FF1FC();
    sub_2320004AC(v399, (uint64_t)v384, (unint64_t *)&qword_2541B2838, (void (*)(uint64_t))MEMORY[0x24BDCC5A8]);
    v282 = v397;
    (*(void (**)(char *, char *, uint64_t))(v273 + 16))(v363, v385, v397);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v274)(v362, 1, 1, v282);
    v412[0] = 0x5F74656764696E53;
    v412[1] = 0xE800000000000000;
    v283 = *(id *)(v345 + 16);
    v284 = objc_msgSend(v283, sel_description);
    sub_232200EC4();

    sub_232200F48();
    swift_bridgeObjectRelease();
    v285 = (void *)sub_232201470();
    objc_msgSend(v285, sel__value);

    v286 = v364;
    sub_2321FF598();
    swift_bridgeObjectRelease();
    v287 = sub_2321FF5A4();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v287 - 8) + 56))(v286, 0, 1, v287);
    sub_2321FF6C4();
    swift_allocObject();
    v407 = sub_2321FF6B8();
    v288 = v395;
    swift_retain();
    v289 = v344;
    objc_msgSend(v344, sel_dateData);
    v290 = (id)HKDecodeDateForValue();
    sub_2321FDC30();

    v291 = (uint64_t)v403;
    sub_2321FE62C();
    v292 = sub_2321FE65C();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v292 - 8) + 56))(v291, 0, 1, v292);
    v293 = (void (*)(uint64_t))MEMORY[0x24BDCB878];
    v294 = v272;
    v295 = v272;
    v296 = v406;
    sub_2320004AC(v294, v406, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
    sub_232000344(0);
    v298 = v405;
    v299 = (char *)v405 + *(int *)(v297 + 52);
    v300 = v404;
    swift_bridgeObjectRetain();
    sub_2320D71E8(1, v291, v300, v296, v299);
    swift_release();

    v301 = v407;
    *v298 = (uint64_t)v410;
    v298[1] = v301;
    v298[2] = (uint64_t)v288;
    sub_23200040C(v295, &qword_2541B7F60, v293);
    sub_23200040C(v386, (unint64_t *)&unk_2541B29B0, (void (*)(uint64_t))MEMORY[0x24BE43C58]);
    (*(void (**)(char *, uint64_t))(v396 + 8))(v385, v397);
    sub_23200040C(v392, &qword_2541B7F60, v293);
    sub_23200040C(v393, &qword_2541B2AD8, (void (*)(uint64_t))MEMORY[0x24BE4B918]);
    (*(void (**)(char *, uint64_t))(v400 + 8))(v394, v398);
    v302 = v399;
    v303 = (void (*)(uint64_t))MEMORY[0x24BDCC5A8];
LABEL_68:
    sub_23200040C(v302, (unint64_t *)&qword_2541B2838, v303);
    sub_23200040C(v401, (unint64_t *)&qword_2541B2838, v303);
    return;
  }
  v221 = v351;
  sub_232200318();
  v222 = v349;
  sub_23200054C((uint64_t)v154, (uint64_t)v349, (uint64_t (*)(_QWORD))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider);
  v223 = (uint64_t)v154;
  v224 = v350;
  sub_23200054C(v223, v350, (uint64_t (*)(_QWORD))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider);
  v225 = sub_232200390();
  v226 = sub_2322012E4();
  v227 = os_log_type_enabled(v225, v226);
  v228 = v377;
  if (v227)
  {
    v229 = swift_slowAlloc();
    v411 = (void *)swift_slowAlloc();
    v412[0] = (uint64_t)v411;
    *(_DWORD *)v229 = 136315394;
    v230 = sub_232085364(*v222, *((unsigned __int8 *)v222 + *(int *)(v228 + 24) + 8), 0xD00000000000002CLL);
    v413 = sub_232013174(v230, v231, v412);
    sub_232201710();
    swift_bridgeObjectRelease();
    sub_232002CEC((uint64_t)v222, (uint64_t (*)(_QWORD))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider);
    *(_WORD *)(v229 + 12) = 2080;
    v232 = objc_msgSend(*(id *)(v224 + *(int *)(v228 + 24) + 16), sel_sensitiveLoggingIdentifier);
    v233 = sub_232200EC4();
    v235 = v234;

    v413 = sub_232013174(v233, v235, v412);
    sub_232201710();
    v151 = v387;
    swift_bridgeObjectRelease();
    sub_232002CEC(v224, (uint64_t (*)(_QWORD))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider);
    _os_log_impl(&dword_231FFB000, v225, v226, "[%s]: unsupported query configuration for quantity type: %s", (uint8_t *)v229, 0x16u);
    v236 = v411;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v236, -1, -1);
    MEMORY[0x2348FF468](v229, -1, -1);

    (*(void (**)(char *, uint64_t))(v389 + 8))(v351, v390);
  }
  else
  {
    sub_232002CEC((uint64_t)v222, (uint64_t (*)(_QWORD))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider);
    sub_232002CEC(v224, (uint64_t (*)(_QWORD))type metadata accessor for QuantityValueSnidgetFeedItemModelProvider);

    (*(void (**)(char *, uint64_t))(v389 + 8))(v221, v390);
  }
  v336 = v409;
  sub_232005578();
  swift_allocError();
  *v337 = 0;
  swift_willThrow();

  sub_23200040C(v392, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  sub_23200040C(v393, &qword_2541B2AD8, (void (*)(uint64_t))MEMORY[0x24BE4B918]);
  v338 = *(void (**)(char *, uint64_t))(v400 + 8);
  v339 = v398;
  v338(v394, v398);
  v340 = (void (*)(uint64_t))MEMORY[0x24BDCC5A8];
  sub_23200040C(v399, (unint64_t *)&qword_2541B2838, (void (*)(uint64_t))MEMORY[0x24BDCC5A8]);
  sub_23200040C(v401, (unint64_t *)&qword_2541B2838, v340);
  v338(v151, v339);
}

void sub_232087FBC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_232085458(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), a2);
}

void sub_232087FDC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2541B5578)
  {
    sub_23204617C(255, &qword_2541B5580);
    sub_2320002B4(255, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2541B5578);
  }
}

uint64_t sub_23208806C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_2320002B4(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

unint64_t sub_2320880B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B0CC8;
  if (!qword_2541B0CC8)
  {
    v1 = sub_232003E9C(255, &qword_2541B0CD0);
    result = MEMORY[0x2348FF39C](&protocol conformance descriptor for HKCodableSummaryCurrentValue, v1);
    atomic_store(result, (unint64_t *)&qword_2541B0CC8);
  }
  return result;
}

void sub_232088110(void *a1, uint64_t a2, void (*a3)(id, _QWORD), uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  void *v43;
  id v44;
  uint64_t inited;
  unint64_t v46;
  id v47;
  id v48;
  void *v49;
  _BYTE *v50;
  id v51;
  uint64_t v52;
  void (*v53)(id, _QWORD);
  uint64_t v54;
  id v55;
  _QWORD aBlock[6];

  v5 = v4;
  v9 = sub_2321FDC6C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v5 + qword_2541BF5D0;
  v14 = *(void **)(v13 + *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28));
  objc_opt_self();
  v15 = swift_dynamicCastObjCClass();
  if (v15)
  {
    v16 = v15;
    v52 = v13;
    v53 = a3;
    v54 = a4;
    v55 = v14;
    v17 = objc_msgSend(v55, sel_identifier);
    if (!v17)
    {
      sub_232200EC4();
      v17 = (id)sub_232200E94();
      swift_bridgeObjectRelease();
    }
    v18 = sub_232200EC4();
    v20 = v19;
    if (v18 != sub_232200EC4() || v20 != v21)
    {
      v23 = sub_232201ADC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v23 & 1) != 0)
        goto LABEL_16;
      v24 = sub_232200EC4();
      v26 = v25;
      if (v24 != sub_232200EC4() || v26 != v27)
      {
        v29 = sub_232201ADC();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v29 & 1) == 0)
        {
          v51 = (id)sub_232003E9C(0, (unint64_t *)&qword_2541B0C00);
          sub_2320057B8(0, (unint64_t *)&qword_2541B5860, (uint64_t (*)(uint64_t))sub_23204FB8C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
          v30 = swift_allocObject();
          *(_OWORD *)(v30 + 16) = xmmword_232210D30;
          v31 = sub_232200EC4();
          v33 = v32;
          *(_QWORD *)(v30 + 56) = MEMORY[0x24BEE0D00];
          *(_QWORD *)(v30 + 64) = sub_2320168D8();
          *(_QWORD *)(v30 + 32) = v31;
          *(_QWORD *)(v30 + 40) = v33;
          sub_2321FDBAC();
          v34 = sub_2321FDBF4();
          (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
          *(_QWORD *)(v30 + 96) = sub_232003E9C(0, &qword_2541B0D48);
          *(_QWORD *)(v30 + 104) = sub_2320887DC();
          *(_QWORD *)(v30 + 72) = v34;
          v51 = (id)sub_232201134();
          v35 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3E98]), sel_initWithSampleType_predicate_, v16, v51);
          sub_232027434();
          v36 = swift_allocObject();
          *(_OWORD *)(v36 + 16) = xmmword_232210D20;
          *(_QWORD *)(v36 + 32) = v35;
          aBlock[0] = v36;
          sub_232201050();
          v37 = (_QWORD *)swift_allocObject();
          v38 = v54;
          v37[2] = v53;
          v37[3] = v38;
          v37[4] = v5;
          v37[5] = a1;
          v39 = objc_allocWithZone(MEMORY[0x24BDD3F00]);
          sub_232003E9C(0, &qword_2541B5930);
          v40 = a1;
          v41 = v35;
          swift_retain();
          swift_retain();
          v42 = (void *)sub_232201020();
          swift_bridgeObjectRelease();
          aBlock[4] = sub_232088868;
          aBlock[5] = v37;
          aBlock[0] = MEMORY[0x24BDAC760];
          aBlock[1] = 1107296256;
          aBlock[2] = sub_2321BE3EC;
          aBlock[3] = &unk_250100D40;
          v43 = _Block_copy(aBlock);
          v44 = objc_msgSend(v39, sel_initWithQueryDescriptors_limit_resultsHandler_, v42, 0, v43);

          _Block_release(v43);
          swift_release();
          objc_msgSend(*(id *)(v52 + 16), sel_executeQuery_, v44);

LABEL_17:
          return;
        }
LABEL_16:
        sub_232027434();
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_232210D20;
        *(_QWORD *)(inited + 32) = a1;
        aBlock[0] = inited;
        sub_232201050();
        v46 = aBlock[0];
        v47 = a1;
        v48 = sub_23208888C(v46);
        swift_bridgeObjectRelease();
        v53(v48, 0);

        goto LABEL_17;
      }
    }
    swift_bridgeObjectRelease_n();
    goto LABEL_16;
  }
  sub_232003BC0(0);
  sub_232003C24();
  v49 = (void *)swift_allocError();
  *v50 = 0;
  a3(v49, 1);

}

void sub_232088628(uint64_t a1, unint64_t a2, uint64_t a3, void (*a4)(id, _QWORD), uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v10;
  uint64_t inited;
  id v12;
  id v13;
  id v14;
  unint64_t v15;

  if (a2)
  {
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      v10 = sub_232201998();
      swift_bridgeObjectRelease();
      if (v10)
        goto LABEL_4;
    }
    else if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_4:
      v14 = sub_23208888C(a2);
      a4(v14, 0);

      return;
    }
  }
  sub_232027434();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232210D20;
  *(_QWORD *)(inited + 32) = a7;
  v15 = inited;
  sub_232201050();
  v12 = a7;
  v13 = sub_23208888C(v15);
  swift_bridgeObjectRelease();
  a4(v13, 0);

}

uint64_t sub_232088738()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_232003F18(v0 + qword_2541BF5D0);
  v1 = v0 + qword_2541BF5C8;
  v2 = sub_232200180();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for OngoingFactorsMostRecentSampleCurrentValueSharableModelStep()
{
  uint64_t result;

  result = qword_255F9D6F8;
  if (!qword_255F9D6F8)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_2320887DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B0D50;
  if (!qword_2541B0D50)
  {
    v1 = sub_232003E9C(255, &qword_2541B0D48);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BEE5BE8], v1);
    atomic_store(result, (unint64_t *)&qword_2541B0D50);
  }
  return result;
}

uint64_t sub_232088834()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_232088868(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_232088628(a1, a2, a3, *(void (**)(id, _QWORD))(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(void **)(v3 + 40));
}

uint64_t sub_232088874(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_232088884()
{
  return swift_release();
}

id sub_23208888C(unint64_t a1)
{
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id result;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t (*v36)(void);
  id v37;
  uint64_t v38;
  unint64_t *v39;
  uint64_t (*v40)(uint64_t);
  uint64_t v41;
  uint64_t (*v42)(uint64_t);
  uint64_t v43;
  _OWORD v44[2];
  uint64_t v45;

  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B28D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v44 - v7;
  v9 = sub_2321FDC6C();
  v10 = MEMORY[0x24BDAC7A8](v9);
  MEMORY[0x24BDAC7A8](v10);
  sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], v2);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v44 - v12;
  sub_2320057B8(0, (unint64_t *)&qword_2541B2A70, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0], v2);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v44 - v18;
  sub_232003E9C(0, &qword_2541AF0B0);
  v20 = swift_bridgeObjectRetain();
  v21 = HKCodableSummaryOngoingFactorsValue.init(ongoingSamples:)(v20);
  if (!v21)
  {
    sub_2321FE6B0();
    v41 = sub_2321FE6D4();
    v42 = (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v8, 0, 1, v41);
    sub_232003E9C(0, &qword_2541B0CD0);
    v43 = sub_2321FFD78();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v17, 1, 1, v43);
    sub_232016080((uint64_t)v8, (uint64_t)v6, &qword_2541B28D0, v42);
    v37 = sub_2320151CC(0, 0xF000000000000000, 0xBu, (uint64_t)v17, (uint64_t)v6, 0, 0);
    v38 = (uint64_t)v8;
    v39 = &qword_2541B28D0;
    v40 = v42;
    goto LABEL_7;
  }
  v22 = (void *)v21;
  sub_2321FFE50();
  v23 = *MEMORY[0x24BE4AD50];
  v24 = sub_2321FFD78();
  v25 = *(_QWORD *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v19, v23, v24);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v19, 0, 1, v24);
  objc_msgSend(v22, sel_earliestStartDate);
  v26 = (id)HKDecodeDateForValue();
  sub_2321FDC30();

  objc_msgSend(v22, sel_latestEndDate);
  v27 = (id)HKDecodeDateForValue();
  sub_2321FDC30();

  sub_2321FD87C();
  v28 = sub_2321FD8B8();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v13, 0, 1, v28);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v29 = sub_232201998();
    swift_bridgeObjectRelease();
  }
  else
  {
    v29 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  sub_232003E9C(0, &qword_2541B56C8);
  v30 = HKCodableSummarySupplementaryValue.init(dateInterval:dataCount:)((uint64_t)v13, v29, 0);
  result = objc_msgSend(v22, sel_data);
  if (result)
  {
    v32 = result;
    sub_232003E9C(0, &qword_2541B0CD0);
    v33 = sub_2321FDAD4();
    v35 = v34;

    v36 = MEMORY[0x24BE4ADA0];
    sub_232016080((uint64_t)v19, (uint64_t)v17, (unint64_t *)&qword_2541B2A70, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0]);
    v45 = 0;
    memset(v44, 0, sizeof(v44));
    v37 = sub_232015828(v33, v35, 12, (uint64_t)v17, (uint64_t)v30, 0, (uint64_t)v44);

    sub_232003ED4(v33, v35);
    v38 = (uint64_t)v19;
    v39 = (unint64_t *)&qword_2541B2A70;
    v40 = (uint64_t (*)(uint64_t))v36;
LABEL_7:
    sub_232016D88(v38, v39, v40);
    return v37;
  }
  __break(1u);
  return result;
}

uint64_t sub_232088D50()
{
  void *v0;

  sub_23220189C();
  swift_bridgeObjectRelease();
  sub_232201BF0();
  sub_232200F48();
  swift_bridgeObjectRelease();
  sub_232200F48();
  v0 = (void *)sub_2322011C4();
  sub_2321FE1AC();

  sub_232200F48();
  swift_bridgeObjectRelease();
  sub_232200F48();
  sub_232200F48();
  swift_bridgeObjectRelease();
  return 91;
}

uint64_t sub_232088E70(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_232089070();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
  {
    v11 = (void *)objc_opt_self();
    v12 = (void *)sub_232200E94();
    sub_23200C748(a6);
    v13 = (void *)sub_232201020();
    swift_bridgeObjectRelease();
    v14 = objc_msgSend(v11, sel_localizedUserNotificationStringForKey_arguments_, v12, v13);

    v15 = sub_232200EC4();
    return v15;
  }
  else
  {
    if (qword_2541B7488 != -1)
      swift_once();
    sub_2321FDA14();
    sub_2321FDCF0();
    v17 = sub_2321FDD08();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v10, 0, 1, v17);
    sub_23200C86C(a6);
    v18 = sub_232200ED0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_232089118((uint64_t)v10);
    return v18;
  }
}

void sub_232089070()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541AF178)
  {
    sub_2321FDD08();
    v0 = sub_2322016F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541AF178);
  }
}

id sub_2320890C4()
{
  uint64_t ObjCClassFromMetadata;
  id result;

  type metadata accessor for SummariesHealthPluginDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  result = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  qword_2541BF760 = (uint64_t)result;
  return result;
}

uint64_t sub_232089118(uint64_t a1)
{
  uint64_t v2;

  sub_232089070();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_232089154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  uint64_t v19;
  id v20;
  _QWORD v22[2];
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v22[1] = a1;
  v23 = a6;
  v24 = a5;
  v25 = a3;
  v26 = a4;
  v27 = sub_2321FD99C();
  MEMORY[0x24BDAC7A8](v27);
  sub_232089070();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2321FD9C0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_232200E7C();
  MEMORY[0x24BDAC7A8](v13);
  v14 = sub_2321FD9F0();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_232200E70();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v23, v9);
  if (qword_2541B7488 != -1)
    swift_once();
  v18 = (void *)qword_2541BF760;
  v19 = sub_2321FDD08();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 1, 1, v19);
  v20 = v18;
  sub_2321FD9D8();
  sub_2321FD990();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  sub_2320893A8();
  return sub_232200FA8();
}

unint64_t sub_2320893A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B5B90;
  if (!qword_2541B5B90)
  {
    v1 = sub_2321FD99C();
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDCC2A8], v1);
    atomic_store(result, (unint64_t *)&qword_2541B5B90);
  }
  return result;
}

uint64_t sub_2320893F0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v0 = sub_2321FDD08();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_232200E7C();
  MEMORY[0x24BDAC7A8](v1);
  swift_bridgeObjectRetain();
  sub_232200E70();
  if (qword_2541B7488 != -1)
    swift_once();
  v2 = (id)qword_2541BF760;
  sub_2321FDCFC();
  return sub_232200EF4();
}

uint64_t sub_232089510(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  void *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v44 = a2;
  v45 = a5;
  v40 = a4;
  v43 = a1;
  v42 = sub_2321FD99C();
  MEMORY[0x24BDAC7A8](v42);
  v41 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232089070();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2321FD9C0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_232200E7C();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v37 - v19;
  v21 = sub_2321FD9F0();
  v22 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v37 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
  {
    v26 = (void *)objc_opt_self();
    v27 = (void *)sub_232200E94();
    sub_23200C748(v45);
    v28 = (void *)sub_232201020();
    swift_bridgeObjectRelease();
    v29 = objc_msgSend(v26, sel_localizedUserNotificationStringForKey_arguments_, v27, v28);

    v30 = sub_232200EC4();
    return v30;
  }
  else
  {
    v38 = v23;
    v39 = v22;
    swift_bridgeObjectRetain();
    sub_232200E70();
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v20, v14);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v40, v10);
    if (qword_2541B7488 != -1)
      swift_once();
    v32 = (void *)qword_2541BF760;
    v33 = sub_2321FDD08();
    v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56);
    v34(v9, 1, 1, v33);
    v35 = v32;
    sub_2321FD9D8();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
    sub_2321FD990();
    sub_2320893A8();
    sub_232200FA8();
    sub_2321FDCF0();
    v34(v9, 0, 1, v33);
    sub_23200C86C(v45);
    v36 = sub_232200ED0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_232089118((uint64_t)v9);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v25, v39);
    return v36;
  }
}

uint64_t sub_2320898C0(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v18;
  uint64_t v19;
  uint64_t v20;

  sub_232089070();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2321FDD08();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = sub_232200E7C();
  MEMORY[0x24BDAC7A8](v11);
  if ((a3 & 1) != 0)
  {
    v12 = (void *)objc_opt_self();
    v13 = (void *)sub_232200E94();
    sub_23200C748(a4);
    v14 = (void *)sub_232201020();
    swift_bridgeObjectRelease();
    v15 = objc_msgSend(v12, sel_localizedUserNotificationStringForKey_arguments_, v13, v14);

    v16 = sub_232200EC4();
    return v16;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_232200E70();
    if (qword_2541B7488 != -1)
      swift_once();
    v18 = (id)qword_2541BF760;
    sub_2321FDCFC();
    sub_232200EF4();
    sub_2321FDCF0();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    sub_23200C86C(a4);
    v19 = sub_232200ED0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_232089118((uint64_t)v8);
    return v19;
  }
}

uint64_t sub_232089B40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  void *v5;
  char v6;
  uint64_t v8;

  v0 = sub_2321FDC6C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request(0);
  v4 = (void *)sub_2321FE464();
  sub_232003E9C(0, (unint64_t *)&qword_2541B0C28);
  v5 = (void *)MEMORY[0x2348FE4B4]((id)*MEMORY[0x24BDD3360]);
  sub_232003E9C(0, (unint64_t *)&qword_2541B7EA8);
  v6 = sub_2322016A4();

  if ((v6 & 1) != 0)
  {
    type metadata accessor for SleepingWristTemperatureStatisticsCurrentValueSharableModelStep();
    sub_2321FD870();
    sub_2321CF880();
  }
  else
  {
    sub_2321FD870();
    sub_2321FD840();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t *sub_232089C90(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t inited;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  unint64_t v19;
  void (*v20)(unint64_t, _QWORD, uint64_t);
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v3 = v2;
  v33 = *v3;
  v30 = sub_2321FE38C();
  v28 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v29 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2321FE3BC();
  v31 = *(_QWORD *)(v7 - 8);
  v32 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = a1;
  v27 = (id)sub_2321FE3F8();
  sub_232027434();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232210D20;
  v11 = type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request(0);
  *(_QWORD *)(inited + 32) = sub_2321FE464();
  v35 = inited;
  sub_232201050();
  v12 = *(_BYTE *)(a2 + *(int *)(v11 + 36));
  sub_2320057B8(0, &qword_2541B7530, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v13 = sub_2321FE194();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  if ((v12 & 1) != 0)
  {
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_232210D40;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v14 + 104))(v17 + v16, *MEMORY[0x24BE47410], v13);
  }
  else
  {
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_232210D30;
    v19 = v17 + v16;
    v20 = *(void (**)(unint64_t, _QWORD, uint64_t))(v14 + 104);
    v20(v19, *MEMORY[0x24BE47460], v13);
    v20(v19 + v15, *MEMORY[0x24BE47490], v13);
  }
  v18 = v27;
  sub_2321A492C(v17);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v21 = swift_bridgeObjectRetain();
  sub_2321A4950(v21);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t))(v28 + 104))(v29, *MEMORY[0x24BE47918], v30);
  sub_2321FE3B0();

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))((uint64_t)v3 + OBJC_IVAR____TtC9Summaries50StatisticCurrentValueSummarySharableModelGenerator_domain, v9, v32);
  sub_23208BF78(a2, (uint64_t)v3 + OBJC_IVAR____TtC9Summaries50StatisticCurrentValueSummarySharableModelGenerator_request);
  v22 = sub_232000590(&qword_2541B0370, type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator, (uint64_t)&unk_232213628);
  v23 = v34;
  v24 = static CurrentValueSummaryModelGenerating.makePublisher(generatorContext:request:)(v34, a2, v33, v22);
  sub_23208BFBC(a2);
  v25 = sub_2321FE440();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v23, v25);
  *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC9Summaries50StatisticCurrentValueSummarySharableModelGenerator_publisher) = v24;
  return v3;
}

id sub_23208A000(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  void (*v52)(char *, uint64_t, uint64_t);
  char *v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t);
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  unsigned int (*v74)(char *, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  uint64_t (*v83)(uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  void *v96;
  uint64_t v97;
  uint64_t (*v98)(uint64_t);
  uint64_t v99;
  id result;
  uint64_t v101;
  char *v102;
  char *v103;
  void *v104;
  char *v105;
  uint64_t v106;
  void (**v107)(char *, uint64_t);
  char v108;
  char *v109;
  char *v110;
  id v111;
  void *v112;
  void *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  void (**v117)(char *, uint64_t);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  id v122;
  uint64_t v123;
  id v124;
  uint64_t v125;
  id v126;
  id v127;
  uint64_t v128;
  void (*v129)(char *, char *, uint64_t);
  uint64_t v130;
  id v131;
  void *v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  uint64_t v136;
  void (*v137)(char *, uint64_t);
  void *v138;
  uint64_t v139;
  uint64_t (*v140)(uint64_t);
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  char *v147;
  char *v148;
  uint64_t v149;
  char *v150;
  char *v151;
  void (*v152)(char *, uint64_t, uint64_t);
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  void (**v165)(char *, uint64_t);
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  char *v176;
  _OWORD v177[2];
  uint64_t v178;
  __int128 v179;

  v156 = a3;
  v171 = a2;
  v162 = a1;
  v3 = sub_232200024();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v157 = (char *)&v145 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request(0);
  MEMORY[0x24BDAC7A8](v6);
  v163 = (uint64_t)&v145 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23220039C();
  v165 = *(void (***)(char *, uint64_t))(v8 - 8);
  v166 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v164 = (char *)&v145 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, (unint64_t *)&qword_2541B2A70, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v11);
  v174 = (char *)&v145 - v12;
  sub_2320057B8(0, &qword_2541B28D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], v10);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v169 = (uint64_t)&v145 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v170 = (char *)&v145 - v16;
  sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], v10);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v147 = (char *)&v145 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v153 = (uint64_t)&v145 - v20;
  sub_2320057B8(0, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], v10);
  MEMORY[0x24BDAC7A8](v21);
  v154 = (char *)&v145 - v22;
  v160 = sub_2321FDC6C();
  v159 = *(_QWORD *)(v160 - 8);
  v23 = MEMORY[0x24BDAC7A8](v160);
  v145 = (char *)&v145 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v146 = (char *)&v145 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v151 = (char *)&v145 - v27;
  v28 = (uint64_t (*)(uint64_t))MEMORY[0x24BE45AD8];
  sub_2320057B8(0, &qword_2541B3560, (uint64_t (*)(uint64_t))MEMORY[0x24BE45AD8], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v145 - v30;
  sub_2320057B8(0, &qword_2541B55D8, v28, v10);
  MEMORY[0x24BDAC7A8](v32);
  v34 = (char *)&v145 - v33;
  v35 = sub_23220126C();
  v36 = *(_QWORD *)(v35 - 8);
  v167 = v35;
  v168 = v36;
  MEMORY[0x24BDAC7A8](v35);
  v161 = (char *)&v145 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, &qword_2541B2A30, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ABE8], v10);
  MEMORY[0x24BDAC7A8](v38);
  v40 = (char *)&v145 - v39;
  v41 = sub_2321FFC94();
  v42 = *(_QWORD *)(v41 - 8);
  v43 = MEMORY[0x24BDAC7A8](v41);
  v150 = (char *)&v145 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v43);
  v176 = (char *)&v145 - v45;
  v46 = sub_2321FFD78();
  v47 = *(_QWORD *)(v46 - 8);
  v48 = MEMORY[0x24BDAC7A8](v46);
  v148 = (char *)&v145 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v48);
  v51 = (char *)&v145 - v50;
  v52 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v53 = v171;
  v158 = v3;
  v152 = v52;
  v52((char *)&v145 - v50, (uint64_t)v171, v3);
  v54 = *MEMORY[0x24BE4AD28];
  v172 = v47;
  v173 = v46;
  v55 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 104);
  v175 = v51;
  v56 = v51;
  v57 = (uint64_t)v53;
  v55(v56, v54, v46);
  v58 = sub_2321FFFF4();
  if (*(_QWORD *)(v58 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v42 + 16))(v40, v58 + ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80)), v41);
    v59 = 0;
  }
  else
  {
    v59 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56))(v40, v59, 1, v41);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41) == 1)
  {
    sub_232016D88((uint64_t)v40, &qword_2541B2A30, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ABE8]);
    v60 = v164;
    sub_232200354();
    v61 = v57;
    v62 = v163;
    sub_23208BF78(v61, v163);
    v63 = sub_232200390();
    v64 = sub_2322012F0();
    if (os_log_type_enabled(v63, v64))
    {
      v65 = swift_slowAlloc();
      v66 = swift_slowAlloc();
      *(_QWORD *)&v179 = v66;
      *(_DWORD *)v65 = 136315394;
      *(_QWORD *)&v177[0] = v155;
      swift_getMetatypeMetadata();
      v67 = sub_232200F00();
      *(_QWORD *)&v177[0] = sub_232013174(v67, v68, (uint64_t *)&v179);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v65 + 12) = 2080;
      v152(v157, v62, v158);
      v69 = sub_232200F00();
      *(_QWORD *)&v177[0] = sub_232013174(v69, v70, (uint64_t *)&v179);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_23208BFBC(v62);
      _os_log_impl(&dword_231FFB000, v63, v64, "[%s]: We're processing a model without a data model. How? %s", (uint8_t *)v65, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v66, -1, -1);
      MEMORY[0x2348FF468](v65, -1, -1);
    }
    else
    {
      sub_23208BFBC(v62);
    }

    v165[1](v60, v166);
    v80 = v172;
    v81 = v170;
    sub_2321FE6B0();
    v82 = sub_2321FE6D4();
    v83 = (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70];
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56))(v81, 0, 1, v82);
    sub_232003E9C(0, &qword_2541B0CD0);
    v85 = v173;
    v84 = (uint64_t)v174;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v80 + 56))(v174, 1, 1, v173);
    v86 = v169;
    sub_232026DE8((uint64_t)v81, v169, &qword_2541B28D0, v83, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v87 = sub_2320151CC(0, 0xF000000000000000, 0xBu, v84, v86, 0, 0);
    sub_232016D88((uint64_t)v81, &qword_2541B28D0, v83);
    (*(void (**)(char *, uint64_t))(v80 + 8))(v175, v85);
    return v87;
  }
  v71 = *(void (**)(char *, char *, uint64_t))(v42 + 32);
  v149 = v41;
  v71(v176, v40, v41);
  sub_232026DE8(v162, (uint64_t)v31, &qword_2541B3560, (uint64_t (*)(uint64_t))MEMORY[0x24BE45AD8], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  v73 = v167;
  v72 = v168;
  v74 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v168 + 48);
  v75 = 1;
  if (v74(v31, 1, v167) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v34, v31, v73);
    v75 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v72 + 56))(v34, v75, 1, v73);
  if (v74(v34, 1, v73) == 1)
  {
    sub_232016D88((uint64_t)v34, &qword_2541B55D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE45AD8]);
    v77 = v173;
    v76 = (uint64_t)v174;
    v78 = v172;
LABEL_11:
    v79 = v176;
LABEL_18:
    v96 = v170;
    sub_2321FE6B0();
    v97 = sub_2321FE6D4();
    v98 = (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70];
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 56))(v96, 0, 1, v97);
    sub_232003E9C(0, &qword_2541B0CD0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v78 + 56))(v76, 1, 1, v77);
    v99 = v169;
    sub_232026DE8((uint64_t)v96, v169, &qword_2541B28D0, v98, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v87 = sub_2320151CC(0, 0xF000000000000000, 0xBu, v76, v99, 0, 0);
    sub_232016D88((uint64_t)v96, &qword_2541B28D0, v98);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v79, v149);
LABEL_19:
    (*(void (**)(char *, uint64_t))(v78 + 8))(v175, v77);
    return v87;
  }
  v88 = v161;
  (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v161, v34, v73);
  v89 = v153;
  sub_232026DE8(v156, v153, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v90 = sub_2321FD8B8();
  v91 = *(_QWORD *)(v90 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48))(v89, 1, v90) == 1)
  {
    sub_232016D88(v89, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
    v92 = (uint64_t)v154;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v159 + 56))(v154, 1, 1, v160);
    v79 = v176;
LABEL_17:
    (*(void (**)(char *, uint64_t))(v72 + 8))(v88, v73);
    sub_232016D88(v92, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    v77 = v173;
    v76 = (uint64_t)v174;
    v78 = v172;
    goto LABEL_18;
  }
  v92 = (uint64_t)v154;
  sub_2321FD870();
  v88 = v161;
  v166 = v91;
  (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v89, v90);
  v93 = v159;
  v94 = v160;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v159 + 56))(v92, 0, 1, v160);
  v95 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v93 + 48))(v92, 1, v94);
  v79 = v176;
  if (v95 == 1)
    goto LABEL_17;
  v101 = v92;
  v102 = v151;
  (*(void (**)(char *, uint64_t, uint64_t))(v93 + 32))(v151, v101, v94);
  v103 = v88;
  v104 = (void *)sub_232201260();
  v105 = sub_23208C640((unint64_t)v104);

  v78 = v172;
  v171 = v105;
  if (!v105)
  {
    (*(void (**)(char *, uint64_t))(v93 + 8))(v102, v94);
    (*(void (**)(char *, uint64_t))(v168 + 8))(v103, v73);
    v77 = v173;
    v76 = (uint64_t)v174;
    goto LABEL_11;
  }
  v106 = v149;
  (*(void (**)(char *, _QWORD, uint64_t))(v42 + 104))(v150, *MEMORY[0x24BE4ABC8], v149);
  sub_232000590(&qword_2541B2A28, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ABE8], MEMORY[0x24BE4AC10]);
  sub_232200FF0();
  sub_232200FF0();
  if (v177[0] == v179)
  {
    swift_bridgeObjectRelease_n();
    v107 = *(void (***)(char *, uint64_t))(v42 + 8);
    ((void (*)(char *, uint64_t))v107)(v150, v106);
  }
  else
  {
    v108 = sub_232201ADC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v107 = *(void (***)(char *, uint64_t))(v42 + 8);
    ((void (*)(char *, uint64_t))v107)(v150, v106);
    if ((v108 & 1) == 0)
    {
      v110 = v171;
      v120 = sub_2322011B8();
      v109 = v148;
      v165 = v107;
      if (!v120)
      {
        v138 = v170;
        sub_2321FE6B0();
        v139 = sub_2321FE6D4();
        v140 = (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70];
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v139 - 8) + 56))(v138, 0, 1, v139);
        sub_232003E9C(0, &qword_2541B0CD0);
        v141 = v110;
        v77 = v173;
        v142 = (uint64_t)v174;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v78 + 56))(v174, 1, 1, v173);
        v143 = v73;
        v144 = v169;
        sub_232026DE8((uint64_t)v138, v169, &qword_2541B28D0, v140, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        v87 = sub_2320151CC(0, 0xF000000000000000, 0xBu, v142, v144, 0, 0);
        sub_232016D88((uint64_t)v138, &qword_2541B28D0, v140);

        (*(void (**)(char *, uint64_t))(v159 + 8))(v151, v160);
        (*(void (**)(char *, uint64_t))(v168 + 8))(v161, v143);
        ((void (*)(char *, uint64_t))v165)(v176, v149);
        goto LABEL_19;
      }
      v112 = (void *)v120;
      goto LABEL_31;
    }
  }
  v109 = v148;
  v110 = v171;
  v111 = objc_msgSend(v171, sel_mostRecentQuantity);
  if (!v111)
  {
    v113 = v170;
    sub_2321FE6B0();
    v114 = sub_2321FE6D4();
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 56))(v113, 0, 1, v114);
    sub_232003E9C(0, &qword_2541B0CD0);
    v115 = v110;
    v116 = (uint64_t)v174;
    v117 = v107;
    v77 = v173;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v78 + 56))(v174, 1, 1, v173);
    v118 = v73;
    v119 = v169;
    sub_232026DE8((uint64_t)v113, v169, &qword_2541B28D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v87 = sub_2320151CC(0, 0xF000000000000000, 0xBu, v116, v119, 0, 0);
    sub_232016D88((uint64_t)v113, &qword_2541B28D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70]);

    (*(void (**)(char *, uint64_t))(v159 + 8))(v151, v160);
    (*(void (**)(char *, uint64_t))(v168 + 8))(v161, v118);
    ((void (*)(char *, uint64_t))v117)(v176, v149);
    goto LABEL_19;
  }
  v112 = v111;
  v165 = v107;
LABEL_31:
  sub_232003E9C(0, &qword_2541B56C8);
  v121 = v110;
  v122 = objc_msgSend(v110, sel_startDate);
  v123 = (uint64_t)v146;
  sub_2321FDC30();

  v124 = objc_msgSend(v121, sel_endDate);
  sub_2321FDC30();

  v125 = (uint64_t)v147;
  sub_2321FD87C();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v166 + 56))(v125, 0, 1, v90);
  v126 = HKCodableSummarySupplementaryValue.init(dateInterval:dataCount:)(v125, (uint64_t)objc_msgSend(v121, sel_dataCount), 0);
  sub_232003E9C(0, &qword_2541B56B0);
  (*(void (**)(uint64_t, char *, uint64_t))(v159 + 16))(v123, v151, v160);
  v170 = v112;
  v127 = HKCodableSummaryQuantityValue.init(quantity:date:)(v170, v123);
  v128 = v78;
  v129 = *(void (**)(char *, char *, uint64_t))(v78 + 16);
  v130 = v173;
  v129(v109, v175, v173);
  v131 = v126;
  result = objc_msgSend(v127, sel_data);
  if (result)
  {
    v132 = result;
    sub_232003E9C(0, &qword_2541B0CD0);
    v133 = sub_2321FDAD4();
    v135 = v134;

    v136 = (uint64_t)v174;
    v129(v174, v109, v130);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v128 + 56))(v136, 0, 1, v130);
    v178 = 0;
    memset(v177, 0, sizeof(v177));
    v87 = sub_232015828(v133, v135, 14, v136, (uint64_t)v131, 0, (uint64_t)v177);

    sub_232003ED4(v133, v135);
    v137 = *(void (**)(char *, uint64_t))(v128 + 8);
    v137(v109, v130);

    (*(void (**)(char *, uint64_t))(v159 + 8))(v151, v160);
    (*(void (**)(char *, uint64_t))(v168 + 8))(v161, v167);
    ((void (*)(char *, uint64_t))v165)(v176, v149);
    v137(v175, v130);
    return v87;
  }
  __break(1u);
  return result;
}

uint64_t sub_23208B244()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC9Summaries50StatisticCurrentValueSummarySharableModelGenerator_domain;
  v2 = sub_2321FE3BC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  sub_23208BFBC(v0 + OBJC_IVAR____TtC9Summaries50StatisticCurrentValueSummarySharableModelGenerator_request);
  return swift_deallocClassInstance();
}

uint64_t sub_23208B2B4()
{
  return type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator(0);
}

uint64_t type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator(uint64_t a1)
{
  return sub_23201A14C(a1, (uint64_t *)&unk_2541B7AE0);
}

uint64_t sub_23208B2D0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2321FE3BC();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request(319);
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request(uint64_t a1)
{
  return sub_23201A14C(a1, qword_2541B7A30);
}

_QWORD *sub_23208B378(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_232200024();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_2321FE4A0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[7];
    *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_2321FD8B8();
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v19 = a3[8];
    v20 = a3[9];
    v21 = (_QWORD *)((char *)a1 + v19);
    v22 = (_QWORD *)((char *)a2 + v19);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    *((_BYTE *)a1 + v20) = *((_BYTE *)a2 + v20);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_23208B4F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_232200024();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_2321FE4A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 28);
  v8 = sub_2321FD8B8();
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23208B5AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  v6 = sub_232200024();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2321FE4A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = sub_2321FD8B8();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v12, v13, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v17 = a3[8];
  v18 = a3[9];
  v19 = (_QWORD *)(a1 + v17);
  v20 = (_QWORD *)(a2 + v17);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  *(_BYTE *)(a1 + v18) = *(_BYTE *)(a2 + v18);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23208B6F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;

  v6 = sub_232200024();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2321FE4A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v11 = a3[7];
  v12 = (void *)(a1 + v11);
  v13 = (void *)(a2 + v11);
  v14 = sub_2321FD8B8();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 24))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v12, v13, v14);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  v20 = a3[8];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_23208B8AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_232200024();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2321FE4A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = sub_2321FD8B8();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v17 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v17) = *(_BYTE *)(a2 + v17);
  return a1;
}

uint64_t sub_23208B9EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_232200024();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2321FE4A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v12 = (void *)(a1 + v11);
  v13 = (void *)(a2 + v11);
  v14 = sub_2321FD8B8();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  v20 = a3[8];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_23208BB8C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23208BB98(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;

  v6 = sub_232200024();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_2321FE4A0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_7:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[7];
    goto LABEL_7;
  }
  v16 = *(_QWORD *)(a1 + a3[8] + 8);
  if (v16 >= 0xFFFFFFFF)
    LODWORD(v16) = -1;
  return (v16 + 1);
}

uint64_t sub_23208BC80()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23208BC8C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v8 = sub_232200024();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
LABEL_8:
    v11(v12, a2, a2, v10);
    return;
  }
  v13 = sub_2321FE4A0();
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[5];
LABEL_7:
    v12 = a1 + v15;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v14 = *(_QWORD *)(v16 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v16;
    v15 = a4[7];
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + a4[8] + 8) = (a2 - 1);
}

void sub_23208BD70()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_232200024();
  if (v0 <= 0x3F)
  {
    sub_2321FE4A0();
    if (v1 <= 0x3F)
    {
      sub_2320057B8(319, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

_UNKNOWN **sub_23208BE3C()
{
  return &off_250100D80;
}

uint64_t sub_23208BE48(uint64_t a1)
{
  uint64_t result;

  result = sub_232000590(&qword_2541B7AD0, type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator, (uint64_t)&unk_232213644);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

_UNKNOWN **sub_23208BE84()
{
  return &off_250100DC8;
}

uint64_t sub_23208BE90()
{
  return swift_retain();
}

uint64_t sub_23208BEA4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC9Summaries50StatisticCurrentValueSummarySharableModelGenerator_domain;
  v4 = sub_2321FE3BC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23208BEF4(uint64_t a1)
{
  uint64_t result;

  result = sub_232000590(&qword_2541B7AD8, type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator, (uint64_t)&unk_2322135F0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

_UNKNOWN **sub_23208BF30()
{
  return &off_250100DE0;
}

uint64_t sub_23208BF3C(uint64_t a1)
{
  uint64_t result;

  result = sub_232000590(&qword_2541B4B28, type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator, (uint64_t)&unk_23221360C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23208BF78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23208BFBC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23208BFF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, _QWORD, uint64_t, uint64_t);
  char *v24;
  void *v25;
  uint64_t inited;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  void (*v33)(unint64_t, _QWORD, uint64_t);
  unint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v42[2];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[4];

  v42[1] = a2;
  v43 = a1;
  v48 = sub_2321FE38C();
  v46 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v47 = (char *)v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_2321FE3BC();
  v52 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v50 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v42 - v8;
  sub_2320057B8(0, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], v6);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v42 - v11;
  v45 = sub_232201278();
  v44 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v14 = (char *)v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232069E90();
  v53 = v15;
  v51 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v49 = (char *)v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2321FE3D4();
  sub_232016AD8(v56, v56[3]);
  v17 = (void *)sub_2321FE314();
  v18 = type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request(0);
  v19 = (void *)sub_2321FE464();
  v20 = sub_2321FDC6C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v12, 1, 1, v20);
  v21 = sub_2321FD8B8();
  v22 = *(_QWORD *)(v21 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v9, v43, v21);
  v23 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56);
  v24 = v14;
  v23(v9, 0, 1, v21);
  sub_23220129C();

  sub_232016D88((uint64_t)v9, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
  sub_232016D88((uint64_t)v12, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  sub_232016AFC((uint64_t)v56);
  sub_2321FE434();
  v25 = (void *)sub_2321FE3F8();
  sub_232027434();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232210D20;
  *(_QWORD *)(inited + 32) = sub_2321FE464();
  v55 = inited;
  sub_232201050();
  LOBYTE(a3) = *(_BYTE *)(a3 + *(int *)(v18 + 36));
  sub_2320057B8(0, &qword_2541B7530, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v27 = sub_2321FE194();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(_QWORD *)(v28 + 72);
  v30 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  if ((a3 & 1) != 0)
  {
    v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_232210D40;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v28 + 104))(v31 + v30, *MEMORY[0x24BE47410], v27);
  }
  else
  {
    v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_232210D30;
    v33 = *(void (**)(unint64_t, _QWORD, uint64_t))(v28 + 104);
    v33(v31 + v30, *MEMORY[0x24BE47460], v27);
    v33(v31 + v30 + v29, *MEMORY[0x24BE47490], v27);
  }
  v32 = v25;
  sub_2321A492C(v31);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v34 = swift_bridgeObjectRetain();
  sub_2321A4950(v34);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t))(v46 + 104))(v47, *MEMORY[0x24BE47918], v48);
  v35 = v50;
  sub_2321FE3B0();

  swift_bridgeObjectRelease();
  sub_232000590(&qword_2541B55E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE45AF0], MEMORY[0x24BE45AE8]);
  v36 = v45;
  v37 = sub_232200738();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v35, v54);
  sub_232016AFC((uint64_t)v56);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v24, v36);
  v56[0] = v37;
  sub_232069F3C();
  sub_2320057B8(0, &qword_2541B3560, (uint64_t (*)(uint64_t))MEMORY[0x24BE45AD8], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  sub_232000590(&qword_2541B2FE8, (uint64_t (*)(uint64_t))sub_232069F3C, MEMORY[0x24BDB9AF8]);
  v38 = v49;
  sub_2322007A4();
  swift_release();
  sub_232000590(&qword_2541B2C50, (uint64_t (*)(uint64_t))sub_232069E90, MEMORY[0x24BDB96C0]);
  v39 = v53;
  v40 = sub_232200774();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v38, v39);
  return v40;
}

char *sub_23208C640(unint64_t a1)
{
  void *v2;
  void *v3;
  char v4;
  id v5;
  char *v6;
  char *result;
  void *v8;
  id v9;
  char *v10;

  type metadata accessor for StatisticCurrentValueSummarySharableModelGenerator.Request(0);
  v2 = (void *)sub_2321FE464();
  sub_232003E9C(0, (unint64_t *)&qword_2541B0C28);
  v3 = (void *)MEMORY[0x2348FE4B4]((id)*MEMORY[0x24BDD3360]);
  sub_232003E9C(0, (unint64_t *)&qword_2541B7EA8);
  v4 = sub_2322016A4();

  if ((v4 & 1) == 0)
    goto LABEL_9;
  v5 = objc_msgSend((id)a1, sel_statistics);
  sub_232003E9C(0, (unint64_t *)&qword_2541B7EB8);
  a1 = sub_232201038();

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = (char *)sub_232201998();
    swift_bridgeObjectRelease();
    if (!v6)
      goto LABEL_18;
  }
  else
  {
    v6 = *(char **)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v6)
      goto LABEL_18;
  }
  result = v6 - 1;
  if (__OFSUB__(v6, 1))
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if ((a1 & 0xC000000000000001) != 0)
    goto LABEL_22;
  if (((unint64_t)result & 0x8000000000000000) != 0)
    goto LABEL_24;
  if ((unint64_t)result < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_16:
    v10 = (char *)*(id *)(a1 + 8 * (_QWORD)result + 32);
LABEL_17:
    v6 = v10;
    goto LABEL_18;
  }
  __break(1u);
LABEL_9:
  v8 = (void *)sub_2321FDBF4();
  v6 = (char *)objc_msgSend((id)a1, sel_statisticsForDate_, v8);

  if (v6)
    return v6;
  v9 = objc_msgSend((id)a1, sel_statistics);
  sub_232003E9C(0, (unint64_t *)&qword_2541B7EB8);
  a1 = sub_232201038();

  if (!(a1 >> 62))
  {
    v6 = *(char **)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v6)
      goto LABEL_12;
LABEL_18:
    swift_bridgeObjectRelease();
    return v6;
  }
LABEL_25:
  swift_bridgeObjectRetain();
  v6 = (char *)sub_232201998();
  swift_bridgeObjectRelease();
  if (!v6)
    goto LABEL_18;
LABEL_12:
  result = v6 - 1;
  if (__OFSUB__(v6, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_22:
    v10 = (char *)MEMORY[0x2348FEA30](result, a1);
    goto LABEL_17;
  }
  if (((unint64_t)result & 0x8000000000000000) != 0)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if ((unint64_t)result < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_16;
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_23208C8CC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t inited;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  unint64_t v20;
  void (*v21)(unint64_t, _QWORD, uint64_t);
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v34 = *v2;
  v5 = sub_2321FE38C();
  v30 = *(_QWORD *)(v5 - 8);
  v31 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2321FE3BC();
  v32 = *(_QWORD *)(v8 - 8);
  v33 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = a2;
  v29 = (id)sub_2321FE3F8();
  sub_232027434();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232210D20;
  v12 = type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request(0);
  *(_QWORD *)(inited + 32) = sub_2321FE464();
  v37 = inited;
  sub_232201050();
  v13 = *(_BYTE *)(a1 + *(int *)(v12 + 36));
  sub_2320057B8(0, &qword_2541B7530, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v14 = sub_2321FE194();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 72);
  v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  if ((v13 & 1) != 0)
  {
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_232210D40;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v15 + 104))(v18 + v17, *MEMORY[0x24BE47410], v14);
  }
  else
  {
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_232210D30;
    v20 = v18 + v17;
    v21 = *(void (**)(unint64_t, _QWORD, uint64_t))(v15 + 104);
    v21(v20, *MEMORY[0x24BE47460], v14);
    v21(v20 + v16, *MEMORY[0x24BE47490], v14);
  }
  v19 = v29;
  sub_2321A492C(v18);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v22 = swift_bridgeObjectRetain();
  sub_2321A4950(v22);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t))(v30 + 104))(v7, *MEMORY[0x24BE47918], v31);
  sub_2321FE3B0();

  swift_bridgeObjectRelease();
  v23 = v36;
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v36 + OBJC_IVAR____TtC9Summaries48BalanceCurrentValueSummarySharableModelGenerator_domain, v10, v33);
  v24 = sub_232000590(qword_255F9D9C8, type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator, (uint64_t)&unk_23221374C);
  v25 = v35;
  v26 = static CurrentValueSummaryModelGenerating.makePublisher(generatorContext:request:)(v35, a1, v34, v24);
  v27 = sub_2321FE440();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v25, v27);
  sub_232002CEC(a1, type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request);
  *(_QWORD *)(v23 + 16) = v26;
  return v23;
}

uint64_t sub_23208CC24@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *a1;
  v4 = *(_QWORD *)(*a1 + 16);
  v5 = sub_2321FDF60();
  v6 = *(_QWORD *)(v5 - 8);
  if (v4)
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v6 + 16))(a2, v3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), v5);
    v7 = 0;
  }
  else
  {
    v7 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v7, 1, v5);
}

uint64_t sub_23208CCA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  sub_23208EC00(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23200054C(a1, (uint64_t)v6, v7);
  v8 = sub_2321FDF60();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_232002CEC((uint64_t)v6, (uint64_t (*)(_QWORD))sub_23208EC00);
    v10 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v6, v8);
    v10 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, v10, 1, v8);
}

id sub_23208CD8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t (*v32)(_QWORD);
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void (*v43)(char *, char *, uint64_t);
  NSObject *v44;
  os_log_type_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  void (*v56)(char *, uint64_t);
  os_log_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id result;
  void *v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  _QWORD v73[2];
  int v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  os_log_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _OWORD v88[2];
  uint64_t v89;

  v2 = sub_232200DB0();
  v79 = *(_QWORD *)(v2 - 8);
  v80 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v78 = (char *)v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2321FDF60();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v82 = (char *)v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v73 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v73 - v11;
  sub_23201C800();
  v14 = MEMORY[0x24BDAC7A8](v13);
  v83 = (char *)v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v84 = (uint64_t)v73 - v16;
  sub_23202CAC8(0);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)v73 - v21;
  v23 = sub_23220039C();
  v85 = *(_QWORD *)(v23 - 8);
  v86 = v23;
  v24 = MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)v73 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)v73 - v27;
  sub_23208E140(0);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)v73 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23200054C(a1, (uint64_t)v31, v32);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v31, 1, v4) == 1)
  {
    sub_232200300();
    v33 = sub_232200390();
    v34 = sub_2322012FC();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      v36 = swift_slowAlloc();
      *(_QWORD *)&v88[0] = v36;
      *(_DWORD *)v35 = 136315138;
      v37 = sub_232201BF0();
      v87 = sub_232013174(v37, v38, (uint64_t *)v88);
      sub_232201710();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v33, v34, "[%s] query received no data", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v36, -1, -1);
      MEMORY[0x2348FF468](v35, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v85 + 8))(v28, v86);
    v39 = v84;
    sub_2321FE6B0();
    v40 = sub_2321FE6D4();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v22, 0, 1, v40);
    sub_232003E9C(0, &qword_2541B0CD0);
    v41 = sub_2321FFD78();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v39, 1, 1, v41);
    sub_23200054C((uint64_t)v22, (uint64_t)v20, (uint64_t (*)(_QWORD))sub_23202CAC8);
    v42 = sub_2320151CC(0, 0xF000000000000000, 0xBu, v39, (uint64_t)v20, 0, 0);
    sub_232002CEC((uint64_t)v22, (uint64_t (*)(_QWORD))sub_23202CAC8);
    return v42;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v12, v31, v4);
  sub_232200300();
  v43 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v77 = v12;
  v43(v10, v12, v4);
  v44 = sub_232200390();
  v45 = sub_2322012FC();
  v46 = v45;
  if (os_log_type_enabled(v44, v45))
  {
    v47 = swift_slowAlloc();
    v76 = v43;
    v48 = v47;
    v75 = swift_slowAlloc();
    *(_QWORD *)&v88[0] = v75;
    *(_DWORD *)v48 = 136315394;
    v74 = v46;
    v49 = sub_232201BF0();
    v87 = sub_232013174(v49, v50, (uint64_t *)v88);
    sub_232201710();
    swift_bridgeObjectRelease();
    *(_WORD *)(v48 + 12) = 2080;
    v73[1] = v48 + 14;
    v81 = v44;
    v51 = v78;
    sub_2321FDF18();
    sub_232000590(&qword_2541B6BF8, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C8]);
    v52 = v80;
    v53 = sub_232201AB8();
    v55 = v54;
    (*(void (**)(char *, uint64_t))(v79 + 8))(v51, v52);
    v87 = sub_232013174(v53, v55, (uint64_t *)v88);
    sub_232201710();
    swift_bridgeObjectRelease();
    v56 = *(void (**)(char *, uint64_t))(v5 + 8);
    v56(v10, v4);
    v57 = v81;
    _os_log_impl(&dword_231FFB000, v81, (os_log_type_t)v74, "[%s] encoding summary with morning index: %s", (uint8_t *)v48, 0x16u);
    v58 = v75;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v58, -1, -1);
    v59 = v48;
    v43 = v76;
    MEMORY[0x2348FF468](v59, -1, -1);

  }
  else
  {
    v56 = *(void (**)(char *, uint64_t))(v5 + 8);
    v56(v10, v4);

  }
  (*(void (**)(char *, uint64_t))(v85 + 8))(v26, v86);
  v60 = (uint64_t)v82;
  sub_232003E9C(0, &qword_2541B7118);
  v61 = v77;
  v43((char *)v60, v77, v4);
  v62 = (void *)sub_23200BAF0(v60);
  v63 = (uint64_t)v83;
  sub_2321FFE50();
  v64 = *MEMORY[0x24BE4AD48];
  v65 = sub_2321FFD78();
  v66 = *(_QWORD *)(v65 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 104))(v63, v64, v65);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
  result = objc_msgSend(v62, sel_data);
  if (result)
  {
    v68 = result;
    sub_232003E9C(0, &qword_2541B0CD0);
    v69 = sub_2321FDAD4();
    v71 = v70;

    v72 = v84;
    sub_23200054C(v63, v84, (uint64_t (*)(_QWORD))sub_23201C800);
    v89 = 0;
    memset(v88, 0, sizeof(v88));
    v42 = sub_232015828(v69, v71, 4, v72, 0, 0, (uint64_t)v88);
    sub_232003ED4(v69, v71);

    sub_232002CEC(v63, (uint64_t (*)(_QWORD))sub_23201C800);
    v56(v61, v4);
    return v42;
  }
  __break(1u);
  return result;
}

uint64_t sub_23208D534()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _BYTE *v20;
  NSObject *v21;
  os_log_type_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void (*v30)(_BYTE *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  void (*v33)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  _BYTE v38[4];
  int v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  sub_232025288(0);
  v1 = v0;
  MEMORY[0x24BDAC7A8](v0);
  v3 = &v38[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2320057B8(0, &qword_2541B3050, v4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v6 = v5;
  v50 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v49 = &v38[-v7];
  v48 = sub_23220039C();
  v46 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v9 = &v38[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_2321FDC6C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v47 = &v38[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = MEMORY[0x24BDAC7A8](v12);
  v45 = &v38[-v15];
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = &v38[-v17];
  MEMORY[0x24BDAC7A8](v16);
  v20 = &v38[-v19];
  sub_2321FDC60();
  sub_232200300();
  v44 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 16);
  v44(v18, v20, v10);
  v21 = sub_232200390();
  v22 = sub_2322012FC();
  v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    v24 = swift_slowAlloc();
    v42 = v6;
    v25 = v24;
    v40 = swift_slowAlloc();
    v52 = v40;
    *(_DWORD *)v25 = 136446466;
    v39 = v23;
    v26 = sub_232201BF0();
    v41 = v3;
    v51 = sub_232013174(v26, v27, &v52);
    v43 = v1;
    sub_232201710();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2082;
    sub_232000590(&qword_2541AF170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
    v28 = sub_232201AB8();
    v51 = sub_232013174(v28, v29, &v52);
    v3 = v41;
    sub_232201710();
    swift_bridgeObjectRelease();
    v30 = *(void (**)(_BYTE *, uint64_t))(v11 + 8);
    v30(v18, v10);
    _os_log_impl(&dword_231FFB000, v21, (os_log_type_t)v39, "[%{public}s] updating snippet with date: %{public}s", (uint8_t *)v25, 0x16u);
    v31 = v40;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v31, -1, -1);
    v32 = v25;
    v6 = v42;
    MEMORY[0x2348FF468](v32, -1, -1);
  }
  else
  {
    v30 = *(void (**)(_BYTE *, uint64_t))(v11 + 8);
    v30(v18, v10);
  }

  (*(void (**)(_BYTE *, uint64_t))(v46 + 8))(v9, v48);
  v33 = v44;
  v44(v45, v20, v10);
  v33(v47, v20, v10);
  sub_2321FD87C();
  v34 = sub_2321FD8B8();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v3, 0, 1, v34);
  v35 = v49;
  sub_2322006B4();
  sub_23208EDA4();
  v36 = sub_232200774();
  (*(void (**)(_BYTE *, uint64_t))(v50 + 8))(v35, v6);
  v30(v20, v10);
  return v36;
}

uint64_t sub_23208D958()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC9Summaries48BalanceCurrentValueSummarySharableModelGenerator_domain;
  v2 = sub_2321FE3BC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_23208D9B0()
{
  return type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator(0);
}

uint64_t type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator(uint64_t a1)
{
  return sub_23201A14C(a1, qword_255F9D870);
}

uint64_t sub_23208D9D8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC9Summaries48BalanceCurrentValueSummarySharableModelGenerator_domain;
  v4 = sub_2321FE3BC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

_UNKNOWN **sub_23208DA20()
{
  return &off_250100E40;
}

uint64_t sub_23208DA2C(uint64_t a1)
{
  uint64_t result;

  result = sub_232000590(&qword_255F9C230, type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator, (uint64_t)&unk_2322136C4);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23208DA68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23200054C(v1, a1, (uint64_t (*)(_QWORD))sub_232025288);
}

_UNKNOWN **sub_23208DA8C()
{
  return &off_250100E88;
}

uint64_t sub_23208DA98(uint64_t a1)
{
  uint64_t result;

  result = sub_232000590(qword_255F9D940, type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator, (uint64_t)&unk_2322136F4);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

_UNKNOWN **sub_23208DAD4()
{
  return &off_250100EA0;
}

uint64_t sub_23208DAE0(uint64_t a1)
{
  uint64_t result;

  result = sub_232000590(&qword_255F9D980, type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator, (uint64_t)&unk_232213720);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23208DB1C(uint64_t a1, _QWORD *a2, char a3, uint64_t a4, void (*a5)(_QWORD), uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  int v43;
  unsigned int *v44;
  _QWORD *v45;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  void (*v50)(_QWORD);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v51 = a4;
  sub_2320057B8(0, &qword_255F9DB00, (uint64_t (*)(uint64_t))sub_2320906E0, MEMORY[0x24BE45818]);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (uint64_t *)((char *)&v47 - v13);
  v15 = sub_23220039C();
  v54 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v47 - v19;
  if ((a3 & 1) != 0)
  {
    v53 = v12;
    v31 = a2;
    sub_232200300();
    v32 = a2;
    v33 = a2;
    v34 = sub_232200390();
    v35 = sub_2322012E4();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = swift_slowAlloc();
      v48 = (_QWORD *)swift_slowAlloc();
      v49 = swift_slowAlloc();
      v56 = v49;
      *(_DWORD *)v36 = 136446466;
      v50 = a5;
      _s30SleepSampleDaySummaryPublisherVMa(0);
      v37 = sub_232201BF0();
      v51 = v11;
      v55 = sub_232013174(v37, v38, &v56);
      v52 = v15;
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 12) = 2114;
      v39 = a2;
      v40 = _swift_stdlib_bridgeErrorToNSError();
      v55 = v40;
      v11 = v51;
      sub_232201710();
      v41 = v48;
      *v48 = v40;
      a5 = v50;
      sub_2320477E4(a2, 1);
      sub_2320477E4(a2, 1);
      _os_log_impl(&dword_231FFB000, v34, v35, "[%{public}s] query failed with error: %{public}@", (uint8_t *)v36, 0x16u);
      sub_2320477F0();
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v41, -1, -1);
      v42 = v49;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v42, -1, -1);
      MEMORY[0x2348FF468](v36, -1, -1);

      (*(void (**)(char *, uint64_t))(v54 + 8))(v18, v52);
    }
    else
    {
      sub_2320477E4(a2, 1);
      sub_2320477E4(a2, 1);

      (*(void (**)(char *, uint64_t))(v54 + 8))(v18, v15);
    }
    *v14 = a2;
    v12 = v53;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v53 + 104))(v14, *MEMORY[0x24BE45808], v11);
    v45 = a2;
    a5(v14);
    sub_2320477E4(a2, 1);
  }
  else
  {
    v52 = v15;
    v49 = a6;
    swift_bridgeObjectRetain();
    sub_232200300();
    swift_bridgeObjectRetain_n();
    v21 = sub_232200390();
    v22 = sub_2322012FC();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = swift_slowAlloc();
      v24 = swift_slowAlloc();
      v53 = v12;
      v25 = v24;
      v56 = v24;
      *(_DWORD *)v23 = 136446466;
      _s30SleepSampleDaySummaryPublisherVMa(0);
      v26 = sub_232201BF0();
      v50 = a5;
      v55 = sub_232013174(v26, v27, &v56);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      v55 = a2[2];
      v28 = sub_232201AB8();
      v55 = sub_232013174(v28, v29, &v56);
      a5 = v50;
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_2320477E4(a2, 0);
      sub_2320477E4(a2, 0);
      _os_log_impl(&dword_231FFB000, v21, v22, "[%{public}s] query found %s summarie(s).", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      v30 = v25;
      v12 = v53;
      MEMORY[0x2348FF468](v30, -1, -1);
      MEMORY[0x2348FF468](v23, -1, -1);
    }
    else
    {
      sub_2320477E4(a2, 0);
      sub_2320477E4(a2, 0);
    }

    (*(void (**)(char *, uint64_t))(v54 + 8))(v20, v52);
    v43 = *(unsigned __int8 *)(v51 + *(int *)(_s30SleepSampleDaySummaryPublisherV13ConfigurationVMa(0) + 24));
    *v14 = a2;
    if (v43 == 1)
      v44 = (unsigned int *)MEMORY[0x24BE45810];
    else
      v44 = (unsigned int *)MEMORY[0x24BE45800];
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, *v44, v11);
    a5(v14);
  }
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_23208E0A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23200054C(v1, a1, _s30SleepSampleDaySummaryPublisherV13ConfigurationVMa);
}

id sub_23208E0C8(uint64_t a1)
{
  uint64_t v1;

  return *(id *)(v1 + *(int *)(a1 + 20));
}

uint64_t sub_23208E0D8()
{
  sub_232000590(&qword_255F9DAF8, _s30SleepSampleDaySummaryPublisherVMa, (uint64_t)&unk_2322137E8);
  return sub_2321FF88C();
}

void sub_23208E140(uint64_t a1)
{
  sub_2320057B8(a1, &qword_255F9D988, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FFB0], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
}

uint64_t sub_23208E15C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  void (*v51)(char *, char *, uint64_t);
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t inited;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  id v70;
  unint64_t v71;
  void (*v72)(unint64_t, _QWORD, uint64_t);
  unint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t);
  uint64_t v81;
  void (*v82)(uint64_t, char *, uint64_t);
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD v116[4];

  v98 = a3;
  v111 = a2;
  v105 = sub_2321FE38C();
  v103 = *(_QWORD *)(v105 - 8);
  MEMORY[0x24BDAC7A8](v105);
  v104 = (char *)&v81 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2321FE3BC();
  v107 = *(_QWORD *)(v4 - 8);
  v108 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v106 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320164C0();
  v89 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v90 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v86 = (char *)&v81 - v9;
  sub_232047674();
  v87 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v88 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = _s30SleepSampleDaySummaryPublisherV13ConfigurationVMa(0);
  MEMORY[0x24BDAC7A8](v91);
  v92 = (uint64_t)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = _s30SleepSampleDaySummaryPublisherVMa(0);
  MEMORY[0x24BDAC7A8](v96);
  v95 = (uint64_t)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23202CEF8(0, &qword_255F9D990, v14, sub_23208EC00, (void (*)(void))sub_23208EC1C);
  v97 = v15;
  v94 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v93 = (char *)&v81 - v16;
  sub_23202CEF8(0, &qword_255F9D9A0, (void (*)(uint64_t))sub_23208EC38, sub_23208E140, (void (*)(void))sub_23208ECA4);
  v102 = v17;
  v101 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v100 = (char *)&v81 - v18;
  v19 = sub_2321FDC6C();
  MEMORY[0x24BDAC7A8](v19);
  v113 = sub_232200DB0();
  v85 = *(_QWORD *)(v113 - 8);
  v20 = MEMORY[0x24BDAC7A8](v113);
  v112 = (char *)&v81 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v81 - v22;
  v24 = sub_2321FDD14();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v81 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_2321FDDD4();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&v81 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v34 = (char *)&v81 - v33;
  (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v27, *MEMORY[0x24BDCEF70], v24);
  sub_2321FDD20();
  v35 = *(void (**)(char *, uint64_t))(v25 + 8);
  v36 = v28;
  v35(v27, v24);
  sub_2321FD894();
  v99 = v29;
  v37 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
  v37(v32, v34, v28);
  sub_232200D8C();
  sub_2321FD870();
  v37(v32, v34, v28);
  v38 = v112;
  sub_232200D8C();
  sub_2321FE3D4();
  sub_232016AD8(v116, v116[3]);
  v39 = sub_2321FE314();
  sub_23208EBBC();
  result = sub_232200E4C();
  if ((result & 1) != 0)
  {
    v41 = v89;
    v42 = *(int *)(v89 + 48);
    v109 = v34;
    v43 = v86;
    v44 = &v86[v42];
    v110 = v36;
    v82 = (void (*)(uint64_t, char *, uint64_t))v37;
    v45 = v85;
    v46 = *(void (**)(char *, char *, uint64_t))(v85 + 16);
    v84 = v23;
    v47 = v113;
    v46(v86, v23, v113);
    v46(v44, v38, v47);
    v48 = *(int *)(v41 + 48);
    v49 = v90;
    v83 = v39;
    v50 = &v90[v48];
    v46(v90, v43, v47);
    v46(v50, v44, v47);
    v51 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
    v52 = (uint64_t)v88;
    v51(v88, v49, v47);
    v53 = *(void (**)(char *, uint64_t))(v45 + 8);
    v53(v50, v47);
    v54 = &v49[*(int *)(v41 + 48)];
    v51(v49, v43, v47);
    v51(v54, v44, v47);
    v51((char *)(v52 + *(int *)(v87 + 36)), v54, v47);
    v90 = (char *)v53;
    v53(v49, v47);
    v55 = v92;
    sub_232025468(v52, v92, (uint64_t (*)(_QWORD))sub_232047674);
    v56 = v91;
    v82(v55 + *(int *)(v91 + 20), v109, v110);
    sub_2321FE3E0();
    *(_BYTE *)(v55 + *(int *)(v56 + 24)) = sub_2321FE848() & 1;
    v57 = v95;
    sub_23200054C(v55, v95, _s30SleepSampleDaySummaryPublisherV13ConfigurationVMa);
    *(_QWORD *)(v57 + *(int *)(v96 + 20)) = v83;
    sub_232002CEC(v55, _s30SleepSampleDaySummaryPublisherV13ConfigurationVMa);
    sub_232016AFC((uint64_t)v116);
    sub_23208EC00(0);
    sub_23208EC1C();
    v58 = v93;
    sub_2322007A4();
    sub_232002CEC(v57, _s30SleepSampleDaySummaryPublisherVMa);
    sub_23208ECC0();
    v59 = v97;
    v60 = sub_232200774();
    (*(void (**)(char *, uint64_t))(v94 + 8))(v58, v59);
    v115 = v60;
    sub_2321FE434();
    v61 = (void *)sub_2321FE3F8();
    sub_232027434();
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_232210D20;
    v63 = type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request(0);
    v64 = v98;
    *(_QWORD *)(inited + 32) = sub_2321FE464();
    v114 = inited;
    sub_232201050();
    LOBYTE(v55) = *(_BYTE *)(v64 + *(int *)(v63 + 36));
    sub_2320057B8(0, &qword_2541B7530, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v65 = sub_2321FE194();
    v66 = *(_QWORD *)(v65 - 8);
    v67 = *(_QWORD *)(v66 + 72);
    v68 = (*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
    v69 = swift_allocObject();
    if ((v55 & 1) != 0)
    {
      *(_OWORD *)(v69 + 16) = xmmword_232210D40;
      (*(void (**)(unint64_t, _QWORD, uint64_t))(v66 + 104))(v69 + v68, *MEMORY[0x24BE47410], v65);
    }
    else
    {
      *(_OWORD *)(v69 + 16) = xmmword_232210D30;
      v71 = v69 + v68;
      v72 = *(void (**)(unint64_t, _QWORD, uint64_t))(v66 + 104);
      v72(v71, *MEMORY[0x24BE47460], v65);
      v72(v71 + v67, *MEMORY[0x24BE47490], v65);
    }
    v70 = v61;
    sub_2321A492C(v69);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v73 = swift_bridgeObjectRetain();
    sub_2321A4950(v73);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, _QWORD, uint64_t))(v103 + 104))(v104, *MEMORY[0x24BE47918], v105);
    v74 = v106;
    sub_2321FE3B0();

    swift_bridgeObjectRelease();
    sub_23208EC38();
    sub_23208ECA4();
    v75 = sub_232200738();
    (*(void (**)(char *, uint64_t))(v107 + 8))(v74, v108);
    sub_232016AFC((uint64_t)v116);
    swift_release();
    v116[0] = v75;
    sub_23208E140(0);
    v76 = v100;
    sub_2322007A4();
    swift_release();
    sub_23208ED3C();
    v77 = v102;
    v78 = sub_232200774();
    (*(void (**)(char *, uint64_t))(v101 + 8))(v76, v77);
    v79 = v113;
    v80 = (void (*)(char *, uint64_t))v90;
    ((void (*)(char *, uint64_t))v90)(v112, v113);
    v80(v84, v79);
    (*(void (**)(char *, uint64_t))(v99 + 8))(v109, v110);
    return v78;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23208EBBC()
{
  return sub_232000590(&qword_2541B6BF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24A8]);
}

uint64_t _s30SleepSampleDaySummaryPublisherV13ConfigurationVMa(uint64_t a1)
{
  return sub_23201A14C(a1, qword_255F9DAB8);
}

uint64_t _s30SleepSampleDaySummaryPublisherVMa(uint64_t a1)
{
  return sub_23201A14C(a1, qword_255F9DA28);
}

void sub_23208EC00(uint64_t a1)
{
  sub_2320057B8(a1, &qword_2541B6A18, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FFB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

uint64_t sub_23208EC1C()
{
  return sub_232000590(&qword_255F9D998, _s30SleepSampleDaySummaryPublisherVMa, (uint64_t)&unk_232213830);
}

void sub_23208EC38()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9D9A8)
  {
    sub_23208EC00(255);
    sub_232002B9C();
    v0 = sub_232200624();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9D9A8);
  }
}

uint64_t sub_23208ECA4()
{
  return sub_232000590(&qword_255F9D9B0, (uint64_t (*)(uint64_t))sub_23208EC38, MEMORY[0x24BDB9AF8]);
}

unint64_t sub_23208ECC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F9D9B8;
  if (!qword_255F9D9B8)
  {
    sub_23202CEF8(255, &qword_255F9D990, (void (*)(uint64_t))_s30SleepSampleDaySummaryPublisherVMa, sub_23208EC00, (void (*)(void))sub_23208EC1C);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB96C0], v1);
    atomic_store(result, (unint64_t *)&qword_255F9D9B8);
  }
  return result;
}

uint64_t type metadata accessor for BalanceCurrentValueSummarySharableModelGenerator.Request(uint64_t a1)
{
  return sub_23201A14C(a1, (uint64_t *)&unk_2541B2758);
}

unint64_t sub_23208ED3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F9D9C0;
  if (!qword_255F9D9C0)
  {
    sub_23202CEF8(255, &qword_255F9D9A0, (void (*)(uint64_t))sub_23208EC38, sub_23208E140, (void (*)(void))sub_23208ECA4);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB96C0], v1);
    atomic_store(result, (unint64_t *)&qword_255F9D9C0);
  }
  return result;
}

unint64_t sub_23208EDA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B79D8;
  if (!qword_2541B79D8)
  {
    sub_2320057B8(255, &qword_2541B3050, (uint64_t (*)(uint64_t))sub_232025288, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB9DF8], v1);
    atomic_store(result, (unint64_t *)&qword_2541B79D8);
  }
  return result;
}

_QWORD *sub_23208EE04(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_232200DB0();
    v8 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    sub_232047674();
    v8((_QWORD *)((char *)a1 + *(int *)(v9 + 36)), (_QWORD *)((char *)a2 + *(int *)(v9 + 36)), v7);
    v10 = _s30SleepSampleDaySummaryPublisherV13ConfigurationVMa(0);
    v11 = *(int *)(v10 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_2321FDDD4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    *((_BYTE *)a1 + *(int *)(v10 + 24)) = *((_BYTE *)a2 + *(int *)(v10 + 24));
    v15 = *(int *)(a3 + 20);
    v16 = *(void **)((char *)a2 + v15);
    *(_QWORD *)((char *)a1 + v15) = v16;
    v17 = v16;
  }
  return a1;
}

void sub_23208EEFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_232200DB0();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  sub_232047674();
  v5(a1 + *(int *)(v6 + 36), v4);
  v7 = a1 + *(int *)(_s30SleepSampleDaySummaryPublisherV13ConfigurationVMa(0) + 20);
  v8 = sub_2321FDDD4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);

}

uint64_t sub_23208EF90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;

  v6 = sub_232200DB0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  sub_232047674();
  v7(a1 + *(int *)(v8 + 36), a2 + *(int *)(v8 + 36), v6);
  v9 = _s30SleepSampleDaySummaryPublisherV13ConfigurationVMa(0);
  v10 = *(int *)(v9 + 20);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_2321FDDD4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  *(_BYTE *)(a1 + *(int *)(v9 + 24)) = *(_BYTE *)(a2 + *(int *)(v9 + 24));
  v14 = *(int *)(a3 + 20);
  v15 = *(void **)(a2 + v14);
  *(_QWORD *)(a1 + v14) = v15;
  v16 = v15;
  return a1;
}

uint64_t sub_23208F05C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;

  v6 = sub_232200DB0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  sub_232047674();
  v7(a1 + *(int *)(v8 + 36), a2 + *(int *)(v8 + 36), v6);
  v9 = _s30SleepSampleDaySummaryPublisherV13ConfigurationVMa(0);
  v10 = *(int *)(v9 + 20);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_2321FDDD4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  *(_BYTE *)(a1 + *(int *)(v9 + 24)) = *(_BYTE *)(a2 + *(int *)(v9 + 24));
  v14 = *(int *)(a3 + 20);
  v15 = *(void **)(a2 + v14);
  v16 = *(void **)(a1 + v14);
  *(_QWORD *)(a1 + v14) = v15;
  v17 = v15;

  return a1;
}

uint64_t sub_23208F130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_232200DB0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  sub_232047674();
  v7(a1 + *(int *)(v8 + 36), a2 + *(int *)(v8 + 36), v6);
  v9 = _s30SleepSampleDaySummaryPublisherV13ConfigurationVMa(0);
  v10 = *(int *)(v9 + 20);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_2321FDDD4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  *(_BYTE *)(a1 + *(int *)(v9 + 24)) = *(_BYTE *)(a2 + *(int *)(v9 + 24));
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_23208F1F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v6 = sub_232200DB0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  sub_232047674();
  v7(a1 + *(int *)(v8 + 36), a2 + *(int *)(v8 + 36), v6);
  v9 = _s30SleepSampleDaySummaryPublisherV13ConfigurationVMa(0);
  v10 = *(int *)(v9 + 20);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_2321FDDD4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  *(_BYTE *)(a1 + *(int *)(v9 + 24)) = *(_BYTE *)(a2 + *(int *)(v9 + 24));
  v14 = *(int *)(a3 + 20);
  v15 = *(void **)(a1 + v14);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);

  return a1;
}

uint64_t sub_23208F2C8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23208F2D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = _s30SleepSampleDaySummaryPublisherV13ConfigurationVMa(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23208F350()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23208F35C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = _s30SleepSampleDaySummaryPublisherV13ConfigurationVMa(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_23208F3D4()
{
  uint64_t result;
  unint64_t v1;

  result = _s30SleepSampleDaySummaryPublisherV13ConfigurationVMa(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_23208F448(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_232200DB0();
    v8 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    sub_232047674();
    v8((_QWORD *)((char *)a1 + *(int *)(v9 + 36)), (_QWORD *)((char *)a2 + *(int *)(v9 + 36)), v7);
    v10 = *(int *)(a3 + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_2321FDDD4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
    *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t sub_23208F524(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_232200DB0();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  sub_232047674();
  v5(a1 + *(int *)(v6 + 36), v4);
  v7 = a1 + *(int *)(a2 + 20);
  v8 = sub_2321FDDD4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t sub_23208F5A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_232200DB0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  sub_232047674();
  v7(a1 + *(int *)(v8 + 36), a2 + *(int *)(v8 + 36), v6);
  v9 = *(int *)(a3 + 20);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_2321FDDD4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_23208F654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_232200DB0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  sub_232047674();
  v7(a1 + *(int *)(v8 + 36), a2 + *(int *)(v8 + 36), v6);
  v9 = *(int *)(a3 + 20);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_2321FDDD4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_23208F704(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_232200DB0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  sub_232047674();
  v7(a1 + *(int *)(v8 + 36), a2 + *(int *)(v8 + 36), v6);
  v9 = *(int *)(a3 + 20);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_2321FDDD4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_23208F7B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_232200DB0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  sub_232047674();
  v7(a1 + *(int *)(v8 + 36), a2 + *(int *)(v8 + 36), v6);
  v9 = *(int *)(a3 + 20);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_2321FDDD4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_23208F864()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23208F870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v14;

  sub_232047674();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_2321FDDD4();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 2)
    return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_23208F928()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23208F934(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  sub_232047674();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_2321FDDD4();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  return result;
}

void sub_23208F9D8()
{
  unint64_t v0;
  unint64_t v1;

  sub_232047674();
  if (v0 <= 0x3F)
  {
    sub_2321FDDD4();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *sub_23208FA64(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2321FD8B8();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_232025288(0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a3[5];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_2321FE4A0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    v15 = a3[7];
    *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    v16 = (uint64_t *)((char *)a1 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = a3[8];
    v20 = a3[9];
    v21 = *(void **)((char *)a2 + v19);
    *(uint64_t *)((char *)a1 + v19) = (uint64_t)v21;
    *((_BYTE *)a1 + v20) = *((_BYTE *)a2 + v20);
    swift_bridgeObjectRetain();
    v22 = v21;
  }
  return a1;
}

void sub_23208FBA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_2321FD8B8();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = a1 + *(int *)(a2 + 20);
  v7 = sub_2321FE4A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();

}

char *sub_23208FC3C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;

  v6 = sub_2321FD8B8();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_232025288(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_2321FE4A0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  v13 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = v16;
  v17 = a3[8];
  v18 = a3[9];
  v19 = *(void **)&a2[v17];
  *(_QWORD *)&a1[v17] = v19;
  a1[v18] = a2[v18];
  swift_bridgeObjectRetain();
  v20 = v19;
  return a1;
}

char *sub_23208FD4C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;

  v6 = sub_2321FD8B8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_232025288(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_2321FE4A0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  a1[a3[6]] = a2[a3[6]];
  v16 = a3[7];
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a3[8];
  v20 = *(void **)&a2[v19];
  v21 = *(void **)&a1[v19];
  *(_QWORD *)&a1[v19] = v20;
  v22 = v20;

  a1[a3[9]] = a2[a3[9]];
  return a1;
}

char *sub_23208FECC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_2321FD8B8();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_232025288(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_2321FE4A0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  v13 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  v14 = a3[9];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  a1[v14] = a2[v14];
  return a1;
}

char *sub_23208FFCC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;

  v6 = sub_2321FD8B8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_232025288(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_2321FE4A0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v20 = *(_QWORD *)v18;
  v19 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v17 = v20;
  *((_QWORD *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  v21 = a3[8];
  v22 = *(void **)&a1[v21];
  *(_QWORD *)&a1[v21] = *(_QWORD *)&a2[v21];

  a1[a3[9]] = a2[a3[9]];
  return a1;
}

uint64_t sub_232090134()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_232090140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  sub_232025288(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_2321FE4A0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_2320901EC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2320901F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  sub_232025288(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_2321FE4A0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
  return result;
}

void sub_2320902A0()
{
  unint64_t v0;
  unint64_t v1;

  sub_232025288(319);
  if (v0 <= 0x3F)
  {
    sub_2321FE4A0();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_23209034C()
{
  return MEMORY[0x24BEE3F20];
}

id sub_232090358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_QWORD);
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  Class v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v25;
  uint64_t v26;

  v26 = a2;
  v5 = _s30SleepSampleDaySummaryPublisherV13ConfigurationVMa(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2321FDDD4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232047674();
  MEMORY[0x24BDAC7A8](v13);
  sub_23200054C(a1, (uint64_t)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1 + *(int *)(v5 + 20), v9);
  sub_23200054C(a1, (uint64_t)v8, _s30SleepSampleDaySummaryPublisherV13ConfigurationVMa);
  v16 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v17 = (v7 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject();
  sub_232025468((uint64_t)v8, v18 + v16, _s30SleepSampleDaySummaryPublisherV13ConfigurationVMa);
  v19 = (_QWORD *)(v18 + v17);
  *v19 = v26;
  v19[1] = a3;
  sub_2320258FC(0, (unint64_t *)&qword_2541B6A20, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FFB0], sub_2320906C4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE40120]);
  v21 = objc_allocWithZone(v20);
  swift_retain();
  v22 = (id)sub_2321FDF6C();
  v23 = (void *)sub_232200E94();
  objc_msgSend(v22, sel_setDebugIdentifier_, v23);

  return v22;
}

uint64_t sub_23209057C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = _s30SleepSampleDaySummaryPublisherV13ConfigurationVMa(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_232200DB0();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  sub_232047674();
  v5(v3 + *(int *)(v6 + 36), v4);
  v7 = v3 + *(int *)(v1 + 20);
  v8 = sub_2321FDDD4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_232090658(uint64_t a1, _QWORD *a2, char a3)
{
  uint64_t v3;
  char v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v6 = a3 & 1;
  v7 = *(_QWORD *)(_s30SleepSampleDaySummaryPublisherV13ConfigurationVMa(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = v3 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_23208DB1C(a1, a2, v6, v3 + v8, *(void (**)(_QWORD))v9, *(_QWORD *)(v9 + 8));
}

uint64_t sub_2320906C4()
{
  return sub_232000590(&qword_2541B6A10, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FFB0], MEMORY[0x24BE3FFA8]);
}

void sub_2320906E0(uint64_t a1)
{
  sub_2320057B8(a1, qword_255F9DB08, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FFB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
}

uint64_t sub_2320906FC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  _QWORD *v13;
  uint64_t v15;

  v8 = sub_2321FDC6C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(a1, sel_endDate);
  sub_2321FDC30();

  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v4;
  v13[3] = a3;
  v13[4] = a4;
  swift_retain();
  swift_retain();
  sub_232090988((uint64_t)v11, (uint64_t)sub_232091B54, (uint64_t)v13);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void sub_2320907F8(uint64_t a1, uint64_t a2, void (*a3)(void *, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  uint64_t (*v11)(_QWORD);
  void *v12;
  id v13;
  char *v14;
  char *v15;
  _BYTE v16[16];

  v5 = type metadata accessor for UnderwaterDepthCurrentValueSharableModelStep.StatisticsCollectionGroup(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (void **)&v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_232091B74();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (void **)&v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23200054C(a1, (uint64_t)v10, v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = *v10;
    v13 = v12;
    a3(v12, 1);

  }
  else
  {
    sub_232025468((uint64_t)v10, (uint64_t)v7, type metadata accessor for UnderwaterDepthCurrentValueSharableModelStep.StatisticsCollectionGroup);
    v14 = sub_232091094(v7);
    v15 = v14;
    a3(v14, 0);

    sub_232002CEC((uint64_t)v7, type metadata accessor for UnderwaterDepthCurrentValueSharableModelStep.StatisticsCollectionGroup);
  }
}

void sub_232090988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v28 = a2;
  v29 = a3;
  v4 = sub_2321FDC6C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (void *)objc_opt_self();
  v8 = (void *)*MEMORY[0x24BDD31F0];
  sub_232035344(0, &qword_2541B5868);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_232210D40;
  *(_QWORD *)(v9 + 56) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v9 + 32) = 0;
  v10 = v8;
  v11 = (void *)sub_232201020();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v7, sel_predicateForObjectsWithMetadataKey_allowedValues_, v10, v11);

  v13 = objc_msgSend(v7, sel_predicateForObjectsWithMetadataKey_, v10);
  v14 = (void *)objc_opt_self();
  v15 = objc_msgSend(v14, sel_notPredicateWithSubpredicate_, v13);

  sub_232035344(0, (unint64_t *)&qword_2541B78C8);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_232213870;
  *(_QWORD *)(v16 + 32) = v12;
  *(_QWORD *)(v16 + 40) = v15;
  v30 = v16;
  sub_232201050();
  sub_232003E9C(0, (unint64_t *)&qword_2541B0C00);
  v26 = v12;
  v17 = v15;
  v18 = (void *)sub_232201020();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v14, sel_orPredicateWithSubpredicates_, v18);

  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v20 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = v27;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v21 + v20, (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v22 = (_QWORD *)(v21 + ((v6 + v20 + 7) & 0xFFFFFFFFFFFFFFF8));
  v23 = v29;
  *v22 = v28;
  v22[1] = v23;
  v24 = v19;
  swift_retain();
  swift_retain();
  sub_232132BF0(a1, v19, (void (*)(_QWORD, _QWORD))sub_232091D9C, v21);
  swift_release();

}

void sub_232090C7C(void *a1, char a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD *), uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(_QWORD *);

  v32 = a4;
  v33 = a5;
  sub_232091B74();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_2321FDC6C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x24BDAC7A8](v13);
  if ((a2 & 1) != 0)
  {
    *v12 = a1;
    swift_storeEnumTagMultiPayload();
    v29 = a1;
    v33(v12);
    sub_232002CEC((uint64_t)v12, (uint64_t (*)(_QWORD))sub_232091B74);
  }
  else
  {
    v16 = (void *)objc_opt_self();
    v31 = a6;
    v17 = (void *)*MEMORY[0x24BDD31F0];
    sub_232035344(0, &qword_2541B5868);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_232210D40;
    *(_QWORD *)(v18 + 56) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v18 + 32) = 1;
    sub_232091DA8(a1);
    v19 = v17;
    v20 = sub_232201020();
    v30 = a3;
    v21 = (void *)v20;
    swift_bridgeObjectRelease();
    v22 = objc_msgSend(v16, sel_predicateForObjectsWithMetadataKey_allowedValues_, v19, v21);

    v23 = v32;
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v32, v13);
    v24 = (*(unsigned __int8 *)(v14 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    v25 = swift_allocObject();
    *(_QWORD *)(v25 + 16) = a1;
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v25 + v24, (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
    v26 = (_QWORD *)(v25 + ((v15 + v24 + 7) & 0xFFFFFFFFFFFFFFF8));
    v27 = v31;
    *v26 = v33;
    v26[1] = v27;
    sub_232091DA8(a1);
    v28 = v22;
    swift_retain();
    sub_232132BF0(v23, v22, (void (*)(_QWORD, _QWORD))sub_232091E48, v25);

    sub_232047860(a1);
    swift_release();

  }
}

uint64_t sub_232090F14(void *a1, char a2, void *a3, uint64_t a4, void (*a5)(_QWORD *))
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  char *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t (*v21)(_QWORD);
  id v22;
  uint64_t v24;

  sub_232091B74();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for UnderwaterDepthCurrentValueSharableModelStep.StatisticsCollectionGroup(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (uint64_t *)((char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((a2 & 1) != 0)
  {
    *v12 = a1;
    swift_storeEnumTagMultiPayload();
    v22 = a1;
    a5(v12);
    v21 = (uint64_t (*)(_QWORD))sub_232091B74;
    v20 = (uint64_t)v12;
  }
  else
  {
    v17 = (char *)v16 + *(int *)(v14 + 24);
    v18 = sub_2321FDC6C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v17, a4, v18);
    *v16 = a3;
    v16[1] = a1;
    sub_23200054C((uint64_t)v16, (uint64_t)v12, type metadata accessor for UnderwaterDepthCurrentValueSharableModelStep.StatisticsCollectionGroup);
    swift_storeEnumTagMultiPayload();
    sub_232091DA8(a1);
    v19 = a3;
    a5(v12);
    sub_232002CEC((uint64_t)v12, (uint64_t (*)(_QWORD))sub_232091B74);
    v20 = (uint64_t)v16;
    v21 = type metadata accessor for UnderwaterDepthCurrentValueSharableModelStep.StatisticsCollectionGroup;
  }
  return sub_232002CEC(v20, v21);
}

char *sub_232091094(void **a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *result;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _OWORD v22[2];
  uint64_t v23;

  sub_23201C800();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v22 - v8;
  v10 = sub_232091284(a1);
  if (v2)
    return v1;
  v11 = v10;
  v12 = &v1[qword_2541BF5C0];
  v13 = sub_232200024();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v9, v12, v13);
  v14 = *MEMORY[0x24BE4AD68];
  v15 = sub_2321FFD78();
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 104))(v9, v14, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v9, 0, 1, v15);
  result = (char *)objc_msgSend(v11, sel_data);
  if (result)
  {
    v18 = result;
    sub_232003E9C(0, &qword_2541B0CD0);
    v19 = sub_2321FDAD4();
    v21 = v20;

    sub_23200054C((uint64_t)v9, (uint64_t)v7, (uint64_t (*)(_QWORD))sub_23201C800);
    v23 = 0;
    memset(v22, 0, sizeof(v22));
    v1 = (char *)sub_232015828(v19, v21, 21, (uint64_t)v7, 0, 0, (uint64_t)v22);
    sub_232003ED4(v19, v21);

    sub_232002CEC((uint64_t)v9, (uint64_t (*)(_QWORD))sub_23201C800);
    return v1;
  }
  __break(1u);
  return result;
}

char *sub_232091284(void **a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *result;
  char *v21;
  char *v22;
  char *v23;
  void **v24;
  id v25;
  char *v26;
  char *v27;
  id v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint8_t *v32;
  void *v33;
  double v34;
  id v35;
  uint64_t v36;
  uint8_t *v37;
  uint64_t v38;
  char *v39;
  void *v40;
  double v41;
  id v42;
  uint64_t v43;
  uint8_t *v44;
  uint64_t v45;
  char *v46;
  void *v47;
  double v48;
  char *v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  char *v54;
  id v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  char *v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint8_t *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;

  v2 = sub_23220039C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2321FDC6C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v61 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v61 - v14;
  v16 = v70;
  v17 = sub_232091BE0(*a1);
  if (v16)
    return v10;
  v70 = v17;
  v64 = v15;
  v65 = v10;
  v66 = v13;
  v67 = v7;
  v18 = v69;
  v62 = v3;
  v63 = v2;
  v68 = (uint8_t *)v6;
  v19 = sub_232091BE0(a1[1]);
  v21 = v19;
  if (!v70)
  {
    if (!v19)
    {
      v49 = v5;
      sub_232200318();
      v50 = v18;
      swift_retain_n();
      v51 = sub_232200390();
      v52 = sub_2322012F0();
      if (os_log_type_enabled(v51, v52))
      {
        v53 = (uint8_t *)swift_slowAlloc();
        v54 = (char *)swift_slowAlloc();
        v70 = v54;
        *(_DWORD *)v53 = 136315138;
        v10 = (char *)(v53 + 12);
        v72 = v54;
        v68 = v53 + 4;
        v55 = objc_msgSend(*(id *)(v50+ qword_2541BF5D0+ *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28)), sel_identifier);
        v56 = sub_232200EC4();
        v58 = v57;

        v71 = sub_232013174(v56, v58, (uint64_t *)&v72);
        sub_232201710();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_231FFB000, v51, v52, "Unexpectedly received no maximum quantities for %s", v53, 0xCu);
        v59 = v70;
        swift_arrayDestroy();
        MEMORY[0x2348FF468](v59, -1, -1);
        MEMORY[0x2348FF468](v53, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      (*(void (**)(char *, uint64_t))(v62 + 8))(v49, v63);
      sub_232066DA4();
      swift_allocError();
      *v60 = 3;
      swift_willThrow();
      return v10;
    }
    v69 = 0;
    v22 = v19;
    v35 = objc_msgSend(v22, sel_codableRepresentation);
    v36 = type metadata accessor for UnderwaterDepthCurrentValueSharableModelStep.StatisticsCollectionGroup(0);
    v38 = v67;
    v37 = v68;
    v39 = v65;
    (*(void (**)(char *, char *, uint8_t *))(v67 + 16))(v65, (char *)a1 + *(int *)(v36 + 24), v68);
    result = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A540]), sel_init);
    if (result)
    {
      v10 = result;
      objc_msgSend(v10, sel_setValue_, v35);
      objc_msgSend(v10, sel_setValueClamped_, 1);
      v40 = (void *)sub_2321FDBF4();
      v41 = MEMORY[0x2348FEDA8]();

      objc_msgSend(v10, sel_setDateData_, v41);
      (*(void (**)(char *, uint8_t *))(v38 + 8))(v39, v37);
      goto LABEL_16;
    }
    goto LABEL_22;
  }
  v69 = 0;
  if (v19)
  {
    v22 = v70;
    v23 = v21;
    v24 = a1;
    v25 = objc_msgSend(v22, sel_compare_, v23);
    if (v25 == (id)-1)
      v26 = v23;
    else
      v26 = v22;
    v27 = v26;
    v28 = objc_msgSend(v27, sel_codableRepresentation);
    v29 = (char *)v24
        + *(int *)(type metadata accessor for UnderwaterDepthCurrentValueSharableModelStep.StatisticsCollectionGroup(0)
                 + 24);
    v31 = v66;
    v30 = v67;
    v32 = v68;
    (*(void (**)(char *, char *, uint8_t *))(v67 + 16))(v66, v29, v68);
    result = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A540]), sel_init);
    if (result)
    {
      v10 = result;
      objc_msgSend(v10, sel_setValue_, v28);
      objc_msgSend(v10, sel_setValueClamped_, v25 == (id)-1);
      v33 = (void *)sub_2321FDBF4();
      v34 = MEMORY[0x2348FEDA8]();

      objc_msgSend(v10, sel_setDateData_, v34);
      (*(void (**)(char *, uint8_t *))(v30 + 8))(v31, v32);

LABEL_16:
      return v10;
    }
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v22 = v70;
  v42 = objc_msgSend(v22, sel_codableRepresentation);
  v43 = type metadata accessor for UnderwaterDepthCurrentValueSharableModelStep.StatisticsCollectionGroup(0);
  v45 = v67;
  v44 = v68;
  v46 = v64;
  (*(void (**)(char *, char *, uint8_t *))(v67 + 16))(v64, (char *)a1 + *(int *)(v43 + 24), v68);
  result = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A540]), sel_init);
  if (result)
  {
    v10 = result;
    objc_msgSend(v10, sel_setValue_, v42);
    objc_msgSend(v10, sel_setValueClamped_, 0);
    v47 = (void *)sub_2321FDBF4();
    v48 = MEMORY[0x2348FEDA8]();

    objc_msgSend(v10, sel_setDateData_, v48);
    (*(void (**)(char *, uint8_t *))(v45 + 8))(v46, v44);
    goto LABEL_16;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_232091884(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, char *, uint64_t);
  void (*v19)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v22 = a1;
  v5 = sub_232200180();
  v23 = *(_QWORD *)(v5 - 8);
  v24 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_232200024();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v21 - v16;
  sub_23200054C(a1, (uint64_t)&v21 - v16, type metadata accessor for SummariesFullProfileExecutor.Request);
  v18 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v18(v11, a2, v8);
  v18((char *)(v2 + qword_2541BF5C0), v11, v8);
  sub_23200054C((uint64_t)v17, (uint64_t)v15, type metadata accessor for SummariesFullProfileExecutor.Request);
  sub_232200174();
  v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v11, v8);
  sub_232002CEC((uint64_t)v17, type metadata accessor for SummariesFullProfileExecutor.Request);
  sub_232025468((uint64_t)v15, v2 + qword_2541BF5D0, type metadata accessor for SummariesFullProfileExecutor.Request);
  (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v2 + qword_2541BF5C8, v7, v24);
  v19(a2, v8);
  sub_232002CEC(v22, type metadata accessor for SummariesFullProfileExecutor.Request);
  return v2;
}

uint64_t sub_232091A78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_232002CEC(v0 + qword_2541BF5D0, type metadata accessor for SummariesFullProfileExecutor.Request);
  v1 = v0 + qword_2541BF5C8;
  v2 = sub_232200180();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + qword_2541BF5C0;
  v4 = sub_232200024();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UnderwaterDepthCurrentValueSharableModelStep(uint64_t a1)
{
  return sub_23201A14C(a1, qword_255F9DB38);
}

uint64_t sub_232091B28()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_232091B54(uint64_t a1)
{
  uint64_t v1;

  sub_2320907F8(a1, *(_QWORD *)(v1 + 16), *(void (**)(void *, uint64_t))(v1 + 24));
}

uint64_t type metadata accessor for UnderwaterDepthCurrentValueSharableModelStep.StatisticsCollectionGroup(uint64_t a1)
{
  return sub_23201A14C(a1, qword_255F9DCB0);
}

void sub_232091B74()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9DC50)
  {
    type metadata accessor for UnderwaterDepthCurrentValueSharableModelStep.StatisticsCollectionGroup(255);
    sub_232002B9C();
    v0 = sub_232201BA8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9DC50);
  }
}

char *sub_232091BE0(void *a1)
{
  id v1;
  unint64_t v2;
  char *v3;
  char *result;
  char *v5;
  id v6;

  v1 = objc_msgSend(a1, sel_statistics);
  sub_232003E9C(0, (unint64_t *)&qword_2541B7EB8);
  v2 = sub_232201038();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = (char *)sub_232201998();
    swift_bridgeObjectRelease();
    if (!v3)
      goto LABEL_9;
  }
  else
  {
    v3 = *(char **)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v3)
    {
LABEL_9:
      swift_bridgeObjectRelease();
      v6 = objc_msgSend(v3, sel_maximumQuantity);

      return (char *)v6;
    }
  }
  result = v3 - 1;
  if (__OFSUB__(v3, 1))
  {
    __break(1u);
    goto LABEL_13;
  }
  if ((v2 & 0xC000000000000001) != 0)
  {
LABEL_13:
    v5 = (char *)MEMORY[0x2348FEA30](result, v2);
    goto LABEL_8;
  }
  if (((unint64_t)result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if ((unint64_t)result < *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v5 = (char *)*(id *)(v2 + 8 * (_QWORD)result + 32);
LABEL_8:
    v3 = v5;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_232091D08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_2321FDC6C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_232091D9C(uint64_t a1, char a2)
{
  return sub_232091E54(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, unint64_t, _QWORD, _QWORD))sub_232090C7C);
}

id sub_232091DA8(id a1)
{
  return a1;
}

uint64_t sub_232091DB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_2321FDC6C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_232091E48(uint64_t a1, char a2)
{
  return sub_232091E54(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, unint64_t, _QWORD, _QWORD))sub_232090F14);
}

uint64_t sub_232091E54(uint64_t a1, char a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, unint64_t, _QWORD, _QWORD))
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;

  v5 = a2 & 1;
  v6 = *(_QWORD *)(sub_2321FDC6C() - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (_QWORD *)(v3 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  return a3(a1, v5, *(_QWORD *)(v3 + 16), v3 + v7, *v8, v8[1]);
}

char *sub_232091ECC(char *a1, char **a2, uint64_t a3)
{
  int v3;
  char *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  char *v12;
  char *v13;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = a2[1];
    *((_QWORD *)a1 + 1) = v6;
    v7 = *(int *)(a3 + 24);
    v8 = &a1[v7];
    v9 = (uint64_t)a2 + v7;
    v10 = sub_2321FDC6C();
    v11 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v12 = v4;
    v13 = v6;
    v11(v8, v9, v10);
  }
  return v5;
}

uint64_t sub_232091F74(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  v4 = (char *)a1 + *(int *)(a2 + 24);
  v5 = sub_2321FDC6C();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_232091FC4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  void *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  id v11;
  id v12;

  v4 = *(void **)a2;
  v5 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v5;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2321FDC6C();
  v10 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v11 = v4;
  v12 = v5;
  v10(v7, v8, v9);
  return a1;
}

uint64_t sub_23209203C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  v9 = *(void **)(a2 + 8);
  v10 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v9;
  v11 = v9;

  v12 = *(int *)(a3 + 24);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_2321FDC6C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

_OWORD *sub_2320920C0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_2321FDC6C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_23209211C(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = a2[1];

  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_2321FDC6C();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_232092198()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2320921A4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2321FDC6C();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_232092220()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_23209222C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_2321FDC6C();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_2320922A0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2321FDC6C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

id sub_232092318(void *a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id result;
  void *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  void *v48;
  uint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  void *v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  id v70;
  void *v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  void *v78;
  void *v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  id v86;
  NSObject *v87;
  os_log_type_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  id v94;
  id v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  id v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  uint64_t v105;
  __int128 v106;
  __int128 v107;
  uint64_t v108;
  ValueMetadata *v109;

  v104 = a3;
  v102 = a2;
  v4 = sub_23220039C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v100 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_2321FFD78();
  v103 = *(_QWORD *)(v105 - 8);
  v8 = MEMORY[0x24BDAC7A8](v105);
  v10 = (char *)&v100 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v100 - v11;
  v13 = sub_2321FDC6C();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23201C800();
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v17);
  v101 = (uint64_t)&v100 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v100 - v22;
  objc_opt_self();
  v24 = swift_dynamicCastObjCClass();
  if (v24)
  {
    v25 = (void *)v24;
    v26 = a1;
    sub_232092CE4(v25);
    if (v27)
    {
      v28 = v27;
      v29 = sub_232200180();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v23, v102, v29);
      v30 = v103;
      v31 = v105;
      (*(void (**)(char *, _QWORD, uint64_t))(v103 + 104))(v23, *MEMORY[0x24BE4AD70], v105);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v23, 0, 1, v31);
      v32 = v104;
      result = objc_msgSend(v28, sel_data);
      if (result)
      {
        v34 = result;
        sub_232003E9C(0, &qword_2541B0CD0);
        v35 = sub_2321FDAD4();
        v37 = v36;

        v38 = v101;
        sub_23201C854((uint64_t)v23, v101);
        v108 = 0;
        v106 = 0u;
        v107 = 0u;
        v39 = sub_232015828(v35, v37, 19, v38, (uint64_t)v32, 0, (uint64_t)&v106);

        sub_232003ED4(v35, v37);
        sub_23201C898((uint64_t)v23);

        return v39;
      }
      __break(1u);
      goto LABEL_26;
    }
    sub_232003E9C(0, &qword_2541B56B0);
    v50 = objc_msgSend(v25, sel_quantity);
    sub_232093434(v25);
    v51 = HKCodableSummaryQuantityValue.init(quantity:date:)(v50, (uint64_t)v15);
    v52 = sub_232200180();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v12, v102, v52);
    v53 = v103;
    (*(void (**)(char *, _QWORD, uint64_t))(v103 + 104))(v12, *MEMORY[0x24BE4AD70], v105);
    v54 = objc_msgSend(v26, sel_metadata);
    v100 = v26;
    if (v54)
    {
      v55 = v54;
      v56 = sub_232200DD4();

    }
    else
    {
      v56 = 0;
    }
    v77 = v104;
    result = objc_msgSend(v51, sel_data);
    if (!result)
      goto LABEL_27;
    v78 = result;
    v79 = v51;
    sub_232003E9C(0, &qword_2541B0CD0);
    v80 = sub_2321FDAD4();
    v82 = v81;

    v83 = v101;
    v84 = v105;
    (*(void (**)(uint64_t, char *, uint64_t))(v53 + 16))(v101, v12, v105);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v53 + 56))(v83, 0, 1, v84);
    v108 = 0;
    v106 = 0u;
    v107 = 0u;
    v39 = sub_232015828(v80, v82, 14, v83, (uint64_t)v77, v56, (uint64_t)&v106);

    sub_232003ED4(v80, v82);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v12, v84);
    goto LABEL_19;
  }
  v40 = v5;
  objc_opt_self();
  v41 = swift_dynamicCastObjCClass();
  if (v41)
  {
    v42 = (void *)v41;
    v43 = a1;
    v44 = sub_23209332C(v42);
    v45 = sub_232200180();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v10, v102, v45);
    v46 = v103;
    (*(void (**)(char *, _QWORD, uint64_t))(v103 + 104))(v10, *MEMORY[0x24BE4AD70], v105);
    v47 = objc_msgSend(v43, sel_metadata);
    v100 = v43;
    if (v47)
    {
      v48 = v47;
      v49 = sub_232200DD4();

    }
    else
    {
      v49 = 0;
    }
    v70 = v104;
    result = objc_msgSend(v44, sel_data);
    if (!result)
    {
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v71 = result;
    sub_232003E9C(0, &qword_2541B0CD0);
    v72 = sub_2321FDAD4();
    v74 = v73;

    v75 = v101;
    v76 = v105;
    (*(void (**)(uint64_t, char *, uint64_t))(v46 + 16))(v101, v10, v105);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v46 + 56))(v75, 0, 1, v76);
    v108 = 0;
    v106 = 0u;
    v107 = 0u;
    v39 = sub_232015828(v72, v74, 6, v75, (uint64_t)v70, v49, (uint64_t)&v106);

    sub_232003ED4(v72, v74);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v10, v76);
LABEL_19:

    return v39;
  }
  objc_opt_self();
  v57 = swift_dynamicCastObjCClass();
  if (!v57)
  {
    v85 = v7;
    sub_232200354();
    v86 = a1;
    v87 = sub_232200390();
    v88 = sub_2322012E4();
    v89 = v88;
    if (os_log_type_enabled(v87, v88))
    {
      v90 = swift_slowAlloc();
      v105 = (uint64_t)v85;
      LODWORD(v103) = v89;
      v91 = v90;
      v104 = (id)swift_slowAlloc();
      *(_QWORD *)&v106 = v104;
      *(_DWORD *)v91 = 136315394;
      v109 = &type metadata for MostRecentSampleCurrentValueSharableModelUtilities;
      sub_232093670();
      v92 = sub_232200F00();
      v109 = (ValueMetadata *)sub_232013174(v92, v93, (uint64_t *)&v106);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v91 + 12) = 2080;
      v94 = v86;
      v95 = objc_msgSend(v94, sel_description);
      v96 = sub_232200EC4();
      v98 = v97;

      v109 = (ValueMetadata *)sub_232013174(v96, v98, (uint64_t *)&v106);
      sub_232201710();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v87, (os_log_type_t)v103, "[%s]: Unsupported most recent sample type: %s", (uint8_t *)v91, 0x16u);
      v99 = v104;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v99, -1, -1);
      MEMORY[0x2348FF468](v91, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v105, v4);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v40 + 8))(v85, v4);
    }
    return 0;
  }
  v58 = (void *)v57;
  sub_232003E9C(0, &qword_2541B0CF0);
  v59 = a1;
  v60 = HKCodableSummaryAudiogramValue.init(audiogram:)(v58);
  v61 = sub_232200180();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v19, v102, v61);
  v62 = v103;
  v63 = v105;
  (*(void (**)(char *, _QWORD, uint64_t))(v103 + 104))(v19, *MEMORY[0x24BE4AD70], v105);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v19, 0, 1, v63);
  v64 = v104;
  result = objc_msgSend(v60, sel_data);
  if (result)
  {
    v65 = result;
    sub_232003E9C(0, &qword_2541B0CD0);
    v66 = sub_2321FDAD4();
    v68 = v67;

    v69 = v101;
    sub_23201C854((uint64_t)v19, v101);
    v108 = 0;
    v106 = 0u;
    v107 = 0u;
    v39 = sub_232015828(v66, v68, 3, v69, (uint64_t)v64, 0, (uint64_t)&v106);

    sub_232003ED4(v66, v68);
    sub_23201C898((uint64_t)v19);

    return v39;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_232092CE4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint32_t *p_align;
  id v20;
  id v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  double v26;
  double v27;
  void *v28;
  double v29;
  double v30;
  unint64_t v31;
  unint64_t v32;
  uint32_t *v33;
  id v34;
  char *v35;
  id v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;

  v48 = sub_23220039C();
  v46 = *(char **)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v2 = sub_2322002C4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2321FDC6C();
  MEMORY[0x24BDAC7A8](v6);
  v45 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2322002D0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = a1;
  v12 = objc_msgSend(a1, sel_sampleType);
  v13 = objc_msgSend(v12, sel_identifier);

  v14 = sub_232200EC4();
  v16 = v15;

  if (v14 == sub_232200EC4() && v16 == v17)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v18 = sub_232201ADC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
      return;
  }
  p_align = &stru_25010DFE8.align;
  v20 = v47;
  v21 = objc_msgSend(v47, sel_quantity);
  v48 = sub_2322015FC();
  v46 = v11;
  v44 = v9;
  v22 = *(_QWORD *)(sub_232201620() + 16);
  if (v22)
  {
    v43 = v8;
    v49 = MEMORY[0x24BEE4AF8];
    sub_232013830(0, v22, 0);
    v23 = 0;
    v24 = v49;
    while (1)
    {
      v25 = (void *)sub_232201614();
      objc_msgSend(v25, sel__value);
      v27 = v26;

      v28 = (void *)sub_232201608();
      objc_msgSend(v28, sel__value);
      v30 = v29;

      if (v27 > v30)
        break;
      sub_2322002A0();
      v49 = v24;
      v32 = *(_QWORD *)(v24 + 16);
      v31 = *(_QWORD *)(v24 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_232013830(v31 > 1, v32 + 1, 1);
        v24 = v49;
      }
      ++v23;
      *(_QWORD *)(v24 + 16) = v32 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v24+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v32, v5, v2);
      if (v22 == v23)
      {
        swift_bridgeObjectRelease();
        v8 = v43;
        v20 = v47;
        p_align = (_DWORD *)(&stru_25010DFE8 + 24);
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_14:
    v33 = p_align;
    v34 = objc_msgSend(v20, *((SEL *)p_align + 305));
    objc_msgSend(v34, sel__value);

    v35 = v46;
    sub_23220027C();
    sub_232003E9C(0, &qword_2541B56B0);
    v36 = objc_msgSend(v20, (SEL)v33 + 1570);
    v37 = (uint64_t)v45;
    sub_232093434(v20);
    v38 = HKCodableSummaryQuantityValue.init(quantity:date:)(v36, v37);
    v39 = sub_232006C3C();
    v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A560]), sel_init);
    if (v40)
    {
      v41 = v40;
      objc_msgSend(v41, sel_setQuantity_, v38);
      objc_msgSend(v41, sel_setClassificationRawValue_, v48);
      objc_msgSend(v41, sel_setLevelViewDataConfiguration_, v39);

      (*(void (**)(char *, uint64_t))(v44 + 8))(v35, v8);
      return;
    }
  }
  __break(1u);
}

id sub_23209332C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id result;
  id v8;
  void *v9;
  double v10;
  uint64_t v11;

  v2 = sub_2321FDC6C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(a1, sel_value);
  sub_232093434(a1);
  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A4A0]), sel_init);
  if (result)
  {
    v8 = result;
    objc_msgSend(v8, sel_setCategoryValue_, v6);
    v9 = (void *)sub_2321FDBF4();
    v10 = MEMORY[0x2348FEDA8]();

    objc_msgSend(v8, sel_setDateData_, v10);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_232093434(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  id v17;
  id v18;
  void (*v19)(char *, uint64_t);
  id v20;
  id v21;
  uint64_t v22;
  id v23;

  v2 = sub_2321FDC6C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v22 - v7;
  v9 = objc_msgSend(a1, sel_sampleType);
  v10 = objc_msgSend(v9, sel_identifier);

  v11 = sub_232200EC4();
  v13 = v12;

  if (sub_232200EC4() == v11 && v14 == v13)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v16 = sub_232201ADC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
      v23 = objc_msgSend(a1, sel_endDate);
      sub_2321FDC30();

      return;
    }
  }
  v17 = objc_msgSend(a1, sel_endDate);
  sub_2321FDC30();

  v18 = objc_msgSend(a1, sel__creationDate);
  sub_2321FDC30();

  LOBYTE(v18) = sub_2321FDC0C();
  v19 = *(void (**)(char *, uint64_t))(v3 + 8);
  v19(v6, v2);
  v19(v8, v2);
  if ((v18 & 1) != 0)
    v20 = objc_msgSend(a1, sel_endDate);
  else
    v20 = objc_msgSend(a1, sel__creationDate);
  v21 = v20;
  sub_2321FDC30();

}

unint64_t sub_232093670()
{
  unint64_t result;

  result = qword_255F9DCF0;
  if (!qword_255F9DCF0)
  {
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255F9DCF0);
  }
  return result;
}

ValueMetadata *type metadata accessor for MostRecentSampleCurrentValueSharableModelUtilities()
{
  return &type metadata for MostRecentSampleCurrentValueSharableModelUtilities;
}

uint64_t sub_2320936B8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_232093744();
  v7 = a3 + *(int *)(v6 + 48);
  sub_23200054C(a1, a3, (uint64_t (*)(_QWORD))type metadata accessor for TrendCoalescingNotificationViewModel);
  v8 = sub_2321FE7DC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v7, a2, v8);
}

uint64_t sub_232093724@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23200054C(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for TrendCoalescingNotificationViewModel);
}

void sub_232093744()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2541B7478)
  {
    type metadata accessor for TrendCoalescingNotificationViewModel();
    sub_2321FE7DC();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2541B7478);
  }
}

uint64_t sub_2320937B0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  sub_2320938F4();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232016AD8(a1, a1[3]);
  v9[1] = sub_2321FE590();
  sub_2320939E0(0, (unint64_t *)&qword_2541B2F10, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_2320939E0(0, &qword_2541B27C8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BEE4408]);
  sub_232093A50();
  sub_2322007A4();
  swift_release();
  sub_232093AF8();
  v7 = sub_232200774();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v7;
}

void sub_2320938F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B23E8)
  {
    sub_2320939E0(255, (unint64_t *)&qword_2541B2F10, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_2320939E0(255, &qword_2541B27C8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BEE4408]);
    sub_232093A50();
    v0 = sub_232200540();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B23E8);
  }
}

void sub_23209398C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B28E0)
  {
    sub_2321FE7DC();
    v0 = sub_2322016F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B28E0);
  }
}

void sub_2320939E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_23209398C();
    v7 = v6;
    v8 = sub_232002B9C();
    v9 = a3(a1, v7, v8, MEMORY[0x24BEE3F20]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

unint64_t sub_232093A50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B2F08;
  if (!qword_2541B2F08)
  {
    sub_2320939E0(255, (unint64_t *)&qword_2541B2F10, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB9AF8], v1);
    atomic_store(result, (unint64_t *)&qword_2541B2F08);
  }
  return result;
}

uint64_t sub_232093AA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_23200054C(a1, a2, (uint64_t (*)(_QWORD))sub_23209398C);
  sub_2320939E0(0, &qword_2541B27C8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BEE4408]);
  return swift_storeEnumTagMultiPayload();
}

unint64_t sub_232093AF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B23E0;
  if (!qword_2541B23E0)
  {
    sub_2320938F4();
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB96C0], v1);
    atomic_store(result, (unint64_t *)&qword_2541B23E0);
  }
  return result;
}

uint64_t HKCodableSummaryTrendTileViewModel.originalEventDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_232093F24((SEL *)&selRef_hasOriginalEventDateData, (SEL *)&selRef_originalEventDateData, a1);
}

uint64_t HKCodableSummaryTrendTileViewModel.coveredDateRange.getter()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  id v8;
  void *v9;

  v1 = v0;
  if (!objc_msgSend(v0, sel_hasCoveredDateRangeRawValue)
    || (v2 = objc_msgSend(v0, sel_coveredDateRangeRawValue)) == 0
    || (v3 = v2,
        v4 = sub_232200EC4(),
        v6 = v5,
        v3,
        result = MEMORY[0x2348FD38C](v4, v6),
        result == 6))
  {
    sub_23220189C();
    sub_232200F48();
    v8 = objc_msgSend(v1, sel_coveredDateRangeRawValue);
    if (v8)
    {
      v9 = v8;
      sub_232200EC4();

    }
    sub_232000608(0, (unint64_t *)&qword_2541B78A0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    sub_232200F00();
    sub_232200F48();
    swift_bridgeObjectRelease();
    result = sub_232201968();
    __break(1u);
  }
  return result;
}

Swift::OpaquePointer_optional __swiftcall HKCodableStatisticsCollection.codableStatisticsArray()()
{
  void *v0;
  Swift::Bool v1;
  Swift::OpaquePointer_optional result;

  v0 = (void *)sub_232093D14((SEL *)&selRef_statistics, (unint64_t *)&unk_2541B0C50);
  result.value._rawValue = v0;
  result.is_nil = v1;
  return result;
}

Swift::OpaquePointer_optional __swiftcall HKCodableChartQuantityDistributionDataSourceQueryData.quantityDistributionArray()()
{
  void *v0;
  Swift::Bool v1;
  Swift::OpaquePointer_optional result;

  v0 = (void *)sub_232093D14((SEL *)&selRef_quantityDistributionDatas, &qword_2541B0D00);
  result.value._rawValue = v0;
  result.is_nil = v1;
  return result;
}

uint64_t sub_232093D14(SEL *a1, unint64_t *a2)
{
  void *v2;
  void *v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  uint64_t result;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = v2;
  ObjectType = swift_getObjectType();
  v7 = sub_23220039C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(v5, *a1);
  if (!v11 || (v12 = v11, v21 = 0, sub_232003E9C(0, a2), sub_23220102C(), v12, (result = v21) == 0))
  {
    sub_232200354();
    v14 = sub_232200390();
    v15 = sub_2322012E4();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v20 = v17;
      v21 = ObjectType;
      *(_DWORD *)v16 = 136315138;
      swift_getMetatypeMetadata();
      v18 = sub_232200F00();
      v21 = sub_232013174(v18, v19, &v20);
      sub_232201710();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v14, v15, "[%s]: Unexpected array type received", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v17, -1, -1);
      MEMORY[0x2348FF468](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return 0;
  }
  return result;
}

uint64_t HKCodableSummaryTrendTileViewModel.discoveryDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_232093F24((SEL *)&selRef_hasDiscoveryDateData, (SEL *)&selRef_discoveryDateData, a1);
}

uint64_t sub_232093F24@<X0>(SEL *a1@<X0>, SEL *a2@<X1>, uint64_t a3@<X8>)
{
  void *v3;
  id v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;

  if (objc_msgSend(v3, *a1))
  {
    objc_msgSend(v3, *a2);
    v6 = (id)HKDecodeDateForValue();
    sub_2321FDC30();

    v7 = sub_2321FDC6C();
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a3;
    v10 = 0;
  }
  else
  {
    v7 = sub_2321FDC6C();
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a3;
    v10 = 1;
  }
  return v8(v9, v10, 1, v7);
}

id HKCodableSummaryTrendTileViewModel.init(trendDescription:changeType:diagramStyle:dataType:coveredDateRange:baseTrendLine:changeTrendLine:visualizationPoints:notificationIdentifier:discoveryDate:originalEventDate:sharingPreviewString:cellHeaderViewModel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void *a7, void *a8, unint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  id result;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  uint64_t (*v38)(uint64_t);
  void *v39;
  uint64_t v40;
  void *v41;
  uint64_t (*v42)(uint64_t);
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;

  v45 = a5;
  v46 = a7;
  v19 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v43 - v21;
  sub_2320057B8(0, &qword_2541B2A40, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80], v19);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v43 - v24;
  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    v27 = result;
    v28 = (void *)sub_232200E94();
    swift_bridgeObjectRelease();
    objc_msgSend(v27, sel_setTrendDescription_, v28);

    v44 = a3;
    sub_232016080(a3, (uint64_t)v25, &qword_2541B2A40, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80]);
    v29 = sub_2321FFD00();
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v25, 1, v29) == 1)
    {
      sub_232016D88((uint64_t)v25, &qword_2541B2A40, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80]);
      v31 = 0;
    }
    else
    {
      sub_2321FFCF4();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v25, v29);
      v31 = (void *)sub_232200E94();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v27, sel_setChangeTypeRawValue_, v31);

    objc_msgSend(v27, sel_setDiagramStyle_, a4);
    v32 = objc_msgSend(v45, sel_identifier);
    if (!v32)
    {
      sub_232200EC4();
      v32 = (id)sub_232200E94();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v27, sel_setObjectTypeIdentifier_, v32);

    sub_23220021C();
    v33 = (void *)sub_232200E94();
    swift_bridgeObjectRelease();
    objc_msgSend(v27, sel_setCoveredDateRangeRawValue_, v33);

    objc_msgSend(v27, sel_setBaseTrendLine_, v46);
    if (a8)
      objc_msgSend(v27, sel_setChangeTrendLine_, a8);
    sub_23200C964(a9);
    swift_bridgeObjectRelease();
    v34 = objc_allocWithZone(MEMORY[0x24BDBCEB8]);
    v35 = (void *)sub_232201020();
    swift_bridgeObjectRelease();
    v36 = objc_msgSend(v34, sel_initWithArray_, v35);

    objc_msgSend(v27, sel_setVisualizationPoints_, v36);
    if (a11)
    {
      v37 = (void *)sub_232200E94();
      swift_bridgeObjectRelease();
    }
    else
    {
      v37 = 0;
    }
    objc_msgSend(v27, sel_setNotificationIdentifier_, v37);

    v38 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
    sub_232016080(a12, (uint64_t)v22, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    HKCodableSummaryTrendTileViewModel.discoveryDate.setter((uint64_t)v22);
    sub_232016080(a13, (uint64_t)v22, &qword_2541B7618, v38);
    HKCodableSummaryTrendTileViewModel.originalEventDate.setter((uint64_t)v22);
    if (a15)
    {
      v39 = (void *)sub_232200E94();
      swift_bridgeObjectRelease();
    }
    else
    {
      v39 = 0;
    }
    v40 = v44;
    objc_msgSend(v27, sel_setTrendDescriptionSharingPreviewOverride_, v39);

    if (a16)
    {
      swift_retain();
      v41 = (void *)sub_2321FEEA8();
      swift_release();
    }
    else
    {
      v41 = 0;
    }
    objc_msgSend(v27, sel_setCellHeaderViewModel_, v41);

    swift_release();
    v42 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
    sub_232016D88(a13, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    sub_232016D88(a12, &qword_2541B7618, v42);
    sub_232016D88(v40, &qword_2541B2A40, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80]);
    return v27;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void HKCodableSummaryTrendTileViewModel.coveredDateRange.setter()
{
  void *v0;
  id v1;

  sub_23220021C();
  v1 = (id)sub_232200E94();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setCoveredDateRangeRawValue_, v1);

}

uint64_t HKCodableSummaryTrendTileViewModel.discoveryDate.setter(uint64_t a1)
{
  return sub_232094500(a1, (SEL *)&selRef_setDiscoveryDateData_, (SEL *)&selRef_setHasDiscoveryDateData_);
}

uint64_t HKCodableSummaryTrendTileViewModel.originalEventDate.setter(uint64_t a1)
{
  return sub_232094500(a1, (SEL *)&selRef_setOriginalEventDateData_, (SEL *)&selRef_setHasOriginalEventDateData_);
}

uint64_t sub_232094500(uint64_t a1, SEL *a2, SEL *a3)
{
  void *v3;
  void *v6;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(uint64_t);
  void *v18;
  double v19;
  uint64_t v20;

  v6 = v3;
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  sub_2320057B8(0, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v20 - v10;
  v12 = sub_2321FDC6C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232016080(a1, (uint64_t)v11, &qword_2541B7618, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    v16 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
    sub_232016D88((uint64_t)v11, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    objc_msgSend(v6, *a3, 0);
    return sub_232016D88(a1, &qword_2541B7618, v16);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    v18 = (void *)sub_2321FDBF4();
    v19 = MEMORY[0x2348FEDA8]();

    objc_msgSend(v6, *a2, v19);
    sub_232016D88(a1, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
}

void (*HKCodableSummaryTrendTileViewModel.coveredDateRange.modify(uint64_t a1))(void **a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = HKCodableSummaryTrendTileViewModel.coveredDateRange.getter();
  return sub_2320946E8;
}

void sub_2320946E8(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  sub_23220021C();
  v2 = (id)sub_232200E94();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setCoveredDateRangeRawValue_, v2);

}

uint64_t HKCodableSummaryTrendTileViewModel.visualizationPointsArray.getter()
{
  void *v0;
  void *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  uint64_t result;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = sub_23220039C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(v1, sel_visualizationPoints);
  if (!v7
    || (v8 = v7, v17 = 0, sub_232003E9C(0, &qword_2541B7498), sub_23220102C(), v8, (result = v17) == 0))
  {
    sub_232200354();
    v10 = sub_232200390();
    v11 = sub_2322012E4();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v16 = v13;
      v17 = ObjectType;
      *(_DWORD *)v12 = 136315138;
      swift_getMetatypeMetadata();
      v14 = sub_232200F00();
      v17 = sub_232013174(v14, v15, &v16);
      sub_232201710();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v10, v11, "[%s]: Unexpected array type received", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v13, -1, -1);
      MEMORY[0x2348FF468](v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

id HKCodableSummaryTrendTileViewModel.coreChartTrendDataSeries.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  unsigned int v21;
  id result;
  void *v23;
  char *v24;
  char *v25;
  int v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;

  v0 = sub_2321FDC6C();
  MEMORY[0x24BDAC7A8](v0);
  v36 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_2321FD8B8();
  v34 = *(_QWORD *)(v2 - 8);
  v35 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v33 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, &qword_255F9DCF8, (uint64_t (*)(uint64_t))MEMORY[0x24BE4B5C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v31 - v5;
  v7 = sub_2321FFF58();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v37 = (char *)&v31 - v12;
  v13 = HKCodableSummaryTrendTileViewModel.visualizationPointsArray.getter();
  v14 = v13;
  if (v13 >> 62)
  {
LABEL_26:
    swift_bridgeObjectRetain();
    v15 = sub_232201998();
    if (v15)
      goto LABEL_3;
LABEL_27:
    v16 = MEMORY[0x24BEE4AF8];
LABEL_28:
    swift_bridgeObjectRelease_n();
    return (id)v16;
  }
  v15 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v15)
    goto LABEL_27;
LABEL_3:
  v40 = v14 & 0xC000000000000001;
  v16 = MEMORY[0x24BEE4AF8];
  v17 = 4;
  v32 = v11;
  v38 = v14;
  v39 = v15;
  while (1)
  {
    if (v40)
      v18 = (id)MEMORY[0x2348FEA30](v17 - 4, v14);
    else
      v18 = *(id *)(v14 + 8 * v17);
    v19 = v18;
    v20 = v17 - 3;
    if (__OFADD__(v17 - 4, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (!objc_msgSend(v18, sel_hasDateInterval) || !objc_msgSend(v19, sel_hasValue))
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
        goto LABEL_20;
      goto LABEL_4;
    }
    v21 = objc_msgSend(v19, sel_hasValue2);
    result = objc_msgSend(v19, sel_dateInterval);
    v23 = result;
    if (v21)
      break;
    if (!result)
      goto LABEL_30;
    v25 = v33;
    sub_232201500();

    sub_2321FD894();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v25, v35);
    objc_msgSend(v19, sel_value);
LABEL_19:
    sub_2321FFF4C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);

    v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
    v11 = v32;
    v14 = v38;
    if (v26 != 1)
    {
LABEL_20:
      v27 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v28 = v37;
      v27(v37, v6, v7);
      v27(v11, v28, v7);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v16 = sub_232096944(0, *(_QWORD *)(v16 + 16) + 1, 1, v16, qword_255F9DD28, (uint64_t (*)(uint64_t))MEMORY[0x24BE4B5C8]);
      v30 = *(_QWORD *)(v16 + 16);
      v29 = *(_QWORD *)(v16 + 24);
      if (v30 >= v29 >> 1)
        v16 = sub_232096944(v29 > 1, v30 + 1, 1, v16, qword_255F9DD28, (uint64_t (*)(uint64_t))MEMORY[0x24BE4B5C8]);
      *(_QWORD *)(v16 + 16) = v30 + 1;
      v27((char *)(v16+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v30), v11, v7);
      v14 = v38;
      goto LABEL_5;
    }
LABEL_4:
    sub_232016D88((uint64_t)v6, &qword_255F9DCF8, (uint64_t (*)(uint64_t))MEMORY[0x24BE4B5C8]);
LABEL_5:
    ++v17;
    if (v20 == v39)
      goto LABEL_28;
  }
  if (result)
  {
    v24 = v33;
    sub_232201500();

    sub_2321FD894();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v24, v35);
    objc_msgSend(v19, sel_value);
    objc_msgSend(v19, sel_value2);
    goto LABEL_19;
  }
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

void (*HKCodableSummaryTrendTileViewModel.discoveryDate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  void *v1;
  uint64_t v3;
  size_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = v1;
  sub_2320057B8(0, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64);
  a1[1] = malloc(v4);
  v5 = malloc(v4);
  a1[2] = v5;
  if (objc_msgSend(v1, sel_hasDiscoveryDateData))
  {
    objc_msgSend(v1, sel_discoveryDateData);
    v6 = (id)HKDecodeDateForValue();
    sub_2321FDC30();

    v7 = sub_2321FDC6C();
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 0, 1, v7);
  }
  else
  {
    v8 = sub_2321FDC6C();
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 1, 1, v8);
  }
  return sub_232094EF0;
}

void sub_232094EF0(uint64_t a1, char a2)
{
  sub_232095004(a1, a2, (void (*)(void *))HKCodableSummaryTrendTileViewModel.discoveryDate.setter);
}

void (*HKCodableSummaryTrendTileViewModel.originalEventDate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  void *v1;
  uint64_t v3;
  size_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = v1;
  sub_2320057B8(0, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64);
  a1[1] = malloc(v4);
  v5 = malloc(v4);
  a1[2] = v5;
  if (objc_msgSend(v1, sel_hasOriginalEventDateData))
  {
    objc_msgSend(v1, sel_originalEventDateData);
    v6 = (id)HKDecodeDateForValue();
    sub_2321FDC30();

    v7 = sub_2321FDC6C();
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 0, 1, v7);
  }
  else
  {
    v8 = sub_2321FDC6C();
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 1, 1, v8);
  }
  return sub_232094FF8;
}

void sub_232094FF8(uint64_t a1, char a2)
{
  sub_232095004(a1, a2, (void (*)(void *))HKCodableSummaryTrendTileViewModel.originalEventDate.setter);
}

void sub_232095004(uint64_t a1, char a2, void (*a3)(void *))
{
  void *v4;
  void *v5;
  uint64_t (*v6)(uint64_t);

  v4 = *(void **)(a1 + 8);
  v5 = *(void **)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
    sub_232016080(*(_QWORD *)(a1 + 16), (uint64_t)v4, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    a3(v4);
    sub_232016D88((uint64_t)v5, &qword_2541B7618, v6);
  }
  else
  {
    a3(*(void **)(a1 + 16));
  }
  free(v5);
  free(v4);
}

void HKCodableSummaryTrendTileViewModel.coreChartTrendModel.getter(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v2 = v1;
  v35 = a1;
  v3 = sub_23220039C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, &qword_255F9DD00, (uint64_t (*)(uint64_t))MEMORY[0x24BE4B698], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v32 - v8;
  v10 = sub_2321FFFB8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  if (!objc_msgSend(v2, sel_hasObjectTypeIdentifier)
    || (v12 = (void *)objc_opt_self(),
        v13 = objc_msgSend(v2, sel_objectTypeIdentifier),
        v14 = objc_msgSend(v12, sel__typeWithIdentifier_, v13),
        v13,
        !v14))
  {
    sub_232200354();
    v9 = v2;
    v20 = sub_232200390();
    v21 = sub_2322012F0();
    if (os_log_type_enabled(v20, v21))
    {
      v33 = v4;
      v34 = v3;
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      v37 = v23;
      *(_DWORD *)v22 = 136315138;
      v24 = objc_msgSend(v9, sel_objectTypeIdentifier);
      if (!v24)
      {
LABEL_15:

        __break(1u);
        return;
      }
      v25 = v24;
      v26 = sub_232200EC4();
      v28 = v27;

      v36 = sub_232013174(v26, v28, &v37);
      sub_232201710();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v20, v21, "TrendTileViewModel: failed to find object type for %s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v23, -1, -1);
      MEMORY[0x2348FF468](v22, -1, -1);

      (*(void (**)(char *, uint64_t))(v33 + 8))(v6, v34);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
    v29 = sub_2321FFE44();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v35, 1, 1, v29);
    return;
  }
  objc_msgSend(v2, sel_diagramStyle);
  HKCodableSummaryTrendTileViewModel.coveredDateRange.getter();
  v15 = objc_msgSend(v2, sel_baseTrendLine);
  if (!v15)
  {
    __break(1u);
    goto LABEL_15;
  }
  v16 = v15;
  HKCodableSummaryTrendLineViewModel.coreChartTrendLineViewModel.getter();

  v17 = objc_msgSend(v2, sel_changeTrendLine);
  if (v17)
  {
    v18 = v17;
    HKCodableSummaryTrendLineViewModel.coreChartTrendLineViewModel.getter();

    v19 = 0;
  }
  else
  {
    v19 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, v19, 1, v10);
  HKCodableSummaryTrendTileViewModel.coreChartTrendDataSeries.getter();
  v30 = v35;
  sub_2321FFE38();
  v31 = sub_2321FFE44();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 0, 1, v31);
}

id HKCodableSummaryTrendLineViewModel.coreChartTrendLineViewModel.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  id result;
  void *v4;
  void *v5;
  void *v6;

  v1 = v0;
  v2 = sub_2321FD8B8();
  MEMORY[0x24BDAC7A8](v2);
  result = objc_msgSend(v0, sel_dateInterval);
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v4 = result;
  sub_232201500();

  objc_msgSend(v1, sel_average);
  result = objc_msgSend(v1, sel_xAxisLabel);
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v5 = result;
  sub_232200EC4();

  result = objc_msgSend(v1, sel_lineLabel);
  if (result)
  {
    v6 = result;
    sub_232200EC4();

    return (id)sub_2321FFFAC();
  }
LABEL_7:
  __break(1u);
  return result;
}

id HKCodableSummaryTrendTileViewModel.dataTypeHeaderModel.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id result;
  void *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;

  v1 = v0;
  v2 = sub_23220039C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v13 - v5;
  if (!objc_msgSend(v1, sel_hasCellHeaderViewModel))
  {
    sub_232200354();
    v9 = sub_232200390();
    v10 = sub_2322012F0();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_231FFB000, v9, v10, "No header model was saved with this trend", v11, 2u);
      MEMORY[0x2348FF468](v11, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    return 0;
  }
  result = objc_msgSend(v1, sel_cellHeaderViewModel);
  if (result)
  {
    v8 = result;
    sub_2321FF208();
    v12 = sub_2321FEE9C();

    return (id)v12;
  }
  __break(1u);
  return result;
}

uint64_t HKCodableSummaryTrendTileViewModel.dataTypeHeaderModel.setter(uint64_t a1)
{
  void *v1;
  void *v2;

  if (a1)
    v2 = (void *)sub_2321FEEA8();
  else
    v2 = 0;
  objc_msgSend(v1, sel_setCellHeaderViewModel_, v2);

  return swift_release();
}

void (*HKCodableSummaryTrendTileViewModel.dataTypeHeaderModel.modify(id *a1))(uint64_t *a1, char a2)
{
  void *v1;

  a1[1] = v1;
  *a1 = HKCodableSummaryTrendTileViewModel.dataTypeHeaderModel.getter();
  return sub_232095934;
}

void sub_232095934(uint64_t *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = *a1;
  if ((a2 & 1) != 0)
  {
    if (v3)
    {
      swift_retain();
      v4 = sub_2321FEEA8();
    }
    else
    {
      v4 = 0;
    }
    v6 = (id)v4;
    objc_msgSend((id)a1[1], sel_setCellHeaderViewModel_);
    swift_release();
  }
  else
  {
    if (v3)
      v5 = sub_2321FEEA8();
    else
      v5 = 0;
    v6 = (id)v5;
    objc_msgSend((id)a1[1], sel_setCellHeaderViewModel_);
  }
  swift_release();

}

uint64_t HKCodableSummaryTrendTileViewModel.trendDescriptionText(presentation:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v10;

  v1 = sub_2321FEDA0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BE425F8], v1);
  v5 = sub_2321FED94();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) != 0 && objc_msgSend(v0, sel_hasTrendDescriptionSharingPreviewOverride))
  {
    v6 = objc_msgSend(v0, sel_trendDescriptionSharingPreviewOverride);
  }
  else
  {
    if (!objc_msgSend(v0, sel_hasTrendDescription))
      return 0;
    v6 = objc_msgSend(v0, sel_trendDescription);
  }
  v7 = v6;
  if (!v7)
    return 0;
  v8 = sub_232200EC4();

  return v8;
}

id HKCodableSummaryTrendLineViewModel.init(dateInterval:average:xAxisLabel:lineLabel:)(uint64_t a1, double a2)
{
  id result;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;

  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    v5 = result;
    sub_232003E9C(0, &qword_2541B0C78);
    v6 = v5;
    v7 = (void *)sub_23220150C();
    objc_msgSend(v6, sel_setDateInterval_, v7);

    objc_msgSend(v6, sel_setAverage_, a2);
    v8 = (void *)sub_232200E94();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setXAxisLabel_, v8);

    v9 = (void *)sub_232200E94();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setLineLabel_, v9);

    v10 = sub_2321FD8B8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(a1, v10);
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKCodableSummaryVisualizationPoint.init(dateInterval:value:)(char *a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id result;
  void *v11;
  id v12;
  void *v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;

  v6 = sub_2321FD8B8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, a1, v6);
  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    v11 = result;
    sub_232003E9C(0, &qword_2541B0C78);
    v12 = v11;
    v13 = (void *)sub_23220150C();
    objc_msgSend(v12, sel_setDateInterval_, v13);

    if ((a3 & 1) == 0)
      objc_msgSend(v12, sel_setValue_, *(double *)&a2);
    v14 = *(void (**)(char *, uint64_t))(v7 + 8);
    v14(v9, v6);

    v14(a1, v6);
    return v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKCodableSummaryVisualizationPoint.init(dateInterval:value:value2:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  id result;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;

  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    v11 = result;
    sub_232003E9C(0, &qword_2541B0C78);
    v12 = v11;
    v13 = (void *)sub_23220150C();
    objc_msgSend(v12, sel_setDateInterval_, v13);

    if ((a3 & 1) == 0)
      objc_msgSend(v12, sel_setValue_, *(double *)&a2);
    if ((a5 & 1) != 0)
    {
      v15 = sub_2321FD8B8();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(a1, v15);

    }
    else
    {
      objc_msgSend(v12, sel_setValue2_, *(double *)&a4);

      v14 = sub_2321FD8B8();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a1, v14);
    }
    return v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t HKCodableSummaryVisualizationPoint.valueOrNil.getter()
{
  void *v0;
  uint64_t v1;

  if (!objc_msgSend(v0, sel_hasValue))
    return 0;
  objc_msgSend(v0, sel_value);
  return v1;
}

id HKCodableSummaryVisualizationPoint.init(swiftChartPoint:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  double v6;
  double v7;
  uint64_t v8;
  char v9;
  char v10;
  id result;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;

  v2 = sub_2321FD8B8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2321FEE18();
  sub_2321FEE30();
  v7 = v6;
  v8 = sub_2321FEE3C();
  v10 = v9;
  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    v12 = result;
    sub_232003E9C(0, &qword_2541B0C78);
    v13 = v12;
    v14 = (void *)sub_23220150C();
    objc_msgSend(v13, sel_setDateInterval_, v14);

    objc_msgSend(v13, sel_setValue_, v7);
    if ((v10 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);

    }
    else
    {
      objc_msgSend(v13, sel_setValue2_, *(double *)&v8);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    v15 = sub_2321FEE48();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(a1, v15);
    return v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKCodableSummaryVisualizationDataPresencePoint.init(dateInterval:dataPresent:)(uint64_t a1, char a2)
{
  id result;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;

  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    v5 = result;
    sub_232003E9C(0, &qword_2541B0C78);
    v6 = v5;
    v7 = (void *)sub_23220150C();
    objc_msgSend(v6, sel_setDateInterval_, v7);

    objc_msgSend(v6, sel_setDataPresent_, a2 & 1);
    v8 = sub_2321FD8B8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a1, v8);
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

