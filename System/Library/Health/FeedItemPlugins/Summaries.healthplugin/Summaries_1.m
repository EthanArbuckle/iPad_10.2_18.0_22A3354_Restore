id HKCodableSummaryTrendChartViewModel.init(chartString:changeType:dataType:coveredTimeScope:baselineDateInterval:baselineQuantity:changeDateInterval:changeQuantity:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, void *a10)
{
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id result;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  void *v31;
  id v32;
  void *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t);
  uint64_t v40;
  char *v41;
  id v42;
  char *v43;
  void *v44;
  id v45;
  void *v46;
  void (*v47)(uint64_t, uint64_t);
  void (*v48)(uint64_t, uint64_t);
  char *v49;
  uint64_t v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;

  v54 = a7;
  v52 = a5;
  v56 = a4;
  v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v49 - v14;
  v53 = sub_2321FD8B8();
  v16 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v49 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, &qword_2541B2A40, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80], v12);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v49 - v19;
  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (result)
  {
    v55 = a9;
    v22 = result;
    v23 = (void *)sub_232200E94();
    swift_bridgeObjectRelease();
    objc_msgSend(v22, sel_setChartString_, v23);

    sub_232016080(a3, (uint64_t)v20, &qword_2541B2A40, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80]);
    v24 = sub_2321FFD00();
    v25 = *(_QWORD *)(v24 - 8);
    v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48))(v20, 1, v24);
    v50 = a3;
    v51 = a8;
    if (v26 == 1)
    {
      sub_232016D88((uint64_t)v20, &qword_2541B2A40, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80]);
      v27 = 0;
    }
    else
    {
      sub_2321FFCF4();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v20, v24);
      v27 = (void *)sub_232200E94();
      swift_bridgeObjectRelease();
    }
    v28 = v16;
    objc_msgSend(v22, sel_setChangeTypeRawValue_, v27);

    v29 = objc_msgSend(v56, sel_identifier);
    v30 = v54;
    if (!v29)
    {
      sub_232200EC4();
      v29 = (id)sub_232200E94();
      swift_bridgeObjectRelease();
    }
    v52 = a10;
    objc_msgSend(v22, sel_setObjectTypeIdentifier_, v29);

    sub_2322015F0();
    sub_232003E9C(0, &qword_2541B0C78);
    v31 = (void *)sub_23220150C();
    objc_msgSend(v22, sel_setBaselineDateInterval_, v31);

    sub_232003E9C(0, &qword_2541B7968);
    v32 = v51;
    v33 = (void *)sub_23220147C();
    objc_msgSend(v22, sel_setBaselineQuantity_, v33);

    v34 = v55;
    sub_232016080(v55, (uint64_t)v15, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
    v35 = v15;
    v36 = (uint64_t)v15;
    v37 = v30;
    v38 = v53;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v35, 1, v53) == 1)
    {

      v39 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878];
      sub_232016D88(v34, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v37, v38);
      sub_232016D88(v50, &qword_2541B2A40, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80]);
      sub_232016D88(v36, &qword_2541B7F60, v39);
    }
    else
    {
      v40 = v37;
      v41 = v49;
      (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v49, v36, v38);
      if (v52)
      {
        v42 = v52;
        v43 = v41;
        v44 = (void *)sub_23220150C();
        objc_msgSend(v22, sel_setChangeDateInterval_, v44);

        v45 = v42;
        v46 = (void *)sub_23220147C();
        objc_msgSend(v22, sel_setChangeQuantity_, v46);

        sub_232016D88(v55, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
        v47 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
        v47(v40, v38);
        sub_232016D88(v50, &qword_2541B2A40, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80]);
        v47((uint64_t)v43, v38);
      }
      else
      {

        sub_232016D88(v55, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
        v48 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
        v48(v37, v38);
        sub_232016D88(v50, &qword_2541B2A40, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80]);
        v48((uint64_t)v41, v38);
      }
    }
    return v22;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id _sSo34HKCodableSummaryTrendTileViewModelC9SummariesE10objectTypeSo08HKObjectI0CSgvg_0()
{
  void *v0;
  void *v1;
  id v2;
  id v3;

  if (!objc_msgSend(v0, sel_hasObjectTypeIdentifier))
    return 0;
  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v0, sel_objectTypeIdentifier);
  v3 = objc_msgSend(v1, sel__typeWithIdentifier_, v2);

  return v3;
}

uint64_t _sSo34HKCodableSummaryTrendTileViewModelC9SummariesE10changeType19HealthVisualization17SignificantChangeV6PeriodV0mI0OSgvg_0@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v6;

  if (objc_msgSend(v1, sel_hasChangeTypeRawValue)
    && (v3 = objc_msgSend(v1, sel_changeTypeRawValue)) != 0)
  {
    v4 = v3;
    sub_232200EC4();

    return sub_2321FFCE8();
  }
  else
  {
    v6 = sub_2321FFD00();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, 1, 1, v6);
  }
}

uint64_t sub_2320967FC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_232096944(a1, a2, a3, a4, &qword_2541B57A0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47758]);
}

_QWORD *sub_232096810(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_232000608(0, (unint64_t *)&qword_2541B78C0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_232097864(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_232096930(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_232096944(a1, a2, a3, a4, &qword_2541B10D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE42988]);
}

uint64_t sub_232096944(char a1, int64_t a2, char a3, unint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  sub_2320057B8(0, a5, a6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = j__malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_23220195C();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23209774C(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_232096B60(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_232096944(a1, a2, a3, a4, &qword_2541B7170, (uint64_t (*)(uint64_t))sub_232016D1C);
}

char *sub_232096B74(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      sub_232000608(0, &qword_2541B5800, MEMORY[0x24BE4BB98], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
      v10 = (char *)swift_allocObject();
      v11 = j__malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v12 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_232097A3C(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_232096C80(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_232096944(a1, a2, a3, a4, &qword_2541B5808, (uint64_t (*)(uint64_t))sub_23202561C);
}

uint64_t sub_232096C94(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_232096944(a1, a2, a3, a4, &qword_2541B57B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47D40]);
}

char *sub_232096CA8(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      sub_232000608(0, &qword_2541B5820, (uint64_t)&type metadata for SummaryModelConfiguration.Audience, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
      v10 = (char *)swift_allocObject();
      v11 = j__malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v12 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_232097A3C(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_232096DB4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_2320057B8(0, &qword_255F9DD10, (uint64_t (*)(uint64_t))sub_23209812C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_232097DA4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_232096ED4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_23209823C();
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_232097FAC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_232096FDC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_2320057B8(0, &qword_2541B5BE0, (uint64_t (*)(uint64_t))sub_2320982F0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_232097EA8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2320970FC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_232097124(a1, a2, a3, a4, &qword_2541B5848, (uint64_t (*)(uint64_t))type metadata accessor for __HKStateOfMindDomain);
}

_QWORD *sub_232097110(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_232097124(a1, a2, a3, a4, &qword_2541B5840, (uint64_t (*)(uint64_t))type metadata accessor for Label);
}

_QWORD *sub_232097124(_QWORD *result, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    v9 = a2;
    goto LABEL_8;
  }
  v8 = a4[3];
  v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2)
    goto LABEL_8;
  if (v9 + 0x4000000000000000 >= 0)
  {
    v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v9 = a2;
LABEL_8:
    v10 = a4[2];
    if (v9 <= v10)
      v11 = a4[2];
    else
      v11 = v9;
    if (v11)
    {
      sub_2320057B8(0, a5, a6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v12 = (_QWORD *)swift_allocObject();
      v13 = j__malloc_size(v12);
      v14 = v13 - 32;
      if (v13 < 32)
        v14 = v13 - 25;
      v12[2] = v10;
      v12[3] = 2 * (v14 >> 3);
      v15 = v12 + 4;
      if ((v7 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v12 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v15 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v12 != a4 || v15 >= &a4[v10 + 4])
          memmove(v15, a4 + 4, 8 * v10);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_232097954(0, v10, (char *)v15, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_23209723C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_232096944(a1, a2, a3, a4, &qword_255F9C090, (uint64_t (*)(uint64_t))type metadata accessor for TrendNotificationModel);
}

_QWORD *sub_232097250(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2320975A0(a1, a2, a3, a4, (void (*)(_QWORD))sub_232097C28, &qword_2541B6C38);
}

uint64_t sub_23209726C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_232096944(a1, a2, a3, a4, &qword_2541B71C0, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
}

_QWORD *sub_232097280(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_232000608(0, &qword_2541B5830, MEMORY[0x24BEE13C8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_232097954(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2320973A0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_2320057B8(0, &qword_2541B71C8, (uint64_t (*)(uint64_t))sub_2320976E8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_232097B20(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2320974D8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2320975A0(a1, a2, a3, a4, (void (*)(_QWORD))sub_232031990, (unint64_t *)&qword_2541B6B80);
}

uint64_t sub_2320974F4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_232096944(a1, a2, a3, a4, &qword_255F9DD20, (uint64_t (*)(uint64_t))MEMORY[0x24BE48348]);
}

_QWORD *sub_232097508(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2320975A0(a1, a2, a3, a4, (void (*)(_QWORD))sub_2320981D4, (unint64_t *)&qword_2541B11F0);
}

_QWORD *sub_232097524(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2320975A0(a1, a2, a3, a4, (void (*)(_QWORD))sub_232016874, (unint64_t *)&qword_2541B28F0);
}

uint64_t sub_232097540(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_232096944(a1, a2, a3, a4, &qword_255F9DD08, (uint64_t (*)(uint64_t))type metadata accessor for SummaryAlertContentState);
}

uint64_t sub_232097554(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_232096944(a1, a2, a3, a4, &qword_2541B5788, (uint64_t (*)(uint64_t))sub_232016768);
}

_QWORD *sub_232097568(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2320975A0(a1, a2, a3, a4, (void (*)(_QWORD))sub_2320980C4, &qword_2541B28B8);
}

_QWORD *sub_232097584(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2320975A0(a1, a2, a3, a4, (void (*)(_QWORD))sub_232016810, &qword_2541B28E8);
}

_QWORD *sub_2320975A0(_QWORD *result, int64_t a2, char a3, _QWORD *a4, void (*a5)(_QWORD), unint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  _QWORD *v15;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      a5(0);
      v13 = (_QWORD *)swift_allocObject();
      v14 = j__malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      v15 = v13 + 4;
      if ((v8 & 1) != 0)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4])
          memmove(v15, a4 + 4, 40 * v11);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v15 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_232097C90(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_2320976D4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_232096944(a1, a2, a3, a4, &qword_2541B78B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0]);
}

void sub_2320976E8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2541B6FD0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2541B6FD0);
  }
}

uint64_t sub_23209774C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_2322019E0();
  __break(1u);
  return result;
}

uint64_t sub_232097864(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2322019E0();
  __break(1u);
  return result;
}

char *sub_232097954(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_2322019E0();
  __break(1u);
  return result;
}

char *sub_232097A3C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_2322019E0();
  __break(1u);
  return result;
}

uint64_t sub_232097B20(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_2320976E8();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2322019E0();
  __break(1u);
  return result;
}

void sub_232097C28()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B71B8)
  {
    sub_2320982A4(255, &qword_2541B6C38);
    v0 = sub_232201AC4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B71B8);
  }
}

uint64_t sub_232097C90(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 40 * a1 + 32;
    v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      sub_2320982A4(0, a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_2322019E0();
  __break(1u);
  return result;
}

uint64_t sub_232097DA4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_232098194();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2322019E0();
  __break(1u);
  return result;
}

uint64_t sub_232097EA8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_2320982F0();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2322019E0();
  __break(1u);
  return result;
}

uint64_t sub_232097FAC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_2320982A4(0, &qword_2541B5960);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2322019E0();
  __break(1u);
  return result;
}

void sub_2320980C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B57B0)
  {
    sub_2320982A4(255, &qword_2541B28B8);
    v0 = sub_232201AC4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B57B0);
  }
}

unint64_t sub_23209812C()
{
  unint64_t result;

  result = qword_255F9DD18;
  if (!qword_255F9DD18)
  {
    sub_2320057B8(255, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    result = swift_getFunctionTypeMetadata1();
    atomic_store(result, (unint64_t *)&qword_255F9DD18);
  }
  return result;
}

unint64_t sub_232098194()
{
  unint64_t result;

  result = qword_2541B27D0;
  if (!qword_2541B27D0)
  {
    result = swift_getFunctionTypeMetadata0();
    atomic_store(result, (unint64_t *)&qword_2541B27D0);
  }
  return result;
}

void sub_2320981D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B13D8)
  {
    sub_2320982A4(255, (unint64_t *)&qword_2541B11F0);
    v0 = sub_232201AC4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B13D8);
  }
}

void sub_23209823C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B5BD8)
  {
    sub_2320982A4(255, &qword_2541B5960);
    v0 = sub_232201AC4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B5BD8);
  }
}

uint64_t sub_2320982A4(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_2320982F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B5BD0)
  {
    sub_2320982A4(255, &qword_2541B5960);
    v0 = sub_2322016F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B5BD0);
  }
}

uint64_t type metadata accessor for ActivityDataTypeDetailChartDataSource()
{
  uint64_t result;

  result = qword_2541B1318;
  if (!qword_2541B1318)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_232098394()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2321FF40C();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

id sub_232098440()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_activitySummaryType);
  qword_2541BF758 = (uint64_t)result;
  return result;
}

uint64_t sub_232098478(void *a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  uint64_t v20;
  char v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t *v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  __int128 v43;
  uint64_t (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  _QWORD v78[3];
  ValueMetadata *v79;
  unint64_t v80;
  _OWORD v81[2];
  uint64_t v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;

  v4 = v3;
  v8 = *v3;
  sub_23209A330(0, &qword_2541B1120, MEMORY[0x24BE42C68]);
  v71 = v9;
  v70 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v73 = (char *)&v68 - v10;
  *(_QWORD *)&v74 = sub_2321FF388();
  v69 = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74);
  v12 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = qword_2541BF530;
  *((_BYTE *)v3 + qword_2541BF530) = 2;
  v14 = (uint64_t *)((char *)v3 + qword_2541BF6B0);
  *v14 = 0;
  v14[1] = 0;
  v72 = qword_2541BF528;
  *(uint64_t *)((char *)v3 + qword_2541BF528) = 0;
  *(uint64_t *)((char *)v3 + qword_2541BF568) = 0;
  v15 = (char *)v3 + qword_2541BF570;
  v16 = sub_2321FF40C();
  v75 = *(_QWORD *)(v16 - 8);
  v76 = v16;
  (*(void (**)(char *, void *))(v75 + 16))(v15, a1);
  v17 = (char *)v4 + qword_2541BF510;
  v68 = a2;
  *(_QWORD *)v17 = a2;
  v17[8] = a3 & 1;
  swift_retain();
  sub_2321FF3DC();
  sub_232016AD8(&v83, *((uint64_t *)&v84 + 1));
  sub_2321FE098();
  v18 = (void *)sub_2321FF3F4();
  v19 = objc_msgSend(v18, sel_profileIdentifier);

  sub_2321FED40();
  swift_allocObject();
  v20 = sub_2321FED34();
  sub_232016AFC((uint64_t)&v83);
  *(uint64_t *)((char *)v4 + qword_2541BF560) = v20;
  v21 = sub_23212040C(a1, v8);
  *((_BYTE *)v4 + v13) = v21;
  v77 = a1;
  if ((sub_2321FF400() & 0xFE) == 2)
  {
    if (qword_2541B7200 != -1)
      swift_once();
    v22 = (id)qword_2541BF758;
    sub_2321FF37C();
    *(_BYTE *)(swift_allocObject() + 16) = v21;
    v23 = sub_2321FF370();
    v25 = v24;

    *v14 = v23;
    v14[1] = v25;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    v27 = *v14;
    v28 = v14[1];
    swift_unknownObjectRetain();
    v29 = sub_232096FDC(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v31 = v29[2];
    v30 = v29[3];
    if (v31 >= v30 >> 1)
      v29 = sub_232096FDC((_QWORD *)(v30 > 1), v31 + 1, 1, v29);
    v29[2] = v31 + 1;
    v32 = &v29[2 * v31];
    v32[4] = v27;
    v32[5] = v28;
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    (*(void (**)(char *, _QWORD))(v69 + 8))(v12, v74);
    v33 = v29[2];
    if (v33)
    {
LABEL_7:
      swift_bridgeObjectRetain_n();
      v34 = v29 + 5;
      v35 = (_QWORD *)MEMORY[0x24BEE4AF8];
      do
      {
        v37 = *(v34 - 1);
        if (v37)
        {
          v38 = *v34;
          swift_unknownObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v35 = sub_232096ED4(0, v35[2] + 1, 1, v35);
          v40 = v35[2];
          v39 = v35[3];
          if (v40 >= v39 >> 1)
            v35 = sub_232096ED4((_QWORD *)(v39 > 1), v40 + 1, 1, v35);
          v35[2] = v40 + 1;
          v36 = &v35[2 * v40];
          v36[4] = v37;
          v36[5] = v38;
        }
        v34 += 2;
        --v33;
      }
      while (v33);
      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    v41 = (a3 & 1) == 0;
    if ((a3 & 1) != 0 || v68 != 2)
    {
      sub_2321E8164(v21, v41, (uint64_t)v81);
      v79 = &type metadata for ActivityDataTypeDetailChartCell.ActiveEnergyDataSourceItem;
      v80 = sub_23209A2A0();
    }
    else
    {
      sub_2321E82A4(v21, v41, (uint64_t)v81);
      v79 = &type metadata for ActivityDataTypeDetailChartCell.MoveTimeDataSourceItem;
      v80 = sub_23209A258();
    }
    v42 = swift_allocObject();
    v78[0] = v42;
    v43 = v81[1];
    *(_OWORD *)(v42 + 16) = v81[0];
    *(_OWORD *)(v42 + 32) = v43;
    *(_QWORD *)(v42 + 48) = v82;
    sub_2321FF5E0();
    v44 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598];
    sub_2320057B8(0, &qword_2541B13E0, (uint64_t (*)(uint64_t))sub_23209A314, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v45 = swift_allocObject();
    v74 = xmmword_232210D40;
    *(_OWORD *)(v45 + 16) = xmmword_232210D40;
    sub_2320057B8(0, (unint64_t *)&qword_2541B13D8, (uint64_t (*)(uint64_t))sub_23209A1BC, v44);
    v46 = swift_allocObject();
    *(_OWORD *)(v46 + 16) = v74;
    sub_23201B304((uint64_t)v78, v46 + 32);
    *(_QWORD *)(v45 + 32) = v46;
    v47 = sub_2321FF5EC();
    v48 = MEMORY[0x24BE43520];
    *v14 = v47;
    v14[1] = v48;
    swift_unknownObjectRelease();
    v49 = *v14;
    v50 = v14[1];
    swift_unknownObjectRetain();
    v29 = sub_232096FDC(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v52 = v29[2];
    v51 = v29[3];
    if (v52 >= v51 >> 1)
      v29 = sub_232096FDC((_QWORD *)(v51 > 1), v52 + 1, 1, v29);
    v29[2] = v52 + 1;
    v53 = &v29[2 * v52];
    v53[4] = v49;
    v53[5] = v50;
    v54 = sub_2321FF400();
    sub_232128844(v54, (uint64_t)&v83);
    v55 = swift_allocObject();
    *(_OWORD *)(v55 + 16) = v74;
    v56 = swift_allocObject();
    *(_OWORD *)(v56 + 16) = v74;
    *(_QWORD *)(v56 + 56) = &_s38ActivityShowActiveEnergyDataSourceItemVN;
    *(_QWORD *)(v56 + 64) = sub_23209A174();
    v57 = swift_allocObject();
    *(_QWORD *)(v56 + 32) = v57;
    v58 = v84;
    *(_OWORD *)(v57 + 16) = v83;
    *(_OWORD *)(v57 + 32) = v58;
    *(_QWORD *)(v57 + 48) = v85;
    *(_QWORD *)(v55 + 32) = v56;
    sub_2321FF5EC();
    (*(void (**)(char *, _QWORD, uint64_t))(v70 + 104))(v73, *MEMORY[0x24BE42C58], v71);
    sub_23209A330(0, &qword_2541B1128, MEMORY[0x24BE42CA8]);
    swift_allocObject();
    swift_retain();
    v59 = sub_2321FEE84();
    v60 = v72;
    *(uint64_t *)((char *)v4 + v72) = v59;
    swift_release();
    v61 = *(uint64_t *)((char *)v4 + v60);
    swift_retain();
    swift_release();
    if (v61)
      v62 = sub_23209A390();
    else
      v62 = 0;
    v64 = v29[2];
    v63 = v29[3];
    if (v64 >= v63 >> 1)
      v29 = sub_232096FDC((_QWORD *)(v63 > 1), v64 + 1, 1, v29);
    v29[2] = v64 + 1;
    v65 = &v29[2 * v64];
    v65[4] = v61;
    v65[5] = v62;
    swift_release();
    sub_232016AFC((uint64_t)v78);
    v33 = v29[2];
    if (v33)
      goto LABEL_7;
  }
  swift_bridgeObjectRelease();
  v66 = sub_2321FF2F8();
  if ((a3 & 1) != 0)
  {
    swift_retain();
    if (sub_2321FF400() <= 1u)
      sub_23209997C();
    swift_release();
  }
  (*(void (**)(void *, uint64_t))(v75 + 8))(v77, v76);
  return v66;
}

uint64_t sub_232098C90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_2321FEECC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2321FEEC0();
  v4 = sub_2321FEEB4();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_232098D1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_2321FF19C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2321FF184();
  v4 = sub_2321FF190();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

unint64_t sub_232098DA4@<X0>(void *a1@<X0>, char a2@<W2>, uint64_t a3@<X8>)
{
  id v5;
  uint64_t v6;
  unint64_t result;

  v5 = a1;
  v6 = sub_2322015A8();
  *(_QWORD *)(a3 + 24) = &type metadata for SharableModelActivityChartItem;
  result = sub_23209A400();
  *(_QWORD *)(a3 + 32) = result;
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = a2;
  return result;
}

uint64_t sub_232098DF8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  void (*v15)(_BYTE *, _BYTE *, uint64_t);
  NSObject *v16;
  os_log_type_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void (*v25)(_BYTE *, uint64_t);
  uint64_t v26;
  char v27;
  _BYTE v29[12];
  int v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;

  v1 = v0;
  v2 = *v0;
  v35 = sub_23220039C();
  v3 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v5 = &v29[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_2321FEAE8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v33 = &v29[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = &v29[-v11];
  MEMORY[0x24BDAC7A8](v10);
  v14 = &v29[-v13];
  *((_BYTE *)v0 + qword_2541BF530) = sub_23212040C((char *)v0 + qword_2541BF570, v2);
  sub_2321FEA10();
  sub_23220030C();
  v34 = v7;
  v15 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16);
  v15(v12, v14, v6);
  v36 = v5;
  v16 = sub_232200390();
  v17 = sub_2322012FC();
  v18 = v17;
  if (os_log_type_enabled(v16, v17))
  {
    v19 = swift_slowAlloc();
    v32 = v3;
    v20 = v19;
    v31 = swift_slowAlloc();
    v38 = v31;
    *(_DWORD *)v20 = 136315394;
    v30 = v18;
    v21 = sub_232201BF0();
    v37 = sub_232013174(v21, v22, &v38);
    sub_232201710();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2080;
    v15(v33, v12, v6);
    v23 = sub_232200F00();
    v37 = sub_232013174(v23, v24, &v38);
    sub_232201710();
    swift_bridgeObjectRelease();
    v25 = *(void (**)(_BYTE *, uint64_t))(v34 + 8);
    v25(v12, v6);
    _os_log_impl(&dword_231FFB000, v16, (os_log_type_t)v30, "[%s]: Profile information updated. Updating data sources with activityMoveModeState: %s", (uint8_t *)v20, 0x16u);
    v26 = v31;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v26, -1, -1);
    MEMORY[0x2348FF468](v20, -1, -1);

    (*(void (**)(_BYTE *, uint64_t))(v32 + 8))(v36, v35);
  }
  else
  {
    v25 = *(void (**)(_BYTE *, uint64_t))(v34 + 8);
    v25(v12, v6);

    (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v36, v35);
  }
  v27 = (*((_BYTE *)v1 + qword_2541BF510 + 8) & 1) == 0;
  sub_23209912C((uint64_t)v14, v27);
  sub_2320994B8((uint64_t)v14, v27);
  return ((uint64_t (*)(_BYTE *, uint64_t))v25)(v14, v6);
}

uint64_t sub_23209912C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD v25[3];
  ValueMetadata *v26;
  unint64_t v27;
  _OWORD v28[2];
  uint64_t v29;

  v4 = sub_23220039C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v25 - v9;
  v11 = sub_2321FEADC();
  if (v11 == 2)
  {
    sub_2321E82A4(*(_BYTE *)(v2 + qword_2541BF530), a2 & 1, (uint64_t)v28);
    v26 = &type metadata for ActivityDataTypeDetailChartCell.MoveTimeDataSourceItem;
    v27 = sub_23209A258();
LABEL_5:
    v12 = swift_allocObject();
    v25[0] = v12;
    v13 = v28[1];
    *(_OWORD *)(v12 + 16) = v28[0];
    *(_OWORD *)(v12 + 32) = v13;
    *(_QWORD *)(v12 + 48) = v29;
    if (*(_QWORD *)(v2 + qword_2541BF6B0) && (sub_2321FF5E0(), swift_dynamicCastClass()))
    {
      sub_2320057B8(0, (unint64_t *)&qword_2541B13D8, (uint64_t (*)(uint64_t))sub_23209A1BC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_232210D40;
      sub_23201B304((uint64_t)v25, v14 + 32);
      swift_unknownObjectRetain();
      sub_2321FF0D0();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_232200354();
      v15 = sub_232200390();
      v16 = sub_2322012E4();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v17 = 0;
        _os_log_impl(&dword_231FFB000, v15, v16, "Can not update chart data source: Unexpected data source format", v17, 2u);
        MEMORY[0x2348FF468](v17, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
    return sub_232016AFC((uint64_t)v25);
  }
  if (v11 == 1)
  {
    sub_2321E8164(*(_BYTE *)(v2 + qword_2541BF530), a2 & 1, (uint64_t)v28);
    v26 = &type metadata for ActivityDataTypeDetailChartCell.ActiveEnergyDataSourceItem;
    v27 = sub_23209A2A0();
    goto LABEL_5;
  }
  sub_232200354();
  v19 = sub_232200390();
  v20 = sub_2322012E4();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    *(_QWORD *)&v28[0] = v22;
    *(_DWORD *)v21 = 136315138;
    v23 = sub_2322014C4();
    v25[0] = sub_232013174(v23, v24, (uint64_t *)v28);
    sub_232201710();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_231FFB000, v19, v20, "Can not configure chart data source: Unhandled HKActivityMoveMode: %s", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v22, -1, -1);
    MEMORY[0x2348FF468](v21, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
}

uint64_t sub_2320994B8(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  unsigned int *v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[3];
  ValueMetadata *v31;
  unint64_t v32;
  _OWORD v33[2];
  uint64_t v34;

  v29 = sub_23220039C();
  v4 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23209A330(0, &qword_2541B1120, MEMORY[0x24BE42C68]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v28 - v10;
  v12 = sub_2321FEAD0();
  v13 = qword_2541BF528;
  if (*(_QWORD *)(v2 + qword_2541BF528))
  {
    if (a2 & 1 | ((v12 & 1) == 0))
      v14 = (unsigned int *)MEMORY[0x24BE42C58];
    else
      v14 = (unsigned int *)MEMORY[0x24BE42C60];
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *v14, v8);
    swift_retain();
    sub_2321FEE78();
    swift_release();
  }
  v15 = sub_2321FEADC();
  if (v15 == 2)
  {
    v17 = sub_2321FF400();
    sub_232128844(v17, (uint64_t)v33);
    v31 = &_s38ActivityShowActiveEnergyDataSourceItemVN;
    v32 = sub_23209A174();
    goto LABEL_10;
  }
  if (v15 == 1)
  {
    v16 = sub_2321FF400();
    sub_232128988(v16, (uint64_t)v33);
    v31 = &_s37ActivityShowMoveMinutesDataSourceItemVN;
    v32 = sub_23209A210();
LABEL_10:
    v18 = swift_allocObject();
    v30[0] = v18;
    v19 = v33[1];
    *(_OWORD *)(v18 + 16) = v33[0];
    *(_OWORD *)(v18 + 32) = v19;
    *(_QWORD *)(v18 + 48) = v34;
    if (*(_QWORD *)(v2 + v13))
    {
      swift_retain();
      sub_2321FEE6C();
      swift_release();
      sub_2320057B8(0, (unint64_t *)&qword_2541B13D8, (uint64_t (*)(uint64_t))sub_23209A1BC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_232210D40;
      sub_23201B304((uint64_t)v30, v20 + 32);
      sub_2321FF0D0();
      swift_release();
      swift_bridgeObjectRelease();
    }
    return sub_232016AFC((uint64_t)v30);
  }
  sub_232200354();
  v22 = sub_232200390();
  v23 = sub_2322012E4();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    *(_QWORD *)&v33[0] = v25;
    *(_DWORD *)v24 = 136315138;
    v26 = sub_2322014C4();
    v30[0] = sub_232013174(v26, v27, (uint64_t *)v33);
    sub_232201710();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_231FFB000, v22, v23, "Can not configure chart data source: Unhandled ActivityMoveModeState: %s", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v25, -1, -1);
    MEMORY[0x2348FF468](v24, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v29);
}

void sub_232099834()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_232099860()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + qword_2541BF570;
  v2 = sub_2321FF40C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_2320998DC()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_2321FF2EC() + qword_2541BF570;
  v1 = sub_2321FF40C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_232099974()
{
  return type metadata accessor for ActivityDataTypeDetailChartDataSource();
}

uint64_t sub_23209997C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v1 = v0;
  v2 = sub_23220039C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23220030C();
  v6 = sub_232200390();
  v7 = sub_2322012CC();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v14 = v9;
    *(_DWORD *)v8 = 136315138;
    v13 = sub_232013174(0xD000000000000025, 0x8000000232213920, &v14);
    sub_232201710();
    _os_log_impl(&dword_231FFB000, v6, v7, "[%s]: Set up profile information observer", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v9, -1, -1);
    MEMORY[0x2348FF468](v8, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_retain();
  v10 = sub_2321FECB0();
  swift_release();
  v14 = v10;
  swift_allocObject();
  swift_weakInit();
  sub_23209A4A8();
  sub_23209A524();
  v11 = sub_232200870();
  swift_release();
  swift_release();
  *(_QWORD *)(v1 + qword_2541BF568) = v11;
  return swift_release();
}

uint64_t sub_232099BA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v1 = v0;
  v2 = sub_23220039C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23220030C();
  v6 = sub_232200390();
  v7 = sub_2322012CC();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v14 = v9;
    *(_DWORD *)v8 = 136315138;
    v13 = sub_232013174(0xD00000000000002BLL, 0x8000000232205A70, &v14);
    sub_232201710();
    _os_log_impl(&dword_231FFB000, v6, v7, "[%s]: Set up profile information observer", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v9, -1, -1);
    MEMORY[0x2348FF468](v8, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_retain();
  v10 = sub_2321FECB0();
  swift_release();
  v14 = v10;
  swift_allocObject();
  swift_weakInit();
  sub_23209A4A8();
  sub_23209A524();
  v11 = sub_232200870();
  swift_release();
  swift_release();
  *(_QWORD *)(v1 + qword_2541BF590) = v11;
  return swift_release();
}

uint64_t sub_232099DDC(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v25;
  unint64_t v26;
  _QWORD v27[2];
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v27[1] = a6;
  v28 = a4;
  v29 = a5;
  v8 = sub_23220039C();
  v30 = *(_QWORD *)(v8 - 8);
  v31 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, &qword_2541B11E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE410E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v27 - v12;
  v14 = sub_2321FEA1C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_23209A5A8(a1, (uint64_t)v13);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
      a3(v17);
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    }
    swift_release();
    sub_23209A604((uint64_t)v13);
  }
  sub_23220030C();
  swift_retain_n();
  v18 = sub_232200390();
  v19 = sub_2322012FC();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v21 = swift_slowAlloc();
    v34 = v21;
    *(_DWORD *)v20 = 136315394;
    v33 = sub_232013174(v28, v29, &v34);
    sub_232201710();
    *(_WORD *)(v20 + 12) = 2080;
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      v22 = (void *)sub_2321FF3F4();
      swift_release();
      v23 = objc_msgSend(v22, sel_profileIdentifier);

    }
    else
    {
      v23 = 0;
    }
    v32 = (uint64_t)v23;
    sub_2320057B8(0, &qword_255F9DD58, (uint64_t (*)(uint64_t))sub_23209A56C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v25 = sub_232200F00();
    v32 = sub_232013174(v25, v26, &v34);
    sub_232201710();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_231FFB000, v18, v19, "[%s]: Profile information for identifier %s does not exist", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v21, -1, -1);
    MEMORY[0x2348FF468](v20, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v10, v31);
}

unint64_t sub_23209A174()
{
  unint64_t result;

  result = qword_2541B1138;
  if (!qword_2541B1138)
  {
    result = MEMORY[0x2348FF39C](&unk_232216D70, &_s38ActivityShowActiveEnergyDataSourceItemVN);
    atomic_store(result, (unint64_t *)&qword_2541B1138);
  }
  return result;
}

unint64_t sub_23209A1BC()
{
  unint64_t result;

  result = qword_2541B11F0;
  if (!qword_2541B11F0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_2541B11F0);
  }
  return result;
}

unint64_t sub_23209A210()
{
  unint64_t result;

  result = qword_2541B1130;
  if (!qword_2541B1130)
  {
    result = MEMORY[0x2348FF39C](&unk_232216D40, &_s37ActivityShowMoveMinutesDataSourceItemVN);
    atomic_store(result, (unint64_t *)&qword_2541B1130);
  }
  return result;
}

unint64_t sub_23209A258()
{
  unint64_t result;

  result = qword_255F9DD48;
  if (!qword_255F9DD48)
  {
    result = MEMORY[0x2348FF39C](&unk_23221A490, &type metadata for ActivityDataTypeDetailChartCell.MoveTimeDataSourceItem);
    atomic_store(result, (unint64_t *)&qword_255F9DD48);
  }
  return result;
}

unint64_t sub_23209A2A0()
{
  unint64_t result;

  result = qword_2541B1188;
  if (!qword_2541B1188)
  {
    result = MEMORY[0x2348FF39C](&unk_23221A460, &type metadata for ActivityDataTypeDetailChartCell.ActiveEnergyDataSourceItem);
    atomic_store(result, (unint64_t *)&qword_2541B1188);
  }
  return result;
}

uint64_t sub_23209A2E8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23209A314(uint64_t a1)
{
  sub_2320057B8(a1, &qword_2541B13B8, (uint64_t (*)(uint64_t))sub_23209A1BC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
}

void sub_23209A330(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_2321FF5E0();
    v7 = a3(a1, v6, MEMORY[0x24BE43520]);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_23209A390()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B5BC8;
  if (!qword_2541B5BC8)
  {
    sub_23209A330(255, &qword_2541B1128, MEMORY[0x24BE42CA8]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BE42CC8], v1);
    atomic_store(result, (unint64_t *)&qword_2541B5BC8);
  }
  return result;
}

uint64_t sub_23209A3E8()
{
  return swift_deallocObject();
}

unint64_t sub_23209A3F8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_232098DA4(a1, *(_BYTE *)(v2 + 16), a2);
}

unint64_t sub_23209A400()
{
  unint64_t result;

  result = qword_255F9DD50;
  if (!qword_255F9DD50)
  {
    result = MEMORY[0x2348FF39C](&unk_2322169F0, &type metadata for SharableModelActivityChartItem);
    atomic_store(result, (unint64_t *)&qword_255F9DD50);
  }
  return result;
}

uint64_t sub_23209A444()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23209A468(uint64_t a1)
{
  uint64_t v1;

  return sub_232099DDC(a1, v1, (void (*)(char *))sub_232098DF8, 0xD000000000000025, 0x8000000232213920, (uint64_t)&qword_2541BF570);
}

void sub_23209A4A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B1240)
  {
    sub_2320057B8(255, &qword_2541B11E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE410E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v0 = sub_232200624();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B1240);
  }
}

unint64_t sub_23209A524()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B1238;
  if (!qword_2541B1238)
  {
    sub_23209A4A8();
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB9AF8], v1);
    atomic_store(result, (unint64_t *)&qword_2541B1238);
  }
  return result;
}

unint64_t sub_23209A56C()
{
  unint64_t result;

  result = qword_255F9DD60;
  if (!qword_255F9DD60)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255F9DD60);
  }
  return result;
}

uint64_t sub_23209A5A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2320057B8(0, &qword_2541B11E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE410E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23209A604(uint64_t a1)
{
  uint64_t v2;

  sub_2320057B8(0, &qword_2541B11E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE410E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23209A658(uint64_t a1)
{
  uint64_t v1;

  return sub_232099DDC(a1, v1, (void (*)(char *))sub_2320E0884, 0xD00000000000002BLL, 0x8000000232205A70, (uint64_t)&qword_2541BF5A0);
}

uint64_t sub_23209A69C()
{
  void *v0;
  void *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v26;
  NSObject *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void *v32;
  id v33;
  void *v34;
  NSObject *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  NSObject *v40;
  int v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = sub_23220039C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, &qword_2541B2A40, (void (*)(uint64_t))MEMORY[0x24BE4AC80]);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v39 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v39 - v14;
  if (!objc_msgSend(v1, sel_hasChangeTypeRawValue)
    || (v16 = objc_msgSend(v1, sel_changeTypeRawValue)) == 0)
  {
    v24 = sub_2321FFD00();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v15, 1, 1, v24);
    goto LABEL_7;
  }
  v17 = v16;
  v43 = ObjectType;
  v44 = v3;
  sub_232200EC4();

  sub_2321FFCE8();
  v18 = sub_2321FFD00();
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18) == 1)
  {
LABEL_7:
    sub_232059CAC();
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_232210D40;
    v22 = sub_2321FE554();
    goto LABEL_8;
  }
  sub_2320004AC((uint64_t)v15, (uint64_t)v13, &qword_2541B2A40, (void (*)(uint64_t))MEMORY[0x24BE4AC80]);
  v20 = (*(uint64_t (**)(char *, uint64_t))(v19 + 88))(v13, v18);
  if (v20 == *MEMORY[0x24BE4AC68])
  {
    sub_232059CAC();
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_232210D40;
    v22 = sub_2321FE548();
LABEL_8:
    *(_QWORD *)(v21 + 32) = v22;
    *(_QWORD *)(v21 + 40) = v23;
    goto LABEL_9;
  }
  if (v20 == *MEMORY[0x24BE4AC60])
  {
    sub_232059CAC();
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_232210D40;
    v22 = sub_2321FE53C();
    goto LABEL_8;
  }
  (*(void (**)(char *, uint64_t))(v19 + 8))(v13, v18);
  sub_232200318();
  v26 = v1;
  v27 = sub_232200390();
  v28 = sub_2322012E4();
  if (os_log_type_enabled(v27, (os_log_type_t)v28))
  {
    v41 = v28;
    v40 = v27;
    v29 = swift_slowAlloc();
    v39 = swift_slowAlloc();
    v46 = v39;
    *(_DWORD *)v29 = 136315394;
    v42 = v26;
    v30 = sub_2320689E0();
    v45 = sub_232013174(v30, v31, &v46);
    v32 = v42;
    sub_232201710();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 12) = 2080;
    if (objc_msgSend(v32, sel_hasChangeTypeRawValue)
      && (v33 = objc_msgSend(v32, sel_changeTypeRawValue)) != 0)
    {
      v34 = v33;
      sub_232200EC4();

      sub_2321FFCE8();
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v10, 1, 1, v18);
    }
    v36 = v39;
    v35 = v40;
    v37 = sub_232200F00();
    v45 = sub_232013174(v37, v38, &v46);
    sub_232201710();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_231FFB000, v35, (os_log_type_t)v41, "[%s]: Unknown changeType: %s", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v36, -1, -1);
    MEMORY[0x2348FF468](v29, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v44);
  v21 = MEMORY[0x24BEE4AF8];
LABEL_9:
  sub_23200040C((uint64_t)v15, &qword_2541B2A40, (void (*)(uint64_t))MEMORY[0x24BE4AC80]);
  return v21;
}

void sub_23209AB54(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  id v17;
  void *v18;
  id v19;
  void (*v20)(char *, uint64_t);
  id v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v2 = v1;
  v36 = a1;
  v3 = sub_2321FD8B8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2321FDC6C();
  v35 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v34 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v33 = (char *)&v33 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v33 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v33 - v15;
  v17 = objc_msgSend(v1, sel_baseTrendLine);
  if (!v17)
  {
    __break(1u);
    goto LABEL_11;
  }
  v18 = v17;
  v19 = objc_msgSend(v17, sel_dateInterval);

  if (!v19)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_232201500();

  sub_2321FD870();
  v20 = *(void (**)(char *, uint64_t))(v4 + 8);
  v20(v6, v3);
  v21 = objc_msgSend(v2, sel_baseTrendLine);
  if (!v21)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v22 = v21;
  v23 = objc_msgSend(v21, sel_dateInterval);

  if (!v23)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  sub_232201500();

  sub_2321FD8AC();
  v20(v6, v3);
  v24 = objc_msgSend(v2, sel_changeTrendLine);
  if (!v24)
  {
    v28 = v35;
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v14, v16, v7);
    goto LABEL_9;
  }
  v25 = v24;
  v26 = objc_msgSend(v24, sel_dateInterval);
  if (v26)
  {
    v27 = v26;
    sub_232201500();

    sub_2321FD870();
    v20(v6, v3);
    v28 = v35;
LABEL_9:
    sub_2321FDBDC();
    v29 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
    v29(v33, v16, v7);
    v29(v34, v16, v7);
    sub_2321FD87C();
    v30 = v36;
    sub_2321FE644();
    v31 = *(void (**)(char *, uint64_t))(v28 + 8);
    v31(v14, v7);
    v31(v16, v7);
    v32 = sub_2321FE65C();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v30, 0, 1, v32);
    return;
  }
LABEL_14:
  __break(1u);
}

uint64_t sub_23209AE80()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_2320002B4(0, &qword_2541B2A40, (void (*)(uint64_t))MEMORY[0x24BE4AC80]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - v2;
  if (objc_msgSend(v0, sel_hasChangeTypeRawValue)
    && (v4 = objc_msgSend(v0, sel_changeTypeRawValue)) != 0)
  {
    v5 = v4;
    sub_232200EC4();

    sub_2321FFCE8();
    v6 = sub_2321FFD00();
    v7 = 1;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v3, 1, v6) != 1)
    {
      sub_23200040C((uint64_t)v3, &qword_2541B2A40, (void (*)(uint64_t))MEMORY[0x24BE4AC80]);
      return 0;
    }
  }
  else
  {
    v8 = sub_2321FFD00();
    v7 = 1;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  }
  return v7;
}

uint64_t sub_23209AFB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;

  v25[1] = a1;
  v1 = sub_2321FF8F8();
  v26 = *(_QWORD *)(v1 - 8);
  v27 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v25[0] = (char *)v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, &qword_2541B2378, v3);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v25 - v8;
  v10 = sub_2321FE614();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, &qword_2541B28C8, v14);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)v25 - v19;
  sub_23209B2A0((uint64_t)v25 - v19);
  sub_2320004AC((uint64_t)v20, (uint64_t)v18, &qword_2541B28C8, (void (*)(uint64_t))MEMORY[0x24BE47D68]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v18, 1, v10) == 1)
  {
    sub_23200040C((uint64_t)v18, &qword_2541B28C8, (void (*)(uint64_t))MEMORY[0x24BE47D68]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v18, v10);
    sub_2321FE218();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  sub_23200040C((uint64_t)v20, &qword_2541B28C8, (void (*)(uint64_t))MEMORY[0x24BE47D68]);
  sub_23209B5C4((uint64_t)v9);
  sub_2320004AC((uint64_t)v9, (uint64_t)v7, &qword_2541B2378, (void (*)(uint64_t))MEMORY[0x24BE48710]);
  v22 = v26;
  v21 = v27;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v7, 1, v27) == 1)
  {
    sub_23200040C((uint64_t)v7, &qword_2541B2378, (void (*)(uint64_t))MEMORY[0x24BE48710]);
  }
  else
  {
    v23 = v25[0];
    (*(void (**)(_QWORD, char *, uint64_t))(v22 + 32))(v25[0], v7, v21);
    sub_23209B708();
    sub_2321FE218();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v21);
  }
  return sub_23200040C((uint64_t)v9, &qword_2541B2378, (void (*)(uint64_t))MEMORY[0x24BE48710]);
}

uint64_t sub_23209B2A0@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  int v15;
  unsigned int *v16;
  uint64_t v17;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  ObjectType = swift_getObjectType();
  v4 = sub_23220039C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2321FE4E8();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v29 - v13;
  v15 = HKCodableSummaryTrendTileViewModel.coveredDateRange.getter();
  if (v15 == 4)
  {
    v16 = (unsigned int *)MEMORY[0x24BE47AA0];
    goto LABEL_5;
  }
  if (v15 == 5)
  {
    v16 = (unsigned int *)MEMORY[0x24BE47A98];
LABEL_5:
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v14, *v16, v8);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
    sub_2321FE620();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    v17 = sub_2321FE614();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a1, 0, 1, v17);
  }
  sub_232200318();
  v19 = v1;
  v20 = sub_232200390();
  v21 = sub_2322012E4();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v30 = swift_slowAlloc();
    v31 = v30;
    *(_DWORD *)v22 = 136315394;
    v32 = ObjectType;
    swift_getMetatypeMetadata();
    v23 = sub_232200F00();
    v32 = sub_232013174(v23, v24, &v31);
    sub_232201710();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2080;
    LOBYTE(v32) = HKCodableSummaryTrendTileViewModel.coveredDateRange.getter();
    v25 = sub_232200F00();
    v32 = sub_232013174(v25, v26, &v31);
    sub_232201710();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_231FFB000, v20, v21, "[%s]: Date range not handled: %s", (uint8_t *)v22, 0x16u);
    v27 = v30;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v27, -1, -1);
    MEMORY[0x2348FF468](v22, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v28 = sub_2321FE614();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(a1, 1, 1, v28);
}

uint64_t sub_23209B5C4@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v9;

  if (objc_msgSend(v1, sel_hasObjectTypeIdentifier)
    && (v3 = (void *)objc_opt_self(),
        v4 = objc_msgSend(v1, sel_objectTypeIdentifier),
        v5 = objc_msgSend(v3, sel__typeWithIdentifier_, v4),
        v4,
        v5))
  {
    v6 = objc_msgSend(v5, sel_description, 0x5F646E657254, 0xE600000000000000);
    sub_232200EC4();

    sub_232200F48();
    swift_bridgeObjectRelease();
    sub_2321FF904();

    v7 = sub_2321FF8F8();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a1, 0, 1, v7);
  }
  else
  {
    v9 = sub_2321FF8F8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, 1, 1, v9);
  }
}

unint64_t sub_23209B708()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B2370;
  if (!qword_2541B2370)
  {
    v1 = sub_2321FF8F8();
    result = MEMORY[0x2348FF39C](MEMORY[0x24BE48700], v1);
    atomic_store(result, (unint64_t *)&qword_2541B2370);
  }
  return result;
}

uint64_t sub_23209B750(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  ValueMetadata *v21;
  _UNKNOWN **v22;

  v5 = sub_232200180();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v18 - v13;
  sub_2320004AC(a2, (uint64_t)&v18, &qword_255F9DE70, (void (*)(uint64_t))sub_23209BE4C);
  sub_232036B18(a1, (uint64_t)v14);
  if (v19)
  {
    swift_retain();
    sub_232003F18((uint64_t)v14);
    sub_2320167F8(&v18, (uint64_t)&v20);
  }
  else
  {
    v15 = (void *)*((_QWORD *)v14 + 2);
    v21 = &type metadata for HealthStoreVisionPrescriptionImageAttachmentProvider;
    v22 = &off_250101258;
    *(_QWORD *)&v20 = v15;
    swift_retain();
    v16 = v15;
    sub_232003F18((uint64_t)v14);
    sub_23200040C((uint64_t)&v18, &qword_255F9DE70, (void (*)(uint64_t))sub_23209BE4C);
  }
  sub_2320167F8(&v20, v2 + qword_255F9DD68);
  swift_release();
  sub_232036B18(a1, (uint64_t)v12);
  sub_232200174();
  sub_23200040C(a2, &qword_255F9DE70, (void (*)(uint64_t))sub_23209BE4C);
  sub_232003F18(a1);
  sub_232036BAC((uint64_t)v12, v2 + qword_2541BF5D0);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v2 + qword_2541BF5C8, v8, v5);
  return v2;
}

void sub_23209B958(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void **v9;
  _QWORD *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  _QWORD *v16;
  void *v17;
  id v18;
  _QWORD v19[6];

  v9 = (void **)sub_232016AD8((_QWORD *)(v4 + qword_255F9DD68), *(_QWORD *)(v4 + qword_255F9DD68 + 24));
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a1;
  v10[3] = a2;
  v10[4] = a3;
  v10[5] = a4;
  v11 = *v9;
  v12 = objc_allocWithZone(MEMORY[0x24BDD3930]);
  v13 = a1;
  v14 = a2;
  swift_retain();
  v15 = objc_msgSend(v12, sel_initWithHealthStore_, v11);
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = sub_23209C2DC;
  v16[3] = v10;
  v16[4] = v11;
  v19[4] = sub_23209C318;
  v19[5] = v16;
  v19[0] = MEMORY[0x24BDAC760];
  v19[1] = 1107296256;
  v19[2] = sub_232161CA0;
  v19[3] = &unk_250101208;
  v17 = _Block_copy(v19);
  swift_retain();
  v18 = v11;
  swift_release();
  objc_msgSend(v15, sel_getAttachmentsForObject_completion_, v13, v17);
  _Block_release(v17);
  swift_release();

}

void sub_23209BAC4(void *a1, char a2, void *a3, void *a4, void (*a5)(void *, uint64_t), uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  void (*v28)(uint64_t);
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  void (*v33)(void *, uint64_t);
  _OWORD v34[2];
  uint64_t v35;

  sub_2320002B4(0, (unint64_t *)&qword_2541B2A70, (void (*)(uint64_t))MEMORY[0x24BE4ADA0]);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v32 - v16;
  if ((a2 & 1) != 0)
  {
    v31 = a1;
    a5(a1, 1);
    sub_23209C33C(a1, 1);
  }
  else
  {
    v32 = a6;
    v33 = a5;
    sub_232003E9C(0, &qword_255F9C0A0);
    v18 = HKCodableSummaryVisionPrescriptionValue.init(visionPrescription:hasImage:)(a3, a1 & 1);
    sub_2321FFE50();
    v19 = *MEMORY[0x24BE4AD78];
    v20 = sub_2321FFD78();
    v21 = *(_QWORD *)(v20 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 104))(v17, v19, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v17, 0, 1, v20);
    v22 = a4;
    v23 = objc_msgSend(v18, sel_data);
    if (v23)
    {
      v24 = v23;
      sub_232003E9C(0, &qword_2541B0CD0);
      v25 = sub_2321FDAD4();
      v27 = v26;

      v28 = (void (*)(uint64_t))MEMORY[0x24BE4ADA0];
      sub_2320004AC((uint64_t)v17, (uint64_t)v15, (unint64_t *)&qword_2541B2A70, (void (*)(uint64_t))MEMORY[0x24BE4ADA0]);
      v35 = 0;
      memset(v34, 0, sizeof(v34));
      v29 = sub_232015828(v25, v27, 18, (uint64_t)v15, (uint64_t)v22, 0, (uint64_t)v34);

      sub_232003ED4(v25, v27);
      sub_23200040C((uint64_t)v17, (unint64_t *)&qword_2541B2A70, v28);
      v30 = v29;
      v33(v29, 0);

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_23209BD48()
{
  uint64_t v0;

  return sub_232016AFC(v0 + qword_255F9DD68);
}

uint64_t sub_23209BD58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_232003F18(v0 + qword_2541BF5D0);
  v1 = v0 + qword_2541BF5C8;
  v2 = sub_232200180();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_232016AFC(v0 + qword_255F9DD68);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VisionPrescriptionMostRecentSampleCurrentValueSharableModelStep()
{
  uint64_t result;

  result = qword_255F9DD98;
  if (!qword_255F9DD98)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23209BE0C()
{
  return swift_initClassMetadata2();
}

unint64_t sub_23209BE4C()
{
  unint64_t result;

  result = qword_255F9DE78;
  if (!qword_255F9DE78)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255F9DE78);
  }
  return result;
}

void sub_23209BEA0(unint64_t a1, id a2, void (*a3)(id, uint64_t))
{
  id v5;
  unint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  if (a2)
  {
    v5 = a2;
    a3(a2, 1);

  }
  else
  {
    if (a1)
      v6 = a1;
    else
      v6 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    v7 = (id)HKVisionPrescriptionSupportedImageUTTypeIdentifiers();
    sub_2322002E8();
    v8 = sub_232201038();

    v9 = sub_2321AACA4(v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v10 = sub_23209BFAC(v6, v9);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    if (v10)

    a3((id)(v10 != 0), 0);
  }
}

id sub_23209BFAC(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  BOOL v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, unint64_t, uint64_t);
  char v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v34 = a2;
  v3 = sub_2322002E8();
  v33 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v25 - v7;
  if (!(a1 >> 62))
  {
    v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_3;
LABEL_19:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_18:
  swift_bridgeObjectRetain();
  v9 = sub_232201998();
  if (!v9)
    goto LABEL_19;
LABEL_3:
  v10 = 0;
  v28 = a1;
  v29 = a1 & 0xC000000000000001;
  v26 = a1 + 32;
  v32 = v34 + 56;
  v27 = v9;
  while (1)
  {
    if (v29)
    {
      v11 = (id)MEMORY[0x2348FEA30](v10, a1);
      v12 = __OFADD__(v10, 1);
      v13 = v10 + 1;
      if (v12)
        goto LABEL_17;
    }
    else
    {
      v11 = *(id *)(v26 + 8 * v10);
      v12 = __OFADD__(v10, 1);
      v13 = v10 + 1;
      if (v12)
      {
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
    }
    v30 = v13;
    v31 = v11;
    v14 = objc_msgSend(v11, sel_contentType);
    sub_2322002DC();

    if (*(_QWORD *)(v34 + 16))
    {
      v15 = v34;
      sub_23209C268(&qword_255F9DE80, MEMORY[0x24BEE63E0]);
      v16 = sub_232200DF8();
      v17 = -1 << *(_BYTE *)(v15 + 32);
      v18 = v16 & ~v17;
      if (((*(_QWORD *)(v32 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
        break;
    }
LABEL_4:
    (*(void (**)(char *, uint64_t))(v33 + 8))(v8, v3);

    a1 = v28;
    v10 = v30;
    if (v30 == v27)
      goto LABEL_19;
  }
  v19 = ~v17;
  v20 = *(_QWORD *)(v33 + 72);
  v21 = *(void (**)(char *, unint64_t, uint64_t))(v33 + 16);
  while (1)
  {
    v21(v6, *(_QWORD *)(v34 + 48) + v20 * v18, v3);
    sub_23209C268(&qword_255F9DE88, MEMORY[0x24BEE63E8]);
    v22 = sub_232200E64();
    v23 = *(void (**)(char *, uint64_t))(v33 + 8);
    v23(v6, v3);
    if ((v22 & 1) != 0)
      break;
    v18 = (v18 + 1) & v19;
    if (((*(_QWORD *)(v32 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      goto LABEL_4;
  }
  v23(v8, v3);
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_23209C268(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_2322002E8();
    result = MEMORY[0x2348FF39C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23209C2A8()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_23209C2DC(void *a1, char a2)
{
  uint64_t v2;

  sub_23209BAC4(a1, a2 & 1, *(void **)(v2 + 16), *(void **)(v2 + 24), *(void (**)(void *, uint64_t))(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_23209C2EC()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_23209C318(unint64_t a1, void *a2)
{
  uint64_t v2;

  sub_23209BEA0(a1, a2, *(void (**)(id, uint64_t))(v2 + 16));
}

uint64_t sub_23209C324(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23209C334()
{
  return swift_release();
}

void sub_23209C33C(id a1, char a2)
{
  if ((a2 & 1) != 0)

}

ValueMetadata *type metadata accessor for HealthStoreVisionPrescriptionImageAttachmentProvider()
{
  return &type metadata for HealthStoreVisionPrescriptionImageAttachmentProvider;
}

void sub_23209C358(void (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void (*v20)(char *, uint64_t, _QWORD *);
  char *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  unint64_t v31;
  char *v32;
  unint64_t v33;
  void (*v34)(id *);
  _QWORD *v35;
  id v36;

  v34 = a1;
  sub_2320057B8(0, (unint64_t *)&unk_2541B2358, (uint64_t (*)(uint64_t))MEMORY[0x24BE42988], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v26 - v7;
  v9 = (_QWORD *)sub_2321FEE48();
  v10 = (_QWORD *)*(v9 - 1);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v32 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v28 = (char *)&v26 - v13;
  if (a3 >> 62)
    goto LABEL_20;
  v14 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v14; v14 = sub_232201998())
  {
    v35 = v10;
    v30 = v8;
    v33 = MEMORY[0x24BEE4AF8];
    v31 = a3 & 0xC000000000000001;
    v15 = 4;
    v26 = (char *)a3;
    v27 = a2;
    v29 = v14;
    while (1)
    {
      v10 = v9;
      v16 = v31 ? (_QWORD *)MEMORY[0x2348FEA30](v15 - 4, a3) : *(id *)(a3 + 8 * v15);
      v9 = v16;
      v17 = v15 - 3;
      if (__OFADD__(v15 - 4, 1))
        break;
      v8 = (char *)a3;
      v36 = v16;
      v18 = (uint64_t)v30;
      v34(&v36);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return;
      }

      v19 = v35;
      v9 = v10;
      if (((unsigned int (*)(uint64_t, uint64_t, _QWORD *))v35[6])(v18, 1, v10) == 1)
      {
        sub_232016D88(v18, (unint64_t *)&unk_2541B2358, (uint64_t (*)(uint64_t))MEMORY[0x24BE42988]);
        a3 = (unint64_t)v8;
      }
      else
      {
        v20 = (void (*)(char *, uint64_t, _QWORD *))v19[4];
        v21 = v28;
        v20(v28, v18, v10);
        v20(v32, (uint64_t)v21, v10);
        v22 = v33;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v22 = sub_232096930(0, *(_QWORD *)(v22 + 16) + 1, 1, v22);
        v24 = *(_QWORD *)(v22 + 16);
        v23 = *(_QWORD *)(v22 + 24);
        if (v24 >= v23 >> 1)
          v22 = sub_232096930(v23 > 1, v24 + 1, 1, v22);
        *(_QWORD *)(v22 + 16) = v24 + 1;
        v25 = (*((unsigned __int8 *)v35 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v35 + 80);
        v33 = v22;
        v9 = v10;
        v20((char *)(v22 + v25 + v35[9] * v24), (uint64_t)v32, v10);
        a3 = (unint64_t)v26;
        a2 = v27;
      }
      ++v15;
      if (v17 == v29)
        goto LABEL_21;
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_21:
  swift_bridgeObjectRelease();
}

unint64_t sub_23209C66C(void (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(id *);
  uint64_t v29;
  id v30;

  v28 = a1;
  sub_2320057B8(0, &qword_2541B6A08, (uint64_t (*)(uint64_t))sub_232016D1C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v22 - v6;
  sub_232016D1C();
  v27 = v8;
  v29 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v26 = (uint64_t)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v24 = (uint64_t)&v22 - v11;
  if (a3 >> 62)
    goto LABEL_20;
  v12 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v12; v12 = sub_232201998())
  {
    v13 = MEMORY[0x24BEE4AF8];
    v25 = a3 & 0xC000000000000001;
    v14 = 4;
    v23 = a3;
    while (1)
    {
      v15 = v25 ? (id)MEMORY[0x2348FEA30](v14 - 4, a3) : *(id *)(a3 + 8 * v14);
      v16 = v15;
      v17 = v14 - 3;
      if (__OFADD__(v14 - 4, 1))
        break;
      v30 = v15;
      v28(&v30);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v13;
      }

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v7, 1, v27) == 1)
      {
        sub_232016D88((uint64_t)v7, &qword_2541B6A08, (uint64_t (*)(uint64_t))sub_232016D1C);
      }
      else
      {
        v18 = v24;
        sub_232025468((uint64_t)v7, v24, (uint64_t (*)(_QWORD))sub_232016D1C);
        sub_232025468(v18, v26, (uint64_t (*)(_QWORD))sub_232016D1C);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v13 = sub_232096B60(0, *(_QWORD *)(v13 + 16) + 1, 1, v13);
        v20 = *(_QWORD *)(v13 + 16);
        v19 = *(_QWORD *)(v13 + 24);
        if (v20 >= v19 >> 1)
          v13 = sub_232096B60(v19 > 1, v20 + 1, 1, v13);
        *(_QWORD *)(v13 + 16) = v20 + 1;
        sub_232025468(v26, v13+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(_QWORD *)(v29 + 72) * v20, (uint64_t (*)(_QWORD))sub_232016D1C);
        a3 = v23;
      }
      ++v14;
      if (v17 == v12)
      {
        swift_bridgeObjectRelease();
        return v13;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

unint64_t sub_23209C958(void (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  void (*v22)(_QWORD);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  sub_2320057B8(0, &qword_2541B2AF0, (uint64_t (*)(uint64_t))sub_23202561C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v21 - v7;
  sub_23202561C();
  v26 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v25 = (uint64_t)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v24 = (uint64_t)&v21 - v13;
  v14 = *(_QWORD *)(a3 + 16);
  if (!v14)
    return MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  v15 = 0;
  v16 = MEMORY[0x24BEE4AF8];
  v22 = a1;
  v23 = a3;
  do
  {
    v27 = *(_BYTE *)(a3 + v15 + 32);
    a1(&v27);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v16;
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v26) == 1)
    {
      sub_232016D88((uint64_t)v8, &qword_2541B2AF0, (uint64_t (*)(uint64_t))sub_23202561C);
    }
    else
    {
      v17 = v24;
      sub_232025468((uint64_t)v8, v24, (uint64_t (*)(_QWORD))sub_23202561C);
      sub_232025468(v17, v25, (uint64_t (*)(_QWORD))sub_23202561C);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v16 = sub_232096C80(0, *(_QWORD *)(v16 + 16) + 1, 1, v16);
      v19 = *(_QWORD *)(v16 + 16);
      v18 = *(_QWORD *)(v16 + 24);
      if (v19 >= v18 >> 1)
        v16 = sub_232096C80(v18 > 1, v19 + 1, 1, v16);
      *(_QWORD *)(v16 + 16) = v19 + 1;
      sub_232025468(v25, v16+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v19, (uint64_t (*)(_QWORD))sub_23202561C);
      a1 = v22;
      a3 = v23;
    }
    ++v15;
  }
  while (v14 != v15);
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_23209CBC0(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v12;
  id v13;
  uint64_t v14;

  v14 = MEMORY[0x24BEE4AF8];
  if (a3 >> 62)
    goto LABEL_17;
  v5 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; v5 = sub_232201998())
  {
    for (i = 4; ; ++i)
    {
      v7 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2348FEA30](i - 4, a3) : *(id *)(a3 + 8 * i);
      v8 = v7;
      v9 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v13 = v7;
      a1(&v12, &v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return swift_bridgeObjectRelease();
      }

      if (v12)
      {
        MEMORY[0x2348FE190]();
        if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23220105C();
        sub_232201074();
        sub_232201050();
      }
      if (v9 == v5)
      {
        swift_bridgeObjectRelease();
        return v14;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23209CD58(_QWORD *(*a1)(uint64_t *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  uint64_t i;
  _QWORD *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  result = MEMORY[0x24BEE4AF8];
  v12 = MEMORY[0x24BEE4AF8];
  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v6; ++i)
    {
      v11 = *(_BYTE *)(a3 + i + 32);
      v9 = a1(&v10, &v11);
      if (v3)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (v10)
      {
        MEMORY[0x2348FE190](v9);
        if (*(_QWORD *)(v12 + 16) >= *(_QWORD *)(v12 + 24) >> 1)
          sub_23220105C();
        sub_232201074();
        sub_232201050();
      }
    }
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

uint64_t sub_23209CE78(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_23209CEB0(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE4AE58]);
}

uint64_t sub_23209CE94(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_23209CEB0(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE48348]);
}

uint64_t sub_23209CEB0(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_QWORD *)(a3 + 16);
  result = MEMORY[0x24BEE4AF8];
  v14 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v9 = *(_QWORD *)(a4(0) - 8);
    v10 = a3 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v11 = *(_QWORD *)(v9 + 72);
    swift_bridgeObjectRetain();
    do
    {
      v12 = a1(&v13, v10);
      if (v4)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (v13)
      {
        MEMORY[0x2348FE190](v12);
        if (*(_QWORD *)(v14 + 16) >= *(_QWORD *)(v14 + 24) >> 1)
          sub_23220105C();
        sub_232201074();
        sub_232201050();
      }
      v10 += v11;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    return v14;
  }
  return result;
}

uint64_t sub_23209CFE4(void *a1, uint64_t a2)
{
  id v3;
  char v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  id v15;

  if ((a2 & 0xC000000000000001) != 0)
  {
    v3 = a1;
    v4 = sub_232201818();

    return v4 & 1;
  }
  if (!*(_QWORD *)(a2 + 16)
    || (v6 = sub_232201698(),
        v7 = -1 << *(_BYTE *)(a2 + 32),
        v8 = v6 & ~v7,
        v9 = a2 + 56,
        ((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0))
  {
LABEL_11:
    v12 = 0;
    return v12 & 1;
  }
  sub_232003E9C(0, (unint64_t *)&qword_2541B74A0);
  v10 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v8);
  v11 = sub_2322016A4();

  if ((v11 & 1) == 0)
  {
    v13 = ~v7;
    v14 = (v8 + 1) & v13;
    if (((*(_QWORD *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
    {
      do
      {
        v15 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v14);
        v12 = sub_2322016A4();

        if ((v12 & 1) != 0)
          break;
        v14 = (v14 + 1) & v13;
      }
      while (((*(_QWORD *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
      return v12 & 1;
    }
    goto LABEL_11;
  }
  v12 = 1;
  return v12 & 1;
}

uint64_t sub_23209D140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_232201B78();
    sub_232200F3C();
    v6 = sub_232201B9C();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_232201ADC() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_232201ADC() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_23209D274(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  int64_t v24;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v24 = v4 + v2;
  else
    v24 = v4;
  v3 = sub_2320967FC(isUniquelyReferenced_nonNull_native, v24, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = *(_QWORD *)(v3 + 16);
  v10 = (*(_QWORD *)(v3 + 24) >> 1) - v9;
  v11 = sub_2321FE2A8();
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v3 + v13 + v14 * v9;
  v16 = a1 + v13;
  v17 = v14 * v8;
  v18 = v15 + v17;
  v19 = v16 + v17;
  if (v16 < v18 && v15 < v19)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v21 = *(_QWORD *)(v3 + 16);
  v22 = __OFADD__(v21, v8);
  v23 = v21 + v8;
  if (!v22)
  {
    *(_QWORD *)(v3 + 16) = v23;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_2322019E0();
  __break(1u);
  return result;
}

uint64_t sub_23209D3E8(unint64_t a1)
{
  return sub_23209D400(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_2320A6760);
}

uint64_t sub_23209D3F4(unint64_t a1)
{
  return sub_23209D400(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_2320A6980);
}

uint64_t sub_23209D400(unint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, unint64_t))
{
  unint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_232201998();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_232201998();
    swift_bridgeObjectRelease();
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_23;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if (v6 >> 62)
    goto LABEL_25;
  v11 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    swift_bridgeObjectRetain();
    v6 = MEMORY[0x2348FEA3C](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v11 = sub_232201998();
    swift_bridgeObjectRelease();
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_232201050();
  }
  __break(1u);
  return result;
}

uint64_t sub_23209D5BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_2320973A0(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[3 * v8 + 4];
  if (a1 + 32 < v9 + 24 * v2 && v9 < a1 + 32 + 24 * v2)
    goto LABEL_24;
  sub_2320976E8();
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_2322019E0();
  __break(1u);
  return result;
}

uint64_t sub_23209D720(uint64_t a1)
{
  return sub_23209DDC8(a1, (uint64_t (*)(void))sub_2320974D8, (unint64_t *)&qword_2541B6B80);
}

uint64_t sub_23209D73C(unint64_t a1)
{
  return sub_23209D400(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_2320A6B8C);
}

uint64_t sub_23209D748(uint64_t result)
{
  _QWORD **v1;
  int64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  int64_t v6;
  uint64_t v7;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  int64_t v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  _QWORD *v28;
  int64_t v29;
  int64_t v30;
  unint64_t v31;
  unint64_t v32;
  int64_t v33;
  int64_t v34;
  int64_t v35;
  unint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;

  v3 = *(_QWORD *)(result + 16);
  v4 = *v1;
  v5 = (*v1)[2];
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v7 = result;
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  *v1 = v4;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v9 = v4[3] >> 1, v9 < v6))
  {
    if (v5 <= v6)
      v10 = v5 + v3;
    else
      v10 = v5;
    v4 = sub_232097524(isUniquelyReferenced_nonNull_native, v10, 1, v4);
    *v1 = v4;
    v9 = v4[3] >> 1;
  }
  v11 = v4[2];
  v12 = v9 - v11;
  result = sub_23201AE18((uint64_t)&v47, (uint64_t)&v4[5 * v11 + 4], v9 - v11, v7);
  if (result < v3)
    goto LABEL_15;
  if (!result)
    goto LABEL_12;
  v14 = v4[2];
  v15 = __OFADD__(v14, result);
  v16 = v14 + result;
  if (!v15)
  {
    v4[2] = v16;
LABEL_12:
    if (result != v12)
      return sub_23201B04C();
LABEL_16:
    v2 = v4[2];
    v4 = v47;
    v13 = v48;
    v7 = v50;
    v39 = v48;
    if (v51)
    {
      v17 = (v51 - 1) & v51;
      v18 = __clz(__rbit64(v51)) | (v50 << 6);
LABEL_18:
      sub_23201B304(v4[7] + 40 * v18, (uint64_t)&v44);
      v19 = v7;
      goto LABEL_39;
    }
    goto LABEL_20;
  }
  __break(1u);
LABEL_20:
  v20 = v7 + 1;
  if (__OFADD__(v7, 1))
    goto LABEL_77;
  v21 = (unint64_t)(v49 + 64) >> 6;
  v19 = v7;
  if (v20 < v21)
  {
    v22 = *(_QWORD *)(v13 + 8 * v20);
    if (v22)
    {
LABEL_23:
      v17 = (v22 - 1) & v22;
      v18 = __clz(__rbit64(v22)) + (v20 << 6);
      v7 = v20;
      goto LABEL_18;
    }
    v23 = v7 + 2;
    v19 = v7 + 1;
    if (v7 + 2 < v21)
    {
      v22 = *(_QWORD *)(v13 + 8 * v23);
      if (v22)
      {
LABEL_26:
        v20 = v23;
        goto LABEL_23;
      }
      v19 = v7 + 2;
      if (v7 + 3 < v21)
      {
        v22 = *(_QWORD *)(v39 + 8 * (v7 + 3));
        if (v22)
        {
          v20 = v7 + 3;
          goto LABEL_23;
        }
        v23 = v7 + 4;
        v19 = v7 + 3;
        if (v7 + 4 < v21)
        {
          v22 = *(_QWORD *)(v39 + 8 * v23);
          if (v22)
            goto LABEL_26;
          v20 = v7 + 5;
          v19 = v7 + 4;
          if (v7 + 5 < v21)
          {
            v22 = *(_QWORD *)(v39 + 8 * v20);
            if (v22)
              goto LABEL_23;
            v19 = v21 - 1;
            v24 = v7 + 6;
            while (v21 != v24)
            {
              v22 = *(_QWORD *)(v39 + 8 * v24++);
              if (v22)
              {
                v20 = v24 - 1;
                goto LABEL_23;
              }
            }
          }
        }
      }
    }
  }
  v17 = 0;
  v46 = 0;
  v44 = 0u;
  v45 = 0u;
LABEL_39:
  v50 = v19;
  v51 = v17;
  sub_23200054C((uint64_t)&v44, (uint64_t)&v42, (uint64_t (*)(_QWORD))sub_2320A7F64);
  if (!v43)
  {
LABEL_75:
    sub_232002CEC((uint64_t)&v44, (uint64_t (*)(_QWORD))sub_2320A7F64);
    sub_23201B04C();
    return sub_232002CEC((uint64_t)&v42, (uint64_t (*)(_QWORD))sub_2320A7F64);
  }
  while (1)
  {
    sub_232002CEC((uint64_t)&v42, (uint64_t (*)(_QWORD))sub_2320A7F64);
    v25 = *v1;
    v26 = (*v1)[3];
    v27 = v26 >> 1;
    if ((uint64_t)(v26 >> 1) < v2 + 1)
    {
      v25 = sub_232097524((_QWORD *)(v26 > 1), v2 + 1, 1, *v1);
      *v1 = v25;
      v27 = v25[3] >> 1;
    }
    sub_23200054C((uint64_t)&v44, (uint64_t)&v40, (uint64_t (*)(_QWORD))sub_2320A7F64);
    if (v41)
      break;
LABEL_41:
    sub_232002CEC((uint64_t)&v40, (uint64_t (*)(_QWORD))sub_2320A7F64);
LABEL_42:
    (*v1)[2] = v2;
    sub_23200054C((uint64_t)&v44, (uint64_t)&v42, (uint64_t (*)(_QWORD))sub_2320A7F64);
    if (!v43)
      goto LABEL_75;
  }
  v28 = v25 + 4;
  sub_2320167F8(&v40, (uint64_t)&v42);
  if (v2 <= v27)
    v29 = v27;
  else
    v29 = v2;
  if (v2 >= v27)
  {
LABEL_74:
    sub_232016AFC((uint64_t)&v42);
    v2 = v29;
    goto LABEL_42;
  }
  while (1)
  {
    sub_232002CEC((uint64_t)&v44, (uint64_t (*)(_QWORD))sub_2320A7F64);
    result = sub_2320167F8(&v42, (uint64_t)&v28[5 * v2]);
    v30 = v50;
    if (!v51)
      break;
    v31 = (v51 - 1) & v51;
    v32 = __clz(__rbit64(v51)) | (v50 << 6);
LABEL_52:
    sub_23201B304(v47[7] + 40 * v32, (uint64_t)&v44);
    v33 = v30;
LABEL_72:
    ++v2;
    v50 = v33;
    v51 = v31;
    sub_23200054C((uint64_t)&v44, (uint64_t)&v40, (uint64_t (*)(_QWORD))sub_2320A7F64);
    if (!v41)
      goto LABEL_41;
    sub_2320167F8(&v40, (uint64_t)&v42);
    if (v2 == v29)
      goto LABEL_74;
  }
  v34 = v50 + 1;
  if (!__OFADD__(v50, 1))
  {
    v35 = (unint64_t)(v49 + 64) >> 6;
    v33 = v50;
    if (v34 >= v35)
      goto LABEL_71;
    v36 = *(_QWORD *)(v48 + 8 * v34);
    if (v36)
      goto LABEL_56;
    v37 = v50 + 2;
    v33 = v50 + 1;
    if (v50 + 2 >= v35)
      goto LABEL_71;
    v36 = *(_QWORD *)(v48 + 8 * v37);
    if (v36)
    {
LABEL_59:
      v34 = v37;
    }
    else
    {
      v33 = v50 + 2;
      if (v50 + 3 >= v35)
        goto LABEL_71;
      v36 = *(_QWORD *)(v48 + 8 * (v50 + 3));
      if (!v36)
      {
        v37 = v50 + 4;
        v33 = v50 + 3;
        if (v50 + 4 >= v35)
          goto LABEL_71;
        v36 = *(_QWORD *)(v48 + 8 * v37);
        if (!v36)
        {
          v34 = v50 + 5;
          v33 = v50 + 4;
          if (v50 + 5 >= v35)
            goto LABEL_71;
          v36 = *(_QWORD *)(v48 + 8 * v34);
          if (!v36)
          {
            v33 = v35 - 1;
            v38 = v50 + 6;
            while (v35 != v38)
            {
              v36 = *(_QWORD *)(v48 + 8 * v38++);
              if (v36)
              {
                v34 = v38 - 1;
                goto LABEL_56;
              }
            }
LABEL_71:
            v31 = 0;
            v46 = 0;
            v44 = 0u;
            v45 = 0u;
            goto LABEL_72;
          }
          goto LABEL_56;
        }
        goto LABEL_59;
      }
      v34 = v50 + 3;
    }
LABEL_56:
    v31 = (v36 - 1) & v36;
    v32 = __clz(__rbit64(v36)) + (v34 << 6);
    v30 = v34;
    goto LABEL_52;
  }
  __break(1u);
LABEL_77:
  __break(1u);
  return result;
}

uint64_t sub_23209DC44(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  int64_t v23;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v23 = v4 + v2;
  else
    v23 = v4;
  v3 = sub_23209723C(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *(_QWORD *)(v3 + 16);
  v9 = (*(_QWORD *)(v3 + 24) >> 1) - v8;
  v10 = type metadata accessor for TrendNotificationModel();
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 72);
  v14 = v3 + v12 + v13 * v8;
  v15 = a1 + v12;
  v16 = v13 * v2;
  v17 = v14 + v16;
  v18 = v15 + v16;
  if (v15 < v17 && v14 < v18)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v20 = *(_QWORD *)(v3 + 16);
  v21 = __OFADD__(v20, v2);
  v22 = v20 + v2;
  if (!v21)
  {
    *(_QWORD *)(v3 + 16) = v22;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_2322019E0();
  __break(1u);
  return result;
}

uint64_t sub_23209DDAC(uint64_t a1)
{
  return sub_23209DDC8(a1, (uint64_t (*)(void))sub_232097568, &qword_2541B28B8);
}

uint64_t sub_23209DDC8(uint64_t a1, uint64_t (*a2)(void), unint64_t *a3)
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  if (swift_isUniquelyReferenced_nonNull_native()
    && (int64_t)(v6 + v4) <= *(_QWORD *)(v5 + 24) >> 1)
  {
    v10 = *(_QWORD *)(a1 + 16);
    if (v10)
      goto LABEL_5;
LABEL_15:
    if (!v4)
      goto LABEL_16;
    goto LABEL_18;
  }
  v5 = a2();
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
    goto LABEL_15;
LABEL_5:
  v11 = *(_QWORD *)(v5 + 16);
  if ((*(_QWORD *)(v5 + 24) >> 1) - v11 < (uint64_t)v10)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v12 = v5 + 40 * v11 + 32;
  if (a1 + 32 < v12 + 40 * v10 && v12 < a1 + 32 + 40 * v10)
    goto LABEL_21;
  sub_232016A8C(0, a3);
  swift_arrayInitWithCopy();
  if (v10 < v4)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v14 = *(_QWORD *)(v5 + 16);
  v15 = __OFADD__(v14, v10);
  v16 = v14 + v10;
  if (!v15)
  {
    *(_QWORD *)(v5 + 16) = v16;
LABEL_16:
    result = swift_bridgeObjectRelease();
    *v3 = v5;
    return result;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_2322019E0();
  __break(1u);
  return result;
}

uint64_t sub_23209DF54(uint64_t a1)
{
  return sub_23209DDC8(a1, (uint64_t (*)(void))sub_232097584, &qword_2541B28E8);
}

uint64_t sub_23209DF70(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  _QWORD v9[2];

  v2 = sub_2321FDCC0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_23220189C();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(a1, sel_profileIdentifier, 0xD000000000000017, 0x8000000232205B70);
  v7 = objc_msgSend(v6, sel_identifier);

  sub_2321FDCA8();
  sub_2321FDC84();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_232200F48();
  swift_bridgeObjectRelease();
  sub_2321FFA9C();
  sub_2320A099C(&qword_2541B6B20, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE47040], MEMORY[0x24BE47050]);
  return sub_232201B0C();
}

id sub_23209E0EC(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  id result;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  int v27;
  _BOOL4 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  id v34;
  void (*v35)(void);
  _QWORD *v36;
  uint64_t v37;
  void *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  int *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  id v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(void);
  _QWORD *v65;
  char *v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  id v70;
  id v71;
  CFAbsoluteTime Current;
  uint64_t v73;
  uint64_t v74;
  CFAbsoluteTime *v75;
  void (*v76)(_OWORD *, uint64_t (*)(), CFAbsoluteTime *, uint64_t, uint64_t);
  uint64_t v77;
  id v78;
  id v79;
  _BYTE v80[12];
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _BYTE *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _BYTE *v90;
  _OWORD *v91;
  uint64_t v92;
  void (*v93)(void);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97[2];
  _QWORD v98[3];
  uint64_t v99;
  uint64_t v100;
  uint64_t v101[4];

  v4 = v3;
  sub_23205A18C();
  v9 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v11 = &v80[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v89 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  MEMORY[0x24BDAC7A8](v89);
  v91 = &v80[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v88 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  MEMORY[0x24BDAC7A8](v88);
  v90 = &v80[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_23220039C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = &v80[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  _s14descr250103FA9O8WorkPlanVMa();
  v87 = a1;
  v18 = sub_2321FFAB4();
  result = objc_msgSend((id)objc_opt_self(), sel_dataTypeWithCode_, v18);
  if (result)
  {
    v20 = result;
    v92 = v15;
    v93 = (void (*)(void))v14;
    v21 = v4[2];
    v22 = v4[3];
    ObjectType = swift_getObjectType();
    v96 = v22;
    v86 = *(_QWORD *)(v22 + 8);
    v94 = v21;
    v95 = ObjectType;
    sub_2321FF958();
    swift_retain_n();
    v24 = v20;
    v25 = sub_232200390();
    v26 = sub_2322012FC();
    v27 = v26;
    v28 = os_log_type_enabled(v25, v26);
    v85 = v11;
    v84 = v9;
    if (v28)
    {
      v29 = swift_slowAlloc();
      v83 = a3;
      v30 = v29;
      v82 = swift_slowAlloc();
      v101[0] = v82;
      *(_DWORD *)v30 = 136446466;
      swift_retain();
      v81 = v27;
      v31 = sub_2320A0814();
      v33 = v32;
      swift_release();
      v98[0] = sub_232013174(v31, v33, v101);
      sub_232201710();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2082;
      v34 = objc_msgSend(v24, sel_sensitiveLoggingIdentifier, v30 + 14);
      v35 = a2;
      v36 = v4;
      v37 = sub_232200EC4();
      v38 = v24;
      v40 = v39;

      v41 = v37;
      v4 = v36;
      v98[0] = sub_232013174(v41, v40, v101);
      sub_232201710();

      v42 = v38;
      a2 = v35;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v25, (os_log_type_t)v81, "%{public}s Starting work for work plan with sample type %{public}s", (uint8_t *)v30, 0x16u);
      v43 = v82;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v43, -1, -1);
      v44 = v30;
      a3 = v83;
      MEMORY[0x2348FF468](v44, -1, -1);

    }
    else
    {

      v42 = v24;
      swift_release_n();
    }
    (*(void (**)(_BYTE *, void (*)(void)))(v92 + 8))(v17, v93);
    sub_2320A099C(&qword_2541B6C30, v45, (uint64_t (*)(uint64_t))type metadata accessor for SummariesFullProfileExecutor, (uint64_t)&unk_232213BF8);
    v46 = v94;
    sub_2321FE158();
    v47 = sub_2321FE134();
    v48 = v46;
    v49 = (void *)v4[4];
    v50 = (int *)v88;
    v51 = *(int *)(v88 + 24);
    v52 = v90;
    v92 = v53;
    v54 = v47;
    sub_23200054C(v87, (uint64_t)&v90[v51], (uint64_t (*)(_QWORD))_s14descr250103FA9O8WorkPlanVMa);
    sub_23201B304((uint64_t)v101, (uint64_t)v52 + v50[8]);
    v55 = v42;
    v93 = a2;
    v56 = v55;
    swift_unknownObjectRetain();
    v57 = v49;
    swift_unknownObjectRetain();
    v58 = (void *)sub_2321FE050();
    v59 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A910]), sel_initWithHealthStore_, v58);

    v60 = v96;
    *v52 = v48;
    v52[1] = v60;
    v52[2] = v57;
    *(_QWORD *)((char *)v52 + v50[7]) = v56;
    v61 = (_QWORD *)((char *)v52 + v50[9]);
    v96 = v54;
    v62 = v92;
    *v61 = v54;
    v61[1] = v62;
    v63 = v50[10];
    *(_QWORD *)((char *)v52 + v63) = objc_msgSend(objc_allocWithZone((Class)sub_2321FEB9C()), sel_init);
    *(_QWORD *)((char *)v52 + v50[11]) = v59;
    v64 = v93;
    v65 = v91;
    *v91 = xmmword_2322116F0;
    v65[3] = 0;
    v65[4] = 0;
    v65[2] = 1;
    v66 = (char *)v65 + *(int *)(v89 + 28);
    v67 = sub_2321FDDD4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v66, 1, 1, v67);
    sub_232016AD8(v4 + 5, v4[8]);
    v68 = sub_2320A09F0((uint64_t)v52);
    v69 = (_QWORD *)swift_allocObject();
    v69[2] = v4;
    v69[3] = v56;
    v69[4] = v64;
    v69[5] = a3;
    if (v68[2])
    {
      sub_23201B304((uint64_t)(v68 + 4), (uint64_t)v98);
      swift_retain_n();
      v70 = v56;
      swift_retain_n();
      v71 = v70;
      Current = CFAbsoluteTimeGetCurrent();
      v73 = v99;
      v74 = v100;
      sub_232016AD8(v98, v99);
      sub_23201B304((uint64_t)v98, (uint64_t)v97);
      v75 = (CFAbsoluteTime *)swift_allocObject();
      v75[2] = Current;
      *((_QWORD *)v75 + 3) = MEMORY[0x24BEE4AF8];
      sub_2320167F8(v97, (uint64_t)(v75 + 4));
      *((_QWORD *)v75 + 9) = v4;
      *((_QWORD *)v75 + 10) = v68;
      v75[11] = 0.0;
      *((_QWORD *)v75 + 12) = sub_2320A110C;
      *((_QWORD *)v75 + 13) = v69;
      v76 = *(void (**)(_OWORD *, uint64_t (*)(), CFAbsoluteTime *, uint64_t, uint64_t))(v74 + 8);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      v76(v91, sub_2320A111C, v75, v73, v74);
      swift_release();
      sub_232016AFC((uint64_t)v98);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();

    }
    else
    {
      v77 = (uint64_t)v85;
      sub_23200054C((uint64_t)v91, (uint64_t)v85, type metadata accessor for SummariesFullProfileExecutor.StepResult);
      swift_storeEnumTagMultiPayload();
      swift_retain_n();
      v78 = v56;
      swift_retain_n();
      v79 = v78;
      sub_23209E934(v77, MEMORY[0x24BEE4AF8], (uint64_t)v4, v79, v64, a3);
      sub_232002CEC(v77, (uint64_t (*)(_QWORD))sub_23205A18C);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();

    }
    swift_release();
    swift_release();
    sub_232002CEC((uint64_t)v91, type metadata accessor for SummariesFullProfileExecutor.StepResult);
    sub_232002CEC((uint64_t)v90, type metadata accessor for SummariesFullProfileExecutor.Request);
    return (id)sub_232016AFC((uint64_t)v101);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_23209E934(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(void), uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void **v18;
  uint64_t (*v19)(_QWORD);
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void (*v40)(void);
  id v41;
  id v42;
  NSObject *v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  id v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  int64_t v54;
  uint64_t v55;
  double *v56;
  uint64_t v57;
  double v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  void *v65;
  void (*v66)(void);
  uint8_t *v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  os_log_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint8_t *v75;
  os_log_t v76;
  char *v77;
  void **v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(void);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v82 = a2;
  v83 = a5;
  v9 = sub_23220039C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v73 - v14;
  sub_23205A18C();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (void **)((char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23200054C(a1, (uint64_t)v18, v19);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v79 = v10;
    v80 = v9;
    v81 = a6;
    v20 = *v18;
    swift_getObjectType();
    sub_2321FF958();
    swift_retain();
    v21 = a4;
    v22 = v20;
    swift_retain();
    v23 = v21;
    v24 = v20;
    v25 = sub_232200390();
    v26 = sub_2322012E4();
    v27 = v26;
    if (os_log_type_enabled(v25, v26))
    {
      v28 = swift_slowAlloc();
      v82 = swift_slowAlloc();
      v85 = v82;
      *(_DWORD *)v28 = 136446722;
      swift_retain();
      LODWORD(v78) = v27;
      v29 = sub_2320A0814();
      v31 = v30;
      swift_release();
      v88 = sub_232013174(v29, v31, &v85);
      sub_232201710();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2082;
      v32 = objc_msgSend(v23, sel_sensitiveLoggingIdentifier);
      v33 = sub_232200EC4();
      v35 = v34;

      v88 = sub_232013174(v33, v35, &v85);
      sub_232201710();

      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 22) = 2082;
      v88 = (uint64_t)v20;
      v36 = v20;
      sub_232016A8C(0, (unint64_t *)&qword_2541B78D0);
      v37 = sub_232200F00();
      v88 = sub_232013174(v37, v38, &v85);
      sub_232201710();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_231FFB000, v25, (os_log_type_t)v78, "%{public}s Work for work plan with sample type %{public}s failed with error: %{public}s", (uint8_t *)v28, 0x20u);
      v39 = v82;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v39, -1, -1);
      v40 = v83;
      MEMORY[0x2348FF468](v28, -1, -1);

      (*(void (**)(char *, uint64_t))(v79 + 8))(v13, v80);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v79 + 8))(v13, v80);
      v40 = v83;
    }
    v65 = (void *)sub_2321FDA50();
    v40();

    return;
  }
  swift_getObjectType();
  sub_2321FF958();
  swift_retain_n();
  v41 = a4;
  swift_bridgeObjectRetain_n();
  v42 = v41;
  v43 = sub_232200390();
  v44 = sub_2322012FC();
  if (!os_log_type_enabled(v43, (os_log_type_t)v44))
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    ((void (*)(_QWORD))v83)(0);
LABEL_19:
    sub_232002CEC((uint64_t)v18, (uint64_t (*)(_QWORD))sub_23205A18C);
    return;
  }
  v74 = v44;
  v76 = v43;
  v77 = v15;
  v78 = v18;
  v79 = v10;
  v80 = v9;
  v81 = a6;
  v45 = swift_slowAlloc();
  v73 = swift_slowAlloc();
  v88 = v73;
  *(_DWORD *)v45 = 136446722;
  swift_retain();
  v46 = sub_2320A0814();
  v48 = v47;
  swift_release();
  v85 = sub_232013174(v46, v48, &v88);
  sub_232201710();
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v45 + 12) = 2082;
  v49 = objc_msgSend(v42, sel_sensitiveLoggingIdentifier);
  v50 = sub_232200EC4();
  v52 = v51;

  v53 = v82;
  v85 = sub_232013174(v50, v52, &v88);
  sub_232201710();

  swift_bridgeObjectRelease();
  v75 = (uint8_t *)v45;
  *(_WORD *)(v45 + 22) = 2080;
  v54 = *(_QWORD *)(v53 + 16);
  v55 = MEMORY[0x24BEE4AF8];
  if (!v54)
  {
    v66 = v83;
LABEL_18:
    v67 = v75;
    v85 = v55;
    sub_232000608(0, (unint64_t *)&qword_2541B54F8, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    sub_2320A3A98();
    v68 = sub_232200E1C();
    v70 = v69;
    swift_bridgeObjectRelease();
    v85 = sub_232013174(v68, v70, &v88);
    sub_232201710();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v71 = v76;
    _os_log_impl(&dword_231FFB000, v76, (os_log_type_t)v74, "%{public}s Work for work plan with sample type %{public}s succeeded: %s", v67, 0x20u);
    v72 = v73;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v72, -1, -1);
    MEMORY[0x2348FF468](v67, -1, -1);

    (*(void (**)(char *, uint64_t))(v79 + 8))(v77, v80);
    v18 = v78;
    ((void (*)(_QWORD))v66)(0);
    goto LABEL_19;
  }
  v87 = MEMORY[0x24BEE4AF8];
  sub_2320138B4(0, v54, 0);
  v55 = v87;
  v56 = (double *)(v53 + 48);
  while (1)
  {
    v57 = *((_QWORD *)v56 - 1);
    v58 = *v56;
    v85 = *((_QWORD *)v56 - 2);
    v86 = v57;
    swift_bridgeObjectRetain_n();
    sub_232200F48();
    v59 = v58 * 1000.0;
    if ((~COERCE__INT64(v58 * 1000.0) & 0x7FF0000000000000) == 0)
      break;
    if (v59 <= -9.22337204e18)
      goto LABEL_21;
    if (v59 >= 9.22337204e18)
      goto LABEL_22;
    v84 = (uint64_t)v59;
    sub_232201AB8();
    sub_232200F48();
    swift_bridgeObjectRelease();
    sub_232200F48();
    swift_bridgeObjectRelease();
    v61 = v85;
    v60 = v86;
    v87 = v55;
    v63 = *(_QWORD *)(v55 + 16);
    v62 = *(_QWORD *)(v55 + 24);
    if (v63 >= v62 >> 1)
    {
      sub_2320138B4(v62 > 1, v63 + 1, 1);
      v55 = v87;
    }
    *(_QWORD *)(v55 + 16) = v63 + 1;
    v64 = v55 + 16 * v63;
    *(_QWORD *)(v64 + 32) = v61;
    *(_QWORD *)(v64 + 40) = v60;
    v56 += 3;
    if (!--v54)
    {
      v66 = v83;
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
}

uint64_t sub_23209F190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *, uint64_t), uint64_t a6)
{
  uint64_t v6;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  _QWORD *v18;
  CFAbsoluteTime Current;
  uint64_t v20;
  uint64_t v21;
  CFAbsoluteTime *v22;
  void (*v23)(uint64_t, uint64_t (*)(), CFAbsoluteTime *, uint64_t, uint64_t);
  _QWORD *v24;
  __int128 v25[2];

  sub_23205A18C();
  result = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 16) <= a2)
  {
    sub_23200054C(a3, (uint64_t)v16, type metadata accessor for SummariesFullProfileExecutor.StepResult);
    swift_storeEnumTagMultiPayload();
    a5(v16, a4);
    return sub_232002CEC((uint64_t)v16, (uint64_t (*)(_QWORD))sub_23205A18C);
  }
  else if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    v17 = (_QWORD *)(a1 + 40 * a2);
    v18 = v17 + 4;
    Current = CFAbsoluteTimeGetCurrent();
    v20 = v17[7];
    v21 = v17[8];
    v24 = sub_232016AD8(v18, v20);
    sub_23201B304((uint64_t)v18, (uint64_t)v25);
    v22 = (CFAbsoluteTime *)swift_allocObject();
    v22[2] = Current;
    *((_QWORD *)v22 + 3) = a4;
    sub_2320167F8(v25, (uint64_t)(v22 + 4));
    *((_QWORD *)v22 + 9) = v6;
    *((_QWORD *)v22 + 10) = a1;
    *((_QWORD *)v22 + 11) = a2;
    *((_QWORD *)v22 + 12) = a5;
    *((_QWORD *)v22 + 13) = a6;
    v23 = *(void (**)(uint64_t, uint64_t (*)(), CFAbsoluteTime *, uint64_t, uint64_t))(v21 + 8);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v23(a3, sub_2320A111C, v22, v20, v21);
    return swift_release();
  }
  return result;
}

uint64_t sub_23209F33C(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(char *, uint64_t), uint64_t a8, double a9)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void **v22;
  CFAbsoluteTime v23;
  uint64_t inited;
  uint64_t DynamicType;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t (*v31)(_QWORD);
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v37 = a6;
  v38 = a8;
  v36[0] = a5;
  v36[1] = a4;
  v41 = *MEMORY[0x24BDAC8D0];
  v14 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23205A18C();
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (void **)((char *)v36 - v21);
  v23 = CFAbsoluteTimeGetCurrent() - a9;
  sub_2320057B8(0, &qword_2541B71C8, (uint64_t (*)(uint64_t))sub_2320976E8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232210D40;
  sub_232016AD8(a3, a3[3]);
  DynamicType = swift_getDynamicType();
  v26 = a3[4];
  v39 = DynamicType;
  v40 = v26;
  sub_2320A3A50();
  *(_QWORD *)(inited + 32) = sub_232200F00();
  *(_QWORD *)(inited + 40) = v27;
  *(CFAbsoluteTime *)(inited + 48) = v23;
  v39 = a2;
  swift_bridgeObjectRetain();
  sub_23209D5BC(inited);
  v28 = v39;
  sub_23200054C(a1, (uint64_t)v22, (uint64_t (*)(_QWORD))sub_23205A18C);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    v29 = *v22;
    *(_QWORD *)v20 = *v22;
    swift_storeEnumTagMultiPayload();
    v30 = v29;
    a7(v20, a2);

    v31 = (uint64_t (*)(_QWORD))sub_23205A18C;
    v32 = (uint64_t)v20;
  }
  else
  {
    v33 = a7;
    v34 = v38;
    sub_232025468((uint64_t)v22, (uint64_t)v16, type metadata accessor for SummariesFullProfileExecutor.StepResult);
    if (__OFADD__(v37, 1))
      __break(1u);
    sub_23209F190(v36[0], v37 + 1, (uint64_t)v16, v28, v33, v34);
    swift_bridgeObjectRelease();
    v31 = type metadata accessor for SummariesFullProfileExecutor.StepResult;
    v32 = (uint64_t)v16;
  }
  return sub_232002CEC(v32, v31);
}

uint64_t sub_23209F5C4()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  sub_232016AFC(v0 + 40);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SummariesFullProfileExecutor()
{
  return objc_opt_self();
}

_QWORD *sub_23209F618(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  id v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  char *v38;
  char *v39;
  __int128 v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  id v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  id v48;
  id v49;
  char *v51;

  v3 = a1;
  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    v3 = (_QWORD *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    v8 = (void *)a2[2];
    *a1 = v5;
    a1[1] = v7;
    a1[2] = v8;
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    v12 = (int *)_s14descr250103FA9O8WorkPlanVMa();
    v13 = v12[5];
    v51 = &v10[v13];
    v14 = &v11[v13];
    v15 = sub_2321FFACC();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_unknownObjectRetain();
    v17 = v8;
    v16(v51, v14, v15);
    v18 = v12[6];
    v19 = &v10[v18];
    v20 = &v11[v18];
    v21 = sub_2321FE584();
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    v24 = v12[7];
    v25 = &v10[v24];
    v26 = &v11[v24];
    sub_232071E50();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = v12[8];
    v29 = &v10[v28];
    v30 = &v11[v28];
    sub_232071EE4();
    v32 = v31;
    v33 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v30, 1, v31))
    {
      sub_2320057B8(0, &qword_2541B2518, (uint64_t (*)(uint64_t))sub_232071EE4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v29, v30, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v29, 0, 1, v32);
    }
    v35 = a3[7];
    v36 = a3[8];
    v37 = *(void **)((char *)a2 + v35);
    *(_QWORD *)((char *)v3 + v35) = v37;
    v38 = (char *)v3 + v36;
    v39 = (char *)a2 + v36;
    v40 = *(_OWORD *)((char *)a2 + v36 + 24);
    *(_OWORD *)((char *)v3 + v36 + 24) = v40;
    v41 = v40;
    v42 = **(void (***)(char *, char *, uint64_t))(v40 - 8);
    v43 = v37;
    v42(v38, v39, v41);
    v44 = a3[10];
    *(_OWORD *)((char *)v3 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
    v45 = *(void **)((char *)a2 + v44);
    *(_QWORD *)((char *)v3 + v44) = v45;
    v46 = a3[11];
    v47 = *(void **)((char *)a2 + v46);
    *(_QWORD *)((char *)v3 + v46) = v47;
    swift_unknownObjectRetain();
    v48 = v45;
    v49 = v47;
  }
  return v3;
}

void sub_23209F8D0(uint64_t a1, int *a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  swift_unknownObjectRelease();

  v4 = a1 + a2[6];
  v5 = (int *)_s14descr250103FA9O8WorkPlanVMa();
  v6 = v4 + v5[5];
  v7 = sub_2321FFACC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v4 + v5[6];
  v9 = sub_2321FE584();
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  v11 = v4 + v5[7];
  sub_232071E50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = v4 + v5[8];
  sub_232071EE4();
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v13, 1, v14))
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v13, v15);

  sub_232016AFC(a1 + a2[8]);
  swift_unknownObjectRelease();

}

uint64_t sub_23209FA2C(uint64_t a1, uint64_t a2, int *a3)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  id v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t);
  id v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  id v46;
  id v47;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v5 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_BYTE *)(a1 + v6) = *(_BYTE *)(a2 + v6);
  v9 = (int *)_s14descr250103FA9O8WorkPlanVMa();
  v10 = v9[5];
  v11 = v7 + v10;
  v12 = v8 + v10;
  v13 = sub_2321FFACC();
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  swift_unknownObjectRetain();
  v15 = v5;
  v14(v11, v12, v13);
  v16 = v9[6];
  v17 = (void *)(v7 + v16);
  v18 = (const void *)(v8 + v16);
  v19 = sub_2321FE584();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 16))(v17, v18, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  v22 = v9[7];
  v23 = v7 + v22;
  v24 = v8 + v22;
  sub_232071E50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  v26 = v9[8];
  v27 = (void *)(v7 + v26);
  v28 = (const void *)(v8 + v26);
  sub_232071EE4();
  v30 = v29;
  v31 = *(_QWORD *)(v29 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v31 + 48))(v28, 1, v29))
  {
    sub_2320057B8(0, &qword_2541B2518, (uint64_t (*)(uint64_t))sub_232071EE4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v31 + 16))(v27, v28, v30);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v27, 0, 1, v30);
  }
  v33 = a3[7];
  v34 = a3[8];
  v35 = *(void **)(a2 + v33);
  *(_QWORD *)(a1 + v33) = v35;
  v36 = a1 + v34;
  v37 = a2 + v34;
  v38 = *(_OWORD *)(a2 + v34 + 24);
  *(_OWORD *)(a1 + v34 + 24) = v38;
  v39 = v38;
  v40 = **(void (***)(uint64_t, uint64_t, uint64_t))(v38 - 8);
  v41 = v35;
  v40(v36, v37, v39);
  v42 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  v43 = *(void **)(a2 + v42);
  *(_QWORD *)(a1 + v42) = v43;
  v44 = a3[11];
  v45 = *(void **)(a2 + v44);
  *(_QWORD *)(a1 + v44) = v45;
  swift_unknownObjectRetain();
  v46 = v43;
  v47 = v45;
  return a1;
}

_QWORD *sub_23209FCBC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t, uint64_t);
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(char *, uint64_t, uint64_t);
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  id v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  id v52;
  uint64_t v53;
  void *v54;
  void *v55;
  id v56;
  int *v58;
  _QWORD *v59;

  v6 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v6;
  v7 = (void *)a2[2];
  v8 = (void *)a1[2];
  a1[2] = v7;
  v9 = v7;

  v58 = a3;
  v59 = a2;
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
  v13 = (int *)_s14descr250103FA9O8WorkPlanVMa();
  v14 = v13[5];
  v15 = &v11[v14];
  v16 = &v12[v14];
  v17 = sub_2321FFACC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  v18 = v13[6];
  v19 = &v11[v18];
  v20 = &v12[v18];
  v21 = sub_2321FE584();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  v24 = v23(v19, 1, v21);
  v25 = v23(v20, 1, v21);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v21);
LABEL_6:
    sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 24))(v19, v20, v21);
LABEL_7:
  v27 = v13[7];
  v28 = &v11[v27];
  v29 = &v12[v27];
  sub_232071E50();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = v13[8];
  v32 = &v11[v31];
  v33 = &v12[v31];
  sub_232071EE4();
  v35 = v34;
  v36 = *(_QWORD *)(v34 - 8);
  v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48);
  v38 = v37(v32, 1, v34);
  v39 = v37(v33, 1, v35);
  if (!v38)
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 24))(v32, v33, v35);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v36 + 8))(v32, v35);
    goto LABEL_12;
  }
  if (v39)
  {
LABEL_12:
    sub_2320057B8(0, &qword_2541B2518, (uint64_t (*)(uint64_t))sub_232071EE4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v32, v33, v35);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v32, 0, 1, v35);
LABEL_13:
  v41 = v58[7];
  v42 = *(void **)((char *)v59 + v41);
  v43 = *(void **)((char *)a1 + v41);
  *(_QWORD *)((char *)a1 + v41) = v42;
  v44 = v42;

  sub_2320727F4((_QWORD *)((char *)a1 + v58[8]), (_QWORD *)((char *)v59 + v58[8]));
  v45 = v58[9];
  v46 = (_QWORD *)((char *)a1 + v45);
  v47 = (_QWORD *)((char *)v59 + v45);
  v48 = v47[1];
  *v46 = *v47;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v46[1] = v48;
  v49 = v58[10];
  v50 = *(void **)((char *)v59 + v49);
  v51 = *(void **)((char *)a1 + v49);
  *(_QWORD *)((char *)a1 + v49) = v50;
  v52 = v50;

  v53 = v58[11];
  v54 = *(void **)((char *)v59 + v53);
  v55 = *(void **)((char *)a1 + v53);
  *(_QWORD *)((char *)a1 + v53) = v54;
  v56 = v54;

  return a1;
}

uint64_t sub_23209FFF4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_BYTE *)(a1 + v6) = *(_BYTE *)(a2 + v6);
  v9 = (int *)_s14descr250103FA9O8WorkPlanVMa();
  v10 = v9[5];
  v11 = v7 + v10;
  v12 = v8 + v10;
  v13 = sub_2321FFACC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = v9[6];
  v15 = (void *)(v7 + v14);
  v16 = (const void *)(v8 + v14);
  v17 = sub_2321FE584();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  v20 = v9[7];
  v21 = v7 + v20;
  v22 = v8 + v20;
  sub_232071E50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
  v24 = v9[8];
  v25 = (void *)(v7 + v24);
  v26 = (const void *)(v8 + v24);
  sub_232071EE4();
  v28 = v27;
  v29 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48))(v26, 1, v27))
  {
    sub_2320057B8(0, &qword_2541B2518, (uint64_t (*)(uint64_t))sub_232071EE4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v29 + 32))(v25, v26, v28);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v25, 0, 1, v28);
  }
  v31 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = *(_OWORD *)(v33 + 16);
  *(_OWORD *)v32 = *(_OWORD *)v33;
  *(_OWORD *)(v32 + 16) = v34;
  *(_QWORD *)(v32 + 32) = *(_QWORD *)(v33 + 32);
  v35 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v35) = *(_QWORD *)(a2 + v35);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  return a1;
}

_QWORD *sub_2320A0238(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  __int128 v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  void *v53;
  int *v55;
  _QWORD *v56;

  v6 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRelease();
  v7 = a2[2];
  v8 = (void *)a1[2];
  a1[1] = v6;
  a1[2] = v7;

  v55 = a3;
  v56 = a2;
  v9 = a3[6];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
  v12 = (int *)_s14descr250103FA9O8WorkPlanVMa();
  v13 = v12[5];
  v14 = &v10[v13];
  v15 = &v11[v13];
  v16 = sub_2321FFACC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v17 = v12[6];
  v18 = &v10[v17];
  v19 = &v11[v17];
  v20 = sub_2321FE584();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v24)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
LABEL_6:
    sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v18, v19, v20);
LABEL_7:
  v26 = v12[7];
  v27 = &v10[v26];
  v28 = &v11[v26];
  sub_232071E50();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 40))(v27, v28, v29);
  v30 = v12[8];
  v31 = &v10[v30];
  v32 = &v11[v30];
  sub_232071EE4();
  v34 = v33;
  v35 = *(_QWORD *)(v33 - 8);
  v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v31, 1, v33);
  v38 = v36(v32, 1, v34);
  if (!v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 40))(v31, v32, v34);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v35 + 8))(v31, v34);
    goto LABEL_12;
  }
  if (v38)
  {
LABEL_12:
    sub_2320057B8(0, &qword_2541B2518, (uint64_t (*)(uint64_t))sub_232071EE4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v31, v32, v34);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v31, 0, 1, v34);
LABEL_13:
  v40 = v55[7];
  v41 = *(void **)((char *)a1 + v40);
  *(_QWORD *)((char *)a1 + v40) = *(_QWORD *)((char *)v56 + v40);

  v42 = v55[8];
  v43 = (char *)a1 + v42;
  v44 = (char *)v56 + v42;
  sub_232016AFC((uint64_t)a1 + v42);
  v45 = *((_OWORD *)v44 + 1);
  *(_OWORD *)v43 = *(_OWORD *)v44;
  *((_OWORD *)v43 + 1) = v45;
  *((_QWORD *)v43 + 4) = *((_QWORD *)v44 + 4);
  v46 = v55[9];
  v47 = (_QWORD *)((char *)a1 + v46);
  v48 = (_QWORD *)((char *)v56 + v46);
  v49 = v48[1];
  *v47 = *v48;
  swift_unknownObjectRelease();
  v47[1] = v49;
  v50 = v55[10];
  v51 = *(void **)((char *)a1 + v50);
  *(_QWORD *)((char *)a1 + v50) = *(_QWORD *)((char *)v56 + v50);

  v52 = v55[11];
  v53 = *(void **)((char *)a1 + v52);
  *(_QWORD *)((char *)a1 + v52) = *(_QWORD *)((char *)v56 + v52);

  return a1;
}

uint64_t sub_2320A0560()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2320A056C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = _s14descr250103FA9O8WorkPlanVMa();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_2320A05E8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2320A05F4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = _s14descr250103FA9O8WorkPlanVMa();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for SummariesFullProfileExecutor.Request(uint64_t a1)
{
  return sub_23201A14C(a1, (uint64_t *)&unk_2541B2530);
}

uint64_t sub_2320A067C()
{
  uint64_t result;
  unint64_t v1;

  result = _s14descr250103FA9O8WorkPlanVMa();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2320A0714()
{
  uint64_t v0;

  return sub_23209DF70(*(void **)(v0 + 32));
}

uint64_t sub_2320A072C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  void (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  id v10;
  __int128 v12;

  v3 = sub_2321FFA0C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void **)(v1 + 32);
  v8 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v12 = *(_OWORD *)(v1 + 16);
  v8(v6, a1, v3);
  type metadata accessor for SummariesFullProfilePlanner();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = v12;
  *(_QWORD *)(v9 + 32) = v7;
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v9 + OBJC_IVAR____TtC9Summaries27SummariesFullProfilePlanner_signals, v6, v3);
  swift_unknownObjectRetain();
  v10 = v7;
  return v9;
}

uint64_t sub_2320A0814()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  _QWORD v8[2];

  v1 = sub_2321FDCC0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[0] = 91;
  v8[1] = 0xE100000000000000;
  sub_232201BF0();
  sub_232200F48();
  swift_bridgeObjectRelease();
  sub_232200F48();
  v5 = objc_msgSend(*(id *)(v0 + 32), sel_profileIdentifier);
  v6 = objc_msgSend(v5, sel_identifier);

  sub_2321FDCA8();
  sub_2321FDC84();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_232200F48();
  swift_bridgeObjectRelease();
  sub_232200F48();
  return v8[0];
}

uint64_t sub_2320A094C()
{
  return sub_2320A0814();
}

uint64_t sub_2320A096C()
{
  return sub_2320A099C(&qword_2541B6C08, 255, (uint64_t (*)(uint64_t))type metadata accessor for SummariesFullProfilePlanner, (uint64_t)&unk_2322142B8);
}

uint64_t sub_2320A099C(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x2348FF39C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for SummariesFullProfileExecutor.StepResult(uint64_t a1)
{
  return sub_23201A14C(a1, qword_255F9DF38);
}

_QWORD *sub_2320A09F0(uint64_t a1)
{
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  id v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  unint64_t v42;
  uint64_t *v43;
  _QWORD *v44;
  uint64_t i;
  unint64_t v46;
  unint64_t v47;
  _QWORD v49[2];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  __int128 v58[2];
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  _BYTE v62[16];
  __int128 v63;
  __int128 v64;
  __int128 v65;
  _UNKNOWN **v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  _UNKNOWN **v72;
  uint64_t v73[5];
  uint64_t v74;
  uint64_t v75[5];
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  _UNKNOWN **v80;

  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B5BB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AE58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v53 = (char *)v49 - v4;
  v55 = type metadata accessor for SharingChartFeedItemStep(0);
  MEMORY[0x24BDAC7A8](v55);
  v54 = (uint64_t)v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = type metadata accessor for SnidgetFeedItemStep(0);
  MEMORY[0x24BDAC7A8](v51);
  v50 = (uint64_t)v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  v7 = MEMORY[0x24BDAC7A8](v52);
  v9 = (char *)v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)v49 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v49 - v13;
  sub_2320057B8(0, &qword_2541B6CA0, (uint64_t (*)(uint64_t))type metadata accessor for ChartSharableModelStep, v2);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v49 - v16;
  v63 = xmmword_232213AE0;
  v18 = objc_msgSend(*(id *)(a1 + 16), sel_profileIdentifier);
  v19 = objc_msgSend(v18, sel_type);

  if (v19 == (id)2)
  {
    *((_QWORD *)&v65 + 1) = type metadata accessor for FetchExistingModelsStep();
    v66 = &off_250107A58;
    v20 = sub_2320251BC((uint64_t *)&v64);
    sub_23200054C(a1, (uint64_t)v20, type metadata accessor for SummariesFullProfileExecutor.Request);
  }
  else
  {
    v66 = 0;
    v64 = 0u;
    v65 = 0u;
  }
  v49[1] = &v64;
  sub_2320A1120(a1, (uint64_t)&v59);
  v21 = *((_QWORD *)&v60 + 1);
  if (*((_QWORD *)&v60 + 1))
  {
    v22 = v61;
    v23 = sub_232016AD8(&v59, *((uint64_t *)&v60 + 1));
    *((_QWORD *)&v68 + 1) = v21;
    v69 = *(_QWORD *)(v22 + 8);
    v24 = sub_2320251BC((uint64_t *)&v67);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v24, v23, v21);
    sub_232016AFC((uint64_t)&v59);
  }
  else
  {
    sub_232002CEC((uint64_t)&v59, (uint64_t (*)(_QWORD))sub_2320A3AF8);
    v69 = 0;
    v67 = 0u;
    v68 = 0u;
  }
  sub_2320A2A44(a1, (uint64_t)v17);
  v25 = type metadata accessor for ChartSharableModelStep();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v17, 1, v25) == 1)
  {
    sub_232016D88((uint64_t)v17, &qword_2541B6CA0, (uint64_t (*)(uint64_t))type metadata accessor for ChartSharableModelStep);
    v70 = 0u;
    v71 = 0u;
    v72 = 0;
  }
  else
  {
    *((_QWORD *)&v71 + 1) = v25;
    v72 = &off_250102170;
    v26 = sub_2320251BC((uint64_t *)&v70);
    sub_232025468((uint64_t)v17, (uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for ChartSharableModelStep);
  }
  sub_23200054C(a1, (uint64_t)v14, type metadata accessor for SummariesFullProfileExecutor.Request);
  v61 = 0;
  v59 = 0u;
  v60 = 0u;
  v27 = v51;
  v73[3] = v51;
  v73[4] = (uint64_t)&off_2501084F0;
  v28 = sub_2320251BC(v73);
  v29 = v50;
  sub_23200054C((uint64_t)v14, v50, type metadata accessor for SummariesFullProfileExecutor.Request);
  sub_232025468((uint64_t)v14, (uint64_t)v12, type metadata accessor for SummariesFullProfileExecutor.Request);
  v30 = v52;
  sub_23201B304((uint64_t)&v12[*(int *)(v52 + 32)], (uint64_t)v58);
  sub_232002CEC((uint64_t)v12, type metadata accessor for SummariesFullProfileExecutor.Request);
  sub_232002CEC((uint64_t)&v59, (uint64_t (*)(_QWORD))sub_2320A3B5C);
  sub_2320167F8(v58, v29 + *(int *)(v27 + 20));
  sub_232025468(v29, (uint64_t)v28, type metadata accessor for SnidgetFeedItemStep);
  sub_2320A2C9C(a1, (uint64_t)&v74);
  sub_23200054C(a1, (uint64_t)v9, type metadata accessor for SummariesFullProfileExecutor.Request);
  v31 = v55;
  v75[3] = v55;
  v75[4] = (uint64_t)&off_250104FC8;
  v32 = sub_2320251BC(v75);
  v33 = v54;
  sub_23200054C((uint64_t)v9, v54, type metadata accessor for SummariesFullProfileExecutor.Request);
  sub_23201B304((uint64_t)&v9[*(int *)(v30 + 32)], v33 + *(int *)(v31 + 20));
  v34 = sub_2321FFDC0();
  v35 = *(_QWORD *)(v34 + 16);
  v36 = sub_2321FFE08();
  v37 = *(_QWORD *)(v36 - 8);
  if (v35)
  {
    v38 = (uint64_t)v53;
    (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v53, v34 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80)), v36);
    v39 = 0;
  }
  else
  {
    v39 = 1;
    v38 = (uint64_t)v53;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(v38, v39, 1, v36);
  swift_bridgeObjectRelease();
  sub_232002CEC((uint64_t)v9, type metadata accessor for SummariesFullProfileExecutor.Request);
  v40 = v54;
  sub_2320A3BC0(v38, v54 + *(int *)(v55 + 24));
  sub_232025468(v40, (uint64_t)v32, type metadata accessor for SharingChartFeedItemStep);
  sub_2320A35E4(a1, (uint64_t)&v76);
  v41 = objc_msgSend(*(id *)(a1 + 16), sel_profileIdentifier, sub_2320A390C(a1, (uint64_t)&v77));
  v42 = (unint64_t)objc_msgSend(v41, sel_type);

  if ((v42 | 2) == 3)
  {
    *((_QWORD *)&v79 + 1) = type metadata accessor for CommitModelsStep();
    v80 = &off_250100A30;
    v43 = sub_2320251BC((uint64_t *)&v78);
    sub_23200054C(a1, (uint64_t)v43, type metadata accessor for SummariesFullProfileExecutor.Request);
  }
  else
  {
    v80 = 0;
    v78 = 0u;
    v79 = 0u;
  }
  v44 = (_QWORD *)MEMORY[0x24BEE4AF8];
  for (i = 32; i != 392; i += 40)
  {
    sub_23200054C((uint64_t)&v62[i], (uint64_t)&v59, (uint64_t (*)(_QWORD))sub_2320A3C1C);
    sub_232025468((uint64_t)&v59, (uint64_t)&v56, (uint64_t (*)(_QWORD))sub_2320A3C1C);
    if (v57)
    {
      sub_2320167F8(&v56, (uint64_t)v58);
      sub_2320167F8(v58, (uint64_t)&v56);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v44 = sub_232097250(0, v44[2] + 1, 1, v44);
      v47 = v44[2];
      v46 = v44[3];
      if (v47 >= v46 >> 1)
        v44 = sub_232097250((_QWORD *)(v46 > 1), v47 + 1, 1, v44);
      v44[2] = v47 + 1;
      sub_2320167F8(&v56, (uint64_t)&v44[5 * v47 + 4]);
    }
    else
    {
      sub_232002CEC((uint64_t)&v56, (uint64_t (*)(_QWORD))sub_2320A3C1C);
    }
  }
  sub_2320A3C1C();
  swift_arrayDestroy();
  return v44;
}

uint64_t sub_2320A10D8()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

void sub_2320A110C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23209E934(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(void (**)(void))(v2 + 32), *(_QWORD *)(v2 + 40));
}

void sub_2320A1120(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  id v50;
  id v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t (*v57)(uint64_t);
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  id v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  BOOL v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  void (*v82)(char *, uint64_t);
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  void (*v89)(char *, uint64_t);
  uint64_t *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(char *, char *, uint64_t);
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  void (*v101)(char *, uint64_t);
  uint64_t *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(char *, char *, uint64_t);
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  void (*v113)(char *, uint64_t);
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(char *, uint64_t, uint64_t);
  char *v118;
  char *v119;
  uint64_t *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t v133;
  uint64_t v134;
  id v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  void (*v145)(char *, uint64_t, uint64_t);
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  void (*v159)(char *, char *, uint64_t);
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  void (*v165)(char *, uint64_t);
  uint64_t *v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t *v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  id v190;
  void *v191;
  id v192;
  unsigned int v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t (**v197)();
  uint64_t (**v198)();
  uint64_t *v199;
  uint64_t *v200;
  char *v201;
  uint64_t v202;
  uint64_t *v203;
  char *v204;
  char *v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  char *v209;
  char *v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  char *v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  char *v235;
  uint64_t v236;
  uint64_t v237;
  char *v238;
  uint64_t v239;
  uint64_t v240;
  _OWORD v241[2];
  uint64_t v242;
  __int128 v243;
  __int128 v244;
  uint64_t v245;

  v4 = sub_232200024();
  v232 = *(_QWORD *)(v4 - 8);
  v233 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v204 = (char *)&v201 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v231 = (char *)&v201 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v238 = (char *)&v201 - v9;
  v224 = sub_2321FFF40();
  v223 = *(_QWORD *)(v224 - 8);
  v10 = MEMORY[0x24BDAC7A8](v224);
  v222 = (char *)&v201 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v229 = (char *)&v201 - v12;
  v208 = sub_232200084();
  v206 = *(_QWORD *)(v208 - 8);
  v13 = MEMORY[0x24BDAC7A8](v208);
  v205 = (char *)&v201 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v207 = (char *)&v201 - v15;
  v217 = sub_23220015C();
  v216 = *(_QWORD *)(v217 - 8);
  v16 = MEMORY[0x24BDAC7A8](v217);
  v214 = (char *)&v201 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v215 = (char *)&v201 - v18;
  v221 = sub_2322001B0();
  v220 = *(_QWORD *)(v221 - 8);
  v19 = MEMORY[0x24BDAC7A8](v221);
  v219 = (char *)&v201 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v225 = (char *)&v201 - v21;
  v228 = sub_2322001A4();
  v227 = *(_QWORD *)(v228 - 8);
  v22 = MEMORY[0x24BDAC7A8](v228);
  v226 = (char *)&v201 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v230 = (char *)&v201 - v24;
  v25 = sub_232200180();
  v236 = *(_QWORD *)(v25 - 8);
  v237 = v25;
  v26 = MEMORY[0x24BDAC7A8](v25);
  v218 = (char *)&v201 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v209 = (char *)&v201 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v235 = (char *)&v201 - v30;
  v213 = sub_2322000CC();
  v212 = *(_QWORD *)(v213 - 8);
  v31 = MEMORY[0x24BDAC7A8](v213);
  v210 = (char *)&v201 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v211 = (char *)&v201 - v33;
  v34 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  v35 = MEMORY[0x24BDAC7A8](v34);
  v234 = (uint64_t)&v201 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v35);
  v239 = (uint64_t)&v201 - v37;
  v38 = sub_232200114();
  v39 = *(_QWORD *)(v38 - 8);
  v40 = MEMORY[0x24BDAC7A8](v38);
  v42 = (char *)&v201 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v40);
  v44 = (char *)&v201 - v43;
  sub_2320057B8(0, (unint64_t *)&qword_2541B2A70, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v46 = MEMORY[0x24BDAC7A8](v45);
  v240 = (uint64_t)&v201 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v46);
  v49 = (char *)&v201 - v48;
  v50 = objc_msgSend(*(id *)(a1 + 16), sel_profileIdentifier);
  v51 = objc_msgSend(v50, sel_type);

  if (v51 == (id)2)
  {
    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return;
  }
  v203 = (uint64_t *)a2;
  v52 = *(int *)(v34 + 28);
  v202 = a1;
  v53 = *(void **)(a1 + v52);
  sub_232201194();
  v54 = sub_2321FFD78();
  v55 = *(_QWORD *)(v54 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v49, 1, v54) == 1)
    goto LABEL_4;
  v59 = v240;
  sub_232016080((uint64_t)v49, v240, (unint64_t *)&qword_2541B2A70, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0]);
  v60 = (*(uint64_t (**)(uint64_t, uint64_t))(v55 + 88))(v59, v54);
  if (v60 == *MEMORY[0x24BE4AD28])
  {
    (*(void (**)(uint64_t, uint64_t))(v55 + 96))(v59, v54);
    v61 = v232;
    v62 = v233;
    v63 = v238;
    (*(void (**)(char *, uint64_t, uint64_t))(v232 + 32))(v238, v59, v233);
    v64 = objc_msgSend(v53, sel_code);
    v65 = v239;
    sub_23200054C(v202, v239, type metadata accessor for SummariesFullProfileExecutor.Request);
    v66 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
    v67 = v231;
    v66(v231, v63, v62);
    if (v64 == (id)256)
    {
      v68 = type metadata accessor for SleepingWristTemperatureStatisticsCurrentValueSharableModelStep();
      swift_allocObject();
      v69 = sub_2321CFB04(v65, v67);
      v70 = v203;
      v203[3] = v68;
      v70[4] = (uint64_t)&off_250105120;
      *v70 = v69;
      (*(void (**)(char *, uint64_t))(v61 + 8))(v63, v62);
      goto LABEL_5;
    }
    v84 = type metadata accessor for StatisticsCurrentValueSharableModelStep();
    v85 = swift_allocObject();
    v66((char *)(v85 + qword_2541BF5C0), v67, v62);
    v86 = v61;
    v87 = v234;
    sub_23200054C(v65, v234, type metadata accessor for SummariesFullProfileExecutor.Request);
    v201 = v49;
    v88 = v235;
    sub_232200174();
    v89 = *(void (**)(char *, uint64_t))(v86 + 8);
    v89(v67, v62);
    sub_232002CEC(v65, type metadata accessor for SummariesFullProfileExecutor.Request);
    sub_232025468(v87, v85 + qword_2541BF5D0, type metadata accessor for SummariesFullProfileExecutor.Request);
    (*(void (**)(uint64_t, char *, uint64_t))(v236 + 32))(v85 + qword_2541BF5C8, v88, v237);
    v90 = v203;
    v203[3] = v84;
    v90[4] = (uint64_t)&off_250105120;
    *v90 = v85;
    v89(v238, v62);
LABEL_18:
    v57 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0];
    v58 = (uint64_t)v201;
    goto LABEL_19;
  }
  v238 = (char *)v54;
  v71 = v60 == *MEMORY[0x24BE4AD80];
  v201 = v49;
  if (v71)
  {
    (*(void (**)(uint64_t, char *))(v55 + 96))(v59, v238);
    v72 = v227;
    v73 = v230;
    v74 = v228;
    (*(void (**)(char *, uint64_t, uint64_t))(v227 + 32))(v230, v59, v228);
    v75 = v239;
    sub_23200054C(v202, v239, type metadata accessor for SummariesFullProfileExecutor.Request);
    v76 = *(void (**)(char *, char *, uint64_t))(v72 + 16);
    v77 = v226;
    v76(v226, v73, v74);
    v78 = type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelStep();
    v79 = swift_allocObject();
    v76((char *)(v79 + qword_255FA9D30), v77, v74);
    v80 = v234;
    sub_23200054C(v75, v234, type metadata accessor for SummariesFullProfileExecutor.Request);
    v81 = v235;
    sub_232200174();
    v82 = *(void (**)(char *, uint64_t))(v72 + 8);
    v82(v77, v74);
    sub_232002CEC(v75, type metadata accessor for SummariesFullProfileExecutor.Request);
    sub_232025468(v80, v79 + qword_2541BF5D0, type metadata accessor for SummariesFullProfileExecutor.Request);
    (*(void (**)(uint64_t, char *, uint64_t))(v236 + 32))(v79 + qword_2541BF5C8, v81, v237);
    v83 = v203;
    v203[3] = v78;
    v83[4] = (uint64_t)&off_250105120;
    *v83 = v79;
    v82(v230, v74);
    goto LABEL_18;
  }
  if (v60 == *MEMORY[0x24BE4AD90])
  {
    (*(void (**)(uint64_t, char *))(v55 + 96))(v59, v238);
    v91 = v223;
    v92 = v229;
    v93 = v224;
    (*(void (**)(char *, uint64_t, uint64_t))(v223 + 32))(v229, v59, v224);
    v94 = v239;
    sub_23200054C(v202, v239, type metadata accessor for SummariesFullProfileExecutor.Request);
    v95 = *(void (**)(char *, char *, uint64_t))(v91 + 16);
    v96 = v222;
    v95(v222, v92, v93);
    v97 = type metadata accessor for SleepDurationCurrentValueSharableModelStep();
    v98 = swift_allocObject();
    v95((char *)(v98 + qword_255FA9DA8), v96, v93);
    v99 = v234;
    sub_23200054C(v94, v234, type metadata accessor for SummariesFullProfileExecutor.Request);
    v100 = v235;
    sub_232200174();
    v101 = *(void (**)(char *, uint64_t))(v91 + 8);
    v101(v96, v93);
    sub_232002CEC(v94, type metadata accessor for SummariesFullProfileExecutor.Request);
    sub_232025468(v99, v98 + qword_2541BF5D0, type metadata accessor for SummariesFullProfileExecutor.Request);
    (*(void (**)(uint64_t, char *, uint64_t))(v236 + 32))(v98 + qword_2541BF5C8, v100, v237);
    v102 = v203;
    v203[3] = v97;
    v102[4] = (uint64_t)&off_250105120;
    *v102 = v98;
    v101(v229, v93);
    goto LABEL_18;
  }
  if (v60 == *MEMORY[0x24BE4AD88])
  {
    (*(void (**)(uint64_t, char *))(v55 + 96))(v59, v238);
    v103 = v220;
    v104 = v225;
    v105 = v221;
    (*(void (**)(char *, uint64_t, uint64_t))(v220 + 32))(v225, v59, v221);
    v106 = v239;
    sub_23200054C(v202, v239, type metadata accessor for SummariesFullProfileExecutor.Request);
    v107 = *(void (**)(char *, char *, uint64_t))(v103 + 16);
    v108 = v219;
    v107(v219, v104, v105);
    v109 = type metadata accessor for MostRecentCumulativeTimePeriodCurrentValueSharableModelStep(0);
    v110 = swift_allocObject();
    v107((char *)(v110 + qword_255FA9CB8), v108, v105);
    v111 = v234;
    sub_23200054C(v106, v234, type metadata accessor for SummariesFullProfileExecutor.Request);
    v112 = v235;
    sub_232200174();
    v113 = *(void (**)(char *, uint64_t))(v103 + 8);
    v113(v108, v105);
    sub_232002CEC(v106, type metadata accessor for SummariesFullProfileExecutor.Request);
    sub_232025468(v111, v110 + qword_2541BF5D0, type metadata accessor for SummariesFullProfileExecutor.Request);
    (*(void (**)(uint64_t, char *, uint64_t))(v236 + 32))(v110 + qword_2541BF5C8, v112, v237);
    v114 = v203;
    v203[3] = v109;
    v114[4] = (uint64_t)&off_250105120;
    *v114 = v110;
    v113(v225, v105);
    goto LABEL_18;
  }
  if (v60 == *MEMORY[0x24BE4AD70])
  {
    (*(void (**)(uint64_t, char *))(v55 + 96))(v59, v238);
    v116 = v236;
    v115 = v237;
    v117 = *(void (**)(char *, uint64_t, uint64_t))(v236 + 32);
    v118 = v218;
    v117(v218, v59, v237);
    v119 = (char *)objc_msgSend(v53, sel_code) - 275;
    v120 = v203;
    v121 = v239;
    v122 = v202;
    switch((unint64_t)v119)
    {
      case 0uLL:
        sub_23200054C(v202, v239, type metadata accessor for SummariesFullProfileExecutor.Request);
        v123 = v235;
        (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v235, v118, v115);
        v124 = type metadata accessor for BreathingDisturbancesMostRecentSampleCurrentValueSharableModelStep();
        goto LABEL_36;
      case 1uLL:
      case 2uLL:
      case 3uLL:
      case 4uLL:
      case 5uLL:
      case 6uLL:
      case 7uLL:
      case 8uLL:
      case 0xAuLL:
      case 0xBuLL:
        goto LABEL_32;
      case 9uLL:
        sub_23200054C(v202, v239, type metadata accessor for SummariesFullProfileExecutor.Request);
        v123 = v235;
        (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v235, v118, v115);
        v124 = type metadata accessor for StateOfMindMostRecentSampleCurrentValueSharableModelStep();
        goto LABEL_36;
      case 0xCuLL:
        sub_23200054C(v202, v239, type metadata accessor for SummariesFullProfileExecutor.Request);
        v123 = v235;
        (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v235, v118, v115);
        v124 = type metadata accessor for GAD7AssessmentMostRecentSampleCurrentValueSharableModelStep();
        goto LABEL_36;
      case 0xDuLL:
        sub_23200054C(v202, v239, type metadata accessor for SummariesFullProfileExecutor.Request);
        v123 = v235;
        (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v235, v118, v115);
        v124 = type metadata accessor for PHQ9AssessmentMostRecentSampleCurrentValueSharableModelStep();
        goto LABEL_36;
      default:
        v120 = v203;
        v121 = v239;
        v122 = v202;
        if (v202 == 144)
        {
          sub_23200054C(144, v239, type metadata accessor for SummariesFullProfileExecutor.Request);
          v137 = (uint64_t)v235;
          (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v235, v118, v115);
          v138 = sub_2320A9F98(v121, v137);
          v120[3] = type metadata accessor for ElectrocardiogramMostRecentSampleCurrentValueSharableModelStep();
          v120[4] = (uint64_t)&off_250105120;
          *v120 = v138;
        }
        else
        {
LABEL_32:
          sub_23200054C(v122, v121, type metadata accessor for SummariesFullProfileExecutor.Request);
          v123 = v235;
          (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v235, v118, v115);
          sub_2320A7D40(0);
LABEL_36:
          v141 = v124;
          v142 = swift_allocObject();
          sub_232025468(v121, v142 + qword_2541BF5D0, type metadata accessor for SummariesFullProfileExecutor.Request);
          v117((char *)(v142 + qword_2541BF5C8), (uint64_t)v123, v115);
          v120[3] = v141;
          v120[4] = (uint64_t)&off_250105120;
          *v120 = v142;
        }
        (*(void (**)(char *, uint64_t))(v116 + 8))(v118, v115);
        break;
    }
    goto LABEL_18;
  }
  if (v60 == *MEMORY[0x24BE4AD60])
  {
    (*(void (**)(uint64_t, char *))(v55 + 96))(v59, v238);
    v125 = v216;
    v126 = v215;
    v127 = v217;
    (*(void (**)(char *, uint64_t, uint64_t))(v216 + 32))(v215, v59, v217);
    v128 = v239;
    sub_23200054C(v202, v239, type metadata accessor for SummariesFullProfileExecutor.Request);
    v129 = (uint64_t)v214;
    (*(void (**)(char *, char *, uint64_t))(v125 + 16))(v214, v126, v127);
    v130 = type metadata accessor for MostRecentRangeStatisticsCurrentValueSharableModelStep();
    swift_allocObject();
    v131 = sub_23213F0F8(v128, v129);
LABEL_25:
    v132 = v203;
    v203[3] = v130;
    v132[4] = (uint64_t)&off_250105120;
    *v132 = v131;
    (*(void (**)(char *, uint64_t))(v125 + 8))(v126, v127);
    goto LABEL_5;
  }
  if (v60 == *MEMORY[0x24BE4AD58])
  {
    (*(void (**)(uint64_t, char *))(v55 + 96))(v59, v238);
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v44, v59, v38);
    v133 = v239;
    sub_23200054C(v202, v239, type metadata accessor for SummariesFullProfileExecutor.Request);
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v42, v44, v38);
    v134 = type metadata accessor for ActivitySummaryCurrentValueSharableModelStep();
    swift_allocObject();
    v135 = sub_2321BCEE0(v133, (uint64_t)v42);
    v136 = v203;
    v203[3] = v134;
    v136[4] = (uint64_t)&off_250105120;
    *v136 = (uint64_t)v135;
    (*(void (**)(char *, uint64_t))(v39 + 8))(v44, v38);
    goto LABEL_5;
  }
  if (v60 == *MEMORY[0x24BE4AD38])
  {
    (*(void (**)(uint64_t, char *))(v55 + 96))(v59, v238);
    v125 = v212;
    v126 = v211;
    v127 = v213;
    (*(void (**)(char *, uint64_t, uint64_t))(v212 + 32))(v211, v59, v213);
    v139 = v239;
    sub_23200054C(v202, v239, type metadata accessor for SummariesFullProfileExecutor.Request);
    v140 = (uint64_t)v210;
    (*(void (**)(char *, char *, uint64_t))(v125 + 16))(v210, v126, v127);
    v130 = type metadata accessor for AudioExposureCurrentValueSharableModelStep();
    swift_allocObject();
    v131 = sub_232066198(v139, v140);
    goto LABEL_25;
  }
  if (v60 == *MEMORY[0x24BE4AD98])
  {
    (*(void (**)(uint64_t, char *))(v55 + 96))(v59, v238);
    v144 = v235;
    v143 = v236;
    v145 = *(void (**)(char *, uint64_t, uint64_t))(v236 + 32);
    v146 = v237;
    v145(v235, v59, v237);
    v147 = v239;
    sub_23200054C(v202, v239, type metadata accessor for SummariesFullProfileExecutor.Request);
    v148 = v209;
    (*(void (**)(char *, char *, uint64_t))(v143 + 16))(v209, v144, v146);
    sub_2320A7D40(0);
    v150 = v149;
    v151 = swift_allocObject();
    sub_232025468(v147, v151 + qword_2541BF5D0, type metadata accessor for SummariesFullProfileExecutor.Request);
    v145((char *)(v151 + qword_2541BF5C8), (uint64_t)v148, v146);
    v152 = v203;
    v203[3] = v150;
    v152[4] = (uint64_t)&off_250105120;
    *v152 = v151;
    (*(void (**)(char *, uint64_t))(v143 + 8))(v144, v146);
    goto LABEL_18;
  }
  v154 = v236;
  v153 = v237;
  if (v60 == *MEMORY[0x24BE4AD30])
  {
    (*(void (**)(uint64_t, char *))(v55 + 96))(v59, v238);
    v155 = v206;
    v156 = v207;
    v157 = v208;
    (*(void (**)(char *, uint64_t, uint64_t))(v206 + 32))(v207, v59, v208);
    v158 = v239;
    sub_23200054C(v202, v239, type metadata accessor for SummariesFullProfileExecutor.Request);
    v159 = *(void (**)(char *, char *, uint64_t))(v155 + 16);
    v160 = v205;
    v159(v205, v156, v157);
    v161 = type metadata accessor for SampleCountMostRecentSampleCurrentValueSharableModelStep();
    v162 = swift_allocObject();
    v159((char *)(v162 + qword_255FA9CB0), v160, v157);
    v163 = v234;
    sub_23200054C(v158, v234, type metadata accessor for SummariesFullProfileExecutor.Request);
    v164 = v235;
    sub_232200174();
    v165 = *(void (**)(char *, uint64_t))(v155 + 8);
    v165(v160, v157);
    sub_232002CEC(v158, type metadata accessor for SummariesFullProfileExecutor.Request);
    sub_232025468(v163, v162 + qword_2541BF5D0, type metadata accessor for SummariesFullProfileExecutor.Request);
    (*(void (**)(uint64_t, char *, uint64_t))(v236 + 32))(v162 + qword_2541BF5C8, v164, v237);
    v166 = v203;
    v203[3] = v161;
    v166[4] = (uint64_t)&off_250105120;
    *v166 = v162;
    v165(v156, v157);
    goto LABEL_18;
  }
  if (v60 == *MEMORY[0x24BE4AD20])
  {
    (*(void (**)(uint64_t, char *))(v55 + 96))(v59, v238);
    v167 = v220;
    v168 = v225;
    v169 = v221;
    (*(void (**)(char *, uint64_t, uint64_t))(v220 + 32))(v225, v59, v221);
    v170 = v239;
    sub_23200054C(v202, v239, type metadata accessor for SummariesFullProfileExecutor.Request);
    v171 = v219;
    (*(void (**)(char *, char *, uint64_t))(v167 + 16))(v219, v168, v169);
    v172 = type metadata accessor for StandHoursCurrentValueSharableModelStep(0);
    swift_allocObject();
    v173 = sub_2320713F8(v170, v171);
    v174 = v203;
    v203[3] = v172;
    v174[4] = (uint64_t)&off_250105120;
    *v174 = v173;
    (*(void (**)(char *, uint64_t))(v167 + 8))(v168, v169);
    goto LABEL_18;
  }
  if (v60 == *MEMORY[0x24BE4AD50])
  {
    v175 = v239;
    sub_23200054C(v202, v239, type metadata accessor for SummariesFullProfileExecutor.Request);
    v176 = type metadata accessor for OngoingFactorsMostRecentSampleCurrentValueSharableModelStep();
    v177 = swift_allocObject();
    v178 = v234;
    sub_23200054C(v175, v234, type metadata accessor for SummariesFullProfileExecutor.Request);
    v179 = v235;
    sub_232200174();
    sub_232002CEC(v175, type metadata accessor for SummariesFullProfileExecutor.Request);
    sub_232025468(v178, v177 + qword_2541BF5D0, type metadata accessor for SummariesFullProfileExecutor.Request);
    (*(void (**)(uint64_t, char *, uint64_t))(v154 + 32))(v177 + qword_2541BF5C8, v179, v153);
    v180 = v203;
    v203[3] = v176;
    v180[4] = (uint64_t)&off_250105120;
    *v180 = v177;
    (*(void (**)(uint64_t, char *))(v55 + 8))(v240, v238);
    goto LABEL_18;
  }
  v49 = v201;
  if (v60 == *MEMORY[0x24BE4AD40])
  {
    v181 = v239;
    sub_23200054C(v202, v239, type metadata accessor for SummariesFullProfileExecutor.Request);
    v245 = 0;
    v243 = 0u;
    v244 = 0u;
    v182 = type metadata accessor for CardioFitnessMostRecentSampleCurrentValueSharableModelStep();
    memset(v241, 0, sizeof(v241));
    v242 = 0;
    swift_allocObject();
    v183 = sub_232035CEC(v181, (uint64_t)&v243, (uint64_t)v241);
LABEL_52:
    v186 = v203;
    v203[3] = v182;
    v186[4] = (uint64_t)&off_250105120;
    *v186 = v183;
LABEL_53:
    (*(void (**)(uint64_t, char *))(v55 + 8))(v240, v238);
    goto LABEL_5;
  }
  if (v60 == *MEMORY[0x24BE4AD18])
  {
    v184 = v239;
    sub_23200054C(v202, v239, type metadata accessor for SummariesFullProfileExecutor.Request);
    v182 = type metadata accessor for AFibBurdenMostRecentSampleCurrentValueSharableModelStep();
    v243 = 0u;
    v244 = 0u;
    v245 = 0;
    swift_allocObject();
    v183 = sub_23217EC7C(v184, (uint64_t)&v243);
    goto LABEL_52;
  }
  if (v60 == *MEMORY[0x24BE4AD78])
  {
    v185 = v239;
    sub_23200054C(v202, v239, type metadata accessor for SummariesFullProfileExecutor.Request);
    v182 = type metadata accessor for VisionPrescriptionMostRecentSampleCurrentValueSharableModelStep();
    v243 = 0u;
    v244 = 0u;
    v245 = 0;
    swift_allocObject();
    v183 = sub_23209B750(v185, (uint64_t)&v243);
    goto LABEL_52;
  }
  if (v60 == *MEMORY[0x24BE4AD68])
  {
    v187 = v240;
    (*(void (**)(uint64_t, char *))(v55 + 96))(v240, v238);
    v126 = v231;
    v125 = v232;
    v127 = v233;
    (*(void (**)(char *, uint64_t, uint64_t))(v232 + 32))(v231, v187, v233);
    v188 = v239;
    sub_23200054C(v202, v239, type metadata accessor for SummariesFullProfileExecutor.Request);
    v189 = v204;
    (*(void (**)(char *, char *, uint64_t))(v125 + 16))(v204, v126, v127);
    v130 = type metadata accessor for UnderwaterDepthCurrentValueSharableModelStep(0);
    swift_allocObject();
    v131 = sub_232091884(v188, v189);
    goto LABEL_25;
  }
  if (v60 == *MEMORY[0x24BE4AD48])
  {
    v190 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
    if (v190)
    {
      v191 = v190;
      v192 = objc_msgSend(v190, sel_features);

      if (v192)
      {
        v193 = objc_msgSend(v192, sel_harmonia);

        if (v193)
        {
          v194 = v239;
          sub_23200054C(v202, v239, type metadata accessor for SummariesFullProfileExecutor.Request);
          v195 = type metadata accessor for BalanceCurrentValueSharableModelStep();
          v196 = swift_allocObject();
          v197 = (uint64_t (**)())(v196
                                + OBJC_IVAR____TtC9Summaries36BalanceCurrentValueSharableModelStep_currentDateProvider);
          *v197 = sub_2320464CC;
          v197[1] = 0;
          v198 = (uint64_t (**)())(v196
                                + OBJC_IVAR____TtC9Summaries36BalanceCurrentValueSharableModelStep_gregorianCalendarInCurrentTimeZoneProvider);
          *v198 = sub_2320464D0;
          v198[1] = 0;
          sub_232025468(v194, v196 + OBJC_IVAR____TtC9Summaries36BalanceCurrentValueSharableModelStep_request, type metadata accessor for SummariesFullProfileExecutor.Request);
          v199 = v203;
          v203[3] = v195;
          v199[4] = (uint64_t)&off_2500FF4B0;
        }
        else
        {
          v196 = 0;
          v200 = v203;
          *(_OWORD *)(v203 + 3) = 0u;
          *(_OWORD *)(v200 + 1) = 0u;
        }
        *v203 = v196;
        goto LABEL_53;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    JUMPOUT(0x2320A2A0CLL);
  }
  (*(void (**)(uint64_t, char *))(v55 + 8))(v240, v238);
LABEL_4:
  v56 = v203;
  v203[4] = 0;
  *(_OWORD *)v56 = 0u;
  *((_OWORD *)v56 + 1) = 0u;
LABEL_5:
  v57 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0];
  v58 = (uint64_t)v49;
LABEL_19:
  sub_232016D88(v58, (unint64_t *)&qword_2541B2A70, v57);
}

void sub_2320A2A44(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD v24[2];
  uint64_t v25;

  v4 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (id *)((char *)v24 - v8);
  v10 = objc_msgSend(*(id *)(a1 + 16), sel_profileIdentifier);
  v11 = objc_msgSend(v10, sel_type);

  sub_23200054C(a1, (uint64_t)v9, type metadata accessor for SummariesFullProfileExecutor.Request);
  if (v11 == (id)2)
  {
    sub_232002CEC((uint64_t)v9, type metadata accessor for SummariesFullProfileExecutor.Request);
LABEL_10:
    v20 = type metadata accessor for ChartSharableModelStep();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a2, 1, 1, v20);
    return;
  }
  v12 = objc_msgSend(v9[2], sel_profileIdentifier);
  v13 = objc_msgSend(v12, sel_type);

  if (v13 == (id)3)
  {
    v14 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
    if (v14)
    {
      v15 = v14;
      v16 = objc_msgSend(v14, sel_features);

      if (v16)
      {
        v17 = objc_msgSend(v16, sel_snidgetsTinker);

        sub_232002CEC((uint64_t)v9, type metadata accessor for SummariesFullProfileExecutor.Request);
        if ((v17 & 1) == 0)
          goto LABEL_10;
        goto LABEL_9;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return;
  }
  sub_232002CEC((uint64_t)v9, type metadata accessor for SummariesFullProfileExecutor.Request);
LABEL_9:
  v18 = HKObjectType.summaryChartModelConfiguration.getter();
  if (v18 == 1)
    goto LABEL_10;
  v21 = v18;
  v22 = v19;
  sub_23200054C(a1, (uint64_t)v7, type metadata accessor for SummariesFullProfileExecutor.Request);
  v25 = 0;
  memset(v24, 0, sizeof(v24));
  sub_2320CF8A8((uint64_t)v7, v21, v22, (uint64_t)v24, a2);
  v23 = type metadata accessor for ChartSharableModelStep();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a2, 0, 1, v23);
}

void sub_2320A2C9C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  id v37;
  id v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  int v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  char *v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t **v66;
  void (*v67)(char *, uint64_t);
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t **v82;
  uint64_t v83;
  void (*v84)(char *, char *, uint64_t);
  NSObject *v85;
  os_log_type_t v86;
  uint8_t *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  void (*v91)(char *, uint64_t);
  void (*v92)(char *, uint64_t);
  _OWORD *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;

  v120 = a2;
  v101 = sub_23220039C();
  v100 = *(_QWORD *)(v101 - 8);
  MEMORY[0x24BDAC7A8](v101);
  v119 = (char *)&v94 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v99 = (char *)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v104 = (uint64_t)&v94 - v8;
  v9 = sub_2321FFF40();
  v105 = *(_QWORD *)(v9 - 8);
  v106 = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v102 = (uint64_t)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v103 = (char *)&v94 - v12;
  v13 = sub_2321FFF1C();
  v109 = *(_QWORD *)(v13 - 8);
  v110 = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v111 = (char *)&v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v116 = (char *)&v94 - v16;
  v117 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  MEMORY[0x24BDAC7A8](v117);
  v112 = (uint64_t)&v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_232200024();
  v114 = *(_QWORD *)(v108 - 8);
  v18 = MEMORY[0x24BDAC7A8](v108);
  v107 = (char *)&v94 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v113 = (char *)&v94 - v20;
  v115 = sub_2321FFD78();
  v21 = *(_QWORD *)(v115 - 8);
  MEMORY[0x24BDAC7A8](v115);
  v23 = (char *)&v94 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, &qword_2541B5BB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AE58], v4);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v94 - v25;
  v27 = sub_2321FFE08();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)&v94 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x24BDAC7A8](v29);
  v34 = (char *)&v94 - v33;
  MEMORY[0x24BDAC7A8](v32);
  v36 = (char *)&v94 - v35;
  v118 = a1;
  v37 = objc_msgSend(*(id *)(a1 + 16), sel_profileIdentifier);
  v38 = objc_msgSend(v37, sel_type);

  if (v38 != (id)1)
  {
    v45 = (_OWORD *)v120;
    *(_QWORD *)(v120 + 32) = 0;
    *v45 = 0u;
    v45[1] = 0u;
    return;
  }
  v97 = v31;
  v95 = v34;
  v98 = v21;
  v39 = v116;
  v96 = v23;
  v40 = v36;
  v41 = v118;
  v42 = v119;
  v43 = sub_2321FFDC0();
  if (*(_QWORD *)(v43 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v28 + 16))(v26, v43 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80)), v27);
    v44 = 0;
  }
  else
  {
    v44 = 1;
  }
  v46 = v98;
  v47 = v97;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v26, v44, 1, v27);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) == 1)
  {
    sub_232016D88((uint64_t)v26, &qword_2541B5BB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AE58]);
    v48 = v120;
    *(_OWORD *)v120 = 0u;
    *(_OWORD *)(v48 + 16) = 0u;
    *(_QWORD *)(v48 + 32) = 0;
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v40, v26, v27);
  v49 = v96;
  sub_2321FFD90();
  v50 = v115;
  v51 = (*(uint64_t (**)(char *, uint64_t))(v46 + 88))(v49, v115);
  if (v51 == *MEMORY[0x24BE4AD28])
  {
    (*(void (**)(char *, uint64_t))(v46 + 96))(v49, v50);
    v52 = v113;
    v53 = v114;
    v54 = v108;
    (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v113, v49, v108);
    v55 = v112;
    sub_23200054C(v41, v112, type metadata accessor for SummariesFullProfileExecutor.Request);
    v56 = (uint64_t)v95;
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v95, v40, v27);
    sub_2321FFF10();
    v57 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
    v58 = v39;
    v59 = (uint64_t)v107;
    v57(v107, v52, v54);
    v60 = v109;
    v61 = *(void (**)(char *, char *, uint64_t))(v109 + 16);
    v62 = (uint64_t)v111;
    v118 = (uint64_t)v40;
    v63 = v110;
    v61(v111, v58, v110);
    v64 = sub_2320A6DAC(v55, v56, v62, v59);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v58, v63);
    v65 = type metadata accessor for StatisticsTrendSharableModelStep();
    v66 = (uint64_t **)v120;
    *(_QWORD *)(v120 + 24) = v65;
    v66[4] = (uint64_t *)&off_2501024F0;
    *v66 = v64;
    (*(void (**)(char *, uint64_t))(v114 + 8))(v113, v54);
    v67 = *(void (**)(char *, uint64_t))(v28 + 8);
    v68 = (char *)v118;
  }
  else
  {
    if (v51 != *MEMORY[0x24BE4AD90])
    {
      swift_getObjectType();
      sub_2321FF958();
      v84 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
      v84(v47, v40, v27);
      v85 = sub_232200390();
      v86 = sub_2322012E4();
      if (os_log_type_enabled(v85, v86))
      {
        v118 = (uint64_t)v40;
        v87 = (uint8_t *)swift_slowAlloc();
        v88 = swift_slowAlloc();
        v122 = v88;
        v117 = v28;
        *(_DWORD *)v87 = 136315138;
        v84(v95, v47, v27);
        v89 = sub_232200F00();
        v121 = sub_232013174(v89, v90, &v122);
        sub_232201710();
        v46 = v98;
        swift_bridgeObjectRelease();
        v91 = *(void (**)(char *, uint64_t))(v117 + 8);
        v91(v47, v27);
        _os_log_impl(&dword_231FFB000, v85, v86, "Unimplemented trend generator type for %s", v87, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2348FF468](v88, -1, -1);
        MEMORY[0x2348FF468](v87, -1, -1);

        (*(void (**)(char *, uint64_t))(v100 + 8))(v119, v101);
        v91((char *)v118, v27);
      }
      else
      {

        v92 = *(void (**)(char *, uint64_t))(v28 + 8);
        v92(v47, v27);
        (*(void (**)(char *, uint64_t))(v100 + 8))(v42, v101);
        v92(v40, v27);
      }
      v93 = (_OWORD *)v120;
      *(_QWORD *)(v120 + 32) = 0;
      *v93 = 0u;
      v93[1] = 0u;
      v67 = *(void (**)(char *, uint64_t))(v46 + 8);
      v68 = v96;
      v83 = v115;
      goto LABEL_17;
    }
    (*(void (**)(char *, uint64_t))(v46 + 96))(v49, v50);
    v69 = v105;
    v70 = v103;
    v71 = v49;
    v72 = v106;
    (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v103, v71, v106);
    sub_23200054C(v41, v112, type metadata accessor for SummariesFullProfileExecutor.Request);
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v95, v40, v27);
    sub_2321FFF10();
    (*(void (**)(uint64_t, char *, uint64_t))(v69 + 16))(v102, v70, v72);
    v73 = sub_2321FDC6C();
    v74 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56);
    v74(v104, 1, 1, v73);
    v75 = (uint64_t)v99;
    v74((uint64_t)v99, 1, 1, v73);
    v76 = type metadata accessor for SleepTrendSharableModelStep();
    v77 = (uint64_t *)swift_allocObject();
    v78 = v109;
    v79 = v110;
    v80 = (uint64_t)v111;
    (*(void (**)(char *, char *, uint64_t))(v109 + 16))(v111, v39, v110);
    v81 = sub_2320A7100(v112, (uint64_t)v95, v80, v102, v104, v75, v77);
    (*(void (**)(char *, uint64_t))(v78 + 8))(v39, v79);
    v82 = (uint64_t **)v120;
    *(_QWORD *)(v120 + 24) = v76;
    v82[4] = (uint64_t *)&off_2501024F0;
    *v82 = v81;
    (*(void (**)(char *, uint64_t))(v105 + 8))(v103, v106);
    v67 = *(void (**)(char *, uint64_t))(v28 + 8);
    v68 = v40;
  }
  v83 = v27;
LABEL_17:
  v67(v68, v83);
}

double sub_2320A35E4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  double result;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v30;
  double v31;
  _OWORD *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;

  v36 = a2;
  sub_2320057B8(0, &qword_2541B5BB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AE58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v33 - v4;
  v6 = sub_2321FFE08();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v35 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v34 = (char *)&v33 - v10;
  v11 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v33 = (uint64_t)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (id *)((char *)&v33 - v14);
  v16 = objc_msgSend(*(id *)(a1 + 16), sel_profileIdentifier);
  v17 = objc_msgSend(v16, sel_type);

  sub_23200054C(a1, (uint64_t)v15, type metadata accessor for SummariesFullProfileExecutor.Request);
  if (v17 == (id)1)
  {
    sub_232002CEC((uint64_t)v15, type metadata accessor for SummariesFullProfileExecutor.Request);
  }
  else
  {
    v18 = objc_msgSend(v15[2], sel_profileIdentifier);
    v19 = objc_msgSend(v18, sel_type);

    sub_232002CEC((uint64_t)v15, type metadata accessor for SummariesFullProfileExecutor.Request);
    if (v19 != (id)2)
    {
      v32 = (_OWORD *)v36;
      *(_QWORD *)(v36 + 32) = 0;
      result = 0.0;
      *v32 = 0u;
      v32[1] = 0u;
      return result;
    }
  }
  v20 = sub_2321FFDC0();
  if (*(_QWORD *)(v20 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v5, v20 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), v6);
    v21 = 0;
  }
  else
  {
    v21 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, v21, 1, v6);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_232016D88((uint64_t)v5, &qword_2541B5BB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AE58]);
    result = 0.0;
    v23 = v36;
    *(_OWORD *)v36 = 0u;
    *(_OWORD *)(v23 + 16) = 0u;
    *(_QWORD *)(v23 + 32) = 0;
  }
  else
  {
    v24 = v34;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v34, v5, v6);
    v25 = a1;
    v26 = v33;
    sub_23200054C(v25, v33, type metadata accessor for SummariesFullProfileExecutor.Request);
    v27 = *(double *)&v35;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v35, v24, v6);
    v28 = type metadata accessor for TrendFeedItemStep();
    v29 = (uint64_t *)v36;
    *(_QWORD *)(v36 + 24) = v28;
    v29[4] = (uint64_t)&off_2501004A8;
    v30 = sub_2320251BC(v29);
    v31 = sub_2320717E4(v26, v27, (uint64_t)v30);
    (*(void (**)(char *, uint64_t, double))(v7 + 8))(v24, v6, v31);
  }
  return result;
}

double sub_2320A390C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  char v9;
  id v10;
  char *v11;
  uint64_t *v12;
  double result;
  uint64_t v14;

  v4 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232003E9C(0, (unint64_t *)&qword_2541B74A0);
  v7 = sub_232201170();
  v8 = *(id *)(a1 + *(int *)(v4 + 28));
  v9 = sub_23209CFE4(v8, v7);

  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0
    && (v10 = objc_msgSend(*(id *)(a1 + 16), sel_profileIdentifier),
        v11 = (char *)objc_msgSend(v10, sel_type),
        v10,
        (unint64_t)(v11 - 1) <= 1))
  {
    sub_23200054C(a1, (uint64_t)v6, type metadata accessor for SummariesFullProfileExecutor.Request);
    *(_QWORD *)(a2 + 24) = type metadata accessor for AlertFeedItemStep();
    *(_QWORD *)(a2 + 32) = &off_250104C08;
    v12 = sub_2320251BC((uint64_t *)a2);
    sub_23213C0BC((uint64_t)v6, (uint64_t)v12);
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

unint64_t sub_2320A3A50()
{
  unint64_t result;

  result = qword_2541B6C48;
  if (!qword_2541B6C48)
  {
    sub_232016A8C(255, &qword_2541B6C38);
    result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_2541B6C48);
  }
  return result;
}

unint64_t sub_2320A3A98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B7EA0;
  if (!qword_2541B7EA0)
  {
    sub_232000608(255, (unint64_t *)&qword_2541B54F8, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_2541B7EA0);
  }
  return result;
}

void sub_2320A3AF8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9DE90)
  {
    sub_232016A8C(255, &qword_255F9DE98);
    v0 = sub_2322016F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9DE90);
  }
}

void sub_2320A3B5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B6A50)
  {
    sub_232016A8C(255, &qword_2541B6A48);
    v0 = sub_2322016F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B6A50);
  }
}

uint64_t sub_2320A3BC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2320057B8(0, &qword_2541B5BB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AE58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_2320A3C1C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B6C40)
  {
    sub_232016A8C(255, &qword_2541B6C38);
    v0 = sub_2322016F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B6C40);
  }
}

void sub_2320A3C80(uint64_t a1, int a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  unsigned __int8 *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, unsigned __int8 *, uint64_t);
  _QWORD *v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  void *v30;
  id v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  _BOOL8 v45;
  uint64_t v46;
  char v47;
  char v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[2];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned __int8 *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  id v62;
  unsigned __int8 v63;

  v7 = sub_2321FFEA4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23202561C();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v15 = (unsigned __int8 *)v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a1 + 16);
  if (!v16)
  {
    swift_bridgeObjectRelease();
    return;
  }
  LODWORD(v56) = a2;
  v52[1] = v3;
  v53 = v16;
  v17 = &v15[*(int *)(v12 + 48)];
  v52[0] = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v18 = a1 + v52[0];
  v58 = *(_QWORD *)(v13 + 72);
  v55 = a1;
  swift_bridgeObjectRetain();
  sub_23200054C(v18, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_23202561C);
  v63 = *v15;
  v19 = v63;
  v54 = v8;
  v20 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v8 + 32);
  v57 = v17;
  v59 = v7;
  v20(v10, v17, v7);
  v21 = (_QWORD *)*a3;
  v23 = sub_23216AC54(v19);
  v24 = v21[2];
  v25 = (v22 & 1) == 0;
  v26 = v24 + v25;
  if (__OFADD__(v24, v25))
    goto LABEL_23;
  v27 = v22;
  if (v21[3] >= v26)
  {
    if ((v56 & 1) != 0)
    {
      if ((v22 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_2320A4400();
      if ((v27 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v32 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v23 >> 6) + 64) |= 1 << v23;
    *(_BYTE *)(v32[6] + v23) = v19;
    v33 = v32[7];
    v56 = *(_QWORD *)(v54 + 72);
    v34 = v59;
    v20((char *)(v33 + v56 * v23), (unsigned __int8 *)v10, v59);
    v35 = v32[2];
    v36 = __OFADD__(v35, 1);
    v37 = v35 + 1;
    if (v36)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v32[2] = v37;
    v38 = v53 - 1;
    if (v53 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    v39 = v55 + v58 + v52[0];
    while (1)
    {
      sub_23200054C(v39, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_23202561C);
      v63 = *v15;
      v40 = v63;
      v20(v10, v57, v34);
      v41 = (_QWORD *)*a3;
      v42 = sub_23216AC54(v40);
      v44 = v41[2];
      v45 = (v43 & 1) == 0;
      v36 = __OFADD__(v44, v45);
      v46 = v44 + v45;
      if (v36)
        break;
      v47 = v43;
      if (v41[3] < v46)
      {
        sub_2320A540C(v46, 1);
        v42 = sub_23216AC54(v40);
        if ((v47 & 1) != (v48 & 1))
          goto LABEL_25;
      }
      if ((v47 & 1) != 0)
        goto LABEL_10;
      v49 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v42 >> 6) + 64) |= 1 << v42;
      *(_BYTE *)(v49[6] + v42) = v40;
      v34 = v59;
      v20((char *)(v49[7] + v56 * v42), (unsigned __int8 *)v10, v59);
      v50 = v49[2];
      v36 = __OFADD__(v50, 1);
      v51 = v50 + 1;
      if (v36)
        goto LABEL_24;
      v49[2] = v51;
      v39 += v58;
      if (!--v38)
        goto LABEL_22;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_2320A540C(v26, v56 & 1);
  v28 = sub_23216AC54(v19);
  if ((v27 & 1) == (v29 & 1))
  {
    v23 = v28;
    if ((v27 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v30 = (void *)swift_allocError();
    swift_willThrow();
    v62 = v30;
    v31 = v30;
    sub_232016A8C(0, (unint64_t *)&qword_2541B78D0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v10, v59);
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_232201B30();
  __break(1u);
LABEL_26:
  v60 = 0;
  v61 = 0xE000000000000000;
  sub_23220189C();
  sub_232200F48();
  sub_232201920();
  sub_232200F48();
  sub_232201968();
  __break(1u);
}

char *sub_2320A4124()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *result;
  char *v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;

  v41 = sub_2321FDFD8();
  v37 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v40 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_2321FDEC4();
  v36 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v38 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232016C88();
  v33 = v0;
  v3 = *v0;
  v4 = sub_2322019B0();
  v5 = *(_QWORD *)(v3 + 16);
  v43 = v4;
  if (!v5)
  {
    result = (char *)swift_release();
    v32 = v43;
    v31 = v33;
LABEL_25:
    *v31 = v32;
    return result;
  }
  v6 = v4;
  result = (char *)(v4 + 64);
  v8 = (char *)(v3 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  v34 = v3 + 64;
  if (v6 != v3 || result >= &v8[8 * v9])
  {
    result = (char *)memmove(result, v8, 8 * v9);
    v6 = v43;
  }
  v10 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v42 = v3;
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v35 = (unint64_t)(v11 + 63) >> 6;
  v14 = v36;
  v15 = v37;
  v17 = v38;
  v16 = v39;
  v18 = v41;
  v19 = v43;
  while (1)
  {
    if (v13)
    {
      v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v44 = v10;
      v21 = v20 | (v10 << 6);
      v22 = v42;
      goto LABEL_9;
    }
    v27 = v10 + 1;
    v22 = v42;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v27 >= v35)
      goto LABEL_23;
    v28 = *(_QWORD *)(v34 + 8 * v27);
    v29 = v10 + 1;
    if (!v28)
    {
      v29 = v27 + 1;
      if (v27 + 1 >= v35)
        goto LABEL_23;
      v28 = *(_QWORD *)(v34 + 8 * v29);
      if (!v28)
        break;
    }
LABEL_22:
    v13 = (v28 - 1) & v28;
    v44 = v29;
    v21 = __clz(__rbit64(v28)) + (v29 << 6);
LABEL_9:
    v23 = *(_QWORD *)(v14 + 72) * v21;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v17, *(_QWORD *)(v22 + 48) + v23, v16);
    v24 = *(_QWORD *)(v15 + 72) * v21;
    v25 = *(_QWORD *)(v22 + 56) + v24;
    v26 = v40;
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v40, v25, v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(*(_QWORD *)(v19 + 48) + v23, v17, v16);
    result = (char *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v15 + 32))(*(_QWORD *)(v19 + 56) + v24, v26, v18);
    v10 = v44;
  }
  v30 = v27 + 2;
  if (v30 >= v35)
  {
LABEL_23:
    result = (char *)swift_release();
    v31 = v33;
    v32 = v43;
    goto LABEL_25;
  }
  v28 = *(_QWORD *)(v34 + 8 * v30);
  if (v28)
  {
    v29 = v30;
    goto LABEL_22;
  }
  while (1)
  {
    v29 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v29 >= v35)
      goto LABEL_23;
    v28 = *(_QWORD *)(v34 + 8 * v29);
    ++v30;
    if (v28)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_2320A4400()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  int64_t v25;

  v1 = sub_2321FFEA4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232025570();
  v23 = v0;
  v5 = *v0;
  v6 = sub_2322019B0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v23 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v24 = v5 + 64;
  v25 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v25)
      goto LABEL_26;
    v20 = *(_QWORD *)(v24 + 8 * v19);
    ++v11;
    if (!v20)
    {
      v11 = v19 + 1;
      if (v19 + 1 >= v25)
        goto LABEL_26;
      v20 = *(_QWORD *)(v24 + 8 * v11);
      if (!v20)
        break;
    }
LABEL_25:
    v14 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_12:
    v17 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16);
    v18 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 56) + v18, v1);
    *(_BYTE *)(*(_QWORD *)(v7 + 48) + v16) = v17;
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 56) + v18, v4, v1);
  }
  v21 = v19 + 2;
  if (v21 >= v25)
    goto LABEL_26;
  v20 = *(_QWORD *)(v24 + 8 * v21);
  if (v20)
  {
    v11 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v11 >= v25)
      goto LABEL_26;
    v20 = *(_QWORD *)(v24 + 8 * v11);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2320A4618()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  sub_2320A802C(0, qword_255F9DED8);
  v2 = *v0;
  v3 = sub_2322019B0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_232015B68(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_232015B58(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2320A481C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;

  v34 = sub_2321FDC6C();
  v1 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320A7FC8();
  v31 = v0;
  v4 = *v0;
  v5 = sub_2322019B0();
  v6 = *(_QWORD *)(v4 + 16);
  v35 = v5;
  if (!v6)
  {
    result = (void *)swift_release();
    v29 = v35;
    v28 = v31;
LABEL_28:
    *v28 = v29;
    return result;
  }
  v7 = v5;
  result = (void *)(v5 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9)
  {
    result = memmove(result, (const void *)(v4 + 64), 8 * v9);
    v7 = v35;
  }
  v32 = v4 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v4 + 16);
  v12 = 1 << *(_BYTE *)(v4 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v4 + 64);
  v33 = (unint64_t)(v12 + 63) >> 6;
  v15 = v34;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v25 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v33)
      goto LABEL_26;
    v26 = *(_QWORD *)(v32 + 8 * v25);
    ++v11;
    if (!v26)
    {
      v11 = v25 + 1;
      if (v25 + 1 >= v33)
        goto LABEL_26;
      v26 = *(_QWORD *)(v32 + 8 * v11);
      if (!v26)
        break;
    }
LABEL_25:
    v14 = (v26 - 1) & v26;
    v17 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v17);
    v21 = *v19;
    v20 = v19[1];
    v22 = *(_QWORD *)(v1 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, *(_QWORD *)(v4 + 56) + v22, v15);
    v23 = v35;
    v24 = (_QWORD *)(*(_QWORD *)(v35 + 48) + v18);
    *v24 = v21;
    v24[1] = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(v23 + 56) + v22, v3, v15);
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_26:
    result = (void *)swift_release();
    v28 = v31;
    v29 = v35;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v32 + 8 * v27);
  if (v26)
  {
    v11 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v11 >= v33)
      goto LABEL_26;
    v26 = *(_QWORD *)(v32 + 8 * v11);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2320A4A74()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  _OWORD v24[2];
  _OWORD v25[2];
  uint64_t v26;

  v1 = v0;
  sub_2320A802C(0, &qword_255F9DEC8);
  v2 = *v0;
  v3 = sub_2322019B0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    sub_232083F04(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    v17 = 32 * v15;
    sub_232015B68(*(_QWORD *)(v2 + 56) + v17, (uint64_t)v24);
    v18 = *(_QWORD *)(v4 + 48) + v16;
    v19 = v25[0];
    v20 = v25[1];
    *(_QWORD *)(v18 + 32) = v26;
    *(_OWORD *)v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    result = sub_232015B58(v24, (_OWORD *)(*(_QWORD *)(v4 + 56) + v17));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2320A4C78()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  sub_2320A802C(0, &qword_255F9DEC0);
  v2 = *v0;
  v3 = sub_2322019B0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_2320A4E48()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  __int128 v22[2];

  v1 = v0;
  sub_2320A7ECC();
  v2 = *v0;
  v3 = sub_2322019B0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 40 * v15;
    sub_23201B304(*(_QWORD *)(v2 + 56) + 40 * v15, (uint64_t)v22);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    sub_2320167F8(v22, *(_QWORD *)(v4 + 56) + v18);
    result = v17;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_2320A500C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[4];
  int v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;

  v4 = sub_2321FDFD8();
  v51 = *(_QWORD *)(v4 - 8);
  v52 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v50 = &v42[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_2321FDEC4();
  v49 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v42[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v44 = v2;
  v9 = *v2;
  sub_232016C88();
  v10 = sub_2322019BC();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    result = swift_release();
    v39 = v44;
LABEL_42:
    *v39 = v11;
    return result;
  }
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v46 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v45 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  v48 = v9;
  result = swift_retain();
  v18 = 0;
  v43 = a2;
  v19 = 16;
  if ((a2 & 1) != 0)
    v19 = 32;
  v47 = v19;
  v20 = v19;
  while (1)
  {
    if (v15)
    {
      v22 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v23 = v22 | (v18 << 6);
      goto LABEL_24;
    }
    v24 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v24 >= v45)
    {
      v40 = v48;
      swift_release();
      v39 = v44;
      v25 = v46;
      if ((v43 & 1) != 0)
      {
LABEL_37:
        v41 = 1 << *(_BYTE *)(v40 + 32);
        if (v41 >= 64)
          bzero(v25, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v25 = -1 << v41;
        *(_QWORD *)(v40 + 16) = 0;
      }
LABEL_41:
      result = swift_release();
      goto LABEL_42;
    }
    v25 = v46;
    v26 = v46[v24];
    ++v18;
    if (!v26)
    {
      v18 = v24 + 1;
      if (v24 + 1 >= v45)
        goto LABEL_34;
      v26 = v46[v18];
      if (!v26)
        break;
    }
LABEL_23:
    v15 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v18 << 6);
LABEL_24:
    v28 = v48;
    v29 = *(_QWORD *)(v49 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v49 + v20))(v8, *(_QWORD *)(v48 + 48) + v29 * v23, v6);
    v30 = *(_QWORD *)(v28 + 56);
    v31 = *(_QWORD *)(v51 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v51 + v20))(v50, v30 + v31 * v23, v52);
    sub_2320A099C(&qword_2541B69E8, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FE20], MEMORY[0x24BE3FE38]);
    result = sub_232200DF8();
    v32 = -1 << *(_BYTE *)(v11 + 32);
    v33 = result & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v16 + 8 * (v33 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v16 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v16 + 8 * v34);
      }
      while (v38 == -1);
      v21 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v16 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v49 + 32))(*(_QWORD *)(v11 + 48) + v29 * v21, v8, v6);
    result = (*(uint64_t (**)(unint64_t, _BYTE *, uint64_t))(v51 + 32))(*(_QWORD *)(v11 + 56) + v31 * v21, v50, v52);
    ++*(_QWORD *)(v11 + 16);
  }
  v27 = v24 + 2;
  if (v27 >= v45)
  {
LABEL_34:
    v40 = v48;
    swift_release();
    v39 = v44;
    if ((v43 & 1) != 0)
      goto LABEL_37;
    goto LABEL_41;
  }
  v26 = v46[v27];
  if (v26)
  {
    v18 = v27;
    goto LABEL_23;
  }
  while (1)
  {
    v18 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v18 >= v45)
      goto LABEL_34;
    v26 = v46[v18];
    ++v27;
    if (v26)
      goto LABEL_23;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_2320A540C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t *v41;
  int64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;

  v3 = v2;
  v45 = sub_2321FFEA4();
  v5 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  sub_232025570();
  v9 = sub_2322019BC();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_40;
  v41 = v2;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v43 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v42 = (unint64_t)(v11 + 63) >> 6;
  v15 = a2;
  v16 = v9 + 64;
  result = swift_retain();
  v18 = 0;
  v40 = v15;
  v19 = 16;
  if ((v15 & 1) != 0)
    v19 = 32;
  v44 = v19;
  while (1)
  {
    if (v14)
    {
      v21 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v22 = v21 | (v18 << 6);
      goto LABEL_24;
    }
    v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v42)
      break;
    v24 = v43;
    v25 = v43[v23];
    ++v18;
    if (!v25)
    {
      v18 = v23 + 1;
      if (v23 + 1 >= v42)
        goto LABEL_33;
      v25 = v43[v18];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v42)
        {
LABEL_33:
          swift_release();
          v3 = v41;
          if ((v40 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = v43[v26];
        if (!v25)
        {
          while (1)
          {
            v18 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v18 >= v42)
              goto LABEL_33;
            v25 = v43[v18];
            ++v26;
            if (v25)
              goto LABEL_23;
          }
        }
        v18 = v26;
      }
    }
LABEL_23:
    v14 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_24:
    v27 = *(_QWORD *)(v8 + 56);
    v28 = v8;
    v29 = *(_BYTE *)(*(_QWORD *)(v8 + 48) + v22);
    v30 = *(_QWORD *)(v5 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + v44))(v7, v27 + v30 * v22, v45);
    sub_232201B78();
    sub_23220021C();
    sub_232200F3C();
    swift_bridgeObjectRelease();
    result = sub_232201B9C();
    v31 = -1 << *(_BYTE *)(v10 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v16 + 8 * (v32 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v16 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v16 + 8 * v33);
      }
      while (v37 == -1);
      v20 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v16 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    *(_BYTE *)(*(_QWORD *)(v10 + 48) + v20) = v29;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 56) + v30 * v20, v7, v45);
    ++*(_QWORD *)(v10 + 16);
    v8 = v28;
  }
  swift_release();
  v3 = v41;
  v24 = v43;
  if ((v40 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v8 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_2320A5794(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  _OWORD v36[2];

  v3 = v2;
  v5 = *v2;
  sub_2320A802C(0, qword_255F9DED8);
  v6 = a2;
  v7 = sub_2322019BC();
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v35 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v34 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v14 << 6);
      }
      else
      {
        v19 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v19 >= v34)
          goto LABEL_34;
        v20 = v35[v19];
        ++v14;
        if (!v20)
        {
          v14 = v19 + 1;
          if (v19 + 1 >= v34)
            goto LABEL_34;
          v20 = v35[v14];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v34)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((v6 & 1) != 0)
              {
                v33 = 1 << *(_BYTE *)(v5 + 32);
                if (v33 >= 64)
                  bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v35 = -1 << v33;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v20 = v35[v21];
            if (!v20)
            {
              while (1)
              {
                v14 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_41;
                if (v14 >= v34)
                  goto LABEL_34;
                v20 = v35[v14];
                ++v21;
                if (v20)
                  goto LABEL_21;
              }
            }
            v14 = v21;
          }
        }
LABEL_21:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v14 << 6);
      }
      v22 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
      v24 = *v22;
      v23 = v22[1];
      v25 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v18);
      if ((v6 & 1) != 0)
      {
        sub_232015B58(v25, v36);
      }
      else
      {
        sub_232015B68((uint64_t)v25, (uint64_t)v36);
        swift_bridgeObjectRetain();
      }
      sub_232201B78();
      sub_232200F3C();
      result = sub_232201B9C();
      v26 = -1 << *(_BYTE *)(v8 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v12 + 8 * v28);
        }
        while (v32 == -1);
        v15 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      v16 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v15);
      *v16 = v24;
      v16[1] = v23;
      result = (uint64_t)sub_232015B58(v36, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v15));
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v3 = v8;
  return result;
}

uint64_t sub_2320A5AB4(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  int v43;
  char *v44;
  uint64_t v45;

  v3 = v2;
  v45 = sub_2321FDC6C();
  v5 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v44 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  sub_2320A7FC8();
  v43 = a2;
  v8 = sub_2322019BC();
  v9 = v8;
  if (*(_QWORD *)(v7 + 16))
  {
    v40 = v2;
    v10 = 1 << *(_BYTE *)(v7 + 32);
    v11 = *(_QWORD *)(v7 + 64);
    v42 = (_QWORD *)(v7 + 64);
    if (v10 < 64)
      v12 = ~(-1 << v10);
    else
      v12 = -1;
    v13 = v12 & v11;
    v41 = (unint64_t)(v10 + 63) >> 6;
    v14 = v8 + 64;
    result = swift_retain();
    v16 = 0;
    while (1)
    {
      if (v13)
      {
        v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v20 = v19 | (v16 << 6);
      }
      else
      {
        v21 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v41)
          goto LABEL_34;
        v22 = v42[v21];
        ++v16;
        if (!v22)
        {
          v16 = v21 + 1;
          if (v21 + 1 >= v41)
            goto LABEL_34;
          v22 = v42[v16];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v41)
            {
LABEL_34:
              swift_release();
              v3 = v40;
              if ((v43 & 1) != 0)
              {
                v38 = 1 << *(_BYTE *)(v7 + 32);
                if (v38 >= 64)
                  bzero(v42, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v42 = -1 << v38;
                *(_QWORD *)(v7 + 16) = 0;
              }
              break;
            }
            v22 = v42[v23];
            if (!v22)
            {
              while (1)
              {
                v16 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v16 >= v41)
                  goto LABEL_34;
                v22 = v42[v16];
                ++v23;
                if (v22)
                  goto LABEL_21;
              }
            }
            v16 = v23;
          }
        }
LABEL_21:
        v13 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v16 << 6);
      }
      v24 = *(_QWORD *)(v7 + 56);
      v25 = v7;
      v26 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * v20);
      v28 = *v26;
      v27 = v26[1];
      v29 = *(_QWORD *)(v5 + 72);
      v30 = v24 + v29 * v20;
      if ((v43 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v44, v30, v45);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v44, v30, v45);
        swift_bridgeObjectRetain();
      }
      sub_232201B78();
      sub_232200F3C();
      result = sub_232201B9C();
      v31 = -1 << *(_BYTE *)(v9 + 32);
      v32 = result & ~v31;
      v33 = v32 >> 6;
      if (((-1 << v32) & ~*(_QWORD *)(v14 + 8 * (v32 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v14 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v34 = 0;
        v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v36 = v33 == v35;
          if (v33 == v35)
            v33 = 0;
          v34 |= v36;
          v37 = *(_QWORD *)(v14 + 8 * v33);
        }
        while (v37 == -1);
        v17 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(_QWORD *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v17);
      *v18 = v28;
      v18[1] = v27;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v9 + 56) + v29 * v17, v44, v45);
      ++*(_QWORD *)(v9 + 16);
      v7 = v25;
    }
  }
  result = swift_release();
  *v3 = v9;
  return result;
}

uint64_t sub_2320A5E18(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[2];
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v3 = v2;
  v5 = *v2;
  sub_2320A802C(0, &qword_255F9DEC8);
  v6 = sub_2322019BC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v11)
        goto LABEL_34;
      v23 = *(_QWORD *)(v36 + 8 * v14);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v14 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v23 = *(_QWORD *)(v36 + 8 * v14);
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v14 = v24;
      }
    }
LABEL_21:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    v25 = *(_QWORD *)(v5 + 48) + 40 * v20;
    if ((a2 & 1) != 0)
    {
      v26 = *(_OWORD *)v25;
      v27 = *(_OWORD *)(v25 + 16);
      v40 = *(_QWORD *)(v25 + 32);
      v38 = v26;
      v39 = v27;
      sub_232015B58((_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_232083F04(v25, (uint64_t)&v38);
      sub_232015B68(*(_QWORD *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    result = sub_23220183C();
    v28 = -1 << *(_BYTE *)(v7 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = *(_QWORD *)(v7 + 48) + 40 * v15;
    v17 = v38;
    v18 = v39;
    *(_QWORD *)(v16 + 32) = v40;
    *(_OWORD *)v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    result = (uint64_t)sub_232015B58(v37, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v15));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2320A614C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  sub_2320A802C(0, &qword_255F9DEC0);
  v42 = a2;
  v6 = sub_2322019BC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = *(_QWORD *)(v41 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v25 = *(_QWORD *)(v41 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v31);
    v36 = *v35;
    v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_232201B78();
    sub_232200F3C();
    result = sub_232201B9C();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v20 = v36;
    v20[1] = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2320A6488(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  void *v22;
  __int128 *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34[2];

  v3 = v2;
  v5 = *v2;
  sub_2320A7ECC();
  v6 = sub_2322019BC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v33 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v11)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v33 + 8 * v18);
    ++v14;
    if (!v20)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_34;
      v20 = *(_QWORD *)(v33 + 8 * v14);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v20 = *(_QWORD *)(v33 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v14 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v20 = *(_QWORD *)(v33 + 8 * v14);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v14 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    v22 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v17);
    v23 = (__int128 *)(*(_QWORD *)(v5 + 56) + 40 * v17);
    if ((a2 & 1) != 0)
    {
      sub_2320167F8(v23, (uint64_t)v34);
    }
    else
    {
      sub_23201B304((uint64_t)v23, (uint64_t)v34);
      v24 = v22;
    }
    result = sub_232201698();
    v25 = -1 << *(_BYTE *)(v7 + 32);
    v26 = result & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v12 + 8 * v27);
      }
      while (v31 == -1);
      v15 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v22;
    result = sub_2320167F8(v34, *(_QWORD *)(v7 + 56) + 40 * v15);
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v19 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v32 = 1 << *(_BYTE *)(v5 + 32);
  if (v32 >= 64)
    bzero(v19, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v32;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2320A6760(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_232201998();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_232201998();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_2320A7E08();
        sub_2320A099C(&qword_255F9DEB8, 255, (uint64_t (*)(uint64_t))sub_2320A7E08, MEMORY[0x24BEE12E0]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_2320E5D80(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_232003E9C(0, (unint64_t *)&qword_2541B74A0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_2322019E0();
  __break(1u);
  return result;
}

uint64_t sub_2320A6980(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  uint64_t *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_232201998();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_232201998();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_2320057B8(0, &qword_2541B54E8, type metadata accessor for SummaryModelConfiguration, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
        sub_2320A7E6C();
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_2320E5DD4(v16, i, a3);
          v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for SummaryModelConfiguration(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_2322019E0();
  __break(1u);
  return result;
}

uint64_t sub_2320A6B8C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_232201998();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_232201998();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_23202587C();
        sub_2320A099C(&qword_255F9DEA8, 255, (uint64_t (*)(uint64_t))sub_23202587C, MEMORY[0x24BEE12E0]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_2320E5D28(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_232003E9C(0, &qword_255F9C078);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_2322019E0();
  __break(1u);
  return result;
}

uint64_t *sub_2320A6DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v55 = a4;
  v56 = a1;
  v49 = a3;
  v52 = a2;
  v4 = sub_2321FDC6C();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v53 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v50 = (char *)&v39 - v7;
  v51 = sub_2321FFC4C();
  v48 = *(_QWORD *)(v51 - 8);
  v8 = MEMORY[0x24BDAC7A8](v51);
  v47 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v39 - v10;
  v54 = sub_232200024();
  v42 = *(_QWORD *)(v54 - 8);
  v12 = v42;
  MEMORY[0x24BDAC7A8](v54);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = v14;
  v15 = sub_2321FFE08();
  v16 = *(_QWORD *)(v15 - 8);
  v45 = v15;
  v46 = v16;
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = v18;
  v19 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = v21;
  v22 = sub_2321FFF1C();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v44 = (char *)&v39 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v39 - v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))((char *)&v39 - v26, v49, v22);
  sub_23200054C(v56, (uint64_t)v21, type metadata accessor for SummariesFullProfileExecutor.Request);
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v29 = v52;
  v28(v18, v52, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v55, v54);
  sub_2321FFFE8();
  v30 = (uint64_t)v50;
  sub_2321FFC40();
  v31 = *(void (**)(char *, uint64_t))(v48 + 8);
  v32 = v51;
  v31(v11, v51);
  v33 = v47;
  sub_2321FFDA8();
  v34 = (uint64_t)v53;
  sub_2321FFC40();
  v31(v33, v32);
  type metadata accessor for StatisticsTrendSharableModelStep();
  v35 = (uint64_t *)swift_allocObject();
  v36 = (uint64_t)v44;
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v44, v27, v22);
  v37 = sub_2320A7894((uint64_t)v43, (uint64_t)v41, v36, (uint64_t)v40, v30, v34, v35);
  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v55, v54);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v27, v22);
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v29, v45);
  sub_232002CEC(v56, type metadata accessor for SummariesFullProfileExecutor.Request);
  return v37;
}

uint64_t *sub_2320A7100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(void);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(void);
  char *v54;
  uint64_t (*v55)(uint64_t, uint64_t, uint64_t);
  int v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;
  int v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t (*v81)(uint64_t);
  uint64_t v82;
  void (*v83)(char *, uint64_t);
  char *v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(void);
  uint64_t v89;
  char *v90;
  char *v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;

  v103 = a7;
  v109 = a6;
  v110 = a5;
  v115 = a2;
  v112 = a1;
  v8 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  MEMORY[0x24BDAC7A8](v8);
  v102 = (uint64_t)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = sub_2321FFE08();
  v98 = *(_QWORD *)(v111 - 8);
  v10 = MEMORY[0x24BDAC7A8](v111);
  v101 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v97 = (char *)&v85 - v12;
  sub_2320057B8(0, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v96 = (uint64_t)&v85 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v89 = (uint64_t)&v85 - v16;
  v87 = sub_2321FDC6C();
  v113 = *(_QWORD *)(v87 - 8);
  v17 = MEMORY[0x24BDAC7A8](v87);
  v100 = (char *)&v85 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v99 = (char *)&v85 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v108 = (char *)&v85 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v114 = (char *)&v85 - v23;
  v105 = (_QWORD *)sub_2321FFC4C();
  v24 = *(v105 - 1);
  MEMORY[0x24BDAC7A8](v105);
  v26 = (char *)&v85 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_232200024();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v93 = (char *)&v85 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v90 = (char *)&v85 - v32;
  MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)&v85 - v33;
  v35 = sub_2321FFF1C();
  v36 = MEMORY[0x24BDAC7A8](v35);
  v91 = (char *)&v85 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v36);
  v94 = v38;
  v39 = *(void (**)(void))(v38 + 32);
  v92 = (char *)&v85 - v40;
  v95 = v41;
  v39();
  v104 = a4;
  sub_2321FFF34();
  sub_2320057B8(0, &qword_2541B57F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ABE8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v42 = sub_2321FFC94();
  v43 = *(_QWORD *)(v42 - 8);
  v44 = (*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_232210D40;
  v46 = v45 + v44;
  v47 = v24;
  v48 = v105;
  v49 = v42;
  v50 = v87;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v43 + 104))(v46, *MEMORY[0x24BE4ABD0], v49);
  (*(void (**)(char *, _QWORD, _QWORD *))(v47 + 104))(v26, *MEMORY[0x24BE4A9F8], v48);
  sub_23220000C();
  v51 = v89;
  sub_232016080(v110, v89, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  v52 = v28;
  v53 = *(void (**)(void))(v28 + 16);
  v54 = v90;
  v107 = v34;
  v88 = v53;
  v53();
  v55 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v113 + 48);
  v56 = v55(v51, 1, v50);
  v106 = v27;
  v86 = v47;
  v85 = v26;
  if (v56 == 1)
  {
    sub_2321FFFE8();
    sub_2321FFC40();
    (*(void (**)(char *, _QWORD *))(v47 + 8))(v26, v48);
    v90 = *(char **)(v52 + 8);
    ((void (*)(char *, uint64_t))v90)(v54, v27);
    sub_232016D88(v51, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    v57 = v113;
  }
  else
  {
    v90 = *(char **)(v52 + 8);
    ((void (*)(char *, uint64_t))v90)(v54, v27);
    v57 = v113;
    (*(void (**)(char *, uint64_t, uint64_t))(v113 + 32))(v114, v51, v50);
  }
  v58 = v96;
  sub_232016080(v109, v96, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  v59 = v97;
  v60 = v98;
  v61 = *(void (**)(char *, uint64_t, uint64_t))(v98 + 16);
  v62 = v111;
  v61(v97, v115, v111);
  v63 = v55(v58, 1, v50);
  v64 = v108;
  if (v63 == 1)
  {
    v65 = v85;
    sub_2321FFDA8();
    sub_2321FFC40();
    (*(void (**)(char *, _QWORD *))(v86 + 8))(v65, v105);
    v105 = *(_QWORD **)(v60 + 8);
    ((void (*)(char *, uint64_t))v105)(v59, v62);
    sub_232016D88(v58, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  }
  else
  {
    v105 = *(_QWORD **)(v60 + 8);
    ((void (*)(char *, uint64_t))v105)(v59, v62);
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v64, v58, v50);
  }
  v66 = v62;
  v67 = v57;
  v68 = v64;
  v69 = v50;
  v70 = v102;
  sub_23200054C(v112, v102, type metadata accessor for SummariesFullProfileExecutor.Request);
  v71 = (uint64_t)v101;
  v61(v101, v115, v66);
  v72 = (uint64_t)v93;
  ((void (*)(char *, char *, uint64_t))v88)(v93, v107, v106);
  v73 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
  v74 = (uint64_t)v99;
  v73(v99, v114, v69);
  v75 = (uint64_t)v100;
  v73(v100, v68, v69);
  v76 = v94;
  v77 = (uint64_t)v91;
  v78 = v92;
  v79 = v95;
  (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v91, v92, v95);
  v80 = sub_2320A7894(v70, v71, v77, v72, v74, v75, v103);
  v81 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  sub_232016D88(v109, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  sub_232016D88(v110, &qword_2541B7618, v81);
  v82 = sub_2321FFF40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 8))(v104, v82);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v78, v79);
  ((void (*)(uint64_t, uint64_t))v105)(v115, v111);
  sub_232002CEC(v112, type metadata accessor for SummariesFullProfileExecutor.Request);
  v83 = *(void (**)(char *, uint64_t))(v113 + 8);
  v83(v108, v69);
  v83(v114, v69);
  ((void (*)(char *, uint64_t))v90)(v107, v106);
  return v80;
}

uint64_t *sub_2320A7894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t inited;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  unint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t *v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char v58[16];
  uint64_t v59;
  unint64_t v60;
  uint64_t v61[6];

  v46 = *a7;
  v52 = type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind(0);
  MEMORY[0x24BDAC7A8](v52);
  v55 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_2321FD8B8();
  v44 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_2321FFF1C();
  v61[3] = v17;
  v61[4] = MEMORY[0x24BE4B540];
  v18 = sub_2320251BC(v61);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v18, a3, v17);
  v57 = a1;
  sub_23200054C(a1, (uint64_t)a7 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_request, type metadata accessor for SummariesFullProfileExecutor.Request);
  v19 = (char *)a7 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_configuration;
  v20 = sub_2321FFE08();
  v51 = *(_QWORD *)(v20 - 8);
  v48 = *(void (**)(char *, uint64_t, uint64_t))(v51 + 16);
  v48(v19, a2, v20);
  sub_23201B304((uint64_t)v61, (uint64_t)a7 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_trendAnalysisEngine);
  v21 = (char *)a7 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_statisticsQueryConfiguration;
  v22 = sub_232200024();
  v49 = *(_QWORD *)(v22 - 8);
  v23 = *(void (**)(char *, uint64_t))(v49 + 16);
  v50 = v22;
  v23(v21, a4);
  v24 = (char *)a7 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_anchorDate;
  v25 = sub_2321FDC6C();
  v47 = *(_QWORD *)(v25 - 8);
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 16);
  v54 = a5;
  v26(v24, a5, v25);
  v26((char *)a7 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_endingDate, a6, v25);
  v53 = a6;
  v56 = a4;
  sub_232143980(a6, a4, v46, (uint64_t)v16);
  (*(void (**)(uint64_t, char *, uint64_t))(v44 + 32))((uint64_t)a7 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_queryDateInterval, v16, v45);
  v27 = sub_2321FFD9C();
  v59 = a2;
  v28 = sub_23209C958((void (*)(_QWORD))sub_2320A7D28, (uint64_t)v58, v27);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v28 + 16))
  {
    sub_232025570();
    v29 = sub_2322019C8();
  }
  else
  {
    v29 = MEMORY[0x24BEE4B00];
  }
  v60 = v29;
  v30 = swift_bridgeObjectRetain();
  sub_2320A3C80(v30, 1, &v60);
  swift_bridgeObjectRelease();
  *(uint64_t *)((char *)a7 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_engineParameters) = v60;
  sub_232000608(0, (unint64_t *)&qword_2541B78C8, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232210D20;
  v32 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  v33 = v57;
  v34 = *(void **)(v57 + *(int *)(v32 + 28));
  *(_QWORD *)(inited + 32) = v34;
  v60 = inited;
  sub_232201050();
  v35 = v60;
  v36 = (uint64_t)v55;
  v48(v55, a2, v20);
  swift_storeEnumTagMultiPayload();
  v37 = v34;
  v38 = sub_2320F7D00(v35, v36, 1);
  v40 = v39;
  swift_bridgeObjectRelease();
  v41 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
  v41(v53, v25);
  v41(v54, v25);
  (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v56, v50);
  sub_232016AFC((uint64_t)v61);
  sub_232002CEC(v33, type metadata accessor for SummariesFullProfileExecutor.Request);
  sub_232002CEC(v36, type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind);
  (*(void (**)(uint64_t, uint64_t))(v51 + 8))(a2, v20);
  v42 = (uint64_t *)((char *)a7 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_uniqueIdentifier);
  *v42 = v38;
  v42[1] = v40;
  return a7;
}

uint64_t sub_2320A7D28@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_2320DCD24(a1, a2);
}

void sub_2320A7D40(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_255F9DEA0)
  {
    v2 = sub_232003E9C(255, &qword_2541B0D68);
    v5 = type metadata accessor for MostRecentSampleCurrentValueSharableModelStep(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_255F9DEA0);
  }
}

uint64_t sub_2320A7DA8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_232016AFC(v0 + 32);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2320A7DEC(uint64_t a1)
{
  uint64_t v1;

  return sub_23209F33C(a1, *(_QWORD *)(v1 + 24), (_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), *(void (**)(char *, uint64_t))(v1 + 96), *(_QWORD *)(v1 + 104), *(double *)(v1 + 16));
}

void sub_2320A7E08()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9DEB0)
  {
    sub_232003E9C(255, (unint64_t *)&qword_2541B74A0);
    v0 = sub_232201080();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9DEB0);
  }
}

unint64_t sub_2320A7E6C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B54F0;
  if (!qword_2541B54F0)
  {
    sub_2320057B8(255, &qword_2541B54E8, type metadata accessor for SummaryModelConfiguration, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_2541B54F0);
  }
  return result;
}

void sub_2320A7ECC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B5758)
  {
    sub_232003E9C(255, (unint64_t *)&qword_2541B74A0);
    sub_232016A8C(255, (unint64_t *)&qword_2541B28F0);
    sub_23207CE58();
    v0 = sub_2322019D4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B5758);
  }
}

void sub_2320A7F64()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B28F8)
  {
    sub_232016A8C(255, (unint64_t *)&qword_2541B28F0);
    v0 = sub_2322016F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B28F8);
  }
}

void sub_2320A7FC8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9DED0)
  {
    sub_2321FDC6C();
    v0 = sub_2322019D4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9DED0);
  }
}

void sub_2320A802C(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_2322019D4();
    if (!v4)
      atomic_store(v3, a2);
  }
}

ValueMetadata *type metadata accessor for SummariesFullProfileExecutor.StepFactory()
{
  return &type metadata for SummariesFullProfileExecutor.StepFactory;
}

char *sub_2320A8088(char *a1, char **a2, uint64_t a3)
{
  char *v4;
  int v5;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  char *v23;
  uint64_t v24;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = &v8[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    v7 = *a2;
    if (*a2 == (char *)1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    else
    {
      v9 = a2[1];
      *(_QWORD *)a1 = v7;
      *((_QWORD *)a1 + 1) = v9;
      v10 = v7;
      v11 = v9;
    }
    v12 = a2[2];
    if (v12 == (char *)1)
    {
      *((_OWORD *)v4 + 1) = *((_OWORD *)a2 + 1);
    }
    else
    {
      v13 = a2[3];
      *((_QWORD *)v4 + 2) = v12;
      *((_QWORD *)v4 + 3) = v13;
      v14 = v12;
      v15 = v13;
    }
    v16 = a2[4];
    *((_QWORD *)v4 + 4) = v16;
    v17 = *(int *)(a3 + 28);
    v18 = &v4[v17];
    v19 = (char *)a2 + v17;
    v20 = sub_2321FDDD4();
    v21 = *(_QWORD *)(v20 - 8);
    v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    v23 = v16;
    if (v22(v19, 1, v20))
    {
      sub_2320057B8(0, &qword_2541B2880, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
  }
  return v4;
}

uint64_t sub_2320A81F0(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  if (*(_QWORD *)a1 != 1)
  {

  }
  v4 = *(void **)(a1 + 16);
  if (v4 != (void *)1)
  {

  }
  v5 = a1 + *(int *)(a2 + 28);
  v6 = sub_2321FDDD4();
  v7 = *(_QWORD *)(v6 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  return result;
}

uint64_t sub_2320A829C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(const void *, uint64_t, uint64_t);
  id v21;
  uint64_t v22;

  v6 = *(void **)a2;
  if (*(_QWORD *)a2 == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v7 = *(void **)(a2 + 8);
    *(_QWORD *)a1 = v6;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = v6;
    v9 = v7;
  }
  v10 = *(void **)(a2 + 16);
  if (v10 == (void *)1)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  }
  else
  {
    v11 = *(void **)(a2 + 24);
    *(_QWORD *)(a1 + 16) = v10;
    *(_QWORD *)(a1 + 24) = v11;
    v12 = v10;
    v13 = v11;
  }
  v14 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v14;
  v15 = *(int *)(a3 + 28);
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  v18 = sub_2321FDDD4();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48);
  v21 = v14;
  if (v20(v17, 1, v18))
  {
    sub_2320057B8(0, &qword_2541B2880, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  return a1;
}

_QWORD *sub_2320A83D8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t, uint64_t);
  int v33;
  int v34;
  uint64_t v35;

  v6 = (void *)*a1;
  v7 = *(void **)a2;
  if (*a1 == 1)
  {
    if (v7 != (void *)1)
    {
      *a1 = v7;
      v8 = *(void **)(a2 + 8);
      a1[1] = v8;
      v9 = v7;
      v10 = v8;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v7 == (void *)1)
  {
    sub_232002CEC((uint64_t)a1, (uint64_t (*)(_QWORD))sub_2320A85F8);
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  *a1 = v7;
  v11 = v7;

  v12 = (void *)a1[1];
  v13 = *(void **)(a2 + 8);
  a1[1] = v13;
  v14 = v13;

LABEL_8:
  v15 = (void *)a1[2];
  v16 = *(void **)(a2 + 16);
  if (v15 == (void *)1)
  {
    if (v16 != (void *)1)
    {
      a1[2] = v16;
      v17 = *(void **)(a2 + 24);
      a1[3] = v17;
      v18 = v16;
      v19 = v17;
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v16 == (void *)1)
  {
    sub_232002CEC((uint64_t)(a1 + 2), (uint64_t (*)(_QWORD))sub_2320A8668);
LABEL_13:
    *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
    goto LABEL_15;
  }
  a1[2] = v16;
  v20 = v16;

  v21 = (void *)a1[3];
  v22 = *(void **)(a2 + 24);
  a1[3] = v22;
  v23 = v22;

LABEL_15:
  v24 = (void *)a1[4];
  v25 = *(void **)(a2 + 32);
  a1[4] = v25;
  v26 = v25;

  v27 = *(int *)(a3 + 28);
  v28 = (char *)a1 + v27;
  v29 = (char *)(a2 + v27);
  v30 = sub_2321FDDD4();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
  v33 = v32(v28, 1, v30);
  v34 = v32(v29, 1, v30);
  if (!v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 24))(v28, v29, v30);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v30);
    goto LABEL_20;
  }
  if (v34)
  {
LABEL_20:
    sub_2320057B8(0, &qword_2541B2880, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  return a1;
}

void sub_2320A85F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_2541B6D78)
  {
    v2 = sub_232003E9C(255, &qword_2541B0CD0);
    v5 = type metadata accessor for SharableModelAudiencePair(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_2541B6D78);
  }
}

uint64_t type metadata accessor for SharableModelAudiencePair(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_232043E5C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SharableModelAudiencePair);
}

void sub_2320A8668(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_2541B6D70)
  {
    v2 = sub_232003E9C(255, &qword_2541B0CB8);
    v5 = type metadata accessor for SharableModelAudiencePair(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_2541B6D70);
  }
}

uint64_t sub_2320A86CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(int *)(a3 + 28);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = sub_2321FDDD4();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    sub_2320057B8(0, &qword_2541B2880, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

_QWORD *sub_2320A87A4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;

  v6 = (void *)*a1;
  if (*a1 == 1)
    goto LABEL_4;
  if (*(_QWORD *)a2 == 1)
  {
    sub_232002CEC((uint64_t)a1, (uint64_t (*)(_QWORD))sub_2320A85F8);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_6;
  }
  *a1 = *(_QWORD *)a2;

  v7 = (void *)a1[1];
  a1[1] = *(_QWORD *)(a2 + 8);

LABEL_6:
  v8 = (void *)a1[2];
  v9 = *(_QWORD *)(a2 + 16);
  if (v8 == (void *)1)
  {
LABEL_9:
    *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
    goto LABEL_11;
  }
  if (v9 == 1)
  {
    sub_232002CEC((uint64_t)(a1 + 2), (uint64_t (*)(_QWORD))sub_2320A8668);
    goto LABEL_9;
  }
  a1[2] = v9;

  v10 = (void *)a1[3];
  a1[3] = *(_QWORD *)(a2 + 24);

LABEL_11:
  v11 = (void *)a1[4];
  a1[4] = *(_QWORD *)(a2 + 32);

  v12 = *(int *)(a3 + 28);
  v13 = (char *)a1 + v12;
  v14 = (char *)(a2 + v12);
  v15 = sub_2321FDDD4();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_16;
  }
  if (v19)
  {
LABEL_16:
    sub_2320057B8(0, &qword_2541B2880, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t sub_2320A8970()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2320A897C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    sub_2320057B8(0, &qword_2541B2880, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v9);
  }
}

uint64_t sub_2320A8A1C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2320A8A28(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 32) = a2;
  }
  else
  {
    sub_2320057B8(0, &qword_2541B2880, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

void sub_2320A8AB4()
{
  unint64_t v0;

  sub_2320057B8(319, &qword_2541B2880, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_2320A8B4C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_2320A8B54()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2322016F8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2320A8BC0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  uint64_t v13;
  unsigned int (*v14)(uint64_t *, uint64_t, uint64_t);
  _QWORD *v15;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84))
    v7 = *(_QWORD *)(v6 + 64);
  else
    v7 = *(_QWORD *)(v6 + 64) + 1;
  v8 = *(_DWORD *)(v6 + 80);
  v9 = ~v8;
  v10 = v7 + v8;
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || (v10 & v9) + v7 > 0x18)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v8 + 16) & v9));
    swift_retain();
  }
  else
  {
    v14 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v6 + 48);
    if (v14(a2, 1, *(_QWORD *)(a3 + 16)))
    {
      memcpy(a1, a2, v7);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    }
    v15 = (_QWORD *)(((unint64_t)a2 + v10) & v9);
    if (v14(v15, 1, v5))
    {
      memcpy((void *)(((unint64_t)a1 + v10) & v9), v15, v7);
    }
    else
    {
      (*(void (**)(unint64_t, _QWORD *, uint64_t))(v6 + 16))(((unint64_t)a1 + v10) & v9, v15, v5);
      (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(((unint64_t)a1 + v10) & v9, 0, 1, v5);
    }
  }
  return a1;
}

uint64_t sub_2320A8D1C(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(unint64_t, uint64_t, uint64_t);
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v4 + 48);
  if (!v5(a1, 1, v3))
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(a1, v3);
  v6 = *(_QWORD *)(v4 + 64) + a1;
  if (!*(_DWORD *)(v4 + 84))
    ++v6;
  v7 = (v6 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  result = v5(v7, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v4 + 8))(v7, v3);
  return result;
}

void *sub_2320A8DBC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(const void *, uint64_t, uint64_t);
  int v8;
  size_t v9;
  size_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48);
  if (v7(a2, 1, v5))
  {
    v8 = *(_DWORD *)(v6 + 84);
    v9 = *(_QWORD *)(v6 + 64);
    if (v8)
      v10 = *(_QWORD *)(v6 + 64);
    else
      v10 = v9 + 1;
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    v8 = *(_DWORD *)(v6 + 84);
    v9 = *(_QWORD *)(v6 + 64);
  }
  if (!v8)
    ++v9;
  v11 = *(unsigned __int8 *)(v6 + 80);
  v12 = (void *)(((unint64_t)a1 + v9 + v11) & ~v11);
  v13 = (const void *)(((unint64_t)a2 + v9 + v11) & ~v11);
  if (v7(v13, 1, v5))
  {
    memcpy(v12, v13, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v12, v13, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v12, 0, 1, v5);
  }
  return a1;
}

void *sub_2320A8EE0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;
  size_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  int v15;
  int v16;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
LABEL_10:
  if (*(_DWORD *)(v6 + 84))
    v11 = *(_QWORD *)(v6 + 64);
  else
    v11 = *(_QWORD *)(v6 + 64) + 1;
  v12 = *(unsigned __int8 *)(v6 + 80);
  v13 = (void *)(((unint64_t)a1 + v11 + v12) & ~v12);
  v14 = (void *)(((unint64_t)a2 + v11 + v12) & ~v12);
  v15 = v7(v13, 1, v5);
  v16 = v7(v14, 1, v5);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(v13, v14, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(v13, v5);
    goto LABEL_18;
  }
  if (v16)
  {
LABEL_18:
    memcpy(v13, v14, v11);
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v6 + 16))(v13, v14, v5);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v13, 0, 1, v5);
  return a1;
}

void *sub_2320A9088(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(const void *, uint64_t, uint64_t);
  int v8;
  size_t v9;
  size_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48);
  if (v7(a2, 1, v5))
  {
    v8 = *(_DWORD *)(v6 + 84);
    v9 = *(_QWORD *)(v6 + 64);
    if (v8)
      v10 = *(_QWORD *)(v6 + 64);
    else
      v10 = v9 + 1;
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    v8 = *(_DWORD *)(v6 + 84);
    v9 = *(_QWORD *)(v6 + 64);
  }
  if (!v8)
    ++v9;
  v11 = *(unsigned __int8 *)(v6 + 80);
  v12 = (void *)(((unint64_t)a1 + v9 + v11) & ~v11);
  v13 = (const void *)(((unint64_t)a2 + v9 + v11) & ~v11);
  if (v7(v13, 1, v5))
  {
    memcpy(v12, v13, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v12, v13, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v12, 0, 1, v5);
  }
  return a1;
}

void *sub_2320A91AC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;
  size_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  int v15;
  int v16;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
LABEL_10:
  if (*(_DWORD *)(v6 + 84))
    v11 = *(_QWORD *)(v6 + 64);
  else
    v11 = *(_QWORD *)(v6 + 64) + 1;
  v12 = *(unsigned __int8 *)(v6 + 80);
  v13 = (void *)(((unint64_t)a1 + v11 + v12) & ~v12);
  v14 = (void *)(((unint64_t)a2 + v11 + v12) & ~v12);
  v15 = v7(v13, 1, v5);
  v16 = v7(v14, 1, v5);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(v13, v14, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(v13, v5);
    goto LABEL_18;
  }
  if (v16)
  {
LABEL_18:
    memcpy(v13, v14, v11);
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v13, v14, v5);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v13, 0, 1, v5);
  return a1;
}

uint64_t sub_2320A9354(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v12;
  int v13;
  unsigned int v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = v5 - 1;
  if (!v5)
    v6 = 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v7;
  if (!a2)
    return 0;
  v8 = a2 - v6;
  if (a2 > v6)
  {
    v9 = ((v7 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + v7;
    v10 = 8 * v9;
    if (v9 > 3)
      goto LABEL_8;
    v12 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v12))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (v11)
        goto LABEL_15;
    }
    else
    {
      if (v12 <= 0xFF)
      {
        if (v12 < 2)
          goto LABEL_22;
LABEL_8:
        v11 = *(unsigned __int8 *)(a1 + v9);
        if (!*(_BYTE *)(a1 + v9))
          goto LABEL_22;
LABEL_15:
        v13 = (v11 - 1) << v10;
        if (v9 > 3)
          v13 = 0;
        if ((_DWORD)v9)
        {
          if (v9 > 3)
            LODWORD(v9) = 4;
          __asm { BR              X12 }
        }
        return v6 + v13 + 1;
      }
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (*(_WORD *)(a1 + v9))
        goto LABEL_15;
    }
  }
LABEL_22:
  if (v5 < 2)
    return 0;
  v15 = (*(uint64_t (**)(void))(v4 + 48))();
  if (v15 >= 2)
    return v15 - 1;
  else
    return 0;
}

void sub_2320A949C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  size_t v11;
  BOOL v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (!v8)
    v9 = 0;
  v10 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v10;
  v11 = ((v10 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)) + v10;
  v12 = a3 >= v9;
  v13 = a3 - v9;
  if (v13 != 0 && v12)
  {
    if (v11 > 3)
    {
      v6 = 1u;
      if (v9 < a2)
        goto LABEL_15;
      goto LABEL_22;
    }
    v14 = ((v13 + ~(-1 << (8 * v11))) >> (8 * v11)) + 1;
    if (HIWORD(v14))
    {
      v6 = 4u;
      if (v9 < a2)
      {
LABEL_15:
        v15 = ~v9 + a2;
        if (v11 < 4)
        {
          if ((_DWORD)v11)
          {
            v16 = v15 & ~(-1 << (8 * v11));
            bzero(a1, v11);
            if ((_DWORD)v11 == 3)
            {
              *a1 = v16;
              *((_BYTE *)a1 + 2) = BYTE2(v16);
            }
            else if ((_DWORD)v11 == 2)
            {
              *a1 = v16;
            }
            else
            {
              *(_BYTE *)a1 = v16;
            }
          }
        }
        else
        {
          bzero(a1, v11);
          *(_DWORD *)a1 = v15;
        }
        __asm { BR              X10 }
      }
LABEL_22:
      __asm { BR              X11 }
    }
    if (v14 >= 0x100)
      v6 = 2;
    else
      v6 = v14 > 1;
  }
  if (v9 < a2)
    goto LABEL_15;
  goto LABEL_22;
}

void sub_2320A9654()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_2320A965C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

char *sub_2320A9680(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  void *v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24[2];

  v24[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = sub_23220039C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (void *)objc_opt_self();
  v24[0] = 0;
  v7 = objc_msgSend(v6, sel_versionWithHealthStore_error_, a1, v24);
  v8 = v7;
  if (v24[0])
  {
    v9 = v24[0];

    swift_willThrow();
    sub_232200318();
    v10 = v9;
    v11 = sub_232200390();
    v12 = sub_2322012E4();
    if (os_log_type_enabled(v11, v12))
    {
      v22 = v2;
      v13 = swift_slowAlloc();
      v21 = v3;
      v14 = (uint8_t *)v13;
      v15 = (void *)swift_slowAlloc();
      v23 = (uint64_t)v10;
      v24[0] = v15;
      *(_DWORD *)v14 = 136315138;
      v20 = v14 + 4;
      sub_232002B9C();
      v16 = v10;
      v17 = sub_232200F00();
      v23 = sub_232013174(v17, v18, (uint64_t *)v24);
      sub_232201710();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v11, v12, "Failed to fetch ECG active algorithm version: %s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v15, -1, -1);
      MEMORY[0x2348FF468](v14, -1, -1);

      (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v22);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    swift_willThrow();
  }
  else if (v7)
  {
    v5 = (char *)objc_msgSend(v7, sel_integerValue);

  }
  else
  {
    return 0;
  }
  return v5;
}

void sub_2320A9918(void *a1, void *a2, void (*a3)(id, _QWORD), uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  void (*v38)(id, _QWORD);
  _OWORD v39[2];
  uint64_t v40;

  v5 = v4;
  sub_23201C800();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v37 - v14;
  v16 = sub_2321FDC6C();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_2320A9C44(a1);
  v37 = a4;
  v38 = a3;
  sub_232003E9C(0, &qword_2541AF0B8);
  v20 = objc_msgSend(a1, sel_privateClassification);
  v21 = objc_msgSend(a1, sel_endDate);
  sub_2321FDC30();

  v22 = HKCodableSummaryElectrocardiogramValue.init(algorithmVersion:classification:timestamp:averageHeartRate:)((uint64_t)v19, (uint64_t)v20, (uint64_t)v18, objc_msgSend(a1, sel_averageHeartRate));
  v23 = v5 + qword_2541BF5C8;
  v24 = sub_232200180();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v15, v23, v24);
  v25 = *MEMORY[0x24BE4AD70];
  v26 = sub_2321FFD78();
  v27 = *(_QWORD *)(v26 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 104))(v15, v25, v26);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v15, 0, 1, v26);
  v28 = v22;
  v29 = a2;
  v30 = objc_msgSend(v28, sel_data);
  if (v30)
  {
    v31 = v30;
    sub_232003E9C(0, &qword_2541B0CD0);
    v32 = sub_2321FDAD4();
    v34 = v33;

    sub_23200054C((uint64_t)v15, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_23201C800);
    v40 = 0;
    memset(v39, 0, sizeof(v39));
    v35 = sub_232015828(v32, v34, 8, (uint64_t)v13, (uint64_t)v29, 0, (uint64_t)v39);

    sub_232003ED4(v32, v34);
    sub_232002CEC((uint64_t)v15, (uint64_t (*)(_QWORD))sub_23201C800);
    v36 = v35;
    v38(v35, 0);

  }
  else
  {
    __break(1u);
  }
}

char *sub_2320A9C44(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(char *, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  char *v13;
  char v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  id v18;
  void *v19;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  _BYTE *v24;
  _QWORD v25[2];

  v5 = sub_23220039C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v25 - v10;
  v12 = sub_232016AD8((_QWORD *)(v1 + qword_255F9DF78), *(_QWORD *)(v1 + qword_255F9DF78 + 24));
  v13 = sub_2320A9680(*v12);
  if (!v2)
  {
    if ((v14 & 1) != 0)
    {
      sub_232200318();
      v15 = sub_232200390();
      v16 = sub_2322012FC();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v17 = 0;
        _os_log_impl(&dword_231FFB000, v15, v16, "No active algorithm version for current device, falling back to sample's algorithm version", v17, 2u);
        MEMORY[0x2348FF468](v17, -1, -1);
      }

      v3 = *(void (**)(char *, uint64_t))(v6 + 8);
      v3(v11, v5);
      v18 = objc_msgSend(a1, sel__algorithmVersion);
      if (v18)
      {
        v19 = v18;
        v3 = (void (*)(char *, uint64_t))objc_msgSend(v18, sel_integerValue);

      }
      else
      {
        sub_232200318();
        v21 = sub_232200390();
        v22 = sub_2322012F0();
        if (os_log_type_enabled(v21, v22))
        {
          v23 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v23 = 0;
          _os_log_impl(&dword_231FFB000, v21, v22, "Unexpectedly received nil algorithm version from sample", v23, 2u);
          MEMORY[0x2348FF468](v23, -1, -1);
        }

        v3(v9, v5);
        sub_2320AA1A4();
        swift_allocError();
        *v24 = 0;
        swift_willThrow();
      }
    }
    else
    {
      return v13;
    }
  }
  return (char *)v3;
}

uint64_t sub_2320A9E8C()
{
  uint64_t v0;

  return sub_232016AFC(v0 + qword_255F9DF78);
}

uint64_t sub_2320A9E9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_232002CEC(v0 + qword_2541BF5D0, type metadata accessor for SummariesFullProfileExecutor.Request);
  v1 = v0 + qword_2541BF5C8;
  v2 = sub_232200180();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_232016AFC(v0 + qword_255F9DF78);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ElectrocardiogramMostRecentSampleCurrentValueSharableModelStep()
{
  uint64_t result;

  result = qword_255F9DFA8;
  if (!qword_255F9DFA8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2320A9F58()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2320A9F98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t (*v12)(_QWORD);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  uint64_t v22;
  _QWORD v23[5];

  v22 = a2;
  v4 = sub_232200180();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v23[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v23[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void **)(a1 + 16);
  sub_23200054C(a1, (uint64_t)v10, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  v23[3] = &type metadata for HealthStoreElectrocardiogramAlgorithmVersionProvider;
  v23[4] = &off_250101478;
  v23[0] = v11;
  type metadata accessor for ElectrocardiogramMostRecentSampleCurrentValueSharableModelStep();
  v13 = swift_allocObject();
  v14 = sub_2320AA17C((uint64_t)v23, (uint64_t)&type metadata for HealthStoreElectrocardiogramAlgorithmVersionProvider);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (_QWORD *)((char *)&v23[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v17 + 16))(v16);
  v18 = *v16;
  v19 = (_QWORD *)(v13 + qword_255F9DF78);
  v19[3] = &type metadata for HealthStoreElectrocardiogramAlgorithmVersionProvider;
  v19[4] = &off_250101478;
  *v19 = v18;
  sub_232036BAC((uint64_t)v10, v13 + qword_2541BF5D0);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v13 + qword_2541BF5C8, v7, v4);
  v20 = v11;
  sub_232016AFC((uint64_t)v23);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v22, v4);
  sub_232002CEC(a1, type metadata accessor for SummariesFullProfileExecutor.Request);
  return v13;
}

uint64_t sub_2320AA17C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

unint64_t sub_2320AA1A4()
{
  unint64_t result;

  result = qword_255F9E088;
  if (!qword_255F9E088)
  {
    result = MEMORY[0x2348FF39C](&unk_232213E50, &type metadata for ElectrocardiogramMostRecentSampleCurrentValueSharableModelStep.VersionError);
    atomic_store(result, (unint64_t *)&qword_255F9E088);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ElectrocardiogramMostRecentSampleCurrentValueSharableModelStep.VersionError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2320AA234 + 4 * byte_232213D05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2320AA268 + 4 * asc_232213D00[v4]))();
}

uint64_t sub_2320AA268(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2320AA270(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2320AA278);
  return result;
}

uint64_t sub_2320AA284(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2320AA28CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2320AA290(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2320AA298(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ElectrocardiogramMostRecentSampleCurrentValueSharableModelStep.VersionError()
{
  return &type metadata for ElectrocardiogramMostRecentSampleCurrentValueSharableModelStep.VersionError;
}

ValueMetadata *type metadata accessor for HealthStoreElectrocardiogramAlgorithmVersionProvider()
{
  return &type metadata for HealthStoreElectrocardiogramAlgorithmVersionProvider;
}

unint64_t sub_2320AA2C8()
{
  unint64_t result;

  result = qword_255F9E090;
  if (!qword_255F9E090)
  {
    result = MEMORY[0x2348FF39C](&unk_232213E28, &type metadata for ElectrocardiogramMostRecentSampleCurrentValueSharableModelStep.VersionError);
    atomic_store(result, (unint64_t *)&qword_255F9E090);
  }
  return result;
}

uint64_t sub_2320AA30C(void *a1)
{
  id v2;
  void *v3;
  uint64_t v4;

  if (!objc_msgSend(a1, sel_hasNotificationIdentifier))
    return 0;
  v2 = objc_msgSend(a1, sel_notificationIdentifier);
  if (!v2)
    return 0;
  v3 = v2;
  v4 = sub_232200EC4();

  return v4;
}

uint64_t sub_2320AA384(void *a1, void *a2, uint64_t a3, uint64_t a4, int a5, void *a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  void *v26;
  uint64_t v27;
  __int128 v28;
  id v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  BOOL v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  void *v48;
  unint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  void *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  id v62;
  id v63;
  uint64_t (*v64)(void);
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD v76[2];
  uint64_t v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  _QWORD *v85;
  int v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  __int128 v107;

  v91 = a8;
  v86 = a5;
  v94 = a4;
  v96 = a3;
  v87 = a2;
  v97 = a9;
  sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v88 = *(_QWORD *)(v12 - 8);
  v89 = *(_QWORD *)(v88 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v90 = (uint64_t)v76 - v13;
  v85 = (_QWORD *)sub_2321FF52C();
  v84 = *(v85 - 1);
  MEMORY[0x24BDAC7A8](v85);
  v83 = (char *)v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23202F2A4();
  v95 = v15;
  v93 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v92 = (char *)v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320C34B0();
  v102 = v17;
  v100 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v98 = (char *)v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320C3638();
  v103 = v19;
  v101 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v99 = (char *)v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_2321FDCC0();
  v21 = *(_QWORD *)(v79 - 8);
  MEMORY[0x24BDAC7A8](v79);
  v23 = (char *)v76 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_23220039C();
  v80 = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81);
  v25 = (char *)v76 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory(0);
  v26 = (void *)sub_2322011C4();
  HKCodableSummaryTrendTileViewModel.coveredDateRange.getter();
  *(_QWORD *)&v107 = sub_2321D59A0(a6);
  *((_QWORD *)&v107 + 1) = v27;
  sub_232200F48();

  v28 = v107;
  sub_23220036C();
  v29 = a1;
  v105 = *((_QWORD *)&v28 + 1);
  swift_bridgeObjectRetain_n();
  v30 = v29;
  v31 = sub_232200390();
  v32 = sub_2322012FC();
  v33 = os_log_type_enabled(v31, v32);
  v104 = v28;
  if (v33)
  {
    v34 = swift_slowAlloc();
    v77 = swift_slowAlloc();
    *(_QWORD *)&v107 = v77;
    *(_DWORD *)v34 = 136315650;
    v106 = sub_232013174(0xD000000000000034, 0x8000000232213FA0, (uint64_t *)&v107);
    v78 = a7;
    sub_232201710();
    *(_WORD *)(v34 + 12) = 2080;
    v76[1] = v34 + 14;
    v35 = objc_msgSend(v30, sel_profileIdentifier);
    v36 = objc_msgSend(v35, sel_identifier);

    sub_2321FDCA8();
    v37 = sub_2321FDC84();
    v39 = v38;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v79);
    v106 = sub_232013174(v37, v39, (uint64_t *)&v107);
    sub_232201710();

    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 22) = 2080;
    v40 = v105;
    swift_bridgeObjectRetain();
    v41 = v104;
    v106 = sub_232013174(v104, v40, (uint64_t *)&v107);
    a7 = v78;
    sub_232201710();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_231FFB000, v31, v32, "[%s]_%s: [Trend Notification] Proceeding with notification for %s", (uint8_t *)v34, 0x20u);
    v42 = v77;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v42, -1, -1);
    MEMORY[0x2348FF468](v34, -1, -1);

    (*(void (**)(char *, uint64_t))(v80 + 8))(v25, v81);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v80 + 8))(v25, v81);
    v41 = v28;
  }
  v86 &= 1u;
  v43 = v84;
  v44 = v83;
  v45 = v85;
  (*(void (**)(char *, _QWORD, _QWORD *))(v84 + 104))(v83, *MEMORY[0x24BE44480], v85);
  sub_232000590(&qword_255F9E0A0, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory, (uint64_t)&unk_2322141E4);
  v46 = sub_2321FF0E8();
  (*(void (**)(char *, _QWORD *))(v43 + 8))(v44, v45);
  *(_QWORD *)&v107 = v46;
  v47 = (_QWORD *)swift_allocObject();
  v48 = v87;
  v47[2] = v30;
  v47[3] = v48;
  v47[4] = a7;
  v47[5] = v41;
  v49 = v105;
  v47[6] = v105;
  v85 = v30;
  swift_bridgeObjectRetain();
  v50 = v48;
  v51 = a7;
  sub_23220060C();
  sub_2320252A4();
  sub_23202D1C4(0);
  v52 = MEMORY[0x24BDB9AF8];
  sub_232000590(&qword_2541AF2D8, (uint64_t (*)(uint64_t))sub_2320252A4, MEMORY[0x24BDB9AF8]);
  sub_232000590(&qword_2541B58D0, (uint64_t (*)(uint64_t))sub_23202D1C4, v52);
  v53 = v92;
  sub_232200888();
  swift_release();
  swift_release();
  v54 = v90;
  sub_232016080(v91, v90, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8]);
  v55 = (*(unsigned __int8 *)(v88 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
  v56 = (v89 + v55 + 7) & 0xFFFFFFFFFFFFFFF8;
  v57 = (_QWORD *)swift_allocObject();
  v58 = v85;
  v59 = v104;
  v57[2] = v85;
  v57[3] = v59;
  v57[4] = v49;
  v57[5] = v51;
  sub_2320C38A8(v54, (uint64_t)v57 + v55);
  v60 = (char *)v57 + v56;
  v61 = v94;
  *(_QWORD *)v60 = v96;
  *((_QWORD *)v60 + 1) = v61;
  v60[16] = v86;
  v62 = v58;
  v63 = v51;
  swift_unknownObjectRetain();
  sub_23220060C();
  v64 = MEMORY[0x24BDB9AE0];
  sub_2320C3568(0, &qword_2541B73A8, (uint64_t (*)(uint64_t))sub_232093744, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_23202F534();
  sub_2320C35D8();
  v65 = v98;
  v66 = v95;
  sub_23220087C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v93 + 8))(v53, v66);
  sub_23201B304(v97, (uint64_t)&v107);
  v67 = swift_allocObject();
  *(_QWORD *)(v67 + 16) = v62;
  sub_2320167F8(&v107, v67 + 24);
  v68 = swift_allocObject();
  *(_QWORD *)(v68 + 16) = sub_2320C39C8;
  *(_QWORD *)(v68 + 24) = v67;
  v69 = v62;
  sub_23220060C();
  type metadata accessor for TrendCoalescingNotificationViewModel();
  sub_2320C3568(0, &qword_2541B73B0, (uint64_t (*)(uint64_t))type metadata accessor for TrendCoalescingNotificationViewModel, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v64);
  v70 = MEMORY[0x24BDB98F0];
  sub_232000590(&qword_2541B7370, (uint64_t (*)(uint64_t))sub_2320C34B0, MEMORY[0x24BDB98F0]);
  sub_2320C36FC();
  v71 = v99;
  v72 = v102;
  sub_232200828();
  swift_release();
  (*(void (**)(char *, uint64_t))(v100 + 8))(v65, v72);
  sub_232000590(&qword_2541B7380, (uint64_t (*)(uint64_t))sub_2320C3638, v70);
  v73 = v103;
  v74 = sub_232200774();
  (*(void (**)(char *, uint64_t))(v101 + 8))(v71, v73);
  return v74;
}

uint64_t sub_2320AAD10(uint64_t a1, void *a2, uint64_t a3, unint64_t a4, void (*a5)(_QWORD, _QWORD), uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  id v43;
  id v44;
  NSObject *v45;
  os_log_type_t v46;
  int v47;
  BOOL v48;
  uint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  void (*v57)(_BYTE *, uint64_t);
  uint64_t v58;
  id v59;
  id v60;
  void *v61;
  void *v62;
  _BYTE *v63;
  _BYTE *v64;
  void (*v65)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v66;
  uint64_t v67;
  _BYTE *v68;
  id v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  _BYTE *v74;
  _BYTE *v75;
  id v76;
  NSObject *v77;
  os_log_type_t v78;
  uint64_t v79;
  id v80;
  id v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  _BYTE *v85;
  uint64_t v86;
  unint64_t v87;
  void (*v88)(_BYTE *, uint64_t);
  _BYTE *v89;
  _BYTE *v90;
  id v91;
  NSObject *v92;
  os_log_type_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  id v98;
  _BYTE *v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _BYTE *v105;
  uint64_t v106;
  uint64_t v107;
  _BYTE *v108;
  _BYTE *v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  _BYTE *v113;
  _BYTE *v114;
  uint64_t v115;
  _BYTE *v116;
  uint64_t v117;
  uint64_t v118;
  _BYTE v120[12];
  int v121;
  uint64_t v122;
  _BYTE *v123;
  _BYTE *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _BYTE *v129;
  uint64_t v130;
  uint64_t v131;
  _BYTE *v132;
  _BYTE *v133;
  uint64_t v134;
  _BYTE *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  _BYTE *v141;
  _BYTE *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _BYTE *v146;
  _QWORD *v147;
  _BYTE *v148;
  _BYTE *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  void (*v154)(_QWORD, _QWORD);
  _BYTE *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  _BYTE *v160;

  v128 = a8;
  v127 = a7;
  v126 = a6;
  v154 = a5;
  v152 = a3;
  sub_2320C3568(0, &qword_255F9E0B8, (uint64_t (*)(uint64_t))sub_232093744, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9E10]);
  v150 = *(_QWORD *)(v11 - 8);
  v151 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v149 = &v120[-v12];
  v13 = MEMORY[0x24BEE1328];
  sub_232000608(0, &qword_255F9E0C0, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9DE0]);
  v131 = v14;
  v130 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v129 = &v120[-v15];
  sub_232000608(0, &qword_255F9E0C8, v13, MEMORY[0x24BDBA188]);
  v136 = v16;
  v134 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v132 = &v120[-v17];
  sub_2320C3B84(0);
  v140 = v18;
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v135 = &v120[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23202F4A8(0, &qword_255F9E0D8, v21, (void (*)(void))sub_2320C3BA0);
  v23 = v22;
  v137 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v133 = &v120[-v24];
  sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v25);
  v124 = &v120[-v26];
  v125 = type metadata accessor for TrendCoalescingNotificationViewModel();
  MEMORY[0x24BDAC7A8](v125);
  v147 = &v120[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v143 = sub_2321FE7DC();
  v157 = *(_QWORD *)(v143 - 8);
  v28 = MEMORY[0x24BDAC7A8](v143);
  v141 = &v120[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v30 = MEMORY[0x24BDAC7A8](v28);
  v123 = &v120[-v31];
  MEMORY[0x24BDAC7A8](v30);
  v146 = &v120[-v32];
  v33 = sub_2321FDCC0();
  v34 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v36 = &v120[-((v35 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v158 = sub_23220039C();
  v156 = *(_QWORD *)(v158 - 8);
  v37 = MEMORY[0x24BDAC7A8](v158);
  v155 = &v120[-((v38 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v39 = MEMORY[0x24BDAC7A8](v37);
  v142 = &v120[-v40];
  MEMORY[0x24BDAC7A8](v39);
  v42 = &v120[-v41];
  sub_23220036C();
  v43 = a2;
  v153 = a4;
  swift_bridgeObjectRetain_n();
  v44 = v43;
  v45 = sub_232200390();
  v46 = sub_2322012FC();
  v47 = v46;
  v48 = os_log_type_enabled(v45, v46);
  v139 = v23;
  v138 = v19;
  v144 = v34;
  v145 = v33;
  v148 = v36;
  if (v48)
  {
    v49 = swift_slowAlloc();
    v122 = swift_slowAlloc();
    v160 = (_BYTE *)v122;
    *(_DWORD *)v49 = 136315651;
    v159 = sub_232013174(0xD000000000000034, 0x8000000232213FA0, (uint64_t *)&v160);
    v121 = v47;
    sub_232201710();
    *(_WORD *)(v49 + 12) = 2080;
    v50 = objc_msgSend(v44, sel_profileIdentifier, v49 + 14);
    v51 = objc_msgSend(v50, sel_identifier);

    sub_2321FDCA8();
    v52 = sub_2321FDC84();
    v54 = v53;
    (*(void (**)(_BYTE *, uint64_t))(v34 + 8))(v36, v33);
    v159 = sub_232013174(v52, v54, (uint64_t *)&v160);
    sub_232201710();

    swift_bridgeObjectRelease();
    *(_WORD *)(v49 + 22) = 2081;
    v55 = v153;
    swift_bridgeObjectRetain();
    v159 = sub_232013174(v152, v55, (uint64_t *)&v160);
    sub_232201710();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_231FFB000, v45, (os_log_type_t)v121, "[%s]_%s: [Trend Notification] Creating coalesced notification for %{private}s", (uint8_t *)v49, 0x20u);
    v56 = v122;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v56, -1, -1);
    MEMORY[0x2348FF468](v49, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v57 = *(void (**)(_BYTE *, uint64_t))(v156 + 8);
  v57(v42, v158);
  v58 = v157;
  v59 = v154;
  if (objc_msgSend(v154, sel_hasNotificationIdentifier)
    && (v60 = objc_msgSend(v59, sel_notificationIdentifier)) != 0)
  {
    v61 = v60;
    v154 = (void (*)(_QWORD, _QWORD))v57;
    v62 = v44;
    LODWORD(v155) = a9 & 1;
    sub_232200EC4();

    swift_bridgeObjectRetain();
    v63 = v148;
    sub_2321FDCB4();
    v64 = v146;
    sub_2321FE788();
    v65 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v58 + 16);
    v66 = v123;
    v67 = v143;
    v65(v123, v64, v143);
    v68 = v124;
    sub_232016080(v126, (uint64_t)v124, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8]);
    v69 = v62;
    v70 = v59;
    v71 = (uint64_t)v66;
    v72 = v67;
    sub_23210D09C(v69, v70, v71, (uint64_t)v68, v147);
    swift_getObjectType();
    sub_232000590(&qword_255F9E0F0, (uint64_t (*)(uint64_t))type metadata accessor for TrendCoalescingNotificationViewModel, (uint64_t)&unk_2322161E0);
    v73 = sub_2321FE7E8();
    v74 = v142;
    sub_23220036C();
    v75 = v141;
    v65(v141, v64, v72);
    v76 = v69;
    v77 = sub_232200390();
    v78 = sub_2322012FC();
    if (os_log_type_enabled(v77, v78))
    {
      v79 = swift_slowAlloc();
      v155 = (_BYTE *)swift_slowAlloc();
      v160 = v155;
      *(_DWORD *)v79 = 136315907;
      v159 = sub_232013174(0xD000000000000034, 0x8000000232213FA0, (uint64_t *)&v160);
      sub_232201710();
      *(_WORD *)(v79 + 12) = 2080;
      v80 = objc_msgSend(v76, sel_profileIdentifier);
      v81 = objc_msgSend(v80, sel_identifier);

      sub_2321FDCA8();
      v82 = sub_2321FDC84();
      v84 = v83;
      (*(void (**)(_BYTE *, uint64_t))(v144 + 8))(v63, v145);
      v159 = sub_232013174(v82, v84, (uint64_t *)&v160);
      sub_232201710();

      swift_bridgeObjectRelease();
      *(_WORD *)(v79 + 22) = 2081;
      v85 = v141;
      v86 = sub_2321FE7A0();
      v159 = sub_232013174(v86, v87, (uint64_t *)&v160);
      v72 = v143;
      sub_232201710();
      swift_bridgeObjectRelease();
      v88 = *(void (**)(_BYTE *, uint64_t))(v157 + 8);
      v88(v85, v72);
      *(_WORD *)(v79 + 32) = 1026;
      LODWORD(v159) = v73 & 1;
      sub_232201710();
      _os_log_impl(&dword_231FFB000, v77, v78, "[%s]_%s: [Trend Notification] Scheduled %{private}s. Success: %{BOOL,public}d", (uint8_t *)v79, 0x26u);
      v89 = v155;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v89, -1, -1);
      MEMORY[0x2348FF468](v79, -1, -1);

      (*(void (**)(_BYTE *, uint64_t))(v156 + 8))(v142, v158);
    }
    else
    {

      v88 = *(void (**)(_BYTE *, uint64_t))(v58 + 8);
      v88(v75, v72);

      v154(v74, v158);
    }
    v107 = v138;
    LOBYTE(v160) = v73 & 1;
    v108 = v129;
    sub_2322006B4();
    v109 = v132;
    v110 = v131;
    MEMORY[0x2348FD80C](sub_232016344, 0, v131);
    v111 = (*(uint64_t (**)(_BYTE *, uint64_t))(v130 + 8))(v108, v110);
    MEMORY[0x24BDAC7A8](v111);
    v113 = v146;
    v112 = v147;
    *(_QWORD *)&v120[-16] = v147;
    *(_QWORD *)&v120[-8] = v113;
    sub_232093744();
    v114 = v135;
    v115 = v136;
    sub_2322016EC();
    (*(void (**)(_BYTE *, uint64_t))(v134 + 8))(v109, v115);
    sub_232002B9C();
    sub_2320C3BA0();
    v116 = v133;
    v117 = v140;
    sub_232200864();
    (*(void (**)(_BYTE *, uint64_t))(v107 + 8))(v114, v117);
    sub_2320C3C24();
    v118 = v139;
    v106 = sub_232200774();
    (*(void (**)(_BYTE *, uint64_t))(v137 + 8))(v116, v118);
    sub_232002CEC((uint64_t)v112, (uint64_t (*)(_QWORD))type metadata accessor for TrendCoalescingNotificationViewModel);
    v88(v113, v72);
  }
  else
  {
    v90 = v155;
    sub_23220036C();
    v91 = v44;
    v92 = sub_232200390();
    v93 = sub_2322012FC();
    if (os_log_type_enabled(v92, v93))
    {
      v94 = swift_slowAlloc();
      v154 = (void (*)(_QWORD, _QWORD))v57;
      v95 = v94;
      v96 = swift_slowAlloc();
      v160 = (_BYTE *)v96;
      *(_DWORD *)v95 = 136315394;
      v159 = sub_232013174(0xD000000000000034, 0x8000000232213FA0, (uint64_t *)&v160);
      sub_232201710();
      *(_WORD *)(v95 + 12) = 2080;
      v97 = objc_msgSend(v91, sel_profileIdentifier);
      v98 = objc_msgSend(v97, sel_identifier);

      v99 = v148;
      sub_2321FDCA8();

      v100 = sub_2321FDC84();
      v102 = v101;
      (*(void (**)(_BYTE *, uint64_t))(v144 + 8))(v99, v145);
      v159 = sub_232013174(v100, v102, (uint64_t *)&v160);
      sub_232201710();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v92, v93, "[%s]_%s: [Trend Notification] Trend does not have valid notification identifier", (uint8_t *)v95, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v96, -1, -1);
      MEMORY[0x2348FF468](v95, -1, -1);

      v154(v155, v158);
    }
    else
    {

      v57(v90, v158);
    }
    v104 = v150;
    v103 = v151;
    v105 = v149;
    sub_232093744();
    sub_232002B9C();
    sub_2322006C0();
    sub_2320C3BBC();
    v106 = sub_232200774();
    (*(void (**)(_BYTE *, uint64_t))(v104 + 8))(v105, v103);
  }
  return v106;
}

uint64_t sub_2320ABB78(uint64_t a1, uint64_t a2, void *a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, uint64_t, uint64_t);
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  os_log_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  _QWORD v47[2];
  os_log_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66[2];

  v58 = a4;
  v62 = a1;
  v6 = type metadata accessor for TrendCoalescingNotificationViewModel();
  v60 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v61 = v7;
  v63 = (uint64_t)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23202CEF8(0, &qword_255F9E0A8, (void (*)(uint64_t))sub_232048D04, v8, (void (*)(void))sub_23202CC44);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v64 = (char *)v47 - v12;
  v13 = sub_2321FDCC0();
  v54 = *(_QWORD *)(v13 - 8);
  v55 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_2321FE7DC();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23220039C();
  v56 = *(_QWORD *)(v20 - 8);
  v57 = v20;
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23220036C();
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v59 = a2;
  v23(v19, a2, v16);
  v24 = a3;
  v25 = sub_232200390();
  v26 = sub_2322012FC();
  v53 = v26;
  if (os_log_type_enabled(v25, v26))
  {
    v27 = swift_slowAlloc();
    v50 = v11;
    v28 = v27;
    v49 = swift_slowAlloc();
    v66[0] = v49;
    *(_DWORD *)v28 = 136315651;
    v48 = v25;
    v65 = sub_232013174(0xD000000000000034, 0x8000000232213FA0, v66);
    v52 = v6;
    sub_232201710();
    *(_WORD *)(v28 + 12) = 2080;
    v47[1] = v28 + 14;
    v29 = objc_msgSend(v24, sel_profileIdentifier);
    v30 = objc_msgSend(v29, sel_identifier);
    v51 = v10;
    v31 = v30;

    sub_2321FDCA8();
    v32 = sub_2321FDC84();
    v34 = v33;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v15, v55);
    v65 = sub_232013174(v32, v34, v66);
    sub_232201710();

    v10 = v51;
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 22) = 2081;
    v35 = sub_2321FE7A0();
    v65 = sub_232013174(v35, v36, v66);
    sub_232201710();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    v37 = v48;
    _os_log_impl(&dword_231FFB000, v48, (os_log_type_t)v53, "[%s]_%s: [Trend Notification] Updating content state %{private}s", (uint8_t *)v28, 0x20u);
    v38 = v49;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v38, -1, -1);
    v39 = v28;
    v11 = v50;
    MEMORY[0x2348FF468](v39, -1, -1);

  }
  else
  {

    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  (*(void (**)(char *, uint64_t))(v56 + 8))(v22, v57);
  sub_232016AD8(v58, v58[3]);
  v66[0] = sub_2321FE59C();
  v40 = v63;
  sub_23200054C(v62, v63, (uint64_t (*)(_QWORD))type metadata accessor for TrendCoalescingNotificationViewModel);
  v41 = (*(unsigned __int8 *)(v60 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
  v42 = swift_allocObject();
  sub_232025468(v40, v42 + v41, (uint64_t (*)(_QWORD))type metadata accessor for TrendCoalescingNotificationViewModel);
  v43 = swift_allocObject();
  *(_QWORD *)(v43 + 16) = sub_2320C3AE0;
  *(_QWORD *)(v43 + 24) = v42;
  sub_232048D04();
  sub_23202CC44();
  v44 = v64;
  sub_2322007A4();
  swift_release();
  swift_release();
  sub_2320C3B1C();
  v45 = sub_232200774();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v44, v10);
  return v45;
}

void sub_2320AC098(uint64_t a1, unint64_t a2, void *a3)
{
  id v3;
  id v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  NSObject *v37;
  int v38;
  uint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  os_log_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  id v53;
  void *v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  os_log_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  os_log_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67[2];
  uint64_t v68;

  v8 = sub_23220039C();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v60 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v60 - v16;
  if (a2)
  {
    v66 = v15;
    swift_bridgeObjectRetain();
    if (objc_msgSend(a3, sel_hasObjectTypeIdentifier))
    {
      v18 = objc_msgSend(a3, sel_objectTypeIdentifier);
      if (!v18)
      {
        __break(1u);
        goto LABEL_32;
      }
      v19 = v18;
      v65 = sub_232200EC4();
      v3 = v20;

    }
    else
    {
      v3 = (id)0xE300000000000000;
      v65 = 7104878;
    }
    if (objc_msgSend(a3, sel_hasNotificationIdentifier))
    {
      v64 = v8;
      v21 = objc_msgSend(a3, sel_notificationIdentifier);
      if (v21)
      {
        v22 = v21;
        v23 = sub_232200EC4();
        v25 = v24;

        if (v23 == a1 && v25 == a2)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_18;
        }
        v30 = sub_232201ADC();
        swift_bridgeObjectRelease();
        if ((v30 & 1) != 0)
        {
          swift_bridgeObjectRelease();
LABEL_18:
          swift_bridgeObjectRelease();
          if (objc_msgSend(a3, sel_hasNotificationIdentifier)
            && (v31 = objc_msgSend(a3, sel_notificationIdentifier)) != 0)
          {
            v32 = v31;
            v33 = sub_232200EC4();
            v35 = v34;

          }
          else
          {
            v33 = 0;
            v35 = 0;
          }
          v47 = v64;
          sub_23220036C();
          swift_bridgeObjectRetain_n();
          v3 = a3;
          v48 = sub_232200390();
          v49 = sub_2322012FC();
          if (!os_log_type_enabled(v48, (os_log_type_t)v49))
          {

            swift_bridgeObjectRelease_n();
            (*(void (**)(char *, uint64_t))(v66 + 8))(v14, v47);
            return;
          }
          LODWORD(v63) = v49;
          v65 = (uint64_t)v48;
          v50 = swift_slowAlloc();
          v62 = swift_slowAlloc();
          v68 = v62;
          *(_DWORD *)v50 = 136315650;
          v67[0] = sub_232013174(0xD000000000000034, 0x8000000232213FA0, &v68);
          sub_232201710();
          *(_WORD *)(v50 + 12) = 2080;
          v67[0] = v33;
          v67[1] = v35;
          sub_232000608(0, (unint64_t *)&qword_2541B78A0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
          swift_bridgeObjectRetain();
          v51 = sub_232200F00();
          v67[0] = sub_232013174(v51, v52, &v68);
          sub_232201710();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v50 + 22) = 2080;
          v53 = objc_msgSend(v3, sel_notificationIdentifier);
          if (v53)
          {
            v54 = v53;
            v55 = sub_232200EC4();
            v57 = v56;

            v67[0] = sub_232013174(v55, v57, &v68);
            sub_232201710();

            swift_bridgeObjectRelease();
            v58 = (os_log_t)v65;
            _os_log_impl(&dword_231FFB000, (os_log_t)v65, (os_log_type_t)v63, "%s Migrating %s for trend with identifier: %s", (uint8_t *)v50, 0x20u);
            v59 = v62;
            swift_arrayDestroy();
            MEMORY[0x2348FF468](v59, -1, -1);
            MEMORY[0x2348FF468](v50, -1, -1);

            (*(void (**)(char *, uint64_t))(v66 + 8))(v14, v64);
            return;
          }
          goto LABEL_33;
        }
      }
      sub_23220036C();
      v36 = a3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v4 = v36;
      v37 = sub_232200390();
      v38 = sub_2322012FC();
      if (!os_log_type_enabled(v37, (os_log_type_t)v38))
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        goto LABEL_29;
      }
      LODWORD(v62) = v38;
      v63 = v37;
      v39 = swift_slowAlloc();
      v61 = swift_slowAlloc();
      v67[0] = v61;
      *(_DWORD *)v39 = 136315906;
      v68 = sub_232013174(0xD000000000000034, 0x8000000232213FA0, v67);
      sub_232201710();
      *(_WORD *)(v39 + 12) = 2080;
      swift_bridgeObjectRetain();
      v68 = sub_232013174(v65, (unint64_t)v3, v67);
      sub_232201710();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v39 + 22) = 2080;
      v40 = objc_msgSend(v4, sel_notificationIdentifier);
      if (v40)
      {
        v41 = v40;
        v42 = sub_232200EC4();
        v44 = v43;

        v68 = sub_232013174(v42, v44, v67);
        sub_232201710();

        swift_bridgeObjectRelease();
        *(_WORD *)(v39 + 32) = 2080;
        swift_bridgeObjectRetain();
        v68 = sub_232013174(a1, a2, v67);
        sub_232201710();
        swift_bridgeObjectRelease_n();
        v45 = v63;
        _os_log_impl(&dword_231FFB000, v63, (os_log_type_t)v62, "%s [Migration] Current trend %s is different from persisted: %s != %s; nothing to migrate",
          (uint8_t *)v39,
          0x2Au);
        v46 = v61;
        swift_arrayDestroy();
        MEMORY[0x2348FF468](v46, -1, -1);
        MEMORY[0x2348FF468](v39, -1, -1);

LABEL_29:
        (*(void (**)(char *, uint64_t))(v66 + 8))(v11, v64);
        return;
      }
LABEL_32:

      swift_bridgeObjectRelease();
      __break(1u);
LABEL_33:

      __break(1u);
      return;
    }
    swift_bridgeObjectRelease();
    sub_23220036C();
    swift_bridgeObjectRetain();
    v26 = sub_232200390();
    v27 = sub_2322012FC();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v29 = swift_slowAlloc();
      v67[0] = v29;
      *(_DWORD *)v28 = 136315394;
      v68 = sub_232013174(0xD000000000000034, 0x8000000232213FA0, v67);
      sub_232201710();
      *(_WORD *)(v28 + 12) = 2080;
      swift_bridgeObjectRetain();
      v68 = sub_232013174(v65, (unint64_t)v3, v67);
      sub_232201710();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_231FFB000, v26, v27, "%s [Migration] Current trend %s has no notification identifier for trend; nothing to migrate",
        (uint8_t *)v28,
        0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v29, -1, -1);
      MEMORY[0x2348FF468](v28, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v66 + 8))(v17, v8);
  }
}

uint64_t sub_2320AC94C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_2320C2858(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_23220039C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232200318();
  v11 = a1;
  v12 = a1;
  v13 = sub_232200390();
  v14 = sub_2322012E4();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v25 = v8;
    v16 = v15;
    v17 = swift_slowAlloc();
    v28 = v17;
    *(_DWORD *)v16 = 136315394;
    v26 = a2;
    v27 = sub_232013174(0xD000000000000034, 0x8000000232213FA0, &v28);
    sub_232201710();
    *(_WORD *)(v16 + 12) = 2080;
    v27 = (uint64_t)a1;
    v18 = a1;
    sub_232002B9C();
    v19 = sub_232200F0C();
    v24 = v7;
    v27 = sub_232013174(v19, v20, &v28);
    sub_232201710();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_231FFB000, v13, v14, "%s Error: %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v17, -1, -1);
    MEMORY[0x2348FF468](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v24);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  *v6 = a1;
  swift_storeEnumTagMultiPayload();
  v21 = a1;
  return sub_2322006B4();
}

void sub_2320ACBE8(void *a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id *v24;
  uint64_t v25;
  uint64_t v26;
  id *v27;
  uint64_t v28;
  id *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  id v46;
  id v47;
  char *v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  id v54;
  id v55;
  char *v56;
  char *v57;
  id *v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  id v67;
  id v68;
  id v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  os_log_t v80;
  uint64_t v81;
  NSObject *v82;
  os_log_type_t v83;
  uint8_t *v84;
  uint64_t v85;
  id v86;
  id v87;
  char *v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  void *v94;
  os_log_t v95;
  int v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  id *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  void *v114;
  uint8_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121[2];

  v112 = a4;
  v108 = a2;
  v118 = a5;
  v7 = sub_2321FDE28();
  v103 = *(_QWORD *)(v7 - 8);
  v104 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v102 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, (unint64_t *)&qword_2541AF178, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v101 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v100 = (char *)&v95 - v10;
  sub_2320057B8(0, &qword_2541B3078, (uint64_t (*)(uint64_t))sub_2320C0548, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v114 = v11;
  v12 = *((_QWORD *)v11 - 1);
  MEMORY[0x24BDAC7A8](v11);
  v113 = (char *)&v95 - v13;
  v14 = sub_2321FDCC0();
  v110 = *(_QWORD *)(v14 - 8);
  v111 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v109 = (char *)&v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory(0);
  v16 = MEMORY[0x24BDAC7A8](v99);
  v106 = (uint64_t)&v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v107 = (uint64_t)&v95 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v105 = (id *)((char *)&v95 - v21);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (id *)((char *)&v95 - v23);
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (id *)((char *)&v95 - v26);
  MEMORY[0x24BDAC7A8](v25);
  v29 = (id *)((char *)&v95 - v28);
  v30 = sub_23220039C();
  v116 = *(_QWORD *)(v30 - 8);
  v117 = v30;
  v31 = MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)&v95 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x24BDAC7A8](v31);
  v36 = (char *)&v95 - v35;
  v37 = MEMORY[0x24BDAC7A8](v34);
  v39 = (char *)&v95 - v38;
  MEMORY[0x24BDAC7A8](v37);
  v41 = (char *)&v95 - v40;
  sub_2320C0578();
  if (a1 == (void *)1)
  {
    v112 = v12;
    sub_232200318();
    sub_23200054C((uint64_t)v115, (uint64_t)v29, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    v42 = sub_232200390();
    v43 = sub_2322012CC();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc();
      v45 = swift_slowAlloc();
      *(_DWORD *)v44 = 136446210;
      v115 = v44 + 4;
      v119 = 0xD000000000000037;
      v120 = 0x8000000232205C60;
      v121[0] = v45;
      v46 = objc_msgSend(*v29, sel_profileIdentifier);
      v47 = objc_msgSend(v46, sel_identifier);

      v48 = v109;
      sub_2321FDCA8();

      sub_2321FDC84();
      (*(void (**)(char *, uint64_t))(v110 + 8))(v48, v111);
      sub_232200F48();
      swift_bridgeObjectRelease();
      v119 = sub_232013174(v119, v120, v121);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC((uint64_t)v29, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
      _os_log_impl(&dword_231FFB000, v42, v43, "%{public}s: no trend model, returning no desired feedItem", v44, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v45, -1, -1);
      MEMORY[0x2348FF468](v44, -1, -1);
    }
    else
    {
      sub_232002CEC((uint64_t)v29, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    }

    (*(void (**)(char *, uint64_t))(v116 + 8))(v41, v117);
LABEL_21:
    v119 = MEMORY[0x24BEE4AF8];
    sub_2320C0548(0);
    v93 = v113;
    sub_2322006B4();
    sub_2320C0748();
    v94 = v114;
    v92 = sub_232200774();
    (*(void (**)(char *, void *))(v112 + 8))(v93, v94);
    goto LABEL_22;
  }
  v49 = (uint64_t)v115;
  if (a3 == (char *)1)
  {
    v112 = v12;
    sub_232200318();
    sub_23200054C(v49, (uint64_t)v27, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    v50 = sub_232200390();
    v51 = sub_2322012E4();
    if (os_log_type_enabled(v50, v51))
    {
      v52 = (uint8_t *)swift_slowAlloc();
      v53 = swift_slowAlloc();
      *(_DWORD *)v52 = 136446210;
      v115 = v52 + 4;
      v119 = 0xD000000000000037;
      v120 = 0x8000000232205C60;
      v121[0] = v53;
      v54 = objc_msgSend(*v27, sel_profileIdentifier);
      v55 = objc_msgSend(v54, sel_identifier);

      v56 = v109;
      sub_2321FDCA8();

      sub_2321FDC84();
      (*(void (**)(char *, uint64_t))(v110 + 8))(v56, v111);
      sub_232200F48();
      swift_bridgeObjectRelease();
      v119 = sub_232013174(v119, v120, v121);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC((uint64_t)v27, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
      _os_log_impl(&dword_231FFB000, v50, v51, "%{public}s: No chart model found, but one is expected", v52, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v53, -1, -1);
      MEMORY[0x2348FF468](v52, -1, -1);
    }
    else
    {
      sub_232002CEC((uint64_t)v27, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    }

    (*(void (**)(char *, uint64_t))(v116 + 8))(v39, v117);
    goto LABEL_21;
  }
  v57 = a3;
  if (!a1 || !a3)
  {
    v112 = v12;
    sub_232200318();
    sub_23200054C(v49, (uint64_t)v24, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    v82 = sub_232200390();
    v83 = sub_2322012FC();
    if (os_log_type_enabled(v82, v83))
    {
      v84 = (uint8_t *)swift_slowAlloc();
      v85 = swift_slowAlloc();
      *(_DWORD *)v84 = 136446210;
      v115 = v84 + 4;
      v119 = 0xD000000000000037;
      v120 = 0x8000000232205C60;
      v121[0] = v85;
      v86 = objc_msgSend(*v24, sel_profileIdentifier);
      v87 = objc_msgSend(v86, sel_identifier);

      v88 = v109;
      sub_2321FDCA8();

      sub_2321FDC84();
      (*(void (**)(char *, uint64_t))(v110 + 8))(v88, v111);
      sub_232200F48();
      swift_bridgeObjectRelease();
      v119 = sub_232013174(v119, v120, v121);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC((uint64_t)v24, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
      _os_log_impl(&dword_231FFB000, v82, v83, "%{public}s: version mismatch detected, returning no feed items", v84, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v85, -1, -1);
      MEMORY[0x2348FF468](v84, -1, -1);
    }
    else
    {
      sub_232002CEC((uint64_t)v24, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    }

    (*(void (**)(char *, uint64_t))(v116 + 8))(v36, v117);
    goto LABEL_21;
  }
  v114 = a1;
  sub_2320442D0(a1);
  sub_2320442D0(a3);
  sub_232200318();
  v58 = v105;
  sub_23200054C(v49, (uint64_t)v105, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
  v59 = v107;
  sub_23200054C(v49, v107, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
  v60 = v106;
  sub_23200054C(v49, v106, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
  v61 = sub_232200390();
  v62 = sub_2322012CC();
  v63 = v62;
  if (os_log_type_enabled(v61, v62))
  {
    v64 = swift_slowAlloc();
    v65 = swift_slowAlloc();
    v98 = v65;
    *(_DWORD *)v64 = 136315650;
    v113 = a3;
    v119 = 0xD000000000000037;
    v120 = 0x8000000232205C60;
    v121[0] = v65;
    v66 = objc_msgSend(*v58, sel_profileIdentifier);
    v96 = v63;
    v67 = v66;
    v68 = objc_msgSend(v66, sel_identifier);
    v95 = v61;
    v69 = v68;

    v97 = v33;
    v70 = v109;
    sub_2321FDCA8();

    sub_2321FDC84();
    (*(void (**)(char *, uint64_t))(v110 + 8))(v70, v111);
    sub_232200F48();
    swift_bridgeObjectRelease();
    v119 = sub_232013174(v119, v120, v121);
    sub_232201710();
    swift_bridgeObjectRelease();
    sub_232002CEC((uint64_t)v58, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    *(_WORD *)(v64 + 12) = 2080;
    v71 = v107;
    sub_2321FDD8C();
    v72 = sub_232200F00();
    v119 = sub_232013174(v72, v73, v121);
    sub_232201710();
    swift_bridgeObjectRelease();
    sub_232002CEC(v71, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    *(_WORD *)(v64 + 22) = 2080;
    v74 = v60;
    v75 = v102;
    sub_2321FDDB0();
    sub_232000590((unint64_t *)&qword_2541B2888, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF548]);
    v76 = v104;
    v77 = sub_232201AB8();
    v79 = v78;
    (*(void (**)(char *, uint64_t))(v103 + 8))(v75, v76);
    v119 = sub_232013174(v77, v79, v121);
    sub_232201710();
    swift_bridgeObjectRelease();
    v57 = v113;
    sub_232002CEC(v74, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    v80 = v95;
    _os_log_impl(&dword_231FFB000, v95, (os_log_type_t)v96, "%s Using calendar with locale: %s, timeZone: %s", (uint8_t *)v64, 0x20u);
    v81 = v98;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v81, -1, -1);
    MEMORY[0x2348FF468](v64, -1, -1);

    (*(void (**)(char *, uint64_t))(v116 + 8))(v97, v117);
  }
  else
  {
    sub_232002CEC((uint64_t)v58, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    sub_232002CEC(v59, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    sub_232002CEC(v60, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);

    (*(void (**)(char *, uint64_t))(v116 + 8))(v33, v117);
  }
  v119 = v108;
  swift_bridgeObjectRetain();
  v89 = swift_bridgeObjectRetain();
  sub_23209D274(v89);
  v90 = v114;
  v91 = sub_2320AE650(v114, (uint64_t)v57, v119);
  swift_bridgeObjectRelease();
  v119 = v91;
  sub_2320C27F0(0, (unint64_t *)&qword_2541B2F88, (uint64_t (*)(uint64_t))sub_2320C0548, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_2320C06E8();
  v92 = sub_232200774();
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
LABEL_22:
  *v118 = v92;
}

uint64_t sub_2320AD97C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC9Summaries29SummaryTrendFeedItemGenerator_domain;
  v2 = sub_2321FE3BC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  sub_232002CEC(v0 + OBJC_IVAR____TtC9Summaries29SummaryTrendFeedItemGenerator_request, type metadata accessor for SummaryTrendFeedItemGenerator.Request);

  return swift_deallocClassInstance();
}

uint64_t sub_2320ADA04()
{
  return type metadata accessor for SummaryTrendFeedItemGenerator(0);
}

uint64_t type metadata accessor for SummaryTrendFeedItemGenerator(uint64_t a1)
{
  return sub_23201A14C(a1, (uint64_t *)&unk_2541AF928);
}

uint64_t sub_2320ADA20()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2321FE3BC();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for SummaryTrendFeedItemGenerator.Request(319);
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for SummaryTrendFeedItemGenerator.Request(uint64_t a1)
{
  return sub_23201A14C(a1, qword_2541B3F08);
}

char *sub_2320ADAD4(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    a1[8] = *((_BYTE *)a2 + 8);
    v8 = a3[6];
    v9 = &a1[v8];
    v10 = (char *)a2 + v8;
    v11 = sub_2321FE584();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    v14 = v4;
    if (v13(v10, 1, v11))
    {
      sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = a3[7];
    v17 = &v7[v16];
    v18 = (uint64_t)a2 + v16;
    v19 = sub_2321FE938();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = &v7[v20];
    v22 = (uint64_t)a2 + v20;
    *(_QWORD *)v21 = *(_QWORD *)v22;
    v21[8] = *(_BYTE *)(v22 + 8);
  }
  return v7;
}

uint64_t sub_2320ADC38(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v4 = (char *)a1 + *(int *)(a2 + 24);
  v5 = sub_2321FE584();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  v7 = (char *)a1 + *(int *)(a2 + 28);
  v8 = sub_2321FE938();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t sub_2320ADCD0(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v7 = a3[6];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_2321FE584();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v6;
  if (v12(v9, 1, v10))
  {
    sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_2321FE938();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *(_BYTE *)(v20 + 8) = *(_BYTE *)(v21 + 8);
  return a1;
}

uint64_t sub_2320ADE0C(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v9 = a3[6];
  v10 = (void *)(a1 + v9);
  v11 = (void *)(a2 + v9);
  v12 = sub_2321FE584();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  v18 = a3[7];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = sub_2321FE938();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  v22 = a3[8];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = *(_BYTE *)(v24 + 8);
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_BYTE *)(v23 + 8) = v25;
  return a1;
}

uint64_t sub_2320ADF94(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_2321FE584();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[7];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_2321FE938();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = a3[8];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  return a1;
}

uint64_t sub_2320AE0C4(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v7 = a3[6];
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_2321FE584();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_2321FE938();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  v20 = a3[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  return a1;
}

uint64_t sub_2320AE248()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2320AE254(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = sub_2321FE938();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_2320AE30C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2320AE318(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = sub_2321FE938();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_2320AE3CC()
{
  unint64_t v0;
  unint64_t v1;

  sub_2320057B8(319, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
  {
    sub_2321FE938();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_2320AE488()
{
  return swift_retain();
}

uint64_t sub_2320AE49C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC9Summaries29SummaryTrendFeedItemGenerator_domain;
  v4 = sub_2321FE3BC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_2320AE4E8(uint64_t a1)
{
  uint64_t result;

  result = sub_232000590(&qword_2541AF920, type metadata accessor for SummaryTrendFeedItemGenerator, (uint64_t)&unk_232213F08);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2320AE524(_QWORD *a1, uint64_t (*a2)(_QWORD))
{
  return a2(*a1);
}

uint64_t sub_2320AE548()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  _QWORD v8[2];

  v1 = sub_2321FDCC0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[0] = 0xD000000000000037;
  v8[1] = 0x8000000232205C60;
  v5 = objc_msgSend(*v0, sel_profileIdentifier);
  v6 = objc_msgSend(v5, sel_identifier);

  sub_2321FDCA8();
  sub_2321FDC84();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_232200F48();
  swift_bridgeObjectRelease();
  return v8[0];
}

uint64_t sub_2320AE650(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70[3];

  v4 = v3;
  v63 = a3;
  v61 = a2;
  sub_2320C07A8(0);
  v7 = v6;
  v67 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v65 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320258FC(0, &qword_2541B2DC0, v9, sub_2320C0804, MEMORY[0x24BDB98D0]);
  v11 = v10;
  v66 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v64 = (char *)&v51 - v12;
  v13 = sub_2321FDCC0();
  v55 = *(_QWORD *)(v13 - 8);
  v56 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory(0);
  MEMORY[0x24BDAC7A8](v60);
  v17 = (id *)((char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = sub_23220039C();
  v57 = *(_QWORD *)(v18 - 8);
  v58 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = objc_msgSend(a1, sel_trendValues);
  if (!v21
    || (v22 = v21, v68 = 0, sub_232003E9C(0, &qword_2541B0C88), sub_23220102C(), v22, (v23 = v68) == 0))
  {
    swift_bridgeObjectRelease();
    v23 = MEMORY[0x24BEE4AF8];
  }
  v59 = v23;
  v24 = sub_2320C1C20(a1);
  sub_232200318();
  v62 = v4;
  sub_23200054C(v4, (uint64_t)v17, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
  v25 = sub_232200390();
  v26 = sub_2322012CC();
  v27 = v26;
  if (os_log_type_enabled(v25, v26))
  {
    v28 = swift_slowAlloc();
    v54 = v7;
    v29 = v28;
    v30 = swift_slowAlloc();
    v53 = v30;
    *(_DWORD *)v29 = 136446466;
    v51 = v29 + 4;
    v68 = 0xD000000000000037;
    v69 = 0x8000000232205C60;
    v70[0] = v30;
    v31 = objc_msgSend(*v17, sel_profileIdentifier, v29 + 4);
    v52 = v27;
    v32 = v31;
    v33 = objc_msgSend(v31, sel_identifier);

    sub_2321FDCA8();
    sub_2321FDC84();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v15, v56);
    sub_232200F48();
    swift_bridgeObjectRelease();
    v68 = sub_232013174(v68, v69, v70);
    sub_232201710();
    swift_bridgeObjectRelease();
    sub_232002CEC((uint64_t)v17, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    *(_WORD *)(v29 + 12) = 2080;
    v68 = v24;
    v34 = sub_232200F00();
    v68 = sub_232013174(v34, v35, v70);
    sub_232201710();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_231FFB000, v25, (os_log_type_t)v52, "%{public}s: determined these visibility overrides: %s", (uint8_t *)v29, 0x16u);
    v36 = v53;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v36, -1, -1);
    v37 = v29;
    v7 = v54;
    MEMORY[0x2348FF468](v37, -1, -1);
  }
  else
  {
    sub_232002CEC((uint64_t)v17, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
  }

  (*(void (**)(char *, uint64_t))(v57 + 8))(v20, v58);
  v38 = v62;
  v39 = *(void **)(v62 + 8);
  v40 = *(void **)(v62 + *(int *)(v60 + 48));
  sub_2321FE128();
  swift_allocObject();
  v41 = v39;
  v42 = v40;
  v43 = sub_2321FE104();
  v44 = MEMORY[0x24BDAC7A8](v43);
  *(&v51 - 6) = v59;
  *(&v51 - 5) = v38;
  v45 = v63;
  *(&v51 - 4) = v61;
  *(&v51 - 3) = v45;
  *(&v51 - 2) = v24;
  *(&v51 - 1) = v44;
  v46 = sub_23209CD58((_QWORD *(*)(uint64_t *__return_ptr, char *))sub_2320C25FC, (uint64_t)(&v51 - 8), (uint64_t)&unk_2500FDF50);
  swift_bridgeObjectRelease();
  v68 = v46;
  sub_2320C07CC(0);
  sub_2320057B8(0, &qword_2541B54C8, (uint64_t (*)(uint64_t))sub_2320C07CC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_2320C07E8();
  sub_2320C261C();
  v47 = v65;
  sub_2322005E8();
  sub_2320C0804();
  v48 = v64;
  sub_232200810();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v47, v7);
  sub_2320C267C();
  v49 = sub_232200774();
  swift_release();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v48, v11);
  return v49;
}

uint64_t sub_2320AEC30@<X0>(unsigned __int8 *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint32_t *p_align;
  char v22;
  id v23;
  void *v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint32_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t result;
  char *v43;
  id *v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  void *v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id *v66;
  uint64_t *v67;
  uint64_t v68;
  char *v69;
  int v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;

  v68 = a3;
  v56 = a6;
  v57 = a7;
  v54 = a4;
  v55 = a5;
  v67 = a8;
  v10 = sub_2321FDCC0();
  v62 = *(_QWORD *)(v10 - 8);
  v63 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v61 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320C26E4();
  v59 = *(_QWORD *)(v12 - 8);
  v60 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v58 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory(0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (void **)((char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = sub_23220039C();
  v64 = *(_QWORD *)(v17 - 8);
  v65 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v70 = *a1;
  v69 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = v16;
  if (a2 >> 62)
    goto LABEL_18;
  v19 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v19; v19 = sub_232201998())
  {
    v71 = a2 & 0xC000000000000001;
    v20 = 4;
    p_align = &stru_25010DFE8.align;
    while (1)
    {
      v23 = v71 ? (id)MEMORY[0x2348FEA30](v20 - 4, a2) : *(id *)(a2 + 8 * v20);
      v24 = v23;
      v25 = v20 - 3;
      if (__OFADD__(v20 - 4, 1))
        break;
      if (objc_msgSend(v23, *((SEL *)p_align + 332)))
      {
        v26 = objc_msgSend(v24, sel_coveredDateRangeRawValue);
        if (v26)
        {
          v27 = v26;
          v28 = p_align;
          v29 = sub_232200EC4();
          v31 = v30;

          v32 = v29;
          p_align = v28;
          if (MEMORY[0x2348FD38C](v32, v31) != 6)
          {
            v33 = sub_23220021C();
            v35 = v34;
            if (v33 == sub_23220021C() && v35 == v36)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
LABEL_16:
              swift_bridgeObjectRelease();
              v37 = v57;
              swift_retain();
              v38 = sub_2320C0828((char *)v24, v54, v55, v70, v56, v37, v68);
              swift_release();
              v72 = v38;
              sub_2320C27F0(0, (unint64_t *)&qword_2541B2EC8, (uint64_t (*)(uint64_t))sub_23202CAE4, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
              sub_2321FE308();
              sub_2320C2774();
              v39 = v58;
              sub_232200780();
              sub_232000590(&qword_2541B2B10, (uint64_t (*)(uint64_t))sub_2320C26E4, MEMORY[0x24BDB94C8]);
              v40 = v60;
              v41 = sub_232200774();

              swift_release();
              result = (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v39, v40);
              goto LABEL_23;
            }
            v22 = sub_232201ADC();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            p_align = v28;
            if ((v22 & 1) != 0)
              goto LABEL_16;
          }
        }
      }

      ++v20;
      if (v25 == v19)
        goto LABEL_19;
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
  }
LABEL_19:
  swift_bridgeObjectRelease();
  v43 = v69;
  sub_232200318();
  v44 = v66;
  sub_23200054C(v68, (uint64_t)v66, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
  v45 = sub_232200390();
  v46 = sub_2322012FC();
  if (os_log_type_enabled(v45, v46))
  {
    v47 = swift_slowAlloc();
    v48 = swift_slowAlloc();
    v74 = v48;
    *(_DWORD *)v47 = 136446466;
    v71 = v47 + 4;
    v72 = 0xD000000000000037;
    v73 = 0x8000000232205C60;
    v49 = objc_msgSend(*v44, sel_profileIdentifier, v54, v55, v56);
    v50 = objc_msgSend(v49, sel_identifier);

    v51 = v61;
    sub_2321FDCA8();

    sub_2321FDC84();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v51, v63);
    sub_232200F48();
    swift_bridgeObjectRelease();
    v72 = sub_232013174(v72, v73, &v74);
    sub_232201710();
    swift_bridgeObjectRelease();
    sub_232002CEC((uint64_t)v44, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    *(_WORD *)(v47 + 12) = 2080;
    LOBYTE(v72) = v70;
    v52 = sub_232200F00();
    v72 = sub_232013174(v52, v53, &v74);
    sub_232201710();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_231FFB000, v45, v46, "%{public}s: No trends within trend model, not generating trend feedItem for %s", (uint8_t *)v47, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v48, -1, -1);
    MEMORY[0x2348FF468](v47, -1, -1);

    result = (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v69, v65);
  }
  else
  {
    sub_232002CEC((uint64_t)v44, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);

    result = (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v43, v65);
  }
  v41 = 0;
LABEL_23:
  *v67 = v41;
  return result;
}

uint64_t sub_2320AF238@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23200054C(a1, a2, (uint64_t (*)(_QWORD))sub_23202CAE4);
}

uint64_t sub_2320AF258@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, unsigned __int8 a11, char a12, uint64_t a13)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t (*v39)(_QWORD);
  BOOL v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id *v53;
  char v54;
  unint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  id v63;
  id v64;
  char *v65;
  os_log_t v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  id v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  int v90;
  os_log_t v91;
  uint64_t v92;
  _BOOL4 v93;
  void *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  id *v99;
  uint64_t v100;
  uint64_t v101;
  unsigned int v102;
  uint64_t v103;
  unsigned int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115[2];

  v105 = a7;
  v106 = a8;
  v103 = a6;
  v107 = a9;
  v108 = a3;
  v104 = a11;
  v100 = a13;
  v101 = a10;
  v102 = a12 & 1;
  sub_23202CAE4(0);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v95 = (uint64_t)&v89 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v112 = (char *)&v89 - v20;
  v21 = sub_2321FDCC0();
  v97 = *(_QWORD *)(v21 - 8);
  v98 = v21;
  MEMORY[0x24BDAC7A8](v21);
  v96 = (char *)&v89 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory(0);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v99 = (id *)((char *)&v89 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v24);
  v27 = (id *)((char *)&v89 - v26);
  v28 = sub_23220039C();
  v109 = *(_QWORD *)(v28 - 8);
  v110 = v28;
  v29 = MEMORY[0x24BDAC7A8](v28);
  v111 = (char *)&v89 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29);
  v32 = (char *)&v89 - v31;
  sub_23209398C();
  MEMORY[0x24BDAC7A8](v33);
  v35 = (char *)&v89 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320C2858(0);
  MEMORY[0x24BDAC7A8](v36);
  v38 = (char *)&v89 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23200054C(a1, (uint64_t)v38, v39);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_232002CEC((uint64_t)v38, (uint64_t (*)(_QWORD))sub_2320C2858);
    v40 = 0;
    v42 = v111;
    v41 = (uint64_t)v112;
    v43 = v104;
    v44 = v106;
    v45 = v107;
    v46 = v105;
    v47 = a2;
    v48 = v103;
    v49 = v102;
    v51 = v100;
    v50 = v101;
    v52 = v108;
    v53 = v99;
  }
  else
  {
    sub_232025468((uint64_t)v38, (uint64_t)v35, (uint64_t (*)(_QWORD))sub_23209398C);
    v93 = sub_232000764(a2, (uint64_t)v35);
    v94 = a2;
    v54 = sub_2320020CC(a2, (uint64_t)v35);
    sub_232002CEC((uint64_t)v35, (uint64_t (*)(_QWORD))sub_23209398C);
    if ((v54 & 1) != 0)
    {
      sub_23220036C();
      sub_23200054C(v108, (uint64_t)v27, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
      v55 = a5;
      swift_bridgeObjectRetain_n();
      v56 = sub_232200390();
      v57 = sub_2322012FC();
      v58 = v57;
      if (os_log_type_enabled(v56, v57))
      {
        v59 = swift_slowAlloc();
        v60 = swift_slowAlloc();
        v92 = v60;
        *(_DWORD *)v59 = 136446466;
        v89 = v59 + 4;
        v113 = 0xD000000000000037;
        v114 = 0x8000000232205C60;
        v115[0] = v60;
        v61 = objc_msgSend(*v27, sel_profileIdentifier, v59 + 4);
        v91 = v56;
        v62 = v61;
        v63 = objc_msgSend(v61, sel_identifier);
        v90 = v58;
        v64 = v63;

        v65 = v96;
        sub_2321FDCA8();

        sub_2321FDC84();
        (*(void (**)(char *, uint64_t))(v97 + 8))(v65, v98);
        sub_232200F48();
        swift_bridgeObjectRelease();
        v113 = sub_232013174(v113, v114, v115);
        sub_232201710();
        swift_bridgeObjectRelease();
        sub_232002CEC((uint64_t)v27, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
        *(_WORD *)(v59 + 12) = 2080;
        swift_bridgeObjectRetain();
        v113 = sub_232013174(a4, v55, v115);
        sub_232201710();
        swift_bridgeObjectRelease_n();
        v66 = v91;
        _os_log_impl(&dword_231FFB000, v91, (os_log_type_t)v90, "%{public}s: Removing any notifications that may have been delivered: %s", (uint8_t *)v59, 0x16u);
        v67 = v92;
        swift_arrayDestroy();
        MEMORY[0x2348FF468](v67, -1, -1);
        MEMORY[0x2348FF468](v59, -1, -1);

      }
      else
      {
        sub_232002CEC((uint64_t)v27, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v109 + 8))(v32, v110);
      v52 = v108;
      swift_getObjectType();
      sub_232000608(0, (unint64_t *)&qword_2541B78C0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
      v68 = swift_allocObject();
      *(_OWORD *)(v68 + 16) = xmmword_232210D40;
      *(_QWORD *)(v68 + 32) = a4;
      *(_QWORD *)(v68 + 40) = v55;
      swift_bridgeObjectRetain();
      sub_2321FE74C();
      swift_bridgeObjectRelease();
      v42 = v111;
      v41 = (uint64_t)v112;
      v43 = v104;
      v44 = v106;
      v45 = v107;
      v46 = v105;
      v47 = v94;
      v48 = v103;
      v49 = v102;
      v51 = v100;
      v50 = v101;
    }
    else
    {
      v42 = v111;
      v41 = (uint64_t)v112;
      v43 = v104;
      v44 = v106;
      v45 = v107;
      v46 = v105;
      v47 = v94;
      v48 = v103;
      v49 = v102;
      v51 = v100;
      v50 = v101;
      v52 = v108;
    }
    v53 = v99;
    v40 = v93;
  }
  sub_2320AFC18(v48, v46, v44, v50, v47, v43, v49, v40, v51);
  sub_232200318();
  sub_23200054C(v52, (uint64_t)v53, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
  sub_23200054C(v45, v41, (uint64_t (*)(_QWORD))sub_23202CAE4);
  v69 = sub_232200390();
  v70 = sub_2322012FC();
  if (os_log_type_enabled(v69, v70))
  {
    v71 = swift_slowAlloc();
    v72 = swift_slowAlloc();
    v108 = v72;
    *(_DWORD *)v71 = 136446722;
    v113 = 0xD000000000000037;
    v114 = 0x8000000232205C60;
    v115[0] = v72;
    v73 = objc_msgSend(*v53, sel_profileIdentifier);
    v74 = objc_msgSend(v73, sel_identifier);

    v75 = v96;
    sub_2321FDCA8();

    sub_2321FDC84();
    (*(void (**)(char *, uint64_t))(v97 + 8))(v75, v98);
    v76 = (uint64_t)v112;
    sub_232200F48();
    swift_bridgeObjectRelease();
    v113 = sub_232013174(v113, v114, v115);
    sub_232201710();
    swift_bridgeObjectRelease();
    sub_232002CEC((uint64_t)v53, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    *(_WORD *)(v71 + 12) = 2080;
    LOBYTE(v113) = v43;
    v77 = sub_232200F00();
    v113 = sub_232013174(v77, v78, v115);
    sub_232201710();
    swift_bridgeObjectRelease();
    *(_WORD *)(v71 + 22) = 2082;
    v79 = v95;
    sub_23200054C(v76, v95, (uint64_t (*)(_QWORD))sub_23202CAE4);
    v80 = sub_2321FE308();
    v81 = *(_QWORD *)(v80 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v79, 1, v80) == 1)
    {
      sub_232002CEC(v79, (uint64_t (*)(_QWORD))sub_23202CAE4);
      v82 = 0;
      v83 = 0;
    }
    else
    {
      v82 = sub_2321FE254();
      v83 = v85;
      (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v79, v80);
    }
    v86 = v108;
    v113 = v82;
    v114 = v83;
    sub_232000608(0, (unint64_t *)&qword_2541B78A0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    v87 = sub_232200F00();
    v113 = sub_232013174(v87, v88, v115);
    sub_232201710();
    swift_bridgeObjectRelease();
    sub_232002CEC(v76, (uint64_t (*)(_QWORD))sub_23202CAE4);
    _os_log_impl(&dword_231FFB000, v69, v70, "%{public}s: Created trend feed item at date range %s: %{public}s", (uint8_t *)v71, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v86, -1, -1);
    MEMORY[0x2348FF468](v71, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v109 + 8))(v111, v110);
  }
  else
  {
    sub_232002CEC((uint64_t)v53, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    sub_232002CEC(v41, (uint64_t (*)(_QWORD))sub_23202CAE4);

    return (*(uint64_t (**)(char *, uint64_t))(v109 + 8))(v42, v110);
  }
}

#error "2320AFC18: too big function (funcsize=0)"

uint64_t sub_2320C00A8(uint64_t a1)
{
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*(id *)(a1 + 32), sel_sensitiveLoggingIdentifier);
  v2 = sub_232200EC4();

  return v2;
}

uint64_t sub_2320C00FC(uint64_t a1, char a2, void **a3, void *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  id *v15;
  uint64_t v16;
  id *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _QWORD v37[2];
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;

  v42 = sub_2321FDCC0();
  v9 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v11 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory(0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (id *)((char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v13);
  v17 = (id *)((char *)v37 - v16);
  v18 = sub_23220039C();
  v19 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    sub_2320AA384(*a3, a3[2], *(uint64_t *)((char *)a3 + v12[11]), *(uint64_t *)((char *)a3 + v12[11] + 8), *((unsigned __int8 *)a3 + v12[13]), a3[4], a4, (uint64_t)a3 + v12[10], a5);
    type metadata accessor for TrendCoalescingNotificationViewModel();
    sub_232002B9C();
    sub_232000590(&qword_2541AFBE8, (uint64_t (*)(uint64_t))type metadata accessor for TrendCoalescingNotificationViewModel, (uint64_t)&unk_232216190);
    sub_232200618();
    return swift_release();
  }
  else
  {
    v40 = v20;
    v41 = v19;
    sub_23220036C();
    sub_23200054C((uint64_t)a3, (uint64_t)v17, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    sub_23200054C((uint64_t)a3, (uint64_t)v15, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    v24 = sub_232200390();
    v25 = sub_2322012FC();
    v26 = v25;
    if (os_log_type_enabled(v24, v25))
    {
      v27 = swift_slowAlloc();
      v28 = swift_slowAlloc();
      v39 = v28;
      *(_DWORD *)v27 = 136446466;
      v37[1] = v27 + 4;
      v43 = 0xD000000000000037;
      v44 = 0x8000000232205C60;
      v45 = v28;
      v29 = objc_msgSend(*v17, sel_profileIdentifier);
      v38 = v26;
      v30 = v29;
      v31 = objc_msgSend(v29, sel_identifier);

      sub_2321FDCA8();
      sub_2321FDC84();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v42);
      sub_232200F48();
      swift_bridgeObjectRelease();
      v43 = sub_232013174(v43, v44, &v45);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC((uint64_t)v17, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
      *(_WORD *)(v27 + 12) = 2080;
      v32 = objc_msgSend(v15[4], sel_sensitiveLoggingIdentifier);
      v33 = sub_232200EC4();
      v35 = v34;

      v43 = sub_232013174(v33, v35, &v45);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC((uint64_t)v15, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
      _os_log_impl(&dword_231FFB000, v24, (os_log_type_t)v38, "%{public}s: Not generating notification for %s", (uint8_t *)v27, 0x16u);
      v36 = v39;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v36, -1, -1);
      MEMORY[0x2348FF468](v27, -1, -1);
    }
    else
    {
      sub_232002CEC((uint64_t)v17, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
      sub_232002CEC((uint64_t)v15, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v22, v41);
  }
}

void sub_2320C0548(uint64_t a1)
{
  sub_2320057B8(a1, &qword_2541B5498, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
}

uint64_t type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory(uint64_t a1)
{
  return sub_23201A14C(a1, (uint64_t *)&unk_2541B2768);
}

void sub_2320C0578()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2541B3E10)
  {
    sub_2320C0684(255, &qword_2541B3E08, &qword_2541B3AE8, &qword_2541B0CE0, 0x24BE4A528);
    sub_2320C0684(255, &qword_2541B3E00, &qword_2541B3AE0, &qword_2541B0CB8, 0x24BE4A370);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2541B3E10);
  }
}

void sub_2320C0624(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_232003E9C(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_2320C0684(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    sub_2320C0624(255, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelDerivedContent);
    v10 = type metadata accessor for SummaryModelProcessingResult(a1, v7, v8, v9);
    if (!v11)
      atomic_store(v10, a2);
  }
}

unint64_t sub_2320C06E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B2F80;
  if (!qword_2541B2F80)
  {
    sub_2320C27F0(255, (unint64_t *)&qword_2541B2F88, (uint64_t (*)(uint64_t))sub_2320C0548, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB9AF8], v1);
    atomic_store(result, (unint64_t *)&qword_2541B2F80);
  }
  return result;
}

unint64_t sub_2320C0748()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F9E098;
  if (!qword_255F9E098)
  {
    sub_2320057B8(255, &qword_2541B3078, (uint64_t (*)(uint64_t))sub_2320C0548, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB9DF8], v1);
    atomic_store(result, (unint64_t *)&qword_255F9E098);
  }
  return result;
}

void sub_2320C07A8(uint64_t a1)
{
  sub_2320258FC(a1, &qword_2541B2E68, (uint64_t (*)(uint64_t))sub_2320C07CC, sub_2320C07E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB99B8]);
}

void sub_2320C07CC(uint64_t a1)
{
  sub_2320C27F0(a1, &qword_2541B2ED8, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0], (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
}

uint64_t sub_2320C07E8()
{
  return sub_232000590(&qword_2541B2ED0, (uint64_t (*)(uint64_t))sub_2320C07CC, MEMORY[0x24BDB9AF8]);
}

uint64_t sub_2320C0804()
{
  return sub_232000590(&qword_2541B2E60, (uint64_t (*)(uint64_t))sub_2320C07A8, MEMORY[0x24BDB99D8]);
}

uint64_t sub_2320C0820@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2320AC94C(*a1, a2);
}

uint64_t sub_2320C0828(char *a1, void *a2, uint64_t a3, int a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  uint64_t (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  id *v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  char *v52;
  uint64_t v53;
  unint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  void (*v59)(char *, uint64_t, uint64_t);
  char *v60;
  uint64_t v61;
  void *v62;
  char *v63;
  uint64_t v64;
  char v65;
  id v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  unint64_t v87;
  id v88;
  char *v89;
  uint64_t v90;
  char *v91;
  id *v92;
  NSObject *v93;
  os_log_type_t v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  id v98;
  char *v99;
  uint64_t v100;
  unint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  id *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  void *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  id *v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  int v136;
  uint64_t v137;
  __int128 v138;
  uint64_t v139;
  uint64_t v140[5];

  v137 = a7;
  v118 = a5;
  v136 = a4;
  v115 = a3;
  v117 = a2;
  v133 = a1;
  sub_2320C27F0(0, &qword_2541B30A8, (uint64_t (*)(uint64_t))sub_23202CAE4, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9E10]);
  v128 = v8;
  v127 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v126 = (char *)&v104 - v9;
  v123 = sub_2321FDCC0();
  v122 = *(_QWORD *)(v123 - 8);
  MEMORY[0x24BDAC7A8](v123);
  v121 = (char *)&v104 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23220039C();
  v129 = *(_QWORD *)(v11 - 8);
  v130 = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v125 = (char *)&v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v110 = (char *)&v104 - v14;
  v116 = type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory(0);
  v111 = *(_QWORD *)(v116 - 8);
  v15 = *(_QWORD *)(v111 + 64);
  v16 = MEMORY[0x24BDAC7A8](v116);
  v124 = (id *)((char *)&v104 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = MEMORY[0x24BDAC7A8](v16);
  v109 = (id *)((char *)&v104 - v18);
  MEMORY[0x24BDAC7A8](v17);
  v119 = (uint64_t)&v104 - v19;
  sub_23202CEF8(0, &qword_2541B2408, sub_2320C27D4, sub_23202CAE4, (void (*)(void))sub_2320C2874);
  v114 = v20;
  v113 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v112 = (char *)&v104 - v21;
  v22 = sub_2321FFF04();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v120 = (char *)&v104 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B2AA8, v26, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v104 - v28;
  sub_2320057B8(0, &qword_2541B2A50, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ACD0], v25);
  MEMORY[0x24BDAC7A8](v30);
  v132 = (char *)&v104 - v31;
  v32 = sub_2321FFD54();
  v134 = *(_QWORD *)(v32 - 8);
  v135 = v32;
  v33 = *(_QWORD *)(v134 + 64);
  v34 = MEMORY[0x24BDAC7A8](v32);
  MEMORY[0x24BDAC7A8](v34);
  v36 = (char *)&v104 - v35;
  v140[3] = sub_2321FE128();
  v140[4] = sub_232000590(&qword_2541B2330, (uint64_t (*)(uint64_t))MEMORY[0x24BE47380], MEMORY[0x24BE47378]);
  v140[0] = a6;
  v37 = *(void **)(v137 + 32);
  swift_retain();
  v38 = (void *)sub_2322011C4();
  v39 = sub_2321D59A0(v37);
  v131 = v40;

  HKCodableSummaryTrendValue.engineOutput.getter((uint64_t)v29);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v29, 1, v22))
  {
    sub_232016D88((uint64_t)v29, &qword_2541B2AA8, (uint64_t (*)(uint64_t))MEMORY[0x24BE4B528]);
    v41 = (uint64_t)v132;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v134 + 56))(v132, 1, 1, v135);
LABEL_4:
    swift_bridgeObjectRelease();
    sub_232016D88(v41, &qword_2541B2A50, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ACD0]);
    v44 = v125;
    sub_232200318();
    v45 = v124;
    sub_23200054C(v137, (uint64_t)v124, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    v46 = sub_232200390();
    v47 = sub_2322012CC();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = swift_slowAlloc();
      v49 = swift_slowAlloc();
      v139 = v49;
      *(_DWORD *)v48 = 136446466;
      v137 = v48 + 4;
      *(_QWORD *)&v138 = 0xD000000000000037;
      *((_QWORD *)&v138 + 1) = 0x8000000232205C60;
      v50 = objc_msgSend(*v45, sel_profileIdentifier);
      v51 = objc_msgSend(v50, sel_identifier);

      v52 = v121;
      sub_2321FDCA8();

      sub_2321FDC84();
      (*(void (**)(char *, uint64_t))(v122 + 8))(v52, v123);
      sub_232200F48();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v138 = sub_232013174(v138, *((unint64_t *)&v138 + 1), &v139);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC((uint64_t)v45, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
      *(_WORD *)(v48 + 12) = 2080;
      v53 = sub_23220021C();
      *(_QWORD *)&v138 = sub_232013174(v53, v54, &v139);
      sub_232201710();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v46, v47, "%{public}s: No meanShiftChange, displaying no trend for coveredDateRange=%s", (uint8_t *)v48, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v49, -1, -1);
      MEMORY[0x2348FF468](v48, -1, -1);
    }
    else
    {
      sub_232002CEC((uint64_t)v45, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    }

    (*(void (**)(char *, uint64_t))(v129 + 8))(v44, v130);
    sub_23202CAE4(0);
    v55 = v126;
    sub_2322006C0();
    sub_2320C2AC4();
    v56 = v128;
    v57 = sub_232200774();
    (*(void (**)(char *, uint64_t))(v127 + 8))(v55, v56);
    goto LABEL_8;
  }
  v105 = v39;
  v106 = v33;
  v133 = (char *)&v104 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = v15;
  v108 = v36;
  v42 = v120;
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v120, v29, v22);
  sub_232016D88((uint64_t)v29, &qword_2541B2AA8, (uint64_t (*)(uint64_t))MEMORY[0x24BE4B528]);
  v41 = (uint64_t)v132;
  sub_2321FFEB0();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v42, v22);
  v43 = v134;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v134 + 48))(v41, 1, v135) == 1)
    goto LABEL_4;
  v59 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 32);
  v60 = v108;
  v59(v108, v41, v135);
  type metadata accessor for TrendComponentBuilder();
  v61 = v137;
  v62 = *(void **)v137;
  v63 = *(char **)(v137 + 32);
  v64 = v116;
  v65 = v136;
  v66 = sub_2321D62AC(*(void **)v137, *(void **)(v137 + 24), v63, (uint8_t *)(v137 + *(int *)(v116 + 36)), v60, v136, v117, v118, v137 + *(int *)(v116 + 40));
  if (v66)
  {
    v67 = v66;
    v68 = sub_2322011C4();
    v132 = (char *)v59;
    v69 = v43;
    v70 = (void *)v68;
    *(_QWORD *)&v138 = sub_2321D59A0(v63);
    *((_QWORD *)&v138 + 1) = v71;
    sub_232200F48();

    v129 = *((_QWORD *)&v138 + 1);
    v130 = v138;
    v72 = *(_QWORD *)(v61 + *(int *)(v64 + 48));
    v73 = v67;
    v139 = sub_2320C15B8(v140[0], v62, v67, v138, *((uint64_t *)&v138 + 1), v72);
    sub_23200054C(v61, v119, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    v74 = v60;
    v75 = v135;
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v133, v74, v135);
    sub_23201B304((uint64_t)v140, (uint64_t)&v138);
    v76 = (*(unsigned __int8 *)(v111 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v111 + 80);
    v77 = (v107 + v76 + 7) & 0xFFFFFFFFFFFFFFF8;
    v78 = (v77 + 23) & 0xFFFFFFFFFFFFFFF8;
    v79 = (*(unsigned __int8 *)(v69 + 80) + v78 + 16) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
    v80 = (v106 + v79 + 7) & 0xFFFFFFFFFFFFFFF8;
    v81 = v65;
    v82 = swift_allocObject();
    *(_QWORD *)(v82 + 16) = v73;
    sub_232025468(v119, v82 + v76, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    v83 = (uint64_t *)(v82 + v77);
    v84 = v129;
    *v83 = v130;
    v83[1] = v84;
    v85 = (uint64_t *)(v82 + v78);
    v86 = v131;
    *v85 = v105;
    v85[1] = v86;
    ((void (*)(unint64_t, char *, uint64_t))v132)(v82 + v79, v133, v75);
    v87 = v82 + v80;
    *(_QWORD *)v87 = v115;
    *(_BYTE *)(v87 + 8) = v81;
    *(_BYTE *)(v87 + 9) = 0;
    sub_2320167F8(&v138, v82 + ((v80 + 17) & 0xFFFFFFFFFFFFFFF8));
    sub_2320C27D4(0);
    sub_23202CAE4(0);
    sub_2320C2874();
    v88 = v73;
    swift_bridgeObjectRetain();
    v89 = v112;
    sub_2322007A4();
    swift_release();
    swift_release();
    sub_2320C2DD4();
    v90 = v114;
    v57 = sub_232200774();

    (*(void (**)(char *, uint64_t))(v113 + 8))(v89, v90);
    (*(void (**)(char *, uint64_t))(v134 + 8))(v108, v75);
  }
  else
  {
    swift_bridgeObjectRelease();
    v91 = v110;
    sub_232200318();
    v92 = v109;
    sub_23200054C(v61, (uint64_t)v109, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
    v93 = sub_232200390();
    v94 = sub_2322012CC();
    if (os_log_type_enabled(v93, v94))
    {
      v95 = swift_slowAlloc();
      v96 = swift_slowAlloc();
      v139 = v96;
      *(_DWORD *)v95 = 136446466;
      v137 = v95 + 4;
      *(_QWORD *)&v138 = 0xD000000000000037;
      *((_QWORD *)&v138 + 1) = 0x8000000232205C60;
      v97 = objc_msgSend(*v92, sel_profileIdentifier);
      v98 = objc_msgSend(v97, sel_identifier);

      v99 = v121;
      sub_2321FDCA8();

      sub_2321FDC84();
      (*(void (**)(char *, uint64_t))(v122 + 8))(v99, v123);
      sub_232200F48();
      v60 = v108;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v138 = sub_232013174(v138, *((unint64_t *)&v138 + 1), &v139);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC((uint64_t)v92, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);
      *(_WORD *)(v95 + 12) = 2080;
      v100 = sub_23220021C();
      *(_QWORD *)&v138 = sub_232013174(v100, v101, &v139);
      v43 = v134;
      sub_232201710();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v93, v94, "%{public}s: No meanShiftViewModel, displaying no trend for coveredDateRange=%s", (uint8_t *)v95, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v96, -1, -1);
      MEMORY[0x2348FF468](v95, -1, -1);

      (*(void (**)(char *, uint64_t))(v129 + 8))(v110, v130);
    }
    else
    {
      sub_232002CEC((uint64_t)v92, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory);

      (*(void (**)(char *, uint64_t))(v129 + 8))(v91, v130);
    }
    sub_23202CAE4(0);
    v102 = v126;
    sub_2322006C0();
    sub_2320C2AC4();
    v103 = v128;
    v57 = sub_232200774();
    (*(void (**)(char *, uint64_t))(v127 + 8))(v102, v103);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v60, v135);
  }
LABEL_8:
  sub_232016AFC((uint64_t)v140);
  return v57;
}

uint64_t sub_2320C15B8(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57[2];
  uint64_t v58;
  _QWORD v59[6];

  v56 = a6;
  v44 = a5;
  v43 = a4;
  v49 = a3;
  sub_2320C4094();
  v52 = v8;
  v54 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v50 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320C4194();
  v53 = v10;
  v55 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v51 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, (unint64_t *)&qword_2541B5628, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v41 - v13;
  sub_2320C42B0();
  v16 = v15;
  v46 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320C43E8();
  v20 = v19;
  v47 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_2321FE128();
  v59[3] = v48;
  v45 = sub_232000590(&qword_2541B2330, (uint64_t (*)(uint64_t))MEMORY[0x24BE47380], MEMORY[0x24BE47378]);
  v59[4] = v45;
  v59[0] = a1;
  v23 = objc_allocWithZone(MEMORY[0x24BDD3C98]);
  swift_retain();
  v24 = a2;
  v25 = (void *)sub_232200E94();
  v26 = objc_msgSend(v23, sel_initWithCategory_domainName_healthStore_, 1, v25, v24);

  v42 = v26;
  *(_QWORD *)&v57[0] = sub_2322013BC();
  v58 = v56;
  v27 = sub_2322014A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v14, 1, 1, v27);
  sub_2320C4364();
  sub_232003E9C(0, &qword_2541B0C48);
  sub_232000590((unint64_t *)&qword_2541B30E0, (uint64_t (*)(uint64_t))sub_2320C4364, MEMORY[0x24BDB9E58]);
  sub_23205B734();
  sub_232200840();
  sub_232016D88((uint64_t)v14, (unint64_t *)&qword_2541B5628, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0]);
  swift_release();
  v28 = swift_allocObject();
  v29 = v49;
  *(_QWORD *)(v28 + 16) = v49;
  sub_232000608(0, (unint64_t *)&qword_2541B78A0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
  sub_232000590(&qword_2541B2E90, (uint64_t (*)(uint64_t))sub_2320C42B0, MEMORY[0x24BDB9A08]);
  v30 = v29;
  sub_2322007A4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v18, v16);
  sub_232000590(&qword_2541B2D00, (uint64_t (*)(uint64_t))sub_2320C43E8, MEMORY[0x24BDB96C0]);
  sub_232200774();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v22, v20);
  v31 = v43;
  v32 = v44;
  v58 = sub_2321FE908();
  sub_23201B304((uint64_t)v59, (uint64_t)v57);
  v33 = swift_allocObject();
  sub_2320167F8(v57, v33 + 16);
  *(_QWORD *)(v33 + 56) = v31;
  *(_QWORD *)(v33 + 64) = v32;
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = sub_2320C4514;
  *(_QWORD *)(v34 + 24) = v33;
  swift_bridgeObjectRetain();
  sub_23220060C();
  sub_232048D04();
  sub_2320C2858(0);
  sub_2320C3568(0, &qword_2541B24F0, (uint64_t (*)(uint64_t))sub_2320C2858, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_23202CC44();
  sub_2320C4134();
  v35 = v50;
  sub_232200828();
  swift_release();
  swift_release();
  sub_2320057B8(0, &qword_2541B2500, (uint64_t (*)(uint64_t))sub_2320C2858, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  sub_232000590(&qword_2541B2488, (uint64_t (*)(uint64_t))sub_2320C4094, MEMORY[0x24BDB98F0]);
  sub_2320C4250();
  v37 = v51;
  v36 = v52;
  sub_2322007D4();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v35, v36);
  sub_232000590(&qword_2541B2458, (uint64_t (*)(uint64_t))sub_2320C4194, MEMORY[0x24BDB9740]);
  v38 = v53;
  v39 = sub_232200774();

  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v37, v38);
  sub_232016AFC((uint64_t)v59);
  return v39;
}

uint64_t sub_2320C1C20(void *a1)
{
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint32_t *p_align;
  id v29;
  void *v30;
  unint64_t v31;
  uint64_t v32;
  char *v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  id v57;
  void *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  void *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  unint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  unint64_t v93;

  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B2A48, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ACB8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v86 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v80 - v6;
  v8 = sub_2321FFF04();
  v84 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v87 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, &qword_2541B2AA8, v10, v2);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v80 - v15;
  sub_2320057B8(0, &qword_2541B2A50, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ACD0], v2);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (uint64_t)&v80 - v21;
  v23 = sub_2321FFD54();
  v92 = *(_QWORD *)(v23 - 8);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v85 = (char *)&v80 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (uint64_t)&v80 - v26;
  if (!a1)
    return 0;
  p_align = &stru_25010DFE8.align;
  v82 = a1;
  v29 = objc_msgSend(v82, sel_trendValues);
  if (!v29
    || (v30 = v29, v93 = 0, sub_232003E9C(0, &qword_2541B0C88), sub_23220102C(), v30, (v31 = v93) == 0))
  {
    swift_bridgeObjectRelease();
    v31 = MEMORY[0x24BEE4AF8];
  }
  v91 = v20;
  v83 = v8;
  v88 = v14;
  if (v31 >> 62)
    goto LABEL_35;
  v32 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v32; v32 = sub_232201998())
  {
    v89 = (unint64_t)v16;
    v90 = v22;
    v80 = (uint64_t)v7;
    v81 = v27;
    v22 = 4;
    while (1)
    {
      p_align = (uint32_t *)(v22 - 4);
      v33 = (v31 & 0xC000000000000001) != 0
          ? (char *)MEMORY[0x2348FEA30](v22 - 4, v31)
          : (char *)*(id *)(v31 + 8 * v22);
      v16 = v33;
      v7 = (char *)(v22 - 3);
      if (__OFADD__(p_align, 1))
        break;
      if (objc_msgSend(v33, sel_hasCoveredDateRangeRawValue))
      {
        v34 = objc_msgSend(v16, sel_coveredDateRangeRawValue);
        if (v34)
        {
          v35 = v34;
          v36 = sub_232200EC4();
          v27 = v37;

          v38 = v36;
          v14 = v88;
          if (MEMORY[0x2348FD38C](v38, v27) != 6)
          {
            v39 = sub_23220021C();
            v41 = v40;
            if (v39 == sub_23220021C() && v41 == v42)
            {
              swift_bridgeObjectRelease_n();
              v14 = v88;
LABEL_22:
              swift_bridgeObjectRelease_n();
              v46 = v89;
              HKCodableSummaryTrendValue.engineOutput.getter(v89);
              v45 = v83;
              v44 = v84;
              v47 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v46, 1, v83);
              v48 = v90;
              if (v47)
              {
                sub_232016D88(v46, &qword_2541B2AA8, (uint64_t (*)(uint64_t))MEMORY[0x24BE4B528]);
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v92 + 56))(v48, 1, 1, v23);
                goto LABEL_25;
              }
              v49 = v87;
              (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v87, v46, v45);
              sub_232016D88(v46, &qword_2541B2AA8, (uint64_t (*)(uint64_t))MEMORY[0x24BE4B528]);
              sub_2321FFEB0();
              (*(void (**)(char *, uint64_t))(v44 + 8))(v49, v45);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v48, 1, v23) == 1)
              {
LABEL_25:

                sub_232016D88(v48, &qword_2541B2A50, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ACD0]);
                v80 = 0;
                v81 = 0;
              }
              else
              {
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v92 + 32))(v81, v48, v23);
                v50 = sub_2321FFD3C();
                v51 = *(_QWORD *)(v50 + 16);
                if (v51)
                {
                  v52 = v51 - 1;
                  v53 = sub_2321FFD30();
                  v54 = *(_QWORD *)(v53 - 8);
                  v55 = v50
                      + ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))
                      + *(_QWORD *)(v54 + 72) * v52;
                  v56 = v80;
                  (*(void (**)(uint64_t, unint64_t, uint64_t))(v54 + 16))(v80, v55, v53);
                  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v54 + 56))(v56, 0, 1, v53);
                }
                else
                {
                  v53 = sub_2321FFD30();
                  v56 = v80;
                  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v80, 1, 1, v53);
                }
                swift_bridgeObjectRelease();
                sub_2321FFD30();
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 48))(v56, 1, v53) == 1)
                {
                  sub_232016D88(v56, &qword_2541B2A48, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ACB8]);

                  (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v81, v23);
                  v80 = 1;
                  v81 = 1;
                }
                else
                {

                  sub_232016D88(v56, &qword_2541B2A48, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ACB8]);
                  (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v81, v23);
                  v80 = 0;
                  v81 = 0;
                }
                v44 = v84;
              }
LABEL_26:
              p_align = (_DWORD *)(&stru_25010DFE8 + 24);
              goto LABEL_37;
            }
            v27 = sub_232201ADC();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v14 = v88;
            if ((v27 & 1) != 0)
              goto LABEL_22;
          }
        }
      }

      ++v22;
      if (v7 == (char *)v32)
      {
        swift_bridgeObjectRelease_n();
        v80 = 0;
        v81 = 0;
        v45 = v83;
        v44 = v84;
        goto LABEL_26;
      }
    }
    __break(1u);
LABEL_35:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease_n();
  v80 = 0;
  v81 = 0;
  v45 = v83;
  v44 = v84;
LABEL_37:
  v57 = objc_msgSend(v82, *((SEL *)p_align + 335), v80);
  if (!v57
    || (v58 = v57, v93 = 0, sub_232003E9C(0, &qword_2541B0C88), sub_23220102C(), v58, (v59 = v93) == 0))
  {
    swift_bridgeObjectRelease();
    v59 = MEMORY[0x24BEE4AF8];
  }
  if (v59 >> 62)
  {
LABEL_60:
    swift_bridgeObjectRetain();
    v90 = sub_232201998();
    if (v90)
      goto LABEL_42;
LABEL_61:
    swift_bridgeObjectRelease_n();

    return v81;
  }
  v60 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v90 = v60;
  if (!v60)
    goto LABEL_61;
LABEL_42:
  v89 = v59 & 0xC000000000000001;
  v61 = 4;
  while (1)
  {
    if (v89)
      v63 = (id)MEMORY[0x2348FEA30](v61 - 4, v59);
    else
      v63 = *(id *)(v59 + 8 * v61);
    v64 = v63;
    v65 = v61 - 3;
    if (__OFADD__(v61 - 4, 1))
    {
      __break(1u);
      goto LABEL_60;
    }
    HKCodableSummaryTrendValue.engineOutput.getter((uint64_t)v14);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v14, 1, v45))
      break;
    sub_232016D88((uint64_t)v14, &qword_2541B2AA8, (uint64_t (*)(uint64_t))MEMORY[0x24BE4B528]);
    v62 = (uint64_t)v91;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v92 + 56))(v91, 1, 1, v23);
LABEL_44:
    sub_232016D88(v62, &qword_2541B2A50, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ACD0]);
LABEL_45:

    ++v61;
    if (v65 == v90)
      goto LABEL_61;
  }
  v66 = v87;
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v87, v14, v45);
  sub_232016D88((uint64_t)v14, &qword_2541B2AA8, (uint64_t (*)(uint64_t))MEMORY[0x24BE4B528]);
  v67 = v23;
  v68 = (uint64_t)v91;
  sub_2321FFEB0();
  v69 = v66;
  v62 = v68;
  v23 = v67;
  (*(void (**)(char *, uint64_t))(v44 + 8))(v69, v45);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v62, 1, v67) == 1)
    goto LABEL_44;
  (*(void (**)(char *, uint64_t, uint64_t))(v92 + 32))(v85, v62, v67);
  v70 = sub_2321FFD3C();
  v71 = *(_QWORD *)(v70 + 16);
  if (v71)
  {
    v72 = v71 - 1;
    v73 = sub_2321FFD30();
    v74 = v86;
    v75 = *(_QWORD *)(v73 - 8);
    v76 = v70
        + ((*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80))
        + *(_QWORD *)(v75 + 72) * v72;
    v45 = v83;
    (*(void (**)(char *, unint64_t, uint64_t))(v75 + 16))(v86, v76, v73);
    v77 = v74;
    v44 = v84;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v77, 0, 1, v73);
  }
  else
  {
    v73 = sub_2321FFD30();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v86, 1, 1, v73);
  }
  swift_bridgeObjectRelease();
  sub_2321FFD30();
  v78 = (uint64_t)v86;
  v79 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 48))(v86, 1, v73);
  sub_232016D88(v78, &qword_2541B2A48, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ACB8]);
  v23 = v67;
  (*(void (**)(char *, uint64_t))(v92 + 8))(v85, v67);
  v14 = v88;
  if (v79 == 1)
    goto LABEL_45;

  swift_bridgeObjectRelease_n();
  if ((_DWORD)v80)
    return v81 | 2;
  else
    return 3;
}

uint64_t sub_2320C25FC@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_2320AEC30(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32), *(_QWORD *)(v2 + 40), *(void **)(v2 + 48), *(_QWORD *)(v2 + 56), a2);
}

unint64_t sub_2320C261C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B54D0;
  if (!qword_2541B54D0)
  {
    sub_2320057B8(255, &qword_2541B54C8, (uint64_t (*)(uint64_t))sub_2320C07CC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2541B54D0);
  }
  return result;
}

unint64_t sub_2320C267C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B2DB8;
  if (!qword_2541B2DB8)
  {
    sub_2320258FC(255, &qword_2541B2DC0, (uint64_t (*)(uint64_t))sub_2320C07A8, sub_2320C0804, MEMORY[0x24BDB98D0]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB98D8], v1);
    atomic_store(result, (unint64_t *)&qword_2541B2DB8);
  }
  return result;
}

void sub_2320C26E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2B18)
  {
    sub_2320C27F0(255, (unint64_t *)&qword_2541B2EC8, (uint64_t (*)(uint64_t))sub_23202CAE4, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_2321FE308();
    sub_2320C2774();
    v0 = sub_2322004EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2B18);
  }
}

unint64_t sub_2320C2774()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541AF280;
  if (!qword_2541AF280)
  {
    sub_2320C27F0(255, (unint64_t *)&qword_2541B2EC8, (uint64_t (*)(uint64_t))sub_23202CAE4, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB9AF8], v1);
    atomic_store(result, (unint64_t *)&qword_2541AF280);
  }
  return result;
}

void sub_2320C27D4(uint64_t a1)
{
  sub_2320C27F0(a1, &qword_2541B24E0, (uint64_t (*)(uint64_t))sub_2320C2858, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
}

void sub_2320C27F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, _QWORD, _QWORD))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7, MEMORY[0x24BEE4078], MEMORY[0x24BEE40A8]);
    if (!v9)
      atomic_store(v8, a2);
  }
}

void sub_2320C2858(uint64_t a1)
{
  sub_2320C3568(a1, &qword_2541B27C8, (uint64_t (*)(uint64_t))sub_23209398C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BEE4408]);
}

uint64_t sub_2320C2874()
{
  return sub_232000590(&qword_2541B24D8, (uint64_t (*)(uint64_t))sub_2320C27D4, MEMORY[0x24BDB9AF8]);
}

uint64_t sub_2320C2890(void *a1, uint64_t a2, uint64_t a3)
{
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  id v8;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = 0;
  v5 = *(_QWORD *)(a3 + 16);
  v13 = MEMORY[0x24BEE4B08];
  do
  {
    v6 = v4;
    if (v5)
    {
      v10 = v4;
      swift_bridgeObjectRetain();
      v7 = 0;
      do
      {
        ++v7;
        v11 = 0;
        v12 = 0xE000000000000000;
        sub_23220189C();
        sub_232201920();
        sub_232200F48();
        sub_232201920();
        sub_232200F48();
        sub_232201920();
        sub_232200F48();
        v8 = objc_msgSend(a1, sel_identifier);
        sub_232200EC4();

        sub_232200F48();
        swift_bridgeObjectRelease();
        sub_232200F48();
        sub_2321FE1AC();
        sub_232200F48();
        swift_bridgeObjectRelease();
        sub_2321A1880(&v11, v11, v12);
        swift_bridgeObjectRelease();
      }
      while (v5 != v7);
      swift_bridgeObjectRelease();
      v6 = v10;
    }
    v4 = 1;
  }
  while ((v6 & 1) == 0);
  return v13;
}

unint64_t sub_2320C2AC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B30A0;
  if (!qword_2541B30A0)
  {
    sub_2320C27F0(255, &qword_2541B30A8, (uint64_t (*)(uint64_t))sub_23202CAE4, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9E10]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB9E20], v1);
    atomic_store(result, (unint64_t *)&qword_2541B30A0);
  }
  return result;
}

uint64_t sub_2320C2B24()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = (int *)type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_2321FFD54();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v16 = v6;
  v17 = v5;
  v15 = *(_QWORD *)(v6 + 64);

  v8 = v0 + v3 + v1[9];
  v9 = sub_2321FDDD4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = v0 + v3 + v1[10];
  v11 = sub_2321FE584();
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    (*(void (**)(unint64_t, uint64_t))(v12 + 8))(v10, v11);
  v13 = (v7 + ((((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v7;
  swift_unknownObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v16 + 8))(v0 + v13, v17);
  swift_bridgeObjectRelease();
  sub_232016AFC(v0 + ((((v15 + v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 17) & 0xFFFFFFFFFFFFFFF8));
  return swift_deallocObject();
}

uint64_t sub_2320C2CEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v5 = *(_QWORD *)(type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(sub_2321FFD54() - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + v8 + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = (*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_2320AF258(a1, *(void **)(v2 + 16), v2 + v6, *(_QWORD *)(v2 + v7), *(_QWORD *)(v2 + v7 + 8), *(_QWORD *)(v2 + v8), *(_QWORD *)(v2 + v8 + 8), v2 + v10, a2, *(_QWORD *)(v2 + v11), *(_BYTE *)(v2 + v11 + 8), *(_BYTE *)(v2 + v11 + 9), v2 + ((v11 + 17) & 0xFFFFFFFFFFFFFFF8));
}

unint64_t sub_2320C2DD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B2400;
  if (!qword_2541B2400)
  {
    sub_23202CEF8(255, &qword_2541B2408, sub_2320C27D4, sub_23202CAE4, (void (*)(void))sub_2320C2874);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB96C0], v1);
    atomic_store(result, (unint64_t *)&qword_2541B2400);
  }
  return result;
}

uint64_t sub_2320C2E48()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  id *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = (int *)type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory(0);
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = (id *)(v0 + ((v2 + 16) & ~v2));

  v4 = (char *)v3 + v1[9];
  v5 = sub_2321FDDD4();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (char *)v3 + v1[10];
  v7 = sub_2321FE584();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2320C2F6C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory(0)
                                      - 8)
                          + 80);
  return sub_2320C00A8(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_2320C2F98()
{
  return swift_deallocObject();
}

_BYTE **sub_2320C2FA8(_BYTE **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_232013764(a1, a2, a3, *(_BYTE *)(v3 + 16));
}

uint64_t sub_2320C2FB0()
{
  return swift_deallocObject();
}

uint64_t sub_2320C2FC0()
{
  uint64_t v0;

  return sub_2320130E4(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_2320C2FC8(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  return sub_232013104(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_2320C2FD0()
{
  return swift_deallocObject();
}

uint64_t sub_2320C2FE0()
{
  return swift_deallocObject();
}

unint64_t sub_2320C2FF0()
{
  unint64_t result;

  result = qword_2541B7610;
  if (!qword_2541B7610)
  {
    sub_232000608(255, qword_2541B7538, MEMORY[0x24BEE4260], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C28]);
    sub_2320057B8(255, &qword_2541B75F0, (uint64_t (*)(uint64_t))sub_2320C309C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    sub_2320C3110();
    result = swift_getFunctionTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_2541B7610);
  }
  return result;
}

void sub_2320C309C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B75E8)
  {
    sub_2320C0624(255, (unint64_t *)&qword_2541B78B0, qword_2541B74A8, 0x24BEDCDF0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v0 = sub_2322016BC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B75E8);
  }
}

void sub_2320C3110()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B7600)
  {
    sub_232000608(255, &qword_2541B75F8, MEMORY[0x24BEE4AD8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C28]);
    v0 = sub_2322016F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B7600);
  }
}

uint64_t sub_2320C3184()
{
  type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory(0);
  return sub_2320AE548();
}

uint64_t sub_2320C31BC()
{
  return swift_deallocObject();
}

uint64_t sub_2320C31CC()
{
  return swift_deallocObject();
}

uint64_t sub_2320C31DC()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v1 = (int *)type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = v0 + v3;

  v6 = v0 + v3 + v1[9];
  v7 = sub_2321FDDD4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v0 + v3 + v1[10];
  v9 = sub_2321FE584();
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v8, v9);
  v11 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();

  swift_release();
  sub_232016AFC(v0 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8));
  return swift_deallocObject();
}

uint64_t sub_2320C3324(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_2320C00FC(a1, *(_BYTE *)(v1 + 16), (void **)(v1 + v4), *(void **)(v1 + v5), v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_2320C3388()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2320C33AC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2320C33D8()
{
  return swift_deallocObject();
}

uint64_t sub_2320C33E8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_2320C33F0()
{
  return swift_deallocObject();
}

uint64_t sub_2320C3400()
{
  return swift_deallocObject();
}

uint64_t sub_2320C3410()
{
  return swift_deallocObject();
}

uint64_t sub_2320C3420()
{
  return swift_deallocObject();
}

uint64_t sub_2320C3430()
{
  return swift_deallocObject();
}

uint64_t sub_2320C3440()
{
  return swift_deallocObject();
}

uint64_t sub_2320C3450()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2320C3474()
{
  uint64_t v0;

  return sub_2321A185C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_2320C347C@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_2321A1834(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_2320C3484(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_2321A17DC(a1, a2, a3, *(void (**)(uint64_t *__return_ptr))(v3 + 16));
}

uint64_t sub_2320C3490()
{
  return swift_deallocObject();
}

uint64_t sub_2320C34A0()
{
  return swift_deallocObject();
}

void sub_2320C34B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B7378)
  {
    sub_2320C3568(255, &qword_2541B73A8, (uint64_t (*)(uint64_t))sub_232093744, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_23202F4A8(255, &qword_2541B7338, (void (*)(uint64_t))sub_23202F2A4, (void (*)(void))sub_23202F534);
    sub_2320C35D8();
    sub_23202F550();
    v0 = sub_2322005C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B7378);
  }
}

void sub_2320C3568(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, unint64_t, _QWORD))
{
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = sub_232002B9C();
    v9 = a4(a1, v7, v8, MEMORY[0x24BEE3F20]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

unint64_t sub_2320C35D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B73A0;
  if (!qword_2541B73A0)
  {
    sub_2320C3568(255, &qword_2541B73A8, (uint64_t (*)(uint64_t))sub_232093744, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB9AF8], v1);
    atomic_store(result, (unint64_t *)&qword_2541B73A0);
  }
  return result;
}

void sub_2320C3638()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B7388)
  {
    sub_2320C3568(255, &qword_2541B73B0, (uint64_t (*)(uint64_t))type metadata accessor for TrendCoalescingNotificationViewModel, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_2320C34B0();
    sub_2320C36FC();
    sub_232000590(&qword_2541B7370, (uint64_t (*)(uint64_t))sub_2320C34B0, MEMORY[0x24BDB98F0]);
    v0 = sub_2322005C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B7388);
  }
}

unint64_t sub_2320C36FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541AF298;
  if (!qword_2541AF298)
  {
    sub_2320C3568(255, &qword_2541B73B0, (uint64_t (*)(uint64_t))type metadata accessor for TrendCoalescingNotificationViewModel, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB9AF8], v1);
    atomic_store(result, (unint64_t *)&qword_2541AF298);
  }
  return result;
}

uint64_t sub_2320C375C()
{
  id *v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2320C3798@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_2320C3C84(*(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
  *a1 = result;
  return result;
}

uint64_t sub_2320C37C8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);

  swift_bridgeObjectRelease();
  v3 = sub_2321FE584();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3))
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2320C38A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2320C3904@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v2 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
  result = sub_2320AAD10(a1, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(void (**)(_QWORD, _QWORD))(v2 + 40), v2 + v7, *(_QWORD *)v8, *(_QWORD *)(v8 + 8), *(_BYTE *)(v8 + 16));
  *a2 = result;
  return result;
}

uint64_t sub_2320C399C()
{
  uint64_t v0;

  sub_232016AFC(v0 + 24);
  return swift_deallocObject();
}

uint64_t sub_2320C39C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2320ABB78(a1, a2, *(void **)(v2 + 16), (_QWORD *)(v2 + 24));
}

uint64_t sub_2320C39D4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t result;

  v5 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 16);
  sub_232093744();
  result = v5(a1, a1 + *(int *)(v6 + 48));
  *a2 = result;
  return result;
}

uint64_t sub_2320C3A1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for TrendCoalescingNotificationViewModel();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (id *)(v0 + ((v2 + 16) & ~v2));

  v4 = (char *)v3 + *(int *)(v1 + 20);
  v5 = sub_2321FE584();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2320C3AE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TrendCoalescingNotificationViewModel() - 8) + 80);
  return sub_232093724(v1 + ((v3 + 16) & ~v3), a1);
}

unint64_t sub_2320C3B1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F9E0B0;
  if (!qword_255F9E0B0)
  {
    sub_23202CEF8(255, &qword_255F9E0A8, (void (*)(uint64_t))sub_232048D04, (void (*)(uint64_t))type metadata accessor for TrendCoalescingNotificationViewModel, (void (*)(void))sub_23202CC44);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB96C0], v1);
    atomic_store(result, (unint64_t *)&qword_255F9E0B0);
  }
  return result;
}

void sub_2320C3B84(uint64_t a1)
{
  sub_2320057B8(a1, &qword_255F9E0D0, (uint64_t (*)(uint64_t))sub_232093744, MEMORY[0x24BDBA188]);
}

uint64_t sub_2320C3BA0()
{
  return sub_232000590(&qword_255F9E0E0, (uint64_t (*)(uint64_t))sub_2320C3B84, MEMORY[0x24BDBA198]);
}

unint64_t sub_2320C3BBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F9E0E8;
  if (!qword_255F9E0E8)
  {
    sub_2320C3568(255, &qword_255F9E0B8, (uint64_t (*)(uint64_t))sub_232093744, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9E10]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB9E20], v1);
    atomic_store(result, (unint64_t *)&qword_255F9E0E8);
  }
  return result;
}

uint64_t sub_2320C3C1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2320936B8(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_2320C3C24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F9E0F8;
  if (!qword_255F9E0F8)
  {
    sub_23202F4A8(255, &qword_255F9E0D8, sub_2320C3B84, (void (*)(void))sub_2320C3BA0);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB95F8], v1);
    atomic_store(result, (unint64_t *)&qword_255F9E0F8);
  }
  return result;
}

uint64_t sub_2320C3C84(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t);
  _QWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v50 = a3;
  sub_2320057B8(0, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v51 = (uint64_t)v41 - v13;
  v14 = sub_2321FDCC0();
  v46 = *(_QWORD *)(v14 - 8);
  v47 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23220039C();
  v48 = *(_QWORD *)(v17 - 8);
  v49 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23220036C();
  v20 = a1;
  v21 = sub_232200390();
  v22 = sub_2322012FC();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    v43 = a2;
    v24 = v23;
    v42 = swift_slowAlloc();
    v53 = v42;
    *(_DWORD *)v24 = 136315394;
    v52 = sub_232013174(0xD000000000000034, 0x8000000232213FA0, &v53);
    v44 = a4;
    sub_232201710();
    *(_WORD *)(v24 + 12) = 2080;
    v41[1] = v24 + 14;
    v25 = objc_msgSend(v20, sel_profileIdentifier);
    v26 = objc_msgSend(v25, sel_identifier);
    v45 = a5;
    v27 = v26;

    sub_2321FDCA8();
    v28 = sub_2321FDC84();
    v30 = v29;
    (*(void (**)(char *, uint64_t))(v46 + 8))(v16, v47);
    v52 = sub_232013174(v28, v30, &v53);
    a4 = v44;
    sub_232201710();

    a5 = v45;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_231FFB000, v21, v22, "[%s]_%s: [Trend Notification] Notifications are enabled", (uint8_t *)v24, 0x16u);
    v31 = v42;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v31, -1, -1);
    v32 = v24;
    a2 = v43;
    MEMORY[0x2348FF468](v32, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v48 + 8))(v19, v49);
  v33 = v51;
  sub_232031638(v51);
  v34 = v50;
  if (objc_msgSend(v50, sel_hasDiscoveryDateData))
  {
    objc_msgSend(v34, sel_discoveryDateData);
    v35 = (id)HKDecodeDateForValue();
    sub_2321FDC30();

    v36 = sub_2321FDC6C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v12, 0, 1, v36);
  }
  else
  {
    v37 = sub_2321FDC6C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v12, 1, 1, v37);
  }
  v38 = sub_23202A0F0(v20, a2, (uint64_t)v12, v33, a4, a5);
  v39 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  sub_232016D88((uint64_t)v12, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  sub_232016D88(v33, &qword_2541B7618, v39);
  return v38;
}

void sub_2320C4094()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2490)
  {
    sub_2320C3568(255, &qword_2541B24F0, (uint64_t (*)(uint64_t))sub_2320C2858, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_232048D04();
    sub_2320C4134();
    sub_23202CC44();
    v0 = sub_2322005C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2490);
  }
}

unint64_t sub_2320C4134()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B24E8;
  if (!qword_2541B24E8)
  {
    sub_2320C3568(255, &qword_2541B24F0, (uint64_t (*)(uint64_t))sub_2320C2858, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB9AF8], v1);
    atomic_store(result, (unint64_t *)&qword_2541B24E8);
  }
  return result;
}

void sub_2320C4194()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2460)
  {
    sub_2320C4094();
    sub_2320057B8(255, &qword_2541B2500, (uint64_t (*)(uint64_t))sub_2320C2858, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
    sub_232000590(&qword_2541B2488, (uint64_t (*)(uint64_t))sub_2320C4094, MEMORY[0x24BDB98F0]);
    sub_2320C4250();
    v0 = sub_23220057C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2460);
  }
}

unint64_t sub_2320C4250()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B24F8;
  if (!qword_2541B24F8)
  {
    sub_2320057B8(255, &qword_2541B2500, (uint64_t (*)(uint64_t))sub_2320C2858, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB9DF8], v1);
    atomic_store(result, (unint64_t *)&qword_2541B24F8);
  }
  return result;
}

void sub_2320C42B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2E98)
  {
    sub_2320C4364();
    sub_232003E9C(255, &qword_2541B0C48);
    sub_232000590((unint64_t *)&qword_2541B30E0, (uint64_t (*)(uint64_t))sub_2320C4364, MEMORY[0x24BDB9E58]);
    sub_23205B734();
    v0 = sub_232200600();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2E98);
  }
}

void sub_2320C4364()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B30E8)
  {
    sub_232000608(255, (unint64_t *)&qword_2541B78A0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    sub_232002B9C();
    v0 = sub_2322006D8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B30E8);
  }
}

void sub_2320C43E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2D08)
  {
    sub_2320C42B0();
    sub_232000608(255, (unint64_t *)&qword_2541B78A0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    sub_232000590(&qword_2541B2E90, (uint64_t (*)(uint64_t))sub_2320C42B0, MEMORY[0x24BDB9A08]);
    v0 = sub_232200540();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2D08);
  }
}

uint64_t sub_2320C4494()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_2320C44B8(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  sub_2320AC098(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(v2 + 16));
  *a2 = v4;
  a2[1] = v5;
}

uint64_t sub_2320C44E8()
{
  uint64_t v0;

  sub_232016AFC(v0 + 16);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2320C4514()
{
  uint64_t v0;

  return sub_2320937B0((_QWORD *)(v0 + 16));
}

uint64_t sub_2320C4520@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for TrendVisibilityOverrides()
{
  return &type metadata for TrendVisibilityOverrides;
}

char *sub_2320C4558(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  _QWORD *v34;
  uint64_t v35;
  id v36;
  uint64_t v38;
  char *v39;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    v7 = a1;
    v8 = a2[1];
    v9 = a2[2];
    *((_QWORD *)a1 + 1) = v8;
    *((_QWORD *)a1 + 2) = v9;
    v11 = a2[3];
    v10 = a2[4];
    *((_QWORD *)a1 + 3) = v11;
    *((_QWORD *)a1 + 4) = v10;
    v12 = a3[9];
    v38 = (uint64_t)a2 + v12;
    v39 = &a1[v12];
    v13 = sub_2321FDDD4();
    v14 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    v15 = v4;
    v16 = v8;
    v17 = v9;
    v18 = v11;
    v19 = v10;
    v14(v39, v38, v13);
    v20 = a3[10];
    v21 = &v7[v20];
    v22 = (char *)a2 + v20;
    v23 = sub_2321FE584();
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    v26 = a3[12];
    *(_OWORD *)&v7[a3[11]] = *(_OWORD *)((char *)a2 + a3[11]);
    v27 = *(char **)((char *)a2 + v26);
    *(_QWORD *)&v7[v26] = v27;
    v28 = a3[14];
    v7[a3[13]] = *((_BYTE *)a2 + a3[13]);
    v29 = &v7[v28];
    v30 = (uint64_t)a2 + v28;
    *(_QWORD *)v29 = *(_QWORD *)v30;
    v29[8] = *(_BYTE *)(v30 + 8);
    v31 = a3[15];
    v32 = a3[16];
    v33 = &v7[v31];
    v34 = (char **)((char *)a2 + v31);
    v35 = v34[1];
    *(_QWORD *)v33 = *v34;
    *((_QWORD *)v33 + 1) = v35;
    v7[v32] = *((_BYTE *)a2 + v32);
    swift_unknownObjectRetain();
    v36 = v27;
  }
  swift_retain();
  return v7;
}

uint64_t sub_2320C4724(id *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = (char *)a1 + a2[9];
  v5 = sub_2321FDDD4();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (char *)a1 + a2[10];
  v7 = sub_2321FE584();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  swift_unknownObjectRelease();

  return swift_release();
}

_QWORD *sub_2320C4804(_QWORD *a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  char *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  id v35;
  uint64_t v37;
  char *v38;

  v6 = *(void **)a2;
  v7 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v7;
  v8 = *(void **)(a2 + 16);
  v9 = *(void **)(a2 + 24);
  a1[2] = v8;
  a1[3] = v9;
  v10 = *(void **)(a2 + 32);
  a1[4] = v10;
  v11 = a3[9];
  v37 = a2 + v11;
  v38 = (char *)a1 + v11;
  v12 = sub_2321FDDD4();
  v13 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v14 = v6;
  v15 = v7;
  v16 = v8;
  v17 = v9;
  v18 = v10;
  v13(v38, v37, v12);
  v19 = a3[10];
  v20 = (char *)a1 + v19;
  v21 = (const void *)(a2 + v19);
  v22 = sub_2321FE584();
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v23 + 16))(v20, v21, v22);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  v25 = a3[12];
  *(_OWORD *)((char *)a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  v26 = *(void **)(a2 + v25);
  *(_QWORD *)((char *)a1 + v25) = v26;
  v27 = a3[14];
  *((_BYTE *)a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v28 = (char *)a1 + v27;
  v29 = a2 + v27;
  *(_QWORD *)v28 = *(_QWORD *)v29;
  v28[8] = *(_BYTE *)(v29 + 8);
  v30 = a3[15];
  v31 = a3[16];
  v32 = (_QWORD *)((char *)a1 + v30);
  v33 = (_QWORD *)(a2 + v30);
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  *((_BYTE *)a1 + v31) = *(_BYTE *)(a2 + v31);
  swift_unknownObjectRetain();
  v35 = v26;
  swift_retain();
  return a1;
}

uint64_t sub_2320C49B0(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(void *, uint64_t, uint64_t);
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  v9 = *(void **)(a2 + 8);
  v10 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v9;
  v11 = v9;

  v12 = *(void **)(a2 + 16);
  v13 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v12;
  v14 = v12;

  v15 = *(void **)(a2 + 24);
  v16 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v15;
  v17 = v15;

  v18 = *(void **)(a2 + 32);
  v19 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v18;
  v20 = v18;

  v21 = a3[9];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = sub_2321FDDD4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v22, v23, v24);
  v25 = a3[10];
  v26 = (void *)(a1 + v25);
  v27 = (void *)(a2 + v25);
  v28 = sub_2321FE584();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v29 + 48);
  v31 = v30(v26, 1, v28);
  v32 = v30(v27, 1, v28);
  if (!v31)
  {
    if (!v32)
    {
      (*(void (**)(void *, void *, uint64_t))(v29 + 24))(v26, v27, v28);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v29 + 8))(v26, v28);
    goto LABEL_6;
  }
  if (v32)
  {
LABEL_6:
    sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v29 + 16))(v26, v27, v28);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
LABEL_7:
  v34 = a3[11];
  v35 = (_QWORD *)(a1 + v34);
  v36 = (_QWORD *)(a2 + v34);
  v37 = v36[1];
  *v35 = *v36;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v35[1] = v37;
  v38 = a3[12];
  v39 = *(void **)(a2 + v38);
  v40 = *(void **)(a1 + v38);
  *(_QWORD *)(a1 + v38) = v39;
  v41 = v39;

  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v42 = a3[14];
  v43 = a1 + v42;
  v44 = a2 + v42;
  v45 = *(_BYTE *)(v44 + 8);
  *(_QWORD *)v43 = *(_QWORD *)v44;
  *(_BYTE *)(v43 + 8) = v45;
  v46 = a3[15];
  v47 = (_QWORD *)(a1 + v46);
  v48 = (_QWORD *)(a2 + v46);
  v49 = v48[1];
  *v47 = *v48;
  v47[1] = v49;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  return a1;
}

uint64_t sub_2320C4BFC(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[9];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2321FDDD4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[10];
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = sub_2321FE584();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v17 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  v18 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  v21 = a3[16];
  *(_OWORD *)(a1 + a3[15]) = *(_OWORD *)(a2 + a3[15]);
  *(_BYTE *)(a1 + v21) = *(_BYTE *)(a2 + v21);
  return a1;
}

uint64_t sub_2320C4D5C(uint64_t a1, _QWORD *a2, int *a3)
{
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = a2[1];

  v8 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = a2[2];

  v9 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = a2[3];

  v10 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = a2[4];

  v11 = a3[9];
  v12 = a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_2321FDDD4();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[10];
  v16 = (void *)(a1 + v15);
  v17 = (char *)a2 + v15;
  v18 = sub_2321FE584();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, char *, uint64_t))(v19 + 40))(v16, v17, v18);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_6;
  }
  if (v22)
  {
LABEL_6:
    sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
LABEL_7:
  v24 = a3[11];
  v25 = (_QWORD *)(a1 + v24);
  v26 = (_QWORD *)((char *)a2 + v24);
  v27 = v26[1];
  *v25 = *v26;
  swift_unknownObjectRelease();
  v25[1] = v27;
  v28 = a3[12];
  v29 = *(void **)(a1 + v28);
  *(_QWORD *)(a1 + v28) = *(_QWORD *)((char *)a2 + v28);

  v30 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  v31 = a1 + v30;
  v32 = (char *)a2 + v30;
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *(_BYTE *)(v31 + 8) = v32[8];
  *(_OWORD *)(a1 + a3[15]) = *(_OWORD *)((char *)a2 + a3[15]);
  swift_release();
  *(_BYTE *)(a1 + a3[16]) = *((_BYTE *)a2 + a3[16]);
  return a1;
}

uint64_t sub_2320C4F78()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2320C4F84(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2321FDDD4();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 36);
    }
    else
    {
      sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a3 + 40);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_2320C503C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2320C5048(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = sub_2321FDDD4();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 36);
    }
    else
    {
      sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a4 + 40);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_2320C50FC()
{
  unint64_t v0;
  unint64_t v1;

  sub_2321FDDD4();
  if (v0 <= 0x3F)
  {
    sub_2320057B8(319, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_2320C51E4(uint64_t a1)
{
  uint64_t result;

  result = sub_232000590(&qword_255F9E0A0, type metadata accessor for SharingTrendFeedItemWithNotificationSchedulerFactory, (uint64_t)&unk_2322141E4);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2320C5224()
{
  unint64_t result;

  result = qword_255F9E100;
  if (!qword_255F9E100)
  {
    result = MEMORY[0x2348FF39C](&unk_232214084, &type metadata for TrendVisibilityOverrides);
    atomic_store(result, (unint64_t *)&qword_255F9E100);
  }
  return result;
}

unint64_t sub_2320C526C()
{
  unint64_t result;

  result = qword_255F9E108;
  if (!qword_255F9E108)
  {
    result = MEMORY[0x2348FF39C](&unk_232214054, &type metadata for TrendVisibilityOverrides);
    atomic_store(result, (unint64_t *)&qword_255F9E108);
  }
  return result;
}

unint64_t sub_2320C52B4()
{
  unint64_t result;

  result = qword_255F9E110;
  if (!qword_255F9E110)
  {
    result = MEMORY[0x2348FF39C](&unk_2322140AC, &type metadata for TrendVisibilityOverrides);
    atomic_store(result, (unint64_t *)&qword_255F9E110);
  }
  return result;
}

unint64_t sub_2320C52FC()
{
  unint64_t result;

  result = qword_255F9E118;
  if (!qword_255F9E118)
  {
    result = MEMORY[0x2348FF39C](&unk_2322140E4, &type metadata for TrendVisibilityOverrides);
    atomic_store(result, (unint64_t *)&qword_255F9E118);
  }
  return result;
}

void *sub_2320C5394(void *a1, uint64_t a2)
{
  return sub_2320C53B0(a1, a2, (uint64_t (*)(void))sub_23216A7C0, (unint64_t *)&qword_2541B0D78);
}

void *sub_2320C53B0(void *a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4)
{
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char v10;
  id v11;
  void *v13;

  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v9 = a3();
      if ((v10 & 1) != 0)
      {
        v8 = *(void **)(*(_QWORD *)(a2 + 56) + 8 * v9);
        v11 = v8;
        return v8;
      }
    }
    return 0;
  }
  v6 = a1;
  v7 = sub_232201944();

  if (!v7)
    return 0;
  sub_232003E9C(0, a4);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  v8 = v13;
  swift_unknownObjectRelease();
  return v8;
}

uint64_t sub_2320C5490()
{
  return sub_2320CBE34();
}

uint64_t sub_2320C549C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2320CC15C(a2, a3, sub_23204A1A8) & 1;
}

unint64_t sub_2320C54C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char isEscapingClosureAtFileLocation;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t aBlock[5];
  uint64_t v29;
  unint64_t v30;

  v1 = v0;
  v2 = sub_23220039C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BEE4AF8];
  v6 = (void *)objc_opt_self();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v1;
  *(_QWORD *)(v7 + 24) = &v30;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_2320CBD48;
  *(_QWORD *)(v8 + 24) = v7;
  aBlock[4] = (uint64_t)sub_23204AE50;
  v29 = v8;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_2320C621C;
  aBlock[3] = (uint64_t)&unk_250101E88;
  v9 = _Block_copy(aBlock);
  v10 = v29;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel__enumerateObjectTypesWithHandler_, v9);
  _Block_release(v9);
  swift_getObjectType();
  v11 = v5;
  sub_2321FF958();
  swift_retain_n();
  v12 = sub_232200390();
  v13 = sub_2322012FC();
  if (!os_log_type_enabled(v12, v13))
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v2);
    goto LABEL_6;
  }
  v24 = v11;
  v25 = v2;
  v10 = swift_slowAlloc();
  v23 = swift_slowAlloc();
  aBlock[0] = v23;
  *(_DWORD *)v10 = 136446466;
  swift_retain();
  v14 = sub_2320A0814();
  v16 = v15;
  swift_release();
  v27 = sub_232013174(v14, v16, aBlock);
  sub_232201710();
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v10 + 12) = 2048;
  swift_beginAccess();
  if (v30 >> 62)
    goto LABEL_9;
  v17 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v18 = v25;
    v26 = v17;
    sub_232201710();
    _os_log_impl(&dword_231FFB000, v12, v13, "%{public}s Creating %ld work criterias", (uint8_t *)v10, 0x16u);
    v19 = v23;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v19, -1, -1);
    MEMORY[0x2348FF468](v10, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v24, v18);
LABEL_6:
    swift_beginAccess();
    v20 = v30;
    swift_release();
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      break;
    __break(1u);
LABEL_9:
    swift_bridgeObjectRetain();
    v17 = sub_232201998();
    swift_bridgeObjectRelease();
  }
  return v20;
}

void sub_2320C5870(void *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  char v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;

  v6 = sub_2321FF970();
  MEMORY[0x24BDAC7A8](v6);
  if (a1)
  {
    v22 = a1;
    if (objc_msgSend(v22, sel_enabled))
    {
      v7 = *(void **)(a2 + 32);
      v8 = objc_msgSend(v7, sel_profileIdentifier);
      v9 = objc_msgSend(v8, sel_type);

      if (v9 == (id)2)
      {
        sub_2320C6134();
        sub_2320CBDD4(0, (unint64_t *)&qword_2541B7190, (unint64_t *)&qword_2541B6B80, MEMORY[0x24BE471A0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
        v10 = swift_allocObject();
        *(_OWORD *)(v10 + 16) = xmmword_232210D30;
        sub_2321FE890();
        v11 = sub_2321FFB44();
        v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BE47138];
        *(_QWORD *)(v10 + 56) = v11;
        v13 = sub_232000590((unint64_t *)&qword_2541B6B38, v12, MEMORY[0x24BE47130]);
        *(_QWORD *)(v10 + 64) = v13;
        sub_2320251BC((uint64_t *)(v10 + 32));
        sub_2321FE884();
        sub_2321FE998();
        *(_QWORD *)(v10 + 96) = v11;
        *(_QWORD *)(v10 + 104) = v13;
        sub_2320251BC((uint64_t *)(v10 + 72));
        sub_2321FE98C();
        sub_2321FF9AC();
        swift_allocObject();
        sub_2321FF988();
        v14 = swift_retain();
        MEMORY[0x2348FE190](v14);
        if (*(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23220105C();
        sub_232201074();
        sub_232201050();

        swift_release();
      }
      else
      {
        switch((unint64_t)objc_msgSend(v22, sel_code))
        {
          case 0uLL:
          case 1uLL:
          case 2uLL:
          case 3uLL:
          case 4uLL:
          case 5uLL:
          case 7uLL:
          case 8uLL:
          case 9uLL:
          case 0xAuLL:
          case 0xCuLL:
          case 0xDuLL:
          case 0xEuLL:
          case 0xFuLL:
          case 0x12uLL:
          case 0x13uLL:
          case 0x14uLL:
          case 0x15uLL:
          case 0x16uLL:
          case 0x17uLL:
          case 0x18uLL:
          case 0x19uLL:
          case 0x1AuLL:
          case 0x1BuLL:
          case 0x1CuLL:
          case 0x1DuLL:
          case 0x1EuLL:
          case 0x1FuLL:
          case 0x20uLL:
          case 0x21uLL:
          case 0x22uLL:
          case 0x23uLL:
          case 0x24uLL:
          case 0x25uLL:
          case 0x26uLL:
          case 0x27uLL:
          case 0x28uLL:
          case 0x29uLL:
          case 0x2AuLL:
          case 0x2BuLL:
          case 0x2CuLL:
          case 0x2DuLL:
          case 0x2EuLL:
          case 0x2FuLL:
          case 0x30uLL:
          case 0x31uLL:
          case 0x32uLL:
          case 0x33uLL:
          case 0x34uLL:
          case 0x35uLL:
          case 0x36uLL:
          case 0x37uLL:
          case 0x38uLL:
          case 0x39uLL:
          case 0x3AuLL:
          case 0x3CuLL:
          case 0x3DuLL:
          case 0x3EuLL:
          case 0x3FuLL:
          case 0x46uLL:
          case 0x47uLL:
          case 0x48uLL:
          case 0x49uLL:
          case 0x4BuLL:
          case 0x4EuLL:
          case 0x4FuLL:
          case 0x50uLL:
          case 0x53uLL:
          case 0x57uLL:
          case 0x59uLL:
          case 0x5AuLL:
          case 0x5BuLL:
          case 0x5CuLL:
          case 0x5FuLL:
          case 0x60uLL:
          case 0x61uLL:
          case 0x63uLL:
          case 0x64uLL:
          case 0x65uLL:
          case 0x6EuLL:
          case 0x6FuLL:
          case 0x71uLL:
          case 0x72uLL:
          case 0x76uLL:
          case 0x7CuLL:
          case 0x7DuLL:
          case 0x89uLL:
          case 0x8AuLL:
          case 0x8BuLL:
          case 0x8CuLL:
          case 0x90uLL:
          case 0x91uLL:
          case 0x93uLL:
          case 0x9CuLL:
          case 0x9DuLL:
          case 0x9EuLL:
          case 0x9FuLL:
          case 0xA0uLL:
          case 0xA1uLL:
          case 0xA2uLL:
          case 0xA3uLL:
          case 0xA4uLL:
          case 0xA5uLL:
          case 0xA6uLL:
          case 0xA7uLL:
          case 0xA8uLL:
          case 0xA9uLL:
          case 0xAAuLL:
          case 0xABuLL:
          case 0xACuLL:
          case 0xADuLL:
          case 0xB2uLL:
          case 0xB3uLL:
          case 0xB6uLL:
          case 0xB7uLL:
          case 0xBAuLL:
          case 0xBBuLL:
          case 0xBCuLL:
          case 0xBDuLL:
          case 0xBFuLL:
          case 0xC0uLL:
          case 0xC1uLL:
          case 0xC2uLL:
          case 0xC3uLL:
          case 0xC4uLL:
          case 0xC7uLL:
          case 0xC9uLL:
          case 0xCAuLL:
          case 0xCBuLL:
          case 0xCCuLL:
          case 0xCDuLL:
          case 0xCEuLL:
          case 0xCFuLL:
          case 0xDCuLL:
          case 0xDDuLL:
          case 0xDEuLL:
          case 0xDFuLL:
          case 0xE0uLL:
          case 0xE1uLL:
          case 0xE2uLL:
          case 0xE5uLL:
          case 0xE6uLL:
          case 0xE7uLL:
          case 0xE8uLL:
          case 0xE9uLL:
          case 0xEAuLL:
          case 0xEBuLL:
          case 0xECuLL:
          case 0xEDuLL:
          case 0xF0uLL:
          case 0xF1uLL:
          case 0xF2uLL:
          case 0xF3uLL:
          case 0xF4uLL:
          case 0xF8uLL:
          case 0xF9uLL:
          case 0xFAuLL:
          case 0xFBuLL:
          case 0x100uLL:
          case 0x101uLL:
          case 0x102uLL:
          case 0x103uLL:
          case 0x104uLL:
          case 0x106uLL:
          case 0x107uLL:
          case 0x108uLL:
          case 0x109uLL:
          case 0x10AuLL:
          case 0x10DuLL:
          case 0x10EuLL:
          case 0x110uLL:
          case 0x112uLL:
          case 0x113uLL:
          case 0x114uLL:
          case 0x115uLL:
          case 0x117uLL:
          case 0x118uLL:
          case 0x119uLL:
          case 0x11AuLL:
          case 0x11BuLL:
          case 0x11CuLL:
          case 0x11EuLL:
          case 0x11FuLL:
          case 0x120uLL:
          case 0x126uLL:
          case 0x127uLL:
          case 0x128uLL:
          case 0x129uLL:
          case 0x12DuLL:
          case 0x12EuLL:
          case 0x12FuLL:
          case 0x131uLL:
          case 0x139uLL:
          case 0x13AuLL:
            v15 = objc_msgSend((id)objc_opt_self(), sel_appleBalanceMetricsType);
            if (!v15)
              goto LABEL_13;
            v16 = v15;
            sub_232003E9C(0, (unint64_t *)&qword_2541B74A0);
            v21 = v22;
            v17 = sub_2322016A4();

            if ((v17 & 1) == 0)
              goto LABEL_13;
            v18 = objc_msgSend(v7, sel_profileIdentifier);
            v19 = objc_msgSend(v18, sel_type);

            if (v19 == (id)3)
            {

            }
            else
            {
LABEL_13:
              sub_2320CB120(v7);
              sub_2320C6134();
              sub_2321FF9AC();
              swift_allocObject();
              sub_2321FF988();
              v20 = swift_retain();
              MEMORY[0x2348FE190](v20);
              if (*(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                sub_23220105C();
              sub_232201074();
              sub_232201050();
              swift_release();

            }
            break;
          default:
            goto LABEL_12;
        }
      }
    }
    else
    {
LABEL_12:

    }
  }
}

uint64_t sub_2320C6134()
{
  void *v0;
  unsigned int v1;
  void *v2;
  id v3;
  void *v4;
  id v5;

  v0 = (void *)sub_23220114C();
  v1 = objc_msgSend(v0, sel_isAbleToWriteHealthSensitiveLogs);

  v2 = (void *)sub_23220114C();
  v3 = objc_msgSend(v2, sel_identifier);

  sub_232200EC4();
  if (!v1)
  {
    v4 = (void *)sub_23220114C();
    v5 = objc_msgSend(v4, sel_sensitiveLoggingIdentifier);

    sub_232200EC4();
  }
  return sub_2321FF97C();
}

void sub_2320C621C(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  v4 = a2;
  v3(a2);

}

uint64_t sub_2320C6260(void *a1, uint64_t a2, NSObject *a3, uint64_t a4)
{
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  void *v62;
  void (*v63)(char *, uint64_t);
  void *v64;
  id v65;
  id v66;
  id v67;
  uint64_t (*v68)(uint64_t);
  void (*v69)(char *, void (*)(uint64_t, uint64_t, uint64_t, uint64_t));
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int (*v73)(char *, uint64_t, uint64_t);
  NSObject *v74;
  os_log_type_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char v85;
  char *v86;
  id v87;
  id v88;
  NSObject *v89;
  os_log_type_t v90;
  uint64_t v91;
  NSObject *v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  id v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  NSObject *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  unsigned int v104;
  uint64_t v105;
  NSObject *v106;
  int v107;
  char *v108;
  id v109;
  id v110;
  NSObject *v111;
  os_log_type_t v112;
  _BOOL4 v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  id v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  unint64_t v123;
  NSObject *v124;
  NSObject *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  void (*v131)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t (*v136)(uint64_t);
  unsigned int (*v137)(uint64_t, uint64_t, uint64_t);
  uint64_t v138;
  uint64_t (*v139)(uint64_t);
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  int *v145;
  _BYTE *v146;
  _BYTE *v147;
  uint64_t v148;
  _BYTE *v149;
  uint64_t v150;
  id v151;
  char *v152;
  uint64_t (*v153)(uint64_t);
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  void *v159;
  uint64_t v160;
  char *v161;
  uint64_t (*v162)(uint64_t);
  char v163;
  void (*v164)(char *, uint64_t);
  char v165;
  uint64_t v166;
  _BYTE *v167;
  int *v168;
  uint64_t v169;
  uint64_t v170;
  void (*v171)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  id v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  id *v181;
  id *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  NSObject *v190;
  uint64_t (*v191)(uint64_t);
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  id *v195;
  unint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  id *v202;
  NSObject *v203;
  unint64_t v204;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  char *v217;
  char *v218;
  char *v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  char *v223;
  char *v224;
  uint64_t v225;
  char *v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  uint64_t v231;
  char *v232;
  uint64_t v233;
  _BYTE *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  uint64_t v243;
  _BYTE *v244;
  void (*v245)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v246;
  void (*v247)(uint64_t, uint64_t, uint64_t, uint64_t);
  NSObject *v248;
  uint64_t v249;
  id v250;
  id *v251;
  NSObject *v252;
  NSObject *v253;
  char v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;

  v207 = a4;
  v248 = a3;
  v252 = a2;
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v208 = (uint64_t)&v206 - v7;
  v211 = sub_2321FDC6C();
  v210 = *(_QWORD *)(v211 - 8);
  MEMORY[0x24BDAC7A8](v211);
  v209 = (char *)&v206 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BE46F68];
  sub_2320057B8(0, &qword_2541B5BA8, (uint64_t (*)(uint64_t))MEMORY[0x24BE48138], MEMORY[0x24BE46F68]);
  v215 = v10;
  v214 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v213 = (char *)&v206 - v11;
  sub_2320057B8(0, &qword_2541B6B78, (uint64_t (*)(uint64_t))sub_2320CC244, v5);
  MEMORY[0x24BDAC7A8](v12);
  v216 = (char *)&v206 - v13;
  v14 = sub_23220039C();
  v246 = *(_QWORD *)(v14 - 8);
  v247 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v14;
  v15 = MEMORY[0x24BDAC7A8](v14);
  v249 = (uint64_t)&v206 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v218 = (char *)&v206 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v219 = (char *)&v206 - v19;
  sub_2320057B8(0, &qword_2541B5BB0, (uint64_t (*)(uint64_t))MEMORY[0x24BE483B0], v9);
  v222 = v20;
  v221 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v220 = (char *)&v206 - v21;
  sub_2320057B8(0, &qword_2541B6B30, (uint64_t (*)(uint64_t))sub_2320CC2DC, v5);
  MEMORY[0x24BDAC7A8](v22);
  v223 = (char *)&v206 - v23;
  sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], v5);
  MEMORY[0x24BDAC7A8](v24);
  v224 = (char *)&v206 - v25;
  sub_2320057B8(0, &qword_2541B2518, (uint64_t (*)(uint64_t))sub_232071EE4, v5);
  MEMORY[0x24BDAC7A8](v26);
  v217 = (char *)&v206 - v27;
  sub_232071E50();
  v240 = *(_QWORD *)(v28 - 8);
  v241 = v28;
  MEMORY[0x24BDAC7A8](v28);
  v239 = (char *)&v206 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v238 = sub_2321FFACC();
  v237 = *(_QWORD *)(v238 - 8);
  MEMORY[0x24BDAC7A8](v238);
  v242 = (char *)&v206 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v243 = _s14descr250103FA9O8WorkPlanVMa();
  v236 = *(_QWORD *)(v243 - 8);
  v31 = MEMORY[0x24BDAC7A8](v243);
  v234 = (char *)&v206 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v244 = (char *)&v206 - v33;
  v34 = sub_2321FDCC0();
  v35 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v233 = v34;
  v231 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v206 = (char *)&v206 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320CCCD4(0, (unint64_t *)&qword_2541B69D0, &qword_2541B69C8, v35);
  v225 = v37;
  MEMORY[0x24BDAC7A8](v37);
  v232 = (char *)&v206 - v38;
  sub_2320057B8(0, &qword_2541B69C8, v35, v5);
  v40 = MEMORY[0x24BDAC7A8](v39);
  v212 = (uint64_t)&v206 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = MEMORY[0x24BDAC7A8](v40);
  v230 = (char *)&v206 - v43;
  MEMORY[0x24BDAC7A8](v42);
  v235 = (uint64_t)&v206 - v44;
  v229 = sub_2321FDDD4();
  v228 = *(_QWORD *)(v229 - 8);
  MEMORY[0x24BDAC7A8](v229);
  v227 = (char *)&v206 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, &qword_2541B6AF0, (uint64_t (*)(uint64_t))MEMORY[0x24BE48258], v9);
  v245 = v46;
  v47 = *((_QWORD *)v46 - 1);
  v48 = MEMORY[0x24BDAC7A8](v46);
  v226 = (char *)&v206 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v48);
  v51 = (char *)&v206 - v50;
  sub_2320057B8(0, &qword_2541B6B90, (uint64_t (*)(uint64_t))sub_2320CC3AC, v5);
  v53 = MEMORY[0x24BDAC7A8](v52);
  v55 = (char *)&v206 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v53);
  v57 = (char *)&v206 - v56;
  v58 = sub_2321FF970();
  v59 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v61 = (char *)&v206 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = (void *)objc_opt_self();
  v250 = a1;
  sub_2321FF9A0();
  sub_2321FF964();
  v63 = *(void (**)(char *, uint64_t))(v59 + 8);
  v63(v61, v58);
  v64 = (void *)sub_232200E94();
  swift_bridgeObjectRelease();
  v65 = objc_msgSend(v62, sel__typeWithIdentifier_, v64);

  if (!v65)
  {
    swift_getObjectType();
    sub_2321FF958();
    swift_retain_n();
    swift_retain_n();
    v74 = sub_232200390();
    v75 = sub_2322012F0();
    v76 = v75;
    if (os_log_type_enabled(v74, v75))
    {
      v77 = swift_slowAlloc();
      v252 = swift_slowAlloc();
      v253 = v252;
      *(_DWORD *)v77 = 136446466;
      swift_retain();
      LODWORD(v248) = v76;
      v78 = sub_2320A0814();
      v80 = v79;
      swift_release();
      v257 = sub_232013174(v78, v80, (uint64_t *)&v253);
      sub_232201710();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v77 + 12) = 2082;
      sub_2321FF9A0();
      sub_232000590(&qword_255F9E128, (uint64_t (*)(uint64_t))MEMORY[0x24BE46F00], MEMORY[0x24BE46F18]);
      v81 = sub_232201AB8();
      v83 = v82;
      v63(v61, v58);
      v257 = sub_232013174(v81, v83, (uint64_t *)&v253);
      sub_232201710();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v74, (os_log_type_t)v248, "[%{public}s Unexpected work criteria identifier received: %{public}s", (uint8_t *)v77, 0x16u);
      v84 = (uint64_t)v252;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v84, -1, -1);
      MEMORY[0x2348FF468](v77, -1, -1);

    }
    else
    {

      swift_release_n();
      swift_release_n();
    }
    (*(void (**)(uint64_t, void (*)(uint64_t, uint64_t, uint64_t, uint64_t)))(v246 + 8))(v249, v247);
    return MEMORY[0x24BEE4AF8];
  }
  v66 = objc_msgSend(v251[4], sel_profileIdentifier);
  v67 = objc_msgSend(v66, sel_type);

  if (v67 == (id)2)
  {
    v250 = v65;
    sub_2321FE890();
    v68 = (uint64_t (*)(uint64_t))MEMORY[0x24BE48258];
    sub_2321FF9D0();
    sub_232000590(&qword_255F9E130, v68, MEMORY[0x24BE48248]);
    sub_2321FFB2C();
    v69 = *(void (**)(char *, void (*)(uint64_t, uint64_t, uint64_t, uint64_t)))(v47 + 8);
    v69(v51, v245);
    sub_2320CC3AC();
    v71 = v70;
    v72 = *(_QWORD *)(v70 - 8);
    v73 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48);
    if (v73(v57, 1, v70) == 1)
    {
      sub_232016D88((uint64_t)v57, &qword_2541B6B90, (uint64_t (*)(uint64_t))sub_2320CC3AC);
      v251 = 0;
    }
    else
    {
      sub_2321FFBBC();
      v100 = v253;
      (*(void (**)(char *, uint64_t))(v72 + 8))(v57, v71);
      v257 = (uint64_t)v100;
      v101 = v227;
      sub_2321FDDA4();
      sub_2320CC480();
      sub_232000590(&qword_255F9E140, (uint64_t (*)(uint64_t))sub_2320CC480, MEMORY[0x24BEE1718]);
      v251 = (id *)sub_232200FD8();
      (*(void (**)(char *, uint64_t))(v228 + 8))(v101, v229);
      swift_bridgeObjectRelease();
    }
    v102 = v231;
    v103 = v226;
    sub_2321FF9D0();
    sub_2321FFB2C();
    v69(v103, v245);
    v104 = v73(v55, 1, v71);
    v105 = (uint64_t)v230;
    if (v104 == 1)
    {
      sub_232016D88((uint64_t)v55, &qword_2541B6B90, (uint64_t (*)(uint64_t))sub_2320CC3AC);
      v106 = 0;
    }
    else
    {
      sub_2321FFBBC();
      v125 = v253;
      (*(void (**)(char *, uint64_t))(v72 + 8))(v55, v71);
      v257 = (uint64_t)v125;
      v126 = v227;
      sub_2321FDDA4();
      sub_2320CC480();
      sub_232000590(&qword_255F9E140, (uint64_t (*)(uint64_t))sub_2320CC480, MEMORY[0x24BEE1718]);
      v106 = sub_232200FD8();
      (*(void (**)(char *, uint64_t))(v228 + 8))(v126, v229);
      swift_bridgeObjectRelease();
    }
    v127 = v233;
    v128 = (uint64_t)v232;
    v129 = v235;
    if (v251)
    {
      v130 = objc_msgSend(v251, sel_UUID);
      sub_2321FDCA8();

      v131 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v102 + 56);
      v131(v129, 0, 1, v127);
    }
    else
    {
      v131 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v102 + 56);
      v131(v235, 1, 1, v233);
    }
    if (v106)
    {
      v132 = -[NSObject UUID](v106, sel_UUID);
      sub_2321FDCA8();

      v133 = 0;
    }
    else
    {
      v133 = 1;
    }
    v134 = v225;
    v131(v105, v133, 1, v127);
    v135 = v128 + *(int *)(v134 + 48);
    v136 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
    sub_232016080(v129, v128, &qword_2541B69C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
    sub_232016080(v105, v135, &qword_2541B69C8, v136);
    v137 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v102 + 48);
    if (v137(v128, 1, v127) == 1)
    {
      sub_232016D88(v105, &qword_2541B69C8, v136);
      sub_232016D88(v129, &qword_2541B69C8, v136);
      if (v137(v135, 1, v127) == 1)
      {
        sub_232016D88(v128, &qword_2541B69C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
        goto LABEL_42;
      }
    }
    else
    {
      v138 = v212;
      sub_232016080(v128, v212, &qword_2541B69C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
      if (v137(v135, 1, v127) != 1)
      {
        v160 = v138;
        v161 = v206;
        (*(void (**)(char *, uint64_t, uint64_t))(v102 + 32))(v206, v135, v127);
        v162 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
        sub_232000590(&qword_2541B58A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v163 = sub_232200E64();
        v164 = *(void (**)(char *, uint64_t))(v102 + 8);
        v164(v161, v127);
        sub_232016D88(v105, &qword_2541B69C8, v162);
        sub_232016D88(v235, &qword_2541B69C8, v162);
        v164((char *)v160, v127);
        sub_232016D88(v128, &qword_2541B69C8, v162);
        if ((v163 & 1) != 0)
        {
LABEL_42:
          sub_2321FE824();
          v255 = sub_2321FFB44();
          v256 = sub_232000590((unint64_t *)&qword_2541B6B38, (uint64_t (*)(uint64_t))MEMORY[0x24BE47138], MEMORY[0x24BE47130]);
          sub_2320251BC((uint64_t *)&v253);
          sub_2321FE818();
          v165 = sub_2321FFB20();
          sub_232016AFC((uint64_t)&v253);
          if ((v165 & 1) != 0)
          {

            return MEMORY[0x24BEE4AF8];
          }
        }
LABEL_45:
        v248 = v106;
        v168 = (int *)v243;
        v167 = v244;
        v169 = (uint64_t)&v244[*(int *)(v243 + 24)];
        v170 = sub_2321FE584();
        v171 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v170 - 8) + 56);
        v249 = v169;
        v245 = v171;
        v246 = v170;
        ((void (*)(uint64_t, uint64_t, uint64_t))v171)(v169, 1, 1);
        v172 = (uint64_t)&v167[v168[8]];
        sub_232071EE4();
        v174 = v173;
        v247 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v173 - 8) + 56);
        v247(v172, 1, 1, v173);
        v175 = v250;
        objc_msgSend(v175, sel_code);
        v176 = v242;
        sub_2321FFAC0();
        v177 = v237;
        v178 = v238;
        (*(void (**)(_BYTE *, char *, uint64_t))(v237 + 16))(&v167[v168[5]], v176, v238);
        *v167 = 1;
        v253 = 0;
        v254 = 1;
        type metadata accessor for HKMCPregnancyState(0);
        sub_232000590((unint64_t *)&unk_2541B2790, (uint64_t (*)(uint64_t))type metadata accessor for HKMCPregnancyState, (uint64_t)&unk_23220FD6C);
        v179 = v239;
        sub_2321FEB30();
        v250 = v175;

        v180 = v176;
        v181 = v251;
        (*(void (**)(char *, uint64_t))(v177 + 8))(v180, v178);
        (*(void (**)(_BYTE *, char *, uint64_t))(v240 + 32))(&v167[v168[7]], v179, v241);
        if (v181)
        {
          sub_232003E9C(0, (unint64_t *)&qword_2541B27B0);
          v182 = v181;
          v183 = (uint64_t)v217;
          sub_232200D44();
          v247(v183, 0, 1, v174);
          sub_2320628C8(v183, v172, &qword_2541B2518, (uint64_t (*)(uint64_t))sub_232071EE4);
        }
        else
        {
          sub_232016D88(v172, &qword_2541B2518, (uint64_t (*)(uint64_t))sub_232071EE4);
          v247(v172, 1, 1, v174);
        }
        v184 = v236;
        v185 = (uint64_t)v224;
        v186 = (uint64_t)v223;
        v187 = v222;
        v188 = v221;
        v189 = v220;
        v190 = v248;
        sub_2321FE998();
        v191 = (uint64_t (*)(uint64_t))MEMORY[0x24BE483B0];
        sub_2321FF9E8();
        sub_232000590(&qword_255F9E138, v191, MEMORY[0x24BE483A0]);
        sub_2321FFB2C();
        (*(void (**)(char *, uint64_t))(v188 + 8))(v189, v187);
        sub_2320CC2DC();
        v193 = v192;
        v194 = *(_QWORD *)(v192 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v194 + 48))(v186, 1, v192) == 1)
        {
          sub_232016D88(v186, &qword_2541B6B30, (uint64_t (*)(uint64_t))sub_2320CC2DC);
          v245(v185, 1, 1, v246);
        }
        else
        {
          sub_2321FFAE4();
          (*(void (**)(uint64_t, uint64_t))(v194 + 8))(v186, v193);
        }
        v195 = v251;
        sub_2320628C8(v185, v249, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8]);
        sub_2320057B8(0, &qword_2541B71B0, (uint64_t (*)(uint64_t))_s14descr250103FA9O8WorkPlanVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
        v196 = (*(unsigned __int8 *)(v184 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v184 + 80);
        v166 = swift_allocObject();
        *(_OWORD *)(v166 + 16) = xmmword_232210D40;
        sub_2320CCBF8((uint64_t)v244, v166 + v196);

        return v166;
      }
      v139 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
      sub_232016D88(v105, &qword_2541B69C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
      sub_232016D88(v129, &qword_2541B69C8, v139);
      (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v138, v127);
    }
    sub_2320CCC3C(v128, (unint64_t *)&qword_2541B69D0, &qword_2541B69C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
    goto LABEL_45;
  }
  v85 = sub_2320C7DD4(v65, (uint64_t)v252, v248);
  if (v85 == 2)
  {
    swift_getObjectType();
    v86 = v218;
    sub_2321FF958();
    v87 = v65;
    swift_retain_n();
    v88 = v87;
    v89 = sub_232200390();
    v90 = sub_2322012FC();
    if (os_log_type_enabled(v89, v90))
    {
      v91 = swift_slowAlloc();
      v92 = swift_slowAlloc();
      v253 = v92;
      *(_DWORD *)v91 = 136446466;
      swift_retain();
      v93 = sub_2320A0814();
      v95 = v94;
      swift_release();
      v257 = sub_232013174(v93, v95, (uint64_t *)&v253);
      sub_232201710();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v91 + 12) = 2082;
      v96 = objc_msgSend(v88, sel_identifier);
      v97 = sub_232200EC4();
      v99 = v98;

      v257 = sub_232013174(v97, v99, (uint64_t *)&v253);
      sub_232201710();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v89, v90, "%{public}s No update needed for work criteria with sample type %{public}s", (uint8_t *)v91, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v92, -1, -1);
      MEMORY[0x2348FF468](v91, -1, -1);

      (*(void (**)(char *, void (*)(uint64_t, uint64_t, uint64_t, uint64_t)))(v246 + 8))(v218, v247);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, void (*)(uint64_t, uint64_t, uint64_t, uint64_t)))(v246 + 8))(v86, v247);
    }

    return MEMORY[0x24BEE4AF8];
  }
  v107 = v85 & 1;
  swift_getObjectType();
  v108 = v219;
  sub_2321FF958();
  v109 = v65;
  swift_retain_n();
  v110 = v109;
  v111 = sub_232200390();
  v112 = sub_2322012FC();
  v113 = os_log_type_enabled(v111, v112);
  v250 = v110;
  LODWORD(v249) = v107;
  if (v113)
  {
    v114 = swift_slowAlloc();
    v248 = swift_slowAlloc();
    v253 = v248;
    *(_DWORD *)v114 = 136446722;
    swift_retain();
    v115 = sub_2320A0814();
    v117 = v116;
    swift_release();
    v257 = sub_232013174(v115, v117, (uint64_t *)&v253);
    sub_232201710();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v114 + 12) = 2082;
    v118 = objc_msgSend(v110, sel_identifier);
    v119 = sub_232200EC4();
    v121 = v120;

    v257 = sub_232013174(v119, v121, (uint64_t *)&v253);
    sub_232201710();

    swift_bridgeObjectRelease();
    *(_WORD *)(v114 + 22) = 2082;
    if (v107)
      v122 = 0x6D65744964656566;
    else
      v122 = 0xD00000000000001ALL;
    if (v107)
      v123 = 0xED0000796C6E4F73;
    else
      v123 = 0x80000002322027B0;
    v257 = sub_232013174(v122, v123, (uint64_t *)&v253);
    sub_232201710();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_231FFB000, v111, v112, "%{public}s Creating work plan work criteria with sample type %{public}s with updateNeeded: %{public}s", (uint8_t *)v114, 0x20u);
    v124 = v248;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v124, -1, -1);
    MEMORY[0x2348FF468](v114, -1, -1);

    (*(void (**)(char *, void (*)(uint64_t, uint64_t, uint64_t, uint64_t)))(v246 + 8))(v219, v247);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, void (*)(uint64_t, uint64_t, uint64_t, uint64_t)))(v246 + 8))(v108, v247);
  }
  v141 = v240;
  v140 = v241;
  v143 = v238;
  v142 = v239;
  v144 = v237;
  v145 = (int *)v243;
  v146 = v234;
  v147 = &v234[*(int *)(v243 + 24)];
  v148 = sub_2321FE584();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v148 - 8) + 56))(v147, 1, 1, v148);
  v149 = &v146[v145[8]];
  sub_232071EE4();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v150 - 8) + 56))(v149, 1, 1, v150);
  v151 = v250;
  objc_msgSend(v151, sel_code);
  v152 = v242;
  sub_2321FFAC0();
  (*(void (**)(_BYTE *, char *, uint64_t))(v144 + 16))(&v146[v145[5]], v152, v143);
  *v146 = v249;
  v253 = 0;
  v254 = 1;
  type metadata accessor for HKMCPregnancyState(0);
  sub_232000590((unint64_t *)&unk_2541B2790, (uint64_t (*)(uint64_t))type metadata accessor for HKMCPregnancyState, (uint64_t)&unk_23220FD6C);
  sub_2321FEB30();
  v251 = (id *)v151;

  (*(void (**)(char *, uint64_t))(v144 + 8))(v152, v143);
  (*(void (**)(_BYTE *, char *, uint64_t))(v141 + 32))(&v146[v145[7]], v142, v140);
  sub_2321FE80C();
  v153 = (uint64_t (*)(uint64_t))MEMORY[0x24BE48138];
  v154 = v213;
  sub_2321FF9C4();
  sub_232000590(&qword_2541B6A80, v153, MEMORY[0x24BE48120]);
  v155 = (uint64_t)v216;
  sub_2321FFB2C();
  (*(void (**)(char *, uint64_t))(v214 + 8))(v154, v215);
  sub_2320CC244();
  v157 = v156;
  v158 = *(_QWORD *)(v156 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v158 + 48))(v155, 1, v156) == 1)
  {
    sub_232016D88(v155, &qword_2541B6B78, (uint64_t (*)(uint64_t))sub_2320CC244);
    v159 = 0;
  }
  else
  {
    v159 = (void *)sub_2321FFB98();
    (*(void (**)(uint64_t, uint64_t))(v158 + 8))(v155, v157);
  }
  v197 = v211;
  v198 = v210;
  v199 = v209;
  v200 = v208;
  v201 = v236;
  v202 = v251;
  sub_232016080(v207, v208, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v198 + 48))(v200, 1, v197) == 1)
  {
    sub_2321FDC60();
    sub_232016D88(v200, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v198 + 32))(v199, v200, v197);
  }
  v203 = sub_2320CCA24(v159);
  (*(void (**)(char *, uint64_t))(v198 + 8))(v199, v197);
  v253 = v203;
  v254 = 0;
  sub_2321FEB24();
  sub_2320057B8(0, &qword_2541B71B0, (uint64_t (*)(uint64_t))_s14descr250103FA9O8WorkPlanVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v204 = (*(unsigned __int8 *)(v201 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v201 + 80);
  v166 = swift_allocObject();
  *(_OWORD *)(v166 + 16) = xmmword_232210D40;
  sub_2320CCBF8((uint64_t)v234, v166 + v204);

  return v166;
}

uint64_t sub_2320C7DD4(void *a1, uint64_t a2, NSObject *a3)
{
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t (*v60)(uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t inited;
  unint64_t v109;
  uint64_t v110;
  id v111;
  id v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  uint64_t (*v116)(uint64_t);
  char *v117;
  uint64_t v118;
  uint64_t v119;
  void (*v120)(char *, os_log_t);
  uint64_t v121;
  uint64_t v122;
  char *v123;
  int v124;
  uint64_t v125;
  id v126;
  char *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  int v131;
  void (**v132)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v133;
  char *v134;
  uint64_t (*v135)(uint64_t, uint64_t, id);
  int v136;
  uint64_t (*v137)(uint64_t);
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  int v143;
  id v144;
  uint64_t (*v145)(uint64_t);
  uint64_t v146;
  uint64_t (*v147)(uint64_t);
  uint64_t v148;
  uint64_t v149;
  uint64_t (*v150)(uint64_t);
  uint64_t result;
  uint64_t v152;
  uint64_t v153;
  id v154;
  uint64_t (*v155)(uint64_t);
  uint64_t v156;
  uint64_t (*v157)(uint64_t);
  uint64_t v158;
  void (**v159)(_QWORD, _QWORD, _QWORD, _QWORD);
  char *v160;
  uint64_t (*v161)(uint64_t);
  char v162;
  void (*v163)(char *, id);
  char *v164;
  void (*v165)(char *, os_log_t);
  unsigned int (*v166)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v167)(uint64_t);
  id v168;
  char *v169;
  uint64_t v170;
  void (*v171)(char *, uint64_t);
  uint64_t v172;
  uint64_t v173;
  uint64_t (*v174)(uint64_t, uint64_t, uint64_t);
  int v175;
  char *v176;
  uint64_t v177;
  id v178;
  char *v179;
  uint64_t v180;
  void *v181;
  uint64_t v182;
  void (**v183)(_QWORD, _QWORD, _QWORD, _QWORD);
  id v184;
  char *v185;
  char v186;
  id v187;
  char *v188;
  char *v189;
  void (**v190)(_QWORD, _QWORD, _QWORD, _QWORD);
  id v191;
  char *v192;
  void (**v193)(_QWORD, _QWORD, _QWORD, _QWORD);
  id v194;
  NSObject *v195;
  os_log_type_t v196;
  int v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  unint64_t v201;
  unint64_t v202;
  id v203;
  uint64_t v204;
  uint64_t v205;
  unint64_t v206;
  unint64_t v207;
  char *v208;
  id v209;
  uint64_t v210;
  unint64_t v211;
  void (**v212)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v213;
  unint64_t v214;
  os_log_t v215;
  NSObject *v216;
  char v217;
  char *v218;
  id v219;
  id v220;
  NSObject *v221;
  int v222;
  uint64_t v223;
  uint64_t v224;
  unint64_t v225;
  unint64_t v226;
  id v227;
  uint64_t v228;
  unint64_t v229;
  unint64_t v230;
  uint64_t (*v231)(uint64_t);
  char *v232;
  uint64_t v233;
  void (*v234)(char *, uint64_t);
  uint64_t v235;
  uint64_t v236;
  uint64_t (*v237)(uint64_t, uint64_t, uint64_t);
  int v238;
  uint64_t v239;
  uint64_t v240;
  NSObject *v241;
  char v242;
  void *v243;
  unsigned int v244;
  char *v245;
  id v246;
  id v247;
  NSObject *v248;
  int v249;
  uint64_t v250;
  uint64_t v251;
  unint64_t v252;
  unint64_t v253;
  id v254;
  uint64_t v255;
  unint64_t v256;
  unint64_t v257;
  char *v258;
  uint64_t v259;
  void (*v260)(char *, uint64_t);
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t (*v265)(uint64_t, uint64_t, uint64_t);
  int v266;
  uint64_t v267;
  char *v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  unint64_t v276;
  char *v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  void *v281;
  id v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  char *v288;
  NSObject *v289;
  os_log_type_t v290;
  uint64_t v291;
  unint64_t v292;
  char *v293;
  uint64_t (*v294)(uint64_t);
  uint64_t v295;
  uint64_t (*v296)(uint64_t);
  uint64_t v297;
  uint64_t (*v298)(uint64_t);
  unint64_t *v299;
  uint64_t (*v300)(uint64_t);
  uint64_t v301;
  char *v302;
  char v303;
  char *v304;
  uint64_t v305;
  uint64_t v306;
  void (*v307)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v308;
  unint64_t v309;
  char *v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  char *v314;
  uint64_t v315;
  unint64_t v316;
  id v317;
  uint64_t v318;
  uint64_t v319;
  char *v320;
  uint64_t v321;
  uint64_t v322;
  void (*v323)(char *, char *, uint64_t);
  char *v324;
  uint64_t v325;
  uint64_t v326;
  void *v327;
  unsigned int v328;
  uint64_t (*v329)(uint64_t);
  id v330;
  id v331;
  NSObject *v332;
  os_log_type_t v333;
  uint64_t v334;
  uint64_t v335;
  unint64_t v336;
  unint64_t v337;
  id v338;
  uint64_t v339;
  unint64_t v340;
  unint64_t v341;
  uint64_t (*v342)(uint64_t);
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  unint64_t v346;
  uint64_t v347;
  uint64_t v348;
  unint64_t v349;
  uint64_t (*v350)(uint64_t);
  char *v351;
  uint64_t v352;
  uint64_t v353;
  unint64_t v354;
  void (*v355)(char *, uint64_t);
  NSObject *v356;
  void (**v357)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t (*v358)(uint64_t);
  uint64_t (*v359)(void);
  uint64_t (*v360)(uint64_t);
  uint64_t (*v361)(void);
  void (*v362)(char *, uint64_t);
  uint64_t v363;
  uint64_t (*v364)(uint64_t);
  _QWORD v365[2];
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  char *v372;
  uint64_t v373;
  char *v374;
  uint64_t v375;
  char *v376;
  char *v377;
  char *v378;
  char *v379;
  void (*v380)(char *, char *, uint64_t);
  char *v381;
  char *v382;
  char *v383;
  char *v384;
  uint64_t v385;
  char *v386;
  char *v387;
  char *v388;
  char *v389;
  char *v390;
  char *v391;
  char *v392;
  uint64_t v393;
  char *v394;
  char *v395;
  char *v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  char *v402;
  char *v403;
  char *v404;
  char *v405;
  uint64_t v406;
  char *v407;
  char *v408;
  char *v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  char *v416;
  char *v417;
  Class isa;
  char *v419;
  char *v420;
  char *v421;
  char *v422;
  id v423;
  uint64_t v424;
  uint64_t v425;
  char *v426;
  uint64_t v427;
  uint64_t v428;
  char *v429;
  void (**v430)(_QWORD, _QWORD, _QWORD, _QWORD);
  os_log_t v431;
  NSObject *v432;
  __int128 v433;
  uint64_t v434;
  unint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;

  v432 = a3;
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B2800, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v371 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v370 = (uint64_t)v365 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v375 = (uint64_t)v365 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v373 = (uint64_t)v365 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v380 = (void (*)(char *, char *, uint64_t))((char *)v365 - v14);
  MEMORY[0x24BDAC7A8](v13);
  v385 = (uint64_t)v365 - v15;
  sub_2320057B8(0, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], v5);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v387 = (char *)v365 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v394 = (char *)v365 - v19;
  v399 = sub_2321FDC6C();
  v400 = *(_QWORD *)(v399 - 8);
  v20 = MEMORY[0x24BDAC7A8](v399);
  v374 = (char *)v365 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v386 = (char *)v365 - v22;
  v23 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BE46F68];
  sub_2320057B8(0, &qword_2541B5BA8, (uint64_t (*)(uint64_t))MEMORY[0x24BE48138], MEMORY[0x24BE46F68]);
  v398 = v24;
  v397 = *(_QWORD *)(v24 - 8);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v389 = (char *)v365 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v384 = (char *)v365 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v381 = (char *)v365 - v29;
  sub_2320057B8(0, &qword_2541B6B78, (uint64_t (*)(uint64_t))sub_2320CC244, v5);
  v31 = MEMORY[0x24BDAC7A8](v30);
  v390 = (char *)v365 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x24BDAC7A8](v31);
  v383 = (char *)v365 - v34;
  MEMORY[0x24BDAC7A8](v33);
  v382 = (char *)v365 - v35;
  sub_2320057B8(0, &qword_2541B6B08, (uint64_t (*)(uint64_t))MEMORY[0x24BE47030], v23);
  v401 = v36;
  v393 = *(_QWORD *)(v36 - 8);
  v37 = MEMORY[0x24BDAC7A8](v36);
  v395 = (char *)v365 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v37);
  v391 = (char *)v365 - v39;
  sub_2320057B8(0, &qword_2541B6B18, (uint64_t (*)(uint64_t))MEMORY[0x24BE47020], v5);
  v41 = MEMORY[0x24BDAC7A8](v40);
  v396 = (char *)v365 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v41);
  v392 = (char *)v365 - v43;
  v411 = sub_23220039C();
  v410 = *(_QWORD *)(v411 - 8);
  v44 = MEMORY[0x24BDAC7A8](v411);
  v372 = (char *)v365 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = MEMORY[0x24BDAC7A8](v44);
  v388 = (char *)v365 - v47;
  v48 = MEMORY[0x24BDAC7A8](v46);
  v403 = (char *)v365 - v49;
  MEMORY[0x24BDAC7A8](v48);
  v402 = (char *)v365 - v50;
  sub_2320057B8(0, &qword_2541B6AF8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47350], v23);
  v412 = v51;
  v406 = *(_QWORD *)(v51 - 8);
  v52 = MEMORY[0x24BDAC7A8](v51);
  v408 = (char *)v365 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v52);
  v404 = (char *)v365 - v54;
  sub_2320057B8(0, &qword_2541B6A40, (uint64_t (*)(uint64_t))MEMORY[0x24BE47348], v5);
  v56 = MEMORY[0x24BDAC7A8](v55);
  v407 = (char *)v365 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v56);
  v405 = (char *)v365 - v58;
  v59 = (void *)sub_2321FDE28();
  v60 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510];
  v423 = v59;
  v430 = (void (**)(_QWORD, _QWORD, _QWORD, _QWORD))*((_QWORD *)v59 - 1);
  MEMORY[0x24BDAC7A8](v59);
  v409 = (char *)v365 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320CCCD4(0, &qword_2541B69D8, &qword_2541AF180, v60);
  v414 = v62;
  MEMORY[0x24BDAC7A8](v62);
  v415 = (uint64_t)v365 - v63;
  v425 = sub_2321FD960();
  v424 = *(_QWORD *)(v425 - 8);
  MEMORY[0x24BDAC7A8](v425);
  v422 = (char *)v365 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, &qword_2541B6B00, (uint64_t (*)(uint64_t))MEMORY[0x24BE47170], v23);
  v431 = v65;
  isa = v65[-1].isa;
  v66 = MEMORY[0x24BDAC7A8](v65);
  v379 = (char *)v365 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = MEMORY[0x24BDAC7A8](v66);
  v377 = (char *)v365 - v69;
  v70 = MEMORY[0x24BDAC7A8](v68);
  v420 = (char *)v365 - v71;
  MEMORY[0x24BDAC7A8](v70);
  v417 = (char *)v365 - v72;
  sub_2320057B8(0, &qword_2541B6AD8, (uint64_t (*)(uint64_t))sub_2320CCD40, v5);
  v74 = MEMORY[0x24BDAC7A8](v73);
  v378 = (char *)v365 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = MEMORY[0x24BDAC7A8](v74);
  v376 = (char *)v365 - v77;
  v78 = MEMORY[0x24BDAC7A8](v76);
  v419 = (char *)v365 - v79;
  MEMORY[0x24BDAC7A8](v78);
  v416 = (char *)v365 - v80;
  sub_2320057B8(0, &qword_2541AF180, v60, v5);
  v82 = MEMORY[0x24BDAC7A8](v81);
  v413 = (uint64_t)v365 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = MEMORY[0x24BDAC7A8](v82);
  v428 = (uint64_t)v365 - v85;
  v86 = MEMORY[0x24BDAC7A8](v84);
  v429 = (char *)v365 - v87;
  v88 = MEMORY[0x24BDAC7A8](v86);
  v421 = (char *)v365 - v89;
  v90 = MEMORY[0x24BDAC7A8](v88);
  v427 = (uint64_t)v365 - v91;
  MEMORY[0x24BDAC7A8](v90);
  v426 = (char *)v365 - v92;
  v93 = sub_2321FFB5C();
  v94 = *(_QWORD *)(v93 - 8);
  MEMORY[0x24BDAC7A8](v93);
  v96 = (char *)v365 - ((v95 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23207E440((uint64_t)&v433);
  if (v434)
  {
    sub_2320167F8(&v433, (uint64_t)&v435);
    v97 = v438;
    sub_232016AD8(&v435, v437);
    v98 = a1;
    v99 = a2;
    v100 = (*(uint64_t (**)(void *, uint64_t))(v97 + 16))(a1, a2);
    sub_232016AFC((uint64_t)&v435);
    if ((v100 & 1) != 0)
      return 0;
  }
  else
  {
    v98 = a1;
    v99 = a2;
    sub_2320CBD78((uint64_t)&v433);
  }
  v101 = sub_2321FFB44();
  v437 = v101;
  v369 = sub_232000590((unint64_t *)&qword_2541B6B38, (uint64_t (*)(uint64_t))MEMORY[0x24BE47138], MEMORY[0x24BE47130]);
  v438 = v369;
  sub_2320251BC((uint64_t *)&v435);
  if (qword_2541B6B58 != -1)
    swift_once();
  v102 = sub_23201670C(v93, (uint64_t)qword_2541B6B40);
  (*(void (**)(char *, uint64_t, uint64_t))(v94 + 16))(v96, v102, v93);
  sub_2321FFB38();
  v103 = v99;
  v104 = sub_2321FFB20();
  sub_232016AFC((uint64_t)&v435);
  if ((v104 & 1) != 0)
    return 0;
  objc_opt_self();
  v105 = v98;
  v106 = swift_dynamicCastObjCClass();
  if (!v106)
    goto LABEL_14;
  v107 = v106;
  sub_232000608(0, (unint64_t *)&qword_2541B78C8, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232210D20;
  *(_QWORD *)(inited + 32) = v107;
  v435 = inited;
  sub_232201050();
  v109 = v435;
  if (!(v435 >> 62))
  {
    v110 = *(_QWORD *)((v435 & 0xFFFFFFFFFFFFF8) + 0x10);
    v111 = v98;
    if (!v110)
      goto LABEL_13;
    goto LABEL_11;
  }
  v112 = v98;
  swift_bridgeObjectRetain();
  v113 = sub_232201998();
  swift_bridgeObjectRelease();
  if (v113)
LABEL_11:
    sub_2321AA560(v109);
LABEL_13:
  swift_bridgeObjectRelease();
  v437 = sub_2321FE920();
  v438 = sub_232000590(&qword_2541B6AB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE48310], MEMORY[0x24BE48300]);
  sub_2320251BC((uint64_t *)&v435);
  sub_2321FE914();
  v114 = sub_2321FFB20();
  sub_232016AFC((uint64_t)&v435);
  if ((v114 & 1) != 0)
    return 0;
LABEL_14:
  v367 = v101;
  v115 = sub_2321FFB74();
  v116 = (uint64_t (*)(uint64_t))MEMORY[0x24BE47170];
  v117 = v417;
  sub_2321FF9F4();
  v118 = sub_232000590(&qword_255F9E148, v116, MEMORY[0x24BE47168]);
  v119 = (uint64_t)v416;
  v368 = v118;
  sub_2321FFB2C();
  v120 = (void (*)(char *, os_log_t))*((_QWORD *)isa + 1);
  v120(v117, v431);
  sub_2320CCD40();
  v122 = v121;
  v123 = *(char **)(v121 - 8);
  isa = (Class)*((_QWORD *)v123 + 6);
  v124 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))isa)(v119, 1, v121);
  v417 = v123;
  if (v124 == 1)
  {
    sub_232016D88(v119, &qword_2541B6AD8, (uint64_t (*)(uint64_t))sub_2320CCD40);
    v125 = (uint64_t)v426;
    v126 = v423;
    ((void (**)(char *, uint64_t, uint64_t, id))v430)[7](v426, 1, 1, v423);
  }
  else
  {
    v127 = v422;
    sub_2321FF940();
    (*((void (**)(uint64_t, uint64_t))v123 + 1))(v119, v122);
    v125 = (uint64_t)v426;
    sub_2321FD954();
    (*(void (**)(char *, uint64_t))(v424 + 8))(v127, v425);
    v126 = v423;
  }
  v128 = (uint64_t)v421;
  v423 = v105;
  v129 = v420;
  sub_2321FF9F4();
  v130 = (uint64_t)v419;
  sub_2321FFB2C();
  v120(v129, v431);
  v131 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))isa)(v130, 1, v122);
  v421 = (char *)v115;
  v366 = v122;
  if (v131 == 1)
  {
    sub_232016D88(v130, &qword_2541B6AD8, (uint64_t (*)(uint64_t))sub_2320CCD40);
    v132 = v430;
    v133 = v427;
    ((void (**)(uint64_t, uint64_t, uint64_t, id))v430)[7](v427, 1, 1, v126);
  }
  else
  {
    v134 = v422;
    sub_2321FF940();
    (*((void (**)(uint64_t, uint64_t))v417 + 1))(v130, v122);
    v133 = v427;
    sub_2321FD954();
    (*(void (**)(char *, uint64_t))(v424 + 8))(v134, v425);
    v132 = v430;
  }
  v135 = (uint64_t (*)(uint64_t, uint64_t, id))v132[6];
  v136 = v135(v125, 1, v126);
  sub_232016080(v133, v128, &qword_2541AF180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510]);
  if (v136 == 1)
  {
    v137 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510];
    sub_232016D88(v128, &qword_2541AF180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510]);
    v138 = v125;
    v139 = (uint64_t)v429;
    sub_232016080(v125, (uint64_t)v429, &qword_2541AF180, v137);
    v140 = v133;
    v141 = v133;
    v142 = v428;
    sub_232016080(v141, v428, &qword_2541AF180, v137);
LABEL_23:
    v147 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510];
    sub_232016D88(v142, &qword_2541AF180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510]);
    sub_232016D88(v139, &qword_2541AF180, v147);
    v148 = v138;
    v149 = v140;
LABEL_24:
    v150 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510];
    sub_232016D88(v149, &qword_2541AF180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510]);
    sub_232016D88(v148, &qword_2541AF180, v150);
    return 0;
  }
  v365[1] = v103;
  v365[0] = v120;
  v143 = v135(v128, 1, v126);
  v144 = v126;
  v145 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510];
  sub_232016D88(v128, &qword_2541AF180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510]);
  v138 = v125;
  v139 = (uint64_t)v429;
  sub_232016080(v125, (uint64_t)v429, &qword_2541AF180, v145);
  v140 = v133;
  v146 = v133;
  v142 = v428;
  sub_232016080(v146, v428, &qword_2541AF180, v145);
  if (v143 == 1)
    goto LABEL_23;
  v152 = v415;
  v153 = v415 + *(int *)(v414 + 48);
  sub_232016080(v139, v415, &qword_2541AF180, v145);
  sub_232016080(v142, v153, &qword_2541AF180, v145);
  v154 = v144;
  if (v135(v152, 1, v144) == 1)
  {
    v155 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510];
    sub_232016D88(v142, &qword_2541AF180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510]);
    sub_232016D88(v139, &qword_2541AF180, v155);
    v148 = v138;
    v149 = v140;
    if (v135(v153, 1, v144) == 1)
    {
      sub_232016D88(v415, &qword_2541AF180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510]);
      goto LABEL_33;
    }
LABEL_31:
    sub_2320CCC3C(v415, &qword_2541B69D8, &qword_2541AF180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510]);
    goto LABEL_24;
  }
  v156 = v413;
  sub_232016080(v152, v413, &qword_2541AF180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510]);
  v149 = v140;
  if (v135(v153, 1, v144) == 1)
  {
    v157 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510];
    sub_232016D88(v428, &qword_2541AF180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510]);
    sub_232016D88((uint64_t)v429, &qword_2541AF180, v157);
    ((void (*)(uint64_t, id))v430[1])(v156, v144);
    v148 = v138;
    goto LABEL_31;
  }
  v158 = v152;
  v159 = v430;
  v160 = v409;
  ((void (*)(char *, uint64_t, id))v430[4])(v409, v153, v154);
  v161 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510];
  sub_232000590(&qword_2541B58B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF538]);
  v162 = sub_232200E64();
  v163 = (void (*)(char *, id))v159[1];
  v163(v160, v154);
  sub_232016D88(v428, &qword_2541AF180, v161);
  sub_232016D88((uint64_t)v429, &qword_2541AF180, v161);
  v163((char *)v156, v154);
  sub_232016D88(v158, &qword_2541AF180, v161);
  v148 = v138;
  if ((v162 & 1) == 0)
    goto LABEL_24;
LABEL_33:
  objc_opt_self();
  v164 = (char *)swift_dynamicCastObjCClass();
  v165 = (void (*)(char *, os_log_t))v365[0];
  v166 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))isa;
  if (!v164)
    goto LABEL_50;
  v429 = v164;
  sub_2321FE0F8();
  v167 = (uint64_t (*)(uint64_t))MEMORY[0x24BE47350];
  v168 = v423;
  v169 = v404;
  sub_2321FF9DC();
  sub_232000590(&qword_255F9E160, v167, MEMORY[0x24BE47320]);
  v170 = (uint64_t)v405;
  sub_2321FFB2C();
  v171 = *(void (**)(char *, uint64_t))(v406 + 8);
  v171(v169, v412);
  v172 = sub_2321FE0EC();
  v173 = *(_QWORD *)(v172 - 8);
  v174 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v173 + 48);
  v175 = v174(v170, 1, v172);
  v430 = (void (**)(_QWORD, _QWORD, _QWORD, _QWORD))v168;
  v428 = v173;
  if (v175 == 1)
  {
    sub_232016D88(v170, &qword_2541B6A40, (uint64_t (*)(uint64_t))MEMORY[0x24BE47348]);
    v176 = 0;
  }
  else
  {
    v177 = sub_2321FE0E0();
    (*(void (**)(uint64_t, uint64_t))(v173 + 8))(v170, v172);
    v178 = v168;
    v176 = (char *)sub_2320C53B0(v429, v177, (uint64_t (*)(void))sub_23216ACC8, &qword_255F9E170);

    v148 = (uint64_t)v426;
    swift_bridgeObjectRelease();
  }
  v179 = v408;
  sub_2321FF9DC();
  v180 = (uint64_t)v407;
  sub_2321FFB2C();
  v171(v179, v412);
  if (v174(v180, 1, v172) == 1)
  {
    sub_232016D88(v180, &qword_2541B6A40, (uint64_t (*)(uint64_t))MEMORY[0x24BE47348]);
    if (v176)
    {
      v181 = 0;
      goto LABEL_45;
    }
  }
  else
  {
    v182 = sub_2321FE0E0();
    (*(void (**)(uint64_t, uint64_t))(v428 + 8))(v180, v172);
    v183 = v430;
    v181 = sub_2320C53B0(v429, v182, (uint64_t (*)(void))sub_23216ACC8, &qword_255F9E170);

    swift_bridgeObjectRelease();
    if (v176)
    {
      if (!v181)
        goto LABEL_45;
      sub_232003E9C(0, &qword_255F9E170);
      v184 = v181;
      v185 = v176;
      v186 = sub_2322016A4();

      if ((v186 & 1) == 0)
        goto LABEL_45;

      v187 = v184;
      goto LABEL_49;
    }
    if (v181)
    {
LABEL_45:
      swift_getObjectType();
      v188 = v402;
      sub_2321FF958();
      v189 = v176;
      swift_retain_n();
      v190 = v430;
      v191 = v181;
      v192 = v189;
      v193 = v190;
      v194 = v191;
      v195 = sub_232200390();
      v196 = sub_2322012FC();
      v197 = v196;
      if (os_log_type_enabled(v195, v196))
      {
        v198 = swift_slowAlloc();
        v430 = (void (**)(_QWORD, _QWORD, _QWORD, _QWORD))v192;
        v199 = v198;
        v432 = swift_slowAlloc();
        v435 = (unint64_t)v432;
        *(_DWORD *)v199 = 136446978;
        v429 = v176;
        swift_retain();
        v431 = v195;
        v200 = sub_2320A0814();
        v202 = v201;
        swift_release();
        *(_QWORD *)&v433 = sub_232013174(v200, v202, (uint64_t *)&v435);
        sub_232201710();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v199 + 12) = 2082;
        v203 = objc_msgSend(v193, sel_identifier);
        v204 = sub_232200EC4();
        LODWORD(v428) = v197;
        v205 = v204;
        v207 = v206;

        *(_QWORD *)&v433 = sub_232013174(v205, v207, (uint64_t *)&v435);
        sub_232201710();

        swift_bridgeObjectRelease();
        v208 = v188;
        *(_WORD *)(v199 + 22) = 2080;
        *(_QWORD *)&v433 = v181;
        sub_2320CCE74();
        v209 = v194;
        v210 = sub_232200F00();
        *(_QWORD *)&v433 = sub_232013174(v210, v211, (uint64_t *)&v435);
        v148 = (uint64_t)v426;
        sub_232201710();

        swift_bridgeObjectRelease();
        *(_WORD *)(v199 + 32) = 2080;
        *(_QWORD *)&v433 = v429;
        v212 = v430;
        v213 = sub_232200F00();
        *(_QWORD *)&v433 = sub_232013174(v213, v214, (uint64_t *)&v435);
        sub_232201710();

        swift_bridgeObjectRelease();
        v215 = v431;
        _os_log_impl(&dword_231FFB000, v431, (os_log_type_t)v428, "%{public}s Work criteria for sample type %{public}s detected different unit preferences:\n%s\n%s", (uint8_t *)v199, 0x2Au);
        v216 = v432;
        swift_arrayDestroy();
        MEMORY[0x2348FF468](v216, -1, -1);
        MEMORY[0x2348FF468](v199, -1, -1);

        (*(void (**)(char *, uint64_t))(v410 + 8))(v208, v411);
      }
      else
      {
        swift_release_n();

        (*(void (**)(char *, uint64_t))(v410 + 8))(v188, v411);
      }
LABEL_70:
      v294 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510];
      v295 = v427;
LABEL_71:
      sub_232016D88(v295, &qword_2541AF180, v294);
      v296 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510];
      v297 = v148;
LABEL_72:
      sub_232016D88(v297, &qword_2541AF180, v296);
      return 1;
    }
  }
  v187 = v430;
LABEL_49:

  v149 = v427;
  v166 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))isa;
  v165 = (void (*)(char *, os_log_t))v365[0];
LABEL_50:
  v437 = sub_2321FFA60();
  v438 = sub_232000590(&qword_2541B6B10, (uint64_t (*)(uint64_t))MEMORY[0x24BE47010], MEMORY[0x24BE47008]);
  sub_2320251BC((uint64_t *)&v435);
  sub_2321FFA54();
  v217 = sub_2321FFB20();
  sub_232016AFC((uint64_t)&v435);
  if ((v217 & 1) != 0)
  {
    swift_getObjectType();
    v218 = v403;
    sub_2321FF958();
    v219 = v423;
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    v220 = v219;
    v221 = sub_232200390();
    v222 = sub_2322012FC();
    if (os_log_type_enabled(v221, (os_log_type_t)v222))
    {
      LODWORD(v430) = v222;
      v431 = v221;
      v223 = swift_slowAlloc();
      v429 = (char *)swift_slowAlloc();
      *(_QWORD *)&v433 = v429;
      *(_DWORD *)v223 = 136446978;
      swift_retain();
      v224 = sub_2320A0814();
      v226 = v225;
      swift_release();
      v435 = sub_232013174(v224, v226, (uint64_t *)&v433);
      sub_232201710();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v223 + 12) = 2082;
      v227 = objc_msgSend(v220, sel_identifier);
      v228 = sub_232200EC4();
      v230 = v229;

      v435 = sub_232013174(v228, v230, (uint64_t *)&v433);
      sub_232201710();

      swift_bridgeObjectRelease();
      *(_WORD *)(v223 + 22) = 2082;
      sub_2321FFA84();
      v231 = (uint64_t (*)(uint64_t))MEMORY[0x24BE47030];
      v232 = v391;
      sub_2321FFA00();
      sub_232000590(&qword_255F9E158, v231, MEMORY[0x24BE47028]);
      v233 = (uint64_t)v392;
      sub_2321FFB2C();
      v234 = *(void (**)(char *, uint64_t))(v393 + 8);
      v234(v232, v401);
      v235 = sub_2321FFA78();
      v236 = *(_QWORD *)(v235 - 8);
      v237 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v236 + 48);
      v238 = v237(v233, 1, v235);
      v428 = v236;
      if (v238 == 1)
      {
        sub_232016D88(v233, &qword_2541B6B18, (uint64_t (*)(uint64_t))MEMORY[0x24BE47020]);
        v239 = 0;
        v240 = 0;
      }
      else
      {
        v239 = sub_2321FFA6C();
        v240 = v274;
        (*(void (**)(uint64_t, uint64_t))(v236 + 8))(v233, v235);
      }
      v435 = v239;
      v436 = v240;
      sub_232000608(0, (unint64_t *)&qword_2541B78A0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
      v275 = sub_232200F00();
      v435 = sub_232013174(v275, v276, (uint64_t *)&v433);
      sub_232201710();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v223 + 32) = 2082;
      v277 = v395;
      sub_2321FFA00();
      v278 = (uint64_t)v396;
      sub_2321FFB2C();
      v234(v277, v401);
      if (v237(v278, 1, v235) == 1)
      {
        sub_232016D88(v278, &qword_2541B6B18, (uint64_t (*)(uint64_t))MEMORY[0x24BE47020]);
        v279 = 0;
        v280 = 0;
      }
      else
      {
        v279 = sub_2321FFA6C();
        v280 = v287;
        (*(void (**)(uint64_t, uint64_t))(v428 + 8))(v278, v235);
      }
      v148 = (uint64_t)v426;
      v288 = v403;
      v289 = v431;
      v290 = v430;
      v435 = v279;
      v436 = v280;
      v291 = sub_232200F00();
      v435 = sub_232013174(v291, v292, (uint64_t *)&v433);
      sub_232201710();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v289, v290, "%{public}s Work criteria for sample type %{public}s detected different locales:\n%{public}s\n%{public}s", (uint8_t *)v223, 0x2Au);
      v293 = v429;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v293, -1, -1);
      MEMORY[0x2348FF468](v223, -1, -1);

      (*(void (**)(char *, uint64_t))(v410 + 8))(v288, v411);
    }
    else
    {
      swift_release_n();

      swift_release_n();
      swift_release_n();

      (*(void (**)(char *, uint64_t))(v410 + 8))(v218, v411);
    }
    goto LABEL_70;
  }
  v241 = sub_2321FE80C();
  v437 = v367;
  v438 = v369;
  sub_2320251BC((uint64_t *)&v435);
  sub_2321FE800();
  v242 = sub_2321FFB20();
  sub_232016AFC((uint64_t)&v435);
  if ((v242 & 1) == 0)
  {
    v268 = v389;
    sub_2321FF9C4();
    sub_232000590(&qword_2541B6A80, (uint64_t (*)(uint64_t))MEMORY[0x24BE48138], MEMORY[0x24BE48120]);
    v269 = (uint64_t)v390;
    sub_2321FFB2C();
    (*(void (**)(char *, uint64_t))(v397 + 8))(v268, v398);
    sub_2320CC244();
    v271 = v270;
    v272 = *(_QWORD *)(v270 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v272 + 48))(v269, 1, v270) == 1)
    {
      sub_232016D88(v269, &qword_2541B6B78, (uint64_t (*)(uint64_t))sub_2320CC244);
      v273 = (uint64_t)v394;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v400 + 56))(v394, 1, 1, v399);
    }
    else
    {
      v281 = (void *)sub_2321FFB98();
      (*(void (**)(uint64_t, uint64_t))(v272 + 8))(v269, v271);
      v282 = objc_msgSend(v281, sel_physiologicalWashoutEndDate);

      v283 = v399;
      if (v282)
      {
        v284 = (uint64_t)v387;
        sub_2321FDC30();

        v285 = 0;
        v286 = v400;
        v273 = (uint64_t)v394;
      }
      else
      {
        v285 = 1;
        v286 = v400;
        v273 = (uint64_t)v394;
        v284 = (uint64_t)v387;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v286 + 56))(v284, v285, 1, v283);
      sub_2320CCC78(v284, v273);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v286 + 48))(v273, 1, v283) != 1)
      {
        v302 = v386;
        (*(void (**)(char *, uint64_t, uint64_t))(v286 + 32))(v386, v273, v283);
        v437 = v367;
        v438 = v369;
        sub_2320251BC((uint64_t *)&v435);
        sub_2321FFB68();
        v303 = sub_2321FFB20();
        sub_232016AFC((uint64_t)&v435);
        if ((v303 & 1) != 0)
        {
          v304 = v377;
          sub_2321FF9F4();
          v305 = (uint64_t)v376;
          sub_2321FFB2C();
          v165(v304, v431);
          v306 = v366;
          if (v166(v305, 1, v366) == 1)
          {
            sub_232016D88(v305, &qword_2541B6AD8, (uint64_t (*)(uint64_t))sub_2320CCD40);
            v307 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v424 + 56);
            v307(v385, 1, 1, v425);
          }
          else
          {
            v319 = v385;
            sub_2321FF940();
            (*((void (**)(uint64_t, uint64_t))v417 + 1))(v305, v306);
            v307 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v424 + 56);
            v307(v319, 0, 1, v425);
          }
          v320 = v379;
          sub_2321FF9F4();
          v321 = (uint64_t)v378;
          sub_2321FFB2C();
          v165(v320, v431);
          if (v166(v321, 1, v306) == 1)
          {
            sub_232016D88(v321, &qword_2541B6AD8, (uint64_t (*)(uint64_t))sub_2320CCD40);
            v322 = 1;
            v323 = v380;
          }
          else
          {
            v323 = v380;
            sub_2321FF940();
            (*((void (**)(uint64_t, uint64_t))v417 + 1))(v321, v306);
            v322 = 0;
          }
          v324 = v386;
          v325 = v399;
          v326 = v385;
          v307((uint64_t)v323, v322, 1, v425);
          if ((sub_2320CC518(v326, v323, v324) & 1) != 0)
          {
            result = (uint64_t)objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
            if (result)
            {
              v327 = (void *)result;
              v328 = objc_msgSend((id)result, sel_showSensitiveLogItems);

              if (v328)
              {
                swift_getObjectType();
                sub_2321FF958();
                v329 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0];
                sub_232016080(v326, v373, &qword_2541B2800, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0]);
                sub_232016080((uint64_t)v323, v375, &qword_2541B2800, v329);
                (*(void (**)(char *, char *, uint64_t))(v400 + 16))(v374, v324, v325);
                v330 = v423;
                swift_retain_n();
                v331 = v330;
                v332 = sub_232200390();
                v333 = sub_2322012FC();
                v432 = v332;
                LODWORD(v431) = v333;
                if (os_log_type_enabled(v332, v333))
                {
                  v334 = swift_slowAlloc();
                  v430 = (void (**)(_QWORD, _QWORD, _QWORD, _QWORD))swift_slowAlloc();
                  v435 = (unint64_t)v430;
                  *(_DWORD *)v334 = 136447234;
                  swift_retain();
                  v335 = sub_2320A0814();
                  v337 = v336;
                  swift_release();
                  *(_QWORD *)&v433 = sub_232013174(v335, v337, (uint64_t *)&v435);
                  sub_232201710();
                  swift_release_n();
                  swift_bridgeObjectRelease();
                  *(_WORD *)(v334 + 12) = 2080;
                  v338 = objc_msgSend(v331, sel_identifier);
                  v339 = sub_232200EC4();
                  v341 = v340;

                  *(_QWORD *)&v433 = sub_232013174(v339, v341, (uint64_t *)&v435);
                  sub_232201710();

                  swift_bridgeObjectRelease();
                  *(_WORD *)(v334 + 22) = 2080;
                  v342 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0];
                  v343 = v373;
                  v344 = v370;
                  sub_232016080(v373, v370, &qword_2541B2800, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0]);
                  v345 = sub_232200F00();
                  *(_QWORD *)&v433 = sub_232013174(v345, v346, (uint64_t *)&v435);
                  sub_232201710();
                  swift_bridgeObjectRelease();
                  sub_232016D88(v343, &qword_2541B2800, v342);
                  *(_WORD *)(v334 + 32) = 2080;
                  v347 = v375;
                  sub_232016080(v375, v344, &qword_2541B2800, v342);
                  v348 = sub_232200F00();
                  *(_QWORD *)&v433 = sub_232013174(v348, v349, (uint64_t *)&v435);
                  sub_232201710();
                  swift_bridgeObjectRelease();
                  v350 = v342;
                  sub_232016D88(v347, &qword_2541B2800, v342);
                  *(_WORD *)(v334 + 42) = 2080;
                  sub_232000590(&qword_2541AF170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
                  v351 = v374;
                  v352 = v399;
                  v353 = sub_232201AB8();
                  *(_QWORD *)&v433 = sub_232013174(v353, v354, (uint64_t *)&v435);
                  sub_232201710();
                  swift_bridgeObjectRelease();
                  v355 = *(void (**)(char *, uint64_t))(v400 + 8);
                  v355(v351, v352);
                  v356 = v432;
                  _os_log_impl(&dword_231FFB000, v432, (os_log_type_t)v431, "%{public}s Work criteria for sample type %s detected end of physiological washout for pregnancy :\n%s\n%s\n%s", (uint8_t *)v334, 0x34u);
                  v357 = v430;
                  swift_arrayDestroy();
                  MEMORY[0x2348FF468](v357, -1, -1);
                  MEMORY[0x2348FF468](v334, -1, -1);

                  (*(void (**)(char *, uint64_t))(v410 + 8))(v372, v411);
                  sub_232016D88((uint64_t)v380, &qword_2541B2800, v350);
                  sub_232016D88(v385, &qword_2541B2800, v350);
                  v355(v386, v352);
                }
                else
                {

                  v362 = *(void (**)(char *, uint64_t))(v400 + 8);
                  v363 = v399;
                  v362(v374, v399);
                  v364 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0];
                  sub_232016D88(v375, &qword_2541B2800, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0]);
                  sub_232016D88(v373, &qword_2541B2800, v364);
                  swift_release_n();

                  (*(void (**)(char *, uint64_t))(v410 + 8))(v372, v411);
                  sub_232016D88((uint64_t)v380, &qword_2541B2800, v364);
                  sub_232016D88(v385, &qword_2541B2800, v364);
                  v362(v386, v363);
                }
                sub_232016D88(v427, &qword_2541AF180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510]);
                v296 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510];
                v297 = (uint64_t)v426;
                goto LABEL_72;
              }
              v360 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0];
              sub_232016D88((uint64_t)v323, &qword_2541B2800, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0]);
              sub_232016D88(v326, &qword_2541B2800, v360);
              (*(void (**)(char *, uint64_t))(v400 + 8))(v324, v325);
              goto LABEL_99;
            }
            goto LABEL_103;
          }
          v358 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0];
          sub_232016D88((uint64_t)v323, &qword_2541B2800, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0]);
          sub_232016D88(v326, &qword_2541B2800, v358);
          (*(void (**)(char *, uint64_t))(v400 + 8))(v324, v325);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v400 + 8))(v302, v399);
        }
        v359 = MEMORY[0x24BDCF510];
        sub_232016D88(v149, &qword_2541AF180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510]);
        v301 = v148;
        v299 = &qword_2541AF180;
        v300 = (uint64_t (*)(uint64_t))v359;
LABEL_77:
        sub_232016D88(v301, v299, v300);
        return 2;
      }
    }
    v298 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510];
    sub_232016D88(v149, &qword_2541AF180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510]);
    sub_232016D88(v148, &qword_2541AF180, v298);
    v299 = &qword_2541B7618;
    v300 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
    v301 = v273;
    goto LABEL_77;
  }
  v431 = v241;
  result = (uint64_t)objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (result)
  {
    v243 = (void *)result;
    v244 = objc_msgSend((id)result, sel_showSensitiveLogItems);

    if (v244)
    {
      swift_getObjectType();
      v245 = v388;
      sub_2321FF958();
      v246 = v423;
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      v247 = v246;
      v248 = sub_232200390();
      v249 = sub_2322012FC();
      if (os_log_type_enabled(v248, (os_log_type_t)v249))
      {
        LODWORD(v429) = v249;
        v430 = (void (**)(_QWORD, _QWORD, _QWORD, _QWORD))v248;
        v250 = swift_slowAlloc();
        v428 = swift_slowAlloc();
        v435 = v428;
        *(_DWORD *)v250 = 136446978;
        swift_retain();
        v251 = sub_2320A0814();
        v253 = v252;
        swift_release();
        *(_QWORD *)&v433 = sub_232013174(v251, v253, (uint64_t *)&v435);
        sub_232201710();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v250 + 12) = 2082;
        v254 = objc_msgSend(v247, sel_identifier);
        v255 = sub_232200EC4();
        v257 = v256;

        *(_QWORD *)&v433 = sub_232013174(v255, v257, (uint64_t *)&v435);
        sub_232201710();

        swift_bridgeObjectRelease();
        *(_WORD *)(v250 + 22) = 2080;
        v258 = v381;
        sub_2321FF9C4();
        sub_232000590(&qword_2541B6A80, (uint64_t (*)(uint64_t))MEMORY[0x24BE48138], MEMORY[0x24BE48120]);
        v259 = (uint64_t)v382;
        sub_2321FFB2C();
        v260 = *(void (**)(char *, uint64_t))(v397 + 8);
        v261 = v398;
        v260(v258, v398);
        sub_2320CC244();
        v263 = v262;
        v264 = *(_QWORD *)(v262 - 8);
        v265 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v264 + 48);
        v266 = v265(v259, 1, v262);
        v425 = v264;
        if (v266 == 1)
        {
          sub_232016D88(v259, &qword_2541B6B78, (uint64_t (*)(uint64_t))sub_2320CC244);
          v267 = 0;
        }
        else
        {
          v267 = sub_2321FFB98();
          (*(void (**)(uint64_t, uint64_t))(v264 + 8))(v259, v263);
        }
        *(_QWORD *)&v433 = v267;
        sub_2320CCE10();
        v308 = sub_232200F18();
        *(_QWORD *)&v433 = sub_232013174(v308, v309, (uint64_t *)&v435);
        sub_232201710();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v250 + 32) = 2080;
        v310 = v384;
        sub_2321FF9C4();
        v311 = (uint64_t)v383;
        sub_2321FFB2C();
        v260(v310, v261);
        if (v265(v311, 1, v263) == 1)
        {
          sub_232016D88(v311, &qword_2541B6B78, (uint64_t (*)(uint64_t))sub_2320CC244);
          v312 = 0;
        }
        else
        {
          v312 = sub_2321FFB98();
          (*(void (**)(uint64_t, uint64_t))(v425 + 8))(v311, v263);
        }
        v148 = (uint64_t)v426;
        v313 = v427;
        v314 = v388;
        *(_QWORD *)&v433 = v312;
        v315 = sub_232200F18();
        *(_QWORD *)&v433 = sub_232013174(v315, v316, (uint64_t *)&v435);
        sub_232201710();
        swift_release_n();
        swift_bridgeObjectRelease();
        v317 = v430;
        _os_log_impl(&dword_231FFB000, (os_log_t)v430, (os_log_type_t)v429, "%{public}s Work criteria for sample type %{public}s detected different pregnancy states:\n%s\n%s", (uint8_t *)v250, 0x2Au);
        v318 = v428;
        swift_arrayDestroy();
        MEMORY[0x2348FF468](v318, -1, -1);
        MEMORY[0x2348FF468](v250, -1, -1);

        (*(void (**)(char *, uint64_t))(v410 + 8))(v314, v411);
        v294 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510];
        v295 = v313;
      }
      else
      {
        swift_release_n();

        swift_release_n();
        swift_release_n();

        (*(void (**)(char *, uint64_t))(v410 + 8))(v245, v411);
        v294 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510];
        v295 = v149;
      }
      goto LABEL_71;
    }
LABEL_99:
    v361 = MEMORY[0x24BDCF510];
    sub_232016D88(v149, &qword_2541AF180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510]);
    v297 = v148;
    v296 = (uint64_t (*)(uint64_t))v361;
    goto LABEL_72;
  }
  __break(1u);
LABEL_103:
  __break(1u);
  return result;
}

uint64_t sub_2320CACBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_unknownObjectRelease();

  v1 = v0 + OBJC_IVAR____TtC9Summaries27SummariesFullProfilePlanner_signals;
  v2 = sub_2321FFA0C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_2320CAD1C()
{
  return type metadata accessor for SummariesFullProfilePlanner();
}

uint64_t type metadata accessor for SummariesFullProfilePlanner()
{
  uint64_t result;

  result = qword_2541B6C10;
  if (!qword_2541B6C10)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2320CAD60()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2321FFA0C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_2320CADE4()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_2320CAE08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC9Summaries27SummariesFullProfilePlanner_signals;
  v4 = sub_2321FFA0C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_2320CAE50()
{
  uint64_t v0;

  type metadata accessor for SummariesFullProfileExecutor();
  return sub_23209DF70(*(void **)(v0 + 32));
}

uint64_t sub_2320CAE88()
{
  sub_232000590(&qword_2541B6C00, (uint64_t (*)(uint64_t))type metadata accessor for SummariesFullProfilePlanner, (uint64_t)&unk_232214318);
  return sub_2321FE068();
}

uint64_t sub_2320CAEE0(void *a1, uint64_t a2, NSObject *a3)
{
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  sub_2320057B8(0, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v13 - v8;
  v10 = sub_2321FDC6C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = sub_2320C6260(a1, a2, a3, (uint64_t)v9);
  sub_232016D88((uint64_t)v9, &qword_2541B7618, v6);
  return v11;
}

uint64_t sub_2320CAFC0()
{
  sub_232000590(&qword_2541B6C00, (uint64_t (*)(uint64_t))type metadata accessor for SummariesFullProfilePlanner, (uint64_t)&unk_232214318);
  return sub_2321FE08C();
}

void sub_2320CB018()
{
  sub_232000590(&qword_2541B6C00, (uint64_t (*)(uint64_t))type metadata accessor for SummariesFullProfilePlanner, (uint64_t)&unk_232214318);
  JUMPOUT(0x2348FB1FCLL);
}

void sub_2320CB070()
{
  sub_232000590(&qword_2541B6C00, (uint64_t (*)(uint64_t))type metadata accessor for SummariesFullProfilePlanner, (uint64_t)&unk_232214318);
  JUMPOUT(0x2348FB1F0);
}

uint64_t sub_2320CB0C8()
{
  return sub_232000590(&qword_255F9E120, (uint64_t (*)(uint64_t))_s14descr250103FA9O8WorkPlanVMa, (uint64_t)&unk_232216630);
}

uint64_t sub_2320CB0F4()
{
  return sub_232000590(&qword_2541B6C08, (uint64_t (*)(uint64_t))type metadata accessor for SummariesFullProfilePlanner, (uint64_t)&unk_2322142B8);
}

_QWORD *sub_2320CB120(void *a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  char *v30;
  void (*v31)(char *, char *, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  void *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t *v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t inited;
  unint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  uint64_t v49;
  char *v50;
  void (*v51)(char *, char *, uint64_t);
  _QWORD *v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t *v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  id v61;
  uint64_t v62;
  _QWORD *v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  char *v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  void *v83;
  char *v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;

  v81 = a1;
  v1 = sub_2321FFB44();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BE47138];
  v72 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v75 = (char *)&v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2321FE0D4();
  v79 = *(_QWORD *)(v4 - 8);
  v80 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v78 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v74 = (char *)&v71 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v84 = (char *)&v71 - v9;
  sub_2320057B8(0, &qword_2541B6AC0, (uint64_t (*)(uint64_t))MEMORY[0x24BE48310], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v71 - v11;
  v82 = sub_2321FE920();
  v13 = *(_QWORD *)(v82 - 8);
  v14 = MEMORY[0x24BDAC7A8](v82);
  v77 = (char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v76 = (char *)&v71 - v16;
  v17 = sub_2321FFB5C();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320CBDD4(0, (unint64_t *)&qword_2541B7190, (unint64_t *)&qword_2541B6B80, MEMORY[0x24BE471A0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_232211930;
  sub_2321FFB74();
  *(_QWORD *)(v21 + 56) = v1;
  v22 = sub_232000590((unint64_t *)&qword_2541B6B38, v2, MEMORY[0x24BE47130]);
  *(_QWORD *)(v21 + 64) = v22;
  sub_2320251BC((uint64_t *)(v21 + 32));
  sub_2321FFB68();
  v23 = sub_2321FFA60();
  v24 = (uint64_t (*)(uint64_t))MEMORY[0x24BE47010];
  *(_QWORD *)(v21 + 96) = v23;
  *(_QWORD *)(v21 + 104) = sub_232000590(&qword_2541B6B10, v24, MEMORY[0x24BE47008]);
  sub_2320251BC((uint64_t *)(v21 + 72));
  sub_2321FFA54();
  v73 = v1;
  *(_QWORD *)(v21 + 136) = v1;
  *(_QWORD *)(v21 + 144) = v22;
  v71 = v22;
  sub_2320251BC((uint64_t *)(v21 + 112));
  if (qword_2541B6B58 != -1)
    swift_once();
  v25 = sub_23201670C(v17, (uint64_t)qword_2541B6B40);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v25, v17);
  sub_2321FFB38();
  v88 = (_QWORD *)v21;
  v26 = v83;
  sub_2320CB930(v12);
  v27 = v82;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v82) == 1)
  {
    sub_232016D88((uint64_t)v12, &qword_2541B6AC0, (uint64_t (*)(uint64_t))MEMORY[0x24BE48310]);
    v28 = v80;
    v29 = v81;
  }
  else
  {
    v30 = v76;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v76, v12, v27);
    v31 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    v31(v77, v30, v27);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v88 = (_QWORD *)v21;
    v28 = v80;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v21 = (uint64_t)sub_2320974D8(0, *(_QWORD *)(v21 + 16) + 1, 1, (_QWORD *)v21);
      v88 = (_QWORD *)v21;
    }
    v33 = v81;
    v35 = *(_QWORD *)(v21 + 16);
    v34 = *(_QWORD *)(v21 + 24);
    if (v35 >= v34 >> 1)
    {
      v21 = (uint64_t)sub_2320974D8((_QWORD *)(v34 > 1), v35 + 1, 1, (_QWORD *)v21);
      v88 = (_QWORD *)v21;
    }
    v86 = v27;
    v87 = sub_232000590(&qword_2541B6AB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE48310], MEMORY[0x24BE48300]);
    v36 = sub_2320251BC((uint64_t *)&v85);
    v37 = v77;
    v31((char *)v36, v77, v27);
    *(_QWORD *)(v21 + 16) = v35 + 1;
    sub_2320167F8(&v85, v21 + 40 * v35 + 32);
    v38 = *(void (**)(char *, uint64_t))(v13 + 8);
    v38(v37, v27);
    v38(v76, v27);
    v29 = v33;
  }
  v40 = v78;
  v39 = v79;
  objc_opt_self();
  v41 = swift_dynamicCastObjCClass();
  v42 = v84;
  if (v41)
  {
    v43 = v41;
    sub_232000608(0, (unint64_t *)&qword_2541B78C8, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_232210D20;
    *(_QWORD *)(inited + 32) = v43;
    *(_QWORD *)&v85 = inited;
    sub_232201050();
    v45 = v85;
    if ((unint64_t)v85 >> 62)
    {
      v48 = v26;
      swift_bridgeObjectRetain();
      v49 = sub_232201998();
      swift_bridgeObjectRelease();
      if (!v49)
        goto LABEL_15;
    }
    else
    {
      v46 = *(_QWORD *)((v85 & 0xFFFFFFFFFFFFF8) + 0x10);
      v47 = v26;
      if (!v46)
      {
LABEL_15:
        swift_bridgeObjectRelease();
        v50 = v74;
        sub_2321FE0C8();
        (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v42, v50, v28);
        v51 = *(void (**)(char *, char *, uint64_t))(v39 + 16);
        v51(v40, v42, v28);
        v52 = v88;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v52 = sub_2320974D8(0, v52[2] + 1, 1, v52);
          v88 = v52;
        }
        v54 = v52[2];
        v53 = v52[3];
        if (v54 >= v53 >> 1)
        {
          v52 = sub_2320974D8((_QWORD *)(v53 > 1), v54 + 1, 1, v52);
          v88 = v52;
        }
        v86 = v28;
        v87 = sub_232000590(&qword_2541B6A38, (uint64_t (*)(uint64_t))MEMORY[0x24BE47338], MEMORY[0x24BE47328]);
        v55 = sub_2320251BC((uint64_t *)&v85);
        v51((char *)v55, v40, v28);
        v52[2] = v54 + 1;
        sub_2320167F8(&v85, (uint64_t)&v52[5 * v54 + 4]);
        v56 = *(void (**)(char *, uint64_t))(v39 + 8);
        v56(v40, v28);
        v56(v42, v28);
        goto LABEL_20;
      }
    }
    sub_2321ABB64(v45);
    goto LABEL_15;
  }
LABEL_20:
  sub_23207E440((uint64_t)&v85);
  v57 = v86;
  if (v86)
  {
    v58 = v87;
    sub_232016AD8(&v85, v86);
    v59 = (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 8))(v57, v58);
    sub_232016AFC((uint64_t)&v85);
    sub_23209D720(v59);
  }
  else
  {
    sub_2320CBD78((uint64_t)&v85);
  }
  v60 = objc_msgSend(v29, sel_profileIdentifier);
  v61 = objc_msgSend(v60, sel_type);

  if (v61 == (id)1)
  {
    v62 = *(_QWORD *)(sub_2321FFDC0() + 16);
    swift_bridgeObjectRelease();
    if (v62)
    {
      sub_2321FE80C();
      sub_2321FE800();
      v63 = v88;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v63 = sub_2320974D8(0, v63[2] + 1, 1, v63);
        v88 = v63;
      }
      v65 = v63[2];
      v64 = v63[3];
      if (v65 >= v64 >> 1)
      {
        v63 = sub_2320974D8((_QWORD *)(v64 > 1), v65 + 1, 1, v63);
        v88 = v63;
      }
      v66 = v73;
      v86 = v73;
      v87 = v71;
      v67 = sub_2320251BC((uint64_t *)&v85);
      v68 = v72;
      v69 = v75;
      (*(void (**)(uint64_t *, char *, uint64_t))(v72 + 16))(v67, v75, v66);
      v63[2] = v65 + 1;
      sub_2320167F8(&v85, (uint64_t)&v63[5 * v65 + 4]);
      (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v66);
    }
  }
  return v88;
}

void sub_2320CB930(id a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t inited;
  unint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];
  uint8_t *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  unint64_t v35;

  v2 = v1;
  v4 = sub_23220039C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_opt_self();
  v8 = swift_dynamicCastObjCClass();
  if (v8)
  {
    v9 = (void *)v8;
    v33 = v2;
    v10 = objc_msgSend(v9, sel_code);
    if (v10 == (id)191 || v10 == (id)305)
    {
      v11 = sub_2321FE920();
      (*(void (**)(id, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a1, 1, 1, v11);

      return;
    }
    sub_232000608(0, (unint64_t *)&qword_2541B78C8, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_232210D20;
    *(_QWORD *)(inited + 32) = v9;
    v35 = inited;
    sub_232201050();
    v23 = v35;
    if (v35 >> 62)
    {
      v27 = v33;
      swift_bridgeObjectRetain();
      v28 = sub_232201998();
      swift_bridgeObjectRelease();
      if (!v28)
        goto LABEL_13;
    }
    else
    {
      v24 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
      v25 = v33;
      if (!v24)
      {
LABEL_13:
        swift_bridgeObjectRelease();
        sub_2321FE914();

        v29 = sub_2321FE920();
        (*(void (**)(id, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(a1, 0, 1, v29);
        return;
      }
    }
    sub_2321AA560(v23);
    goto LABEL_13;
  }
  sub_232200324();
  v12 = v2;
  v13 = sub_232200390();
  v14 = sub_2322012F0();
  if (os_log_type_enabled(v13, v14))
  {
    v33 = a1;
    v15 = (uint8_t *)swift_slowAlloc();
    v32 = swift_slowAlloc();
    v35 = v32;
    *(_DWORD *)v15 = 136446210;
    v30[1] = v15 + 4;
    v31 = v15;
    v16 = objc_msgSend(v12, sel_identifier);
    v17 = sub_232200EC4();
    v19 = v18;

    a1 = v33;
    v34 = sub_232013174(v17, v19, (uint64_t *)&v35);
    sub_232201710();

    swift_bridgeObjectRelease();
    v20 = v31;
    _os_log_impl(&dword_231FFB000, v13, v14, "Unable to create database changes input signal for non-sample type: %{public}s", v31, 0xCu);
    v21 = v32;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v21, -1, -1);
    MEMORY[0x2348FF468](v20, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v26 = sub_2321FE920();
  (*(void (**)(id, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(a1, 1, 1, v26);
}

uint64_t sub_2320CBCC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2320CC15C(a2, a3, sub_2320E25CC) & 1;
}

uint64_t sub_2320CBCEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2320CC15C(a2, a3, (uint64_t (*)(void))sub_23210CEC0) & 1;
}

uint64_t sub_2320CBD18()
{
  return sub_2320CBFE4();
}

uint64_t sub_2320CBD24()
{
  swift_release();
  return swift_deallocObject();
}

void sub_2320CBD48(void *a1)
{
  uint64_t v1;

  sub_2320C5870(a1, *(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24));
}

uint64_t sub_2320CBD50()
{
  return swift_deallocObject();
}

uint64_t sub_2320CBD60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2320CBD70()
{
  return swift_release();
}

uint64_t sub_2320CBD78(uint64_t a1)
{
  uint64_t v2;

  sub_2320CBDD4(0, &qword_2541B6DB0, &qword_2541B6DA8, (uint64_t)&protocol descriptor for AdditionalInputSignalsProvider, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2320CBDD4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_232016A8C(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_2320CBE34()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  char v5;
  char v6;
  _BYTE v8[40];

  v0 = sub_2321FFB5C();
  MEMORY[0x24BDAC7A8](v0);
  sub_2320CBDD4(0, (unint64_t *)&qword_2541B7190, (unint64_t *)&qword_2541B6B80, MEMORY[0x24BE471A0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232210D30;
  v2 = sub_2321FFB44();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BE47138];
  *(_QWORD *)(inited + 56) = v2;
  v4 = sub_232000590((unint64_t *)&qword_2541B6B38, v3, MEMORY[0x24BE47130]);
  *(_QWORD *)(inited + 64) = v4;
  sub_2320251BC((uint64_t *)(inited + 32));
  sub_2321FFB50();
  sub_2321FFB38();
  sub_2321FFB74();
  *(_QWORD *)(inited + 96) = v2;
  *(_QWORD *)(inited + 104) = v4;
  sub_2320251BC((uint64_t *)(inited + 72));
  sub_2321FFB68();
  sub_23201B304(inited + 32, (uint64_t)v8);
  v5 = sub_2321FFB20();
  sub_232016AFC((uint64_t)v8);
  if ((v5 & 1) != 0)
  {
    v6 = 1;
  }
  else
  {
    sub_23201B304(inited + 72, (uint64_t)v8);
    v6 = sub_2321FFB20();
    sub_232016AFC((uint64_t)v8);
  }
  swift_bridgeObjectRelease();
  return v6 & 1;
}

uint64_t sub_2320CBFE4()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  char v5;
  char v6;
  _BYTE v8[40];

  sub_2320CBDD4(0, (unint64_t *)&qword_2541B7190, (unint64_t *)&qword_2541B6B80, MEMORY[0x24BE471A0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232210D30;
  sub_23215B5E8();
  v1 = sub_2321FE920();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BE48310];
  *(_QWORD *)(inited + 56) = v1;
  *(_QWORD *)(inited + 64) = sub_232000590(&qword_2541B6AB8, v2, MEMORY[0x24BE48300]);
  sub_2320251BC((uint64_t *)(inited + 32));
  sub_2321FE914();
  sub_2321FFB74();
  v3 = sub_2321FFB44();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BE47138];
  *(_QWORD *)(inited + 96) = v3;
  *(_QWORD *)(inited + 104) = sub_232000590((unint64_t *)&qword_2541B6B38, v4, MEMORY[0x24BE47130]);
  sub_2320251BC((uint64_t *)(inited + 72));
  sub_2321FFB68();
  sub_23201B304(inited + 32, (uint64_t)v8);
  v5 = sub_2321FFB20();
  sub_232016AFC((uint64_t)v8);
  if ((v5 & 1) != 0)
  {
    v6 = 1;
  }
  else
  {
    sub_23201B304(inited + 72, (uint64_t)v8);
    v6 = sub_2321FFB20();
    sub_232016AFC((uint64_t)v8);
  }
  swift_bridgeObjectRelease();
  return v6 & 1;
}

uint64_t sub_2320CC15C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _BYTE v12[40];

  v3 = a3();
  v4 = v3;
  v5 = *(_QWORD *)(v3 + 16);
  if (!v5)
    goto LABEL_9;
  sub_23201B304(v3 + 32, (uint64_t)v12);
  v6 = sub_2321FFB20();
  sub_232016AFC((uint64_t)v12);
  if ((v6 & 1) != 0)
  {
LABEL_3:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v5 == 1)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v8 = v4 + 72;
    v9 = 1;
    while (1)
    {
      result = sub_23201B304(v8, (uint64_t)v12);
      v10 = v9 + 1;
      if (__OFADD__(v9, 1))
        break;
      v11 = sub_2321FFB20();
      sub_232016AFC((uint64_t)v12);
      if ((v11 & 1) != 0)
        goto LABEL_3;
      ++v9;
      v8 += 40;
      if (v10 == v5)
        goto LABEL_9;
    }
    __break(1u);
  }
  return result;
}

void sub_2320CC244()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B6B70)
  {
    sub_232003E9C(255, &qword_2541B70C0);
    sub_232016040(&qword_2541B70B8, &qword_2541B70C0, 0x24BDD3CB0, MEMORY[0x24BE48608]);
    v0 = sub_2321FFBA4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B6B70);
  }
}

void sub_2320CC2DC()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_2541B6B28)
  {
    sub_2321FE584();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8];
    sub_232000590(&qword_2541B6A68, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], MEMORY[0x24BE47CE8]);
    sub_232000590(&qword_2541B6A58, v0, MEMORY[0x24BE47CD8]);
    sub_232000590(&qword_2541B6A60, v0, MEMORY[0x24BE47CE0]);
    v1 = sub_2321FFAF0();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_2541B6B28);
  }
}

void sub_2320CC3AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B6B88)
  {
    sub_2320CC480();
    sub_232000590(&qword_2541B7018, (uint64_t (*)(uint64_t))sub_2320CC480, MEMORY[0x24BE47228]);
    sub_232000590(&qword_2541B7020, (uint64_t (*)(uint64_t))sub_2320CC480, MEMORY[0x24BEE1710]);
    sub_232016040(&qword_2541B70F8, (unint64_t *)&qword_2541B27B0, 0x24BDD3F40, MEMORY[0x24BE48630]);
    v0 = sub_2321FFBC8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B6B88);
  }
}

void sub_2320CC480()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B7010)
  {
    sub_232003E9C(255, (unint64_t *)&qword_2541B27B0);
    sub_232016040(&qword_2541B7100, (unint64_t *)&qword_2541B27B0, 0x24BDD3F40, MEMORY[0x24BEE5BD8]);
    v0 = sub_232201104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B7010);
  }
}

uint64_t sub_2320CC518(uint64_t a1, void (*a2)(char *, char *, uint64_t), char *a3)
{
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  unint64_t *v33;
  uint64_t (*v34)(uint64_t);
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  uint64_t v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  char v43;
  char *v45;
  char *v46;
  char *v47;
  char v48;
  void (*v49)(char *, char *, uint64_t);
  char *v50;
  char *v51;
  void (*v52)(char *, uint64_t);
  void (*v53)(char *, uint64_t);
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  void (*v65)(char *, char *, uint64_t);

  v55 = a3;
  v65 = a2;
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v56 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v54 - v8;
  v63 = sub_2321FDC6C();
  v61 = *(_QWORD *)(v63 - 8);
  v10 = MEMORY[0x24BDAC7A8](v63);
  v54 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v58 = (char *)&v54 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v57 = (char *)&v54 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v59 = (char *)&v54 - v16;
  v62 = sub_2321FDDD4();
  v60 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v64 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0];
  sub_2320057B8(0, &qword_2541B2800, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], v4);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v54 - v23;
  v25 = sub_2321FD960();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v54 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)&v54 - v30;
  sub_232016080(a1, (uint64_t)v24, &qword_2541B2800, v18);
  v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  if (v32(v24, 1, v25) == 1)
  {
    v33 = &qword_2541B2800;
    v34 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0];
    v35 = (uint64_t)v24;
LABEL_9:
    sub_232016D88(v35, v33, v34);
    v43 = 0;
    return v43 & 1;
  }
  v36 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
  v36(v31, v24, v25);
  sub_232016080((uint64_t)v65, (uint64_t)v22, &qword_2541B2800, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0]);
  if (v32(v22, 1, v25) == 1)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v31, v25);
    v33 = &qword_2541B2800;
    v34 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0];
    v35 = (uint64_t)v22;
    goto LABEL_9;
  }
  v36(v29, v22, v25);
  v37 = v64;
  sub_2321FDDA4();
  sub_2321FDD74();
  v38 = v61;
  v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48);
  v40 = v63;
  if (v39(v9, 1, v63) == 1)
  {
LABEL_8:
    (*(void (**)(char *, uint64_t))(v60 + 8))(v37, v62);
    v42 = *(void (**)(char *, uint64_t))(v26 + 8);
    v42(v29, v25);
    v42(v31, v25);
    v33 = &qword_2541B7618;
    v34 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
    v35 = (uint64_t)v9;
    goto LABEL_9;
  }
  v41 = v59;
  v65 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
  v65(v59, v9, v40);
  v9 = v56;
  sub_2321FDD74();
  if (v39(v9, 1, v40) == 1)
  {
    (*(void (**)(char *, uint64_t))(v38 + 8))(v41, v40);
    goto LABEL_8;
  }
  v45 = v9;
  v46 = v57;
  v65(v57, v45, v40);
  v47 = v55;
  v48 = sub_2321FDC0C();
  v49 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
  v49(v58, v46, v40);
  v50 = v54;
  v49(v54, v47, v40);
  if ((v48 & 1) != 0)
  {
    sub_232000590((unint64_t *)&qword_2541AF160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
    v51 = v58;
    v43 = sub_232200E34() ^ 1;
  }
  else
  {
    v43 = 0;
    v51 = v58;
  }
  v52 = *(void (**)(char *, uint64_t))(v38 + 8);
  v52(v50, v40);
  v52(v51, v40);
  v52(v57, v40);
  v52(v59, v40);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v64, v62);
  v53 = *(void (**)(char *, uint64_t))(v26 + 8);
  v53(v29, v25);
  v53(v31, v25);
  return v43 & 1;
}

uint64_t sub_2320CCA24(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  id v13;
  void *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;

  sub_2320057B8(0, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v17 - v6;
  v8 = sub_2321FDC6C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    result = (uint64_t)objc_msgSend(a1, sel_state);
    if (result == 1)
      return result;
    if (result == 2)
    {
      v13 = objc_msgSend(a1, sel_physiologicalWashoutEndDate);
      if (v13)
      {
        v14 = v13;
        sub_2321FDC30();

        v15 = 0;
      }
      else
      {
        v15 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5, v15, 1, v8);
      sub_2320CCC78((uint64_t)v5, (uint64_t)v7);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
      {
        sub_232016D88((uint64_t)v7, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
        v16 = sub_2321FDC00();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        if ((v16 & 1) != 0)
          return 2;
      }
    }
  }
  return 0;
}

uint64_t sub_2320CCBF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s14descr250103FA9O8WorkPlanVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2320CCC3C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v5;

  sub_2320CCCD4(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_2320CCC78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2320057B8(0, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_2320CCCD4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v6;

  if (!*a2)
  {
    sub_2320057B8(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_2320CCD40()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_2541B6AD0)
  {
    sub_2321FD960();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0];
    sub_232000590(&qword_2541B69A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE20]);
    sub_232000590(&qword_2541B6998, v0, MEMORY[0x24BDCBE00]);
    sub_232000590(&qword_2541B69A0, v0, MEMORY[0x24BDCBE18]);
    v1 = sub_2321FF94C();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_2541B6AD0);
  }
}

void sub_2320CCE10()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9E150)
  {
    sub_232003E9C(255, &qword_2541B70C0);
    v0 = sub_2322016F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9E150);
  }
}

void sub_2320CCE74()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9E168)
  {
    sub_232003E9C(255, &qword_255F9E170);
    v0 = sub_2322016F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9E168);
  }
}

_QWORD *sub_2320CCED8(uint64_t a1, uint64_t a2, id a3)
{
  _QWORD *v3;
  id v7;
  id v8;
  uint64_t ObjCClassFromMetadata;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *result;

  v7 = objc_msgSend(a3, sel_profileIdentifier);
  v8 = objc_msgSend(v7, sel_type);

  if (v8 == (id)1)
  {
    type metadata accessor for SummariesHealthPluginDelegate();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v10 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v11 = objc_msgSend(v10, sel_bundleIdentifier);

    if (v11)
    {
      v12 = sub_232200EC4();
      v14 = v13;

      v3[2] = a1;
      v3[3] = a2;
      v3[4] = a3;
      v3[5] = v12;
      v3[6] = v14;
      return v3;
    }
  }
  else
  {
    __break(1u);
  }
  result = (_QWORD *)sub_232201968();
  __break(1u);
  return result;
}

uint64_t sub_2320CD020(uint64_t a1, void (*a2)(uint64_t, _QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v3 = v2;
  sub_2320CD448();
  sub_2321FFB08();
  v5 = sub_232131214(v8);
  swift_retain();
  v6 = sub_2320CD6AC(v5, v3);
  swift_bridgeObjectRelease();
  swift_release();
  a2(v6, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2320CD0F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_unknownObjectRelease();
  v1 = v0 + OBJC_IVAR____TtCC9Summaries30WheelchairSettingModelExecutor7Planner_signals;
  v2 = sub_2321FFA0C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_2320CD148@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtCC9Summaries30WheelchairSettingModelExecutor7Planner_signals;
  v4 = sub_2321FFA0C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_2320CD190()
{
  sub_2320A099C(&qword_2541B6DB8, 255, (uint64_t (*)(uint64_t))type metadata accessor for WheelchairSettingModelExecutor.Planner, (uint64_t)&unk_232214428);
  return sub_2321FE068();
}

uint64_t sub_2320CD1EC(uint64_t a1, uint64_t a2)
{
  return sub_2320CD968(a2);
}

uint64_t sub_2320CD1F4()
{
  sub_2320A099C(&qword_2541B6DB8, 255, (uint64_t (*)(uint64_t))type metadata accessor for WheelchairSettingModelExecutor.Planner, (uint64_t)&unk_232214428);
  return sub_2321FE08C();
}

void sub_2320CD250()
{
  sub_2320A099C(&qword_2541B6DB8, 255, (uint64_t (*)(uint64_t))type metadata accessor for WheelchairSettingModelExecutor.Planner, (uint64_t)&unk_232214428);
  JUMPOUT(0x2348FB1FCLL);
}

void sub_2320CD2AC()
{
  sub_2320A099C(&qword_2541B6DB8, 255, (uint64_t (*)(uint64_t))type metadata accessor for WheelchairSettingModelExecutor.Planner, (uint64_t)&unk_232214428);
  JUMPOUT(0x2348FB1F0);
}

uint64_t sub_2320CD308()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WheelchairSettingModelExecutor()
{
  return objc_opt_self();
}

uint64_t sub_2320CD35C()
{
  return type metadata accessor for WheelchairSettingModelExecutor.Planner();
}

uint64_t type metadata accessor for WheelchairSettingModelExecutor.Planner()
{
  uint64_t result;

  result = qword_2541B6DC8;
  if (!qword_2541B6DC8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2320CD3A0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2321FFA0C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_2320CD418()
{
  return sub_2320A099C(&qword_255F9E178, 255, (uint64_t (*)(uint64_t))sub_2320CD448, MEMORY[0x24BE47110]);
}

void sub_2320CD448()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9E180)
  {
    type metadata accessor for HKWheelchairUse(255);
    sub_2320A099C(&qword_2541B7080, 255, (uint64_t (*)(uint64_t))type metadata accessor for HKWheelchairUse, MEMORY[0x24BE485E8]);
    sub_2320A099C(&qword_2541B7070, 255, (uint64_t (*)(uint64_t))type metadata accessor for HKWheelchairUse, MEMORY[0x24BE485E0]);
    v0 = sub_2321FFB14();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9E180);
  }
}

uint64_t sub_2320CD4F4()
{
  return sub_2320A099C(&qword_2541B6DC0, 255, (uint64_t (*)(uint64_t))type metadata accessor for WheelchairSettingModelExecutor.Planner, (uint64_t)&unk_2322143C8);
}

uint64_t sub_2320CD528()
{
  return sub_2321FFA90();
}

uint64_t sub_2320CD544(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, uint64_t, uint64_t);
  uint64_t v8;
  __int128 v10;

  v3 = sub_2321FFA0C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10 = *(_OWORD *)(v1 + 16);
  v7(v6, a1, v3);
  type metadata accessor for WheelchairSettingModelExecutor.Planner();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = v10;
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v8 + OBJC_IVAR____TtCC9Summaries30WheelchairSettingModelExecutor7Planner_signals, v6, v3);
  swift_unknownObjectRetain();
  return v8;
}

uint64_t sub_2320CD618(uint64_t a1, uint64_t a2)
{
  sub_2320A099C(&qword_255F9E188, a2, (uint64_t (*)(uint64_t))type metadata accessor for WheelchairSettingModelExecutor, (uint64_t)&unk_2322144B0);
  return sub_2321FE830();
}

uint64_t sub_2320CD680(uint64_t a1, uint64_t a2)
{
  return sub_2320A099C(&qword_2541B6DD8, a2, (uint64_t (*)(uint64_t))type metadata accessor for WheelchairSettingModelExecutor, (uint64_t)&unk_232214468);
}

uint64_t sub_2320CD6AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;

  v14 = sub_2321FE608();
  v5 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v8)
  {
    v15 = MEMORY[0x24BEE4AF8];
    sub_2322018FC();
    v10 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v11 = sub_2320CD800();
    v13[1] = *(_QWORD *)(a2 + 40);
    v13[2] = v11;
    v13[0] = *(_QWORD *)(v5 + 72);
    v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    while (1)
    {
      v12(v7, v10, v14);
      swift_bridgeObjectRetain();
      sub_232201398();
      if (v2)
        break;
      sub_2322018E4();
      sub_232201908();
      sub_232201914();
      sub_2322018F0();
      v10 += v13[0];
      if (!--v8)
        return v15;
    }
    return swift_release();
  }
  return result;
}

unint64_t sub_2320CD800()
{
  unint64_t result;

  result = qword_2541B7068;
  if (!qword_2541B7068)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2541B7068);
  }
  return result;
}

uint64_t sub_2320CD83C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  sub_2321FF9AC();
  sub_23204A348(0, (unint64_t *)&qword_2541B7190, (void (*)(uint64_t))sub_2320319E4);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_232210D40;
  sub_2320CDF5C(0, (unint64_t *)&qword_2541B6AB0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x24BE48290]);
  v1 = sub_2321FFB44();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BE47138];
  *(_QWORD *)(v0 + 56) = v1;
  *(_QWORD *)(v0 + 64) = sub_2320A099C((unint64_t *)&qword_2541B6B38, 255, v2, MEMORY[0x24BE47130]);
  sub_2320251BC((uint64_t *)(v0 + 32));
  sub_2321FE8D8();
  v3 = sub_2321FF994();
  sub_232027434();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_232210D20;
  *(_QWORD *)(v4 + 32) = v3;
  v6 = v4;
  sub_232201050();
  return v6;
}

uint64_t sub_2320CD968(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, _QWORD, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  char v51;

  v41 = a1;
  v1 = sub_2321FFACC();
  MEMORY[0x24BDAC7A8](v1);
  v45 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320CD448();
  v47 = *(_QWORD *)(v3 - 8);
  v48 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v46 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320CDEFC(0, &qword_255F9E190, (unint64_t *)&qword_2541B6AB0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x24BE48290], MEMORY[0x24BE46F68]);
  v39 = *(_QWORD *)(v5 - 8);
  v40 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v38 = (char *)&v35 - v6;
  sub_2320CDEFC(0, &qword_255F9E198, &qword_255F9E1A0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x24BE470E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v37 = (char *)&v35 - v8;
  v9 = sub_2321FFA48();
  v43 = *(_QWORD *)(v9 - 8);
  v44 = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v42 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v36 = (char *)&v35 - v12;
  v13 = sub_2321FFA18();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23204A348(0, &qword_2541B7188, (void (*)(uint64_t))MEMORY[0x24BE46FD8]);
  v35 = *(_QWORD *)(*(_QWORD *)(sub_2321FFA30() - 8) + 72);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_232210D30;
  sub_23204A348(0, &qword_2541B7198, (void (*)(uint64_t))MEMORY[0x24BE471E8]);
  sub_2321FFC04();
  v17 = swift_allocObject();
  v49 = xmmword_232210D40;
  *(_OWORD *)(v17 + 16) = xmmword_232210D40;
  sub_2321FFBE0();
  v18 = *(void (**)(char *, _QWORD, uint64_t))(v14 + 104);
  v18(v16, *MEMORY[0x24BE46FB0], v13);
  sub_2321FFA24();
  *(_OWORD *)(swift_allocObject() + 16) = v49;
  sub_2321FFBEC();
  v18(v16, *MEMORY[0x24BE46FA8], v13);
  v19 = (uint64_t)v37;
  sub_2321FFA24();
  v18(v16, *MEMORY[0x24BE46FC0], v13);
  v20 = v36;
  sub_2321FFA24();
  sub_2320CDF5C(0, (unint64_t *)&qword_2541B6AB0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x24BE48290]);
  v21 = v38;
  sub_2321FF9B8();
  sub_2320CE03C();
  sub_2321FFB2C();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v21, v40);
  sub_2320CDF5C(0, &qword_255F9E1A0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x24BE470E8]);
  v23 = v22;
  v24 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v19, 1, v22) == 1)
  {
    sub_2320CE094(v19);
LABEL_6:
    v27 = 0;
    goto LABEL_7;
  }
  sub_2321FFAE4();
  v25 = v50;
  v26 = v51;
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v19, v23);
  if ((v26 & 1) != 0 || v25 != 2)
    goto LABEL_6;
  v27 = 2;
LABEL_7:
  sub_2321FFAC0();
  v28 = v43;
  v29 = v44;
  (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v42, v20, v44);
  v50 = v27;
  type metadata accessor for HKWheelchairUse(0);
  sub_2320A099C(&qword_2541B7080, 255, (uint64_t (*)(uint64_t))type metadata accessor for HKWheelchairUse, MEMORY[0x24BE485E8]);
  sub_2320A099C(&qword_2541B7070, 255, (uint64_t (*)(uint64_t))type metadata accessor for HKWheelchairUse, MEMORY[0x24BE485E0]);
  v30 = v46;
  sub_2321FFAFC();
  sub_23204A348(0, qword_255F9E1A8, (void (*)(uint64_t))sub_2320CD448);
  v31 = v47;
  v32 = (*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = v49;
  (*(void (**)(unint64_t, char *, uint64_t))(v31 + 32))(v33 + v32, v30, v48);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v20, v29);
  return v33;
}

void sub_2320CDEFC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, _QWORD *), uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_2320CDF5C(255, a3, a4);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_2320CDF5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD v9[4];

  if (!*a2)
  {
    type metadata accessor for HKWheelchairUse(255);
    v9[0] = v6;
    v9[1] = sub_2320A099C(&qword_2541B7080, 255, (uint64_t (*)(uint64_t))type metadata accessor for HKWheelchairUse, MEMORY[0x24BE485E8]);
    v9[2] = sub_2320A099C(&qword_2541B7070, 255, (uint64_t (*)(uint64_t))type metadata accessor for HKWheelchairUse, MEMORY[0x24BE485E0]);
    v9[3] = sub_2320A099C(&qword_2541B7078, 255, (uint64_t (*)(uint64_t))type metadata accessor for HKWheelchairUse, (uint64_t)&unk_23221030C);
    v7 = a3(a1, v9);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_2320CE03C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B6AA8;
  if (!qword_2541B6AA8)
  {
    sub_2320CDF5C(255, (unint64_t *)&qword_2541B6AB0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x24BE48290]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BE48298], v1);
    atomic_store(result, (unint64_t *)&qword_2541B6AA8);
  }
  return result;
}

uint64_t sub_2320CE094(uint64_t a1)
{
  uint64_t v2;

  sub_2320CDEFC(0, &qword_255F9E198, &qword_255F9E1A0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x24BE470E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t ChartSharableModelProviding.chartQueryDataPublisher(for:timeScopes:timeScopeReferenceDate:audience:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v42 = a6;
  v36 = a2;
  v37 = a4;
  v35 = a1;
  v9 = sub_2321FDC6C();
  v10 = *(_QWORD *)(v9 - 8);
  v34 = v9;
  v11 = *(_QWORD *)(v10 + 64);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v13 = *(_QWORD *)(a5 - 8);
  v41 = a5;
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320CE3EC();
  v17 = *(_QWORD *)(v16 - 8);
  v39 = v16;
  v40 = v17;
  MEMORY[0x24BDAC7A8](v16);
  v38 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v6, a5);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v9);
  v19 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v20 = (v14 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  v22 = (*(unsigned __int8 *)(v10 + 80) + v21 + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v23 = swift_allocObject();
  v24 = v42;
  *(_QWORD *)(v23 + 16) = v41;
  *(_QWORD *)(v23 + 24) = v24;
  (*(void (**)(unint64_t, char *))(v13 + 32))(v23 + v19, v15);
  v25 = v34;
  v26 = v35;
  *(_QWORD *)(v23 + v20) = v35;
  *(_QWORD *)(v23 + v21) = v36;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v23 + v22, (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v25);
  *(_QWORD *)(v23 + ((v11 + v22 + 7) & 0xFFFFFFFFFFFFFFF8)) = v37;
  sub_2320CE4B4();
  swift_allocObject();
  v27 = v26;
  swift_bridgeObjectRetain();
  v43 = sub_2322006E4();
  v28 = swift_allocObject();
  v29 = v42;
  *(_QWORD *)(v28 + 16) = v41;
  *(_QWORD *)(v28 + 24) = v29;
  sub_2320CE550();
  sub_232000590(&qword_2541B79E8, (uint64_t (*)(uint64_t))sub_2320CE4B4, MEMORY[0x24BDB9E58]);
  sub_232000590(&qword_2541B79E0, (uint64_t (*)(uint64_t))sub_2320CE550, MEMORY[0x24BDB9E20]);
  v30 = v38;
  sub_2322007D4();
  swift_release();
  swift_release();
  sub_232000590(&qword_2541B7988, (uint64_t (*)(uint64_t))sub_2320CE3EC, MEMORY[0x24BDB9740]);
  v31 = v39;
  v32 = sub_232200774();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v30, v31);
  return v32;
}

void sub_2320CE3EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2D68)
  {
    sub_2320CE4B4();
    sub_2320CE550();
    sub_232000590(&qword_2541B79E8, (uint64_t (*)(uint64_t))sub_2320CE4B4, MEMORY[0x24BDB9E58]);
    sub_232000590(&qword_2541B79E0, (uint64_t (*)(uint64_t))sub_2320CE550, MEMORY[0x24BDB9E20]);
    v0 = sub_23220057C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2D68);
  }
}

void sub_2320CE4B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B3100)
  {
    sub_2320CF7E8(255, (unint64_t *)&qword_2541B5670, (uint64_t)&qword_2541B0CB8, 0x24BE4A370, (void (*)(uint64_t, uint64_t, uint64_t))sub_232003E9C);
    sub_232016A8C(255, (unint64_t *)&qword_2541B78D0);
    v0 = sub_2322006D8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B3100);
  }
}

void sub_2320CE550()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B30C0)
  {
    sub_2320CF7E8(255, (unint64_t *)&qword_2541B5670, (uint64_t)&qword_2541B0CB8, 0x24BE4A370, (void (*)(uint64_t, uint64_t, uint64_t))sub_232003E9C);
    v0 = sub_2322006CC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B30C0);
  }
}

id sub_2320CE5D4()
{
  id *v0;

  return objc_msgSend(*v0, sel_healthStore);
}

uint64_t sub_2320CE5F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void **v7;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  _QWORD v17[6];

  v11 = *v7;
  v12 = (void *)sub_232200E94();
  sub_232003E9C(0, (unint64_t *)&qword_2541B0D78);
  sub_232016040(qword_2541B0D80, (unint64_t *)&qword_2541B0D78, 0x24BDD16E0, MEMORY[0x24BEE5BD8]);
  v13 = (void *)sub_2322010B0();
  v14 = (void *)sub_2321FDBF4();
  v17[4] = a6;
  v17[5] = a7;
  v17[0] = MEMORY[0x24BDAC760];
  v17[1] = 1107296256;
  v17[2] = sub_232137A08;
  v17[3] = &unk_2501020F8;
  v15 = _Block_copy(v17);
  swift_retain();
  objc_msgSend(v11, sel_encodeChartQueryDataForTypeIdentifier_forTimeScopes_timeScopeReferenceDate_audience_completionHandler_, v12, v13, v14, a5, v15);
  _Block_release(v15);

  return swift_release();
}

uint64_t sub_2320CE73C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void **v3;
  void *v5;
  void *v6;
  _QWORD v8[6];

  v5 = *v3;
  v8[4] = a2;
  v8[5] = a3;
  v8[0] = MEMORY[0x24BDAC760];
  v8[1] = 1107296256;
  v8[2] = sub_232137A08;
  v8[3] = &unk_2501020D0;
  v6 = _Block_copy(v8);
  swift_retain();
  objc_msgSend(v5, sel_encodeActivityChartDataForActivityMoveMode_completion_, a1, v6);
  _Block_release(v6);
  return swift_release();
}

uint64_t DataTypeMostRecentSamplesQuery.encodeChartQueryData(forTypeIdentifier:forTimeScopes:timeScopeReferenceDate:audience:completionHandler:)()
{
  return sub_2321FF550();
}

void DataTypeMostRecentSamplesQuery.encodeActivityChartData(for:completion:)()
{
  sub_232201968();
  __break(1u);
}

uint64_t sub_2320CE840()
{
  return sub_2321FF574();
}

uint64_t sub_2320CE860()
{
  return sub_2321FF550();
}

void sub_2320CE888()
{
  sub_232201968();
  __break(1u);
}

uint64_t ChartSharableModelProviding.encodeChartQueryData(for:timeScopes:timeScopeReferenceDate:audience:completion:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void (*)(void *, void *), uint64_t, uint64_t, uint64_t);
  void *v32;
  id v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  void (*v40)(uint64_t, void (*)(void *, void *), uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  id v46[2];

  v46[1] = *(id *)MEMORY[0x24BDAC8D0];
  v13 = objc_msgSend(a1, sel_identifier);
  v14 = sub_232200EC4();
  v16 = v15;

  if (v14 == sub_232200EC4() && v16 == v17)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_12;
  }
  v19 = sub_232201ADC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v19 & 1) != 0)
  {
LABEL_12:
    v32 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a8 + 8))(a7, a8);
    v46[0] = 0;
    v33 = objc_msgSend(v32, sel_activityMoveModeWithError_, v46);

    v34 = a7;
    if (v33)
    {
      v35 = v46[0];
      v36 = (uint64_t)objc_msgSend(v33, sel_activityMoveMode);

    }
    else
    {
      v37 = v46[0];
      v38 = (void *)sub_2321FDA5C();

      swift_willThrow();
      v36 = 1;
    }
    v39 = swift_allocObject();
    *(_QWORD *)(v39 + 16) = a5;
    *(_QWORD *)(v39 + 24) = a6;
    v40 = *(void (**)(uint64_t, void (*)(void *, void *), uint64_t, uint64_t, uint64_t))(a8 + 24);
    swift_retain();
    v40(v36, sub_2320CF8A4, v39, v34, a8);
    return swift_release();
  }
  v42 = a7;
  v20 = objc_msgSend(a1, sel_identifier);
  v21 = sub_232200EC4();
  v23 = v22;

  v24 = *(_QWORD *)(a2 + 16);
  v25 = (id)MEMORY[0x24BEE4AF8];
  if (v24)
  {
    v41 = v23;
    v46[0] = (id)MEMORY[0x24BEE4AF8];
    sub_2322018FC();
    v26 = (uint64_t *)(a2 + 32);
    do
    {
      v27 = *v26++;
      objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v27);
      sub_2322018E4();
      sub_232201908();
      sub_232201914();
      sub_2322018F0();
      --v24;
    }
    while (v24);
    v25 = v46[0];
    v23 = v41;
  }
  v28 = sub_2321AADD8((unint64_t)v25);
  swift_bridgeObjectRelease();
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = a5;
  *(_QWORD *)(v29 + 24) = a6;
  v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void (*)(void *, void *), uint64_t, uint64_t, uint64_t))(a8 + 16);
  swift_retain();
  v30(v21, v23, v28, a3, a4, sub_2320CF774, v29, v42, a8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_2320CEC50(void *a1, void *a2, void (*a3)(void *, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  sub_23202CAC8(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v9 = a2;
    a3(a2, 1);

  }
  else
  {
    if (a1)
    {
      sub_2321FE6B0();
      v10 = sub_2321FE6D4();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 0, 1, v10);
      sub_232003E9C(0, &qword_2541B0CB8);
      sub_232016040(&qword_2541B0CB0, &qword_2541B0CB8, 0x24BE4A370, (uint64_t)&protocol conformance descriptor for HKCodableChartSharableModel);
      sub_2321FF268();
    }
    a3(a1, 0);
  }
}

uint64_t sub_2320CED9C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16;
  uint64_t v17;

  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = a2;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = sub_2320CF878;
  *(_QWORD *)(v17 + 24) = v16;
  swift_retain();
  ChartSharableModelProviding.encodeChartQueryData(for:timeScopes:timeScopeReferenceDate:audience:completion:)(a4, a5, a6, a7, (uint64_t)sub_2320CF884, v17, a8, a9);
  return swift_release();
}

uint64_t sub_2320CEE70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = sub_2321FDC6C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_2320CEF58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)(sub_2321FDC6C() - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + v10 + 8) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  return sub_2320CED9C(a1, a2, v2 + v8, *(void **)(v2 + v9), *(_QWORD *)(v2 + v10), v2 + v12, *(_QWORD *)(v2 + ((*(_QWORD *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFF8)), v5, v6);
}

void sub_2320CF018(id a1, char a2, void (*a3)(id, uint64_t))
{
  id v5;
  uint64_t v6;
  id v7;

  if ((a2 & 1) != 0)
  {
    v5 = a1;
    v6 = 1;
  }
  else
  {
    v7 = a1;
    v6 = 0;
  }
  a3(a1, v6);
  sub_232047860(a1);
}

uint64_t sub_2320CF074@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;

  v6 = sub_23220039C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  sub_232200318();
  v11 = v10;
  v12 = v10;
  v13 = sub_232200390();
  v14 = sub_2322012E4();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v24[1] = a3;
    v16 = v15;
    v17 = swift_slowAlloc();
    v25 = a2;
    v26 = v17;
    *(_DWORD *)v16 = 136315394;
    swift_getMetatypeMetadata();
    v18 = sub_232200F00();
    v25 = sub_232013174(v18, v19, &v26);
    sub_232201710();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2080;
    v25 = (uint64_t)v10;
    v20 = v10;
    sub_232016A8C(0, (unint64_t *)&qword_2541B78D0);
    v21 = sub_232200F0C();
    v25 = sub_232013174(v21, v22, &v26);
    sub_232201710();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_231FFB000, v13, v14, "[%s]: error when creating chart data: %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v17, -1, -1);
    MEMORY[0x2348FF468](v16, -1, -1);
  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_2320CF7E8(0, (unint64_t *)&qword_2541B5670, (uint64_t)&qword_2541B0CB8, 0x24BE4A370, (void (*)(uint64_t, uint64_t, uint64_t))sub_232003E9C);
  return sub_2322006C0();
}

uint64_t sub_2320CF2FC()
{
  return swift_deallocObject();
}

uint64_t sub_2320CF30C@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2320CF074(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_2320CF314(void *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  char *v18;
  void *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;

  v36 = a2;
  v4 = sub_2321FDDD4();
  v34 = *(_QWORD *)(v4 - 8);
  v35 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2321FDC6C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2321FF568();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_opt_self();
  if (!swift_dynamicCastObjCClass())
    goto LABEL_6;
  v15 = v2;
  if ((sub_2320CF698() & 1) == 0)
  {

LABEL_6:
    v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A658]), sel_initWithHealthStore_, a1);
    v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3968]), sel_init);
    v25 = objc_msgSend(v24, sel_currentCalendar);

    sub_2321FDD68();
    v26 = objc_allocWithZone(MEMORY[0x24BE4A5B0]);
    v27 = (void *)sub_2321FDD5C();
    v28 = (void *)sub_232200E94();
    v29 = objc_msgSend(v26, sel_initWithCalendar_queryIdentifier_, v27, v28);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v6, v35);
    objc_msgSend(v23, sel_setSleepDataSourceProvider_, v29);

    v30 = sub_232003E9C(0, (unint64_t *)&qword_2541B7EC8);
    v20 = v36;
    v36[3] = v30;
    v20[4] = &protocol witness table for HKHealthChartFactory;
    goto LABEL_9;
  }
  v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A910]), sel_initWithHealthStore_, a1);
  v33 = objc_msgSend(v15, sel_code);
  v32 = v15;
  v16 = a1;
  v17 = v31;
  sub_2321FDC60();
  sub_2321FDDA4();
  sub_2321FD84C();
  v18 = v6;
  v19 = v32;
  (*(void (**)(char *, uint64_t))(v34 + 8))(v18, v35);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BE44518], v11);
  v20 = v36;
  if (v33 == (id)144)
  {
    v21 = sub_2321FF7FC();
    swift_allocObject();
    v22 = sub_2321FF7F0();
  }
  else
  {
    v21 = sub_2321FF580();
    swift_allocObject();
    v22 = sub_2321FF55C();
  }
  v23 = (id)v22;
  v20[3] = v21;
  v20[4] = &protocol witness table for DataTypeMostRecentSamplesQuery;

LABEL_9:
  *v20 = v23;
}

uint64_t sub_2320CF698()
{
  void *v0;
  id v1;
  char v2;
  __int128 v4[2];
  uint64_t v5;
  _QWORD v6[4];

  sub_232003E9C(0, (unint64_t *)&qword_2541B74A0);
  sub_232016A8C(0, &qword_2541B29D0);
  v1 = v0;
  if (swift_dynamicCast())
  {
    sub_2320167F8(v4, (uint64_t)v6);
    sub_232016AD8(v6, v6[3]);
    v2 = sub_2321FF424();
    sub_232016AFC((uint64_t)v6);
  }
  else
  {
    v5 = 0;
    memset(v4, 0, sizeof(v4));
    sub_2320CF78C((uint64_t)v4);
    v2 = 0;
  }
  return v2 & 1;
}

void sub_2320CF774(void *a1, void *a2)
{
  uint64_t v2;

  sub_2320CEC50(a1, a2, *(void (**)(void *, uint64_t))(v2 + 16));
}

uint64_t sub_2320CF78C(uint64_t a1)
{
  uint64_t v2;

  sub_2320CF7E8(0, &qword_2541B29D8, (uint64_t)&unk_2541B29D0, MEMORY[0x24BE44228], (void (*)(uint64_t, uint64_t, uint64_t))sub_232016A8C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2320CF7E8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a5(255, a3, a4);
    v6 = sub_2322016F8();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_2320CF83C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2320CF84C()
{
  return swift_release();
}

uint64_t sub_2320CF854()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2320CF878(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_232137EA4(a1, a2 & 1, *(uint64_t (**)(uint64_t *))(v2 + 16));
}

void sub_2320CF884(void *a1, char a2)
{
  uint64_t v2;

  sub_2320CF018(a1, a2 & 1, *(void (**)(id, uint64_t))(v2 + 16));
}

uint64_t sub_2320CF8A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  void **v12;
  uint64_t v13;
  _QWORD *v14;
  __int128 v16;
  uint64_t v17;
  __int128 v18[2];

  v10 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (void **)((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23200054C(a1, a5, type metadata accessor for SummariesFullProfileExecutor.Request);
  v13 = type metadata accessor for ChartSharableModelStep();
  v14 = (_QWORD *)(a5 + *(int *)(v13 + 20));
  *v14 = a2;
  v14[1] = a3;
  sub_23200054C(a4, (uint64_t)&v16, (uint64_t (*)(_QWORD))sub_2320CFA60);
  sub_23200054C(a1, (uint64_t)v12, type metadata accessor for SummariesFullProfileExecutor.Request);
  if (v17)
  {
    sub_232002CEC(a4, (uint64_t (*)(_QWORD))sub_2320CFA60);
    sub_232002CEC(a1, type metadata accessor for SummariesFullProfileExecutor.Request);
    sub_2320167F8(&v16, (uint64_t)v18);
  }
  else
  {
    sub_2320CF314(v12[2], v18);
    sub_232002CEC(a4, (uint64_t (*)(_QWORD))sub_2320CFA60);
    sub_232002CEC(a1, type metadata accessor for SummariesFullProfileExecutor.Request);
    sub_232002CEC((uint64_t)&v16, (uint64_t (*)(_QWORD))sub_2320CFA60);
  }
  sub_232002CEC((uint64_t)v12, type metadata accessor for SummariesFullProfileExecutor.Request);
  return sub_2320167F8(v18, a5 + *(int *)(v13 + 24));
}

uint64_t type metadata accessor for ChartSharableModelStep()
{
  uint64_t result;

  result = qword_2541B6C90;
  if (!qword_2541B6C90)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2320CFA60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B6D88)
  {
    sub_232016A8C(255, &qword_2541B6D80);
    v0 = sub_2322016F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B6D88);
  }
}

_QWORD *sub_2320CFAC4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  id v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  __int128 v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  id v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  __int128 v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  id v58;
  id v59;
  char *v61;
  int *v62;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    v3 = (_QWORD *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    v8 = (void *)a2[2];
    *a1 = v5;
    a1[1] = v7;
    a1[2] = v8;
    v62 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
    v9 = v62[6];
    v10 = (char *)v3 + v9;
    v11 = (char *)a2 + v9;
    *((_BYTE *)v3 + v9) = *((_BYTE *)a2 + v9);
    v12 = (int *)_s14descr250103FA9O8WorkPlanVMa();
    v13 = v12[5];
    v61 = &v10[v13];
    v14 = &v11[v13];
    v15 = sub_2321FFACC();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_unknownObjectRetain();
    v17 = v8;
    v16(v61, v14, v15);
    v18 = v12[6];
    v19 = &v10[v18];
    v20 = &v11[v18];
    v21 = sub_2321FE584();
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      sub_2320002B4(0, &qword_2541B28C0, (void (*)(uint64_t))MEMORY[0x24BE47CC8]);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    v24 = v12[7];
    v25 = &v10[v24];
    v26 = &v11[v24];
    sub_232071E50();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = v12[8];
    v29 = &v10[v28];
    v30 = &v11[v28];
    sub_232071EE4();
    v32 = v31;
    v33 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v30, 1, v31))
    {
      sub_2320002B4(0, &qword_2541B2518, (void (*)(uint64_t))sub_232071EE4);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v29, v30, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v29, 0, 1, v32);
    }
    v35 = v62[7];
    v36 = *(void **)((char *)a2 + v35);
    *(_QWORD *)((char *)v3 + v35) = v36;
    v37 = v62[8];
    v38 = (char *)v3 + v37;
    v39 = (char *)a2 + v37;
    v40 = *(_OWORD *)((char *)a2 + v37 + 24);
    *(_OWORD *)((char *)v3 + v37 + 24) = v40;
    v41 = v40;
    v42 = **(void (***)(char *, char *, uint64_t))(v40 - 8);
    v43 = v36;
    v42(v38, v39, v41);
    *(_OWORD *)((char *)v3 + v62[9]) = *(_OWORD *)((char *)a2 + v62[9]);
    v44 = v62[10];
    v45 = *(void **)((char *)a2 + v44);
    *(_QWORD *)((char *)v3 + v44) = v45;
    v46 = v62[11];
    v47 = *(void **)((char *)a2 + v46);
    *(_QWORD *)((char *)v3 + v46) = v47;
    v48 = *(int *)(a3 + 20);
    v49 = *(int *)(a3 + 24);
    v50 = (_QWORD *)((char *)v3 + v48);
    v51 = (_QWORD *)((char *)a2 + v48);
    v52 = v51[1];
    *v50 = *v51;
    v50[1] = v52;
    v53 = (char *)v3 + v49;
    v54 = (char *)a2 + v49;
    v55 = *(_OWORD *)(v54 + 24);
    *(_OWORD *)((char *)v3 + v49 + 24) = v55;
    v56 = v55;
    v57 = **(void (***)(char *, char *, uint64_t))(v55 - 8);
    swift_unknownObjectRetain();
    v58 = v45;
    v59 = v47;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v57(v53, v54, v56);
  }
  return v3;
}

uint64_t sub_2320CFDD4(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  swift_unknownObjectRelease();

  v4 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  v5 = a1 + v4[6];
  v6 = (int *)_s14descr250103FA9O8WorkPlanVMa();
  v7 = v5 + v6[5];
  v8 = sub_2321FFACC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v5 + v6[6];
  v10 = sub_2321FE584();
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  v12 = v5 + v6[7];
  sub_232071E50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  v14 = v5 + v6[8];
  sub_232071EE4();
  v16 = v15;
  v17 = *(_QWORD *)(v15 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v15))
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);

  sub_232016AFC(a1 + v4[8]);
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_232016AFC(a1 + *(int *)(a2 + 24));
}

uint64_t sub_2320CFF60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  id v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t);
  id v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t, uint64_t);
  id v56;
  id v57;
  int *v59;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v5 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  v59 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  v6 = v59[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_BYTE *)(a1 + v6) = *(_BYTE *)(a2 + v6);
  v9 = (int *)_s14descr250103FA9O8WorkPlanVMa();
  v10 = v9[5];
  v11 = v7 + v10;
  v12 = v8 + v10;
  v13 = sub_2321FFACC();
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  swift_unknownObjectRetain();
  v15 = v5;
  v14(v11, v12, v13);
  v16 = v9[6];
  v17 = (void *)(v7 + v16);
  v18 = (const void *)(v8 + v16);
  v19 = sub_2321FE584();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    sub_2320002B4(0, &qword_2541B28C0, (void (*)(uint64_t))MEMORY[0x24BE47CC8]);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 16))(v17, v18, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  v22 = v9[7];
  v23 = v7 + v22;
  v24 = v8 + v22;
  sub_232071E50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  v26 = v9[8];
  v27 = (void *)(v7 + v26);
  v28 = (const void *)(v8 + v26);
  sub_232071EE4();
  v30 = v29;
  v31 = *(_QWORD *)(v29 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v31 + 48))(v28, 1, v29))
  {
    sub_2320002B4(0, &qword_2541B2518, (void (*)(uint64_t))sub_232071EE4);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v31 + 16))(v27, v28, v30);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v27, 0, 1, v30);
  }
  v33 = v59[7];
  v34 = *(void **)(a2 + v33);
  *(_QWORD *)(a1 + v33) = v34;
  v35 = v59[8];
  v36 = a1 + v35;
  v37 = a2 + v35;
  v38 = *(_OWORD *)(a2 + v35 + 24);
  *(_OWORD *)(a1 + v35 + 24) = v38;
  v39 = v38;
  v40 = **(void (***)(uint64_t, uint64_t, uint64_t))(v38 - 8);
  v41 = v34;
  v40(v36, v37, v39);
  *(_OWORD *)(a1 + v59[9]) = *(_OWORD *)(a2 + v59[9]);
  v42 = v59[10];
  v43 = *(void **)(a2 + v42);
  *(_QWORD *)(a1 + v42) = v43;
  v44 = v59[11];
  v45 = *(void **)(a2 + v44);
  *(_QWORD *)(a1 + v44) = v45;
  v46 = *(int *)(a3 + 20);
  v47 = *(int *)(a3 + 24);
  v48 = (_QWORD *)(a1 + v46);
  v49 = (_QWORD *)(a2 + v46);
  v50 = v49[1];
  *v48 = *v49;
  v48[1] = v50;
  v51 = a1 + v47;
  v52 = a2 + v47;
  v53 = *(_OWORD *)(v52 + 24);
  *(_OWORD *)(a1 + v47 + 24) = v53;
  v54 = v53;
  v55 = **(void (***)(uint64_t, uint64_t, uint64_t))(v53 - 8);
  swift_unknownObjectRetain();
  v56 = v43;
  v57 = v45;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v55(v51, v52, v54);
  return a1;
}

_QWORD *sub_2320D0248(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  id v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  void *v50;
  id v51;
  uint64_t v52;
  void *v53;
  void *v54;
  id v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v60;
  int *v61;

  v5 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v5;
  v6 = (void *)a2[2];
  v7 = (void *)a1[2];
  a1[2] = v6;
  v8 = v6;

  v61 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  v9 = v61[6];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
  v12 = _s14descr250103FA9O8WorkPlanVMa();
  v13 = *(int *)(v12 + 20);
  v14 = &v10[v13];
  v15 = &v11[v13];
  v16 = sub_2321FFACC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  v60 = v12;
  v17 = *(int *)(v12 + 24);
  v18 = &v10[v17];
  v19 = &v11[v17];
  v20 = sub_2321FE584();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v24)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
LABEL_6:
    sub_2320002B4(0, &qword_2541B28C0, (void (*)(uint64_t))MEMORY[0x24BE47CC8]);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 24))(v18, v19, v20);
LABEL_7:
  v26 = *(int *)(v60 + 28);
  v27 = &v10[v26];
  v28 = &v11[v26];
  sub_232071E50();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 24))(v27, v28, v29);
  v30 = *(int *)(v60 + 32);
  v31 = &v10[v30];
  v32 = &v11[v30];
  sub_232071EE4();
  v34 = v33;
  v35 = *(_QWORD *)(v33 - 8);
  v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v31, 1, v33);
  v38 = v36(v32, 1, v34);
  if (!v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 24))(v31, v32, v34);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v35 + 8))(v31, v34);
    goto LABEL_12;
  }
  if (v38)
  {
LABEL_12:
    sub_2320002B4(0, &qword_2541B2518, (void (*)(uint64_t))sub_232071EE4);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v31, v32, v34);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v31, 0, 1, v34);
LABEL_13:
  v40 = v61[7];
  v41 = *(void **)((char *)a2 + v40);
  v42 = *(void **)((char *)a1 + v40);
  *(_QWORD *)((char *)a1 + v40) = v41;
  v43 = v41;

  sub_2320727F4((_QWORD *)((char *)a1 + v61[8]), (_QWORD *)((char *)a2 + v61[8]));
  v44 = v61[9];
  v45 = (_QWORD *)((char *)a1 + v44);
  v46 = (_QWORD *)((char *)a2 + v44);
  v47 = v46[1];
  *v45 = *v46;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v45[1] = v47;
  v48 = v61[10];
  v49 = *(void **)((char *)a2 + v48);
  v50 = *(void **)((char *)a1 + v48);
  *(_QWORD *)((char *)a1 + v48) = v49;
  v51 = v49;

  v52 = v61[11];
  v53 = *(void **)((char *)a2 + v52);
  v54 = *(void **)((char *)a1 + v52);
  *(_QWORD *)((char *)a1 + v52) = v53;
  v55 = v53;

  v56 = *(int *)(a3 + 20);
  v57 = (char *)a1 + v56;
  v58 = (char *)a2 + v56;
  *(_QWORD *)((char *)a1 + v56) = *(_QWORD *)((char *)a2 + v56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v57 + 1) = *((_QWORD *)v58 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_2320727F4((_QWORD *)((char *)a1 + *(int *)(a3 + 24)), (_QWORD *)((char *)a2 + *(int *)(a3 + 24)));
  return a1;
}

uint64_t sub_2320D05D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v5 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  v6 = v5[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_BYTE *)(a1 + v6) = *(_BYTE *)(a2 + v6);
  v9 = (int *)_s14descr250103FA9O8WorkPlanVMa();
  v10 = v9[5];
  v11 = v7 + v10;
  v12 = v8 + v10;
  v13 = sub_2321FFACC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = v9[6];
  v15 = (void *)(v7 + v14);
  v16 = (const void *)(v8 + v14);
  v17 = sub_2321FE584();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    sub_2320002B4(0, &qword_2541B28C0, (void (*)(uint64_t))MEMORY[0x24BE47CC8]);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  v20 = v9[7];
  v21 = v7 + v20;
  v22 = v8 + v20;
  sub_232071E50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
  v24 = v9[8];
  v25 = (void *)(v7 + v24);
  v26 = (const void *)(v8 + v24);
  sub_232071EE4();
  v28 = v27;
  v29 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48))(v26, 1, v27))
  {
    sub_2320002B4(0, &qword_2541B2518, (void (*)(uint64_t))sub_232071EE4);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v29 + 32))(v25, v26, v28);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v25, 0, 1, v28);
  }
  *(_QWORD *)(a1 + v5[7]) = *(_QWORD *)(a2 + v5[7]);
  v31 = v5[8];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = *(_OWORD *)(v33 + 16);
  *(_OWORD *)v32 = *(_OWORD *)v33;
  *(_OWORD *)(v32 + 16) = v34;
  *(_QWORD *)(v32 + 32) = *(_QWORD *)(v33 + 32);
  *(_OWORD *)(a1 + v5[9]) = *(_OWORD *)(a2 + v5[9]);
  *(_QWORD *)(a1 + v5[10]) = *(_QWORD *)(a2 + v5[10]);
  *(_QWORD *)(a1 + v5[11]) = *(_QWORD *)(a2 + v5[11]);
  v35 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  v36 = a1 + v35;
  v37 = a2 + v35;
  v38 = *(_OWORD *)(v37 + 16);
  *(_OWORD *)v36 = *(_OWORD *)v37;
  *(_OWORD *)(v36 + 16) = v38;
  *(_QWORD *)(v36 + 32) = *(_QWORD *)(v37 + 32);
  return a1;
}

_QWORD *sub_2320D084C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  __int128 v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  __int128 v59;
  uint64_t v61;
  int *v62;

  v5 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRelease();
  v6 = a2[2];
  v7 = (void *)a1[2];
  a1[1] = v5;
  a1[2] = v6;

  v62 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  v8 = v62[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  *((_BYTE *)a1 + v8) = *((_BYTE *)a2 + v8);
  v11 = _s14descr250103FA9O8WorkPlanVMa();
  v12 = *(int *)(v11 + 20);
  v13 = &v9[v12];
  v14 = &v10[v12];
  v15 = sub_2321FFACC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v61 = v11;
  v16 = *(int *)(v11 + 24);
  v17 = &v9[v16];
  v18 = &v10[v16];
  v19 = sub_2321FE584();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
LABEL_6:
    sub_2320002B4(0, &qword_2541B28C0, (void (*)(uint64_t))MEMORY[0x24BE47CC8]);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 40))(v17, v18, v19);
LABEL_7:
  v25 = *(int *)(v61 + 28);
  v26 = &v9[v25];
  v27 = &v10[v25];
  sub_232071E50();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 40))(v26, v27, v28);
  v29 = *(int *)(v61 + 32);
  v30 = &v9[v29];
  v31 = &v10[v29];
  sub_232071EE4();
  v33 = v32;
  v34 = *(_QWORD *)(v32 - 8);
  v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
  v36 = v35(v30, 1, v32);
  v37 = v35(v31, 1, v33);
  if (!v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 40))(v30, v31, v33);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v30, v33);
    goto LABEL_12;
  }
  if (v37)
  {
LABEL_12:
    sub_2320002B4(0, &qword_2541B2518, (void (*)(uint64_t))sub_232071EE4);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v30, v31, v33);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v30, 0, 1, v33);
LABEL_13:
  v39 = v62[7];
  v40 = *(void **)((char *)a1 + v39);
  *(_QWORD *)((char *)a1 + v39) = *(_QWORD *)((char *)a2 + v39);

  v41 = v62[8];
  v42 = (char *)a1 + v41;
  v43 = (char *)a2 + v41;
  sub_232016AFC((uint64_t)a1 + v41);
  v44 = *((_OWORD *)v43 + 1);
  *(_OWORD *)v42 = *(_OWORD *)v43;
  *((_OWORD *)v42 + 1) = v44;
  *((_QWORD *)v42 + 4) = *((_QWORD *)v43 + 4);
  v45 = v62[9];
  v46 = (_QWORD *)((char *)a1 + v45);
  v47 = (_QWORD *)((char *)a2 + v45);
  v48 = v47[1];
  *v46 = *v47;
  swift_unknownObjectRelease();
  v46[1] = v48;
  v49 = v62[10];
  v50 = *(void **)((char *)a1 + v49);
  *(_QWORD *)((char *)a1 + v49) = *(_QWORD *)((char *)a2 + v49);

  v51 = v62[11];
  v52 = *(void **)((char *)a1 + v51);
  *(_QWORD *)((char *)a1 + v51) = *(_QWORD *)((char *)a2 + v51);

  v53 = *(int *)(a3 + 20);
  v54 = (char *)a1 + v53;
  v55 = (char *)a2 + v53;
  *(_QWORD *)((char *)a1 + v53) = *(_QWORD *)((char *)a2 + v53);
  swift_bridgeObjectRelease();
  *((_QWORD *)v54 + 1) = *((_QWORD *)v55 + 1);
  swift_bridgeObjectRelease();
  v56 = *(int *)(a3 + 24);
  v57 = (char *)a1 + v56;
  v58 = (char *)a2 + v56;
  sub_232016AFC((uint64_t)a1 + v56);
  v59 = *((_OWORD *)v58 + 1);
  *(_OWORD *)v57 = *(_OWORD *)v58;
  *((_OWORD *)v57 + 1) = v59;
  *((_QWORD *)v57 + 4) = *((_QWORD *)v58 + 4);
  return a1;
}

uint64_t sub_2320D0BCC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2320D0BD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_2320D0C58()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2320D0C64(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
  return result;
}

uint64_t sub_2320D0CE0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SummariesFullProfileExecutor.Request(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2320D0D5C(void *a1, void *a2, char a3, uint64_t a4, void (*a5)(_QWORD *))
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v22;
  uint64_t v23;

  sub_2320D4198(0, (unint64_t *)&qword_2541B71F0, (void (*)(uint64_t))type metadata accessor for SummariesFullProfileExecutor.StepResult);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v23 - v11);
  v13 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  v16 = (char *)&v23 - v15;
  if ((a3 & 1) != 0)
  {
    *v12 = a1;
    swift_storeEnumTagMultiPayload();
    v22 = a1;
    a5(v12);
    return sub_2320D4214((uint64_t)v12, (unint64_t *)&qword_2541B71F0, (void (*)(uint64_t))type metadata accessor for SummariesFullProfileExecutor.StepResult);
  }
  else
  {
    sub_23200054C(a4, (uint64_t)&v23 - v15, type metadata accessor for SummariesFullProfileExecutor.StepResult);
    v17 = (void *)*((_QWORD *)v16 + 2);
    v18 = (void *)*((_QWORD *)v16 + 3);
    sub_23205A1F8(a1, a2, 0);
    v19 = a2;
    v20 = a1;
    sub_23205A224(v17, v18);
    *((_QWORD *)v16 + 2) = a1;
    *((_QWORD *)v16 + 3) = a2;
    sub_23200054C((uint64_t)v16, (uint64_t)v12, type metadata accessor for SummariesFullProfileExecutor.StepResult);
    swift_storeEnumTagMultiPayload();
    a5(v12);
    sub_23205A254(a1, a2, 0);
    sub_2320D4214((uint64_t)v12, (unint64_t *)&qword_2541B71F0, (void (*)(uint64_t))type metadata accessor for SummariesFullProfileExecutor.StepResult);
    return sub_232002CEC((uint64_t)v16, type metadata accessor for SummariesFullProfileExecutor.StepResult);
  }
}

uint64_t sub_2320D0F08(uint64_t a1, void (*a2)(void *, void *, uint64_t), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (**v29)(void *, void *, uint64_t);
  uint64_t v30;
  void (*v31)(void *, void *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  void (*v34)(void *, char);
  uint64_t v35;
  unint64_t v36;
  void (**v37)(void *, char);
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  id v48;
  char *v49;
  uint64_t v50;
  void **v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  _QWORD *v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  _QWORD *v69;
  uint64_t v70;
  void **v71;
  char *v72;
  char *v73;
  _QWORD *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  void (*v80)(void *, void *, uint64_t);
  uint64_t v81;
  _QWORD v82[3];
  uint64_t v83;
  void (*v84)(void *, void *, uint64_t);

  v4 = v3;
  v80 = a2;
  v81 = a3;
  sub_2320D4198(0, &qword_2541B71E0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  v70 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v71 = (void **)((char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v6);
  v72 = (char *)&v62 - v8;
  v76 = sub_2321FDC6C();
  v74 = *(_QWORD **)(v76 - 8);
  v9 = MEMORY[0x24BDAC7A8](v76);
  v73 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v75 = (char *)&v62 - v11;
  v12 = type metadata accessor for ChartSharableModelStep();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v77 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v62 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v62 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v62 - v22;
  sub_23200054C(v4, (uint64_t)&v62 - v22, (uint64_t (*)(_QWORD))type metadata accessor for ChartSharableModelStep);
  v78 = v21;
  sub_23200054C((uint64_t)v23, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for ChartSharableModelStep);
  v24 = *(unsigned __int8 *)(v13 + 80);
  v25 = (v24 + 16) & ~v24;
  v26 = (v25 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v27 = swift_allocObject();
  sub_232025468((uint64_t)v23, v27 + v25, (uint64_t (*)(_QWORD))type metadata accessor for ChartSharableModelStep);
  v28 = v27;
  v29 = (void (**)(void *, void *, uint64_t))(v27 + v26);
  v30 = v79;
  v31 = v80;
  *v29 = v80;
  v29[1] = (void (*)(void *, void *, uint64_t))v81;
  v32 = v12;
  v33 = *(_QWORD *)(v30 + *(int *)(v12 + 20));
  if (v33)
  {
    v34 = (void (*)(void *, char))v28;
    sub_23200054C(v30, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for ChartSharableModelStep);
    v35 = swift_allocObject();
    sub_232025468((uint64_t)v18, v35 + v25, (uint64_t (*)(_QWORD))type metadata accessor for ChartSharableModelStep);
    v36 = v35 + v26;
    *(_QWORD *)v36 = v33;
    *(_BYTE *)(v36 + 8) = 0;
    v37 = (void (**)(void *, char))(v35 + ((v25 + v14 + 23) & 0xFFFFFFFFFFFFFFF8));
    *v37 = sub_2320D38E8;
    v37[1] = v34;
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_2320D2400(0, sub_2320D3BBC, v35);
    swift_release();
    swift_release();
    v38 = (uint64_t)v78;
  }
  else
  {
    v65 = v24;
    v66 = v14;
    v67 = v24 | 7;
    v40 = (uint64_t)v73;
    v39 = v74;
    v68 = v18;
    v41 = (uint64_t)v77;
    v79 = v28;
    v42 = (_QWORD *)swift_allocObject();
    v42[2] = 0;
    v42[3] = v31;
    v43 = v81;
    v42[4] = v81;
    v38 = (uint64_t)v78;
    v44 = *(_QWORD *)&v78[*(int *)(v32 + 20) + 8];
    if (v44)
    {
      v63 = v32;
      sub_23200054C((uint64_t)v78, v41, (uint64_t (*)(_QWORD))type metadata accessor for ChartSharableModelStep);
      swift_retain_n();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_2321FDC60();
      v45 = (void *)sub_2321FDBF4();
      v46 = (void (*)(uint64_t, uint64_t))v39[1];
      v64 = v44;
      v47 = v76;
      v46(v40, v76);
      v48 = (id)HKEndOfDayForDate();

      v69 = v42;
      v49 = v75;
      sub_2321FDC30();

      v50 = (uint64_t)v72;
      ((void (*)(char *, char *, uint64_t))v39[2])(v72, v49, v47);
      swift_storeEnumTagMultiPayload();
      v51 = v71;
      sub_2320D3960(v50, (uint64_t)v71);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v52 = *v51;
        v53 = v52;
        v80(v52, 0, 1);

        v54 = (uint64_t)v77;
      }
      else
      {
        v55 = v65;
        ((void (*)(uint64_t, void **, uint64_t))v39[4])(v40, v51, v76);
        v54 = (uint64_t)v77;
        sub_23201B304((uint64_t)&v77[*(int *)(v63 + 24)], (uint64_t)v82);
        v56 = v83;
        v80 = v84;
        v74 = sub_232016AD8(v82, v83);
        v71 = *(void ***)(v54 + *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28));
        v57 = (uint64_t)v68;
        sub_23200054C(v54, (uint64_t)v68, (uint64_t (*)(_QWORD))type metadata accessor for ChartSharableModelStep);
        v47 = v76;
        v58 = swift_allocObject();
        v59 = v46;
        v60 = v69;
        *(_QWORD *)(v58 + 16) = sub_2320D3950;
        *(_QWORD *)(v58 + 24) = v60;
        sub_232025468(v57, v58 + ((v55 + 32) & ~v55), (uint64_t (*)(_QWORD))type metadata accessor for ChartSharableModelStep);
        v46 = v59;
        swift_retain();
        v50 = (uint64_t)v72;
        ChartSharableModelProviding.encodeChartQueryData(for:timeScopes:timeScopeReferenceDate:audience:completion:)(v71, v64, v40, 1, (uint64_t)sub_2320D39B8, v58, v56, (uint64_t)v80);
        swift_release();
        v46(v40, v47);
        sub_232016AFC((uint64_t)v82);
      }
      sub_2320D4214(v50, &qword_2541B71E0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
      v46((uint64_t)v75, v47);
      sub_232002CEC(v54, (uint64_t (*)(_QWORD))type metadata accessor for ChartSharableModelStep);
      swift_release();
      swift_release_n();
      swift_release_n();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_retain_n();
      sub_2320D1B1C(0, 0, 0, v31, v43);
      swift_release();
      swift_release_n();
      swift_release();
    }
  }
  sub_232002CEC(v38, (uint64_t (*)(_QWORD))type metadata accessor for ChartSharableModelStep);
  return swift_release();
}

void sub_2320D157C(void *a1, char a2, uint64_t a3, void (*a4)(void *, void *, uint64_t), uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  void (*v31)(void *, void *, uint64_t);
  void (*v32)(void *, void *, uint64_t);
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  _QWORD *v37;
  void (*v38)(uint64_t, uint64_t);
  void (*v39)(void *, void *, uint64_t);
  uint64_t v40;
  id v41;
  char *v42;
  uint64_t v43;
  id *v44;
  id v45;
  id v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  id v49;
  void (*v50)(void *, void *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[2];
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  id *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  _QWORD *v71;
  void (*v72)(void *, void *, uint64_t);
  _QWORD v73[3];
  uint64_t v74;
  uint64_t v75;

  v71 = (_QWORD *)a3;
  v72 = a4;
  sub_2320D4198(0, &qword_2541B71E0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  v9 = v8;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (id *)((char *)v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v60 - v13;
  v15 = sub_2321FDC6C();
  v16 = *(_QWORD **)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)v60 - v20;
  v22 = type metadata accessor for ChartSharableModelStep();
  v23 = MEMORY[0x24BDAC7A8](v22);
  v24 = MEMORY[0x24BDAC7A8](v23);
  if ((a2 & 1) != 0)
  {
    v49 = a1;
    v72(a1, 0, 1);
    sub_232047860(a1);
  }
  else
  {
    v63 = v9;
    v64 = v16;
    v60[1] = v28;
    v61 = v27;
    v65 = v12;
    v66 = v19;
    v62 = v26;
    v69 = v21;
    v70 = (uint64_t)v60 - v25;
    v67 = v14;
    v68 = v15;
    v29 = v24;
    v30 = (_QWORD *)swift_allocObject();
    v31 = v72;
    v30[2] = a1;
    v30[3] = v31;
    v30[4] = a5;
    v32 = *(void (**)(void *, void *, uint64_t))((char *)v71 + *(int *)(v29 + 20) + 8);
    v33 = a5;
    v34 = a1;
    if (v32)
    {
      sub_23200054C((uint64_t)v71, v70, (uint64_t (*)(_QWORD))type metadata accessor for ChartSharableModelStep);
      sub_232091DA8(a1);
      sub_232091DA8(a1);
      swift_retain();
      sub_232091DA8(a1);
      swift_retain();
      sub_232091DA8(a1);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      v35 = (uint64_t)v66;
      sub_2321FDC60();
      v36 = (void *)sub_2321FDBF4();
      v37 = v64;
      v38 = (void (*)(uint64_t, uint64_t))v64[1];
      v71 = v30;
      v39 = v32;
      v40 = v68;
      v60[0] = v38;
      v38(v35, v68);
      v41 = (id)HKEndOfDayForDate();

      v42 = v69;
      sub_2321FDC30();

      v43 = (uint64_t)v67;
      ((void (*)(char *, char *, uint64_t))v37[2])(v67, v42, v40);
      swift_storeEnumTagMultiPayload();
      v44 = v65;
      sub_2320D3960(v43, (uint64_t)v65);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v45 = *v44;
        v46 = *v44;
        v72(v45, 0, 1);

        v47 = v70;
        v48 = (void (*)(char *, uint64_t))v60[0];
      }
      else
      {
        ((void (*)(uint64_t, id *, uint64_t))v37[4])(v35, v44, v40);
        v51 = v70;
        sub_23201B304(v70 + *(int *)(v29 + 24), (uint64_t)v73);
        v52 = v74;
        v65 = (id *)v75;
        v64 = sub_232016AD8(v73, v74);
        v53 = *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28);
        v72 = v39;
        v54 = *(void **)(v51 + v53);
        v55 = v62;
        sub_23200054C(v51, v62, (uint64_t (*)(_QWORD))type metadata accessor for ChartSharableModelStep);
        v56 = (*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
        v57 = swift_allocObject();
        v58 = (uint64_t)v71;
        *(_QWORD *)(v57 + 16) = sub_2320D4250;
        *(_QWORD *)(v57 + 24) = v58;
        v59 = v57 + v56;
        v47 = v70;
        sub_232025468(v55, v59, (uint64_t (*)(_QWORD))type metadata accessor for ChartSharableModelStep);
        swift_retain();
        v40 = v68;
        ChartSharableModelProviding.encodeChartQueryData(for:timeScopes:timeScopeReferenceDate:audience:completion:)(v54, (uint64_t)v72, v35, 1, (uint64_t)sub_2320D39B8, v57, v52, (uint64_t)v65);
        swift_release();
        v48 = (void (*)(char *, uint64_t))v60[0];
        ((void (*)(uint64_t, uint64_t))v60[0])(v35, v40);
        sub_232016AFC((uint64_t)v73);
      }
      sub_2320D4214(v43, &qword_2541B71E0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
      v48(v69, v40);
      sub_232002CEC(v47, (uint64_t (*)(_QWORD))type metadata accessor for ChartSharableModelStep);
      swift_release_n();
      swift_bridgeObjectRelease();
      sub_232047860(v34);
      swift_release();
      sub_232047860(v34);
      swift_release();
      sub_232047860(v34);
    }
    else
    {
      v50 = v31;
      sub_232091DA8(a1);
      sub_232091DA8(a1);
      swift_retain();
      sub_232091DA8(a1);
      swift_retain();
      sub_232091DA8(a1);
      swift_retain();
      sub_2320D1B1C(0, 0, a1, v50, v33);
      swift_release();
      sub_232047860(a1);
      swift_release();
      sub_232047860(a1);
      swift_release();
      sub_232047860(a1);
    }
  }
}

void sub_2320D1B1C(void *a1, char a2, void *a3, void (*a4)(void *, void *, uint64_t), uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;

  v10 = sub_23220039C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v22 = a1;
    a4(a1, 0, 1);
    sub_232047860(a1);
  }
  else
  {
    v14 = a1;
    sub_232200318();
    sub_232091DA8(a1);
    v15 = a3;
    v16 = sub_232200390();
    v17 = sub_2322012CC();
    v18 = os_log_type_enabled(v16, v17);
    v27 = a3;
    if (v18)
    {
      v19 = swift_slowAlloc();
      v26 = a5;
      v20 = v19;
      v25 = swift_slowAlloc();
      v29 = v25;
      *(_DWORD *)v20 = 136446722;
      v28 = sub_232013174(0xD000000000000016, 0x8000000232214530, &v29);
      sub_232201710();
      *(_WORD *)(v20 + 12) = 1024;
      LODWORD(v28) = v27 != 0;
      sub_232201710();

      *(_WORD *)(v20 + 18) = 1024;
      LODWORD(v28) = a1 != 0;
      sub_232201710();
      sub_232047860(a1);
      _os_log_impl(&dword_231FFB000, v16, v17, "[%{public}s] Generated chart sharable models successfully, primary: %{BOOL}d, sharing: %{BOOL}d", (uint8_t *)v20, 0x18u);
      v21 = v25;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v21, -1, -1);
      MEMORY[0x2348FF468](v20, -1, -1);
    }
    else
    {

      sub_232047860(a1);
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    sub_232091DA8(a1);
    v23 = v15;
    a4(v27, a1, 0);
    sub_232047860(a1);

    sub_232047860(a1);
  }
}

void sub_2320D1DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void *, uint64_t), uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  void **v18;
  void *v19;
  id v20;
  void (*v21)(char *, void **, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(void *, uint64_t);
  uint64_t v36;
  _QWORD v37[3];
  uint64_t v38;
  uint64_t v39;

  v35 = a5;
  v36 = a6;
  v32 = a4;
  v33 = a2;
  v34 = a3;
  v7 = type metadata accessor for ChartSharableModelStep();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2321FDC6C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320D4198(0, &qword_2541B71E0, v15);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (void **)((char *)v29 - v17);
  sub_2320D3960(a1, (uint64_t)v29 - v17);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v19 = *v18;
    v20 = v19;
    v35(v19, 1);

  }
  else
  {
    v21 = *(void (**)(char *, void **, uint64_t))(v12 + 32);
    v31 = v11;
    v21(v14, v18, v11);
    v22 = v33;
    sub_23201B304(v33 + *(int *)(v7 + 24), (uint64_t)v37);
    v23 = v38;
    v30 = v39;
    v29[1] = sub_232016AD8(v37, v38);
    v24 = *(void **)(v22 + *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28));
    v25 = v32 & 1;
    sub_23200054C(v22, (uint64_t)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for ChartSharableModelStep);
    v26 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v27 = swift_allocObject();
    v28 = v36;
    *(_QWORD *)(v27 + 16) = v35;
    *(_QWORD *)(v27 + 24) = v28;
    sub_232025468((uint64_t)v10, v27 + v26, (uint64_t (*)(_QWORD))type metadata accessor for ChartSharableModelStep);
    swift_retain();
    ChartSharableModelProviding.encodeChartQueryData(for:timeScopes:timeScopeReferenceDate:audience:completion:)(v24, v34, (uint64_t)v14, v25, (uint64_t)sub_2320D39B8, v27, v23, v30);
    swift_release();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v31);
    sub_232016AFC((uint64_t)v37);
  }
}

void sub_2320D2038(void *a1, char a2, void (*a3)(_QWORD, _QWORD), uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  os_log_t v36;
  uint64_t v37;
  id v38;
  os_log_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(_QWORD, _QWORD);
  uint64_t v45;
  uint64_t v46;

  v10 = type metadata accessor for ChartSharableModelStep();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23220039C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v18 = a1;
    sub_232200318();
    sub_23200054C(a5, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ChartSharableModelStep);
    v19 = a1;
    v20 = a1;
    v21 = sub_232200390();
    v22 = sub_2322012E4();
    v23 = v22;
    if (os_log_type_enabled(v21, v22))
    {
      v24 = swift_slowAlloc();
      v41 = v23;
      v25 = v24;
      v42 = swift_slowAlloc();
      v46 = v42;
      *(_DWORD *)v25 = 136446722;
      v26 = sub_232013174(0xD000000000000016, 0x8000000232214530, &v46);
      v44 = a3;
      v45 = v26;
      sub_232201710();
      *(_WORD *)(v25 + 12) = 2080;
      v27 = objc_msgSend(*(id *)&v12[*(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28)], sel_identifier);
      v43 = a4;
      v28 = v27;
      v29 = sub_232200EC4();
      v39 = v21;
      v40 = v13;
      v30 = v29;
      v32 = v31;

      v45 = sub_232013174(v30, v32, &v46);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ChartSharableModelStep);
      *(_WORD *)(v25 + 22) = 2082;
      v45 = (uint64_t)a1;
      v33 = a1;
      sub_232016A8C(0, (unint64_t *)&qword_2541B78D0);
      v34 = sub_232200F00();
      v45 = sub_232013174(v34, v35, &v46);
      a3 = v44;
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232047860(a1);
      sub_232047860(a1);
      v36 = v39;
      _os_log_impl(&dword_231FFB000, v39, (os_log_type_t)v41, "[%{public}s] Failed to make chart sharable model for %s: %{public}s", (uint8_t *)v25, 0x20u);
      v37 = v42;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v37, -1, -1);
      MEMORY[0x2348FF468](v25, -1, -1);

      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v40);
    }
    else
    {
      sub_232002CEC((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ChartSharableModelStep);
      sub_232047860(a1);
      sub_232047860(a1);

      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    }
    v38 = a1;
    a3(a1, 1);
    sub_232047860(a1);
    sub_232047860(a1);
  }
  else
  {
    v17 = a1;
    a3(a1, 0);
    sub_232047860(a1);
  }
}

uint64_t sub_2320D2400(int a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  void *v23;
  uint64_t (*v24)(char *, uint64_t);
  id v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void (**v33)(uint64_t);
  void (*v34)(uint64_t);
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  void *v46;
  void *v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  void (*v61)(uint64_t);
  char *v62;
  uint64_t v63;
  uint64_t (*v64)(char *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  _QWORD aBlock[6];

  v65 = a3;
  v61 = a2;
  LODWORD(v60) = a1;
  sub_2320D4198(0, &qword_2541B71E0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  v57 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v57 - v4;
  v6 = type metadata accessor for ChartSharableModelStep();
  v58 = *(_QWORD *)(v6 - 8);
  v7 = *(_QWORD *)(v58 + 64);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v63 = (uint64_t)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v57 - v9;
  v11 = sub_2321FDC6C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v62 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v57 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v57 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v57 - v21;
  sub_2321FDC60();
  v23 = (void *)sub_2321FDBF4();
  v24 = *(uint64_t (**)(char *, uint64_t))(v12 + 8);
  v66 = v11;
  v64 = v24;
  v24(v20, v11);
  v25 = (id)HKEndOfDayForDate();

  sub_2321FDC30();
  if ((v60 & 1) != 0)
  {
    v51 = v66;
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v5, v22, v66);
    swift_storeEnumTagMultiPayload();
    v61((uint64_t)v5);
    sub_2320D4214((uint64_t)v5, &qword_2541B71E0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    return v64(v22, v51);
  }
  else
  {
    v26 = v59;
    sub_23200054C(v59, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ChartSharableModelStep);
    v27 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v60 = v22;
    v28 = v66;
    v27(v17, v22, v66);
    sub_23200054C((uint64_t)v10, v63, (uint64_t (*)(_QWORD))type metadata accessor for ChartSharableModelStep);
    v27(v62, v17, v28);
    v29 = (*(unsigned __int8 *)(v58 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
    v30 = (v7 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
    v31 = (*(unsigned __int8 *)(v12 + 80) + v30 + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v32 = swift_allocObject();
    sub_232025468((uint64_t)v10, v32 + v29, (uint64_t (*)(_QWORD))type metadata accessor for ChartSharableModelStep);
    v33 = (void (**)(uint64_t))(v32 + v30);
    v34 = v61;
    v35 = v65;
    *v33 = v61;
    v33[1] = (void (*)(uint64_t))v35;
    (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v32 + v31, v17, v28);
    v36 = *(void **)(v26 + *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28));
    objc_opt_self();
    v37 = swift_dynamicCastObjCClass();
    if (v37)
    {
      v38 = v37;
      v39 = (void *)objc_opt_self();
      swift_retain_n();
      v61 = v36;
      v40 = objc_msgSend(v39, sel_queryDescriptorWithSampleType_, v38, v57);
      v41 = objc_msgSend((id)objc_opt_self(), sel_sortDescriptorsForMostRecentSamples);
      sub_232003E9C(0, (unint64_t *)&qword_2541B78A8);
      sub_232201038();

      sub_232027434();
      v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = xmmword_232210D20;
      *(_QWORD *)(v42 + 32) = v40;
      aBlock[0] = v42;
      sub_232201050();
      v43 = swift_allocObject();
      *(_QWORD *)(v43 + 16) = sub_2320D3E5C;
      *(_QWORD *)(v43 + 24) = v32;
      v44 = objc_allocWithZone(MEMORY[0x24BDD3F00]);
      sub_232003E9C(0, &qword_2541B5930);
      v45 = v40;
      swift_retain();
      v46 = (void *)sub_232201020();
      swift_bridgeObjectRelease();
      v47 = (void *)sub_232201020();
      swift_bridgeObjectRelease();
      aBlock[4] = sub_2320D3F0C;
      aBlock[5] = v43;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_2321BE3EC;
      aBlock[3] = &unk_250102298;
      v48 = _Block_copy(aBlock);
      v49 = objc_msgSend(v44, sel_initWithQueryDescriptors_limit_sortDescriptors_resultsHandler_, v46, 1, v47, v48);

      _Block_release(v48);
      swift_release();
      objc_msgSend(*(id *)(v59 + 16), sel_executeQuery_, v49);
      swift_release();

      sub_232002CEC(v63, (uint64_t (*)(_QWORD))type metadata accessor for ChartSharableModelStep);
      swift_release();
      v50 = (uint64_t)v62;
    }
    else
    {
      swift_retain_n();
      v54 = (uint64_t)v62;
      v53 = v63;
      sub_2320D29CC(0, 0, v63, v34, v35, (uint64_t)v62);
      swift_release();
      sub_232002CEC(v53, (uint64_t (*)(_QWORD))type metadata accessor for ChartSharableModelStep);
      swift_release();
      v50 = v54;
    }
    v55 = v66;
    v56 = v64;
    v64((char *)v50, v66);
    return v56(v60, v55);
  }
}

uint64_t sub_2320D29CC(void *a1, char a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  id v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  int v38;
  uint32_t *p_align;
  uint64_t v40;
  id v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  id v46;
  _BYTE *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  os_log_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  id v59;
  id v60;
  NSObject *v61;
  os_log_type_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  id v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  void *v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  id v84;
  _BYTE v86[4];
  int v87;
  os_log_t v88;
  _BYTE *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(uint64_t);
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;

  v94 = a5;
  v95 = a4;
  sub_2320D4198(0, &qword_2541B71E0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  v93 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v96 = &v86[-v11];
  v12 = sub_2321FDC6C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = &v86[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = type metadata accessor for ChartSharableModelStep();
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = &v86[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = &v86[-v21];
  MEMORY[0x24BDAC7A8](v20);
  v24 = &v86[-v23];
  v25 = sub_23220039C();
  v26 = MEMORY[0x24BDAC7A8](v25);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v97 = v32;
  v98 = v28;
  if ((a2 & 1) != 0)
  {
    v57 = v31;
    v58 = a1;
    sub_232200318();
    sub_23200054C(a3, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for ChartSharableModelStep);
    v59 = a1;
    v60 = a1;
    v92 = v57;
    v61 = sub_232200390();
    v62 = sub_2322012E4();
    if (os_log_type_enabled(v61, v62))
    {
      v63 = swift_slowAlloc();
      v91 = swift_slowAlloc();
      v100 = v91;
      *(_DWORD *)v63 = 136446722;
      v99 = sub_232013174(0xD000000000000016, 0x8000000232214530, &v100);
      sub_232201710();
      *(_WORD *)(v63 + 12) = 2080;
      v64 = objc_msgSend(*(id *)&v19[*(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28)], sel_sensitiveLoggingIdentifier);
      v65 = sub_232200EC4();
      v67 = v66;

      v99 = sub_232013174(v65, v67, &v100);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for ChartSharableModelStep);
      *(_WORD *)(v63 + 22) = 2082;
      v99 = (uint64_t)a1;
      v68 = a1;
      sub_232016A8C(0, (unint64_t *)&qword_2541B78D0);
      v69 = sub_232200F00();
      v99 = sub_232013174(v69, v70, &v100);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232047860(a1);
      sub_232047860(a1);
      _os_log_impl(&dword_231FFB000, v61, v62, "[%{public}s] Error fetching most recent sample for chart end date for %s: %{public}s", (uint8_t *)v63, 0x20u);
      v71 = v91;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v71, -1, -1);
      MEMORY[0x2348FF468](v63, -1, -1);
    }
    else
    {
      sub_232002CEC((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for ChartSharableModelStep);
      sub_232047860(a1);
      sub_232047860(a1);
    }

    (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v92, v98);
    v72 = (uint64_t)v96;
    *v96 = a1;
    swift_storeEnumTagMultiPayload();
    v73 = a1;
    v95(v72);
    v74 = a1;
    goto LABEL_13;
  }
  v89 = v15;
  v90 = a6;
  v91 = v13;
  v92 = v12;
  if (a1)
  {
    v33 = &v86[-v30];
    v34 = a1;
    sub_232200318();
    sub_23200054C(a3, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for ChartSharableModelStep);
    sub_232091DA8(a1);
    v35 = v34;
    v36 = sub_232200390();
    v37 = sub_2322012CC();
    v38 = v37;
    p_align = &stru_25010DFE8.align;
    if (os_log_type_enabled(v36, v37))
    {
      v40 = swift_slowAlloc();
      v90 = swift_slowAlloc();
      v100 = v90;
      *(_DWORD *)v40 = 136446722;
      v99 = sub_232013174(0xD000000000000016, 0x8000000232214530, &v100);
      sub_232201710();
      *(_WORD *)(v40 + 12) = 2080;
      v41 = objc_msgSend(*(id *)&v24[*(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28)], sel_sensitiveLoggingIdentifier);
      v88 = v36;
      v42 = v41;
      v43 = sub_232200EC4();
      v87 = v38;
      v45 = v44;

      v99 = sub_232013174(v43, v45, &v100);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for ChartSharableModelStep);
      *(_WORD *)(v40 + 22) = 2080;
      v46 = objc_msgSend(v35, sel_endDate);
      v47 = v89;
      sub_2321FDC30();

      sub_232000590(&qword_2541AF170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
      v48 = v35;
      v49 = v92;
      v50 = sub_232201AB8();
      v52 = v51;
      v53 = v49;
      v35 = v48;
      (*(void (**)(_BYTE *, uint64_t))(v91 + 8))(v47, v53);
      v54 = v50;
      p_align = (_DWORD *)(&stru_25010DFE8 + 24);
      v99 = sub_232013174(v54, v52, &v100);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232047860(a1);
      sub_232047860(a1);
      v55 = v88;
      _os_log_impl(&dword_231FFB000, v88, (os_log_type_t)v87, "[%{public}s] Determined chart end date for %s from most recent data end date: %s", (uint8_t *)v40, 0x20u);
      v56 = v90;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v56, -1, -1);
      MEMORY[0x2348FF468](v40, -1, -1);

    }
    else
    {
      sub_232002CEC((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for ChartSharableModelStep);
      sub_232047860(a1);
      sub_232047860(a1);

    }
    (*(void (**)(_BYTE *, uint64_t))(v97 + 8))(v33, v98);
    v72 = (uint64_t)v96;
    v84 = objc_msgSend(v35, *((SEL *)p_align + 180));
    sub_2321FDC30();

    swift_storeEnumTagMultiPayload();
    v95(v72);
    v74 = a1;
LABEL_13:
    sub_232047860(v74);
    return sub_2320D4214(v72, &qword_2541B71E0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  }
  v75 = v29;
  sub_232200318();
  sub_23200054C(a3, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for ChartSharableModelStep);
  v76 = sub_232200390();
  v77 = sub_2322012CC();
  if (os_log_type_enabled(v76, v77))
  {
    v78 = swift_slowAlloc();
    v79 = swift_slowAlloc();
    v100 = v79;
    *(_DWORD *)v78 = 136446466;
    v99 = sub_232013174(0xD000000000000016, 0x8000000232214530, &v100);
    sub_232201710();
    *(_WORD *)(v78 + 12) = 2080;
    v89 = (_BYTE *)(v78 + 14);
    v80 = objc_msgSend(*(id *)&v22[*(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28)], sel_sensitiveLoggingIdentifier);
    v81 = sub_232200EC4();
    v83 = v82;

    v99 = sub_232013174(v81, v83, &v100);
    sub_232201710();
    swift_bridgeObjectRelease();
    sub_232002CEC((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for ChartSharableModelStep);
    _os_log_impl(&dword_231FFB000, v76, v77, "[%{public}s] No data for chart end date for %s, using end of today", (uint8_t *)v78, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v79, -1, -1);
    MEMORY[0x2348FF468](v78, -1, -1);
  }
  else
  {
    sub_232002CEC((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for ChartSharableModelStep);
  }

  (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v75, v98);
  v72 = (uint64_t)v96;
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v91 + 16))(v96, v90, v92);
  swift_storeEnumTagMultiPayload();
  v95(v72);
  return sub_2320D4214(v72, &qword_2541B71E0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
}

void sub_2320D3380(int a1, unint64_t a2, id a3, void (*a4)(void))
{
  id v6;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;

  if (!a3)
  {
    if (a2)
    {
      if (a2 >> 62)
      {
        swift_bridgeObjectRetain();
        if (sub_232201998())
          goto LABEL_7;
      }
      else
      {
        v8 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v8)
        {
LABEL_7:
          if ((a2 & 0xC000000000000001) != 0)
          {
            v9 = (id)MEMORY[0x2348FEA30](0, a2);
          }
          else
          {
            if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              return;
            }
            v9 = *(id *)(a2 + 32);
          }
          v11 = v9;
          swift_bridgeObjectRelease();
          v10 = v11;
LABEL_14:
          v12 = v10;
          a4();

          return;
        }
      }
      swift_bridgeObjectRelease();
    }
    v10 = 0;
    goto LABEL_14;
  }
  v6 = a3;
  ((void (*)(id, uint64_t))a4)(a3, 1);

}

uint64_t sub_2320D3490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;

  v6 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23200054C(a1, (uint64_t)v9, type metadata accessor for SummariesFullProfileExecutor.StepResult);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = (v8 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = swift_allocObject();
  sub_232025468((uint64_t)v9, v12 + v10, type metadata accessor for SummariesFullProfileExecutor.StepResult);
  v13 = (_QWORD *)(v12 + v11);
  *v13 = a2;
  v13[1] = a3;
  swift_retain();
  sub_2320D0F08(a1, (void (*)(void *, void *, uint64_t))sub_2320D3688, v12);
  return swift_release();
}

uint64_t sub_2320D3590()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  v2 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  if (*(_QWORD *)v2 != 1)
  {

  }
  v3 = *(void **)(v2 + 16);
  if (v3 != (void *)1)
  {

  }
  v4 = v2 + *(int *)(v1 + 28);
  v5 = sub_2321FDDD4();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2320D3688(void *a1, void *a2, char a3)
{
  uint64_t v3;
  char v6;
  uint64_t v7;
  unint64_t v8;

  v6 = a3 & 1;
  v7 = *(_QWORD *)(type metadata accessor for SummariesFullProfileExecutor.StepResult(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return sub_2320D0D5C(a1, a2, v6, v3 + v8, *(void (**)(_QWORD *))(v3 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_2320D36F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = type metadata accessor for ChartSharableModelStep();
  v2 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  swift_unknownObjectRelease();

  v3 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  v4 = v2 + v3[6];
  v5 = (int *)_s14descr250103FA9O8WorkPlanVMa();
  v6 = v4 + v5[5];
  v7 = sub_2321FFACC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v4 + v5[6];
  v9 = sub_2321FE584();
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  v11 = v4 + v5[7];
  sub_232071E50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = v4 + v5[8];
  sub_232071EE4();
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v13, 1, v14))
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v13, v15);

  sub_232016AFC(v2 + v3[8]);
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_232016AFC(v2 + *(int *)(v1 + 24));
  swift_release();
  return swift_deallocObject();
}

void sub_2320D38E8(void *a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v4 = a2 & 1;
  v5 = *(_QWORD *)(type metadata accessor for ChartSharableModelStep() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  sub_2320D157C(a1, v4, v2 + v6, *(void (**)(void *, void *, uint64_t))v7, *(_QWORD *)(v7 + 8));
}

void sub_2320D3950(void *a1, char a2)
{
  uint64_t v2;

  sub_2320D1B1C(a1, a2 & 1, *(void **)(v2 + 16), *(void (**)(void *, void *, uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_2320D3960(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2320D4198(0, &qword_2541B71E0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2320D39BC()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v17 = type metadata accessor for ChartSharableModelStep();
  v1 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80));
  swift_unknownObjectRelease();

  v2 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  v3 = v1 + v2[6];
  v4 = (int *)_s14descr250103FA9O8WorkPlanVMa();
  v5 = v3 + v4[5];
  v6 = sub_2321FFACC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v3 + v4[6];
  v8 = sub_2321FE584();
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  v10 = v3 + v4[7];
  sub_232071E50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = v3 + v4[8];
  sub_232071EE4();
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v12, 1, v13))
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v12, v14);

  sub_232016AFC(v1 + v2[8]);
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_232016AFC(v1 + *(int *)(v17 + 24));
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_2320D3BBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for ChartSharableModelStep() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v4 + *(_QWORD *)(v3 + 64);
  sub_2320D1DE4(a1, v1 + v4, *(_QWORD *)(v1 + ((v5 + 7) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v1 + ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(void (**)(void *, uint64_t))(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_2320D3C24()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  unint64_t v7;
  int *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v23 = type metadata accessor for ChartSharableModelStep();
  v1 = *(_QWORD *)(v23 - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v21 = *(_QWORD *)(v1 + 64);
  v3 = sub_2321FDC6C();
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  v24 = *(_QWORD *)(v3 - 8);
  v25 = v3;
  v22 = v2;
  v5 = v0 + v2;
  swift_unknownObjectRelease();

  v6 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  v7 = v0 + v2 + v6[6];
  v8 = (int *)_s14descr250103FA9O8WorkPlanVMa();
  v9 = v7 + v8[5];
  v10 = sub_2321FFACC();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v7 + v8[6];
  v12 = sub_2321FE584();
  v13 = *(_QWORD *)(v12 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v11, v12);
  v14 = v7 + v8[7];
  sub_232071E50();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  v16 = v7 + v8[8];
  sub_232071EE4();
  v18 = v17;
  v19 = *(_QWORD *)(v17 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v19 + 48))(v16, 1, v17))
    (*(void (**)(unint64_t, uint64_t))(v19 + 8))(v16, v18);

  sub_232016AFC(v5 + v6[8]);
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_232016AFC(v5 + *(int *)(v23 + 24));
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v24 + 8))(v0 + ((((v21 + v22 + 7) & 0xFFFFFFFFFFFFFFF8) + v4 + 16) & ~v4), v25);
  return swift_deallocObject();
}

uint64_t sub_2320D3E5C(void *a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v4 = a2 & 1;
  v5 = *(_QWORD *)(type metadata accessor for ChartSharableModelStep() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(unsigned __int8 *)(*(_QWORD *)(sub_2321FDC6C() - 8) + 80);
  return sub_2320D29CC(a1, v4, v2 + v6, *(void (**)(uint64_t))(v2 + v7), *(_QWORD *)(v2 + v7 + 8), v2 + ((v7 + v8 + 16) & ~v8));
}

uint64_t sub_2320D3EE8()
{
  swift_release();
  return swift_deallocObject();
}

void sub_2320D3F0C(int a1, unint64_t a2, void *a3)
{
  uint64_t v3;

  sub_2320D3380(a1, a2, a3, *(void (**)(void))(v3 + 16));
}

uint64_t sub_2320D3F14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2320D3F24()
{
  return swift_release();
}

uint64_t sub_2320D3F34()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2320D3F64()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  int *v4;
  unint64_t v5;
  int *v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = type metadata accessor for ChartSharableModelStep();
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  v3 = v0 + v2;
  swift_unknownObjectRelease();

  v4 = (int *)type metadata accessor for SummariesFullProfileExecutor.Request(0);
  v5 = v0 + v2 + v4[6];
  v6 = (int *)_s14descr250103FA9O8WorkPlanVMa();
  v7 = v5 + v6[5];
  v8 = sub_2321FFACC();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v5 + v6[6];
  v10 = sub_2321FE584();
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v9, v10);
  v12 = v5 + v6[7];
  sub_232071E50();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  v14 = v5 + v6[8];
  sub_232071EE4();
  v16 = v15;
  v17 = *(_QWORD *)(v15 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v15))
    (*(void (**)(unint64_t, uint64_t))(v17 + 8))(v14, v16);

  sub_232016AFC(v3 + v4[8]);
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_232016AFC(v3 + *(int *)(v1 + 24));
  return swift_deallocObject();
}

void sub_2320D4148(void *a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;

  v4 = a2 & 1;
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ChartSharableModelStep() - 8) + 80);
  sub_2320D2038(a1, v4, *(void (**)(_QWORD, _QWORD))(v2 + 16), *(_QWORD *)(v2 + 24), v2 + ((v5 + 32) & ~v5));
}

void sub_2320D4198(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    sub_232016A8C(255, (unint64_t *)&qword_2541B78D0);
    v4 = sub_232201BA8();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_2320D4214(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  sub_2320D4198(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_2320D4254()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2320D4260(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_2320D42DC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2320D42E8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for CategoryValueSnidgetFeedItemModelProvider()
{
  uint64_t result;

  result = qword_2541B2620;
  if (!qword_2541B2620)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2320D4398(uint64_t a1)
{
  uint64_t result;

  result = sub_232000590(&qword_255F9CEF0, (uint64_t (*)(uint64_t))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider, (uint64_t)&unk_232214608);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_2320D43D4(NSObject *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(void);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  void (*v62)(uint64_t);
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  void *v90;
  uint64_t v91;
  id v92;
  id v93;
  void *v94;
  void *v95;
  void (*v96)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  void (*v99)(uint64_t, _QWORD, uint64_t, uint64_t);
  NSObject *v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  char *v104;
  NSObject *v105;
  os_log_type_t v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  id v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  NSObject *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  NSObject *v129;
  id v130;
  uint64_t v131;
  void *v132;
  unsigned int v133;
  id v134;
  void *v135;
  id v136;
  id v137;
  _BYTE *v138;
  _QWORD *v139;
  id v140;
  void *v141;
  int v142;
  unsigned int v143;
  id v144;
  void *v145;
  id v146;
  void (*v147)(uint64_t);
  uint64_t v148;
  char *v149;
  uint64_t v150;
  _QWORD *v151;
  id v152;
  uint64_t v153;
  void *v154;
  id v155;
  char *v156;
  uint64_t *v157;
  uint64_t v158;
  NSObject *v159;
  os_log_type_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  id v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  unint64_t v169;
  NSObject *v170;
  void *v171;
  void *v172;
  _QWORD *inited;
  void *v174;
  id v175;
  id v176;
  id v177;
  id v178;
  uint64_t v179;
  id v180;
  char *v181;
  void (*v182)(uint64_t);
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  id v186;
  _BYTE *v187;
  void (*v188)(char *, uint64_t);
  uint64_t v189;
  void (*v190)(uint64_t);
  uint64_t v191;
  void (*v192)(uint64_t);
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  id v196;
  id v197;
  uint64_t v198;
  char *v199;
  void (*v200)(uint64_t);
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  _QWORD *v206;
  uint64_t *v207;
  uint64_t v208;
  NSObject *v209;
  os_log_type_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  unint64_t v214;
  id v215;
  uint64_t v216;
  uint64_t v217;
  unint64_t v218;
  unint64_t v219;
  uint64_t v220;
  NSObject *v221;
  id v222;
  void *v223;
  id v224;
  void *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  id v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  char *v235;
  uint64_t v236;
  id v237;
  _BYTE *v238;
  void (*v239)(uint64_t);
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  uint64_t v244;
  char *v245;
  id v246;
  void (*v247)(uint64_t);
  uint64_t v248;
  id v249;
  id v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  void *v254;
  id v255;
  uint64_t v256;
  uint64_t v257;
  void (*v258)(uint64_t);
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t *v263;
  _BYTE *v264;
  uint64_t v265;
  void (*v266)(uint64_t);
  void (*v267)(char *, uint64_t, uint64_t, uint64_t);
  int v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  void (*v272)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v273;
  char *v274;
  char *v275;
  char *v276;
  char *v277;
  char *v278;
  char *v279;
  char *v280;
  uint64_t v281;
  char *v282;
  uint64_t *v283;
  uint64_t v284;
  char *v285;
  char *v286;
  uint64_t v287;
  char *v288;
  uint64_t v289;
  char *v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  char *v294;
  uint64_t *v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  char *v300;
  char *v301;
  char *v302;
  uint64_t v303;
  uint64_t v304;
  char *v305;
  char *v306;
  uint64_t v307;
  uint64_t v308;
  char *v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  _QWORD *v317;
  char *v318;
  uint64_t v319;
  uint64_t v320;
  char *v321;
  uint64_t v322;
  uint64_t *v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  id v330;
  void *v331;
  NSObject *v332;
  uint64_t v333[2];
  uint64_t v334;

  v322 = a3;
  v293 = a2;
  v332 = a1;
  v323 = a4;
  v5 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v267 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, qword_2541B78E0, (void (*)(uint64_t))MEMORY[0x24BE47DF8]);
  MEMORY[0x24BDAC7A8](v8);
  v321 = (char *)&v267 - v9;
  sub_2320002B4(0, &qword_2541B2368, (void (*)(uint64_t))MEMORY[0x24BE445A8]);
  MEMORY[0x24BDAC7A8](v10);
  v280 = (char *)&v267 - v11;
  v12 = sub_2321FD8B8();
  v13 = (void (*)(uint64_t))MEMORY[0x24BDCB878];
  v328 = *(_QWORD *)(v12 - 8);
  v329 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v276 = (char *)&v267 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v292 = sub_2321FDDD4();
  v291 = *(_QWORD *)(v292 - 8);
  MEMORY[0x24BDAC7A8](v292);
  v290 = (char *)&v267 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, (unint64_t *)&unk_2541B29B0, (void (*)(uint64_t))MEMORY[0x24BE43C58]);
  MEMORY[0x24BDAC7A8](v16);
  v288 = (char *)&v267 - v17;
  sub_2320002B4(0, (unint64_t *)&qword_2541B2868, (void (*)(uint64_t))sub_23200021C);
  MEMORY[0x24BDAC7A8](v18);
  v286 = (char *)&v267 - v19;
  v289 = sub_2321FDC6C();
  v287 = *(_QWORD *)(v289 - 8);
  v20 = MEMORY[0x24BDAC7A8](v289);
  v275 = (char *)&v267 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v279 = (char *)&v267 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v285 = (char *)&v267 - v24;
  v25 = sub_2321FD9F0();
  v26 = (void (*)(uint64_t))MEMORY[0x24BDCC5A8];
  v316 = v25;
  v315 = *(_QWORD *)(v25 - 8);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v278 = (char *)&v267 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v301 = (char *)&v267 - v29;
  v30 = type metadata accessor for CategoryValueSnidgetFeedItemModelProvider();
  v31 = MEMORY[0x24BDAC7A8](v30);
  v305 = (char *)&v267 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x24BDAC7A8](v31);
  v35 = (uint64_t *)((char *)&v267 - v34);
  v36 = MEMORY[0x24BDAC7A8](v33);
  v284 = (uint64_t)&v267 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v283 = (uint64_t *)((char *)&v267 - v39);
  v40 = MEMORY[0x24BDAC7A8](v38);
  v296 = (uint64_t)&v267 - v41;
  MEMORY[0x24BDAC7A8](v40);
  v295 = (uint64_t *)((char *)&v267 - v42);
  v311 = sub_23220039C();
  v310 = *(_QWORD *)(v311 - 8);
  v43 = MEMORY[0x24BDAC7A8](v311);
  v45 = (char *)&v267 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = MEMORY[0x24BDAC7A8](v43);
  v294 = (char *)&v267 - v47;
  MEMORY[0x24BDAC7A8](v46);
  v302 = (char *)&v267 - v48;
  v49 = sub_2322000D8();
  v50 = MEMORY[0x24BE4B918];
  v299 = v49;
  v298 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v282 = (char *)&v267 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v308 = sub_232200180();
  v307 = *(_QWORD *)(v308 - 8);
  MEMORY[0x24BDAC7A8](v308);
  v306 = (char *)&v267 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, &qword_2541B7F60, v13);
  v54 = MEMORY[0x24BDAC7A8](v53);
  v324 = (uint64_t)&v267 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = MEMORY[0x24BDAC7A8](v54);
  v281 = (uint64_t)&v267 - v57;
  v58 = MEMORY[0x24BDAC7A8](v56);
  v60 = (char *)&v267 - v59;
  MEMORY[0x24BDAC7A8](v58);
  v312 = (uint64_t)&v267 - v61;
  v62 = (void (*)(uint64_t))v50;
  v63 = v4;
  sub_2320002B4(0, &qword_2541B2AD8, v62);
  v65 = MEMORY[0x24BDAC7A8](v64);
  v297 = (uint64_t)&v267 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v65);
  v313 = (uint64_t)&v267 - v67;
  sub_2320002B4(0, (unint64_t *)&qword_2541B2A70, (void (*)(uint64_t))MEMORY[0x24BE4ADA0]);
  MEMORY[0x24BDAC7A8](v68);
  v70 = (char *)&v267 - v69;
  v319 = sub_2321FFD78();
  v314 = *(_QWORD *)(v319 - 8);
  v71 = MEMORY[0x24BDAC7A8](v319);
  v309 = (char *)&v267 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v71);
  v318 = (char *)&v267 - v73;
  sub_2320002B4(0, &qword_2541B2930, (void (*)(uint64_t))MEMORY[0x24BE42FE0]);
  v75 = MEMORY[0x24BDAC7A8](v74);
  v326 = (uint64_t)&v267 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v75);
  v325 = (uint64_t)&v267 - v77;
  sub_2320002B4(0, (unint64_t *)&qword_2541B2838, v26);
  v79 = MEMORY[0x24BDAC7A8](v78);
  v277 = (char *)&v267 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = MEMORY[0x24BDAC7A8](v79);
  v83 = (char *)&v267 - v82;
  v84 = MEMORY[0x24BDAC7A8](v81);
  v300 = (char *)&v267 - v85;
  v86 = MEMORY[0x24BDAC7A8](v84);
  v320 = (uint64_t)&v267 - v87;
  MEMORY[0x24BDAC7A8](v86);
  v327 = (uint64_t)&v267 - v88;
  v89 = objc_msgSend((id)objc_opt_self(), sel_sharedInstanceForHealthStore_, *v4);
  if (!v89)
  {
    __break(1u);
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  v90 = v89;
  v304 = v30;
  v91 = *(int *)(v30 + 24);
  v317 = v63;
  v303 = (uint64_t)v63 + v91;
  v92 = objc_msgSend(v89, sel_displayTypeForObjectType_, *(_QWORD *)((char *)v63 + v91 + 16));

  v331 = v92;
  if (!v92)
  {
    sub_232000300();
    swift_allocError();
    swift_willThrow();
    return;
  }
  v93 = v330;
  sub_232084854(v332);
  if (v93)
  {

    return;
  }
  v95 = v94;
  if (!v94)
  {
LABEL_12:
    v118 = sub_2321FE65C();
    v119 = (uint64_t)v321;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 56))(v321, 1, 1, v118);
    v120 = v324;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v328 + 56))(v324, 1, 1, v329);
    v121 = v322;
    swift_bridgeObjectRetain();
    sub_2320D71E8(0, v119, v121, v120, v7);
    sub_2321FF208();
    v122 = sub_2321FEF5C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v122 - 8) + 56))(v326, 1, 1, v122);
    v123 = v331;
    v124 = sub_2321FF1FC();
    sub_232000344(0);
    v126 = v323;
    sub_23200054C((uint64_t)v7, (uint64_t)v323 + *(int *)(v125 + 52), type metadata accessor for SnidgetFeedItemMetadata);

    v126[1] = 0;
    v126[2] = 0;
    *v126 = v124;
    sub_232002CEC((uint64_t)v7, type metadata accessor for SnidgetFeedItemMetadata);
    return;
  }
  if (!objc_msgSend(v94, sel_hasCategoryValue))
  {

    goto LABEL_12;
  }
  v274 = v83;
  v270 = 0;
  v330 = v95;
  v96 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v315 + 56);
  v97 = v316;
  v96(v327, 1, 1, v316);
  v96(v320, 1, 1, v97);
  v98 = sub_2321FEF5C();
  v271 = *(_QWORD *)(v98 - 8);
  v99 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v271 + 56);
  v273 = v98;
  v272 = v99;
  ((void (*)(uint64_t, uint64_t, uint64_t))v99)(v325, 1, 1);
  v100 = v332;
  HKCodableSummaryCurrentValue.queryConfiguration.getter((uint64_t)v70);
  v101 = v314;
  v102 = v319;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v314 + 48))(v70, 1, v319) == 1)
  {
    sub_23200040C((uint64_t)v70, (unint64_t *)&qword_2541B2A70, (void (*)(uint64_t))MEMORY[0x24BE4ADA0]);
    sub_232200318();
    v103 = v317;
    sub_23200054C((uint64_t)v317, (uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider);
    v104 = v305;
    sub_23200054C((uint64_t)v103, (uint64_t)v305, (uint64_t (*)(_QWORD))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider);
    v105 = sub_232200390();
    v106 = sub_2322012E4();
    v107 = v106;
    if (os_log_type_enabled(v105, v106))
    {
      v108 = swift_slowAlloc();
      LODWORD(v329) = v107;
      v109 = v108;
      v332 = swift_slowAlloc();
      v333[0] = (uint64_t)v332;
      *(_DWORD *)v109 = 136315394;
      v110 = v304;
      v111 = sub_2320852D8(*v35, *((unsigned __int8 *)v35 + *(int *)(v304 + 24) + 8));
      v334 = sub_232013174(v111, v112, v333);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC((uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider);
      *(_WORD *)(v109 + 12) = 2080;
      v328 = v109 + 14;
      v113 = objc_msgSend(*(id *)&v104[*(int *)(v110 + 24) + 16], sel_sensitiveLoggingIdentifier);
      v114 = sub_232200EC4();
      v116 = v115;

      v334 = sub_232013174(v114, v116, v333);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC((uint64_t)v104, (uint64_t (*)(_QWORD))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider);
      _os_log_impl(&dword_231FFB000, v105, (os_log_type_t)v329, "[%s]: unreadable query configuration category type: %s", (uint8_t *)v109, 0x16u);
      v117 = v332;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v117, -1, -1);
      MEMORY[0x2348FF468](v109, -1, -1);
    }
    else
    {
      sub_232002CEC((uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider);
      sub_232002CEC((uint64_t)v104, (uint64_t (*)(_QWORD))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider);
    }

    (*(void (**)(char *, uint64_t))(v310 + 8))(v45, v311);
    v137 = v330;
    sub_232005578();
    swift_allocError();
    *v138 = 0;
    swift_willThrow();

    goto LABEL_51;
  }
  v267 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v96;
  (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v318, v70, v102);
  sub_2322011AC();
  v127 = v329;
  v305 = *(char **)(v328 + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v305)(v312, 1, 1, v329);
  v128 = v101;
  v129 = v100;
  if (!-[NSObject hasSupplementaryValue](v100, sel_hasSupplementaryValue))
  {
    v268 = 1;
    v269 = 0;
    v139 = v317;
    v131 = (uint64_t)v274;
    goto LABEL_29;
  }
  v130 = -[NSObject supplementaryValue](v100, sel_supplementaryValue);
  v131 = (uint64_t)v274;
  if (!v130)
    goto LABEL_57;
  v132 = v130;
  v133 = objc_msgSend(v130, sel_hasDataCount);

  if (v133)
  {
    v134 = -[NSObject supplementaryValue](v129, sel_supplementaryValue);
    if (!v134)
    {
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
      goto LABEL_61;
    }
    v135 = v134;
    v136 = objc_msgSend(v134, sel_dataCount);

  }
  else
  {
    v136 = 0;
  }
  v140 = -[NSObject supplementaryValue](v129, sel_supplementaryValue);
  if (!v140)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  v141 = v140;
  v269 = (uint64_t)v136;
  v142 = v133 ^ 1;
  v143 = objc_msgSend(v140, sel_hasDateInterval);

  v268 = v142;
  if (!v143)
  {
    v139 = v317;
    goto LABEL_28;
  }
  v144 = -[NSObject supplementaryValue](v332, sel_supplementaryValue);
  if (!v144)
    goto LABEL_60;
  v145 = v144;
  v146 = objc_msgSend(v144, sel_dateInterval);

  v139 = v317;
  if (!v146)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  sub_232201500();

  v147 = (void (*)(uint64_t))MEMORY[0x24BDCB878];
  v148 = v312;
  sub_23200040C(v312, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v305)(v60, 0, 1, v127);
  sub_23208806C((uint64_t)v60, v148, &qword_2541B7F60, v147);
LABEL_28:
  v129 = v332;
LABEL_29:
  v149 = v309;
  v150 = v319;
  (*(void (**)(char *, char *, uint64_t))(v128 + 16))(v309, v318, v319);
  if ((*(unsigned int (**)(char *, uint64_t))(v128 + 88))(v149, v150) != *MEMORY[0x24BE4AD70])
  {
    v156 = v302;
    sub_232200318();
    v157 = v295;
    sub_23200054C((uint64_t)v139, (uint64_t)v295, (uint64_t (*)(_QWORD))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider);
    v158 = v296;
    sub_23200054C((uint64_t)v139, v296, (uint64_t (*)(_QWORD))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider);
    v159 = sub_232200390();
    v160 = sub_2322012E4();
    if (os_log_type_enabled(v159, v160))
    {
      v161 = swift_slowAlloc();
      v332 = swift_slowAlloc();
      v333[0] = (uint64_t)v332;
      *(_DWORD *)v161 = 136315394;
      v162 = v304;
      v163 = sub_2320852D8(*v157, *((unsigned __int8 *)v157 + *(int *)(v304 + 24) + 8));
      v334 = sub_232013174(v163, v164, v333);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC((uint64_t)v157, (uint64_t (*)(_QWORD))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider);
      *(_WORD *)(v161 + 12) = 2080;
      v329 = v161 + 14;
      v165 = objc_msgSend(*(id *)(v158 + *(int *)(v162 + 24) + 16), sel_sensitiveLoggingIdentifier);
      v166 = v158;
      v167 = sub_232200EC4();
      v169 = v168;

      v128 = v314;
      v334 = sub_232013174(v167, v169, v333);
      sub_232201710();
      v149 = v309;
      swift_bridgeObjectRelease();
      sub_232002CEC(v166, (uint64_t (*)(_QWORD))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider);
      _os_log_impl(&dword_231FFB000, v159, v160, "[%s]: unsupported query configuration for category type: %s", (uint8_t *)v161, 0x16u);
      v170 = v332;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v170, -1, -1);
      MEMORY[0x2348FF468](v161, -1, -1);

      (*(void (**)(char *, uint64_t))(v310 + 8))(v302, v311);
    }
    else
    {
      sub_232002CEC((uint64_t)v157, (uint64_t (*)(_QWORD))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider);
      sub_232002CEC(v158, (uint64_t (*)(_QWORD))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider);

      (*(void (**)(char *, uint64_t))(v310 + 8))(v156, v311);
    }
    v186 = v330;
    sub_232005578();
    swift_allocError();
    *v187 = 0;
    swift_willThrow();

    sub_23200040C(v312, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
    sub_23200040C(v313, &qword_2541B2AD8, (void (*)(uint64_t))MEMORY[0x24BE4B918]);
    v188 = *(void (**)(char *, uint64_t))(v128 + 8);
    v189 = v319;
    v188(v318, v319);
    sub_23200040C(v325, &qword_2541B2930, (void (*)(uint64_t))MEMORY[0x24BE42FE0]);
    v190 = (void (*)(uint64_t))MEMORY[0x24BDCC5A8];
    sub_23200040C(v320, (unint64_t *)&qword_2541B2838, (void (*)(uint64_t))MEMORY[0x24BDCC5A8]);
    sub_23200040C(v327, (unint64_t *)&qword_2541B2838, v190);
    v188(v149, v189);
    return;
  }
  (*(void (**)(char *, uint64_t))(v128 + 96))(v149, v150);
  (*(void (**)(char *, char *, uint64_t))(v307 + 32))(v306, v149, v308);
  v151 = (_QWORD *)sub_2320E2BF4(MEMORY[0x24BEE4AF8]);
  if (-[NSObject hasMetadataDictionary](v129, sel_hasMetadataDictionary))
  {
    swift_bridgeObjectRelease();
    v152 = -[NSObject metadataDictionary](v129, sel_metadataDictionary);
    v153 = v303;
    if (v152)
    {
      v154 = v152;
      v155 = objc_msgSend((id)objc_opt_self(), sel_dictionaryWithCodableMetadata_, v152);

      v333[0] = 0;
      sub_232200DC8();

      v151 = (_QWORD *)v333[0];
      if (!v333[0])
        v151 = (_QWORD *)sub_2320E2BF4(MEMORY[0x24BEE4AF8]);
      goto LABEL_37;
    }
LABEL_62:
    __break(1u);
    return;
  }
  v153 = v303;
LABEL_37:
  v171 = (void *)*v317;
  v172 = *(void **)(v153 + *(int *)(type metadata accessor for SnidgetFeedItemGeneratorRequest(0) + 32));
  type metadata accessor for MostRecentSampleSnidgetStringBuilder();
  inited = (_QWORD *)swift_initStackObject();
  inited[2] = v171;
  v174 = (void *)objc_opt_self();
  v175 = v172;
  v176 = v171;
  v177 = objc_msgSend(v174, sel_sharedInstanceForHealthStore_, v176);
  inited[4] = v177;
  if (!v172)
  {
    v178 = v177;
    v175 = objc_msgSend(v178, sel_createHKUnitPreferenceController);

  }
  v179 = v298;

  inited[3] = v175;
  v180 = objc_msgSend(v330, sel_categoryValue);
  v181 = v300;
  MostRecentSampleSnidgetStringBuilder.makeMostRecentSampleCategoryValuePrimaryAttributedString(displayType:categoryValue:metadata:)(v331, v151, v300, (double)(uint64_t)v180);
  swift_bridgeObjectRelease();
  v182 = (void (*)(uint64_t))MEMORY[0x24BDCC5A8];
  v183 = v327;
  sub_23200040C(v327, (unint64_t *)&qword_2541B2838, (void (*)(uint64_t))MEMORY[0x24BDCC5A8]);
  sub_23208806C((uint64_t)v181, v183, (unint64_t *)&qword_2541B2838, v182);
  v184 = v297;
  sub_2320004AC(v313, v297, &qword_2541B2AD8, (void (*)(uint64_t))MEMORY[0x24BE4B918]);
  v185 = v299;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v179 + 48))(v184, 1, v299) == 1)
  {
    sub_23200040C(v184, &qword_2541B2AD8, (void (*)(uint64_t))MEMORY[0x24BE4B918]);
  }
  else
  {
    v191 = (uint64_t)v282;
    (*(void (**)(char *, uint64_t, uint64_t))(v179 + 32))(v282, v184, v185);
    MostRecentSampleSnidgetStringBuilder.makeMostRecentSampleSupplementaryString(supplementaryLabelConfiguration:supplementaryLabelInfo:)(v191, v269, v268, v312, (uint64_t)v181);
    (*(void (**)(uint64_t, uint64_t))(v179 + 8))(v191, v185);
    v192 = (void (*)(uint64_t))MEMORY[0x24BDCC5A8];
    v193 = v320;
    sub_23200040C(v320, (unint64_t *)&qword_2541B2838, (void (*)(uint64_t))MEMORY[0x24BDCC5A8]);
    sub_23208806C((uint64_t)v181, v193, (unint64_t *)&qword_2541B2838, v192);
  }
  sub_232000448();
  v195 = *(int *)(v194 + 48);
  v196 = v330;
  objc_msgSend(v330, sel_dateData);
  v197 = (id)HKDecodeDateForValue();
  v198 = v326;
  sub_2321FDC30();

  v199 = v306;
  LOBYTE(v197) = sub_232200168();
  swift_release();
  (*(void (**)(char *, uint64_t))(v307 + 8))(v199, v308);
  v200 = (void (*)(uint64_t))MEMORY[0x24BE42FE0];
  v201 = v325;
  sub_23200040C(v325, &qword_2541B2930, (void (*)(uint64_t))MEMORY[0x24BE42FE0]);
  *(_BYTE *)(v198 + v195) = v197 & 1;
  v202 = v273;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v271 + 104))(v198, *MEMORY[0x24BE42FD8], v273);
  v272(v198, 0, 1, v202);
  sub_23208806C(v198, v201, &qword_2541B2930, v200);
  sub_2320004AC(v327, v131, (unint64_t *)&qword_2541B2838, (void (*)(uint64_t))MEMORY[0x24BDCC5A8]);
  v203 = v315;
  v204 = v316;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v315 + 48))(v131, 1, v316) == 1)
  {
    sub_23200040C(v131, (unint64_t *)&qword_2541B2838, (void (*)(uint64_t))MEMORY[0x24BDCC5A8]);
    v205 = v294;
    sub_232200318();
    v206 = v317;
    v207 = v283;
    sub_23200054C((uint64_t)v317, (uint64_t)v283, (uint64_t (*)(_QWORD))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider);
    v208 = v284;
    sub_23200054C((uint64_t)v206, v284, (uint64_t (*)(_QWORD))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider);
    v209 = sub_232200390();
    v210 = sub_2322012E4();
    if (os_log_type_enabled(v209, v210))
    {
      v211 = swift_slowAlloc();
      v332 = swift_slowAlloc();
      v333[0] = (uint64_t)v332;
      *(_DWORD *)v211 = 136315394;
      v212 = v304;
      v213 = sub_2320852D8(*v207, *((unsigned __int8 *)v207 + *(int *)(v304 + 24) + 8));
      v334 = sub_232013174(v213, v214, v333);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC((uint64_t)v207, (uint64_t (*)(_QWORD))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider);
      *(_WORD *)(v211 + 12) = 2080;
      v215 = objc_msgSend(*(id *)(v208 + *(int *)(v212 + 24) + 16), sel_sensitiveLoggingIdentifier);
      v216 = v208;
      v217 = sub_232200EC4();
      v219 = v218;

      v220 = v314;
      v334 = sub_232013174(v217, v219, v333);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v216, (uint64_t (*)(_QWORD))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider);
      _os_log_impl(&dword_231FFB000, v209, v210, "[%s]: unable to create primary string for: %s", (uint8_t *)v211, 0x16u);
      v221 = v332;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v221, -1, -1);
      MEMORY[0x2348FF468](v211, -1, -1);

      (*(void (**)(char *, uint64_t))(v310 + 8))(v294, v311);
      v222 = v330;
    }
    else
    {
      sub_232002CEC((uint64_t)v207, (uint64_t (*)(_QWORD))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider);
      sub_232002CEC(v208, (uint64_t (*)(_QWORD))type metadata accessor for CategoryValueSnidgetFeedItemModelProvider);

      (*(void (**)(char *, uint64_t))(v310 + 8))(v205, v311);
      v222 = v330;
      v220 = v314;
    }
    sub_232005578();
    swift_allocError();
    *v238 = 0;
    swift_willThrow();

    sub_23200040C(v312, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
    sub_23200040C(v313, &qword_2541B2AD8, (void (*)(uint64_t))MEMORY[0x24BE4B918]);
    (*(void (**)(char *, uint64_t))(v220 + 8))(v318, v319);
    goto LABEL_51;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v203 + 32))(v301, v131, v204);
  v223 = (void *)*v317;
  v332 = v317[1];
  objc_msgSend(v196, sel_dateData);
  v224 = (id)HKDecodeDateForValue();
  v225 = v285;
  sub_2321FDC30();

  sub_23200021C();
  v227 = v226;
  v228 = (uint64_t)v286;
  v229 = &v286[*(int *)(v226 + 48)];
  objc_msgSend(v196, sel_dateData);
  v230 = (id)HKDecodeDateForValue();
  sub_2321FDC30();

  v231 = v287;
  v232 = v289;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v287 + 56))(v228, 0, 1, v289);
  *(double *)v229 = (double)(uint64_t)objc_msgSend(v196, (SEL)&selRef_timeInterval + 7);
  v229[8] = 0;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v227 - 8) + 56))(v228, 0, 1, v227);
  v233 = sub_2321FF298();
  v234 = (uint64_t)v288;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v233 - 8) + 56))(v288, 1, 1, v233);
  v235 = v290;
  sub_2321FDDA4();
  v236 = v270;
  v237 = sub_2321234DC(v223, v332, v303, v293, v225, v228, v234, 0);
  if (v236)
  {

    (*(void (**)(char *, uint64_t))(v291 + 8))(v235, v292);
    sub_23200040C(v234, (unint64_t *)&unk_2541B29B0, (void (*)(uint64_t))MEMORY[0x24BE43C58]);
    sub_23200040C(v228, (unint64_t *)&qword_2541B2868, (void (*)(uint64_t))sub_23200021C);
    (*(void (**)(void *, uint64_t))(v231 + 8))(v225, v232);
    (*(void (**)(char *, uint64_t))(v315 + 8))(v301, v316);
    sub_23200040C(v312, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
    sub_23200040C(v313, &qword_2541B2AD8, (void (*)(uint64_t))MEMORY[0x24BE4B918]);
    (*(void (**)(char *, uint64_t))(v314 + 8))(v318, v319);
LABEL_51:
    sub_23200040C(v325, &qword_2541B2930, (void (*)(uint64_t))MEMORY[0x24BE42FE0]);
    v239 = (void (*)(uint64_t))MEMORY[0x24BDCC5A8];
    sub_23200040C(v320, (unint64_t *)&qword_2541B2838, (void (*)(uint64_t))MEMORY[0x24BDCC5A8]);
    sub_23200040C(v327, (unint64_t *)&qword_2541B2838, v239);
    return;
  }
  v240 = (uint64_t)v237;
  v270 = 0;
  (*(void (**)(char *, uint64_t))(v291 + 8))(v235, v292);
  sub_23200040C(v234, (unint64_t *)&unk_2541B29B0, (void (*)(uint64_t))MEMORY[0x24BE43C58]);
  sub_23200040C(v228, (unint64_t *)&qword_2541B2868, (void (*)(uint64_t))sub_23200021C);
  (*(void (**)(void *, uint64_t))(v231 + 8))(v225, v232);
  v241 = v281;
  v242 = v329;
  v243 = v305;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v305)(v281, 1, 1, v329);
  v244 = v324;
  if (v240)
  {
    swift_retain();
    v245 = v276;
    sub_2321FF280();
    sub_2321FD894();
    (*(void (**)(char *, uint64_t))(v328 + 8))(v245, v242);
    objc_msgSend(v196, sel_dateData);
    v246 = (id)HKDecodeDateForValue();
    sub_2321FDC30();

    sub_2321FD87C();
    swift_release();
    v247 = (void (*)(uint64_t))MEMORY[0x24BDCB878];
    sub_23200040C(v241, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v243)(v244, 0, 1, v242);
    sub_23208806C(v244, v241, &qword_2541B7F60, v247);
  }
  sub_2321FF208();
  sub_2320004AC(v325, v326, &qword_2541B2930, (void (*)(uint64_t))MEMORY[0x24BE42FE0]);
  v332 = v331;
  v331 = (void *)sub_2321FF1FC();
  v329 = v240;
  sub_2320004AC(v320, (uint64_t)v300, (unint64_t *)&qword_2541B2838, (void (*)(uint64_t))MEMORY[0x24BDCC5A8]);
  v248 = v316;
  (*(void (**)(char *, char *, uint64_t))(v315 + 16))(v278, v301, v316);
  v267(v277, 1, 1, v248);
  v333[0] = 0x5F74656764696E53;
  v333[1] = 0xE800000000000000;
  v249 = *(id *)(v303 + 16);
  v250 = objc_msgSend(v249, sel_description);
  sub_232200EC4();

  sub_232200F48();
  swift_bridgeObjectRelease();
  v251 = v280;
  sub_2321FF58C();
  swift_bridgeObjectRelease();
  v252 = sub_2321FF5A4();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v252 - 8) + 56))(v251, 0, 1, v252);
  sub_2321FF6C4();
  swift_allocObject();
  v328 = sub_2321FF6B8();
  v253 = v329;
  swift_retain();
  v254 = v196;
  objc_msgSend(v196, sel_dateData);
  v255 = (id)HKDecodeDateForValue();
  sub_2321FDC30();

  v256 = (uint64_t)v321;
  sub_2321FE62C();
  v257 = sub_2321FE65C();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v257 - 8) + 56))(v256, 0, 1, v257);
  v258 = (void (*)(uint64_t))MEMORY[0x24BDCB878];
  v259 = v281;
  v260 = v324;
  sub_2320004AC(v281, v324, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  sub_232000344(0);
  v262 = v322;
  v263 = v323;
  v264 = (char *)v323 + *(int *)(v261 + 52);
  swift_bridgeObjectRetain();
  sub_2320D71E8(1, v256, v262, v260, v264);
  swift_release();

  v265 = v328;
  *v263 = (uint64_t)v331;
  v263[1] = v265;
  v263[2] = v253;
  sub_23200040C(v259, &qword_2541B7F60, v258);
  (*(void (**)(char *, uint64_t))(v315 + 8))(v301, v316);
  sub_23200040C(v312, &qword_2541B7F60, v258);
  sub_23200040C(v313, &qword_2541B2AD8, (void (*)(uint64_t))MEMORY[0x24BE4B918]);
  (*(void (**)(char *, uint64_t))(v314 + 8))(v318, v319);
  sub_23200040C(v325, &qword_2541B2930, (void (*)(uint64_t))MEMORY[0x24BE42FE0]);
  v266 = (void (*)(uint64_t))MEMORY[0x24BDCC5A8];
  sub_23200040C(v320, (unint64_t *)&qword_2541B2838, (void (*)(uint64_t))MEMORY[0x24BDCC5A8]);
  sub_23200040C(v327, (unint64_t *)&qword_2541B2838, v266);
}

void sub_2320D65E4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2320D43D4(*(NSObject **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), a2);
}

uint64_t *sub_2320D6604(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_2321FE65C();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      sub_2320002B4(0, qword_2541B78E0, (void (*)(uint64_t))MEMORY[0x24BE47DF8]);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v14 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_2321FD8B8();
    v18 = *(_QWORD *)(v17 - 8);
    v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    swift_bridgeObjectRetain();
    if (v19(v16, 1, v17))
    {
      sub_2320002B4(0, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
  }
  return v4;
}

uint64_t sub_2320D67A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_2321FE65C();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  v7 = a1 + *(int *)(a2 + 28);
  v8 = sub_2321FD8B8();
  v9 = *(_QWORD *)(v8 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  return result;
}

_BYTE *sub_2320D6874(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(_BYTE *, uint64_t, uint64_t);
  uint64_t v18;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_2321FE65C();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_2320002B4(0, qword_2541B78E0, (void (*)(uint64_t))MEMORY[0x24BE47DF8]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[7];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_2321FD8B8();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v16 + 48);
  swift_bridgeObjectRetain();
  if (v17(v14, 1, v15))
  {
    sub_2320002B4(0, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

_BYTE *sub_2320D69EC(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(_BYTE *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_2321FE65C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_2320002B4(0, qword_2541B78E0, (void (*)(uint64_t))MEMORY[0x24BE47DF8]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a3[7];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_2321FD8B8();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v19 + 24))(v16, v17, v18);
      return a1;
    }
    (*(void (**)(_BYTE *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    sub_2320002B4(0, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v19 + 16))(v16, v17, v18);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  return a1;
}

_BYTE *sub_2320D6C00(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_2321FE65C();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_2320002B4(0, qword_2541B78E0, (void (*)(uint64_t))MEMORY[0x24BE47DF8]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[7];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_2321FD8B8();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    sub_2320002B4(0, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

_BYTE *sub_2320D6D70(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(_BYTE *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_2321FE65C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_2320002B4(0, qword_2541B78E0, (void (*)(uint64_t))MEMORY[0x24BE47DF8]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  swift_bridgeObjectRelease();
  v15 = a3[7];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_2321FD8B8();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v19 + 40))(v16, v17, v18);
      return a1;
    }
    (*(void (**)(_BYTE *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    sub_2320002B4(0, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v19 + 32))(v16, v17, v18);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  return a1;
}

uint64_t sub_2320D6F7C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2320D6F88(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  sub_2320002B4(0, qword_2541B78E0, (void (*)(uint64_t))MEMORY[0x24BE47DF8]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    sub_2320002B4(0, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
    v8 = v12;
    v7 = *(_QWORD *)(v12 - 8);
    v9 = a3[7];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = *(_QWORD *)(a1 + a3[6]);
  if (v10 >= 0xFFFFFFFF)
    LODWORD(v10) = -1;
  return (v10 + 1);
}

uint64_t sub_2320D704C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2320D7058(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_2320002B4(0, qword_2541B78E0, (void (*)(uint64_t))MEMORY[0x24BE47DF8]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[5];
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[6]) = (a2 - 1);
      return;
    }
    sub_2320002B4(0, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
    v10 = v12;
    v9 = *(_QWORD *)(v12 - 8);
    v11 = a4[7];
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

uint64_t type metadata accessor for SnidgetFeedItemMetadata(uint64_t a1)
{
  return sub_23201A14C(a1, qword_2541B3490);
}

void sub_2320D712C()
{
  unint64_t v0;
  unint64_t v1;

  sub_2320002B4(319, qword_2541B78E0, (void (*)(uint64_t))MEMORY[0x24BE47DF8]);
  if (v0 <= 0x3F)
  {
    sub_2320002B4(319, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_2320D71E8@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _BYTE *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t);
  void (*v42)(uint64_t);
  void (*v43)(void (**)(char *, uint64_t), char *, uint64_t);
  void (**v44)(char *, uint64_t);
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  void (**v51)(char *, uint64_t);
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;

  v57 = a4;
  v58 = a3;
  LODWORD(v56) = a1;
  v7 = sub_2321FDC6C();
  MEMORY[0x24BDAC7A8](v7);
  v50 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, qword_2541B78E0, (void (*)(uint64_t))MEMORY[0x24BE47DF8]);
  MEMORY[0x24BDAC7A8](v9);
  v53 = (uint64_t)&v47 - v10;
  v11 = sub_2321FE65C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v52 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v49 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v47 - v17;
  v19 = sub_2321FD8B8();
  v20 = *(char **)(v19 - 8);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v48 = (char *)&v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v51 = (void (**)(char *, uint64_t))((char *)&v47 - v23);
  v24 = (int *)type metadata accessor for SnidgetFeedItemMetadata(0);
  v25 = (uint64_t)&a5[v24[5]];
  v54 = v12;
  v55 = v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v25, 1, 1, v11);
  v26 = (uint64_t)&a5[v24[7]];
  v27 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*((_QWORD *)v20 + 7);
  v27(v26, 1, 1, v19);
  *a5 = (_BYTE)v56;
  v28 = a2;
  v29 = a2;
  v30 = v57;
  sub_2320DC770(v29, v25);
  *(_QWORD *)&a5[v24[6]] = v58;
  v31 = v30;
  v32 = v30;
  v33 = v19;
  sub_2320004AC(v32, (uint64_t)v18, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v20 + 6))(v18, 1, v19) == 1)
  {
    v51 = (void (**)(char *, uint64_t))v20;
    v56 = v27;
    v58 = v26;
    v34 = v52;
    sub_23200040C((uint64_t)v18, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
    v35 = v28;
    v36 = v28;
    v37 = v53;
    sub_2320004AC(v36, v53, qword_2541B78E0, (void (*)(uint64_t))MEMORY[0x24BE47DF8]);
    v39 = v54;
    v38 = v55;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v37, 1, v55) == 1)
    {
      sub_23200040C(v31, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
      v40 = (void (*)(uint64_t))MEMORY[0x24BE47DF8];
      sub_23200040C(v35, qword_2541B78E0, (void (*)(uint64_t))MEMORY[0x24BE47DF8]);
      return sub_23200040C(v37, qword_2541B78E0, v40);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v34, v37, v38);
      v45 = v48;
      sub_2321FE638();
      sub_2321FD870();
      v51[1](v45, v33);
      v46 = (uint64_t)v49;
      sub_2321FD888();
      sub_23200040C(v31, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
      sub_23200040C(v35, qword_2541B78E0, (void (*)(uint64_t))MEMORY[0x24BE47DF8]);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v34, v38);
      v56(v46, 0, 1, v33);
      return sub_232025424(v46, v58);
    }
  }
  else
  {
    v42 = (void (*)(uint64_t))MEMORY[0x24BDCB878];
    sub_23200040C(v31, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
    sub_23200040C(v28, qword_2541B78E0, (void (*)(uint64_t))MEMORY[0x24BE47DF8]);
    v43 = (void (*)(void (**)(char *, uint64_t), char *, uint64_t))*((_QWORD *)v20 + 4);
    v44 = v51;
    v43(v51, v18, v19);
    sub_23200040C(v26, &qword_2541B7F60, v42);
    v43((void (**)(char *, uint64_t))v26, (char *)v44, v19);
    return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v27)(v26, 0, 1, v19);
  }
}

uint64_t sub_2320D766C()
{
  uint64_t v0;
  id v1;
  id v2;

  sub_23220189C();
  swift_bridgeObjectRelease();
  sub_2321FE1B8();
  sub_232200F48();
  swift_bridgeObjectRelease();
  sub_232200F48();
  v1 = *(id *)(v0 + 16);
  v2 = objc_msgSend(v1, sel_description);
  sub_232200EC4();

  sub_232200F48();
  swift_bridgeObjectRelease();
  sub_232200F48();
  sub_232200F48();
  swift_bridgeObjectRelease();
  return 0x7250656372756F73;
}

uint64_t sub_2320D77DC@<X0>(uint64_t a1@<X0>, NSObject *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  int v57;
  os_log_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t);
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  NSObject *v65;
  os_log_type_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(uint64_t, uint64_t);
  uint64_t v71;
  char *v72;
  void *v73;
  void (*v74)(uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  char *v79;
  id v80;
  id v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  os_log_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  void (*v98)(uint64_t, uint64_t, uint64_t);
  uint64_t v99;
  char *v100;
  NSObject *v101;
  os_log_type_t v102;
  int v103;
  uint64_t v104;
  uint64_t (*v105)(uint64_t, uint64_t);
  uint64_t v106;
  char *v107;
  void *v108;
  void (*v109)(uint64_t, uint64_t);
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  id v114;
  id v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  os_log_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  void (*v123)(char *, uint64_t, uint64_t);
  char *v124;
  uint64_t v125;
  os_log_t v126;
  NSObject *v127;
  os_log_type_t v128;
  int v129;
  uint64_t v130;
  uint64_t (*v131)(uint64_t, uint64_t);
  void *v132;
  void (*v133)(uint64_t, uint64_t);
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  unint64_t v138;
  void (*v139)(char *, uint64_t);
  os_log_t v140;
  id v141;
  id v142;
  uint64_t v143;
  unint64_t v144;
  unint64_t v145;
  os_log_t v146;
  uint64_t v147;
  void (*v148)(char *, uint64_t);
  void (*v149)(char *, uint64_t);
  uint64_t v150;
  char *v151;
  void (*v152)(uint64_t, uint64_t);
  void (*v153)(char *, uint64_t);
  char *v154;
  uint64_t v155;
  id v156;
  char *v157;
  id v158;
  id v159;
  NSObject *v160;
  os_log_type_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  id v167;
  uint64_t v168;
  unint64_t v169;
  uint64_t v170;
  _QWORD v172[2];
  os_log_t v173;
  uint64_t v174;
  uint64_t v175;
  NSObject *v176;
  void *v177;
  char *v178;
  char *v179;
  char *v180;
  char *v181;
  char *v182;
  os_log_t v183;
  char *v184;
  os_log_t v185;
  char *v186;
  char *v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  id v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;

  v177 = a3;
  v176 = a2;
  v192 = a1;
  v193 = a6;
  v201 = 0;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v175 = type metadata accessor for HostingConfigurationContent(0, AssociatedTypeWitness, v9, v10);
  v174 = *(_QWORD *)(v175 - 8);
  MEMORY[0x24BDAC7A8](v175);
  v186 = (char *)v172 - v11;
  v12 = swift_getAssociatedTypeWitness();
  v189 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v191 = (char *)v172 - v13;
  v14 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v181 = (char *)v172 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v194 = *(_QWORD *)(a4 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v178 = (char *)v172 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)v172 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19);
  v185 = (os_log_t)((char *)v172 - v23);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v180 = (char *)v172 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v182 = (char *)v172 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v179 = (char *)v172 - v28;
  v29 = sub_23220039C();
  v196 = *(_QWORD *)(v29 - 8);
  v197 = v29;
  v30 = MEMORY[0x24BDAC7A8](v29);
  v187 = (char *)v172 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x24BDAC7A8](v30);
  v34 = (char *)v172 - v33;
  v35 = MEMORY[0x24BDAC7A8](v32);
  v184 = (char *)v172 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v183 = (os_log_t)((char *)v172 - v37);
  v198 = a5;
  v38 = a4;
  v39 = swift_getAssociatedTypeWitness();
  v40 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)v172 - v41;
  v45 = type metadata accessor for SummaryModelProcessingResult(0, v39, v43, v44);
  v46 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v48 = (char *)v172 - v47;
  v190 = v12;
  v195 = sub_2322016F8();
  v199 = *(_QWORD *)(v195 - 8);
  v49 = MEMORY[0x24BDAC7A8](v195);
  v188 = (char *)v172 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = MEMORY[0x24BDAC7A8](v49);
  v53 = (char *)v172 - v52;
  MEMORY[0x24BDAC7A8](v51);
  v200 = (char *)v172 - v54;
  v55 = v45;
  v56 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v48, v192, v55);
  v57 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 48))(v48, 2, v39);
  if (v57)
  {
    if (v57 == 1)
    {
      v58 = v183;
      sub_232200318();
      v59 = v194;
      v60 = *(void (**)(char *, uint64_t, uint64_t))(v194 + 16);
      v61 = v179;
      v62 = v202;
      v63 = v38;
      v60(v179, v202, v38);
      v64 = v182;
      v60(v182, v62, v38);
      v65 = sub_232200390();
      v66 = sub_2322012FC();
      v67 = v66;
      if (os_log_type_enabled(v65, v66))
      {
        v68 = swift_slowAlloc();
        v192 = swift_slowAlloc();
        v204 = (char *)v192;
        *(_DWORD *)v68 = 136315394;
        v180 = (char *)(v68 + 4);
        v69 = v198;
        v70 = *(uint64_t (**)(uint64_t, uint64_t))(v198 + 64);
        v185 = v65;
        v71 = v70(v63, v198);
        LODWORD(v184) = v67;
        v72 = v61;
        v73 = (void *)v71;
        v74 = *(void (**)(uint64_t, uint64_t))(v69 + 72);
        v75 = (uint64_t)v181;
        v74(v63, v69);
        sub_2320DACC0(v75);
        v76 = sub_232088D50();
        v78 = v77;

        v203 = sub_232013174(v76, v78, (uint64_t *)&v204);
        sub_232201710();
        swift_bridgeObjectRelease();
        v194 = *(_QWORD *)(v194 + 8);
        ((void (*)(char *, uint64_t))v194)(v72, v63);
        *(_WORD *)(v68 + 12) = 2080;
        v79 = v182;
        v74(v63, v69);
        v80 = *(id *)(v75 + 16);
        sub_2320DACC0(v75);
        v81 = objc_msgSend(v80, sel_sensitiveLoggingIdentifier);

        v82 = sub_232200EC4();
        v84 = v83;

        v203 = sub_232013174(v82, v84, (uint64_t *)&v204);
        sub_232201710();
        swift_bridgeObjectRelease();
        ((void (*)(char *, uint64_t))v194)(v79, v63);
        v85 = v185;
        _os_log_impl(&dword_231FFB000, v185, (os_log_type_t)v184, "%s: Version mismatch deleted, deleting snidget feedItem for %s", (uint8_t *)v68, 0x16u);
        v86 = v192;
        swift_arrayDestroy();
        MEMORY[0x2348FF468](v86, -1, -1);
        MEMORY[0x2348FF468](v68, -1, -1);

        (*(void (**)(os_log_t, uint64_t))(v196 + 8))(v183, v197);
        v87 = v189;
        v88 = v190;
        v89 = v195;
        v91 = v199;
        v90 = v200;
        v92 = v188;
      }
      else
      {
        v148 = *(void (**)(char *, uint64_t))(v59 + 8);
        v148(v61, v38);
        v148(v64, v38);

        (*(void (**)(os_log_t, uint64_t))(v196 + 8))(v58, v197);
        v87 = v189;
        v88 = v190;
        v89 = v195;
        v91 = v199;
        v90 = v200;
        v92 = v188;
        v69 = v198;
      }
      (*(void (**)(uint64_t, uint64_t))(v69 + 104))(v63, v69);
    }
    else
    {
      v121 = v184;
      sub_232200318();
      v122 = v194;
      v123 = *(void (**)(char *, uint64_t, uint64_t))(v194 + 16);
      v124 = v180;
      v125 = v202;
      v63 = v38;
      v123(v180, v202, v38);
      v126 = v185;
      v123((char *)v185, v125, v38);
      v127 = sub_232200390();
      v128 = sub_2322012FC();
      v129 = v128;
      if (os_log_type_enabled(v127, v128))
      {
        v130 = swift_slowAlloc();
        v192 = swift_slowAlloc();
        v204 = (char *)v192;
        *(_DWORD *)v130 = 136315394;
        v179 = (char *)(v130 + 4);
        v69 = v198;
        v131 = *(uint64_t (**)(uint64_t, uint64_t))(v198 + 64);
        v183 = v127;
        v132 = (void *)v131(v63, v198);
        v133 = *(void (**)(uint64_t, uint64_t))(v69 + 72);
        v134 = (uint64_t)v181;
        v133(v63, v69);
        sub_2320DACC0(v134);
        v135 = sub_232088D50();
        LODWORD(v182) = v129;
        v136 = v122;
        v138 = v137;

        v203 = sub_232013174(v135, v138, (uint64_t *)&v204);
        sub_232201710();
        swift_bridgeObjectRelease();
        v139 = *(void (**)(char *, uint64_t))(v136 + 8);
        v139(v124, v63);
        *(_WORD *)(v130 + 12) = 2080;
        v194 = v130 + 14;
        v140 = v185;
        v133(v63, v69);
        v141 = *(id *)(v134 + 16);
        sub_2320DACC0(v134);
        v142 = objc_msgSend(v141, sel_sensitiveLoggingIdentifier);

        v143 = sub_232200EC4();
        v145 = v144;

        v203 = sub_232013174(v143, v145, (uint64_t *)&v204);
        sub_232201710();
        swift_bridgeObjectRelease();
        v139((char *)v140, v63);
        v146 = v183;
        _os_log_impl(&dword_231FFB000, v183, (os_log_type_t)v182, "%s: No model found, deleting snidget feedItem for %s", (uint8_t *)v130, 0x16u);
        v147 = v192;
        swift_arrayDestroy();
        MEMORY[0x2348FF468](v147, -1, -1);
        MEMORY[0x2348FF468](v130, -1, -1);

        (*(void (**)(char *, uint64_t))(v196 + 8))(v184, v197);
        v87 = v189;
        v88 = v190;
        v89 = v195;
        v91 = v199;
        v90 = v200;
        v92 = v188;
      }
      else
      {
        v149 = *(void (**)(char *, uint64_t))(v122 + 8);
        v149(v124, v38);
        v149((char *)v126, v38);

        (*(void (**)(char *, uint64_t))(v196 + 8))(v121, v197);
        v87 = v189;
        v88 = v190;
        v89 = v195;
        v91 = v199;
        v90 = v200;
        v92 = v188;
        v69 = v198;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v87 + 56))(v90, 1, 1, v88);
    }
  }
  else
  {
    v192 = (uint64_t)v21;
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v42, v48, v39);
    v93 = v201;
    v94 = v202;
    v95 = v38;
    (*(void (**)(char *, uint64_t))(v198 + 96))(v42, v38);
    v201 = v93;
    if (v93)
    {
      v183 = v56;
      v184 = v42;
      v185 = (os_log_t)v40;
      v96 = v34;
      sub_232200318();
      v97 = v194;
      v98 = *(void (**)(uint64_t, uint64_t, uint64_t))(v194 + 16);
      v99 = v192;
      v98(v192, v94, v38);
      v100 = v178;
      v98((uint64_t)v178, v94, v38);
      v101 = sub_232200390();
      v102 = sub_2322012FC();
      v103 = v102;
      v63 = v38;
      if (os_log_type_enabled(v101, v102))
      {
        v104 = swift_slowAlloc();
        v180 = (char *)swift_slowAlloc();
        v204 = v180;
        *(_DWORD *)v104 = 136315394;
        v172[1] = v104 + 4;
        v69 = v198;
        v105 = *(uint64_t (**)(uint64_t, uint64_t))(v198 + 64);
        LODWORD(v179) = v103;
        v106 = v105(v95, v198);
        v107 = v100;
        v108 = (void *)v106;
        v182 = v96;
        v109 = *(void (**)(uint64_t, uint64_t))(v69 + 72);
        v173 = v101;
        v110 = (uint64_t)v181;
        v109(v63, v69);
        sub_2320DACC0(v110);
        v111 = sub_232088D50();
        v113 = v112;

        v203 = sub_232013174(v111, v113, (uint64_t *)&v204);
        sub_232201710();
        swift_bridgeObjectRelease();
        v194 = *(_QWORD *)(v194 + 8);
        ((void (*)(uint64_t, uint64_t))v194)(v99, v63);
        *(_WORD *)(v104 + 12) = 2080;
        v192 = v104 + 14;
        v109(v63, v69);
        v114 = *(id *)(v110 + 16);
        sub_2320DACC0(v110);
        v115 = objc_msgSend(v114, sel_sensitiveLoggingIdentifier);

        v116 = sub_232200EC4();
        v118 = v117;

        v203 = sub_232013174(v116, v118, (uint64_t *)&v204);
        sub_232201710();
        swift_bridgeObjectRelease();
        ((void (*)(char *, uint64_t))v194)(v107, v63);
        v119 = v173;
        _os_log_impl(&dword_231FFB000, v173, (os_log_type_t)v179, "%s: Unreadable model, attempting to proceed with error case feedItem for %s", (uint8_t *)v104, 0x16u);
        v120 = v180;
        swift_arrayDestroy();
        MEMORY[0x2348FF468](v120, -1, -1);
        MEMORY[0x2348FF468](v104, -1, -1);

        (*(void (**)(char *, uint64_t))(v196 + 8))(v182, v197);
        v92 = v188;
        v87 = v189;
        v89 = v195;
        v91 = v199;
        v90 = v200;
      }
      else
      {
        v152 = *(void (**)(uint64_t, uint64_t))(v97 + 8);
        v152(v99, v38);
        v152((uint64_t)v100, v38);

        (*(void (**)(char *, uint64_t))(v196 + 8))(v96, v197);
        v92 = v188;
        v87 = v189;
        v89 = v195;
        v91 = v199;
        v90 = v200;
        v69 = v198;
      }
      (*(void (**)(uint64_t, uint64_t))(v69 + 104))(v63, v69);

      ((void (*)(char *, os_log_t))v185[1].isa)(v184, v183);
      v201 = 0;
      v88 = v190;
    }
    else
    {
      (*(void (**)(char *, NSObject *))(v40 + 8))(v42, v56);
      v87 = v189;
      v150 = v190;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v189 + 56))(v53, 0, 1, v190);
      v91 = v199;
      v90 = v200;
      v151 = v53;
      v89 = v195;
      (*(void (**)(char *, char *, uint64_t))(v199 + 32))(v200, v151, v195);
      v92 = v188;
      v69 = v198;
      v63 = v95;
      v88 = v150;
    }
  }
  (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v92, v90, v89);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v92, 1, v88) == 1)
  {
    v153 = *(void (**)(char *, uint64_t))(v91 + 8);
    v153(v90, v89);
    v153(v92, v89);
  }
  else
  {
    v154 = v191;
    (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v191, v92, v88);
    v155 = (uint64_t)v186;
    v156 = v201;
    (*(void (**)(char *, uint64_t, uint64_t))(v69 + 112))(v154, v63, v69);
    if (!v156)
    {
      sub_2320D8C00(v176, v177, v155, v63, v69, v193);
      (*(void (**)(uint64_t, uint64_t))(v174 + 8))(v155, v175);
      (*(void (**)(char *, uint64_t))(v87 + 8))(v191, v88);
      return (*(uint64_t (**)(char *, uint64_t))(v91 + 8))(v200, v89);
    }
    v157 = v187;
    sub_232200318();
    v158 = v156;
    v159 = v156;
    v160 = sub_232200390();
    v161 = sub_2322012E4();
    if (os_log_type_enabled(v160, v161))
    {
      v162 = swift_slowAlloc();
      v163 = v87;
      v164 = swift_slowAlloc();
      v204 = (char *)v164;
      *(_DWORD *)v162 = 136315394;
      v165 = sub_232201BF0();
      v203 = sub_232013174(v165, v166, (uint64_t *)&v204);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v162 + 12) = 2080;
      v203 = (uint64_t)v156;
      v167 = v156;
      sub_232002B9C();
      v168 = sub_232200F00();
      v203 = sub_232013174(v168, v169, (uint64_t *)&v204);
      sub_232201710();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_231FFB000, v160, v161, "[%s]: Unable to make feedItem from provided feedItemModel: %s", (uint8_t *)v162, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v164, -1, -1);
      MEMORY[0x2348FF468](v162, -1, -1);

      (*(void (**)(char *, uint64_t))(v196 + 8))(v187, v197);
      (*(void (**)(char *, uint64_t))(v163 + 8))(v191, v88);
      (*(void (**)(char *, uint64_t))(v199 + 8))(v200, v195);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v196 + 8))(v157, v197);
      (*(void (**)(char *, uint64_t))(v87 + 8))(v191, v88);
      (*(void (**)(char *, uint64_t))(v199 + 8))(v200, v89);
    }
  }
  v170 = sub_2321FE308();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v170 - 8) + 56))(v193, 1, 1, v170);
}

uint64_t sub_2320D89A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id *v10;
  uint64_t v11;
  id *v12;
  void (*v13)(uint64_t, uint64_t);
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v4 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (id *)((char *)&v20 - v9);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (id *)((char *)&v20 - v11);
  v13 = *(void (**)(uint64_t, uint64_t))(a2 + 72);
  v13(a1, a2);
  v14 = v12[2];
  sub_2320DACC0((uint64_t)v12);
  v13(a1, a2);
  v15 = *v10;
  v16 = *v10;
  sub_2320DACC0((uint64_t)v10);
  v13(a1, a2);
  v17 = v7[8];
  sub_2320DACC0((uint64_t)v7);
  v18 = sub_2321D5B2C(v14, (uint64_t)v15, v17);

  return v18;
}

uint64_t sub_2320D8AE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  NSObject *v18;
  void *v19;
  void *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v23 = a3;
  v24 = a4;
  v25 = a7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v14 = type metadata accessor for SummaryModelProcessingResult(0, AssociatedTypeWitness, v12, v13);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v22 - v16;
  v18 = sub_2320D89A8(a5, a6);
  v20 = v19;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 80))(a1, a2, v23, v24, a5, a6);
  sub_2320D77DC((uint64_t)v17, v18, v20, a5, a6, v25);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
}

void sub_2320D8C00(NSObject *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id *v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  id v45;
  id v46;
  NSObject *v47;
  void *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  id v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t);
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  BOOL v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t, uint64_t);
  char *v75;
  NSObject *v76;
  os_log_type_t v77;
  int v78;
  uint64_t v79;
  void *v80;
  void (*v81)(uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  void (*v86)(char *, uint64_t);
  char *v87;
  id v88;
  id v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  os_log_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(char *, uint64_t);
  int v98;
  id v99;
  unsigned __int8 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int v104;
  int v105;
  id v106;
  unsigned __int8 v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t inited;
  uint64_t v115;
  id v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  id v120;
  id v121;
  id v122;
  id v123;
  id v124;
  void (*v125)(uint64_t, uint64_t);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  id v129;
  unint64_t v130;
  id v131;
  char *v132;
  void (*v133)(char *, uint64_t, uint64_t);
  char *v134;
  uint64_t v135;
  char *v136;
  void (*v137)(char *, uint64_t, uint64_t);
  uint64_t v138;
  uint64_t v139;
  NSObject *v140;
  os_log_type_t v141;
  int v142;
  _BOOL4 v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  void *v148;
  uint64_t v149;
  void (*v150)(uint64_t, uint64_t);
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  unint64_t v154;
  void (*v155)(char *, uint64_t);
  char *v156;
  id v157;
  id v158;
  uint64_t v159;
  unint64_t v160;
  unint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  unint64_t v165;
  void (*v166)(char *, uint64_t);
  char *v167;
  uint64_t v168;
  unint64_t v169;
  char *v170;
  os_log_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  void (*v176)(char *, uint64_t);
  void (*v177)(char *, uint64_t);
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  char *v183;
  char *v184;
  uint64_t v185;
  char *v186;
  char *v187;
  char *v188;
  uint64_t v189;
  char *v190;
  char *v191;
  char *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  id *v203;
  char *v204;
  void (*v205)(uint64_t, uint64_t);
  uint64_t v206;
  uint64_t AssociatedConformanceWitness;
  NSObject *v208;
  id v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  char v218;
  uint64_t v219[2];
  uint64_t v220;

  v209 = a2;
  v208 = a1;
  v200 = a6;
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v180 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v179 = (char *)&v178 - v11;
  v202 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x24BDAC7A8](v202);
  v178 = (uint64_t)&v178 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v181 = AssociatedTypeWitness;
  v15 = type metadata accessor for HostingConfigurationContent(0, AssociatedTypeWitness, v13, v14);
  v189 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v190 = (char *)&v178 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v188 = (char *)&v178 - v19;
  v201 = *(_QWORD *)(a4 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v197 = (char *)&v178 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v183 = (char *)&v178 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v187 = (char *)&v178 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v182 = (char *)&v178 - v26;
  v196 = sub_23220039C();
  v195 = *(_QWORD *)(v196 - 8);
  v27 = MEMORY[0x24BDAC7A8](v196);
  v186 = (char *)&v178 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v184 = (char *)&v178 - v29;
  sub_2320002B4(0, qword_2541B78E0, (void (*)(uint64_t))MEMORY[0x24BE47DF8]);
  MEMORY[0x24BDAC7A8](v30);
  v194 = (uint64_t)&v178 - v31;
  v199 = sub_2321FE308();
  v198 = *(_QWORD *)(v199 - 8);
  MEMORY[0x24BDAC7A8](v199);
  v215 = (char *)&v178 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  v34 = MEMORY[0x24BDAC7A8](v33);
  v193 = (char *)&v178 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = MEMORY[0x24BDAC7A8](v34);
  v192 = (char *)&v178 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v191 = (char *)&v178 - v39;
  MEMORY[0x24BDAC7A8](v38);
  v41 = (id *)((char *)&v178 - v40);
  v211 = sub_2321FE194();
  v206 = *(_QWORD *)(v211 - 8);
  MEMORY[0x24BDAC7A8](v211);
  v212 = a4;
  v213 = (uint64_t)&v178 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v204 = (char *)(a3 + *(int *)(v15 + 32));
  v43 = *v204;
  v216 = v6;
  sub_2320DA068(v43, a4, a5, v213);
  v219[0] = sub_232200EC4();
  v219[1] = v44;
  sub_232200F48();
  v205 = *(void (**)(uint64_t, uint64_t))(a5 + 72);
  v205(a4, a5);
  v45 = v41[2];
  v203 = v41;
  sub_2320DACC0((uint64_t)v41);
  v46 = objc_msgSend(v45, sel_identifier);

  sub_232200EC4();
  sub_232200F48();
  swift_bridgeObjectRelease();
  swift_checkMetadataState();
  v185 = v15;
  v47 = *(NSObject **)(a5 + 64);
  v214 = a5;
  v48 = (void *)((uint64_t (*)(uint64_t, uint64_t))v47)(v212, a5);
  v49 = (void *)sub_2322011C4();

  v50 = a3;
  v51 = v213;
  v52 = v210;
  sub_2321FE200();
  if (v52)
  {
    (*(void (**)(uint64_t, uint64_t))(v206 + 8))(v51, v211);
    swift_bridgeObjectRelease();

    return;
  }
  AssociatedConformanceWitness = v50;
  v210 = 0;
  v53 = v211;
  swift_bridgeObjectRelease();

  v54 = (void *)objc_opt_self();
  v55 = v216;
  v56 = v212;
  v208 = v47;
  v57 = (void *)((uint64_t (*)(uint64_t, uint64_t))v47)(v212, v214);
  v58 = objc_msgSend(v54, sel_sharedInstanceForHealthStore_, v57);

  if (v58)
  {
    v59 = (uint64_t)v203;
    v60 = v205;
    v205(v56, v214);
    v61 = *(id *)(v59 + 16);
    sub_2320DACC0(v59);
    v62 = objc_msgSend(v58, sel_displayTypeForObjectType_, v61);

    if (v62)
    {
      v209 = v62;
      v220 = MEMORY[0x24BEE4B08];
      v63 = (uint64_t)v191;
      v64 = v214;
      v60(v56, v214);
      v65 = *(unsigned __int8 *)(v63 + 8);
      sub_2320DACC0(v63);
      v66 = v65 == 1;
      v67 = (uint64_t)v192;
      if (v66)
      {
        if (*v204 == 1)
          v68 = sub_2321FE518();
        else
          v68 = sub_2321FE50C();
        sub_2321A1880(v219, v68, v69);
        swift_bridgeObjectRelease();
      }
      v60(v56, v64);
      v98 = *(unsigned __int8 *)(v67 + 8);
      sub_2320DACC0(v67);
      v60(v56, v64);
      v99 = *(id *)(v59 + 16);
      sub_2320DACC0(v59);
      v100 = sub_2320DA164();

      if (v98 == 1 && (v100 & 1) != 0)
      {
        v101 = sub_2321FE530();
        sub_2321A1880(v219, v101, v102);
        swift_bridgeObjectRelease();
      }
      v103 = (uint64_t)v193;
      v60(v56, v64);
      v104 = *(unsigned __int8 *)(v103 + 8);
      sub_2320DACC0(v103);
      v105 = *v204;
      v60(v56, v64);
      v106 = *(id *)(v59 + 16);
      sub_2320DACC0(v59);
      v107 = sub_2320DA164();

      v108 = v209;
      if (v104 == 1 && v105 && (v107 & 1) != 0)
      {
        v109 = sub_2321FF79C();
        v110 = *(_QWORD *)(v109 + 16);
        if (v110)
        {
          v111 = (uint64_t *)(v109 + 40);
          do
          {
            v113 = *(v111 - 1);
            v112 = *v111;
            swift_bridgeObjectRetain();
            sub_2321A1880(v219, v113, v112);
            swift_bridgeObjectRelease();
            v111 += 2;
            --v110;
          }
          while (v110);
        }
        swift_bridgeObjectRelease();
        v59 = (uint64_t)v203;
      }
      sub_2321FE2E4();
      sub_232027434();
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_232210D20;
      v115 = v214;
      v205(v56, v214);
      v116 = *(id *)(v59 + 16);
      sub_2320DACC0(v59);
      *(_QWORD *)(inited + 32) = v116;
      v219[0] = inited;
      sub_232201050();
      v117 = v219[0];
      if ((unint64_t)v219[0] >> 62)
      {
        swift_bridgeObjectRetain();
        v118 = sub_232201998();
        swift_bridgeObjectRelease();
      }
      else
      {
        v118 = *(_QWORD *)((v219[0] & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v119 = v202;
      if (v118)
        sub_2321A9D34(v117);
      swift_bridgeObjectRelease();
      sub_2321FE260();
      sub_2320DA250(v56, v115);
      sub_2321FE230();
      sub_2320DA2D8(v56, v115);
      sub_2321FE2B4();
      sub_2320004AC((uint64_t)&v204[*(int *)(v119 + 20)], v194, qword_2541B78E0, (void (*)(uint64_t))MEMORY[0x24BE47DF8]);
      sub_2321FE278();
      v120 = objc_msgSend(v108, sel_localization);
      v121 = objc_msgSend(v120, sel_displayName);

      sub_232200EC4();
      sub_2321FE23C();
      v122 = objc_msgSend(v108, sel_localization);
      v123 = objc_msgSend(v122, sel_summary);

      if (v123)
      {
        sub_232200EC4();

      }
      sub_2321FE26C();
      v124 = objc_msgSend(v108, sel_displayCategory);
      sub_2321FE290();

      v125 = v205;
      v126 = *(_QWORD *)&v204[*(int *)(v202 + 24)];
      v127 = v216;
      v128 = v214;
      v205(v56, v214);
      v129 = *(id *)(v59 + 16);
      sub_2320DACC0(v59);
      v130 = sub_232131F00(v129);

      v219[0] = v126;
      swift_bridgeObjectRetain();
      sub_23209D274(v130);
      sub_2321AAADC(v219[0]);
      swift_bridgeObjectRelease();
      sub_2321FE2C0();
      v125(v56, v128);
      v131 = *(id *)(v59 + 16);
      sub_2320DACC0(v59);
      LODWORD(v129) = objc_msgSend(v131, sel_isAbleToWriteHealthSensitiveLogs);

      if ((_DWORD)v129)
      {
        v132 = v184;
        sub_232200318();
        v133 = *(void (**)(char *, uint64_t, uint64_t))(v201 + 16);
        v134 = v182;
        v133(v182, v127, v56);
        v135 = v127;
        v136 = v132;
        v133(v187, v135, v56);
        v137 = *(void (**)(char *, uint64_t, uint64_t))(v189 + 16);
        v138 = AssociatedConformanceWitness;
        v139 = v185;
        v137(v188, AssociatedConformanceWitness, v185);
        v137(v190, v138, v139);
        v140 = sub_232200390();
        v141 = sub_2322012FC();
        v142 = v141;
        v143 = os_log_type_enabled(v140, v141);
        v144 = v213;
        v145 = v211;
        if (v143)
        {
          v146 = v128;
          v147 = swift_slowAlloc();
          v216 = swift_slowAlloc();
          v219[0] = v216;
          *(_DWORD *)v147 = 136315907;
          v197 = (char *)(v147 + 4);
          LODWORD(AssociatedConformanceWitness) = v142;
          v148 = (void *)((uint64_t (*)(uint64_t, uint64_t))v208)(v56, v146);
          v208 = v140;
          v149 = (uint64_t)v203;
          v150 = v205;
          v205(v56, v146);
          sub_2320DACC0(v149);
          v151 = sub_232088D50();
          v152 = v56;
          v154 = v153;

          v217 = sub_232013174(v151, v154, v219);
          v204 = &v218;
          sub_232201710();
          swift_bridgeObjectRelease();
          v155 = *(void (**)(char *, uint64_t))(v201 + 8);
          v155(v134, v152);
          *(_WORD *)(v147 + 12) = 2080;
          v201 = v147 + 14;
          v156 = v187;
          v150(v152, v146);
          v157 = *(id *)(v149 + 16);
          sub_2320DACC0(v149);
          v158 = objc_msgSend(v157, sel_sensitiveLoggingIdentifier);

          v159 = sub_232200EC4();
          v161 = v160;

          v217 = sub_232013174(v159, v161, v219);
          sub_232201710();
          swift_bridgeObjectRelease();
          v155(v156, v152);
          *(_WORD *)(v147 + 22) = 2080;
          v162 = v185;
          v163 = v188;
          sub_2320DAD08((uint64_t)&v188[*(int *)(v185 + 32)], v178);
          v164 = sub_232200F00();
          v217 = sub_232013174(v164, v165, v219);
          sub_232201710();
          swift_bridgeObjectRelease();
          v166 = *(void (**)(char *, uint64_t))(v189 + 8);
          v166(v163, v162);
          *(_WORD *)(v147 + 32) = 2081;
          v167 = v190;
          (*(void (**)(char *, char *, uint64_t))(v180 + 16))(v179, v190, v181);
          v168 = sub_232200F00();
          v217 = sub_232013174(v168, v169, v219);
          sub_232201710();
          swift_bridgeObjectRelease();
          v166(v167, v162);
          v170 = v215;
          v171 = v208;
          _os_log_impl(&dword_231FFB000, v208, (os_log_type_t)AssociatedConformanceWitness, "%s: Created pluginFeedItem for hkType=%s with metadata=%s, viewModel=%{private}s", (uint8_t *)v147, 0x2Au);
          v172 = v216;
          swift_arrayDestroy();
          MEMORY[0x2348FF468](v172, -1, -1);
          MEMORY[0x2348FF468](v147, -1, -1);

          (*(void (**)(char *, uint64_t))(v195 + 8))(v184, v196);
          (*(void (**)(uint64_t, uint64_t))(v206 + 8))(v213, v211);
          v173 = v200;
          v174 = v199;
          v175 = v198;
LABEL_37:
          (*(void (**)(uint64_t, char *, uint64_t))(v175 + 32))(v173, v170, v174);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v175 + 56))(v173, 0, 1, v174);
          return;
        }

        v176 = *(void (**)(char *, uint64_t))(v189 + 8);
        v176(v190, v139);
        v176(v188, v139);
        v177 = *(void (**)(char *, uint64_t))(v201 + 8);
        v177(v187, v56);
        v177(v134, v56);
        (*(void (**)(char *, uint64_t))(v195 + 8))(v136, v196);
        (*(void (**)(uint64_t, uint64_t))(v206 + 8))(v144, v145);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v206 + 8))(v213, v211);

      }
      v173 = v200;
      v174 = v199;
      v175 = v198;
      v170 = v215;
      goto LABEL_37;
    }
    v70 = v53;
    v71 = v214;
    v72 = v186;
    sub_232200318();
    v73 = v201;
    v74 = *(void (**)(char *, uint64_t, uint64_t))(v201 + 16);
    v75 = v183;
    v74(v183, v55, v56);
    v74(v197, v55, v56);
    v76 = sub_232200390();
    v77 = sub_2322012E4();
    v78 = v77;
    if (os_log_type_enabled(v76, v77))
    {
      v79 = swift_slowAlloc();
      v216 = swift_slowAlloc();
      v219[0] = v216;
      *(_DWORD *)v79 = 136315394;
      AssociatedConformanceWitness = v79 + 4;
      LODWORD(v209) = v78;
      v80 = (void *)((uint64_t (*)(uint64_t, uint64_t))v208)(v56, v71);
      v208 = v76;
      v81 = v205;
      v205(v56, v71);
      sub_2320DACC0(v59);
      v82 = sub_232088D50();
      v83 = v56;
      v85 = v84;

      v220 = sub_232013174(v82, v85, v219);
      sub_232201710();
      swift_bridgeObjectRelease();
      v86 = *(void (**)(char *, uint64_t))(v201 + 8);
      v86(v75, v83);
      *(_WORD *)(v79 + 12) = 2080;
      AssociatedConformanceWitness = v79 + 14;
      v87 = v197;
      v81(v83, v71);
      v88 = *(id *)(v59 + 16);
      sub_2320DACC0(v59);
      v89 = objc_msgSend(v88, sel_sensitiveLoggingIdentifier);

      v90 = sub_232200EC4();
      v92 = v91;

      v220 = sub_232013174(v90, v92, v219);
      sub_232201710();
      swift_bridgeObjectRelease();
      v86(v87, v83);
      v93 = v208;
      _os_log_impl(&dword_231FFB000, v208, (os_log_type_t)v209, "%s:: No display type found for %s", (uint8_t *)v79, 0x16u);
      v94 = v216;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v94, -1, -1);
      MEMORY[0x2348FF468](v79, -1, -1);

      (*(void (**)(char *, uint64_t))(v195 + 8))(v186, v196);
      v95 = v198;
      v96 = v199;
      (*(void (**)(char *, uint64_t))(v198 + 8))(v215, v199);
      (*(void (**)(uint64_t, uint64_t))(v206 + 8))(v213, v211);
    }
    else
    {

      v97 = *(void (**)(char *, uint64_t))(v73 + 8);
      v97(v197, v56);
      v97(v75, v56);
      (*(void (**)(char *, uint64_t))(v195 + 8))(v72, v196);
      v95 = v198;
      v96 = v199;
      (*(void (**)(char *, uint64_t))(v198 + 8))(v215, v199);
      (*(void (**)(uint64_t, uint64_t))(v206 + 8))(v213, v70);
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v95 + 56))(v200, 1, 1, v96);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2320DA068@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  unsigned int *v16;
  uint64_t v17;

  v8 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a3 + 72))(a2, a3);
  v11 = v10[8];
  sub_2320DACC0((uint64_t)v10);
  if (v11 == 1)
  {
    v12 = *MEMORY[0x24BE47410];
    v13 = sub_2321FE194();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(a4, v12, v13);
  }
  else
  {
    v15 = sub_2321FE194();
    if ((a1 & 1) != 0)
      v16 = (unsigned int *)MEMORY[0x24BE47460];
    else
      v16 = (unsigned int *)MEMORY[0x24BE47490];
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(a4, *v16, v15);
  }
}

id sub_2320DA164()
{
  void *v0;
  id result;
  void *v2;
  char v3;
  id v4;
  char v5;
  char v6;
  id v7;
  char v8;

  v0 = (void *)objc_opt_self();
  result = objc_msgSend(v0, sel_appleBalanceMetricsType);
  if (result)
  {
    v2 = result;
    sub_2320DAD4C();
    v3 = sub_2322016A4();

    if ((v3 & 1) != 0
      || (v4 = objc_msgSend(v0, sel_audiogramSampleType),
          v5 = sub_2322016A4(),
          v4,
          (v5 & 1) != 0))
    {
      v6 = 0;
    }
    else
    {
      v7 = objc_msgSend(v0, sel_visionPrescriptionType);
      v8 = sub_2322016A4();

      v6 = v8 ^ 1;
    }
    return (id)(v6 & 1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL sub_2320DA250(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 72))(a1, a2);
  LOBYTE(a2) = v6[8];
  sub_2320DACC0((uint64_t)v6);
  return (a2 & 1) == 0;
}

uint64_t sub_2320DA2D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  void *v18;
  char v19;
  void (*v20)(uint64_t, uint64_t);
  char v21;
  char v22;
  uint64_t v23;
  id v24;
  uint64_t v26;

  v3 = v2;
  v6 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (id *)((char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v26 - v11;
  v13 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 64))(a1, a2);
  v17 = (void *)sub_2322011C4();

  v18 = (void *)sub_2321FE1D0();
  v19 = sub_2321FE1C4();

  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v3, a1);
  if ((v19 & 1) != 0)
  {
    v20 = *(void (**)(uint64_t, uint64_t))(a2 + 72);
    v20(a1, a2);
    v21 = v12[8];
    sub_2320DACC0((uint64_t)v12);
    if ((v21 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, a1);
LABEL_8:
      v20(a1, a2);
      v24 = v9[2];
      sub_2320DACC0((uint64_t)v9);
      v23 = sub_232201140();

      return v23;
    }
    v22 = sub_232201ADC();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, a1);
    if ((v22 & 1) != 0)
      goto LABEL_8;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, a1);
  }
  return 0;
}

BOOL sub_2320DA4E8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  int *v33;
  uint64_t v34;
  void (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  void (*v40)(uint64_t);
  uint64_t v41;
  void (*v42)(uint64_t);
  unint64_t *v43;
  unint64_t *v44;
  void (*v45)(uint64_t);
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  void (*v52)(uint64_t);
  unsigned __int8 *v53;
  unsigned __int8 *v54;
  void (*v55)(uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int (*v62)(uint64_t, uint64_t, uint64_t);
  void (*v63)(uint64_t);
  uint64_t v64;
  void (*v65)(uint64_t);
  char *v66;
  void (*v67)(uint64_t);
  char v68;
  void (*v69)(char *, uint64_t);
  char *v71;
  unsigned __int8 *v72;
  unsigned __int8 *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;

  v4 = sub_2321FD8B8();
  v5 = (void (*)(uint64_t))MEMORY[0x24BDCB878];
  v79 = *(_QWORD *)(v4 - 8);
  v80 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v74 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320DAC10(0, &qword_255F9E288, &qword_2541B7F60, v5);
  v76 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v71 - v8;
  sub_2320002B4(0, &qword_2541B7F60, v5);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v75 = (uint64_t)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v77 = (uint64_t)&v71 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v78 = (uint64_t)&v71 - v15;
  v16 = sub_2321FE65C();
  v17 = (void (*)(uint64_t))MEMORY[0x24BE47DF8];
  v82 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v81 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320DAC10(0, &qword_255F9E290, qword_2541B78E0, v17);
  v21 = v20;
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v71 - v22;
  sub_2320002B4(0, qword_2541B78E0, v17);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v71 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v25);
  v30 = (char *)&v71 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&v71 - v31;
  if (*a1 != *a2)
    return 0;
  v71 = v9;
  v33 = (int *)type metadata accessor for SnidgetFeedItemMetadata(0);
  v34 = v33[5];
  v72 = a1;
  v35 = (void (*)(uint64_t))MEMORY[0x24BE47DF8];
  sub_2320004AC((uint64_t)&a1[v34], (uint64_t)v32, qword_2541B78E0, (void (*)(uint64_t))MEMORY[0x24BE47DF8]);
  v36 = v33[5];
  v73 = a2;
  sub_2320004AC((uint64_t)&a2[v36], (uint64_t)v30, qword_2541B78E0, v35);
  v37 = (uint64_t)&v23[*(int *)(v21 + 48)];
  sub_2320004AC((uint64_t)v32, (uint64_t)v23, qword_2541B78E0, v35);
  sub_2320004AC((uint64_t)v30, v37, qword_2541B78E0, v35);
  v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
  v39 = v82;
  if (v38((uint64_t)v23, 1, v82) == 1)
  {
    v40 = (void (*)(uint64_t))MEMORY[0x24BE47DF8];
    sub_23200040C((uint64_t)v30, qword_2541B78E0, (void (*)(uint64_t))MEMORY[0x24BE47DF8]);
    sub_23200040C((uint64_t)v32, qword_2541B78E0, v40);
    if (v38(v37, 1, v39) == 1)
    {
      sub_23200040C((uint64_t)v23, qword_2541B78E0, (void (*)(uint64_t))MEMORY[0x24BE47DF8]);
      goto LABEL_10;
    }
LABEL_7:
    v43 = &qword_255F9E290;
    v44 = qword_2541B78E0;
    v45 = (void (*)(uint64_t))MEMORY[0x24BE47DF8];
    v46 = (uint64_t)v23;
LABEL_8:
    sub_2320DAC70(v46, v43, v44, v45);
    return 0;
  }
  v41 = v18;
  sub_2320004AC((uint64_t)v23, (uint64_t)v27, qword_2541B78E0, (void (*)(uint64_t))MEMORY[0x24BE47DF8]);
  if (v38(v37, 1, v39) == 1)
  {
    v42 = (void (*)(uint64_t))MEMORY[0x24BE47DF8];
    sub_23200040C((uint64_t)v30, qword_2541B78E0, (void (*)(uint64_t))MEMORY[0x24BE47DF8]);
    sub_23200040C((uint64_t)v32, qword_2541B78E0, v42);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v27, v39);
    goto LABEL_7;
  }
  v47 = v81;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 32))(v81, v37, v39);
  sub_232000590(&qword_255F9E2A0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47DF8], MEMORY[0x24BE47E08]);
  v48 = v39;
  v49 = sub_232200E64();
  v50 = *(void (**)(char *, uint64_t))(v41 + 8);
  v50(v47, v48);
  v51 = (uint64_t)v30;
  v52 = (void (*)(uint64_t))MEMORY[0x24BE47DF8];
  sub_23200040C(v51, qword_2541B78E0, (void (*)(uint64_t))MEMORY[0x24BE47DF8]);
  sub_23200040C((uint64_t)v32, qword_2541B78E0, v52);
  v50(v27, v48);
  sub_23200040C((uint64_t)v23, qword_2541B78E0, v52);
  if ((v49 & 1) == 0)
    return 0;
LABEL_10:
  v54 = v72;
  v53 = v73;
  if ((sub_232043CD8(*(_QWORD *)&v72[v33[6]], *(_QWORD *)&v73[v33[6]]) & 1) == 0)
    return 0;
  v55 = (void (*)(uint64_t))MEMORY[0x24BDCB878];
  v56 = v78;
  sub_2320004AC((uint64_t)&v54[v33[7]], v78, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  v57 = v77;
  sub_2320004AC((uint64_t)&v53[v33[7]], v77, &qword_2541B7F60, v55);
  v58 = (uint64_t)v71;
  v59 = (uint64_t)&v71[*(int *)(v76 + 48)];
  sub_2320004AC(v56, (uint64_t)v71, &qword_2541B7F60, v55);
  sub_2320004AC(v57, v59, &qword_2541B7F60, v55);
  v60 = v79;
  v61 = v80;
  v62 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48);
  if (v62(v58, 1, v80) == 1)
  {
    v63 = (void (*)(uint64_t))MEMORY[0x24BDCB878];
    sub_23200040C(v57, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
    sub_23200040C(v56, &qword_2541B7F60, v63);
    if (v62(v59, 1, v61) == 1)
    {
      sub_23200040C(v58, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
      return 1;
    }
    goto LABEL_16;
  }
  v64 = v75;
  sub_2320004AC(v58, v75, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  if (v62(v59, 1, v61) == 1)
  {
    v65 = (void (*)(uint64_t))MEMORY[0x24BDCB878];
    sub_23200040C(v57, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
    sub_23200040C(v56, &qword_2541B7F60, v65);
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v64, v61);
LABEL_16:
    v43 = &qword_255F9E288;
    v44 = &qword_2541B7F60;
    v45 = (void (*)(uint64_t))MEMORY[0x24BDCB878];
    v46 = v58;
    goto LABEL_8;
  }
  v66 = v74;
  (*(void (**)(char *, uint64_t, uint64_t))(v60 + 32))(v74, v59, v61);
  v67 = (void (*)(uint64_t))MEMORY[0x24BDCB878];
  sub_232000590(&qword_255F9E298, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], MEMORY[0x24BDCB8A0]);
  v68 = sub_232200E64();
  v69 = *(void (**)(char *, uint64_t))(v60 + 8);
  v69(v66, v61);
  sub_23200040C(v57, &qword_2541B7F60, v67);
  sub_23200040C(v56, &qword_2541B7F60, v67);
  v69((char *)v64, v61);
  sub_23200040C(v58, &qword_2541B7F60, v67);
  return (v68 & 1) != 0;
}

void sub_2320DAC10(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v6;

  if (!*a2)
  {
    sub_2320002B4(255, a3, a4);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t sub_2320DAC70(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v5;

  sub_2320DAC10(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t type metadata accessor for SnidgetFeedItemGeneratorRequest(uint64_t a1)
{
  return sub_23201A14C(a1, qword_2541B4118);
}

uint64_t sub_2320DACC0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for HostingConfigurationContent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_232043E5C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HostingConfigurationContent);
}

uint64_t sub_2320DAD08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SnidgetFeedItemMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_2320DAD4C()
{
  unint64_t result;

  result = qword_2541B74A0;
  if (!qword_2541B74A0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2541B74A0);
  }
  return result;
}

uint64_t sub_2320DAD88()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_2320DAD90()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for SnidgetFeedItemMetadata(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_2320DAE20(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  size_t v15;
  int v16;
  uint64_t v17;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  void *v31;
  const void *v32;
  _QWORD *v33;
  _QWORD *v34;
  void *v35;
  const void *v36;
  unsigned int (*v37)(const void *, uint64_t, uint64_t);
  size_t __n;
  size_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v44 = sub_2321FE65C();
  v7 = *(_QWORD *)(v44 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = sub_2321FD8B8();
  v46 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = v11 | v8 | 7;
  v13 = v8 + 1;
  if (*(_DWORD *)(v7 + 84))
    v14 = *(_QWORD *)(v7 + 64);
  else
    v14 = *(_QWORD *)(v7 + 64) + 1;
  v45 = *(_QWORD *)(v9 - 8);
  v15 = *(_QWORD *)(v10 + 64);
  if (!*(_DWORD *)(v10 + 84))
    ++v15;
  v16 = *(_DWORD *)(v5 + 80);
  v17 = v12 | v16 & 0xF8;
  if (v17 != 7
    || ((*(_DWORD *)(v10 + 80) | v8 | v16) & 0x100000) != 0
    || v15
     + ((v11
       + 8
       + ((v14 + 7 + ((v8 + 1) & ~(unint64_t)v8)) & 0xFFFFFFFFFFFFFFF8)) & ~v11)
     + (((v11 | v8) + ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v12) > 0x18)
  {
    v20 = *a2;
    *a1 = *a2;
    v21 = v20 + ((v17 + 16) & ~v17);
    swift_retain();
  }
  else
  {
    __n = v14;
    v40 = v15;
    v42 = v14 + 7;
    v43 = v11 + 8;
    v41 = ~v12;
    v22 = ~(unint64_t)v8;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, v4);
    v23 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v24 = (uint64_t)a2 + v6 + 7;
    v25 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFF8);
    v26 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFFF8) + 8);
    if ((v26 & 0x3000000000000000) != 0)
    {
      *(_OWORD *)v23 = *(_OWORD *)v25;
    }
    else
    {
      v27 = *v25;
      sub_2320169E4(*v25, *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFFF8) + 8));
      *(_QWORD *)v23 = v27;
      *(_QWORD *)(v23 + 8) = v26;
    }
    v28 = ~v11;
    v29 = (_BYTE *)((v23 + v12 + 16) & v41);
    v30 = (_BYTE *)(((unint64_t)v25 + v12 + 16) & v41);
    *v29 = *v30;
    v31 = (void *)((unint64_t)&v29[v13] & v22);
    v32 = (const void *)((unint64_t)&v30[v13] & v22);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(v32, 1, v44))
    {
      memcpy(v31, v32, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v31, v32, v44);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v31, 0, 1, v44);
    }
    v33 = (_QWORD *)(((unint64_t)v31 + v42) & 0xFFFFFFFFFFFFFFF8);
    v34 = (_QWORD *)(((unint64_t)v32 + v42) & 0xFFFFFFFFFFFFFFF8);
    *v33 = *v34;
    v35 = (void *)(((unint64_t)v33 + v43) & v28);
    v36 = (const void *)(((unint64_t)v34 + v43) & v28);
    v37 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v45 + 48);
    swift_bridgeObjectRetain();
    if (v37(v36, 1, v46))
    {
      memcpy(v35, v36, v40);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v45 + 16))(v35, v36, v46);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v35, 0, 1, v46);
    }
    return a1;
  }
  return (uint64_t *)v21;
}

uint64_t sub_2320DB0EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (uint64_t *)((a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8);
  v5 = v4[1];
  if ((v5 & 0x3000000000000000) == 0)
    sub_232003ED4(*v4, v5);
  v6 = sub_2321FE65C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = sub_2321FD8B8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v8 + (((unint64_t)v4 + (v8 | v11 | 7) + 16) & ~(v8 | v11 | 7)) + 1) & ~v8;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v12, v6);
  v13 = v12 + *(_QWORD *)(v7 + 64);
  if (!*(_DWORD *)(v7 + 84))
    ++v13;
  v14 = (v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  v15 = (v11 + v14 + 8) & ~v11;
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v15, v9);
  return result;
}

uint64_t sub_2320DB230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  void *v21;
  const void *v22;
  int v23;
  size_t v24;
  size_t v25;
  size_t v26;
  _QWORD *v27;
  _QWORD *v28;
  void *v29;
  const void *v30;
  unsigned int (*v31)(const void *, uint64_t, uint64_t);
  size_t v32;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = v6 + a2;
  v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFF8);
  v10 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFFF8) + 8);
  if ((v10 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)v7 = *(_OWORD *)v9;
  }
  else
  {
    v11 = *v9;
    sub_2320169E4(*v9, *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFFF8) + 8));
    *(_QWORD *)v7 = v11;
    *(_QWORD *)(v7 + 8) = v10;
  }
  v12 = sub_2321FE65C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = sub_2321FD8B8();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = v14 | v17 | 7;
  v19 = (_BYTE *)((v7 + v18 + 16) & ~v18);
  v20 = (_BYTE *)(((unint64_t)v9 + v18 + 16) & ~v18);
  *v19 = *v20;
  v21 = (void *)((unint64_t)&v19[v14 + 1] & ~v14);
  v22 = (const void *)((unint64_t)&v20[v14 + 1] & ~v14);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v22, 1, v12))
  {
    v23 = *(_DWORD *)(v13 + 84);
    v24 = *(_QWORD *)(v13 + 64);
    if (v23)
      v25 = v24;
    else
      v25 = v24 + 1;
    memcpy(v21, v22, v25);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v21, v22, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v21, 0, 1, v12);
    v23 = *(_DWORD *)(v13 + 84);
    v24 = *(_QWORD *)(v13 + 64);
  }
  if (v23)
    v26 = v24;
  else
    v26 = v24 + 1;
  v27 = (_QWORD *)(((unint64_t)v21 + v26 + 7) & 0xFFFFFFFFFFFFFFF8);
  v28 = (_QWORD *)(((unint64_t)v22 + v26 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v27 = *v28;
  v29 = (void *)(((unint64_t)v27 + v17 + 8) & ~v17);
  v30 = (const void *)(((unint64_t)v28 + v17 + 8) & ~v17);
  v31 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
  swift_bridgeObjectRetain();
  if (v31(v30, 1, v15))
  {
    if (*(_DWORD *)(v16 + 84))
      v32 = *(_QWORD *)(v16 + 64);
    else
      v32 = *(_QWORD *)(v16 + 64) + 1;
    memcpy(v29, v30, v32);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v29, v30, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v29, 0, 1, v15);
  }
  return a1;
}

uint64_t sub_2320DB43C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  void *v22;
  void *v23;
  uint64_t (*v24)(void *, uint64_t, uint64_t);
  int v25;
  int v26;
  size_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  void *v31;
  void *v32;
  uint64_t (*v33)(void *, uint64_t, uint64_t);
  int v34;
  size_t v35;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (uint64_t *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = v7[1];
  v10 = *(_QWORD *)(v8 + 8);
  v11 = v10 & 0x3000000000000000;
  if ((v9 & 0x3000000000000000) != 0)
  {
    if (!v11)
    {
      v12 = *(_QWORD *)v8;
      sub_2320169E4(*(_QWORD *)v8, *(_QWORD *)(v8 + 8));
      *v7 = v12;
      v7[1] = v10;
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    sub_232003ED4(*v7, v9);
LABEL_6:
    *(_OWORD *)v7 = *(_OWORD *)v8;
    goto LABEL_7;
  }
  v37 = *(_QWORD *)v8;
  sub_2320169E4(*(_QWORD *)v8, *(_QWORD *)(v8 + 8));
  v38 = *v7;
  v39 = v7[1];
  *v7 = v37;
  v7[1] = v10;
  sub_232003ED4(v38, v39);
LABEL_7:
  v13 = sub_2321FE65C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = sub_2321FD8B8();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = v15 | v18 | 7;
  v20 = (_BYTE *)(((unint64_t)v7 + v19 + 16) & ~v19);
  v21 = (_BYTE *)((v8 + v19 + 16) & ~v19);
  *v20 = *v21;
  v22 = (void *)((unint64_t)&v20[v15 + 1] & ~v15);
  v23 = (void *)((unint64_t)&v21[v15 + 1] & ~v15);
  v24 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  v25 = v24(v22, 1, v13);
  v26 = v24(v23, 1, v13);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v22, v23, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v22, 0, 1, v13);
      goto LABEL_16;
    }
  }
  else
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v22, v23, v13);
      goto LABEL_16;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v22, v13);
  }
  if (*(_DWORD *)(v14 + 84))
    v27 = *(_QWORD *)(v14 + 64);
  else
    v27 = *(_QWORD *)(v14 + 64) + 1;
  memcpy(v22, v23, v27);
LABEL_16:
  if (*(_DWORD *)(v14 + 84))
    v28 = *(_QWORD *)(v14 + 64);
  else
    v28 = *(_QWORD *)(v14 + 64) + 1;
  v29 = (_QWORD *)(((unint64_t)v22 + v28 + 7) & 0xFFFFFFFFFFFFFFF8);
  v30 = (_QWORD *)(((unint64_t)v23 + v28 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v29 = *v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v31 = (void *)(((unint64_t)v29 + v18 + 8) & ~v18);
  v32 = (void *)(((unint64_t)v30 + v18 + 8) & ~v18);
  v33 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  LODWORD(v29) = v33(v31, 1, v16);
  v34 = v33(v32, 1, v16);
  if ((_DWORD)v29)
  {
    if (!v34)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 16))(v31, v32, v16);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v31, 0, 1, v16);
      return a1;
    }
  }
  else
  {
    if (!v34)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 24))(v31, v32, v16);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v31, v16);
  }
  if (*(_DWORD *)(v17 + 84))
    v35 = *(_QWORD *)(v17 + 64);
  else
    v35 = *(_QWORD *)(v17 + 64) + 1;
  memcpy(v31, v32, v35);
  return a1;
}

uint64_t sub_2320DB714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  void *v18;
  const void *v19;
  int v20;
  size_t v21;
  size_t v22;
  size_t v23;
  _QWORD *v24;
  _QWORD *v25;
  void *v26;
  const void *v27;
  size_t v28;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = sub_2321FE65C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = sub_2321FD8B8();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v11 | v14 | 7;
  v16 = (_BYTE *)(((unint64_t)v7 + v15 + 16) & ~v15);
  v17 = (_BYTE *)(((unint64_t)v8 + v15 + 16) & ~v15);
  *v16 = *v17;
  v18 = (void *)((unint64_t)&v16[v11 + 1] & ~v11);
  v19 = (const void *)((unint64_t)&v17[v11 + 1] & ~v11);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v19, 1, v9))
  {
    v20 = *(_DWORD *)(v10 + 84);
    v21 = *(_QWORD *)(v10 + 64);
    if (v20)
      v22 = v21;
    else
      v22 = v21 + 1;
    memcpy(v18, v19, v22);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v18, v19, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v18, 0, 1, v9);
    v20 = *(_DWORD *)(v10 + 84);
    v21 = *(_QWORD *)(v10 + 64);
  }
  if (v20)
    v23 = v21;
  else
    v23 = v21 + 1;
  v24 = (_QWORD *)(((unint64_t)v18 + v23 + 7) & 0xFFFFFFFFFFFFFFF8);
  v25 = (_QWORD *)(((unint64_t)v19 + v23 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v24 = *v25;
  v26 = (void *)(((unint64_t)v24 + v14 + 8) & ~v14);
  v27 = (const void *)(((unint64_t)v25 + v14 + 8) & ~v14);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v27, 1, v12))
  {
    if (*(_DWORD *)(v13 + 84))
      v28 = *(_QWORD *)(v13 + 64);
    else
      v28 = *(_QWORD *)(v13 + 64) + 1;
    memcpy(v26, v27, v28);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v26, v27, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v26, 0, 1, v12);
  }
  return a1;
}

uint64_t sub_2320DB8F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  void *v20;
  void *v21;
  uint64_t (*v22)(void *, uint64_t, uint64_t);
  int v23;
  size_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  void *v28;
  void *v29;
  uint64_t (*v30)(void *, uint64_t, uint64_t);
  int v31;
  int v32;
  size_t v33;
  uint64_t v35;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (uint64_t *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = v7[1];
  if ((v9 & 0x3000000000000000) != 0)
    goto LABEL_4;
  v10 = *(_QWORD *)(v8 + 8);
  if ((v10 & 0x3000000000000000) != 0)
  {
    sub_232003ED4(*v7, v9);
LABEL_4:
    *(_OWORD *)v7 = *(_OWORD *)v8;
    goto LABEL_5;
  }
  v35 = *v7;
  *v7 = *(_QWORD *)v8;
  v7[1] = v10;
  sub_232003ED4(v35, v9);
LABEL_5:
  v11 = sub_2321FE65C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = sub_2321FD8B8();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = v13 | v16 | 7;
  v18 = (_BYTE *)(((unint64_t)v7 + v17 + 16) & ~v17);
  v19 = (_BYTE *)((v8 + v17 + 16) & ~v17);
  *v18 = *v19;
  v20 = (void *)((unint64_t)&v18[v13 + 1] & ~v13);
  v21 = (void *)((unint64_t)&v19[v13 + 1] & ~v13);
  v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  LODWORD(v13) = v22(v20, 1, v11);
  v23 = v22(v21, 1, v11);
  if ((_DWORD)v13)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v20, v21, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v20, 0, 1, v11);
      goto LABEL_14;
    }
  }
  else
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v20, v21, v11);
      goto LABEL_14;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v20, v11);
  }
  if (*(_DWORD *)(v12 + 84))
    v24 = *(_QWORD *)(v12 + 64);
  else
    v24 = *(_QWORD *)(v12 + 64) + 1;
  memcpy(v20, v21, v24);
LABEL_14:
  if (*(_DWORD *)(v12 + 84))
    v25 = *(_QWORD *)(v12 + 64);
  else
    v25 = *(_QWORD *)(v12 + 64) + 1;
  v26 = (_QWORD *)(((unint64_t)v20 + v25 + 7) & 0xFFFFFFFFFFFFFFF8);
  v27 = (_QWORD *)(((unint64_t)v21 + v25 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v26 = *v27;
  swift_bridgeObjectRelease();
  v28 = (void *)(((unint64_t)v26 + v16 + 8) & ~v16);
  v29 = (void *)(((unint64_t)v27 + v16 + 8) & ~v16);
  v30 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v31 = v30(v28, 1, v14);
  v32 = v30(v29, 1, v14);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v28, v29, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v28, 0, 1, v14);
      return a1;
    }
  }
  else
  {
    if (!v32)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v28, v29, v14);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v28, v14);
  }
  if (*(_DWORD *)(v15 + 84))
    v33 = *(_QWORD *)(v15 + 64);
  else
    v33 = *(_QWORD *)(v15 + 64) + 1;
  memcpy(v28, v29, v33);
  return a1;
}

uint64_t sub_2320DBBA0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v31;
  unsigned int v32;
  int v33;
  int v34;
  unint64_t v35;
  unsigned int v36;
  unint64_t *v37;
  unint64_t v38;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = sub_2321FE65C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if ((_DWORD)v10)
    v11 = v10 - 1;
  else
    v11 = 0;
  v12 = sub_2321FD8B8();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int *)(v13 + 84);
  v15 = v14 - 1;
  if (!(_DWORD)v14)
    v15 = 0;
  if (v11 <= v15)
    v16 = v15;
  else
    v16 = v11;
  if (v16 <= 0x7FFFFFFF)
    v17 = 0x7FFFFFFF;
  else
    v17 = v16;
  if (v7 <= v17)
    v18 = v17;
  else
    v18 = v7;
  if ((_DWORD)v10)
    v19 = *(_QWORD *)(v9 + 64);
  else
    v19 = *(_QWORD *)(v9 + 64) + 1;
  if ((_DWORD)v14)
    v20 = *(_QWORD *)(v13 + 64);
  else
    v20 = *(_QWORD *)(v13 + 64) + 1;
  if (!a2)
    return 0;
  v21 = v12;
  v22 = *(unsigned __int8 *)(v9 + 80);
  v23 = *(unsigned __int8 *)(v13 + 80);
  v24 = v22 | v23 | 7;
  v25 = *(_QWORD *)(v6 + 64);
  v26 = v22 + 1;
  v27 = v19 + 7;
  v28 = v23 + 8;
  if (a2 <= v18)
    goto LABEL_40;
  v29 = v20
      + ((v28 + ((v27 + (v26 & ~v22)) & 0xFFFFFFFFFFFFFFF8)) & ~v23)
      + (((v22 | v23) + ((v25 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v24);
  v30 = 8 * v29;
  if (v29 > 3)
    goto LABEL_24;
  v32 = ((a2 - v18 + ~(-1 << v30)) >> v30) + 1;
  if (HIWORD(v32))
  {
    v31 = *(_DWORD *)(a1 + v29);
    if (v31)
      goto LABEL_31;
  }
  else
  {
    if (v32 <= 0xFF)
    {
      if (v32 < 2)
        goto LABEL_40;
LABEL_24:
      v31 = *(unsigned __int8 *)(a1 + v29);
      if (!*(_BYTE *)(a1 + v29))
        goto LABEL_40;
LABEL_31:
      v33 = (v31 - 1) << v30;
      if (v29 > 3)
        v33 = 0;
      if ((_DWORD)v29)
      {
        if (v29 <= 3)
          v34 = v29;
        else
          v34 = 4;
        __asm { BR              X12 }
      }
      return v18 + v33 + 1;
    }
    v31 = *(unsigned __int16 *)(a1 + v29);
    if (*(_WORD *)(a1 + v29))
      goto LABEL_31;
  }
LABEL_40:
  if (v7 >= v17)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, v7, v5);
  v35 = (v26 + ((((a1 + v25 + 7) & 0xFFFFFFFFFFFFFFF8) + v24 + 16) & ~v24)) & ~v22;
  if (v11 == v17)
  {
    if (v10 >= 2)
    {
      v36 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v35, v10, v8);
      goto LABEL_52;
    }
    return 0;
  }
  v37 = (unint64_t *)((v27 + v35) & 0xFFFFFFFFFFFFFFF8);
  if ((v16 & 0x80000000) != 0)
  {
    if (v14 >= 2)
    {
      v36 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v13 + 48))(((unint64_t)v37 + v28) & ~v23, v14, v21);
LABEL_52:
      if (v36 >= 2)
        return v36 - 1;
      else
        return 0;
    }
    return 0;
  }
  v38 = *v37;
  if (v38 >= 0xFFFFFFFF)
    LODWORD(v38) = -1;
  return (v38 + 1);
}

void sub_2320DBE58(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  size_t v23;
  unsigned int v24;
  unsigned int v25;
  int v26;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(sub_2321FE65C() - 8);
  v10 = *(_DWORD *)(v9 + 84);
  if (v10)
    v11 = v10 - 1;
  else
    v11 = 0;
  v12 = 0;
  v13 = *(_QWORD *)(sub_2321FD8B8() - 8);
  v14 = *(_DWORD *)(v13 + 84);
  v15 = v14 - 1;
  if (!v14)
    v15 = 0;
  if (v11 <= v15)
    v16 = v15;
  else
    v16 = v11;
  if (v16 <= 0x7FFFFFFF)
    v17 = 0x7FFFFFFF;
  else
    v17 = v16;
  if (v8 <= v17)
    v18 = v17;
  else
    v18 = v8;
  v19 = *(_QWORD *)(v9 + 64);
  if (!v10)
    ++v19;
  v22 = *(_QWORD *)(v13 + 64);
  if (!v14)
    ++v22;
  v20 = *(unsigned __int8 *)(v9 + 80);
  v21 = *(unsigned __int8 *)(v13 + 80);
  v23 = (((v20 | v21) + ((*(_QWORD *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~(v20 | v21 | 7))
      + v22
      + ((v21 + 8 + ((v19 + 7 + ((v20 + 1) & ~v20)) & 0xFFFFFFFFFFFFFFF8)) & ~v21);
  if (a3 > v18)
  {
    if (v23 > 3)
    {
      v12 = 1u;
      if (v18 >= a2)
LABEL_35:
        __asm { BR              X7 }
LABEL_28:
      v25 = ~v18 + a2;
      if (v23 < 4)
      {
        if ((_DWORD)v23)
        {
          v26 = v25 & ~(-1 << (8 * v23));
          bzero(a1, v23);
          if ((_DWORD)v23 == 3)
          {
            *(_WORD *)a1 = v26;
            a1[2] = BYTE2(v26);
          }
          else if ((_DWORD)v23 == 2)
          {
            *(_WORD *)a1 = v26;
          }
          else
          {
            *a1 = v26;
          }
        }
      }
      else
      {
        bzero(a1, v23);
        *(_DWORD *)a1 = v25;
      }
      __asm { BR              X10 }
    }
    v24 = ((a3 - v18 + ~(-1 << (8 * v23))) >> (8 * v23)) + 1;
    if (HIWORD(v24))
    {
      v12 = 4u;
      if (v18 >= a2)
        goto LABEL_35;
      goto LABEL_28;
    }
    if (v24 >= 0x100)
      v12 = 2;
    else
      v12 = v24 > 1;
  }
  if (v18 >= a2)
    goto LABEL_35;
  goto LABEL_28;
}

void sub_2320DC194()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = v0;
}

void sub_2320DC19C()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = v0;
}

void sub_2320DC1FC()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_2320DC20C()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_2320DC214()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

char *sub_2320DC22C(char *a1, char **a2, uint64_t a3)
{
  int v3;
  char *v4;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  char *v14;
  char *v15;
  uint64_t v16;
  void *v17;
  id v18;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    a1[8] = *((_BYTE *)a2 + 8);
    v8 = a2[2];
    *((_QWORD *)a1 + 2) = v8;
    v9 = *(int *)(a3 + 28);
    v10 = &a1[v9];
    v11 = (uint64_t)a2 + v9;
    v12 = sub_2321FE938();
    v13 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    v14 = v4;
    v15 = v8;
    v13(v10, v11, v12);
    v16 = *(int *)(a3 + 32);
    v17 = *(char **)((char *)a2 + v16);
    *(_QWORD *)&v7[v16] = v17;
    v18 = v17;
  }
  return v7;
}

void sub_2320DC2FC(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  v4 = (char *)a1 + *(int *)(a2 + 28);
  v5 = sub_2321FE938();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

}

uint64_t sub_2320DC360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;

  v6 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v7 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  v8 = *(int *)(a3 + 28);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_2321FE938();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v13 = v6;
  v14 = v7;
  v12(v9, v10, v11);
  v15 = *(int *)(a3 + 32);
  v16 = *(void **)(a2 + v15);
  *(_QWORD *)(a1 + v15) = v16;
  v17 = v16;
  return a1;
}

uint64_t sub_2320DC408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v7;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v9 = *(void **)(a2 + 16);
  v10 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v9;
  v11 = v9;

  v12 = *(int *)(a3 + 28);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_2321FE938();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  v16 = *(int *)(a3 + 32);
  v17 = *(void **)(a1 + v16);
  v18 = *(void **)(a2 + v16);
  *(_QWORD *)(a1 + v16) = v18;
  v19 = v18;

  return a1;
}

uint64_t sub_2320DC4B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(int *)(a3 + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2321FE938();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_QWORD *)(a1 + *(int *)(a3 + 32)) = *(_QWORD *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_2320DC53C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v7 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  v8 = *(int *)(a3 + 28);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_2321FE938();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = *(int *)(a3 + 32);
  v13 = *(void **)(a1 + v12);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);

  return a1;
}

uint64_t sub_2320DC5DC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2320DC5E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2321FE938();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_2320DC664()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2320DC670(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    v7 = sub_2321FE938();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t sub_2320DC6E4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2321FE938();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2320DC770(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2320002B4(0, qword_2541B78E0, (void (*)(uint64_t))MEMORY[0x24BE47DF8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for SnidgetFeedItemGeneratorFailure(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2320DC810 + 4 * byte_232214647[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2320DC844 + 4 * byte_232214642[v4]))();
}

uint64_t sub_2320DC844(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2320DC84C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2320DC854);
  return result;
}

uint64_t sub_2320DC860(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2320DC868);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2320DC86C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2320DC874(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SnidgetFeedItemGeneratorFailure()
{
  return &type metadata for SnidgetFeedItemGeneratorFailure;
}

unint64_t sub_2320DC894()
{
  unint64_t result;

  result = qword_255F9E2A8;
  if (!qword_255F9E2A8)
  {
    result = MEMORY[0x2348FF39C](&unk_2322148B0, &type metadata for SnidgetFeedItemGeneratorFailure);
    atomic_store(result, (unint64_t *)&qword_255F9E2A8);
  }
  return result;
}

uint64_t sub_2320DC8D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD);
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;

  v7 = *(_QWORD *)v3;
  v8 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  sub_23200054C(a1, (uint64_t)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v13 = swift_allocObject();
  sub_23205A0DC((uint64_t)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12);
  v14 = (_QWORD *)(v13 + ((v10 + v12 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v14 = a2;
  v14[1] = a3;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_2320DF6D8(v3, (uint64_t)v3, (void (*)(_QWORD, _QWORD))sub_2320DF674, v13, v7);
  swift_release_n();
  return swift_release();
}

uint64_t sub_2320DC9F0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t ObjCClassFromMetadata;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;

  v15 = *v2;
  type metadata accessor for SummariesHealthPluginDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v6 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v7 = objc_msgSend(v6, sel_bundleIdentifier);

  if (v7)
  {
    v8 = sub_232200EC4();
    v10 = v9;

  }
  else
  {
    v8 = 0;
    v10 = 0;
  }
  v12 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_uniqueIdentifier);
  v11 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_uniqueIdentifier + 8);
  swift_getObjectType();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v8;
  v13[3] = v10;
  v13[4] = v12;
  v13[5] = v11;
  v13[6] = a1;
  v13[7] = a2;
  v13[8] = v15;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_2321FE140();
  return swift_release();
}

uint64_t sub_2320DCB3C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;

  v4 = v3;
  v22 = a2;
  v23 = a3;
  v6 = *v3;
  v7 = type metadata accessor for SummariesFullProfileExecutor.Request(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2321FD8B8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232143F64();
  v14 = (uint64_t)v4 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_statisticsQueryConfiguration;
  sub_23200054C((uint64_t)v4 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_request, (uint64_t)v9, type metadata accessor for SummariesFullProfileExecutor.Request);
  v15 = sub_232200F00();
  v17 = sub_232144050(a1, v14, (uint64_t)v13, v15, v16, v6);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = v17;
  v18[3] = v4;
  v19 = v23;
  v18[4] = v22;
  v18[5] = v19;
  v18[6] = v6;
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = v4;
  v20[3] = sub_2320DF2AC;
  v20[4] = v18;
  v20[5] = v6;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_2320DC9F0((uint64_t)sub_2320DF2C0, (uint64_t)v20);
  swift_release();
  return swift_release();
}

uint64_t sub_2320DCD24@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_2320002B4(0, &qword_2541B2A58, (void (*)(uint64_t))MEMORY[0x24BE4AD10]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v21 - v6;
  v8 = *a1;
  *a2 = v8;
  sub_2321FFDB4();
  v9 = sub_2321FFDCC();
  if (v9)
  {
    v10 = v9;
    if (*(_QWORD *)(v9 + 16) && (v11 = sub_23216AC54(v8), (v12 & 1) != 0))
    {
      v13 = v11;
      v22 = *(_QWORD *)(v10 + 56);
      v14 = sub_2321FFD6C();
      v23 = v2;
      v15 = *(_QWORD *)(v14 - 8);
      (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v7, v22 + *(_QWORD *)(v15 + 72) * v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
    }
    else
    {
      v16 = sub_2321FFD6C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v7, 1, 1, v16);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = sub_2321FFD6C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v7, 1, 1, v17);
  }
  sub_23202561C();
  v19 = v18;
  sub_2321FFDD8();
  sub_2321FFE68();
  swift_bridgeObjectRelease();
  sub_23200040C((uint64_t)v7, &qword_2541B2A58, (void (*)(uint64_t))MEMORY[0x24BE4AD10]);
  return (*(uint64_t (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a2, 0, 1, v19);
}

uint64_t sub_2320DCF08(void *a1, char a2, uint64_t a3, void (*a4)(_QWORD *))
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t (*v18)(_QWORD);
  id v19;
  uint64_t v21;

  sub_23205A18C();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)((char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  v14 = (char *)&v21 - v13;
  if ((a2 & 1) != 0)
  {
    *v10 = a1;
    swift_storeEnumTagMultiPayload();
    v19 = a1;
    a4(v10);
    v18 = (uint64_t (*)(_QWORD))sub_23205A18C;
    v17 = (uint64_t)v10;
  }
  else
  {
    sub_23200054C(a3, (uint64_t)&v21 - v13, type metadata accessor for SummariesFullProfileExecutor.StepResult);
    v15 = (void *)*((_QWORD *)v14 + 4);
    v16 = a1;

    *((_QWORD *)v14 + 4) = a1;
    sub_23200054C((uint64_t)v14, (uint64_t)v10, type metadata accessor for SummariesFullProfileExecutor.StepResult);
    swift_storeEnumTagMultiPayload();
    a4(v10);
    sub_232047860(a1);
    sub_232002CEC((uint64_t)v10, (uint64_t (*)(_QWORD))sub_23205A18C);
    v17 = (uint64_t)v14;
    v18 = type metadata accessor for SummariesFullProfileExecutor.StepResult;
  }
  return sub_232002CEC(v17, v18);
}

void sub_2320DD070(id a1, char a2, uint64_t a3, void (*a4)(id, uint64_t), uint64_t a5, uint64_t a6)
{
  id v9;
  _QWORD *v11;

  if ((a2 & 1) != 0)
  {
    v9 = a1;
    a4(a1, 1);
  }
  else
  {
    v11 = (_QWORD *)swift_allocObject();
    v11[2] = a4;
    v11[3] = a5;
    v11[4] = a6;
    sub_232091DA8(a1);
    swift_retain();
    sub_2320DCB3C(a1, (uint64_t)sub_2320DFEEC, (uint64_t)v11);
    swift_release();
  }
  sub_232047860(a1);
}

void sub_2320DD130(void *a1, char a2, void (*a3)(void *, uint64_t), uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  id v23;
  id v24;
  uint8_t *v25;
  id v26;
  uint64_t v27;
  void (*v28)(void *, uint64_t);
  uint64_t v29;
  uint64_t v30;

  v8 = sub_23220039C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v24 = a1;
    a3(a1, 1);
    sub_232047860(a1);
  }
  else
  {
    v12 = a1;
    sub_232200318();
    v13 = sub_232200390();
    v14 = sub_2322012CC();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc();
      v28 = a3;
      v16 = (uint8_t *)v15;
      v17 = swift_slowAlloc();
      v26 = v12;
      v18 = v17;
      v30 = v17;
      v27 = a4;
      *(_DWORD *)v16 = 136446210;
      v25 = v16 + 4;
      v19 = sub_232201BF0();
      v29 = sub_232013174(v19, v20, &v30);
      sub_232201710();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v13, v14, "[%{public}s] Generated trend sharable models successfully", v16, 0xCu);
      swift_arrayDestroy();
      v21 = v18;
      v12 = v26;
      MEMORY[0x2348FF468](v21, -1, -1);
      v22 = v16;
      a3 = v28;
      MEMORY[0x2348FF468](v22, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v23 = v12;
    a3(a1, 0);
    sub_232047860(a1);
    sub_232047860(a1);
  }
}

void sub_2320DD360(uint64_t a1, void *a2, void *a3, void (*a4)(void *, uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  int v17;
  uint8_t *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  os_log_t v24;
  uint8_t *v25;
  uint64_t v26;
  void *v27;
  _BYTE *v28;
  _QWORD v29[2];
  uint8_t *v30;
  os_log_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;

  v10 = sub_23220039C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    v14 = a3;
    a4(a3, 1);

  }
  else if (a2)
  {
    v33 = a2;
    a4(a2, 0);

  }
  else
  {
    sub_232200318();
    swift_retain_n();
    v15 = sub_232200390();
    v16 = sub_2322012F0();
    v17 = v16;
    if (os_log_type_enabled(v15, v16))
    {
      LODWORD(v33) = v17;
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v32 = v19;
      v30 = v18;
      v31 = v15;
      *(_DWORD *)v18 = 136315138;
      v35 = v19;
      v29[1] = v18 + 4;
      v20 = objc_msgSend(*(id *)(a6+ OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_request+ *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28)), sel_identifier);
      v21 = sub_232200EC4();
      v23 = v22;

      v34 = sub_232013174(v21, v23, &v35);
      sub_232201710();
      swift_release_n();
      swift_bridgeObjectRelease();
      v25 = v30;
      v24 = v31;
      _os_log_impl(&dword_231FFB000, v31, (os_log_type_t)v33, "Unexpectedly received a nil statistics collection for %s when it had a sample within that date interval", v30, 0xCu);
      v26 = v32;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v26, -1, -1);
      MEMORY[0x2348FF468](v25, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    sub_2320DFE34();
    v27 = (void *)swift_allocError();
    *v28 = 0;
    a4(v27, 1);

  }
}

void sub_2320DD630(id a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(id, uint64_t), uint64_t a8, uint64_t a9)
{
  id v13;
  uint64_t v18;
  _QWORD *v19;

  if ((a2 & 1) != 0)
  {
    v13 = a1;
    a7(a1, 1);
  }
  else
  {
    sub_2320DF534(0, (unint64_t *)&qword_2541B78C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE3598]);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_232210D40;
    *(_QWORD *)(v18 + 32) = a5;
    *(_QWORD *)(v18 + 40) = a6;
    v19 = (_QWORD *)swift_allocObject();
    v19[2] = a1;
    v19[3] = a3;
    v19[4] = a4;
    v19[5] = a5;
    v19[6] = a6;
    v19[7] = a7;
    v19[8] = a8;
    v19[9] = a9;
    sub_2320DF51C(a1, 0);
    swift_bridgeObjectRetain();
    sub_2320DF51C(a1, 0);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_2321FE974();
    swift_bridgeObjectRelease();
    swift_release();
  }
  sub_2320DF528(a1, a2 & 1, (void (*)(id))MEMORY[0x24BEE4EF8]);
}

void sub_2320DD794(unint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, void (*a8)(unint64_t, _QWORD), uint64_t a9, NSObject *a10)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  id v36;
  void *v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  id v43;
  void *v44;
  unsigned __int8 v45;
  NSObject *v46;
  os_log_type_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  void (*v54)(unint64_t, _QWORD);
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  char *v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  id v78;
  uint64_t v79;
  unint64_t v80;
  void (*v81)(id);
  os_log_t v82;
  char *v83;
  void (*v84)(id);
  id v85;
  void (*v86)(id);
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  NSObject *v90;
  os_log_type_t v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(unint64_t, _QWORD);
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  char *v120;
  os_log_t v121;
  unint64_t v122;
  unint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127[3];

  v118 = a5;
  v119 = a7;
  v112 = a4;
  v113 = a6;
  v114 = a3;
  v115 = a9;
  sub_2320002B4(0, &qword_2541B6A70, (void (*)(uint64_t))MEMORY[0x24BE47D40]);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v106 - v14;
  v16 = sub_2321FE608();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v124 = (char *)&v106 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v120 = (char *)&v106 - v20;
  v21 = sub_2321FDCC0();
  v110 = *(_QWORD *)(v21 - 8);
  v111 = v21;
  MEMORY[0x24BDAC7A8](v21);
  v109 = (char *)&v106 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_23220039C();
  v24 = MEMORY[0x24BDAC7A8](v23);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v106 - v26;
  v28 = MEMORY[0x24BDAC7A8](v25);
  v31 = (char *)&v106 - v30;
  v121 = a10;
  v122 = a1;
  v116 = v32;
  v117 = v28;
  if ((a2 & 1) == 0)
  {
    v107 = v29;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      v33 = sub_232201998();
      v108 = a8;
      if (v33)
        goto LABEL_4;
    }
    else
    {
      v33 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      v108 = a8;
      if (v33)
      {
LABEL_4:
        if (v33 < 1)
        {
          __break(1u);
          return;
        }
        v34 = 0;
        v123 = a1 & 0xC000000000000001;
        v35 = MEMORY[0x24BEE4AF8];
        do
        {
          if (v123)
            v36 = (id)MEMORY[0x2348FEA30](v34, a1);
          else
            v36 = *(id *)(a1 + 8 * v34 + 32);
          v37 = v36;
          v125 = (uint64_t)v36;
          sub_2320DE558((id *)&v125, (uint64_t)v15);

          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
          {
            sub_23200040C((uint64_t)v15, &qword_2541B6A70, (void (*)(uint64_t))MEMORY[0x24BE47D40]);
          }
          else
          {
            v38 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
            v39 = v120;
            v38(v120, v15, v16);
            v38(v124, v39, v16);
            v40 = v35;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v40 = sub_232096C94(0, *(_QWORD *)(v35 + 16) + 1, 1, v35);
            v42 = *(_QWORD *)(v40 + 16);
            v41 = *(_QWORD *)(v40 + 24);
            v35 = v40;
            if (v42 >= v41 >> 1)
              v35 = sub_232096C94(v41 > 1, v42 + 1, 1, v40);
            *(_QWORD *)(v35 + 16) = v42 + 1;
            v38((char *)(v35+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(_QWORD *)(v17 + 72) * v42), v124, v16);
            a1 = v122;
          }
          ++v34;
        }
        while (v33 != v34);
        goto LABEL_28;
      }
    }
    v35 = MEMORY[0x24BEE4AF8];
LABEL_28:
    sub_2320DF528((id)a1, 0, (void (*)(id))MEMORY[0x24BEE4BC0]);
    v87 = v107;
    sub_232200318();
    v88 = v118;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v89 = v35;
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    v90 = sub_232200390();
    v91 = sub_2322012FC();
    v92 = v91;
    if (os_log_type_enabled(v90, v91))
    {
      v93 = swift_slowAlloc();
      v124 = (char *)swift_slowAlloc();
      v127[0] = (uint64_t)v124;
      *(_DWORD *)v93 = 136447234;
      LODWORD(v123) = v92;
      v94 = sub_232201BF0();
      v95 = v88;
      v125 = sub_232013174(v94, v96, v127);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v93 + 12) = 2048;
      v97 = *(_QWORD *)(v89 + 16);
      swift_bridgeObjectRelease();
      v125 = v97;
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v93 + 22) = 2080;
      v98 = v109;
      sub_2321FE980();
      v99 = sub_2321FDC84();
      v101 = v100;
      (*(void (**)(char *, uint64_t))(v110 + 8))(v98, v111);
      v125 = sub_232013174(v99, v101, v127);
      sub_232201710();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v93 + 32) = 2080;
      v125 = v112;
      v126 = v95;
      sub_2320DF534(0, (unint64_t *)&qword_2541B78A0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE1C68]);
      swift_bridgeObjectRetain();
      v102 = sub_232200F00();
      v125 = sub_232013174(v102, v103, v127);
      sub_232201710();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v93 + 42) = 2080;
      v104 = v119;
      swift_bridgeObjectRetain();
      v125 = sub_232013174(v113, v104, v127);
      sub_232201710();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_231FFB000, v90, (os_log_type_t)v123, "[%{public}s] Retrieved %ld summaries for transaction %s with plugin %s and identifier %s", (uint8_t *)v93, 0x34u);
      v105 = v124;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v105, -1, -1);
      MEMORY[0x2348FF468](v93, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v107, v117);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_release_n();
      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v87, v117);
    }
    v108(v89, 0);
    swift_bridgeObjectRelease();
    return;
  }
  v43 = (id)a1;
  v44 = (void *)sub_2321FDA50();
  v45 = objc_msgSend(v44, sel_hk_isObjectNotFoundError);

  if ((v45 & 1) != 0)
  {
    sub_232200318();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    v46 = sub_232200390();
    v47 = sub_2322012FC();
    v48 = v47;
    if (os_log_type_enabled(v46, v47))
    {
      v49 = swift_slowAlloc();
      v124 = (char *)swift_slowAlloc();
      v127[0] = (uint64_t)v124;
      *(_DWORD *)v49 = 136446978;
      LODWORD(v123) = v48;
      v50 = sub_232201BF0();
      v125 = sub_232013174(v50, v51, v127);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v49 + 12) = 2080;
      v52 = v109;
      sub_2321FE980();
      v53 = sub_2321FDC84();
      v54 = a8;
      v56 = v55;
      (*(void (**)(char *, uint64_t))(v110 + 8))(v52, v111);
      v125 = sub_232013174(v53, v56, v127);
      sub_232201710();
      swift_release_n();
      a8 = v54;
      a1 = v122;
      swift_bridgeObjectRelease();
      *(_WORD *)(v49 + 22) = 2080;
      v125 = v112;
      v126 = v118;
      sub_2320DF534(0, (unint64_t *)&qword_2541B78A0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE1C68]);
      swift_bridgeObjectRetain();
      v57 = sub_232200F00();
      v125 = sub_232013174(v57, v58, v127);
      sub_232201710();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v49 + 32) = 2080;
      v59 = v119;
      swift_bridgeObjectRetain();
      v125 = sub_232013174(v113, v59, v127);
      sub_232201710();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_231FFB000, v46, (os_log_type_t)v123, "[%{public}s] No summaries were found for transaction %s with identifier %s and name %s", (uint8_t *)v49, 0x2Au);
      v60 = v124;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v60, -1, -1);
      MEMORY[0x2348FF468](v49, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v116 + 8))(v31, v117);
    a8(MEMORY[0x24BEE4AF8], 0);
    sub_2320DF528((id)a1, 1, (void (*)(id))MEMORY[0x24BEE4BC0]);
  }
  else
  {
    sub_232200318();
    sub_232047854((id)a1, 1);
    v61 = v118;
    swift_bridgeObjectRetain();
    v62 = v119;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_232047854((id)a1, 1);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v63 = sub_232200390();
    v64 = sub_2322012E4();
    v65 = v64;
    if (os_log_type_enabled(v63, v64))
    {
      v66 = swift_slowAlloc();
      LODWORD(v123) = v65;
      v67 = v66;
      v68 = swift_slowAlloc();
      v108 = a8;
      v124 = (char *)v68;
      v127[0] = v68;
      *(_DWORD *)v67 = 136447234;
      v121 = v63;
      v69 = sub_232201BF0();
      v70 = v62;
      v125 = sub_232013174(v69, v71, v127);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v67 + 12) = 2080;
      v72 = v109;
      sub_2321FE980();
      v73 = sub_2321FDC84();
      v75 = v74;
      (*(void (**)(char *, uint64_t))(v110 + 8))(v72, v111);
      v125 = sub_232013174(v73, v75, v127);
      sub_232201710();
      swift_release_n();
      a1 = v122;
      swift_bridgeObjectRelease();
      *(_WORD *)(v67 + 22) = 2080;
      v125 = v112;
      v126 = v61;
      sub_2320DF534(0, (unint64_t *)&qword_2541B78A0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE1C68]);
      swift_bridgeObjectRetain();
      v76 = sub_232200F00();
      v125 = sub_232013174(v76, v77, v127);
      sub_232201710();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v67 + 32) = 2080;
      swift_bridgeObjectRetain();
      v125 = sub_232013174(v113, v70, v127);
      sub_232201710();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v67 + 42) = 2082;
      v125 = a1;
      v78 = (id)a1;
      sub_232002B9C();
      v79 = sub_232200F0C();
      v125 = sub_232013174(v79, v80, v127);
      sub_232201710();
      swift_bridgeObjectRelease();
      v81 = (void (*)(id))MEMORY[0x24BEE4BC0];
      sub_2320DF528((id)a1, 1, (void (*)(id))MEMORY[0x24BEE4BC0]);
      sub_2320DF528((id)a1, 1, v81);
      v82 = v121;
      _os_log_impl(&dword_231FFB000, v121, (os_log_type_t)v123, "[%{public}s] Could not get summaries for transaction %s with identifier %s and names %s. %{public}s", (uint8_t *)v67, 0x34u);
      v83 = v124;
      swift_arrayDestroy();
      a8 = v108;
      MEMORY[0x2348FF468](v83, -1, -1);
      MEMORY[0x2348FF468](v67, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_release_n();
      v84 = (void (*)(id))MEMORY[0x24BEE4BC0];
      sub_2320DF528((id)a1, 1, (void (*)(id))MEMORY[0x24BEE4BC0]);
      sub_2320DF528((id)a1, 1, v84);

    }
    (*(void (**)(char *, uint64_t))(v116 + 8))(v27, v117);
    v85 = (id)a1;
    a8(a1, 1);
    v86 = (void (*)(id))MEMORY[0x24BEE4BC0];
    sub_2320DF528((id)a1, 1, (void (*)(id))MEMORY[0x24BEE4BC0]);
    sub_2320DF528((id)a1, 1, v86);
  }
}

uint64_t sub_2320DE558@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v5 = sub_23220039C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  sub_2321FE5CC();
  if (v2)
  {
    sub_232200318();
    v10 = v2;
    v11 = v2;
    v12 = sub_232200390();
    v13 = sub_2322012E4();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc();
      v28 = a2;
      v15 = v14;
      v27 = swift_slowAlloc();
      v30 = v27;
      *(_DWORD *)v15 = 136446466;
      v16 = sub_232201BF0();
      v29 = sub_232013174(v16, v17, &v30);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 2082;
      v29 = (uint64_t)v2;
      v18 = v2;
      sub_232002B9C();
      v19 = sub_232200F0C();
      v29 = sub_232013174(v19, v20, &v30);
      sub_232201710();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_231FFB000, v12, v13, "[%{public}s] Could not create PluginSharableModel from HKSharedSummary; skipping individual model. Error: %{public}s",
        (uint8_t *)v15,
        0x16u);
      v21 = v27;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v21, -1, -1);
      v22 = v15;
      a2 = v28;
      MEMORY[0x2348FF468](v22, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v25 = sub_2321FE608();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a2, 1, 1, v25);
  }
  else
  {
    v23 = sub_2321FE608();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a2, 0, 1, v23);
  }
}

uint64_t sub_2320DE808(void *a1, char a2, uint64_t a3, void (*a4)(_QWORD *), uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void (*v22)(uint64_t);
  id v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(_QWORD *);
  uint64_t v29;
  unint64_t v30;

  sub_2320DF2CC();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (unint64_t *)((char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2320DF350(0, &qword_2541B2A90, &qword_2541B2A98, (void (*)(uint64_t))MEMORY[0x24BE4B500]);
  v14 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v25 - v15;
  if ((a2 & 1) != 0)
  {
    *v12 = a1;
    swift_storeEnumTagMultiPayload();
    v24 = a1;
    a4(v12);
    return sub_232002CEC((uint64_t)v12, (uint64_t (*)(_QWORD))sub_2320DF2CC);
  }
  else
  {
    v17 = (uint64_t)&v16[*(int *)(v14 + 48)];
    v18 = *(_QWORD *)(a3 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_uniqueIdentifier);
    v25 = *(_QWORD *)(a3 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_uniqueIdentifier + 8);
    v26 = v18;
    v28 = a4;
    v19 = a3 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_request;
    v20 = *(void **)(v19 + *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28));
    v29 = 91;
    v30 = 0xE100000000000000;
    sub_232201BF0();
    v27 = a5;
    sub_232200F48();
    swift_bridgeObjectRelease();
    sub_232200F48();
    sub_2321445AC((uint64_t)v16, v17, (uint64_t)a1, v26, v25, v20, v29, v30);
    swift_bridgeObjectRelease();
    v21 = (uint64_t)v12 + *(int *)(v14 + 48);
    v22 = (void (*)(uint64_t))MEMORY[0x24BE4B500];
    sub_2320004AC((uint64_t)v16, (uint64_t)v12, &qword_2541B2A98, (void (*)(uint64_t))MEMORY[0x24BE4B500]);
    sub_2320004AC(v17, v21, &qword_2541B2A98, v22);
    swift_storeEnumTagMultiPayload();
    v28(v12);
    sub_232002CEC((uint64_t)v12, (uint64_t (*)(_QWORD))sub_2320DF2CC);
    return sub_2320DF408((uint64_t)v16, &qword_2541B2A90, &qword_2541B2A98, v22);
  }
}

void sub_2320DEA5C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(id, uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  id *v28;
  uint64_t (*v29)(_QWORD);
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t);
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  void *v42;
  unint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t);
  id v50;
  uint64_t v51;
  id v52;
  NSObject *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(id, uint64_t);
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;

  v65 = a6;
  v68 = a2;
  v10 = sub_2321FE6D4();
  MEMORY[0x24BDAC7A8](v10);
  v62 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2321FDDD4();
  v63 = *(_QWORD *)(v12 - 8);
  v64 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320DF350(0, &qword_2541B2AA0, &qword_2541B2AA8, (void (*)(uint64_t))MEMORY[0x24BE4B528]);
  v66 = v15;
  v16 = MEMORY[0x24BDAC7A8](v15);
  v61 = (uint64_t)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v67 = (uint64_t)&v54 - v18;
  sub_2320DF350(0, &qword_2541B2A90, &qword_2541B2A98, (void (*)(uint64_t))MEMORY[0x24BE4B500]);
  v20 = v19;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v54 - v24;
  sub_2320DF2CC();
  MEMORY[0x24BDAC7A8](v26);
  v28 = (id *)((char *)&v54 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23200054C(a1, (uint64_t)v28, v29);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v30 = *v28;
    v31 = *v28;
    a4(v30, 1);

  }
  else
  {
    v59 = a5;
    v60 = a4;
    v32 = *(int *)(v20 + 48);
    v33 = (uint64_t)&v25[v32];
    v34 = (uint64_t)v28 + v32;
    sub_2320DF3B4((uint64_t)v28, (uint64_t)v25);
    sub_2320DF3B4(v34, v33);
    v35 = (uint64_t)v25;
    v36 = v67;
    v57 = v67 + *(int *)(v66 + 48);
    v56 = (_QWORD *)(a3 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_trendAnalysisEngine);
    v55 = *(_QWORD *)(a3 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_engineParameters);
    v37 = (uint64_t)&v23[*(int *)(v20 + 48)];
    v38 = (void (*)(uint64_t))MEMORY[0x24BE4B500];
    v58 = v35;
    sub_2320004AC(v35, (uint64_t)v23, &qword_2541B2A98, (void (*)(uint64_t))MEMORY[0x24BE4B500]);
    sub_2320004AC(v33, v37, &qword_2541B2A98, v38);
    v39 = sub_2321FFDB4();
    v40 = a3 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_request;
    v41 = *(NSObject **)(v40 + *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28));
    v69 = 91;
    v70 = 0xE100000000000000;
    sub_232201BF0();
    sub_232200F48();
    swift_bridgeObjectRelease();
    sub_232200F48();
    v42 = (void *)v69;
    v43 = v70;
    sub_2321FDDA4();
    v53 = v41;
    v44 = v57;
    sub_232145AB8(v36, v57, v68, v56, v55, (uint64_t)v23, v37, v39, v53, v42, v43);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v14, v64);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v45 = (void (*)(uint64_t))MEMORY[0x24BE4B500];
    sub_23200040C(v37, &qword_2541B2A98, (void (*)(uint64_t))MEMORY[0x24BE4B500]);
    sub_23200040C((uint64_t)v23, &qword_2541B2A98, v45);
    v46 = v67;
    v47 = v61;
    v48 = v61 + *(int *)(v66 + 48);
    v49 = (void (*)(uint64_t))MEMORY[0x24BE4B528];
    sub_2320004AC(v67, v61, &qword_2541B2AA8, (void (*)(uint64_t))MEMORY[0x24BE4B528]);
    sub_2320004AC(v44, v48, &qword_2541B2AA8, v49);
    v50 = sub_232147004(v47, v48, v68);
    sub_23200040C(v48, &qword_2541B2AA8, v49);
    sub_23200040C(v47, &qword_2541B2AA8, v49);
    sub_232003E9C(0, &qword_2541B0CE0);
    v51 = (uint64_t)v62;
    sub_2321FE6B0();
    v52 = HKCodableSummaryTrendResults.init(values:version:)((unint64_t)v50, v51);
    v60(v52, 0);

    sub_2320DF408(v46, &qword_2541B2AA0, &qword_2541B2AA8, v49);
    sub_2320DF408(v58, &qword_2541B2A90, &qword_2541B2A98, v45);
  }
}

uint64_t sub_2320DEFE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;

  sub_232002CEC(v0 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_request, type metadata accessor for SummariesFullProfileExecutor.Request);
  v1 = v0 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_configuration;
  v2 = sub_2321FFE08();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_232016AFC(v0 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_trendAnalysisEngine);
  v3 = v0 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_statisticsQueryConfiguration;
  v4 = sub_232200024();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_anchorDate;
  v6 = sub_2321FDC6C();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(v0 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_endingDate, v6);
  v8 = v0 + OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_queryDateInterval;
  v9 = sub_2321FD8B8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_2320DF11C()
{
  return type metadata accessor for StatisticsTrendSharableModelStep();
}

uint64_t type metadata accessor for StatisticsTrendSharableModelStep()
{
  uint64_t result;

  result = qword_2541B6E90;
  if (!qword_2541B6E90)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2320DF160()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  result = type metadata accessor for SummariesFullProfileExecutor.Request(319);
  if (v1 <= 0x3F)
  {
    result = sub_2321FFE08();
    if (v2 <= 0x3F)
    {
      result = sub_232200024();
      if (v3 <= 0x3F)
      {
        result = sub_2321FDC6C();
        if (v4 <= 0x3F)
        {
          result = sub_2321FD8B8();
          if (v5 <= 0x3F)
            return swift_updateClassMetadata2();
        }
      }
    }
  }
  return result;
}

uint64_t sub_2320DF258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2320DC8D8(a1, a2, a3);
}

uint64_t sub_2320DF278()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_2320DF2AC(uint64_t a1)
{
  uint64_t v1;

  sub_2320DEA5C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(id, uint64_t))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_2320DF2C0(uint64_t a1, char a2)
{
  return sub_2320DFE20(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2320DE808);
}

void sub_2320DF2CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B71E8)
  {
    sub_2320DF350(255, &qword_2541B2A90, &qword_2541B2A98, (void (*)(uint64_t))MEMORY[0x24BE4B500]);
    sub_232002B9C();
    v0 = sub_232201BA8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B71E8);
  }
}

void sub_2320DF350(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v6;

  if (!*a2)
  {
    sub_2320002B4(255, a3, a4);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t sub_2320DF3B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2320002B4(0, &qword_2541B2A98, (void (*)(uint64_t))MEMORY[0x24BE4B500]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2320DF408(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v5;

  sub_2320DF350(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_2320DF444()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_2320DF478(void *a1, char a2)
{
  uint64_t v2;

  sub_2320DD630(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(void (**)(id, uint64_t))(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64));
}

uint64_t sub_2320DF4AC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_2320DF4E8(unint64_t a1, char a2)
{
  uint64_t v2;

  sub_2320DD794(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(void (**)(unint64_t, _QWORD))(v2 + 56), *(_QWORD *)(v2 + 64), *(NSObject **)(v2 + 72));
}

id sub_2320DF51C(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)swift_retain();
}

void sub_2320DF528(id a1, char a2, void (*a3)(id))
{
  if ((a2 & 1) != 0)

  else
    a3(a1);
}

void sub_2320DF534(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, _QWORD))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, MEMORY[0x24BEE0D00]);
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_2320DF57C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for SummariesFullProfileExecutor.StepResult(0);
  v2 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  if (*(_QWORD *)v2 != 1)
  {

  }
  v3 = *(void **)(v2 + 16);
  if (v3 != (void *)1)
  {

  }
  v4 = v2 + *(int *)(v1 + 28);
  v5 = sub_2321FDDD4();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2320DF674(void *a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  unint64_t v6;

  v4 = a2 & 1;
  v5 = *(_QWORD *)(type metadata accessor for SummariesFullProfileExecutor.StepResult(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_2320DCF08(a1, v4, v2 + v6, *(void (**)(_QWORD *))(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

void sub_2320DF6D8(char *a1, uint64_t a2, void (*a3)(_QWORD, _QWORD), uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  void (*v23)(char *, _QWORD, uint64_t, uint64_t);
  id v24;
  void *v25;
  char *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  id v37;
  void *v38;
  _BYTE *v39;
  id v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  void *v46;
  _QWORD *v47;
  _QWORD *v48;
  void *v49;
  id v50;
  uint64_t v51;
  id v52;
  id v53;
  char *v54;
  id v55;
  void *v56;
  void *v57;
  id v58;
  void *v59;
  _QWORD *v60;
  void (*v61)(_QWORD, _QWORD);
  void *v62;
  id v63;
  id v64;
  id *v65;
  void (*v66)(_QWORD, _QWORD);
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD aBlock[6];

  v10 = sub_2321FD960();
  v69 = *(_QWORD *)(v10 - 8);
  v70 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v68 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, &qword_2541AF190, (void (*)(uint64_t))MEMORY[0x24BE4AB30]);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v63 - v13;
  sub_2320002B4(0, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v63 - v16;
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a2;
  v18[3] = a3;
  v66 = a3;
  v18[4] = a4;
  v18[5] = a5;
  sub_232003E9C(0, qword_2541B7ED0);
  v19 = &a1[OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_queryDateInterval];
  v20 = sub_2321FD8B8();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
  v67 = v19;
  v22(v17, v19, v20);
  v23 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56);
  v24 = a1;
  v23(v17, 0, 1, v20);
  swift_retain();
  swift_retain();
  v25 = (void *)sub_232201644();
  sub_23200040C((uint64_t)v17, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  v26 = &a1[OBJC_IVAR____TtC9Summaries32StatisticsTrendSharableModelStep_request];
  v27 = *(void **)&v26[*(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28)];
  objc_opt_self();
  v28 = swift_dynamicCastObjCClass();
  if (v28)
  {
    v29 = v28;
    v65 = (id *)v26;
    v66 = (void (*)(_QWORD, _QWORD))v18;
    v30 = v27;
    sub_2321FFDFC();
    v31 = sub_2321FFC7C();
    v32 = *(_QWORD *)(v31 - 8);
    v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48))(v14, 1, v31);
    v34 = MEMORY[0x24BEE4AF8];
    if (v33 == 1)
    {
      sub_23200040C((uint64_t)v14, &qword_2541AF190, (void (*)(uint64_t))MEMORY[0x24BE4AB30]);
      v35 = 0;
      aBlock[0] = v34;
      if (v25)
        goto LABEL_4;
    }
    else
    {
      v35 = (_QWORD *)sub_2321FFC70();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v31);
      if (v35)
      {
        v41 = v35[2];
        if (v41)
        {
          v63 = v30;
          v64 = v24;
          aBlock[0] = MEMORY[0x24BEE4AF8];
          sub_2322018FC();
          v42 = (void *)objc_opt_self();
          v43 = 0;
          do
          {
            v44 = v43 + 1;
            v45 = objc_msgSend(v42, sel_predicateForCategorySamplesWithOperatorType_value_, 4, v35[v43 + 4]);
            sub_2322018E4();
            sub_232201908();
            sub_232201914();
            sub_2322018F0();
            v43 = v44;
          }
          while (v41 != v44);
          swift_bridgeObjectRelease();
          v30 = v63;
          v24 = v64;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        sub_232003E9C(0, (unint64_t *)&qword_2541B0C00);
        v46 = (void *)sub_232201020();
        swift_bridgeObjectRelease();
        v35 = objc_msgSend((id)objc_opt_self(), sel_orPredicateWithSubpredicates_, v46);

      }
      aBlock[0] = MEMORY[0x24BEE4AF8];
      if (v25)
      {
LABEL_4:
        v36 = v35;
        v37 = v25;
        MEMORY[0x2348FE190]();
        if (*(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8)
                                                                                + 0x18) >> 1)
          sub_23220105C();
        sub_232201074();
        sub_232201050();
        if (!v35)
          goto LABEL_21;
        goto LABEL_18;
      }
    }
    v47 = v35;
    if (!v35)
    {
LABEL_21:

      sub_232003E9C(0, (unint64_t *)&qword_2541B0C00);
      v49 = (void *)sub_232201020();
      swift_bridgeObjectRelease();
      v50 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v49);

      sub_2321FFFF4();
      v51 = sub_2322014DC();
      v52 = v30;
      v53 = v50;
      sub_232200000();
      v64 = v25;
      v54 = v68;
      sub_2321FFD84();
      v55 = objc_allocWithZone(MEMORY[0x24BDD4000]);
      v56 = (void *)sub_2321FDBF4();
      v57 = (void *)sub_2321FD918();
      v58 = objc_msgSend(v55, sel_initWithSampleType_samplePredicate_options_anchorDate_intervalComponents_, v29, v53, v51, v56, v57);

      (*(void (**)(char *, uint64_t))(v69 + 8))(v54, v70);
      v59 = (void *)sub_2321FD858();
      objc_msgSend(v58, sel_setDateInterval_, v59);

      v60 = (_QWORD *)swift_allocObject();
      v61 = v66;
      v60[2] = sub_2320DFE14;
      v60[3] = v61;
      v60[4] = v24;
      aBlock[4] = sub_2320DFEA4;
      aBlock[5] = v60;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_232133CCC;
      aBlock[3] = &unk_250102618;
      v62 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      objc_msgSend(v58, sel_setInitialResultsHandler_, v62);
      _Block_release(v62);
      objc_msgSend(v65[2], sel_executeQuery_, v58);
      swift_release();

      goto LABEL_22;
    }
LABEL_18:
    v48 = v35;
    MEMORY[0x2348FE190]();
    if (*(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_23220105C();
    sub_232201074();
    sub_232201050();
    goto LABEL_21;
  }
  sub_2320DFE34();
  v38 = (void *)swift_allocError();
  *v39 = 1;
  v40 = v38;
  v66(v38, 1);
  sub_232047860(v38);

  swift_release();
  v35 = v25;
LABEL_22:

}

uint64_t sub_2320DFDE8()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2320DFE14(uint64_t a1, char a2)
{
  return sub_2320DFE20(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2320DD070);
}

uint64_t sub_2320DFE20(uint64_t a1, char a2, uint64_t (*a3)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v3;

  return a3(a1, a2 & 1, v3[2], v3[3], v3[4], v3[5]);
}

unint64_t sub_2320DFE34()
{
  unint64_t result;

  result = qword_255F9E2B0;
  if (!qword_255F9E2B0)
  {
    result = MEMORY[0x2348FF39C](&unk_232214A38, &type metadata for StatisticsTrendSharableModelStep.StatisticsTrendProcessingError);
    atomic_store(result, (unint64_t *)&qword_255F9E2B0);
  }
  return result;
}

uint64_t sub_2320DFE78()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_2320DFEA4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;

  sub_2320DD360(a1, a2, a3, *(void (**)(void *, uint64_t))(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32));
}

uint64_t sub_2320DFEB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2320DFEC0()
{
  return swift_release();
}

uint64_t sub_2320DFEC8()
{
  swift_release();
  return swift_deallocObject();
}

void sub_2320DFEEC(void *a1, char a2)
{
  uint64_t v2;

  sub_2320DD130(a1, a2 & 1, *(void (**)(void *, uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t storeEnumTagSinglePayload for StatisticsTrendSharableModelStep.StatisticsTrendProcessingError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2320DFF48 + 4 * byte_232214925[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2320DFF7C + 4 * byte_232214920[v4]))();
}

uint64_t sub_2320DFF7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2320DFF84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2320DFF8CLL);
  return result;
}

uint64_t sub_2320DFF98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2320DFFA0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2320DFFA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2320DFFAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StatisticsTrendSharableModelStep.StatisticsTrendProcessingError()
{
  return &type metadata for StatisticsTrendSharableModelStep.StatisticsTrendProcessingError;
}

unint64_t sub_2320DFFCC()
{
  unint64_t result;

  result = qword_255F9E2B8[0];
  if (!qword_255F9E2B8[0])
  {
    result = MEMORY[0x2348FF39C](&unk_232214A10, &type metadata for StatisticsTrendSharableModelStep.StatisticsTrendProcessingError);
    atomic_store(result, qword_255F9E2B8);
  }
  return result;
}

uint64_t sub_2320E0010()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC9Summaries33SnidgetsFeedItemGeneratorPipeline_domain;
  v2 = sub_2321FE3BC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC9Summaries33SnidgetsFeedItemGeneratorPipeline_context;
  v4 = sub_2321FE440();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2320E0098()
{
  return type metadata accessor for SnidgetsFeedItemGeneratorPipeline();
}

uint64_t type metadata accessor for SnidgetsFeedItemGeneratorPipeline()
{
  uint64_t result;

  result = qword_2541B41B8;
  if (!qword_2541B41B8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2320E00DC()
{
  return swift_retain();
}

uint64_t sub_2320E00F0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC9Summaries33SnidgetsFeedItemGeneratorPipeline_domain;
  v4 = sub_2321FE3BC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for ActivityDataTypeDetailDescriptionDataSource()
{
  uint64_t result;

  result = qword_2541B1360;
  if (!qword_2541B1360)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2320E0174()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2321FF40C();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

id sub_2320E0200()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_activitySummaryType);
  qword_2541BF598 = (uint64_t)result;
  return result;
}

void sub_2320E0238(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t **v3;
  uint64_t **v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  NSObject *v33;
  os_log_type_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  id v39;
  id v40;
  uint64_t v41;
  char *v42;
  unint64_t v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  unint64_t v47;
  NSObject *v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  NSObject *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61[3];
  uint64_t v62;
  unint64_t v63;

  v4 = v3;
  LODWORD(v58) = a3;
  v54 = a2;
  v52 = *v3;
  v6 = sub_2321FF40C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v53 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v57 = (char *)&v50 - v10;
  v11 = sub_23220039C();
  v55 = *(_QWORD *)(v11 - 8);
  v56 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = qword_2541BF538;
  *(uint64_t **)((char *)v3 + qword_2541BF538) = 0;
  *(uint64_t **)((char *)v3 + qword_2541BF590) = 0;
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v15((char *)v3 + qword_2541BF5A0, a1, v6);
  swift_retain();
  sub_2321FF3DC();
  sub_232016AD8(v61, v62);
  sub_2321FE098();
  v16 = (void *)sub_2321FF3F4();
  v17 = objc_msgSend(v16, sel_profileIdentifier);

  sub_2321FED40();
  swift_allocObject();
  v18 = sub_2321FED34();
  sub_232016AFC((uint64_t)v61);
  *(uint64_t **)((char *)v4 + qword_2541BF588) = (uint64_t *)v18;
  v19 = (void *)sub_2321FF3F4();
  v20 = objc_msgSend(v19, sel_displayTypeController);

  if (v20)
  {
    v59 = v7;
    if (qword_2541B1358 != -1)
      swift_once();
    v21 = objc_msgSend(v20, sel_displayTypeForObjectType_, qword_2541BF598);

    if (v21)
    {
      v22 = v21;
      v23 = sub_2321FF400();
      v24 = type metadata accessor for ActivityDataTypeDescriptionProvider();
      swift_allocObject();
      v25 = sub_2321C2D48(v22, v23, 1);
      v26 = (char)v58;
      if ((v58 & 1) == 0)
        sub_2321C2E94(v54);
      v62 = v24;
      v63 = sub_2320E0CB8();
      v61[0] = (uint64_t)v25;
      sub_2321FECC8();
      swift_allocObject();
      swift_retain();
      v27 = sub_2321FECBC();
      *(uint64_t **)((char *)v4 + v14) = v25;
      swift_retain();
      swift_release();
      swift_release();
      sub_23209823C();
      v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_232210D40;
      v29 = MEMORY[0x24BE43520];
      *(_QWORD *)(v28 + 32) = v27;
      *(_QWORD *)(v28 + 40) = v29;
      swift_retain();
      sub_2321FF2F8();
      if ((v26 & 1) != 0)
      {
        swift_retain();
        if (sub_2321FF400() <= 1u)
          sub_232099BA8();
        swift_release();
        swift_release();
        swift_release();

        v30 = v59;
      }
      else
      {

        swift_release();
        swift_release();
        v30 = v59;
      }
    }
    else
    {
      swift_release();
      v31 = v13;
      sub_23220030C();
      v32 = v57;
      v15(v57, a1, v6);
      v33 = sub_232200390();
      v34 = sub_2322012E4();
      v35 = v34;
      v58 = v33;
      if (os_log_type_enabled(v33, v34))
      {
        v36 = swift_slowAlloc();
        v54 = swift_slowAlloc();
        v61[0] = v54;
        *(_DWORD *)v36 = 136315650;
        v51 = v35;
        v37 = sub_232201BF0();
        v60 = sub_232013174(v37, v38, v61);
        v52 = v61;
        sub_232201710();
        swift_bridgeObjectRelease();
        *(_WORD *)(v36 + 12) = 2080;
        v50 = v36 + 14;
        v39 = (id)qword_2541BF598;
        v40 = objc_msgSend(v39, sel_description);
        v41 = sub_232200EC4();
        v42 = v31;
        v44 = v43;

        v60 = sub_232013174(v41, v44, v61);
        sub_232201710();
        swift_bridgeObjectRelease();
        *(_WORD *)(v36 + 22) = 2080;
        v45 = v57;
        v15(v53, (uint64_t)v57, v6);
        v46 = sub_232200F00();
        v60 = sub_232013174(v46, v47, v61);
        sub_232201710();
        swift_bridgeObjectRelease();
        v30 = v59;
        (*(void (**)(char *, uint64_t))(v59 + 8))(v45, v6);
        v48 = v58;
        _os_log_impl(&dword_231FFB000, v58, (os_log_type_t)v51, "[%s]: displayType for %s not available for context: %s", (uint8_t *)v36, 0x20u);
        v49 = v54;
        swift_arrayDestroy();
        MEMORY[0x2348FF468](v49, -1, -1);
        MEMORY[0x2348FF468](v36, -1, -1);

        (*(void (**)(char *, uint64_t))(v55 + 8))(v42, v56);
      }
      else
      {
        v30 = v59;
        (*(void (**)(char *, uint64_t))(v59 + 8))(v32, v6);

        (*(void (**)(char *, uint64_t))(v55 + 8))(v31, v56);
      }
      sub_2321FF2F8();
    }
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(a1, v6);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2320E0884()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  NSObject *v16;
  os_log_type_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void (*v25)(char *, uint64_t);
  os_log_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  os_log_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v35 = *v0;
  v1 = sub_23220039C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2321FEAE8();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v30 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v30 - v13;
  sub_2321FEA10();
  sub_23220030C();
  v15 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v15(v12, v14, v5);
  v36 = v4;
  v16 = sub_232200390();
  v17 = sub_2322012FC();
  v18 = v17;
  if (os_log_type_enabled(v16, v17))
  {
    v19 = swift_slowAlloc();
    v34 = v2;
    v20 = v19;
    v33 = swift_slowAlloc();
    v39 = v33;
    *(_DWORD *)v20 = 136315394;
    v32 = v18;
    v21 = sub_232201BF0();
    v31 = v16;
    v38 = sub_232013174(v21, v22, &v39);
    v35 = v1;
    sub_232201710();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2080;
    v15(v9, v12, v5);
    v23 = sub_232200F00();
    v38 = sub_232013174(v23, v24, &v39);
    sub_232201710();
    swift_bridgeObjectRelease();
    v25 = *(void (**)(char *, uint64_t))(v6 + 8);
    v25(v12, v5);
    v26 = v31;
    _os_log_impl(&dword_231FFB000, v31, (os_log_type_t)v32, "[%s]: Profile information updated. Updating data sources with activityMoveModeState: %s", (uint8_t *)v20, 0x16u);
    v27 = v33;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v27, -1, -1);
    MEMORY[0x2348FF468](v20, -1, -1);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v35);
  }
  else
  {
    v25 = *(void (**)(char *, uint64_t))(v6 + 8);
    v25(v12, v5);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v36, v1);
  }
  if (*(_QWORD *)(v37 + qword_2541BF538))
  {
    swift_retain();
    v28 = sub_2321FEADC();
    sub_2321C2E94(v28);
    swift_release();
  }
  return ((uint64_t (*)(char *, uint64_t))v25)(v14, v5);
}

void sub_2320E0B90()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_2320E0BBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + qword_2541BF5A0;
  v2 = sub_2321FF40C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_2320E0C28()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_2321FF2EC() + qword_2541BF5A0;
  v1 = sub_2321FF40C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2320E0CB0()
{
  return type metadata accessor for ActivityDataTypeDetailDescriptionDataSource();
}

unint64_t sub_2320E0CB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B11B8;
  if (!qword_2541B11B8)
  {
    v1 = type metadata accessor for ActivityDataTypeDescriptionProvider();
    result = MEMORY[0x2348FF39C](&unk_232218EF8, v1);
    atomic_store(result, (unint64_t *)&qword_2541B11B8);
  }
  return result;
}

uint64_t sub_2320E0D00(uint64_t a1, uint64_t a2, char a3)
{
  char v5;
  uint64_t v6;

  v5 = a3 & 1;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + OBJC_IVAR____TtC9Summaries35AFibBurdenSummaryModelConfiguration_keyValueDomainChangePublisher) = 0;
  sub_232035280(a2, v6 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind);
  *(_QWORD *)(v6 + 16) = a1;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_audience) = v5;
  return v6;
}

uint64_t sub_2320E0D7C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  void *v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t inited;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void (*v30)(unint64_t, _QWORD, uint64_t);
  id v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD v80[3];
  uint64_t v81;
  uint64_t v82;

  v65 = a1;
  v74 = *v1;
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, (unint64_t *)&qword_2541B5628, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v64 = (char *)&v55 - v4;
  sub_2320E16DC();
  v57 = v5;
  v56 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v55 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320E17C4();
  v60 = v7;
  v59 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v58 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320E188C();
  v63 = v9;
  v62 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v61 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_232200048();
  v76 = *(_QWORD *)(v11 - 8);
  v77 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v75 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, &qword_2541B2AC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE4B810], v2);
  MEMORY[0x24BDAC7A8](v13);
  v69 = (char *)&v55 - v14;
  v66 = sub_2321FE38C();
  v15 = *(_QWORD *)(v66 - 8);
  MEMORY[0x24BDAC7A8](v66);
  v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_2321FE3BC();
  v67 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68);
  v19 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (void *)sub_2321FE3F8();
  v21 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598];
  sub_232000608(0, (unint64_t *)&qword_2541B78C8, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v72 = v22;
  inited = swift_initStackObject();
  v73 = xmmword_232210D20;
  *(_OWORD *)(inited + 16) = xmmword_232210D20;
  v71 = sub_232003E9C(0, (unint64_t *)&qword_2541B0C28);
  v70 = (id)*MEMORY[0x24BDD3378];
  *(_QWORD *)(inited + 32) = MEMORY[0x2348FE4B4]();
  v80[0] = inited;
  sub_232201050();
  sub_2320057B8(0, &qword_2541B7530, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], v21);
  v24 = sub_2321FE194();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(_QWORD *)(v25 + 72);
  v27 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_232210D30;
  v29 = v28 + v27;
  v30 = *(void (**)(unint64_t, _QWORD, uint64_t))(v25 + 104);
  v30(v29, *MEMORY[0x24BE47460], v24);
  v30(v29 + v26, *MEMORY[0x24BE47490], v24);
  v31 = v20;
  sub_2321A492C(v28);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v32 = swift_bridgeObjectRetain();
  sub_2321A4950(v32);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x24BE47918], v66);
  sub_2321FE3B0();

  swift_bridgeObjectRelease();
  v66 = sub_2321FE41C();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v19, v68);
  v33 = sub_232200054();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v69, 1, 1, v33);
  v74 = sub_232201BF0();
  v68 = v34;
  sub_232200F54();
  sub_232200EC4();
  v35 = (void *)objc_opt_self();
  sub_2321FE3D4();
  sub_232016AD8(v80, v81);
  v36 = (void *)sub_2321FE314();
  v37 = objc_msgSend(v35, sel_hkhr_aFibBurdenSyncedDefaultsDomainWithHealthStore_, v36);

  sub_232016AFC((uint64_t)v80);
  v81 = sub_232003E9C(0, &qword_2541B5610);
  v82 = MEMORY[0x24BE4BCE0];
  v80[0] = v37;
  v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = v73;
  *(_QWORD *)(v38 + 32) = MEMORY[0x2348FE4B4](v70);
  v79 = v38;
  sub_232201050();
  (*(void (**)(char *, _QWORD, uint64_t))(v76 + 104))(v75, *MEMORY[0x24BE4B800], v77);
  sub_232200078();
  swift_allocObject();
  v39 = sub_232200060();
  v40 = OBJC_IVAR____TtC9Summaries35AFibBurdenSummaryModelConfiguration_keyValueDomainChangePublisher;
  v41 = v78;
  *(_QWORD *)(v78 + OBJC_IVAR____TtC9Summaries35AFibBurdenSummaryModelConfiguration_keyValueDomainChangePublisher) = v39;
  v42 = v41;
  result = swift_release();
  if (*(_QWORD *)(v42 + v40))
  {
    swift_retain();
    v44 = sub_23220006C();
    swift_release();
    v80[0] = v44;
    sub_2320E1760();
    sub_232000590(&qword_2541B2EE0, (uint64_t (*)(uint64_t))sub_2320E1760, MEMORY[0x24BDB9AF8]);
    v45 = v55;
    sub_2322007A4();
    swift_release();
    sub_232000590((unint64_t *)&qword_2541B2BD8, (uint64_t (*)(uint64_t))sub_2320E16DC, MEMORY[0x24BDB96C0]);
    v46 = v58;
    v47 = v57;
    sub_232200834();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v45, v47);
    v48 = (void *)v66;
    v80[0] = v66;
    v49 = sub_2322014A0();
    v50 = (uint64_t)v64;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v64, 1, 1, v49);
    sub_232003E9C(0, &qword_2541B0C48);
    sub_232000590(&qword_2541B2B40, (uint64_t (*)(uint64_t))sub_2320E17C4, MEMORY[0x24BDB9530]);
    sub_23205B734();
    v51 = v61;
    v52 = v60;
    sub_232200840();
    sub_23205B78C(v50);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v46, v52);
    sub_232000590(&qword_2541B2EA0, (uint64_t (*)(uint64_t))sub_2320E188C, MEMORY[0x24BDB9A08]);
    v53 = v63;
    v54 = sub_232200774();

    (*(void (**)(char *, uint64_t))(v62 + 8))(v51, v53);
    return v54;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2320E15FC()
{
  return swift_release();
}

uint64_t sub_2320E160C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_232035454(v0 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2320E1658()
{
  return type metadata accessor for AFibBurdenSummaryModelConfiguration();
}

uint64_t type metadata accessor for AFibBurdenSummaryModelConfiguration()
{
  uint64_t result;

  result = qword_2541B4390;
  if (!qword_2541B4390)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2320E169C()
{
  return swift_updateClassMetadata2();
}

void sub_2320E16DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2BE0)
  {
    sub_2320E1760();
    sub_232000590(&qword_2541B2EE0, (uint64_t (*)(uint64_t))sub_2320E1760, MEMORY[0x24BDB9AF8]);
    v0 = sub_232200540();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2BE0);
  }
}

void sub_2320E1760()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2EE8)
  {
    sub_2321FE458();
    v0 = sub_232200624();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2EE8);
  }
}

void sub_2320E17C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2B48)
  {
    sub_232048E84();
    sub_2320E16DC();
    sub_232000590(&qword_2541B2E50, (uint64_t (*)(uint64_t))sub_232048E84, MEMORY[0x24BDB9970]);
    sub_232000590((unint64_t *)&qword_2541B2BD8, (uint64_t (*)(uint64_t))sub_2320E16DC, MEMORY[0x24BDB96C0]);
    v0 = sub_232200504();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2B48);
  }
}

void sub_2320E188C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2EA8)
  {
    sub_2320E17C4();
    sub_232003E9C(255, &qword_2541B0C48);
    sub_232000590(&qword_2541B2B40, (uint64_t (*)(uint64_t))sub_2320E17C4, MEMORY[0x24BDB9530]);
    sub_23205B734();
    v0 = sub_232200600();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2EA8);
  }
}

uint64_t sub_2320E1940()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2320E194C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_2320E19C8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2320E19D4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for GAD7AssessmentSnidgetFeedItemModelProvider()
{
  uint64_t result;

  result = qword_2541B2640;
  if (!qword_2541B2640)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2320E1A90(uint64_t a1)
{
  uint64_t result;

  result = sub_232000590(&qword_255F9CF28, (uint64_t (*)(uint64_t))type metadata accessor for GAD7AssessmentSnidgetFeedItemModelProvider, (uint64_t)&unk_232214C18);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2320E1ACC()
{
  return sub_2320E1B34(&qword_2541B7420, &qword_2541B7428, (uint64_t (*)(uint64_t, _QWORD *))type metadata accessor for SnidgetHarnessPluginView.ActionHandler, (uint64_t)&unk_2322120D8);
}

uint64_t sub_2320E1B00()
{
  return sub_2320E1B34(&qword_2541B3698, &qword_2541B36A0, (uint64_t (*)(uint64_t, _QWORD *))type metadata accessor for SnidgetHarnessPluginView, (uint64_t)&unk_232212090);
}

uint64_t sub_2320E1B34(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_2320E1B74(255, a2, a3);
    result = MEMORY[0x2348FF39C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_2320E1B74(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD v9[8];

  if (!*a2)
  {
    sub_231FFFDE4(255, &qword_2541B2998, MEMORY[0x24BE43750]);
    v9[0] = v6;
    v9[1] = &type metadata for EmptySnidgetVisualizationView;
    v9[2] = sub_23200409C();
    v9[3] = sub_232045528();
    v9[4] = sub_231FFFE84(&qword_2541B2970, MEMORY[0x24BE43748]);
    v9[5] = sub_231FFFE84((unint64_t *)&unk_2541B2960, MEMORY[0x24BE43740]);
    v9[6] = sub_23204556C();
    v9[7] = sub_2320455B0();
    v7 = a3(a1, v9);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_2320E1C64(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  unsigned int v33;
  void *v34;
  void *v35;
  id v36;
  void *v37;
  void *v38;
  id v39;
  id v40;
  void *v41;
  _BYTE *v42;
  id *v43;
  uint64_t v44;
  void *v45;
  uint64_t inited;
  void *v47;
  id v48;
  id v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  id v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  id v76;
  id v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _BYTE *v90;
  uint64_t v91;
  id v92;
  id v93;
  id *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  id v109;

  v4 = v3;
  v8 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  MEMORY[0x24BDAC7A8](v11);
  v104 = (char *)&v91 - v12;
  v13 = sub_2321FDC6C();
  MEMORY[0x24BDAC7A8](v13);
  v102 = (char *)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, qword_2541B78E0, (void (*)(uint64_t))MEMORY[0x24BE47DF8]);
  MEMORY[0x24BDAC7A8](v15);
  v103 = (char *)&v91 - v16;
  sub_2320002B4(0, &qword_2541B2368, (void (*)(uint64_t))MEMORY[0x24BE445A8]);
  MEMORY[0x24BDAC7A8](v17);
  v100 = (char *)&v91 - v18;
  sub_2320002B4(0, (unint64_t *)&qword_2541B2838, (void (*)(uint64_t))MEMORY[0x24BDCC5A8]);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v99 = (char *)&v91 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v98 = (char *)&v91 - v22;
  sub_2320002B4(0, &qword_2541B2930, (void (*)(uint64_t))MEMORY[0x24BE42FE0]);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v91 - v24;
  v101 = sub_2321FD9F0();
  v106 = *(_QWORD *)(v101 - 8);
  v26 = MEMORY[0x24BDAC7A8](v101);
  v28 = (char *)&v91 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v105 = (char *)&v91 - v29;
  v30 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (!v30)
  {
    __break(1u);
    goto LABEL_19;
  }
  v31 = v30;
  v32 = objc_msgSend(v30, sel_features);

  if (!v32)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v33 = objc_msgSend(v32, sel_chamomile);

  if (!v33)
  {
    sub_232005578();
    swift_allocError();
    *v42 = 0;
LABEL_10:
    swift_willThrow();
    return;
  }
  v96 = a2;
  v97 = a3;
  v34 = (void *)objc_opt_self();
  v35 = (void *)*v4;
  v36 = objc_msgSend(v34, sel_sharedInstanceForHealthStore_, *v4);
  if (!v36)
  {
LABEL_20:
    __break(1u);
    return;
  }
  v37 = v36;
  sub_2320E257C();
  v38 = (void *)MEMORY[0x2348FE6C4]((id)*MEMORY[0x24BDD3720]);
  v39 = objc_msgSend(v37, sel_displayTypeForObjectType_, v38);

  if (!v39)
  {
    sub_232000300();
    swift_allocError();
    goto LABEL_10;
  }
  v40 = v109;
  sub_232084890(a1);
  if (v40)
  {

  }
  else if (v41)
  {
    v109 = v41;
    v43 = (id *)((char *)v4 + *(int *)(type metadata accessor for GAD7AssessmentSnidgetFeedItemModelProvider() + 20));
    v44 = *(int *)(type metadata accessor for SnidgetFeedItemGeneratorRequest(0) + 32);
    v94 = v43;
    v45 = *(id *)((char *)v43 + v44);
    v93 = v45;
    type metadata accessor for MostRecentSampleSnidgetStringBuilder();
    inited = swift_initStackObject();
    *(_QWORD *)(inited + 16) = v35;
    v47 = (void *)objc_opt_self();
    v92 = v45;
    v48 = v35;
    v49 = objc_msgSend(v47, sel_sharedInstanceForHealthStore_, v48);
    v50 = inited;
    *(_QWORD *)(inited + 32) = v49;
    if (v93)
    {
      v51 = v92;
    }
    else
    {
      v62 = v49;
      v51 = objc_msgSend(v62, sel_createHKUnitPreferenceController);

    }
    *(_QWORD *)(v50 + 24) = v51;
    v95 = v50;
    v63 = v109;
    objc_msgSend(v109, sel_risk);
    v64 = (id)HKUILocalizedStringForGAD7Risk();
    sub_232200EC4();

    v65 = v105;
    SnidgetStringBuilder.makePrimaryAttributedString(localizedString:)();
    swift_bridgeObjectRelease();
    sub_2321FF208();
    sub_232000448();
    v67 = *(int *)(v66 + 48);
    v93 = v39;
    objc_msgSend(v63, sel_dateData);
    v68 = (id)HKDecodeDateForValue();
    sub_2321FDC30();

    v25[v67] = 0;
    v69 = *MEMORY[0x24BE42FD8];
    v70 = sub_2321FEF5C();
    v71 = *(_QWORD *)(v70 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v71 + 104))(v25, v69, v70);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v25, 0, 1, v70);
    v92 = (id)sub_2321FF1FC();
    v72 = v106;
    v73 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v106 + 56);
    v74 = v101;
    v73(v98, 1, 1, v101);
    (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v28, v65, v74);
    v75 = v74;
    v73(v99, 1, 1, v74);
    v107 = 0x5F74656764696E53;
    v108 = 0xE800000000000000;
    v76 = v94[2];
    v77 = objc_msgSend(v76, sel_description);
    sub_232200EC4();

    sub_232200F48();
    swift_bridgeObjectRelease();
    v78 = v100;
    sub_2321FF58C();
    swift_bridgeObjectRelease();
    v79 = sub_2321FF5A4();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56))(v78, 0, 1, v79);
    sub_2321FF6C4();
    swift_allocObject();
    v80 = sub_2321FF6B8();
    v81 = v109;
    objc_msgSend(v109, sel_dateData);
    v82 = (id)HKDecodeDateForValue();
    sub_2321FDC30();

    v83 = (uint64_t)v103;
    sub_2321FE62C();
    v84 = sub_2321FE65C();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(v83, 0, 1, v84);
    v85 = sub_2321FD8B8();
    v86 = (uint64_t)v104;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 56))(v104, 1, 1, v85);
    sub_2320453F8(0);
    v89 = v96;
    v88 = v97;
    v90 = (_BYTE *)(v97 + *(int *)(v87 + 52));
    swift_bridgeObjectRetain();
    sub_2320D71E8(1, v83, v89, v86, v90);
    swift_release();

    *(_QWORD *)v88 = v92;
    *(_QWORD *)(v88 + 8) = v80;
    *(_BYTE *)(v88 + 16) = 1;
    (*(void (**)(char *, uint64_t))(v106 + 8))(v105, v75);
  }
  else
  {
    v52 = sub_2321FE65C();
    v53 = (uint64_t)v103;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v103, 1, 1, v52);
    v54 = sub_2321FD8B8();
    v55 = (uint64_t)v104;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v104, 1, 1, v54);
    v56 = v96;
    swift_bridgeObjectRetain();
    sub_2320D71E8(0, v53, v56, v55, v10);
    sub_2321FF208();
    v57 = sub_2321FEF5C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v25, 1, 1, v57);
    v58 = v39;
    v59 = sub_2321FF1FC();
    sub_2320453F8(0);
    v61 = v97;
    sub_23200054C((uint64_t)v10, v97 + *(int *)(v60 + 52), type metadata accessor for SnidgetFeedItemMetadata);

    *(_QWORD *)v61 = v59;
    *(_QWORD *)(v61 + 8) = 0;
    *(_BYTE *)(v61 + 16) = 1;
    sub_2320003D0((uint64_t)v10);
  }
}

void sub_2320E255C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_2320E1C64(*(void **)a1, *(_QWORD *)(a1 + 16), a2);
}

unint64_t sub_2320E257C()
{
  unint64_t result;

  result = qword_255F9E3B0;
  if (!qword_255F9E3B0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255F9E3B0);
  }
  return result;
}

ValueMetadata *type metadata accessor for PregnancyAdditionalInputSignalsProvider()
{
  return &type metadata for PregnancyAdditionalInputSignalsProvider;
}

uint64_t sub_2320E25CC()
{
  uint64_t v0;
  unint64_t inited;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t (*v7)(uint64_t);

  sub_232031990();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_232210D30;
  sub_232027434();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232210D20;
  sub_2320E2764();
  *(_QWORD *)(inited + 32) = MEMORY[0x2348FE4A8]((id)*MEMORY[0x24BDD29D8]);
  sub_232201050();
  v2 = inited;
  if (inited >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_232201998();
    swift_bridgeObjectRelease();
    if (!v3)
      goto LABEL_5;
    goto LABEL_3;
  }
  if (*(_QWORD *)((inited & 0xFFFFFFFFFFFFF8) + 0x10))
LABEL_3:
    sub_2321AA560(v2);
LABEL_5:
  swift_bridgeObjectRelease();
  v4 = sub_2321FE920();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BE48310];
  *(_QWORD *)(v0 + 56) = v4;
  *(_QWORD *)(v0 + 64) = sub_232000590(&qword_2541B6AB8, v5, MEMORY[0x24BE48300]);
  sub_2320251BC((uint64_t *)(v0 + 32));
  sub_2321FE914();
  sub_2321FFB74();
  v6 = sub_2321FFB44();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BE47138];
  *(_QWORD *)(v0 + 96) = v6;
  *(_QWORD *)(v0 + 104) = sub_232000590((unint64_t *)&qword_2541B6B38, v7, MEMORY[0x24BE47130]);
  sub_2320251BC((uint64_t *)(v0 + 72));
  sub_2321FFB68();
  return v0;
}

unint64_t sub_2320E2764()
{
  unint64_t result;

  result = qword_2541B0C20;
  if (!qword_2541B0C20)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2541B0C20);
  }
  return result;
}

unint64_t sub_2320E27A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE v52[16];
  uint64_t v53;
  unint64_t v54;

  sub_2320002B4(0, &qword_2541B69C8, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v36 - v3;
  v44 = sub_2321FDCC0();
  v5 = *(_QWORD *)(v44 - 8);
  v6 = MEMORY[0x24BDAC7A8](v44);
  v41 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v40 = (char *)&v36 - v8;
  sub_2320002B4(0, &qword_255F9E3D8, (void (*)(uint64_t))MEMORY[0x24BE48348]);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v36 - v10;
  v12 = sub_2321FE95C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v43 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v39 = (char *)&v36 - v16;
  v17 = -1 << *(_BYTE *)(a1 + 32);
  v18 = *(_QWORD *)(a1 + 64);
  v19 = ~v17;
  v20 = -v17;
  v45 = a1;
  v46 = a1 + 64;
  if (v20 < 64)
    v21 = ~(-1 << v20);
  else
    v21 = -1;
  v47 = v19;
  v48 = 0;
  v49 = v21 & v18;
  v50 = 0;
  swift_bridgeObjectRetain();
  sub_2320E3520(&v51);
  sub_2320E3D68((uint64_t)&v51, (uint64_t)v52);
  if (v53)
  {
    v42 = v5;
    v54 = MEMORY[0x24BEE4AF8];
    v38 = v12;
    v37 = v13;
    do
    {
      sub_2321FDC78();
      v22 = (uint64_t)v4;
      v23 = v42;
      v24 = v44;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v22, 1, v44) == 1)
      {
        sub_23200040C(v22, &qword_2541B69C8, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
        v25 = 1;
      }
      else
      {
        v26 = v11;
        v27 = v40;
        (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(v40, v22, v24);
        (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v41, v27, v24);
        swift_bridgeObjectRetain();
        v12 = v38;
        sub_2321FE944();
        v28 = v27;
        v11 = v26;
        v13 = v37;
        (*(void (**)(char *, uint64_t))(v23 + 8))(v28, v24);
        v25 = 0;
      }
      v4 = (char *)v22;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v25, 1, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
      {
        sub_23200040C((uint64_t)v11, &qword_255F9E3D8, (void (*)(uint64_t))MEMORY[0x24BE48348]);
      }
      else
      {
        v29 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
        v30 = v39;
        v29(v39, v11, v12);
        v29(v43, v30, v12);
        v31 = v54;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v31 = sub_2320974F4(0, *(_QWORD *)(v31 + 16) + 1, 1, v31);
        v33 = *(_QWORD *)(v31 + 16);
        v32 = *(_QWORD *)(v31 + 24);
        if (v33 >= v32 >> 1)
          v31 = sub_2320974F4(v32 > 1, v33 + 1, 1, v31);
        *(_QWORD *)(v31 + 16) = v33 + 1;
        v34 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
        v54 = v31;
        v29((char *)(v31 + v34 + *(_QWORD *)(v13 + 72) * v33), v43, v12);
      }
      sub_2320E3520(&v51);
      sub_2320E3D68((uint64_t)&v51, (uint64_t)v52);
    }
    while (v53);
  }
  else
  {
    v54 = MEMORY[0x24BEE4AF8];
  }
  sub_23201B04C();
  return v54;
}

unint64_t sub_2320E2BF4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_2320E3E88(0, qword_255F9DED8, MEMORY[0x24BEE4AD8] + 8, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x24BEE30A0]);
  v2 = sub_2322019C8();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_23200054C(v6, (uint64_t)&v15, (uint64_t (*)(_QWORD))sub_2320E3EDC);
    v7 = v15;
    v8 = v16;
    result = sub_23216A80C(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_232015B58(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2320E2D40(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t result;
  char v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[2];

  sub_2320E3B70();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (_QWORD *)((char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_2320A7FC8();
  v7 = sub_2322019C8();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = (char *)v6 + *(int *)(v3 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v26[1] = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_23200054C(v13, (uint64_t)v6, (uint64_t (*)(_QWORD))sub_2320E3B70);
    v15 = *v6;
    v16 = v6[1];
    result = sub_23216A80C(*v6, v16);
    if ((v18 & 1) != 0)
      break;
    v19 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v20 = (uint64_t *)(v8[6] + 16 * result);
    *v20 = v15;
    v20[1] = v16;
    v21 = v8[7];
    v22 = sub_2321FDC6C();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v19, v10, v22);
    v23 = v8[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_11;
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2320E2ED8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_2320E3E88(0, &qword_255F9DEC0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x24BEE30A0]);
  v2 = (_QWORD *)sub_2322019C8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_23216A80C(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

_OWORD *sub_2320E300C(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_23216A80C(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        sub_232016AFC((uint64_t)v19);
        return sub_232015B58(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_2320A4618();
      goto LABEL_7;
    }
    sub_2320A5794(v15, a4 & 1);
    v21 = sub_23216A80C(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_2320E33B0(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_232201B30();
  __break(1u);
  return result;
}

uint64_t sub_2320E313C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  char v23;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_23216A80C(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        v20 = sub_2321FDC6C();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v12, a1, v20);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_2320A481C();
      goto LABEL_7;
    }
    sub_2320A5AB4(v15, a4 & 1);
    v22 = sub_23216A80C(a2, a3);
    if ((v16 & 1) == (v23 & 1))
    {
      v12 = v22;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_2320E3418(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_232201B30();
  __break(1u);
  return result;
}

_OWORD *sub_2320E3278(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _OWORD *v17;
  _OWORD *result;
  unint64_t v19;
  char v20;
  _BYTE v21[40];

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_23216AD14(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_OWORD *)(v16[7] + 32 * v10);
        sub_232016AFC((uint64_t)v17);
        return sub_232015B58(a1, v17);
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_2320A4A74();
      goto LABEL_7;
    }
    sub_2320A5E18(v13, a3 & 1);
    v19 = sub_23216AD14(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_232083F04(a2, (uint64_t)v21);
      return sub_2320E34A8(v10, (uint64_t)v21, a1, v16);
    }
  }
  result = (_OWORD *)sub_232201B30();
  __break(1u);
  return result;
}

_OWORD *sub_2320E33B0(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_232015B58(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_2320E3418(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v8 = (_QWORD *)(a5[6] + 16 * a1);
  *v8 = a2;
  v8[1] = a3;
  v9 = a5[7];
  v10 = sub_2321FDC6C();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, a4, v10);
  v12 = a5[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a5[2] = v14;
  return result;
}

_OWORD *sub_2320E34A8(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v5;
  __int128 v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v5 = a4[6] + 40 * a1;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(a2 + 32);
  result = sub_232015B58(a3, (_OWORD *)(a4[7] + 32 * a1));
  v8 = a4[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a4[2] = v10;
  return result;
}

uint64_t sub_2320E3520@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  int64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;

  v3 = *v1;
  v5 = v1[3];
  v4 = v1[4];
  v6 = v5;
  if (!v4)
  {
    v18 = v5 + 1;
    if (__OFADD__(v5, 1))
      goto LABEL_26;
    v19 = (unint64_t)(v1[2] + 64) >> 6;
    if (v18 < v19)
    {
      v20 = v1[1];
      v21 = *(_QWORD *)(v20 + 8 * v18);
      if (v21)
      {
LABEL_8:
        v7 = (v21 - 1) & v21;
        v8 = __clz(__rbit64(v21)) + (v18 << 6);
        v6 = v18;
        goto LABEL_3;
      }
      v22 = v5 + 2;
      v6 = v5 + 1;
      if (v5 + 2 < v19)
      {
        v21 = *(_QWORD *)(v20 + 8 * v22);
        if (v21)
        {
LABEL_11:
          v18 = v22;
          goto LABEL_8;
        }
        v6 = v5 + 2;
        if (v5 + 3 < v19)
        {
          v21 = *(_QWORD *)(v20 + 8 * (v5 + 3));
          if (v21)
          {
            v18 = v5 + 3;
            goto LABEL_8;
          }
          v22 = v5 + 4;
          v6 = v5 + 3;
          if (v5 + 4 < v19)
          {
            v21 = *(_QWORD *)(v20 + 8 * v22);
            if (v21)
              goto LABEL_11;
            v18 = v5 + 5;
            v6 = v5 + 4;
            if (v5 + 5 < v19)
            {
              v21 = *(_QWORD *)(v20 + 8 * v18);
              if (v21)
                goto LABEL_8;
              v6 = v19 - 1;
              v23 = v5 + 6;
              while (v19 != v23)
              {
                v21 = *(_QWORD *)(v20 + 8 * v23++);
                if (v21)
                {
                  v18 = v23 - 1;
                  goto LABEL_8;
                }
              }
            }
          }
        }
      }
    }
    v16 = 0;
    v12 = 0;
    v11 = 0;
    v15 = 0;
    v14 = 0;
    v1[3] = v6;
    v1[4] = 0;
    goto LABEL_24;
  }
  v7 = (v4 - 1) & v4;
  v8 = __clz(__rbit64(v4)) | (v5 << 6);
LABEL_3:
  v9 = 16 * v8;
  v10 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v8);
  v12 = *v10;
  v11 = v10[1];
  v13 = (uint64_t *)(*(_QWORD *)(v3 + 56) + v9);
  v15 = *v13;
  v14 = v13[1];
  v1[3] = v6;
  v1[4] = v7;
  v16 = v1[5];
  if (!__OFADD__(v16, 1))
  {
    v1[5] = v16 + 1;
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
LABEL_24:
    *a1 = v16;
    a1[1] = v12;
    a1[2] = v11;
    a1[3] = v15;
    a1[4] = v14;
    return result;
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_2320E36BC(uint64_t a1)
{
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v43;
  uint64_t result;
  _QWORD v45[2];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  _OWORD v56[2];
  __int128 v57;
  uint64_t v58;
  _QWORD v59[6];

  v2 = sub_2321FDCC0();
  v3 = (void (*)(uint64_t))MEMORY[0x24BDCEA58];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v50 = (char *)v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2321FE7DC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v53 = (char *)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, &qword_2541B69C8, v3);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v45 - v10;
  v51 = v4;
  v52 = v2;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))((char *)v45 - v10, 1, 1, v2);
  sub_2320E3AF8();
  v12 = sub_2321FF0F4();
  sub_23200040C((uint64_t)v11, &qword_2541B69C8, v3);
  v13 = (_QWORD *)sub_2320E2ED8(MEMORY[0x24BEE4AF8]);
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
  {
LABEL_17:
    *(_QWORD *)&v57 = 0xD000000000000032;
    *((_QWORD *)&v57 + 1) = 0x80000002322069C0;
    v40 = MEMORY[0x24BEE0D00];
    sub_232201854();
    sub_2320E3E88(0, &qword_255F9E3C0, v40, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x24BEE0460]);
    v58 = v41;
    *(_QWORD *)&v57 = v13;
    sub_232015B58(&v57, v56);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v55 = v12;
    sub_2320E3278(v56, (uint64_t)v59, isUniquelyReferenced_nonNull_native);
    v43 = v55;
    swift_bridgeObjectRelease();
    sub_2320E3B3C((uint64_t)v59);
    return v43;
  }
  v45[0] = v12;
  v15 = v7;
  v16 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v46 = *(_QWORD *)(v15 + 72);
  v47 = v15;
  v49 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v45[1] = a1;
  swift_bridgeObjectRetain();
  v17 = v53;
  v48 = v6;
  while (1)
  {
    v54 = v14;
    v49(v17, v16, v6);
    v19 = sub_2321FE794();
    v21 = v20;
    v22 = v50;
    sub_2321FE7D0();
    v23 = sub_2321FDC84();
    v25 = v24;
    (*(void (**)(char *, uint64_t))(v51 + 8))(v22, v52);
    v26 = swift_isUniquelyReferenced_nonNull_native();
    v59[0] = v13;
    v28 = sub_23216A80C(v19, v21);
    v29 = v13[2];
    v30 = (v27 & 1) == 0;
    v31 = v29 + v30;
    if (__OFADD__(v29, v30))
      break;
    v32 = v27;
    if (v13[3] >= v31)
    {
      if ((v26 & 1) != 0)
      {
        v13 = (_QWORD *)v59[0];
        if ((v27 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_2320A4C78();
        v13 = (_QWORD *)v59[0];
        if ((v32 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_2320A614C(v31, v26);
      v33 = sub_23216A80C(v19, v21);
      if ((v32 & 1) != (v34 & 1))
        goto LABEL_20;
      v28 = v33;
      v13 = (_QWORD *)v59[0];
      if ((v32 & 1) != 0)
      {
LABEL_3:
        v18 = (uint64_t *)(v13[7] + 16 * v28);
        swift_bridgeObjectRelease();
        *v18 = v23;
        v18[1] = v25;
        goto LABEL_4;
      }
    }
    v13[(v28 >> 6) + 8] |= 1 << v28;
    v35 = (uint64_t *)(v13[6] + 16 * v28);
    *v35 = v19;
    v35[1] = v21;
    v36 = (uint64_t *)(v13[7] + 16 * v28);
    *v36 = v23;
    v36[1] = v25;
    v37 = v13[2];
    v38 = __OFADD__(v37, 1);
    v39 = v37 + 1;
    if (v38)
      goto LABEL_19;
    v13[2] = v39;
    swift_bridgeObjectRetain();
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v17 = v53;
    v6 = v48;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v53, v48);
    v16 += v46;
    v14 = v54 - 1;
    if (v54 == 1)
    {
      swift_bridgeObjectRelease();
      v12 = v45[0];
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_232201B30();
  __break(1u);
  return result;
}

unint64_t sub_2320E3AF8()
{
  unint64_t result;

  result = qword_255F9E3B8;
  if (!qword_255F9E3B8)
  {
    result = MEMORY[0x2348FF39C](&unk_232214CF0, &type metadata for SummariesNotificationUserInfo);
    atomic_store(result, (unint64_t *)&qword_255F9E3B8);
  }
  return result;
}

uint64_t sub_2320E3B3C(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

void sub_2320E3B70()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255F9E3C8)
  {
    sub_2321FDC6C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255F9E3C8);
  }
}

unint64_t sub_2320E3BD4(unint64_t a1)
{
  unint64_t v2;
  char v3;
  _QWORD *v4;
  _BYTE v6[40];
  __int128 v7;
  __int128 v8;

  sub_232201854();
  if (*(_QWORD *)(a1 + 16) && (v2 = sub_23216AD14((uint64_t)v6), (v3 & 1) != 0))
  {
    sub_232015B68(*(_QWORD *)(a1 + 56) + 32 * v2, (uint64_t)&v7);
  }
  else
  {
    v7 = 0u;
    v8 = 0u;
  }
  sub_2320E3B3C((uint64_t)v6);
  if (!*((_QWORD *)&v8 + 1))
  {
    sub_232031840((uint64_t)&v7);
    goto LABEL_9;
  }
  sub_2320E3E88(0, &qword_255F9E3C0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x24BEE0460]);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    sub_2320E3D24();
    swift_allocError();
    *v4 = 0xD000000000000032;
    v4[1] = 0x80000002322069C0;
    swift_willThrow();
    return a1;
  }
  a1 = sub_2320E27A0(0xD000000000000032);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_2320E3D24()
{
  unint64_t result;

  result = qword_255F9E3D0;
  if (!qword_255F9E3D0)
  {
    result = MEMORY[0x2348FF39C](&unk_232214CB0, &type metadata for SummariesNotificationUserInfo.ProcessError);
    atomic_store(result, (unint64_t *)&qword_255F9E3D0);
  }
  return result;
}

uint64_t sub_2320E3D68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2320002B4(0, &qword_255F9E3E0, (void (*)(uint64_t))sub_2320E3DBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_2320E3DBC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255F9E3E8)
  {
    sub_2320E3E24();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255F9E3E8);
  }
}

void sub_2320E3E24()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255F9E3F0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255F9E3F0);
  }
}

void sub_2320E3E88(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, uint64_t, _QWORD))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = a4(0, MEMORY[0x24BEE0D00], a3, MEMORY[0x24BEE0D10]);
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_2320E3EDC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255F9E3F8)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255F9E3F8);
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for SummariesNotificationUserInfo.ProcessError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SummariesNotificationUserInfo.ProcessError(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for SummariesNotificationUserInfo.ProcessError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SummariesNotificationUserInfo.ProcessError()
{
  return &type metadata for SummariesNotificationUserInfo.ProcessError;
}

ValueMetadata *type metadata accessor for SummariesNotificationUserInfo()
{
  return &type metadata for SummariesNotificationUserInfo;
}

void sub_2320E4004(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t inited;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  unint64_t v27;
  _QWORD v28[2];
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;

  v3 = v2;
  v6 = sub_2321FFFDC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_2321FE38C();
  v32 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v33 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232027434();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232210D20;
  type metadata accessor for CorrelatedTrendSummarySharableModelGenerator.Request(0);
  *(_QWORD *)(inited + 32) = sub_2321FE464();
  v35 = inited;
  sub_232201050();
  v12 = v35;
  v13 = *v3;
  v35 = MEMORY[0x24BEE4AF8];
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    v29 = v12;
    v30 = a1;
    v31 = a2;
    v15 = v13 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v28[1] = v13;
    swift_bridgeObjectRetain();
    do
    {
      v17(v9, v15, v6);
      v18 = sub_2321FFE2C();
      v19 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if (v18)
      {
        MEMORY[0x2348FE190](v19);
        if (*(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23220105C();
        sub_232201074();
        sub_232201050();
      }
      v15 += v16;
      --v14;
    }
    while (v14);
    v20 = v35;
    v12 = v29;
  }
  else
  {
    swift_bridgeObjectRetain();
    v20 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  v35 = v12;
  sub_23209D3E8(v20);
  v21 = (void *)sub_2321FE3F8();
  sub_2320057B8(0, &qword_2541B7530, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v22 = sub_2321FE194();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_232210D40;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v23 + 104))(v25 + v24, *MEMORY[0x24BE47448], v22);
  v26 = v21;
  sub_2321A492C(v25);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v27 = swift_bridgeObjectRetain();
  sub_2321A4950(v27);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v33, *MEMORY[0x24BE47918], v34);
  sub_2321FE3B0();
  swift_bridgeObjectRelease();

}

uint64_t sub_2320E4340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t result;

  result = sub_2320E4384(a1, a2, a3, a4);
  *a5 = result;
  return result;
}

uint64_t sub_2320E4384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[16];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v5 = v4;
  sub_2320257F4(0);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v14 = &v19[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = sub_2321FFFC4();
  v20 = a1;
  v21 = a2;
  v22 = v5;
  v23 = a3;
  v24 = a4;
  v25 = v5;
  v16 = sub_23209CE78((_QWORD *(*)(uint64_t *__return_ptr, uint64_t))sub_2320E5FA0, (uint64_t)v19, v15);
  swift_bridgeObjectRelease();
  v26 = v16;
  sub_2320E60EC(0, (unint64_t *)&qword_255F9C260, (unint64_t *)&qword_255F9C268, &qword_255F9C078, 0x24BE4A4B0);
  sub_2320E5FC0();
  sub_2320258E0();
  sub_232000590(&qword_255F9C2A0, (uint64_t (*)(uint64_t))sub_2320E5FC0, MEMORY[0x24BEE12C8]);
  sub_2322005E8();
  sub_232000590(&qword_255F9C280, (uint64_t (*)(uint64_t))sub_2320257F4, MEMORY[0x24BDB99D8]);
  v17 = sub_232200774();
  (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v11);
  return v17;
}

id sub_2320E4510@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t i;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id result;
  uint64_t v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  unint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  unint64_t v25;

  v4 = sub_2321FE6D4();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a1;
  v8 = MEMORY[0x24BEE4AF8];
  v25 = MEMORY[0x24BEE4AF8];
  v9 = *(_QWORD *)(v7 + 16);
  if (!v9)
  {
    v12 = MEMORY[0x24BEE4AF8];
    if (!(MEMORY[0x24BEE4AF8] >> 62))
      goto LABEL_5;
LABEL_15:
    swift_bridgeObjectRetain();
    v13 = sub_232201998();
    swift_bridgeObjectRelease();
    if (v13)
      goto LABEL_6;
LABEL_16:
    swift_bridgeObjectRelease();
    v21 = MEMORY[0x24BEE4AF8];
LABEL_17:
    sub_232003E9C(0, &qword_255F9C060);
    sub_2321FE6B0();
    result = HKCodableSummaryCorrelatedTrendResults.init(values:version:)(v21, (uint64_t)v6);
    *a2 = result;
    return result;
  }
  swift_bridgeObjectRetain();
  for (i = 0; i != v9; ++i)
  {
    v11 = swift_bridgeObjectRetain();
    sub_23209D73C(v11);
  }
  swift_bridgeObjectRelease();
  v12 = v25;
  if (v25 >> 62)
    goto LABEL_15;
LABEL_5:
  v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v13)
    goto LABEL_16;
LABEL_6:
  v25 = v8;
  result = (id)sub_2322018FC();
  if ((v13 & 0x8000000000000000) == 0)
  {
    v23 = v6;
    v24 = a2;
    v15 = 0;
    while (v13 != v15)
    {
      v16 = *(id *)(v12 + 8 * v15 + 32);
      result = objc_msgSend(v16, sel_objectTypeIdentifier);
      if (!result)
        goto LABEL_20;
      v17 = result;
      sub_232200EC4();

      result = objc_msgSend(v16, sel_trendValue);
      if (!result)
        goto LABEL_21;
      v18 = result;
      result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A4B0]), sel_init);
      if (!result)
        goto LABEL_22;
      ++v15;
      v19 = result;
      v20 = (void *)sub_232200E94();
      swift_bridgeObjectRelease();
      objc_msgSend(v19, sel_setObjectTypeIdentifier_, v20);

      objc_msgSend(v19, sel_setTrendValue_, v18);
      sub_2322018E4();
      sub_232201908();
      sub_232201914();
      result = (id)sub_2322018F0();
      if (v13 == v15)
      {
        v21 = v25;
        swift_bridgeObjectRelease();
        v6 = v23;
        a2 = v24;
        goto LABEL_17;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

void sub_2320E47C8(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;

  v30 = a3;
  v31 = a4;
  v28 = sub_2321FE6D4();
  v6 = *(_QWORD *)(v28 - 8);
  v7 = MEMORY[0x24BDAC7A8](v28);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v28 - v10;
  v12 = sub_2321FE704();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a1;
  type metadata accessor for CorrelatedTrendSummarySharableModelGenerator.Request(0);
  v29 = a2;
  v17 = v16;
  sub_2321FE47C();
  v18 = (void *)sub_2321FE6F8();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_2321FE6B0();
  v19 = objc_msgSend(v17, sel_data);
  if (v19)
  {
    v20 = v19;
    v21 = sub_2321FDAD4();
    v23 = v22;

  }
  else
  {
    v21 = 0;
    v23 = 0xF000000000000000;
  }
  sub_232003E9C(0, (unint64_t *)&qword_2541B0C70);
  v24 = v28;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v28);
  sub_232015CE4(v21, v23, 3, v18);
  v26 = v25;

  sub_23201602C(v21, v23);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v24);
  v27 = sub_2321ABB88(v29, v30, v26);

  *v31 = v27;
}

uint64_t sub_2320E49C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (**v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (**v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (**v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  os_log_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t (**v43)(uint64_t, uint64_t);
  Class v44;
  char *v45;
  unint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t result;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  char *v64;
  Class v65;
  char *v66;
  NSObject *v67;
  os_log_type_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  Class isa;
  os_log_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t (**v94)(char *, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t (**v99)(uint64_t, uint64_t);
  uint64_t v100;
  uint64_t v101[2];
  uint64_t v102;

  v88 = a7;
  v83 = a6;
  v80 = a5;
  v81 = a4;
  v82 = a3;
  v92 = a2;
  v98 = a8;
  v95 = sub_2321FFE08();
  v93 = *(_QWORD *)(v95 - 8);
  MEMORY[0x24BDAC7A8](v95);
  v100 = (uint64_t)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320E6034();
  v85 = *(_QWORD *)(v10 - 8);
  v86 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v84 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  MEMORY[0x24BDAC7A8](v12);
  v78 = (uint64_t)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2321FFFDC();
  isa = v14[-1].isa;
  v91 = v14;
  v15 = *((_QWORD *)isa + 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v79 = (char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v94 = (uint64_t (**)(char *, uint64_t))((char *)&v78 - v17);
  v18 = sub_23220039C();
  v96 = *(_QWORD *)(v18 - 8);
  v97 = v18;
  v19 = MEMORY[0x24BDAC7A8](v18);
  v99 = (uint64_t (**)(uint64_t, uint64_t))((char *)&v78 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v19);
  v89 = (char *)&v78 - v21;
  v22 = sub_232200024();
  v23 = *(void (***)(char *, char *, uint64_t))(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v78 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_2321FFD78();
  v27 = *(void (***)(char *, uint64_t))(v26 - 8);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v87 = (char *)&v78 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)&v78 - v30;
  v32 = a1;
  sub_2321FFD90();
  v33 = v27;
  v34 = v26;
  if (((unsigned int (*)(char *, uint64_t))v33[11])(v31, v26) == *MEMORY[0x24BE4AD28])
  {
    v100 = v32;
    v33[12](v31, v26);
    v23[4](v25, v31, v22);
    v36 = v91;
    v35 = v92;
    v37 = sub_2321FFE2C();
    v38 = v22;
    v39 = (char *)v94;
    if (v37)
    {
      v40 = (void *)v37;
      objc_opt_self();
      v41 = (void *)swift_dynamicCastObjCClass();
      if (v41)
      {
        v42 = v78;
        sub_2320E52A0(v100, (uint64_t)v25, v41, v78);
        v99 = (uint64_t (**)(uint64_t, uint64_t))sub_23216E370(v82, v42, v83);
        v100 = v38;
        v43 = v99;
        sub_232002CEC(v42, type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request);
        v102 = (uint64_t)v43;
        v44 = isa;
        v45 = v79;
        (*((void (**)(char *, uint64_t, os_log_t))isa + 2))(v79, v35, v36);
        v46 = (*((unsigned __int8 *)v44 + 80) + 16) & ~(unint64_t)*((unsigned __int8 *)v44 + 80);
        v47 = swift_allocObject();
        (*((void (**)(unint64_t, char *, os_log_t))v44 + 4))(v47 + v46, v45, v36);
        sub_2320E60EC(0, &qword_2541B2FC0, (unint64_t *)&qword_2541B5528, &qword_2541B0C88, 0x24BE4A538);
        sub_2320C0624(0, (unint64_t *)&qword_255F9C268, &qword_255F9C078, 0x24BE4A4B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
        sub_2320E6160();
        v48 = v84;
        sub_2322007A4();
        swift_release();
        sub_232000590(&qword_255F9E4E8, (uint64_t (*)(uint64_t))sub_2320E6034, MEMORY[0x24BDB96C0]);
        v49 = v86;
        v50 = sub_232200774();

        swift_release();
        (*(void (**)(char *, uint64_t))(v85 + 8))(v48, v49);
        result = ((uint64_t (*)(char *, uint64_t))v23[1])(v25, v100);
        *v98 = v50;
        return result;
      }

    }
    v64 = v89;
    sub_232200354();
    v65 = isa;
    (*((void (**)(char *, uint64_t, os_log_t))isa + 2))(v39, v35, v36);
    v66 = v39;
    v67 = sub_232200390();
    v68 = sub_2322012E4();
    v69 = v68;
    if (os_log_type_enabled(v67, v68))
    {
      v70 = swift_slowAlloc();
      v100 = v38;
      v71 = v70;
      v72 = swift_slowAlloc();
      v99 = (uint64_t (**)(uint64_t, uint64_t))v23;
      v73 = v72;
      v101[0] = v72;
      *(_DWORD *)v71 = 136315394;
      LODWORD(v93) = v69;
      v102 = v88;
      swift_getMetatypeMetadata();
      v74 = sub_232200F00();
      v95 = (uint64_t)v25;
      v102 = sub_232013174(v74, v75, v101);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v71 + 12) = 2080;
      v102 = sub_2321FFE2C();
      sub_2320C0624(0, (unint64_t *)&qword_255F9C4C8, (unint64_t *)&qword_2541B74A0, 0x24BDD3DC0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v76 = sub_232200F00();
      v102 = sub_232013174(v76, v77, v101);
      sub_232201710();
      swift_bridgeObjectRelease();
      (*((void (**)(char *, os_log_t))v65 + 1))(v66, v36);
      _os_log_impl(&dword_231FFB000, v67, (os_log_type_t)v93, "[%s]: Cannot perform statistics query on non-sample-type: %s", (uint8_t *)v71, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v73, -1, -1);
      MEMORY[0x2348FF468](v71, -1, -1);

      (*(void (**)(char *, uint64_t))(v96 + 8))(v89, v97);
      result = v99[1](v95, v100);
    }
    else
    {

      (*((void (**)(char *, os_log_t))v65 + 1))(v66, v36);
      (*(void (**)(char *, uint64_t))(v96 + 8))(v64, v97);
      result = ((uint64_t (*)(char *, uint64_t))v23[1])(v25, v38);
    }
    *v98 = 0;
  }
  else
  {
    v94 = (uint64_t (**)(char *, uint64_t))v33;
    sub_232200354();
    v52 = v93;
    v53 = v95;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v93 + 16))(v100, v32, v95);
    v54 = sub_232200390();
    v55 = sub_2322012E4();
    v56 = v55;
    if (os_log_type_enabled(v54, v55))
    {
      v57 = swift_slowAlloc();
      v92 = swift_slowAlloc();
      v101[0] = v92;
      *(_DWORD *)v57 = 136315394;
      v91 = v54;
      v102 = v88;
      swift_getMetatypeMetadata();
      LODWORD(isa) = v56;
      v58 = sub_232200F00();
      v102 = sub_232013174(v58, v59, v101);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v57 + 12) = 2080;
      v60 = v100;
      sub_2321FFD90();
      v61 = sub_232200F00();
      v102 = sub_232013174(v61, v62, v101);
      sub_232201710();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v60, v95);
      v54 = v91;
      _os_log_impl(&dword_231FFB000, v91, (os_log_type_t)isa, "[%s]: Unsupported correlated query subquery type: %s", (uint8_t *)v57, 0x16u);
      v63 = v92;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v63, -1, -1);
      MEMORY[0x2348FF468](v57, -1, -1);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v100, v53);
    }

    (*(void (**)(uint64_t (**)(uint64_t, uint64_t), uint64_t))(v96 + 8))(v99, v97);
    *v98 = 0;
    return v94[1](v31, v34);
  }
  return result;
}

uint64_t sub_2320E52A0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v31 = a2;
  v32 = a3;
  v30 = a1;
  v35 = a4;
  v4 = sub_2321FDCC0();
  v33 = *(_QWORD *)(v4 - 8);
  v34 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_2321FE704();
  v28 = *(_QWORD *)(v8 - 8);
  v29 = v8;
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = sub_2321FE4A0();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_232200024();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_2321FFE08();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v28 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v22 + 16))(v21, v30);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v31, v15);
  type metadata accessor for CorrelatedTrendSummarySharableModelGenerator.Request(0);
  v23 = v32;
  sub_2321FE47C();
  sub_2321FE6F8();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v29);
  sub_2321FE6E0();
  sub_2321FE488();
  sub_2321FE470();
  sub_2321FDCB4();
  v24 = sub_2321FDC84();
  v26 = v25;
  (*(void (**)(char *, uint64_t))(v33 + 8))(v6, v34);
  return sub_2320E9F00((uint64_t)v21, (uint64_t)v18, (uint64_t)v14, 0, v24, v26, v35);
}

void sub_2320E5548(void **a1@<X0>, _QWORD *a2@<X8>)
{
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;

  v3 = *a1;
  sub_2321FFFD0();
  v4 = objc_allocWithZone(MEMORY[0x24BE4A4B0]);
  v5 = v3;
  v6 = objc_msgSend(v4, sel_init);
  if (v6)
  {
    v7 = v6;
    v8 = (void *)sub_232200E94();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setObjectTypeIdentifier_, v8);

    objc_msgSend(v7, sel_setTrendValue_, v5);
    *a2 = v7;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2320E5620()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC9Summaries44CorrelatedTrendSummarySharableModelGenerator_domain;
  v2 = sub_2321FE3BC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  sub_232002CEC(v0 + OBJC_IVAR____TtC9Summaries44CorrelatedTrendSummarySharableModelGenerator_request, type metadata accessor for CorrelatedTrendSummarySharableModelGenerator.Request);
  return swift_deallocClassInstance();
}

uint64_t sub_2320E5698()
{
  return type metadata accessor for CorrelatedTrendSummarySharableModelGenerator(0);
}

uint64_t type metadata accessor for CorrelatedTrendSummarySharableModelGenerator(uint64_t a1)
{
  return sub_23201A14C(a1, qword_255F9E428);
}

uint64_t sub_2320E56B4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2321FE3BC();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for CorrelatedTrendSummarySharableModelGenerator.Request(319);
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for CorrelatedTrendSummarySharableModelGenerator.Request(uint64_t a1)
{
  return sub_23201A14C(a1, qword_2541B4A88);
}

_QWORD *sub_2320E575C(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_2321FE4A0();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[7];
    *((_BYTE *)v7 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    v14 = (_QWORD *)((char *)v7 + v13);
    v15 = (_QWORD *)((char *)a2 + v13);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_2320E5824(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_2321FE4A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

_QWORD *sub_2320E5884(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2321FE4A0();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  v11 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_2320E5924(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2321FE4A0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v10 = a3[7];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_2320E59D8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2321FE4A0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  return a1;
}

_QWORD *sub_2320E5A58(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2321FE4A0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  v14 = *v12;
  v13 = v12[1];
  *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2320E5AF0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2320E5AFC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2321FE4A0();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_2320E5B78()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2320E5B84(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_2321FE4A0();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_2320E5BF8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2321FE4A0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_UNKNOWN **sub_2320E5C84()
{
  return &off_250102970;
}

uint64_t sub_2320E5C90(uint64_t a1)
{
  uint64_t result;

  result = sub_232000590(&qword_255F9C228, type metadata accessor for CorrelatedTrendSummarySharableModelGenerator, (uint64_t)&unk_232214DB4);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2320E5CCC()
{
  return swift_retain();
}

uint64_t sub_2320E5CE0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC9Summaries44CorrelatedTrendSummarySharableModelGenerator_domain;
  v4 = sub_2321FE3BC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t (*sub_2320E5D28(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_2320E5E54(v6, a2, a3);
  return sub_2320E5D7C;
}

uint64_t (*sub_2320E5D80(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_2320E5EC0(v6, a2, a3);
  return sub_2320E5D7C;
}

uint64_t (*sub_2320E5DD4(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_2320E5F2C(v6, a2, a3);
  return sub_2320E5D7C;
}

void sub_2320E5E28(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_2320E5E54(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v3)();
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x2348FEA30](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return j__s9Summaries43ActivityDataTypeDetailConfigurationProviderV26CustomDescriptionComponentVwxx;
  }
  __break(1u);
  return result;
}

void (*sub_2320E5EC0(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x2348FEA30](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return destroy for ActivityDataTypeDetailConfigurationProvider.CustomDescriptionComponent;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_2320E5F2C(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x2348FEA30](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain();
LABEL_5:
    *v3 = v4;
    return sub_2320E5F98;
  }
  __break(1u);
  return result;
}

uint64_t sub_2320E5F98()
{
  return swift_release();
}

uint64_t sub_2320E5FA0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_2320E49C4(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], a2);
}

void sub_2320E5FC0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9C298)
  {
    sub_2320E60EC(255, (unint64_t *)&qword_255F9C260, (unint64_t *)&qword_255F9C268, &qword_255F9C078, 0x24BE4A4B0);
    v0 = sub_232201080();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9C298);
  }
}

void sub_2320E6034()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9E4E0)
  {
    sub_2320E60EC(255, &qword_2541B2FC0, (unint64_t *)&qword_2541B5528, &qword_2541B0C88, 0x24BE4A538);
    sub_2320C0624(255, (unint64_t *)&qword_255F9C268, &qword_255F9C078, 0x24BE4A4B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_2320E6160();
    v0 = sub_232200540();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9E4E0);
  }
}

void sub_2320E60EC(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    sub_2320C0624(255, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v6 = sub_232200624();
    if (!v7)
      atomic_store(v6, a2);
  }
}

unint64_t sub_2320E6160()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541AF2C0;
  if (!qword_2541AF2C0)
  {
    sub_2320E60EC(255, &qword_2541B2FC0, (unint64_t *)&qword_2541B5528, &qword_2541B0C88, 0x24BE4A538);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB9AF8], v1);
    atomic_store(result, (unint64_t *)&qword_2541AF2C0);
  }
  return result;
}

uint64_t sub_2320E61C8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_2321FFFDC();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_2320E6228@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  _QWORD v8[4];

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_2321FFFDC() - 8) + 80);
  v6 = *a1;
  v8[2] = v2 + ((v5 + 16) & ~v5);
  result = sub_23200659C((void (*)(uint64_t *__return_ptr, id *))sub_2320E6298, (uint64_t)v8, v6);
  *a2 = result;
  return result;
}

void sub_2320E6298(void **a1@<X0>, _QWORD *a2@<X8>)
{
  sub_2320E5548(a1, a2);
}

uint64_t static BoundedSummaryModelGenerating.dataPresentDateIntervalFilteringDatesOutOfBoundsPublisher(generatorContext:request:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t AssociatedConformanceWitness;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  void (*v52)(uint64_t, uint64_t);
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;

  v68 = a2;
  v58 = a1;
  sub_2320E67F8(0);
  v7 = *(_QWORD *)(v6 - 8);
  v65 = v6;
  v66 = v7;
  MEMORY[0x24BDAC7A8](v6);
  v63 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2321FE3BC();
  v56 = *(_QWORD *)(v9 - 8);
  v57 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v55 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2321FE4A0();
  v69 = *(_QWORD *)(v11 - 8);
  v70 = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v61 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v60 = (char *)&v54 - v14;
  sub_232025288(0);
  v64 = v15;
  v16 = MEMORY[0x24BDAC7A8](v15);
  v67 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v62 = (char *)&v54 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v54 - v20;
  v22 = sub_2321FD8B8();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v54 = (char *)&v54 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v71 = (char *)&v54 - v26;
  swift_getAssociatedTypeWitness();
  v59 = a4;
  v27 = a3;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v29 = *(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 16);
  v30 = swift_checkMetadataState();
  v29(v30, AssociatedConformanceWitness);
  v72 = v23;
  v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  v32 = v22;
  if (v31((uint64_t)v21, 1, v22) == 1)
  {
    sub_232002CEC((uint64_t)v21, (uint64_t (*)(_QWORD))sub_232025288);
    v33 = swift_getAssociatedConformanceWitness();
    v34 = v61;
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v30, v33);
    sub_2321FE488();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v34, v70);
    v35 = v63;
    sub_2322006B4();
    sub_232000590((unint64_t *)&qword_2541B79D8, (uint64_t (*)(uint64_t))sub_2320E67F8, MEMORY[0x24BDB9DF8]);
    v36 = v65;
    v37 = sub_232200774();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v35, v36);
  }
  else
  {
    v38 = v67;
    v39 = v21;
    v40 = v32;
    v61 = *(char **)(v72 + 32);
    ((void (*)(char *, char *, uint64_t))v61)(v71, v39, v32);
    v41 = swift_getAssociatedConformanceWitness();
    v42 = v60;
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v30, v41);
    v43 = (uint64_t)v62;
    sub_2321FE488();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v42, v70);
    if (v31(v43, 1, v32) == 1)
    {
      sub_232002CEC(v43, (uint64_t (*)(_QWORD))sub_232025288);
      v44 = v72;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v72 + 56))(v38, 1, 1, v32);
      v45 = v63;
      sub_2322006B4();
      sub_232000590((unint64_t *)&qword_2541B79D8, (uint64_t (*)(uint64_t))sub_2320E67F8, MEMORY[0x24BDB9DF8]);
      v46 = v65;
      v37 = sub_232200774();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v45, v46);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v71, v40);
    }
    else
    {
      v47 = (uint64_t)v54;
      ((void (*)(char *, uint64_t, uint64_t))v61)(v54, v43, v32);
      v48 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v41 + 24))(v30, v41);
      v49 = (uint64_t)v55;
      v50 = v58;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 64))(v58, v30, v41);
      v51 = v71;
      v37 = (uint64_t)static BoundedSummaryModelGenerating.boundedDataPresentDateIntervalUsingMostRecentSamplePublisher(for:domain:boundingDateInterval:unboundedDataPresentDateInterval:generatorContext:)(v48, v49, v71, v47, v50, v27, v59);

      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v49, v57);
      v52 = *(void (**)(uint64_t, uint64_t))(v72 + 8);
      v52(v47, v40);
      v52((uint64_t)v51, v40);
    }
  }
  return v37;
}

void sub_2320E67F8(uint64_t a1)
{
  sub_2320057B8(a1, &qword_2541B3050, (uint64_t (*)(uint64_t))sub_232025288, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
}

id static BoundedSummaryModelGenerating.boundedDataPresentDateIntervalUsingMostRecentSamplePublisher(for:domain:boundingDateInterval:unboundedDataPresentDateInterval:generatorContext:)(void *a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  void (*v47)(char *, char *, uint64_t);
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  char v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  unsigned int v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  id result;
  void *v69;
  unsigned int v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t, uint64_t);
  uint64_t v75;
  void *v76;
  id v77;
  char *v78;
  id v79;
  NSObject *v80;
  os_log_type_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  void *v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  id v91;
  id v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  char *v102;
  void (*v103)(char *, uint64_t);
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  char *v110;
  uint64_t v111;
  NSObject *v112;
  uint64_t v113;
  void (*v114)(char *, uint64_t);
  uint64_t v115;
  void *v116;
  char *v117;
  void *v118;
  id v119;
  uint64_t v120;
  void *v121;
  char *v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(char *, uint64_t, uint64_t);
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  char *v136;
  uint64_t v137;
  char *v138;
  void (*v139)(char *, char *, uint64_t);
  uint64_t v140;
  id v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t *v149;
  int v150;
  uint64_t v151;
  NSObject *v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  void (*v156)(char *, char *, uint64_t);
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  id v170;
  uint64_t v171;
  char *v172;
  char *v173;
  char *v174;
  char *v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191[4];

  v178 = a7;
  v180 = a6;
  v181 = a5;
  v161 = a2;
  v170 = a1;
  sub_2320E776C();
  v164 = v9;
  v163 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v162 = (char *)&v149 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320E7800();
  v167 = v11;
  v166 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v165 = (char *)&v149 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v188 = sub_2321FE440();
  v171 = *(_QWORD *)(v188 - 8);
  v13 = MEMORY[0x24BDAC7A8](v188);
  v176 = v14;
  v177 = (char *)&v149 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v172 = (char *)&v149 - v15;
  v158 = sub_23220039C();
  v157 = *(_QWORD *)(v158 - 8);
  MEMORY[0x24BDAC7A8](v158);
  v174 = (char *)&v149 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232025288(0);
  v186 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v183 = (char *)&v149 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320E67F8(0);
  v187 = v19;
  v184 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v149 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v189 = sub_2321FD8B8();
  v22 = *(_QWORD *)(v189 - 8);
  v23 = MEMORY[0x24BDAC7A8](v189);
  v175 = (char *)&v149 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v173 = (char *)&v149 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v169 = (char *)&v149 - v28;
  v160 = v29;
  MEMORY[0x24BDAC7A8](v27);
  v182 = (char *)&v149 - v30;
  v31 = sub_2321FDC6C();
  v32 = *(_QWORD *)(v31 - 8);
  v33 = MEMORY[0x24BDAC7A8](v31);
  v179 = (char *)&v149 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x24BDAC7A8](v33);
  v37 = (char *)&v149 - v36;
  v38 = MEMORY[0x24BDAC7A8](v35);
  v40 = (char *)&v149 - v39;
  v41 = MEMORY[0x24BDAC7A8](v38);
  v43 = (char *)&v149 - v42;
  v159 = v44;
  MEMORY[0x24BDAC7A8](v41);
  v185 = (char *)&v149 - v45;
  if ((sub_2321FD834() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v183, 1, 1, v189);
    sub_2322006B4();
    sub_232000590((unint64_t *)&qword_2541B79D8, (uint64_t (*)(uint64_t))sub_2320E67F8, MEMORY[0x24BDB9DF8]);
    v61 = v187;
    v60 = sub_232200774();
    (*(void (**)(char *, uint64_t))(v184 + 8))(v21, v61);
    return (id)v60;
  }
  v154 = v21;
  v168 = v22;
  sub_2321FD894();
  sub_2321FD894();
  sub_232000590((unint64_t *)&qword_2541AF160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
  v46 = sub_232200E40();
  v47 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
  if ((v46 & 1) != 0)
    v48 = v40;
  else
    v48 = v43;
  v49 = v185;
  v156 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
  v47(v185, v48, v31);
  v155 = v32;
  v50 = *(char **)(v32 + 8);
  ((void (*)(char *, uint64_t))v50)(v40, v31);
  ((void (*)(char *, uint64_t))v50)(v43, v31);
  sub_2321FD870();
  v51 = v179;
  sub_2321FD870();
  v52 = sub_2321FDC0C();
  ((void (*)(char *, uint64_t))v50)(v51, v31);
  ((void (*)(char *, uint64_t))v50)(v37, v31);
  v53 = v49;
  if ((v52 & 1) != 0)
  {
    v156(v37, v49, v31);
    sub_2321FD870();
    v54 = v182;
    sub_2321FD87C();
    v55 = v168;
    v56 = v183;
    v57 = v189;
    (*(void (**)(char *, char *, uint64_t))(v168 + 16))(v183, v54, v189);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v56, 0, 1, v57);
    v58 = v154;
    sub_2322006B4();
    sub_232000590((unint64_t *)&qword_2541B79D8, (uint64_t (*)(uint64_t))sub_2320E67F8, MEMORY[0x24BDB9DF8]);
    v59 = v187;
    v60 = sub_232200774();
    (*(void (**)(char *, uint64_t))(v184 + 8))(v58, v59);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v54, v57);
    ((void (*)(char *, uint64_t))v50)(v53, v31);
    return (id)v60;
  }
  v153 = a4;
  v183 = v37;
  v179 = a3;
  v154 = v50;
  v184 = v31;
  v62 = v170;
  v63 = objc_msgSend(v170, sel_requiresSensitiveHealthLogs);
  v64 = v188;
  v65 = v173;
  v66 = v169;
  v67 = v172;
  if (!v63)
    goto LABEL_11;
  result = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (result)
  {
    v69 = result;
    v70 = objc_msgSend(result, sel_showSensitiveLogItems);

    if (!v70)
    {
LABEL_14:
      v116 = (void *)objc_opt_self();
      v117 = v179;
      v118 = (void *)sub_2321FD858();
      v119 = objc_msgSend(v116, sel_predicateForSamplesWithinDateInterval_options_, v118, 0);

      v120 = v181;
      sub_2321FE3D4();
      sub_232016AD8(v191, v191[3]);
      v121 = (void *)sub_2321FE314();
      v122 = (char *)v119;
      v174 = v122;
      v123 = sub_232201284();

      sub_232016AFC((uint64_t)v191);
      v190 = v123;
      sub_2321FE434();
      sub_23201B100();
      v170 = v124;
      v172 = (char *)sub_232000590(&qword_2541B79D0, (uint64_t (*)(uint64_t))sub_23201B100, MEMORY[0x24BDB9AF8]);
      v125 = sub_232200738();
      v173 = (char *)v125;
      sub_232016AFC((uint64_t)v191);
      swift_release();
      v191[0] = v125;
      v126 = v171;
      v169 = *(char **)(v171 + 16);
      ((void (*)(char *, uint64_t, uint64_t))v169)(v177, v120, v64);
      v127 = v168;
      v128 = *(void (**)(char *, uint64_t, uint64_t))(v168 + 16);
      v129 = v189;
      v128(v182, v153, v189);
      v128(v175, (uint64_t)v117, v129);
      v156(v183, v53, v184);
      v130 = *(unsigned __int8 *)(v126 + 80);
      v131 = (v130 + 40) & ~v130;
      v179 = (char *)(v130 | 7);
      v132 = *(unsigned __int8 *)(v127 + 80);
      v133 = (v176 + v132 + v131) & ~v132;
      v134 = (v160 + v132 + v133) & ~v132;
      v135 = (v160 + *(unsigned __int8 *)(v155 + 80) + v134) & ~(unint64_t)*(unsigned __int8 *)(v155 + 80);
      v136 = (char *)swift_allocObject();
      v137 = v178;
      *((_QWORD *)v136 + 2) = v180;
      *((_QWORD *)v136 + 3) = v137;
      *((_QWORD *)v136 + 4) = v62;
      v171 = *(_QWORD *)(v126 + 32);
      v138 = v177;
      ((void (*)(char *, char *, uint64_t))v171)(&v136[v131], v177, v188);
      v139 = *(void (**)(char *, char *, uint64_t))(v127 + 32);
      v139(&v136[v133], v182, v129);
      v139(&v136[v134], v175, v129);
      v140 = v184;
      (*(void (**)(char *, char *, uint64_t))(v155 + 32))(&v136[v135], v183, v184);
      v141 = v62;
      v142 = v162;
      sub_2322007A4();
      swift_release();
      v143 = v188;
      ((void (*)(char *, uint64_t, uint64_t))v169)(v138, v181, v188);
      v144 = swift_allocObject();
      v145 = v178;
      *(_QWORD *)(v144 + 16) = v180;
      *(_QWORD *)(v144 + 24) = v145;
      ((void (*)(uint64_t, char *, uint64_t))v171)(v144 + ((v130 + 32) & ~v130), v138, v143);
      sub_232000590(&qword_2541AF1F8, (uint64_t (*)(uint64_t))sub_2320E776C, MEMORY[0x24BDB96C0]);
      sub_232000590((unint64_t *)&qword_2541B79D8, (uint64_t (*)(uint64_t))sub_2320E67F8, MEMORY[0x24BDB9DF8]);
      v146 = v165;
      v147 = v164;
      sub_2322007D4();
      swift_release();
      (*(void (**)(char *, uint64_t))(v163 + 8))(v142, v147);
      sub_232000590(&qword_2541AF240, (uint64_t (*)(uint64_t))sub_2320E7800, MEMORY[0x24BDB9740]);
      v148 = v167;
      v60 = sub_232200774();

      swift_release();
      (*(void (**)(char *, uint64_t))(v166 + 8))(v146, v148);
      ((void (*)(char *, uint64_t))v154)(v185, v140);
      return (id)v60;
    }
LABEL_11:
    sub_232200318();
    v71 = v62;
    v72 = v171;
    (*(void (**)(char *, uint64_t, uint64_t))(v171 + 16))(v67, v181, v64);
    v73 = v168;
    v74 = *(void (**)(char *, uint64_t, uint64_t))(v168 + 16);
    v75 = v189;
    v74(v66, v153, v189);
    v74(v65, (uint64_t)v179, v75);
    v76 = v71;
    v77 = v71;
    v78 = v66;
    v79 = v77;
    v80 = sub_232200390();
    v81 = sub_2322012FC();
    v82 = v81;
    v152 = v80;
    if (os_log_type_enabled(v80, v81))
    {
      v83 = swift_slowAlloc();
      v151 = swift_slowAlloc();
      v191[0] = v151;
      *(_DWORD *)v83 = 136316162;
      v150 = v82;
      v84 = sub_232201BF0();
      v190 = sub_232013174(v84, v85, v191);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v83 + 12) = 2080;
      v86 = v172;
      v87 = (void *)sub_2321FE3F8();
      v88 = sub_2321FE1B8();
      v90 = v89;

      v190 = sub_232013174(v88, v90, v191);
      sub_232201710();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v72 + 8))(v86, v188);
      *(_WORD *)(v83 + 22) = 2080;
      v91 = v79;
      v92 = objc_msgSend(v91, sel_description);
      v93 = sub_232200EC4();
      v95 = v94;

      v190 = sub_232013174(v93, v95, v191);
      v149 = v191;
      sub_232201710();

      swift_bridgeObjectRelease();
      *(_WORD *)(v83 + 32) = 2080;
      v96 = v183;
      v97 = v169;
      sub_2321FD870();
      sub_232000590(&qword_2541AF170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
      v98 = v184;
      v99 = sub_232201AB8();
      v101 = v100;
      v102 = v154;
      ((void (*)(char *, uint64_t))v154)(v96, v98);
      v190 = sub_232013174(v99, v101, v191);
      sub_232201710();
      swift_bridgeObjectRelease();
      v103 = *(void (**)(char *, uint64_t))(v168 + 8);
      v104 = v97;
      v105 = v189;
      v103(v104, v189);
      *(_WORD *)(v83 + 42) = 2080;
      v62 = v170;
      v172 = (char *)(v83 + 44);
      v106 = v173;
      sub_2321FD870();
      v107 = sub_232201AB8();
      v109 = v108;
      v110 = v96;
      v53 = v185;
      v111 = v98;
      v64 = v188;
      ((void (*)(char *, uint64_t))v102)(v110, v111);
      v190 = sub_232013174(v107, v109, v191);
      sub_232201710();
      swift_bridgeObjectRelease();
      v103(v106, v105);
      v112 = v152;
      _os_log_impl(&dword_231FFB000, v152, (os_log_type_t)v150, "[%s]_%s: Data present date range for %s exceeds bounding interval: %s > %s", (uint8_t *)v83, 0x34u);
      v113 = v151;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v113, -1, -1);
      MEMORY[0x2348FF468](v83, -1, -1);

      (*(void (**)(char *, uint64_t))(v157 + 8))(v174, v158);
    }
    else
    {
      v64 = v188;
      (*(void (**)(char *, uint64_t))(v72 + 8))(v172, v188);

      v114 = *(void (**)(char *, uint64_t))(v73 + 8);
      v115 = v189;
      v114(v78, v189);
      v114(v173, v115);

      (*(void (**)(char *, uint64_t))(v157 + 8))(v174, v158);
      v62 = v76;
    }
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

void sub_2320E776C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2C78)
  {
    sub_23201B100();
    sub_232025288(255);
    sub_232000590(&qword_2541B79D0, (uint64_t (*)(uint64_t))sub_23201B100, MEMORY[0x24BDB9AF8]);
    v0 = sub_232200540();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2C78);
  }
}

void sub_2320E7800()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2D70)
  {
    sub_2320E776C();
    sub_2320E67F8(255);
    sub_232000590(&qword_2541AF1F8, (uint64_t (*)(uint64_t))sub_2320E776C, MEMORY[0x24BDB96C0]);
    sub_232000590((unint64_t *)&qword_2541B79D8, (uint64_t (*)(uint64_t))sub_2320E67F8, MEMORY[0x24BDB9DF8]);
    v0 = sub_23220057C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2D70);
  }
}

id sub_2320E78C8@<X0>(uint64_t *a1@<X0>, NSObject *a2@<X1>, NSObject *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  unsigned int v40;
  char *v41;
  char *v42;
  id result;
  void *v44;
  unsigned int v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  unint64_t v58;
  unint64_t v59;
  NSObject *v60;
  id v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  os_log_t v66;
  char *v67;
  uint64_t v68;
  NSObject *v69;
  unsigned __int8 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  void *v76;
  unsigned int v77;
  char *v78;
  void (*v79)(char *, uint64_t, uint64_t);
  NSObject *v80;
  NSObject *v81;
  os_log_type_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  NSObject *v92;
  id v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  unint64_t v99;
  void (*v100)(char *, uint64_t);
  char *v101;
  uint64_t v102;
  unint64_t v103;
  NSObject *v104;
  char *v105;
  void (*v106)(char *, uint64_t);
  uint64_t v107;
  uint64_t v108;
  NSObject *v109;
  void (*v110)(uint64_t, uint64_t, uint64_t);
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  os_log_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  NSObject *v129;
  uint64_t v130;
  uint64_t v131[2];

  v116 = a7;
  v114 = a6;
  v119 = a4;
  v120 = a5;
  v122 = a3;
  v129 = a2;
  v127 = a8;
  v9 = sub_2321FE440();
  v126 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v121 = (char *)&v111 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v115 = (char *)&v111 - v12;
  v13 = sub_23220039C();
  v123 = *(_QWORD *)(v13 - 8);
  v124 = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v125 = (char *)&v111 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v118 = (char *)&v111 - v16;
  v17 = sub_2321FD8B8();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v111 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)&v111 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v111 - v25;
  sub_23202D234(0);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v111 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_2321FDC6C();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = MEMORY[0x24BDAC7A8](v30);
  v33 = MEMORY[0x24BDAC7A8](v32);
  MEMORY[0x24BDAC7A8](v33);
  v117 = (char *)&v111 - v36;
  v37 = *a1;
  v128 = v18;
  if (!v37)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56))(v29, 1, 1, v30);
    v38 = v17;
    goto LABEL_9;
  }
  v112 = v35;
  v113 = v34;
  sub_232201674();
  sub_2321FD870();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v26, v17);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v29, 0, 1, v30);
  v38 = v17;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30) == 1)
  {
LABEL_9:
    sub_232002CEC((uint64_t)v29, (uint64_t (*)(_QWORD))sub_23202D234);
    v69 = v129;
    v70 = -[NSObject requiresSensitiveHealthLogs](v129, sel_requiresSensitiveHealthLogs);
    v71 = v128;
    v72 = v9;
    v73 = v126;
    v74 = v21;
    v75 = v121;
    if ((v70 & 1) == 0)
      goto LABEL_12;
    result = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
    if (!result)
    {
      __break(1u);
      goto LABEL_20;
    }
    v76 = result;
    v77 = objc_msgSend(result, sel_showSensitiveLogItems);

    if (v77)
    {
LABEL_12:
      v78 = v125;
      sub_232200354();
      (*(void (**)(char *, os_log_t, uint64_t))(v73 + 16))(v75, v122, v72);
      v79 = *(void (**)(char *, uint64_t, uint64_t))(v71 + 16);
      v79(v24, v119, v38);
      v79(v74, v120, v38);
      v80 = v69;
      v81 = sub_232200390();
      v82 = sub_2322012E4();
      v129 = v81;
      LODWORD(v122) = v82;
      if (os_log_type_enabled(v81, v82))
      {
        v83 = swift_slowAlloc();
        v120 = v72;
        v84 = v83;
        v118 = (char *)swift_slowAlloc();
        v131[0] = (uint64_t)v118;
        *(_DWORD *)v84 = 136316162;
        v85 = sub_232201BF0();
        v119 = v38;
        v130 = sub_232013174(v85, v86, v131);
        v116 = v24;
        sub_232201710();
        swift_bridgeObjectRelease();
        *(_WORD *)(v84 + 12) = 2080;
        v87 = (void *)sub_2321FE3F8();
        v88 = sub_2321FE1B8();
        v117 = v74;
        v89 = v88;
        v91 = v90;

        v130 = sub_232013174(v89, v91, v131);
        sub_232201710();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v73 + 8))(v75, v120);
        *(_WORD *)(v84 + 22) = 2080;
        v92 = v80;
        v93 = -[NSObject description](v92, sel_description);
        v94 = sub_232200EC4();
        v96 = v95;

        v130 = sub_232013174(v94, v96, v131);
        sub_232201710();

        v38 = v119;
        swift_bridgeObjectRelease();
        *(_WORD *)(v84 + 32) = 2080;
        sub_232000590(&qword_2541B27F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], MEMORY[0x24BDCB8B8]);
        v97 = v116;
        v98 = sub_232201AB8();
        v130 = sub_232013174(v98, v99, v131);
        sub_232201710();
        swift_bridgeObjectRelease();
        v100 = *(void (**)(char *, uint64_t))(v71 + 8);
        v100(v97, v38);
        *(_WORD *)(v84 + 42) = 2080;
        v101 = v117;
        v102 = sub_232201AB8();
        v130 = sub_232013174(v102, v103, v131);
        sub_232201710();
        swift_bridgeObjectRelease();
        v100(v101, v38);
        v104 = v129;
        _os_log_impl(&dword_231FFB000, v129, (os_log_type_t)v122, "[%s]_%s: Date range query reported data but most recent sample query returned no data: %s, dateRangeQuery: %s, boundingDateInterval: %s", (uint8_t *)v84, 0x34u);
        v105 = v118;
        swift_arrayDestroy();
        MEMORY[0x2348FF468](v105, -1, -1);
        MEMORY[0x2348FF468](v84, -1, -1);

        (*(void (**)(char *, uint64_t))(v123 + 8))(v125, v124);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v73 + 8))(v75, v72);

        v106 = *(void (**)(char *, uint64_t))(v71 + 8);
        v106(v24, v38);
        v106(v74, v38);

        (*(void (**)(char *, uint64_t))(v123 + 8))(v78, v124);
      }
    }
    v107 = 1;
    v108 = v127;
    return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v71 + 56))(v108, v107, 1, v38);
  }
  v39 = v117;
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v117, v29, v30);
  v40 = -[NSObject requiresSensitiveHealthLogs](v129, sel_requiresSensitiveHealthLogs);
  v120 = v9;
  v41 = v118;
  v42 = v115;
  if (!v40)
    goto LABEL_6;
  result = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (result)
  {
    v44 = result;
    v45 = objc_msgSend(result, sel_showSensitiveLogItems);

    if (!v45)
    {
LABEL_17:
      v110 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16);
      v110(v112, v114, v30);
      v110(v113, (uint64_t)v39, v30);
      v108 = v127;
      sub_2321FD87C();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v39, v30);
      v107 = 0;
      v71 = v128;
      return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v71 + 56))(v108, v107, 1, v38);
    }
LABEL_6:
    sub_232200318();
    v46 = v126;
    (*(void (**)(char *, os_log_t, uint64_t))(v126 + 16))(v42, v122, v120);
    v129 = v129;
    v47 = sub_232200390();
    v48 = sub_2322012FC();
    v49 = v48;
    if (os_log_type_enabled(v47, v48))
    {
      v50 = swift_slowAlloc();
      v119 = v38;
      v51 = v50;
      v125 = (char *)swift_slowAlloc();
      v131[0] = (uint64_t)v125;
      *(_DWORD *)v51 = 136315650;
      v122 = v47;
      v52 = sub_232201BF0();
      v130 = sub_232013174(v52, v53, v131);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v51 + 12) = 2080;
      v54 = (void *)sub_2321FE3F8();
      v55 = v46;
      v56 = sub_2321FE1B8();
      LODWORD(v121) = v49;
      v57 = v42;
      v59 = v58;

      v130 = sub_232013174(v56, v59, v131);
      sub_232201710();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v57, v120);
      *(_WORD *)(v51 + 22) = 2080;
      v60 = v129;
      v61 = -[NSObject description](v60, sel_description);
      v62 = sub_232200EC4();
      v64 = v63;

      v65 = v62;
      v39 = v117;
      v130 = sub_232013174(v65, v64, v131);
      sub_232201710();

      swift_bridgeObjectRelease();
      v66 = v122;
      _os_log_impl(&dword_231FFB000, v122, (os_log_type_t)v121, "[%s]_%s: With results from most recent sample query for %s new date interval ends at ", (uint8_t *)v51, 0x20u);
      v67 = v125;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v67, -1, -1);
      v68 = v51;
      v38 = v119;
      MEMORY[0x2348FF468](v68, -1, -1);

      (*(void (**)(char *, uint64_t))(v123 + 8))(v118, v124);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v46 + 8))(v42, v120);

      v109 = v129;
      (*(void (**)(char *, uint64_t))(v123 + 8))(v41, v124);
    }
    goto LABEL_17;
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_2320E82E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = sub_2321FE440();
  v1 = *(_QWORD *)(v17 - 8);
  v15 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v2 = *(_QWORD *)(v1 + 64);
  v3 = sub_2321FD8B8();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v15 + v2 + v5) & ~v5;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = (v7 + v5 + v6) & ~v5;
  v9 = sub_2321FDC6C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = (v7 + *(unsigned __int8 *)(v10 + 80) + v8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v16 = v9;

  (*(void (**)(unint64_t, uint64_t))(v1 + 8))(v0 + v15, v17);
  v12 = v0 + v6;
  v13 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v13(v12, v3);
  v13(v0 + v8, v3);
  (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v0 + v11, v16);
  return swift_deallocObject();
}

id sub_2320E8404@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v5 = *(char **)(v2 + 16);
  v6 = *(_QWORD *)(sub_2321FE440() - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(_QWORD *)(sub_2321FD8B8() - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = (v7 + v8 + v10) & ~v10;
  v12 = *(_QWORD *)(v9 + 64);
  v13 = (v12 + v10 + v11) & ~v10;
  v14 = *(unsigned __int8 *)(*(_QWORD *)(sub_2321FDC6C() - 8) + 80);
  return sub_2320E78C8(a1, *(NSObject **)(v2 + 32), (v2 + v7), v2 + v11, v2 + v13, v2 + ((v12 + v14 + v13) & ~v14), v5, a2);
}

uint64_t sub_2320E84D0@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  unint64_t v32;
  unint64_t v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  os_log_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v41[2];
  os_log_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v47 = a3;
  v49 = a4;
  sub_232025288(0);
  v7 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2321FE440();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23220039C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a1;
  sub_232200318();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
  v19 = v18;
  v20 = v18;
  v48 = v17;
  v21 = sub_232200390();
  v22 = sub_2322012E4();
  v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    v24 = swift_slowAlloc();
    v46 = v15;
    v25 = v24;
    v44 = swift_slowAlloc();
    v51 = v44;
    *(_DWORD *)v25 = 136315650;
    v43 = v23;
    v26 = sub_232201BF0();
    v47 = v7;
    v45 = v14;
    v50 = sub_232013174(v26, v27, &v51);
    sub_232201710();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2080;
    v41[1] = v25 + 14;
    v28 = (void *)sub_2321FE3F8();
    v29 = sub_2321FE1B8();
    v42 = v21;
    v30 = v29;
    v31 = v9;
    v33 = v32;

    v50 = sub_232013174(v30, v33, &v51);
    sub_232201710();
    v9 = v31;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    *(_WORD *)(v25 + 22) = 2080;
    v50 = (uint64_t)v18;
    v34 = v18;
    sub_232002B9C();
    v35 = sub_232200F00();
    v50 = sub_232013174(v35, v36, &v51);
    sub_232201710();
    swift_bridgeObjectRelease();

    v37 = v42;
    _os_log_impl(&dword_231FFB000, v42, (os_log_type_t)v43, "[%s]_%s: error when fetching most recent sample: %s", (uint8_t *)v25, 0x20u);
    v38 = v44;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v38, -1, -1);
    MEMORY[0x2348FF468](v25, -1, -1);

    (*(void (**)(char *, uint64_t))(v46 + 8))(v48, v45);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);

    (*(void (**)(char *, uint64_t))(v15 + 8))(v48, v14);
  }
  v39 = sub_2321FD8B8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v9, 1, 1, v39);
  return sub_2322006B4();
}

uint64_t sub_2320E8868()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_2321FE440();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_2320E88C8@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_2321FE440() - 8) + 80);
  return sub_2320E84D0(a1, v2 + ((v6 + 32) & ~v6), v5, a2);
}

void sub_2320E894C()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_2320E8978()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_2320E89B4()
{
  sub_2321FF2EC();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t WorkoutSampleDetailViewController.__allocating_init(healthStore:)(void *a1)
{
  objc_class *v1;
  char *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[qword_255F9E4F0] = a1;
  type metadata accessor for WorkoutSampleDetailCompoundDataSource(0);
  v4 = swift_allocObject();
  type metadata accessor for DataTypeDetailWorkoutRouteDataSource(0);
  swift_allocObject();
  v5 = a1;
  swift_retain();
  v6 = sub_23212EBC4((uint64_t)v5);
  v7 = qword_255F9E4F8;
  *(_QWORD *)(v4 + qword_255F9E4F8) = v6;
  type metadata accessor for DataTypeDetailWorkoutEffortDataSource(0);
  swift_allocObject();
  v8 = v5;
  v9 = sub_23212F0C0((uint64_t)v8);

  v10 = qword_255F9E500;
  *(_QWORD *)(v4 + qword_255F9E500) = v9;
  type metadata accessor for DataTypeDetailWorkoutEstimatedEffortDataSource(0);
  swift_allocObject();
  v11 = v8;
  v12 = sub_23212F5C8((uint64_t)v11);

  v13 = qword_255F9E508;
  *(_QWORD *)(v4 + qword_255F9E508) = v12;
  swift_release();
  sub_23209823C();
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_232211930;
  v15 = MEMORY[0x24BE43520];
  *(_QWORD *)(v14 + 32) = *(_QWORD *)(v4 + v7);
  *(_QWORD *)(v14 + 40) = v15;
  *(_QWORD *)(v14 + 48) = *(_QWORD *)(v4 + v10);
  *(_QWORD *)(v14 + 56) = v15;
  *(_QWORD *)(v14 + 64) = *(_QWORD *)(v4 + v13);
  *(_QWORD *)(v14 + 72) = v15;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_2321FF2F8();
  v16 = sub_2321FF7E4();

  return v16;
}

uint64_t WorkoutSampleDetailViewController.init(healthStore:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  *(_QWORD *)(v2 + qword_255F9E4F0) = a1;
  type metadata accessor for WorkoutSampleDetailCompoundDataSource(0);
  v4 = swift_allocObject();
  type metadata accessor for DataTypeDetailWorkoutRouteDataSource(0);
  swift_allocObject();
  v5 = a1;
  swift_retain();
  v6 = sub_23212EBC4((uint64_t)v5);
  v7 = qword_255F9E4F8;
  *(_QWORD *)(v4 + qword_255F9E4F8) = v6;
  type metadata accessor for DataTypeDetailWorkoutEffortDataSource(0);
  swift_allocObject();
  v8 = v5;
  v9 = sub_23212F0C0((uint64_t)v8);

  v10 = qword_255F9E500;
  *(_QWORD *)(v4 + qword_255F9E500) = v9;
  type metadata accessor for DataTypeDetailWorkoutEstimatedEffortDataSource(0);
  swift_allocObject();
  v11 = v8;
  v12 = sub_23212F5C8((uint64_t)v11);

  v13 = qword_255F9E508;
  *(_QWORD *)(v4 + qword_255F9E508) = v12;
  swift_release();
  sub_23209823C();
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_232211930;
  v15 = MEMORY[0x24BE43520];
  *(_QWORD *)(v14 + 32) = *(_QWORD *)(v4 + v7);
  *(_QWORD *)(v14 + 40) = v15;
  *(_QWORD *)(v14 + 48) = *(_QWORD *)(v4 + v10);
  *(_QWORD *)(v14 + 56) = v15;
  *(_QWORD *)(v14 + 64) = *(_QWORD *)(v4 + v13);
  *(_QWORD *)(v14 + 72) = v15;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_2321FF2F8();
  v16 = sub_2321FF7E4();

  return v16;
}

uint64_t type metadata accessor for WorkoutSampleDetailCompoundDataSource(uint64_t a1)
{
  return sub_23201A14C(a1, qword_255F9E510);
}

void sub_2320E8D40()
{
  sub_232201968();
  __break(1u);
}

Swift::Void __swiftcall WorkoutSampleDetailViewController.viewDidLoad()()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  objc_super v6;

  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for WorkoutSampleDetailViewController(0);
  objc_msgSendSuper2(&v6, sel_viewDidLoad);
  if (qword_2541B7488 != -1)
    swift_once();
  sub_2321FDA14();
  v1 = (void *)sub_232200E94();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setTitle_, v1, 0x8000000232206A80);

  v2 = objc_msgSend(v0, sel_collectionView);
  if (v2)
  {
    v3 = v2;
    v4 = (void *)sub_232201020();
    v5 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v3, sel_setAccessibilityIdentifier_, v5);
  }
  else
  {
    __break(1u);
  }
}

void sub_2320E8F04(void *a1)
{
  id v1;

  v1 = a1;
  WorkoutSampleDetailViewController.viewDidLoad()();

}

void WorkoutSampleDetailViewController.__allocating_init(dataSource:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void WorkoutSampleDetailViewController.init(dataSource:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id WorkoutSampleDetailViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCollectionViewLayout_, a1);

  return v3;
}

void WorkoutSampleDetailViewController.init(collectionViewLayout:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_2320E8FFC(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_2320E902C()
{
  uint64_t v0;

}

id WorkoutSampleDetailViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutSampleDetailViewController(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_2320E9070(uint64_t a1)
{

}

uint64_t type metadata accessor for WorkoutSampleDetailViewController(uint64_t a1)
{
  return sub_23201A14C(a1, (uint64_t *)&unk_255F9E560);
}

uint64_t sub_2320E9094()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2320E90E4()
{
  return type metadata accessor for WorkoutSampleDetailCompoundDataSource(0);
}

uint64_t sub_2320E90EC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2320E9138()
{
  return type metadata accessor for WorkoutSampleDetailViewController(0);
}

void sub_2320E9140(void *a1, void *a2, void (*a3)(id, _QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  id v26;
  id v27;
  _OWORD v28[2];
  uint64_t v29;

  v4 = v3;
  sub_23201C800();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v28 - v12;
  sub_232003E9C(0, &qword_2541B56C0);
  v14 = sub_232010B24(a1);
  v15 = v4 + qword_2541BF5C8;
  v16 = sub_232200180();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v15, v16);
  v17 = *MEMORY[0x24BE4AD70];
  v18 = sub_2321FFD78();
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 104))(v13, v17, v18);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v13, 0, 1, v18);
  v20 = a2;
  v21 = objc_msgSend(v14, sel_data);
  if (v21)
  {
    v22 = v21;
    sub_232003E9C(0, &qword_2541B0CD0);
    v23 = sub_2321FDAD4();
    v25 = v24;

    sub_23201C854((uint64_t)v13, (uint64_t)v11);
    v29 = 0;
    memset(v28, 0, sizeof(v28));
    v26 = sub_232015828(v23, v25, 16, (uint64_t)v11, (uint64_t)v20, 0, (uint64_t)v28);

    sub_232003ED4(v23, v25);
    sub_232002CEC((uint64_t)v13, (uint64_t (*)(_QWORD))sub_23201C800);
    v27 = v26;
    a3(v26, 0);

  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for StateOfMindMostRecentSampleCurrentValueSharableModelStep()
{
  uint64_t result;

  result = qword_255F9E5D8;
  if (!qword_255F9E5D8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2320E93A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  unsigned int (*v39)(uint64_t, uint64_t, uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t result;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  unsigned int (*v55)(uint64_t, uint64_t, uint64_t);
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t, uint64_t);
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;

  v70 = a3;
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v67 = (char *)&v53 - v7;
  v8 = sub_2321FD8B8();
  v68 = *(_QWORD *)(v8 - 8);
  v69 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v66 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2321FDDC8();
  v60 = *(_QWORD *)(v10 - 8);
  v61 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v59 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2321FDDD4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], v5);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v58 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v53 - v19;
  v21 = sub_2321FDC6C();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v64 = (char *)&v53 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v63 = (char *)&v53 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v53 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)&v53 - v30;
  v57 = type metadata accessor for StatisticTrendSummarySharableModelGenerator(0);
  v71 = v22;
  v72 = a1;
  v62 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  v62(v31, a1, v21);
  v65 = a2;
  sub_232200018();
  v32 = sub_23220021C();
  v34 = v33;
  if (v32 == sub_23220021C() && v34 == v35)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_5;
  }
  v36 = sub_232201ADC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v36 & 1) != 0)
  {
LABEL_5:
    sub_2321FDDA4();
    sub_2321FDBC4();
    v37 = *(void (**)(char *, uint64_t))(v13 + 8);
    v37(v15, v12);
    v38 = v71;
    v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48);
    if (v39((uint64_t)v20, 1, v21) == 1)
    {
      sub_232016D88((uint64_t)v20, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    }
    else
    {
      v55 = v39;
      v56 = v31;
      v40 = v29;
      v53 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
      v53(v29, v20, v21);
      sub_2321FDDA4();
      v41 = *MEMORY[0x24BDCF1E8];
      v54 = v12;
      v43 = v59;
      v42 = v60;
      v44 = v61;
      (*(void (**)(char *, uint64_t, uint64_t))(v60 + 104))(v59, v41, v61);
      v45 = (uint64_t)v58;
      sub_2321FDD80();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v44);
      v37(v15, v54);
      v46 = *(void (**)(char *, uint64_t))(v38 + 8);
      v46(v40, v21);
      if (v55(v45, 1, v21) == 1)
      {
        sub_232016D88(v45, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
        v31 = v56;
      }
      else
      {
        v31 = v56;
        v46(v56, v21);
        v53(v31, (char *)v45, v21);
      }
    }
  }
  sub_232200018();
  v47 = (uint64_t)v67;
  sub_2322001F8();
  v49 = v68;
  v48 = v69;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v47, 1, v69) == 1)
  {
    sub_232016D88(v47, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
    v74 = 0;
    v75 = 0xE000000000000000;
    sub_23220189C();
    sub_232200F48();
    v52 = v57;
    v73 = v57;
    sub_2320ECE70();
    sub_232200F00();
    sub_232200F48();
    swift_bridgeObjectRelease();
    sub_232200F48();
    v73 = v52;
    sub_232200F00();
    sub_232200F48();
    swift_bridgeObjectRelease();
    result = sub_232201968();
    __break(1u);
  }
  else
  {
    v50 = v66;
    (*(void (**)(char *, uint64_t, uint64_t))(v49 + 32))(v66, v47, v48);
    sub_2321FD894();
    v62(v64, v72, v21);
    sub_2321FD87C();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v48);
    return (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v31, v21);
  }
  return result;
}

uint64_t sub_2320E999C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *, char *, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  BOOL v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  void *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  _QWORD *v50;
  uint64_t aBlock[6];
  uint64_t v52;

  v47 = a1;
  v48 = a5;
  v44 = a4;
  v46 = a3;
  v5 = sub_23220039C();
  v49 = *(_QWORD *)(v5 - 8);
  v50 = (_QWORD *)v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2321FDC6C();
  v45 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, &qword_2541B2A30, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ABE8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v44 - v12;
  v14 = sub_2321FFC94();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v44 - v19;
  v21 = sub_2321FFFF4();
  if (*(_QWORD *)(v21 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v13, v21 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80)), v14);
    v22 = 0;
  }
  else
  {
    v22 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, v22, 1, v14);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_232016D88((uint64_t)v13, &qword_2541B2A30, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ABE8]);
    sub_232200318();
    v23 = (unint64_t)v48;
    swift_bridgeObjectRetain_n();
    v24 = sub_232200390();
    v25 = sub_2322012E4();
    v26 = os_log_type_enabled(v24, v25);
    v28 = v49;
    v27 = v50;
    if (v26)
    {
      v29 = swift_slowAlloc();
      v30 = swift_slowAlloc();
      aBlock[0] = v30;
      *(_DWORD *)v29 = 136315394;
      v52 = type metadata accessor for StatisticTrendSummarySharableModelGenerator(0);
      sub_2320ECE70();
      v31 = sub_232200F00();
      v52 = sub_232013174(v31, v32, aBlock);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2080;
      swift_bridgeObjectRetain();
      v52 = sub_232013174(v44, v23, aBlock);
      sub_232201710();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_231FFB000, v24, v25, "[%s]: Statistic trend request without statistics option: %s", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v30, -1, -1);
      MEMORY[0x2348FF468](v29, -1, -1);

      (*(void (**)(char *, _QWORD *))(v28 + 8))(v7, v50);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, _QWORD *))(v28 + 8))(v7, v27);
    }
    return MEMORY[0x24BEE4AF8];
  }
  else
  {
    v48 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v48(v20, v13, v14);
    v33 = swift_allocObject();
    v44 = v33;
    *(_QWORD *)(v33 + 16) = MEMORY[0x24BEE4AF8];
    v50 = (_QWORD *)(v33 + 16);
    sub_2321FD894();
    v49 = sub_2321FDBF4();
    v34 = *(void (**)(char *, uint64_t))(v45 + 8);
    v34(v10, v8);
    sub_2321FD870();
    v35 = (void *)sub_2321FDBF4();
    v34(v10, v8);
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v20, v14);
    v36 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v37 = (v16 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
    v38 = swift_allocObject();
    v48((char *)(v38 + v36), v18, v14);
    *(_QWORD *)(v38 + v37) = v44;
    aBlock[4] = (uint64_t)sub_2320ECF40;
    aBlock[5] = v38;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_2320ECDFC;
    aBlock[3] = (uint64_t)&unk_250102BB8;
    v39 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    v40 = (void *)v49;
    objc_msgSend(v47, sel_enumerateStatisticsFromDate_toDate_withBlock_, v49, v35, v39);
    _Block_release(v39);

    (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
    v41 = v50;
    swift_beginAccess();
    v42 = *v41;
    swift_bridgeObjectRetain();
    swift_release();
  }
  return v42;
}

uint64_t sub_2320E9F00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, char *, uint64_t);
  uint64_t v34;
  int *v35;
  uint64_t result;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;

  v53 = a5;
  v54 = a6;
  v52 = a4;
  v46 = a1;
  v47 = a3;
  v50 = sub_2321FE4A0();
  v48 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v57 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, &qword_2541AF190, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AB30], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v10);
  v56 = (uint64_t)&v39 - v11;
  v12 = sub_232200024();
  v41 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = v14;
  v51 = sub_2321FDC6C();
  v49 = *(_QWORD *)(v51 - 8);
  v15 = MEMORY[0x24BDAC7A8](v51);
  v55 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v42 = (char *)&v39 - v17;
  v18 = sub_2321FFC4C();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v39 - v23;
  v39 = a2;
  sub_2321FFFE8();
  sub_2321FFC40();
  v40 = *(void (**)(char *, uint64_t))(v19 + 8);
  v40(v24, v18);
  v25 = v41;
  v26 = v14;
  v27 = v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v26, a2, v12);
  v28 = v46;
  sub_2321FFDFC();
  v30 = v47;
  v29 = v48;
  v31 = v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v57, v47, v50);
  v45 = sub_2321FFDB4();
  v43 = sub_2321FFDF0();
  sub_2321FFDA8();
  sub_2321FFC40();
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v30, v31);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v39, v27);
  v32 = sub_2321FFE08();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v28, v32);
  v40(v22, v18);
  v33 = *(void (**)(uint64_t, char *, uint64_t))(v49 + 32);
  v34 = v51;
  v33(a7, v42, v51);
  v35 = (int *)type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(a7 + v35[5], v44, v27);
  sub_2320ED030(v56, a7 + v35[6]);
  (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(a7 + v35[7], v57, v31);
  *(_BYTE *)(a7 + v35[8]) = v52;
  *(_QWORD *)(a7 + v35[9]) = v45;
  *(_QWORD *)(a7 + v35[10]) = v43;
  result = ((uint64_t (*)(uint64_t, char *, uint64_t))v33)(a7 + v35[11], v55, v34);
  v37 = (_QWORD *)(a7 + v35[12]);
  v38 = v54;
  *v37 = v53;
  v37[1] = v38;
  return result;
}

uint64_t sub_2320EA270@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_2321FDC6C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_2320EA2A8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2320EA2B4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2320EA2C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2320E93A4(v2 + *(int *)(a1 + 44), v2 + *(int *)(a1 + 20), a2);
}

uint64_t sub_2320EA2D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 28);
  v5 = sub_2321FE4A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_2320EA318(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 32));
}

uint64_t sub_2320EA324(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 48));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_2320EA358@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  unint64_t v13;
  _QWORD v15[3];

  v15[1] = a1;
  v1 = sub_2321FE38C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (void *)sub_2321FE3F8();
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598];
  sub_232000608(0, (unint64_t *)&qword_2541B78C8, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232210D20;
  type metadata accessor for SleepTrendSummarySharableModelGenerator.Request(0);
  *(_QWORD *)(inited + 32) = sub_2321FE464();
  v15[2] = inited;
  sub_232201050();
  sub_2320057B8(0, &qword_2541B7530, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], v6);
  v8 = sub_2321FE194();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_232210D40;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v9 + 104))(v11 + v10, *MEMORY[0x24BE47448], v8);
  v12 = v5;
  sub_2321A492C(v11);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v13 = swift_bridgeObjectRetain();
  sub_2321A4950(v13);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BE47918], v1);
  sub_2321FE3B0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2320EA560@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  unint64_t v13;
  _QWORD v15[3];

  v15[1] = a1;
  v1 = sub_2321FE38C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (void *)sub_2321FE3F8();
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598];
  sub_232000608(0, (unint64_t *)&qword_2541B78C8, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232210D20;
  type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  *(_QWORD *)(inited + 32) = sub_2321FE464();
  v15[2] = inited;
  sub_232201050();
  sub_2320057B8(0, &qword_2541B7530, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], v6);
  v8 = sub_2321FE194();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_232210D40;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v9 + 104))(v11 + v10, *MEMORY[0x24BE47448], v8);
  v12 = v5;
  sub_2321A492C(v11);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v13 = swift_bridgeObjectRetain();
  sub_2321A4950(v13);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BE47918], v1);
  sub_2321FE3B0();

  return swift_bridgeObjectRelease();
}

uint64_t *sub_2320EA768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v6 = v5;
  v21 = a5;
  v11 = *v5;
  v12 = sub_2321FE3BC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320EA560((uint64_t)v15);
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))((uint64_t)v5 + OBJC_IVAR____TtC9Summaries43StatisticTrendSummarySharableModelGenerator_domain, v15, v12);
  sub_2320ECBC8(a2, (uint64_t)v5 + OBJC_IVAR____TtC9Summaries43StatisticTrendSummarySharableModelGenerator_request);
  v16 = sub_232000590(&qword_2541B0148, type metadata accessor for StatisticTrendSummarySharableModelGenerator, (uint64_t)&unk_232214FE4);
  v17 = static TrendSummaryModelGenerating.makePublisher(generatorContext:request:trendAnalysisEngine:cloudSyncObserverFactory:)(a1, a2, a3, a4, v21, v11, v16);
  sub_232016AFC(a3);
  sub_2320ECFB8(a2);
  v18 = sub_2321FE440();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(a1, v18);
  *(uint64_t *)((char *)v6 + OBJC_IVAR____TtC9Summaries43StatisticTrendSummarySharableModelGenerator_publisher) = v17;
  return v6;
}

uint64_t sub_2320EA8BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  uint64_t v44;
  void (**v45)(char *, _QWORD, uint64_t);
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  void *v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  int *v62;
  void *v63;
  id v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  os_log_t v75;
  uint64_t v76;
  void *v77;
  void *v78;
  uint64_t v79;
  uint64_t (*v80)(uint64_t);
  uint64_t v81;
  uint64_t v82;
  char *v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  os_log_t v92;
  uint64_t v93;
  int v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  void (**v99)(char *, _QWORD, uint64_t);
  int *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125[4];

  v4 = sub_2321FE3BC();
  v112 = *(_QWORD *)(v4 - 8);
  v113 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v110 = (uint64_t)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v106 = (char *)&v92 - v8;
  sub_2320057B8(0, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], v6);
  MEMORY[0x24BDAC7A8](v9);
  v105 = (char *)&v92 - v10;
  v109 = sub_232201278();
  v108 = *(_QWORD *)(v109 - 8);
  MEMORY[0x24BDAC7A8](v109);
  v107 = (char *)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232069E90();
  v114 = *(_QWORD *)(v12 - 8);
  v115 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v111 = (char *)&v92 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = sub_232200024();
  v96 = *(_QWORD *)(v97 - 8);
  MEMORY[0x24BDAC7A8](v97);
  v95 = (char *)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (int *)type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v120 = (uint64_t)&v92 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v101 = (uint64_t)&v92 - v18;
  v19 = sub_2321FE440();
  v99 = *(void (***)(char *, _QWORD, uint64_t))(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v92 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_23220039C();
  v102 = *(_QWORD *)(v103 - 8);
  MEMORY[0x24BDAC7A8](v103);
  v122 = (char *)&v92 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4AB30];
  sub_2320057B8(0, &qword_2541AF190, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AB30], v6);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v92 - v25;
  v27 = sub_2321FD8B8();
  v118 = *(_QWORD *)(v27 - 8);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v119 = (char *)&v92 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v30 = a2 + v15[11];
  v31 = a2 + v15[5];
  v123 = (char *)&v92 - v32;
  v104 = v31;
  sub_2320E93A4(v30, v31, (uint64_t)&v92 - v32);
  v100 = v15;
  sub_232026DE8(a2 + v15[6], (uint64_t)v26, &qword_2541AF190, v23, v6);
  v33 = sub_2321FFC7C();
  v34 = *(_QWORD *)(v33 - 8);
  v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48))(v26, 1, v33);
  v116 = a1;
  v117 = a2;
  v121 = v27;
  if (v35 == 1)
  {
    v36 = v21;
    sub_232016D88((uint64_t)v26, &qword_2541AF190, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AB30]);
LABEL_9:
    v98 = 0;
    goto LABEL_12;
  }
  v37 = sub_2321FFC70();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v26, v33);
  if (!v37)
  {
    v36 = v21;
    goto LABEL_9;
  }
  v38 = *(_QWORD *)(v37 + 16);
  if (v38)
  {
    v125[0] = MEMORY[0x24BEE4AF8];
    sub_2322018FC();
    v39 = (void *)objc_opt_self();
    v40 = 0;
    do
    {
      v41 = v40 + 1;
      v42 = objc_msgSend(v39, sel_predicateForCategorySamplesWithOperatorType_value_, 4, *(_QWORD *)(v37 + 8 * v40 + 32));
      sub_2322018E4();
      sub_232201908();
      sub_232201914();
      sub_2322018F0();
      v40 = v41;
    }
    while (v38 != v41);
    v36 = v21;
    swift_bridgeObjectRelease();
    a1 = v116;
    a2 = v117;
    v27 = v121;
  }
  else
  {
    v36 = v21;
    swift_bridgeObjectRelease();
  }
  sub_2320ECFF4();
  v43 = (void *)sub_232201020();
  swift_bridgeObjectRelease();
  v98 = objc_msgSend((id)objc_opt_self(), sel_orPredicateWithSubpredicates_, v43);

LABEL_12:
  v44 = v118;
  v45 = v99;
  sub_232200384();
  v46 = v36;
  v45[2](v36, a1, v19);
  v47 = v101;
  sub_2320ECBC8(a2, v101);
  v48 = v119;
  v99 = *(void (***)(char *, _QWORD, uint64_t))(v44 + 16);
  ((void (*)(char *, char *, uint64_t))v99)(v119, v123, v27);
  v49 = a2;
  v50 = v120;
  sub_2320ECBC8(v49, v120);
  v51 = sub_232200390();
  v52 = sub_2322012FC();
  v94 = v52;
  if (os_log_type_enabled(v51, v52))
  {
    v53 = swift_slowAlloc();
    v93 = swift_slowAlloc();
    v125[0] = v93;
    *(_DWORD *)v53 = 136316162;
    v92 = v51;
    v54 = sub_232201BF0();
    v124 = sub_232013174(v54, v55, v125);
    sub_232201710();
    swift_bridgeObjectRelease();
    *(_WORD *)(v53 + 12) = 2080;
    v56 = (void *)sub_2321FE3F8();
    v57 = sub_2321FE1B8();
    v59 = v58;

    v124 = sub_232013174(v57, v59, v125);
    sub_232201710();
    swift_bridgeObjectRelease();
    v60 = v46;
    v61 = v118;
    ((void (*)(char *, uint64_t))v45[1])(v60, v19);
    *(_WORD *)(v53 + 22) = 2080;
    v62 = v100;
    v63 = (void *)sub_2321FE464();
    v64 = objc_msgSend(v63, sel_sensitiveLoggingIdentifier);

    v65 = sub_232200EC4();
    v67 = v66;

    v124 = sub_232013174(v65, v67, v125);
    sub_232201710();
    v68 = v121;
    swift_bridgeObjectRelease();
    sub_2320ECFB8(v47);
    *(_WORD *)(v53 + 32) = 2080;
    sub_232000590(&qword_2541B27F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], MEMORY[0x24BDCB8B8]);
    v69 = v119;
    v70 = sub_232201AB8();
    v124 = sub_232013174(v70, v71, v125);
    sub_232201710();
    swift_bridgeObjectRelease();
    v119 = *(char **)(v61 + 8);
    ((void (*)(char *, uint64_t))v119)(v69, v68);
    *(_WORD *)(v53 + 42) = 2080;
    v72 = v120;
    (*(void (**)(char *, uint64_t, uint64_t))(v96 + 16))(v95, v120 + v62[5], v97);
    v73 = sub_232200F00();
    v124 = sub_232013174(v73, v74, v125);
    sub_232201710();
    swift_bridgeObjectRelease();
    sub_2320ECFB8(v72);
    v75 = v92;
    _os_log_impl(&dword_231FFB000, v92, (os_log_type_t)v94, "[%s]_%s_%s: Executing query for date interval %s and configuration %s", (uint8_t *)v53, 0x34u);
    v76 = v93;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v76, -1, -1);
    MEMORY[0x2348FF468](v53, -1, -1);

    (*(void (**)(char *, uint64_t))(v102 + 8))(v122, v103);
  }
  else
  {
    ((void (*)(char *, uint64_t))v45[1])(v46, v19);
    sub_2320ECFB8(v47);
    v119 = *(char **)(v44 + 8);
    ((void (*)(char *, uint64_t))v119)(v48, v27);
    sub_2320ECFB8(v50);

    (*(void (**)(char *, uint64_t))(v102 + 8))(v122, v103);
    v68 = v27;
    v61 = v44;
  }
  sub_2321FE3D4();
  sub_232016AD8(v125, v125[3]);
  v77 = (void *)sub_2321FE314();
  v78 = (void *)sub_2321FE464();
  v79 = sub_2321FDC6C();
  v80 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v81 = (uint64_t)v105;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56))(v105, 1, 1, v79);
  v82 = (uint64_t)v106;
  ((void (*)(char *, char *, uint64_t))v99)(v106, v123, v68);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v61 + 56))(v82, 0, 1, v68);
  v83 = v107;
  v84 = v98;
  sub_23220129C();

  sub_232016D88(v82, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
  sub_232016D88(v81, &qword_2541B7618, v80);
  sub_232016AFC((uint64_t)v125);
  sub_2321FE434();
  v85 = v110;
  sub_2320EA560(v110);
  sub_232000590(&qword_2541B55E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE45AF0], MEMORY[0x24BE45AE8]);
  v86 = v109;
  v87 = sub_232200738();
  (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v85, v113);
  sub_232016AFC((uint64_t)v125);
  (*(void (**)(char *, uint64_t))(v108 + 8))(v83, v86);
  v125[0] = v87;
  sub_232069F3C();
  sub_2320057B8(0, &qword_2541B3560, (uint64_t (*)(uint64_t))MEMORY[0x24BE45AD8], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  sub_232000590(&qword_2541B2FE8, (uint64_t (*)(uint64_t))sub_232069F3C, MEMORY[0x24BDB9AF8]);
  v88 = v111;
  sub_2322007A4();
  swift_release();
  sub_232000590(&qword_2541B2C50, (uint64_t (*)(uint64_t))sub_232069E90, MEMORY[0x24BDB96C0]);
  v89 = v115;
  v90 = sub_232200774();

  (*(void (**)(char *, uint64_t))(v114 + 8))(v88, v89);
  ((void (*)(char *, uint64_t))v119)(v123, v121);
  return v90;
}

uint64_t sub_2320EB4C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_23220126C();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, a1, v4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
}

uint64_t sub_2320EB524@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t *v51;

  v49 = a2;
  v50 = a1;
  v51 = a3;
  v3 = type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  MEMORY[0x24BDAC7A8](v3);
  v48 = (uint64_t)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_2321FDC6C();
  v44 = *(_QWORD *)(v46 - 8);
  v5 = MEMORY[0x24BDAC7A8](v46);
  v43 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v42 = (char *)&v38 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v41 = (char *)&v38 - v9;
  v47 = sub_2321FD8B8();
  v40 = *(_QWORD *)(v47 - 8);
  v10 = MEMORY[0x24BDAC7A8](v47);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v45 = (char *)&v38 - v13;
  v14 = (uint64_t (*)(uint64_t))MEMORY[0x24BE45AD8];
  sub_2320057B8(0, &qword_2541B3560, (uint64_t (*)(uint64_t))MEMORY[0x24BE45AD8], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v38 - v16;
  sub_2320057B8(0, &qword_2541B55D8, v14, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v38 - v19;
  v21 = sub_23220126C();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v38 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232026DE8((uint64_t)v50, (uint64_t)v17, &qword_2541B3560, v14, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  v26 = 1;
  if (v25(v17, 1, v21) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v20, v17, v21);
    v26 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v20, v26, 1, v21);
  if (v25(v20, 1, v21) == 1)
  {
    result = sub_232016D88((uint64_t)v20, &qword_2541B55D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE45AD8]);
    v28 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v24, v20, v21);
    v50 = (void *)sub_232201260();
    v29 = v49;
    v39 = v49 + *(int *)(v3 + 20);
    sub_2320E93A4(v49 + *(int *)(v3 + 44), v39, (uint64_t)v12);
    sub_2321FD894();
    v30 = v43;
    sub_2321FD870();
    sub_2321FDBE8();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v30, v46);
    v31 = (uint64_t)v45;
    sub_2321FD87C();
    v32 = *(void (**)(char *, uint64_t))(v40 + 8);
    v33 = v12;
    v34 = v47;
    v32(v33, v47);
    sub_2320ECBC8(v29, v48);
    v35 = sub_232200F00();
    v36 = v50;
    v28 = sub_2320E999C(v50, v39, v31, v35, v37);

    swift_bridgeObjectRelease();
    v32((char *)v31, v34);
    result = (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  }
  *v51 = v28;
  return result;
}

uint64_t sub_2320EB918()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC9Summaries43StatisticTrendSummarySharableModelGenerator_domain;
  v2 = sub_2321FE3BC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  sub_2320ECFB8(v0 + OBJC_IVAR____TtC9Summaries43StatisticTrendSummarySharableModelGenerator_request);
  return swift_deallocClassInstance();
}

uint64_t sub_2320EB988()
{
  return type metadata accessor for StatisticTrendSummarySharableModelGenerator(0);
}

uint64_t type metadata accessor for StatisticTrendSummarySharableModelGenerator(uint64_t a1)
{
  return sub_23201A14C(a1, (uint64_t *)&unk_2541B0158);
}

uint64_t sub_2320EB9A4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2321FE3BC();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(319);
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(uint64_t a1)
{
  return sub_23201A14C(a1, qword_2541B0090);
}

char *sub_2320EBA4C(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2321FDC6C();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = sub_232200024();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    v13 = a3[6];
    v14 = &a1[v13];
    v15 = &a2[v13];
    v16 = sub_2321FFC7C();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      sub_2320057B8(0, &qword_2541AF190, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AB30], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    v20 = a3[7];
    v21 = &a1[v20];
    v22 = &a2[v20];
    v23 = sub_2321FE4A0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    a1[a3[8]] = a2[a3[8]];
    *(_QWORD *)&a1[v24] = *(_QWORD *)&a2[v24];
    v25 = a3[11];
    *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
    v26 = &a1[v25];
    v27 = &a2[v25];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8(v26, v27, v7);
    v28 = a3[12];
    v29 = &a1[v28];
    v30 = &a2[v28];
    v31 = *((_QWORD *)v30 + 1);
    *(_QWORD *)v29 = *(_QWORD *)v30;
    *((_QWORD *)v29 + 1) = v31;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_2320EBC30(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = sub_2321FDC6C();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = a1 + a2[5];
  v7 = sub_232200024();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + a2[6];
  v9 = sub_2321FFC7C();
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  v11 = a1 + a2[7];
  v12 = sub_2321FE4A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5(a1 + a2[11], v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2320EBD44(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;

  v6 = sub_2321FDC6C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_232200024();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  v12 = a3[6];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = sub_2321FFC7C();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    sub_2320057B8(0, &qword_2541AF190, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AB30], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v18 = a3[7];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = sub_2321FE4A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  v22 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v22) = *(_QWORD *)(a2 + v22);
  v23 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  v24 = a1 + v23;
  v25 = a2 + v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7(v24, v25, v6);
  v26 = a3[12];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (_QWORD *)(a2 + v26);
  v29 = v28[1];
  *v27 = *v28;
  v27[1] = v29;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2320EBEFC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  void (*v28)(uint64_t, uint64_t, uint64_t);

  v6 = sub_2321FDC6C();
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v28(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_232200024();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = (void *)(a1 + v11);
  v13 = (void *)(a2 + v11);
  v14 = sub_2321FFC7C();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 24))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    sub_2320057B8(0, &qword_2541AF190, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AB30], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v12, v13, v14);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  v20 = a3[7];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = sub_2321FE4A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 24))(v21, v22, v23);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v28(a1 + a3[11], a2 + a3[11], v6);
  v24 = a3[12];
  v25 = (_QWORD *)(a1 + v24);
  v26 = (_QWORD *)(a2 + v24);
  *v25 = *v26;
  v25[1] = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2320EC130(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_2321FDC6C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_232200024();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = a3[6];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = sub_2321FFC7C();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    sub_2320057B8(0, &qword_2541AF190, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AB30], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v18 = a3[7];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = sub_2321FE4A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
  v22 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v22) = *(_QWORD *)(a2 + v22);
  v23 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  v7(a1 + v23, a2 + v23, v6);
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_2320EC2C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v31)(uint64_t, uint64_t, uint64_t);

  v6 = sub_2321FDC6C();
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v31(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_232200024();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (void *)(a1 + v11);
  v13 = (void *)(a2 + v11);
  v14 = sub_2321FFC7C();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    sub_2320057B8(0, &qword_2541AF190, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AB30], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  v20 = a3[7];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = sub_2321FE4A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v21, v22, v23);
  v24 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v24) = *(_QWORD *)(a2 + v24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_bridgeObjectRelease();
  v31(a1 + a3[11], a2 + a3[11], v6);
  v25 = a3[12];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (uint64_t *)(a2 + v25);
  v29 = *v27;
  v28 = v27[1];
  *v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2320EC4D8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2320EC4E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v17;

  v6 = sub_2321FDC6C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_232200024();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_9:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  sub_2320057B8(0, &qword_2541AF190, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AB30], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[6];
    goto LABEL_9;
  }
  v15 = sub_2321FE4A0();
  v12 = *(_QWORD *)(v15 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v15;
    v13 = a3[7];
    goto LABEL_9;
  }
  v17 = *(_QWORD *)(a1 + a3[9]);
  if (v17 >= 0xFFFFFFFF)
    LODWORD(v17) = -1;
  return (v17 + 1);
}

uint64_t sub_2320EC5EC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2320EC5F8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;

  v8 = sub_2321FDC6C();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  v13 = sub_232200024();
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[5];
LABEL_9:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  sub_2320057B8(0, &qword_2541AF190, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AB30], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v14 = *(_QWORD *)(v16 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v16;
    v15 = a4[6];
    goto LABEL_9;
  }
  result = sub_2321FE4A0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[7];
    goto LABEL_9;
  }
  *(_QWORD *)(a1 + a4[9]) = (a2 - 1);
  return result;
}

void sub_2320EC6FC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_2321FDC6C();
  if (v0 <= 0x3F)
  {
    sub_232200024();
    if (v1 <= 0x3F)
    {
      sub_2320057B8(319, &qword_2541AF190, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AB30], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      if (v2 <= 0x3F)
      {
        sub_2321FE4A0();
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

_UNKNOWN **sub_2320EC7F4()
{
  return &off_250102AA0;
}

uint64_t sub_2320EC800(uint64_t a1)
{
  uint64_t result;

  result = sub_232000590(&qword_2541B0140, type metadata accessor for StatisticTrendSummarySharableModelGenerator, (uint64_t)&unk_232215000);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

_UNKNOWN **sub_2320EC83C()
{
  return &off_250102AE8;
}

uint64_t sub_2320EC848()
{
  return swift_retain();
}

uint64_t sub_2320EC85C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC9Summaries43StatisticTrendSummarySharableModelGenerator_domain;
  v4 = sub_2321FE3BC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_2320EC8A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];

  v6 = type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  sub_2320ECAA0();
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = a1;
  sub_2320ECBC8(a3, (uint64_t)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v3;
  sub_2320ECD68((uint64_t)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14);
  sub_2320ECB4C();
  sub_2320057B8(0, &qword_2541B5490, (uint64_t (*)(uint64_t))sub_232016768, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_232000590(&qword_2541B2F40, (uint64_t (*)(uint64_t))sub_2320ECB4C, MEMORY[0x24BDB9AF8]);
  sub_2322007A4();
  swift_release();
  sub_232000590((unint64_t *)&qword_2541B2C08, (uint64_t (*)(uint64_t))sub_2320ECAA0, MEMORY[0x24BDB96C0]);
  v16 = sub_232200774();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v16;
}

uint64_t sub_2320ECA64(uint64_t a1)
{
  uint64_t result;

  result = sub_232000590(&qword_2541B0150, type metadata accessor for StatisticTrendSummarySharableModelGenerator, (uint64_t)&unk_232214FB8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_2320ECAA0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2C10)
  {
    sub_2320ECB4C();
    sub_2320057B8(255, &qword_2541B5490, (uint64_t (*)(uint64_t))sub_232016768, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_232000590(&qword_2541B2F40, (uint64_t (*)(uint64_t))sub_2320ECB4C, MEMORY[0x24BDB9AF8]);
    v0 = sub_232200540();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2C10);
  }
}

void sub_2320ECB4C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2F48)
  {
    sub_2320057B8(255, &qword_2541B3560, (uint64_t (*)(uint64_t))MEMORY[0x24BE45AD8], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummaryModelQueryOutput);
    v0 = sub_232200624();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2F48);
  }
}

uint64_t sub_2320ECBC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2320ECC0C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = (int *)type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 24) & ~v2);
  v4 = sub_2321FDC6C();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v6 = v3 + v1[5];
  v7 = sub_232200024();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v3 + v1[6];
  v9 = sub_2321FFC7C();
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  v11 = v3 + v1[7];
  v12 = sub_2321FE4A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5(v3 + v1[11], v4);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2320ECD68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2320ECDAC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0)
                                      - 8)
                          + 80);
  return sub_2320EB524(a1, v2 + ((v5 + 24) & ~v5), a2);
}

void sub_2320ECDFC(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_2320ECE58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2320E93A4(v2 + *(int *)(a1 + 40), v2 + *(int *)(a1 + 20), a2);
}

unint64_t sub_2320ECE70()
{
  unint64_t result;

  result = qword_255F9E700;
  if (!qword_255F9E700)
  {
    type metadata accessor for StatisticTrendSummarySharableModelGenerator(255);
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255F9E700);
  }
  return result;
}

uint64_t sub_2320ECEA8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2320ECECC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_2321FFC94();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2320ECF40(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(sub_2321FFC94() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_232148DF4(a1, a2, v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_2320ECFA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2320ECFB0()
{
  return swift_release();
}

uint64_t sub_2320ECFB8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for StatisticTrendSummarySharableModelGenerator.Request(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2320ECFF4()
{
  unint64_t result;

  result = qword_2541B0C00;
  if (!qword_2541B0C00)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2541B0C00);
  }
  return result;
}

uint64_t sub_2320ED030(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2320057B8(0, &qword_2541AF190, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AB30], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2320ED08C(void *a1, uint64_t a2, uint64_t (*a3)(void *), uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  void (*v21)(char *, uint64_t);
  void *v22;
  id v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(void *);
  uint64_t v53;
  uint64_t v54;

  v51 = a4;
  v52 = a3;
  v6 = sub_23220039C();
  v49 = *(_QWORD *)(v6 - 8);
  v50 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v45 - v10;
  v12 = sub_2321FDCC0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_msgSend(*(id *)(a2 + 32), sel_profileIdentifier);
  v17 = objc_msgSend(v16, sel_identifier);

  sub_2321FDCA8();
  v18 = sub_2321FDC84();
  v20 = v19;
  v21 = *(void (**)(char *, uint64_t))(v13 + 8);
  v22 = a1;
  v21(v15, v12);
  if (a1)
  {
    v47 = v18;
    v23 = a1;
    sub_232200318();
    v24 = v23;
    swift_bridgeObjectRetain();
    v25 = v24;
    v26 = sub_232200390();
    v27 = sub_2322012E4();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v46 = swift_slowAlloc();
      v54 = v46;
      *(_DWORD *)v28 = 136446722;
      v29 = sub_232201BF0();
      v48 = a1;
      v53 = sub_232013174(v29, v30, &v54);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2082;
      swift_bridgeObjectRetain();
      v53 = sub_232013174(v47, v20, &v54);
      sub_232201710();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v28 + 22) = 2082;
      v31 = v25;
      v32 = objc_msgSend(v31, sel_description);
      v33 = sub_232200EC4();
      v35 = v34;

      v53 = sub_232013174(v33, v35, &v54);
      v22 = v48;
      sub_232201710();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v26, v27, "[%{public}s] Failed to set wheelchaire use for %{public}s: %{public}s", (uint8_t *)v28, 0x20u);
      v36 = v46;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v36, -1, -1);
      MEMORY[0x2348FF468](v28, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v49 + 8))(v9, v50);
  }
  else
  {
    sub_232200318();
    swift_bridgeObjectRetain();
    v37 = sub_232200390();
    v38 = sub_2322012FC();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = swift_slowAlloc();
      v40 = v18;
      v41 = swift_slowAlloc();
      v54 = v41;
      *(_DWORD *)v39 = 136446466;
      v48 = 0;
      v42 = sub_232201BF0();
      v53 = sub_232013174(v42, v43, &v54);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 2082;
      swift_bridgeObjectRetain();
      v53 = sub_232013174(v40, v20, &v54);
      v22 = v48;
      sub_232201710();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_231FFB000, v37, v38, "[%{public}s] Successfully set wheelchaire use for %{public}s", (uint8_t *)v39, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v41, -1, -1);
      MEMORY[0x2348FF468](v39, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v49 + 8))(v11, v50);
  }
  return v52(v22);
}

uint64_t sub_2320ED588(void *a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(void *), uint64_t a5, uint64_t a6)
{
  sub_2320EDF84(a1, a2, a3, a4, a5, a6);
  swift_release();
  return swift_release();
}

void sub_2320ED5B8(id a1, char a2, _QWORD *a3, void (*a4)(void))
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;

  if ((a2 & 1) != 0)
  {
    v8 = a1;
    sub_232016A8C(0, (unint64_t *)&qword_2541B78D0);
    swift_willThrowTypedImpl();
    v9 = (void *)sub_2321FDA50();
    a4();

  }
  else
  {
    v6 = a3[8];
    v7 = a3[9];
    sub_232016AD8(a3 + 5, v6);
    (*(void (**)(id, uint64_t, uint64_t))(v7 + 8))(a1, v6, v7);
    ((void (*)(_QWORD))a4)(0);
  }
}

void sub_2320ED690(id a1, char a2, uint64_t a3, void (*a4)(id, uint64_t))
{
  uint64_t v6;
  id v7;
  id v8;

  if ((a2 & 1) != 0)
  {
    v7 = a1;
    sub_232016A8C(0, (unint64_t *)&qword_2541B78D0);
    swift_willThrowTypedImpl();
    v8 = a1;
    a4(a1, 1);

  }
  else
  {
    sub_232047854(a1, 0);
    v6 = sub_2320EE2D8((unint64_t)a1);
    sub_2320477E4(a1, 0);
    a4((id)v6, 0);
  }
}

uint64_t sub_2320ED76C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_unknownObjectRelease();
  v1 = v0 + OBJC_IVAR____TtCC9Summaries39WheelchairSettingSummarySharingExecutor7Planner_signals;
  v2 = sub_2321FFA0C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_2320ED7C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtCC9Summaries39WheelchairSettingSummarySharingExecutor7Planner_signals;
  v4 = sub_2321FFA0C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_2320ED80C()
{
  sub_232000590(&qword_255F9E8B8, (uint64_t (*)(uint64_t))type metadata accessor for WheelchairSettingSummarySharingExecutor.Planner, (uint64_t)&unk_232215138);
  return sub_2321FE068();
}

uint64_t sub_2320ED864(uint64_t a1, void *a2)
{
  return sub_2320EE64C(a2);
}

uint64_t sub_2320ED86C()
{
  sub_232000590(&qword_255F9E8B8, (uint64_t (*)(uint64_t))type metadata accessor for WheelchairSettingSummarySharingExecutor.Planner, (uint64_t)&unk_232215138);
  return sub_2321FE08C();
}

void sub_2320ED8C4()
{
  sub_232000590(&qword_255F9E8B8, (uint64_t (*)(uint64_t))type metadata accessor for WheelchairSettingSummarySharingExecutor.Planner, (uint64_t)&unk_232215138);
  JUMPOUT(0x2348FB1FCLL);
}

void sub_2320ED91C()
{
  sub_232000590(&qword_255F9E8B8, (uint64_t (*)(uint64_t))type metadata accessor for WheelchairSettingSummarySharingExecutor.Planner, (uint64_t)&unk_232215138);
  JUMPOUT(0x2348FB1F0);
}

uint64_t sub_2320ED974()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  sub_232016AFC(v0 + 40);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_2320ED9B0()
{
  return sub_2321FFA90();
}

uint64_t sub_2320ED9CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, uint64_t, uint64_t);
  uint64_t v8;
  __int128 v10;

  v3 = sub_2321FFA0C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10 = *(_OWORD *)(v1 + 16);
  v7(v6, a1, v3);
  type metadata accessor for WheelchairSettingSummarySharingExecutor.Planner();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = v10;
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v8 + OBJC_IVAR____TtCC9Summaries39WheelchairSettingSummarySharingExecutor7Planner_signals, v6, v3);
  swift_unknownObjectRetain();
  return v8;
}

void sub_2320EDAA0(uint64_t a1, uint64_t (*a2)(void *), uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;

  v4 = v3;
  v7 = *v3;
  sub_2320057B8(0, &qword_2541B2518, (uint64_t (*)(uint64_t))sub_232071EE4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v15 - v9;
  sub_2320EDD04();
  sub_2321FFB08();
  sub_232071EE4();
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v11) == 1)
  {
    sub_232016D88((uint64_t)v10, &qword_2541B2518, (uint64_t (*)(uint64_t))sub_232071EE4);
    v14 = 0;
  }
  else
  {
    v14 = (void *)sub_232200D2C();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  swift_retain();
  swift_retain();
  sub_2320ED588(v14, v4, (uint64_t)v4, a2, a3, v7);

}

id sub_2320EDBDC(uint64_t a1)
{
  return sub_2320EDEDC(a1);
}

uint64_t type metadata accessor for WheelchairSettingSummarySharingExecutor()
{
  return objc_opt_self();
}

uint64_t sub_2320EDC1C()
{
  return type metadata accessor for WheelchairSettingSummarySharingExecutor.Planner();
}

uint64_t type metadata accessor for WheelchairSettingSummarySharingExecutor.Planner()
{
  uint64_t result;

  result = qword_255F9E7E8;
  if (!qword_255F9E7E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2320EDC60()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2321FFA0C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_2320EDCD8()
{
  return sub_232000590(&qword_255F9E878, (uint64_t (*)(uint64_t))sub_2320EDD04, MEMORY[0x24BE47110]);
}

void sub_2320EDD04()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9E880)
  {
    sub_2320057B8(255, &qword_2541B2518, (uint64_t (*)(uint64_t))sub_232071EE4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    sub_2320EDE18(&qword_255F9E888, sub_2320EDDFC, MEMORY[0x24BEE4AC0]);
    sub_2320EDE18(&qword_255F9E898, sub_2320EDE94, MEMORY[0x24BEE4AA8]);
    v0 = sub_2321FFB14();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9E880);
  }
}

unint64_t sub_2320EDDC0()
{
  unint64_t result;

  result = qword_2541B27B0;
  if (!qword_2541B27B0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2541B27B0);
  }
  return result;
}

uint64_t sub_2320EDDFC()
{
  return sub_232000590(&qword_255F9E890, (uint64_t (*)(uint64_t))sub_232071EE4, MEMORY[0x24BDD2078]);
}

uint64_t sub_2320EDE18(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_2320057B8(255, &qword_2541B2518, (uint64_t (*)(uint64_t))sub_232071EE4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x2348FF39C](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2320EDE94()
{
  return sub_232000590(&qword_255F9E8A0, (uint64_t (*)(uint64_t))sub_232071EE4, MEMORY[0x24BDD2060]);
}

uint64_t sub_2320EDEB0()
{
  return sub_232000590(&qword_255F9E8A8, (uint64_t (*)(uint64_t))type metadata accessor for WheelchairSettingSummarySharingExecutor.Planner, (uint64_t)&unk_2322150D8);
}

id sub_2320EDEDC(uint64_t a1)
{
  void *v1;
  id v3;
  id v4[2];

  v4[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4[0] = 0;
  if (objc_msgSend(v1, sel__setWheelchairUse_error_, a1, v4))
    return v4[0];
  v3 = v4[0];
  sub_2321FDA5C();

  return (id)swift_willThrow();
}

uint64_t sub_2320EDF84(void *a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(void *), uint64_t a5, uint64_t a6)
{
  _QWORD *v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_QWORD, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a3;
  v12[3] = a4;
  v12[4] = a5;
  v12[5] = a6;
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a2;
  v13[3] = sub_2320EE264;
  v13[4] = v12;
  if (!a1)
  {
    v17 = a2[8];
    v18 = a2[9];
    sub_232016AD8(a2 + 5, v17);
    v19 = *(void (**)(_QWORD, uint64_t, uint64_t))(v18 + 8);
    swift_retain_n();
    swift_retain_n();
    swift_retain();
    swift_retain();
    v19(0, v17, v18);
    sub_2320ED08C(0, a3, a4, a5);
    swift_release();
    goto LABEL_6;
  }
  swift_getObjectType();
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  swift_retain();
  v14 = a1;
  if (sub_2321FE14C())
  {
    v15 = sub_232132198();
    sub_23201A3C8(v15);
    swift_bridgeObjectRelease();
    v16 = (_QWORD *)swift_allocObject();
    v16[2] = a2;
    v16[3] = sub_2320EE278;
    v16[4] = v13;
    swift_retain();
    swift_retain();
    sub_2321FE974();
    swift_release();
    swift_release();

    swift_release();
    swift_release();
LABEL_6:
    swift_release();
    return swift_release_n();
  }
  v20 = a2[8];
  v21 = a2[9];
  sub_232016AD8(a2 + 5, v20);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v21 + 8))(0, v20, v21);
  sub_2320ED08C(0, a3, a4, a5);
  swift_release();
  swift_release();

  return swift_release_n();
}

uint64_t sub_2320EE25C()
{
  return sub_2320EE290();
}

uint64_t sub_2320EE264(void *a1)
{
  uint64_t v1;

  return sub_2320ED08C(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(void *))(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_2320EE270()
{
  return sub_2320EE290();
}

void sub_2320EE278(void *a1, char a2)
{
  uint64_t v2;

  sub_2320ED5B8(a1, a2 & 1, *(_QWORD **)(v2 + 16), *(void (**)(void))(v2 + 24));
}

uint64_t sub_2320EE288()
{
  return sub_2320EE290();
}

uint64_t sub_2320EE290()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_2320EE2C8(void *a1, char a2)
{
  uint64_t v2;

  sub_2320ED690(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(void (**)(id, uint64_t))(v2 + 24));
}

uint64_t sub_2320EE2D8(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  void *v17;
  id v18;
  unsigned int v19;
  uint64_t v20;

  v2 = v1;
  v4 = sub_2321FE608();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!(a1 >> 62))
  {
    v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  result = sub_232201998();
  if (!result)
    goto LABEL_17;
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
    v10 = (id)MEMORY[0x2348FEA30](0, a1);
LABEL_6:
    v11 = v10;
    swift_bridgeObjectRelease();
    v12 = v11;
    sub_2321FE5CC();
    if (v2)
    {

    }
    else
    {
      v13 = sub_2321FE5E4();
      v15 = v14;
      v16 = objc_allocWithZone(MEMORY[0x24BE4A570]);
      v17 = (void *)sub_2321FDAC8();
      sub_232003ED4(v13, v15);
      v18 = objc_msgSend(v16, sel_initWithData_, v17);

      if (v18)
      {
        if (objc_msgSend(v18, sel_hasIsUsingWheelchair))
        {
          v19 = objc_msgSend(v18, sel_isUsingWheelchair);

          if (v19)
            v12 = 2;
          else
            v12 = 1;
        }
        else
        {

          v12 = 0;
        }
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      }
      else
      {
        sub_2320EE500();
        swift_allocError();
        swift_willThrow();

        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      }
    }
    return v12;
  }
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v10 = *(id *)(a1 + 32);
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

unint64_t sub_2320EE500()
{
  unint64_t result;

  result = qword_255F9E8B0;
  if (!qword_255F9E8B0)
  {
    result = MEMORY[0x2348FF39C](&unk_232215234, &type metadata for WheelchairSettingSummarySharingExecutor.ModelError);
    atomic_store(result, (unint64_t *)&qword_255F9E8B0);
  }
  return result;
}

uint64_t sub_2320EE544()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  sub_2321FF9AC();
  sub_232031990();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_232210D40;
  sub_2321FE890();
  v1 = sub_2321FFB44();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BE47138];
  *(_QWORD *)(v0 + 56) = v1;
  *(_QWORD *)(v0 + 64) = sub_232000590((unint64_t *)&qword_2541B6B38, v2, MEMORY[0x24BE47130]);
  sub_2320251BC((uint64_t *)(v0 + 32));
  sub_2321FE884();
  v3 = sub_2321FF994();
  sub_232027434();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_232210D20;
  *(_QWORD *)(v4 + 32) = v3;
  v6 = v4;
  sub_232201050();
  return v6;
}

uint64_t sub_2320EE64C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  void (*v25)(char *, _QWORD, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;

  v60 = a1;
  v1 = sub_2321FFACC();
  MEMORY[0x24BDAC7A8](v1);
  v52 = (char *)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320EDD04();
  v65 = v3;
  v54 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v53 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B2518, (uint64_t (*)(uint64_t))sub_232071EE4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v64 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v50 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v51 = (char *)&v46 - v9;
  v49 = sub_2321FDDD4();
  v48 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v47 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, &qword_2541B6AF0, (uint64_t (*)(uint64_t))MEMORY[0x24BE48258], MEMORY[0x24BE46F68]);
  v58 = *(_QWORD *)(v11 - 8);
  v59 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v57 = (char *)&v46 - v12;
  sub_2320057B8(0, &qword_2541B6B90, (uint64_t (*)(uint64_t))sub_2320CC3AC, v5);
  MEMORY[0x24BDAC7A8](v13);
  v56 = (char *)&v46 - v14;
  v15 = sub_2321FFA48();
  v62 = *(_QWORD *)(v15 - 8);
  v63 = v15;
  v16 = MEMORY[0x24BDAC7A8](v15);
  v61 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v67 = (char *)&v46 - v18;
  v19 = sub_2321FFA18();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598];
  sub_2320057B8(0, &qword_2541B7188, (uint64_t (*)(uint64_t))MEMORY[0x24BE46FD8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v55 = *(_QWORD *)(*(_QWORD *)(sub_2321FFA30() - 8) + 72);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_232210D30;
  sub_2320057B8(0, &qword_2541B7198, (uint64_t (*)(uint64_t))MEMORY[0x24BE471E8], v23);
  sub_2321FFC04();
  v24 = swift_allocObject();
  v66 = xmmword_232210D40;
  *(_OWORD *)(v24 + 16) = xmmword_232210D40;
  sub_2321FFBE0();
  v25 = *(void (**)(char *, _QWORD, uint64_t))(v20 + 104);
  v25(v22, *MEMORY[0x24BE46FB0], v19);
  sub_2321FFA24();
  *(_OWORD *)(swift_allocObject() + 16) = v66;
  v26 = (uint64_t)v56;
  sub_2321FFBEC();
  v25(v22, *MEMORY[0x24BE46FA8], v19);
  sub_2321FFA24();
  v25(v22, *MEMORY[0x24BE46FC0], v19);
  sub_2321FFA24();
  sub_2321FE890();
  v27 = v57;
  sub_2321FF9D0();
  sub_232000590(&qword_255F9E130, (uint64_t (*)(uint64_t))MEMORY[0x24BE48258], MEMORY[0x24BE48248]);
  sub_2321FFB2C();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v27, v59);
  sub_2320CC3AC();
  v29 = v28;
  v30 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v26, 1, v28) == 1)
  {
    sub_232016D88(v26, &qword_2541B6B90, (uint64_t (*)(uint64_t))sub_2320CC3AC);
    v32 = v53;
    v31 = v54;
    v33 = (uint64_t)v51;
    v34 = (uint64_t)v50;
LABEL_5:
    sub_232071EE4();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v33, 1, 1, v39);
    v60 = 0;
    goto LABEL_6;
  }
  sub_2321FFBBC();
  v35 = v69;
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v26, v29);
  v68 = v35;
  v36 = v47;
  sub_2321FDDA4();
  sub_2320CC480();
  sub_232000590(&qword_255F9E140, (uint64_t (*)(uint64_t))sub_2320CC480, MEMORY[0x24BEE1718]);
  v37 = (void *)sub_232200FD8();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v36, v49);
  swift_bridgeObjectRelease();
  v32 = v53;
  v31 = v54;
  v33 = (uint64_t)v51;
  v34 = (uint64_t)v50;
  if (!v37)
    goto LABEL_5;
  sub_2320EDDC0();
  v60 = v37;
  sub_232200D44();
  sub_232071EE4();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v33, 0, 1, v38);
LABEL_6:
  sub_2321FFAC0();
  v40 = v62;
  v41 = v67;
  v42 = v63;
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v61, v67, v63);
  sub_2320EEDAC(v33, v34);
  sub_2320EDE18(&qword_255F9E888, sub_2320EDDFC, MEMORY[0x24BEE4AC0]);
  sub_2320EDE18(&qword_255F9E898, sub_2320EDE94, MEMORY[0x24BEE4AA8]);
  sub_2321FFAFC();
  sub_2320057B8(0, &qword_255F9E8C0, (uint64_t (*)(uint64_t))sub_2320EDD04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v43 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = v66;
  (*(void (**)(unint64_t, char *, uint64_t))(v31 + 32))(v44 + v43, v32, v65);

  sub_232016D88(v33, &qword_2541B2518, (uint64_t (*)(uint64_t))sub_232071EE4);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v42);
  return v44;
}

uint64_t sub_2320EEDAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2320057B8(0, &qword_2541B2518, (uint64_t (*)(uint64_t))sub_232071EE4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for WheelchairSettingSummarySharingExecutor.ModelError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2320EEE48 + 4 * byte_232215030[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2320EEE68 + 4 * byte_232215035[v4]))();
}

_BYTE *sub_2320EEE48(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2320EEE68(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2320EEE70(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2320EEE78(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2320EEE80(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2320EEE88(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for WheelchairSettingSummarySharingExecutor.ModelError()
{
  return &type metadata for WheelchairSettingSummarySharingExecutor.ModelError;
}

unint64_t sub_2320EEEA8()
{
  unint64_t result;

  result = qword_255F9E8C8[0];
  if (!qword_255F9E8C8[0])
  {
    result = MEMORY[0x2348FF39C](&unk_23221520C, &type metadata for WheelchairSettingSummarySharingExecutor.ModelError);
    atomic_store(result, qword_255F9E8C8);
  }
  return result;
}

void sub_2320EEEF0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2320EEF4C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2320EEFC4 + 4 * byte_232215284[a2]))(0x56746E6572727563);
}

uint64_t sub_2320EEFC4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x56746E6572727563 && v1 == 0xEC00000065756C61)
    v2 = 1;
  else
    v2 = sub_232201ADC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_2320EF084(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2320EF0CC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2320EF140 + 4 * byte_23221528D[a2]))(0x7472616863);
}

uint64_t sub_2320EF140(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x7472616863 && v1 == v2)
    v3 = 1;
  else
    v3 = sub_232201ADC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_2320EF1FC(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x676E6972616873;
  else
    v2 = 0x7972616D697270;
  if ((a2 & 1) != 0)
    v3 = 0x676E6972616873;
  else
    v3 = 0x7972616D697270;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_232201ADC();
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_2320EF278(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6D65744964656566;
  else
    v3 = 0xD00000000000001ALL;
  if (v2)
    v4 = 0x80000002322027B0;
  else
    v4 = 0xED0000796C6E4F73;
  if ((a2 & 1) != 0)
    v5 = 0x6D65744964656566;
  else
    v5 = 0xD00000000000001ALL;
  if ((a2 & 1) != 0)
    v6 = 0xED0000796C6E4F73;
  else
    v6 = 0x80000002322027B0;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_232201ADC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

BOOL sub_2320EF32C(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t sub_2320EF338()
{
  uint64_t result;

  sub_232003E9C(0, (unint64_t *)&qword_2541B74A0);
  result = sub_232201170();
  qword_2541BF678 = result;
  return result;
}

uint64_t sub_2320EF378(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[2];
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[4];

  v24 = a2;
  v3 = sub_2321FE440();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320F409C();
  v25 = *(_QWORD *)(v7 - 8);
  v26 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2321FE3C8();
  sub_232016AD8(v28, v28[3]);
  if (qword_2541B4810 != -1)
    swift_once();
  v27 = sub_2321FE68C();
  sub_2320F4164(0);
  v22[1] = v10;
  sub_232000590((unint64_t *)&qword_2541B79C0, (uint64_t (*)(uint64_t))sub_2320F4164, MEMORY[0x24BDB9AF8]);
  v11 = sub_232200720();
  swift_release();
  sub_232016AFC((uint64_t)v28);
  v28[0] = v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  v12 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v13 = (v5 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF8;
  v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v15 + v12, v6, v3);
  v17 = v23;
  v16 = v24;
  *(_QWORD *)(v15 + v13) = v23;
  *(_QWORD *)(v15 + v14) = v16;
  *(_QWORD *)(v15 + ((v14 + 15) & 0xFFFFFFFFFFFFFFF8)) = v17;
  v18 = v16;
  sub_23220060C();
  sub_2320599C0();
  sub_232000590(&qword_2541B79A8, (uint64_t (*)(uint64_t))sub_2320599C0, MEMORY[0x24BDB9AF8]);
  sub_232200888();
  swift_release();
  swift_release();
  sub_232000590(&qword_2541AF248, (uint64_t (*)(uint64_t))sub_2320F409C, MEMORY[0x24BDB98F0]);
  v19 = v26;
  v20 = sub_232200774();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v19);
  return v20;
}

uint64_t sub_2320EF628@<X0>(uint64_t *a1@<X0>, NSObject *a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void *v32;
  uint64_t v33;
  int64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  char *v48;
  unint64_t v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  NSObject *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, unint64_t, uint64_t);
  char *v66;
  int v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t, unint64_t, uint64_t);
  unint64_t v72;
  id v73;
  void *v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  double v78;
  id v79;
  _QWORD *v80;
  char isUniquelyReferenced_nonNull_native;
  char v82;
  unint64_t v83;
  uint64_t v84;
  _BOOL8 v85;
  uint64_t v86;
  char v87;
  unint64_t v88;
  char v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  BOOL v93;
  uint64_t v94;
  id v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(uint64_t, uint64_t, uint64_t);
  uint64_t v102;
  unint64_t v103;
  id v104;
  void *v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  double v109;
  id v110;
  _QWORD *v111;
  char v112;
  char v113;
  unint64_t v114;
  uint64_t v115;
  _BOOL8 v116;
  uint64_t v117;
  char v118;
  unint64_t v119;
  char v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  id v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  id v143;
  int64_t v144;
  uint64_t v145;
  unint64_t v146;
  unint64_t v147;
  uint64_t v148;
  id v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  void *v154;
  uint64_t v155;
  void *v156;
  uint64_t inited;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  id v162;
  id v163;
  unint64_t v164;
  char *v165;
  _QWORD *v166;
  unint64_t v167;
  unint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  NSObject *v172;
  os_log_type_t v173;
  int v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t v177;
  void *v178;
  uint64_t v179;
  unint64_t v180;
  unint64_t v181;
  uint64_t v182;
  unint64_t v183;
  void (*v184)(char *, uint64_t);
  uint64_t v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  int64_t v191;
  uint64_t v192;
  _QWORD *v193;
  unint64_t v194;
  unint64_t v195;
  char *v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t result;
  _QWORD v201[2];
  __int128 v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t *v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  int v213;
  int v214;
  uint64_t v215;
  __int128 v216;
  __int128 v217;
  unsigned int v218;
  unsigned int v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  int v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  uint64_t v233;
  char *v234;
  uint64_t v235;
  unint64_t v236;
  char *v237;
  uint64_t v238;
  void *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  uint64_t v244;
  char *v245;
  uint64_t v246;
  NSObject *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  int64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  void (*v259)(char *, unint64_t, uint64_t);
  uint64_t v260;
  uint64_t v261;
  _QWORD *v262;
  uint64_t v263;
  __int128 v264;
  __int128 v265;
  uint64_t v266;
  __int128 v267;
  _QWORD v268[3];
  uint64_t v269;
  unint64_t v270;

  v208 = a5;
  v239 = a4;
  v238 = a3;
  v206 = a6;
  v235 = sub_2321FE440();
  v8 = *(_QWORD *)(v235 - 8);
  MEMORY[0x24BDAC7A8](v235);
  v10 = (char *)v201 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v212 = sub_23220039C();
  v211 = *(_QWORD *)(v212 - 8);
  MEMORY[0x24BDAC7A8](v212);
  v245 = (char *)v201 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v225 = sub_2321FE38C();
  v224 = *(_QWORD *)(v225 - 8);
  MEMORY[0x24BDAC7A8](v225);
  v223 = (char *)v201 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v222 = sub_2321FE3BC();
  v221 = *(_QWORD *)(v222 - 8);
  MEMORY[0x24BDAC7A8](v222);
  v220 = (char *)v201 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v260 = sub_2321FE608();
  v257 = *(_QWORD *)(v260 - 8);
  v14 = MEMORY[0x24BDAC7A8](v260);
  v255 = (uint64_t)v201 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v258 = (uint64_t)v201 - v16;
  sub_232016980();
  v233 = v17;
  v231 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v232 = (char *)v201 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320F4290();
  v205 = v19;
  v204 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v203 = (char *)v201 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v240 = sub_2321FE7F4();
  v250 = *(_QWORD *)(v240 - 8);
  v21 = MEMORY[0x24BDAC7A8](v240);
  v207 = (char *)v201 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v210 = (char *)v201 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v234 = (char *)v201 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v237 = (char *)v201 - v27;
  v28 = sub_2321FE308();
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)v201 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v230 = *a1;
  sub_2321FE3D4();
  sub_232016AD8(v268, v269);
  v247 = a2;
  v32 = (void *)sub_2321FE3F8();
  v33 = sub_2321FE35C();

  v34 = *(_QWORD *)(v33 + 16);
  v244 = v8;
  v243 = v10;
  if (v34)
  {
    *(_QWORD *)&v267 = MEMORY[0x24BEE4AF8];
    sub_2320138B4(0, v34, 0);
    v35 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    v256 = v33;
    v36 = v33 + v35;
    v261 = *(_QWORD *)(v29 + 72);
    v37 = v29;
    v259 = *(void (**)(char *, unint64_t, uint64_t))(v29 + 16);
    do
    {
      v259(v31, v36, v28);
      v38 = sub_2321FE254();
      v40 = v39;
      (*(void (**)(char *, uint64_t))(v37 + 8))(v31, v28);
      v41 = v267;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2320138B4(0, *(_QWORD *)(v41 + 16) + 1, 1);
        v41 = v267;
      }
      v43 = *(_QWORD *)(v41 + 16);
      v42 = *(_QWORD *)(v41 + 24);
      if (v43 >= v42 >> 1)
      {
        sub_2320138B4(v42 > 1, v43 + 1, 1);
        v41 = v267;
      }
      *(_QWORD *)(v41 + 16) = v43 + 1;
      v44 = v41 + 16 * v43;
      *(_QWORD *)(v44 + 32) = v38;
      *(_QWORD *)(v44 + 40) = v40;
      v36 += v261;
      --v34;
      v45 = v250;
    }
    while (v34);
    swift_bridgeObjectRelease();
    v8 = v244;
    v10 = v243;
  }
  else
  {
    swift_bridgeObjectRelease();
    v41 = MEMORY[0x24BEE4AF8];
    v45 = v250;
  }
  sub_232016AFC((uint64_t)v268);
  v215 = sub_2321AAC10(v41);
  swift_bridgeObjectRelease();
  v46 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v47 = v235;
  v48 = v245;
  v229 = *(_QWORD *)(v230 + 16);
  if (!v229)
  {
    v188 = MEMORY[0x24BEE4AF8];
    goto LABEL_146;
  }
  v228 = v230 + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80));
  v227 = *MEMORY[0x24BE48108];
  v214 = *MEMORY[0x24BE480E0];
  v213 = *MEMORY[0x24BE48100];
  v219 = *MEMORY[0x24BE47438];
  v218 = *MEMORY[0x24BE47910];
  swift_bridgeObjectRetain();
  v49 = 0;
  v226 = 0;
  v246 = MEMORY[0x24BEE4B00];
  v217 = xmmword_232210D20;
  *((_QWORD *)&v50 + 1) = 2;
  v216 = xmmword_232210D40;
  v252 = MEMORY[0x24BEE4AD0] + 8;
  *(_QWORD *)&v50 = 136315650;
  v202 = v50;
  v201[1] = MEMORY[0x24BEE4AD8] + 8;
  v249 = MEMORY[0x24BEE4AF8];
  v51 = v258;
  v52 = v240;
  v53 = v237;
  while (1)
  {
    if (v49 >= *(_QWORD *)(v230 + 16))
      goto LABEL_159;
    v63 = v250;
    v64 = *(_QWORD *)(v250 + 72);
    v236 = v49;
    v65 = *(void (**)(char *, unint64_t, uint64_t))(v250 + 16);
    v65(v53, v228 + v64 * v49, v52);
    v66 = v234;
    v65(v234, (unint64_t)v53, v52);
    v67 = (*(uint64_t (**)(char *, uint64_t))(v63 + 88))(v66, v52);
    if (v67 == v227)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v63 + 96))(v66, v52);
      v68 = *(_QWORD *)(*(_QWORD *)v66 + 16);
      if (v68)
      {
        v69 = *(_QWORD *)v66
            + ((*(unsigned __int8 *)(v257 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v257 + 80));
        v70 = *(_QWORD *)(v257 + 72);
        v71 = *(void (**)(uint64_t, unint64_t, uint64_t))(v257 + 16);
        while (1)
        {
          v71(v51, v69, v260);
          v72 = sub_2321FE5C0();
          if (v72 >> 62)
          {
            if (!sub_232201998())
            {
LABEL_43:
              swift_bridgeObjectRelease();
              goto LABEL_44;
            }
          }
          else if (!*(_QWORD *)((v72 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            goto LABEL_43;
          }
          if ((v72 & 0xC000000000000001) != 0)
          {
            v73 = (id)MEMORY[0x2348FEA30](0, v72);
          }
          else
          {
            if (!*(_QWORD *)((v72 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_157;
            v73 = *(id *)(v72 + 32);
          }
          v74 = v73;
          swift_bridgeObjectRelease();
          v75 = sub_2321FE5C0();
          if (v75 >> 62)
            v76 = sub_232201998();
          else
            v76 = *(_QWORD *)((v75 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRelease();
          if (v76 == 1 && (sub_232201158() & 1) != 0)
          {
            v77 = v258;
            v78 = sub_2320F12E0(v247, v258, v74, v239, (uint64_t *)&v264);
            if (*((_QWORD *)&v265 + 1))
            {
              sub_2320167F8(&v264, (uint64_t)&v267);
              sub_23201B304((uint64_t)&v267, (uint64_t)&v264);
              v79 = v74;
              v80 = (_QWORD *)v246;
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v262 = v80;
              v83 = sub_23216AD44((uint64_t)v79);
              v84 = v80[2];
              v85 = (v82 & 1) == 0;
              v86 = v84 + v85;
              if (__OFADD__(v84, v85))
                goto LABEL_160;
              v87 = v82;
              if (v80[3] >= v86)
              {
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                  sub_2320A4E48();
              }
              else
              {
                sub_2320A6488(v86, isUniquelyReferenced_nonNull_native);
                v88 = sub_23216AD44((uint64_t)v79);
                if ((v87 & 1) != (v89 & 1))
                  goto LABEL_164;
                v83 = v88;
              }
              v47 = v235;
              v90 = v262;
              v246 = (uint64_t)v262;
              if ((v87 & 1) != 0)
              {
                v91 = v262[7] + 40 * v83;
                sub_232016AFC(v91);
                sub_2320167F8(&v264, v91);
              }
              else
              {
                v262[(v83 >> 6) + 8] |= 1 << v83;
                *(_QWORD *)(v90[6] + 8 * v83) = v79;
                sub_2320167F8(&v264, v90[7] + 40 * v83);
                v92 = v90[2];
                v93 = __OFADD__(v92, 1);
                v94 = v92 + 1;
                if (v93)
                  goto LABEL_162;
                v90[2] = v94;
                v95 = v79;
              }

              swift_bridgeObjectRelease();
              sub_232016AFC((uint64_t)&v267);
              v51 = v258;
              (*(void (**)(uint64_t, uint64_t))(v257 + 8))(v258, v260);
            }
            else
            {
              (*(void (**)(uint64_t, uint64_t, double))(v257 + 8))(v77, v260, v78);

              sub_232002CEC((uint64_t)&v264, (uint64_t (*)(_QWORD))sub_2320A7F64);
              v51 = v77;
            }
            goto LABEL_45;
          }

LABEL_44:
          v51 = v258;
          (*(void (**)(uint64_t, uint64_t))(v257 + 8))(v258, v260);
LABEL_45:
          v69 += v70;
          if (!--v68)
          {
            v54 = swift_bridgeObjectRelease();
            v8 = v244;
            v10 = v243;
            goto LABEL_12;
          }
        }
      }
      v54 = swift_bridgeObjectRelease();
LABEL_12:
      MEMORY[0x24BDAC7A8](v54);
      v55 = v247;
      v201[-2] = v247;
      v56 = v246;
      swift_bridgeObjectRetain();
      v57 = v226;
      sub_232006704((void (*)(_QWORD *__return_ptr, id *))sub_2320F4324, (uint64_t)&v201[-4], v56);
      v59 = v58;
      swift_bridgeObjectRelease();
      v60 = v215;
      swift_bridgeObjectRetain();
      v61 = sub_2320F2F08(v59, v60);
      v62 = swift_bridgeObjectRelease();
      MEMORY[0x24BDAC7A8](v62);
      v201[-2] = v55;
      v249 = sub_23200695C((void (*)(__int128 *__return_ptr, _QWORD *))sub_2320F4384, (uint64_t)&v201[-4], v61);
      v226 = v57;
      swift_release();
      (*(void (**)(char *, uint64_t))(v250 + 8))(v237, v240);
      v48 = v245;
      goto LABEL_13;
    }
    if (v67 == v214)
    {
      v96 = v234;
      (*(void (**)(char *, uint64_t))(v250 + 96))(v234, v240);
      v97 = *(_QWORD *)v96;
      v98 = *(_QWORD *)(v97 + 16);
      if (!v98)
      {
        swift_bridgeObjectRelease();
LABEL_138:
        (*(void (**)(char *, uint64_t))(v250 + 8))(v237, v240);
        goto LABEL_14;
      }
      v99 = v97 + ((*(unsigned __int8 *)(v257 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v257 + 80));
      v100 = *(_QWORD *)(v257 + 72);
      v101 = *(void (**)(uint64_t, uint64_t, uint64_t))(v257 + 16);
      v102 = v255;
      while (1)
      {
        v101(v102, v99, v260);
        v103 = sub_2321FE5C0();
        if (v103 >> 62)
        {
          if (!sub_232201998())
          {
LABEL_76:
            swift_bridgeObjectRelease();
            goto LABEL_77;
          }
        }
        else if (!*(_QWORD *)((v103 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_76;
        }
        if ((v103 & 0xC000000000000001) != 0)
        {
          v104 = (id)MEMORY[0x2348FEA30](0, v103);
        }
        else
        {
          if (!*(_QWORD *)((v103 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_158;
          v104 = *(id *)(v103 + 32);
        }
        v105 = v104;
        swift_bridgeObjectRelease();
        v106 = sub_2321FE5C0();
        if (v106 >> 62)
          v107 = sub_232201998();
        else
          v107 = *(_QWORD *)((v106 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRelease();
        if (v107 != 1 || (sub_232201158() & 1) == 0)
        {

LABEL_77:
          (*(void (**)(uint64_t, uint64_t))(v257 + 8))(v255, v260);
          goto LABEL_78;
        }
        v108 = v255;
        v109 = sub_2320F12E0(v247, v255, v105, v239, (uint64_t *)&v264);
        if (*((_QWORD *)&v265 + 1))
        {
          sub_2320167F8(&v264, (uint64_t)&v267);
          sub_23201B304((uint64_t)&v267, (uint64_t)&v264);
          v110 = v105;
          v111 = (_QWORD *)v246;
          v112 = swift_isUniquelyReferenced_nonNull_native();
          v262 = v111;
          v114 = sub_23216AD44((uint64_t)v110);
          v115 = v111[2];
          v116 = (v113 & 1) == 0;
          v117 = v115 + v116;
          if (__OFADD__(v115, v116))
            goto LABEL_161;
          v118 = v113;
          if (v111[3] >= v117)
          {
            if ((v112 & 1) == 0)
              sub_2320A4E48();
          }
          else
          {
            sub_2320A6488(v117, v112);
            v119 = sub_23216AD44((uint64_t)v110);
            if ((v118 & 1) != (v120 & 1))
              goto LABEL_164;
            v114 = v119;
          }
          v47 = v235;
          v121 = v262;
          v246 = (uint64_t)v262;
          if ((v118 & 1) != 0)
          {
            v122 = v262[7] + 40 * v114;
            sub_232016AFC(v122);
            sub_2320167F8(&v264, v122);
          }
          else
          {
            v262[(v114 >> 6) + 8] |= 1 << v114;
            *(_QWORD *)(v121[6] + 8 * v114) = v110;
            sub_2320167F8(&v264, v121[7] + 40 * v114);
            v123 = v121[2];
            v93 = __OFADD__(v123, 1);
            v124 = v123 + 1;
            if (v93)
              goto LABEL_163;
            v121[2] = v124;
            v125 = v110;
          }

          swift_bridgeObjectRelease();
          sub_232016AFC((uint64_t)&v267);
          goto LABEL_77;
        }
        (*(void (**)(uint64_t, uint64_t, double))(v257 + 8))(v108, v260, v109);

        sub_232002CEC((uint64_t)&v264, (uint64_t (*)(_QWORD))sub_2320A7F64);
LABEL_78:
        v99 += v100;
        --v98;
        v102 = v255;
        if (!v98)
        {
          swift_bridgeObjectRelease();
          v8 = v244;
          v10 = v243;
          v48 = v245;
          v51 = v258;
          goto LABEL_138;
        }
      }
    }
    if (v67 == v213)
      break;
    sub_232200318();
    (*(void (**)(char *, NSObject *, uint64_t))(v8 + 16))(v10, v247, v47);
    v169 = v210;
    v170 = v237;
    v171 = v240;
    v65(v210, (unint64_t)v237, v240);
    v172 = sub_232200390();
    v173 = sub_2322012F0();
    v174 = v173;
    if (os_log_type_enabled(v172, v173))
    {
      v175 = swift_slowAlloc();
      v261 = swift_slowAlloc();
      *(_QWORD *)&v267 = v261;
      *(_DWORD *)v175 = v202;
      v176 = sub_232201BF0();
      LODWORD(v259) = v174;
      *(_QWORD *)(v175 + 4) = sub_232013174(v176, v177, (uint64_t *)&v267);
      swift_bridgeObjectRelease();
      *(_WORD *)(v175 + 12) = 2080;
      v178 = (void *)sub_2321FE3F8();
      v179 = sub_2321FE1B8();
      v181 = v180;

      *(_QWORD *)(v175 + 14) = sub_232013174(v179, v181, (uint64_t *)&v267);
      v47 = v235;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v47);
      *(_WORD *)(v175 + 22) = 2080;
      v65(v207, (unint64_t)v169, v171);
      v182 = sub_232200F00();
      *(_QWORD *)(v175 + 24) = sub_232013174(v182, v183, (uint64_t *)&v267);
      swift_bridgeObjectRelease();
      v184 = *(void (**)(char *, uint64_t))(v250 + 8);
      v184(v169, v171);
      _os_log_impl(&dword_231FFB000, v172, (os_log_type_t)v259, "%s_%s Unexpected PluginSharableModelChange %s", (uint8_t *)v175, 0x20u);
      v185 = v261;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v185, -1, -1);
      v186 = v175;
      v48 = v245;
      MEMORY[0x2348FF468](v186, -1, -1);

      (*(void (**)(char *, uint64_t))(v211 + 8))(v48, v212);
      v187 = v237;
    }
    else
    {

      v184 = *(void (**)(char *, uint64_t))(v250 + 8);
      v184(v169, v171);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v47);
      (*(void (**)(char *, uint64_t))(v211 + 8))(v48, v212);
      v187 = v170;
    }
    v184(v187, v171);
    v184(v234, v171);
LABEL_13:
    v51 = v258;
LABEL_14:
    v49 = v236 + 1;
    v52 = v240;
    v53 = v237;
    if (v236 + 1 == v229)
    {
      swift_bridgeObjectRelease();
      v46 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v188 = v249;
LABEL_146:
      swift_bridgeObjectRelease();
      *(_QWORD *)&v267 = v188;
      v189 = swift_bridgeObjectRetain();
      sub_23209D748(v189);
      v190 = v267;
      v191 = *(_QWORD *)(v267 + 16);
      if (v191)
      {
        v262 = v46;
        sub_232013A68(0, v191, 0);
        v192 = v190 + 32;
        do
        {
          sub_23201B304(v192, (uint64_t)&v267);
          sub_23201B304((uint64_t)&v267, (uint64_t)&v264);
          sub_2320F3F6C();
          sub_2322006B4();
          sub_232016AFC((uint64_t)&v267);
          v193 = v262;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_232013A68(0, v193[2] + 1, 1);
            v193 = v262;
          }
          v195 = v193[2];
          v194 = v193[3];
          v196 = v232;
          if (v195 >= v194 >> 1)
          {
            sub_232013A68(v194 > 1, v195 + 1, 1);
            v196 = v232;
            v193 = v262;
          }
          v193[2] = v195 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v231 + 32))((unint64_t)v193+ ((*(unsigned __int8 *)(v231 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v231 + 80))+ *(_QWORD *)(v231 + 72) * v195, v196, v233);
          v262 = v193;
          v192 += 40;
          --v191;
        }
        while (v191);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        v193 = (_QWORD *)MEMORY[0x24BEE4AF8];
      }
      *(_QWORD *)&v267 = v193;
      sub_2320F4308(0);
      sub_232000590(&qword_2541AF318, (uint64_t (*)(uint64_t))sub_232016980, MEMORY[0x24BDB9DF8]);
      sub_232000590(&qword_2541B0BF8, (uint64_t (*)(uint64_t))sub_2320F4308, MEMORY[0x24BEE12C8]);
      v197 = v203;
      sub_2322005E8();
      sub_232000590(&qword_2541AF270, (uint64_t (*)(uint64_t))sub_2320F4290, MEMORY[0x24BDB99D8]);
      v198 = v205;
      v199 = sub_232200774();
      (*(void (**)(char *, uint64_t))(v204 + 8))(v197, v198);
      *v206 = v199;
      return swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  v126 = v250;
  v127 = v234;
  (*(void (**)(char *, uint64_t))(v250 + 96))(v234, v240);
  v128 = *(_QWORD *)v127;
  v242 = *(_QWORD *)(*(_QWORD *)v127 + 16);
  if (!v242)
  {
    v249 = MEMORY[0x24BEE4AF8];
LABEL_143:
    (*(void (**)(char *, uint64_t))(v126 + 8))(v237, v240);
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  v241 = v128 + 32;
  v209 = v128;
  swift_bridgeObjectRetain();
  v129 = 0;
  v249 = MEMORY[0x24BEE4AF8];
  while (2)
  {
    v251 = v129;
    v130 = v241 + 16 * v129;
    v131 = *(_QWORD *)(v130 + 8);
    v259 = *(void (**)(char *, unint64_t, uint64_t))v130;
    v132 = qword_2541B4810;
    v261 = v131;
    swift_bridgeObjectRetain();
    if (v132 != -1)
      swift_once();
    v133 = qword_2541BF678;
    v248 = qword_2541BF678;
    if ((qword_2541BF678 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain_n();
      sub_2322017A0();
      sub_232003E9C(0, (unint64_t *)&qword_2541B74A0);
      sub_23207CE58();
      sub_2322010F8();
      v134 = v268[0];
      v256 = v268[1];
      v135 = v268[2];
      v136 = v269;
      v137 = v270;
    }
    else
    {
      v138 = -1 << *(_BYTE *)(qword_2541BF678 + 32);
      v139 = *(_QWORD *)(qword_2541BF678 + 56);
      v256 = qword_2541BF678 + 56;
      v135 = ~v138;
      v140 = -v138;
      if (v140 < 64)
        v141 = ~(-1 << v140);
      else
        v141 = -1;
      v137 = v141 & v139;
      swift_bridgeObjectRetain_n();
      v136 = 0;
      v134 = v133;
    }
    ++v251;
    v253 = v134 & 0x7FFFFFFFFFFFFFFFLL;
    v254 = (unint64_t)(v135 + 64) >> 6;
    if ((v134 & 0x8000000000000000) == 0)
      goto LABEL_99;
LABEL_96:
    v142 = sub_23220180C();
    if (!v142)
      goto LABEL_125;
    v262 = (_QWORD *)v142;
    sub_232003E9C(0, (unint64_t *)&qword_2541B74A0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v143 = (id)v267;
    swift_unknownObjectRelease();
    v144 = v136;
    v145 = v137;
    if (!v143)
    {
LABEL_125:
      v51 = v258;
LABEL_126:
      sub_23201B04C();
      swift_bridgeObjectRelease();
      v266 = 0;
      v264 = 0u;
      v265 = 0u;
LABEL_127:
      v166 = (_QWORD *)v249;
      v129 = v251;
      swift_bridgeObjectRelease();
      v8 = v244;
      v10 = v243;
      v48 = v245;
      v126 = v250;
      if (*((_QWORD *)&v265 + 1))
      {
        sub_2320167F8(&v264, (uint64_t)&v267);
        sub_2320167F8(&v267, (uint64_t)&v264);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v166 = sub_232097524(0, v166[2] + 1, 1, v166);
        v168 = v166[2];
        v167 = v166[3];
        if (v168 >= v167 >> 1)
          v166 = sub_232097524((_QWORD *)(v167 > 1), v168 + 1, 1, v166);
        v166[2] = v168 + 1;
        sub_2320167F8(&v264, (uint64_t)&v166[5 * v168 + 4]);
        v51 = v258;
        v126 = v250;
      }
      else
      {
        sub_232002CEC((uint64_t)&v264, (uint64_t (*)(_QWORD))sub_2320A7F64);
      }
      v249 = (uint64_t)v166;
      if (v129 == v242)
      {
        swift_bridgeObjectRelease();
        v47 = v235;
        goto LABEL_143;
      }
      continue;
    }
    break;
  }
  while (2)
  {
    *(_QWORD *)&v267 = v259;
    *((_QWORD *)&v267 + 1) = v261;
    v149 = objc_msgSend(v143, sel_identifier);
    v150 = sub_232200EC4();
    v152 = v151;

    v262 = (_QWORD *)v150;
    v263 = v152;
    sub_232002E08();
    LOBYTE(v149) = sub_232201740();
    swift_bridgeObjectRelease();
    if ((v149 & 1) != 0)
    {
      sub_23201B04C();
      swift_bridgeObjectRelease();
      v154 = (void *)sub_2321FE3F8();
      v259 = (void (*)(char *, unint64_t, uint64_t))sub_2321D5890(v143);
      v256 = v155;

      v156 = (void *)sub_2321FE3F8();
      sub_232027434();
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v217;
      *(_QWORD *)(inited + 32) = v143;
      *(_QWORD *)&v267 = inited;
      sub_232201050();
      sub_2320057B8(0, &qword_2541B7530, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v158 = sub_2321FE194();
      v159 = *(_QWORD *)(v158 - 8);
      v160 = (*(unsigned __int8 *)(v159 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v159 + 80);
      v161 = swift_allocObject();
      *(_OWORD *)(v161 + 16) = v216;
      (*(void (**)(unint64_t, _QWORD, uint64_t))(v159 + 104))(v161 + v160, v219, v158);
      v162 = v156;
      v163 = v143;
      sub_2321A492C(v161);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      v164 = swift_bridgeObjectRetain();
      sub_2321A4950(v164);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, _QWORD, uint64_t))(v224 + 104))(v223, v218, v225);
      v165 = v220;
      sub_2321FE3B0();

      swift_bridgeObjectRelease();
      *((_QWORD *)&v265 + 1) = sub_2321FE4D0();
      v266 = MEMORY[0x24BE47A60];
      sub_2320251BC((uint64_t *)&v264);
      sub_2321FE4AC();
      swift_bridgeObjectRelease();

      (*(void (**)(char *, uint64_t))(v221 + 8))(v165, v222);
      v51 = v258;
      goto LABEL_127;
    }

    v136 = v144;
    v137 = v145;
    if (v134 < 0)
      goto LABEL_96;
LABEL_99:
    if (v137)
    {
      v145 = (v137 - 1) & v137;
      v146 = __clz(__rbit64(v137)) | (v136 << 6);
      v144 = v136;
LABEL_114:
      v143 = *(id *)(*(_QWORD *)(v134 + 48) + 8 * v146);
      if (!v143)
        goto LABEL_125;
      continue;
    }
    break;
  }
  v144 = v136 + 1;
  if (!__OFADD__(v136, 1))
  {
    if (v144 >= v254)
      goto LABEL_125;
    v147 = *(_QWORD *)(v256 + 8 * v144);
    v51 = v258;
    if (!v147)
    {
      v148 = v136 + 2;
      if (v136 + 2 >= v254)
        goto LABEL_126;
      v147 = *(_QWORD *)(v256 + 8 * v148);
      if (v147)
        goto LABEL_112;
      v148 = v136 + 3;
      if (v136 + 3 >= v254)
        goto LABEL_126;
      v147 = *(_QWORD *)(v256 + 8 * v148);
      if (v147)
        goto LABEL_112;
      v148 = v136 + 4;
      if (v136 + 4 >= v254)
        goto LABEL_126;
      v147 = *(_QWORD *)(v256 + 8 * v148);
      if (v147)
        goto LABEL_112;
      v148 = v136 + 5;
      if (v136 + 5 >= v254)
        goto LABEL_126;
      v147 = *(_QWORD *)(v256 + 8 * v148);
      if (v147)
      {
LABEL_112:
        v144 = v148;
      }
      else
      {
        v144 = v136 + 6;
        if (v136 + 6 >= v254)
          goto LABEL_126;
        v147 = *(_QWORD *)(v256 + 8 * v144);
        if (!v147)
        {
          v153 = v136 + 7;
          do
          {
            if (v254 == v153)
              goto LABEL_126;
            v147 = *(_QWORD *)(v256 + 8 * v153++);
          }
          while (!v147);
          v144 = v153 - 1;
        }
      }
    }
    v145 = (v147 - 1) & v147;
    v146 = __clz(__rbit64(v147)) + (v144 << 6);
    goto LABEL_114;
  }
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  sub_232003E9C(0, (unint64_t *)&qword_2541B74A0);
  result = sub_232201B30();
  __break(1u);
  return result;
}

double sub_2320F12E0@<D0>(NSObject *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  void *v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t *v52;
  double result;
  uint64_t *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  id v65;
  void *v66;
  char *v67;
  char *v68;
  char v69;
  unsigned int v70;
  id v71;
  id v72;
  void *v73;
  char *v74;
  char *v75;
  uint64_t *v76;
  void (*v77)(char *, NSObject *, _QWORD *);
  char *v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t, uint64_t);
  uint64_t v81;
  char *v82;
  os_log_t v83;
  NSObject *v84;
  os_log_type_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  void *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  void (*v101)(char *, uint64_t);
  void (*v102)(char *, uint64_t);
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  os_log_t v106;
  uint64_t v107;
  unint64_t v108;
  os_log_t v109;
  uint64_t v110;
  void (*v111)(char *, uint64_t);
  uint64_t v112;
  char *v113;
  _QWORD *v114;
  NSObject *v115;
  os_log_type_t v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  void *v121;
  uint64_t v122;
  unint64_t v123;
  unint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  void (*v128)(char *, NSObject *, _QWORD *);
  char *v129;
  uint64_t v130;
  uint64_t v131;
  NSObject *v132;
  char *v133;
  os_log_type_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  void *v138;
  uint64_t v139;
  unint64_t v140;
  unint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  unint64_t v146;
  void (*v147)(char *, uint64_t);
  void (*v148)(char *, uint64_t);
  uint64_t v149;
  unint64_t v150;
  unint64_t v151;
  NSObject *v152;
  uint64_t v153;
  unint64_t v154;
  os_log_t v155;
  id v156;
  uint64_t *v157;
  _QWORD v158[2];
  char *v159;
  char *v160;
  id v161;
  char *v162;
  char *v163;
  NSObject *v164;
  char *v165;
  uint64_t *v166;
  char *v167;
  void (*v168)(char *, os_log_t, uint64_t);
  char *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  os_log_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  id v178;
  id v179;
  char *v180;
  uint64_t v181;
  char *v182;
  NSObject *v183;
  uint64_t *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187[4];

  v178 = a3;
  v179 = a4;
  v184 = a5;
  v185 = a2;
  v171 = sub_2321FE608();
  v176 = *(_QWORD *)(v171 - 8);
  v6 = MEMORY[0x24BDAC7A8](v171);
  v173 = (os_log_t)((char *)v158 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = MEMORY[0x24BDAC7A8](v6);
  v172 = (char *)v158 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v167 = (char *)v158 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v164 = ((char *)v158 - v13);
  MEMORY[0x24BDAC7A8](v12);
  v163 = (char *)v158 - v14;
  v15 = sub_23220039C();
  v174 = *(_QWORD *)(v15 - 8);
  v175 = v15;
  v16 = MEMORY[0x24BDAC7A8](v15);
  v180 = (char *)v158 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v166 = (_QWORD *)((char *)v158 - v19);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v165 = (char *)v158 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v162 = (char *)v158 - v22;
  sub_23202CAC8(0);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)v158 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v181 = sub_2321FE6D4();
  v177 = *(_QWORD *)(v181 - 8);
  MEMORY[0x24BDAC7A8](v181);
  v182 = (char *)v158 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = (_QWORD *)sub_2321FE440();
  v28 = *(v27 - 1);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v169 = (char *)v158 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)v158 - v32;
  v34 = MEMORY[0x24BDAC7A8](v31);
  v36 = (char *)v158 - v35;
  v37 = MEMORY[0x24BDAC7A8](v34);
  v39 = (char *)v158 - v38;
  MEMORY[0x24BDAC7A8](v37);
  v41 = (char *)v158 - v40;
  v183 = a1;
  sub_2321FE3D4();
  sub_232016AD8(v187, v187[3]);
  v42 = (void *)sub_2321FE314();
  sub_232016AFC((uint64_t)v187);
  v43 = objc_msgSend(v42, sel_profileIdentifier);
  v44 = objc_msgSend(v43, sel_type);

  if (v44 == (id)1)
  {
    (*(void (**)(char *, NSObject *, _QWORD *))(v28 + 16))(v41, v183, v27);
    v45 = sub_2321FE5B4();
    v47 = v46;
    v48 = type metadata accessor for SummaryAlertFeedItemGenerator();
    swift_allocObject();
    v49 = v178;
    v50 = v179;
    v51 = sub_232160DF8((uint64_t)v41, v45, v47, 0, v49, v50);

    v52 = v184;
    v184[3] = v48;
    v52[4] = sub_232000590(&qword_2541AF858, (uint64_t (*)(uint64_t))type metadata accessor for SummaryAlertFeedItemGenerator, (uint64_t)&unk_232217E8C);

    *v52 = v51;
    return result;
  }
  v160 = v33;
  v159 = v36;
  v158[0] = v39;
  v54 = (uint64_t *)v180;
  v158[1] = v41;
  v170 = v28;
  v161 = v42;
  v55 = v182;
  sub_2321FE5D8();
  v56 = v185;
  sub_2321FE5FC();
  v57 = v177;
  v58 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v177 + 56);
  v59 = v181;
  v58(v25, 0, 1, v181);
  v60 = sub_2321FE6A4();
  sub_232002CEC((uint64_t)v25, (uint64_t (*)(_QWORD))sub_23202CAC8);
  v177 = *(_QWORD *)(v57 + 8);
  ((void (*)(char *, uint64_t))v177)(v55, v59);
  if ((v60 & 1) != 0)
  {
    v61 = (uint64_t)v25;
    v62 = sub_2321FE5E4();
    v64 = v63;
    v65 = objc_allocWithZone(MEMORY[0x24BE4A4C0]);
    v66 = (void *)sub_2321FDAC8();
    sub_232003ED4(v62, v64);
    v67 = (char *)objc_msgSend(v65, sel_initWithData_, v66);

    if (v67)
    {
      v68 = v182;
      sub_2321FE6B0();
      sub_2321FE5FC();
      v58((char *)v61, 0, 1, v59);
      v69 = sub_2321FE6A4();
      sub_232002CEC(v61, (uint64_t (*)(_QWORD))sub_23202CAC8);
      ((void (*)(char *, uint64_t))v177)(v68, v59);
      if ((v69 & 1) != 0)
      {
        v70 = objc_msgSend(v67, sel_hasKindRawValue);
        v71 = v161;
        if (v70)
        {
          v72 = objc_msgSend(v67, sel_kindRawValue);
          if (v72)
          {
            v73 = v72;
            sub_232200EC4();

            v74 = (char *)&loc_2320F18D0
                + *((int *)qword_2320F2740
                  + _sSo20HKCodableSummaryDataC9SummariesE4KindO8rawValueAESgSS_tcfC_0());
            __asm { BR              X10 }
          }
        }

        goto LABEL_20;
      }
      v76 = (uint64_t *)v165;
      sub_232200354();
      v128 = *(void (**)(char *, NSObject *, _QWORD *))(v170 + 16);
      v129 = v159;
      v130 = v56;
      v178 = v27;
      v128(v159, v183, v27);
      v131 = v176;
      v132 = *(NSObject **)(v176 + 16);
      v133 = v163;
      v81 = v171;
      ((void (*)(char *, uint64_t, uint64_t))v132)(v163, v130, v171);
      v83 = v164;
      v183 = v132;
      ((void (*)(NSObject *, uint64_t, uint64_t))v132)(v164, v130, v81);
      v84 = sub_232200390();
      v134 = sub_2322012FC();
      LODWORD(v185) = v134;
      if (os_log_type_enabled(v84, v134))
      {
        v135 = swift_slowAlloc();
        v179 = (id)swift_slowAlloc();
        v187[0] = (uint64_t)v179;
        *(_DWORD *)v135 = 136316162;
        v173 = v84;
        v136 = sub_232201BF0();
        v180 = v67;
        v186 = sub_232013174(v136, v137, v187);
        sub_232201710();
        swift_bridgeObjectRelease();
        *(_WORD *)(v135 + 12) = 2080;
        v138 = (void *)sub_2321FE3F8();
        v139 = sub_2321FE1B8();
        v141 = v140;

        v186 = sub_232013174(v139, v141, v187);
        sub_232201710();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, id))(v170 + 8))(v129, v178);
        *(_WORD *)(v135 + 22) = 2080;
        v142 = v182;
        sub_2321FE5FC();
        sub_232000590(&qword_2541AF188, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], MEMORY[0x24BE47EA0]);
        v143 = v181;
        v144 = sub_232201AB8();
        v146 = v145;
        v147 = (void (*)(char *, uint64_t))v177;
        ((void (*)(char *, uint64_t))v177)(v142, v143);
        v186 = sub_232013174(v144, v146, v187);
        sub_232201710();
        swift_bridgeObjectRelease();
        v148 = *(void (**)(char *, uint64_t))(v176 + 8);
        v148(v163, v81);
        *(_WORD *)(v135 + 32) = 2080;
        sub_2321FE6B0();
        v149 = sub_232201AB8();
        v151 = v150;
        v147(v142, v143);
        v186 = sub_232013174(v149, v151, v187);
        sub_232201710();
        swift_bridgeObjectRelease();
        *(_WORD *)(v135 + 42) = 2080;
        v152 = v164;
        ((void (*)(char *, NSObject *, uint64_t))v183)(v167, v164, v81);
        v153 = sub_232200F00();
        v186 = sub_232013174(v153, v154, v187);
        sub_232201710();
        swift_bridgeObjectRelease();
        v148((char *)v152, v81);
        v155 = v173;
        _os_log_impl(&dword_231FFB000, v173, (os_log_type_t)v185, "[%s]_%s: HKCodableSummaryData has version %s which is not compatible with %s for %s", (uint8_t *)v135, 0x34u);
        v156 = v179;
        swift_arrayDestroy();
        MEMORY[0x2348FF468](v156, -1, -1);
        MEMORY[0x2348FF468](v135, -1, -1);

        (*(void (**)(char *, uint64_t))(v174 + 8))(v165, v175);
        goto LABEL_20;
      }

      (*(void (**)(char *, id))(v170 + 8))(v129, v178);
      v111 = *(void (**)(char *, uint64_t))(v131 + 8);
      v111(v133, v81);
      goto LABEL_18;
    }
    v76 = v166;
    sub_232200354();
    v112 = v170;
    v113 = v160;
    v114 = v27;
    (*(void (**)(char *, NSObject *, _QWORD *))(v170 + 16))(v160, v183, v27);
    v115 = sub_232200390();
    v116 = sub_2322012E4();
    v117 = v116;
    if (!os_log_type_enabled(v115, v116))
    {

      (*(void (**)(char *, _QWORD *))(v112 + 8))(v113, v27);
LABEL_19:
      (*(void (**)(uint64_t *, uint64_t))(v174 + 8))(v76, v175);
      goto LABEL_20;
    }
    v118 = swift_slowAlloc();
    v185 = swift_slowAlloc();
    v187[0] = v185;
    *(_DWORD *)v118 = 136315650;
    LODWORD(v183) = v117;
    v119 = sub_232201BF0();
    v186 = sub_232013174(v119, v120, v187);
    sub_232201710();
    swift_bridgeObjectRelease();
    *(_WORD *)(v118 + 12) = 2080;
    v121 = (void *)sub_2321FE3F8();
    v122 = sub_2321FE1B8();
    v124 = v123;

    v186 = sub_232013174(v122, v124, v187);
    sub_232201710();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, _QWORD *))(v112 + 8))(v113, v114);
    *(_WORD *)(v118 + 22) = 2080;
    sub_232003E9C(0, (unint64_t *)&qword_2541B0C70);
    v125 = sub_232201BF0();
    v186 = sub_232013174(v125, v126, v187);
    sub_232201710();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_231FFB000, v115, (os_log_type_t)v183, "[%s]_%s: Unable to decode %s", (uint8_t *)v118, 0x20u);
    v127 = v185;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v127, -1, -1);
    MEMORY[0x2348FF468](v118, -1, -1);

    (*(void (**)(uint64_t *, uint64_t))(v174 + 8))(v166, v175);
  }
  else
  {
    v75 = v55;
    v76 = v54;
    sub_232200354();
    v77 = *(void (**)(char *, NSObject *, _QWORD *))(v170 + 16);
    v78 = v169;
    v178 = v27;
    v77(v169, v183, v27);
    v79 = v176;
    v80 = *(void (**)(char *, uint64_t, uint64_t))(v176 + 16);
    v81 = v171;
    v82 = v172;
    v80(v172, v56, v171);
    v83 = v173;
    v80((char *)v173, v56, v81);
    v84 = sub_232200390();
    v85 = sub_2322012FC();
    v86 = v85;
    if (!os_log_type_enabled(v84, v85))
    {

      (*(void (**)(char *, id))(v170 + 8))(v78, v178);
      v111 = *(void (**)(char *, uint64_t))(v79 + 8);
      v111(v82, v81);
LABEL_18:
      v111((char *)v83, v81);

      goto LABEL_19;
    }
    v87 = swift_slowAlloc();
    v185 = swift_slowAlloc();
    v187[0] = v185;
    *(_DWORD *)v87 = 136316162;
    v183 = v84;
    v88 = sub_232201BF0();
    v186 = sub_232013174(v88, v89, v187);
    v166 = v187;
    sub_232201710();
    swift_bridgeObjectRelease();
    *(_WORD *)(v87 + 12) = 2080;
    v90 = (void *)sub_2321FE3F8();
    v91 = sub_2321FE1B8();
    v92 = v75;
    LODWORD(v179) = v86;
    v93 = v91;
    v168 = (void (*)(char *, os_log_t, uint64_t))v80;
    v95 = v94;

    v186 = sub_232013174(v93, v95, v187);
    sub_232201710();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, id))(v170 + 8))(v78, v178);
    *(_WORD *)(v87 + 22) = 2080;
    v178 = (id)(v87 + 24);
    v96 = v172;
    sub_2321FE5FC();
    sub_232000590(&qword_2541AF188, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], MEMORY[0x24BE47EA0]);
    v97 = v181;
    v98 = sub_232201AB8();
    v100 = v99;
    v101 = (void (*)(char *, uint64_t))v177;
    ((void (*)(char *, uint64_t))v177)(v75, v97);
    v186 = sub_232013174(v98, v100, v187);
    sub_232201710();
    swift_bridgeObjectRelease();
    v102 = *(void (**)(char *, uint64_t))(v176 + 8);
    v102(v96, v81);
    *(_WORD *)(v87 + 32) = 2080;
    sub_2321FE5D8();
    v103 = sub_232201AB8();
    v105 = v104;
    v101(v92, v97);
    v186 = sub_232013174(v103, v105, v187);
    sub_232201710();
    swift_bridgeObjectRelease();
    *(_WORD *)(v87 + 42) = 2080;
    v106 = v173;
    v168(v167, v173, v81);
    v107 = sub_232200F00();
    v186 = sub_232013174(v107, v108, v187);
    sub_232201710();
    swift_bridgeObjectRelease();
    v102((char *)v106, v81);
    v109 = v183;
    _os_log_impl(&dword_231FFB000, v183, (os_log_type_t)v179, "[%s]_%s: PluginSharableModel has version %s which is not compatible with %s for %s", (uint8_t *)v87, 0x34u);
    v110 = v185;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v110, -1, -1);
    MEMORY[0x2348FF468](v87, -1, -1);

    (*(void (**)(char *, uint64_t))(v174 + 8))(v180, v175);
  }
LABEL_20:
  v157 = v184;
  v184[4] = 0;
  result = 0.0;
  *(_OWORD *)v157 = 0u;
  *((_OWORD *)v157 + 1) = 0u;
  return result;
}

uint64_t sub_2320F2754@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v24 = a2;
  v5 = sub_2321FE38C();
  v22 = *(_QWORD *)(v5 - 8);
  v23 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2321FE3BC();
  v27 = *(_QWORD *)(v8 - 8);
  v28 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  v25 = a1[1];
  v26 = v11;
  v12 = (void *)sub_2321FE3F8();
  sub_2320057B8(0, &qword_2541B7530, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v13 = sub_2321FE194();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_232210D40;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v14 + 104))(v16 + v15, *MEMORY[0x24BE47438], v13);
  v17 = v12;
  sub_2321A492C(v16);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_2321A4950(MEMORY[0x24BEE4AF8]);
  (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v7, *MEMORY[0x24BE47910], v23);
  sub_2321FE3B0();

  v18 = sub_2321FE4D0();
  v19 = MEMORY[0x24BE47A60];
  a3[3] = v18;
  a3[4] = v19;
  sub_2320251BC(a3);
  sub_2321FE4AC();
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v10, v28);
}

uint64_t sub_2320F2978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC9Summaries37SummaryAlertFeedItemGeneratorPipeline_domain;
  v2 = sub_2321FE3BC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC9Summaries37SummaryAlertFeedItemGeneratorPipeline_context;
  v4 = sub_2321FE440();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2320F2A00()
{
  return type metadata accessor for SummaryAlertFeedItemGeneratorPipeline();
}

uint64_t type metadata accessor for SummaryAlertFeedItemGeneratorPipeline()
{
  uint64_t result;

  result = qword_2541AFD68;
  if (!qword_2541AFD68)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2320F2A44()
{
  return swift_retain();
}

uint64_t sub_2320F2A58@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC9Summaries37SummaryAlertFeedItemGeneratorPipeline_domain;
  v4 = sub_2321FE3BC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_2320F2AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t isStackAllocationSafe;
  char v29;
  unint64_t v30;
  size_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  unint64_t v42;
  uint64_t v43;

  v2 = a2;
  v43 = *MEMORY[0x24BDAC8D0];
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = *(_QWORD *)(a1 + 56);
    v37 = a1 + 56;
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v35 = ~v5;
    if (-v5 < 64)
      v6 = ~(-1 << -(char)v5);
    else
      v6 = -1;
    v7 = v6 & v4;
    v36 = (unint64_t)(63 - v5) >> 6;
    v8 = a2 + 56;
    swift_bridgeObjectRetain();
    v9 = 0;
    while (1)
    {
      if (v7)
      {
        v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v11 = v10 | (v9 << 6);
      }
      else
      {
        v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v36)
          goto LABEL_47;
        v13 = *(_QWORD *)(v37 + 8 * v12);
        v14 = v9 + 1;
        if (!v13)
        {
          v14 = v9 + 2;
          if (v9 + 2 >= v36)
            goto LABEL_47;
          v13 = *(_QWORD *)(v37 + 8 * v14);
          if (!v13)
          {
            v14 = v9 + 3;
            if (v9 + 3 >= v36)
              goto LABEL_47;
            v13 = *(_QWORD *)(v37 + 8 * v14);
            if (!v13)
            {
              v14 = v9 + 4;
              if (v9 + 4 >= v36)
                goto LABEL_47;
              v13 = *(_QWORD *)(v37 + 8 * v14);
              if (!v13)
              {
                v15 = v9 + 5;
                if (v9 + 5 >= v36)
                {
LABEL_47:
                  sub_23201B04C();
                  return v2;
                }
                v13 = *(_QWORD *)(v37 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    v14 = v15 + 1;
                    if (__OFADD__(v15, 1))
                      break;
                    if (v14 >= v36)
                      goto LABEL_47;
                    v13 = *(_QWORD *)(v37 + 8 * v14);
                    ++v15;
                    if (v13)
                      goto LABEL_24;
                  }
LABEL_49:
                  __break(1u);
                }
                v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        v7 = (v13 - 1) & v13;
        v11 = __clz(__rbit64(v13)) + (v14 << 6);
        v9 = v14;
      }
      v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
      v18 = *v16;
      v17 = v16[1];
      sub_232201B78();
      swift_bridgeObjectRetain();
      sub_232200F3C();
      v19 = sub_232201B9C();
      v20 = -1 << *(_BYTE *)(v2 + 32);
      v21 = v19 & ~v20;
      if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
        break;
LABEL_6:
      swift_bridgeObjectRelease();
    }
    v22 = *(_QWORD *)(v2 + 48);
    v23 = (_QWORD *)(v22 + 16 * v21);
    v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_232201ADC() & 1) != 0)
    {
      isStackAllocationSafe = swift_bridgeObjectRelease();
      v38 = a1;
      v39 = v37;
      v40 = v35;
      v41 = v9;
      v42 = v7;
    }
    else
    {
      v25 = ~v20;
      do
      {
        v21 = (v21 + 1) & v25;
        if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          goto LABEL_6;
        v26 = (_QWORD *)(v22 + 16 * v21);
        v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_232201ADC() & 1) == 0);
      v38 = a1;
      v39 = v37;
      v40 = v35;
      v41 = v9;
      v42 = v7;
      isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    v29 = *(_BYTE *)(v2 + 32);
    v30 = (unint64_t)((1 << v29) + 63) >> 6;
    v31 = 8 * v30;
    if ((v29 & 0x3Fu) < 0xE
      || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
    {
      MEMORY[0x24BDAC7A8](isStackAllocationSafe);
      memcpy((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
      v32 = sub_2320F3214((uint64_t)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), v30, v2, v21, &v38);
      swift_release();
      sub_23201B04C();
    }
    else
    {
      v33 = (void *)swift_slowAlloc();
      memcpy(v33, (const void *)(v2 + 56), v31);
      v32 = sub_2320F3214((uint64_t)v33, v30, v2, v21, &v38);
      swift_release();
      sub_23201B04C();
      MEMORY[0x2348FF468](v33, -1, -1);
    }
    return v32;
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
}

uint64_t sub_2320F2F08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t isStackAllocationSafe;
  char v19;
  unint64_t v20;
  size_t v21;
  uint64_t v22;
  void *v23;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = a2;
  v28 = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
  v26 = a1;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = a2 + 56;
    v25[0] = a1 + 32;
    swift_bridgeObjectRetain();
    v5 = 0;
    while (1)
    {
      v6 = (uint64_t *)(v25[0] + 16 * v5);
      v8 = *v6;
      v7 = v6[1];
      ++v5;
      sub_232201B78();
      swift_bridgeObjectRetain();
      sub_232200F3C();
      v9 = sub_232201B9C();
      v10 = -1 << *(_BYTE *)(v2 + 32);
      v11 = v9 & ~v10;
      if (((*(_QWORD *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
      {
        v12 = *(_QWORD *)(v2 + 48);
        v13 = (_QWORD *)(v12 + 16 * v11);
        v14 = *v13 == v8 && v13[1] == v7;
        if (v14 || (sub_232201ADC() & 1) != 0)
        {
          isStackAllocationSafe = swift_bridgeObjectRelease();
          v27 = v5;
LABEL_19:
          v19 = *(_BYTE *)(v2 + 32);
          v20 = (unint64_t)((1 << v19) + 63) >> 6;
          v21 = 8 * v20;
          if ((v19 & 0x3Fu) < 0xE
            || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
          {
            MEMORY[0x24BDAC7A8](isStackAllocationSafe);
            memcpy((char *)v25 - ((v21 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v21);
            v22 = sub_2320F3508((uint64_t)v25 - ((v21 + 15) & 0x3FFFFFFFFFFFFFF0), v20, v2, v11, &v26);
            swift_release();
            swift_bridgeObjectRelease();
          }
          else
          {
            v23 = (void *)swift_slowAlloc();
            memcpy(v23, (const void *)(v2 + 56), v21);
            v22 = sub_2320F3508((uint64_t)v23, v20, v2, v11, &v26);
            swift_release();
            swift_bridgeObjectRelease();
            MEMORY[0x2348FF468](v23, -1, -1);
          }
          return v22;
        }
        v15 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v15;
          if (((*(_QWORD *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
            break;
          v16 = (_QWORD *)(v12 + 16 * v11);
          v17 = *v16 == v8 && v16[1] == v7;
          if (v17 || (sub_232201ADC() & 1) != 0)
          {
            v27 = v5;
            isStackAllocationSafe = swift_bridgeObjectRelease();
            goto LABEL_19;
          }
        }
      }
      swift_bridgeObjectRelease();
      if (v5 == v3)
      {
        swift_bridgeObjectRelease();
        return v2;
      }
    }
  }
  return v2;
}

uint64_t sub_2320F3214(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t i;
  unint64_t v33;
  _QWORD *v34;
  BOOL v35;
  int64_t v36;
  uint64_t v38;
  unint64_t *v39;
  uint64_t v40;

  v7 = *(_QWORD *)(a3 + 16);
  v39 = (unint64_t *)result;
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v8 = v7 - 1;
  v40 = a3 + 56;
  while (2)
  {
    v38 = v8;
    do
    {
      while (1)
      {
        v9 = a5[3];
        v10 = a5[4];
        if (v10)
        {
          v11 = (v10 - 1) & v10;
          v12 = __clz(__rbit64(v10)) | (v9 << 6);
          goto LABEL_16;
        }
        v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_47;
        }
        v14 = (unint64_t)(a5[2] + 64) >> 6;
        v15 = a5[3];
        if (v13 >= v14)
          goto LABEL_45;
        v16 = a5[1];
        v17 = *(_QWORD *)(v16 + 8 * v13);
        if (!v17)
        {
          v18 = v9 + 2;
          v15 = v9 + 1;
          if (v9 + 2 >= v14)
            goto LABEL_45;
          v17 = *(_QWORD *)(v16 + 8 * v18);
          if (!v17)
          {
            v15 = v9 + 2;
            if (v9 + 3 >= v14)
              goto LABEL_45;
            v17 = *(_QWORD *)(v16 + 8 * (v9 + 3));
            if (v17)
            {
              v13 = v9 + 3;
              goto LABEL_15;
            }
            v18 = v9 + 4;
            v15 = v9 + 3;
            if (v9 + 4 >= v14)
              goto LABEL_45;
            v17 = *(_QWORD *)(v16 + 8 * v18);
            if (!v17)
            {
              v13 = v9 + 5;
              v15 = v9 + 4;
              if (v9 + 5 >= v14)
                goto LABEL_45;
              v17 = *(_QWORD *)(v16 + 8 * v13);
              if (!v17)
              {
                v15 = v14 - 1;
                v36 = v9 + 6;
                while (v14 != v36)
                {
                  v17 = *(_QWORD *)(v16 + 8 * v36++);
                  if (v17)
                  {
                    v13 = v36 - 1;
                    goto LABEL_15;
                  }
                }
LABEL_45:
                a5[3] = v15;
                a5[4] = 0;
                swift_retain();
                return sub_2320F3730(v39, a2, v38, a3);
              }
              goto LABEL_15;
            }
          }
          v13 = v18;
        }
LABEL_15:
        v11 = (v17 - 1) & v17;
        v12 = __clz(__rbit64(v17)) + (v13 << 6);
        v9 = v13;
LABEL_16:
        v19 = (uint64_t *)(*(_QWORD *)(*a5 + 48) + 16 * v12);
        v21 = *v19;
        v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_232201B78();
        swift_bridgeObjectRetain();
        sub_232200F3C();
        v22 = sub_232201B9C();
        v23 = -1 << *(_BYTE *)(a3 + 32);
        v24 = v22 & ~v23;
        v25 = v24 >> 6;
        v26 = 1 << v24;
        if (((1 << v24) & *(_QWORD *)(v40 + 8 * (v24 >> 6))) == 0)
          goto LABEL_3;
        v27 = *(_QWORD *)(a3 + 48);
        v28 = (_QWORD *)(v27 + 16 * v24);
        v29 = *v28 == v21 && v28[1] == v20;
        if (v29 || (sub_232201ADC() & 1) != 0)
          break;
        v31 = ~v23;
        for (i = v24 + 1; ; i = v33 + 1)
        {
          v33 = i & v31;
          if (((*(_QWORD *)(v40 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0)
            break;
          v34 = (_QWORD *)(v27 + 16 * v33);
          v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_232201ADC() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v25 = v33 >> 6;
            v26 = 1 << v33;
            goto LABEL_23;
          }
        }
LABEL_3:
        result = swift_bridgeObjectRelease();
      }
      result = swift_bridgeObjectRelease();
LABEL_23:
      v30 = v39[v25];
      v39[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    v8 = v38 - 1;
    if (__OFSUB__(v38, 1))
    {
LABEL_47:
      __break(1u);
      return result;
    }
    if (v38 != 1)
      continue;
    return MEMORY[0x24BEE4B08];
  }
}

uint64_t sub_2320F3508(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  BOOL v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t i;
  unint64_t v26;
  _QWORD *v27;
  BOOL v28;
  unint64_t *v30;
  uint64_t v31;
  uint64_t v32;

  v6 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v30 = (unint64_t *)result;
  v31 = v6 - 1;
  v8 = *a5;
  v7 = a5[1];
  v9 = *(_QWORD *)(*a5 + 16);
  if (v7 == v9)
  {
LABEL_2:
    swift_retain();
    return sub_2320F3730(v30, a2, v31, a3);
  }
  v32 = a3 + 56;
  while ((v7 & 0x8000000000000000) == 0)
  {
    if (v7 >= v9)
      goto LABEL_29;
    v11 = v8 + 16 * v7;
    v13 = *(_QWORD *)(v11 + 32);
    v12 = *(_QWORD *)(v11 + 40);
    a5[1] = v7 + 1;
    sub_232201B78();
    swift_bridgeObjectRetain();
    sub_232200F3C();
    v14 = sub_232201B9C();
    v15 = -1 << *(_BYTE *)(a3 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    v18 = 1 << v16;
    if (((1 << v16) & *(_QWORD *)(v32 + 8 * (v16 >> 6))) == 0)
      goto LABEL_4;
    v19 = *(_QWORD *)(a3 + 48);
    v20 = (_QWORD *)(v19 + 16 * v16);
    v21 = *v20 == v13 && v20[1] == v12;
    if (!v21 && (sub_232201ADC() & 1) == 0)
    {
      v24 = ~v15;
      for (i = v16 + 1; ; i = v26 + 1)
      {
        v26 = i & v24;
        if (((*(_QWORD *)(v32 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0)
          break;
        v27 = (_QWORD *)(v19 + 16 * v26);
        v28 = *v27 == v13 && v27[1] == v12;
        if (v28 || (sub_232201ADC() & 1) != 0)
        {
          result = swift_bridgeObjectRelease();
          v17 = v26 >> 6;
          v18 = 1 << v26;
          goto LABEL_15;
        }
      }
LABEL_4:
      result = swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    result = swift_bridgeObjectRelease();
LABEL_15:
    v22 = v30[v17];
    v30[v17] = v22 & ~v18;
    if ((v18 & v22) != 0)
    {
      v23 = v31 - 1;
      if (__OFSUB__(v31, 1))
        goto LABEL_30;
      --v31;
      if (!v23)
        return MEMORY[0x24BEE4B08];
    }
LABEL_5:
    v8 = *a5;
    v7 = a5[1];
    v9 = *(_QWORD *)(*a5 + 16);
    if (v7 == v9)
      goto LABEL_2;
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_2320F3730(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;

  v4 = a4;
  if (!a3)
  {
    v8 = MEMORY[0x24BEE4B08];
LABEL_36:
    swift_release();
    return v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  sub_2320F43A0();
  result = sub_232201884();
  v8 = result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v30)
      goto LABEL_36;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v30)
        goto LABEL_36;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v30)
          goto LABEL_36;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    sub_232201B78();
    swift_bridgeObjectRetain();
    sub_232200F3C();
    result = sub_232201B9C();
    v20 = -1 << *(_BYTE *)(v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v16 = v14 + 3;
  if (v16 >= v30)
    goto LABEL_36;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v30)
      goto LABEL_36;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_2320F39C0(uint64_t a1, void *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint8_t *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  id v34;
  unint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  void *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v61 = a2;
  v4 = *v2;
  v5 = sub_2321FE440();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v58 = v7;
  v59 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232059948();
  v63 = *(_QWORD *)(v8 - 8);
  v64 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v62 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_2321FE38C();
  v52 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v53 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2321FE3BC();
  v56 = *(_QWORD *)(v11 - 8);
  v57 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v54 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23220039C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232200318();
  v17 = sub_232200390();
  v18 = sub_2322012FC();
  v19 = os_log_type_enabled(v17, v18);
  v65 = a1;
  v60 = v4;
  if (v19)
  {
    v20 = swift_slowAlloc();
    v50 = v13;
    v51 = (void (*)(uint64_t, uint64_t, uint64_t))v5;
    v21 = v6;
    v22 = (uint8_t *)v20;
    v23 = swift_slowAlloc();
    v68 = v23;
    *(_DWORD *)v22 = 136446210;
    v24 = sub_232201BF0();
    v67 = sub_232013174(v24, v25, &v68);
    sub_232201710();
    a1 = v65;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_231FFB000, v17, v18, "[%{public}s] initialized", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v23, -1, -1);
    v26 = v22;
    v6 = v21;
    v5 = (uint64_t)v51;
    MEMORY[0x2348FF468](v26, -1, -1);

    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v50);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  v51 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v51(v66 + OBJC_IVAR____TtC9Summaries37SummaryAlertFeedItemGeneratorPipeline_context, a1, v5);
  v27 = (void *)sub_2321FE3F8();
  v28 = v6;
  if (qword_2541B4810 != -1)
    swift_once();
  v29 = swift_bridgeObjectRetain();
  sub_23201A2B8(v29);
  swift_bridgeObjectRelease();
  sub_2320057B8(0, &qword_2541B7530, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v30 = sub_2321FE194();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_232210D40;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v31 + 104))(v33 + v32, *MEMORY[0x24BE47438], v30);
  v34 = v27;
  sub_2321A492C(v33);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v35 = swift_retain();
  sub_2321A4950(v35);
  swift_release();
  (*(void (**)(char *, _QWORD, uint64_t))(v52 + 104))(v53, *MEMORY[0x24BE47910], v55);
  v36 = v54;
  sub_2321FE3B0();

  swift_release();
  v37 = v66;
  (*(void (**)(uint64_t, char *, uint64_t))(v56 + 32))(v66 + OBJC_IVAR____TtC9Summaries37SummaryAlertFeedItemGeneratorPipeline_domain, v36, v57);
  v38 = v59;
  v39 = v65;
  v51((uint64_t)v59, v65, v5);
  v40 = (*(unsigned __int8 *)(v28 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v41 = (v58 + v40 + 7) & 0xFFFFFFFFFFFFFFF8;
  v42 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v28 + 32))(v42 + v40, v38, v5);
  v43 = v60;
  v44 = v61;
  *(_QWORD *)(v42 + v41) = v61;
  *(_QWORD *)(v42 + ((v41 + 15) & 0xFFFFFFFFFFFFFFF8)) = v43;
  sub_2320599C0();
  sub_232000590(&qword_2541B79A8, (uint64_t (*)(uint64_t))sub_2320599C0, MEMORY[0x24BDB9AF8]);
  v45 = v44;
  v46 = v62;
  sub_2322006F0();
  sub_232000590(&qword_2541AF348, (uint64_t (*)(uint64_t))sub_232059948, MEMORY[0x24BDB9E90]);
  v47 = v64;
  v48 = sub_232200774();
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v39, v5);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v46, v47);
  *(_QWORD *)(v37 + OBJC_IVAR____TtC9Summaries37SummaryAlertFeedItemGeneratorPipeline_publisher) = v48;
  return v37;
}

unint64_t sub_2320F3F6C()
{
  unint64_t result;

  result = qword_2541B28F0;
  if (!qword_2541B28F0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_2541B28F0);
  }
  return result;
}

uint64_t sub_2320F3FC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_2321FE440();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_2320F403C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;

  v3 = *(_QWORD *)(sub_2321FE440() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  result = sub_2320EF378(v1 + v4, *(void **)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
  *a1 = result;
  return result;
}

void sub_2320F409C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  if (!qword_2541B2DC8)
  {
    sub_2320599C0();
    sub_2320F4164(255);
    v0 = MEMORY[0x24BDB9AF8];
    sub_232000590(&qword_2541B79A8, (uint64_t (*)(uint64_t))sub_2320599C0, MEMORY[0x24BDB9AF8]);
    sub_232000590((unint64_t *)&qword_2541B79C0, (uint64_t (*)(uint64_t))sub_2320F4164, v0);
    v1 = sub_2322005C4();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_2541B2DC8);
  }
}

void sub_2320F4164(uint64_t a1)
{
  sub_23202D1D8(a1, &qword_2541B2FA0, sub_2320F4178);
}

void sub_2320F4178(uint64_t a1)
{
  sub_2320057B8(a1, &qword_2541B54B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE48110], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
}

uint64_t sub_2320F4194()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_2321FE440();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_2320F4218@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(sub_2321FE440() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_2320EF628(a1, (v2 + v6), *(_QWORD *)(v2 + v7), *(void **)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)), a2);
}

void sub_2320F4290()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2E78)
  {
    sub_232016980();
    sub_232000590(&qword_2541AF318, (uint64_t (*)(uint64_t))sub_232016980, MEMORY[0x24BDB9DF8]);
    v0 = sub_2322005DC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2E78);
  }
}

void sub_2320F4308(uint64_t a1)
{
  sub_2320057B8(a1, &qword_2541B54E0, (uint64_t (*)(uint64_t))sub_232016980, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
}

void sub_2320F4324(void **a1@<X0>, uint64_t *a2@<X8>)
{
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *a1;
  v4 = (void *)sub_2321FE3F8();
  v5 = sub_2321D5890(v3);
  v7 = v6;

  *a2 = v5;
  a2[1] = v7;
}

uint64_t sub_2320F4384@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_2320F2754(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_2320F43A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B5738)
  {
    v0 = sub_232201890();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B5738);
  }
}

void *sub_2320F43FC()
{
  void *v0;
  unint64_t v1;
  id v2;
  unint64_t v3;
  uint64_t v4;

  v1 = sub_2321FE5C0();
  if (!(v1 >> 62))
  {
    if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (!sub_232201998())
    goto LABEL_12;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v2 = (id)MEMORY[0x2348FEA30](0, v1);
  }
  else
  {
    if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_17;
    }
    v2 = *(id *)(v1 + 32);
  }
  v0 = v2;
  swift_bridgeObjectRelease();
  v3 = sub_2321FE5C0();
  if (v3 >> 62)
  {
LABEL_17:
    v4 = sub_232201998();
    goto LABEL_8;
  }
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_8:
  swift_bridgeObjectRelease();
  if (v4 != 1 || (sub_232201158() & 1) == 0)
  {

    return 0;
  }
  return v0;
}

uint64_t sub_2320F44F0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  int v34;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;

  v51 = a2;
  v49 = a3;
  sub_2320002B4(0, &qword_2541B7618, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  MEMORY[0x24BDAC7A8](v4);
  v46 = (char *)&v42 - v5;
  sub_2320002B4(0, &qword_2541B2878, (void (*)(uint64_t))MEMORY[0x24BDCF290]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v42 - v7;
  v9 = sub_2321FDDC8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v47 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2321FDC6C();
  v48 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v45 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v44 = (char *)&v42 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v50 = (char *)&v42 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v43 = (char *)&v42 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v42 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v42 - v24;
  v26 = (void *)objc_opt_self();
  v27 = objc_msgSend(a1, sel_morningIndex);
  v28 = (void *)sub_2321FDD5C();
  v29 = objc_msgSend(v26, sel_hk_sleepDayIntervalForMorningIndex_calendar_, v27, v28);

  v30 = objc_msgSend(v29, sel_endDate);
  sub_2321FDC30();

  sub_2321FDD2C();
  if ((unint64_t)(v51 - 3) > 3)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    v37 = *(void (**)(char *, uint64_t))(v48 + 8);
    v37(v23, v12);
    v37(v25, v12);
    sub_23200040C((uint64_t)v8, &qword_2541B2878, (void (*)(uint64_t))MEMORY[0x24BDCF290]);
    v38 = sub_2321FD8B8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v49, 1, 1, v38);
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v8, **((unsigned int **)&unk_250102EA8 + v51 - 3), v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v47, v8, v9);
    v31 = (uint64_t)v46;
    sub_2321FDD80();
    v32 = v48;
    v33 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
    v33(v50, v23, v12);
    v34 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v31, 1, v12);
    v35 = v49;
    v51 = v9;
    v36 = v43;
    if (v34 == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v43, v50, v12);
      sub_23200040C(v31, &qword_2541B7618, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v32 + 8))(v50, v12);
      (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v36, v31, v12);
    }
    v33(v44, v23, v12);
    v33(v45, v36, v12);
    sub_2321FD87C();
    v40 = *(void (**)(char *, uint64_t))(v32 + 8);
    v40(v36, v12);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v47, v51);
    v40(v23, v12);
    v40(v25, v12);
    v41 = sub_2321FD8B8();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v35, 0, 1, v41);
  }
}

void sub_2320F497C(void *a1, void *a2, void (*a3)(id, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  id v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  void *v36;
  uint64_t v37;
  void (*v38)(id, uint64_t);
  _OWORD v39[2];
  uint64_t v40;

  v4 = v3;
  v38 = a3;
  v7 = sub_23220039C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23201C800();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v37 - v15;
  sub_232003E9C(0, &qword_255F9C098);
  v17 = sub_2320105E8(a1);
  if (v17)
  {
    v18 = (void *)v17;
    v19 = v4 + qword_2541BF5C8;
    v20 = sub_232200180();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v16, v19, v20);
    v21 = *MEMORY[0x24BE4AD70];
    v22 = sub_2321FFD78();
    v23 = *(_QWORD *)(v22 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 104))(v16, v21, v22);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v16, 0, 1, v22);
    v24 = a2;
    v25 = v18;
    v26 = objc_msgSend(v25, sel_data);
    if (v26)
    {
      v27 = v26;
      sub_232003E9C(0, &qword_2541B0CD0);
      v28 = sub_2321FDAD4();
      v30 = v29;

      sub_23201C854((uint64_t)v16, (uint64_t)v14);
      v40 = 0;
      memset(v39, 0, sizeof(v39));
      v31 = sub_232015828(v28, v30, 20, (uint64_t)v14, (uint64_t)v24, 0, (uint64_t)v39);

      sub_232003ED4(v28, v30);
      sub_232002CEC((uint64_t)v16, (uint64_t (*)(_QWORD))sub_23201C800);
      v32 = v31;
      v38(v31, 0);

    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_232200318();
    v33 = sub_232200390();
    v34 = sub_2322012F0();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v35 = 0;
      _os_log_impl(&dword_231FFB000, v33, v34, "Unable to create breathing disturbances value from sample", v35, 2u);
      MEMORY[0x2348FF468](v35, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    sub_2320F4CEC();
    v36 = (void *)swift_allocError();
    v38(v36, 1);

  }
}

uint64_t type metadata accessor for BreathingDisturbancesMostRecentSampleCurrentValueSharableModelStep()
{
  uint64_t result;

  result = qword_255F9E8F8;
  if (!qword_255F9E8F8)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_2320F4CEC()
{
  unint64_t result;

  result = qword_255F9E9C0;
  if (!qword_255F9E9C0)
  {
    result = MEMORY[0x2348FF39C](&unk_2322153E8, &type metadata for BreathingDisturbancesMostRecentSampleCurrentValueSharableModelStep.ValueError);
    atomic_store(result, (unint64_t *)&qword_255F9E9C0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for BreathingDisturbancesMostRecentSampleCurrentValueSharableModelStep.ValueError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2320F4D70 + 4 * byte_232215320[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2320F4D90 + 4 * byte_232215325[v4]))();
}

_BYTE *sub_2320F4D70(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2320F4D90(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2320F4D98(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2320F4DA0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2320F4DA8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2320F4DB0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for BreathingDisturbancesMostRecentSampleCurrentValueSharableModelStep.ValueError()
{
  return &type metadata for BreathingDisturbancesMostRecentSampleCurrentValueSharableModelStep.ValueError;
}

unint64_t sub_2320F4DD0()
{
  unint64_t result;

  result = qword_255F9E9C8;
  if (!qword_255F9E9C8)
  {
    result = MEMORY[0x2348FF39C](&unk_2322153C0, &type metadata for BreathingDisturbancesMostRecentSampleCurrentValueSharableModelStep.ValueError);
    atomic_store(result, (unint64_t *)&qword_255F9E9C8);
  }
  return result;
}

Summaries::SummaryModelConfiguration::Audience_optional __swiftcall SummaryModelConfiguration.Audience.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v1;
  Summaries::SummaryModelConfiguration::Audience_optional v2;

  v1 = sub_2322019F8();
  swift_bridgeObjectRelease();
  if (v1 == 1)
    v2.value = Summaries_SummaryModelConfiguration_Audience_sharing;
  else
    v2.value = Summaries_SummaryModelConfiguration_Audience_unknownDefault;
  if (v1)
    return v2;
  else
    return 0;
}

uint64_t SummaryModelConfiguration.Audience.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x676E6972616873;
  else
    return 0x7972616D697270;
}

uint64_t static SummaryModelConfiguration.sharableModelIdentifierPrefix.getter()
{
  return 0x656972616D6D7553;
}

uint64_t SummaryModelConfiguration.__allocating_init(hkTypes:kind:audience:)(uint64_t a1, uint64_t a2, char a3)
{
  char v5;
  uint64_t v6;

  v5 = a3 & 1;
  v6 = swift_allocObject();
  sub_232035280(a2, v6 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind);
  *(_QWORD *)(v6 + 16) = a1;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_audience) = v5;
  return v6;
}

uint64_t SummaryModelConfiguration.init(hkTypes:kind:audience:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  char v5;

  v5 = a3 & 1;
  sub_232035280(a2, v3 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind);
  *(_QWORD *)(v3 + 16) = a1;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_audience) = v5;
  return v3;
}

uint64_t type metadata accessor for SummaryModelConfiguration.Kind(uint64_t a1)
{
  return sub_23201A14C(a1, (uint64_t *)&unk_2541B37D8);
}

uint64_t SummaryModelConfiguration.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_232002CEC(v0 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind, type metadata accessor for SummaryModelConfiguration.Kind);
  return v0;
}

uint64_t SummaryModelConfiguration.kind.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind;
  swift_beginAccess();
  return sub_23200054C(v3, a1, type metadata accessor for SummaryModelConfiguration.Kind);
}

uint64_t SummaryModelConfiguration.kind.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind;
  swift_beginAccess();
  sub_2320F5064(a1, v3);
  return swift_endAccess();
}

uint64_t sub_2320F5064(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SummaryModelConfiguration.Kind(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*SummaryModelConfiguration.kind.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t SummaryModelConfiguration.audience.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_audience);
  swift_beginAccess();
  return *v1;
}

uint64_t SummaryModelConfiguration.audience.setter(char a1)
{
  uint64_t v1;
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = a1 & 1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_audience);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t (*SummaryModelConfiguration.audience.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t SummaryModelConfiguration.modelUniqueIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  unint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  uint64_t v11;
  uint64_t v13;
  _BYTE v14[24];

  v1 = v0;
  v2 = type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for SummaryModelConfiguration.Kind(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = *(_QWORD *)(v0 + 16);
  if (v8 >> 62)
  {
    sub_2320DAD4C();
    swift_bridgeObjectRetain();
    v13 = sub_232201980();
    swift_bridgeObjectRelease();
    v8 = v13;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_232201AE8();
    sub_2320DAD4C();
  }
  v9 = v1 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind;
  swift_beginAccess();
  sub_23200054C(v9, (uint64_t)v7, type metadata accessor for SummaryModelConfiguration.Kind);
  sub_2320F5E98();
  sub_232002CEC((uint64_t)v7, type metadata accessor for SummaryModelConfiguration.Kind);
  v10 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_audience);
  swift_beginAccess();
  v11 = sub_2320F7D00(v8, (uint64_t)v4, *v10);
  swift_bridgeObjectRelease();
  sub_232002CEC((uint64_t)v4, type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind);
  return v11;
}

uint64_t type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind(uint64_t a1)
{
  return sub_23201A14C(a1, (uint64_t *)&unk_2541B2550);
}

uint64_t SummaryModelConfiguration.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  unint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  uint64_t v11;
  uint64_t v13;
  _BYTE v14[24];

  v1 = v0;
  v2 = type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for SummaryModelConfiguration.Kind(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = *(_QWORD *)(v0 + 16);
  if (v8 >> 62)
  {
    sub_2320DAD4C();
    swift_bridgeObjectRetain();
    v13 = sub_232201980();
    swift_bridgeObjectRelease();
    v8 = v13;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_232201AE8();
    sub_2320DAD4C();
  }
  v9 = v1 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind;
  swift_beginAccess();
  sub_23200054C(v9, (uint64_t)v7, type metadata accessor for SummaryModelConfiguration.Kind);
  sub_2320F5E98();
  sub_232002CEC((uint64_t)v7, type metadata accessor for SummaryModelConfiguration.Kind);
  v10 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_audience);
  swift_beginAccess();
  v11 = sub_2320F7D00(v8, (uint64_t)v4, *v10);
  swift_bridgeObjectRelease();
  sub_232002CEC((uint64_t)v4, type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind);
  return v11;
}

void SummaryModelConfiguration.validAfterFirstRestoreOnly.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v1 = type metadata accessor for SummaryModelConfiguration.Kind(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = v0 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind;
  swift_beginAccess();
  sub_23200054C(v4, (uint64_t)v3, type metadata accessor for SummaryModelConfiguration.Kind);
  v5 = (char *)sub_2320F55D8 + 4 * byte_232215430[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_2320F55D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  sub_232025384();
  v2 = v0 + *(int *)(v1 + 48);
  swift_release();
  sub_2320F8274(v2);
  return 1;
}

uint64_t SummaryModelConfiguration.makeRequest(generatorContext:configurationContext:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  BOOL v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v14;

  v2 = v1;
  v4 = sub_2321FE4A0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 208))(a1);
  if (v8)
    swift_release();
  v9 = v8 != 0;
  v10 = (char *)(v2 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_audience);
  swift_beginAccess();
  v11 = *v10;
  sub_2321FEC44();
  type metadata accessor for SummaryModelConfiguration.Request(0);
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = v11;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v12 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_currentTypeState, v7, v4);
  *(_QWORD *)(v12 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_modelConfiguration) = v2;
  *(_BYTE *)(v12 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_requestedByUnanchoredSignal) = v9;
  swift_retain();
  return v12;
}

uint64_t SummaryModelConfiguration.makeRequestPublisher(generatorContext:upstreamContextPublisher:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v3 = v2;
  v6 = sub_2321FE440();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320F82DC();
  v21 = *(_QWORD *)(v10 - 8);
  v22 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = a2;
  v13 = (void (*)(uint64_t))MEMORY[0x24BE41C50];
  sub_23202D1D8(0, &qword_2541B2F20, MEMORY[0x24BE41C50]);
  type metadata accessor for SummaryModelConfiguration.Request(0);
  sub_23205B4A8(&qword_2541B79B0, &qword_2541B2F20, v13);
  swift_retain();
  sub_2322007A4();
  swift_release();
  v14 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 208))(a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  if (!v14)
  {
    sub_2320F5A58();
    v14 = v15;
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_2321FE3E0();
  if ((sub_2321FE848() & 1) != 0 && v14)
  {
    v16 = swift_retain();
    v23 = sub_2320F687C(v16);
    sub_23202D1D8(0, &qword_2541B2F68, (void (*)(uint64_t))type metadata accessor for SummaryModelConfiguration.Request);
    sub_23205B4A8(&qword_2541B2F60, &qword_2541B2F68, (void (*)(uint64_t))type metadata accessor for SummaryModelConfiguration.Request);
    v17 = sub_232200774();
    swift_release();
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v12, v22);
  }
  else
  {
    sub_232000590(&qword_2541B2BF8, (uint64_t (*)(uint64_t))sub_2320F82DC, MEMORY[0x24BDB96C0]);
    v18 = v22;
    v17 = sub_232200774();
    swift_release();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v12, v18);
  }
  return v17;
}

void sub_2320F5A58()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  _QWORD v9[5];

  v9[1] = *v0;
  sub_2320F9E90();
  v9[2] = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  sub_2320F9F20();
  v9[3] = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v3 = type metadata accessor for SummaryModelConfiguration.Kind(0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v9 - v5;
  v7 = (uint64_t)v0 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind;
  swift_beginAccess();
  sub_23200054C(v7, (uint64_t)v6, type metadata accessor for SummaryModelConfiguration.Kind);
  v8 = (char *)sub_2320F5BB0 + 4 * byte_232215434[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_2320F5BB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int EnumCaseMultiPayload;

  swift_bridgeObjectRelease();
  sub_232025384();
  v4 = v1 + *(int *)(v3 + 48);
  swift_release();
  sub_2320F8274(v4);
  sub_23200054C(v2, v0, type metadata accessor for SummaryModelConfiguration.Kind);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)())((char *)sub_2320F5C90 + 4 * byte_232215438[EnumCaseMultiPayload]))();
}

uint64_t sub_2320F5C90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  swift_bridgeObjectRelease();
  sub_232025384();
  v8 = *(_QWORD *)(v1 + *(int *)(v7 + 64));
  sub_2320F8274(v1 + *(int *)(v7 + 48));
  *(_QWORD *)(v6 - 112) = v8;
  sub_2320F9B48(0, (unint64_t *)&qword_2541B2FD8);
  sub_2320F9BA0(&qword_2541AF2D8, (unint64_t *)&qword_2541B2FD8);
  sub_23220084C();
  swift_release();
  v9 = swift_allocObject();
  v10 = *(_QWORD *)(v6 - 136);
  *(_QWORD *)(v9 + 16) = v5;
  *(_QWORD *)(v9 + 24) = v10;
  sub_232000590(&qword_2541B2420, (uint64_t (*)(uint64_t))sub_2320F9E90, MEMORY[0x24BDB96F8]);
  swift_retain();
  sub_232200780();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 128) + 8))(v4, v2);
  sub_232000590(&qword_2541B2390, (uint64_t (*)(uint64_t))sub_2320F9F20, MEMORY[0x24BDB94C8]);
  v11 = sub_232200774();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 120) + 8))(v3, v0);
  return v11;
}

uint64_t static SummaryModelConfiguration.makeModelUniqueIdentifier(hkTypes:modelIdentifierKind:audience:)(unint64_t a1, uint64_t a2, char a3)
{
  return sub_2320F7D00(a1, a2, a3 & 1);
}

uint64_t SummaryModelConfiguration.Audience.queryRequestAudience.getter(char a1)
{
  return a1 & 1;
}

uint64_t SummaryModelConfiguration.hkTypes.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_2320F5E98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for SummaryModelConfiguration.Kind(0);
  MEMORY[0x24BDAC7A8](v1);
  sub_23200054C(v0, (uint64_t)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v4 = (char *)sub_2320F5F24 + 4 * byte_23221543C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_2320F5F24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  sub_232025384();
  v2 = v0 + *(int *)(v1 + 48);
  swift_release();
  type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind(0);
  swift_storeEnumTagMultiPayload();
  return sub_2320F8274(v2);
}

uint64_t SummaryModelConfiguration.Audience.uniqueIdentifierComponent.getter()
{
  sub_232200F48();
  swift_bridgeObjectRelease();
  return 0x65636E6569647541;
}

void SummaryModelConfiguration.ModelIdentifierKind.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  char *v8;
  _QWORD v9[16];

  v1 = sub_2321FFFDC();
  v9[9] = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_2321FFE08();
  v3 = *(_QWORD *)(v2 - 8);
  v9[11] = v2;
  v9[12] = v3;
  v4 = MEMORY[0x24BDAC7A8](v2);
  MEMORY[0x24BDAC7A8](v4);
  v5 = type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind(0);
  MEMORY[0x24BDAC7A8](v5);
  sub_23200054C(v0, (uint64_t)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  v8 = (char *)&loc_2320F61EC + *((int *)qword_2320F66D0 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_2320F61FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(v2 - 120);
  v4 = *(_QWORD *)(v2 - 112);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v0, v1, v3);
  *(_QWORD *)(v2 - 104) = 0;
  *(_QWORD *)(v2 - 96) = 0xE000000000000000;
  sub_23220189C();
  swift_bridgeObjectRelease();
  strcpy((char *)(v2 - 104), "TrendAnalysis_");
  *(_BYTE *)(v2 - 89) = -18;
  sub_2321FFD9C();
  MEMORY[0x2348FE1C0]();
  sub_232200F48();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v2 - 104);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0, v3);
  return v5;
}

uint64_t SummaryModelConfiguration.Request.__allocating_init(audience:currentTypeState:modelConfiguration:requestedByUnanchoredSignal:)(char a1, uint64_t a2, uint64_t a3, char a4)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7 = a1 & 1;
  v8 = swift_allocObject();
  *(_BYTE *)(v8 + 16) = v7;
  v9 = v8 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_currentTypeState;
  v10 = sub_2321FE4A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9, a2, v10);
  *(_QWORD *)(v8 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_modelConfiguration) = a3;
  *(_BYTE *)(v8 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_requestedByUnanchoredSignal) = a4;
  return v8;
}

uint64_t sub_2320F6778@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v11;

  v4 = sub_2321FE4A0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (_BYTE *)(a1 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_audience);
  swift_beginAccess();
  LOBYTE(v8) = *v8;
  sub_2321FEC44();
  type metadata accessor for SummaryModelConfiguration.Request(0);
  v9 = swift_allocObject();
  *(_BYTE *)(v9 + 16) = (_BYTE)v8;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v9 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_currentTypeState, v7, v4);
  *(_QWORD *)(v9 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_modelConfiguration) = a1;
  *(_BYTE *)(v9 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_requestedByUnanchoredSignal) = 0;
  *a2 = v9;
  return swift_retain();
}

uint64_t sub_2320F687C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  sub_2320F9924();
  v3 = *(_QWORD *)(v2 - 8);
  v32 = v2;
  v33 = v3;
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320F9BE0();
  v34 = v6;
  v36 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320F9D8C(0, &qword_2541B2418, v9, sub_2320F9C58, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB96B0]);
  v38 = v10;
  v41 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v31 - v11;
  sub_2320F9C74();
  v40 = v13;
  v42 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320F9D8C(0, &qword_2541B23A8, v16, sub_2320F9E0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB94B8]);
  v37 = v17;
  v39 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v31 - v18;
  sub_2320F99EC();
  v21 = v20;
  v35 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v31 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = a1;
  sub_2320F9B48(0, &qword_2541B3048);
  sub_2320F9BA0(&qword_2541AF308, &qword_2541B3048);
  sub_232200834();
  sub_2320F82DC();
  sub_232000590(&qword_2541B2BF8, (uint64_t (*)(uint64_t))sub_2320F82DC, MEMORY[0x24BDB96C0]);
  sub_232000590(&qword_2541B23C0, (uint64_t (*)(uint64_t))sub_2320F99EC, MEMORY[0x24BDB9530]);
  sub_232200798();
  sub_2321FE410();
  v24 = v32;
  sub_2322004BC();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v5, v24);
  type metadata accessor for SummaryModelConfiguration.Request(0);
  sub_2320F9C58();
  v25 = v34;
  sub_2322007A4();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v25);
  v43 = 0;
  sub_2320057B8(0, &qword_2541B2560, type metadata accessor for SummaryModelConfiguration.Request, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  sub_2320F9D24();
  v26 = v38;
  sub_2322007BC();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v12, v26);
  sub_2320F9E0C();
  v27 = v40;
  sub_232200780();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v15, v27);
  sub_2320F9E28();
  v28 = v37;
  v29 = sub_232200774();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v19, v28);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v23, v21);
  return v29;
}

uint64_t sub_2320F6C94@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;

  v4 = sub_23220039C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  sub_232200318();
  swift_retain_n();
  v9 = sub_232200390();
  v10 = sub_2322012FC();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v23 = v5;
    v12 = v11;
    v13 = swift_slowAlloc();
    HIDWORD(v21) = v8;
    v14 = v13;
    v26 = v13;
    *(_DWORD *)v12 = 136315650;
    v15 = sub_232201BF0();
    v17 = sub_232013174(v15, v16, &v26);
    v24 = a2;
    v25 = v17;
    v22 = v4;
    sub_232201710();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 1024;
    LODWORD(v25) = HIDWORD(v21);
    sub_232201710();
    *(_WORD *)(v12 + 18) = 2080;
    v18 = SummaryModelConfiguration.modelUniqueIdentifier.getter();
    v25 = sub_232013174(v18, v19, &v26);
    a2 = v24;
    sub_232201710();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_231FFB000, v9, v10, "[%s]: First restore status changed to %{BOOL}d, emitting generation signal for %s", (uint8_t *)v12, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v14, -1, -1);
    MEMORY[0x2348FF468](v12, -1, -1);

    result = (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v7, v22);
  }
  else
  {

    swift_release_n();
    result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  *a2 = 0;
  return result;
}

uint64_t SummaryModelConfiguration.makeUnanchoredChangePublishers(generatorContext:)()
{
  return 0;
}

uint64_t SummaryModelConfiguration.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_232002CEC(v0 + OBJC_IVAR____TtC9Summaries25SummaryModelConfiguration_kind, type metadata accessor for SummaryModelConfiguration.Kind);
  return swift_deallocClassInstance();
}

uint64_t sub_2320F6F28()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2320F6F34()
{
  return SummaryModelConfiguration.modelUniqueIdentifier.getter();
}

uint64_t sub_2320F6F54()
{
  char v0;

  SummaryModelConfiguration.validAfterFirstRestoreOnly.getter();
  return v0 & 1;
}

uint64_t sub_2320F6F78@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = SummaryModelConfiguration.makeRequest(generatorContext:configurationContext:)(a1);
  *a2 = result;
  return result;
}

uint64_t sub_2320F6FA0(uint64_t a1, uint64_t a2)
{
  return SummaryModelConfiguration.makeRequestPublisher(generatorContext:upstreamContextPublisher:)(a1, a2);
}

uint64_t sub_2320F6FC0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 208))();
}

uint64_t sub_2320F6FE8()
{
  return SummaryModelConfiguration.debugDescription.getter();
}

void SummaryModelConfiguration.Kind.uniqueIdentifierComponent.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v1 = type metadata accessor for SummaryModelConfiguration.Kind(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind(0);
  MEMORY[0x24BDAC7A8](v4);
  sub_23200054C(v0, (uint64_t)v3, type metadata accessor for SummaryModelConfiguration.Kind);
  v5 = (char *)sub_2320F70D0 + 4 * byte_232215440[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_2320F70D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  sub_232025384();
  v3 = v0 + *(int *)(v2 + 48);
  swift_release();
  swift_storeEnumTagMultiPayload();
  sub_2320F8274(v3);
  SummaryModelConfiguration.ModelIdentifierKind.identifier.getter();
  v5 = v4;
  sub_232002CEC(v1, type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind);
  return v5;
}

void SummaryModelConfiguration.Kind.codableKind.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for SummaryModelConfiguration.Kind(0);
  MEMORY[0x24BDAC7A8](v1);
  sub_23200054C(v0, (uint64_t)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v4 = (char *)sub_2320F7278 + 4 * byte_232215444[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_2320F7278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  sub_232025384();
  v2 = v0 + *(int *)(v1 + 48);
  swift_release();
  sub_2320F8274(v2);
  return 0;
}

uint64_t SummaryModelConfiguration.Audience.description.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x676E6972616873;
  else
    return 0x7972616D697270;
}

uint64_t sub_2320F7374()
{
  sub_232201B78();
  sub_232200F3C();
  swift_bridgeObjectRelease();
  return sub_232201B9C();
}

uint64_t sub_2320F73E8()
{
  sub_232200F3C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2320F7430()
{
  sub_232201B78();
  sub_232200F3C();
  swift_bridgeObjectRelease();
  return sub_232201B9C();
}

uint64_t sub_2320F74A0@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_2322019F8();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_2320F74FC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 0x7972616D697270;
  if (*v1)
    v2 = 0x676E6972616873;
  *a1 = v2;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_2320F7534(char *a1, char *a2)
{
  return sub_2320EF1FC(*a1, *a2);
}

uint64_t sub_2320F7540()
{
  _BYTE *v0;

  if (*v0)
    return 0x676E6972616873;
  else
    return 0x7972616D697270;
}

uint64_t SummaryModelConfiguration.Request.init(audience:currentTypeState:modelConfiguration:requestedByUnanchoredSignal:)(char a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)(v4 + 16) = a1 & 1;
  v8 = v4 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_currentTypeState;
  v9 = sub_2321FE4A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8, a2, v9);
  *(_QWORD *)(v4 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_modelConfiguration) = a3;
  *(_BYTE *)(v4 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_requestedByUnanchoredSignal) = a4;
  return v4;
}

uint64_t SummaryModelConfiguration.Request.__allocating_init(request:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = swift_allocObject();
  *(_BYTE *)(v2 + 16) = *(_BYTE *)(a1 + 16);
  v3 = a1 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_currentTypeState;
  v4 = v2 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_currentTypeState;
  v5 = sub_2321FE4A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v4, v3, v5);
  *(_QWORD *)(v2 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_modelConfiguration) = *(_QWORD *)(a1 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_modelConfiguration);
  LOBYTE(v4) = *(_BYTE *)(a1 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_requestedByUnanchoredSignal);
  swift_retain();
  swift_release();
  *(_BYTE *)(v2 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_requestedByUnanchoredSignal) = v4;
  return v2;
}

uint64_t SummaryModelConfiguration.Request.init(request:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v1 + 16) = *(_BYTE *)(a1 + 16);
  v3 = a1 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_currentTypeState;
  v4 = v1 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_currentTypeState;
  v5 = sub_2321FE4A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v4, v3, v5);
  *(_QWORD *)(v1 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_modelConfiguration) = *(_QWORD *)(a1 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_modelConfiguration);
  LOBYTE(v4) = *(_BYTE *)(a1 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_requestedByUnanchoredSignal);
  swift_retain();
  swift_release();
  *(_BYTE *)(v1 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_requestedByUnanchoredSignal) = v4;
  return v1;
}

uint64_t SummaryModelConfiguration.Request.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_currentTypeState;
  v2 = sub_2321FE4A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t SummaryModelConfiguration.Request.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_currentTypeState;
  v2 = sub_2321FE4A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2320F77E0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_2320F77EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  _BYTE v36[4];
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_2321FE4A0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v36[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_23220039C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v10);
  v14 = &v36[-v13];
  if (a1)
  {
    v41 = v4;
    v15 = a1 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_currentTypeState;
    v16 = a2 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_currentTypeState;
    swift_retain();
    v42 = v16;
    if ((MEMORY[0x2348FB610](v15, v16) & 1) != 0)
    {
      sub_232200318();
      swift_retain_n();
      v17 = sub_232200390();
      v18 = sub_2322012FC();
      v19 = v18;
      if (os_log_type_enabled(v17, v18))
      {
        v20 = swift_slowAlloc();
        v40 = v9;
        v21 = v20;
        v38 = swift_slowAlloc();
        v44 = v38;
        *(_DWORD *)v21 = 136315394;
        v37 = v19;
        v43 = sub_232013174(0xD000000000000046, 0x80000002322070A0, &v44);
        v39 = v8;
        sub_232201710();
        *(_WORD *)(v21 + 12) = 2080;
        v22 = SummaryModelConfiguration.modelUniqueIdentifier.getter();
        v43 = sub_232013174(v22, v23, &v44);
        sub_232201710();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_231FFB000, v17, (os_log_type_t)v37, "[%s] Unanchored change received, emitting unanchored generation signal for %s", (uint8_t *)v21, 0x16u);
        v24 = v38;
        swift_arrayDestroy();
        MEMORY[0x2348FF468](v24, -1, -1);
        MEMORY[0x2348FF468](v21, -1, -1);
        swift_release();

        (*(void (**)(_BYTE *, uint64_t))(v40 + 8))(v14, v39);
      }
      else
      {
        swift_release();

        swift_release_n();
        (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v14, v8);
      }
      v32 = v41;
      v33 = *(_BYTE *)(a2 + 16);
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, v42, v41);
      v34 = *(_QWORD *)(a2 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_modelConfiguration);
      type metadata accessor for SummaryModelConfiguration.Request(0);
      a2 = swift_allocObject();
      *(_BYTE *)(a2 + 16) = v33;
      (*(void (**)(uint64_t, _BYTE *, uint64_t))(v5 + 32))(a2 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_currentTypeState, v7, v32);
      *(_QWORD *)(a2 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_modelConfiguration) = v34;
      *(_BYTE *)(a2 + OBJC_IVAR____TtCC9Summaries25SummaryModelConfiguration7Request_requestedByUnanchoredSignal) = 1;
    }
    else
    {
      sub_232200318();
      swift_retain_n();
      v25 = sub_232200390();
      v26 = sub_2322012FC();
      if (os_log_type_enabled(v25, v26))
      {
        v27 = swift_slowAlloc();
        v28 = swift_slowAlloc();
        v39 = v8;
        v29 = v28;
        v44 = v28;
        *(_DWORD *)v27 = 136315394;
        v43 = sub_232013174(0xD000000000000046, 0x80000002322070A0, &v44);
        sub_232201710();
        *(_WORD *)(v27 + 12) = 2080;
        v40 = v9;
        v30 = SummaryModelConfiguration.modelUniqueIdentifier.getter();
        v43 = sub_232013174(v30, v31, &v44);
        sub_232201710();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_231FFB000, v25, v26, "[%s] Anchored change received, emitting generation signal for %s", (uint8_t *)v27, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2348FF468](v29, -1, -1);
        MEMORY[0x2348FF468](v27, -1, -1);
        swift_release();

        (*(void (**)(_BYTE *, uint64_t))(v40 + 8))(v12, v39);
      }
      else
      {

        swift_release();
        swift_release_n();
        (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v12, v8);
      }
    }
  }
  swift_retain();
  return a2;
}

uint64_t sub_2320F7CD4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = sub_2320F77EC(*a1, *a2);
  *a3 = result;
  return result;
}

uint64_t sub_2320F7D00(unint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint32_t *p_align;
  uint64_t v10;
  uint64_t result;
  id i;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  int EnumCaseMultiPayload;
  uint64_t v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _DWORD v37[2];
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;

  v37[1] = a3;
  v38 = a2;
  v4 = type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_232201998();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v8 = MEMORY[0x24BEE4AF8];
  if (!v7)
  {
LABEL_32:
    v41 = v8;
    v36 = MEMORY[0x24BEE0D00];
    sub_2320F9AC4(0, (unint64_t *)&qword_2541B54F8);
    sub_2320F9B08((unint64_t *)&qword_2541B7EA0, (unint64_t *)&qword_2541B54F8, v36, MEMORY[0x24BEE12B0]);
    sub_232200E1C();
    swift_bridgeObjectRelease();
    v41 = 91;
    v42 = 0xE100000000000000;
    sub_232200F48();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_232200F48();
    swift_bridgeObjectRelease();
    v41 = 0;
    v42 = 0xE000000000000000;
    sub_23220189C();
    swift_bridgeObjectRelease();
    v41 = 0x656972616D6D7553;
    v42 = 0xEA00000000005F73;
    sub_232200F48();
    swift_bridgeObjectRelease();
    sub_232200F48();
    SummaryModelConfiguration.ModelIdentifierKind.identifier.getter();
    sub_232200F48();
    swift_bridgeObjectRelease();
LABEL_33:
    sub_232200F48();
    v39 = 0x65636E6569647541;
    v40 = 0xE90000000000005FLL;
    sub_232200F48();
    swift_bridgeObjectRelease();
    sub_232200F48();
    swift_bridgeObjectRelease();
    sub_232200F48();
    return v41;
  }
  p_align = &stru_25010DFE8.align;
  if (v7 != 1)
    goto LABEL_24;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_232201998();
    if (result)
      goto LABEL_7;
LABEL_12:
    swift_bridgeObjectRelease();
    v15 = 0;
    v17 = 0;
    goto LABEL_13;
  }
  v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v10)
    goto LABEL_12;
LABEL_7:
  if ((a1 & 0xC000000000000001) != 0)
    goto LABEL_37;
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    for (i = *(id *)(a1 + 32); ; i = (id)MEMORY[0x2348FEA30](0, a1))
    {
      v13 = i;
      swift_bridgeObjectRelease();
      v14 = objc_msgSend(v13, *((SEL *)p_align + 336));

      v15 = sub_232200EC4();
      v17 = v16;

LABEL_13:
      v18 = objc_msgSend((id)objc_opt_self(), sel_activitySummaryType);
      v19 = objc_msgSend(v18, *((SEL *)p_align + 336));

      v20 = sub_232200EC4();
      v22 = v21;

      if (!v17)
      {
        swift_bridgeObjectRelease();
        p_align = (_DWORD *)(&stru_25010DFE8 + 24);
        goto LABEL_24;
      }
      if (v15 == v20 && v17 == v22)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        p_align = (_DWORD *)(&stru_25010DFE8 + 24);
      }
      else
      {
        v23 = sub_232201ADC();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        p_align = &stru_25010DFE8.align;
        if ((v23 & 1) == 0)
          goto LABEL_24;
      }
      v24 = 0xD000000000000015;
      sub_23200054C(v38, (uint64_t)v6, type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 3)
        return v24;
      if (EnumCaseMultiPayload == 2)
      {
        v41 = 0;
        v42 = 0xE000000000000000;
        sub_23220189C();
        goto LABEL_33;
      }
      sub_232002CEC((uint64_t)v6, type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind);
LABEL_24:
      v41 = v8;
      v6 = &v41;
      sub_2320138B4(0, v7 & ~(v7 >> 63), 0);
      if ((v7 & 0x8000000000000000) == 0)
      {
        v26 = 0;
        v8 = v41;
        do
        {
          if ((a1 & 0xC000000000000001) != 0)
            v27 = (id)MEMORY[0x2348FEA30](v26, a1);
          else
            v27 = *(id *)(a1 + 8 * v26 + 32);
          v28 = v27;
          v29 = objc_msgSend(v27, *((SEL *)p_align + 336));
          v30 = sub_232200EC4();
          v32 = v31;

          v41 = v8;
          v34 = *(_QWORD *)(v8 + 16);
          v33 = *(_QWORD *)(v8 + 24);
          if (v34 >= v33 >> 1)
          {
            sub_2320138B4(v33 > 1, v34 + 1, 1);
            v8 = v41;
          }
          ++v26;
          *(_QWORD *)(v8 + 16) = v34 + 1;
          v35 = v8 + 16 * v34;
          *(_QWORD *)(v35 + 32) = v30;
          *(_QWORD *)(v35 + 40) = v32;
          p_align = (_DWORD *)(&stru_25010DFE8 + 24);
        }
        while (v7 != v26);
        goto LABEL_32;
      }
      __break(1u);
LABEL_37:
      ;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2320F8274(uint64_t a1)
{
  uint64_t v2;

  sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for SummaryModelConfiguration.Request(uint64_t a1)
{
  return sub_23201A14C(a1, (uint64_t *)&unk_2541B3858);
}

void sub_2320F82DC()
{
  void (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_2541B2C00)
  {
    v0 = (void (*)(uint64_t))MEMORY[0x24BE41C50];
    sub_23202D1D8(255, &qword_2541B2F20, MEMORY[0x24BE41C50]);
    type metadata accessor for SummaryModelConfiguration.Request(255);
    sub_23205B4A8(&qword_2541B79B0, &qword_2541B2F20, v0);
    v1 = sub_232200540();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_2541B2C00);
  }
}

uint64_t sub_2320F8384@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_2320F6778(v1, a1);
}

unint64_t sub_2320F8390()
{
  unint64_t result;

  result = qword_255F9E9D0;
  if (!qword_255F9E9D0)
  {
    result = MEMORY[0x2348FF39C](&protocol conformance descriptor for SummaryModelConfiguration.Audience, &type metadata for SummaryModelConfiguration.Audience);
    atomic_store(result, (unint64_t *)&qword_255F9E9D0);
  }
  return result;
}

uint64_t sub_2320F83D4()
{
  return type metadata accessor for SummaryModelConfiguration(0);
}

uint64_t type metadata accessor for SummaryModelConfiguration(uint64_t a1)
{
  return sub_23201A14C(a1, (uint64_t *)&unk_2541B3938);
}

uint64_t sub_2320F83F0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SummaryModelConfiguration.Kind(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SummaryModelConfiguration.ModelIdentifierKind(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v8 = sub_2321FFE08();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for SummaryModelConfiguration.ModelIdentifierKind(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
    return swift_bridgeObjectRelease();
  if (!(_DWORD)result)
  {
    v3 = sub_2321FFE08();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

_QWORD *initializeWithCopy for SummaryModelConfiguration.ModelIdentifierKind(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_2321FFE08();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *assignWithCopy for SummaryModelConfiguration.ModelIdentifierKind(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_232002CEC((uint64_t)a1, type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = sub_2321FFE08();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *initializeWithTake for SummaryModelConfiguration.ModelIdentifierKind(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_2321FFE08();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for SummaryModelConfiguration.ModelIdentifierKind(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_232002CEC((uint64_t)a1, type metadata accessor for SummaryModelConfiguration.ModelIdentifierKind);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_2321FFE08();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_2320F884C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2321FFE08();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for SummaryModelConfiguration.Kind(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_2320F8918 + 4 * byte_232215448[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for SummaryModelConfiguration.Kind(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      sub_232025384();
      v4 = a1 + *(int *)(v3 + 48);
      v5 = sub_2321FD8B8();
      v6 = *(_QWORD *)(v5 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
      goto LABEL_9;
    case 1:
      v7 = sub_2321FFD78();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
      sub_232035388();
      v9 = a1 + *(int *)(v8 + 48);
      v10 = sub_2321FD8B8();
      v11 = *(_QWORD *)(v10 - 8);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
      if (!(_DWORD)result)
        return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
      return result;
    case 2:
      v12 = sub_2321FFE08();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a1, v12);
      sub_2320352C4();
      goto LABEL_9;
    case 3:
      swift_bridgeObjectRelease();
LABEL_9:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for SummaryModelConfiguration.Kind()
{
  char *v0;

  v0 = (char *)sub_2320F8D2C + 4 * byte_232215450[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_2320F8D2C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;

  *v0 = *v1;
  sub_232025384();
  v3 = v2;
  v4 = *(int *)(v2 + 48);
  v5 = (char *)v0 + v4;
  v6 = (char *)v1 + v4;
  v7 = sub_2321FD8B8();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  swift_bridgeObjectRetain();
  if (v9(v6, 1, v7))
  {
    sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  *(_QWORD *)((char *)v0 + *(int *)(v3 + 64)) = *(_QWORD *)((char *)v1 + *(int *)(v3 + 64));
  swift_retain();
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for SummaryModelConfiguration.Kind(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_232002CEC(result, type metadata accessor for SummaryModelConfiguration.Kind);
    v2 = (char *)&loc_2320F8FC4 + 4 * byte_232215454[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

_QWORD *initializeWithTake for SummaryModelConfiguration.Kind(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v15 = sub_2321FFE08();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a1, a2, v15);
      sub_2320352C4();
      *(_QWORD *)((char *)a1 + *(int *)(v16 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v16 + 48));
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1:
      v17 = sub_2321FFD78();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a1, a2, v17);
      sub_232035388();
      v19 = *(int *)(v18 + 48);
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      v22 = sub_2321FD8B8();
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      {
        sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
      goto LABEL_13;
    case 0:
      *a1 = *a2;
      sub_232025384();
      v8 = v7;
      v9 = *(int *)(v7 + 48);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_2321FD8B8();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      *(_QWORD *)((char *)a1 + *(int *)(v8 + 64)) = *(_QWORD *)((char *)a2 + *(int *)(v8 + 64));
      goto LABEL_13;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *assignWithTake for SummaryModelConfiguration.Kind(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  if (a1 == a2)
    return a1;
  sub_232002CEC((uint64_t)a1, type metadata accessor for SummaryModelConfiguration.Kind);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v15 = sub_2321FFE08();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a1, a2, v15);
      sub_2320352C4();
      *(_QWORD *)((char *)a1 + *(int *)(v16 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v16 + 48));
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1:
      v17 = sub_2321FFD78();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a1, a2, v17);
      sub_232035388();
      v19 = *(int *)(v18 + 48);
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      v22 = sub_2321FD8B8();
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      {
        sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
      goto LABEL_15;
    case 0:
      *a1 = *a2;
      sub_232025384();
      v8 = v7;
      v9 = *(int *)(v7 + 48);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_2321FD8B8();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      *(_QWORD *)((char *)a1 + *(int *)(v8 + 64)) = *(_QWORD *)((char *)a2 + *(int *)(v8 + 64));
      goto LABEL_15;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

void sub_2320F96BC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char *v6;
  char *v7;
  uint64_t *v8;
  void *v9;

  sub_2320057B8(319, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    v6 = &v5;
    sub_2321FFD78();
    if (v1 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      v7 = &v4;
      sub_2321FFE08();
      if (v2 <= 0x3F)
      {
        swift_getTupleTypeLayout2();
        v8 = &v3;
        v9 = &unk_232215620;
        swift_initEnumMetadataMultiPayload();
      }
    }
  }
}

uint64_t storeEnumTagSinglePayload for SummaryModelConfiguration.Audience(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2320F9814 + 4 * byte_23221545D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2320F9848 + 4 * byte_232215458[v4]))();
}

uint64_t sub_2320F9848(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2320F9850(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2320F9858);
  return result;
}

uint64_t sub_2320F9864(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2320F986CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2320F9870(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2320F9878(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SummaryModelConfiguration.Audience()
{
  return &type metadata for SummaryModelConfiguration.Audience;
}

uint64_t sub_2320F9894()
{
  return type metadata accessor for SummaryModelConfiguration.Request(0);
}

uint64_t sub_2320F989C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2321FE4A0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_2320F9924()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2388)
  {
    sub_2320F82DC();
    sub_2320F99EC();
    sub_232000590(&qword_2541B2BF8, (uint64_t (*)(uint64_t))sub_2320F82DC, MEMORY[0x24BDB96C0]);
    sub_232000590(&qword_2541B23C0, (uint64_t (*)(uint64_t))sub_2320F99EC, MEMORY[0x24BDB9530]);
    v0 = sub_2322004C8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2388);
  }
}

void sub_2320F99EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B23C8)
  {
    sub_232048E84();
    sub_2320F9B48(255, &qword_2541B3048);
    sub_232000590(&qword_2541B2E50, (uint64_t (*)(uint64_t))sub_232048E84, MEMORY[0x24BDB9970]);
    sub_2320F9BA0(&qword_2541AF308, &qword_2541B3048);
    v0 = sub_232200504();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B23C8);
  }
}

void sub_2320F9AC4(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_232201080();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_2320F9B08(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_2320F9AC4(255, a2);
    result = MEMORY[0x2348FF39C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_2320F9B48(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_232200624();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_2320F9BA0(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    sub_2320F9B48(255, a2);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB9AF8], v4);
    atomic_store(result, a1);
  }
  return result;
}

void sub_2320F9BE0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2480)
  {
    sub_2320F9924();
    sub_232000590(&qword_2541B2380, (uint64_t (*)(uint64_t))sub_2320F9924, MEMORY[0x24BDB9450]);
    v0 = sub_2322005A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2480);
  }
}

uint64_t sub_2320F9C58()
{
  return sub_232000590(&qword_2541B2478, (uint64_t (*)(uint64_t))sub_2320F9BE0, MEMORY[0x24BDB97E0]);
}

void sub_2320F9C74()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2438)
  {
    sub_2320F9D8C(255, &qword_2541B2418, (uint64_t (*)(uint64_t))sub_2320F9BE0, sub_2320F9C58, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB96B0]);
    sub_2320057B8(255, &qword_2541B2560, type metadata accessor for SummaryModelConfiguration.Request, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    sub_2320F9D24();
    v0 = sub_232200570();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2438);
  }
}

unint64_t sub_2320F9D24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B2410;
  if (!qword_2541B2410)
  {
    sub_2320F9D8C(255, &qword_2541B2418, (uint64_t (*)(uint64_t))sub_2320F9BE0, sub_2320F9C58, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB96B0]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB96C0], v1);
    atomic_store(result, (unint64_t *)&qword_2541B2410);
  }
  return result;
}

void sub_2320F9D8C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  if (!*a2)
  {
    v9 = a3(255);
    v10 = type metadata accessor for SummaryModelConfiguration.Request(255);
    v11 = a4();
    v12 = a5(a1, v9, v10, v11);
    if (!v13)
      atomic_store(v12, a2);
  }
}

uint64_t sub_2320F9E0C()
{
  return sub_232000590(&qword_2541B2430, (uint64_t (*)(uint64_t))sub_2320F9C74, MEMORY[0x24BDB9710]);
}

unint64_t sub_2320F9E28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B23A0;
  if (!qword_2541B23A0)
  {
    sub_2320F9D8C(255, &qword_2541B23A8, (uint64_t (*)(uint64_t))sub_2320F9C74, sub_2320F9E0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB94B8]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB94C8], v1);
    atomic_store(result, (unint64_t *)&qword_2541B23A0);
  }
  return result;
}

void sub_2320F9E90()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2428)
  {
    sub_2320F9B48(255, (unint64_t *)&qword_2541B2FD8);
    sub_2320F9BA0(&qword_2541AF2D8, (unint64_t *)&qword_2541B2FD8);
    v0 = sub_232200564();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2428);
  }
}

void sub_2320F9F20()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2398)
  {
    sub_2320F9E90();
    sub_232000590(&qword_2541B2420, (uint64_t (*)(uint64_t))sub_2320F9E90, MEMORY[0x24BDB96F8]);
    v0 = sub_2322004EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2398);
  }
}

uint64_t sub_2320F9FA4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2320F9FC8@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_2320F6C94(a1, a2);
}

_QWORD *sub_2320F9FDC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  v21 = *v1;
  v18 = sub_2321FE38C();
  v4 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2321FE3BC();
  v19 = *(_QWORD *)(v7 - 8);
  v20 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (char *)v1 + OBJC_IVAR____TtC9Summaries31WheelchairSettingModelGenerator_context;
  v11 = sub_2321FE440();
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v10, a1, v11);
  v13 = (void *)sub_2321FE3F8();
  v14 = qword_2541B3FF0;
  v15 = v13;
  if (v14 != -1)
    swift_once();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BE47910], v18);
  swift_bridgeObjectRetain();
  sub_2321FE3B0();

  (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))((uint64_t)v2 + OBJC_IVAR____TtC9Summaries31WheelchairSettingModelGenerator_domain, v9, v20);
  v16 = sub_2320FA1A0(a1);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v11);
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC9Summaries31WheelchairSettingModelGenerator_publisher) = v16;
  return v2;
}

uint64_t sub_2320FA1A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v3 = sub_2321FE440();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320FA9AC();
  v8 = v7;
  v17 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  v11 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v12 = (v5 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v13 + v11, v6, v3);
  *(_QWORD *)(v13 + v12) = v1;
  *(_QWORD *)(v13 + ((v12 + 15) & 0xFFFFFFFFFFFFFFF8)) = v1;
  sub_2320FAA24(0);
  sub_232000590(&qword_2541AF328, (uint64_t (*)(uint64_t))sub_2320FAA24, MEMORY[0x24BDB9DF8]);
  sub_2322006F0();
  sub_232000590(&qword_2541AF358, (uint64_t (*)(uint64_t))sub_2320FA9AC, MEMORY[0x24BDB9E90]);
  v14 = sub_232200774();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v8);
  return v14;
}

uint64_t sub_2320FA34C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  void *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint8_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint8_t *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[4];

  v26 = a3;
  v3 = sub_23220039C();
  v27 = *(_QWORD *)(v3 - 8);
  v28 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2321FE7F4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (uint64_t *)((char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2321FE3D4();
  sub_232016AD8(v30, v30[3]);
  v10 = (void *)sub_2321FE314();
  sub_232016AFC((uint64_t)v30);
  v11 = sub_2320FA63C(v10);
  *v9 = sub_232131214(v11);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BE480E0], v6);
  sub_232200318();
  v12 = sub_232200390();
  v13 = sub_2322012FC();
  if (os_log_type_enabled(v12, v13))
  {
    v24 = v10;
    v14 = swift_slowAlloc();
    v25 = v6;
    v15 = (uint8_t *)v14;
    v16 = swift_slowAlloc();
    v29 = v16;
    *(_DWORD *)v15 = 136446210;
    v23 = v15 + 4;
    v30[0] = v26;
    swift_getMetatypeMetadata();
    v17 = sub_232200F00();
    v30[0] = sub_232013174(v17, v18, &v29);
    sub_232201710();
    v10 = v24;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_231FFB000, v12, v13, "[%{public}s] Submitting a sharable model for wheelchair use", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v16, -1, -1);
    v19 = v15;
    v6 = v25;
    MEMORY[0x2348FF468](v19, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v28);
  sub_2320057B8(0, &qword_2541B57D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE48110], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v20 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_232210D40;
  (*(void (**)(unint64_t, uint64_t *, uint64_t))(v7 + 16))(v21 + v20, v9, v6);
  v30[0] = v21;
  sub_2320F4178(0);
  sub_2322006B4();

  return (*(uint64_t (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_2320FA63C(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  _BOOL4 v11;
  id v13;
  void *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD v21[3];
  id v22;
  uint64_t v23[2];

  v2 = v1;
  v23[1] = *MEMORY[0x24BDAC8D0];
  v4 = sub_23220039C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = 0;
  v8 = objc_msgSend(a1, sel_wheelchairUseWithError_, &v22);
  if (v8)
  {
    v9 = v8;
    v10 = v22;
    v11 = objc_msgSend(v9, sel_wheelchairUse) == (id)2;

    return 2 * v11;
  }
  else
  {
    v13 = v22;
    v14 = (void *)sub_2321FDA5C();

    swift_willThrow();
    sub_232200318();
    v15 = sub_232200390();
    v16 = sub_2322012E4();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      v22 = v2;
      v23[0] = v18;
      *(_DWORD *)v17 = 136446210;
      v21[1] = v17 + 4;
      swift_getMetatypeMetadata();
      v19 = sub_232200F00();
      v22 = (id)sub_232013174(v19, v20, v23);
      sub_232201710();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v15, v16, "[%{public}s] Failed to get wheelchair use, using notSet as default", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v18, -1, -1);
      MEMORY[0x2348FF468](v17, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return 0;
  }
}

uint64_t sub_2320FA884()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC9Summaries31WheelchairSettingModelGenerator_domain;
  v2 = sub_2321FE3BC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  v3 = v0 + OBJC_IVAR____TtC9Summaries31WheelchairSettingModelGenerator_context;
  v4 = sub_2321FE440();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t sub_2320FA90C()
{
  return type metadata accessor for WheelchairSettingModelGenerator();
}

uint64_t type metadata accessor for WheelchairSettingModelGenerator()
{
  uint64_t result;

  result = qword_2541AFB28;
  if (!qword_2541AFB28)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2320FA950()
{
  return swift_retain();
}

uint64_t sub_2320FA964@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC9Summaries31WheelchairSettingModelGenerator_domain;
  v4 = sub_2321FE3BC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void sub_2320FA9AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B3128)
  {
    sub_2320FAA24(255);
    sub_232000590(&qword_2541AF328, (uint64_t (*)(uint64_t))sub_2320FAA24, MEMORY[0x24BDB9DF8]);
    v0 = sub_2322006FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B3128);
  }
}

void sub_2320FAA24(uint64_t a1)
{
  sub_2320057B8(a1, &qword_2541B3088, (uint64_t (*)(uint64_t))sub_2320F4178, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
}

uint64_t sub_2320FAA40()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_2321FE440();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_2320FAAB4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_2321FE440() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_2320FA34C(v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t type metadata accessor for Summaries_SharingVersionMismatchTileView()
{
  uint64_t result;

  result = qword_2541AF5F0;
  if (!qword_2541AF5F0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2320FAB4C()
{
  return swift_initClassMetadata2();
}

id sub_2320FAB88(void *a1, double a2, double a3, double a4, double a5)
{
  objc_super v10;

  v10.receiver = a1;
  v10.super_class = (Class)type metadata accessor for Summaries_SharingVersionMismatchTileView();
  return objc_msgSendSuper2(&v10, sel_initWithFrame_, a2, a3, a4, a5);
}

id sub_2320FABF8(void *a1, uint64_t a2, uint64_t a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for Summaries_SharingVersionMismatchTileView();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_2320FAC40()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Summaries_SharingVersionMismatchTileView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2320FAC74()
{
  return type metadata accessor for Summaries_SharingVersionMismatchTileView();
}

uint64_t sub_2320FAC7C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2320FAC88(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_2320FAD04()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2320FAD10(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ECGSnidgetFeedItemModelProvider()
{
  uint64_t result;

  result = qword_2541B2578;
  if (!qword_2541B2578)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2320FADCC(uint64_t a1)
{
  uint64_t result;

  result = sub_232000590(&qword_255F9CF38, (uint64_t (*)(uint64_t))type metadata accessor for ECGSnidgetFeedItemModelProvider, (uint64_t)&unk_232215804);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_2320FAE08(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  void *v38;
  void *v39;
  id v40;
  unint64_t v41;
  unint64_t v42;
  void *v43;
  id v44;
  void *v45;
  uint64_t v46;
  _BYTE *v47;
  _BYTE *v48;
  unsigned int v49;
  id v50;
  void *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  _QWORD *v65;
  NSObject *v66;
  os_log_type_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  id v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  _QWORD *inited;
  void *v84;
  id v85;
  id v86;
  id v87;
  id v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  void (*v99)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v100;
  void (*v101)(char *, char *, uint64_t);
  char *v102;
  id v103;
  id v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  id v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _BYTE *v117;
  void (*v118)(char *, uint64_t);
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _BYTE *v124;
  uint64_t v125;
  id v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  id v132;
  uint64_t v133;
  _QWORD *v134;
  _QWORD *v135;
  char *v136;
  char *v137;
  char *v138;
  char *v139;
  char *v140;
  char *v141;
  uint64_t v142;
  char *v143;
  char *v144;
  _QWORD *v145;
  _BYTE *v146;
  char *v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152[2];
  uint64_t v153;

  v5 = (uint64_t)v3;
  v150 = a2;
  v151 = a3;
  v7 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x24BDAC7A8](v7);
  v146 = (char *)&v130 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ECGSnidgetFeedItemModelProvider();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v130 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v135 = (_QWORD *)sub_23220039C();
  v134 = (_QWORD *)*(v135 - 1);
  MEMORY[0x24BDAC7A8](v135);
  v136 = (char *)&v130 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  MEMORY[0x24BDAC7A8](v13);
  v149 = (char *)&v130 - v14;
  v15 = sub_2321FDC6C();
  MEMORY[0x24BDAC7A8](v15);
  v143 = (char *)&v130 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, qword_2541B78E0, (void (*)(uint64_t))MEMORY[0x24BE47DF8]);
  MEMORY[0x24BDAC7A8](v17);
  v148 = (char *)&v130 - v18;
  sub_2320002B4(0, &qword_2541B2368, (void (*)(uint64_t))MEMORY[0x24BE445A8]);
  MEMORY[0x24BDAC7A8](v19);
  v140 = (char *)&v130 - v20;
  sub_2320002B4(0, (unint64_t *)&qword_2541B2838, (void (*)(uint64_t))MEMORY[0x24BDCC5A8]);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v139 = (char *)&v130 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v138 = (char *)&v130 - v24;
  sub_2320002B4(0, &qword_2541B2930, (void (*)(uint64_t))MEMORY[0x24BE42FE0]);
  MEMORY[0x24BDAC7A8](v25);
  v147 = (char *)&v130 - v26;
  v142 = sub_2321FD9F0();
  v145 = *(_QWORD **)(v142 - 8);
  v27 = MEMORY[0x24BDAC7A8](v142);
  v137 = (char *)&v130 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v141 = (char *)&v130 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v144 = (char *)&v130 - v31;
  v32 = (void *)objc_opt_self();
  v33 = (void *)*v3;
  v34 = objc_msgSend(v32, sel_sharedInstanceForHealthStore_, *v3);
  if (!v34)
  {
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v35 = v34;
  v36 = objc_msgSend((id)objc_opt_self(), sel_electrocardiogramType);
  v37 = objc_msgSend(v35, sel_displayTypeForObjectType_, v36);

  if (!v37)
  {
    sub_232000300();
    swift_allocError();
    swift_willThrow();
    return;
  }
  sub_2320846B0(a1);
  if (v4)
  {

    return;
  }
  v39 = v38;
  if (!v38)
  {
LABEL_16:
    v53 = sub_2321FE65C();
    v54 = (uint64_t)v148;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v148, 1, 1, v53);
    v55 = sub_2321FD8B8();
    v56 = (uint64_t)v149;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v149, 1, 1, v55);
    v57 = v150;
    swift_bridgeObjectRetain();
    v58 = v146;
    sub_2320D71E8(0, v54, v57, v56, v146);
    sub_2321FF208();
    v59 = sub_2321FEF5C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v147, 1, 1, v59);
    v60 = v37;
    v61 = sub_2321FF1FC();
    sub_232045B4C(0);
    v63 = v151;
    sub_23200054C((uint64_t)v58, v151 + *(int *)(v62 + 52), type metadata accessor for SnidgetFeedItemMetadata);

    *(_QWORD *)v63 = v61;
    *(_QWORD *)(v63 + 8) = 0;
    *(_BYTE *)(v63 + 16) = 1;
    sub_232002CEC((uint64_t)v58, type metadata accessor for SnidgetFeedItemMetadata);
    return;
  }
  if (!objc_msgSend(v38, sel_hasAlgorithmVersionRawValue)
    || !objc_msgSend(v39, sel_hasClassificationRawValue)
    || !objc_msgSend(v39, sel_hasTimestampData))
  {

    goto LABEL_16;
  }
  v133 = 0;
  v40 = objc_msgSend(v39, sel_algorithmVersionRawValue);
  v41 = (unint64_t)objc_msgSend(v39, sel_classificationRawValue);
  if ((v41 & 0x8000000000000000) != 0)
  {
LABEL_27:
    sub_23220195C();
    __break(1u);
    return;
  }
  v42 = v41;
  v43 = (void *)objc_opt_self();
  v44 = objc_msgSend(v43, sel__localizedClassification_withActiveAlgorithmVersion_, v42, v40);
  if (v44)
  {
    v45 = v44;
    v46 = sub_232200EC4();
    v48 = v47;

    v49 = objc_msgSend(v39, sel_hasAverageHeartRate);
    v132 = v39;
    v146 = v48;
    v136 = (char *)v46;
    if (!v49)
    {
      v52 = 0;
      goto LABEL_20;
    }
    v50 = objc_msgSend(v39, sel_averageHeartRate);
    if (v50)
    {
      v51 = v50;
      v52 = (_QWORD *)sub_232201470();

LABEL_20:
      v135 = v52;
      v79 = objc_msgSend(v43, sel_hk_localizedAverageBPM_, v52);
      v130 = sub_232200EC4();

      v80 = v5 + *(int *)(v9 + 20);
      v81 = *(int *)(type metadata accessor for SnidgetFeedItemGeneratorRequest(0) + 32);
      v131 = v80;
      v82 = *(void **)(v80 + v81);
      type metadata accessor for MostRecentSampleSnidgetStringBuilder();
      inited = (_QWORD *)swift_initStackObject();
      inited[2] = v33;
      v84 = (void *)objc_opt_self();
      v85 = v82;
      v86 = v33;
      v87 = objc_msgSend(v84, sel_sharedInstanceForHealthStore_, v86);
      inited[4] = v87;
      if (!v82)
      {
        v88 = v87;
        v85 = objc_msgSend(v88, sel_createHKUnitPreferenceController);

      }
      inited[3] = v85;
      v89 = v144;
      SnidgetStringBuilder.makePrimaryAttributedString(localizedString:)();
      swift_bridgeObjectRelease();
      v134 = inited;
      v90 = v141;
      SnidgetStringBuilder.makeSupplementaryAttributedString(localizedString:)();
      swift_bridgeObjectRelease();
      sub_2321FF208();
      sub_232000448();
      v92 = *(int *)(v91 + 48);
      v146 = v37;
      objc_msgSend(v132, sel_timestampData);
      v93 = (id)HKDecodeDateForValue();
      v94 = v147;
      sub_2321FDC30();

      v94[v92] = 1;
      v95 = *MEMORY[0x24BE42FD8];
      v96 = sub_2321FEF5C();
      v97 = *(_QWORD *)(v96 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v97 + 104))(v94, v95, v96);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v94, 0, 1, v96);
      v147 = (char *)sub_2321FF1FC();
      v98 = v145;
      v99 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v145[7];
      v100 = v142;
      v99(v138, 1, 1, v142);
      v101 = (void (*)(char *, char *, uint64_t))v98[2];
      v101(v137, v89, v100);
      v102 = v139;
      v101(v139, v90, v100);
      v99(v102, 0, 1, v100);
      v152[0] = 0x5F74656764696E53;
      v152[1] = 0xE800000000000000;
      v103 = *(id *)(v131 + 16);
      v104 = objc_msgSend(v103, sel_description);
      sub_232200EC4();

      sub_232200F48();
      swift_bridgeObjectRelease();
      v105 = v140;
      sub_2321FF58C();
      swift_bridgeObjectRelease();
      v106 = sub_2321FF5A4();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 56))(v105, 0, 1, v106);
      sub_2321FF6C4();
      swift_allocObject();
      v107 = sub_2321FF6B8();
      v108 = v132;
      objc_msgSend(v132, sel_timestampData);
      v109 = (id)HKDecodeDateForValue();
      sub_2321FDC30();

      v110 = (uint64_t)v148;
      sub_2321FE62C();
      v111 = sub_2321FE65C();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 56))(v110, 0, 1, v111);
      v112 = sub_2321FD8B8();
      v113 = (uint64_t)v149;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 56))(v149, 1, 1, v112);
      sub_232045B4C(0);
      v116 = v150;
      v115 = v151;
      v117 = (_BYTE *)(v151 + *(int *)(v114 + 52));
      swift_bridgeObjectRetain();
      sub_2320D71E8(1, v110, v116, v113, v117);
      swift_release();

      *(_QWORD *)v115 = v147;
      *(_QWORD *)(v115 + 8) = v107;
      *(_BYTE *)(v115 + 16) = 1;
      v118 = (void (*)(char *, uint64_t))v145[1];
      v118(v90, v100);
      v118(v144, v100);
      return;
    }
    goto LABEL_26;
  }
  v64 = v136;
  sub_232200318();
  sub_23200054C(v5, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ECGSnidgetFeedItemModelProvider);
  v65 = v39;
  v66 = sub_232200390();
  v67 = sub_2322012E4();
  if (os_log_type_enabled(v66, v67))
  {
    v68 = swift_slowAlloc();
    v145 = v65;
    v69 = v68;
    v144 = (char *)swift_slowAlloc();
    v152[0] = (uint64_t)v144;
    *(_DWORD *)v69 = 136315394;
    v70 = sub_232085268(*v11, *((unsigned __int8 *)v11 + *(int *)(v9 + 20) + 8));
    v153 = sub_232013174(v70, v71, v152);
    sub_232201710();
    swift_bridgeObjectRelease();
    sub_232002CEC((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ECGSnidgetFeedItemModelProvider);
    *(_WORD *)(v69 + 12) = 2080;
    v143 = (char *)(v69 + 14);
    v72 = v145;
    v73 = objc_msgSend(v72, sel_description);
    v74 = sub_232200EC4();
    v76 = v75;

    v153 = sub_232013174(v74, v76, v152);
    sub_232201710();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_231FFB000, v66, v67, "[%s]: unable to create primary string for ECG with currentValue=%s", (uint8_t *)v69, 0x16u);
    v77 = v144;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v77, -1, -1);
    v78 = v69;
    v65 = v145;
    MEMORY[0x2348FF468](v78, -1, -1);

    ((void (*)(char *, _QWORD *))v134[1])(v136, v135);
  }
  else
  {
    sub_232002CEC((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ECGSnidgetFeedItemModelProvider);

    ((void (*)(char *, _QWORD *))v134[1])(v64, v135);
  }
  v119 = sub_2321FE65C();
  v120 = (uint64_t)v148;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 56))(v148, 1, 1, v119);
  v121 = sub_2321FD8B8();
  v122 = (uint64_t)v149;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v121 - 8) + 56))(v149, 1, 1, v121);
  v123 = v150;
  swift_bridgeObjectRetain();
  v124 = v146;
  sub_2320D71E8(0, v120, v123, v122, v146);
  sub_2321FF208();
  v125 = sub_2321FEF5C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v125 - 8) + 56))(v147, 1, 1, v125);
  v126 = v37;
  v127 = sub_2321FF1FC();
  sub_232045B4C(0);
  v129 = v151;
  sub_23200054C((uint64_t)v124, v151 + *(int *)(v128 + 52), type metadata accessor for SnidgetFeedItemMetadata);

  *(_QWORD *)v129 = v127;
  *(_QWORD *)(v129 + 8) = 0;
  *(_BYTE *)(v129 + 16) = 1;
  sub_232002CEC((uint64_t)v124, type metadata accessor for SnidgetFeedItemMetadata);
}

void sub_2320FBC1C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_2320FAE08(*(void **)a1, *(_QWORD *)(a1 + 16), a2);
}

uint64_t sub_2320FBC3C()
{
  sub_2320FC024();
  return sub_232201BD8();
}

uint64_t sub_2320FBC64()
{
  sub_2320FC024();
  return sub_232201BE4();
}

uint64_t sub_2320FBC8C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_2320FBFCC();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232016AD8(a1, a1[3]);
  sub_2320FC024();
  sub_232201BC0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_2320FBD50()
{
  unint64_t result;

  result = qword_2541B3C80[0];
  if (!qword_2541B3C80[0])
  {
    result = MEMORY[0x2348FF39C](&unk_2322157B4, &type metadata for ECGSnidgetVisualizationView);
    atomic_store(result, qword_2541B3C80);
  }
  return result;
}

uint64_t sub_2320FBD94(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_2320FBF78();
  v3 = v2;
  sub_2321FEDDC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
}

uint64_t sub_2320FBDD0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2320FBDE0()
{
  return sub_2320FBE48(&qword_2541B7400, &qword_2541B7408, (uint64_t (*)(uint64_t, _QWORD *))type metadata accessor for SnidgetHarnessPluginView.ActionHandler, (uint64_t)&unk_2322120D8);
}

uint64_t sub_2320FBE14()
{
  return sub_2320FBE48(&qword_2541B3678, &qword_2541B3680, (uint64_t (*)(uint64_t, _QWORD *))type metadata accessor for SnidgetHarnessPluginView, (uint64_t)&unk_232212090);
}

uint64_t sub_2320FBE48(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_2320FBE88(255, a2, a3);
    result = MEMORY[0x2348FF39C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_2320FBE88(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD v9[8];

  if (!*a2)
  {
    sub_231FFFDE4(255, &qword_2541B2998, MEMORY[0x24BE43750]);
    v9[0] = v6;
    v9[1] = &type metadata for ECGSnidgetVisualizationView;
    v9[2] = sub_23200409C();
    v9[3] = sub_232045C7C();
    v9[4] = sub_231FFFE84(&qword_2541B2970, MEMORY[0x24BE43748]);
    v9[5] = sub_231FFFE84((unint64_t *)&unk_2541B2960, MEMORY[0x24BE43740]);
    v9[6] = sub_232045CC0();
    v9[7] = sub_232045D04();
    v7 = a3(a1, v9);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_2320FBF78()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9EAC8)
  {
    v0 = sub_2321FEE0C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9EAC8);
  }
}

void sub_2320FBFCC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9EAD0)
  {
    sub_2320FC024();
    v0 = sub_232201AA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9EAD0);
  }
}

unint64_t sub_2320FC024()
{
  unint64_t result;

  result = qword_255F9EAD8;
  if (!qword_255F9EAD8)
  {
    result = MEMORY[0x2348FF39C](&unk_2322158AC, &type metadata for ECGSnidgetVisualizationView.ViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255F9EAD8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ECGSnidgetVisualizationView.ViewModel.CodingKeys()
{
  return &type metadata for ECGSnidgetVisualizationView.ViewModel.CodingKeys;
}

ValueMetadata *type metadata accessor for ECGSnidgetVisualizationView.ViewModel()
{
  return &type metadata for ECGSnidgetVisualizationView.ViewModel;
}

ValueMetadata *type metadata accessor for ECGSnidgetVisualizationView()
{
  return &type metadata for ECGSnidgetVisualizationView;
}

unint64_t sub_2320FC09C()
{
  unint64_t result;

  result = qword_255F9EAE0;
  if (!qword_255F9EAE0)
  {
    result = MEMORY[0x2348FF39C](&unk_23221585C, &type metadata for ECGSnidgetVisualizationView.ViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255F9EAE0);
  }
  return result;
}

unint64_t sub_2320FC0E4()
{
  unint64_t result;

  result = qword_255F9EAE8;
  if (!qword_255F9EAE8)
  {
    result = MEMORY[0x2348FF39C](&unk_232215884, &type metadata for ECGSnidgetVisualizationView.ViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255F9EAE8);
  }
  return result;
}

uint64_t sub_2320FC128(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v12 = *a2;
  v4 = sub_2321FFB5C();
  MEMORY[0x24BDAC7A8](v4);
  sub_2320FCA8C();
  v11 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[2] = *(_QWORD *)((char *)a2 + OBJC_IVAR____TtC9Summaries42SharedSummaryTransactionChangesInputSignal_observer + 8);
  v10[1] = swift_getObjectType();
  sub_2321FFB50();
  v13 = a1;
  sub_2320FCB40();
  sub_232000590(&qword_255F9EC78, (uint64_t (*)(uint64_t))sub_2320FCB40, MEMORY[0x24BE47220]);
  sub_2320FCB94();
  sub_232000590(&qword_2541B70F8, (uint64_t (*)(uint64_t))sub_2320EDDC0, MEMORY[0x24BE48630]);
  swift_bridgeObjectRetain();
  sub_2321FFBB0();
  v13 = a2;
  sub_232000590(qword_255F9EC90, (uint64_t (*)(uint64_t))type metadata accessor for SharedSummaryTransactionChangesInputSignal, (uint64_t)&unk_232215A1C);
  sub_2321FFAD8();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v11);
}

void sub_2320FC2F0(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t aBlock;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, void *, uint64_t, void *);
  void *v20;
  uint64_t (*v21)();
  uint64_t v22;

  if (*a1)
    objc_msgSend(*(id *)(a2 + 24), sel_stopQuery_);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a3;
  *(_QWORD *)(v8 + 24) = a4;
  v9 = objc_allocWithZone(MEMORY[0x24BDD3F48]);
  v21 = sub_2320FCC9C;
  v22 = v8;
  v10 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v18 = 1107296256;
  v19 = sub_2320FC4A8;
  v20 = &unk_2501033A0;
  v11 = _Block_copy(&aBlock);
  swift_retain();
  v12 = objc_msgSend(v9, sel_initWithHandler_, v11);
  _Block_release(v11);
  swift_release();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a3;
  *(_QWORD *)(v13 + 24) = a4;
  v21 = sub_2320FCC9C;
  v22 = v13;
  aBlock = v10;
  v18 = 1107296256;
  v19 = sub_2320FC4A8;
  v20 = &unk_2501033F0;
  v14 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_setUpdateHandler_, v14);
  _Block_release(v14);
  v15 = *a1;
  v16 = v12;

  *a1 = v12;
  objc_msgSend(*(id *)(a2 + 24), sel_executeQuery_, v16);

}

uint64_t sub_2320FC4A8(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  void (*v7)(id, uint64_t, void *);
  id v8;
  id v9;

  v5 = a3;
  v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_2320EDDC0();
    v5 = sub_232201038();
  }
  swift_retain();
  v8 = a2;
  v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2320FC538()
{
  uint64_t v0;

  swift_release();

  return swift_deallocClassInstance();
}

void sub_2320FC564()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  void **v2;
  os_unfair_lock_s *v3;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)v0 + 16);
  v2 = (void **)&v1[4];
  v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_2320FCC5C(v2);
  os_unfair_lock_unlock(v3);
}

void sub_2320FC5C0()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  void **v2;
  os_unfair_lock_s *v3;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)v0 + 16);
  v2 = (void **)&v1[4];
  v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_2320FCC14(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_2320FC604()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC9Summaries42SharedSummaryTransactionChangesInputSignal_identifier;
  v2 = sub_2321FFB5C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();
  sub_232016AFC(v0 + OBJC_IVAR____TtC9Summaries42SharedSummaryTransactionChangesInputSignal_changesObserver);
  return swift_deallocClassInstance();
}

uint64_t sub_2320FC674()
{
  return type metadata accessor for SharedSummaryTransactionChangesInputSignal();
}

uint64_t type metadata accessor for SharedSummaryTransactionChangesInputSignal()
{
  uint64_t result;

  result = qword_255F9EB18;
  if (!qword_255F9EB18)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2320FC6B8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2321FFB5C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for SharedSummaryTransactionChangesInputSignal.QueryObserver()
{
  return objc_opt_self();
}

void **initializeBufferWithCopyOfBuffer for SharedSummaryTransactionChangesInputSignal.QueryObserver.State(void **a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void **assignWithCopy for SharedSummaryTransactionChangesInputSignal.QueryObserver.State(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a1;
  v4 = *a2;
  *a1 = *a2;
  v5 = v4;

  return a1;
}

_QWORD *initializeWithTake for SharedSummaryTransactionChangesInputSignal.QueryObserver.State(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

void **assignWithTake for SharedSummaryTransactionChangesInputSignal.QueryObserver.State(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for SharedSummaryTransactionChangesInputSignal.QueryObserver.State(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SharedSummaryTransactionChangesInputSignal.QueryObserver.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SharedSummaryTransactionChangesInputSignal.QueryObserver.State()
{
  return &type metadata for SharedSummaryTransactionChangesInputSignal.QueryObserver.State;
}

uint64_t sub_2320FC8B0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC9Summaries42SharedSummaryTransactionChangesInputSignal_identifier;
  v4 = sub_2321FFB5C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_2320FC8F8()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_2320FC92C()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t (*)(_QWORD *), uint64_t, uint64_t, uint64_t);

  v1 = *v0;
  v2 = (_QWORD *)(*v0 + OBJC_IVAR____TtC9Summaries42SharedSummaryTransactionChangesInputSignal_changesObserver);
  v3 = v2[3];
  v4 = v2[4];
  sub_232016AD8(v2, v3);
  v5 = *(void (**)(uint64_t (*)(_QWORD *), uint64_t, uint64_t, uint64_t))(v4 + 8);
  swift_retain();
  v5(sub_2320FCC0C, v1, v3, v4);
  return swift_release();
}

uint64_t sub_2320FC99C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC9Summaries42SharedSummaryTransactionChangesInputSignal_changesObserver);
  v2 = v1[3];
  v3 = v1[4];
  sub_232016AD8(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
}

uint64_t sub_2320FC9F4()
{
  sub_232000590(qword_255F9EC90, (uint64_t (*)(uint64_t))type metadata accessor for SharedSummaryTransactionChangesInputSignal, (uint64_t)&unk_232215A1C);
  return sub_2321FF910();
}

uint64_t sub_2320FCA34()
{
  return sub_232000590(&qword_255F9EC58, (uint64_t (*)(uint64_t))type metadata accessor for SharedSummaryTransactionChangesInputSignal, (uint64_t)&unk_2322159F4);
}

uint64_t sub_2320FCA60()
{
  return sub_232000590(&qword_255F9EC60, (uint64_t (*)(uint64_t))sub_2320FCA8C, MEMORY[0x24BE471C8]);
}

void sub_2320FCA8C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9EC68)
  {
    sub_2320FCB40();
    sub_232000590(&qword_255F9EC78, (uint64_t (*)(uint64_t))sub_2320FCB40, MEMORY[0x24BE47220]);
    sub_2320FCB94();
    sub_232000590(&qword_2541B70F8, (uint64_t (*)(uint64_t))sub_2320EDDC0, MEMORY[0x24BE48630]);
    v0 = sub_2321FFBC8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9EC68);
  }
}

void sub_2320FCB40()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9EC70)
  {
    sub_2320EDDC0();
    v0 = sub_232201080();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9EC70);
  }
}

unint64_t sub_2320FCB94()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_255F9EC80;
  if (!qword_255F9EC80)
  {
    sub_2320FCB40();
    v2 = v1;
    v3 = sub_232000590(&qword_255F9EC88, (uint64_t (*)(uint64_t))sub_2320EDDC0, MEMORY[0x24BEE5BE0]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BEE12C0], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_255F9EC80);
  }
  return result;
}

uint64_t sub_2320FCC0C(_QWORD *a1)
{
  _QWORD *v1;

  return sub_2320FC128(a1, v1);
}

void sub_2320FCC14(void **a1)
{
  uint64_t v1;
  void *v3;

  v3 = *a1;
  if (*a1)
  {
    objc_msgSend(*(id *)(v1 + 24), sel_stopQuery_, v3);

  }
  *a1 = 0;
}

void sub_2320FCC5C(void **a1)
{
  uint64_t *v1;

  sub_2320FC2F0(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_2320FCC78()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2320FCCA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2320FCCB0()
{
  return swift_release();
}

uint64_t sub_2320FCCB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;

  v3 = *(void (**)(uint64_t))(v2 + 16);
  if (a2)
    v4 = a2;
  else
    v4 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  v3(v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2320FCD10@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v6;
  id v7;
  id v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (objc_msgSend(a1, sel_hasObjectTypeIdentifier)
    && (v6 = (void *)objc_opt_self(),
        v7 = objc_msgSend(a1, sel_objectTypeIdentifier),
        v8 = objc_msgSend(v6, sel__typeWithIdentifier_, v7),
        v7,
        v8))
  {
    v9 = HKCodableSummaryTrendTileViewModel.coveredDateRange.getter();

    *(_QWORD *)a3 = v8;
    *(_BYTE *)(a3 + 8) = v9;
    v10 = type metadata accessor for TrendNotificationModel();
    v11 = a3 + *(int *)(v10 + 24);
    v12 = sub_2321FE7DC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, a2, v12);
    v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
    v14 = a3;
    v15 = 0;
    v16 = v10;
  }
  else
  {

    v17 = sub_2321FE7DC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a2, v17);
    v16 = type metadata accessor for TrendNotificationModel();
    v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
    v14 = a3;
    v15 = 1;
  }
  return v13(v14, v15, 1, v16);
}

uint64_t sub_2320FCE4C()
{
  id *v0;
  id *v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  id v7;
  _BYTE v9[16];
  uint64_t v10;
  unint64_t v11;

  v1 = v0;
  v2 = sub_2321FDCC0();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = 0;
  v11 = 0xE000000000000000;
  sub_23220189C();
  swift_bridgeObjectRelease();
  v10 = 0x203A646E657274;
  v11 = 0xE700000000000000;
  v7 = objc_msgSend(*v0, sel_identifier);
  sub_232200EC4();

  sub_232200F48();
  swift_bridgeObjectRelease();
  sub_232200F48();
  v9[15] = *((_BYTE *)v1 + 8);
  sub_232200F00();
  sub_232200F48();
  swift_bridgeObjectRelease();
  sub_232200F48();
  type metadata accessor for TrendNotificationModel();
  sub_2321FE794();
  sub_232200F48();
  swift_bridgeObjectRelease();
  sub_232200F48();
  sub_2321FE7D0();
  sub_232000590(qword_2541AF0C0, v3, MEMORY[0x24BDCEAB8]);
  sub_232201AB8();
  sub_232200F48();
  swift_bridgeObjectRelease();
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v2);
  return v10;
}

BOOL sub_2320FD054(id *a1, id *a2)
{
  return (sub_2320FD0AC(a2, a1) & 1) == 0;
}

BOOL sub_2320FD07C(id *a1, id *a2)
{
  return (sub_2320FD0AC(a1, a2) & 1) == 0;
}

uint64_t sub_2320FD098(id *a1, id *a2)
{
  return sub_2320FD0AC(a2, a1);
}

uint64_t sub_2320FD0AC(id *a1, id *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char *v38;
  void (*v39)(char *, uint64_t);
  char *v40;
  uint64_t v41;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  id *v46;

  v4 = sub_2321FDCC0();
  v44 = *(_QWORD *)(v4 - 8);
  v45 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v43 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v43 - v7;
  v46 = a1;
  v9 = *a1;
  v10 = objc_msgSend(*a1, sel_identifier);
  v11 = sub_232200EC4();
  v13 = v12;

  v14 = a2;
  v15 = *a2;
  v16 = objc_msgSend(*a2, sel_identifier);
  v17 = sub_232200EC4();
  v19 = v18;

  if (v11 == v17 && v13 == v19)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v21 = sub_232201ADC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0)
    {
      v22 = objc_msgSend(v9, sel_identifier);
      v23 = sub_232200EC4();
      v25 = v24;

      v26 = objc_msgSend(v15, sel_identifier);
      v27 = sub_232200EC4();
      v29 = v28;

      if (v23 != v27 || v25 != v29)
      {
        v30 = sub_232201ADC();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v30 & 1;
      }
      swift_bridgeObjectRelease_n();
      goto LABEL_9;
    }
  }
  v31 = *((unsigned __int8 *)v46 + 8);
  v32 = *((unsigned __int8 *)v14 + 8);
  v33 = sub_23220021C();
  v35 = v34;
  if (v33 == sub_23220021C() && v35 == v36)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_21;
  }
  v37 = sub_232201ADC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v37 & 1) != 0)
    goto LABEL_21;
  if (v31 != 5)
  {
    if (v31 == 4 && v32 == 5)
    {
      v30 = 1;
      return v30 & 1;
    }
LABEL_21:
    type metadata accessor for TrendNotificationModel();
    sub_2321FE7D0();
    v38 = v43;
    sub_2321FE7D0();
    v30 = MEMORY[0x2348FAE18](v8, v38);
    v39 = *(void (**)(char *, uint64_t))(v44 + 8);
    v40 = v38;
    v41 = v45;
    v39(v40, v45);
    v39(v8, v41);
    return v30 & 1;
  }
  if (v32 != 4)
    goto LABEL_21;
LABEL_9:
  v30 = 0;
  return v30 & 1;
}

uint64_t type metadata accessor for TrendNotificationModel()
{
  uint64_t result;

  result = qword_255F9ECF0;
  if (!qword_255F9ECF0)
    return swift_getSingletonMetadata();
  return result;
}

char *sub_2320FD3E8(char *a1, char **a2, uint64_t a3)
{
  int v3;
  char *v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  char *v11;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v5 = a1;
    a1[8] = *((_BYTE *)a2 + 8);
    v6 = *(int *)(a3 + 24);
    v7 = &a1[v6];
    v8 = (uint64_t)a2 + v6;
    v9 = sub_2321FE7DC();
    v10 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    v11 = v4;
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_2320FD484(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  v4 = (char *)a1 + *(int *)(a2 + 24);
  v5 = sub_2321FE7DC();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_2320FD4CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  id v10;

  v4 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = *(int *)(a3 + 24);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_2321FE7DC();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  v10 = v4;
  v9(v6, v7, v8);
  return a1;
}

uint64_t sub_2320FD540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v9 = *(int *)(a3 + 24);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_2321FE7DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t sub_2320FD5B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_2321FE7DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_2320FD61C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2321FE7DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_2320FD690()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2320FD69C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2321FE7DC();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_2320FD718()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2320FD724(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_2321FE7DC();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_2320FD798()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2321FE7DC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2320FD818()
{
  return sub_232000590(&qword_255F9ED30, (uint64_t (*)(uint64_t))type metadata accessor for TrendNotificationModel, (uint64_t)&unk_232215AC0);
}

uint64_t sub_2320FD844(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  char v23;
  uint64_t v25;

  v4 = type metadata accessor for TrendNotificationModel();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v25 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v25 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v25 - v14;
  sub_232044250();
  v16 = sub_2322016A4();
  sub_2320FDA64(a1, (uint64_t)v15);
  sub_2320FDA64(a2, (uint64_t)v13);
  if ((v16 & 1) != 0)
  {
    v17 = sub_23220021C();
    v19 = v18;
    if (v17 == sub_23220021C() && v19 == v20)
    {
      swift_bridgeObjectRelease_n();
      sub_2320FDAA8((uint64_t)v13);
      sub_2320FDAA8((uint64_t)v15);
      sub_2320FDA64(a1, (uint64_t)v10);
      sub_2320FDA64(a2, (uint64_t)v7);
    }
    else
    {
      v22 = sub_232201ADC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2320FDAA8((uint64_t)v13);
      sub_2320FDAA8((uint64_t)v15);
      sub_2320FDA64(a1, (uint64_t)v10);
      sub_2320FDA64(a2, (uint64_t)v7);
      v23 = 0;
      if ((v22 & 1) == 0)
        goto LABEL_11;
    }
    v23 = MEMORY[0x2348FB940](&v10[*(int *)(v4 + 24)], &v7[*(int *)(v4 + 24)]);
  }
  else
  {
    sub_2320FDAA8((uint64_t)v13);
    sub_2320FDAA8((uint64_t)v15);
    sub_2320FDA64(a1, (uint64_t)v10);
    sub_2320FDA64(a2, (uint64_t)v7);
    v23 = 0;
  }
LABEL_11:
  sub_2320FDAA8((uint64_t)v7);
  sub_2320FDAA8((uint64_t)v10);
  return v23 & 1;
}

uint64_t sub_2320FDA64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TrendNotificationModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2320FDAA8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TrendNotificationModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2320FDAE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC9Summaries37SummaryChartFeedItemGeneratorPipeline_context;
  v2 = sub_2321FE440();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC9Summaries37SummaryChartFeedItemGeneratorPipeline_domain;
  v4 = sub_2321FE3BC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t sub_2320FDB64()
{
  return type metadata accessor for SummaryChartFeedItemGeneratorPipeline();
}

uint64_t type metadata accessor for SummaryChartFeedItemGeneratorPipeline()
{
  uint64_t result;

  result = qword_2541B4818;
  if (!qword_2541B4818)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2320FDBA8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2321FE440();
  if (v1 <= 0x3F)
  {
    result = sub_2321FE3BC();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_2320FDC48()
{
  return swift_retain();
}

uint64_t sub_2320FDC54@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC9Summaries37SummaryChartFeedItemGeneratorPipeline_domain;
  v4 = sub_2321FE3BC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_2320FDC9C(void *a1)
{
  void **v1;
  void **v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t (*v19)(void);
  uint64_t v20;
  _QWORD v22[2];

  v2 = v1;
  sub_232101444();
  v5 = v4;
  v22[0] = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = (void *)sub_2322011C4();
  v10 = sub_2321D5890(a1);
  v12 = v11;

  v22[1] = sub_2320FED28(v10, v12);
  v13 = v2[4];
  v14 = swift_allocObject();
  v15 = *((_OWORD *)v2 + 1);
  *(_OWORD *)(v14 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v14 + 32) = v15;
  *(_QWORD *)(v14 + 48) = v2[4];
  *(_QWORD *)(v14 + 56) = v10;
  *(_QWORD *)(v14 + 64) = v12;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_23210154C;
  *(_QWORD *)(v16 + 24) = v14;
  v17 = v8;
  swift_retain();
  swift_retain();
  v18 = v13;
  swift_bridgeObjectRetain();
  sub_23220060C();
  v19 = MEMORY[0x24BDB9AE0];
  sub_23202ED00(0, (unint64_t *)&qword_2541B3040, MEMORY[0x24BEE4AE0] + 8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_2320057B8(0, &qword_255F9C3D0, (uint64_t (*)(uint64_t))type metadata accessor for SummaryAlertContentState, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  sub_232101BDC(0, &qword_255F9C3C8, &qword_255F9C3D0, (uint64_t (*)(uint64_t))type metadata accessor for SummaryAlertContentState, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v19);
  sub_23202CC44();
  sub_23202D354();
  sub_232200828();
  swift_release();
  swift_release();
  sub_232000590(&qword_255F9ED48, (uint64_t (*)(uint64_t))sub_232101444, MEMORY[0x24BDB98F0]);
  v20 = sub_232200774();
  (*(void (**)(char *, uint64_t))(v22[0] + 8))(v7, v5);
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_2320FDEF0@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  char v34;
  unint64_t v35;
  id v36;
  BOOL v37;
  unint64_t v38;
  void *v39;
  id v40;
  unsigned int v41;
  id v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  char *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  unint64_t v77;
  id v78;
  unint64_t v79;
  uint64_t v80;
  int *v81;
  uint64_t v82;

  sub_2320057B8(0, &qword_2541B69C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v66 = (uint64_t)&v61 - v6;
  v7 = sub_2321FDC6C();
  v64 = *(_QWORD *)(v7 - 8);
  v65 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v68 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for SummaryAlertContentState();
  v10 = *((_QWORD *)v9 - 1);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v63 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v61 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v61 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v61 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v23 = (uint64_t *)((char *)&v61 - v22);
  v72 = a1;
  v24 = sub_2321016FC(a1);
  if (!v24)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v10 + 56))(a2, 1, 1, v9);
  v71 = v10;
  v62 = a2;
  v80 = v2;
  v25 = *(_QWORD *)(v82 + 16);
  v67 = v24;
  v26 = objc_msgSend(v24, sel_value);
  v27 = sub_2321FDAD4();
  v29 = v28;

  sub_232000590(&qword_255F9ED80, (uint64_t (*)(uint64_t))type metadata accessor for SummaryAlertContentState, (uint64_t)&unk_23221AB68);
  v76 = v25;
  v30 = v80;
  sub_2321FD7E0();
  v31 = v30;
  if (v30)
  {

    return sub_232003ED4(v27, v29);
  }
  else
  {
    sub_232003ED4(v27, v29);
    if (v72 >> 62)
      goto LABEL_30;
    v33 = *(_QWORD *)((v72 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
LABEL_7:
    v80 = v31;
    v75 = v23;
    v34 = 0;
    if (v33)
    {
      LODWORD(v82) = 0;
      v35 = 0;
      v73 = v33;
      v74 = v72 & 0xC000000000000001;
      v69 = v72 + 32;
      v70 = v72 & 0xFFFFFFFFFFFFFF8;
      v81 = v9;
      while (1)
      {
        if (v74)
        {
          v36 = (id)MEMORY[0x2348FEA30](v35, v72);
          v37 = __OFADD__(v35, 1);
          v38 = v35 + 1;
          if (v37)
            goto LABEL_28;
        }
        else
        {
          if (v35 >= *(_QWORD *)(v70 + 16))
            goto LABEL_29;
          v36 = *(id *)(v69 + 8 * v35);
          v37 = __OFADD__(v35, 1);
          v38 = v35 + 1;
          if (v37)
          {
LABEL_28:
            __break(1u);
LABEL_29:
            __break(1u);
LABEL_30:
            swift_bridgeObjectRetain();
            v33 = sub_232201998();
            goto LABEL_7;
          }
        }
        v79 = v38;
        v39 = v36;
        v40 = objc_msgSend(v36, sel_deviceContext);
        v41 = objc_msgSend(v40, sel_representsLocalDevice);

        v78 = v39;
        v42 = objc_msgSend(v39, sel_storageEntries);
        sub_232003E9C(0, &qword_255F9ED88);
        v43 = sub_232201038();

        v44 = v76;
        swift_retain();
        v31 = v80;
        v45 = sub_23210109C(v43, v44);
        swift_bridgeObjectRelease();
        swift_release();
        v46 = *(_QWORD *)(v45 + 16);
        v80 = v31;
        if (v46)
        {
          v47 = *(unsigned __int8 *)(v71 + 80);
          v77 = v45;
          v48 = v45 + ((v47 + 32) & ~v47);
          v31 = *(_QWORD *)(v71 + 72);
          do
          {
            sub_2321013BC(v48, (uint64_t)v21);
            sub_2321013BC((uint64_t)v21, (uint64_t)v18);
            if (v41)
            {
              v49 = v18[v9[7]];
              sub_232002CEC((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for SummaryAlertContentState);
              LODWORD(v82) = v82 | v49;
            }
            else
            {
              sub_232002CEC((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for SummaryAlertContentState);
            }
            sub_232101400((uint64_t)v21, (uint64_t)v15);
            if ((v34 & 1) != 0)
            {
              v34 = 1;
              v9 = v81;
            }
            else
            {
              v9 = v81;
              v34 = v15[v81[8]];
            }
            sub_232002CEC((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for SummaryAlertContentState);
            v48 += v31;
            --v46;
          }
          while (v46);
        }

        swift_bridgeObjectRelease();
        v35 = v79;
        v23 = v75;
        if (v79 == v73)
          goto LABEL_27;
      }
    }
    LODWORD(v82) = 0;
LABEL_27:
    swift_bridgeObjectRelease();
    v51 = *v23;
    v50 = v23[1];
    v52 = (char *)v23 + v9[5];
    v53 = v64;
    v54 = v23;
    v55 = v65;
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v68, v52, v65);
    v56 = v66;
    sub_232016080((uint64_t)v54 + v9[6], v66, &qword_2541B69C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
    v57 = v63;
    v58 = (uint64_t)&v63[v9[6]];
    v59 = sub_2321FDCC0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v58, 1, 1, v59);
    *(_QWORD *)v57 = v51;
    *((_QWORD *)v57 + 1) = v50;
    (*(void (**)(char *, char *, uint64_t))(v53 + 32))(&v57[v9[5]], v68, v55);
    swift_bridgeObjectRetain();
    sub_23202EEF4(v56, v58);
    v57[v9[7]] = v82 & 1;
    v57[v9[8]] = v34 & 1;
    v60 = v62;
    sub_232101400((uint64_t)v57, v62);

    sub_232002CEC((uint64_t)v75, (uint64_t (*)(_QWORD))type metadata accessor for SummaryAlertContentState);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(v71 + 56))(v60, 0, 1, v9);
  }
}

uint64_t sub_2320FE4D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  type metadata accessor for SummaryAlertContentState();
  sub_232000590(&qword_255F9ED38, (uint64_t (*)(uint64_t))type metadata accessor for SummaryAlertContentState, (uint64_t)&unk_23221AB90);
  result = sub_2321FD804();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
  }
  return result;
}

uint64_t sub_2320FE550@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  unint64_t v6;

  v3 = *a1;
  v6 = a1[1];
  sub_2320169E4(*a1, v6);
  v4 = sub_232201518();
  result = sub_232003ED4(v3, v6);
  *a2 = v4;
  return result;
}

uint64_t sub_2320FE5CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  __int128 v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  char *v17;
  uint64_t v18;
  __int128 v19;
  id v20;
  id v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = v0;
  sub_232101558();
  v30 = v2;
  v32 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2321021F4();
  v34 = v5;
  v36 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v31 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232101DC4(0, &qword_255F9EDE8, v7, (void (*)(void))sub_23210228C);
  v35 = v8;
  v37 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v33 = (char *)&v27 - v9;
  v10 = *(void **)(v0 + 32);
  v38 = sub_232201524();
  v11 = swift_allocObject();
  v12 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v11 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v11 + 32) = v12;
  *(_QWORD *)(v11 + 48) = *(_QWORD *)(v1 + 32);
  v13 = *(void **)v1;
  sub_232101604();
  sub_2320057B8(0, &qword_255F9C3D0, (uint64_t (*)(uint64_t))type metadata accessor for SummaryAlertContentState, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  sub_232000590(&qword_255F9ED70, (uint64_t (*)(uint64_t))sub_232101604, MEMORY[0x24BDB9AF8]);
  v29 = v13;
  swift_retain();
  swift_retain();
  v28 = v10;
  sub_232200804();
  swift_release();
  swift_release();
  sub_232000590(&qword_255F9ED78, (uint64_t (*)(uint64_t))sub_232101558, MEMORY[0x24BDB98C8]);
  v14 = v30;
  v15 = sub_232200774();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v4, v14);
  v38 = v15;
  v16 = MEMORY[0x24BDB9AE0];
  sub_232101BDC(0, &qword_255F9C3C8, &qword_255F9C3D0, (uint64_t (*)(uint64_t))type metadata accessor for SummaryAlertContentState, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  type metadata accessor for SummaryAlertContentState();
  sub_23202D354();
  v17 = v31;
  sub_232200780();
  swift_release();
  v18 = swift_allocObject();
  v19 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v18 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v18 + 32) = v19;
  *(_QWORD *)(v18 + 48) = *(_QWORD *)(v1 + 32);
  v20 = v29;
  swift_retain();
  swift_retain();
  v21 = v28;
  sub_23220060C();
  sub_23202ED00(0, (unint64_t *)&qword_2541B3040, MEMORY[0x24BEE4AE0] + 8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v16);
  sub_23210228C();
  sub_23202CC44();
  v23 = v33;
  v22 = v34;
  sub_232200828();
  swift_release();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v17, v22);
  sub_232101FE8(qword_255F9EDF8, &qword_255F9EDE8, (void (*)(uint64_t))sub_2321021F4, (void (*)(void))sub_23210228C);
  v24 = v35;
  v25 = sub_232200774();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v23, v24);
  return v25;
}

uint64_t sub_2320FE9B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  sub_232016080(a1, a2, &qword_255F9C3D0, (uint64_t (*)(uint64_t))type metadata accessor for SummaryAlertContentState);
  v3 = type metadata accessor for SummaryAlertContentState();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(a2, 1, v3);
  if (!(_DWORD)result)
    *(_BYTE *)(a2 + *(int *)(v3 + 32)) = 1;
  return result;
}

uint64_t sub_2320FEA28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;

  v29 = a1;
  v37 = a3;
  v30 = type metadata accessor for SummaryAlertContentState();
  v32 = *(_QWORD *)(v30 - 8);
  v4 = *(_QWORD *)(v32 + 64);
  MEMORY[0x24BDAC7A8](v30);
  sub_2320057B8(0, &qword_255F9C428, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v28 - v9;
  sub_23202ED00(0, &qword_255F9C430, MEMORY[0x24BDCDDE8], MEMORY[0x24BDBA1B0]);
  v33 = v11;
  v35 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v28 - v12;
  sub_23202ED68();
  v34 = v14;
  v36 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a2 + 24);
  v17 = *(void **)(a2 + 32);
  v19 = v29;
  sub_2321013BC(v29, (uint64_t)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v31 = v18;
  swift_retain();
  v20 = v17;
  sub_2322006B4();
  sub_23220069C();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_2321013BC(v19, (uint64_t)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = (*(unsigned __int8 *)(v32 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v20;
  sub_232101400((uint64_t)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v22 + v21);
  v23 = v20;
  sub_23220060C();
  sub_23202ED00(0, (unint64_t *)&qword_2541B3040, MEMORY[0x24BEE4AE0] + 8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_23210135C();
  sub_23202CC44();
  v24 = v33;
  sub_232200828();
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v24);
  sub_232000590(&qword_255F9C450, (uint64_t (*)(uint64_t))sub_23202ED68, MEMORY[0x24BDB98F0]);
  v25 = v34;
  v26 = sub_232200774();

  swift_release();
  result = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v16, v25);
  *v37 = v26;
  return result;
}

uint64_t sub_2320FED28(uint64_t a1, uint64_t a2)
{
  void **v2;
  void **v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  __int128 v20;
  id v21;
  id v22;
  id v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  id v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v3 = v2;
  sub_232101B18();
  v7 = *(_QWORD *)(v6 - 8);
  v30 = v6;
  v31 = v7;
  MEMORY[0x24BDAC7A8](v6);
  v29 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  v10 = objc_allocWithZone(MEMORY[0x24BDD3C98]);
  v11 = v9;
  v12 = (void *)sub_232200E94();
  v13 = objc_msgSend(v10, sel_initWithCategory_domainName_healthStore_, 1, v12, v11);

  v32 = sub_2322013A4();
  v14 = objc_allocWithZone(MEMORY[0x24BDD3C98]);
  v15 = v11;
  v16 = (void *)sub_232200E94();
  v28 = objc_msgSend(v14, sel_initWithCategory_domainName_healthStore_, 1, v16, v15);

  v17 = sub_2322013A4();
  v33 = sub_2322013A4();
  v18 = v3[4];
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a1;
  *(_QWORD *)(v19 + 24) = a2;
  *(_QWORD *)(v19 + 32) = v32;
  *(_QWORD *)(v19 + 40) = v17;
  v20 = *((_OWORD *)v3 + 1);
  *(_OWORD *)(v19 + 48) = *(_OWORD *)v3;
  *(_OWORD *)(v19 + 64) = v20;
  *(_QWORD *)(v19 + 80) = v3[4];
  *(_QWORD *)(v19 + 88) = v13;
  v21 = v15;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v22 = v18;
  v23 = v13;
  sub_23220060C();
  sub_232101BDC(0, (unint64_t *)&qword_2541B30D8, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9E38]);
  sub_23202ED00(0, (unint64_t *)&qword_2541B3040, MEMORY[0x24BEE4AE0] + 8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_232101C60();
  sub_23202CC44();
  v24 = v29;
  sub_232200828();
  swift_release();
  swift_release();
  sub_232000590(&qword_255F9ED98, (uint64_t (*)(uint64_t))sub_232101B18, MEMORY[0x24BDB98F0]);
  v25 = v30;
  v26 = sub_232200774();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v31 + 8))(v24, v25);
  return v26;
}

uint64_t sub_2320FF048@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  unint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  void (*v50)(char *, uint64_t);
  char *v51;
  char *v52;
  uint64_t v53;
  void *v54;
  void *v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  void *v64;
  uint64_t v65;
  id v66;
  uint64_t (*v67)(void);
  uint64_t v68;
  char *v69;
  char *v70;
  os_log_t v71;
  uint64_t v72;
  uint64_t result;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  Class isa;
  os_log_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104[2];

  v91 = a7;
  v87 = a6;
  v80 = a5;
  v79 = a4;
  v101 = a3;
  v102 = a8;
  v97 = a2;
  sub_232101D38();
  v89 = *(_QWORD *)(v9 - 8);
  v90 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v88 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232101DC4(0, &qword_255F9EDA8, v11, (void (*)(void))sub_232101E70);
  v94 = v12;
  v92 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v100 = (char *)&v78 - v13;
  sub_232101E8C();
  isa = v14[-1].isa;
  v96 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v93 = (char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232102028();
  v85 = v16;
  v83 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v81 = (char *)&v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23202ED00(0, &qword_255F9C400, MEMORY[0x24BEE4AE0] + 8, MEMORY[0x24BDBA1B0]);
  v86 = v18;
  v84 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v82 = (char *)&v78 - v19;
  v20 = sub_23220039C();
  v98 = *(_QWORD *)(v20 - 8);
  v99 = v20;
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v78 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v78 - v24;
  v26 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  sub_2320057B8(0, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v78 - v28;
  v30 = sub_2321FDC6C();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = MEMORY[0x24BDAC7A8](v30);
  v34 = (char *)&v78 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v32);
  v36 = (char *)&v78 - v35;
  sub_232016080(a1, (uint64_t)v29, &qword_2541B7618, v26);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30) == 1)
  {
    sub_232016D88((uint64_t)v29, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    sub_232200354();
    v37 = v101;
    swift_bridgeObjectRetain_n();
    v38 = sub_232200390();
    v39 = sub_2322012FC();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = swift_slowAlloc();
      v41 = swift_slowAlloc();
      v104[0] = v41;
      *(_DWORD *)v40 = 136315394;
      v103 = sub_232013174(0xD00000000000001FLL, 0x8000000232215BE0, v104);
      sub_232201710();
      *(_WORD *)(v40 + 12) = 2080;
      swift_bridgeObjectRetain();
      v42 = v97;
      v103 = sub_232013174(v97, v37, v104);
      sub_232201710();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_231FFB000, v38, v39, "%s Migrating %s to device context sync", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v41, -1, -1);
      MEMORY[0x2348FF468](v40, -1, -1);

      (*(void (**)(char *, uint64_t))(v98 + 8))(v25, v99);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v98 + 8))(v25, v99);
      v42 = v97;
    }
    v103 = v80;
    v104[0] = v79;
    sub_232101BDC(0, (unint64_t *)&qword_2541B30D8, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9E38]);
    sub_232101C60();
    v52 = v88;
    sub_232200798();
    v53 = v87;
    v54 = *(void **)v87;
    v55 = *(void **)(v87 + 32);
    v56 = swift_allocObject();
    *(_QWORD *)(v56 + 16) = v42;
    *(_QWORD *)(v56 + 24) = v37;
    v57 = *(_OWORD *)(v53 + 16);
    *(_OWORD *)(v56 + 32) = *(_OWORD *)v53;
    *(_OWORD *)(v56 + 48) = v57;
    *(_QWORD *)(v56 + 64) = *(_QWORD *)(v53 + 32);
    v58 = swift_allocObject();
    *(_QWORD *)(v58 + 16) = sub_2321020C4;
    *(_QWORD *)(v58 + 24) = v56;
    swift_bridgeObjectRetain();
    v59 = v54;
    swift_retain();
    swift_retain();
    v60 = v55;
    sub_23220060C();
    v61 = MEMORY[0x24BEE4AE0] + 8;
    sub_23202ED00(0, (unint64_t *)&qword_2541B3040, MEMORY[0x24BEE4AE0] + 8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_232101E70();
    sub_23202CC44();
    v62 = v90;
    sub_232200828();
    swift_release();
    (*(void (**)(char *, uint64_t))(v89 + 8))(v52, v62);
    v63 = (_QWORD *)swift_allocObject();
    v63[2] = v42;
    v63[3] = v37;
    v64 = v91;
    v63[4] = v91;
    v65 = swift_allocObject();
    *(_QWORD *)(v65 + 16) = sub_232102168;
    *(_QWORD *)(v65 + 24) = v63;
    swift_bridgeObjectRetain();
    v66 = v64;
    sub_23220060C();
    v67 = MEMORY[0x24BDB9E38];
    sub_23202ED00(0, &qword_255F9EDC0, v61, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9E38]);
    sub_232101FE8(&qword_255F9EDC8, &qword_255F9EDA8, (void (*)(uint64_t))sub_232101D38, (void (*)(void))sub_232101E70);
    sub_232101F98(&qword_2541AF340, &qword_255F9EDC0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v67, MEMORY[0x24BDB9E58]);
    v69 = v93;
    v68 = v94;
    v70 = v100;
    sub_232200828();
    swift_release();
    (*(void (**)(char *, uint64_t))(v92 + 8))(v70, v68);
    sub_232000590(&qword_255F9EDD0, (uint64_t (*)(uint64_t))sub_232101E8C, MEMORY[0x24BDB98F0]);
    v71 = v96;
    v72 = sub_232200774();
    result = (*((uint64_t (**)(char *, os_log_t))isa + 1))(v69, v71);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v36, v29, v30);
    sub_232200354();
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v34, v36, v30);
    v43 = v101;
    swift_bridgeObjectRetain_n();
    v44 = sub_232200390();
    v45 = sub_2322012CC();
    v46 = v45;
    if (os_log_type_enabled(v44, v45))
    {
      v47 = swift_slowAlloc();
      v100 = (char *)swift_slowAlloc();
      v104[0] = (uint64_t)v100;
      *(_DWORD *)v47 = 136315650;
      v96 = v44;
      v103 = sub_232013174(0xD00000000000001FLL, 0x8000000232215BE0, v104);
      sub_232201710();
      LODWORD(isa) = v46;
      *(_WORD *)(v47 + 12) = 2080;
      swift_bridgeObjectRetain();
      v103 = sub_232013174(v97, v43, v104);
      sub_232201710();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v47 + 22) = 2080;
      sub_232000590(&qword_2541AF170, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
      v48 = sub_232201AB8();
      v103 = sub_232013174(v48, v49, v104);
      sub_232201710();
      swift_bridgeObjectRelease();
      v50 = *(void (**)(char *, uint64_t))(v31 + 8);
      v50(v34, v30);
      v44 = v96;
      _os_log_impl(&dword_231FFB000, v96, (os_log_type_t)isa, "%s Migration already completed for %s at %s", (uint8_t *)v47, 0x20u);
      v51 = v100;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v51, -1, -1);
      MEMORY[0x2348FF468](v47, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      v50 = *(void (**)(char *, uint64_t))(v31 + 8);
      v50(v34, v30);
    }

    (*(void (**)(char *, uint64_t))(v98 + 8))(v23, v99);
    v74 = v81;
    sub_2322006B4();
    sub_232002B9C();
    v75 = v82;
    v76 = v85;
    sub_232200684();
    (*(void (**)(char *, uint64_t))(v83 + 8))(v74, v76);
    sub_232101F98(&qword_255F9C420, &qword_255F9C400, MEMORY[0x24BDBA1B0], MEMORY[0x24BDBA1D0]);
    v77 = v86;
    v72 = sub_232200774();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v75, v77);
    result = ((uint64_t (*)(char *, uint64_t))v50)(v36, v30);
  }
  *v102 = v72;
  return result;
}

uint64_t sub_2320FFAC0(uint64_t a1, uint64_t a2, void *a3, unint64_t a4, uint64_t a5)
{
  char *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, unint64_t, _QWORD);
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int (*v47)(uint64_t, uint64_t, uint64_t);
  unint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t (*v56)(uint64_t);
  char *v57;
  char v58;
  char *v59;
  char *v60;
  char *v61;
  void (*v62)(char *, char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t (*v66)(uint64_t);
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  char *v69;
  uint64_t v70;
  int *v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  void *v75;
  unint64_t v76;
  id v77;
  char *v78;
  char *v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  void (*v96)(char *, char *, uint64_t);
  void (*v97)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  char *v100;
  void (*v101)(char *, char *, uint64_t);
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;

  v107 = a5;
  v118 = a4;
  v115 = a3;
  v93 = a2;
  v116 = a1;
  sub_232102028();
  v100 = v5;
  v97 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*((_QWORD *)v5 - 1);
  MEMORY[0x24BDAC7A8](v5);
  v95 = (char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDBA1B0];
  sub_23202ED00(0, &qword_255F9C400, MEMORY[0x24BEE4AE0] + 8, MEMORY[0x24BDBA1B0]);
  v101 = v8;
  v99 = *((_QWORD *)v8 - 1);
  MEMORY[0x24BDAC7A8](v8);
  v96 = (void (*)(char *, char *, uint64_t))((char *)&v88 - v9);
  sub_2320057B8(0, &qword_255F9C428, (uint64_t (*)(uint64_t))type metadata accessor for SummaryAlertContentState, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v105 = *(_QWORD *)(v10 - 8);
  v106 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v104 = (char *)&v88 - v11;
  sub_23202ED00(0, &qword_255F9C430, MEMORY[0x24BDCDDE8], v7);
  v109 = *(_QWORD *)(v12 - 8);
  v110 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v108 = (char *)&v88 - v13;
  sub_23202ED68();
  v112 = *(_QWORD *)(v14 - 8);
  v113 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v111 = (char *)&v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = type metadata accessor for SummaryAlertContentState();
  v102 = *(_QWORD *)(v98 - 8);
  v16 = MEMORY[0x24BDAC7A8](v98);
  v18 = (char *)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = v17;
  MEMORY[0x24BDAC7A8](v16);
  v117 = (uint64_t)&v88 - v19;
  sub_232102174();
  v90 = v20;
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B69C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v94 = (uint64_t)&v88 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v88 - v27;
  v92 = sub_23220039C();
  v91 = *(_QWORD *)(v92 - 8);
  MEMORY[0x24BDAC7A8](v92);
  v30 = (char *)&v88 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  sub_2320057B8(0, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], v23);
  v33 = MEMORY[0x24BDAC7A8](v32);
  v89 = (uint64_t)&v88 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x24BDAC7A8](v33);
  v37 = (char *)&v88 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v39 = (char *)&v88 - v38;
  v40 = sub_2321FDC6C();
  v41 = MEMORY[0x24BDAC7A8](v40);
  v114 = (char *)&v88 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v41);
  v44 = (char *)&v88 - v43;
  v46 = v45;
  sub_232016080(v116, (uint64_t)v39, &qword_2541B7618, v31);
  v47 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48);
  if (v47((uint64_t)v39, 1, v40) != 1)
  {
    v101 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
    v101(v44, v39, v40);
    v53 = sub_2321FDCC0();
    v54 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56);
    v100 = v28;
    v99 = v53;
    v97 = v54;
    ((void (*)(char *, uint64_t, uint64_t))v54)(v28, 1, 1);
    v96 = *(void (**)(char *, char *, uint64_t))(v46 + 16);
    v96(v37, v44, v40);
    v116 = v46;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v37, 0, 1, v40);
    v55 = (uint64_t)&v22[*(int *)(v90 + 48)];
    v56 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
    sub_232016080(v93, (uint64_t)v22, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    sub_232016080((uint64_t)v37, v55, &qword_2541B7618, v56);
    v57 = v44;
    if (v47((uint64_t)v22, 1, v40) == 1)
    {
      sub_232016D88((uint64_t)v37, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
      if (v47(v55, 1, v40) == 1)
      {
        sub_232016D88((uint64_t)v22, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
        v58 = 1;
LABEL_13:
        v68 = (uint64_t)v100;
        v69 = v114;
        v96(v114, v57, v40);
        v100 = v57;
        v70 = v94;
        sub_232016080(v68, v94, &qword_2541B69C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
        v71 = (int *)v98;
        v72 = (uint64_t)&v18[*(int *)(v98 + 24)];
        v97(v72, 1, 1, v99);
        v73 = v118;
        *(_QWORD *)v18 = v115;
        *((_QWORD *)v18 + 1) = v73;
        v101(&v18[v71[5]], v69, v40);
        swift_bridgeObjectRetain();
        sub_23202EEF4(v70, v72);
        v18[v71[7]] = 1;
        v18[v71[8]] = v58 & 1;
        v74 = v117;
        sub_232101400((uint64_t)v18, v117);
        v76 = *(_QWORD *)(v107 + 24);
        v75 = *(void **)(v107 + 32);
        sub_2321013BC(v74, (uint64_t)v18);
        v118 = v76;
        swift_retain();
        v77 = v75;
        v78 = v104;
        sub_2322006B4();
        v79 = v108;
        v80 = v106;
        sub_23220069C();
        (*(void (**)(char *, uint64_t))(v105 + 8))(v78, v80);
        sub_2321013BC(v74, (uint64_t)v18);
        v81 = (*(unsigned __int8 *)(v102 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80);
        v82 = swift_allocObject();
        *(_QWORD *)(v82 + 16) = v77;
        sub_232101400((uint64_t)v18, v82 + v81);
        v115 = v77;
        sub_23220060C();
        sub_23202ED00(0, (unint64_t *)&qword_2541B3040, MEMORY[0x24BEE4AE0] + 8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
        sub_23210135C();
        sub_23202CC44();
        v83 = v68;
        v85 = v110;
        v84 = v111;
        sub_232200828();
        swift_release();
        (*(void (**)(char *, uint64_t))(v109 + 8))(v79, v85);
        sub_232000590(&qword_255F9C450, (uint64_t (*)(uint64_t))sub_23202ED68, MEMORY[0x24BDB98F0]);
        v86 = v113;
        v63 = sub_232200774();

        swift_release();
        (*(void (**)(char *, uint64_t))(v112 + 8))(v84, v86);
        sub_232002CEC(v117, (uint64_t (*)(_QWORD))type metadata accessor for SummaryAlertContentState);
        sub_232016D88(v83, &qword_2541B69C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
        (*(void (**)(char *, uint64_t))(v116 + 8))(v100, v40);
        return v63;
      }
    }
    else
    {
      v64 = v89;
      sub_232016080((uint64_t)v22, v89, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
      if (v47(v55, 1, v40) != 1)
      {
        v65 = v114;
        v101(v114, (char *)v55, v40);
        v66 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
        sub_232000590((unint64_t *)&qword_2541AF168, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
        v58 = sub_232200E64();
        v67 = *(void (**)(char *, uint64_t))(v116 + 8);
        v67(v65, v40);
        sub_232016D88((uint64_t)v37, &qword_2541B7618, v66);
        v67((char *)v64, v40);
        sub_232016D88((uint64_t)v22, &qword_2541B7618, v66);
        goto LABEL_13;
      }
      sub_232016D88((uint64_t)v37, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
      (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v64, v40);
    }
    sub_232002CEC((uint64_t)v22, (uint64_t (*)(_QWORD))sub_232102174);
    v58 = 0;
    goto LABEL_13;
  }
  sub_232016D88((uint64_t)v39, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  sub_232200354();
  v48 = v118;
  swift_bridgeObjectRetain_n();
  v49 = sub_232200390();
  v50 = sub_2322012FC();
  if (os_log_type_enabled(v49, v50))
  {
    v51 = swift_slowAlloc();
    v52 = swift_slowAlloc();
    v120 = v52;
    *(_DWORD *)v51 = 136315394;
    v119 = sub_232013174(0xD00000000000001FLL, 0x8000000232215BE0, &v120);
    sub_232201710();
    *(_WORD *)(v51 + 12) = 2080;
    swift_bridgeObjectRetain();
    v119 = sub_232013174((uint64_t)v115, v48, &v120);
    sub_232201710();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_231FFB000, v49, v50, "%s No pre-existing content state for %s", (uint8_t *)v51, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v52, -1, -1);
    MEMORY[0x2348FF468](v51, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v91 + 8))(v30, v92);
  v59 = v95;
  sub_2322006B4();
  sub_232002B9C();
  v60 = (char *)v96;
  v61 = v100;
  sub_232200684();
  (*((void (**)(char *, char *))v97 + 1))(v59, v61);
  sub_232101F98(&qword_255F9C420, &qword_255F9C400, MEMORY[0x24BDBA1B0], MEMORY[0x24BDBA1D0]);
  v62 = v101;
  v63 = sub_232200774();
  (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v99 + 8))(v60, v62);
  return v63;
}

uint64_t sub_232100684(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_2320057B8(0, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v21 - v5;
  v7 = sub_23220039C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232200354();
  swift_bridgeObjectRetain_n();
  v11 = sub_232200390();
  v12 = sub_2322012FC();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v24 = v8;
    v14 = v13;
    v15 = swift_slowAlloc();
    v22 = a1;
    v16 = v15;
    v26 = v15;
    *(_DWORD *)v14 = 136315394;
    v23 = v7;
    v25 = sub_232013174(0xD00000000000001FLL, 0x8000000232215BE0, &v26);
    sub_232201710();
    *(_WORD *)(v14 + 12) = 2080;
    swift_bridgeObjectRetain();
    v25 = sub_232013174(v22, a2, &v26);
    sub_232201710();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_231FFB000, v11, v12, "%s Marking migration as complete for %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v16, -1, -1);
    MEMORY[0x2348FF468](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v23);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  sub_2321FDC60();
  v17 = sub_2321FDC6C();
  v18 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v6, 0, 1, v17);
  v19 = sub_2322013B0();
  sub_232016D88((uint64_t)v6, &qword_2541B7618, v18);
  return v19;
}

uint64_t sub_232100964(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  __int128 v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  _QWORD v14[2];

  sub_232101558();
  v3 = v2;
  v14[0] = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)(a1 + 32);
  v14[1] = sub_232201524();
  v7 = swift_allocObject();
  v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v7 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v7 + 32) = v8;
  *(_QWORD *)(v7 + 48) = *(_QWORD *)(a1 + 32);
  v9 = *(void **)a1;
  sub_232101604();
  sub_2320057B8(0, &qword_255F9C3D0, (uint64_t (*)(uint64_t))type metadata accessor for SummaryAlertContentState, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  sub_232000590(&qword_255F9ED70, (uint64_t (*)(uint64_t))sub_232101604, MEMORY[0x24BDB9AF8]);
  v10 = v9;
  swift_retain();
  swift_retain();
  v11 = v6;
  sub_232200804();
  swift_release();
  swift_release();
  sub_232000590(&qword_255F9ED78, (uint64_t (*)(uint64_t))sub_232101558, MEMORY[0x24BDB98C8]);
  v12 = sub_232200774();
  (*(void (**)(char *, uint64_t))(v14[0] + 8))(v5, v3);
  return v12;
}

uint64_t sub_232100B18@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v5 = sub_23220039C();
  v26 = *(_QWORD *)(v5 - 8);
  v27 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SummaryAlertContentState();
  v9 = objc_msgSend(a1, sel_value);
  v10 = sub_2321FDAD4();
  v12 = v11;

  sub_232000590(&qword_255F9ED80, (uint64_t (*)(uint64_t))type metadata accessor for SummaryAlertContentState, (uint64_t)&unk_23221AB68);
  sub_2321FD7E0();
  if (v2)
  {
    sub_232003ED4(v10, v12);
    sub_232200354();
    v13 = v2;
    v14 = v2;
    v15 = sub_232200390();
    v16 = sub_2322012E4();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc();
      v24 = swift_slowAlloc();
      v29 = v24;
      *(_DWORD *)v17 = 136315906;
      v28 = sub_232013174(0xD00000000000001FLL, 0x8000000232215BE0, &v29);
      sub_232201710();
      v25 = a2;
      *(_WORD *)(v17 + 12) = 2080;
      v28 = sub_232013174(0xD000000000000017, 0x8000000232207390, &v29);
      sub_232201710();
      *(_WORD *)(v17 + 22) = 2080;
      v28 = sub_232013174(0xD000000000000018, 0x80000002322073B0, &v29);
      sub_232201710();
      *(_WORD *)(v17 + 32) = 2082;
      v28 = (uint64_t)v2;
      v18 = v2;
      sub_232002B9C();
      v19 = sub_232200F0C();
      v28 = sub_232013174(v19, v20, &v29);
      a2 = v25;
      sub_232201710();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_231FFB000, v15, v16, "%s %s %s Error: %{public}s", (uint8_t *)v17, 0x2Au);
      v21 = v24;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v21, -1, -1);
      MEMORY[0x2348FF468](v17, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v27);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a2, 1, 1, v8);
  }
  else
  {
    sub_232003ED4(v10, v12);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a2, 0, 1, v8);
  }
}

uint64_t sub_232100EC0(unint64_t a1, unint64_t a2, unint64_t *a3)
{
  uint64_t v5;
  uint64_t result;

  sub_232003E9C(0, a3);
  if (a2 >> 62)
  {
    v5 = sub_2322019A4();
    objc_opt_self();
    if (swift_dynamicCastObjCClass())
      return v5;
  }
  else
  {
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
    {
      v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 8 * a1 + 0x20);
      swift_unknownObjectRetain();
      objc_opt_self();
      if (!swift_dynamicCastObjCClass())
        goto LABEL_10;
      return v5;
    }
    __break(1u);
  }
LABEL_10:
  sub_23220189C();
  sub_232200F48();
  sub_232201BF0();
  sub_232200F48();
  swift_bridgeObjectRelease();
  sub_232200F48();
  swift_getObjectType();
  swift_unknownObjectRelease();
  sub_232201BF0();
  sub_232200F48();
  swift_bridgeObjectRelease();
  result = sub_232201974();
  __break(1u);
  return result;
}

unint64_t sub_23210109C(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v27 = a2;
  sub_2320057B8(0, &qword_255F9C3D0, (uint64_t (*)(uint64_t))type metadata accessor for SummaryAlertContentState, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v21 - v5;
  v26 = type metadata accessor for SummaryAlertContentState();
  v7 = *(_QWORD *)(v26 - 8);
  v8 = MEMORY[0x24BDAC7A8](v26);
  v25 = (uint64_t)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v23 = (uint64_t)&v21 - v10;
  if (a1 >> 62)
    goto LABEL_20;
  v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v11; v11 = sub_232201998())
  {
    v12 = MEMORY[0x24BEE4AF8];
    v24 = a1 & 0xC000000000000001;
    v13 = 4;
    v22 = a1;
    while (1)
    {
      v14 = v24 ? (id)MEMORY[0x2348FEA30](v13 - 4, a1) : *(id *)(a1 + 8 * v13);
      v15 = v14;
      v16 = v13 - 3;
      if (__OFADD__(v13 - 4, 1))
        break;
      sub_232100B18(v14, (uint64_t)v6);
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v12;
      }

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, v26) == 1)
      {
        sub_232016D88((uint64_t)v6, &qword_255F9C3D0, (uint64_t (*)(uint64_t))type metadata accessor for SummaryAlertContentState);
      }
      else
      {
        v17 = v23;
        sub_232101400((uint64_t)v6, v23);
        sub_232101400(v17, v25);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v12 = sub_232097540(0, *(_QWORD *)(v12 + 16) + 1, 1, v12);
        v19 = *(_QWORD *)(v12 + 16);
        v18 = *(_QWORD *)(v12 + 24);
        if (v19 >= v18 >> 1)
          v12 = sub_232097540(v18 > 1, v19 + 1, 1, v12);
        *(_QWORD *)(v12 + 16) = v19 + 1;
        sub_232101400(v25, v12+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v19);
        a1 = v22;
      }
      ++v13;
      if (v16 == v11)
      {
        swift_bridgeObjectRelease();
        return v12;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

unint64_t sub_23210135C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F9C440;
  if (!qword_255F9C440)
  {
    sub_23202ED00(255, &qword_255F9C430, MEMORY[0x24BDCDDE8], MEMORY[0x24BDBA1B0]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDBA1D0], v1);
    atomic_store(result, (unint64_t *)&qword_255F9C440);
  }
  return result;
}

uint64_t sub_2321013BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SummaryAlertContentState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_232101400(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SummaryAlertContentState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_232101444()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_255F9ED40)
  {
    v0 = MEMORY[0x24BDB9AE0];
    sub_232101BDC(255, &qword_255F9C3C8, &qword_255F9C3D0, (uint64_t (*)(uint64_t))type metadata accessor for SummaryAlertContentState, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_23202ED00(255, (unint64_t *)&qword_2541B3040, MEMORY[0x24BEE4AE0] + 8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v0);
    sub_23202D354();
    sub_23202CC44();
    v1 = sub_2322005C4();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_255F9ED40);
  }
}

uint64_t sub_232101508()
{
  uint64_t v0;

  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23210154C()
{
  uint64_t v0;

  return sub_232100964(v0 + 16);
}

void sub_232101558()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9ED50)
  {
    sub_232101604();
    sub_2320057B8(255, &qword_255F9C3D0, (uint64_t (*)(uint64_t))type metadata accessor for SummaryAlertContentState, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    sub_232000590(&qword_255F9ED70, (uint64_t (*)(uint64_t))sub_232101604, MEMORY[0x24BDB9AF8]);
    v0 = sub_2322005B8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9ED50);
  }
}

void sub_232101604()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9ED58)
  {
    sub_232101670();
    sub_232002B9C();
    v0 = sub_232200624();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9ED58);
  }
}

void sub_232101670()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9ED60)
  {
    sub_232003E9C(255, &qword_255F9ED68);
    v0 = sub_232201080();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9ED60);
  }
}

uint64_t sub_2321016D8@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2320FDEF0(*a1, a2);
}

void *sub_2321016FC(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  char *v22;
  char v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  uint64_t v35;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  id v41;
  unint64_t v42;
  void *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;

  v2 = sub_2321FDC6C();
  v45 = *(_QWORD *)(v2 - 8);
  v46 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v44 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v37 - v5;
  if (a1 >> 62)
    goto LABEL_39;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v7)
  {
LABEL_40:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_3:
  v8 = 0;
  v9 = 0;
  v39 = a1;
  v40 = a1 & 0xC000000000000001;
  v37 = a1 + 32;
  v38 = v7;
  do
  {
    if (v40)
      v11 = (id)sub_232100EC0(v8, a1, &qword_255F9ED68);
    else
      v11 = *(id *)(v37 + 8 * v8);
    v10 = v11;
    if (__OFADD__(v8++, 1))
    {
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      swift_bridgeObjectRetain();
      v7 = sub_232201998();
      if (!v7)
        goto LABEL_40;
      goto LABEL_3;
    }
    v13 = objc_msgSend(v11, sel_storageEntries);
    sub_232003E9C(0, &qword_255F9ED88);
    v14 = sub_232201038();

    if (v14 >> 62)
    {
      swift_bridgeObjectRetain();
      v15 = sub_232201998();
      if (!v15)
        goto LABEL_33;
LABEL_13:
      if (v15 >= 1)
      {
        v41 = v10;
        v42 = v8;
        v43 = v9;
        v16 = 0;
        v17 = 0;
        while (1)
        {
          if ((v14 & 0xC000000000000001) != 0)
          {
            v18 = (id)sub_232100EC0(v16, v14, &qword_255F9ED88);
            if (v17)
              goto LABEL_20;
          }
          else
          {
            v18 = *(id *)(v14 + 8 * v16 + 32);
            if (v17)
            {
LABEL_20:
              v19 = v17;
              v20 = objc_msgSend(v19, sel_modificationDate);
              sub_2321FDC30();

              v21 = objc_msgSend(v18, sel_modificationDate);
              v22 = v44;
              sub_2321FDC30();

              v23 = sub_2321FDC0C();
              v24 = *(void (**)(char *, uint64_t))(v45 + 8);
              v25 = v22;
              v26 = v46;
              v24(v25, v46);
              v24(v6, v26);

              if ((v23 & 1) != 0)
                v27 = v19;
              else
                v27 = v18;
              if ((v23 & 1) == 0)
                v18 = v19;

            }
          }
          ++v16;
          v17 = v18;
          if (v15 == v16)
          {
            swift_bridgeObjectRelease_n();
            v9 = v43;
            if (!v43)
            {
              v9 = v18;
              v7 = v38;
              a1 = v39;
              v10 = v41;
              v8 = v42;
              goto LABEL_6;
            }
            if (v18)
            {
              v28 = v18;
              v29 = v9;
              v30 = objc_msgSend(v29, sel_modificationDate);
              sub_2321FDC30();

              v31 = objc_msgSend(v28, sel_modificationDate);
              v32 = v44;
              sub_2321FDC30();

              LOBYTE(v31) = sub_2321FDC0C();
              v33 = *(void (**)(char *, uint64_t))(v45 + 8);
              v34 = v32;
              v35 = v46;
              v33(v34, v46);
              v33(v6, v35);

              if ((v31 & 1) != 0)
              {

                v10 = v29;
                v9 = v18;
              }
              else
              {

                v29 = v41;
                v10 = v28;
              }
              v7 = v38;
              a1 = v39;
              v8 = v42;
            }
            else
            {
              v29 = v43;
              v9 = 0;
              v7 = v38;
              a1 = v39;
              v10 = v41;
              v8 = v42;
            }
LABEL_35:

            goto LABEL_6;
          }
        }
      }
      goto LABEL_38;
    }
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v15)
      goto LABEL_13;
LABEL_33:
    swift_bridgeObjectRelease_n();
    if (v9)
    {
      v29 = v9;
      v9 = 0;
      goto LABEL_35;
    }
LABEL_6:

  }
  while (v8 != v7);
  swift_bridgeObjectRelease();
  return v9;
}

void sub_232101B18()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9ED90)
  {
    sub_23202ED00(255, (unint64_t *)&qword_2541B3040, MEMORY[0x24BEE4AE0] + 8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_232101BDC(255, (unint64_t *)&qword_2541B30D8, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9E38]);
    sub_23202CC44();
    sub_232101C60();
    v0 = sub_2322005C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9ED90);
  }
}

void sub_232101BDC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t, unint64_t, _QWORD))
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*a2)
  {
    sub_2320057B8(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v9 = v8;
    v10 = sub_232002B9C();
    v11 = a5(a1, v9, v10, MEMORY[0x24BEE3F20]);
    if (!v12)
      atomic_store(v11, a2);
  }
}

unint64_t sub_232101C60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B30D0;
  if (!qword_2541B30D0)
  {
    sub_232101BDC(255, (unint64_t *)&qword_2541B30D8, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9E38]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB9E58], v1);
    atomic_store(result, (unint64_t *)&qword_2541B30D0);
  }
  return result;
}

uint64_t sub_232101CC8()
{
  id *v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_232101D24@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_2320FF048(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), v2 + 48, *(void **)(v2 + 88), a2);
}

void sub_232101D38()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9EDA0)
  {
    sub_232101BDC(255, (unint64_t *)&qword_2541B30D8, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9E38]);
    sub_232101C60();
    v0 = sub_2322004C8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9EDA0);
  }
}

void sub_232101DC4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_23202ED00(255, (unint64_t *)&qword_2541B3040, MEMORY[0x24BEE4AE0] + 8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    a3(255);
    sub_23202CC44();
    a4();
    v7 = sub_2322005C4();
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_232101E70()
{
  return sub_232000590(&qword_255F9EDB0, (uint64_t (*)(uint64_t))sub_232101D38, MEMORY[0x24BDB9450]);
}

void sub_232101E8C()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_255F9EDB8)
  {
    v0 = MEMORY[0x24BDB9E38];
    sub_23202ED00(255, &qword_255F9EDC0, MEMORY[0x24BEE4AE0] + 8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9E38]);
    sub_232101DC4(255, &qword_255F9EDA8, (void (*)(uint64_t))sub_232101D38, (void (*)(void))sub_232101E70);
    sub_232101F98(&qword_2541AF340, &qword_255F9EDC0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v0, MEMORY[0x24BDB9E58]);
    sub_232101FE8(&qword_255F9EDC8, &qword_255F9EDA8, (void (*)(uint64_t))sub_232101D38, (void (*)(void))sub_232101E70);
    v1 = sub_2322005C4();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_255F9EDB8);
  }
}

uint64_t sub_232101F98(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_23202ED00(255, a2, MEMORY[0x24BEE4AE0] + 8, a3);
    result = MEMORY[0x2348FF39C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_232101FE8(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_232101DC4(255, a2, a3, a4);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB98F0], v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_232102028()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B3098)
  {
    v0 = sub_2322006A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B3098);
  }
}

uint64_t sub_232102080()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2321020C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2320FFAC0(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), v2 + 32);
}

uint64_t sub_2321020D0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2321020F4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t result;

  v5 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 16);
  sub_232102174();
  result = v5(a1, a1 + *(int *)(v6 + 48));
  *a2 = result;
  return result;
}

uint64_t sub_23210213C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_232102168()
{
  uint64_t v0;

  return sub_232100684(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_232102174()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255F9EDD8)
  {
    sub_2320057B8(255, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255F9EDD8);
  }
}

void sub_2321021F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9EDE0)
  {
    sub_232101BDC(255, &qword_255F9C3C8, &qword_255F9C3D0, (uint64_t (*)(uint64_t))type metadata accessor for SummaryAlertContentState, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    type metadata accessor for SummaryAlertContentState();
    sub_23202D354();
    v0 = sub_2322004EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9EDE0);
  }
}

uint64_t sub_23210228C()
{
  return sub_232000590(&qword_255F9EDF0, (uint64_t (*)(uint64_t))sub_2321021F4, MEMORY[0x24BDB94C8]);
}

uint64_t sub_2321022B0()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2321022EC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_2320FEA28(a1, v2 + 16, a2);
}

uint64_t sub_2321022F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for SummaryAlertContentState();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);

  v3 = v0 + ((v2 + 24) & ~v2);
  swift_bridgeObjectRelease();
  v4 = v3 + *(int *)(v1 + 20);
  v5 = sub_2321FDC6C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v3 + *(int *)(v1 + 24);
  v7 = sub_2321FDCC0();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  return swift_deallocObject();
}

uint64_t sub_2321023CC@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2321016D8(a1, a2);
}

void **sub_2321023E8(void **a1, void **a2, uint64_t a3)
{
  int v3;
  char *v4;
  void **v7;
  uint64_t v8;
  char *v9;
  char *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  id v26;
  void (*v28)(char *, char *, uint64_t);
  char *v29;
  char *v30;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *(void **)((char *)a2 + v8);
    *(_QWORD *)v9 = v11;
    v9[8] = *((_BYTE *)a2 + v8 + 8);
    v12 = *(void **)((char *)a2 + v8 + 16);
    *((_QWORD *)v9 + 2) = v12;
    v13 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    v14 = *(int *)(v13 + 28);
    v29 = &v10[v14];
    v30 = &v9[v14];
    v15 = sub_2321FE938();
    v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    v16 = v4;
    v17 = v11;
    v18 = v12;
    v28(v30, v29, v15);
    v19 = *(int *)(v13 + 32);
    v20 = *(void **)&v10[v19];
    *(_QWORD *)&v9[v19] = v20;
    v21 = *(int *)(a3 + 24);
    v22 = (char *)v7 + v21;
    v23 = (char *)a2 + v21;
    v24 = sub_2321FDDD4();
    v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
    v26 = v20;
    v25(v22, v23, v24);
  }
  return v7;
}

uint64_t sub_23210251C(id *a1, uint64_t a2)
{
  id *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;

  v4 = (id *)((char *)a1 + *(int *)(a2 + 20));
  v5 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  v6 = (char *)v4 + *(int *)(v5 + 28);
  v7 = sub_2321FE938();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);

  v8 = (char *)a1 + *(int *)(a2 + 24);
  v9 = sub_2321FDDD4();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

void **sub_2321025C8(void **a1, void **a2, uint64_t a3)
{
  void *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  id v25;
  char *v27;
  char *v28;

  v5 = *a2;
  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = *(void **)((char *)a2 + v6);
  *(_QWORD *)v7 = v9;
  v7[8] = *((_BYTE *)a2 + v6 + 8);
  v10 = *(void **)((char *)a2 + v6 + 16);
  *((_QWORD *)v7 + 2) = v10;
  v11 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  v12 = *(int *)(v11 + 28);
  v27 = &v8[v12];
  v28 = &v7[v12];
  v13 = sub_2321FE938();
  v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  v15 = v5;
  v16 = v9;
  v17 = v10;
  v14(v28, v27, v13);
  v18 = *(int *)(v11 + 32);
  v19 = *(void **)&v8[v18];
  *(_QWORD *)&v7[v18] = v19;
  v20 = *(int *)(a3 + 24);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_2321FDDD4();
  v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
  v25 = v19;
  v24(v21, v22, v23);
  return a1;
}

void **sub_2321026D0(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = *(int *)(a3 + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = *(void **)((char *)a1 + v9);
  v13 = *(void **)((char *)a2 + v9);
  *(_QWORD *)v10 = v13;
  v14 = v13;

  v10[8] = v11[8];
  v15 = (void *)*((_QWORD *)v11 + 2);
  v16 = (void *)*((_QWORD *)v10 + 2);
  *((_QWORD *)v10 + 2) = v15;
  v17 = v15;

  v18 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  v19 = *(int *)(v18 + 28);
  v20 = &v10[v19];
  v21 = &v11[v19];
  v22 = sub_2321FE938();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = *(int *)(v18 + 32);
  v24 = *(void **)&v10[v23];
  v25 = *(void **)&v11[v23];
  *(_QWORD *)&v10[v23] = v25;
  v26 = v25;

  v27 = *(int *)(a3 + 24);
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v30 = sub_2321FDDD4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  return a1;
}

_QWORD *sub_2321027DC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_QWORD *)v7 = *(_QWORD *)((char *)a2 + v6);
  v7[8] = *((_BYTE *)a2 + v6 + 8);
  *((_QWORD *)v7 + 2) = *(_QWORD *)((char *)a2 + v6 + 16);
  v9 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  v10 = *(int *)(v9 + 28);
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = sub_2321FE938();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  *(_QWORD *)&v7[*(int *)(v9 + 32)] = *(_QWORD *)&v8[*(int *)(v9 + 32)];
  v14 = *(int *)(a3 + 24);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_2321FDDD4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  return a1;
}

void **sub_2321028B8(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v6 = *a1;
  *a1 = *a2;

  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(void **)((char *)a1 + v7);
  *(_QWORD *)v8 = *(_QWORD *)v9;

  v8[8] = v9[8];
  v11 = (void *)*((_QWORD *)v8 + 2);
  *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);

  v12 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  v13 = *(int *)(v12 + 28);
  v14 = &v8[v13];
  v15 = &v9[v13];
  v16 = sub_2321FE938();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v17 = *(int *)(v12 + 32);
  v18 = *(void **)&v8[v17];
  *(_QWORD *)&v8[v17] = *(_QWORD *)&v9[v17];

  v19 = *(int *)(a3 + 24);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_2321FDDD4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t sub_2321029B4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2321029C0(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = sub_2321FDDD4();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_232102A60()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_232102A6C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_2321FDDD4();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for BalanceSnidgetFeedItemModelProvider()
{
  uint64_t result;

  result = qword_2541B6ED8;
  if (!qword_2541B6ED8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_232102B44()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for SnidgetFeedItemGeneratorRequest(319);
  if (v1 <= 0x3F)
  {
    result = sub_2321FDDD4();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_232102BD8()
{
  return sub_232000590(&qword_2541B6E50, type metadata accessor for SnidgetMultiValueLevelChartView, (uint64_t)&unk_23221916C);
}

uint64_t sub_232102C0C(uint64_t a1)
{
  uint64_t result;

  result = sub_232000590(&qword_2541B6ED0, (uint64_t (*)(uint64_t))type metadata accessor for BalanceSnidgetFeedItemModelProvider, (uint64_t)&unk_232215C70);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_232102C48()
{
  return sub_232102C7C(&qword_255F9EE60, qword_255F9EE68, (uint64_t (*)(uint64_t, _QWORD *))type metadata accessor for SnidgetHarnessPluginView.ActionHandler, (uint64_t)&unk_2322120D8);
}

uint64_t sub_232102C7C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_232102CF0(255, a2, a3);
    result = MEMORY[0x2348FF39C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_232102CBC()
{
  return sub_232102C7C(&qword_2541B6CE0, qword_2541B6CE8, (uint64_t (*)(uint64_t, _QWORD *))type metadata accessor for SnidgetHarnessPluginView, (uint64_t)&unk_232212090);
}

void sub_232102CF0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD v9[8];

  if (!*a2)
  {
    sub_231FFFDE4(255, &qword_2541B2998, MEMORY[0x24BE43750]);
    v9[0] = v6;
    v9[1] = type metadata accessor for SnidgetMultiValueLevelChartView(255);
    v9[2] = sub_23200409C();
    v9[3] = sub_232000590(&qword_2541B6E50, type metadata accessor for SnidgetMultiValueLevelChartView, (uint64_t)&unk_23221916C);
    v9[4] = sub_231FFFE84(&qword_2541B2970, MEMORY[0x24BE43748]);
    v9[5] = sub_231FFFE84((unint64_t *)&unk_2541B2960, MEMORY[0x24BE43740]);
    v9[6] = sub_2320447CC();
    v9[7] = sub_232044810();
    v7 = a3(a1, v9);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_232102E00(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v14 = MEMORY[0x24BEE4AF8];
    sub_23201395C(0, v1, 0);
    v2 = v14;
    v4 = *(_QWORD *)(sub_2321FDFD8() - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      v7 = sub_2321FDF84();
      v9 = v8;
      v11 = *(_QWORD *)(v14 + 16);
      v10 = *(_QWORD *)(v14 + 24);
      if (v11 >= v10 >> 1)
        sub_23201395C(v10 > 1, v11 + 1, 1);
      *(_QWORD *)(v14 + 16) = v11 + 1;
      v12 = v14 + 16 * v11;
      *(_QWORD *)(v12 + 32) = v7;
      *(_BYTE *)(v12 + 40) = v9 & 1;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void sub_232102F04(void *a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  unsigned int (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  id v50;
  void *v51;
  id v52;
  unsigned int v53;
  void *v54;
  void *v55;
  id v56;
  void *v57;
  id v58;
  id v59;
  id v60;
  uint64_t v61;
  void *v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  uint64_t v66;
  _BYTE *v67;
  NSObject *v68;
  os_log_type_t v69;
  uint8_t *v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  char *v84;
  void *v85;
  _QWORD *inited;
  void *v87;
  id v88;
  id v89;
  id v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t (*v101)(uint64_t, uint64_t, uint64_t);
  int v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  _BOOL4 v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _BYTE *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void (*v132)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v133)(uint64_t, uint64_t, uint64_t);
  char *v134;
  char *v135;
  char *v136;
  char *v137;
  char *v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  _BYTE *v144;
  char *v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  void *v159;
  uint64_t v160;
  _QWORD *v161;
  _QWORD *v162;
  uint64_t v163[2];
  uint64_t v164;

  v156 = a2;
  v159 = a1;
  v154 = a3;
  v162 = (_QWORD *)sub_23220039C();
  v3 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*(v162 - 1);
  v4 = MEMORY[0x24BDAC7A8](v162);
  v6 = (char *)&v131 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v131 - v7;
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v10);
  v155 = (char *)&v131 - v11;
  v12 = sub_2321FDC6C();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v149 = v12;
  v146 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v136 = (char *)&v131 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, qword_2541B78E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47DF8], v9);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v131 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v145 = (char *)&v131 - v19;
  v143 = sub_2321FDE4C();
  v142 = *(_QWORD *)(v143 - 8);
  MEMORY[0x24BDAC7A8](v143);
  v141 = (char *)&v131 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for SnidgetFeedItemMetadata(0);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v131 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v144 = (char *)&v131 - v25;
  sub_2320057B8(0, &qword_2541B2368, (uint64_t (*)(uint64_t))MEMORY[0x24BE445A8], v9);
  MEMORY[0x24BDAC7A8](v26);
  v135 = (char *)&v131 - v27;
  sub_2320057B8(0, &qword_2541B7618, v13, v9);
  v29 = MEMORY[0x24BDAC7A8](v28);
  v140 = (char *)&v131 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29);
  v137 = (char *)&v131 - v31;
  sub_2320057B8(0, &qword_2541B2930, (uint64_t (*)(uint64_t))MEMORY[0x24BE42FE0], v9);
  v33 = MEMORY[0x24BDAC7A8](v32);
  v35 = (char *)&v131 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33);
  v134 = (char *)&v131 - v36;
  sub_2320057B8(0, (unint64_t *)&qword_2541B2838, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], v9);
  v38 = MEMORY[0x24BDAC7A8](v37);
  v139 = (uint64_t)&v131 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = MEMORY[0x24BDAC7A8](v38);
  v147 = (char *)&v131 - v41;
  MEMORY[0x24BDAC7A8](v40);
  v150 = (uint64_t)&v131 - v42;
  v148 = sub_2321FD9F0();
  v153 = *(_QWORD *)(v148 - 8);
  v43 = MEMORY[0x24BDAC7A8](v148);
  v138 = (char *)&v131 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v43);
  v152 = (char *)&v131 - v45;
  sub_2320057B8(0, &qword_2541B6A18, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FFB0], v9);
  MEMORY[0x24BDAC7A8](v46);
  v48 = (char *)&v131 - v47;
  v157 = sub_2321FDF60();
  v151 = *(_QWORD *)(v157 - 8);
  MEMORY[0x24BDAC7A8](v157);
  v158 = (char *)&v131 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (!v50)
  {
    __break(1u);
    goto LABEL_31;
  }
  v51 = v50;
  v52 = objc_msgSend(v50, sel_features);

  if (!v52)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v53 = objc_msgSend(v52, sel_harmonia);

  if (!v53)
  {
    sub_232200300();
    v63 = sub_232200390();
    v64 = sub_2322012FC();
    if (os_log_type_enabled(v63, v64))
    {
      v65 = (uint8_t *)swift_slowAlloc();
      v66 = swift_slowAlloc();
      v163[0] = v66;
      *(_DWORD *)v65 = 136315138;
      v164 = sub_232013174(0xD000000000000023, 0x8000000232215C00, v163);
      sub_232201710();
      _os_log_impl(&dword_231FFB000, v63, v64, "[%s] feature flag off, skipping feed item model generation", v65, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v66, -1, -1);
      MEMORY[0x2348FF468](v65, -1, -1);
    }

    (*((void (**)(char *, _QWORD *))v3 + 1))(v6, v162);
    sub_232005578();
    swift_allocError();
    *v67 = 0;
    goto LABEL_14;
  }
  v133 = v3;
  v54 = (void *)objc_opt_self();
  v55 = (void *)*v161;
  v56 = objc_msgSend(v54, sel_sharedInstanceForHealthStore_, *v161);
  if (!v56)
  {
LABEL_32:
    __break(1u);
    return;
  }
  v57 = v56;
  v58 = objc_msgSend((id)objc_opt_self(), sel_appleBalanceMetricsType);
  v59 = objc_msgSend(v57, sel_displayTypeForObjectType_, v58);

  if (!v59)
  {
    sub_232200300();
    v68 = sub_232200390();
    v69 = sub_2322012E4();
    if (os_log_type_enabled(v68, v69))
    {
      v70 = (uint8_t *)swift_slowAlloc();
      v71 = swift_slowAlloc();
      v163[0] = v71;
      *(_DWORD *)v70 = 136315138;
      v164 = sub_232013174(0xD000000000000023, 0x8000000232215C00, v163);
      sub_232201710();
      _os_log_impl(&dword_231FFB000, v68, v69, "[%s] failed to created balance display type", v70, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v71, -1, -1);
      MEMORY[0x2348FF468](v70, -1, -1);
    }

    (*((void (**)(char *, _QWORD *))v133 + 1))(v8, v162);
    sub_232000300();
    swift_allocError();
LABEL_14:
    swift_willThrow();
    return;
  }
  v60 = v59;
  v61 = v160;
  sub_232084728(v159);
  if (v61)
  {

    return;
  }
  v72 = v62;
  if (!v62)
    goto LABEL_18;
  v162 = v59;
  v160 = type metadata accessor for BalanceSnidgetFeedItemModelProvider();
  sub_23200C978((uint64_t)v161 + *(int *)(v160 + 24), (uint64_t)v48);
  v73 = v151;
  v74 = v157;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v151 + 48))(v48, 1, v157) == 1)
  {

    sub_232016D88((uint64_t)v48, &qword_2541B6A18, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FFB0]);
    v60 = v162;
LABEL_18:
    v75 = sub_2321FE65C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v18, 1, 1, v75);
    v76 = sub_2321FD8B8();
    v77 = (uint64_t)v155;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v155, 1, 1, v76);
    v78 = v156;
    swift_bridgeObjectRetain();
    sub_2320D71E8(0, (uint64_t)v18, v78, v77, v24);
    sub_2321FF208();
    v79 = sub_2321FEF5C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56))(v35, 1, 1, v79);
    v80 = v60;
    v81 = sub_2321FF1FC();
    sub_23204467C(0);
    v83 = v154;
    sub_23200054C((uint64_t)v24, (uint64_t)v154 + *(int *)(v82 + 52), type metadata accessor for SnidgetFeedItemMetadata);

    *v83 = v81;
    *(_OWORD *)(v83 + 1) = 0u;
    *(_OWORD *)(v83 + 3) = 0u;
    sub_2320003D0((uint64_t)v24);
    return;
  }
  v159 = v72;
  (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v158, v48, v74);
  v84 = (char *)v161 + *(int *)(v160 + 20);
  v85 = *(void **)&v84[*(int *)(type metadata accessor for SnidgetFeedItemGeneratorRequest(0) + 32)];
  type metadata accessor for MostRecentSampleSnidgetStringBuilder();
  inited = (_QWORD *)swift_initStackObject();
  inited[2] = v55;
  v87 = (void *)objc_opt_self();
  v88 = v85;
  v89 = v55;
  v90 = objc_msgSend(v87, sel_sharedInstanceForHealthStore_, v89);
  inited[4] = v90;
  v160 = (uint64_t)v84;
  if (!v85)
  {
    v91 = v90;
    v88 = objc_msgSend(v91, sel_createHKUnitPreferenceController);

  }
  v92 = v149;
  v93 = v150;
  v94 = v148;

  inited[3] = v88;
  sub_232103F04();
  SnidgetStringBuilder.makePrimaryAttributedString(localizedString:)();
  swift_bridgeObjectRelease();
  v95 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v153 + 56);
  v95(v93, 1, 1, v94);
  sub_23210420C();
  if (v96)
  {
    v97 = (uint64_t)v147;
    SnidgetStringBuilder.makeSupplementaryAttributedString(localizedString:)();
    swift_bridgeObjectRelease();
    sub_232016D88(v93, (unint64_t *)&qword_2541B2838, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8]);
    v95(v97, 0, 1, v94);
    sub_232079AE4(v97, v93);
  }
  v132 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v95;
  v161 = inited;
  v98 = v162;
  v99 = (uint64_t)v137;
  sub_2321FE020();
  v100 = v146;
  v101 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v146 + 48);
  v102 = v101(v99, 1, v92);
  v133 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v101;
  v103 = v134;
  if (v102 == 1)
  {
    sub_2321FDC3C();
    sub_232016D88(v99, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v100 + 32))(v134, v99, v92);
  }
  v104 = v135;
  sub_2321FF208();
  sub_232000448();
  v106 = *(int *)(v105 + 48);
  v103[v106] = (sub_2321FDF54() & 1) == 0;
  v107 = *MEMORY[0x24BE42FD8];
  v108 = sub_2321FEF5C();
  v109 = *(_QWORD *)(v108 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v109 + 104))(v103, v107, v108);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v109 + 56))(v103, 0, 1, v108);
  v162 = v98;
  v137 = (char *)sub_2321FF1FC();
  v132(v147, 1, 1, v94);
  (*(void (**)(char *, char *, uint64_t))(v153 + 16))(v138, v152, v94);
  sub_232079A34(v150, v139);
  v163[0] = 0x5F74656764696E53;
  v163[1] = 0xE800000000000000;
  v110 = *(id *)(v160 + 16);
  v111 = objc_msgSend(v110, sel_description);
  sub_232200EC4();

  sub_232200F48();
  swift_bridgeObjectRelease();
  sub_2321FF58C();
  swift_bridgeObjectRelease();
  v112 = sub_2321FF5A4();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 56))(v104, 0, 1, v112);
  sub_2321FF6C4();
  swift_allocObject();
  v160 = sub_2321FF6B8();
  v147 = (char *)sub_232104874();
  v114 = v113;
  v116 = v115;
  v117 = v141;
  sub_2321FE038();
  v118 = sub_2321FDE40();
  (*(void (**)(char *, uint64_t))(v142 + 8))(v117, v143);
  v119 = (uint64_t)v140;
  sub_2321FE020();
  v120 = v149;
  if (v133(v119, 1, v149) == 1)
  {
    sub_2321FDC3C();
    sub_232016D88(v119, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v146 + 32))(v136, v119, v120);
  }
  v121 = v154;
  v122 = v118 > 0;
  v123 = (uint64_t)v145;
  sub_2321FE62C();
  v124 = sub_2321FE65C();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v124 - 8) + 56))(v123, 0, 1, v124);
  v125 = sub_2321FD8B8();
  v126 = (uint64_t)v155;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v125 - 8) + 56))(v155, 1, 1, v125);
  v127 = v156;
  swift_bridgeObjectRetain();
  v128 = v144;
  sub_2320D71E8(v122, v123, v127, v126, v144);
  swift_release();

  v129 = v160;
  *v121 = (uint64_t)v137;
  v121[1] = v129;
  v121[2] = (uint64_t)v147;
  v121[3] = v114;
  v121[4] = v116;
  sub_23204467C(0);
  sub_232104E50((uint64_t)v128, (uint64_t)v121 + *(int *)(v130 + 52));
  sub_232016D88(v150, (unint64_t *)&qword_2541B2838, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8]);
  (*(void (**)(char *, uint64_t))(v153 + 8))(v152, v148);
  (*(void (**)(char *, uint64_t))(v151 + 8))(v158, v157);
}

uint64_t sub_232103F04()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v0 = sub_2321FDD08();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_232200E7C();
  MEMORY[0x24BDAC7A8](v1);
  sub_2321FDF60();
  if ((sub_2321FE02C() & 1) != 0)
    goto LABEL_2;
  if ((sub_2321FDF54() & 1) != 0)
  {
    v4 = sub_232104BDC();
    if (v4 >= 1)
    {
      v5 = v4;
      sub_232200E70();
      if (qword_2541B7488 != -1)
        swift_once();
      v6 = (id)qword_2541BF760;
      sub_2321FDCFC();
      sub_232200EF4();
      sub_2320057B8(0, (unint64_t *)&qword_2541B5860, (uint64_t (*)(uint64_t))sub_23204FB8C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v7 = swift_allocObject();
      v8 = MEMORY[0x24BEE1768];
      *(_OWORD *)(v7 + 16) = xmmword_232210D40;
      v9 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v7 + 56) = v8;
      *(_QWORD *)(v7 + 64) = v9;
      *(_QWORD *)(v7 + 32) = v5;
      v3 = sub_232200EDC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v3;
    }
LABEL_2:
    sub_232200E70();
    if (qword_2541B7488 != -1)
      swift_once();
    v2 = (id)qword_2541BF760;
    sub_2321FDCFC();
    return sub_232200EF4();
  }
  if (qword_2541B7488 != -1)
    swift_once();
  return sub_2321FDA14();
}

uint64_t sub_23210420C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  id v32;
  unint64_t v33;
  id v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  void (*v58)(char *, unint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;

  sub_232104F4C(0, &qword_2541B2820, MEMORY[0x24BDCC218]);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v46 - v4;
  sub_232104F4C(0, &qword_2541B2818, MEMORY[0x24BDCC1F0]);
  v54 = v6;
  v52 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v50 = (char *)&v46 - v7;
  sub_232104F4C(0, &qword_2541B2830, MEMORY[0x24BDCC228]);
  v55 = v8;
  v53 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v51 = (char *)&v46 - v9;
  v10 = sub_2321FDD08();
  MEMORY[0x24BDAC7A8](v10);
  v57 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_232200E7C();
  MEMORY[0x24BDAC7A8](v12);
  v56 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2321FDEC4();
  v60 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = 0;
  if ((sub_2321FDF54() & 1) == 0)
    return v17;
  if (sub_232104BDC() < 1)
  {
    sub_232200E70();
    if (qword_2541B7488 != -1)
      swift_once();
    v32 = (id)qword_2541BF760;
    sub_2321FDCFC();
    return sub_232200EF4();
  }
  v18 = sub_2321FDE94();
  MEMORY[0x24BDAC7A8](v18);
  *(&v46 - 2) = v0;
  v20 = sub_232032358((uint64_t (*)(_QWORD))sub_232105018, (uint64_t)(&v46 - 4), v19);
  v21 = *(_QWORD *)(v20 + 16);
  if (v21)
  {
    v47 = v5;
    v48 = v3;
    v49 = v2;
    v62 = (_QWORD *)MEMORY[0x24BEE4AF8];
    sub_2320138B4(0, v21, 0);
    v22 = (*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
    v46 = v20;
    v23 = v20 + v22;
    v24 = *(_QWORD *)(v60 + 72);
    v58 = *(void (**)(char *, unint64_t, uint64_t))(v60 + 16);
    v59 = v24;
    do
    {
      v58(v16, v23, v14);
      v25 = sub_2321FDE88();
      v27 = v26;
      (*(void (**)(char *, uint64_t))(v60 + 8))(v16, v14);
      v28 = v62;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2320138B4(0, v28[2] + 1, 1);
        v28 = v62;
      }
      v30 = v28[2];
      v29 = v28[3];
      if (v30 >= v29 >> 1)
      {
        sub_2320138B4(v29 > 1, v30 + 1, 1);
        v28 = v62;
      }
      v28[2] = v30 + 1;
      v31 = &v28[2 * v30];
      v31[4] = v25;
      v31[5] = v27;
      v23 += v59;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease();
    v3 = v48;
    v2 = v49;
    v5 = v47;
  }
  else
  {
    swift_bridgeObjectRelease();
    v28 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v33 = v28[2];
  if (v33 <= 2)
  {
    v61 = v28;
    v41 = v52;
    v42 = v50;
    v43 = v54;
    (*(void (**)(char *, _QWORD, uint64_t))(v52 + 104))(v50, *MEMORY[0x24BDCC1E8], v54);
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDCC210], v2);
    sub_232104EF8();
    sub_232000590((unint64_t *)&qword_2541B5500, (uint64_t (*)(uint64_t))sub_232104EF8, MEMORY[0x24BEE12C8]);
    v44 = v51;
    sub_2321FD7D4();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v43);
    sub_232079C60();
    v45 = v55;
    sub_232200FCC();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v44, v45);
    swift_bridgeObjectRelease();
    return (uint64_t)v62;
  }
  sub_232200E70();
  if (qword_2541B7488 != -1)
    swift_once();
  v34 = (id)qword_2541BF760;
  sub_2321FDCFC();
  result = sub_232200EF4();
  if (v28[2])
  {
    v37 = v28[4];
    v36 = v28[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v38 = v33 - 1;
    sub_2320057B8(0, (unint64_t *)&qword_2541B5860, (uint64_t (*)(uint64_t))sub_23204FB8C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_232210D30;
    v40 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v39 + 56) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v39 + 64) = v40;
    *(_QWORD *)(v39 + 32) = v38;
    *(_QWORD *)(v39 + 96) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v39 + 104) = sub_2320168D8();
    *(_QWORD *)(v39 + 72) = v37;
    *(_QWORD *)(v39 + 80) = v36;
    v17 = sub_232200EDC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v17;
  }
  __break(1u);
  return result;
}

uint64_t sub_232104874()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t result;
  char *v20;
  double *v21;
  char *v22;
  unint64_t v23;
  void (*v24)(unint64_t);
  uint64_t v25;
  uint64_t v26;
  void (*v27)(unint64_t, uint64_t, uint64_t);
  double *v28;
  char *v29;
  double *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  _QWORD *v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;

  v1 = sub_2321FEA34();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v36 - v6;
  sub_2321FDF60();
  v8 = 0;
  if ((sub_2321FE02C() & 1) != 0)
    return (uint64_t)v8;
  v9 = sub_2321FDE94();
  MEMORY[0x24BDAC7A8](v9);
  *(&v36 - 2) = v0;
  v10 = sub_232006314((void (*)(uint64_t))sub_232104E94, (uint64_t)(&v36 - 4), v9);
  swift_bridgeObjectRelease();
  sub_232104EBC();
  sub_232200B94();
  sub_23220165C();
  sub_2321FEA28();
  sub_232200BA0();
  sub_23220165C();
  sub_2321FEA28();
  sub_2321FDFA8();
  v12 = v11;
  v14 = v13;
  v15 = (v13 - v11) * 0.25;
  sub_2320057B8(0, &qword_2541B71C0, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v16 = type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v44 = *(_QWORD *)(v17 + 72);
  result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_232211930;
  if (v12 - v15 > v12)
  {
    __break(1u);
  }
  else
  {
    v40 = 0;
    v41 = v10;
    v20 = v5;
    v36 = (_QWORD *)result;
    v21 = (double *)(result + v18);
    v22 = v7;
    v23 = result + v18 + *(int *)(v16 + 20);
    v38 = v2;
    v24 = *(void (**)(unint64_t))(v2 + 16);
    v43 = v20;
    v24(v23);
    v25 = *MEMORY[0x24BE41358];
    v26 = sub_2321FEA7C();
    v27 = *(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104);
    v27(v23, v25, v26);
    *v21 = v12 - v15;
    v21[1] = v12;
    *((_BYTE *)v21 + *(int *)(v16 + 24)) = 0;
    v28 = (double *)((char *)v21 + v44);
    v29 = (char *)v21 + v44 + *(int *)(v16 + 20);
    v42 = v22;
    v39 = v1;
    v37 = (void (*)(char *, char *, uint64_t))v24;
    ((void (*)(char *, char *, uint64_t))v24)(v29, v22, v1);
    result = ((uint64_t (*)(char *, uint64_t, uint64_t))v27)(v29, v25, v26);
    *v28 = v12;
    v28[1] = v14;
    *((_BYTE *)v28 + *(int *)(v16 + 24)) = 1;
    if (v14 <= v14 + v15)
    {
      v30 = (double *)((char *)v21 + 2 * v44);
      v31 = (char *)v30 + *(int *)(v16 + 20);
      v32 = v43;
      v33 = v39;
      v37(v31, v43, v39);
      v27((unint64_t)v31, v25, v26);
      *v30 = v14;
      v30[1] = v14 + v15;
      *((_BYTE *)v30 + *(int *)(v16 + 24)) = 0;
      v34 = sub_232102E00(v41);
      swift_bridgeObjectRelease();
      v8 = v36;
      sub_2321C97A0(v36, v34);
      v35 = *(void (**)(char *, uint64_t))(v38 + 8);
      v35(v32, v33);
      v35(v42, v33);
      return (uint64_t)v8;
    }
  }
  __break(1u);
  return result;
}

void sub_232104BBC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_232102F04(*(void **)a1, *(_QWORD *)(a1 + 16), a2);
}

uint64_t sub_232104BDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  int64_t v5;
  unint64_t v6;
  uint64_t v7;
  void (*v8)(char *, unint64_t, uint64_t);
  uint64_t v9;
  char v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  BOOL v19;
  _QWORD v20[2];
  uint64_t v21;
  _QWORD *v22;

  v0 = sub_2321FDFD8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2321FDF48();
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v22 = (_QWORD *)MEMORY[0x24BEE4AF8];
    sub_23201385C(0, v5, 0);
    v6 = v4 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
    v7 = *(_QWORD *)(v1 + 72);
    v20[1] = v4;
    v21 = v7;
    v8 = *(void (**)(char *, unint64_t, uint64_t))(v1 + 16);
    v9 = v1;
    do
    {
      v8(v3, v6, v0);
      v10 = sub_2321FDF9C();
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      v11 = v22;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23201385C(0, v11[2] + 1, 1);
        v11 = v22;
      }
      v13 = v11[2];
      v12 = v11[3];
      if (v13 >= v12 >> 1)
      {
        sub_23201385C(v12 > 1, v13 + 1, 1);
        v11 = v22;
      }
      v11[2] = v13 + 1;
      v11[v13 + 4] = v10 & 1;
      v6 += v21;
      --v5;
      v1 = v9;
    }
    while (v5);
    result = swift_bridgeObjectRelease();
    v15 = v11[2];
    if (v15)
    {
LABEL_9:
      v16 = 0;
      v17 = v11 + 4;
      while (1)
      {
        v18 = *v17++;
        v19 = __OFADD__(v16, v18);
        v16 += v18;
        if (v19)
          break;
        if (!--v15)
          goto LABEL_15;
      }
      __break(1u);
      return result;
    }
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v15 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
    if (v15)
      goto LABEL_9;
  }
  v16 = 0;
LABEL_15:
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_232104DB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char v4;
  uint64_t v6;

  v0 = sub_2321FDFD8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2321FDF3C();
  v4 = sub_2321FDF9C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4 & 1;
}

uint64_t sub_232104E50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SnidgetFeedItemMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_232104E94()
{
  return sub_2321FDF3C();
}

unint64_t sub_232104EBC()
{
  unint64_t result;

  result = qword_2541B0D58;
  if (!qword_2541B0D58)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2541B0D58);
  }
  return result;
}

void sub_232104EF8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B54F8)
  {
    v0 = sub_232201080();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B54F8);
  }
}

void sub_232104F4C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD v11[4];

  if (!*a2)
  {
    v6 = sub_2321FD828();
    v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCB5F0];
    sub_232104EF8();
    v11[0] = v6;
    v11[1] = v8;
    v11[2] = sub_232000590(&qword_2541B27D8, v7, MEMORY[0x24BDCB5E8]);
    v11[3] = sub_232000590((unint64_t *)&qword_2541B5500, (uint64_t (*)(uint64_t))sub_232104EF8, MEMORY[0x24BEE12C8]);
    v9 = a3(a1, v11);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_232105018()
{
  return sub_232104DB0() & 1;
}

uint64_t type metadata accessor for SignificantChangesPromotionTileActionHandler()
{
  uint64_t result;

  result = qword_255F9EEE8;
  if (!qword_255F9EEE8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_232105070()
{
  return swift_initClassMetadata2();
}

void sub_2321050AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t ObjectType;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38[4];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v2 = sub_2321FF52C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v36 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2321FF520();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23220039C();
  v35 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232200354();
  v12 = sub_232200390();
  v13 = sub_2322012FC();
  if (os_log_type_enabled(v12, v13))
  {
    v33 = v1;
    v14 = swift_slowAlloc();
    v30 = v6;
    v15 = (uint8_t *)v14;
    v16 = swift_slowAlloc();
    v31 = v5;
    v17 = v16;
    v38[0] = v16;
    v32 = v3;
    *(_DWORD *)v15 = 136446210;
    v29 = v9;
    v18 = sub_232201BF0();
    v37 = sub_232013174(v18, v19, v38);
    v3 = v32;
    sub_232201710();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_231FFB000, v12, v13, "%{public}s did tap action", v15, 0xCu);
    swift_arrayDestroy();
    v20 = v17;
    v5 = v31;
    MEMORY[0x2348FF468](v20, -1, -1);
    v21 = v15;
    v6 = v30;
    MEMORY[0x2348FF468](v21, -1, -1);

    (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v29);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v9);
  }
  sub_2321FF6DC();
  sub_2321FF508();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_232016AD8(v38, v38[3]);
  v22 = (void *)sub_2321FF4D8();
  v23 = (void *)objc_opt_self();
  v24 = v22;
  v25 = objc_msgSend(v23, sel_defaultCenter);
  sub_232031768();
  sub_232201344();
  v26 = objc_allocWithZone((Class)sub_2321FF790());
  v27 = (void *)sub_2321FF760();
  v28 = v36;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v36, *MEMORY[0x24BE44480], v2);
  sub_2321FF778();

  (*(void (**)(char *, uint64_t))(v3 + 8))(v28, v2);
  sub_232016AFC((uint64_t)v38);
  sub_232105418();
}

void sub_232105418()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t);
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  _QWORD v21[4];
  _QWORD v22[4];

  v0 = sub_2321FEDA0();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_2321FF520();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v21[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v21[-1] - v7;
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v21[-1] - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v21[-1] - v12;
  sub_2321FF6DC();
  sub_2321FF508();
  v14 = *(void (**)(char *, uint64_t))(v2 + 8);
  v14(v13, v1);
  sub_232016AD8(v22, v22[3]);
  sub_2321FF4D8();
  sub_2321FF6DC();
  v15 = (void *)sub_2321FF514();
  v14(v11, v1);
  sub_2322013EC();

  sub_2321FF6DC();
  sub_2321FF508();
  v14(v8, v1);
  sub_232016AD8(v21, v21[3]);
  sub_2321FF4E4();
  v16 = objc_allocWithZone((Class)sub_2321FF118());
  v17 = (void *)sub_2321FF10C();
  sub_232016AFC((uint64_t)v21);
  sub_232016AFC((uint64_t)v22);
  sub_2321FF6DC();
  v18 = (void *)sub_2321FF514();
  v14(v5, v1);
  v19 = objc_msgSend(v18, sel_navigationController);

  if (v19)
  {
    objc_msgSend(v19, sel_pushViewController_animated_, v17, 1);

  }
}

uint64_t sub_232105698(uint64_t a1)
{
  objc_class *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v10;

  v3 = sub_2321FF520();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_allocWithZone(v1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  v8 = sub_2321FF6E8();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v8;
}

id sub_232105740()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SignificantChangesPromotionTileActionHandler();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_232105774()
{
  return type metadata accessor for SignificantChangesPromotionTileActionHandler();
}

uint64_t sub_23210577C()
{
  return sub_232000590(&qword_255F9EF38, MEMORY[0x24BE42BF8], MEMORY[0x24BE42BE8]);
}

uint64_t sub_2321057A8()
{
  return sub_232000590(qword_255F9EF40, (uint64_t (*)(uint64_t))type metadata accessor for SignificantChangesPromotionTileActionHandler, (uint64_t)&unk_232215CC0);
}

id sub_2321057E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  void (*v27)(char *, char *, uint64_t);
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  char *v30;
  char v31;
  void (*v32)(char *, uint64_t);
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  id v38;
  uint64_t v39;
  char *v40;
  id v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  id v47;
  id v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  id v52;
  char *v53;
  id v54;
  void *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  id v60;
  NSObject *v61;
  os_log_type_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  id v66;
  id v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  id v71;
  void (*v73)(char *, uint64_t, uint64_t);
  char *v74;
  char *v75;
  char *v76;
  unsigned int (*v77)(uint64_t, uint64_t, uint64_t);
  char *v78;
  char *v79;
  char *v80;
  uint64_t ObjectType;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  id v88;

  ObjectType = swift_getObjectType();
  v0 = sub_23220039C();
  v84 = *(_QWORD *)(v0 - 8);
  v85 = v0;
  v1 = MEMORY[0x24BDAC7A8](v0);
  v83 = (char *)&v73 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v80 = (char *)&v73 - v3;
  sub_23202CAC8(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v79 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v82 = (char *)&v73 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v73 - v9;
  v11 = sub_2321FE6D4();
  v12 = *(_QWORD **)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v78 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v73 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v73 - v19;
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&v73 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v73 - v24;
  sub_232003E9C(0, (unint64_t *)&qword_2541B0C70);
  sub_232016040(&qword_2541B0C68, (unint64_t *)&qword_2541B0C70, 0x24BE4A4C0, (uint64_t)&protocol conformance descriptor for HKCodableSummaryData);
  sub_2321FF25C();
  v26 = (unsigned int (*)(char *, uint64_t, uint64_t))v12[6];
  if (v26(v10, 1, v11) == 1)
  {
    sub_232003E50((uint64_t)v10);
LABEL_10:
    v40 = v83;
    sub_232200318();
    v41 = v86;
    v42 = sub_232200390();
    v43 = sub_2322012FC();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = swift_slowAlloc();
      v86 = (id)swift_slowAlloc();
      v88 = v86;
      *(_DWORD *)v44 = 136315650;
      v45 = sub_232201BF0();
      v87 = sub_232013174(v45, v46, (uint64_t *)&v88);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 12) = 2080;
      v87 = sub_232013174(0xD000000000000013, 0x8000000232207670, (uint64_t *)&v88);
      sub_232201710();
      *(_WORD *)(v44 + 22) = 2080;
      v47 = v41;
      v48 = objc_msgSend(v47, sel_description);
      v49 = sub_232200EC4();
      v51 = v50;

      v87 = sub_232013174(v49, v51, (uint64_t *)&v88);
      sub_232201710();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v42, v43, "[%s] %s: Version mismatch found when decoding summary data %s", (uint8_t *)v44, 0x20u);
      v52 = v86;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v52, -1, -1);
      MEMORY[0x2348FF468](v44, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v84 + 8))(v40, v85);
    return 0;
  }
  v76 = v20;
  v77 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v26;
  v75 = v17;
  v27 = (void (*)(char *, char *, uint64_t))v12[4];
  v27(v25, v10, v11);
  sub_2321FE6B0();
  v28 = (void (*)(char *, char *, uint64_t))v12[2];
  v29 = (uint64_t)v82;
  v28(v82, v25, v11);
  v30 = (char *)v12[7];
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v30)(v29, 0, 1, v11);
  v31 = sub_2321FE6A4();
  sub_232003E50(v29);
  v32 = (void (*)(char *, uint64_t))v12[1];
  v32(v23, v11);
  if ((v31 & 1) == 0)
  {
    v32(v25, v11);
    goto LABEL_10;
  }
  v83 = v30;
  v33 = objc_msgSend(v86, sel_contentData);
  v73 = (void (*)(char *, uint64_t, uint64_t))v27;
  if (v33)
  {
    v34 = sub_2321FDAD4();
    v36 = v35;

    v33 = (id)sub_2321FDAC8();
    sub_232003ED4(v34, v36);
  }
  v37 = v28;
  v38 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A4B8]), sel_initWithData_, v33);

  if (!v38)
  {
LABEL_20:
    v83 = (char *)v32;
    v74 = v25;
    v59 = v80;
    sub_232200318();
    v60 = v86;
    v61 = sub_232200390();
    v62 = sub_2322012FC();
    if (os_log_type_enabled(v61, v62))
    {
      v63 = swift_slowAlloc();
      v86 = (id)swift_slowAlloc();
      v88 = v86;
      *(_DWORD *)v63 = 136315650;
      v64 = sub_232201BF0();
      v87 = sub_232013174(v64, v65, (uint64_t *)&v88);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v63 + 12) = 2080;
      v87 = sub_232013174(0xD000000000000013, 0x8000000232207670, (uint64_t *)&v88);
      sub_232201710();
      *(_WORD *)(v63 + 22) = 2080;
      v66 = v60;
      v67 = objc_msgSend(v66, sel_description);
      v68 = sub_232200EC4();
      v70 = v69;

      v87 = sub_232013174(v68, v70, (uint64_t *)&v88);
      sub_232201710();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v61, v62, "[%s] %s: Version mismatch found when decoding current value %s", (uint8_t *)v63, 0x20u);
      v71 = v86;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v71, -1, -1);
      MEMORY[0x2348FF468](v63, -1, -1);

      (*(void (**)(char *, uint64_t))(v84 + 8))(v80, v85);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v84 + 8))(v59, v85);
    }
    ((void (*)(char *, uint64_t))v83)(v74, v11);
    return 0;
  }
  sub_232003E9C(0, &qword_2541B0CD0);
  sub_232016040((unint64_t *)&qword_2541B0CC8, &qword_2541B0CD0, 0x24BE4A4B8, (uint64_t)&protocol conformance descriptor for HKCodableSummaryCurrentValue);
  v39 = (uint64_t)v79;
  sub_2321FF25C();
  if (v77(v39, 1, v11) == 1)
  {

    sub_232003E50(v39);
    goto LABEL_20;
  }
  v53 = v76;
  v73(v76, v39, v11);
  v54 = objc_msgSend(v38, sel_kindRawValue);
  if (!v54
    || (v55 = v54,
        sub_232200EC4(),
        v55,
        _sSo28HKCodableSummaryCurrentValueC9SummariesE4KindO03rawD0AESgSS_tcfC_0() == 22))
  {
    v32(v53, v11);
LABEL_19:

    goto LABEL_20;
  }
  v56 = v78;
  sub_2321FE6B0();
  v57 = v75;
  v73(v75, (uint64_t)v56, v11);
  v58 = (uint64_t)v82;
  v37(v82, v53, v11);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v83)(v58, 0, 1, v11);
  LOBYTE(v56) = sub_2321FE6A4();
  sub_232003E50(v58);
  v32(v57, v11);
  v32(v53, v11);
  if ((v56 & 1) == 0)
    goto LABEL_19;
  v32(v25, v11);
  return v38;
}

id sub_232106138()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  void (*v24)(char *, _QWORD, uint64_t, uint64_t);
  char v25;
  void (*v26)(char *, uint64_t);
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  id v32;
  uint64_t v33;
  char *v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  id v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  char *v46;
  char *v47;
  char v48;
  char *v49;
  void (*v50)(char *, uint64_t);
  char *v51;
  id v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  id v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t);
  void (*v69)(char *, char *, uint64_t);
  char *v70;
  char *v71;
  char *v72;
  uint64_t ObjectType;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v2 = sub_23220039C();
  v75 = *(_QWORD *)(v2 - 8);
  v76 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v74 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v72 = (char *)&v67 - v5;
  sub_23202CAC8(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v71 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v67 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v67 - v12;
  v14 = sub_2321FE6D4();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v70 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v67 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v67 - v21;
  sub_232003E9C(0, (unint64_t *)&qword_2541B0C70);
  sub_232016040(&qword_2541B0C68, (unint64_t *)&qword_2541B0C70, 0x24BE4A4C0, (uint64_t)&protocol conformance descriptor for HKCodableSummaryData);
  sub_2321FF25C();
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v23(v13, 1, v14) == 1)
  {
    sub_232003E50((uint64_t)v13);
LABEL_10:
    v34 = v74;
    sub_232200318();
    v35 = v1;
    v36 = sub_232200390();
    v37 = sub_2322012FC();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = swift_slowAlloc();
      v72 = (char *)swift_slowAlloc();
      v78 = v72;
      *(_DWORD *)v38 = 136315650;
      v39 = sub_232201BF0();
      v77 = sub_232013174(v39, v40, (uint64_t *)&v78);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 12) = 2080;
      v77 = sub_232013174(0x646F4D646E657274, 0xEC00000029286C65, (uint64_t *)&v78);
      sub_232201710();
      *(_WORD *)(v38 + 22) = 2080;
      v41 = v35;
      v42 = objc_msgSend(v41, sel_description);
      v43 = sub_232200EC4();
      v45 = v44;

      v77 = sub_232013174(v43, v45, (uint64_t *)&v78);
      sub_232201710();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v36, v37, "[%s] %s: Version mismatch found when decoding summary data %s", (uint8_t *)v38, 0x20u);
      v46 = v72;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v46, -1, -1);
      MEMORY[0x2348FF468](v38, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v75 + 8))(v34, v76);
    return 0;
  }
  v69 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v69(v22, v13, v14);
  sub_2321FE6B0();
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v11, v22, v14);
  v24 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56);
  v24(v11, 0, 1, v14);
  v25 = sub_2321FE6A4();
  sub_232003E50((uint64_t)v11);
  v26 = *(void (**)(char *, uint64_t))(v15 + 8);
  v26(v20, v14);
  if ((v25 & 1) == 0)
  {
    v26(v22, v14);
    goto LABEL_10;
  }
  v27 = objc_msgSend(v1, sel_contentData);
  v68 = (void (*)(uint64_t, uint64_t))v26;
  if (v27)
  {
    v28 = sub_2321FDAD4();
    v30 = v29;

    v27 = (id)sub_2321FDAC8();
    sub_232003ED4(v28, v30);
  }
  v31 = v22;
  v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A528]), sel_initWithData_, v27);

  if (!v32)
  {
LABEL_17:
    v51 = v72;
    sub_232200318();
    v52 = v1;
    v53 = sub_232200390();
    v54 = sub_2322012FC();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = swift_slowAlloc();
      v74 = (char *)swift_slowAlloc();
      v78 = v74;
      *(_DWORD *)v55 = 136315650;
      v56 = sub_232201BF0();
      v77 = sub_232013174(v56, v57, (uint64_t *)&v78);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v55 + 12) = 2080;
      v77 = sub_232013174(0x646F4D646E657274, 0xEC00000029286C65, (uint64_t *)&v78);
      sub_232201710();
      *(_WORD *)(v55 + 22) = 2080;
      v58 = v52;
      v59 = objc_msgSend(v58, sel_description);
      v60 = sub_232200EC4();
      ObjectType = (uint64_t)v31;
      v61 = v60;
      v63 = v62;

      v77 = sub_232013174(v61, v63, (uint64_t *)&v78);
      sub_232201710();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v53, v54, "[%s] %s: Version mismatch found when decoding trend value %s", (uint8_t *)v55, 0x20u);
      v64 = v74;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v64, -1, -1);
      MEMORY[0x2348FF468](v55, -1, -1);

      (*(void (**)(char *, uint64_t))(v75 + 8))(v72, v76);
      v65 = ObjectType;
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v75 + 8))(v51, v76);
      v65 = (uint64_t)v31;
    }
    v68(v65, v14);
    return 0;
  }
  sub_232003E9C(0, &qword_2541B0CE0);
  sub_232016040(&qword_2541B0CD8, &qword_2541B0CE0, 0x24BE4A528, (uint64_t)&protocol conformance descriptor for HKCodableSummaryTrendResults);
  v33 = (uint64_t)v71;
  sub_2321FF25C();
  if (v23((char *)v33, 1, v14) == 1)
  {

    sub_232003E50(v33);
    goto LABEL_17;
  }
  v47 = v70;
  v69(v70, (char *)v33, v14);
  sub_2321FE6B0();
  v24(v11, 0, 1, v14);
  v48 = sub_2321FE6A4();
  sub_232003E50((uint64_t)v11);
  v49 = v47;
  v50 = (void (*)(char *, uint64_t))v68;
  v68((uint64_t)v49, v14);
  if ((v48 & 1) == 0)
  {

    goto LABEL_17;
  }
  v50(v31, v14);
  return v32;
}

uint64_t sub_232106954()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  id v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  id v33;
  char *v34;
  char *v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  id v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  char *v51;
  char v52;
  char *v53;
  id v54;
  NSObject *v55;
  os_log_type_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  id v61;
  id v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  id v66;
  uint64_t v67;
  char *v68;
  void (*v69)(char *, char *, uint64_t);
  void (*v70)(char *, _QWORD, uint64_t, uint64_t);
  void (*v71)(char *, char *, uint64_t);
  char *v72;
  void (*v73)(id, char *);
  uint64_t ObjectType;
  uint64_t v75;
  uint64_t v76;
  id v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;

  ObjectType = swift_getObjectType();
  v0 = sub_23220039C();
  v75 = *(_QWORD *)(v0 - 8);
  v76 = v0;
  v1 = MEMORY[0x24BDAC7A8](v0);
  v78 = (char *)&v67 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v72 = (char *)&v67 - v3;
  sub_23202CAC8(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v73 = (void (*)(id, char *))((char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v67 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v67 - v10;
  v12 = sub_2321FE6D4();
  v13 = *(_QWORD **)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v67 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v67 - v20;
  sub_232003E9C(0, (unint64_t *)&qword_2541B0C70);
  v22 = v77;
  sub_232016040(&qword_2541B0C68, (unint64_t *)&qword_2541B0C70, 0x24BE4A4C0, (uint64_t)&protocol conformance descriptor for HKCodableSummaryData);
  sub_2321FF25C();
  v23 = (unsigned int (*)(char *, uint64_t, uint64_t))v13[6];
  if (v23(v11, 1, v12) == 1)
  {
    sub_232003E50((uint64_t)v11);
LABEL_11:
    v35 = v78;
    sub_232200318();
    v36 = v22;
    v37 = sub_232200390();
    v38 = sub_2322012FC();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = swift_slowAlloc();
      v40 = swift_slowAlloc();
      v80 = v40;
      *(_DWORD *)v39 = 136315650;
      v41 = sub_232201BF0();
      v79 = sub_232013174(v41, v42, &v80);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 2080;
      v79 = sub_232013174(0x646F4D7472616863, 0xEC00000029286C65, &v80);
      sub_232201710();
      *(_WORD *)(v39 + 22) = 2080;
      v43 = v36;
      v44 = objc_msgSend(v43, sel_description);
      v45 = sub_232200EC4();
      v47 = v46;

      v79 = sub_232013174(v45, v47, &v80);
      sub_232201710();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v37, v38, "[%s] %s: Version mismatch found when decoding summary data from: %s", (uint8_t *)v39, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v40, -1, -1);
      MEMORY[0x2348FF468](v39, -1, -1);

      v48 = *(void (**)(char *, uint64_t))(v75 + 8);
      v49 = v78;
    }
    else
    {

      v48 = *(void (**)(char *, uint64_t))(v75 + 8);
      v49 = v35;
    }
    v48(v49, v76);
    return 0;
  }
  v71 = (void (*)(char *, char *, uint64_t))v13[4];
  v71(v21, v11, v12);
  sub_2321FE6B0();
  v69 = (void (*)(char *, char *, uint64_t))v13[2];
  v69(v9, v21, v12);
  v70 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v13[7];
  v70(v9, 0, 1, v12);
  v24 = sub_2321FE6A4();
  sub_232003E50((uint64_t)v9);
  v25 = (void (*)(char *, uint64_t))v13[1];
  v25(v19, v12);
  if ((v24 & 1) == 0)
  {
    v25(v21, v12);
    goto LABEL_11;
  }
  v26 = (uint64_t)v9;
  if (!objc_msgSend(v22, sel_hasContentData))
  {
    v25(v21, v12);
    return 1;
  }
  v27 = objc_msgSend(v22, sel_contentData);
  v78 = (char *)v12;
  v68 = v19;
  if (v27)
  {
    v28 = sub_2321FDAD4();
    v30 = v29;

    v27 = (id)sub_2321FDAC8();
    sub_232003ED4(v28, v30);
  }
  v31 = v16;
  v32 = (uint64_t)v73;
  v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A370]), sel_initWithData_, v27);

  if (v33)
  {
    sub_232003E9C(0, &qword_2541B0CB8);
    sub_232016040(&qword_2541B0CB0, &qword_2541B0CB8, 0x24BE4A370, (uint64_t)&protocol conformance descriptor for HKCodableChartSharableModel);
    sub_2321FF25C();
    v34 = v78;
    if (v23((char *)v32, 1, (uint64_t)v78) == 1)
    {

      sub_232003E50(v32);
    }
    else
    {
      v71(v31, (char *)v32, (uint64_t)v34);
      v51 = v68;
      sub_2321FE6B0();
      v69((char *)v26, v31, (uint64_t)v34);
      v70((char *)v26, 0, 1, (uint64_t)v34);
      v52 = sub_2321FE6A4();
      sub_232003E50(v26);
      v25(v51, (uint64_t)v34);
      v25(v31, (uint64_t)v34);
      if ((v52 & 1) != 0)
      {
        v25(v21, (uint64_t)v34);
        return (uint64_t)v33;
      }

    }
  }
  v73 = (void (*)(id, char *))v25;
  v53 = v72;
  sub_232200318();
  v54 = v77;
  v55 = sub_232200390();
  v56 = sub_2322012FC();
  if (os_log_type_enabled(v55, v56))
  {
    v57 = swift_slowAlloc();
    v58 = swift_slowAlloc();
    v80 = v58;
    *(_DWORD *)v57 = 136315650;
    v59 = sub_232201BF0();
    v79 = sub_232013174(v59, v60, &v80);
    sub_232201710();
    swift_bridgeObjectRelease();
    v77 = v21;
    *(_WORD *)(v57 + 12) = 2080;
    v79 = sub_232013174(0x646F4D7472616863, 0xEC00000029286C65, &v80);
    sub_232201710();
    *(_WORD *)(v57 + 22) = 2080;
    ObjectType = v57 + 24;
    v61 = v54;
    v62 = objc_msgSend(v61, sel_description);
    v63 = sub_232200EC4();
    v65 = v64;

    v79 = sub_232013174(v63, v65, &v80);
    sub_232201710();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_231FFB000, v55, v56, "[%s] %s: Version mismatch found when decoding chart model from: %s", (uint8_t *)v57, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v58, -1, -1);
    MEMORY[0x2348FF468](v57, -1, -1);

    (*(void (**)(char *, uint64_t))(v75 + 8))(v53, v76);
    v66 = v77;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v75 + 8))(v53, v76);
    v66 = v21;
  }
  v73(v66, v78);
  return 0;
}

id sub_2321071E8(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id result;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  id v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD v46[2];
  int v47;
  uint64_t v48;
  _OWORD v49[2];
  uint64_t v50;
  uint64_t v51;

  v6 = sub_23220039C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23201C800();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v46 - v14;
  objc_opt_self();
  v16 = swift_dynamicCastObjCClass();
  if (!v16)
  {
    sub_232200354();
    v32 = a1;
    v33 = sub_232200390();
    v34 = sub_2322012E4();
    v35 = v34;
    if (os_log_type_enabled(v33, v34))
    {
      v36 = swift_slowAlloc();
      v47 = v35;
      v37 = v36;
      v48 = swift_slowAlloc();
      *(_QWORD *)&v49[0] = v48;
      *(_DWORD *)v37 = 136315394;
      v38 = sub_232201BF0();
      v51 = sub_232013174(v38, v39, (uint64_t *)v49);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 2080;
      v46[1] = v37 + 14;
      v40 = v32;
      v41 = objc_msgSend(v40, sel_description);
      v42 = sub_232200EC4();
      v44 = v43;

      v51 = sub_232013174(v42, v44, (uint64_t *)v49);
      sub_232201710();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v33, (os_log_type_t)v47, "[%s]: Unsupported sample type: %s", (uint8_t *)v37, 0x16u);
      v45 = v48;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v45, -1, -1);
      MEMORY[0x2348FF468](v37, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return 0;
  }
  v17 = v16;
  sub_232003E9C(0, &qword_255F9C0A8);
  v18 = a1;
  v19 = (void *)sub_232010CEC(v17);
  v20 = a2
      + *(int *)(type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request(0) + 32);
  v21 = sub_232200180();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v15, v20, v21);
  v22 = *MEMORY[0x24BE4AD70];
  v23 = sub_2321FFD78();
  v24 = *(_QWORD *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 104))(v15, v22, v23);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v15, 0, 1, v23);
  v25 = a3;
  result = objc_msgSend(v19, sel_data);
  if (result)
  {
    v27 = result;
    sub_232003E9C(0, &qword_2541B0CD0);
    v28 = sub_2321FDAD4();
    v30 = v29;

    sub_23201C854((uint64_t)v15, (uint64_t)v13);
    v50 = 0;
    memset(v49, 0, sizeof(v49));
    v31 = sub_232015828(v28, v30, 13, (uint64_t)v13, (uint64_t)v25, 0, (uint64_t)v49);

    sub_232003ED4(v28, v30);
    sub_23201C898((uint64_t)v15);

    return v31;
  }
  __break(1u);
  return result;
}

uint64_t sub_2321075FC()
{
  return type metadata accessor for PHQ9AssessmentCurrentValueSummarySharableModelGenerator();
}

uint64_t type metadata accessor for PHQ9AssessmentCurrentValueSummarySharableModelGenerator()
{
  uint64_t result;

  result = qword_2541B4E88;
  if (!qword_2541B4E88)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_232107640()
{
  uint64_t v0;

  v0 = sub_2321FFB5C();
  sub_232016724(v0, qword_2541B6B40);
  sub_23201670C(v0, (uint64_t)qword_2541B6B40);
  return sub_2321FFB50();
}

uint64_t sub_2321076A0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  _QWORD v4[4];

  sub_23210770C(a1, (uint64_t)v4);
  if (!v4[3])
  {
    result = sub_232031840((uint64_t)v4);
    goto LABEL_5;
  }
  result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_5:
    *a2 = 0;
    a2[1] = 0;
  }
  return result;
}

uint64_t sub_23210770C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2320317E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_232107750()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23210775C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_2321077D8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2321077E4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for UnderwaterDepthSnidgetFeedItemModelProvider()
{
  uint64_t result;

  result = qword_2541B26A8;
  if (!qword_2541B26A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_232107894(uint64_t a1)
{
  uint64_t result;

  result = sub_232000590(&qword_255F9CF08, (uint64_t (*)(uint64_t))type metadata accessor for UnderwaterDepthSnidgetFeedItemModelProvider, (uint64_t)&unk_232215E08);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_2321078D0(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  NSObject *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  void *v50;
  id v51;
  void *v52;
  id v53;
  id v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  id v68;
  void *v69;
  void *v70;
  char *inited;
  void *v72;
  char *v73;
  id v74;
  id v75;
  char *v76;
  _BYTE *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  id v87;
  id v88;
  void *v89;
  void *v90;
  uint64_t v91;
  int v92;
  int v93;
  id v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(uint64_t, _QWORD, uint64_t, uint64_t);
  void *v105;
  char *v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v111;
  char *v112;
  id v113;
  id v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  id v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  id v125;
  id v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t (*v133)(void);
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  _BYTE *v139;
  uint64_t v140;
  _DWORD v141[4];
  char *v142;
  char *v143;
  char *v144;
  uint64_t v145;
  char *v146;
  char *v147;
  char *v148;
  uint64_t v149;
  char *v150;
  char *v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  _QWORD *v169;
  uint64_t v170;
  uint64_t isa;
  NSObject *v172;
  char *v173;
  char *v174;
  id v175;
  uint64_t v176[2];
  uint64_t v177;

  v5 = v4;
  v168 = a3;
  v156 = a2;
  v174 = a1;
  v169 = a4;
  v6 = type metadata accessor for UnderwaterDepthSnidgetFeedItemModelProvider();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v173 = (char *)v141 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (uint64_t *)((char *)v141 - v9);
  v11 = sub_23220039C();
  isa = (uint64_t)v11[-1].isa;
  v172 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v141 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for SnidgetFeedItemMetadata(0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v141 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, qword_2541B78E0, (void (*)(uint64_t))MEMORY[0x24BE47DF8]);
  MEMORY[0x24BDAC7A8](v17);
  v167 = (char *)v141 - v18;
  sub_2320002B4(0, &qword_2541B2368, (void (*)(uint64_t))MEMORY[0x24BE445A8]);
  MEMORY[0x24BDAC7A8](v19);
  v147 = (char *)v141 - v20;
  sub_2320002B4(0, &qword_2541B2930, (void (*)(uint64_t))MEMORY[0x24BE42FE0]);
  MEMORY[0x24BDAC7A8](v21);
  v166 = (char *)v141 - v22;
  v23 = sub_2321FD8B8();
  v164 = *(_QWORD *)(v23 - 8);
  v165 = v23;
  MEMORY[0x24BDAC7A8](v23);
  v143 = (char *)v141 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, &qword_2541B7F60, v25);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v170 = (uint64_t)v141 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v149 = (uint64_t)v141 - v29;
  v155 = sub_2321FDDD4();
  v154 = *(_QWORD *)(v155 - 8);
  MEMORY[0x24BDAC7A8](v155);
  v153 = (char *)v141 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, (unint64_t *)&unk_2541B29B0, (void (*)(uint64_t))MEMORY[0x24BE43C58]);
  MEMORY[0x24BDAC7A8](v31);
  v152 = (char *)v141 - v32;
  sub_2320002B4(0, (unint64_t *)&qword_2541B2868, (void (*)(uint64_t))sub_23200021C);
  MEMORY[0x24BDAC7A8](v33);
  v151 = (char *)v141 - v34;
  v160 = sub_2321FDC6C();
  v159 = *(_QWORD *)(v160 - 8);
  v35 = MEMORY[0x24BDAC7A8](v160);
  v142 = (char *)v141 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = MEMORY[0x24BDAC7A8](v35);
  v148 = (char *)v141 - v38;
  MEMORY[0x24BDAC7A8](v37);
  v150 = (char *)v141 - v39;
  sub_2320002B4(0, (unint64_t *)&qword_2541B2838, (void (*)(uint64_t))MEMORY[0x24BDCC5A8]);
  v41 = MEMORY[0x24BDAC7A8](v40);
  v146 = (char *)v141 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = MEMORY[0x24BDAC7A8](v41);
  v145 = (uint64_t)v141 - v44;
  MEMORY[0x24BDAC7A8](v43);
  v163 = (uint64_t)v141 - v45;
  v158 = sub_2321FD9F0();
  v157 = *(_QWORD *)(v158 - 8);
  v46 = MEMORY[0x24BDAC7A8](v158);
  v144 = (char *)v141 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v46);
  v162 = (uint64_t)v141 - v48;
  v49 = (void *)objc_opt_self();
  v50 = (void *)*v5;
  v51 = objc_msgSend(v49, sel_sharedInstanceForHealthStore_, *v5);
  if (!v51)
  {
    __break(1u);
    goto LABEL_23;
  }
  v52 = v51;
  v161 = (uint64_t)v5 + *(int *)(v6 + 24);
  v53 = objc_msgSend(v51, sel_displayTypeForObjectType_, *(_QWORD *)(v161 + 16));

  if (v53)
  {
    v54 = v175;
    sub_232084980(v174);
    if (v54)
    {

      return;
    }
    v69 = v55;
    if (v55)
    {
      if (objc_msgSend(v55, sel_hasValue)
        && objc_msgSend(v69, sel_hasValueClamped)
        && objc_msgSend(v69, sel_hasDateData))
      {
        v175 = v69;
        v70 = *(void **)(v161 + *(int *)(type metadata accessor for SnidgetFeedItemGeneratorRequest(0) + 32));
        type metadata accessor for SnidgetStringBuilder();
        inited = (char *)swift_initStackObject();
        *((_QWORD *)inited + 2) = v50;
        v72 = (void *)objc_opt_self();
        v173 = v70;
        v73 = v50;
        v74 = objc_msgSend(v72, sel_sharedInstanceForHealthStore_, v73);
        v174 = inited;
        *((_QWORD *)inited + 4) = v74;
        if (v70)
        {
          v75 = v175;
          v76 = v173;
        }
        else
        {
          v87 = v74;
          v76 = (char *)objc_msgSend(v87, sel_createHKUnitPreferenceController);

          v75 = v175;
        }

        *((_QWORD *)v174 + 3) = v76;
        sub_232108A08(v162, v163, v75, v53);
        v88 = objc_msgSend(v75, sel_value);
        v173 = v73;
        if (v88)
        {
          v89 = v88;
          v90 = (void *)sub_232201470();

          v91 = SnidgetStringBuilder.makeQuantityFormattedDouble(displayType:quantity:)(v53, v90);
          v93 = v92;

          v172 = v5[1];
          objc_msgSend(v75, sel_dateData);
          v94 = (id)HKDecodeDateForValue();
          v95 = v150;
          sub_2321FDC30();

          sub_23200021C();
          v97 = v96;
          v98 = (uint64_t)v151;
          v99 = &v151[*(int *)(v96 + 48)];
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v159 + 56))(v151, 1, 1, v160);
          isa = v91;
          *(_QWORD *)v99 = v91;
          v141[3] = v93;
          v99[8] = v93 & 1;
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 56))(v98, 0, 1, v97);
          v100 = *MEMORY[0x24BE43C48];
          v101 = sub_2321FF298();
          v102 = *(_QWORD *)(v101 - 8);
          v103 = (uint64_t)v152;
          (*(void (**)(char *, uint64_t, uint64_t))(v102 + 104))(v152, v100, v101);
          v104 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v102 + 56);
          v105 = v95;
          v104(v103, 0, 1, v101);
          v106 = v153;
          sub_2321FDDA4();
          v107 = sub_2321234DC(v173, v172, v161, v156, v95, v98, v103, 1);
          (*(void (**)(char *, uint64_t))(v154 + 8))(v106, v155);
          sub_232108E00(v103, (uint64_t)&unk_2541B29B0, (uint64_t)MEMORY[0x24BE43C58], (uint64_t (*)(_QWORD))sub_2320002B4);
          sub_232108E00(v98, (uint64_t)&qword_2541B2868, (uint64_t)sub_23200021C, (uint64_t (*)(_QWORD))sub_2320002B4);
          (*(void (**)(void *, uint64_t))(v159 + 8))(v105, v160);
          v109 = v164;
          v108 = v165;
          v110 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v164 + 56);
          v111 = v149;
          v110(v149, 1, 1, v165);
          if (v107)
          {
            swift_retain();
            v112 = v143;
            v113 = v107;
            sub_2321FF280();
            v173 = (char *)v110;
            sub_2321FD894();
            (*(void (**)(char *, uint64_t))(v109 + 8))(v112, v108);
            objc_msgSend(v175, sel_dateData);
            v114 = (id)HKDecodeDateForValue();
            sub_2321FDC30();

            v107 = v113;
            v115 = v170;
            sub_2321FD87C();
            swift_release();
            sub_232108E00(v111, (uint64_t)&qword_2541B7F60, (uint64_t)MEMORY[0x24BDCB878], (uint64_t (*)(_QWORD))sub_2320002B4);
            ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v173)(v115, 0, 1, v108);
            sub_2320004F8(v115, v111);
          }
          v156 = (uint64_t)v107;
          sub_2321FF208();
          sub_232000448();
          v117 = *(int *)(v116 + 48);
          v172 = v53;
          objc_msgSend(v175, sel_dateData);
          v118 = (id)HKDecodeDateForValue();
          v119 = v166;
          sub_2321FDC30();

          v119[v117] = 1;
          v120 = *MEMORY[0x24BE42FD8];
          v121 = sub_2321FEF5C();
          v122 = *(_QWORD *)(v121 - 8);
          (*(void (**)(char *, uint64_t, uint64_t))(v122 + 104))(v119, v120, v121);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v119, 0, 1, v121);
          v173 = (char *)sub_2321FF1FC();
          sub_2320004AC(v163, v145, (unint64_t *)&qword_2541B2838, (void (*)(uint64_t))MEMORY[0x24BDCC5A8]);
          v123 = v157;
          v124 = v158;
          (*(void (**)(char *, uint64_t, uint64_t))(v157 + 16))(v144, v162, v158);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v123 + 56))(v146, 1, 1, v124);
          v176[0] = 0x5F74656764696E53;
          v176[1] = 0xE800000000000000;
          v125 = *(id *)(v161 + 16);
          v126 = objc_msgSend(v125, sel_description);
          sub_232200EC4();

          sub_232200F48();
          swift_bridgeObjectRelease();
          v127 = v147;
          sub_2321FF598();
          swift_bridgeObjectRelease();
          v128 = sub_2321FF5A4();
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v128 - 8) + 56))(v127, 0, 1, v128);
          sub_2321FF6C4();
          swift_allocObject();
          isa = sub_2321FF6B8();
          v129 = v156;
          swift_retain();
          objc_msgSend(v175, sel_dateData);
          v130 = (id)HKDecodeDateForValue();
          sub_2321FDC30();

          v131 = (uint64_t)v167;
          sub_2321FE62C();
          v132 = sub_2321FE65C();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v132 - 8) + 56))(v131, 0, 1, v132);
          v133 = MEMORY[0x24BDCB878];
          v134 = v149;
          v135 = v170;
          sub_2320004AC(v149, v170, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
          sub_232000344(0);
          v138 = v168;
          v137 = v169;
          v139 = (char *)v169 + *(int *)(v136 + 52);
          swift_bridgeObjectRetain();
          sub_2320D71E8(1, v131, v138, v135, v139);
          swift_release();

          swift_release();
          v140 = isa;
          *v137 = v173;
          v137[1] = v140;
          v137[2] = v129;
          sub_232108E00(v134, (uint64_t)&qword_2541B7F60, (uint64_t)v133, (uint64_t (*)(_QWORD))sub_2320002B4);
          sub_232108E00(v163, (uint64_t)&qword_2541B2838, (uint64_t)MEMORY[0x24BDCC5A8], (uint64_t (*)(_QWORD))sub_2320002B4);
          (*(void (**)(uint64_t, uint64_t))(v157 + 8))(v162, v158);
          return;
        }
LABEL_23:
        __break(1u);
        return;
      }

    }
    v78 = sub_2321FE65C();
    v79 = (uint64_t)v167;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v167, 1, 1, v78);
    v80 = v170;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v164 + 56))(v170, 1, 1, v165);
    v81 = v168;
    swift_bridgeObjectRetain();
    sub_2320D71E8(0, v79, v81, v80, v16);
    sub_2321FF208();
    v82 = sub_2321FEF5C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56))(v166, 1, 1, v82);
    v83 = v53;
    v84 = sub_2321FF1FC();
    sub_232000344(0);
    v86 = v169;
    sub_23200054C((uint64_t)v16, (uint64_t)v169 + *(int *)(v85 + 52), type metadata accessor for SnidgetFeedItemMetadata);

    v86[1] = 0;
    v86[2] = 0;
    *v86 = v84;
    sub_232002CEC((uint64_t)v16, type metadata accessor for SnidgetFeedItemMetadata);
    return;
  }
  sub_232200318();
  sub_23200054C((uint64_t)v5, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for UnderwaterDepthSnidgetFeedItemModelProvider);
  v56 = (uint64_t)v5;
  v57 = (uint64_t)v173;
  sub_23200054C(v56, (uint64_t)v173, (uint64_t (*)(_QWORD))type metadata accessor for UnderwaterDepthSnidgetFeedItemModelProvider);
  v58 = sub_232200390();
  v59 = sub_2322012E4();
  if (os_log_type_enabled(v58, v59))
  {
    v60 = swift_slowAlloc();
    v175 = (id)swift_slowAlloc();
    v176[0] = (uint64_t)v175;
    *(_DWORD *)v60 = 136315394;
    v174 = v13;
    v61 = sub_2320852F4(*v10, *((unsigned __int8 *)v10 + *(int *)(v6 + 24) + 8));
    v177 = sub_232013174(v61, v62, v176);
    sub_232201710();
    swift_bridgeObjectRelease();
    sub_232002CEC((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for UnderwaterDepthSnidgetFeedItemModelProvider);
    *(_WORD *)(v60 + 12) = 2080;
    v63 = (uint64_t)v173;
    v64 = objc_msgSend(*(id *)&v173[*(int *)(v6 + 24) + 16], sel_sensitiveLoggingIdentifier);
    v65 = sub_232200EC4();
    v67 = v66;

    v177 = sub_232013174(v65, v67, v176);
    sub_232201710();
    swift_bridgeObjectRelease();
    sub_232002CEC(v63, (uint64_t (*)(_QWORD))type metadata accessor for UnderwaterDepthSnidgetFeedItemModelProvider);
    _os_log_impl(&dword_231FFB000, v58, v59, "[%s]: unable to find display type: %s", (uint8_t *)v60, 0x16u);
    v68 = v175;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v68, -1, -1);
    MEMORY[0x2348FF468](v60, -1, -1);

    (*(void (**)(char *, NSObject *))(isa + 8))(v174, v172);
  }
  else
  {
    sub_232002CEC((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for UnderwaterDepthSnidgetFeedItemModelProvider);
    sub_232002CEC(v57, (uint64_t (*)(_QWORD))type metadata accessor for UnderwaterDepthSnidgetFeedItemModelProvider);

    (*(void (**)(char *, NSObject *))(isa + 8))(v13, v172);
  }
  sub_232005578();
  swift_allocError();
  *v77 = 0;
  swift_willThrow();
}

id sub_232108A08(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  void *v19;
  id result;
  void *v21;
  void *v22;
  char *v23;
  char *v24;
  id v25;
  char *v26;
  void (*v27)(char *, uint64_t);
  void (*v28)(uint64_t, char *, uint64_t);
  uint64_t v29;
  _QWORD v30[3];
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[3];
  uint64_t v37;

  v34 = a1;
  v35 = a2;
  sub_2320002B4(0, (unint64_t *)&qword_2541B2838, (void (*)(uint64_t))MEMORY[0x24BDCC5A8]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v30 - v7;
  v9 = sub_2321FD9F0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v31 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v32 = (char *)v30 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v30 - v15;
  v17 = sub_2321FFC64();
  v30[0] = sub_232108E3C();
  v37 = v30[0];
  v36[0] = a4;
  v18 = a4;
  v30[1] = "generateAllSummariesNeeded";
  v30[2] = v17;
  sub_2321FFC58();
  sub_232108E00((uint64_t)v36, (uint64_t)&qword_2541B5890, MEMORY[0x24BEE4AD8] + 8, (uint64_t (*)(_QWORD))sub_23204617C);
  v33 = v16;
  SnidgetStringBuilder.makeSupplementaryAttributedString(localizedString:)();
  swift_bridgeObjectRelease();
  v19 = a3;
  result = objc_msgSend(a3, sel_value);
  if (result)
  {
    v21 = result;
    v22 = (void *)sub_232201470();

    SnidgetStringBuilder.makeQuantityPrimaryAttributedString(displayType:quantity:)(v18, v22, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      v23 = v32;
      sub_2321FD9E4();
      sub_232108E00((uint64_t)v8, (uint64_t)&qword_2541B2838, (uint64_t)MEMORY[0x24BDCC5A8], (uint64_t (*)(_QWORD))sub_2320002B4);
    }
    else
    {
      v23 = v32;
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v32, v8, v9);
    }
    v24 = v33;
    if (objc_msgSend(v19, sel_valueClamped))
    {
      v37 = v30[0];
      v36[0] = v18;
      v25 = v18;
      sub_2321FFC58();
      sub_232108E00((uint64_t)v36, (uint64_t)&qword_2541B5890, MEMORY[0x24BEE4AD8] + 8, (uint64_t (*)(_QWORD))sub_23204617C);
      v26 = v31;
      SnidgetStringBuilder.makePrimaryAttributedString(localizedString:)();
      swift_bridgeObjectRelease();
      sub_2321FD9E4();
      sub_232000590(&qword_255F9F020, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC588]);
      sub_2321FD9CC();
      sub_2321FD9CC();
      v27 = *(void (**)(char *, uint64_t))(v10 + 8);
      v27(v26, v9);
      v27(v23, v9);
      v28 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
    }
    else
    {
      v28 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
      v28(v34, v23, v9);
    }
    v29 = v35;
    v28(v35, v24, v9);
    return (id)(*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v29, 0, 1, v9);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_232108DE0(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_2321078D0(*(char **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), a2);
}

uint64_t sub_232108E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v5;

  v5 = a4(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

unint64_t sub_232108E3C()
{
  unint64_t result;

  result = qword_2541B55A8;
  if (!qword_2541B55A8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2541B55A8);
  }
  return result;
}

uint64_t sub_232108E78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t TupleTypeMetadata2;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  char v22;
  char *v23;
  char *v24;
  void (*v25)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;

  v27 = a4;
  v30 = a2;
  v6 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SummaryModelProcessingResult(0, v9, v9, v10);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v29 = (char *)&v27 - v13;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v28 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v15 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v17 = (char *)&v27 - v16;
  v18 = (char *)&v27 + *(int *)(v15 + 48) - v16;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v19((char *)&v27 - v16, a1, v11);
  v19(v18, v30, v11);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48);
  v21 = v20(v17, 2, a3);
  if (!v21)
  {
    v19(v29, (uint64_t)v17, v11);
    if (!v20(v18, 2, a3))
    {
      v23 = v8;
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v18, a3);
      v24 = v29;
      v22 = sub_232200E64();
      v25 = *(void (**)(char *, uint64_t))(v6 + 8);
      v25(v23, a3);
      v25(v24, a3);
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v29, a3);
    goto LABEL_9;
  }
  if (v21 == 1)
  {
    if (v20(v18, 2, a3) == 1)
      goto LABEL_8;
LABEL_9:
    v22 = 0;
    v12 = v28;
    v11 = TupleTypeMetadata2;
    goto LABEL_11;
  }
  if (v20(v18, 2, a3) != 2)
    goto LABEL_9;
LABEL_8:
  v22 = 1;
LABEL_11:
  (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  return v22 & 1;
}

uint64_t sub_2321090AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((sub_232200E64() & 1) == 0)
    return 0;
  v8 = *(int *)(type metadata accessor for SummaryModelDerivedContent(0, a3, v6, v7) + 28);
  return sub_232043CD8(*(_QWORD *)(a1 + v8), *(_QWORD *)(a2 + v8));
}

uint64_t sub_23210910C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_232108E78(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a4 - 8));
}

uint64_t sub_232109118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2321090AC(a1, a2, *(_QWORD *)(a3 + 16));
}

uint64_t type metadata accessor for SummaryModelProcessingResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_232043E5C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SummaryModelProcessingResult);
}

uint64_t type metadata accessor for SummaryModelDerivedContent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_232043E5C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SummaryModelDerivedContent);
}

uint64_t sub_23210913C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_232109144()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_23210919C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unint64_t v9;
  uint64_t v10;
  unsigned int v11;
  _BOOL8 v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  _BOOL8 v20;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = v8;
  if (v7 <= 1)
  {
    if (v8 <= 3)
    {
      v11 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
      if (v11 > 0xFFFE)
      {
        v10 = 4;
      }
      else
      {
        v12 = v11 != 0;
        v13 = v11 >= 0xFF;
        v10 = 2;
        if (!v13)
          v10 = v12;
      }
    }
    else
    {
      v10 = 1;
    }
    v9 = v10 + v8;
  }
  v14 = *(_DWORD *)(v6 + 80);
  if (v14 <= 7 && v9 <= 0x18 && (*(_DWORD *)(v6 + 80) & 0x100000) == 0)
  {
    if ((*(unsigned int (**)(uint64_t *, uint64_t, _QWORD))(v6 + 48))(a2, 2, *(_QWORD *)(a3 + 16)))
    {
      if (v7 <= 1)
      {
        if (v8 <= 3)
        {
          v19 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
          if (v19 > 0xFFFE)
          {
            v18 = 4;
          }
          else
          {
            v20 = v19 != 0;
            v13 = v19 >= 0xFF;
            v18 = 2;
            if (!v13)
              v18 = v20;
          }
        }
        else
        {
          v18 = 1;
        }
        v8 += v18;
      }
      memcpy(a1, a2, v8);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 2, v5);
    }
  }
  else
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v14 + 16) & ~v14));
    swift_retain();
  }
  return a1;
}

uint64_t sub_232109334(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 2, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return result;
}

void *sub_232109390(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  uint64_t v9;
  unsigned int v10;
  _BOOL8 v11;
  BOOL v12;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 2, v5))
  {
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
    if (v7 <= 1)
    {
      if (v8 <= 3)
      {
        v10 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
        if (v10 > 0xFFFE)
        {
          v9 = 4;
        }
        else
        {
          v11 = v10 != 0;
          v12 = v10 >= 0xFF;
          v9 = 2;
          if (!v12)
            v9 = v11;
        }
      }
      else
      {
        v9 = 1;
      }
      v8 += v9;
    }
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 2, v5);
  }
  return a1;
}

void *sub_232109480(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  unsigned int v10;
  size_t v11;
  uint64_t v12;
  unsigned int v13;
  _BOOL8 v14;
  BOOL v15;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 2, v5);
  v9 = v7(a2, 2, v5);
  if (v8)
  {
    if (v9)
    {
      v10 = *(_DWORD *)(v6 + 84);
      v11 = *(_QWORD *)(v6 + 64);
      if (v10 <= 1)
      {
        if (v11 > 3)
        {
LABEL_5:
          v12 = 1;
LABEL_16:
          v11 += v12;
          goto LABEL_17;
        }
LABEL_9:
        v13 = (~(-1 << (8 * v11)) - v10 + 2) >> (8 * v11);
        if (v13 > 0xFFFE)
        {
          v12 = 4;
        }
        else
        {
          v14 = v13 != 0;
          v15 = v13 >= 0xFF;
          v12 = 2;
          if (!v15)
            v12 = v14;
        }
        goto LABEL_16;
      }
      goto LABEL_17;
    }
    (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 2, v5);
  }
  else
  {
    if (v9)
    {
      (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
      v10 = *(_DWORD *)(v6 + 84);
      v11 = *(_QWORD *)(v6 + 64);
      if (v10 <= 1)
      {
        if (v11 > 3)
          goto LABEL_5;
        goto LABEL_9;
      }
LABEL_17:
      memcpy(a1, a2, v11);
      return a1;
    }
    (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
  }
  return a1;
}

void *sub_2321095D0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  uint64_t v9;
  unsigned int v10;
  _BOOL8 v11;
  BOOL v12;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 2, v5))
  {
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
    if (v7 <= 1)
    {
      if (v8 <= 3)
      {
        v10 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
        if (v10 > 0xFFFE)
        {
          v9 = 4;
        }
        else
        {
          v11 = v10 != 0;
          v12 = v10 >= 0xFF;
          v9 = 2;
          if (!v12)
            v9 = v11;
        }
      }
      else
      {
        v9 = 1;
      }
      v8 += v9;
    }
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 2, v5);
  }
  return a1;
}

void *sub_2321096C0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  unsigned int v10;
  size_t v11;
  uint64_t v12;
  unsigned int v13;
  _BOOL8 v14;
  BOOL v15;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 2, v5);
  v9 = v7(a2, 2, v5);
  if (v8)
  {
    if (v9)
    {
      v10 = *(_DWORD *)(v6 + 84);
      v11 = *(_QWORD *)(v6 + 64);
      if (v10 <= 1)
      {
        if (v11 > 3)
        {
LABEL_5:
          v12 = 1;
LABEL_16:
          v11 += v12;
          goto LABEL_17;
        }
LABEL_9:
        v13 = (~(-1 << (8 * v11)) - v10 + 2) >> (8 * v11);
        if (v13 > 0xFFFE)
        {
          v12 = 4;
        }
        else
        {
          v14 = v13 != 0;
          v15 = v13 >= 0xFF;
          v12 = 2;
          if (!v15)
            v12 = v14;
        }
        goto LABEL_16;
      }
      goto LABEL_17;
    }
    (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 2, v5);
  }
  else
  {
    if (v9)
    {
      (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
      v10 = *(_DWORD *)(v6 + 84);
      v11 = *(_QWORD *)(v6 + 64);
      if (v10 <= 1)
      {
        if (v11 > 3)
          goto LABEL_5;
        goto LABEL_9;
      }
LABEL_17:
      memcpy(a1, a2, v11);
      return a1;
    }
    (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
  }
  return a1;
}

uint64_t sub_232109810(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  _BOOL8 v10;
  BOOL v11;
  int v12;
  char v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;
  unsigned int v18;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = v5 - 2;
  v7 = *(_QWORD *)(v4 + 64);
  if (v5 <= 1)
  {
    v6 = 0;
    if (v7 <= 3)
    {
      v9 = (~(-1 << (8 * v7)) - v5 + 2) >> (8 * v7);
      if (v9 > 0xFFFE)
      {
        v8 = 4;
      }
      else
      {
        v10 = v9 != 0;
        v11 = v9 >= 0xFF;
        v8 = 2;
        if (!v11)
          v8 = v10;
      }
    }
    else
    {
      v8 = 1;
    }
    v7 += v8;
  }
  if (!a2)
    return 0;
  v12 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_29;
  v13 = 8 * v7;
  if (v7 <= 3)
  {
    v15 = ((v12 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v15))
    {
      v14 = *(_DWORD *)(a1 + v7);
      if (!v14)
        goto LABEL_29;
      goto LABEL_20;
    }
    if (v15 > 0xFF)
    {
      v14 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_29;
      goto LABEL_20;
    }
    if (v15 < 2)
    {
LABEL_29:
      if (v6)
      {
        v18 = (*(uint64_t (**)(void))(v4 + 48))();
        if (v18 >= 3)
          return v18 - 2;
        else
          return 0;
      }
      return 0;
    }
  }
  v14 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_29;
LABEL_20:
  v16 = (v14 - 1) << v13;
  if (v7 > 3)
    v16 = 0;
  if ((_DWORD)v7)
  {
    if (v7 <= 3)
      v17 = v7;
    else
      v17 = 4;
    __asm { BR              X12 }
  }
  return v6 + v16 + 1;
}

void sub_2321099A4(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  size_t v9;
  uint64_t v10;
  unsigned int v11;
  _BOOL8 v12;
  BOOL v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  int v18;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = v7 - 2;
  v9 = *(_QWORD *)(v6 + 64);
  if (v7 <= 1)
  {
    v8 = 0;
    if (v9 <= 3)
    {
      v11 = (~(-1 << (8 * v9)) - v7 + 2) >> (8 * v9);
      if (v11 > 0xFFFE)
      {
        v10 = 4;
      }
      else
      {
        v12 = v11 != 0;
        v13 = v11 >= 0xFF;
        v10 = 2;
        if (!v13)
          v10 = v12;
      }
    }
    else
    {
      v10 = 1;
    }
    v9 += v10;
  }
  v13 = a3 >= v8;
  v14 = a3 - v8;
  if (v14 != 0 && v13)
  {
    if (v9 <= 3)
    {
      v17 = ((v14 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v17))
      {
        v15 = 4u;
      }
      else if (v17 >= 0x100)
      {
        v15 = 2;
      }
      else
      {
        v15 = v17 > 1;
      }
    }
    else
    {
      v15 = 1u;
    }
  }
  else
  {
    v15 = 0;
  }
  if (v8 < a2)
  {
    v16 = ~v8 + a2;
    if (v9 < 4)
    {
      if ((_DWORD)v9)
      {
        v18 = v16 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if ((_DWORD)v9 == 3)
        {
          *a1 = v18;
          *((_BYTE *)a1 + 2) = BYTE2(v18);
        }
        else if ((_DWORD)v9 == 2)
        {
          *a1 = v18;
        }
        else
        {
          *(_BYTE *)a1 = v18;
        }
      }
    }
    else
    {
      bzero(a1, v9);
      *(_DWORD *)a1 = v16;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_232109BC0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 48))(a1, 2);
}

uint64_t sub_232109BD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 56))(a1, a2, 2);
}

uint64_t sub_232109BE8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_232109C60(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_232109D14(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  return swift_bridgeObjectRelease();
}

uint64_t sub_232109D54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_232109DB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_232109E20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_232109E7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_232109EE0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_232109F5C + 4 * byte_232215E3E[v10]))();
  }
}

void sub_232109FE0(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_23210A0D4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x23210A148);
}

void sub_23210A0DC(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x23210A0E4);
  JUMPOUT(0x23210A148);
}

void sub_23210A124()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x23210A148);
}

void sub_23210A12C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x23210A148);
}

uint64_t sub_23210A134(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x23210A148);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x23210A144);
    JUMPOUT(0x23210A140);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t storeEnumTagSinglePayload for SummaryFeedItemGenerationFailure(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23210A1A0 + 4 * byte_232215E4D[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23210A1C0 + 4 * byte_232215E52[v4]))();
}

_BYTE *sub_23210A1A0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23210A1C0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23210A1C8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23210A1D0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23210A1D8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23210A1E0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SummaryFeedItemGenerationFailure()
{
  return &type metadata for SummaryFeedItemGenerationFailure;
}

unint64_t sub_23210A200()
{
  unint64_t result;

  result = qword_255F9F028[0];
  if (!qword_255F9F028[0])
  {
    result = MEMORY[0x2348FF39C](&unk_232215F84, &type metadata for SummaryFeedItemGenerationFailure);
    atomic_store(result, qword_255F9F028);
  }
  return result;
}

uint64_t sub_23210A244(void (*a1)(id, _QWORD), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t result;
  id v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  id v24;
  _QWORD aBlock[6];

  v3 = v2;
  v6 = sub_23220018C();
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = v2;
  v7[3] = a1;
  v7[4] = a2;
  if (!(v6 >> 62))
  {
    v8 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain_n();
    result = swift_retain_n();
    if (v8 >= 1)
      goto LABEL_3;
LABEL_8:
    v24 = sub_23210ADFC(MEMORY[0x24BEE4AF8]);
    a1(v24, 0);
    swift_release();
    swift_release();

    goto LABEL_9;
  }
  swift_retain_n();
  swift_retain_n();
  swift_bridgeObjectRetain();
  v23 = sub_232201998();
  result = swift_bridgeObjectRelease();
  if (v23 < 1)
    goto LABEL_8;
LABEL_3:
  if ((v6 & 0xC000000000000001) != 0)
  {
    v10 = (id)MEMORY[0x2348FEA30](0, v6);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v10 = *(id *)(v6 + 32);
LABEL_6:
    v11 = v10;
    v12 = objc_msgSend((id)objc_opt_self(), sel_queryDescriptorWithSampleType_, v10);

    v13 = objc_msgSend((id)objc_opt_self(), sel_sortDescriptorsForMostRecentSamples);
    sub_232003E9C(0, (unint64_t *)&qword_2541B78A8);
    sub_232201038();

    sub_232027434();
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_232210D20;
    *(_QWORD *)(v14 + 32) = v12;
    sub_232201050();
    v15 = (_QWORD *)swift_allocObject();
    v16 = MEMORY[0x24BEE4AF8];
    v15[2] = sub_23210B8EC;
    v15[3] = v7;
    v15[4] = v16;
    v15[5] = v3;
    v15[6] = v6;
    v15[7] = 0;
    v17 = objc_allocWithZone(MEMORY[0x24BDD3F00]);
    sub_232003E9C(0, &qword_2541B5930);
    swift_retain();
    swift_bridgeObjectRetain();
    v18 = v12;
    swift_retain();
    v19 = (void *)sub_232201020();
    swift_bridgeObjectRelease();
    v20 = (void *)sub_232201020();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_23210B900;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2321BE3EC;
    aBlock[3] = &unk_2501039A8;
    v21 = _Block_copy(aBlock);
    v22 = objc_msgSend(v17, sel_initWithQueryDescriptors_limit_sortDescriptors_resultsHandler_, v19, 1, v20, v21);

    _Block_release(v21);
    swift_release();
    objc_msgSend(*(id *)(v3 + qword_2541BF5D0 + 16), sel_executeQuery_, v22);
    swift_release();
    swift_release();

LABEL_9:
    swift_bridgeObjectRelease();
    return swift_release();
  }
  __break(1u);
  return result;
}

void sub_23210A5E0(void *a1, char a2, uint64_t a3, id a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  os_log_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  os_log_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;

  v9 = sub_23220039C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v13 = a1;
    sub_232200318();
    sub_232047854(a1, 1);
    swift_retain();
    sub_232047854(a1, 1);
    swift_retain();
    v14 = sub_232200390();
    v15 = sub_2322012E4();
    v16 = v15;
    if (os_log_type_enabled(v14, v15))
    {
      v17 = swift_slowAlloc();
      v33 = a5;
      v18 = v17;
      v32 = swift_slowAlloc();
      v36 = v32;
      *(_DWORD *)v18 = 136315394;
      v34 = a4;
      v31 = v16;
      sub_232200198();
      v19 = MEMORY[0x2348FE1C0]();
      v30 = v14;
      v20 = v19;
      v22 = v21;
      swift_bridgeObjectRelease();
      v35 = sub_232013174(v20, v22, &v36);
      sub_232201710();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2082;
      v35 = (uint64_t)a1;
      v23 = a1;
      sub_232002B9C();
      v24 = sub_232200F00();
      v35 = sub_232013174(v24, v25, &v36);
      a4 = v34;
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_2320477E4(a1, 1);
      sub_2320477E4(a1, 1);
      v26 = v30;
      _os_log_impl(&dword_231FFB000, v30, (os_log_type_t)v31, "Failed to fetch latest samples for %s: %{public}s", (uint8_t *)v18, 0x16u);
      v27 = v32;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v27, -1, -1);
      MEMORY[0x2348FF468](v18, -1, -1);

    }
    else
    {
      swift_release_n();
      sub_2320477E4(a1, 1);
      sub_2320477E4(a1, 1);

    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v28 = a1;
    ((void (*)(void *, uint64_t))a4)(a1, 1);
    sub_2320477E4(a1, 1);
    sub_2320477E4(a1, 1);
  }
  else
  {
    v34 = sub_23210ADFC((unint64_t)a1);
    ((void (*)(id, _QWORD))a4)(v34, 0);

  }
}

void sub_23210A910(unint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, _QWORD), uint64_t a5)
{
  uint64_t v5;
  id v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  _QWORD aBlock[6];

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v22 = sub_232201998();
    swift_bridgeObjectRelease();
    if (v22 > a2)
      goto LABEL_3;
LABEL_9:
    a4(a3, 0);
    return;
  }
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10) <= a2)
    goto LABEL_9;
LABEL_3:
  v24 = v5;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v11 = (id)MEMORY[0x2348FEA30](a2, a1);
    goto LABEL_7;
  }
  if (a2 < 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10) > (unint64_t)a2)
  {
    v11 = *(id *)(a1 + 8 * a2 + 32);
LABEL_7:
    v12 = v11;
    v13 = objc_msgSend((id)objc_opt_self(), sel_queryDescriptorWithSampleType_, v11);

    v14 = objc_msgSend((id)objc_opt_self(), sel_sortDescriptorsForMostRecentSamples);
    sub_232003E9C(0, (unint64_t *)&qword_2541B78A8);
    sub_232201038();

    sub_232027434();
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_232210D20;
    *(_QWORD *)(v15 + 32) = v13;
    sub_232201050();
    v16 = (_QWORD *)swift_allocObject();
    v16[2] = a4;
    v16[3] = a5;
    v16[4] = a3;
    v16[5] = v5;
    v16[6] = a1;
    v16[7] = a2;
    v23 = objc_allocWithZone(MEMORY[0x24BDD3F00]);
    sub_232003E9C(0, &qword_2541B5930);
    swift_bridgeObjectRetain();
    v17 = v13;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v18 = (void *)sub_232201020();
    swift_bridgeObjectRelease();
    v19 = (void *)sub_232201020();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_23210B900;
    aBlock[5] = v16;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2321BE3EC;
    aBlock[3] = &unk_2501039F8;
    v20 = _Block_copy(aBlock);
    v21 = objc_msgSend(v23, sel_initWithQueryDescriptors_limit_sortDescriptors_resultsHandler_, v18, 1, v19, v20);

    _Block_release(v20);
    swift_release();
    objc_msgSend(*(id *)(v24 + qword_2541BF5D0 + 16), sel_executeQuery_, v21);

    return;
  }
  __break(1u);
}

void sub_23210AC18(int a1, unint64_t a2, id a3, void (*a4)(uint64_t, uint64_t), uint64_t a5, uint64_t a6, int a7, unint64_t a8, uint64_t a9)
{
  id v12;
  unint64_t v14;
  id v15;
  id i;
  void *v17;
  uint64_t v18;
  uint64_t v19;

  if (a3)
  {
    v12 = a3;
    a4((uint64_t)a3, 1);

    return;
  }
  v14 = a2;
  v19 = a6;
  if (a2)
  {
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v15 = (id)sub_232201998();
      if (v15)
      {
LABEL_6:
        if ((v14 & 0xC000000000000001) != 0)
          goto LABEL_19;
        if (!*(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_21;
        }
        for (i = *(id *)(v14 + 32); ; i = (id)MEMORY[0x2348FEA30](0, v14))
        {
          v17 = i;
          swift_bridgeObjectRelease();
          objc_msgSend(v17, sel__setSourceRevision_, 0);
          v15 = v17;
          MEMORY[0x2348FE190]();
          if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
LABEL_21:
            sub_23220105C();
          sub_232201074();
          v14 = (unint64_t)&v19;
          sub_232201050();

          v18 = a9 + 1;
          if (!__OFADD__(a9, 1))
            break;
LABEL_18:
          __break(1u);
LABEL_19:
          ;
        }
        goto LABEL_14;
      }
    }
    else
    {
      v15 = *(id *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v15)
        goto LABEL_6;
    }
    swift_bridgeObjectRelease();
    v18 = a9 + 1;
    if (__OFADD__(a9, 1))
      goto LABEL_18;
  }
  else
  {
    swift_bridgeObjectRetain();
    v18 = a9 + 1;
    if (__OFADD__(a9, 1))
      goto LABEL_18;
  }
LABEL_14:
  sub_23210A910(a8, v18, v19, a4, a5);
  swift_bridgeObjectRelease();
}

id sub_23210ADFC(unint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (**v27)(_QWORD, _QWORD);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  id v40;
  uint64_t v41;
  void *v42;
  char *v43;
  char *v44;
  char *v45;
  id v46;
  id v47;
  char v48;
  char *v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  id v52;
  id v53;
  char *v54;
  char *v55;
  id result;
  uint64_t inited;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  void *v64;
  void *v65;
  void *v66;
  void (**v67)(_QWORD, _QWORD);
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  unint64_t v74;

  v2 = v1;
  v4 = sub_2321FDC6C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v70 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v69 = (char *)&v67 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v67 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v67 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v71 = (char *)&v67 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v67 - v19;
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&v67 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v72 = (char *)&v67 - v24;
  v25 = sub_23220039C();
  v26 = MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v67 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    v67 = v27;
    v68 = (char *)v26;
    swift_bridgeObjectRetain();
    v30 = sub_232201998();
    swift_bridgeObjectRelease();
    v27 = v67;
    v26 = (uint64_t)v68;
    if (v30 <= 1)
      goto LABEL_3;
  }
  else
  {
    v30 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v30 <= 1)
    {
LABEL_3:
      v67 = v27;
      v68 = (char *)v26;
      sub_232200318();
      v31 = v2;
      swift_retain_n();
      swift_bridgeObjectRetain();
      v32 = sub_232200390();
      v33 = sub_2322012FC();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = swift_slowAlloc();
        v35 = swift_slowAlloc();
        v73 = v30;
        v74 = v35;
        *(_DWORD *)v34 = 134218242;
        sub_232201710();
        swift_bridgeObjectRelease();
        *(_WORD *)(v34 + 12) = 2080;
        v72 = (char *)(v34 + 14);
        v36 = objc_msgSend(*(id *)&v31[qword_2541BF5D0+ *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28)], sel_identifier);
        v37 = sub_232200EC4();
        v39 = v38;

        v73 = sub_232013174(v37, v39, (uint64_t *)&v74);
        sub_232201710();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_231FFB000, v32, v33, "%ld samples are not enough for %s correlation, returning no data", (uint8_t *)v34, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2348FF468](v35, -1, -1);
        MEMORY[0x2348FF468](v34, -1, -1);

      }
      else
      {

        swift_release_n();
        swift_bridgeObjectRelease();
      }
      ((void (**)(char *, char *))v67)[1](v29, v68);
      return 0;
    }
  }
  if ((a1 & 0xC000000000000001) == 0)
  {
    v41 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v41)
    {
      if (v41 != 1)
      {
        v42 = *(void **)(a1 + 40);
        v43 = (char *)*(id *)(a1 + 32);
        v44 = v42;
        goto LABEL_12;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_25;
  }
  v43 = (char *)MEMORY[0x2348FEA30](0, a1);
  v44 = (char *)MEMORY[0x2348FEA30](1, a1);
LABEL_12:
  v45 = v44;
  v46 = objc_msgSend(v43, sel_startDate);
  sub_2321FDC30();

  v47 = objc_msgSend(v45, sel_startDate);
  sub_2321FDC30();

  sub_23210B91C();
  v48 = sub_232200E34();
  v49 = v43;
  v50 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  if ((v48 & 1) != 0)
    v51 = v20;
  else
    v51 = v23;
  v50(v72, v51, v4);
  v5 = *(_QWORD *)(v5 + 8);
  ((void (*)(char *, uint64_t))v5)(v20, v4);
  ((void (*)(char *, uint64_t))v5)(v23, v4);
  v68 = v49;
  v52 = objc_msgSend(v49, sel_endDate);
  sub_2321FDC30();

  v53 = objc_msgSend(v45, sel_endDate);
  sub_2321FDC30();

  if ((sub_232200E40() & 1) != 0)
    v54 = v12;
  else
    v54 = v15;
  v55 = v71;
  v50(v71, v54, v4);
  ((void (*)(char *, uint64_t))v5)(v12, v4);
  ((void (*)(char *, uint64_t))v5)(v15, v4);
  sub_232003E9C(0, &qword_255F9F148);
  result = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_bloodPressureType);
  if (result)
  {
    a1 = (unint64_t)result;
    v23 = v45;
    v12 = v69;
    v50(v69, v72, v4);
    v2 = v70;
    v50(v70, v55, v4);
    sub_232027434();
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_232213870;
    v15 = v68;
    *(_QWORD *)(inited + 32) = v68;
    *(_QWORD *)(inited + 40) = v23;
    v74 = inited;
    sub_232201050();
    v29 = (char *)v74;
    if (!(v74 >> 62))
    {
      v58 = *(_QWORD *)((v74 & 0xFFFFFFFFFFFFF8) + 0x10);
      v59 = v15;
      v60 = v23;
      v67 = (void (**)(_QWORD, _QWORD))v23;
      if (!v58)
      {
LABEL_26:
        swift_bridgeObjectRelease();
        v64 = (void *)sub_2321FDBF4();
        v65 = (void *)sub_2321FDBF4();
        sub_232003E9C(0, &qword_2541B0D68);
        sub_23210B964();
        v66 = (void *)sub_2322010B0();
        swift_bridgeObjectRelease();
        v40 = objc_msgSend((id)objc_opt_self(), sel_correlationWithType_startDate_endDate_objects_, a1, v64, v65, v66);

        ((void (*)(char *, uint64_t))v5)(v2, v4);
        ((void (*)(char *, uint64_t))v5)(v12, v4);

        ((void (*)(char *, uint64_t))v5)(v71, v4);
        ((void (*)(char *, uint64_t))v5)(v72, v4);
        return v40;
      }
LABEL_21:
      sub_2321AA584((unint64_t)v29);
      goto LABEL_26;
    }
LABEL_25:
    v61 = v15;
    v62 = v23;
    swift_bridgeObjectRetain();
    v63 = sub_232201998();
    swift_bridgeObjectRelease();
    v67 = (void (**)(_QWORD, _QWORD))v23;
    if (!v63)
      goto LABEL_26;
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

void sub_23210B514(void *a1, void *a2, void (*a3)(id, _QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  id v27;
  id v28;
  _OWORD v29[2];
  uint64_t v30;

  v4 = v3;
  sub_23201C800();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v29 - v12;
  sub_232003E9C(0, &qword_2541B0D18);
  v14 = (void *)HKCodableSummaryBloodPressureValue.init(correlation:)(a1);
  v15 = v4 + qword_255FA9D30;
  v16 = sub_2322001A4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v15, v16);
  v17 = *MEMORY[0x24BE4AD80];
  v18 = sub_2321FFD78();
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 104))(v13, v17, v18);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v13, 0, 1, v18);
  v20 = v14;
  v21 = a2;
  v22 = objc_msgSend(v20, sel_data);
  if (v22)
  {
    v23 = v22;
    sub_232003E9C(0, &qword_2541B0CD0);
    v24 = sub_2321FDAD4();
    v26 = v25;

    sub_23201C854((uint64_t)v13, (uint64_t)v11);
    v30 = 0;
    memset(v29, 0, sizeof(v29));
    v27 = sub_232015828(v24, v26, 5, (uint64_t)v11, (uint64_t)v21, 0, (uint64_t)v29);

    sub_232003ED4(v24, v26);
    sub_232002CEC((uint64_t)v13, (uint64_t (*)(_QWORD))sub_23201C800);
    v28 = v27;
    a3(v27, 0);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_23210B744()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + qword_255FA9D30;
  v2 = sub_2322001A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t sub_23210B780()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_232002CEC(v0 + qword_2541BF5D0, type metadata accessor for SummariesFullProfileExecutor.Request);
  v1 = v0 + qword_2541BF5C8;
  v2 = sub_232200180();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + qword_255FA9D30;
  v4 = sub_2322001A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CorrelatedStatisticsCurrentValueSharableModelStep()
{
  uint64_t result;

  result = qword_255F9F058;
  if (!qword_255F9F058)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23210B854()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2322001A4();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23210B8C0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23210B8EC(void *a1, char a2)
{
  uint64_t v2;

  sub_23210A5E0(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(id *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_23210B904(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23210B914()
{
  return swift_release();
}

unint64_t sub_23210B91C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541AF160;
  if (!qword_2541AF160)
  {
    v1 = sub_2321FDC6C();
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDCE948], v1);
    atomic_store(result, (unint64_t *)&qword_2541AF160);
  }
  return result;
}

unint64_t sub_23210B964()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B0D70;
  if (!qword_2541B0D70)
  {
    v1 = sub_232003E9C(255, &qword_2541B0D68);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_2541B0D70);
  }
  return result;
}

uint64_t sub_23210B9C0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23210B9FC(int a1, unint64_t a2, void *a3)
{
  uint64_t v3;

  sub_23210AC18(a1, a2, a3, *(void (**)(uint64_t, uint64_t))(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56));
}

uint64_t sub_23210BA30()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23210BA3C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_23210BAB8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_23210BAC4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for BreathingDisturbancesValueSnidgetFeedItemModelProvider()
{
  uint64_t result;

  result = qword_255F9F1A8;
  if (!qword_255F9F1A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23210BB78()
{
  return sub_232000590(&qword_2541B7658, (uint64_t (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel, (uint64_t)&protocol conformance descriptor for SnidgetLevelChartView.ViewModel);
}

uint64_t sub_23210BBA4()
{
  return sub_232000590(&qword_2541B33E0, (uint64_t (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel, (uint64_t)&protocol conformance descriptor for SnidgetLevelChartView.ViewModel);
}

uint64_t sub_23210BBD0(uint64_t a1)
{
  uint64_t result;

  result = sub_232000590(&qword_255F9CEF8, (uint64_t (*)(uint64_t))type metadata accessor for BreathingDisturbancesValueSnidgetFeedItemModelProvider, (uint64_t)&unk_2322160A4);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23210BC0C()
{
  return sub_23210BC74(&qword_2541B7440, (unint64_t *)&unk_2541B7448, (uint64_t (*)(uint64_t, _QWORD *))type metadata accessor for SnidgetHarnessPluginView.ActionHandler, (uint64_t)&unk_2322120D8);
}

uint64_t sub_23210BC40()
{
  return sub_23210BC74(&qword_2541B36B8, &qword_2541B36C0, (uint64_t (*)(uint64_t, _QWORD *))type metadata accessor for SnidgetHarnessPluginView, (uint64_t)&unk_232212090);
}

uint64_t sub_23210BC74(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_23210BCB4(255, a2, a3);
    result = MEMORY[0x2348FF39C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_23210BCB4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD v9[8];

  if (!*a2)
  {
    sub_231FFFDE4(255, &qword_2541B2998, MEMORY[0x24BE43750]);
    v9[0] = v6;
    v9[1] = &type metadata for SnidgetLevelChartView;
    v9[2] = sub_23200409C();
    v9[3] = sub_2320444EC();
    v9[4] = sub_231FFFE84(&qword_2541B2970, MEMORY[0x24BE43748]);
    v9[5] = sub_231FFFE84((unint64_t *)&unk_2541B2960, MEMORY[0x24BE43740]);
    v9[6] = sub_232000590(&qword_2541B7658, (uint64_t (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel, (uint64_t)&protocol conformance descriptor for SnidgetLevelChartView.ViewModel);
    v9[7] = sub_232000590(&qword_2541B33E0, (uint64_t (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel, (uint64_t)&protocol conformance descriptor for SnidgetLevelChartView.ViewModel);
    v7 = a3(a1, v9);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_23210BDD4(void *a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  void *v50;
  id v51;
  unsigned int v52;
  void *v53;
  void *v54;
  id v55;
  void *v56;
  id v57;
  id v58;
  void *v59;
  NSObject *v60;
  os_log_type_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  id v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  id v70;
  void *v71;
  id v72;
  void *v73;
  unsigned int v74;
  id v75;
  void *v76;
  unsigned int v77;
  void *v78;
  _QWORD *inited;
  void *v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _BYTE *v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  _BYTE *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  id v108;
  uint64_t v109;
  char *v110;
  id v111;
  char *v112;
  uint64_t v113;
  void (*v114)(char *, char *, uint64_t);
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(char *, uint64_t);
  void (*v120)(char *, char *, uint64_t);
  char *v121;
  char *v122;
  id v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  id v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  id v132;
  id v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  id v137;
  id v138;
  void *v139;
  id v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _BYTE *v146;
  uint64_t *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  char *v161;
  char *v162;
  char *v163;
  char *v164;
  char *v165;
  _BYTE *v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  _BYTE *v173;
  char *v174;
  uint64_t v175;
  uint64_t *v176;
  uint64_t v177;
  _QWORD *v178;
  void *v179;
  id v180;
  uint64_t v181[2];
  uint64_t v182;

  v179 = a1;
  v175 = a2;
  v176 = a3;
  v4 = type metadata accessor for BreathingDisturbancesValueSnidgetFeedItemModelProvider();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v149 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (uint64_t *)((char *)&v149 - v8);
  v10 = sub_23220039C();
  v177 = *(_QWORD *)(v10 - 8);
  v178 = (_QWORD *)v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v149 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  MEMORY[0x24BDAC7A8](v13);
  v174 = (char *)&v149 - v14;
  v15 = sub_2321FDC6C();
  MEMORY[0x24BDAC7A8](v15);
  v164 = (char *)&v149 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, qword_2541B78E0, (void (*)(uint64_t))MEMORY[0x24BE47DF8]);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v172 = (char *)&v149 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v165 = (char *)&v149 - v20;
  v21 = type metadata accessor for SnidgetFeedItemMetadata(0);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v173 = (char *)&v149 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v166 = (char *)&v149 - v24;
  sub_2320002B4(0, &qword_2541B2368, (void (*)(uint64_t))MEMORY[0x24BE445A8]);
  MEMORY[0x24BDAC7A8](v25);
  v163 = (char *)&v149 - v26;
  sub_2320002B4(0, &qword_2541B2930, (void (*)(uint64_t))MEMORY[0x24BE42FE0]);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v171 = (char *)&v149 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v159 = (char *)&v149 - v30;
  v31 = sub_2322002D0();
  v158 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v167 = (uint64_t)&v149 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = sub_2321FEA7C();
  v155 = *(_QWORD *)(v157 - 8);
  v33 = MEMORY[0x24BDAC7A8](v157);
  v156 = (char *)&v149 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33);
  v154 = (char *)&v149 - v35;
  v153 = sub_2321FEB84();
  v152 = *(_QWORD *)(v153 - 8);
  MEMORY[0x24BDAC7A8](v153);
  v151 = (char *)&v149 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, (unint64_t *)&qword_2541B2838, (void (*)(uint64_t))MEMORY[0x24BDCC5A8]);
  v38 = MEMORY[0x24BDAC7A8](v37);
  v162 = (char *)&v149 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = MEMORY[0x24BDAC7A8](v38);
  v161 = (char *)&v149 - v41;
  MEMORY[0x24BDAC7A8](v40);
  v43 = (char *)&v149 - v42;
  v44 = sub_2321FD9F0();
  v45 = *(_QWORD *)(v44 - 8);
  v169 = v44;
  v170 = v45;
  v46 = MEMORY[0x24BDAC7A8](v44);
  v160 = (char *)&v149 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v46);
  v168 = (char *)&v149 - v48;
  v49 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (!v49)
  {
    __break(1u);
    goto LABEL_35;
  }
  v50 = v49;
  v51 = objc_msgSend(v49, sel_features);

  if (!v51)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v52 = objc_msgSend(v51, sel_nebula);

  if (!v52)
    goto LABEL_24;
  v149 = v31;
  v53 = (void *)objc_opt_self();
  v54 = (void *)*v3;
  v55 = objc_msgSend(v53, sel_sharedInstanceForHealthStore_, *v3);
  if (!v55)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v56 = v55;
  v150 = (char *)v3 + *(int *)(v4 + 20);
  v57 = objc_msgSend(v55, sel_displayTypeForObjectType_, *((_QWORD *)v150 + 2));

  if (v57)
  {
    v58 = v180;
    sub_2320849F8(v179);
    if (v58)
    {

      return;
    }
    v71 = v59;
    if (!v59)
      goto LABEL_27;
    if (!objc_msgSend(v59, sel_hasQuantity)
      || !objc_msgSend(v71, sel_hasClassificationRawValue)
      || !objc_msgSend(v71, sel_hasLevelViewDataConfiguration))
    {
      goto LABEL_26;
    }
    v72 = objc_msgSend(v71, sel_quantity);
    if (v72)
    {
      v73 = v72;
      v74 = objc_msgSend(v72, sel_hasDateData);

      if (v74)
      {
        v75 = objc_msgSend(v71, sel_quantity);
        if (v75)
        {
          v76 = v75;
          v77 = objc_msgSend(v75, sel_hasValue);

          if (v77)
          {
            v179 = v57;
            v180 = v71;
            v78 = *(void **)&v150[*(int *)(type metadata accessor for SnidgetFeedItemGeneratorRequest(0) + 32)];
            type metadata accessor for SnidgetStringBuilder();
            inited = (_QWORD *)swift_initStackObject();
            inited[2] = v54;
            v80 = (void *)objc_opt_self();
            v81 = v78;
            v82 = v54;
            v83 = objc_msgSend(v80, sel_sharedInstanceForHealthStore_, v82);
            inited[4] = v83;
            if (!v78)
            {
              v84 = v83;
              v81 = objc_msgSend(v84, sel_createHKUnitPreferenceController);

            }
            v85 = v180;

            inited[3] = v81;
            v86 = objc_msgSend((id)objc_opt_self(), sel_localizedTitleForBreathingDisturbancesClassification_, objc_msgSend(v85, sel_classificationRawValue));
            sub_232200EC4();

            SnidgetStringBuilder.makePrimaryAttributedString(localizedString:)();
            swift_bridgeObjectRelease();
            v88 = v169;
            v87 = v170;
            v89 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v170 + 56);
            v89(v43, 0, 1, v169);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v43, 1, v88) == 1)
            {
              sub_232079A90((uint64_t)v43);
              v90 = sub_2321FE65C();
              v91 = (uint64_t)v172;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 56))(v172, 1, 1, v90);
              v92 = sub_2321FD8B8();
              v93 = (uint64_t)v174;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56))(v174, 1, 1, v92);
              v94 = v175;
              swift_bridgeObjectRetain();
              v95 = v173;
              sub_2320D71E8(0, v91, v94, v93, v173);
              sub_2321FF208();
              v96 = sub_2321FEF5C();
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 56))(v171, 1, 1, v96);
              v97 = v179;
              v98 = sub_2321FF1FC();
              sub_232044300(0);
              v100 = v176;
              sub_23200054C((uint64_t)v95, (uint64_t)v176 + *(int *)(v99 + 52), type metadata accessor for SnidgetFeedItemMetadata);

              swift_release();
LABEL_28:
              v100[1] = 0;
              v100[2] = 0;
              *v100 = v98;
              sub_232002CEC((uint64_t)v95, type metadata accessor for SnidgetFeedItemMetadata);
              return;
            }
            v178 = inited;
            (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v168, v43, v88);
            v110 = (char *)objc_msgSend(v85, sel_levelViewDataConfiguration);
            if (v110)
            {
              v111 = objc_msgSend(v179, sel_objectType);
              v112 = v151;
              sub_2321FEB90();
              v113 = v152;
              v114 = *(void (**)(char *, char *, uint64_t))(v152 + 16);
              v177 = (uint64_t)v89;
              v115 = v154;
              v116 = v153;
              v114(v154, v112, v153);
              v117 = v155;
              v118 = v157;
              (*(void (**)(char *, _QWORD, uint64_t))(v155 + 104))(v115, *MEMORY[0x24BE41348], v157);
              LevelView.DataConfiguration.init(codable:)(v110, v167);
              v119 = *(void (**)(char *, uint64_t))(v113 + 8);
              v85 = v180;
              v119(v112, v116);
              v120 = *(void (**)(char *, char *, uint64_t))(v117 + 32);
              v121 = v156;
              v122 = v115;
              v89 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v177;
              v120(v156, v122, v118);
              type metadata accessor for SnidgetLevelChartView.ViewModel();
              v110 = (char *)swift_allocObject();
              (*(void (**)(char *, uint64_t, uint64_t))(v158 + 32))(&v110[OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_dataConfiguration], v167, v149);
              v120(&v110[OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_accentColor], v121, v118);
            }
            v123 = objc_msgSend(v85, sel_quantity);
            if (v123)
            {
              v124 = v123;
              sub_2321FF208();
              sub_232000448();
              v126 = *(int *)(v125 + 48);
              objc_msgSend(v124, sel_dateData);
              v127 = (id)HKDecodeDateForValue();
              v128 = v159;
              sub_2321FDC30();

              v128[v126] = 0;
              v129 = *MEMORY[0x24BE42FD8];
              v130 = sub_2321FEF5C();
              v131 = *(_QWORD *)(v130 - 8);
              (*(void (**)(char *, uint64_t, uint64_t))(v131 + 104))(v128, v129, v130);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v131 + 56))(v128, 0, 1, v130);
              v179 = v179;
              v177 = sub_2321FF1FC();
              v89(v161, 1, 1, v88);
              (*(void (**)(char *, char *, uint64_t))(v170 + 16))(v160, v168, v88);
              v89(v162, 1, 1, v88);
              v181[0] = 0x5F74656764696E53;
              v181[1] = 0xE800000000000000;
              v132 = *((id *)v150 + 2);
              v133 = objc_msgSend(v132, sel_description);
              sub_232200EC4();

              sub_232200F48();
              swift_bridgeObjectRelease();
              v134 = v163;
              sub_2321FF58C();
              swift_bridgeObjectRelease();
              v135 = sub_2321FF5A4();
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v135 - 8) + 56))(v134, 0, 1, v135);
              sub_2321FF6C4();
              swift_allocObject();
              v136 = sub_2321FF6B8();
              swift_retain();
              v137 = v180;
              v138 = objc_msgSend(v180, sel_quantity);
              if (v138)
              {
                v139 = v138;
                objc_msgSend(v138, sel_dateData);
                v140 = (id)HKDecodeDateForValue();
                sub_2321FDC30();

                v141 = (uint64_t)v165;
                sub_2321FE62C();
                v142 = sub_2321FE65C();
                (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v142 - 8) + 56))(v141, 0, 1, v142);
                v143 = sub_2321FD8B8();
                v144 = (uint64_t)v174;
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v143 - 8) + 56))(v174, 1, 1, v143);
                v145 = v175;
                swift_bridgeObjectRetain();
                v146 = v166;
                sub_2320D71E8(1, v141, v145, v144, v166);

                swift_release();
                swift_release();
                v147 = v176;
                *v176 = v177;
                v147[1] = v136;
                v147[2] = (uint64_t)v110;
                sub_232044300(0);
                sub_232104E50((uint64_t)v146, (uint64_t)v147 + *(int *)(v148 + 52));
                (*(void (**)(char *, uint64_t))(v170 + 8))(v168, v169);
                return;
              }
              goto LABEL_40;
            }
LABEL_39:
            swift_release();
            __break(1u);
LABEL_40:
            swift_release();
            __break(1u);
            return;
          }
          goto LABEL_26;
        }
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
LABEL_26:

LABEL_27:
      v102 = sub_2321FE65C();
      v103 = (uint64_t)v172;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 56))(v172, 1, 1, v102);
      v104 = sub_2321FD8B8();
      v105 = (uint64_t)v174;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 56))(v174, 1, 1, v104);
      v106 = v175;
      swift_bridgeObjectRetain();
      v95 = v173;
      sub_2320D71E8(0, v103, v106, v105, v173);
      sub_2321FF208();
      v107 = sub_2321FEF5C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 56))(v171, 1, 1, v107);
      v108 = v57;
      v98 = sub_2321FF1FC();
      sub_232044300(0);
      v100 = v176;
      sub_23200054C((uint64_t)v95, (uint64_t)v176 + *(int *)(v109 + 52), type metadata accessor for SnidgetFeedItemMetadata);

      goto LABEL_28;
    }
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  sub_232200318();
  sub_23200054C((uint64_t)v3, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for BreathingDisturbancesValueSnidgetFeedItemModelProvider);
  sub_23200054C((uint64_t)v3, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for BreathingDisturbancesValueSnidgetFeedItemModelProvider);
  v60 = sub_232200390();
  v61 = sub_2322012E4();
  v62 = v61;
  if (os_log_type_enabled(v60, v61))
  {
    v63 = swift_slowAlloc();
    v180 = (id)swift_slowAlloc();
    v181[0] = (uint64_t)v180;
    *(_DWORD *)v63 = 136315394;
    v64 = sub_23208532C(*v9, *((unsigned __int8 *)v9 + *(int *)(v4 + 20) + 8));
    LODWORD(v179) = v62;
    v182 = sub_232013174(v64, v65, v181);
    sub_232201710();
    swift_bridgeObjectRelease();
    sub_232002CEC((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for BreathingDisturbancesValueSnidgetFeedItemModelProvider);
    *(_WORD *)(v63 + 12) = 2080;
    v66 = objc_msgSend(*(id *)&v7[*(int *)(v4 + 20) + 16], sel_sensitiveLoggingIdentifier);
    v67 = sub_232200EC4();
    v69 = v68;

    v182 = sub_232013174(v67, v69, v181);
    sub_232201710();
    swift_bridgeObjectRelease();
    sub_232002CEC((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for BreathingDisturbancesValueSnidgetFeedItemModelProvider);
    _os_log_impl(&dword_231FFB000, v60, (os_log_type_t)v179, "[%s]: unable to find display type: %s", (uint8_t *)v63, 0x16u);
    v70 = v180;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v70, -1, -1);
    MEMORY[0x2348FF468](v63, -1, -1);
  }
  else
  {
    sub_232002CEC((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for BreathingDisturbancesValueSnidgetFeedItemModelProvider);
    sub_232002CEC((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for BreathingDisturbancesValueSnidgetFeedItemModelProvider);
  }

  (*(void (**)(char *, _QWORD *))(v177 + 8))(v12, v178);
LABEL_24:
  sub_232005578();
  swift_allocError();
  *v101 = 0;
  swift_willThrow();
}

void sub_23210CE8C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_23210BDD4(*(void **)a1, *(_QWORD *)(a1 + 16), a2);
}

ValueMetadata *type metadata accessor for ActivitySummaryAdditionalInputSignalsProvider()
{
  return &type metadata for ActivitySummaryAdditionalInputSignalsProvider;
}

id sub_23210CEC0()
{
  uint64_t v0;
  unint64_t inited;
  id result;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t (*v7)(uint64_t);

  sub_232031990();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_232210D30;
  sub_232027434();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232210D20;
  sub_23210D060();
  result = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_activityCacheType);
  if (result)
  {
    *(_QWORD *)(inited + 32) = result;
    sub_232201050();
    if (inited >> 62)
    {
      swift_bridgeObjectRetain();
      v3 = sub_232201998();
      swift_bridgeObjectRelease();
      if (!v3)
        goto LABEL_6;
    }
    else if (!*(_QWORD *)((inited & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      swift_bridgeObjectRelease();
      v4 = sub_2321FE920();
      v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BE48310];
      *(_QWORD *)(v0 + 56) = v4;
      *(_QWORD *)(v0 + 64) = sub_232000590(&qword_2541B6AB8, v5, MEMORY[0x24BE48300]);
      sub_2320251BC((uint64_t *)(v0 + 32));
      sub_2321FE914();
      sub_2321FFB74();
      v6 = sub_2321FFB44();
      v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BE47138];
      *(_QWORD *)(v0 + 96) = v6;
      *(_QWORD *)(v0 + 104) = sub_232000590((unint64_t *)&qword_2541B6B38, v7, MEMORY[0x24BE47130]);
      sub_2320251BC((uint64_t *)(v0 + 72));
      sub_2321FFB68();
      return (id)v0;
    }
    sub_2321AA560(inited);
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

unint64_t sub_23210D060()
{
  unint64_t result;

  result = qword_2541B7EA8;
  if (!qword_2541B7EA8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2541B7EA8);
  }
  return result;
}

uint64_t sub_23210D09C@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  id v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  id v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v55 = a4;
  v56 = a3;
  v48 = a2;
  v49 = a1;
  v50 = type metadata accessor for TrendNotificationModel();
  v46 = *(_QWORD *)(v50 - 8);
  v6 = MEMORY[0x24BDAC7A8](v50);
  v45 = (uint64_t)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v44 = (uint64_t)&v43 - v8;
  v9 = sub_2321FE7DC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232112338(0);
  v53 = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v43 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v43 - v21;
  v23 = (int *)type metadata accessor for TrendCoalescingNotificationViewModel();
  v24 = (uint64_t)a5 + v23[5];
  v25 = sub_2321FE584();
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56);
  v51 = v24;
  v26(v24, 1, 1, v25);
  v27 = v23[6];
  *(_QWORD *)((char *)a5 + v27) = MEMORY[0x24BEE4AF8];
  *((_BYTE *)a5 + v23[7]) = 0;
  v52 = a5;
  v28 = v49;
  *a5 = v49;
  v54 = v10;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v30 = v46;
  v47 = v9;
  v29(v12, v56, v9);
  v49 = v28;
  v31 = v48;
  sub_2320FCD10(v31, (uint64_t)v12, (uint64_t)v22);
  sub_2320057B8(0, &qword_255F9F2D0, (uint64_t (*)(uint64_t))sub_232112338, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v32 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_232210D40;
  v34 = v33 + v32;
  sub_23200054C((uint64_t)v22, v34, (uint64_t (*)(_QWORD))sub_232112338);
  sub_23200054C(v34, (uint64_t)v20, (uint64_t (*)(_QWORD))sub_232112338);
  sub_232025468((uint64_t)v20, (uint64_t)v17, (uint64_t (*)(_QWORD))sub_232112338);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v17, 1, v50) == 1)
  {
    sub_232002CEC((uint64_t)v17, (uint64_t (*)(_QWORD))sub_232112338);
    v35 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v50 = v27;
    v36 = v44;
    sub_232025468((uint64_t)v17, v44, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
    v37 = v36;
    v38 = v45;
    sub_232025468(v37, v45, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
    v35 = MEMORY[0x24BEE4AF8];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v35 = sub_23209723C(0, *(_QWORD *)(v35 + 16) + 1, 1, v35);
    v40 = *(_QWORD *)(v35 + 16);
    v39 = *(_QWORD *)(v35 + 24);
    if (v40 >= v39 >> 1)
      v35 = sub_23209723C(v39 > 1, v40 + 1, 1, v35);
    *(_QWORD *)(v35 + 16) = v40 + 1;
    sub_232025468(v38, v35+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(_QWORD *)(v30 + 72) * v40, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
    v27 = v50;
  }

  (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v56, v47);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_232002CEC((uint64_t)v22, (uint64_t (*)(_QWORD))sub_232112338);
  v41 = v52;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v41 + v27) = v35;
  return sub_232112354(v55, v51);
}

uint64_t sub_23210D488()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  _QWORD v8[2];

  v1 = sub_2321FDCC0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[0] = 0xD00000000000001BLL;
  v8[1] = 0x8000000232207820;
  v5 = objc_msgSend(*v0, sel_profileIdentifier);
  v6 = objc_msgSend(v5, sel_identifier);

  sub_2321FDCA8();
  sub_2321FDC84();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_232200F48();
  swift_bridgeObjectRelease();
  return v8[0];
}

id sub_23210D590()
{
  void **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void *v26;
  uint64_t inited;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  id *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  id v54;
  char *v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  id v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  uint8_t *v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  id v79;
  void *v80;
  _QWORD v82[3];
  uint64_t v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  id *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;

  v1 = (uint64_t)v0;
  v90 = type metadata accessor for TrendCoalescingNotificationViewModel();
  v2 = MEMORY[0x24BDAC7A8](v90);
  v82[1] = (char *)v82 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v91 = (id *)((char *)v82 - v5);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v82 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v89 = (uint64_t)v82 - v9;
  v10 = sub_23220039C();
  v93 = *(_QWORD *)(v10 - 8);
  v94 = v10;
  v11 = MEMORY[0x24BDAC7A8](v10);
  v82[2] = (char *)v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v82 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v92 = (char *)v82 - v16;
  v97 = type metadata accessor for TrendNotificationModel();
  v83 = *(_QWORD *)(v97 - 8);
  MEMORY[0x24BDAC7A8](v97);
  v18 = (char *)v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_2321FE7DC();
  v19 = *(_QWORD *)(v96 - 8);
  MEMORY[0x24BDAC7A8](v96);
  v98 = (char *)v82 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2321123CC(0);
  MEMORY[0x24BDAC7A8](v21);
  v88 = (uint64_t)v82 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_2321FDCC0();
  v86 = *(_QWORD *)(v23 - 8);
  v87 = v23;
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)v82 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDF8800]), sel_init);
  v26 = *v0;
  type metadata accessor for TrendLocalization();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = v26;
  *(_QWORD *)(inited + 24) = 0;
  *(_BYTE *)(inited + 32) = 0;
  v85 = v26;
  sub_23210E864();
  if (!v28)
  {
LABEL_14:
    sub_232200318();
    sub_23200054C(v1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for TrendCoalescingNotificationViewModel);
    v58 = (uint64_t)v91;
    sub_23200054C(v1, (uint64_t)v91, (uint64_t (*)(_QWORD))type metadata accessor for TrendCoalescingNotificationViewModel);
    v59 = sub_232200390();
    v60 = sub_2322012E4();
    if (os_log_type_enabled(v59, v60))
    {
      v61 = swift_slowAlloc();
      v62 = swift_slowAlloc();
      v98 = v15;
      v63 = v58;
      v64 = v62;
      v100 = v62;
      *(_DWORD *)v61 = 136380931;
      v65 = sub_23210E354();
      v99 = sub_232013174((uint64_t)v65, v66, &v100);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for TrendCoalescingNotificationViewModel);
      *(_WORD *)(v61 + 12) = 2081;
      v67 = sub_23210E634();
      v99 = sub_232013174(v67, v68, &v100);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v63, (uint64_t (*)(_QWORD))type metadata accessor for TrendCoalescingNotificationViewModel);
      _os_log_impl(&dword_231FFB000, v59, v60, "[Trend Notification] Could not create notification title or body with identifier %{private}s for notification: %{private}s", (uint8_t *)v61, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v64, -1, -1);
      MEMORY[0x2348FF468](v61, -1, -1);

      swift_release();
      (*(void (**)(char *, uint64_t))(v93 + 8))(v98, v94);
    }
    else
    {
      swift_release();

      sub_232002CEC((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for TrendCoalescingNotificationViewModel);
      sub_232002CEC(v58, (uint64_t (*)(_QWORD))type metadata accessor for TrendCoalescingNotificationViewModel);

      (*(void (**)(char *, uint64_t))(v93 + 8))(v15, v94);
    }
    return 0;
  }
  v84 = inited;
  sub_23210E9AC(inited);
  if (!v29)
  {
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  v30 = (void *)sub_232200E94();
  swift_bridgeObjectRelease();
  v31 = v95;
  objc_msgSend(v95, sel_setTitle_, v30);

  v32 = (void *)sub_232200E94();
  swift_bridgeObjectRelease();
  objc_msgSend(v31, sel_setBody_, v32);

  v33 = (void *)sub_232200E94();
  objc_msgSend(v31, sel_setCategoryIdentifier_, v33);

  v34 = objc_msgSend(v85, sel_profileIdentifier);
  v35 = objc_msgSend(v34, sel_identifier);

  sub_2321FDCA8();
  sub_2321FDC84();
  (*(void (**)(char *, uint64_t))(v86 + 8))(v25, v87);
  v36 = (void *)sub_232200E94();
  swift_bridgeObjectRelease();
  objc_msgSend(v31, sel_setThreadIdentifier_, v36);

  v37 = sub_2321122F8(&qword_255F9F2F0, (uint64_t)&unk_2322161B8);
  v38 = v90;
  v39 = (void *)sub_2321FF100();
  objc_msgSend(v31, sel_setSound_, v39);

  v40 = *(_QWORD *)(v1 + *(int *)(v38 + 24));
  v41 = *(_QWORD *)(v40 + 16);
  v42 = MEMORY[0x24BEE4AF8];
  v43 = (id *)v1;
  if (v41)
  {
    v87 = v37;
    v91 = (id *)v1;
    v100 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_232013A94(0, v41, 0);
    v44 = *(unsigned __int8 *)(v83 + 80);
    v86 = v40;
    v45 = v40 + ((v44 + 32) & ~v44);
    v46 = *(_QWORD *)(v83 + 72);
    v47 = v96;
    v48 = v98;
    do
    {
      sub_23200054C(v45, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v48, &v18[*(int *)(v97 + 24)], v47);
      sub_232002CEC((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
      v42 = v100;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_232013A94(0, *(_QWORD *)(v42 + 16) + 1, 1);
        v47 = v96;
        v42 = v100;
      }
      v50 = *(_QWORD *)(v42 + 16);
      v49 = *(_QWORD *)(v42 + 24);
      if (v50 >= v49 >> 1)
      {
        sub_232013A94(v49 > 1, v50 + 1, 1);
        v47 = v96;
        v42 = v100;
      }
      *(_QWORD *)(v42 + 16) = v50 + 1;
      v48 = v98;
      (*(void (**)(unint64_t, char *, uint64_t))(v19 + 32))(v42+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(_QWORD *)(v19 + 72) * v50, v98, v47);
      v100 = v42;
      v45 += v46;
      --v41;
    }
    while (v41);
    swift_bridgeObjectRelease();
    v43 = v91;
  }
  v51 = v88;
  sub_23210EBB0(v88);
  sub_2320E36BC(v42);
  swift_bridgeObjectRelease();
  sub_232002CEC(v51, (uint64_t (*)(_QWORD))sub_2321123CC);
  v52 = (void *)sub_232200DBC();
  swift_bridgeObjectRelease();
  objc_msgSend(v95, sel_setUserInfo_, v52);

  v53 = objc_msgSend(*v43, sel_profileIdentifier);
  v54 = objc_msgSend(v53, sel_type);

  v55 = v92;
  if (v54 != (id)1)
  {
    sub_232000608(0, (unint64_t *)&qword_2541B78C8, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v56 = swift_allocObject();
    *(_OWORD *)(v56 + 16) = xmmword_232210D20;
    v57 = (void *)sub_2322011C4();
    v70 = sub_2321FF0DC();

    *(_QWORD *)(v56 + 32) = v70;
    v100 = v56;
    sub_232201050();
    sub_232003E9C(0, &qword_255F9F2F8);
    v71 = (void *)sub_232201020();
    swift_bridgeObjectRelease();
    objc_msgSend(v95, sel_setAttachments_, v71);

  }
  sub_232200318();
  v72 = v89;
  sub_23200054C((uint64_t)v43, v89, (uint64_t (*)(_QWORD))type metadata accessor for TrendCoalescingNotificationViewModel);
  v73 = sub_232200390();
  v74 = sub_2322012FC();
  if (os_log_type_enabled(v73, v74))
  {
    v75 = (uint8_t *)swift_slowAlloc();
    v76 = swift_slowAlloc();
    v100 = v76;
    *(_DWORD *)v75 = 136380675;
    v77 = sub_23210E634();
    v99 = sub_232013174(v77, v78, &v100);
    sub_232201710();
    swift_bridgeObjectRelease();
    sub_232002CEC(v72, (uint64_t (*)(_QWORD))type metadata accessor for TrendCoalescingNotificationViewModel);
    _os_log_impl(&dword_231FFB000, v73, v74, "[Trend Notification] Creating coalesced notification request for notification: %{private}s", v75, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v76, -1, -1);
    MEMORY[0x2348FF468](v75, -1, -1);

    (*(void (**)(char *, uint64_t))(v93 + 8))(v92, v94);
  }
  else
  {
    sub_232002CEC(v72, (uint64_t (*)(_QWORD))type metadata accessor for TrendCoalescingNotificationViewModel);

    (*(void (**)(char *, uint64_t))(v93 + 8))(v55, v94);
  }
  sub_23210E354();
  v79 = v95;
  v80 = (void *)sub_232200E94();
  swift_bridgeObjectRelease();
  v69 = objc_msgSend((id)objc_opt_self(), sel_requestWithIdentifier_content_trigger_, v80, v79, 0);
  swift_release();

  return v69;
}

_QWORD *sub_23210E354()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id *v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  id v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  void *v17;
  _QWORD v19[2];
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;

  v1 = type metadata accessor for TrendNotificationModel();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (id *)((char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = *(_QWORD **)(v0 + *(int *)(type metadata accessor for TrendCoalescingNotificationViewModel() + 24));
  swift_bridgeObjectRetain_n();
  sub_23210FC98(&v21);
  swift_bridgeObjectRelease();
  v5 = v21[2];
  if (v5)
  {
    v19[0] = v21;
    v19[1] = v0;
    v6 = (char *)v21 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v20 = *(_QWORD *)(v2 + 72);
    swift_retain();
    v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      sub_23200054C((uint64_t)v6, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
      v8 = objc_msgSend(*v4, sel_identifier);
      v9 = (_QWORD *)sub_232200EC4();
      v11 = v10;

      sub_23220021C();
      v21 = v9;
      v22 = v11;
      sub_232200F48();
      sub_232200F48();
      swift_bridgeObjectRelease();
      v12 = v21;
      v13 = v22;
      sub_232002CEC((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v7 = sub_232096810(0, v7[2] + 1, 1, v7);
      v15 = v7[2];
      v14 = v7[3];
      if (v15 >= v14 >> 1)
        v7 = sub_232096810((_QWORD *)(v14 > 1), v15 + 1, 1, v7);
      v7[2] = v15 + 1;
      v16 = &v7[2 * v15];
      v16[4] = v12;
      v16[5] = v13;
      v6 += v20;
      --v5;
    }
    while (v5);
    swift_release_n();
  }
  else
  {
    swift_release();
    v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v21 = v7;
  sub_232000608(0, (unint64_t *)&qword_2541B54F8, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_2320A3A98();
  sub_232200E1C();
  swift_bridgeObjectRelease();
  v21 = (_QWORD *)0xD00000000000001BLL;
  v22 = 0x8000000232207820;
  v17 = (void *)sub_2322011C4();
  sub_2321FE1AC();

  sub_232200F48();
  swift_bridgeObjectRelease();
  sub_232200F48();
  sub_232200F48();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_23210E634()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v1 = type metadata accessor for TrendNotificationModel();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (id *)((char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = 0;
  v16 = 0xE000000000000000;
  sub_23220189C();
  sub_232200F48();
  sub_23210E354();
  sub_232200F48();
  swift_bridgeObjectRelease();
  sub_232200F48();
  sub_23210D488();
  sub_232200F48();
  swift_bridgeObjectRelease();
  sub_232200F48();
  v5 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TrendCoalescingNotificationViewModel() + 24));
  v6 = *(_QWORD *)(v5 + 16);
  v7 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v14 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_2322018FC();
    v8 = v5 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v9 = *(_QWORD *)(v2 + 72);
    do
    {
      sub_23200054C(v8, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
      v10 = *v4;
      sub_232002CEC((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
      sub_2322018E4();
      sub_232201908();
      sub_232201914();
      sub_2322018F0();
      v8 += v9;
      --v6;
    }
    while (v6);
    v7 = v14;
    swift_bridgeObjectRelease();
  }
  v11 = sub_232003E9C(0, (unint64_t *)&qword_2541B74A0);
  MEMORY[0x2348FE1C0](v7, v11);
  swift_bridgeObjectRelease();
  sub_232200F48();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_23210E864()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  v1 = type metadata accessor for TrendCoalescingNotificationViewModel();
  v2 = *(uint64_t *)((char *)v0 + *(int *)(v1 + 24));
  if (!*(_QWORD *)(v2 + 16))
    return 0;
  v3 = v1;
  v4 = objc_msgSend(*v0, sel_profileIdentifier);
  v5 = objc_msgSend(v4, sel_type);

  if (v5 == (id)2)
  {
    v6 = *((_BYTE *)v0 + *(int *)(v3 + 28));
    v7 = 0x80000002322078A0;
    v8 = MEMORY[0x24BEE4AF8];
    v9 = 0xD000000000000027;
    return sub_232088E70(v9, v7, v6, 0, 0xE000000000000000, v8);
  }
  if (*(_QWORD *)(v2 + 16) != 1)
  {
    v6 = *((_BYTE *)v0 + *(int *)(v3 + 28));
    v9 = 0xD000000000000029;
    v7 = 0x8000000232207870;
    v8 = MEMORY[0x24BEE4AF8];
    return sub_232088E70(v9, v7, v6, 0, 0xE000000000000000, v8);
  }
  v11 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TrendNotificationModel() - 8) + 80);
  v12 = *(id *)(v2 + ((v11 + 32) & ~v11));
  v10 = sub_23206B294(v12);

  return v10;
}

uint64_t sub_23210E9AC(uint64_t a1)
{
  id *v1;
  id *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = v1;
  v4 = type metadata accessor for TrendNotificationModel();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (id *)((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for TrendCoalescingNotificationViewModel();
  v9 = *(uint64_t *)((char *)v1 + *(int *)(v8 + 24));
  if (!*(_QWORD *)(v9 + 16))
    return 0;
  v10 = v8;
  v11 = objc_msgSend(*v1, sel_profileIdentifier);
  v12 = objc_msgSend(v11, sel_type);

  v13 = *(_QWORD *)(v9 + 16);
  v14 = MEMORY[0x24BEE4AF8];
  if (!v13)
  {
LABEL_9:
    v17 = sub_23206CFA0(v14, (uint64_t)v12, (uint64_t)v2 + *(int *)(v10 + 20));
    swift_bridgeObjectRelease();
    return v17;
  }
  if (v13 != 1)
  {
    v22 = v12;
    v23 = v10;
    v24 = a1;
    v25 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_2322018FC();
    v18 = v9 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v19 = *(_QWORD *)(v5 + 72);
    do
    {
      sub_23200054C(v18, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
      v20 = *v7;
      sub_232002CEC((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
      sub_2322018E4();
      sub_232201908();
      sub_232201914();
      sub_2322018F0();
      v18 += v19;
      --v13;
    }
    while (v13);
    v14 = v25;
    swift_bridgeObjectRelease();
    v10 = v23;
    v12 = v22;
    goto LABEL_9;
  }
  v15 = (uint64_t)v2 + *(int *)(v10 + 20);
  v16 = objc_retain(*(id *)(v9
                          + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))));
  v17 = sub_23206BE44(v16, (uint64_t)v12, v15);

  return v17;
}

uint64_t sub_23210EBB0@<X0>(uint64_t a1@<X8>)
{
  id *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  id v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_2321123CC(0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v46 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v46 - v10;
  v12 = type metadata accessor for TrendNotificationModel();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (id *)((char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = *(uint64_t *)((char *)v1 + *(int *)(type metadata accessor for TrendCoalescingNotificationViewModel() + 24));
  v17 = *(_QWORD *)(v16 + 16);
  if (v17)
  {
    if (v17 == 1)
    {
      sub_23200054C(v16 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
      v18 = objc_msgSend(*v1, sel_profileIdentifier);
      v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE3F818]), sel_initWithProfileIdentifier_, v18);

      v20 = sub_23220021C();
      v22 = v21;
      if (v20 == sub_23220021C() && v22 == v23)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        sub_232201ADC();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v35 = *v15;
      v36 = objc_msgSend(v19, sel_URLForDataTypeDetailWithObjectType_trendOverlay_, v35, sub_23220156C());

      if (v36)
      {
        sub_2321FDAA4();

        sub_232002CEC((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
        v37 = sub_2321FDABC();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v11, 0, 1, v37);
      }
      else
      {

        sub_232002CEC((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
        v42 = sub_2321FDABC();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v11, 1, 1, v42);
      }
      v43 = (uint64_t)v11;
    }
    else
    {
      v27 = *v1;
      v28 = objc_msgSend(v27, sel_profileIdentifier);
      v29 = objc_msgSend(v28, sel_type);

      v30 = objc_msgSend(v27, sel_profileIdentifier);
      if (v29 == (id)1)
      {
        v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE3F828]), sel_initWithProfileIdentifier_, v30);

        v32 = objc_msgSend(v31, sel_URLForHealthTrends);
        if (v32)
        {
          v33 = v32;
          sub_2321FDAA4();

          v34 = sub_2321FDABC();
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v6, 0, 1, v34);
        }
        else
        {

          v44 = sub_2321FDABC();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v6, 1, 1, v44);
        }
        v43 = (uint64_t)v6;
      }
      else
      {
        v38 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE3F820]), sel_initWithProfileIdentifier_, v30);

        v39 = objc_msgSend(v38, sel_URLForSharingOverview);
        if (v39)
        {
          v40 = v39;
          sub_2321FDAA4();

          v41 = sub_2321FDABC();
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v9, 0, 1, v41);
        }
        else
        {

          v45 = sub_2321FDABC();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v9, 1, 1, v45);
        }
        v43 = (uint64_t)v9;
      }
    }
    return sub_232025468(v43, a1, (uint64_t (*)(_QWORD))sub_2321123CC);
  }
  else
  {
    v25 = sub_2321FDABC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a1, 1, 1, v25);
  }
}

uint64_t sub_23210F034@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  int v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v60;
  char v61;
  char *v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  uint64_t *v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t *v78;
  char *v80;
  uint64_t v81;
  NSObject *v82;
  os_log_type_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  unint64_t v88;
  _QWORD *v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  unint64_t v108;
  char *v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124[5];
  uint64_t v125;
  uint64_t v126[2];

  v117 = a2;
  v3 = sub_23220039C();
  v114 = *(_QWORD *)(v3 - 8);
  v115 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v123 = (uint64_t)&v100 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v106 = (char *)&v100 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v109 = (char *)&v100 - v8;
  v118 = type metadata accessor for TrendNotificationModel();
  v113 = *(_QWORD *)(v118 - 8);
  v9 = MEMORY[0x24BDAC7A8](v118);
  v119 = (uint64_t)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v120 = (uint64_t)&v100 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v100 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v100 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v100 - v19;
  sub_2321123B0(0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v100 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for TrendCoalescingNotificationViewModel();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v100 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v26);
  v31 = (char *)&v100 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)&v100 - v32;
  v122 = a1;
  sub_23201B304(a1, (uint64_t)v126);
  sub_232016A8C(0, &qword_255F9F2E0);
  v34 = swift_dynamicCast();
  v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56);
  if (v34)
  {
    v36 = v113;
    v110 = v18;
    v121 = v15;
    v101 = v28;
    v35(v23, 0, 1, v24);
    sub_232025468((uint64_t)v23, (uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for TrendCoalescingNotificationViewModel);
    v102 = v24;
    v37 = *(int *)(v24 + 24);
    v38 = v116;
    v39 = *(_QWORD *)(v116 + v37);
    v40 = *(_QWORD *)(v39 + 16);
    v41 = (uint64_t)v33;
    v111 = v33;
    v42 = v117;
    v43 = (uint64_t)v31;
    if (v40)
    {
      v108 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
      v107 = v39 + v108;
      v123 = *(_QWORD *)(v36 + 72);
      v100 = v39;
      swift_bridgeObjectRetain();
      v44 = 0;
      v45 = v119;
      v105 = v37;
      v104 = v31;
      v103 = v40;
      while (1)
      {
        v46 = *(_QWORD *)(v41 + v37);
        v47 = *(_QWORD *)(v46 + 16);
        if (v47)
          break;
LABEL_5:
        if (++v44 == v40)
        {
          swift_bridgeObjectRelease();
          v38 = v116;
          v42 = v117;
          goto LABEL_28;
        }
      }
      v112 = v44;
      v48 = v107 + v123 * v44;
      v122 = sub_232003E9C(0, qword_2541B74A8);
      v49 = v46 + v108;
      v113 = v46;
      swift_bridgeObjectRetain_n();
      v50 = v120;
      v51 = (uint64_t)v110;
      while (1)
      {
        sub_23200054C(v49, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
        v52 = sub_2322016A4();
        sub_23200054C((uint64_t)v20, v51, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
        v53 = v51;
        v54 = (uint64_t)v121;
        sub_23200054C(v48, (uint64_t)v121, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
        if ((v52 & 1) == 0)
          break;
        v55 = sub_23220021C();
        v57 = v56;
        if (v55 == sub_23220021C() && v57 == v58)
        {
          swift_bridgeObjectRelease_n();
          sub_232002CEC(v54, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
          sub_232002CEC(v53, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
          v50 = v120;
          sub_23200054C((uint64_t)v20, v120, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
          v45 = v119;
          sub_23200054C(v48, v119, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
          v51 = v53;
        }
        else
        {
          v60 = sub_232201ADC();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_232002CEC(v54, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
          sub_232002CEC(v53, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
          v50 = v120;
          sub_23200054C((uint64_t)v20, v120, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
          v45 = v119;
          sub_23200054C(v48, v119, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
          v51 = v53;
          if ((v60 & 1) == 0)
            goto LABEL_9;
        }
        v61 = MEMORY[0x2348FB940](v50 + *(int *)(v118 + 24), v45 + *(int *)(v118 + 24));
        sub_232002CEC(v45, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
        sub_232002CEC(v50, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
        sub_232002CEC((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
        if ((v61 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          v62 = v106;
          sub_232200318();
          v63 = sub_232200390();
          v64 = sub_2322012FC();
          if (os_log_type_enabled(v63, v64))
          {
            v65 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v65 = 0;
            _os_log_impl(&dword_231FFB000, v63, v64, "[Trend Notification] Duplicate trend detected; not coalescing",
              v65,
              2u);
            MEMORY[0x2348FF468](v65, -1, -1);
          }

          (*(void (**)(char *, uint64_t))(v114 + 8))(v62, v115);
          v66 = v117;
          v117[3] = v102;
          v66[4] = sub_2321122F8(&qword_255F9E0F0, (uint64_t)&unk_2322161E0);
          v67 = sub_2320251BC(v66);
          sub_23200054C(v116, (uint64_t)v67, (uint64_t (*)(_QWORD))type metadata accessor for TrendCoalescingNotificationViewModel);
          v68 = (uint64_t)v111;
          return sub_232002CEC(v68, (uint64_t (*)(_QWORD))type metadata accessor for TrendCoalescingNotificationViewModel);
        }
LABEL_10:
        v49 += v123;
        if (!--v47)
        {
          swift_bridgeObjectRelease_n();
          v41 = (uint64_t)v111;
          v37 = v105;
          v43 = (uint64_t)v104;
          v40 = v103;
          v44 = v112;
          goto LABEL_5;
        }
      }
      sub_232002CEC(v54, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
      sub_232002CEC(v53, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
      sub_23200054C((uint64_t)v20, v50, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
      sub_23200054C(v48, v45, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
      v51 = v53;
LABEL_9:
      sub_232002CEC(v45, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
      sub_232002CEC(v50, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
      sub_232002CEC((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
      goto LABEL_10;
    }
LABEL_28:
    v80 = v109;
    sub_232200318();
    sub_23200054C(v38, v43, (uint64_t (*)(_QWORD))type metadata accessor for TrendCoalescingNotificationViewModel);
    v81 = (uint64_t)v101;
    sub_23200054C(v38, (uint64_t)v101, (uint64_t (*)(_QWORD))type metadata accessor for TrendCoalescingNotificationViewModel);
    v82 = sub_232200390();
    v83 = sub_2322012FC();
    v84 = v83;
    if (os_log_type_enabled(v82, v83))
    {
      v85 = swift_slowAlloc();
      v123 = swift_slowAlloc();
      v126[0] = v123;
      *(_DWORD *)v85 = 136381187;
      v86 = v81;
      swift_beginAccess();
      LODWORD(v122) = v84;
      v87 = sub_23210E354();
      v125 = sub_232013174((uint64_t)v87, v88, v126);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v85 + 12) = 2081;
      v89 = sub_23210E354();
      v125 = sub_232013174((uint64_t)v89, v90, v126);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v43, (uint64_t (*)(_QWORD))type metadata accessor for TrendCoalescingNotificationViewModel);
      *(_WORD *)(v85 + 22) = 2081;
      v91 = v102;
      v92 = v86;
      v93 = swift_bridgeObjectRetain();
      v94 = MEMORY[0x2348FE1C0](v93, v118);
      v96 = v95;
      swift_bridgeObjectRelease();
      v125 = sub_232013174(v94, v96, v126);
      v41 = (uint64_t)v111;
      v42 = v117;
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v92, (uint64_t (*)(_QWORD))type metadata accessor for TrendCoalescingNotificationViewModel);
      _os_log_impl(&dword_231FFB000, v82, (os_log_type_t)v122, "[Trend Notification] Coalescing notification %{private}s with notification %{private}s with configuration: %{private}s", (uint8_t *)v85, 0x20u);
      v97 = v123;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v97, -1, -1);
      MEMORY[0x2348FF468](v85, -1, -1);

      (*(void (**)(char *, uint64_t))(v114 + 8))(v109, v115);
    }
    else
    {
      sub_232002CEC(v43, (uint64_t (*)(_QWORD))type metadata accessor for TrendCoalescingNotificationViewModel);
      sub_232002CEC(v81, (uint64_t (*)(_QWORD))type metadata accessor for TrendCoalescingNotificationViewModel);

      (*(void (**)(char *, uint64_t))(v114 + 8))(v80, v115);
      v91 = v102;
    }
    swift_beginAccess();
    v98 = swift_bridgeObjectRetain();
    sub_23209DC44(v98);
    swift_endAccess();
    v42[3] = v91;
    v42[4] = sub_2321122F8(&qword_255F9E0F0, (uint64_t)&unk_2322161E0);
    v99 = sub_2320251BC(v42);
    sub_23200054C(v41, (uint64_t)v99, (uint64_t (*)(_QWORD))type metadata accessor for TrendCoalescingNotificationViewModel);
    v68 = v41;
    return sub_232002CEC(v68, (uint64_t (*)(_QWORD))type metadata accessor for TrendCoalescingNotificationViewModel);
  }
  else
  {
    v35(v23, 1, 1, v24);
    sub_232002CEC((uint64_t)v23, (uint64_t (*)(_QWORD))sub_2321123B0);
    v69 = v123;
    sub_232200318();
    sub_23201B304(v122, (uint64_t)v126);
    v70 = sub_232200390();
    v71 = sub_2322012E4();
    if (os_log_type_enabled(v70, v71))
    {
      v72 = swift_slowAlloc();
      v73 = swift_slowAlloc();
      v125 = v73;
      *(_DWORD *)v72 = 136315394;
      v124[0] = sub_232013174(0xD000000000000024, 0x8000000232216130, &v125);
      sub_232201710();
      *(_WORD *)(v72 + 12) = 2080;
      sub_23201B304((uint64_t)v126, (uint64_t)v124);
      v74 = sub_232200F00();
      v124[0] = sub_232013174(v74, v75, &v125);
      v76 = v117;
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232016AFC((uint64_t)v126);
      _os_log_impl(&dword_231FFB000, v70, v71, "%s Could not coalesce %s", (uint8_t *)v72, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v73, -1, -1);
      MEMORY[0x2348FF468](v72, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v69, v115);
      v77 = v116;
    }
    else
    {
      sub_232016AFC((uint64_t)v126);

      (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v69, v115);
      v77 = v116;
      v76 = v117;
    }
    v76[3] = v24;
    v76[4] = sub_2321122F8(&qword_255F9E0F0, (uint64_t)&unk_2322161E0);
    v78 = sub_2320251BC(v76);
    return sub_23200054C(v77, (uint64_t)v78, (uint64_t (*)(_QWORD))type metadata accessor for TrendCoalescingNotificationViewModel);
  }
}

uint64_t type metadata accessor for TrendCoalescingNotificationViewModel()
{
  uint64_t result;

  result = qword_2541AFBF0;
  if (!qword_2541AFBF0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23210FC98(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6[2];

  v2 = *(_QWORD *)(type metadata accessor for TrendNotificationModel() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_232111A04(v3);
  v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_23210FD18(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_23210FD18(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id *v12;
  uint64_t v13;
  uint64_t v14;
  id *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id *v37;
  uint64_t v38;
  id *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id *v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  char *v74;
  char *v75;
  void (*v76)(char *, uint64_t);
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  id *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  id v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  int v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  char *v124;
  char *v125;
  void (*v126)(char *, uint64_t);
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v132;
  unint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  BOOL v148;
  unint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  BOOL v158;
  uint64_t v159;
  char v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  BOOL v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  unint64_t v176;
  char *v177;
  char *v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  unint64_t v191;
  uint64_t v192;
  uint64_t v193;
  id *v194;
  id *v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  id *v199;
  uint64_t v200;
  id *v201;
  unint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  id *v214;
  uint64_t v215;
  id *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;

  v2 = sub_2321FDCC0();
  v207 = *(_QWORD *)(v2 - 8);
  v208 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v206 = (char *)&v192 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v205 = (char *)&v192 - v5;
  v213 = type metadata accessor for TrendNotificationModel();
  v203 = *(_QWORD *)(v213 - 8);
  v6 = MEMORY[0x24BDAC7A8](v213);
  v198 = (uint64_t)&v192 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v215 = (uint64_t)&v192 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (id *)((char *)&v192 - v11);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (id *)((char *)&v192 - v14);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v199 = (id *)((char *)&v192 - v17);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (id *)((char *)&v192 - v19);
  v21 = MEMORY[0x24BDAC7A8](v18);
  v195 = (id *)((char *)&v192 - v22);
  MEMORY[0x24BDAC7A8](v21);
  v194 = (id *)((char *)&v192 - v23);
  v24 = a1[1];
  result = sub_232201AAC();
  if (result >= v24)
  {
    if (v24 < 0)
      goto LABEL_187;
    if (v24)
      return sub_232110D54(0, v24, 1, a1);
    return result;
  }
  if (v24 >= 0)
    v26 = v24;
  else
    v26 = v24 + 1;
  if (v24 < -1)
    goto LABEL_195;
  v193 = result;
  if (v24 < 2)
  {
    v30 = MEMORY[0x24BEE4AF8];
    v202 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v203 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v203 + 80));
    if (v24 != 1)
    {
      v33 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v32 = (char *)MEMORY[0x24BEE4AF8];
LABEL_153:
      v192 = v30;
      if (v33 >= 2)
      {
        v184 = *a1;
        v185 = v204;
        do
        {
          v186 = v33 - 2;
          if (v33 < 2)
            goto LABEL_182;
          if (!v184)
            goto LABEL_194;
          v187 = v32;
          v188 = *(_QWORD *)&v32[16 * v186 + 32];
          v189 = *(_QWORD *)&v32[16 * v33 + 24];
          sub_23211127C(v184 + *(_QWORD *)(v203 + 72) * v188, v184 + *(_QWORD *)(v203 + 72) * *(_QWORD *)&v32[16 * v33 + 16], v184 + *(_QWORD *)(v203 + 72) * v189, v202);
          if (v185)
            break;
          if (v189 < v188)
            goto LABEL_183;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v187 = sub_2321119F0((uint64_t)v187);
          if (v186 >= *((_QWORD *)v187 + 2))
            goto LABEL_184;
          v190 = &v187[16 * v186 + 32];
          *(_QWORD *)v190 = v188;
          *((_QWORD *)v190 + 1) = v189;
          v191 = *((_QWORD *)v187 + 2);
          if (v33 > v191)
            goto LABEL_185;
          memmove(&v187[16 * v33 + 16], &v187[16 * v33 + 32], 16 * (v191 - v33));
          v32 = v187;
          *((_QWORD *)v187 + 2) = v191 - 1;
          v33 = v191 - 1;
        }
        while (v191 > 2);
      }
LABEL_164:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v192 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v192 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v27 = v26 >> 1;
    v28 = sub_232201068();
    *(_QWORD *)(v28 + 16) = v27;
    v29 = *(unsigned __int8 *)(v203 + 80);
    v192 = v28;
    v202 = v28 + ((v29 + 32) & ~v29);
  }
  v31 = 0;
  v32 = (char *)MEMORY[0x24BEE4AF8];
  v209 = a1;
  v214 = v12;
  v216 = v15;
  v201 = v20;
LABEL_16:
  v34 = v31 + 1;
  v197 = v32;
  v200 = v31;
  if (v31 + 1 >= v24)
  {
    v42 = v31 + 1;
    goto LABEL_102;
  }
  v196 = *a1;
  v35 = v196;
  v36 = *(_QWORD *)(v203 + 72);
  v219 = v24;
  v37 = v194;
  sub_23200054C(v196 + v36 * v34, (uint64_t)v194, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
  v38 = v35 + v36 * v31;
  v39 = v195;
  sub_23200054C(v38, (uint64_t)v195, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
  LODWORD(v218) = sub_2320FD0AC(v37, v39);
  sub_232002CEC((uint64_t)v39, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
  v40 = (uint64_t)v37;
  v41 = v219;
  sub_232002CEC(v40, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
  v42 = v31 + 2;
  if (v31 + 2 < v41)
  {
    v217 = v36 * v34;
    v43 = v196;
    v210 = v36;
    v211 = v36 * v42;
    v44 = v199;
    while (1)
    {
      v212 = v42;
      sub_23200054C(v43 + v211, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
      sub_23200054C(v43 + v217, (uint64_t)v44, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
      v45 = *v20;
      v46 = objc_msgSend(*v20, sel_identifier);
      v47 = sub_232200EC4();
      v49 = v48;

      v50 = *v44;
      v51 = objc_msgSend(*v44, sel_identifier);
      v52 = sub_232200EC4();
      v54 = v53;

      if (v47 == v52 && v49 == v54)
        break;
      v56 = sub_232201ADC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v56 & 1) != 0)
        goto LABEL_28;
      v57 = objc_msgSend(v45, sel_identifier);
      v58 = sub_232200EC4();
      v60 = v59;

      v61 = objc_msgSend(v50, sel_identifier);
      v62 = sub_232200EC4();
      v64 = v63;

      v44 = v199;
      if (v58 == v62 && v60 == v64)
      {
        swift_bridgeObjectRelease_n();
        v65 = 0;
      }
      else
      {
        v65 = sub_232201ADC();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v15 = v216;
      v73 = (uint64_t)v201;
      v42 = v212;
      v36 = v210;
LABEL_43:
      sub_232002CEC((uint64_t)v44, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
      sub_232002CEC(v73, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
      if (((v218 ^ v65) & 1) != 0)
      {
        a1 = v209;
        v31 = v200;
        v41 = v219;
        goto LABEL_48;
      }
      v20 = (id *)v73;
      ++v42;
      v43 += v36;
      v41 = v219;
      if (v219 == v42)
      {
        v42 = v219;
        a1 = v209;
        v31 = v200;
        goto LABEL_48;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_28:
    v66 = *((unsigned __int8 *)v201 + 8);
    v44 = v199;
    v67 = *((unsigned __int8 *)v199 + 8);
    v68 = sub_23220021C();
    v70 = v69;
    if (v68 == sub_23220021C() && v70 == v71)
    {
      swift_bridgeObjectRelease_n();
      v36 = v210;
    }
    else
    {
      v72 = sub_232201ADC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v36 = v210;
      if ((v72 & 1) == 0)
      {
        if (v66 == 5)
        {
          if (v67 != 4)
            goto LABEL_41;
          v65 = 0;
        }
        else
        {
          if (v66 != 4 || v67 != 5)
            goto LABEL_41;
          v65 = 1;
        }
        v15 = v216;
        v73 = (uint64_t)v201;
LABEL_42:
        v42 = v212;
        goto LABEL_43;
      }
    }
LABEL_41:
    v73 = (uint64_t)v201;
    v74 = v205;
    sub_2321FE7D0();
    v75 = v206;
    sub_2321FE7D0();
    v65 = MEMORY[0x2348FAE18](v74, v75);
    v76 = *(void (**)(char *, uint64_t))(v207 + 8);
    v77 = v75;
    v78 = v208;
    v76(v77, v208);
    v76(v74, v78);
    v15 = v216;
    goto LABEL_42;
  }
  if ((v218 & 1) == 0)
    goto LABEL_61;
LABEL_48:
  if (v42 < v31)
    goto LABEL_188;
  if (v31 < v42)
  {
    v79 = 0;
    v80 = v36 * (v42 - 1);
    v81 = v42 * v36;
    v82 = v31;
    v83 = v31 * v36;
    do
    {
      if (v82 != v42 + v79 - 1)
      {
        v85 = v42;
        v86 = v196;
        if (!v196)
          goto LABEL_193;
        v87 = v196 + v83;
        v218 = v196 + v80;
        sub_232025468(v196 + v83, v198, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
        if (v83 < v80 || v87 >= v86 + v81)
        {
          v84 = v218;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v84 = v218;
          if (v83 != v80)
            swift_arrayInitWithTakeBackToFront();
        }
        sub_232025468(v198, v84, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
        v42 = v85;
        v31 = v200;
      }
      ++v82;
      --v79;
      v80 -= v36;
      v81 -= v36;
      v83 += v36;
    }
    while (v82 < v42 + v79);
    a1 = v209;
    v88 = v214;
    v15 = v216;
    v41 = v219;
    if (v42 >= v219)
      goto LABEL_102;
  }
  else
  {
LABEL_61:
    v88 = v214;
    if (v42 >= v41)
      goto LABEL_102;
  }
  if (__OFSUB__(v42, v31))
    goto LABEL_186;
  if (v42 - v31 >= v193)
    goto LABEL_102;
  if (__OFADD__(v31, v193))
    goto LABEL_189;
  if (v31 + v193 >= v41)
    v89 = v41;
  else
    v89 = v31 + v193;
  if (v89 >= v31)
  {
    if (v42 == v89)
      goto LABEL_102;
    v90 = *(_QWORD *)(v203 + 72);
    v91 = v90 * (v42 - 1);
    v210 = v90;
    v219 = v42 * v90;
    v196 = v89;
LABEL_75:
    v93 = 0;
    v211 = v91;
    v212 = v42;
    while (1)
    {
      v94 = *a1;
      v218 = v219 + v93;
      sub_23200054C(v219 + v93 + v94, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
      v217 = v91 + v93;
      sub_23200054C(v91 + v93 + v94, (uint64_t)v88, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
      v95 = *v15;
      v96 = objc_msgSend(*v15, sel_identifier);
      v97 = sub_232200EC4();
      v99 = v98;

      v100 = *v88;
      v101 = objc_msgSend(*v88, sel_identifier);
      v102 = sub_232200EC4();
      v104 = v103;

      if (v97 == v102 && v99 == v104)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v106 = sub_232201ADC();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v106 & 1) == 0)
        {
          v107 = objc_msgSend(v95, sel_identifier);
          v108 = sub_232200EC4();
          v110 = v109;

          v111 = objc_msgSend(v100, sel_identifier);
          v112 = sub_232200EC4();
          v114 = v113;

          a1 = v209;
          v15 = v216;
          if (v108 == v112 && v110 == v114)
          {
            swift_bridgeObjectRelease_n();
LABEL_100:
            v88 = v214;
            sub_232002CEC((uint64_t)v214, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
            sub_232002CEC((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
            v91 = v211;
            v92 = v212;
LABEL_74:
            v42 = v92 + 1;
            v91 += v210;
            v219 += v210;
            v31 = v200;
            if (v42 != v196)
              goto LABEL_75;
            v42 = v196;
LABEL_102:
            if (v42 < v31)
              goto LABEL_181;
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v212 = v42;
            if ((isUniquelyReferenced_nonNull_native & 1) != 0)
              v32 = v197;
            else
              v32 = sub_232111724(0, *((_QWORD *)v197 + 2) + 1, 1, v197);
            v133 = *((_QWORD *)v32 + 2);
            v132 = *((_QWORD *)v32 + 3);
            v33 = v133 + 1;
            if (v133 >= v132 >> 1)
              v32 = sub_232111724((char *)(v132 > 1), v133 + 1, 1, v32);
            *((_QWORD *)v32 + 2) = v33;
            v134 = v32 + 32;
            v135 = &v32[16 * v133 + 32];
            v136 = v212;
            *(_QWORD *)v135 = v31;
            *((_QWORD *)v135 + 1) = v136;
            if (v133)
            {
LABEL_108:
              v137 = v33 - 1;
              if (v33 >= 4)
              {
                v142 = &v134[16 * v33];
                v143 = *((_QWORD *)v142 - 8);
                v144 = *((_QWORD *)v142 - 7);
                v148 = __OFSUB__(v144, v143);
                v145 = v144 - v143;
                if (v148)
                  goto LABEL_170;
                v147 = *((_QWORD *)v142 - 6);
                v146 = *((_QWORD *)v142 - 5);
                v148 = __OFSUB__(v146, v147);
                v140 = v146 - v147;
                v141 = v148;
                if (v148)
                  goto LABEL_171;
                v149 = v33 - 2;
                v150 = &v134[16 * v33 - 32];
                v152 = *(_QWORD *)v150;
                v151 = *((_QWORD *)v150 + 1);
                v148 = __OFSUB__(v151, v152);
                v153 = v151 - v152;
                if (v148)
                  goto LABEL_173;
                v148 = __OFADD__(v140, v153);
                v154 = v140 + v153;
                if (v148)
                  goto LABEL_176;
                if (v154 >= v145)
                {
                  v172 = &v134[16 * v137];
                  v174 = *(_QWORD *)v172;
                  v173 = *((_QWORD *)v172 + 1);
                  v148 = __OFSUB__(v173, v174);
                  v175 = v173 - v174;
                  if (v148)
                    goto LABEL_180;
                  v165 = v140 < v175;
                }
                else
                {
LABEL_121:
                  if ((v141 & 1) != 0)
                    goto LABEL_172;
                  v149 = v33 - 2;
                  v155 = &v134[16 * v33 - 32];
                  v157 = *(_QWORD *)v155;
                  v156 = *((_QWORD *)v155 + 1);
                  v158 = __OFSUB__(v156, v157);
                  v159 = v156 - v157;
                  v160 = v158;
                  if (v158)
                    goto LABEL_175;
                  v161 = &v134[16 * v137];
                  v163 = *(_QWORD *)v161;
                  v162 = *((_QWORD *)v161 + 1);
                  v148 = __OFSUB__(v162, v163);
                  v164 = v162 - v163;
                  if (v148)
                    goto LABEL_178;
                  if (__OFADD__(v159, v164))
                    goto LABEL_179;
                  if (v159 + v164 < v140)
                    goto LABEL_133;
                  v165 = v140 < v164;
                }
                if (v165)
                  v137 = v149;
              }
              else
              {
                if (v33 == 3)
                {
                  v139 = *((_QWORD *)v32 + 4);
                  v138 = *((_QWORD *)v32 + 5);
                  v148 = __OFSUB__(v138, v139);
                  v140 = v138 - v139;
                  v141 = v148;
                  goto LABEL_121;
                }
                v166 = *((_QWORD *)v32 + 4);
                v167 = *((_QWORD *)v32 + 5);
                v148 = __OFSUB__(v167, v166);
                v159 = v167 - v166;
                v160 = v148;
LABEL_133:
                if ((v160 & 1) != 0)
                  goto LABEL_174;
                v168 = &v134[16 * v137];
                v170 = *(_QWORD *)v168;
                v169 = *((_QWORD *)v168 + 1);
                v148 = __OFSUB__(v169, v170);
                v171 = v169 - v170;
                if (v148)
                  goto LABEL_177;
                if (v171 < v159)
                  goto LABEL_15;
              }
              v176 = v137 - 1;
              if (v137 - 1 >= v33)
              {
                __break(1u);
LABEL_167:
                __break(1u);
LABEL_168:
                __break(1u);
LABEL_169:
                __break(1u);
LABEL_170:
                __break(1u);
LABEL_171:
                __break(1u);
LABEL_172:
                __break(1u);
LABEL_173:
                __break(1u);
LABEL_174:
                __break(1u);
LABEL_175:
                __break(1u);
LABEL_176:
                __break(1u);
LABEL_177:
                __break(1u);
LABEL_178:
                __break(1u);
LABEL_179:
                __break(1u);
LABEL_180:
                __break(1u);
LABEL_181:
                __break(1u);
LABEL_182:
                __break(1u);
LABEL_183:
                __break(1u);
LABEL_184:
                __break(1u);
LABEL_185:
                __break(1u);
LABEL_186:
                __break(1u);
LABEL_187:
                __break(1u);
LABEL_188:
                __break(1u);
LABEL_189:
                __break(1u);
                break;
              }
              if (!*a1)
                goto LABEL_192;
              v177 = v32;
              v178 = &v134[16 * v176];
              v179 = *(_QWORD *)v178;
              v180 = &v134[16 * v137];
              v181 = *((_QWORD *)v180 + 1);
              v182 = v204;
              sub_23211127C(*a1 + *(_QWORD *)(v203 + 72) * *(_QWORD *)v178, *a1 + *(_QWORD *)(v203 + 72) * *(_QWORD *)v180, *a1 + *(_QWORD *)(v203 + 72) * v181, v202);
              v204 = v182;
              if (v182)
                goto LABEL_164;
              if (v181 < v179)
                goto LABEL_167;
              if (v137 > *((_QWORD *)v177 + 2))
                goto LABEL_168;
              *(_QWORD *)v178 = v179;
              *(_QWORD *)&v134[16 * v176 + 8] = v181;
              v183 = *((_QWORD *)v177 + 2);
              if (v137 >= v183)
                goto LABEL_169;
              v33 = v183 - 1;
              memmove(&v134[16 * v137], v180 + 16, 16 * (v183 - 1 - v137));
              v32 = v177;
              *((_QWORD *)v177 + 2) = v183 - 1;
              v15 = v216;
              if (v183 <= 2)
                goto LABEL_15;
              goto LABEL_108;
            }
            v33 = 1;
LABEL_15:
            v24 = a1[1];
            v31 = v212;
            v20 = v201;
            if (v212 >= v24)
            {
              v30 = v192;
              goto LABEL_153;
            }
            goto LABEL_16;
          }
          v115 = sub_232201ADC();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v88 = v214;
          goto LABEL_96;
        }
      }
      v116 = *((unsigned __int8 *)v216 + 8);
      v117 = *((unsigned __int8 *)v214 + 8);
      v118 = sub_23220021C();
      v120 = v119;
      v121 = sub_23220021C();
      a1 = v209;
      if (v118 == v121 && v120 == v122)
      {
        swift_bridgeObjectRelease_n();
        v15 = v216;
      }
      else
      {
        v123 = sub_232201ADC();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v15 = v216;
        if ((v123 & 1) == 0)
        {
          if (v116 == 5)
          {
            if (v117 == 4)
              goto LABEL_100;
          }
          else if (v116 == 4 && v117 == 5)
          {
            v88 = v214;
            sub_232002CEC((uint64_t)v214, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
            sub_232002CEC((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
            v91 = v211;
            goto LABEL_97;
          }
        }
      }
      v124 = v205;
      sub_2321FE7D0();
      v88 = v214;
      v125 = v206;
      sub_2321FE7D0();
      v115 = MEMORY[0x2348FAE18](v124, v125);
      v126 = *(void (**)(char *, uint64_t))(v207 + 8);
      v127 = v125;
      v128 = v208;
      v126(v127, v208);
      v126(v124, v128);
LABEL_96:
      sub_232002CEC((uint64_t)v88, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
      sub_232002CEC((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
      v91 = v211;
      if ((v115 & 1) == 0)
      {
        v92 = v212;
        goto LABEL_74;
      }
LABEL_97:
      v129 = *a1;
      if (!*a1)
        goto LABEL_191;
      v130 = v129 + v91 + v93;
      sub_232025468(v129 + v219 + v93, v215, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
      swift_arrayInitWithTakeFrontToBack();
      sub_232025468(v215, v130, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
      v93 -= v210;
      ++v31;
      v92 = v212;
      if (v212 == v31)
        goto LABEL_74;
    }
  }
  __break(1u);
LABEL_191:
  __break(1u);
LABEL_192:
  __break(1u);
LABEL_193:
  __break(1u);
LABEL_194:
  __break(1u);
LABEL_195:
  result = sub_23220195C();
  __break(1u);
  return result;
}

uint64_t sub_232110D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  id *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char *v53;
  char *v54;
  void (*v55)(char *, uint64_t);
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  id *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;

  v77 = a4;
  v62 = a1;
  v6 = sub_2321FDCC0();
  v65 = *(_QWORD *)(v6 - 8);
  v66 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v64 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v63 = (char *)&v60 - v9;
  v72 = type metadata accessor for TrendNotificationModel();
  v10 = MEMORY[0x24BDAC7A8](v72);
  v74 = (uint64_t)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (id *)((char *)&v60 - v13);
  result = MEMORY[0x24BDAC7A8](v12);
  v18 = (id *)((char *)&v60 - v17);
  v71 = a3;
  v61 = a2;
  if (a3 != a2)
  {
    v19 = *(_QWORD *)(v16 + 72);
    v20 = v19 * (v71 - 1);
    v68 = v19;
    v21 = v19 * v71;
    v67 = v14;
    v73 = (uint64_t)&v60 - v17;
LABEL_7:
    v22 = 0;
    v23 = v62;
    v69 = v20;
    v70 = v21;
    while (1)
    {
      v24 = *v77;
      v76 = v21 + v22;
      sub_23200054C(v21 + v22 + v24, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
      v75 = v20 + v22;
      sub_23200054C(v20 + v22 + v24, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
      v25 = *v18;
      v26 = objc_msgSend(*v18, sel_identifier);
      v27 = sub_232200EC4();
      v29 = v28;

      v30 = *v14;
      v31 = objc_msgSend(*v14, sel_identifier);
      v32 = sub_232200EC4();
      v34 = v33;

      if (v27 == v32 && v29 == v34)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v36 = sub_232201ADC();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v36 & 1) == 0)
        {
          v37 = objc_msgSend(v25, sel_identifier);
          v38 = sub_232200EC4();
          v40 = v39;

          v41 = objc_msgSend(v30, sel_identifier);
          v42 = sub_232200EC4();
          v44 = v43;

          v14 = v67;
          if (v38 == v42 && v40 == v44)
          {
            swift_bridgeObjectRelease_n();
            v20 = v69;
LABEL_5:
            sub_232002CEC((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
            v18 = (id *)v73;
            result = sub_232002CEC(v73, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
            v21 = v70;
LABEL_6:
            v20 += v68;
            v21 += v68;
            if (++v71 == v61)
              return result;
            goto LABEL_7;
          }
          v45 = sub_232201ADC();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v18 = (id *)v73;
          v20 = v69;
          goto LABEL_28;
        }
      }
      v46 = *(unsigned __int8 *)(v73 + 8);
      v14 = v67;
      v47 = *((unsigned __int8 *)v67 + 8);
      v48 = sub_23220021C();
      v50 = v49;
      if (v48 == sub_23220021C() && v50 == v51)
      {
        swift_bridgeObjectRelease_n();
        v20 = v69;
      }
      else
      {
        v52 = sub_232201ADC();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v20 = v69;
        if ((v52 & 1) == 0)
        {
          if (v46 == 5)
          {
            if (v47 == 4)
              goto LABEL_5;
          }
          else if (v46 == 4 && v47 == 5)
          {
            sub_232002CEC((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
            v18 = (id *)v73;
            result = sub_232002CEC(v73, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
            v21 = v70;
            goto LABEL_29;
          }
        }
      }
      v18 = (id *)v73;
      v53 = v63;
      sub_2321FE7D0();
      v54 = v64;
      sub_2321FE7D0();
      v45 = MEMORY[0x2348FAE18](v53, v54);
      v55 = *(void (**)(char *, uint64_t))(v65 + 8);
      v56 = v54;
      v57 = v66;
      v55(v56, v66);
      v55(v53, v57);
LABEL_28:
      sub_232002CEC((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
      result = sub_232002CEC((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
      v21 = v70;
      if ((v45 & 1) == 0)
        goto LABEL_6;
LABEL_29:
      v58 = *v77;
      if (!*v77)
      {
        __break(1u);
        return result;
      }
      v59 = v58 + v20 + v22;
      sub_232025468(v58 + v21 + v22, v74, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_232025468(v74, v59, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
      v22 -= v68;
      if (v71 == ++v23)
        goto LABEL_6;
    }
  }
  return result;
}

uint64_t sub_23211127C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id *v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  id *v31;
  id *v32;
  char v33;
  uint64_t v34;
  BOOL v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t result;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  id *v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;

  v43 = type metadata accessor for TrendNotificationModel();
  v8 = MEMORY[0x24BDAC7A8](v43);
  v44 = (id *)((char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v8);
  v11 = (id *)((char *)&v40 - v10);
  v13 = *(_QWORD *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1)
    goto LABEL_62;
  v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1)
    goto LABEL_63;
  v15 = (uint64_t)(a2 - a1) / v13;
  v47 = a1;
  v46 = a4;
  v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v25 = a4 + v18;
      v45 = a4 + v18;
      v47 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        v27 = -v13;
        v41 = a4;
        v42 = a1;
        do
        {
          v28 = a3 + v27;
          sub_23200054C(v25 + v27, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
          v29 = a2 + v27;
          v30 = a3;
          v31 = v11;
          v32 = v44;
          sub_23200054C(a2 + v27, (uint64_t)v44, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
          v33 = sub_2320FD0AC(v31, v32);
          v34 = (uint64_t)v32;
          v11 = v31;
          sub_232002CEC(v34, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
          sub_232002CEC((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
          if ((v33 & 1) != 0)
          {
            if (v30 < a2 || v28 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              v37 = v41;
              v36 = v42;
            }
            else
            {
              v35 = v30 == a2;
              v37 = v41;
              v36 = v42;
              if (!v35)
                swift_arrayInitWithTakeBackToFront();
            }
            v47 += v27;
          }
          else
          {
            v38 = v45;
            v45 += v27;
            if (v30 < v38 || v28 >= v38)
            {
              swift_arrayInitWithTakeFrontToBack();
              v29 = a2;
              v37 = v41;
              v36 = v42;
            }
            else
            {
              v35 = v30 == v38;
              v37 = v41;
              v36 = v42;
              if (!v35)
                swift_arrayInitWithTakeBackToFront();
              v29 = a2;
            }
          }
          v25 = v45;
          if (v45 <= v37)
            break;
          a2 = v29;
          a3 = v28;
        }
        while (v29 > v36);
      }
      goto LABEL_60;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v42 = a4 + v17;
    v45 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      v20 = v44;
      do
      {
        sub_23200054C(a2, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
        sub_23200054C(a4, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
        v21 = sub_2320FD0AC(v11, v20);
        sub_232002CEC((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
        sub_232002CEC((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
        v22 = v47;
        if ((v21 & 1) != 0)
        {
          v23 = a2 + v13;
          if (v47 < a2 || v47 >= v23)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v47 == a2)
          {
            v22 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          v24 = v46 + v13;
          if (v47 < v46 || v47 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v47 != v46)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v46 = v24;
          v23 = a2;
        }
        v47 = v22 + v13;
        a4 = v46;
        if (v46 >= v42)
          break;
        a2 = v23;
      }
      while (v23 < a3);
    }
LABEL_60:
    sub_2321118E4(&v47, &v46, (uint64_t *)&v45, (uint64_t (*)(_QWORD))type metadata accessor for TrendNotificationModel);
    return 1;
  }
LABEL_64:
  result = sub_2322019E0();
  __break(1u);
  return result;
}

char *sub_232111724(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_2320057B8(0, &qword_255F9F2B8, (uint64_t (*)(uint64_t))sub_232111A40, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_232111830(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    result = (char *)sub_2322019E0();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

uint64_t sub_2321118D8(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_2321118E4(a1, a2, a3, type metadata accessor for SnidgetMultiValueLevelChartView.ViewModel.Level);
}

uint64_t sub_2321118E4(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  v4 = *a1;
  v5 = *a2;
  v6 = *a3;
  result = a4(0);
  v8 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1)
    goto LABEL_14;
  if (v9 / v8 < 0)
  {
LABEL_15:
    result = sub_2322019E0();
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
    return swift_arrayInitWithTakeFrontToBack();
  if (v4 != v5)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_2321119F0(uint64_t a1)
{
  return sub_232111724(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_232111A04(_QWORD *a1)
{
  return sub_232013C64(0, a1[2], 0, a1);
}

uint64_t sub_232111A18(uint64_t a1)
{
  return sub_232013DFC(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_232111A2C(_QWORD *a1)
{
  return sub_232013F78(0, a1[2], 0, a1);
}

void sub_232111A40()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9F2C0)
  {
    v0 = sub_23220111C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9F2C0);
  }
}

void **sub_232111A9C(void **a1, void **a2, int *a3)
{
  int v3;
  char *v4;
  void **v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_2321FE584();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    v14 = v4;
    if (v13(v10, 1, v11))
    {
      sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = a3[7];
    *(void **)((char *)v7 + a3[6]) = *(void **)((char *)a2 + a3[6]);
    *((_BYTE *)v7 + v16) = *((_BYTE *)a2 + v16);
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_232111BC8(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = sub_2321FE584();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

void **sub_232111C48(void **a1, void **a2, int *a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *a2;
  *a1 = *a2;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2321FE584();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v6;
  if (v12(v9, 1, v10))
  {
    sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v15 = a3[7];
  *(void **)((char *)a1 + a3[6]) = *(void **)((char *)a2 + a3[6]);
  *((_BYTE *)a1 + v15) = *((_BYTE *)a2 + v15);
  swift_bridgeObjectRetain();
  return a1;
}

void **sub_232111D4C(void **a1, void **a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = a3[5];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_2321FE584();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  *(void **)((char *)a1 + a3[6]) = *(void **)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  return a1;
}

_QWORD *sub_232111EAC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2321FE584();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
  return a1;
}

void **sub_232111FA0(void **a1, void **a2, int *a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = *a1;
  *a1 = *a2;

  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2321FE584();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *(void **)((char *)a1 + a3[6]) = *(void **)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  return a1;
}

uint64_t sub_2321120F4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_232112100(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_232112194()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2321121A0(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_23211222C()
{
  unint64_t v0;

  sub_2320057B8(319, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_2321122D4()
{
  return sub_2321122F8(&qword_2541AFBE8, (uint64_t)&unk_232216190);
}

uint64_t sub_2321122F8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for TrendCoalescingNotificationViewModel();
    result = MEMORY[0x2348FF39C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_232112338(uint64_t a1)
{
  sub_2320057B8(a1, &qword_255F9F2C8, (uint64_t (*)(uint64_t))type metadata accessor for TrendNotificationModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

uint64_t sub_232112354(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_2321123B0(uint64_t a1)
{
  sub_2320057B8(a1, &qword_255F9F2D8, (uint64_t (*)(uint64_t))type metadata accessor for TrendCoalescingNotificationViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

void sub_2321123CC(uint64_t a1)
{
  sub_2320057B8(a1, &qword_255F9F2E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

uint64_t sub_2321123E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  void *v8;
  unint64_t v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;

  sub_232115038();
  v22 = v1;
  v24 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2321151E8();
  v23 = v4;
  v25 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (void *)sub_2322011C4();
  v8 = *(void **)(v0 + 8);
  v27 = sub_2321D5890(v8);
  v28 = v9;
  sub_232200F48();

  v10 = (void *)sub_2322011C4();
  v27 = 0;
  v28 = 0xE000000000000000;
  sub_23220189C();
  v11 = sub_2321D5890(v8);
  v13 = v12;
  swift_bridgeObjectRelease();
  v27 = v11;
  v28 = v13;
  sub_232200F48();

  v14 = sub_2322013A4();
  swift_bridgeObjectRelease();
  v15 = sub_2322013BC();
  swift_bridgeObjectRelease();
  v26 = v14;
  v27 = v15;
  v16 = MEMORY[0x24BEE0D00];
  sub_232115100(0, (unint64_t *)&qword_2541B30E8, (uint64_t)&qword_2541B78A0, MEMORY[0x24BEE0D00], (void (*)(uint64_t, uint64_t, uint64_t, uint64_t (*)(void)))sub_232000608);
  sub_232115100(0, (unint64_t *)&qword_2541B30D8, (uint64_t)&qword_2541B7618, (uint64_t)MEMORY[0x24BDCE900], (void (*)(uint64_t, uint64_t, uint64_t, uint64_t (*)(void)))sub_2320057B8);
  sub_232115180();
  sub_232101C60();
  swift_retain();
  swift_retain();
  sub_2322004D4();
  sub_232000608(0, (unint64_t *)&qword_2541B78A0, v16, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
  sub_232000590(&qword_255F9F340, (uint64_t (*)(uint64_t))sub_232115038, MEMORY[0x24BDB9450]);
  v17 = v22;
  sub_2322007A4();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v3, v17);
  sub_232000590(&qword_255F9F348, (uint64_t (*)(uint64_t))sub_2321151E8, MEMORY[0x24BDB96C0]);
  v18 = v23;
  v19 = sub_232200774();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v18);
  return v19;
}

uint64_t sub_232112710@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v27;
  void (*v28)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v35 = a3;
  v36 = a4;
  v34 = a2;
  sub_2320057B8(0, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v31 - v11;
  v13 = sub_23220039C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23220036C();
  v17 = sub_232200390();
  v18 = sub_2322012FC();
  if (os_log_type_enabled(v17, v18))
  {
    v33 = a5;
    v19 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v32 = a1;
    v21 = v20;
    v38 = v20;
    v31 = v13;
    *(_DWORD *)v19 = 136446210;
    v37 = sub_232013174(0xD00000000000002DLL, 0x80000002322078D0, &v38);
    a5 = v33;
    sub_232201710();
    _os_log_impl(&dword_231FFB000, v17, v18, "[%{public}s] Alert notifications are enabled", v19, 0xCu);
    swift_arrayDestroy();
    v22 = v21;
    a1 = v32;
    MEMORY[0x2348FF468](v22, -1, -1);
    MEMORY[0x2348FF468](v19, -1, -1);

    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v31);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  v23 = *(void **)a1;
  v24 = *(_QWORD *)(a1 + 24);
  v25 = sub_2321FDC6C();
  v26 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v27 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v12, v34, v25);
  v28 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56);
  v28(v12, 0, 1, v25);
  sub_2321FDBAC();
  v28(v10, 0, 1, v25);
  v29 = sub_23202A0B0(v23, v24, (uint64_t)v12, (uint64_t)v10, v35, v36);
  sub_232016D88((uint64_t)v10, &qword_2541B7618, v26);
  result = sub_232016D88((uint64_t)v12, &qword_2541B7618, v26);
  *a5 = v29;
  return result;
}

uint64_t sub_2321129E8@<X0>(uint64_t a1@<X1>, unint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, void *a6@<X6>, uint64_t a7@<X7>, uint64_t *a8@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  NSObject *v27;
  os_log_type_t v28;
  _BOOL4 v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void *v37;
  id v38;
  void *v39;
  id v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  id v50;
  void *v51;
  id v52;
  id v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  unint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t result;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87[2];

  v75 = a6;
  v76 = a7;
  v83 = a5;
  v74 = a4;
  v78 = a3;
  v85 = a1;
  v81 = a8;
  sub_23211452C();
  v10 = v9;
  v72 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v71 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23211463C();
  v67 = *(_QWORD *)(v12 - 8);
  v68 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v66 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2321FDCC0();
  MEMORY[0x24BDAC7A8](v14);
  v77 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_2321FE7DC();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v69 = v19;
  v70 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v84 = (char *)&v65 - v20;
  v21 = sub_23220039C();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v82 = (char *)&v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v65 - v25;
  sub_23220036C();
  swift_bridgeObjectRetain_n();
  v27 = sub_232200390();
  v28 = sub_2322012FC();
  v29 = os_log_type_enabled(v27, v28);
  v79 = v17;
  v80 = v16;
  v73 = v10;
  if (v29)
  {
    v30 = swift_slowAlloc();
    v31 = swift_slowAlloc();
    v87[0] = v31;
    *(_DWORD *)v30 = 136446466;
    v86 = sub_232013174(0xD00000000000002DLL, 0x80000002322078D0, v87);
    sub_232201710();
    *(_WORD *)(v30 + 12) = 2080;
    swift_bridgeObjectRetain();
    v86 = sub_232013174(v85, a2, v87);
    sub_232201710();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_231FFB000, v27, v28, "[%{public}s] Generating notification for %s", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v31, -1, -1);
    MEMORY[0x2348FF468](v30, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v32 = *(void (**)(char *, uint64_t))(v22 + 8);
  v32(v26, v21);
  v33 = (uint64_t)v84;
  v34 = v21;
  v35 = v82;
  v37 = v75;
  v36 = v76;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2321FDCB4();
  sub_2321FE788();
  v38 = sub_232113198(v37, v33, v36);
  if (v38)
  {
    v39 = v38;
    sub_23220036C();
    v40 = v39;
    v41 = sub_232200390();
    v42 = sub_2322012FC();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = swift_slowAlloc();
      v44 = swift_slowAlloc();
      v87[0] = v44;
      *(_DWORD *)v43 = 136446466;
      v86 = sub_232013174(0xD00000000000002DLL, 0x80000002322078D0, v87);
      sub_232201710();
      *(_WORD *)(v43 + 12) = 2080;
      v86 = (uint64_t)v40;
      sub_232003E9C(0, &qword_255F9C460);
      v85 = v34;
      v45 = v40;
      v46 = sub_232200F18();
      v86 = sub_232013174(v46, v47, v87);
      sub_232201710();

      v33 = (uint64_t)v84;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v41, v42, "[%{public}s] Scheduling notification: %s", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v44, -1, -1);
      MEMORY[0x2348FF468](v43, -1, -1);

      v48 = v82;
      v49 = v85;
    }
    else
    {

      v48 = v35;
      v49 = v34;
    }
    v32(v48, v49);
    swift_getObjectType();
    v87[0] = sub_2321FE740();
    v58 = v79;
    v57 = v80;
    v59 = v70;
    (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v70, v33, v80);
    v60 = (*(unsigned __int8 *)(v58 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
    v61 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v58 + 32))(v61 + v60, v59, v57);
    sub_2321145C0();
    sub_23202F42C();
    sub_232000590(&qword_255F9F310, (uint64_t (*)(uint64_t))sub_2321145C0, MEMORY[0x24BDB9AF8]);
    v62 = v71;
    sub_2322007A4();
    swift_release();
    swift_release();
    sub_232000590(&qword_255F9F328, (uint64_t (*)(uint64_t))sub_23211452C, MEMORY[0x24BDB96C0]);
    v63 = v73;
    v56 = sub_232200774();

    (*(void (**)(char *, uint64_t))(v72 + 8))(v62, v63);
  }
  else
  {
    sub_232200EC4();
    v50 = objc_allocWithZone(MEMORY[0x24BDD1540]);
    v51 = (void *)sub_232200E94();
    swift_bridgeObjectRelease();
    v52 = objc_msgSend(v50, sel_initWithDomain_code_userInfo_, v51, 118, 0);

    sub_23202F42C();
    v87[0] = (uint64_t)v52;
    sub_232002B9C();
    v53 = v52;
    v54 = v66;
    sub_23220066C();
    sub_232000590(&qword_255F9F320, (uint64_t (*)(uint64_t))sub_23211463C, MEMORY[0x24BDB9DB0]);
    v55 = v68;
    v56 = sub_232200774();

    (*(void (**)(char *, uint64_t))(v67 + 8))(v54, v55);
    v58 = v79;
    v57 = v80;
  }
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 8))(v33, v57);
  *v81 = v56;
  return result;
}

id sub_232113198(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  id v30;
  id v31;
  void *v32;
  void *v33;
  void *v34;
  id v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  char *v49;
  void *v50;
  void *v51;
  id v52;
  char *v53;
  id v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(void);
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  void *v69;
  id v70;
  void *v71;
  id v72;
  _QWORD v74[2];
  char *v75;
  id v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;

  v4 = v3;
  v87 = a1;
  v88 = a3;
  v80 = a2;
  v6 = sub_23220039C();
  v83 = *(_QWORD *)(v6 - 8);
  v84 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v74[1] = (char *)v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v90 = (char *)v74 - v9;
  v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_255F9F2E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v75 = (char *)v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v81 = (uint64_t)v74 - v14;
  v15 = sub_2321FDCC0();
  v78 = *(_QWORD *)(v15 - 8);
  v79 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v77 = (char *)v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_2321FD9C0();
  v85 = *(_QWORD *)(v17 - 8);
  v86 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], v10);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)v74 - v21;
  v23 = *(void **)v4;
  v24 = (void *)sub_2322011C4();
  v25 = *(void **)(v4 + 8);
  v82 = sub_232114754((uint64_t)v24, v25, a1);
  v89 = v26;

  v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDF8800]), sel_init);
  v74[0] = v4;
  v28 = *(void **)(v4 + 32);
  type metadata accessor for AlertLocalization();
  v29 = swift_allocObject();
  v30 = v23;
  v31 = v28;
  sub_2321FDDA4();
  sub_2321FDCFC();
  *(_QWORD *)(v29 + OBJC_IVAR____TtC9Summaries17AlertLocalization____lazy_storage___displayTypeController) = 0;
  *(_QWORD *)(v29 + OBJC_IVAR____TtC9Summaries17AlertLocalization_healthStore) = v30;
  *(_QWORD *)(v29 + OBJC_IVAR____TtC9Summaries17AlertLocalization_unitPreferenceController) = v31;
  *(_BYTE *)(v29 + OBJC_IVAR____TtC9Summaries17AlertLocalization_isUserNotification) = 1;
  v32 = (void *)objc_opt_self();
  v33 = (void *)sub_232200E94();
  sub_23200C748(MEMORY[0x24BEE4AF8]);
  v34 = (void *)sub_232201020();
  swift_bridgeObjectRelease();
  v35 = objc_msgSend(v32, sel_localizedUserNotificationStringForKey_arguments_, v33, v34);

  sub_232200EC4();
  v36 = (void *)sub_232200E94();
  swift_bridgeObjectRelease();
  objc_msgSend(v27, sel_setTitle_, v36);

  v76 = v30;
  v37 = (void *)sub_2322011C4();
  v38 = sub_2321FE584();
  v39 = *(_QWORD *)(v38 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v22, v88, v38);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v22, 0, 1, v38);
  sub_2321FD9B4();
  sub_23204AF00(v25, v37, (uint64_t)v19, v87, (uint64_t)v22);

  (*(void (**)(char *, uint64_t))(v85 + 8))(v19, v86);
  sub_232016D88((uint64_t)v22, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8]);
  v40 = (void *)sub_232200E94();
  swift_bridgeObjectRelease();
  objc_msgSend(v27, sel_setBody_, v40);

  swift_setDeallocating();
  v41 = v29 + OBJC_IVAR____TtC9Summaries17AlertLocalization_calendar;
  v42 = sub_2321FDDD4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v41, v42);
  v43 = v29 + OBJC_IVAR____TtC9Summaries17AlertLocalization_locale;
  v44 = sub_2321FDD08();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v43, v44);

  swift_deallocClassInstance();
  v45 = (void *)sub_232200E94();
  objc_msgSend(v27, sel_setCategoryIdentifier_, v45);

  v46 = v76;
  v47 = objc_msgSend(v76, sel_profileIdentifier);
  v48 = objc_msgSend(v47, sel_identifier);

  v49 = v77;
  sub_2321FDCA8();

  sub_2321FDC84();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v49, v79);
  v50 = (void *)sub_232200E94();
  swift_bridgeObjectRelease();
  objc_msgSend(v27, sel_setThreadIdentifier_, v50);

  sub_2321FEC80();
  v51 = (void *)sub_2321FEC74();
  objc_msgSend(v27, sel_setSound_, v51);

  v52 = objc_msgSend(v46, sel_profileIdentifier);
  v53 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x24BE3F820]), sel_initWithProfileIdentifier_, v52);

  v54 = objc_msgSend(v53, sel_URLForSharingOverview);
  v90 = v53;
  if (v54)
  {
    v55 = v54;
    v56 = (uint64_t)v75;
    sub_2321FDAA4();

    v57 = sub_2321FDABC();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v56, 0, 1, v57);
  }
  else
  {
    v58 = sub_2321FDABC();
    v56 = (uint64_t)v75;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v75, 1, 1, v58);
  }
  v59 = v81;
  sub_2321149C0(v56, v81);
  v60 = MEMORY[0x24BEE3598];
  sub_2320057B8(0, &qword_255F9C0B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE48068], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v61 = sub_2321FE7DC();
  v62 = *(_QWORD *)(v61 - 8);
  v63 = (*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
  v64 = swift_allocObject();
  *(_OWORD *)(v64 + 16) = xmmword_232210D40;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v62 + 16))(v64 + v63, v80, v61);
  sub_2320E36BC(v64);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v65 = (void *)sub_232200DBC();
  swift_bridgeObjectRelease();
  objc_msgSend(v27, sel_setUserInfo_, v65);

  sub_232000608(0, (unint64_t *)&qword_2541B78C8, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))v60);
  v66 = swift_allocObject();
  *(_OWORD *)(v66 + 16) = xmmword_232210D20;
  v67 = (void *)sub_2322011C4();
  sub_23202F71C();
  v68 = sub_2321FF0DC();

  *(_QWORD *)(v66 + 32) = v68;
  v91 = v66;
  sub_232201050();
  sub_232003E9C(0, &qword_255F9F2F8);
  v69 = (void *)sub_232201020();
  swift_bridgeObjectRelease();
  objc_msgSend(v27, sel_setAttachments_, v69);

  v70 = v27;
  v71 = (void *)sub_232200E94();
  swift_bridgeObjectRelease();
  v72 = objc_msgSend((id)objc_opt_self(), sel_requestWithIdentifier_content_trigger_, v71, v70, 0);

  sub_232016D88(v59, &qword_255F9F2E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0]);
  return v72;
}

id sub_232113F8C@<X0>(id *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v9;

  v9 = *a1;
  sub_23202F42C();
  v6 = (char *)a3 + *(int *)(v5 + 48);
  *a3 = v9;
  v7 = sub_2321FE7DC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v6, a2, v7);
  return v9;
}

uint64_t sub_232114000@<X0>(void *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  NSObject *v14;
  os_log_type_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  _BYTE v26[12];
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;

  v32 = a3;
  v33 = a1;
  v6 = sub_2321FE7DC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v26[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_23220039C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = &v26[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23220036C();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  v14 = sub_232200390();
  v15 = sub_2322012FC();
  v16 = v15;
  if (os_log_type_enabled(v14, v15))
  {
    v17 = swift_slowAlloc();
    v30 = v10;
    v18 = v17;
    v29 = swift_slowAlloc();
    v35 = v29;
    *(_DWORD *)v18 = 136446466;
    v27 = v16;
    v34 = sub_232013174(0xD00000000000002DLL, 0x80000002322078D0, &v35);
    v31 = a4;
    sub_232201710();
    *(_WORD *)(v18 + 12) = 2080;
    v28 = v11;
    v19 = sub_2321FE7A0();
    v34 = sub_232013174(v19, v20, &v35);
    sub_232201710();
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
    _os_log_impl(&dword_231FFB000, v14, (os_log_type_t)v27, "[%{public}s] Saving content state: %s", (uint8_t *)v18, 0x16u);
    v21 = v29;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v21, -1, -1);
    MEMORY[0x2348FF468](v18, -1, -1);

    (*(void (**)(_BYTE *, uint64_t))(v28 + 8))(v13, v30);
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);

    (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
  }
  sub_232016AD8(v32, v32[3]);
  v35 = sub_2321FE59C();
  v22 = swift_allocObject();
  v23 = v33;
  *(_QWORD *)(v22 + 16) = v33;
  sub_232048D04();
  sub_232003E9C(0, &qword_255F9C460);
  sub_232000590((unint64_t *)&qword_2541AF300, (uint64_t (*)(uint64_t))sub_232048D04, MEMORY[0x24BDB9AF8]);
  v24 = v23;
  sub_2322007A4();
  swift_release();
  return swift_release();
}

uint64_t sub_232114344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  sub_2320057B8(0, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - v7;
  v9 = sub_2321FDC6C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    sub_232016080(a3, (uint64_t)v8, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_232016D88((uint64_t)v8, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
      a1 = 0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
      sub_2321FDAEC();
      a1 = sub_232201098();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
  }
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2321144B0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v4 = *a1;
  v5 = a1[1];
  sub_232115294();
  result = sub_232114344(v4, v5, (uint64_t)a1 + *(int *)(v6 + 48));
  *a2 = result;
  a2[1] = v8;
  return result;
}

uint64_t sub_2321144FC()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_232114520@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 16);
  *a1 = v2;
  return v2;
}

void sub_23211452C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9F300)
  {
    sub_2321145C0();
    sub_23202F42C();
    sub_232000590(&qword_255F9F310, (uint64_t (*)(uint64_t))sub_2321145C0, MEMORY[0x24BDB9AF8]);
    v0 = sub_232200540();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9F300);
  }
}

void sub_2321145C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9F308)
  {
    sub_232003E9C(255, &qword_255F9C460);
    sub_232002B9C();
    v0 = sub_232200624();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9F308);
  }
}

void sub_23211463C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9F318)
  {
    sub_23202F42C();
    sub_232002B9C();
    v0 = sub_232200678();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9F318);
  }
}

uint64_t sub_2321146A8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_2321FE7DC();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

id sub_232114708@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_2321FE7DC() - 8) + 80);
  return sub_232113F8C(a1, v2 + ((v5 + 16) & ~v5), a2);
}

id sub_232114754(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  id result;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  sub_2320057B8(0, &qword_2541B69C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v20 - v9;
  if (objc_msgSend(a3, sel_hasSampleUUID))
  {
    result = objc_msgSend(a3, sel_sampleUUID);
    if (!result)
    {
      __break(1u);
      return result;
    }
    v12 = result;
    sub_232200EC4();

    sub_2321FDC78();
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = sub_2321FDCC0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v10, 1, 1, v13);
  }
  sub_232016080((uint64_t)v10, (uint64_t)v8, &qword_2541B69C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
  v14 = sub_2321FDCC0();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v14) == 1)
  {
    sub_232016D88((uint64_t)v8, &qword_2541B69C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
  }
  else
  {
    sub_2321FDC84();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v14);
  }
  v20 = 0;
  v21 = 0xE000000000000000;
  sub_23220189C();
  v16 = sub_2321D5890(a2);
  v18 = v17;
  swift_bridgeObjectRelease();
  v20 = v16;
  v21 = v18;
  sub_232200F48();
  sub_232200F48();
  swift_bridgeObjectRelease();
  sub_232200F48();
  v19 = v20;
  sub_232016D88((uint64_t)v10, &qword_2541B69C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
  return (id)v19;
}

uint64_t sub_2321149C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2320057B8(0, &qword_255F9F2E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_232114A1C(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(void);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  id v29;
  unsigned int v30;
  id v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  char v50;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v4 = sub_23220039C();
  v56 = *(_QWORD *)(v4 - 8);
  v57 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v58 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v52 - v8;
  v10 = sub_2321FDC6C();
  v59 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v52 - v14;
  v16 = MEMORY[0x24BE48068];
  sub_2320057B8(0, (unint64_t *)&qword_2541B28E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE48068], v6);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v52 - v18;
  v20 = sub_2321FE7DC();
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = a1;
  v25 = v24;
  v26 = (uint64_t (*)(uint64_t))v16;
  v28 = v27;
  sub_232016080(v23, (uint64_t)v19, (unint64_t *)&qword_2541B28E0, v26);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v19, 1, v25) == 1)
  {
    sub_232016D88((uint64_t)v19, (unint64_t *)&qword_2541B28E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE48068]);
LABEL_26:
    v50 = 1;
    return v50 & 1;
  }
  v53 = v28;
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v22, v19, v25);
  objc_msgSend(a2, sel_endDate);
  v29 = (id)HKDecodeDateForValue();
  sub_2321FDC30();

  v30 = objc_msgSend(a2, sel_hasSampleUUID);
  v54 = v15;
  v55 = v25;
  if (v30)
  {
    v31 = objc_msgSend(a2, sel_sampleUUID);
    v32 = v10;
    if (v31)
    {
      v33 = v31;
      v34 = sub_232200EC4();
      v36 = v35;

    }
    else
    {
      v34 = 0;
      v36 = 0;
    }
  }
  else
  {
    v34 = 0;
    v36 = 0;
    v32 = v10;
  }
  v37 = v59;
  sub_2321FE77C();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v9, 1, v32) != 1)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v13, v9, v32);
    sub_232000590((unint64_t *)&qword_2541AF168, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
    v40 = v54;
    v41 = sub_232200E64();
    v42 = *(void (**)(char *, uint64_t))(v37 + 8);
    v42(v13, v32);
    v39 = v55;
    if ((v41 & 1) != 0)
      goto LABEL_18;
LABEL_25:
    v42(v40, v32);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v22, v39);
    goto LABEL_26;
  }
  sub_232016D88((uint64_t)v9, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  if (!v36)
  {
    v43 = v58;
    sub_23220036C();
    v44 = sub_232200390();
    v45 = sub_2322012F0();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = swift_slowAlloc();
      v47 = swift_slowAlloc();
      v61 = v47;
      *(_DWORD *)v46 = 136446466;
      v59 = v32;
      v60 = sub_232013174(0xD00000000000002DLL, 0x80000002322078D0, &v61);
      sub_232201710();
      *(_WORD *)(v46 + 12) = 2080;
      v60 = sub_232013174(0xD000000000000034, 0x8000000232207940, &v61);
      sub_232201710();
      _os_log_impl(&dword_231FFB000, v44, v45, "%{public}s %s Unexpected notification state: invalid content state", (uint8_t *)v46, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v47, -1, -1);
      MEMORY[0x2348FF468](v46, -1, -1);

      (*(void (**)(char *, uint64_t))(v56 + 8))(v43, v57);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v54, v59);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v56 + 8))(v43, v57);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v54, v32);
    }
    (*(void (**)(char *, uint64_t))(v53 + 8))(v22, v55);
    goto LABEL_23;
  }
  if (sub_2321FE770() == v34 && v36 == v38)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v40 = v54;
    v39 = v55;
    goto LABEL_18;
  }
  v48 = sub_232201ADC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v40 = v54;
  v39 = v55;
  if ((v48 & 1) == 0)
  {
    v42 = *(void (**)(char *, uint64_t))(v59 + 8);
    goto LABEL_25;
  }
LABEL_18:
  if ((sub_2321FE7AC() & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v59 + 8))(v40, v32);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v22, v39);
LABEL_23:
    v50 = 0;
    return v50 & 1;
  }
  v49 = sub_2321FE7B8();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v40, v32);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v22, v39);
  v50 = v49 ^ 1;
  return v50 & 1;
}

void sub_232115038()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9F330)
  {
    sub_232115100(255, (unint64_t *)&qword_2541B30E8, (uint64_t)&qword_2541B78A0, MEMORY[0x24BEE0D00], (void (*)(uint64_t, uint64_t, uint64_t, uint64_t (*)(void)))sub_232000608);
    sub_232115100(255, (unint64_t *)&qword_2541B30D8, (uint64_t)&qword_2541B7618, (uint64_t)MEMORY[0x24BDCE900], (void (*)(uint64_t, uint64_t, uint64_t, uint64_t (*)(void)))sub_2320057B8);
    sub_232115180();
    sub_232101C60();
    v0 = sub_2322004C8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9F330);
  }
}

void sub_232115100(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t (*)(void)))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a5(255, a3, a4, MEMORY[0x24BEE1C68]);
    sub_232002B9C();
    v6 = sub_2322006D8();
    if (!v7)
      atomic_store(v6, a2);
  }
}

unint64_t sub_232115180()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B30E0;
  if (!qword_2541B30E0)
  {
    sub_232115100(255, (unint64_t *)&qword_2541B30E8, (uint64_t)&qword_2541B78A0, MEMORY[0x24BEE0D00], (void (*)(uint64_t, uint64_t, uint64_t, uint64_t (*)(void)))sub_232000608);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB9E58], v1);
    atomic_store(result, (unint64_t *)&qword_2541B30E0);
  }
  return result;
}

void sub_2321151E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9F338)
  {
    sub_232115038();
    sub_232000608(255, (unint64_t *)&qword_2541B78A0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    sub_232000590(&qword_255F9F340, (uint64_t (*)(uint64_t))sub_232115038, MEMORY[0x24BDB9450]);
    v0 = sub_232200540();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9F338);
  }
}

void sub_232115294()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  unint64_t TupleTypeMetadata2;
  uint64_t v2;

  if (!qword_255F9F350)
  {
    v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
    sub_232000608(255, (unint64_t *)&qword_2541B78A0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    sub_2320057B8(255, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], v0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v2)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255F9F350);
  }
}

uint64_t sub_232115338(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v26;

  sub_232118D8C();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2);
  v7 = (uint64_t *)((char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (uint64_t *)((char *)&v26 - v9);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (uint64_t *)((char *)&v26 - v11);
  v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_255F9F358, v14, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v26 - v16;
  sub_232026DE8(a1, (uint64_t)&v26 - v16, &qword_255F9F358, (uint64_t (*)(uint64_t))sub_232118D8C, v13);
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48))(v17, 1, v3);
  v18 = 0;
  if ((_DWORD)a1 != 1)
  {
    sub_232025468((uint64_t)v17, (uint64_t)v12, (uint64_t (*)(_QWORD))sub_232118D8C);
    v19 = *(int *)(v3 + 48);
    v20 = (char *)v10 + v19;
    v21 = (char *)v12 + v19;
    v18 = *v12;
    *v10 = *v12;
    v22 = sub_2322002C4();
    v23 = *(_QWORD *)(v22 - 8);
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
    v24 = (char *)v7 + *(int *)(v3 + 48);
    *v7 = v18;
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v24, v20, v22);
    sub_232002CEC((uint64_t)v7, (uint64_t (*)(_QWORD))sub_232118D8C);
    sub_232002CEC((uint64_t)v12, (uint64_t (*)(_QWORD))sub_232118D8C);
  }
  return v18;
}

uint64_t sub_232115514@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v27 = a2;
  sub_232118D8C();
  v4 = v3;
  v26 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v31 = (char *)&v25 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v25 - v10);
  v12 = *(_QWORD *)(a1 + 16);
  v28 = a1;
  swift_bridgeObjectRetain();
  v32 = v12;
  if (v12)
  {
    v13 = sub_2322002C4();
    v14 = 0;
    v15 = *(_QWORD *)(v13 - 8);
    v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v17 = *(_QWORD *)(v15 + 72);
    v30 = v15;
    v29 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    v18 = v28 + v16 + v17 * (v32 - 1);
    v19 = -v17;
    while (1)
    {
      v20 = &v31[*(int *)(v4 + 48)];
      v29(v20, v18, v13);
      v21 = (char *)v11 + *(int *)(v4 + 48);
      *v11 = v14;
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v21, v20, v13);
      sub_232025468((uint64_t)v11, (uint64_t)v7, (uint64_t (*)(_QWORD))sub_232118D8C);
      if ((sub_232200294() & 1) != 0)
        break;
      ++v14;
      sub_232002CEC((uint64_t)v7, (uint64_t (*)(_QWORD))sub_232118D8C);
      v18 += v19;
      if (v32 == v14)
        goto LABEL_5;
    }
    swift_bridgeObjectRelease();
    v23 = v27;
    sub_232025468((uint64_t)v7, v27, (uint64_t (*)(_QWORD))sub_232118D8C);
    v22 = 0;
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    v22 = 1;
    v23 = v27;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v23, v22, 1, v4);
}

uint64_t sub_232115710@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  uint64_t v13;
  void *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_2322012F0();
    v23 = (void *)sub_232200AB0();
    sub_2322002F4();

  }
  sub_232200960();
  v24 = *(_OWORD *)(v13 + 112);
  *(_OWORD *)(a9 + 96) = *(_OWORD *)(v13 + 96);
  *(_OWORD *)(a9 + 112) = v24;
  *(_OWORD *)(a9 + 128) = *(_OWORD *)(v13 + 128);
  v25 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 48) = v25;
  v26 = *(_OWORD *)(v13 + 80);
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v13 + 64);
  *(_OWORD *)(a9 + 80) = v26;
  v27 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v27;
  *(_OWORD *)(a9 + 200) = v32;
  *(_OWORD *)(a9 + 216) = v33;
  *(_OWORD *)(a9 + 232) = v34;
  *(_OWORD *)(a9 + 248) = v35;
  *(_OWORD *)(a9 + 152) = v29;
  *(_OWORD *)(a9 + 168) = v30;
  *(_QWORD *)(a9 + 144) = *(_QWORD *)(v13 + 144);
  *(_OWORD *)(a9 + 184) = v31;
  return sub_232119E14(v13);
}

__n128 sub_2321158E0@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  uint64_t v13;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  __n128 result;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __n128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_2322012F0();
    v23 = (void *)sub_232200AB0();
    sub_2322002F4();

  }
  sub_232200960();
  sub_23211AB00(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(a9, v13, v24);
  sub_232118F2C(0, (unint64_t *)&qword_255F9F518, sub_23211AB00);
  v26 = (_OWORD *)(a9 + *(int *)(v25 + 36));
  v26[4] = v32;
  v26[5] = v33;
  v26[6] = v34;
  *v26 = v28;
  v26[1] = v29;
  result = v31;
  v26[2] = v30;
  v26[3] = v31;
  return result;
}

uint64_t SnidgetLevelChartView.ViewModel.__allocating_init(dataConfiguration:accentColor:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = swift_allocObject();
  v5 = v4 + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_dataConfiguration;
  v6 = sub_2322002D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a1, v6);
  v7 = v4 + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_accentColor;
  v8 = sub_2321FEA7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, a2, v8);
  return v4;
}

double SnidgetLevelChartView.init(_:)@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 v3;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;
  __int128 v8;

  sub_232118BE8(a1, (uint64_t)v6);
  v3 = v6[1];
  *a2 = v6[0];
  a2[1] = v3;
  result = *(double *)&v7;
  v5 = v8;
  a2[2] = v7;
  a2[3] = v5;
  return result;
}

uint64_t SnidgetLevelChartView.ViewModel.dataConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_232115C14(&OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_dataConfiguration, (uint64_t (*)(_QWORD))MEMORY[0x24BE4BC28], a1);
}

uint64_t SnidgetLevelChartView.ViewModel.dataConfiguration.setter(uint64_t a1)
{
  return sub_232115C94(a1, &OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_dataConfiguration, (uint64_t (*)(_QWORD))MEMORY[0x24BE4BC28]);
}

uint64_t (*SnidgetLevelChartView.ViewModel.dataConfiguration.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t SnidgetLevelChartView.ViewModel.accentColor.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_232115C14(&OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_accentColor, (uint64_t (*)(_QWORD))MEMORY[0x24BE41368], a1);
}

uint64_t sub_232115C14@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = v3 + *a1;
  swift_beginAccess();
  v7 = a2(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a3, v6, v7);
}

uint64_t SnidgetLevelChartView.ViewModel.accentColor.setter(uint64_t a1)
{
  return sub_232115C94(a1, &OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_accentColor, (uint64_t (*)(_QWORD))MEMORY[0x24BE41368]);
}

uint64_t sub_232115C94(uint64_t a1, _QWORD *a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = v3 + *a2;
  swift_beginAccess();
  v7 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v6, a1, v7);
  return swift_endAccess();
}

uint64_t (*SnidgetLevelChartView.ViewModel.accentColor.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

double SnidgetLevelChartView.ViewModel.innerCircleDiameter.getter()
{
  double v0;
  double v1;
  double v2;

  _s9Summaries21SnidgetLevelChartViewV0E5ModelC18fullCircleDiameter12CoreGraphics7CGFloatVvg_0();
  v1 = v0;
  sub_232200228();
  return v1 - (v2 + v2);
}

double SnidgetLevelChartView.ViewModel.minHeightForRectangles.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v14;

  v1 = sub_2322002D0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0 + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_dataConfiguration;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, v1);
  v6 = sub_232200288();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v7 = *(_QWORD *)(v6 + 16);
  swift_bridgeObjectRelease();
  v8 = (double)v7;
  sub_232200258();
  v10 = v9 * v8;
  if (v8 + -1.0 > 0.0)
    v11 = v8 + -1.0;
  else
    v11 = 0.0;
  sub_23220024C();
  return v10 + v12 * v11;
}

double SnidgetLevelChartView.ViewModel.bucketHeight(totalHeight:bucket:)(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  double v16;
  uint64_t v18;

  v3 = sub_2322002D0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322002AC();
  v8 = v7;
  sub_2322002AC();
  v10 = v9;
  sub_23220024C();
  v12 = v11;
  v13 = v1 + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_dataConfiguration;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v13, v3);
  v14 = sub_232200288();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v15 = *(_QWORD *)(v14 + 16);
  swift_bridgeObjectRelease();
  v16 = (double)(uint64_t)(v15 - 1);
  if (v15 < 2)
    v16 = 0.0;
  return (v8 - v10) * (a1 - v12 * v16);
}

uint64_t SnidgetLevelChartView.ViewModel.init(dataConfiguration:accentColor:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = v2 + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_dataConfiguration;
  v6 = sub_2322002D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a1, v6);
  v7 = v2 + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_accentColor;
  v8 = sub_2321FEA7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, a2, v8);
  return v2;
}

CGSize __swiftcall SnidgetLevelChartView.ViewModel.innerCircleOffset(for:)(CGSize a1)
{
  uint64_t v1;
  double height;
  double width;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  unint64_t v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  CGSize result;
  uint64_t v41;

  height = a1.height;
  width = a1.width;
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_255F9F358, (uint64_t (*)(uint64_t))sub_232118D8C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v41 - v6;
  v8 = sub_2322002D0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s9Summaries21SnidgetLevelChartViewV0E5ModelC18fullCircleDiameter12CoreGraphics7CGFloatVvg_0();
  v13 = v12;
  sub_232200228();
  v15 = v14;
  v16 = v1 + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_dataConfiguration;
  swift_beginAccess();
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v17(v11, v16, v8);
  v18 = sub_232200288();
  v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v11, v8);
  v20 = *(_QWORD *)(v18 + 16);
  swift_bridgeObjectRelease();
  v21 = (v13 - (v15 + v15)) * 0.5;
  v22 = 0.0;
  if (v20 >= 2)
    v23 = (double)(uint64_t)(v20 - 1);
  else
    v23 = 0.0;
  sub_23220024C();
  v25 = height - v24 * v23;
  v17(v11, v16, v8);
  sub_232200270();
  v27 = v26;
  v19(v11, v8);
  v28 = v25 * (1.0 - v27) - v21;
  v17(v11, v16, v8);
  v29 = sub_232200288();
  v19(v11, v8);
  sub_232115514(v29, (uint64_t)v7);
  swift_bridgeObjectRelease();
  v30 = sub_232115338((uint64_t)v7);
  v32 = v31;
  sub_232119E3C((uint64_t)v7, &qword_255F9F358, (uint64_t (*)(uint64_t))sub_232118D8C, v4);
  if ((v32 & 1) == 0)
    v22 = (double)v30;
  sub_23220024C();
  v34 = v28 + v33 * v22;
  _s9Summaries21SnidgetLevelChartViewV0E5ModelC18fullCircleDiameter12CoreGraphics7CGFloatVvg_0();
  v36 = v35;
  sub_232200228();
  v38 = ceil((width - (v36 - (v37 + v37))) * 0.5);
  v39 = ceil(v34);
  result.height = v39;
  result.width = v38;
  return result;
}

CGSize __swiftcall SnidgetLevelChartView.ViewModel.outerCircleOffset(for:)(CGSize a1)
{
  CGSize v1;
  double v2;
  CGFloat v3;
  double v4;
  double v5;
  double v6;
  CGSize result;

  v1 = SnidgetLevelChartView.ViewModel.innerCircleOffset(for:)(a1);
  sub_232200228();
  v3 = v1.width - v2;
  sub_232200228();
  v5 = v1.height - v4;
  v6 = v3;
  result.height = v5;
  result.width = v6;
  return result;
}

uint64_t sub_2321162A4()
{
  _BYTE *v0;

  if (*v0)
    return 0x6F43746E65636361;
  else
    return 0xD000000000000011;
}

uint64_t sub_2321162EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23211A678(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_232116310()
{
  sub_232118DF4();
  return sub_232201BD8();
}

uint64_t sub_232116338()
{
  sub_232118DF4();
  return sub_232201BE4();
}

uint64_t SnidgetLevelChartView.ViewModel.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_dataConfiguration;
  v2 = sub_2322002D0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_accentColor;
  v4 = sub_2321FEA7C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t SnidgetLevelChartView.ViewModel.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_dataConfiguration;
  v2 = sub_2322002D0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_accentColor;
  v4 = sub_2321FEA7C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t SnidgetLevelChartView.ViewModel.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v2 = sub_2321FEA7C();
  v24 = *(_QWORD *)(v2 - 8);
  v25 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v23 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2322002D0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232119930(0, &qword_2541B5768, (uint64_t (*)(void))sub_232118DF4, (uint64_t)&type metadata for SnidgetLevelChartView.ViewModel.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520]);
  v9 = v8;
  v28 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v22 - v10;
  sub_232016AD8(a1, a1[3]);
  sub_232118DF4();
  v12 = v26;
  sub_232201BC0();
  v13 = v12 + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_dataConfiguration;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v13, v4);
  v30 = 0;
  sub_232000590(&qword_2541B6BA8, (uint64_t (*)(uint64_t))MEMORY[0x24BE4BC28], MEMORY[0x24BE4BC38]);
  v29 = v9;
  v14 = v27;
  sub_232201A94();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v14)
    return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v11, v29);
  v16 = v12 + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_accentColor;
  swift_beginAccess();
  v18 = v23;
  v17 = v24;
  v19 = v16;
  v20 = v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v23, v19, v25);
  v31 = 1;
  sub_232000590(&qword_2541B2910, (uint64_t (*)(uint64_t))MEMORY[0x24BE41368], MEMORY[0x24BE41378]);
  v21 = v29;
  sub_232201A94();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v18, v20);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v11, v21);
}

uint64_t SnidgetLevelChartView.ViewModel.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  SnidgetLevelChartView.ViewModel.init(from:)(a1);
  return v2;
}

uint64_t SnidgetLevelChartView.ViewModel.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  void (*v17)(void);
  uint64_t v18;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  char v28;
  char v29;

  v3 = sub_2321FEA7C();
  v21 = *(_QWORD *)(v3 - 8);
  v22 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_2322002D0();
  v6 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v23 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232119930(0, &qword_2541B13D0, (uint64_t (*)(void))sub_232118DF4, (uint64_t)&type metadata for SnidgetLevelChartView.ViewModel.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE33E0]);
  v25 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v19 - v10;
  v12 = a1[3];
  v26 = a1;
  sub_232016AD8(a1, v12);
  sub_232118DF4();
  sub_232201BB4();
  if (v1)
  {
    v16 = v27;
    v14 = (uint64_t)v26;
    type metadata accessor for SnidgetLevelChartView.ViewModel();
    swift_deallocPartialClassInstance();
    v18 = v14;
  }
  else
  {
    v20 = v9;
    v13 = v22;
    v29 = 0;
    sub_232000590(&qword_255F9F368, (uint64_t (*)(uint64_t))MEMORY[0x24BE4BC28], MEMORY[0x24BE4BC48]);
    sub_232201A40();
    v16 = v27;
    v17 = *(void (**)(void))(v6 + 32);
    v19[1] = v27 + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_dataConfiguration;
    v17();
    v28 = 1;
    sub_232000590(&qword_2541B11E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE41368], MEMORY[0x24BE41380]);
    sub_232201A40();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v11, v25);
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v16 + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_accentColor, v5, v13);
    v18 = (uint64_t)v26;
  }
  sub_232016AFC(v18);
  return v16;
}

uint64_t sub_232116A14@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for SnidgetLevelChartView.ViewModel();
  result = sub_23220063C();
  *a1 = result;
  return result;
}

uint64_t sub_232116A50@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  type metadata accessor for SnidgetLevelChartView.ViewModel();
  v5 = swift_allocObject();
  result = SnidgetLevelChartView.ViewModel.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_232116AA8(_QWORD *a1)
{
  return SnidgetLevelChartView.ViewModel.encode(to:)(a1);
}

id sub_232116AC8(void *a1)
{
  id v1;
  void *v2;
  char **v3;

  v1 = objc_msgSend(a1, sel_userInterfaceStyle);
  v2 = (void *)objc_opt_self();
  v3 = &selRef_systemGray3Color;
  if (v1 != (id)2)
    v3 = &selRef_systemGray6Color;
  return objc_msgSend(v2, *v3);
}

uint64_t SnidgetLevelChartView.viewModel.getter()
{
  return swift_retain();
}

uint64_t SnidgetLevelChartView.providedViewContext.getter()
{
  uint64_t v0;
  uint64_t result;

  if (*(_QWORD *)(v0 + 48))
    return swift_retain();
  sub_2321FEF20();
  sub_232000590(&qword_2541B1200, (uint64_t (*)(uint64_t))MEMORY[0x24BE42FA0], MEMORY[0x24BE42F98]);
  result = sub_23220099C();
  __break(1u);
  return result;
}

uint64_t sub_232116B88(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  id v14;
  double v15;
  id v16;
  uint64_t result;
  uint64_t v18;

  v4 = sub_2321FEAC4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2321FEA7C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a2 + 32) + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_accentColor;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  if (*(_QWORD *)(a2 + 48))
  {
    swift_retain();
    sub_2321FEEF0();
    swift_release();
    sub_2321FEAB8();
    v13 = (void *)sub_2321FEA58();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v14 = objc_msgSend(a1, sel_userInterfaceStyle);
    v15 = 0.3;
    if (v14 == (id)2)
      v15 = 0.4;
    v16 = objc_msgSend(v13, sel_colorWithAlphaComponent_, v15);

    return (uint64_t)v16;
  }
  else
  {
    sub_2321FEF20();
    sub_232000590(&qword_2541B1200, (uint64_t (*)(uint64_t))MEMORY[0x24BE42FA0], MEMORY[0x24BE42F98]);
    result = sub_23220099C();
    __break(1u);
  }
  return result;
}

uint64_t property wrapper backing initializer of SnidgetLevelChartView.viewModel()
{
  type metadata accessor for SnidgetLevelChartView.ViewModel();
  sub_232000590(&qword_2541B1398, (uint64_t (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel, (uint64_t)&protocol conformance descriptor for SnidgetLevelChartView.ViewModel);
  return sub_232200900();
}

uint64_t SnidgetLevelChartView.viewModel.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t (*SnidgetLevelChartView.viewModel.modify())()
{
  return nullsub_1;
}

uint64_t SnidgetLevelChartView.$viewModel.getter()
{
  type metadata accessor for SnidgetLevelChartView.ViewModel();
  sub_232000590(&qword_2541B1398, (uint64_t (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel, (uint64_t)&protocol conformance descriptor for SnidgetLevelChartView.ViewModel);
  return sub_23220090C();
}

uint64_t SnidgetLevelChartView.previousViewModel.getter()
{
  return swift_retain();
}

uint64_t SnidgetLevelChartView.previousViewModel.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v1 + 40) = a1;
  return result;
}

uint64_t (*SnidgetLevelChartView.previousViewModel.modify())()
{
  return nullsub_1;
}

uint64_t SnidgetLevelChartView.$providedViewContext.getter()
{
  sub_2321FEF20();
  sub_232000590(&qword_2541B1200, (uint64_t (*)(uint64_t))MEMORY[0x24BE42FA0], MEMORY[0x24BE42F98]);
  return sub_232200990();
}

uint64_t SnidgetLevelChartView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  _QWORD v32[35];
  char v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _BYTE v41[23];
  _OWORD v42[7];
  __int128 v43;
  _BYTE v44[135];
  char v45;
  _BYTE v46[272];

  v2 = v1;
  v31 = a1;
  sub_2320057B8(0, &qword_2541B1160, (uint64_t (*)(uint64_t))MEMORY[0x24BDED130], MEMORY[0x24BDF1008]);
  v29 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (uint64_t *)((char *)&v26 - v4);
  v28 = sub_232200918();
  v6 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232118E74(0);
  v26 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232119DB4(0);
  MEMORY[0x24BDAC7A8](v12);
  v30 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_232200A50();
  v27 = v2;
  sub_232117330((_OWORD *)v2, (uint64_t)v42);
  *(_OWORD *)&v44[71] = v42[4];
  *(_OWORD *)&v44[87] = v42[5];
  *(_OWORD *)&v44[103] = v42[6];
  *(_OWORD *)&v44[119] = v43;
  *(_OWORD *)&v44[7] = v42[0];
  *(_OWORD *)&v44[23] = v42[1];
  *(_OWORD *)&v44[39] = v42[2];
  *(_OWORD *)&v44[55] = v42[3];
  v39 = *(_OWORD *)&v44[80];
  v40 = *(_OWORD *)&v44[96];
  *(_OWORD *)v41 = *(_OWORD *)&v44[112];
  v35 = *(_OWORD *)&v44[16];
  v36 = *(_OWORD *)&v44[32];
  v37 = *(_OWORD *)&v44[48];
  v38 = *(_OWORD *)&v44[64];
  v45 = 1;
  v32[33] = v14;
  v32[34] = 0;
  v33 = 1;
  *(_QWORD *)&v41[15] = *((_QWORD *)&v43 + 1);
  v34 = *(_OWORD *)v44;
  v15 = *(double *)(v2 + 16);
  sub_232200C9C();
  v16 = v26;
  sub_232115710(0.0, 1, 0.0, 1, v15, 0, 0.0, 1, (uint64_t)v32, 0.0, 1, 0.0, 1);
  sub_23211A7C0((uint64_t)v42);
  memcpy(v46, v32, 0x108uLL);
  KeyPath = swift_getKeyPath();
  v18 = v28;
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BDED100], v28);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))((char *)v5 + *(int *)(v29 + 28), v8, v18);
  *v5 = KeyPath;
  v19 = (uint64_t (*)(uint64_t))MEMORY[0x24BDED130];
  v20 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008];
  sub_232026DE8((uint64_t)v5, (uint64_t)&v11[*(int *)(v16 + 36)], &qword_2541B1160, (uint64_t (*)(uint64_t))MEMORY[0x24BDED130], MEMORY[0x24BDF1008]);
  memcpy(v11, v46, 0x108uLL);
  sub_232119E14((uint64_t)v46);
  sub_232119E3C((uint64_t)v5, &qword_2541B1160, v19, v20);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v18);
  sub_232119E78((uint64_t)v46);
  v32[0] = 0;
  v32[1] = 0xE000000000000000;
  sub_23220189C();
  if (*(_QWORD *)(v27 + 48))
  {
    swift_retain();
    sub_2321FEF14();
    v22 = v21;
    swift_release();
    if (!v22)
      sub_232200EC4();
    v24 = (uint64_t)v30;
    v23 = v31;
    sub_232200F48();
    swift_bridgeObjectRelease();
    sub_232200F48();
    sub_232119EA0();
    sub_232200B40();
    swift_bridgeObjectRelease();
    sub_232002CEC((uint64_t)v11, (uint64_t (*)(_QWORD))sub_232118E74);
    return sub_232025468(v24, v23, (uint64_t (*)(_QWORD))sub_232119DB4);
  }
  else
  {
    sub_2321FEF20();
    sub_232000590(&qword_2541B1200, (uint64_t (*)(uint64_t))MEMORY[0x24BE42FA0], MEMORY[0x24BE42F98]);
    result = sub_23220099C();
    __break(1u);
  }
  return result;
}

double sub_232117330@<D0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _OWORD *v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double result;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  __int128 v39;

  v4 = sub_2322002D0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (_OWORD *)swift_allocObject();
  v9 = a1[1];
  v8[1] = *a1;
  v8[2] = v9;
  v10 = a1[3];
  v8[3] = a1[2];
  v8[4] = v10;
  v39 = *(_OWORD *)((char *)a1 + 24);
  v11 = *((_QWORD *)&v39 + 1) + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_dataConfiguration;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v11, v4);
  sub_232076508((uint64_t)a1);
  sub_23211A798((uint64_t)&v39);
  sub_232200288();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRelease();
  sub_232200258();
  sub_23220024C();
  sub_23211A7C0((uint64_t)&v39);
  sub_232200C9C();
  sub_232200960();
  v12 = v26;
  v13 = v27;
  v14 = v28;
  v15 = v29;
  v16 = v30;
  v17 = v31;
  v18 = v32;
  v19 = v34;
  v20 = v36;
  v25 = v33;
  v24 = v35;
  v23 = v37;
  *(_QWORD *)a2 = sub_23211A790;
  *(_QWORD *)(a2 + 8) = v8;
  *(_QWORD *)(a2 + 16) = v12;
  *(_BYTE *)(a2 + 24) = v13;
  *(_QWORD *)(a2 + 32) = v14;
  *(_BYTE *)(a2 + 40) = v15;
  *(_QWORD *)(a2 + 48) = v16;
  *(_BYTE *)(a2 + 56) = v17;
  *(_QWORD *)(a2 + 64) = v18;
  *(_BYTE *)(a2 + 72) = v25;
  *(_QWORD *)(a2 + 80) = v19;
  *(_BYTE *)(a2 + 88) = v24;
  *(_QWORD *)(a2 + 96) = v20;
  *(_BYTE *)(a2 + 104) = v23;
  result = *(double *)&v38;
  *(_OWORD *)(a2 + 112) = v38;
  return result;
}

uint64_t sub_2321175F8@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  uint64_t KeyPath;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v33 = a3;
  v5 = sub_2322002D0();
  v31 = *(_QWORD *)(v5 - 8);
  v32 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_232200984();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEDDD8];
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2321191D4();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (uint64_t *)((char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_232119150(0, &qword_255F9F3A0, v16, &qword_2541B1170, v9);
  v18 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v31 - v19;
  *v15 = sub_232200C9C();
  v15[1] = v21;
  sub_23211A7E8();
  v23 = a2;
  sub_2321178BC(a2, a1, (uint64_t)v15 + *(int *)(v22 + 44));
  sub_232200978();
  KeyPath = swift_getKeyPath();
  v25 = (uint64_t *)&v20[*(int *)(v18 + 36)];
  sub_2320057B8(0, &qword_2541B1170, (uint64_t (*)(uint64_t))MEMORY[0x24BDEDDD8], MEMORY[0x24BDF1008]);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))((char *)v25 + *(int *)(v26 + 28), v12, v8);
  *v25 = KeyPath;
  sub_23200054C((uint64_t)v15, (uint64_t)v20, (uint64_t (*)(_QWORD))sub_2321191D4);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v8);
  sub_232002CEC((uint64_t)v15, (uint64_t (*)(_QWORD))sub_2321191D4);
  v27 = *((_QWORD *)v23 + 4) + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_dataConfiguration;
  swift_beginAccess();
  v29 = v31;
  v28 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v7, v27, v32);
  sub_232200CA8();
  sub_232119C14();
  sub_232000590(&qword_255F9F420, (uint64_t (*)(uint64_t))MEMORY[0x24BE4BC28], MEMORY[0x24BE4BC40]);
  sub_232200AEC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v28);
  return sub_23211A8A8((uint64_t)v20);
}

uint64_t sub_2321178BC@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  CGSize v50;
  double v51;
  CGFloat v52;
  double v53;
  double v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(void);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  double v72;
  double v73;
  double v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  CGSize v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t result;
  uint64_t v90;
  uint64_t v91;
  uint64_t KeyPath;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  __int128 v115;

  v112 = a3;
  v113 = a2;
  v4 = sub_2321FEAC4();
  v110 = *(_QWORD *)(v4 - 8);
  v111 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v109 = (char *)&v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_2321FEA7C();
  v107 = *(_QWORD *)(v106 - 8);
  MEMORY[0x24BDAC7A8](v106);
  v108 = (char *)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_232200954();
  MEMORY[0x24BDAC7A8](v7);
  v105 = (char *)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_232200CB4();
  v102 = *(_QWORD *)(v103 - 8);
  MEMORY[0x24BDAC7A8](v103);
  v99 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232119894(0);
  v101 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232119870(0);
  v104 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v100 = (uint64_t)&v90 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = sub_2322008DC();
  v15 = *(_QWORD *)(v94 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x24BDAC7A8](v94);
  v17 = sub_2322002D0();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v90 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2321192EC();
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v90 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2321192D0(0);
  v96 = v24;
  v25 = MEMORY[0x24BDAC7A8](v24);
  v95 = (char *)&v90 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v98 = (char *)&v90 - v27;
  sub_23220024C();
  v29 = v28;
  *(_QWORD *)v23 = sub_232200A50();
  *((_QWORD *)v23 + 1) = v29;
  v23[16] = 0;
  v97 = v23;
  sub_23211A904();
  v93 = &v23[*(int *)(v30 + 44)];
  v115 = *(_OWORD *)((char *)a1 + 24);
  v31 = *((_QWORD *)&v115 + 1);
  v32 = *((_QWORD *)&v115 + 1) + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_dataConfiguration;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v32, v17);
  v33 = sub_232200288();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  v114 = v33;
  KeyPath = swift_getKeyPath();
  v34 = v94;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v113, v94);
  v35 = (*(unsigned __int8 *)(v15 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v36 = (char *)swift_allocObject();
  v37 = a1[1];
  *((_OWORD *)v36 + 1) = *a1;
  *((_OWORD *)v36 + 2) = v37;
  v38 = a1[3];
  *((_OWORD *)v36 + 3) = a1[2];
  *((_OWORD *)v36 + 4) = v38;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v36[v35], (char *)&v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v34);
  sub_232076508((uint64_t)a1);
  sub_232119450();
  sub_232119528(0);
  sub_2321196B0(&qword_255F9F3F0, (uint64_t (*)(uint64_t))sub_232119450, (uint64_t (*)(void))sub_2321195D8, MEMORY[0x24BEE3050]);
  sub_232119638();
  sub_232119714();
  sub_232200C78();
  KeyPath = sub_232200C9C();
  v91 = v39;
  v94 = sub_232200C9C();
  v93 = v40;
  v41 = (uint64_t)v95;
  v42 = (uint64_t *)&v95[*(int *)(v96 + 36)];
  sub_232119794();
  v96 = (uint64_t)v42 + *(int *)(v43 + 36);
  _s9Summaries21SnidgetLevelChartViewV0E5ModelC18fullCircleDiameter12CoreGraphics7CGFloatVvg_0();
  v45 = v44;
  _s9Summaries21SnidgetLevelChartViewV0E5ModelC18fullCircleDiameter12CoreGraphics7CGFloatVvg_0();
  v47 = v46;
  swift_retain();
  sub_2322008D0();
  v50 = SnidgetLevelChartView.ViewModel.innerCircleOffset(for:)((CGSize)__PAIR128__(v49, v48));
  sub_232200228();
  v52 = v50.width - v51;
  sub_232200228();
  v54 = v53;
  sub_23211A7C0((uint64_t)&v115);
  v55 = v102;
  v56 = v99;
  v57 = v103;
  (*(void (**)(char *, _QWORD, uint64_t))(v102 + 104))(v99, *MEMORY[0x24BDF50A0], v103);
  v58 = v105;
  v59 = v57;
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v105, v56, v57);
  v60 = (uint64_t)v58;
  v61 = (uint64_t)v58;
  v62 = MEMORY[0x24BDEDB60];
  sub_23200054C(v60, (uint64_t)&v12[*(int *)(v101 + 36)], (uint64_t (*)(_QWORD))MEMORY[0x24BDEDB60]);
  *(_QWORD *)v12 = v45;
  *((_QWORD *)v12 + 1) = v47;
  *((CGFloat *)v12 + 2) = v52;
  *((double *)v12 + 3) = v50.height - v54;
  sub_232002CEC(v61, (uint64_t (*)(_QWORD))v62);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v59);
  v63 = (uint64_t)v12;
  v64 = v106;
  v65 = v100;
  sub_232025468(v63, v100, (uint64_t (*)(_QWORD))sub_232119894);
  v66 = (uint64_t *)(v65 + *(int *)(v104 + 36));
  v67 = v107;
  v68 = v91;
  *v66 = KeyPath;
  v66[1] = v68;
  sub_23200054C(v65, v96, (uint64_t (*)(_QWORD))sub_232119870);
  sub_232002CEC(v65, (uint64_t (*)(_QWORD))sub_232119870);
  v69 = v93;
  *v42 = v94;
  v42[1] = (uint64_t)v69;
  v70 = v108;
  v71 = (uint64_t)v98;
  sub_232025468((uint64_t)v97, v41, (uint64_t (*)(_QWORD))sub_2321192EC);
  sub_232025468(v41, v71, (uint64_t (*)(_QWORD))sub_2321192D0);
  swift_retain();
  _s9Summaries21SnidgetLevelChartViewV0E5ModelC18fullCircleDiameter12CoreGraphics7CGFloatVvg_0();
  v73 = v72;
  sub_232200228();
  v75 = v74;
  sub_23211A7C0((uint64_t)&v115);
  swift_retain();
  _s9Summaries21SnidgetLevelChartViewV0E5ModelC18fullCircleDiameter12CoreGraphics7CGFloatVvg_0();
  v77 = v76;
  sub_232200228();
  v79 = v78;
  sub_23211A7C0((uint64_t)&v115);
  v80 = v31 + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_accentColor;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v70, v80, v64);
  if (*((_QWORD *)a1 + 6))
  {
    swift_retain();
    sub_2321FEEF0();
    swift_release();
    v81 = v109;
    sub_2321FEAB8();
    v82 = sub_2321FEA70();
    (*(void (**)(char *, uint64_t))(v110 + 8))(v81, v111);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v70, v64);
    swift_retain();
    sub_2322008D0();
    v85 = SnidgetLevelChartView.ViewModel.innerCircleOffset(for:)((CGSize)__PAIR128__(v84, v83));
    sub_23211A7C0((uint64_t)&v115);
    sub_23200054C(v71, v41, (uint64_t (*)(_QWORD))sub_2321192D0);
    v86 = v112;
    sub_23200054C(v41, v112, (uint64_t (*)(_QWORD))sub_2321192D0);
    sub_23211924C();
    v88 = v86 + *(int *)(v87 + 48);
    *(double *)v88 = v73 - (v75 + v75);
    *(double *)(v88 + 8) = v77 - (v79 + v79);
    *(_QWORD *)(v88 + 16) = v82;
    *(_WORD *)(v88 + 24) = 256;
    *(CGSize *)(v88 + 32) = v85;
    swift_retain();
    sub_232002CEC(v71, (uint64_t (*)(_QWORD))sub_2321192D0);
    swift_release();
    return sub_232002CEC(v41, (uint64_t (*)(_QWORD))sub_2321192D0);
  }
  else
  {
    sub_2321FEF20();
    sub_232000590(&qword_2541B1200, (uint64_t (*)(uint64_t))MEMORY[0x24BE42FA0], MEMORY[0x24BE42F98]);
    result = sub_23220099C();
    __break(1u);
  }
  return result;
}

uint64_t sub_232118128@<X0>(_OWORD *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  __int128 v23;
  __int128 v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t (*v31)(void);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  __int128 v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 aBlock;
  __int128 v45;
  __int128 v46;
  __int128 v47;

  v39 = a2;
  v43 = a3;
  v4 = sub_2322002D0();
  v41 = *(_QWORD *)(v4 - 8);
  v42 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_232200930();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (uint64_t *)((char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_232119544();
  v11 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232119528(0);
  v40 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232200234();
  v18 = v17;
  v19 = (char *)v9 + *(int *)(v7 + 20);
  v20 = *MEMORY[0x24BDEEB68];
  v21 = sub_232200A44();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v19, v20, v21);
  *v9 = v18;
  v9[1] = v18;
  if ((sub_232200294() & 1) != 0)
  {
    v22 = (_OWORD *)swift_allocObject();
    v23 = a1[1];
    v22[1] = *a1;
    v22[2] = v23;
    v24 = a1[3];
    v22[3] = a1[2];
    v22[4] = v24;
    v25 = objc_allocWithZone(MEMORY[0x24BEBD4B8]);
    *(_QWORD *)&v46 = sub_23211AAF0;
    *((_QWORD *)&v46 + 1) = v22;
    *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v45 = sub_232118AE8;
    *((_QWORD *)&v45 + 1) = &unk_250103D18;
    v26 = _Block_copy(&aBlock);
    sub_232076508((uint64_t)a1);
    v27 = objc_msgSend(v25, sel_initWithDynamicProvider_, v26, v39);
  }
  else
  {
    v28 = objc_allocWithZone(MEMORY[0x24BEBD4B8]);
    *(_QWORD *)&v46 = sub_232116AC8;
    *((_QWORD *)&v46 + 1) = 0;
    *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v45 = sub_232118AE8;
    *((_QWORD *)&v45 + 1) = &unk_250103CC8;
    v26 = _Block_copy(&aBlock);
    v27 = objc_msgSend(v28, sel_initWithDynamicProvider_, v26, v39);
  }
  v29 = v27;
  _Block_release(v26);
  swift_release();
  v30 = MEMORY[0x2348FDD28](v29);
  v31 = MEMORY[0x24BDED998];
  sub_23200054C((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  *(_QWORD *)&v13[*(int *)(v11 + 52)] = v30;
  *(_WORD *)&v13[*(int *)(v11 + 56)] = 256;
  sub_232002CEC((uint64_t)v9, (uint64_t (*)(_QWORD))v31);
  v47 = *(_OWORD *)((char *)a1 + 24);
  v32 = *((_QWORD *)&v47 + 1);
  swift_retain();
  sub_2322008D0();
  sub_2322002AC();
  sub_2322002AC();
  sub_23220024C();
  v33 = v32 + OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_dataConfiguration;
  swift_beginAccess();
  v35 = v41;
  v34 = v42;
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v6, v33, v42);
  sub_232200288();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v6, v34);
  swift_bridgeObjectRelease();
  sub_23211A7C0((uint64_t)&v47);
  sub_232200C9C();
  sub_2322008C4();
  sub_23200054C((uint64_t)v13, (uint64_t)v16, (uint64_t (*)(_QWORD))sub_232119544);
  v36 = &v16[*(int *)(v40 + 36)];
  v37 = v45;
  *(_OWORD *)v36 = aBlock;
  *((_OWORD *)v36 + 1) = v37;
  *((_OWORD *)v36 + 2) = v46;
  sub_232002CEC((uint64_t)v13, (uint64_t (*)(_QWORD))sub_232119544);
  return sub_232025468((uint64_t)v16, v43, (uint64_t (*)(_QWORD))sub_232119528);
}

uint64_t View.reverseMask<A>(alignment:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];
  _QWORD v15[2];

  sub_232200C9C();
  sub_232200954();
  v9 = sub_232200924();
  v15[0] = a8;
  v15[1] = MEMORY[0x24BDEDB58];
  v10 = MEMORY[0x24BDED308];
  MEMORY[0x2348FF39C](MEMORY[0x24BDED308], v9, v15);
  v11 = sub_23220096C();
  v12 = sub_232200924();
  v14[0] = sub_232119AB8();
  v14[1] = MEMORY[0x2348FF39C](MEMORY[0x24BDEDC10], v11);
  MEMORY[0x2348FF39C](v10, v12, v14);
  return sub_232200B58();
}

uint64_t sub_232118680()
{
  return sub_2322009D8();
}

uint64_t sub_2321186A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_232118B6C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDED130], MEMORY[0x24BDEE080]);
}

double sub_2321186B4@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 v3;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;
  __int128 v8;

  sub_232118BE8(a1, (uint64_t)v6);
  v3 = v6[1];
  *a2 = v6[0];
  a2[1] = v3;
  result = *(double *)&v7;
  v5 = v8;
  a2[2] = v7;
  a2[3] = v5;
  return result;
}

uint64_t sub_2321186F0@<X0>(uint64_t a1@<X8>)
{
  return SnidgetLevelChartView.body.getter(a1);
}

uint64_t sub_232118728@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[2];
  _QWORD v38[2];

  v26 = a7;
  v27 = a4;
  v25 = a3;
  v28 = a1;
  v29 = a2;
  v30 = a9;
  sub_232200954();
  v12 = sub_232200924();
  v38[0] = a8;
  v38[1] = MEMORY[0x24BDEDB58];
  MEMORY[0x2348FF39C](MEMORY[0x24BDED308], v12, v38);
  v13 = sub_23220096C();
  v14 = sub_232200924();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v25 - v19;
  v31 = a5;
  v32 = a6;
  v33 = v26;
  v34 = a8;
  v35 = v25;
  v36 = v27;
  v21 = sub_232119AB8();
  sub_232200B70();
  v22 = MEMORY[0x2348FF39C](MEMORY[0x24BDEDC10], v13);
  v37[0] = v21;
  v37[1] = v22;
  MEMORY[0x2348FF39C](MEMORY[0x24BDED308], v14, v37);
  sub_232062E08((uint64_t)v18, v14, (uint64_t)v20);
  v23 = *(void (**)(char *, uint64_t))(v15 + 8);
  v23(v18, v14);
  sub_23205DD08((uint64_t)v20, v14, v30);
  return ((uint64_t (*)(char *, uint64_t))v23)(v20, v14);
}

uint64_t sub_2321188F4@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X3>, uint64_t a3@<X5>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t);
  void (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];

  v22 = a1;
  v25 = a4;
  v6 = sub_232200CB4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232200954();
  v13 = sub_232200924();
  v23 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v22 - v18;
  v22(v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v10, *MEMORY[0x24BDF50A0], v6);
  sub_232200B88();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v12, a2);
  v26[0] = a3;
  v26[1] = MEMORY[0x24BDEDB58];
  MEMORY[0x2348FF39C](MEMORY[0x24BDED308], v13, v26);
  sub_232062E08((uint64_t)v16, v13, (uint64_t)v19);
  v20 = *(void (**)(char *, uint64_t))(v23 + 8);
  v20(v16, v13);
  sub_23205DD08((uint64_t)v19, v13, v25);
  return ((uint64_t (*)(char *, uint64_t))v20)(v19, v13);
}

id sub_232118AE8(uint64_t a1, void *a2)
{
  uint64_t (*v3)(void);
  id v4;
  void *v5;

  v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v5 = (void *)v3();
  swift_release();

  return v5;
}

uint64_t sub_232118B38()
{
  return sub_2322009E4();
}

uint64_t sub_232118B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_232118B6C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDEDDD8], MEMORY[0x24BDEE108]);
}

uint64_t sub_232118B6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(char *))
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v8 = a5(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v13 - v9;
  (*(void (**)(char *, uint64_t))(v11 + 16))((char *)&v13 - v9, a1);
  return a6(v10);
}

uint64_t sub_232118BE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  KeyPath = swift_getKeyPath();
  sub_2321FEF20();
  sub_232000590(&qword_2541B1200, (uint64_t (*)(uint64_t))MEMORY[0x24BE42FA0], MEMORY[0x24BE42F98]);
  swift_retain();
  v5 = sub_2322009A8();
  v7 = v6;
  sub_2320057B8(0, &qword_2541B1118, (uint64_t (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BE42880]);
  v9 = v8;
  swift_retain();
  sub_2321FEDDC();
  type metadata accessor for SnidgetLevelChartView.ViewModel();
  sub_232000590(&qword_2541B1398, (uint64_t (*)(uint64_t))type metadata accessor for SnidgetLevelChartView.ViewModel, (uint64_t)&protocol conformance descriptor for SnidgetLevelChartView.ViewModel);
  v10 = sub_232200900();
  v12 = v11;
  swift_retain();
  sub_2321FEDE8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
  swift_retain();
  sub_23207655C(KeyPath, 0);
  swift_release();
  sub_2320765BC(KeyPath, 0);
  swift_release();
  swift_release();
  result = swift_release();
  *(_QWORD *)a2 = KeyPath;
  *(_BYTE *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0x4054000000000000;
  *(_QWORD *)(a2 + 24) = v10;
  *(_QWORD *)(a2 + 32) = v12;
  *(_QWORD *)(a2 + 40) = v14;
  *(_QWORD *)(a2 + 48) = v5;
  *(_QWORD *)(a2 + 56) = v7;
  return result;
}

void sub_232118D8C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255F9F360)
  {
    sub_2322002C4();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255F9F360);
  }
}

unint64_t sub_232118DF4()
{
  unint64_t result;

  result = qword_2541B7640;
  if (!qword_2541B7640)
  {
    result = MEMORY[0x2348FF39C](&unk_232216494, &type metadata for SnidgetLevelChartView.ViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2541B7640);
  }
  return result;
}

uint64_t type metadata accessor for SnidgetLevelChartView.ViewModel()
{
  uint64_t result;

  result = qword_2541B7660;
  if (!qword_2541B7660)
    return swift_getSingletonMetadata();
  return result;
}

void sub_232118E74(uint64_t a1)
{
  sub_232119150(a1, &qword_255F9F370, sub_232118E98, &qword_2541B1160, (uint64_t (*)(uint64_t))MEMORY[0x24BDED130]);
}

void sub_232118E98(uint64_t a1)
{
  sub_232118F2C(a1, &qword_255F9F378, (void (*)(uint64_t))sub_232118EB4);
}

void sub_232118EB4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9F380)
  {
    sub_232118F2C(255, &qword_255F9F388, (void (*)(uint64_t))sub_232118F88);
    sub_232119D1C();
    v0 = sub_232200C54();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9F380);
  }
}

void sub_232118F2C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_232200924();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_232118F88()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_255F9F390)
  {
    sub_232119078(255);
    sub_232119150(255, &qword_255F9F3A0, (void (*)(uint64_t))sub_2321191D4, &qword_2541B1170, (uint64_t (*)(uint64_t))MEMORY[0x24BDEDDD8]);
    sub_2322002D0();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4BC28];
    sub_232119C14();
    sub_232000590(&qword_255F9F420, v0, MEMORY[0x24BE4BC40]);
    swift_getOpaqueTypeConformance2();
    v1 = sub_2322008F4();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_255F9F390);
  }
}

void sub_232119078(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!qword_255F9F398)
  {
    sub_232119150(255, &qword_255F9F3A0, (void (*)(uint64_t))sub_2321191D4, &qword_2541B1170, (uint64_t (*)(uint64_t))MEMORY[0x24BDEDDD8]);
    v3 = v2;
    v4 = sub_2322002D0();
    v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4BC28];
    v8[0] = v3;
    v8[1] = v4;
    v8[2] = sub_232119C14();
    v8[3] = sub_232000590(&qword_255F9F420, v5, MEMORY[0x24BE4BC40]);
    v6 = MEMORY[0x2348FF33C](a1, v8, MEMORY[0x24BE453F8], 0);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_255F9F398);
  }
}

void sub_232119150(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, uint64_t (*a5)(uint64_t))
{
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    a3(255);
    sub_2320057B8(255, a4, a5, MEMORY[0x24BDF1008]);
    v8 = sub_232200924();
    if (!v9)
      atomic_store(v8, a2);
  }
}

void sub_2321191D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9F3A8)
  {
    sub_2320057B8(255, &qword_255F9F3B0, (uint64_t (*)(uint64_t))sub_23211924C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_232119BB4();
    v0 = sub_232200C60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9F3A8);
  }
}

void sub_23211924C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255F9F3B8)
  {
    sub_2321192D0(255);
    sub_232118F2C(255, &qword_2541B1280, (void (*)(uint64_t))sub_232119B18);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255F9F3B8);
  }
}

void sub_2321192D0(uint64_t a1)
{
  sub_232056764(a1, &qword_255F9F3C0, (void (*)(uint64_t))sub_2321192EC, (void (*)(uint64_t))sub_232119794);
}

void sub_2321192EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9F3C8)
  {
    sub_23211936C();
    sub_2321196B0(&qword_255F9F400, (uint64_t (*)(uint64_t))sub_23211936C, (uint64_t (*)(void))sub_232119714, MEMORY[0x24BDF4A08]);
    v0 = sub_232200C54();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9F3C8);
  }
}

void sub_23211936C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9F3D0)
  {
    sub_232119450();
    sub_2320577A8(255, &qword_2541B7898, MEMORY[0x24BEE13C8], MEMORY[0x24BEE13F0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BEE08B8]);
    sub_232119528(255);
    sub_2321196B0(&qword_255F9F3F0, (uint64_t (*)(uint64_t))sub_232119450, (uint64_t (*)(void))sub_2321195D8, MEMORY[0x24BEE3050]);
    sub_232119638();
    v0 = sub_232200C90();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9F3D0);
  }
}

void sub_232119450()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9F3D8)
  {
    sub_2320057B8(255, &qword_255F9F3E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE4BC18], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_2321194C8();
    v0 = sub_23220198C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9F3D8);
  }
}

unint64_t sub_2321194C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F9F3E8;
  if (!qword_255F9F3E8)
  {
    sub_2320057B8(255, &qword_255F9F3E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE4BC18], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_255F9F3E8);
  }
  return result;
}

void sub_232119528(uint64_t a1)
{
  sub_232118F2C(a1, &qword_2541B1290, (void (*)(uint64_t))sub_232119544);
}

void sub_232119544()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B1258)
  {
    sub_232200930();
    sub_232000590(&qword_2541B12B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDED998], MEMORY[0x24BDED990]);
    v0 = sub_232200894();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B1258);
  }
}

unint64_t sub_2321195D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F9F3F8;
  if (!qword_255F9F3F8)
  {
    sub_2320057B8(255, &qword_255F9F3E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE4BC18], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BEE12D8], v1);
    atomic_store(result, (unint64_t *)&qword_255F9F3F8);
  }
  return result;
}

unint64_t sub_232119638()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2541B13B0;
  if (!qword_2541B13B0)
  {
    sub_2320577A8(255, &qword_2541B7898, MEMORY[0x24BEE13C8], MEMORY[0x24BEE13F0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BEE08B8]);
    v2 = MEMORY[0x24BEE13E8];
    result = MEMORY[0x2348FF39C](MEMORY[0x24BEE08E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2541B13B0);
  }
  return result;
}

uint64_t sub_2321196B0(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = a2(255);
    v9 = a3();
    result = MEMORY[0x2348FF39C](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_232119714()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_2541B1288;
  if (!qword_2541B1288)
  {
    sub_232119528(255);
    v2 = v1;
    v3[0] = sub_232000590(&qword_2541B1250, (uint64_t (*)(uint64_t))sub_232119544, MEMORY[0x24BDEB358]);
    v3[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_2541B1288);
  }
  return result;
}

void sub_232119794()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B1300)
  {
    sub_232119814();
    sub_23211A32C(&qword_2541B12A8, (uint64_t (*)(uint64_t))sub_232119814, (uint64_t (*)(void))sub_232119AB8, sub_232119AFC);
    v0 = sub_232200A8C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B1300);
  }
}

void sub_232119814()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B12B0)
  {
    sub_232119870(255);
    v0 = sub_232200924();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B12B0);
  }
}

void sub_232119870(uint64_t a1)
{
  sub_2320258FC(a1, &qword_2541B12C8, (uint64_t (*)(uint64_t))sub_232119894, (uint64_t (*)(void))sub_232119A38, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEDBF0]);
}

void sub_232119894(uint64_t a1)
{
  sub_232056764(a1, &qword_2541B12A0, (void (*)(uint64_t))sub_2321198B0, (void (*)(uint64_t))MEMORY[0x24BDEDB60]);
}

void sub_2321198B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B1268)
  {
    sub_232119930(255, &qword_2541B1278, (uint64_t (*)(void))sub_23211998C, MEMORY[0x24BDF4458], MEMORY[0x24BDEB9F0]);
    sub_2321199D0();
    v0 = sub_2322008B8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B1268);
  }
}

void sub_232119930(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    v9 = a3();
    v10 = a5(a1, a4, v9);
    if (!v11)
      atomic_store(v10, a2);
  }
}

unint64_t sub_23211998C()
{
  unint64_t result;

  result = qword_2541B1308;
  if (!qword_2541B1308)
  {
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDF4440], MEMORY[0x24BDF4458]);
    atomic_store(result, (unint64_t *)&qword_2541B1308);
  }
  return result;
}

unint64_t sub_2321199D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B1270;
  if (!qword_2541B1270)
  {
    sub_232119930(255, &qword_2541B1278, (uint64_t (*)(void))sub_23211998C, MEMORY[0x24BDF4458], MEMORY[0x24BDEB9F0]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDEBA00], v1);
    atomic_store(result, (unint64_t *)&qword_2541B1270);
  }
  return result;
}

unint64_t sub_232119A38()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_2541B1298;
  if (!qword_2541B1298)
  {
    sub_232119894(255);
    v2 = v1;
    v3[0] = sub_232000590(&qword_2541B1260, (uint64_t (*)(uint64_t))sub_2321198B0, MEMORY[0x24BDEB630]);
    v3[1] = MEMORY[0x24BDEDB58];
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_2541B1298);
  }
  return result;
}

unint64_t sub_232119AB8()
{
  unint64_t result;

  result = qword_2541B1310;
  if (!qword_2541B1310)
  {
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDF52D0], MEMORY[0x24BDF52F8]);
    atomic_store(result, (unint64_t *)&qword_2541B1310);
  }
  return result;
}

uint64_t sub_232119AFC()
{
  return sub_232000590(&qword_2541B12C0, (uint64_t (*)(uint64_t))sub_232119870, MEMORY[0x24BDEDC10]);
}

void sub_232119B18()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B1248)
  {
    sub_232119930(255, &qword_2541B1278, (uint64_t (*)(void))sub_23211998C, MEMORY[0x24BDF4458], MEMORY[0x24BDEB9F0]);
    sub_2321199D0();
    v0 = sub_232200894();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B1248);
  }
}

unint64_t sub_232119BB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F9F408;
  if (!qword_255F9F408)
  {
    sub_2320057B8(255, &qword_255F9F3B0, (uint64_t (*)(uint64_t))sub_23211924C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDF5428], v1);
    atomic_store(result, (unint64_t *)&qword_255F9F408);
  }
  return result;
}

unint64_t sub_232119C14()
{
  unint64_t result;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_255F9F410;
  if (!qword_255F9F410)
  {
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEDDD8];
    sub_232119150(255, &qword_255F9F3A0, (void (*)(uint64_t))sub_2321191D4, &qword_2541B1170, (uint64_t (*)(uint64_t))MEMORY[0x24BDEDDD8]);
    v3 = v2;
    v4[0] = sub_232000590(&qword_255F9F418, (uint64_t (*)(uint64_t))sub_2321191D4, MEMORY[0x24BDF4750]);
    v4[1] = sub_232119CD4(&qword_2541B1168, &qword_2541B1170, v1);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDED308], v3, v4);
    atomic_store(result, (unint64_t *)&qword_255F9F410);
  }
  return result;
}

uint64_t sub_232119CD4(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_2320057B8(255, a2, a3, MEMORY[0x24BDF1008]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDF1028], v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_232119D1C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255F9F428;
  if (!qword_255F9F428)
  {
    sub_232118F2C(255, &qword_255F9F388, (void (*)(uint64_t))sub_232118F88);
    v2 = v1;
    v3[0] = sub_232000590(&qword_255F9F430, (uint64_t (*)(uint64_t))sub_232118F88, MEMORY[0x24BDEC6F8]);
    v3[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_255F9F428);
  }
  return result;
}

void sub_232119DB4(uint64_t a1)
{
  sub_232056764(a1, &qword_255F9F438, sub_232118E74, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
}

uint64_t sub_232119DD0()
{
  return sub_2322009D8();
}

uint64_t sub_232119DF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_232118B6C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDED130], MEMORY[0x24BDEE080]);
}

uint64_t sub_232119E14(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_232119E3C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v5;

  sub_2320057B8(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_232119E78(uint64_t a1)
{
  swift_release();
  return a1;
}

unint64_t sub_232119EA0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255F9F440;
  if (!qword_255F9F440)
  {
    sub_232118E74(255);
    v2 = v1;
    v3[0] = sub_232119F20();
    v3[1] = sub_232119CD4(&qword_2541B1158, &qword_2541B1160, (uint64_t (*)(uint64_t))MEMORY[0x24BDED130]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_255F9F440);
  }
  return result;
}

unint64_t sub_232119F20()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255F9F448;
  if (!qword_255F9F448)
  {
    sub_232118E98(255);
    v2 = v1;
    v3[0] = sub_232000590(&qword_255F9F450, (uint64_t (*)(uint64_t))sub_232118EB4, MEMORY[0x24BDF4700]);
    v3[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_255F9F448);
  }
  return result;
}

uint64_t sub_232119FA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_232118728(v1[6], v1[7], v1[8], v1[9], v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_232119FB8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for SnidgetLevelChartView(uint64_t a1)
{
  sub_2320765BC(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for SnidgetLevelChartView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_23207655C(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SnidgetLevelChartView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_23207655C(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_2320765BC(v6, v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

__n128 initializeWithTake for SnidgetLevelChartView(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SnidgetLevelChartView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_2320765BC(v6, v7);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = a2[3];
  swift_release();
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
  swift_release();
  *(_QWORD *)(a1 + 48) = a2[6];
  swift_release();
  *(_QWORD *)(a1 + 56) = a2[7];
  return a1;
}

uint64_t getEnumTagSinglePayload for SnidgetLevelChartView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SnidgetLevelChartView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SnidgetLevelChartView()
{
  return &type metadata for SnidgetLevelChartView;
}

uint64_t sub_23211A268()
{
  return type metadata accessor for SnidgetLevelChartView.ViewModel();
}

uint64_t sub_23211A270()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2322002D0();
  if (v1 <= 0x3F)
  {
    result = sub_2321FEA7C();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_23211A2F8()
{
  return sub_23211A32C(&qword_255F9F458, (uint64_t (*)(uint64_t))sub_232119DB4, (uint64_t (*)(void))sub_232119EA0, sub_23211A39C);
}

uint64_t sub_23211A32C(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = a2(255);
    v9[0] = a3();
    v9[1] = a4();
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23211A39C()
{
  return sub_232000590(&qword_2541B1178, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
}

uint64_t sub_23211A3B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];
  _QWORD v11[2];
  _QWORD v12[2];

  v2 = *(_QWORD *)(a1 + 16);
  v1 = *(_QWORD *)(a1 + 24);
  sub_232200954();
  v3 = sub_232200924();
  v12[0] = v1;
  v12[1] = MEMORY[0x24BDEDB58];
  v4 = MEMORY[0x24BDED308];
  MEMORY[0x2348FF39C](MEMORY[0x24BDED308], v3, v12);
  v5 = sub_23220096C();
  v6 = sub_232200924();
  v11[0] = sub_232119AB8();
  v11[1] = MEMORY[0x2348FF39C](MEMORY[0x24BDEDC10], v5);
  MEMORY[0x2348FF39C](v4, v6, v11);
  v7 = sub_232200A8C();
  v8 = sub_232200924();
  v10[0] = v2;
  v10[1] = MEMORY[0x2348FF39C](MEMORY[0x24BDEF828], v7);
  return MEMORY[0x2348FF39C](v4, v8, v10);
}

uint64_t storeEnumTagSinglePayload for SnidgetLevelChartView.ViewModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23211A520 + 4 * byte_232216255[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23211A554 + 4 * byte_232216250[v4]))();
}

uint64_t sub_23211A554(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23211A55C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23211A564);
  return result;
}

uint64_t sub_23211A570(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23211A578);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23211A57C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23211A584(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SnidgetLevelChartView.ViewModel.CodingKeys()
{
  return &type metadata for SnidgetLevelChartView.ViewModel.CodingKeys;
}

unint64_t sub_23211A5A4()
{
  unint64_t result;

  result = qword_255F9F460;
  if (!qword_255F9F460)
  {
    result = MEMORY[0x2348FF39C](&unk_23221646C, &type metadata for SnidgetLevelChartView.ViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255F9F460);
  }
  return result;
}

unint64_t sub_23211A5EC()
{
  unint64_t result;

  result = qword_2541B7650;
  if (!qword_2541B7650)
  {
    result = MEMORY[0x2348FF39C](&unk_2322163DC, &type metadata for SnidgetLevelChartView.ViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2541B7650);
  }
  return result;
}

unint64_t sub_23211A634()
{
  unint64_t result;

  result = qword_2541B7648;
  if (!qword_2541B7648)
  {
    result = MEMORY[0x2348FF39C](&unk_232216404, &type metadata for SnidgetLevelChartView.ViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2541B7648);
  }
  return result;
}

uint64_t sub_23211A678(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x80000002322079F0 || (sub_232201ADC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F43746E65636361 && a2 == 0xEB00000000726F6CLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_232201ADC();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23211A77C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2321188F4(*(void (**)(uint64_t))(v1 + 48), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 40), a1);
}

uint64_t sub_23211A790@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2321175F8(a1, (_OWORD *)(v2 + 16), a2);
}

uint64_t sub_23211A798(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_23211A7C0(uint64_t a1)
{
  swift_release();
  return a1;
}

void sub_23211A7E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9F468)
  {
    sub_2320057B8(255, &qword_255F9F3B0, (uint64_t (*)(uint64_t))sub_23211924C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    v0 = sub_2322008E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9F468);
  }
}

uint64_t sub_23211A864()
{
  return sub_2322009E4();
}

uint64_t sub_23211A884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_232118B6C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDEDDD8], MEMORY[0x24BDEE108]);
}

uint64_t sub_23211A8A8(uint64_t a1)
{
  uint64_t v2;

  sub_232119150(0, &qword_255F9F3A0, (void (*)(uint64_t))sub_2321191D4, &qword_2541B1170, (uint64_t (*)(uint64_t))MEMORY[0x24BDEDDD8]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_23211A904()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9F470)
  {
    sub_23211936C();
    v0 = sub_2322008E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9F470);
  }
}

uint64_t sub_23211A968@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = sub_2322002AC();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_23211A990()
{
  return sub_2322002B8();
}

uint64_t sub_23211A9B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_2322008DC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  sub_2320765BC(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23211AA44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_2322008DC() - 8) + 80);
  return sub_232118128((_OWORD *)(v1 + 16), v1 + ((v3 + 80) & ~v3), a1);
}

uint64_t sub_23211AA94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23211AAA4()
{
  return swift_release();
}

uint64_t sub_23211AAB0()
{
  uint64_t v0;

  sub_2320765BC(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23211AAF0(void *a1)
{
  uint64_t v1;

  return sub_232116B88(a1, v1 + 16);
}

void sub_23211AB00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v6[2];

  if (!qword_255F9F478)
  {
    sub_23211ABB8(255);
    v3 = v2;
    sub_23211AC44(255);
    sub_232000590(&qword_255F9F510, (uint64_t (*)(uint64_t))sub_23211AC44, MEMORY[0x24BDB8148]);
    v6[0] = v3;
    v6[1] = swift_getOpaqueTypeConformance2();
    v4 = MEMORY[0x2348FF33C](a1, v6, MEMORY[0x24BDB8390], 0);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_255F9F478);
  }
}

void sub_23211ABB8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  if (!qword_255F9F480)
  {
    sub_23211AC44(255);
    v5[0] = v2;
    v5[1] = sub_232000590(&qword_255F9F510, (uint64_t (*)(uint64_t))sub_23211AC44, MEMORY[0x24BDB8148]);
    v3 = MEMORY[0x2348FF33C](a1, v5, MEMORY[0x24BDB8370], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_255F9F480);
  }
}

void sub_23211AC44(uint64_t a1)
{
  sub_2320258FC(a1, &qword_255F9F488, (uint64_t (*)(uint64_t))sub_23211AC68, (uint64_t (*)(void))sub_23211B22C, MEMORY[0x24BDB8128]);
}

void sub_23211AC68()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9F490)
  {
    sub_23211AED4(255, &qword_255F9F498, sub_23211ACF8);
    sub_23211AED4(255, &qword_255F9F4C8, (void (*)(uint64_t))sub_23211AF88);
    v0 = sub_232200438();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9F490);
  }
}

void sub_23211ACF8(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!qword_255F9F4A0)
  {
    v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDB7D88];
    v3 = MEMORY[0x24BDB7D80];
    sub_23211B0FC(255, &qword_255F9F4A8, &qword_255F9F4B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDB7D88], MEMORY[0x24BDB7D80]);
    v5 = v4;
    sub_23211B1BC(255, &qword_255F9F4B0, v2, v3);
    sub_232200480();
    v8[2] = swift_getOpaqueTypeConformance2();
    v8[3] = MEMORY[0x24BDF3E18];
    v8[0] = v5;
    v8[1] = swift_getOpaqueTypeConformance2();
    v6 = MEMORY[0x2348FF33C](a1, v8, MEMORY[0x24BDB7C08], 0);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_255F9F4A0);
  }
}

unint64_t sub_23211AE08()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  result = qword_255F9F4B8;
  if (!qword_255F9F4B8)
  {
    sub_2320577A8(255, (unint64_t *)&qword_255F9F2C0, MEMORY[0x24BEE1768], MEMORY[0x24BEE1780], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BEE1B68]);
    v2 = v1;
    v3 = sub_23211AE90();
    v4[0] = MEMORY[0x24BEE17A8];
    v4[1] = v3;
    result = MEMORY[0x2348FF39C](MEMORY[0x24BEE1BD0], v2, v4);
    atomic_store(result, (unint64_t *)&qword_255F9F4B8);
  }
  return result;
}

unint64_t sub_23211AE90()
{
  unint64_t result;

  result = qword_255F9F4C0;
  if (!qword_255F9F4C0)
  {
    result = MEMORY[0x2348FF39C](MEMORY[0x24BEE1790], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_255F9F4C0);
  }
  return result;
}

void sub_23211AED4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_2320577A8(255, (unint64_t *)&qword_255F9F2C0, MEMORY[0x24BEE1768], MEMORY[0x24BEE1780], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BEE1B68]);
    a3(255);
    sub_23211AE08();
    v5 = sub_232200C90();
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_23211AF88()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9F4D0)
  {
    sub_23211AFEC(255);
    v0 = sub_232200438();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9F4D0);
  }
}

void sub_23211AFEC(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!qword_255F9F4D8)
  {
    v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDB8328];
    v3 = MEMORY[0x24BDB8320];
    sub_23211B0FC(255, &qword_255F9F4E0, &qword_255F9F4E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDB8328], MEMORY[0x24BDB8320]);
    v5 = v4;
    sub_23211B1BC(255, &qword_255F9F4E8, v2, v3);
    sub_2322004B0();
    v8[2] = swift_getOpaqueTypeConformance2();
    v8[3] = MEMORY[0x24BDF3E18];
    v8[0] = v5;
    v8[1] = swift_getOpaqueTypeConformance2();
    v6 = MEMORY[0x2348FF33C](a1, v8, MEMORY[0x24BDB7BF8], 0);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_255F9F4D8);
  }
}

void sub_23211B0FC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t OpaqueTypeConformance2;
  unint64_t v11;
  uint64_t v12;
  _QWORD v13[4];

  if (!*a2)
  {
    sub_23211B1BC(255, a3, a4, a5);
    v9 = v8;
    a4(255);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v13[0] = v9;
    v13[1] = MEMORY[0x24BDF3E48];
    v13[2] = OpaqueTypeConformance2;
    v13[3] = MEMORY[0x24BDF3E18];
    v11 = MEMORY[0x2348FF33C](a1, v13, MEMORY[0x24BDB7C28], 0);
    if (!v12)
      atomic_store(v11, a2);
  }
}

void sub_23211B1BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  _QWORD v9[2];

  if (!*a2)
  {
    v9[0] = a3(255);
    v9[1] = a4;
    v7 = MEMORY[0x2348FF33C](a1, v9, MEMORY[0x24BDB7D58], 0);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_23211B22C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD v4[2];

  result = qword_255F9F4F0;
  if (!qword_255F9F4F0)
  {
    sub_23211AC68();
    v2 = v1;
    v4[0] = sub_23211B29C();
    v4[1] = sub_23211B3CC();
    v3 = v4;
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB7B80], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_255F9F4F0);
  }
  return result;
}

unint64_t sub_23211B29C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[5];

  result = qword_255F9F4F8;
  if (!qword_255F9F4F8)
  {
    sub_23211AED4(255, &qword_255F9F498, sub_23211ACF8);
    v2 = v1;
    v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BDB7D88];
    v4 = MEMORY[0x24BDB7D80];
    sub_23211B0FC(255, &qword_255F9F4A8, &qword_255F9F4B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDB7D88], MEMORY[0x24BDB7D80]);
    v6 = v5;
    sub_23211B1BC(255, &qword_255F9F4B0, v3, v4);
    sub_232200480();
    v7[3] = swift_getOpaqueTypeConformance2();
    v7[4] = MEMORY[0x24BDF3E18];
    v7[1] = v6;
    v7[2] = swift_getOpaqueTypeConformance2();
    v7[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB8490], v2, v7);
    atomic_store(result, (unint64_t *)&qword_255F9F4F8);
  }
  return result;
}

unint64_t sub_23211B3CC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_255F9F500;
  if (!qword_255F9F500)
  {
    sub_23211AED4(255, &qword_255F9F4C8, (void (*)(uint64_t))sub_23211AF88);
    v2 = v1;
    v3 = sub_23211B43C();
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB8490], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_255F9F500);
  }
  return result;
}

unint64_t sub_23211B43C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  _QWORD *v5;
  _QWORD v6[4];

  result = qword_255F9F508;
  if (!qword_255F9F508)
  {
    sub_23211AF88();
    v2 = v1;
    v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BDB8328];
    v4 = MEMORY[0x24BDB8320];
    sub_23211B0FC(255, &qword_255F9F4E0, &qword_255F9F4E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDB8328], MEMORY[0x24BDB8320]);
    sub_23211B1BC(255, &qword_255F9F4E8, v3, v4);
    sub_2322004B0();
    v6[2] = swift_getOpaqueTypeConformance2();
    v6[3] = MEMORY[0x24BDF3E18];
    swift_getOpaqueTypeConformance2();
    v6[0] = swift_getOpaqueTypeConformance2();
    v6[1] = v6[0];
    v5 = v6;
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB7B80], v2, &v5);
    atomic_store(result, (unint64_t *)&qword_255F9F508);
  }
  return result;
}

uint64_t *sub_23211B56C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_2321FFACC();
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[6];
    v12 = (char *)v4 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_2321FE584();
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      sub_23202CDF4(0);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v18 = a3[7];
    v19 = (char *)v4 + v18;
    v20 = (char *)a2 + v18;
    sub_232071E50();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    v22 = a3[8];
    v23 = (char *)v4 + v22;
    v24 = (char *)a2 + v22;
    sub_232071EE4();
    v26 = v25;
    v27 = *(_QWORD *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v24, 1, v25))
    {
      sub_23211B738(0);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v23, v24, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v23, 0, 1, v26);
    }
  }
  return v4;
}

void sub_23211B738(uint64_t a1)
{
  sub_2320057B8(a1, &qword_2541B2518, (uint64_t (*)(uint64_t))sub_232071EE4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

uint64_t sub_23211B754(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  v4 = a1 + a2[5];
  v5 = sub_2321FFACC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[6];
  v7 = sub_2321FE584();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v9 = a1 + a2[7];
  sub_232071E50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_232071EE4();
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v11, 1, v12);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v11, v13);
  return result;
}

_BYTE *sub_23211B85C(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_2321FFACC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = sub_2321FE584();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    sub_23202CDF4(0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v16 = a3[7];
  v17 = &a1[v16];
  v18 = &a2[v16];
  sub_232071E50();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  v20 = a3[8];
  v21 = &a1[v20];
  v22 = &a2[v20];
  sub_232071EE4();
  v24 = v23;
  v25 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v25 + 48))(v22, 1, v23))
  {
    sub_23211B738(0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v25 + 16))(v21, v22, v24);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v21, 0, 1, v24);
  }
  return a1;
}

_BYTE *sub_23211B9FC(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_BYTE *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(_BYTE *, uint64_t, uint64_t);
  int v30;
  uint64_t v31;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_2321FFACC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = sub_2321FE584();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    sub_23202CDF4(0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v14 + 24))(v11, v12, v13);
LABEL_7:
  v19 = a3[7];
  v20 = &a1[v19];
  v21 = &a2[v19];
  sub_232071E50();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[8];
  v24 = &a1[v23];
  v25 = &a2[v23];
  sub_232071EE4();
  v27 = v26;
  v28 = *(_QWORD *)(v26 - 8);
  v29 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v28 + 48);
  LODWORD(v21) = v29(v24, 1, v26);
  v30 = v29(v25, 1, v27);
  if (!(_DWORD)v21)
  {
    if (!v30)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v28 + 24))(v24, v25, v27);
      return a1;
    }
    (*(void (**)(_BYTE *, uint64_t))(v28 + 8))(v24, v27);
    goto LABEL_12;
  }
  if (v30)
  {
LABEL_12:
    sub_23211B738(0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    return a1;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v28 + 16))(v24, v25, v27);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v24, 0, 1, v27);
  return a1;
}

_BYTE *sub_23211BC2C(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_2321FFACC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = sub_2321FE584();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    sub_23202CDF4(0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v16 = a3[7];
  v17 = &a1[v16];
  v18 = &a2[v16];
  sub_232071E50();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  v20 = a3[8];
  v21 = &a1[v20];
  v22 = &a2[v20];
  sub_232071EE4();
  v24 = v23;
  v25 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v25 + 48))(v22, 1, v23))
  {
    sub_23211B738(0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v25 + 32))(v21, v22, v24);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v21, 0, 1, v24);
  }
  return a1;
}

_BYTE *sub_23211BDCC(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_BYTE *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(_BYTE *, uint64_t, uint64_t);
  int v30;
  uint64_t v31;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_2321FFACC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = sub_2321FE584();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    sub_23202CDF4(0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v14 + 40))(v11, v12, v13);
LABEL_7:
  v19 = a3[7];
  v20 = &a1[v19];
  v21 = &a2[v19];
  sub_232071E50();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[8];
  v24 = &a1[v23];
  v25 = &a2[v23];
  sub_232071EE4();
  v27 = v26;
  v28 = *(_QWORD *)(v26 - 8);
  v29 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v28 + 48);
  LODWORD(v21) = v29(v24, 1, v26);
  v30 = v29(v25, 1, v27);
  if (!(_DWORD)v21)
  {
    if (!v30)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v28 + 40))(v24, v25, v27);
      return a1;
    }
    (*(void (**)(_BYTE *, uint64_t))(v28 + 8))(v24, v27);
    goto LABEL_12;
  }
  if (v30)
  {
LABEL_12:
    sub_23211B738(0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    return a1;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v28 + 32))(v24, v25, v27);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v24, 0, 1, v27);
  return a1;
}

uint64_t sub_23211BFFC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23211C008(unsigned __int8 *a1, uint64_t a2, int *a3)
{
  unsigned int v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    if (v4 >= 2)
      return v4 - 1;
    else
      return 0;
  }
  else
  {
    v8 = sub_2321FFACC();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      sub_23202CDF4(0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[6];
      }
      else
      {
        sub_232071E50();
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
        {
          v10 = v13;
          v11 = a3[7];
        }
        else
        {
          sub_23211B738(0);
          v10 = v14;
          v9 = *(_QWORD *)(v14 - 8);
          v11 = a3[8];
        }
      }
    }
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_23211C0E8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_23211C0F4(_BYTE *result, uint64_t a2, int a3, int *a4)
{
  _BYTE *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    v8 = sub_2321FFACC();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      sub_23202CDF4(0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[6];
      }
      else
      {
        sub_232071E50();
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = v13;
          v11 = a4[7];
        }
        else
        {
          sub_23211B738(0);
          v10 = v14;
          v9 = *(_QWORD *)(v14 - 8);
          v11 = a4[8];
        }
      }
    }
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t _s14descr250103FA9O8WorkPlanVMa()
{
  uint64_t result;

  result = qword_2541B2540;
  if (!qword_2541B2540)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23211C210()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_2321FFACC();
  if (v0 <= 0x3F)
  {
    sub_23202CDF4(319);
    if (v1 <= 0x3F)
    {
      sub_232071E50();
      if (v2 <= 0x3F)
      {
        sub_23211B738(319);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_23211C2D8()
{
  sub_232201B78();
  sub_232200F3C();
  swift_bridgeObjectRelease();
  return sub_232201B9C();
}

uint64_t sub_23211C368()
{
  sub_232200F3C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23211C3D4()
{
  sub_232201B78();
  sub_232200F3C();
  swift_bridgeObjectRelease();
  return sub_232201B9C();
}

uint64_t sub_23211C460@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_2322019F8();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_23211C4BC(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 0xD00000000000001ALL;
  if (*v1)
    v2 = 0x6D65744964656566;
  v3 = 0x80000002322027B0;
  if (*v1)
    v3 = 0xED0000796C6E4F73;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_23211C50C(char *a1, char *a2)
{
  return sub_2320EF278(*a1, *a2);
}

uint64_t sub_23211C518()
{
  sub_23211E564();
  return sub_232201008();
}

uint64_t sub_23211C574()
{
  sub_23211E564();
  return sub_232200FFC();
}

id sub_23211C5C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, _QWORD, uint64_t);
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void *v35;
  uint64_t (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  id v61;

  v1 = v0;
  v2 = sub_2321FFA18();
  v60 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23211B738(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2321FFC04();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v46 - v13;
  v15 = _s14descr250103FA9O8WorkPlanVMa();
  v16 = sub_2321FFAB4();
  result = objc_msgSend((id)objc_opt_self(), sel_dataTypeWithCode_, v16);
  if (result)
  {
    v61 = result;
    v58 = v2;
    v59 = v4;
    sub_2321FFBE0();
    sub_23200054C(v1 + *(int *)(v15 + 32), (uint64_t)v7, (uint64_t (*)(_QWORD))sub_23211B738);
    sub_232071EE4();
    v19 = v18;
    v20 = *(_QWORD *)(v18 - 8);
    v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v7, 1, v18);
    v56 = v9;
    v57 = v14;
    v55 = v8;
    if (v21 == 1)
    {
      sub_232002CEC((uint64_t)v7, (uint64_t (*)(_QWORD))sub_23211B738);
      v22 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598];
      sub_2320057B8(0, &qword_2541B7188, (uint64_t (*)(uint64_t))MEMORY[0x24BE46FD8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v23 = *(_QWORD *)(sub_2321FFA30() - 8);
      v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
      v51 = *(_QWORD *)(v23 + 72);
      *(_QWORD *)&v52 = 2 * v51;
      v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_232211930;
      v54 = v25;
      v49 = v25 + v24;
      sub_2320057B8(0, &qword_2541B7198, (uint64_t (*)(uint64_t))MEMORY[0x24BE471E8], v22);
      v26 = *(unsigned __int8 *)(v9 + 80);
      v47 = (v26 + 32) & ~v26;
      v48 = v26 | 7;
      v27 = swift_allocObject();
      v53 = xmmword_232210D40;
      *(_OWORD *)(v27 + 16) = xmmword_232210D40;
      sub_232201140();
      sub_2321FFBD4();
      swift_bridgeObjectRelease();
      sub_2321FFBF8();
      v50 = *(void (**)(char *, uint64_t))(v9 + 8);
      v50(v12, v8);
      v28 = v59;
      v29 = *(void (**)(char *, _QWORD, uint64_t))(v60 + 104);
      v30 = v58;
      v29(v59, *MEMORY[0x24BE46FB8], v58);
      v31 = v49;
      sub_2321FFA24();
      v60 = v31 + v51;
      v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = v53;
      v33 = v14;
      v34 = v55;
      (*(void (**)(uint64_t, char *, uint64_t))(v56 + 16))(v32 + v47, v33, v55);
      v29(v28, *MEMORY[0x24BE46FB0], v30);
      sub_2321FFA24();
      *(_OWORD *)(swift_allocObject() + 16) = v53;
      sub_2321FFBEC();
      v29(v28, *MEMORY[0x24BE46FA8], v30);
      sub_2321FFA24();

      v50(v57, v34);
    }
    else
    {
      v35 = (void *)sub_232200D2C();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v19);

      v36 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598];
      sub_2320057B8(0, &qword_2541B7188, (uint64_t (*)(uint64_t))MEMORY[0x24BE46FD8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      *(_QWORD *)&v53 = *(_QWORD *)(*(_QWORD *)(sub_2321FFA30() - 8) + 72);
      v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = xmmword_232210D30;
      v54 = v37;
      sub_2320057B8(0, &qword_2541B7198, (uint64_t (*)(uint64_t))MEMORY[0x24BE471E8], v36);
      v38 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      v39 = swift_allocObject();
      v52 = xmmword_232210D40;
      *(_OWORD *)(v39 + 16) = xmmword_232210D40;
      (*(void (**)(unint64_t, char *, uint64_t))(v9 + 16))(v39 + v38, v14, v8);
      v40 = *MEMORY[0x24BE46FA8];
      v41 = v59;
      v42 = *(void (**)(char *, uint64_t, uint64_t))(v60 + 104);
      v43 = v58;
      v42(v59, v40, v58);
      sub_2321FFA24();
      *(_OWORD *)(swift_allocObject() + 16) = v52;
      sub_2321FFBEC();
      v44 = v40;
      v45 = v55;
      v42(v41, v44, v43);
      sub_2321FFA24();

      (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v45);
    }
    return (id)v54;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23211CB68(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23211CBA4 + 4 * byte_232216578[a1]))(0x654E657461647075, 0xEC00000064656465);
}

uint64_t sub_23211CBA4()
{
  return 0x696669746E656469;
}

unint64_t sub_23211CBC0()
{
  return 0xD000000000000012;
}

unint64_t sub_23211CBFC()
{
  return 0xD000000000000010;
}

uint64_t sub_23211CC18(_QWORD *a1)
{
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];

  v3 = v1;
  sub_23211DF54(0, &qword_255F9F568, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEE3520]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = &v11[-v8];
  sub_232016AD8(a1, a1[3]);
  sub_23211DE88();
  sub_232201BC0();
  v11[15] = *v3;
  v11[14] = 0;
  sub_23211DFB0();
  sub_232201A94();
  if (!v2)
  {
    _s14descr250103FA9O8WorkPlanVMa();
    v11[13] = 1;
    sub_2321FFACC();
    sub_232000590(&qword_255F9F578, (uint64_t (*)(uint64_t))MEMORY[0x24BE47080], MEMORY[0x24BE47090]);
    sub_232201A94();
    v11[12] = 2;
    sub_2321FE584();
    sub_232000590(&qword_2541B6A58, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], MEMORY[0x24BE47CD8]);
    sub_232201A64();
    v11[11] = 3;
    sub_232071E50();
    sub_232000590(&qword_255F9F580, (uint64_t (*)(uint64_t))sub_232071E50, MEMORY[0x24BE41778]);
    sub_232201A94();
    v11[10] = 4;
    sub_232071EE4();
    sub_232000590(&qword_255F9E8A0, (uint64_t (*)(uint64_t))sub_232071EE4, MEMORY[0x24BDD2060]);
    sub_232201A64();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_23211CEB0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t, uint64_t);
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(_QWORD);
  _QWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  _BYTE *v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;

  v42 = a2;
  sub_23211B738(0);
  MEMORY[0x24BDAC7A8](v3);
  v43 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232071E50();
  v45 = *(_QWORD *)(v5 - 8);
  v46 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v44 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23202CDF4(0);
  MEMORY[0x24BDAC7A8](v7);
  v47 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2321FFACC();
  v50 = *(_QWORD *)(v9 - 8);
  v51 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v49 = (char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23211DF54(0, &qword_255F9F540, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEE33E0]);
  v53 = v11;
  v48 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v40 - v12;
  v14 = _s14descr250103FA9O8WorkPlanVMa();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = &v17[*(int *)(v15 + 24)];
  v18 = v55;
  v19 = sub_2321FE584();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  v20 = (uint64_t)&v17[*(int *)(v14 + 32)];
  sub_232071EE4();
  v22 = v21;
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
  v54 = v20;
  v23(v20, 1, 1, v21);
  sub_232016AD8(a1, a1[3]);
  sub_23211DE88();
  v52 = v13;
  v24 = v56;
  sub_232201BB4();
  v25 = (uint64_t)a1;
  v26 = (uint64_t)v55;
  if (v24)
  {
    sub_232016AFC(v25);
    sub_232002CEC(v26, (uint64_t (*)(_QWORD))sub_23202CDF4);
    v38 = v54;
    v39 = (uint64_t (*)(_QWORD))sub_23211B738;
  }
  else
  {
    v40[0] = v22;
    v40[1] = v19;
    v28 = v49;
    v27 = v50;
    v41 = v14;
    v56 = v17;
    v29 = v51;
    v30 = v25;
    v61 = 0;
    sub_23211DECC();
    sub_232201A40();
    v31 = v56;
    *v56 = v62;
    v60 = 1;
    sub_232000590(&qword_255F9F558, (uint64_t (*)(uint64_t))MEMORY[0x24BE47080], MEMORY[0x24BE47098]);
    sub_232201A40();
    (*(void (**)(_BYTE *, char *, uint64_t))(v27 + 32))(&v31[*(int *)(v41 + 20)], v28, v29);
    v59 = 2;
    sub_232000590(&qword_2541B6A68, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], MEMORY[0x24BE47CE8]);
    v33 = (uint64_t)v47;
    sub_232201A10();
    sub_23211DF10(v33, v26, (uint64_t (*)(_QWORD))sub_23202CDF4);
    v58 = 3;
    sub_232000590(&qword_255F9F560, (uint64_t (*)(uint64_t))sub_232071E50, MEMORY[0x24BE41780]);
    v34 = v44;
    v35 = v46;
    sub_232201A40();
    v36 = (uint64_t)v56;
    (*(void (**)(_BYTE *, char *, uint64_t))(v45 + 32))(&v56[*(int *)(v41 + 28)], v34, v35);
    v57 = 4;
    sub_232000590(&qword_255F9E890, (uint64_t (*)(uint64_t))sub_232071EE4, MEMORY[0x24BDD2078]);
    v37 = (uint64_t)v43;
    sub_232201A10();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v52, v53);
    sub_23211DF10(v37, v54, (uint64_t (*)(_QWORD))sub_23211B738);
    sub_23200054C(v36, v42, (uint64_t (*)(_QWORD))_s14descr250103FA9O8WorkPlanVMa);
    sub_232016AFC(v30);
    v38 = v36;
    v39 = (uint64_t (*)(_QWORD))_s14descr250103FA9O8WorkPlanVMa;
  }
  return sub_232002CEC(v38, v39);
}

BOOL sub_23211D43C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23211D450()
{
  unsigned __int8 *v0;

  return sub_23211CB68(*v0);
}

uint64_t sub_23211D458@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23211E33C(a1, a2);
  *a3 = result;
  return result;
}

void sub_23211D47C(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_23211D488()
{
  sub_23211DE88();
  return sub_232201BD8();
}

uint64_t sub_23211D4B0()
{
  sub_23211DE88();
  return sub_232201BE4();
}

uint64_t sub_23211D4D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = sub_2321FFACC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_23211D518()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_2321FFA18();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23211C5C0();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BE46FC0], v0);
  return sub_2321FFA24();
}

uint64_t sub_23211D5B4@<X0>(_BYTE *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v2;
  uint64_t result;

  result = sub_23200054C((uint64_t)a1, (uint64_t)a2, (uint64_t (*)(_QWORD))_s14descr250103FA9O8WorkPlanVMa);
  *a2 = *v2 & *a1 & 1;
  return result;
}

uint64_t sub_23211D604@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23211CEB0(a1, a2);
}

uint64_t sub_23211D618(_QWORD *a1)
{
  return sub_23211CC18(a1);
}

uint64_t sub_23211D62C()
{
  return sub_232000590(&qword_2541B6C28, (uint64_t (*)(uint64_t))_s14descr250103FA9O8WorkPlanVMa, (uint64_t)&unk_2322165E0);
}

uint64_t sub_23211D658()
{
  return sub_232000590(&qword_2541B6C20, (uint64_t (*)(uint64_t))_s14descr250103FA9O8WorkPlanVMa, (uint64_t)&unk_2322165B8);
}

BOOL sub_23211D684(_BYTE *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  int v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  _BOOL8 result;
  uint64_t v37;
  _BYTE *v38;
  unsigned __int8 *v39;
  uint64_t v40;
  unsigned int (*v41)(uint64_t, uint64_t, uint64_t);
  void (*v42)(uint64_t);
  uint64_t v43;
  char *v44;
  char v45;
  void (*v46)(char *, uint64_t);
  _BYTE *v47;
  unsigned __int8 *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  unsigned __int8 *v70;
  _BYTE *v71;

  sub_232071EE4();
  v68 = v4;
  v66 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v61 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23211DD90(0);
  v63 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v67 = (uint64_t)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23211B738(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v62 = (uint64_t)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v64 = (uint64_t)&v60 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v65 = (uint64_t)&v60 - v13;
  v14 = sub_2321FE584();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v69 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23211DDA4(0);
  v18 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23202CDF4(0);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)&v60 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v60 - v28;
  v70 = a2;
  v71 = a1;
  v30 = *a2;
  if (*a1)
    v31 = 0x6D65744964656566;
  else
    v31 = 0xD00000000000001ALL;
  if (*a1)
    v32 = 0xED0000796C6E4F73;
  else
    v32 = 0x80000002322027B0;
  if (v30)
    v33 = 0x6D65744964656566;
  else
    v33 = 0xD00000000000001ALL;
  if (v30)
    v34 = 0xED0000796C6E4F73;
  else
    v34 = 0x80000002322027B0;
  if (v31 == v33 && v32 == v34)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v35 = sub_232201ADC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v35 & 1) == 0)
      return result;
  }
  v37 = _s14descr250103FA9O8WorkPlanVMa();
  v39 = v70;
  v38 = v71;
  if ((sub_2321FFAA8() & 1) == 0)
    return 0;
  sub_23200054C((uint64_t)&v38[*(int *)(v37 + 24)], (uint64_t)v29, (uint64_t (*)(_QWORD))sub_23202CDF4);
  sub_23200054C((uint64_t)&v39[*(int *)(v37 + 24)], (uint64_t)v27, (uint64_t (*)(_QWORD))sub_23202CDF4);
  v40 = (uint64_t)&v20[*(int *)(v18 + 48)];
  sub_23200054C((uint64_t)v29, (uint64_t)v20, (uint64_t (*)(_QWORD))sub_23202CDF4);
  sub_23200054C((uint64_t)v27, v40, (uint64_t (*)(_QWORD))sub_23202CDF4);
  v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  if (v41((uint64_t)v20, 1, v14) == 1)
  {
    sub_232002CEC((uint64_t)v27, (uint64_t (*)(_QWORD))sub_23202CDF4);
    sub_232002CEC((uint64_t)v29, (uint64_t (*)(_QWORD))sub_23202CDF4);
    if (v41(v40, 1, v14) == 1)
    {
      sub_232002CEC((uint64_t)v20, (uint64_t (*)(_QWORD))sub_23202CDF4);
      goto LABEL_26;
    }
LABEL_23:
    v42 = sub_23211DDA4;
    v43 = (uint64_t)v20;
LABEL_24:
    sub_232002CEC(v43, (uint64_t (*)(_QWORD))v42);
    return 0;
  }
  sub_23200054C((uint64_t)v20, (uint64_t)v24, (uint64_t (*)(_QWORD))sub_23202CDF4);
  if (v41(v40, 1, v14) == 1)
  {
    sub_232002CEC((uint64_t)v27, (uint64_t (*)(_QWORD))sub_23202CDF4);
    sub_232002CEC((uint64_t)v29, (uint64_t (*)(_QWORD))sub_23202CDF4);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v24, v14);
    goto LABEL_23;
  }
  v44 = v69;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(v69, v40, v14);
  sub_232000590(&qword_2541B6A60, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], MEMORY[0x24BE47CE0]);
  v45 = sub_232200E64();
  v46 = *(void (**)(char *, uint64_t))(v15 + 8);
  v46(v44, v14);
  sub_232002CEC((uint64_t)v27, (uint64_t (*)(_QWORD))sub_23202CDF4);
  sub_232002CEC((uint64_t)v29, (uint64_t (*)(_QWORD))sub_23202CDF4);
  v46(v24, v14);
  v39 = v70;
  sub_232002CEC((uint64_t)v20, (uint64_t (*)(_QWORD))sub_23202CDF4);
  if ((v45 & 1) == 0)
    return 0;
LABEL_26:
  v47 = v71;
  type metadata accessor for HKMCPregnancyState(0);
  sub_232000590(&qword_255F9F530, (uint64_t (*)(uint64_t))type metadata accessor for HKMCPregnancyState, (uint64_t)&unk_23220FD44);
  sub_232000590((unint64_t *)&unk_2541B2790, (uint64_t (*)(uint64_t))type metadata accessor for HKMCPregnancyState, (uint64_t)&unk_23220FD6C);
  if ((sub_2321FEB3C() & 1) == 0)
    return 0;
  v48 = v39;
  v49 = v65;
  sub_23200054C((uint64_t)&v47[*(int *)(v37 + 32)], v65, (uint64_t (*)(_QWORD))sub_23211B738);
  v50 = v64;
  sub_23200054C((uint64_t)&v48[*(int *)(v37 + 32)], v64, (uint64_t (*)(_QWORD))sub_23211B738);
  v51 = v67;
  v52 = v67 + *(int *)(v63 + 48);
  sub_23200054C(v49, v67, (uint64_t (*)(_QWORD))sub_23211B738);
  sub_23200054C(v50, v52, (uint64_t (*)(_QWORD))sub_23211B738);
  v53 = v66;
  v54 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48);
  v55 = v68;
  if (v54(v51, 1, v68) == 1)
  {
    sub_232002CEC(v50, (uint64_t (*)(_QWORD))sub_23211B738);
    sub_232002CEC(v49, (uint64_t (*)(_QWORD))sub_23211B738);
    if (v54(v52, 1, v55) == 1)
    {
      sub_232002CEC(v51, (uint64_t (*)(_QWORD))sub_23211B738);
      return 1;
    }
    goto LABEL_32;
  }
  v56 = v62;
  sub_23200054C(v51, v62, (uint64_t (*)(_QWORD))sub_23211B738);
  if (v54(v52, 1, v55) == 1)
  {
    sub_232002CEC(v50, (uint64_t (*)(_QWORD))sub_23211B738);
    sub_232002CEC(v49, (uint64_t (*)(_QWORD))sub_23211B738);
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v56, v55);
LABEL_32:
    v42 = sub_23211DD90;
    v43 = v51;
    goto LABEL_24;
  }
  v57 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 32))(v61, v52, v55);
  sub_23211DE10();
  v58 = sub_232200E64();
  v59 = *(void (**)(char *, uint64_t))(v53 + 8);
  v59(v57, v55);
  sub_232002CEC(v50, (uint64_t (*)(_QWORD))sub_23211B738);
  sub_232002CEC(v49, (uint64_t (*)(_QWORD))sub_23211B738);
  v59((char *)v56, v55);
  sub_232002CEC(v51, (uint64_t (*)(_QWORD))sub_23211B738);
  return (v58 & 1) != 0;
}

void sub_23211DD90(uint64_t a1)
{
  sub_23211DDB8(a1, &qword_255F9F520, sub_23211B738);
}

void sub_23211DDA4(uint64_t a1)
{
  sub_23211DDB8(a1, &qword_255F9F528, sub_23202CDF4);
}

void sub_23211DDB8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

unint64_t sub_23211DE10()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_255F9F538;
  if (!qword_255F9F538)
  {
    sub_232071EE4();
    v2 = v1;
    v3 = sub_232000590(&qword_255F9EC88, (uint64_t (*)(uint64_t))sub_2320EDDC0, MEMORY[0x24BEE5BE0]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDD2070], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_255F9F538);
  }
  return result;
}

unint64_t sub_23211DE88()
{
  unint64_t result;

  result = qword_255F9F548;
  if (!qword_255F9F548)
  {
    result = MEMORY[0x2348FF39C](&unk_232216834, &_s14descr250103FA9O8WorkPlanV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255F9F548);
  }
  return result;
}

unint64_t sub_23211DECC()
{
  unint64_t result;

  result = qword_255F9F550;
  if (!qword_255F9F550)
  {
    result = MEMORY[0x2348FF39C](&unk_23221680C, &_s14descr250103FA9O8WorkPlanV6UpdateON);
    atomic_store(result, (unint64_t *)&qword_255F9F550);
  }
  return result;
}

uint64_t sub_23211DF10(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

void sub_23211DF54(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_23211DE88();
    v7 = a3(a1, &_s14descr250103FA9O8WorkPlanV10CodingKeysON, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_23211DFB0()
{
  unint64_t result;

  result = qword_255F9F570;
  if (!qword_255F9F570)
  {
    result = MEMORY[0x2348FF39C](&unk_2322167E4, &_s14descr250103FA9O8WorkPlanV6UpdateON);
    atomic_store(result, (unint64_t *)&qword_255F9F570);
  }
  return result;
}

uint64_t _s14descr250103FA9O8WorkPlanV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s14descr250103FA9O8WorkPlanV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23211E0D0 + 4 * byte_232216582[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23211E104 + 4 * byte_23221657D[v4]))();
}

uint64_t sub_23211E104(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23211E10C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23211E114);
  return result;
}

uint64_t sub_23211E120(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23211E128);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23211E12C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23211E134(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14descr250103FA9O8WorkPlanV10CodingKeysOMa()
{
  return &_s14descr250103FA9O8WorkPlanV10CodingKeysON;
}

uint64_t _s14descr250103FA9O8WorkPlanV6UpdateOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23211E19C + 4 * byte_23221658C[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23211E1D0 + 4 * byte_232216587[v4]))();
}

uint64_t sub_23211E1D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23211E1D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23211E1E0);
  return result;
}

uint64_t sub_23211E1EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23211E1F4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23211E1F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23211E200(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14descr250103FA9O8WorkPlanV6UpdateOMa()
{
  return &_s14descr250103FA9O8WorkPlanV6UpdateON;
}

unint64_t sub_23211E220()
{
  unint64_t result;

  result = qword_255F9F588;
  if (!qword_255F9F588)
  {
    result = MEMORY[0x2348FF39C](&unk_23221668C, &_s14descr250103FA9O8WorkPlanV6UpdateON);
    atomic_store(result, (unint64_t *)&qword_255F9F588);
  }
  return result;
}

unint64_t sub_23211E268()
{
  unint64_t result;

  result = qword_255F9F590;
  if (!qword_255F9F590)
  {
    result = MEMORY[0x2348FF39C](&unk_2322167BC, &_s14descr250103FA9O8WorkPlanV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255F9F590);
  }
  return result;
}

unint64_t sub_23211E2B0()
{
  unint64_t result;

  result = qword_255F9F598;
  if (!qword_255F9F598)
  {
    result = MEMORY[0x2348FF39C](&unk_23221672C, &_s14descr250103FA9O8WorkPlanV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255F9F598);
  }
  return result;
}

unint64_t sub_23211E2F8()
{
  unint64_t result;

  result = qword_255F9F5A0;
  if (!qword_255F9F5A0)
  {
    result = MEMORY[0x2348FF39C](&unk_232216754, &_s14descr250103FA9O8WorkPlanV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_255F9F5A0);
  }
  return result;
}

uint64_t sub_23211E33C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x654E657461647075 && a2 == 0xEC00000064656465;
  if (v2 || (sub_232201ADC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_232201ADC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000232207A70 || (sub_232201ADC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000232207A90 || (sub_232201ADC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000232207AB0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_232201ADC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

unint64_t sub_23211E564()
{
  unint64_t result;

  result = qword_255F9F5A8;
  if (!qword_255F9F5A8)
  {
    result = MEMORY[0x2348FF39C](&unk_2322166B4, &_s14descr250103FA9O8WorkPlanV6UpdateON);
    atomic_store(result, (unint64_t *)&qword_255F9F5A8);
  }
  return result;
}

uint64_t sub_23211E5A8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  void *v47;
  void *v48;
  id v49;
  char *v50;
  void *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  id v55;
  id v56;
  id v57;
  uint64_t v58;
  unint64_t v59;
  void *v60;
  void *v61;
  id v62;
  void *v63;
  void *v64;
  void *v65;
  id v66;
  id v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  uint64_t v71;
  _QWORD *v72;
  void *v73;
  void *v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  id v87;
  id v88;
  char *v89;
  uint64_t v90;
  void (*v91)(char *, uint64_t);
  char *v92;
  uint64_t v93;
  void (*v94)(char *, char *, uint64_t);
  char *v95;
  id v96;
  id v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  id v103;
  void (*v104)(char *, char *, uint64_t);
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  void *v112;
  void *v113;
  char *v114;
  id v115;
  uint64_t v116;
  char *v117;
  uint64_t result;
  uint64_t v119;
  id v120;
  id v121;
  id v122;
  id v123;
  id v124;
  id v125;
  id v126;
  id v127;
  id v128;
  uint64_t inited;
  unint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  id v136;
  id v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void (*v141)(uint64_t *, _QWORD);
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  void (*v145)(uint64_t *, _QWORD);
  uint64_t v146;
  char *v147;
  id v148;
  unsigned __int8 v149;
  char *v150;
  id v151;
  char *v152;
  id v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  void (*v159)(uint64_t, uint64_t);
  uint64_t v160;
  uint64_t v161;
  _QWORD v162[3];
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  char *v176;
  char *v177;
  char *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  char *v184;
  char *v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  id v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  id v197;
  id v198;
  id v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  uint64_t v204[5];
  uint64_t v205;

  v4 = (uint64_t)v3;
  v198 = a2;
  v194 = a1;
  v6 = sub_23220039C();
  v201 = *(_QWORD *)(v6 - 8);
  v202 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v177 = (char *)v162 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v184 = (char *)v162 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v203 = (char *)v162 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v178 = (char *)v162 - v13;
  v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, qword_2541B78E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47DF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v15);
  v169 = (uint64_t)v162 - v16;
  v174 = sub_2321FE194();
  v173 = *(_QWORD *)(v174 - 8);
  MEMORY[0x24BDAC7A8](v174);
  v18 = (char *)v162 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_2321FE308();
  v200 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v175 = (char *)v162 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], v14);
  MEMORY[0x24BDAC7A8](v21);
  v172 = (uint64_t)v162 - v22;
  v181 = sub_2321FF094();
  v182 = *(_QWORD *)(v181 - 8);
  v23 = MEMORY[0x24BDAC7A8](v181);
  v170 = (char *)v162 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v176 = (char *)v162 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v185 = (char *)v162 - v27;
  sub_2320057B8(0, &qword_2541B2918, (uint64_t (*)(uint64_t))MEMORY[0x24BE413B0], v14);
  MEMORY[0x24BDAC7A8](v28);
  v180 = (uint64_t)v162 - v29;
  v188 = sub_2321FEAAC();
  v187 = *(_QWORD *)(v188 - 8);
  v30 = MEMORY[0x24BDAC7A8](v188);
  v179 = (char *)v162 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v190 = (char *)v162 - v32;
  v33 = sub_2321FDC6C();
  v191 = *(_QWORD *)(v33 - 8);
  v34 = MEMORY[0x24BDAC7A8](v33);
  v183 = (char *)v162 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = MEMORY[0x24BDAC7A8](v34);
  v193 = (char *)v162 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v186 = (char *)v162 - v39;
  MEMORY[0x24BDAC7A8](v38);
  v195 = (char *)v162 - v40;
  v41 = (_QWORD *)sub_2321FD9C0();
  v196 = *(v41 - 1);
  v197 = v41;
  v42 = MEMORY[0x24BDAC7A8](v41);
  v44 = (char *)v162 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v42);
  v46 = (char *)v162 - v45;
  v47 = (void *)objc_opt_self();
  v48 = (void *)*v3;
  v49 = objc_msgSend(v47, sel_sharedInstanceForHealthStore_, *v3);
  v199 = v49;
  if (!v49
    || (v50 = (char *)v3[1],
        (v189 = objc_msgSend(v49, sel_displayTypeForObjectType_, v50)) == 0))
  {
    sub_232200318();
    sub_23202E788((uint64_t)v3);
    sub_23202E788((uint64_t)v3);
    v69 = sub_232200390();
    v70 = sub_2322012E4();
    if (os_log_type_enabled(v69, v70))
    {
      v71 = swift_slowAlloc();
      v72 = (_QWORD *)swift_slowAlloc();
      v73 = (void *)swift_slowAlloc();
      v192 = a3;
      v198 = v73;
      v204[0] = (uint64_t)v73;
      *(_DWORD *)v71 = 136446467;
      v205 = sub_232013174(0xD00000000000002DLL, 0x80000002322078D0, v204);
      sub_232201710();
      *(_WORD *)(v71 + 12) = 2113;
      v74 = (void *)v3[1];
      v205 = (uint64_t)v74;
      v75 = v74;
      v76 = v200;
      sub_232201710();
      *v72 = v74;
      sub_23202E80C((uint64_t)v3);
      sub_23202E80C((uint64_t)v3);
      _os_log_impl(&dword_231FFB000, v69, v70, "%{public}s Could not access displayType for %{private}@", (uint8_t *)v71, 0x16u);
      sub_2320477F0();
      v77 = 1;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v72, -1, -1);
      v78 = v198;
      swift_arrayDestroy();
      a3 = v192;
      MEMORY[0x2348FF468](v78, -1, -1);
      MEMORY[0x2348FF468](v71, -1, -1);

      (*(void (**)(char *, uint64_t))(v201 + 8))(v203, v202);
    }
    else
    {

      sub_23202E80C((uint64_t)v3);
      sub_23202E80C((uint64_t)v3);

      (*(void (**)(char *, uint64_t))(v201 + 8))(v203, v202);
      v77 = 1;
      v76 = v200;
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v76 + 56))(a3, v77, 1, v19);
  }
  v163 = v18;
  v166 = v33;
  v168 = v19;
  v192 = a3;
  v51 = (void *)sub_2322011C4();
  v203 = v50;
  v165 = sub_2321D5890(v50);
  v167 = v52;

  v53 = *(void **)(v4 + 32);
  type metadata accessor for AlertLocalization();
  v54 = swift_allocObject();
  v55 = v48;
  v56 = v53;
  sub_2321FDDA4();
  sub_2321FDCFC();
  *(_QWORD *)(v54 + OBJC_IVAR____TtC9Summaries17AlertLocalization____lazy_storage___displayTypeController) = 0;
  *(_QWORD *)(v54 + OBJC_IVAR____TtC9Summaries17AlertLocalization_healthStore) = v55;
  *(_QWORD *)(v54 + OBJC_IVAR____TtC9Summaries17AlertLocalization_unitPreferenceController) = v56;
  v171 = v54;
  *(_BYTE *)(v54 + OBJC_IVAR____TtC9Summaries17AlertLocalization_isUserNotification) = 0;
  v57 = objc_msgSend(*(id *)(v4 + 24), sel_sharingEntries);
  v58 = sub_232003E9C(0, &qword_255F9F5B0);
  v59 = sub_232201038();

  sub_23202E788(v4);
  v60 = sub_232120254(v59);
  v164 = v4;
  sub_23202E80C(v4);
  swift_bridgeObjectRelease();
  if (v60)
  {
    sub_232003E9C(0, &qword_255F9F5B8);
    v61 = (void *)sub_232201320();
    v204[3] = v58;
    v204[4] = MEMORY[0x24BE41E58];
    v204[0] = (uint64_t)v60;
    v62 = v60;
    sub_232201314();
    v63 = (void *)sub_232201308();
    swift_bridgeObjectRelease();

    sub_232016AFC((uint64_t)v204);
    v64 = (void *)sub_2322011C4();
    v65 = v55;
    if (v63)
    {
      v66 = v63;
      sub_2322016B0();

      (*(void (**)(char *, char *, id))(v196 + 32))(v46, v44, v197);
      v67 = v198;
      v68 = v194;
      goto LABEL_11;
    }
  }
  else
  {
    v64 = (void *)sub_2322011C4();
    v65 = v55;
  }
  v68 = v194;
  sub_2321FD9B4();
  v63 = 0;
  v67 = v198;
LABEL_11:
  v79 = v203;
  v80 = sub_23204AF00(v203, v64, (uint64_t)v46, v67, v68);
  v162[2] = v81;
  v184 = (char *)v80;
  (*(void (**)(char *, id))(v196 + 8))(v46, v197);

  v82 = (void *)sub_2322011C4();
  v83 = sub_23204BB20(v79, v82, v68);
  v197 = v65;
  v196 = v84;
  v177 = (char *)v83;

  v85 = v195;
  v162[1] = sub_23204F74C(v79);
  v162[0] = v86;
  sub_2321FDC60();
  if (v198)
  {
    v87 = v198;
    objc_msgSend(v87, sel_endDate);
    v88 = (id)HKDecodeDateForValue();
    v89 = v186;
    sub_2321FDC30();

    v90 = v191;
    v91 = *(void (**)(char *, uint64_t))(v191 + 8);
    v92 = v85;
    v93 = v166;
    v91(v92, v166);
    v94 = *(void (**)(char *, char *, uint64_t))(v90 + 32);
    v94(v195, v89, v93);
    v95 = v193;
    sub_2321FDC60();
    v96 = v87;
    objc_msgSend(v96, sel_startDate);
    v97 = (id)HKDecodeDateForValue();
    sub_2321FDC30();

    v91(v95, v93);
    v94(v95, v89, v93);
  }
  else
  {
    sub_2321FDC60();
  }
  v98 = v190;
  v99 = v180;
  sub_2321B5F84(v180);
  v100 = v187;
  v101 = v188;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v187 + 48))(v99, 1, v188) != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v100 + 32))(v98, v99, v101);
LABEL_18:
    v103 = objc_msgSend(v189, sel_color);
    v104 = *(void (**)(char *, char *, uint64_t))(v191 + 16);
    v105 = v166;
    v104(v186, v193, v166);
    v104(v183, v195, v105);
    (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v179, v98, v101);
    v106 = v203;
    v107 = (char *)v103;
    sub_2321FF070();
    v108 = sub_2321FF064();
    v203 = v107;
    v109 = v108;
    v111 = v110;
    v112 = (void *)sub_2322011C4();
    v113 = (void *)sub_2321FE1A0();

    v114 = v175;
    if (v113)
    {
      v115 = objc_msgSend(v113, sel_type);

      v116 = v172;
      sub_23204FAF4(v194, v172);
      v117 = v163;
      if (v115 == (id)1)
        goto LABEL_24;
    }
    else
    {
      v116 = v172;
      sub_23204FAF4(v194, v172);
      v117 = v163;
    }
    v119 = sub_2321FE584();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 48))(v116, 1, v119) != 1)
    {
      sub_232016D88(v116, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8]);
      type metadata accessor for SummaryAlertTileViewController();
      sub_2321FE1DC();
LABEL_26:
      (*(void (**)(char *, _QWORD, uint64_t))(v173 + 104))(v117, *MEMORY[0x24BE47438], v174);
      sub_2320169E4(v109, v111);
      sub_2322011C4();
      sub_2321FE248();
      v120 = v189;
      v121 = objc_msgSend(v189, sel_localization);
      v122 = objc_msgSend(v121, sel_displayName);

      sub_232200EC4();
      sub_2321FE23C();
      v123 = objc_msgSend(v120, sel_localization);
      v124 = objc_msgSend(v123, sel_summary);

      if (v124)
      {
        sub_232200EC4();

      }
      sub_2321FE26C();
      v125 = v189;
      v126 = objc_msgSend(v189, sel_displayCategory);
      sub_2321FE290();

      v127 = objc_msgSend(v125, sel_displayCategory);
      v128 = objc_msgSend(v127, sel_displayName);

      sub_232200EC4();
      sub_2321FE284();
      sub_232027434();
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_232210D20;
      *(_QWORD *)(inited + 32) = v106;
      v204[0] = inited;
      sub_232201050();
      v130 = v204[0];
      if ((unint64_t)v204[0] >> 62)
      {
        v133 = v106;
        swift_bridgeObjectRetain();
        v134 = sub_232201998();
        swift_bridgeObjectRelease();
        if (!v134)
        {
LABEL_32:
          swift_bridgeObjectRelease();
          sub_2321FE260();
          sub_2321FE230();
          sub_2321FE224();
          sub_2320057B8(0, &qword_2541B57A0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47758], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
          sub_2321FE2A8();
          v135 = swift_allocObject();
          *(_OWORD *)(v135 + 16) = xmmword_232210D40;
          swift_bridgeObjectRetain();
          sub_2321FE29C();
          sub_2321AA0AC(v135);
          swift_setDeallocating();
          swift_arrayDestroy();
          swift_deallocClassInstance();
          sub_2321FE2C0();
          v136 = objc_msgSend(v197, sel_profileIdentifier);
          v137 = objc_msgSend(v136, sel_type);

          if (v137 == (id)1)
          {
            v138 = sub_2321FE530();
            v140 = v139;
            v141 = (void (*)(uint64_t *, _QWORD))sub_2321FE2CC();
            sub_2321A1880(&v205, v138, v140);
            swift_bridgeObjectRelease();
            v141(v204, 0);
            v142 = sub_2321FE500();
            v144 = v143;
            v145 = (void (*)(uint64_t *, _QWORD))sub_2321FE2CC();
            sub_2321A1880(&v205, v142, v144);
            swift_bridgeObjectRelease();
            v145(v204, 0);
          }
          v19 = v168;
          v146 = v181;
          v147 = v183;
          if (v198)
          {
            v148 = v198;
            v149 = objc_msgSend(v148, sel_hasStartDate);
            v150 = v185;
            if ((v149 & 1) != 0 && objc_msgSend(v148, sel_hasEndDate))
            {
              objc_msgSend(v148, sel_startDate);
              v151 = (id)HKDecodeDateForValue();
              v152 = v186;
              sub_2321FDC30();

              objc_msgSend(v148, sel_endDate);
              v153 = (id)HKDecodeDateForValue();
              sub_2321FDC30();

              v154 = (uint64_t)v147;
              v155 = v169;
              v156 = (uint64_t)v152;
              v157 = v154;
              sub_2321B6378(v156, v154, v169);
              v158 = sub_2321FE65C();
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v158 - 8) + 56))(v155, 0, 1, v158);
              sub_2321FE278();

              swift_release();
              sub_232003ED4(v109, v111);

              v159 = *(void (**)(uint64_t, uint64_t))(v191 + 8);
              v160 = v157;
              v114 = v175;
              v161 = v166;
              v159(v160, v166);
              v159((uint64_t)v186, v161);
              (*(void (**)(char *, uint64_t))(v182 + 8))(v150, v146);
              (*(void (**)(char *, uint64_t))(v187 + 8))(v190, v188);
LABEL_41:
              v159((uint64_t)v193, v161);
              v159((uint64_t)v195, v161);
              v76 = v200;
              a3 = v192;
              (*(void (**)(uint64_t, char *, uint64_t))(v200 + 32))(v192, v114, v19);
              v77 = 0;
              return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v76 + 56))(a3, v77, 1, v19);
            }

            swift_release();
            sub_232003ED4(v109, v111);

            (*(void (**)(char *, uint64_t))(v182 + 8))(v150, v146);
          }
          else
          {
            swift_release();

            sub_232003ED4(v109, v111);
            (*(void (**)(char *, uint64_t))(v182 + 8))(v185, v146);
          }
          (*(void (**)(char *, uint64_t))(v187 + 8))(v190, v188);
          v159 = *(void (**)(uint64_t, uint64_t))(v191 + 8);
          v161 = v166;
          goto LABEL_41;
        }
      }
      else
      {
        v131 = *(_QWORD *)((v204[0] & 0xFFFFFFFFFFFFF8) + 0x10);
        v132 = v106;
        if (!v131)
          goto LABEL_32;
      }
      sub_2321A9D34(v130);
      goto LABEL_32;
    }
LABEL_24:
    sub_232016D88(v116, &qword_2541B28C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8]);
    goto LABEL_26;
  }
  sub_232016D88(v99, &qword_2541B2918, (uint64_t (*)(uint64_t))MEMORY[0x24BE413B0]);
  v102 = objc_msgSend(v189, sel_listIconImageName);
  sub_232200EC4();

  if ((id)HKHealthUIFrameworkBundle())
  {
    v98 = v190;
    sub_2321FEAA0();
    goto LABEL_18;
  }
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

void *sub_232120254(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  char v11;

  if (a1 >> 62)
    goto LABEL_19;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = sub_232201998())
  {
    v3 = 4;
    while (1)
    {
      v4 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2348FEA30](v3 - 4, a1) : *(id *)(a1 + 8 * v3);
      v5 = v4;
      v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
        break;
      v7 = objc_msgSend(v4, sel_profileIdentifier);
      v8 = (void *)sub_2322011C4();
      v9 = (void *)sub_2321FE1A0();

      if (v7)
      {
        if (v9)
        {
          sub_232003E9C(0, (unint64_t *)&qword_255F9DD60);
          v10 = v7;
          v11 = sub_2322016A4();

          if ((v11 & 1) != 0)
            goto LABEL_17;
          v7 = v5;
        }
        else
        {

        }
      }
      else
      {
        if (!v9)
        {
LABEL_17:
          swift_bridgeObjectRelease();
          return v5;
        }

        v7 = v9;
      }

      ++v3;
      if (v6 == v2)
        goto LABEL_20;
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
  }
LABEL_20:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_23212040C(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void (*v14)(unint64_t, _QWORD, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void (*v29)(char *, unint64_t, uint64_t);
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;

  v32 = a2;
  v36 = a1;
  v2 = sub_2321FE308();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v34 = (char *)&v32 - v7;
  v35 = sub_2321FE9E0();
  sub_2320057B8(0, &qword_2541B7530, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v8 = sub_2321FE194();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 72);
  v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v12 = swift_allocObject();
  v33 = v12;
  *(_OWORD *)(v12 + 16) = xmmword_232211930;
  v13 = v12 + v11;
  v14 = *(void (**)(unint64_t, _QWORD, uint64_t))(v9 + 104);
  v14(v13, *MEMORY[0x24BE47460], v8);
  v14(v13 + v10, *MEMORY[0x24BE47490], v8);
  v14(v13 + 2 * v10, *MEMORY[0x24BE47410], v8);
  sub_232035344(0, (unint64_t *)&qword_2541B78C8);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_232210D20;
  *(_QWORD *)(v15 + 32) = objc_msgSend((id)objc_opt_self(), sel_activitySummaryType);
  v37 = v15;
  sub_232201050();
  v16 = v37;
  v17 = sub_2321FD8B8();
  v18 = (uint64_t)v34;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v34, 1, 1, v17);
  sub_232035344(0, &qword_2541B11D0);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_232210D40;
  v20 = (uint64_t)v36;
  v21 = (void *)sub_2321FF3F4();
  v22 = sub_2322011C4();

  *(_QWORD *)(v19 + 32) = v22;
  v23 = (void *)MEMORY[0x2348FBB2C](v33, v16, v18, v19);
  swift_bridgeObjectRelease();
  v24 = v32;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_232016D88(v18, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
  v25 = sub_232120794(v20, (uint64_t)v23, v24);
  v26 = *(_QWORD *)(v25 + 16);
  if (v26)
  {
    v35 = v25;
    v36 = v23;
    v27 = v25 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v28 = *(_QWORD *)(v3 + 72);
    v29 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
    while (1)
    {
      v29(v5, v27, v2);
      v30 = sub_232120DF8((uint64_t)v5, v24);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      if (v30 != 2)
        break;
      v27 += v28;
      if (!--v26)
      {

        goto LABEL_7;
      }
    }

    swift_bridgeObjectRelease();
  }
  else
  {

LABEL_7:
    swift_bridgeObjectRelease();
    return 2;
  }
  return v30;
}

uint64_t sub_232120794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t i;
  unint64_t v25;
  unint64_t v26;
  id *v27;
  id v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD v31[6];
  id v32;
  id v33;
  char *v34;
  _QWORD v35[4];

  v31[2] = a3;
  v4 = sub_23220039C();
  v31[4] = *(_QWORD *)(v4 - 8);
  v31[5] = v4;
  MEMORY[0x24BDAC7A8](v4);
  v34 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2321FE308();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v31 - v11;
  sub_2321FE9E0();
  v13 = (void *)MEMORY[0x2348FBB44]();
  v31[3] = a2;
  objc_msgSend(v13, sel_setPredicate_, a2);
  v14 = objc_allocWithZone(MEMORY[0x24BDD17C0]);
  v15 = (void *)sub_232200E94();
  v16 = objc_msgSend(v14, sel_initWithKey_ascending_, v15, 0);

  sub_232035344(0, (unint64_t *)&qword_2541B78C8);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_232210D20;
  *(_QWORD *)(v17 + 32) = v16;
  v35[0] = v17;
  sub_232201050();
  sub_232121524();
  v32 = v16;
  v18 = (void *)sub_232201020();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_setSortDescriptors_, v18);

  sub_2321FF3DC();
  sub_232016AD8(v35, v35[3]);
  v19 = (void *)sub_2321FE098();
  v33 = v13;
  v20 = sub_232201554();

  sub_232016AFC((uint64_t)v35);
  if (!(v20 >> 62))
  {
    v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v21)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease();

    return MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRetain();
  v21 = sub_232201998();
  swift_bridgeObjectRelease();
  if (!v21)
    goto LABEL_17;
LABEL_3:
  v35[0] = MEMORY[0x24BEE4AF8];
  result = sub_232013904(0, v21 & ~(v21 >> 63), 0);
  if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v35[0];
    if ((v20 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v21; ++i)
      {
        MEMORY[0x2348FEA30](i, v20);
        sub_2321FE1E8();
        v35[0] = v23;
        v26 = *(_QWORD *)(v23 + 16);
        v25 = *(_QWORD *)(v23 + 24);
        if (v26 >= v25 >> 1)
        {
          sub_232013904(v25 > 1, v26 + 1, 1);
          v23 = v35[0];
        }
        *(_QWORD *)(v23 + 16) = v26 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v23+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v26, v12, v6);
      }
    }
    else
    {
      v27 = (id *)(v20 + 32);
      do
      {
        v28 = *v27;
        sub_2321FE1E8();
        v35[0] = v23;
        v30 = *(_QWORD *)(v23 + 16);
        v29 = *(_QWORD *)(v23 + 24);
        if (v30 >= v29 >> 1)
        {
          sub_232013904(v29 > 1, v30 + 1, 1);
          v23 = v35[0];
        }
        *(_QWORD *)(v23 + 16) = v30 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v23+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v30, v10, v6);
        ++v27;
        --v21;
      }
      while (v21);
    }

    swift_bridgeObjectRelease();
    return v23;
  }
  __break(1u);
  return result;
}

uint64_t sub_232120DF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;

  v33[1] = a2;
  v3 = sub_2321FE308();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23220039C();
  v34 = *(_QWORD *)(v7 - 8);
  v35 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v36 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  sub_232121470();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, &qword_2541B1148, (uint64_t (*)(uint64_t))MEMORY[0x24BE4A990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v33 - v14;
  v16 = sub_2321FE2FC();
  if (v17 >> 60 != 15)
  {
    v28 = v16;
    v29 = v17;
    sub_2321FD7F8();
    swift_allocObject();
    sub_2321FD7EC();
    sub_2321FFF7C();
    sub_232000590(&qword_2541B1150, (uint64_t (*)(uint64_t))MEMORY[0x24BE4B5F0], MEMORY[0x24BE4B600]);
    sub_2321FD7E0();
    sub_2321FFF64();
    sub_2321FF1C0();
    sub_2321214E8((uint64_t)v12);
    v30 = sub_2321FFC28();
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v15, 1, v30) != 1)
    {
      v27 = sub_2321FFC1C();
      swift_release();
      swift_release();
      sub_23201602C(v28, v29);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v30);
      return v27;
    }
    swift_release();
    swift_release();
    sub_23201602C(v28, v29);
    sub_232016D88((uint64_t)v15, &qword_2541B1148, (uint64_t (*)(uint64_t))MEMORY[0x24BE4A990]);
    return 2;
  }
  sub_232200348();
  v18 = v4;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  v19 = sub_232200390();
  v20 = sub_2322012E4();
  if (!os_log_type_enabled(v19, v20))
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v35);
    return 2;
  }
  v21 = swift_slowAlloc();
  v22 = swift_slowAlloc();
  v38 = v22;
  *(_DWORD *)v21 = 136315395;
  v23 = sub_232201BF0();
  v37 = sub_232013174(v23, v24, &v38);
  sub_232201710();
  swift_bridgeObjectRelease();
  *(_WORD *)(v21 + 12) = 2081;
  sub_232000590(&qword_255F9F5C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0], MEMORY[0x24BE477E0]);
  v25 = sub_232201AB8();
  v37 = sub_232013174(v25, v26, &v38);
  sub_232201710();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v3);
  _os_log_impl(&dword_231FFB000, v19, v20, "%s No available user data in plugin feed item. %{private}s", (uint8_t *)v21, 0x16u);
  v27 = 2;
  swift_arrayDestroy();
  MEMORY[0x2348FF468](v22, -1, -1);
  MEMORY[0x2348FF468](v21, -1, -1);

  (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v35);
  return v27;
}

void sub_232121470()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B7620)
  {
    sub_2321FFC34();
    sub_232000590(&qword_2541B7638, (uint64_t (*)(uint64_t))MEMORY[0x24BE4A998], MEMORY[0x24BE4A978]);
    v0 = sub_2321FF1CC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B7620);
  }
}

uint64_t sub_2321214E8(uint64_t a1)
{
  uint64_t v2;

  sub_232121470();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_232121524()
{
  unint64_t result;

  result = qword_2541B78A8;
  if (!qword_2541B78A8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2541B78A8);
  }
  return result;
}

uint64_t SummaryModelGenerationRequest.hkType.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = sub_2321FE4A0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  v8 = sub_2321FE464();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v8;
}

unint64_t SummaryModelGenerationRequest.logDescription.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v9;
  unint64_t v10;

  v4 = sub_2321FE4A0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = 0;
  v10 = 0xE000000000000000;
  sub_23220189C();
  swift_bridgeObjectRelease();
  v9 = 0xD000000000000016;
  v10 = 0x8000000232207AD0;
  (*(void (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
  sub_232200F48();
  swift_bridgeObjectRelease();
  sub_232200F48();
  (*(void (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  AnchoredTypeState.logDescription.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_232200F48();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t SummaryModelQueryOutput.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;

  v6 = *(_QWORD *)(a2 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, a2) == 1)
  {
    v10 = sub_2322016F8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(a1, v10);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(a3, 1, 1, a2);
  }
  else
  {
    v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 32);
    v12(v9, a1, a2);
    v12(a3, (uint64_t)v9, a2);
    return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a3, 0, 1, a2);
  }
}

unint64_t AnchoredTypeState.logDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void *v13;
  void (*v14)(char *, uint64_t);
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  _QWORD v21[2];
  unint64_t v22;
  unint64_t v23;

  sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v21 - v4;
  v6 = sub_2321FE704();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v21 - v11;
  sub_2321FE47C();
  v13 = (void *)sub_2321FE6EC();
  v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v12, v6);
  if (v13)
  {
    v15 = objc_msgSend(v13, sel_dateInterval);
    if (v15)
    {
      v16 = v15;
      sub_2321FD864();

      v17 = sub_2321FD8B8();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v5, 0, 1, v17);
    }
    else
    {
      v18 = sub_2321FD8B8();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v5, 1, 1, v18);
    }
    sub_2322016E0();

    sub_2320F8274((uint64_t)v5);
  }
  v22 = 0;
  v23 = 0xE000000000000000;
  sub_23220189C();
  swift_bridgeObjectRelease();
  v22 = 0xD000000000000013;
  v23 = 0x8000000232207B10;
  sub_232200F48();
  swift_bridgeObjectRelease();
  sub_232200F48();
  sub_2321FE47C();
  v19 = (void *)sub_2321FE6F8();
  v14(v10, v6);
  v21[1] = v19;
  sub_2320057B8(0, &qword_2541B55F8, (uint64_t (*)(uint64_t))sub_232121B70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  sub_2322016E0();

  sub_232200F48();
  swift_bridgeObjectRelease();
  sub_232200F48();
  sub_2321FE488();
  sub_2322016E0();
  sub_2320F8274((uint64_t)v3);
  sub_232200F48();
  swift_bridgeObjectRelease();
  return v22;
}

unint64_t sub_232121B70()
{
  unint64_t result;

  result = qword_2541B0C10;
  if (!qword_2541B0C10)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2541B0C10);
  }
  return result;
}

uint64_t sub_232121BBC()
{
  return sub_2321FE464();
}

uint64_t sub_232121BE0()
{
  uint64_t v0;
  void *v1;

  sub_2320057B8(0, (unint64_t *)&qword_2541B57E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE45940], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_2321FF8E0();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_232210D40;
  v1 = (void *)sub_2321FE464();
  sub_23220117C();

  return v0;
}

uint64_t sub_232121C90(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  _QWORD *AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, _QWORD *);
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  os_log_type_t v29;
  void *v30;
  uint64_t AssociatedConformanceWitness;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  os_log_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  os_log_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v60 = a3;
  *(_QWORD *)&v62 = a2;
  AssociatedTypeWitness = (_QWORD *)swift_getAssociatedTypeWitness();
  v9 = *(AssociatedTypeWitness - 1);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v11 = (char *)&v50 - v10;
  v12 = sub_2321FE440();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_23220039C();
  v56 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_2321FE608();
  v54 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v63 = (uint64_t)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = a4;
  v53 = a5;
  sub_23212235C(v60, v63);
  sub_232200318();
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 16))(v15, v62, v12);
  v57 = v11;
  v58 = v9;
  v19 = *(void (**)(char *, uint64_t, _QWORD *))(v9 + 16);
  v60 = AssociatedTypeWitness;
  v19(v11, a1, AssociatedTypeWitness);
  *(_QWORD *)&v62 = v17;
  v20 = sub_232200390();
  v21 = sub_2322012FC();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v52 = swift_slowAlloc();
    v65 = v52;
    *(_DWORD *)v22 = 136315650;
    v51 = v20;
    v23 = sub_232201BF0();
    v64 = sub_232013174(v23, v24, &v65);
    sub_232201710();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2080;
    v25 = (void *)sub_2321FE3F8();
    v26 = sub_2321FE1B8();
    v28 = v27;

    v64 = sub_232013174(v26, v28, &v65);
    sub_232201710();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    *(_WORD *)(v22 + 22) = 2080;
    v29 = v21;
    v30 = v60;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v32 = v57;
    v33 = (*(uint64_t (**)(void *, uint64_t))(AssociatedConformanceWitness + 56))(v30, AssociatedConformanceWitness);
    v64 = sub_232013174(v33, v34, &v65);
    sub_232201710();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void *))(v58 + 8))(v32, v30);
    v35 = v51;
    _os_log_impl(&dword_231FFB000, v51, v29, "[%s]_<%s>: Emitting model for request: %s", (uint8_t *)v22, 0x20u);
    v36 = v52;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v36, -1, -1);
    MEMORY[0x2348FF468](v22, -1, -1);

  }
  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    (*(void (**)(char *, void *))(v58 + 8))(v57, v60);

  }
  (*(void (**)(_QWORD, uint64_t))(v56 + 8))(v62, v59);
  v37 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598];
  sub_2320057B8(0, &qword_2541B57D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE48110], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v38 = sub_2321FE7F4();
  v39 = *(_QWORD *)(v38 - 8);
  v40 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  v41 = swift_allocObject();
  v62 = xmmword_232210D40;
  *(_OWORD *)(v41 + 16) = xmmword_232210D40;
  v42 = (uint64_t *)(v41 + v40);
  sub_2320057B8(0, &qword_2541B57B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47D40], v37);
  v43 = v54;
  v44 = (*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = v62;
  v46 = v45 + v44;
  v47 = v63;
  v48 = v61;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v43 + 16))(v46, v63, v61);
  *v42 = v45;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v39 + 104))(v42, *MEMORY[0x24BE480E0], v38);
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v47, v48);
  return v41;
}

uint64_t sub_232122174()
{
  return sub_2321FE464();
}

uint64_t sub_232122198()
{
  uint64_t v0;
  void *v1;

  sub_2320057B8(0, (unint64_t *)&qword_2541B57E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE45940], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_2321FF8E0();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_232210D40;
  v1 = (void *)sub_2321FE464();
  sub_23220117C();

  return v0;
}

uint64_t SummaryModelGenerationRequest.hkTypeSharingAuthorizationIdentifiers.getter(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  void *v6;

  if (((*(uint64_t (**)(void))(a2 + 40))() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  v4 = sub_232201ADC();
  swift_bridgeObjectRelease();
  if ((v4 & 1) != 0)
  {
LABEL_5:
    sub_2320057B8(0, (unint64_t *)&qword_2541B57E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE45940], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    sub_2321FF8E0();
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_232210D40;
    v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
    sub_23220117C();

    return v5;
  }
  return MEMORY[0x24BEE4AF8];
}

id sub_23212235C@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t AssociatedConformanceWitness;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  id result;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[2];
  id v19;
  uint64_t v20;

  v18[1] = a2;
  v19 = a1;
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, (unint64_t *)&qword_2541AF178, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v18 - v4;
  sub_2320057B8(0, &qword_2541AF180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], v2);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v18 - v7;
  v9 = sub_2321FE6D4();
  MEMORY[0x24BDAC7A8](v9);
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v11 = *(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32);
  v12 = swift_checkMetadataState();
  v11(v12, AssociatedConformanceWitness);
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 48))(v12, AssociatedConformanceWitness);
  sub_232027434();
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_232210D20;
  *(_QWORD *)(v13 + 32) = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24))(v12, AssociatedConformanceWitness);
  v20 = v13;
  sub_232201050();
  result = objc_msgSend(v19, sel_data);
  if (result)
  {
    v15 = result;
    sub_2321FDAD4();

    sub_2321FE5D8();
    sub_2321FDE1C();
    v16 = sub_2321FDE28();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
    sub_2321FDCFC();
    v17 = sub_2321FDD08();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v5, 0, 1, v17);
    return (id)sub_2321FE5A8();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t static SummaryModelGenerating.logPrefix(_:_:)()
{
  void *v0;

  sub_23220189C();
  swift_bridgeObjectRelease();
  sub_232201BF0();
  sub_232200F48();
  swift_bridgeObjectRelease();
  sub_232200F48();
  v0 = (void *)sub_2321FE3F8();
  sub_2321FE1B8();

  sub_232200F48();
  swift_bridgeObjectRelease();
  sub_232200F48();
  sub_232200F48();
  swift_bridgeObjectRelease();
  return 91;
}

uint64_t sub_232122720()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_232122778(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  if (*(_DWORD *)(v6 + 84))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  if (*(_DWORD *)(v6 + 80) > 7u || (v7 & 0x100000) != 0 || v8 > 0x18)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v7 + 16) & ~(unint64_t)v7));
    swift_retain();
  }
  else if ((*(unsigned int (**)(uint64_t *, uint64_t, _QWORD))(v6 + 48))(a2, 1, *(_QWORD *)(a3 + 16)))
  {
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

uint64_t sub_232122850(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return result;
}

void *sub_2321228AC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  size_t v7;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84))
      v7 = *(_QWORD *)(v6 + 64);
    else
      v7 = *(_QWORD *)(v6 + 64) + 1;
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_232122944(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
  return a1;
}

void *sub_232122A24(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  size_t v7;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84))
      v7 = *(_QWORD *)(v6 + 64);
    else
      v7 = *(_QWORD *)(v6 + 64) + 1;
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_232122ABC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
  return a1;
}

uint64_t sub_232122B9C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  unsigned int v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = v5 - 1;
  if (!v5)
    v6 = 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v7;
  if (!a2)
    return 0;
  v8 = a2 - v6;
  if (a2 > v6)
  {
    v9 = 8 * v7;
    if (v7 > 3)
      goto LABEL_8;
    v11 = ((v8 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v7);
      if (v10)
        goto LABEL_15;
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2)
          goto LABEL_24;
LABEL_8:
        v10 = *(unsigned __int8 *)(a1 + v7);
        if (!*(_BYTE *)(a1 + v7))
          goto LABEL_24;
LABEL_15:
        v12 = (v10 - 1) << v9;
        if (v7 > 3)
          v12 = 0;
        if ((_DWORD)v7)
        {
          if (v7 <= 3)
            v13 = v7;
          else
            v13 = 4;
          __asm { BR              X12 }
        }
        return v6 + v12 + 1;
      }
      v10 = *(unsigned __int16 *)(a1 + v7);
      if (*(_WORD *)(a1 + v7))
        goto LABEL_15;
    }
  }
LABEL_24:
  if (v5 < 2)
    return 0;
  v14 = (*(uint64_t (**)(void))(v4 + 48))();
  if (v14 >= 2)
    return v14 - 1;
  else
    return 0;
}

void sub_232122CDC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  size_t v10;
  BOOL v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (v8)
  {
    v10 = *(_QWORD *)(v7 + 64);
  }
  else
  {
    v9 = 0;
    v10 = *(_QWORD *)(v7 + 64) + 1;
  }
  v11 = a3 >= v9;
  v12 = a3 - v9;
  if (v12 != 0 && v11)
  {
    if (v10 > 3)
    {
      v6 = 1u;
      if (v9 < a2)
        goto LABEL_14;
      goto LABEL_21;
    }
    v13 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
    if (HIWORD(v13))
    {
      v6 = 4u;
      if (v9 < a2)
      {
LABEL_14:
        v14 = ~v9 + a2;
        if (v10 < 4)
        {
          if ((_DWORD)v10)
          {
            v15 = v14 & ~(-1 << (8 * v10));
            bzero(a1, v10);
            if ((_DWORD)v10 == 3)
            {
              *a1 = v15;
              *((_BYTE *)a1 + 2) = BYTE2(v15);
            }
            else if ((_DWORD)v10 == 2)
            {
              *a1 = v15;
            }
            else
            {
              *(_BYTE *)a1 = v15;
            }
          }
        }
        else
        {
          bzero(a1, v10);
          *(_DWORD *)a1 = v14;
        }
        __asm { BR              X10 }
      }
LABEL_21:
      __asm { BR              X11 }
    }
    if (v13 >= 0x100)
      v6 = 2;
    else
      v6 = v13 > 1;
  }
  if (v9 < a2)
    goto LABEL_14;
  goto LABEL_21;
}

void sub_232122E84()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_232122E8C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

uint64_t sub_232122EB0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 48))(a1, 1);
}

uint64_t sub_232122EC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 56))(a1, a2, 1);
}

uint64_t type metadata accessor for SummaryModelQueryOutput(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_232043E5C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SummaryModelQueryOutput);
}

uint64_t sub_232122EF8()
{
  return sub_2321FE464();
}

uint64_t sub_232122F1C()
{
  uint64_t v0;
  void *v1;

  sub_2320057B8(0, (unint64_t *)&qword_2541B57E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE45940], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_2321FF8E0();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_232210D40;
  v1 = (void *)sub_2321FE464();
  sub_23220117C();

  return v0;
}

uint64_t sub_232122FCC()
{
  return sub_2321FE464();
}

uint64_t sub_232123018@<X0>(int a1@<W1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  void (*v36)(char *, uint64_t);
  unsigned int (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v40;
  char *v41;
  char *v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  uint64_t v45;
  char *v46;
  void (*v47)(char *, char *, uint64_t);
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  int v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;

  v4 = v3;
  v57 = a3;
  v58 = a2;
  v54 = a1;
  v5 = sub_2321FDDC8();
  v6 = *(_QWORD *)(v5 - 8);
  v50 = v5;
  v51 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v48 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23202D234(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v53 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v49 = (char *)&v47 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v47 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v47 - v16;
  v18 = sub_2321FDC6C();
  v19 = *(_QWORD **)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v55 = (char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v52 = (char *)&v47 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v47 - v25;
  v27 = MEMORY[0x24BDAC7A8](v24);
  v29 = (char *)&v47 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v56 = (char *)&v47 - v30;
  v31 = sub_23220021C();
  v33 = v32;
  if (v31 == sub_23220021C() && v33 == v34)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v35 = sub_232201ADC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v35 & 1) == 0)
    {
LABEL_7:
      v38 = sub_2321FD8B8();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v57, v4, v38);
    }
  }
  sub_2321FD894();
  sub_2321FDBC4();
  v36 = (void (*)(char *, uint64_t))v19[1];
  v36(v29, v18);
  v37 = (unsigned int (*)(char *, uint64_t, uint64_t))v19[6];
  if (v37(v17, 1, v18) == 1)
  {
    sub_23204ADF0((uint64_t)v17);
    goto LABEL_7;
  }
  v47 = (void (*)(char *, char *, uint64_t))v19[4];
  v47(v56, v17, v18);
  sub_2321FD870();
  if ((v54 & 1) == 0)
    goto LABEL_11;
  sub_2321FDBC4();
  if (v37(v15, 1, v18) == 1)
  {
    sub_23204ADF0((uint64_t)v15);
LABEL_11:
    sub_2321FD870();
    v40 = (uint64_t)v53;
    sub_2321FDBC4();
    v41 = v29;
    goto LABEL_12;
  }
  v42 = v52;
  v47(v52, v15, v18);
  sub_232123494();
  if ((sub_232200E64() & 1) == 0)
  {
    v45 = v50;
    v46 = v48;
    (*(void (**)(char *, _QWORD, uint64_t))(v51 + 104))(v48, *MEMORY[0x24BDCF1E8], v50);
    v40 = (uint64_t)v49;
    sub_2321FDD80();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v46, v45);
    v41 = v52;
LABEL_12:
    v36(v41, v18);
    if (v37((char *)v40, 1, v18) == 1)
    {
      sub_23204ADF0(v40);
    }
    else
    {
      v36(v26, v18);
      v47(v26, (char *)v40, v18);
    }
    goto LABEL_17;
  }
  v36(v42, v18);
LABEL_17:
  v43 = (void (*)(char *, char *, uint64_t))v19[2];
  v44 = v56;
  v43(v29, v56, v18);
  v43(v55, v26, v18);
  sub_2321FD87C();
  v36(v26, v18);
  return ((uint64_t (*)(char *, uint64_t))v36)(v44, v18);
}

unint64_t sub_232123494()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541AF168;
  if (!qword_2541AF168)
  {
    v1 = sub_2321FDC6C();
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDCE958], v1);
    atomic_store(result, (unint64_t *)&qword_2541AF168);
  }
  return result;
}

id sub_2321234DC(void *a1, NSObject *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  void *v67;
  uint64_t v68;
  void *v69;
  void *v70;
  id result;
  void *v72;
  uint64_t v73;
  id v74;
  uint8_t *v75;
  char *v76;
  NSObject *v77;
  uint64_t v78;
  id v79;
  NSObject *v80;
  os_log_type_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  id *v85;
  id v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  NSObject *v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  NSObject *v95;
  os_log_type_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  id v100;
  NSObject *v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  os_log_t v106;
  uint64_t v107;
  void (*v108)(os_log_t, os_log_t);
  os_log_t v109;
  NSObject *v110;
  uint64_t isa_low;
  uint64_t v112;
  void (*v113)(uint64_t, char *, uint64_t);
  uint64_t v114;
  uint64_t v115;
  void *v116;
  uint64_t v117;
  NSObject *v118;
  char *v119;
  char *v120;
  id v121;
  uint8_t *v122;
  id *v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  int v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  id v135;
  NSObject *v136;
  os_log_type_t v137;
  int v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  id v143;
  uint64_t v144;
  unint64_t v145;
  unint64_t v146;
  uint64_t v147;
  unint64_t v148;
  os_log_t v149;
  uint64_t v150;
  void (*v151)(char *, NSObject *);
  uint64_t *v152;
  os_log_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  id v158;
  NSObject *v159;
  os_log_type_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  id v165;
  uint64_t v166;
  unint64_t v167;
  unint64_t v168;
  uint64_t v169;
  char *v170;
  int v171;
  uint64_t v172;
  id v173;
  char *v174;
  uint64_t v175;
  id v176;
  uint64_t v177;
  id v178;
  NSObject *v179;
  os_log_type_t v180;
  int v181;
  _BOOL4 v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  unint64_t v187;
  id v188;
  uint64_t v189;
  unint64_t v190;
  unint64_t v191;
  char *v192;
  NSObject *v193;
  void *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  void (*v199)(char *, char *, uint64_t);
  id v200;
  id v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  void *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  char *v213;
  int v214;
  char *v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  void (*v220)(char *, char *, uint64_t);
  uint64_t v221;
  uint64_t v222;
  char *v223;
  char *v224;
  uint64_t v225;
  uint8_t *v226;
  NSObject *v227;
  uint64_t v228;
  NSObject *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  Class isa;
  NSObject *v234;
  char *v235;
  void *v236;
  char *v237;
  void *v238;
  uint8_t *v239;
  os_log_t v240;
  id *v241;
  uint64_t v242;
  NSObject *v243;
  id *v244;
  uint64_t v245;
  uint64_t v246;
  id *v247;
  uint64_t v248;

  v214 = a8;
  v207 = a7;
  v208 = a6;
  v236 = a5;
  v244 = (id *)a3;
  v227 = a2;
  sub_2320002B4(0, &qword_2541B6AC8, (void (*)(uint64_t))MEMORY[0x24BE43C80]);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v204 - v10;
  v12 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v241 = (id *)((char *)&v204 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v204 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15);
  v230 = (uint64_t)&v204 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v228 = (uint64_t)&v204 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v222 = (uint64_t)&v204 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v221 = (uint64_t)&v204 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v210 = (uint64_t)&v204 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v209 = (uint64_t)&v204 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v211 = (uint64_t)&v204 - v31;
  MEMORY[0x24BDAC7A8](v30);
  v217 = (uint64_t)&v204 - v32;
  v33 = sub_23220039C();
  v242 = *(_QWORD *)(v33 - 8);
  v243 = v33;
  v34 = MEMORY[0x24BDAC7A8](v33);
  v240 = (os_log_t)((char *)&v204 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  v36 = MEMORY[0x24BDAC7A8](v34);
  v229 = ((char *)&v204 - v37);
  v38 = MEMORY[0x24BDAC7A8](v36);
  v223 = (char *)&v204 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  v216 = (char *)&v204 - v41;
  MEMORY[0x24BDAC7A8](v40);
  v215 = (char *)&v204 - v42;
  v219 = sub_2321FF2B0();
  v218 = *(_QWORD *)(v219 - 8);
  v43 = MEMORY[0x24BDAC7A8](v219);
  v213 = (char *)&v204 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v43);
  v220 = (void (*)(char *, char *, uint64_t))((char *)&v204 - v45);
  v46 = (void (*)(uint64_t))MEMORY[0x24BDCB878];
  sub_2320002B4(0, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  MEMORY[0x24BDAC7A8](v47);
  v226 = (uint8_t *)&v204 - v48;
  v232 = sub_2321FD8B8();
  v225 = *(_QWORD *)(v232 - 8);
  v49 = MEMORY[0x24BDAC7A8](v232);
  v212 = (char *)&v204 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v49);
  v237 = (char *)&v204 - v51;
  sub_232124BB4();
  MEMORY[0x24BDAC7A8](v52);
  v235 = (char *)&v204 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232025308(0, &qword_2541B2310, v46, type metadata accessor for HKTimeScope);
  isa = v54[-1].isa;
  v234 = v54;
  v55 = MEMORY[0x24BDAC7A8](v54);
  v224 = (char *)&v204 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v55);
  v231 = (uint64_t)&v204 - v57;
  v58 = sub_2321FDE28();
  MEMORY[0x24BDAC7A8](v58);
  sub_2320002B4(0, (unint64_t *)&qword_2541AF178, (void (*)(uint64_t))MEMORY[0x24BDCEEA8]);
  MEMORY[0x24BDAC7A8](v59);
  v60 = sub_2321FDD14();
  v61 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v63 = (char *)&v204 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_2321FDDD4();
  v65 = *(_QWORD *)(v64 - 8);
  v66 = MEMORY[0x24BDAC7A8](v64);
  v239 = (uint8_t *)&v204 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!v67)
  {
    sub_232200318();
    v78 = (uint64_t)v244;
    sub_23200054C((uint64_t)v244, (uint64_t)v17, type metadata accessor for SnidgetFeedItemGeneratorRequest);
    sub_23200054C(v78, (uint64_t)v241, type metadata accessor for SnidgetFeedItemGeneratorRequest);
    v79 = a1;
    v80 = sub_232200390();
    v81 = sub_2322012FC();
    if (os_log_type_enabled(v80, v81))
    {
      v82 = swift_slowAlloc();
      v244 = (id *)swift_slowAlloc();
      v247 = v244;
      *(_DWORD *)v82 = 136315394;
      v83 = sub_2320851F8((uint64_t)v79, v17[8]);
      v245 = sub_232013174(v83, v84, (uint64_t *)&v247);
      sub_232201710();

      swift_bridgeObjectRelease();
      sub_232002CEC((uint64_t)v17, type metadata accessor for SnidgetFeedItemGeneratorRequest);
      *(_WORD *)(v82 + 12) = 2080;
      v85 = v241;
      v86 = objc_msgSend(v241[2], sel_sensitiveLoggingIdentifier);
      v87 = sub_232200EC4();
      v89 = v88;

      v245 = sub_232013174(v87, v89, (uint64_t *)&v247);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC((uint64_t)v85, type metadata accessor for SnidgetFeedItemGeneratorRequest);
      _os_log_impl(&dword_231FFB000, v80, v81, "%s: %s HKCodableChartSharableModel model was nil", (uint8_t *)v82, 0x16u);
      v90 = (uint64_t)v244;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v90, -1, -1);
      MEMORY[0x2348FF468](v82, -1, -1);
    }
    else
    {

      sub_232002CEC((uint64_t)v17, type metadata accessor for SnidgetFeedItemGeneratorRequest);
      sub_232002CEC((uint64_t)v241, type metadata accessor for SnidgetFeedItemGeneratorRequest);
    }

    v108 = *(void (**)(os_log_t, os_log_t))(v242 + 8);
    v109 = v240;
    goto LABEL_18;
  }
  v205 = v11;
  v240 = v66;
  v69 = v67;
  v70 = (void *)objc_opt_self();
  v206 = v69;
  v241 = v69;
  v238 = a1;
  result = objc_msgSend(v70, sel_sharedInstanceForHealthStore_, a1);
  if (result)
  {
    v72 = result;
    v73 = (uint64_t)v244;
    v74 = objc_msgSend(result, sel_displayTypeForObjectType_, v244[2]);

    if (v74)
    {
      v230 = v65;
      (*(void (**)(char *, _QWORD, uint64_t))(v61 + 104))(v63, *MEMORY[0x24BDCEF70], v60);
      v75 = v239;
      sub_2321FDD20();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v63, v60);
      sub_2321FDD8C();
      sub_2321FDD98();
      sub_2321FDDB0();
      sub_2321FDDBC();
      v76 = v235;
      sub_232124F1C(v238, v73, v74, (uint64_t)v236, (uint64_t)v75, v235);
      v77 = v234;
      if ((*((unsigned int (**)(char *, uint64_t, NSObject *))isa + 6))(v76, 1, v234) == 1)
      {
        (*(void (**)(uint8_t *, os_log_t))(v230 + 8))(v75, v240);

        sub_232002CEC((uint64_t)v76, (uint64_t (*)(_QWORD))sub_232124BB4);
        return 0;
      }
      v236 = v74;
      v110 = v77;
      isa_low = SLODWORD(v77[6].isa);
      v112 = v225;
      v113 = *(void (**)(uint64_t, char *, uint64_t))(v225 + 32);
      v114 = v231;
      v115 = v232;
      v113(v231, v76, v232);
      v116 = *(void **)&v76[isa_low];
      *(_QWORD *)(v114 + isa_low) = v116;
      v117 = SLODWORD(v110[6].isa);
      v118 = *(NSObject **)(v112 + 16);
      v119 = v224;
      ((void (*)(char *, uint64_t, uint64_t))v118)(v224, v114, v115);
      *(_QWORD *)&v119[v117] = v116;
      v235 = *(char **)(v112 + 8);
      ((void (*)(char *, uint64_t))v235)(v119, v115);
      ((void (*)(char *, uint64_t, uint64_t))v118)(v119, v114, v115);
      v120 = v237;
      v113((uint64_t)v237, v119, v115);
      type metadata accessor for ChartModelParsing();
      v121 = v244[2];
      v122 = v226;
      v234 = v118;
      ((void (*)(uint8_t *, char *, uint64_t))v118)(v226, v120, v115);
      (*(void (**)(uint8_t *, _QWORD, uint64_t, uint64_t))(v112 + 56))(v122, 0, 1, v115);
      v123 = v241;
      v124 = v238;
      v125 = sub_23207E510(v238, v121, v116, v122, v206, v227, v75);
      v127 = v126;
      v241 = v123;

      sub_23200040C((uint64_t)v122, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
      if (v125)
      {
        v128 = *(_QWORD *)(v125 + 16);
        if (v128)
        {
          v129 = sub_232124D18(v127);
          if (v129 != 3)
          {
            v171 = v129;
            sub_232127510(v129, v125, v236, (uint64_t)v116, v227);
            v172 = (uint64_t)v244;
            v173 = v244[2];
            LODWORD(v229) = v171;
            sub_232125E88(v173, v125, v171, v207, v208, v220);
            v174 = v215;
            sub_232200318();
            sub_23200054C(v172, v217, type metadata accessor for SnidgetFeedItemGeneratorRequest);
            v175 = v211;
            sub_23200054C(v172, v211, type metadata accessor for SnidgetFeedItemGeneratorRequest);
            v176 = v124;
            swift_bridgeObjectRetain_n();
            v177 = v125;
            v178 = v176;
            v179 = sub_232200390();
            v180 = sub_2322012FC();
            v181 = v180;
            v182 = os_log_type_enabled(v179, v180);
            isa = (Class)v177;
            if (v182)
            {
              v183 = swift_slowAlloc();
              LODWORD(v228) = v181;
              v184 = v183;
              v238 = (void *)swift_slowAlloc();
              v247 = (id *)v238;
              *(_DWORD *)v184 = 136315650;
              v227 = v179;
              v185 = v217;
              v186 = sub_2320851F8((uint64_t)v178, *(unsigned __int8 *)(v217 + 8));
              v245 = sub_232013174(v186, v187, (uint64_t *)&v247);
              sub_232201710();

              swift_bridgeObjectRelease();
              sub_232002CEC(v185, type metadata accessor for SnidgetFeedItemGeneratorRequest);
              *(_WORD *)(v184 + 12) = 2080;
              v188 = objc_msgSend(*(id *)(v175 + 16), sel_sensitiveLoggingIdentifier);
              v189 = sub_232200EC4();
              v191 = v190;

              v245 = sub_232013174(v189, v191, (uint64_t *)&v247);
              v192 = v237;
              sub_232201710();
              swift_bridgeObjectRelease();
              sub_232002CEC(v175, type metadata accessor for SnidgetFeedItemGeneratorRequest);
              *(_WORD *)(v184 + 22) = 2048;
              swift_bridgeObjectRelease();
              v245 = v128;
              sub_232201710();
              swift_bridgeObjectRelease();
              v193 = v227;
              _os_log_impl(&dword_231FFB000, v227, (os_log_type_t)v228, "%s: Creating chart view model for %s with %ld points", (uint8_t *)v184, 0x20u);
              v194 = v238;
              swift_arrayDestroy();
              MEMORY[0x2348FF468](v194, -1, -1);
              MEMORY[0x2348FF468](v184, -1, -1);

              (*(void (**)(char *, NSObject *))(v242 + 8))(v215, v243);
              v195 = v219;
              v196 = v218;
            }
            else
            {

              swift_bridgeObjectRelease();
              sub_232002CEC(v217, type metadata accessor for SnidgetFeedItemGeneratorRequest);
              sub_232002CEC(v175, type metadata accessor for SnidgetFeedItemGeneratorRequest);

              swift_bridgeObjectRelease();
              (*(void (**)(char *, NSObject *))(v242 + 8))(v174, v243);
              v195 = v219;
              v196 = v218;
              v192 = v237;
            }
            v198 = v232;
            ((void (*)(char *, char *, uint64_t))v234)(v212, v192, v232);
            v199 = v220;
            (*(void (**)(char *, _QWORD, uint64_t))(v196 + 16))(v213, v220, v195);
            v200 = v244[2];
            v201 = objc_msgSend(v200, sel_description);
            sub_232200EC4();

            v202 = v205;
            sub_2321FF2BC();
            v203 = sub_2321FF2C8();
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v203 - 8) + 56))(v202, 0, 1, v203);
            sub_2321FF2D4();
            swift_allocObject();
            v197 = sub_2321FF28C();

            (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v218 + 8))(v199, v219);
            ((void (*)(char *, uint64_t))v235)(v237, v198);
            sub_2321274B4(v231);
            (*(void (**)(uint8_t *, os_log_t))(v230 + 8))(v239, v240);
            return (id)v197;
          }
          v130 = v125;
          v131 = v216;
          sub_232200318();
          v132 = (uint64_t)v244;
          v133 = v209;
          sub_23200054C((uint64_t)v244, v209, type metadata accessor for SnidgetFeedItemGeneratorRequest);
          v134 = v210;
          sub_23200054C(v132, v210, type metadata accessor for SnidgetFeedItemGeneratorRequest);
          v135 = v124;
          swift_bridgeObjectRetain();
          v136 = sub_232200390();
          v137 = sub_2322012E4();
          v138 = v137;
          if (!os_log_type_enabled(v136, v137))
          {
            swift_bridgeObjectRelease_n();

            sub_232002CEC(v134, type metadata accessor for SnidgetFeedItemGeneratorRequest);
            sub_232002CEC(v133, type metadata accessor for SnidgetFeedItemGeneratorRequest);

            v151 = *(void (**)(char *, NSObject *))(v242 + 8);
            v170 = v131;
            goto LABEL_27;
          }
          v139 = swift_slowAlloc();
          LODWORD(v238) = v138;
          v140 = v139;
          v244 = (id *)swift_slowAlloc();
          v247 = v244;
          *(_DWORD *)v140 = 136315650;
          isa = (Class)v130;
          v141 = sub_2320851F8((uint64_t)v135, *(unsigned __int8 *)(v133 + 8));
          v245 = sub_232013174(v141, v142, (uint64_t *)&v247);
          v234 = v136;
          sub_232201710();

          swift_bridgeObjectRelease();
          sub_232002CEC(v133, type metadata accessor for SnidgetFeedItemGeneratorRequest);
          *(_WORD *)(v140 + 12) = 2080;
          v143 = objc_msgSend(*(id *)(v134 + 16), sel_sensitiveLoggingIdentifier);
          v144 = sub_232200EC4();
          v146 = v145;

          v245 = sub_232013174(v144, v146, (uint64_t *)&v247);
          sub_232201710();
          swift_bridgeObjectRelease();
          sub_232002CEC(v134, type metadata accessor for SnidgetFeedItemGeneratorRequest);
          *(_WORD *)(v140 + 22) = 2080;
          v245 = v127;
          type metadata accessor for HKDisplayTypeChartStyle(0);
          v147 = sub_232200F00();
          v245 = sub_232013174(v147, v148, (uint64_t *)&v247);
          sub_232201710();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          v149 = v234;
          _os_log_impl(&dword_231FFB000, v234, (os_log_type_t)v238, "%s: %s unsupported chart style requested %s", (uint8_t *)v140, 0x20u);
          v150 = (uint64_t)v244;
          swift_arrayDestroy();
          MEMORY[0x2348FF468](v150, -1, -1);
          MEMORY[0x2348FF468](v140, -1, -1);

          v151 = *(void (**)(char *, NSObject *))(v242 + 8);
          v152 = &v246;
LABEL_22:
          v170 = (char *)*(v152 - 32);
LABEL_27:
          v151(v170, v243);
          goto LABEL_28;
        }
        swift_bridgeObjectRelease();
      }
      v154 = v223;
      sub_232200318();
      v155 = (uint64_t)v244;
      v156 = v221;
      sub_23200054C((uint64_t)v244, v221, type metadata accessor for SnidgetFeedItemGeneratorRequest);
      v157 = v222;
      sub_23200054C(v155, v222, type metadata accessor for SnidgetFeedItemGeneratorRequest);
      v158 = v124;
      v159 = sub_232200390();
      v160 = sub_2322012FC();
      if (!os_log_type_enabled(v159, v160))
      {

        sub_232002CEC(v157, type metadata accessor for SnidgetFeedItemGeneratorRequest);
        sub_232002CEC(v156, type metadata accessor for SnidgetFeedItemGeneratorRequest);

        (*(void (**)(char *, NSObject *))(v242 + 8))(v154, v243);
LABEL_28:
        ((void (*)(char *, uint64_t))v235)(v237, v232);
        sub_2321274B4(v231);
        v108 = *(void (**)(os_log_t, os_log_t))(v230 + 8);
        v109 = (os_log_t)v239;
        v153 = v240;
        goto LABEL_29;
      }
      v161 = swift_slowAlloc();
      v244 = (id *)swift_slowAlloc();
      v247 = v244;
      *(_DWORD *)v161 = 136315394;
      v162 = sub_2320851F8((uint64_t)v158, *(unsigned __int8 *)(v156 + 8));
      v245 = sub_232013174(v162, v163, (uint64_t *)&v247);
      sub_232201710();

      swift_bridgeObjectRelease();
      sub_232002CEC(v156, type metadata accessor for SnidgetFeedItemGeneratorRequest);
      *(_WORD *)(v161 + 12) = 2080;
      v164 = v157;
      v165 = objc_msgSend(*(id *)(v157 + 16), sel_sensitiveLoggingIdentifier);
      v166 = sub_232200EC4();
      v168 = v167;

      v245 = sub_232013174(v166, v168, (uint64_t *)&v247);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v164, type metadata accessor for SnidgetFeedItemGeneratorRequest);
      _os_log_impl(&dword_231FFB000, v159, v160, "%s: %s Chart model didn't have any chart points for the expected time range", (uint8_t *)v161, 0x16u);
      v169 = (uint64_t)v244;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v169, -1, -1);
      MEMORY[0x2348FF468](v161, -1, -1);

      v151 = *(void (**)(char *, NSObject *))(v242 + 8);
      v152 = &v248;
      goto LABEL_22;
    }
    v91 = v229;
    sub_232200318();
    v92 = v228;
    sub_23200054C(v73, v228, type metadata accessor for SnidgetFeedItemGeneratorRequest);
    v93 = v230;
    sub_23200054C(v73, v230, type metadata accessor for SnidgetFeedItemGeneratorRequest);
    v94 = v238;
    v95 = sub_232200390();
    v96 = sub_2322012E4();
    if (os_log_type_enabled(v95, v96))
    {
      v97 = swift_slowAlloc();
      v244 = (id *)swift_slowAlloc();
      v247 = v244;
      *(_DWORD *)v97 = 136315394;
      v98 = sub_2320851F8((uint64_t)v94, *(unsigned __int8 *)(v92 + 8));
      v245 = sub_232013174(v98, v99, (uint64_t *)&v247);
      v240 = v95;
      sub_232201710();

      swift_bridgeObjectRelease();
      sub_232002CEC(v92, type metadata accessor for SnidgetFeedItemGeneratorRequest);
      *(_WORD *)(v97 + 12) = 2080;
      v100 = objc_msgSend(*(id *)(v93 + 16), sel_sensitiveLoggingIdentifier);
      v101 = v91;
      v102 = v93;
      v103 = sub_232200EC4();
      v105 = v104;

      v245 = sub_232013174(v103, v105, (uint64_t *)&v247);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v102, type metadata accessor for SnidgetFeedItemGeneratorRequest);
      v106 = v240;
      _os_log_impl(&dword_231FFB000, v240, v96, "%s: %s Unable to find displayType", (uint8_t *)v97, 0x16u);
      v107 = (uint64_t)v244;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v107, -1, -1);
      MEMORY[0x2348FF468](v97, -1, -1);

      v108 = *(void (**)(os_log_t, os_log_t))(v242 + 8);
      v109 = v101;
    }
    else
    {

      sub_232002CEC(v92, type metadata accessor for SnidgetFeedItemGeneratorRequest);
      sub_232002CEC(v93, type metadata accessor for SnidgetFeedItemGeneratorRequest);

      v108 = *(void (**)(os_log_t, os_log_t))(v242 + 8);
      v109 = v91;
    }
LABEL_18:
    v153 = v243;
LABEL_29:
    v108(v109, v153);
    return 0;
  }
  __break(1u);
  return result;
}

void sub_232124BB4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2318)
  {
    sub_232025308(255, &qword_2541B2310, (void (*)(uint64_t))MEMORY[0x24BDCB878], type metadata accessor for HKTimeScope);
    v0 = sub_2322016F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2318);
  }
}

uint64_t sub_232124C28(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v12 = MEMORY[0x24BEE4AF8];
    sub_2320137F8(0, v1, 0);
    v2 = v12;
    v4 = *(_QWORD *)(sub_2321FEE48() - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      sub_2321FEE30();
      v8 = v7;
      v10 = *(_QWORD *)(v12 + 16);
      v9 = *(_QWORD *)(v12 + 24);
      if (v10 >= v9 >> 1)
        sub_2320137F8(v9 > 1, v10 + 1, 1);
      *(_QWORD *)(v12 + 16) = v10 + 1;
      *(_QWORD *)(v12 + 8 * v10 + 32) = v8;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_232124D18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v2 = sub_23220039C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a1 - 1;
  if ((unint64_t)(a1 - 1) < 9 && ((0x10Du >> v6) & 1) != 0)
    return byte_232216940[v6];
  sub_232200318();
  v7 = sub_232200390();
  v8 = sub_2322012FC();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v15 = v10;
    *(_DWORD *)v9 = 136315394;
    v14 = sub_232013174(0xD000000000000017, 0x8000000232207B70, &v15);
    sub_232201710();
    *(_WORD *)(v9 + 12) = 2080;
    v14 = a1;
    type metadata accessor for HKDisplayTypeChartStyle(0);
    v11 = sub_232200F00();
    v14 = sub_232013174(v11, v12, &v15);
    sub_232201710();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_231FFB000, v7, v8, "%s: %s Unsupported chart style", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v10, -1, -1);
    MEMORY[0x2348FF468](v9, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return 3;
}

uint64_t sub_232124F1C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  void *v44;
  id v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  id v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  id v55;
  id v56;
  void (*v57)(char *, char *, uint64_t);
  int v58;
  void *v59;
  uint64_t v60;
  unsigned __int8 *v61;
  char v62;
  uint64_t v63;
  char v64;
  id v65;
  id v66;
  uint64_t v67;
  id v68;
  id v69;
  id v70;
  void *v71;
  id v72;
  char v73;
  id v74;
  char v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  NSObject *v80;
  os_log_type_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  id v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  void *v98;
  char *v99;
  void *v100;
  id v101;
  id v102;
  char v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  char *v107;
  id v108;
  uint64_t v109;
  void (*v110)(char *, char *, uint64_t);
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  id v117;
  void *v118;
  char *v119;
  uint64_t v120;
  id v121;
  NSObject *v122;
  os_log_type_t v123;
  uint64_t v124;
  void *v125;
  uint64_t v126;
  unint64_t v127;
  id v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  unint64_t v132;
  void (*v133)(id, uint64_t);
  id v134;
  uint64_t v135;
  char v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  char v141;
  void (*v142)(char *, uint64_t);
  uint64_t v143;
  void (*v144)(char *, uint64_t);
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  char *v154;
  uint64_t v155;
  id v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  char *v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  id v171;
  uint64_t v172;
  id v173[3];

  v158 = a4;
  v159 = a5;
  v156 = a3;
  v170 = a6;
  v171 = a1;
  v173[1] = *(id *)MEMORY[0x24BDAC8D0];
  v7 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (id *)((char *)&v149 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v149 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v162 = (uint64_t)&v149 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v161 = (uint64_t)&v149 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v167 = (char *)&v149 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v155 = (uint64_t)&v149 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v164 = (char *)&v149 - v22;
  v23 = sub_23220039C();
  v168 = *(_QWORD *)(v23 - 8);
  v169 = v23;
  v24 = MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v149 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v24);
  v163 = (char *)&v149 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v165 = (char *)&v149 - v29;
  sub_2320002B4(0, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  MEMORY[0x24BDAC7A8](v30);
  v160 = (char *)&v149 - v31;
  v166 = sub_2321FD8B8();
  v157 = *(_QWORD *)(v166 - 8);
  v32 = MEMORY[0x24BDAC7A8](v166);
  v154 = (char *)&v149 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v32);
  v153 = (char *)&v149 - v34;
  sub_2320002B4(0, &qword_2541B2AD0, (void (*)(uint64_t))MEMORY[0x24BE4B8C8]);
  MEMORY[0x24BDAC7A8](v35);
  v37 = (char *)&v149 - v36;
  v38 = sub_2322000A8();
  v39 = *(_QWORD *)(v38 - 8);
  v40 = MEMORY[0x24BDAC7A8](v38);
  v152 = (char *)&v149 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v40);
  v43 = (char *)&v149 - v42;
  v44 = *(void **)(a2 + 16);
  sub_2322011A0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38) == 1)
  {
    sub_23200040C((uint64_t)v37, &qword_2541B2AD0, (void (*)(uint64_t))MEMORY[0x24BE4B8C8]);
    sub_232200318();
    sub_23200054C(a2, (uint64_t)v13, type metadata accessor for SnidgetFeedItemGeneratorRequest);
    sub_23200054C(a2, (uint64_t)v10, type metadata accessor for SnidgetFeedItemGeneratorRequest);
    v45 = v171;
    v46 = sub_232200390();
    v47 = sub_2322012FC();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = swift_slowAlloc();
      v171 = (id)swift_slowAlloc();
      v173[0] = v171;
      *(_DWORD *)v48 = 136315394;
      v49 = sub_2320851F8((uint64_t)v45, v13[8]);
      v172 = sub_232013174(v49, v50, (uint64_t *)v173);
      sub_232201710();

      swift_bridgeObjectRelease();
      sub_232002CEC((uint64_t)v13, type metadata accessor for SnidgetFeedItemGeneratorRequest);
      *(_WORD *)(v48 + 12) = 2080;
      v51 = objc_msgSend(v10[2], sel_sensitiveLoggingIdentifier);
      v52 = sub_232200EC4();
      v54 = v53;

      v172 = sub_232013174(v52, v54, (uint64_t *)v173);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC((uint64_t)v10, type metadata accessor for SnidgetFeedItemGeneratorRequest);
      _os_log_impl(&dword_231FFB000, v46, v47, "%s: %s does not have a swift chart diagram configuration.", (uint8_t *)v48, 0x16u);
      v55 = v171;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v55, -1, -1);
      MEMORY[0x2348FF468](v48, -1, -1);
    }
    else
    {

      sub_232002CEC((uint64_t)v13, type metadata accessor for SnidgetFeedItemGeneratorRequest);
      sub_232002CEC((uint64_t)v10, type metadata accessor for SnidgetFeedItemGeneratorRequest);
    }

    (*(void (**)(char *, uint64_t))(v168 + 8))(v26, v169);
    goto LABEL_36;
  }
  v56 = v171;
  v150 = v39;
  v57 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
  v151 = v38;
  v57(v43, v37, v38);
  v58 = *(unsigned __int8 *)(a2 + 8);
  v59 = v43;
  v60 = a2;
  if (v58 == 1)
  {
    swift_bridgeObjectRelease();
    v61 = (unsigned __int8 *)v167;
    goto LABEL_9;
  }
  v62 = sub_232201ADC();
  swift_bridgeObjectRelease();
  v61 = (unsigned __int8 *)v167;
  if ((v62 & 1) != 0)
  {
LABEL_9:
    v63 = sub_23220009C();
    if ((v64 & 1) == 0)
      goto LABEL_10;
LABEL_18:
    v76 = v163;
    sub_232200318();
    sub_23200054C(v60, (uint64_t)v61, type metadata accessor for SnidgetFeedItemGeneratorRequest);
    v77 = v161;
    sub_23200054C(v60, v161, type metadata accessor for SnidgetFeedItemGeneratorRequest);
    v78 = v162;
    sub_23200054C(v60, v162, type metadata accessor for SnidgetFeedItemGeneratorRequest);
    v79 = v56;
    v80 = sub_232200390();
    v81 = sub_2322012FC();
    v82 = v81;
    if (os_log_type_enabled(v80, v81))
    {
      v83 = swift_slowAlloc();
      LODWORD(v166) = v82;
      v84 = v83;
      v167 = (char *)swift_slowAlloc();
      v173[0] = v167;
      *(_DWORD *)v84 = 136315650;
      v85 = sub_2320851F8((uint64_t)v79, v61[8]);
      v171 = v59;
      v172 = sub_232013174(v85, v86, (uint64_t *)v173);
      sub_232201710();

      swift_bridgeObjectRelease();
      sub_232002CEC((uint64_t)v61, type metadata accessor for SnidgetFeedItemGeneratorRequest);
      *(_WORD *)(v84 + 12) = 2080;
      v87 = objc_msgSend(*(id *)(v77 + 16), sel_sensitiveLoggingIdentifier);
      v88 = v76;
      v89 = sub_232200EC4();
      v90 = v77;
      v92 = v91;

      v172 = sub_232013174(v89, v92, (uint64_t *)v173);
      sub_232201710();
      swift_bridgeObjectRelease();
      sub_232002CEC(v90, type metadata accessor for SnidgetFeedItemGeneratorRequest);
      *(_WORD *)(v84 + 22) = 2080;
      if (*(_BYTE *)(v78 + 8))
        v93 = 0x676E6972616873;
      else
        v93 = 0x7972616D697270;
      v172 = sub_232013174(v93, 0xE700000000000000, (uint64_t *)v173);
      sub_232201710();
      sub_232002CEC(v78, type metadata accessor for SnidgetFeedItemGeneratorRequest);
      _os_log_impl(&dword_231FFB000, v80, (os_log_type_t)v166, "%s: %s does not have a configuration for the requested audience %s", (uint8_t *)v84, 0x20u);
      v94 = v167;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v94, -1, -1);
      MEMORY[0x2348FF468](v84, -1, -1);

      (*(void (**)(char *, uint64_t))(v168 + 8))(v88, v169);
      goto LABEL_32;
    }

    sub_232002CEC(v78, type metadata accessor for SnidgetFeedItemGeneratorRequest);
    sub_232002CEC(v77, type metadata accessor for SnidgetFeedItemGeneratorRequest);

    sub_232002CEC((uint64_t)v61, type metadata accessor for SnidgetFeedItemGeneratorRequest);
    (*(void (**)(char *, uint64_t))(v168 + 8))(v76, v169);
LABEL_34:
    v133 = *(void (**)(id, uint64_t))(v150 + 8);
    v134 = v59;
    goto LABEL_35;
  }
  v63 = sub_232200090();
  if ((v75 & 1) != 0)
    goto LABEL_18;
LABEL_10:
  v65 = objc_msgSend(v156, sel_behavior);
  v66 = objc_msgSend(v65, sel_preferredCalendarDayAlignment);

  v67 = *MEMORY[0x24BDD3360];
  v68 = objc_allocWithZone(MEMORY[0x24BDD3E80]);
  v69 = v44;
  v70 = objc_msgSend(v68, sel_initWithIdentifier_, v67);
  if (v70)
  {
    v71 = v70;
    sub_2320DAD4C();
    v72 = v69;
    v73 = sub_2322016A4();

    if (v63 == 5)
      v74 = 0;
    else
      v74 = v66;
    if ((v73 & 1) != 0)
      v66 = v74;
  }
  else
  {

  }
  v95 = (uint64_t)v164;
  v96 = v166;
  v97 = objc_allocWithZone(MEMORY[0x24BE4A810]);
  v98 = (void *)sub_2321FDBF4();
  v99 = (char *)objc_msgSend(v97, sel_initWithQueryAlignment_fromEndDate_, v66, v98);

  v100 = (void *)sub_2321FDD5C();
  v173[0] = 0;
  v167 = v99;
  v101 = objc_msgSend(v99, sel_dateIntervalForTimeScope_withGregorianCalendar_error_, v63, v100, v173);

  v102 = v173[0];
  if (v101)
  {
    v103 = v58;
    v104 = v63;
    v105 = v59;
    v106 = v95;
    v107 = v154;
    sub_2321FD864();
    v108 = v102;

    v109 = v157;
    v110 = *(void (**)(char *, char *, uint64_t))(v157 + 32);
    v111 = (uint64_t)v160;
    v112 = v107;
    v95 = v106;
    v59 = v105;
    v63 = v104;
    v110(v160, v112, v96);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v109 + 56))(v111, 0, 1, v96);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v109 + 48))(v111, 1, v96) != 1)
    {
      v113 = v153;
      v110(v153, (char *)v111, v96);
      if ((v103 & 1) != 0)
      {
        v114 = v150;
        v115 = v152;
        v116 = v151;
        (*(void (**)(char *, void *, uint64_t))(v150 + 16))(v152, v59, v151);
      }
      else
      {
        v137 = sub_232201ADC();
        v114 = v150;
        v115 = v152;
        v116 = v151;
        (*(void (**)(char *, void *, uint64_t))(v150 + 16))(v152, v59, v151);
        if ((v137 & 1) == 0)
        {

          v144 = *(void (**)(char *, uint64_t))(v114 + 8);
          v144(v115, v116);
          v144((char *)v59, v116);
LABEL_44:
          sub_232025308(0, &qword_2541B2310, (void (*)(uint64_t))MEMORY[0x24BDCB878], type metadata accessor for HKTimeScope);
          v146 = v145;
          v147 = *(int *)(v145 + 48);
          v148 = v170;
          v110(v170, v113, v96);
          *(_QWORD *)&v148[v147] = v63;
          return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v146 - 8) + 56))(v148, 0, 1, v146);
        }
      }
      v138 = v116;
      v139 = sub_23220009C();
      v141 = v140;

      v142 = *(void (**)(char *, uint64_t))(v114 + 8);
      v142(v115, v138);
      v143 = v138;
      v96 = v166;
      v142((char *)v59, v143);
      if ((v141 & 1) == 0 && v139 == 5)
        v63 = 4;
      goto LABEL_44;
    }
  }
  else
  {
    v117 = v173[0];
    v118 = (void *)sub_2321FDA5C();

    swift_willThrow();
    v111 = (uint64_t)v160;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v157 + 56))(v160, 1, 1, v96);
  }
  v166 = v63;
  sub_23200040C(v111, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  v119 = v165;
  sub_232200318();
  sub_23200054C(v60, v95, type metadata accessor for SnidgetFeedItemGeneratorRequest);
  v120 = v155;
  sub_23200054C(v60, v155, type metadata accessor for SnidgetFeedItemGeneratorRequest);
  v121 = v171;
  v122 = sub_232200390();
  v123 = sub_2322012E4();
  if (!os_log_type_enabled(v122, v123))
  {

    sub_232002CEC(v120, type metadata accessor for SnidgetFeedItemGeneratorRequest);
    sub_232002CEC(v95, type metadata accessor for SnidgetFeedItemGeneratorRequest);
    (*(void (**)(char *, uint64_t))(v168 + 8))(v119, v169);
    goto LABEL_34;
  }
  v124 = swift_slowAlloc();
  v125 = (void *)swift_slowAlloc();
  v173[0] = v125;
  *(_DWORD *)v124 = 136315650;
  v171 = v59;
  v126 = sub_2320851F8((uint64_t)v121, *(unsigned __int8 *)(v95 + 8));
  v172 = sub_232013174(v126, v127, (uint64_t *)v173);
  sub_232201710();

  swift_bridgeObjectRelease();
  sub_232002CEC(v95, type metadata accessor for SnidgetFeedItemGeneratorRequest);
  *(_WORD *)(v124 + 12) = 2080;
  v128 = objc_msgSend(*(id *)(v120 + 16), sel_sensitiveLoggingIdentifier);
  v129 = v120;
  v130 = sub_232200EC4();
  v132 = v131;

  v172 = sub_232013174(v130, v132, (uint64_t *)v173);
  sub_232201710();
  swift_bridgeObjectRelease();
  sub_232002CEC(v129, type metadata accessor for SnidgetFeedItemGeneratorRequest);
  *(_WORD *)(v124 + 22) = 2048;
  v172 = v166;
  sub_232201710();
  _os_log_impl(&dword_231FFB000, v122, v123, "%s: %s there is no remote date interval for requested timescope %ld", (uint8_t *)v124, 0x20u);
  swift_arrayDestroy();
  MEMORY[0x2348FF468](v125, -1, -1);
  MEMORY[0x2348FF468](v124, -1, -1);

  (*(void (**)(char *, uint64_t))(v168 + 8))(v165, v169);
LABEL_32:
  v133 = *(void (**)(id, uint64_t))(v150 + 8);
  v134 = v171;
LABEL_35:
  v133(v134, v151);
LABEL_36:
  sub_232025308(0, &qword_2541B2310, (void (*)(uint64_t))MEMORY[0x24BDCB878], type metadata accessor for HKTimeScope);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v135 - 8) + 56))(v170, 1, 1, v135);
}

uint64_t sub_232125E88@<X0>(void *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void (*a6)(char *, char *, uint64_t)@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  void (*v67)(void);
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(uint64_t, uint64_t, uint64_t);
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, char *, uint64_t);
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, char *, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, uint64_t, uint64_t);
  char *v86;
  char *v87;
  NSObject *v88;
  uint64_t v89;
  os_log_type_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  void (*v98)(char *, uint64_t);
  uint64_t v99;
  void (*v100)(char *, char *, uint64_t);
  char *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(char *, _QWORD, uint64_t);
  id v108;
  char *v109;
  char v110;
  uint64_t (*v111)(_QWORD);
  uint64_t v112;
  int v113;
  id v114;
  void (*v115)(char *, uint64_t);
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t (*v122)(_QWORD);
  uint64_t v123;
  id v124;
  int v125;
  uint64_t v126;
  double v127;
  char v128;
  uint64_t v129;
  uint64_t v130;
  void (*v131)(char *, uint64_t, uint64_t);
  uint64_t v132;
  uint64_t v133;
  void (*v134)(char *, char *, uint64_t);
  double v135;
  char v136;
  char v137;
  double v138;
  double v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t (*v143)(_QWORD);
  uint64_t v144;
  uint64_t (*v145)(_QWORD);
  uint64_t v146;
  id v147;
  id v148;
  id v150;
  id v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  char *v156;
  char *v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  char *v168;
  char *v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  int v173;
  char *v174;
  char *v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  void (*v181)(void);
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  id v187;
  uint64_t v188;
  void (*v189)(char *, char *, uint64_t);
  uint64_t (*v190)(uint64_t, uint64_t, uint64_t);
  uint64_t v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200[2];

  v183 = a4;
  v173 = a3;
  v191 = a2;
  v187 = a1;
  v189 = a6;
  sub_232127ED0(0);
  MEMORY[0x24BDAC7A8](v7);
  v184 = (char *)&v152 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v196 = sub_2321FF298();
  v194 = *(_QWORD *)(v196 - 8);
  v9 = MEMORY[0x24BDAC7A8](v196);
  v168 = (char *)&v152 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v166 = (char *)&v152 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v171 = (char *)&v152 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v155 = (char *)&v152 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v174 = (char *)&v152 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v193 = (char *)&v152 - v19;
  v161 = sub_23220039C();
  v160 = *(_QWORD *)(v161 - 8);
  MEMORY[0x24BDAC7A8](v161);
  v169 = (char *)&v152 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = sub_2321FD8B8();
  v177 = *(_QWORD *)(v178 - 8);
  v21 = MEMORY[0x24BDAC7A8](v178);
  v154 = (char *)&v152 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v176 = (char *)&v152 - v23;
  v185 = sub_2321FEE48();
  v197 = *(_QWORD *)(v185 - 8);
  v24 = MEMORY[0x24BDAC7A8](v185);
  v175 = (char *)&v152 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v152 - v27;
  v29 = MEMORY[0x24BDAC7A8](v26);
  v157 = (char *)&v152 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v158 = (char *)&v152 - v31;
  sub_232127EE4();
  v33 = MEMORY[0x24BDAC7A8](v32);
  v164 = (uint64_t)&v152 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x24BDAC7A8](v33);
  v170 = (uint64_t)&v152 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v153 = (uint64_t)&v152 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v167 = (char *)&v152 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v165 = (uint64_t)&v152 - v42;
  v43 = MEMORY[0x24BDAC7A8](v41);
  v172 = (uint64_t)&v152 - v44;
  MEMORY[0x24BDAC7A8](v43);
  v46 = (char *)&v152 - v45;
  v47 = sub_2321FDC6C();
  v48 = *(_QWORD *)(v47 - 8);
  v49 = MEMORY[0x24BDAC7A8](v47);
  v159 = (char *)&v152 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v49);
  v52 = (char *)&v152 - v51;
  sub_23202D234(0);
  v54 = MEMORY[0x24BDAC7A8](v53);
  v162 = (uint64_t)&v152 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = MEMORY[0x24BDAC7A8](v54);
  v182 = (uint64_t)&v152 - v57;
  v58 = MEMORY[0x24BDAC7A8](v56);
  v156 = (char *)&v152 - v59;
  v60 = MEMORY[0x24BDAC7A8](v58);
  v163 = (uint64_t)&v152 - v61;
  v62 = MEMORY[0x24BDAC7A8](v60);
  v180 = (uint64_t)&v152 - v63;
  v64 = MEMORY[0x24BDAC7A8](v62);
  v66 = (char *)&v152 - v65;
  MEMORY[0x24BDAC7A8](v64);
  v67 = *(void (**)(void))(v48 + 56);
  v195 = (uint64_t)&v152 - v68;
  v67();
  v192 = a5;
  sub_23200054C(a5, (uint64_t)v46, (uint64_t (*)(_QWORD))sub_232127EE4);
  sub_232025308(0, (unint64_t *)&qword_2541B2860, sub_23202D234, (void (*)(uint64_t))sub_232005524);
  v70 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 48);
  v186 = v69;
  v190 = v70;
  v71 = ((uint64_t (*)(char *, uint64_t))v70)(v46, 1);
  v188 = v47;
  v181 = v67;
  v179 = v48;
  if (v71 == 1)
  {
    sub_232002CEC((uint64_t)v46, (uint64_t (*)(_QWORD))sub_232127EE4);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v67)(v66, 1, 1, v47);
  }
  else
  {
    sub_232025468((uint64_t)v46, (uint64_t)v66, (uint64_t (*)(_QWORD))sub_23202D234);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v66, 1, v47) != 1)
    {
      v80 = v179;
      v81 = *(void (**)(char *, char *, uint64_t))(v179 + 32);
      v81(v52, v66, v47);
      v72 = v191;
      v82 = *(_QWORD *)(v191 + 16);
      v75 = v189;
      v77 = v185;
      if (v82)
      {
        v83 = v191 + ((*(unsigned __int8 *)(v197 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v197 + 80));
        v84 = *(_QWORD *)(v197 + 72);
        v85 = *(void (**)(char *, uint64_t, uint64_t))(v197 + 16);
        swift_bridgeObjectRetain();
        while (1)
        {
          v85(v28, v83, v77);
          if ((sub_23212707C((uint64_t)v28, (uint64_t)v52) & 1) != 0)
            break;
          (*(void (**)(char *, uint64_t))(v197 + 8))(v28, v77);
          v83 += v84;
          if (!--v82)
          {
            v72 = v191;
            swift_bridgeObjectRelease();
            v47 = v188;
            v75 = v189;
            v80 = v179;
            goto LABEL_11;
          }
        }
        v72 = v191;
        swift_bridgeObjectRelease();
        v99 = v197;
        v100 = *(void (**)(char *, char *, uint64_t))(v197 + 32);
        v101 = v157;
        v100(v157, v28, v77);
        v102 = v158;
        v100(v158, v101, v77);
        v103 = v176;
        sub_2321FEE18();
        v104 = v180;
        sub_2321FD894();
        (*(void (**)(char *, uint64_t))(v177 + 8))(v103, v178);
        (*(void (**)(char *, uint64_t))(v99 + 8))(v102, v77);
        v74 = v195;
        sub_232002CEC(v195, (uint64_t (*)(_QWORD))sub_23202D234);
        v105 = v188;
        (*(void (**)(char *, uint64_t))(v179 + 8))(v52, v188);
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v181)(v104, 0, 1, v105);
        sub_232025468(v104, v74, (uint64_t (*)(_QWORD))sub_23202D234);
        v75 = v189;
        v73 = v196;
        v76 = (uint64_t)v184;
      }
      else
      {
LABEL_11:
        v189 = v81;
        v86 = v169;
        sub_232200318();
        v87 = v159;
        (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v159, v52, v47);
        v88 = sub_232200390();
        v89 = v80;
        v90 = sub_2322012D8();
        if (os_log_type_enabled(v88, v90))
        {
          v91 = v87;
          v92 = swift_slowAlloc();
          v176 = (char *)swift_slowAlloc();
          v200[0] = (uint64_t)v176;
          *(_DWORD *)v92 = 136315394;
          v198 = sub_232013174(0xD00000000000001DLL, 0x8000000232207B50, v200);
          sub_232201710();
          *(_WORD *)(v92 + 12) = 2080;
          v93 = sub_2321FDB94();
          v198 = sub_232013174(v93, v94, v200);
          v72 = v191;
          sub_232201710();
          swift_bridgeObjectRelease();
          v95 = v91;
          v96 = v188;
          (*(void (**)(char *, uint64_t))(v179 + 8))(v95, v188);
          _os_log_impl(&dword_231FFB000, v88, v90, "[%s]: Requested date %s does not fall within the charts points.", (uint8_t *)v92, 0x16u);
          v97 = v176;
          swift_arrayDestroy();
          MEMORY[0x2348FF468](v97, -1, -1);
          MEMORY[0x2348FF468](v92, -1, -1);

          (*(void (**)(char *, uint64_t))(v160 + 8))(v169, v161);
        }
        else
        {

          v98 = *(void (**)(char *, uint64_t))(v89 + 8);
          v96 = v188;
          v98(v87, v188);
          (*(void (**)(char *, uint64_t))(v160 + 8))(v86, v161);
        }
        v74 = v195;
        sub_232002CEC(v195, (uint64_t (*)(_QWORD))sub_23202D234);
        v73 = v196;
        v76 = (uint64_t)v184;
        v189((char *)v74, v52, v96);
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v181)(v74, 0, 1, v96);
      }
      goto LABEL_16;
    }
  }
  sub_232002CEC((uint64_t)v66, (uint64_t (*)(_QWORD))sub_23202D234);
  v72 = v191;
  v74 = v195;
  v73 = v196;
  v75 = v189;
  v76 = (uint64_t)v184;
  v77 = v185;
  if (*(_QWORD *)(v191 + 16))
  {
    v78 = v176;
    sub_2321FEE18();
    v79 = v180;
    sub_2321FD894();
    (*(void (**)(char *, uint64_t))(v177 + 8))(v78, v178);
    sub_232002CEC(v74, (uint64_t (*)(_QWORD))sub_23202D234);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v181)(v79, 0, 1, v188);
    sub_232025468(v79, v74, (uint64_t (*)(_QWORD))sub_23202D234);
  }
LABEL_16:
  sub_23200054C(v183, v76, (uint64_t (*)(_QWORD))sub_232127ED0);
  v106 = v194;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v194 + 48))(v76, 1, v73) == 1)
  {
    sub_232002CEC(v76, (uint64_t (*)(_QWORD))sub_232127ED0);
    v107 = *(void (**)(char *, _QWORD, uint64_t))(v106 + 104);
    if (v173 > 1u)
    {
      v107(v168, *MEMORY[0x24BE43C50], v73);
      sub_23200054C(v74, v162, (uint64_t (*)(_QWORD))sub_23202D234);
      v111 = (uint64_t (*)(_QWORD))sub_232127EE4;
      v112 = v164;
      sub_23200054C(v192, v164, (uint64_t (*)(_QWORD))sub_232127EE4);
      v113 = v190(v112, 1, v186);
      v114 = v187;
      if (v113 != 1)
        v111 = (uint64_t (*)(_QWORD))sub_23202D234;
      sub_232002CEC(v112, v111);
      v124 = v114;
    }
    else
    {
      v107(v166, *MEMORY[0x24BE43C48], v73);
      sub_23200054C(v74, v180, (uint64_t (*)(_QWORD))sub_23202D234);
      v108 = v187;
    }
    sub_2321FF2A4();
    return sub_232002CEC(v74, (uint64_t (*)(_QWORD))sub_23202D234);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v106 + 32))(v193, v76, v73);
  v109 = v174;
  (*(void (**)(char *, _QWORD, uint64_t))(v106 + 104))(v174, *MEMORY[0x24BE43C48], v73);
  sub_232000590(&qword_2541B29A8, (uint64_t (*)(uint64_t))MEMORY[0x24BE43C58], MEMORY[0x24BE43C60]);
  sub_232200FF0();
  sub_232200FF0();
  if (v200[0] == v198 && v200[1] == v199)
    v110 = 1;
  else
    v110 = sub_232201ADC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v115 = *(void (**)(char *, uint64_t))(v106 + 8);
  v115(v109, v73);
  v116 = v172;
  sub_23200054C(v192, v172, (uint64_t (*)(_QWORD))sub_232127EE4);
  if ((v110 & 1) == 0)
  {
    v122 = (uint64_t (*)(_QWORD))sub_232127EE4;
    v123 = v116;
LABEL_47:
    sub_232002CEC(v123, v122);
LABEL_48:
    v140 = v196;
    (*(void (**)(char *, char *, uint64_t))(v194 + 16))(v171, v193, v196);
    v74 = v195;
    sub_23200054C(v195, v182, (uint64_t (*)(_QWORD))sub_23202D234);
    v145 = (uint64_t (*)(_QWORD))sub_232127EE4;
    v146 = v170;
    sub_23200054C(v192, v170, (uint64_t (*)(_QWORD))sub_232127EE4);
    if (v190(v146, 1, v186) != 1)
      v145 = (uint64_t (*)(_QWORD))sub_23202D234;
    v147 = v187;
    sub_232002CEC(v146, v145);
    v148 = v147;
    goto LABEL_51;
  }
  v117 = v165;
  sub_232025468(v116, v165, (uint64_t (*)(_QWORD))sub_232127EE4);
  v118 = v186;
  if (v190(v117, 1, v186) == 1)
  {
    sub_232002CEC(v117, (uint64_t (*)(_QWORD))sub_232127EE4);
    v119 = v163;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v181)(v163, 1, 1, v188);
    v120 = v175;
    v121 = (uint64_t)v167;
  }
  else
  {
    v119 = v163;
    sub_232025468(v117, v163, (uint64_t (*)(_QWORD))sub_23202D234);
    v125 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v179 + 48))(v119, 1, v188);
    v120 = v175;
    v121 = (uint64_t)v167;
    if (v125 != 1)
    {
      v122 = (uint64_t (*)(_QWORD))sub_23202D234;
      v123 = v119;
      goto LABEL_47;
    }
  }
  sub_232002CEC(v119, (uint64_t (*)(_QWORD))sub_23202D234);
  sub_23200054C(v192, v121, (uint64_t (*)(_QWORD))sub_232127EE4);
  if (v190(v121, 1, v118) == 1)
  {
    v122 = (uint64_t (*)(_QWORD))sub_232127EE4;
    v123 = v121;
    goto LABEL_47;
  }
  v126 = v121 + *(int *)(v118 + 48);
  v127 = *(double *)v126;
  v128 = *(_BYTE *)(v126 + 8);
  sub_232002CEC(v121, (uint64_t (*)(_QWORD))sub_23202D234);
  if ((v128 & 1) != 0)
    goto LABEL_48;
  v129 = *(_QWORD *)(v72 + 16);
  if (!v129)
    goto LABEL_48;
  v130 = *(_QWORD *)(v197 + 72);
  v131 = *(void (**)(char *, uint64_t, uint64_t))(v197 + 16);
  v132 = v72
       + ((*(unsigned __int8 *)(v197 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v197 + 80))
       + v130 * (v129 - 1);
  v133 = -v130;
  while (1)
  {
    v134 = (void (*)(_QWORD, _QWORD, _QWORD))v75;
    v131(v120, v132, v77);
    v135 = COERCE_DOUBLE(sub_2321FEE3C());
    v137 = v136;
    sub_2321FEE30();
    v139 = v138;
    if ((v137 & 1) == 0)
      break;
    (*(void (**)(char *, uint64_t))(v197 + 8))(v120, v77);
    v75 = (void (*)(char *, char *, uint64_t))v134;
    if (v139 == v127)
      goto LABEL_44;
LABEL_39:
    v132 += v133;
    if (!--v129)
      goto LABEL_48;
  }
  if (v138 > v127)
  {
    v120 = v175;
    (*(void (**)(char *, uint64_t))(v197 + 8))(v175, v77);
    v75 = (void (*)(char *, char *, uint64_t))v134;
    goto LABEL_39;
  }
  v120 = v175;
  (*(void (**)(char *, uint64_t))(v197 + 8))(v175, v77);
  v75 = (void (*)(char *, char *, uint64_t))v134;
  if (v127 > v135)
    goto LABEL_39;
LABEL_44:
  v140 = v196;
  (*(void (**)(char *, char *, uint64_t))(v194 + 16))(v155, v193, v196);
  v141 = v154;
  sub_2321FEE18();
  v142 = v156;
  sub_2321FD894();
  (*(void (**)(char *, uint64_t))(v177 + 8))(v141, v178);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v181)(v142, 0, 1, v188);
  v143 = (uint64_t (*)(_QWORD))sub_232127EE4;
  v144 = v153;
  sub_23200054C(v192, v153, (uint64_t (*)(_QWORD))sub_232127EE4);
  if (v190(v144, 1, v186) != 1)
    v143 = (uint64_t (*)(_QWORD))sub_23202D234;
  v150 = v187;
  v74 = v195;
  sub_232002CEC(v144, v143);
  v151 = v150;
LABEL_51:
  sub_2321FF2A4();
  v115(v193, v140);
  return sub_232002CEC(v74, (uint64_t (*)(_QWORD))sub_23202D234);
}

uint64_t sub_23212707C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  char *v36;
  void (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t);
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;

  v60 = a2;
  sub_232127F58();
  v58 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v53 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v57 = (char *)&v49 - v5;
  v6 = sub_2321FDC6C();
  v54 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v59 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v49 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (void (*)(char *, uint64_t, uint64_t))((char *)&v49 - v12);
  v14 = sub_2321FD8B8();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v49 - v19;
  sub_232127FBC();
  v56 = v21;
  v22 = MEMORY[0x24BDAC7A8](v21);
  v55 = (uint64_t)&v49 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v52 = (char *)&v49 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v50 = (uint64_t)&v49 - v26;
  sub_2321FEE18();
  sub_2321FD894();
  v27 = *(void (**)(char *, uint64_t))(v15 + 8);
  v27(v20, v14);
  sub_2321FEE18();
  sub_2321FD870();
  v27(v18, v14);
  v28 = sub_232000590((unint64_t *)&qword_2541AF160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
  v51 = v13;
  result = sub_232200E4C();
  if ((result & 1) != 0)
  {
    v31 = v57;
    v30 = v58;
    v32 = &v57[*(int *)(v58 + 48)];
    v33 = v54;
    v49 = v28;
    v34 = *(void (**)(char *, char *, uint64_t))(v54 + 32);
    v34(v57, (char *)v51, v6);
    v34(v32, v11, v6);
    v35 = v53;
    v36 = &v53[*(int *)(v30 + 48)];
    v37 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 16);
    v51 = v37;
    v37(v53, (uint64_t)v31, v6);
    v37(v36, (uint64_t)v32, v6);
    v38 = (uint64_t)v52;
    v34(v52, v35, v6);
    v39 = *(void (**)(char *, uint64_t))(v33 + 8);
    v39(v36, v6);
    v40 = &v35[*(int *)(v30 + 48)];
    v34(v35, v31, v6);
    v34(v40, v32, v6);
    v34((char *)(v38 + *(int *)(v56 + 36)), v40, v6);
    v39(v35, v6);
    v41 = v50;
    sub_232025468(v38, v50, (uint64_t (*)(_QWORD))sub_232127FBC);
    v42 = v60;
    LOBYTE(v40) = sub_232200E4C();
    v43 = v59;
    v51(v59, v42, v6);
    v44 = v55;
    sub_23200054C(v41, v55, (uint64_t (*)(_QWORD))sub_232127FBC);
    v45 = v43;
    v46 = v44;
    v47 = v41;
    if ((v40 & 1) != 0)
      v48 = sub_232200E34();
    else
      v48 = 0;
    sub_232002CEC(v46, (uint64_t (*)(_QWORD))sub_232127FBC);
    v39(v45, v6);
    sub_232002CEC(v47, (uint64_t (*)(_QWORD))sub_232127FBC);
    return v48 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2321274B4(uint64_t a1)
{
  uint64_t v2;

  sub_232025308(0, &qword_2541B2310, (void (*)(uint64_t))MEMORY[0x24BDCB878], type metadata accessor for HKTimeScope);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_232127510(int a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  double v26;
  id v27;
  id v28;
  id v29;
  id v30;
  double v31;
  char *v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  void (*v48)(char *, unint64_t, uint64_t);
  uint64_t v49;
  char v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  void *v59;
  id v60;
  double v61;
  id v62;
  char **v63;
  id v64;
  id v65;
  uint64_t v66;
  id v67;
  double v68;
  NSObject *v69;
  os_log_type_t v70;
  uint64_t v71;
  id v72;
  id v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  id v77;
  id v78;
  id v79;
  void *v80;
  void *v81;
  void *v82;
  id v83;
  void *v84;
  double v85;
  id v86;
  void *v87;
  double v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  _QWORD v94[3];
  int v95;
  uint64_t v96;
  char *v97;
  id v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;

  v105 = a4;
  v9 = sub_2321FEE48();
  v106 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v94 - v13;
  v15 = sub_23220039C();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v21 = *(_QWORD *)(a2 + 16);
  if (v21)
  {
    v97 = (char *)v94 - v18;
    v100 = v20;
    v101 = v19;
    v102 = v17;
    v103 = a2;
    v99 = a1;
    v22 = sub_232124C28(a2);
    *(double *)&v23 = COERCE_DOUBLE(sub_23200FB3C(v22));
    v25 = v24;
    swift_bridgeObjectRelease();
    v104 = a3;
    v98 = a5;
    if ((v25 & 1) == 0)
    {
      v26 = *(double *)&v23;
LABEL_14:
      v45 = v103;
      v108 = MEMORY[0x24BEE4AF8];
      sub_2320137F8(0, v21, 0);
      v46 = v45 + ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80));
      v47 = *(_QWORD *)(v106 + 72);
      v48 = *(void (**)(char *, unint64_t, uint64_t))(v106 + 16);
      do
      {
        v48(v14, v46, v9);
        v49 = sub_2321FEE3C();
        v51 = v50;
        v48(v12, (unint64_t)v14, v9);
        if ((v51 & 1) != 0)
        {
          sub_2321FEE30();
          v52 = v53;
        }
        else
        {
          v52 = v49;
        }
        v54 = *(void (**)(char *, uint64_t))(v106 + 8);
        v54(v12, v9);
        v54(v14, v9);
        v55 = v108;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2320137F8(0, *(_QWORD *)(v55 + 16) + 1, 1);
          v55 = v108;
        }
        v57 = *(_QWORD *)(v55 + 16);
        v56 = *(_QWORD *)(v55 + 24);
        if (v57 >= v56 >> 1)
        {
          sub_2320137F8(v56 > 1, v57 + 1, 1);
          v55 = v108;
        }
        *(_QWORD *)(v55 + 16) = v57 + 1;
        *(_QWORD *)(v55 + 8 * v57 + 32) = v52;
        v46 += v47;
        --v21;
      }
      while (v21);
      *(double *)&v58 = COERCE_DOUBLE(sub_23200FE8C(v55));
      v60 = v59;
      swift_release();
      if ((v60 & 1) == 0)
      {
        v61 = *(double *)&v58;
        v62 = v104;
        v63 = &selRef_setChartModel_;
        goto LABEL_34;
      }
      v62 = v104;
      v64 = objc_msgSend(v104, sel_chartingRules);
      v63 = &selRef_setChartModel_;
      v65 = objc_msgSend(v64, sel_axisScalingRule);

      v66 = v100;
      if (v65)
      {
        if ((objc_msgSend(v65, sel_respondsToSelector_, sel_yAxisBounds) & 1) != 0)
        {
          v60 = objc_msgSend(v65, sel_yAxisBounds);
          v67 = objc_msgSend(v60, sel_maxValue);

          if (v67)
          {
            objc_msgSend(v67, sel_doubleValue);
            v61 = v68;

            swift_unknownObjectRelease();
            goto LABEL_34;
          }
        }
        swift_unknownObjectRelease();
      }
      sub_232200318();
      v60 = v62;
      v69 = sub_232200390();
      v70 = sub_2322012E4();
      if (os_log_type_enabled(v69, v70))
      {
        v71 = swift_slowAlloc();
        v106 = swift_slowAlloc();
        v108 = v106;
        *(_DWORD *)v71 = 136315394;
        v107 = sub_232013174(0xD00000000000001DLL, 0x8000000232207B50, &v108);
        sub_232201710();
        *(_WORD *)(v71 + 12) = 2080;
        v103 = v71 + 14;
        v72 = v62;
        v73 = objc_msgSend(v60, sel_description);
        v74 = sub_232200EC4();
        v76 = v75;

        v62 = v72;
        v63 = &selRef_setChartModel_;
        v107 = sub_232013174(v74, v76, &v108);
        sub_232201710();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_231FFB000, v69, v70, "[%s]: Y-Axis Max for %s unable to be found", (uint8_t *)v71, 0x16u);
        v60 = (id)v106;
        swift_arrayDestroy();
        MEMORY[0x2348FF468](v60, -1, -1);
        MEMORY[0x2348FF468](v71, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v100, v102);
      }
      else
      {

        (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v66, v102);
      }
      v61 = 100.0;
LABEL_34:
      v77 = objc_msgSend(v62, sel_chartingRules);
      v78 = objc_msgSend(v77, v63[228]);

      if (v78)
      {
        v79 = objc_msgSend(v98, sel_unitForChartingDisplayType_, v62);
        if (v79)
        {
          v80 = v79;
          if ((objc_msgSend(v78, sel_respondsToSelector_, sel_setUnit_) & 1) != 0)
            objc_msgSend(v78, sel_setUnit_, v80);

        }
        v81 = (void *)sub_23220108C();
        v82 = (void *)sub_23220108C();
        v77 = objc_msgSend((id)objc_opt_self(), sel_valueRangeWithMinValue_maxValue_, v81, v82);

        v60 = objc_msgSend(v78, sel_yValueRangeForRange_zoomLevel_, v77, v105);
        v83 = objc_msgSend(v60, sel_minValue);
        if (v83)
        {
          v84 = v83;
          objc_msgSend(v83, sel_doubleValue);
          v26 = v85;

        }
        v86 = objc_msgSend(v60, sel_maxValue);
        if (v86)
        {
          v87 = v86;
          objc_msgSend(v86, sel_doubleValue);
          v61 = v88;

        }
        v89 = sub_2321FF274();
        v91 = v90;
        if (v89 == sub_2321FF274() && v91 == v92)
        {
          swift_bridgeObjectRelease_n();
          v26 = 0.0;
LABEL_50:
          swift_unknownObjectRelease();

          if (v26 > v61)
            __break(1u);
          return;
        }
      }
      else
      {
        if (v26 <= v61)
          return;
        __break(1u);
      }
      v93 = sub_232201ADC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v93 & 1) != 0)
        v26 = 0.0;
      goto LABEL_50;
    }
    v27 = objc_msgSend(a3, sel_chartingRules);
    v28 = objc_msgSend(v27, sel_axisScalingRule);

    if (v28)
    {
      if ((objc_msgSend(v28, sel_respondsToSelector_, sel_yAxisBounds) & 1) != 0)
      {
        v29 = objc_msgSend(v28, sel_yAxisBounds);
        v30 = objc_msgSend(v29, sel_minValue);

        if (v30)
        {
          objc_msgSend(v30, sel_doubleValue);
          v26 = v31;

          swift_unknownObjectRelease();
          goto LABEL_14;
        }
      }
      swift_unknownObjectRelease();
    }
    v32 = v97;
    sub_232200318();
    v33 = a3;
    v34 = sub_232200390();
    v35 = sub_2322012E4();
    v36 = v35;
    if (os_log_type_enabled(v34, v35))
    {
      v37 = swift_slowAlloc();
      v95 = v36;
      v38 = v37;
      v96 = swift_slowAlloc();
      v108 = v96;
      *(_DWORD *)v38 = 136315394;
      v107 = sub_232013174(0xD00000000000001DLL, 0x8000000232207B50, &v108);
      v94[2] = &v108;
      sub_232201710();
      *(_WORD *)(v38 + 12) = 2080;
      v94[1] = v38 + 14;
      v39 = objc_msgSend(v33, sel_description);
      v40 = v33;
      v41 = sub_232200EC4();
      v43 = v42;

      v107 = sub_232013174(v41, v43, &v108);
      sub_232201710();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v34, (os_log_type_t)v95, "[%s]: Y-Axis Min for %s unable to be found", (uint8_t *)v38, 0x16u);
      v44 = v96;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v44, -1, -1);
      MEMORY[0x2348FF468](v38, -1, -1);

      (*(void (**)(char *, uint64_t))(v101 + 8))(v97, v102);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v101 + 8))(v32, v102);
    }
    v26 = 0.0;
    goto LABEL_14;
  }
}

void sub_232127ED0(uint64_t a1)
{
  sub_2320002B4(a1, (unint64_t *)&unk_2541B29B0, (void (*)(uint64_t))MEMORY[0x24BE43C58]);
}

void sub_232127EE4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2868)
  {
    sub_232025308(255, (unint64_t *)&qword_2541B2860, sub_23202D234, (void (*)(uint64_t))sub_232005524);
    v0 = sub_2322016F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2868);
  }
}

void sub_232127F58()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2541B2858)
  {
    sub_2321FDC6C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2541B2858);
  }
}

void sub_232127FBC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B5588)
  {
    sub_2321FDC6C();
    sub_232000590((unint64_t *)&qword_2541AF160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
    v0 = sub_23220111C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B5588);
  }
}

uint64_t initializeBufferWithCopyOfBuffer for SharableModelActivityChartItem(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = v3;
  v6 = v4;
  return a1;
}

void destroy for SharableModelActivityChartItem(id *a1)
{

}

uint64_t assignWithCopy for SharableModelActivityChartItem(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for SharableModelActivityChartItem(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for SharableModelActivityChartItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SharableModelActivityChartItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SharableModelActivityChartItem()
{
  return &type metadata for SharableModelActivityChartItem;
}

uint64_t sub_2321281CC()
{
  sub_2321FF178();
  return sub_2321FEDAC();
}

id sub_232128200()
{
  return objc_msgSend((id)objc_opt_self(), sel_activitySummaryType);
}

id sub_232128234()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

id sub_232128258(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_232128354(a1, a2, *(void **)(v2 + 8), *(_BYTE *)(v2 + 16));
}

uint64_t sub_23212826C()
{
  sub_2321FF178();
  return sub_2322013E0();
}

unint64_t sub_2321282A0()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_activitySummaryType);
  v1 = objc_msgSend(v0, sel_identifier);

  sub_232200EC4();
  sub_232200F48();
  swift_bridgeObjectRelease();
  return 0xD00000000000001FLL;
}

id sub_232128354(void *a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v24;

  sub_23202D234(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2321FDC6C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = 0;
  if (!objc_msgSend(a3, sel_hasChartModel))
    return v15;
  v16 = objc_msgSend(a3, sel_chartModel);
  if (!v16)
    return 0;
  v17 = v16;
  if (!a2)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    goto LABEL_8;
  }
  sub_2321FED64();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
LABEL_8:
    sub_2321FDC60();
    sub_23204ADF0((uint64_t)v10);
    goto LABEL_9;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
LABEL_9:
  if ((a4 & 1) != 0 || a4 == 2)
    v19 = 0;
  else
    v19 = 6;
  v20 = objc_msgSend(a1, sel_healthStore);
  v21 = objc_msgSend(v20, sel_viewControllerFactory);

  v22 = (void *)sub_2321FDBF4();
  v15 = objc_msgSend(v21, sel_createActivityChartForActivityMoveMode_displayDate_activityOptions_chartSharableModel_, 1, v22, v19, v17);

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return v15;
}

uint64_t sub_23212855C()
{
  sub_2321FF454();
  return sub_2322013E0();
}

uint64_t sub_232128590()
{
  if (qword_2541B7488 != -1)
    swift_once();
  return sub_2321FDA14();
}

uint64_t sub_232128628()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_232128654(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*sub_232128688())()
{
  return nullsub_1;
}

uint64_t sub_232128698()
{
  sub_2321FF454();
  return sub_2321FEDAC();
}

unint64_t sub_2321286C8()
{
  return sub_23212A040();
}

uint64_t sub_2321286EC(uint64_t a1, void *a2)
{
  return sub_232128E54(a2);
}

uint64_t sub_232128734()
{
  if (qword_2541B7488 != -1)
    swift_once();
  return sub_2321FDA14();
}

uint64_t sub_2321287C8(uint64_t a1, void *a2)
{
  return sub_23212974C(a2);
}

uint64_t sub_232128804()
{
  return sub_2321FEFD4();
}

void sub_232128844(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_2320DF534(0, (unint64_t *)&qword_2541B78C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE3598]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_232210D30;
  v5 = objc_msgSend((id)objc_opt_self(), sel_activitySummaryType);
  v6 = objc_msgSend(v5, sel_identifier);

  v7 = sub_232200EC4();
  v9 = v8;

  *(_QWORD *)(v4 + 32) = v7;
  *(_QWORD *)(v4 + 40) = v9;
  *(_QWORD *)(v4 + 48) = 0xD000000000000010;
  *(_QWORD *)(v4 + 56) = 0x8000000232207BB0;
  v10 = (void *)sub_232201020();
  swift_bridgeObjectRelease();
  v11 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v11)
  {
    v12 = sub_232200EC4();
    v14 = v13;

  }
  else
  {
    v12 = 0;
    v14 = 0;
  }
  *(_QWORD *)a2 = 0xD000000000000010;
  *(_QWORD *)(a2 + 8) = 0x8000000232207BB0;
  *(_BYTE *)(a2 + 16) = a1;
  *(_QWORD *)(a2 + 24) = v12;
  *(_QWORD *)(a2 + 32) = v14;
}

void sub_232128988(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_2320DF534(0, (unint64_t *)&qword_2541B78C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE3598]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_232210D30;
  v5 = objc_msgSend((id)objc_opt_self(), sel_activitySummaryType);
  v6 = objc_msgSend(v5, sel_identifier);

  v7 = sub_232200EC4();
  v9 = v8;

  *(_QWORD *)(v4 + 32) = v7;
  *(_QWORD *)(v4 + 40) = v9;
  *(_QWORD *)(v4 + 48) = 0x65766F4D776F6853;
  *(_QWORD *)(v4 + 56) = 0xEF736574756E694DLL;
  v10 = (void *)sub_232201020();
  swift_bridgeObjectRelease();
  v11 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v11)
  {
    v12 = sub_232200EC4();
    v14 = v13;

  }
  else
  {
    v12 = 0;
    v14 = 0;
  }
  *(_QWORD *)a2 = 0x65766F4D776F6853;
  *(_QWORD *)(a2 + 8) = 0xEF736574756E694DLL;
  *(_BYTE *)(a2 + 16) = a1;
  *(_QWORD *)(a2 + 24) = v12;
  *(_QWORD *)(a2 + 32) = v14;
}

ValueMetadata *_s37ActivityShowMoveMinutesDataSourceItemVMa()
{
  return &_s37ActivityShowMoveMinutesDataSourceItemVN;
}

uint64_t _s37ActivityShowMoveMinutesDataSourceItemVwxx_0()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s37ActivityShowMoveMinutesDataSourceItemVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s37ActivityShowMoveMinutesDataSourceItemVwca_0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s37ActivityShowMoveMinutesDataSourceItemVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s37ActivityShowMoveMinutesDataSourceItemVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_232128C70(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s38ActivityShowActiveEnergyDataSourceItemVMa()
{
  return &_s38ActivityShowActiveEnergyDataSourceItemVN;
}

uint64_t sub_232128CC8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_232128D88(a1, a2, a3, (uint64_t (*)(void))sub_23209A174, (uint64_t (*)(void))sub_232128CE4, (uint64_t (*)(void))sub_232128D28);
}

unint64_t sub_232128CE4()
{
  unint64_t result;

  result = qword_255F9F5C8;
  if (!qword_255F9F5C8)
  {
    result = MEMORY[0x2348FF39C](&unk_232216AA8, &_s38ActivityShowActiveEnergyDataSourceItemVN);
    atomic_store(result, (unint64_t *)&qword_255F9F5C8);
  }
  return result;
}

unint64_t sub_232128D28()
{
  unint64_t result;

  result = qword_255F9F5D0;
  if (!qword_255F9F5D0)
  {
    result = MEMORY[0x2348FF39C](&unk_232216AF0, &_s38ActivityShowActiveEnergyDataSourceItemVN);
    atomic_store(result, (unint64_t *)&qword_255F9F5D0);
  }
  return result;
}

uint64_t sub_232128D6C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_232128D88(a1, a2, a3, (uint64_t (*)(void))sub_23209A210, (uint64_t (*)(void))sub_232128DCC, (uint64_t (*)(void))sub_232128E10);
}

uint64_t sub_232128D88(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t result;

  a1[1] = a4();
  a1[2] = a5();
  result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_232128DCC()
{
  unint64_t result;

  result = qword_255F9F5D8;
  if (!qword_255F9F5D8)
  {
    result = MEMORY[0x2348FF39C](&unk_232216BF4, &_s37ActivityShowMoveMinutesDataSourceItemVN);
    atomic_store(result, (unint64_t *)&qword_255F9F5D8);
  }
  return result;
}

unint64_t sub_232128E10()
{
  unint64_t result;

  result = qword_255F9F5E0;
  if (!qword_255F9F5E0)
  {
    result = MEMORY[0x2348FF39C](&unk_232216C3C, &_s37ActivityShowMoveMinutesDataSourceItemVN);
    atomic_store(result, (unint64_t *)&qword_255F9F5E0);
  }
  return result;
}

uint64_t sub_232128E54(void *a1)
{
  __int128 *v1;
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  void *v26;
  char *v27;
  uint64_t v28;
  id v29;
  id v30;
  void *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  id v38;
  id v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  id v51;
  void *v52;
  uint64_t (*v53)(char *, uint64_t);
  char *v54;
  uint64_t v55;
  char *v56;
  id v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  unint64_t v67;
  unint64_t v68;
  os_log_t v69;
  uint64_t v70;
  _QWORD v71[2];
  char *v72;
  os_log_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  void *v84;
  uint64_t v85;
  _OWORD v86[2];
  uint64_t v87;
  _BYTE v88[16];
  __int128 v89;

  v2 = v1;
  v4 = sub_23220039C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v76 = (char *)v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v83 = (char *)v71 - v8;
  v9 = sub_2321FF40C();
  v82 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v81 = (char *)v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v71 - v12;
  v14 = sub_2321FF418();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = *v2;
  LODWORD(v80) = *((unsigned __int8 *)v2 + 16);
  sub_23212A148((uint64_t)v2 + 24, (uint64_t)v88);
  v18 = objc_msgSend(a1, sel_resolvedHealthStore);
  if (v18)
  {
    v19 = v18;
    v78 = v15;
    v79 = v14;
    v75 = v5;
    v74 = v4;
    v20 = (void *)objc_opt_self();
    v21 = objc_msgSend(v20, sel_activitySummaryType);
    v83 = (char *)v9;
    v22 = v21;
    v23 = objc_msgSend(v20, (SEL)&selRef_sensitivityPoints + 4);
    sub_23212A19C();
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_232210D30;
    *(_QWORD *)(v24 + 56) = &type metadata for ActivityDataTypeDetailConfigurationProvider.CustomChartComponent;
    *(_QWORD *)(v24 + 64) = sub_23206A818();
    *(_QWORD *)(v24 + 32) = 2;
    *(_BYTE *)(v24 + 40) = 0;
    *(_QWORD *)(v24 + 96) = &type metadata for ActivityDataTypeDetailConfigurationProvider.CustomDescriptionComponent;
    *(_QWORD *)(v24 + 104) = sub_23206A940();
    *(_QWORD *)(v24 + 72) = v23;
    *(_QWORD *)(v24 + 80) = 2;
    *(_BYTE *)(v24 + 88) = 0;
    sub_2321FF394();

    sub_2322013EC();
    v25 = v19;
    v26 = a1;
    sub_232201404();
    v77 = v25;
    sub_2321FF3E8();
    v27 = v17;
    sub_2321FF34C();
    v28 = v82;
    (*(void (**)(char *, char *, char *))(v82 + 16))(v81, v13, v83);
    swift_retain();
    v29 = objc_msgSend(v20, sel_activitySummaryType);
    v30 = objc_allocWithZone((Class)sub_2321FF478());
    v31 = (void *)sub_2321FF460();
    v32 = v28;
    v33 = v13;
    if (qword_2541B7488 != -1)
      swift_once();
    sub_2321FDA14();
    sub_2321FF46C();
    v84 = &unk_255FB8A20;
    v34 = swift_dynamicCastObjCProtocolConditional();
    v35 = v79;
    if (v34)
    {
      v36 = v34;
      v37 = v2[1];
      v86[0] = *v2;
      v86[1] = v37;
      v87 = *((_QWORD *)v2 + 4);
      v38 = v31;
      sub_23212A1F0((uint64_t)&v89);
      sub_23212A1F0((uint64_t)v88);
      objc_msgSend(v26, sel_showAdaptively_sender_, v36, sub_232201B18());

      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
      v51 = objc_msgSend(v26, sel_navigationController);
      if (!v51)
      {
        v81 = v33;
        v56 = v76;
        sub_23220033C();
        v57 = v31;
        v58 = sub_232200390();
        v59 = sub_2322012E4();
        if (os_log_type_enabled(v58, v59))
        {
          v60 = swift_slowAlloc();
          v73 = v58;
          v61 = v60;
          v80 = swift_slowAlloc();
          *(_QWORD *)&v86[0] = v80;
          *(_DWORD *)v61 = 136315394;
          v85 = sub_232013174(0xD000000000000025, 0x8000000232216A30, (uint64_t *)v86);
          sub_232201710();
          *(_WORD *)(v61 + 12) = 2080;
          v71[1] = v61 + 14;
          v62 = v57;
          v63 = objc_msgSend(v62, sel_description);
          v64 = sub_232200EC4();
          v72 = v27;
          v65 = v64;
          v66 = v56;
          v68 = v67;

          v85 = sub_232013174(v65, v68, (uint64_t *)v86);
          sub_232201710();

          swift_bridgeObjectRelease();
          v69 = v73;
          _os_log_impl(&dword_231FFB000, v73, v59, "[%s]: Unable to handle tap of detail item: %s", (uint8_t *)v61, 0x16u);
          v70 = v80;
          swift_arrayDestroy();
          MEMORY[0x2348FF468](v70, -1, -1);
          MEMORY[0x2348FF468](v61, -1, -1);

          swift_release();
          (*(void (**)(char *, uint64_t))(v75 + 8))(v66, v74);
          (*(void (**)(char *, char *))(v82 + 8))(v81, v83);
          v53 = *(uint64_t (**)(char *, uint64_t))(v78 + 8);
          v54 = v72;
          goto LABEL_12;
        }

        swift_release();
        (*(void (**)(char *, uint64_t))(v75 + 8))(v56, v74);
        (*(void (**)(char *, char *))(v82 + 8))(v81, v83);
LABEL_11:
        v53 = *(uint64_t (**)(char *, uint64_t))(v78 + 8);
        v54 = v27;
LABEL_12:
        v55 = v35;
        return v53(v54, v55);
      }
      v52 = v51;
      objc_msgSend(v51, sel_pushViewController_animated_, v31, 1);

      swift_release();
    }
    (*(void (**)(char *, char *))(v32 + 8))(v33, v83);
    goto LABEL_11;
  }
  sub_23220033C();
  v39 = a1;
  v40 = sub_232200390();
  v41 = sub_2322012E4();
  if (os_log_type_enabled(v40, v41))
  {
    v42 = swift_slowAlloc();
    v43 = v4;
    v44 = swift_slowAlloc();
    *(_QWORD *)&v86[0] = v44;
    *(_DWORD *)v42 = 136315394;
    v75 = v5;
    v85 = sub_232013174(0xD000000000000025, 0x8000000232216A30, (uint64_t *)v86);
    sub_232201710();
    *(_WORD *)(v42 + 12) = 2080;
    v82 = v42 + 14;
    v45 = v39;
    v46 = objc_msgSend(v45, sel_description);
    v47 = sub_232200EC4();
    v49 = v48;

    v85 = sub_232013174(v47, v49, (uint64_t *)v86);
    sub_232201710();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_231FFB000, v40, v41, "%s No resolved health store available in %s", (uint8_t *)v42, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v44, -1, -1);
    MEMORY[0x2348FF468](v42, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v83, v43);
  }

  v53 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  v54 = v83;
  v55 = v4;
  return v53(v54, v55);
}

uint64_t sub_23212974C(void *a1)
{
  __int128 *v1;
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  void *v26;
  char *v27;
  uint64_t v28;
  id v29;
  id v30;
  void *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  id v38;
  id v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  id v51;
  void *v52;
  uint64_t (*v53)(char *, uint64_t);
  char *v54;
  uint64_t v55;
  char *v56;
  id v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  unint64_t v67;
  unint64_t v68;
  os_log_t v69;
  uint64_t v70;
  _QWORD v71[2];
  char *v72;
  os_log_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  void *v84;
  uint64_t v85;
  _OWORD v86[2];
  uint64_t v87;
  _BYTE v88[16];
  __int128 v89;

  v2 = v1;
  v4 = sub_23220039C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v76 = (char *)v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v83 = (char *)v71 - v8;
  v9 = sub_2321FF40C();
  v82 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v81 = (char *)v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v71 - v12;
  v14 = sub_2321FF418();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = *v2;
  LODWORD(v80) = *((unsigned __int8 *)v2 + 16);
  sub_23212A148((uint64_t)v2 + 24, (uint64_t)v88);
  v18 = objc_msgSend(a1, sel_resolvedHealthStore);
  if (v18)
  {
    v19 = v18;
    v78 = v15;
    v79 = v14;
    v75 = v5;
    v74 = v4;
    v20 = (void *)objc_opt_self();
    v21 = objc_msgSend(v20, sel_activitySummaryType);
    v83 = (char *)v9;
    v22 = v21;
    v23 = objc_msgSend(v20, (SEL)&selRef_sensitivityPoints + 4);
    sub_23212A19C();
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_232210D30;
    *(_QWORD *)(v24 + 56) = &type metadata for ActivityDataTypeDetailConfigurationProvider.CustomChartComponent;
    *(_QWORD *)(v24 + 64) = sub_23206A818();
    *(_QWORD *)(v24 + 32) = 1;
    *(_BYTE *)(v24 + 40) = 0;
    *(_QWORD *)(v24 + 96) = &type metadata for ActivityDataTypeDetailConfigurationProvider.CustomDescriptionComponent;
    *(_QWORD *)(v24 + 104) = sub_23206A940();
    *(_QWORD *)(v24 + 72) = v23;
    *(_QWORD *)(v24 + 80) = 1;
    *(_BYTE *)(v24 + 88) = 0;
    sub_2321FF394();

    sub_2322013EC();
    v25 = v19;
    v26 = a1;
    sub_232201404();
    v77 = v25;
    sub_2321FF3E8();
    v27 = v17;
    sub_2321FF34C();
    v28 = v82;
    (*(void (**)(char *, char *, char *))(v82 + 16))(v81, v13, v83);
    swift_retain();
    v29 = objc_msgSend(v20, sel_activitySummaryType);
    v30 = objc_allocWithZone((Class)sub_2321FF478());
    v31 = (void *)sub_2321FF460();
    v32 = v28;
    v33 = v13;
    if (qword_2541B7488 != -1)
      swift_once();
    sub_2321FDA14();
    sub_2321FF46C();
    v84 = &unk_255FB8A20;
    v34 = swift_dynamicCastObjCProtocolConditional();
    v35 = v79;
    if (v34)
    {
      v36 = v34;
      v37 = v2[1];
      v86[0] = *v2;
      v86[1] = v37;
      v87 = *((_QWORD *)v2 + 4);
      v38 = v31;
      sub_23212A1F0((uint64_t)&v89);
      sub_23212A1F0((uint64_t)v88);
      objc_msgSend(v26, sel_showAdaptively_sender_, v36, sub_232201B18());

      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
      v51 = objc_msgSend(v26, sel_navigationController);
      if (!v51)
      {
        v81 = v33;
        v56 = v76;
        sub_23220033C();
        v57 = v31;
        v58 = sub_232200390();
        v59 = sub_2322012E4();
        if (os_log_type_enabled(v58, v59))
        {
          v60 = swift_slowAlloc();
          v73 = v58;
          v61 = v60;
          v80 = swift_slowAlloc();
          *(_QWORD *)&v86[0] = v80;
          *(_DWORD *)v61 = 136315394;
          v85 = sub_232013174(0xD000000000000026, 0x8000000232216A60, (uint64_t *)v86);
          sub_232201710();
          *(_WORD *)(v61 + 12) = 2080;
          v71[1] = v61 + 14;
          v62 = v57;
          v63 = objc_msgSend(v62, sel_description);
          v64 = sub_232200EC4();
          v72 = v27;
          v65 = v64;
          v66 = v56;
          v68 = v67;

          v85 = sub_232013174(v65, v68, (uint64_t *)v86);
          sub_232201710();

          swift_bridgeObjectRelease();
          v69 = v73;
          _os_log_impl(&dword_231FFB000, v73, v59, "[%s]: Unable to handle tap of detail item: %s", (uint8_t *)v61, 0x16u);
          v70 = v80;
          swift_arrayDestroy();
          MEMORY[0x2348FF468](v70, -1, -1);
          MEMORY[0x2348FF468](v61, -1, -1);

          swift_release();
          (*(void (**)(char *, uint64_t))(v75 + 8))(v66, v74);
          (*(void (**)(char *, char *))(v82 + 8))(v81, v83);
          v53 = *(uint64_t (**)(char *, uint64_t))(v78 + 8);
          v54 = v72;
          goto LABEL_12;
        }

        swift_release();
        (*(void (**)(char *, uint64_t))(v75 + 8))(v56, v74);
        (*(void (**)(char *, char *))(v82 + 8))(v81, v83);
LABEL_11:
        v53 = *(uint64_t (**)(char *, uint64_t))(v78 + 8);
        v54 = v27;
LABEL_12:
        v55 = v35;
        return v53(v54, v55);
      }
      v52 = v51;
      objc_msgSend(v51, sel_pushViewController_animated_, v31, 1);

      swift_release();
    }
    (*(void (**)(char *, char *))(v32 + 8))(v33, v83);
    goto LABEL_11;
  }
  sub_23220033C();
  v39 = a1;
  v40 = sub_232200390();
  v41 = sub_2322012E4();
  if (os_log_type_enabled(v40, v41))
  {
    v42 = swift_slowAlloc();
    v43 = v4;
    v44 = swift_slowAlloc();
    *(_QWORD *)&v86[0] = v44;
    *(_DWORD *)v42 = 136315394;
    v75 = v5;
    v85 = sub_232013174(0xD000000000000026, 0x8000000232216A60, (uint64_t *)v86);
    sub_232201710();
    *(_WORD *)(v42 + 12) = 2080;
    v82 = v42 + 14;
    v45 = v39;
    v46 = objc_msgSend(v45, sel_description);
    v47 = sub_232200EC4();
    v49 = v48;

    v85 = sub_232013174(v47, v49, (uint64_t *)v86);
    sub_232201710();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_231FFB000, v40, v41, "%s No resolved health store available in %s", (uint8_t *)v42, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v44, -1, -1);
    MEMORY[0x2348FF468](v42, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v83, v43);
  }

  v53 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  v54 = v83;
  v55 = v4;
  return v53(v54, v55);
}

unint64_t sub_23212A040()
{
  id v0;
  id v1;

  sub_23220189C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_232200F48();
  swift_bridgeObjectRelease();
  sub_232200F48();
  v0 = objc_msgSend((id)objc_opt_self(), sel_activitySummaryType);
  v1 = objc_msgSend(v0, sel_identifier);

  sub_232200EC4();
  sub_232200F48();
  swift_bridgeObjectRelease();
  return 0xD000000000000018;
}

uint64_t sub_23212A148(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2320DF534(0, (unint64_t *)&qword_2541B78A0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_23212A19C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9F5E8)
  {
    sub_23206A8EC();
    v0 = sub_232201AC4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9F5E8);
  }
}

uint64_t sub_23212A1F0(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

id sub_23212A234(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id result;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  id v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD v46[2];
  int v47;
  uint64_t v48;
  _OWORD v49[2];
  uint64_t v50;
  uint64_t v51;

  v6 = sub_23220039C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23201C800();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v46 - v14;
  objc_opt_self();
  v16 = swift_dynamicCastObjCClass();
  if (!v16)
  {
    sub_232200354();
    v32 = a1;
    v33 = sub_232200390();
    v34 = sub_2322012E4();
    v35 = v34;
    if (os_log_type_enabled(v33, v34))
    {
      v36 = swift_slowAlloc();
      v47 = v35;
      v37 = v36;
      v48 = swift_slowAlloc();
      *(_QWORD *)&v49[0] = v48;
      *(_DWORD *)v37 = 136315394;
      v38 = sub_232201BF0();
      v51 = sub_232013174(v38, v39, (uint64_t *)v49);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 2080;
      v46[1] = v37 + 14;
      v40 = v32;
      v41 = objc_msgSend(v40, sel_description);
      v42 = sub_232200EC4();
      v44 = v43;

      v51 = sub_232013174(v42, v44, (uint64_t *)v49);
      sub_232201710();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v33, (os_log_type_t)v47, "[%s]: Unsupported sample type: %s", (uint8_t *)v37, 0x16u);
      v45 = v48;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v45, -1, -1);
      MEMORY[0x2348FF468](v37, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return 0;
  }
  v17 = v16;
  sub_232003E9C(0, &qword_255F9C0B0);
  v18 = a1;
  v19 = (void *)sub_232010CEC(v17);
  v20 = a2
      + *(int *)(type metadata accessor for MostRecentSampleCurrentValueSummarySharableModelGenerator.Request(0) + 32);
  v21 = sub_232200180();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v15, v20, v21);
  v22 = *MEMORY[0x24BE4AD70];
  v23 = sub_2321FFD78();
  v24 = *(_QWORD *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 104))(v15, v22, v23);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v15, 0, 1, v23);
  v25 = a3;
  result = objc_msgSend(v19, sel_data);
  if (result)
  {
    v27 = result;
    sub_232003E9C(0, &qword_2541B0CD0);
    v28 = sub_2321FDAD4();
    v30 = v29;

    sub_23201C854((uint64_t)v15, (uint64_t)v13);
    v50 = 0;
    memset(v49, 0, sizeof(v49));
    v31 = sub_232015828(v28, v30, 9, (uint64_t)v13, (uint64_t)v25, 0, (uint64_t)v49);

    sub_232003ED4(v28, v30);
    sub_23201C898((uint64_t)v15);

    return v31;
  }
  __break(1u);
  return result;
}

uint64_t sub_23212A648()
{
  return type metadata accessor for GAD7AssessmentCurrentValueSummarySharableModelGenerator();
}

uint64_t type metadata accessor for GAD7AssessmentCurrentValueSummarySharableModelGenerator()
{
  uint64_t result;

  result = qword_2541B4DA8;
  if (!qword_2541B4DA8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23212A68C(uint64_t a1)
{
  uint64_t v1;

  if (a1 != 10)
    return 0;
  swift_unknownObjectRetain();
  return v1;
}

uint64_t sub_23212A758(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  char *v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;
  uint64_t v29;
  uint64_t v30;

  ObjectType = swift_getObjectType();
  v2 = sub_23220039C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, &qword_255F9F2E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v25 - v7;
  v9 = sub_2321FDABC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(a1, sel_notification);
  sub_232201350();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    v26 = v3;
    v27 = v2;
    sub_23212E44C((uint64_t)v8);
    v14 = v5;
    sub_23220036C();
    v15 = a1;
    v16 = sub_232200390();
    v17 = sub_2322012E4();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v19 = (_QWORD *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      v30 = v20;
      *(_DWORD *)v18 = 136446466;
      v21 = sub_232201BF0();
      v29 = sub_232013174(v21, v22, &v30);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2114;
      v23 = objc_msgSend(v15, sel_notification);
      v29 = (uint64_t)v23;
      sub_232201710();
      *v19 = v23;

      _os_log_impl(&dword_231FFB000, v16, v17, "%{public}s Cannot access URL for %{public}@", (uint8_t *)v18, 0x16u);
      sub_2320CF7E8(0, (unint64_t *)&qword_2541B78B0, (uint64_t)qword_2541B74A8, 0x24BEDCDF0, (void (*)(uint64_t, uint64_t, uint64_t))sub_232003E9C);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v19, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v20, -1, -1);
      MEMORY[0x2348FF468](v18, -1, -1);

    }
    else
    {

    }
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v14, v27);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    sub_23212CE70((uint64_t)v12);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

void sub_23212AABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;

  v1 = v0;
  v2 = OBJC_IVAR____TtC9Summaries20SummariesAppDelegate_healthStore;
  v3 = *(void **)(v1 + OBJC_IVAR____TtC9Summaries20SummariesAppDelegate_healthStore);
  if (v3
    || (v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3C40]), sel_init),
        v5 = *(void **)(v1 + v2),
        *(_QWORD *)(v1 + v2) = v4,
        v5,
        (v3 = *(void **)(v1 + v2)) != 0))
  {
    v6 = OBJC_IVAR____TtC9Summaries20SummariesAppDelegate_healthSharingNotificationSyncStore;
    v17 = v3;
    if (*(_QWORD *)(v1 + OBJC_IVAR____TtC9Summaries20SummariesAppDelegate_healthSharingNotificationSyncStore))
    {
      v7 = v3;
    }
    else
    {
      sub_232200EC4();
      v8 = objc_allocWithZone(MEMORY[0x24BDD3DA8]);
      v9 = v17;
      v10 = (void *)sub_232200E94();
      swift_bridgeObjectRelease();
      v11 = objc_msgSend(v8, sel_initWithClientIdentifier_healthStore_, v10, v9);

      v12 = *(void **)(v1 + v6);
      *(_QWORD *)(v1 + v6) = v11;

    }
    v13 = OBJC_IVAR____TtC9Summaries20SummariesAppDelegate_healthSharingAlertsNotificationContentStateManager;
    if (!*(_QWORD *)(v1
                    + OBJC_IVAR____TtC9Summaries20SummariesAppDelegate_healthSharingAlertsNotificationContentStateManager))
    {
      sub_2321FE128();
      v14 = v17;
      *(_QWORD *)(v1 + v13) = sub_2321FE110();
      swift_release();
    }
    v15 = OBJC_IVAR____TtC9Summaries20SummariesAppDelegate_trendsNotificationContentStateManager;
    if (*(_QWORD *)(v1 + OBJC_IVAR____TtC9Summaries20SummariesAppDelegate_trendsNotificationContentStateManager))
    {

    }
    else
    {
      sub_2321FE128();
      v16 = v17;
      *(_QWORD *)(v1 + v15) = sub_2321FE110();

      swift_release();
    }
  }
}

uint64_t sub_23212ACB4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v29;
  uint64_t v30;
  _QWORD *v31;
  id v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v5 = v4;
  ObjectType = swift_getObjectType();
  v11 = sub_23220039C();
  v38 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23220036C();
  v14 = sub_232200390();
  v15 = sub_2322012FC();
  v16 = os_log_type_enabled(v14, v15);
  v39 = ObjectType;
  if (v16)
  {
    v17 = swift_slowAlloc();
    v36 = a3;
    v18 = v17;
    v34 = swift_slowAlloc();
    v41 = v34;
    *(_DWORD *)v18 = 136446466;
    v35 = v11;
    v19 = sub_232201BF0();
    v37 = v5;
    v40 = sub_232013174(v19, v20, &v41);
    sub_232201710();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    v40 = sub_232013174(0xD000000000000060, 0x8000000232207DA0, &v41);
    sub_232201710();
    _os_log_impl(&dword_231FFB000, v14, v15, "%{public}s %s running", (uint8_t *)v18, 0x16u);
    v21 = v34;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v21, -1, -1);
    v22 = v18;
    a3 = v36;
    MEMORY[0x2348FF468](v22, -1, -1);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v13, v35);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v38 + 8))(v13, v11);
  }
  v23 = objc_msgSend(a1, sel_actionIdentifier);
  v24 = sub_232200EC4();
  v26 = v25;

  if (v24 == sub_232200EC4() && v26 == v27)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v29 = sub_232201ADC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v29 & 1) == 0)
      sub_23212A758(a1);
  }
  v30 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v31 = (_QWORD *)swift_allocObject();
  v31[2] = v30;
  v31[3] = a1;
  v31[4] = a3;
  v31[5] = a4;
  v31[6] = v39;
  swift_retain();
  v32 = a1;
  swift_retain();
  sub_23212B95C(v32, a2, (uint64_t)sub_23212E074, (uint64_t)v31);
  swift_release();
  return swift_release();
}

uint64_t sub_23212B0B0()
{
  return sub_232000590(&qword_2541B58A0, (uint64_t (*)(uint64_t))type metadata accessor for SummariesAppDelegate, (uint64_t)&unk_232217070);
}

void sub_23212B0DC(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31[3];

  v8 = sub_23220039C();
  v29 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1 + 16;
  sub_23220036C();
  v12 = sub_232200390();
  v13 = sub_2322012FC();
  if (os_log_type_enabled(v12, v13))
  {
    v27 = a3;
    v14 = swift_slowAlloc();
    v28 = a4;
    v15 = (uint8_t *)v14;
    v16 = swift_slowAlloc();
    v31[0] = v16;
    v26 = v8;
    *(_DWORD *)v15 = 136315138;
    v17 = sub_232201BF0();
    v30 = sub_232013174(v17, v18, v31);
    a3 = v27;
    sub_232201710();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_231FFB000, v12, v13, "%s About to send dismiss instruction", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v16, -1, -1);
    v19 = v15;
    a4 = v28;
    MEMORY[0x2348FF468](v19, -1, -1);

    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v26);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
  }
  swift_beginAccess();
  v20 = MEMORY[0x2348FF510](v11);
  if (v20)
  {
    v21 = (void *)v20;
    swift_beginAccess();
    v22 = MEMORY[0x2348FF510](v11);
    if (v22)
    {
      v23 = (void *)v22;
      v24 = *(void **)(v22 + OBJC_IVAR____TtC9Summaries20SummariesAppDelegate_healthSharingNotificationSyncStore);
      v25 = v24;

    }
    else
    {
      v24 = 0;
    }
    sub_23212B33C(a2, v24, a3, a4);

  }
}

uint64_t sub_23212B33C(void *a1, void *a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t);
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  unint64_t v33;
  unint64_t v34;
  id v35;
  void *v36;
  void *v37;
  char *v38;
  NSObject *v39;
  os_log_type_t v40;
  _BOOL4 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void *v53;
  _QWORD *v54;
  uint64_t v55;
  void *v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  void *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  char *v66;
  _QWORD *v67;
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t aBlock[7];

  v60 = a2;
  v64 = a1;
  ObjectType = swift_getObjectType();
  v7 = sub_2321FDC6C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v58 - v12;
  v69 = sub_23220039C();
  v67 = *(_QWORD **)(v69 - 8);
  v14 = MEMORY[0x24BDAC7A8](v69);
  v66 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v58 - v16;
  sub_23220036C();
  v18 = sub_232200390();
  v19 = sub_2322012FC();
  v20 = os_log_type_enabled(v18, v19);
  v62 = v8;
  v63 = v7;
  v65 = ObjectType;
  if (v20)
  {
    v21 = swift_slowAlloc();
    v61 = v11;
    v22 = v21;
    v23 = swift_slowAlloc();
    aBlock[0] = v23;
    *(_DWORD *)v22 = 136315394;
    v24 = sub_232201BF0();
    v70 = sub_232013174(v24, v25, aBlock);
    v59 = (uint64_t)v13;
    sub_232201710();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2080;
    v70 = sub_232013174(0xD000000000000050, 0x8000000232207E90, aBlock);
    v13 = (char *)v59;
    sub_232201710();
    _os_log_impl(&dword_231FFB000, v18, v19, "%s %s running", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v23, -1, -1);
    v26 = v22;
    v11 = v61;
    MEMORY[0x2348FF468](v26, -1, -1);
  }

  v27 = (uint64_t (*)(char *, uint64_t))v67[1];
  v28 = v27(v17, v69);
  if (*((_BYTE *)v68 + OBJC_IVAR____TtC9Summaries20SummariesAppDelegate_shouldDismissNotificationsUrgently) != 1)
    return a3(v28);
  v68 = (void (*)(char *, uint64_t))v27;
  v29 = objc_msgSend(v64, sel_notification);
  v30 = objc_msgSend(v29, sel_request);

  v31 = objc_msgSend(v30, sel_identifier);
  v32 = (void *)sub_232200EC4();
  v34 = v33;

  sub_2321FDC60();
  sub_2322010A4();
  sub_2321FDBE8();
  v35 = objc_allocWithZone(MEMORY[0x24BDD3D88]);
  swift_bridgeObjectRetain();
  v36 = (void *)sub_232200E94();
  swift_bridgeObjectRelease();
  v37 = (void *)sub_2321FDBF4();
  v67 = objc_msgSend(v35, sel_initWithAction_categoryIdentifier_expirationDate_, 1, v36, v37);

  v38 = v66;
  sub_23220036C();
  swift_bridgeObjectRetain_n();
  v39 = sub_232200390();
  v40 = sub_2322012FC();
  v41 = os_log_type_enabled(v39, v40);
  v58 = a4;
  v64 = v32;
  if (v41)
  {
    v42 = swift_slowAlloc();
    v61 = v11;
    v43 = v42;
    v59 = swift_slowAlloc();
    aBlock[0] = v59;
    *(_DWORD *)v43 = 136446466;
    v44 = sub_232201BF0();
    v70 = sub_232013174(v44, v45, aBlock);
    sub_232201710();
    swift_bridgeObjectRelease();
    *(_WORD *)(v43 + 12) = 2080;
    swift_bridgeObjectRetain();
    v70 = sub_232013174((uint64_t)v32, v34, aBlock);
    sub_232201710();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_231FFB000, v39, v40, "%{public}s Sending dismiss instruction for %s)", (uint8_t *)v43, 0x16u);
    v46 = v59;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v46, -1, -1);
    v47 = v43;
    v11 = v61;
    MEMORY[0x2348FF468](v47, -1, -1);

    v48 = v66;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v48 = v38;
  }
  v68(v48, v69);
  v51 = v62;
  v50 = v63;
  v52 = v60;
  v53 = v67;
  if (v60)
  {
    v54 = (_QWORD *)swift_allocObject();
    v54[2] = v64;
    v54[3] = v34;
    v55 = v58;
    v54[4] = a3;
    v54[5] = v55;
    v54[6] = v65;
    aBlock[4] = (uint64_t)sub_23212E424;
    aBlock[5] = (uint64_t)v54;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_23212CE10;
    aBlock[3] = (uint64_t)&unk_2501045D0;
    v56 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v52, sel_sendNotificationInstruction_completion_, v53, v56);
    _Block_release(v56);
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  v57 = *(void (**)(char *, uint64_t))(v51 + 8);
  v57(v11, v50);
  return ((uint64_t (*)(char *, uint64_t))v57)(v13, v50);
}

uint64_t sub_23212B95C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50[3];
  uint64_t v51;

  v40 = a2;
  v49 = a1;
  ObjectType = swift_getObjectType();
  sub_23212E084();
  v8 = v7;
  v42 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v41 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23220039C();
  v48 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v39 - v14;
  sub_23220036C();
  v16 = sub_232200390();
  v17 = sub_2322012FC();
  v18 = os_log_type_enabled(v16, v17);
  v47 = ObjectType;
  v43 = v8;
  if (v18)
  {
    v19 = swift_slowAlloc();
    v45 = a3;
    v20 = v19;
    v21 = swift_slowAlloc();
    v44 = v13;
    v22 = v21;
    v50[0] = v21;
    *(_DWORD *)v20 = 136315394;
    v23 = sub_232201BF0();
    v46 = a4;
    v51 = sub_232013174(v23, v24, v50);
    sub_232201710();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2080;
    v51 = sub_232013174(0xD000000000000054, 0x8000000232207E10, v50);
    a4 = v46;
    sub_232201710();
    _os_log_impl(&dword_231FFB000, v16, v17, "%s %s running", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v22, -1, -1);
    v25 = v20;
    a3 = v45;
    MEMORY[0x2348FF468](v25, -1, -1);
  }

  v48 = *(_QWORD *)(v48 + 8);
  ((void (*)(char *, uint64_t))v48)(v15, v10);
  v26 = objc_msgSend(v49, sel_notification);
  v27 = objc_msgSend(v26, sel_request);

  v28 = objc_msgSend(v27, sel_content);
  v29 = objc_msgSend(v28, sel_userInfo);

  v30 = sub_232200DD4();
  v31 = sub_2320E3BD4(v30);
  v32 = swift_bridgeObjectRelease();
  MEMORY[0x24BDAC7A8](v32);
  *(&v39 - 2) = v40;
  v33 = sub_23209CE94((_QWORD *(*)(uint64_t *__return_ptr, uint64_t))sub_23212E178, (uint64_t)(&v39 - 4), v31);
  swift_bridgeObjectRelease();
  v50[0] = v33;
  sub_23212E0FC();
  sub_2320057B8(0, &qword_255F9F6E0, (uint64_t (*)(uint64_t))sub_23212E0FC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_232000590(&qword_255F9F6D8, (uint64_t (*)(uint64_t))sub_23212E0FC, MEMORY[0x24BDB9AF8]);
  sub_23212E190();
  v34 = v41;
  sub_2322005E8();
  v35 = (_QWORD *)swift_allocObject();
  v35[2] = a3;
  v35[3] = a4;
  v36 = v47;
  v35[4] = v47;
  *(_QWORD *)(swift_allocObject() + 16) = v36;
  sub_232000590(&qword_255F9F6F0, (uint64_t (*)(uint64_t))sub_23212E084, MEMORY[0x24BDB99D8]);
  swift_retain();
  v37 = v43;
  sub_2322007C8();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v34, v37);
  swift_beginAccess();
  sub_232200630();
  swift_endAccess();

  return swift_release();
}

uint64_t sub_23212C0E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;

  v7 = sub_2321FE95C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  sub_23212E238();
  v22 = *(_QWORD *)(v10 - 8);
  v23 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23212E2CC(a2, (uint64_t)v24);
  v13 = v25;
  if (v25)
  {
    v20 = a3;
    sub_232016AD8(v24, v25);
    v21 = v3;
    v26 = sub_2321FE8F0();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
    v14 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v15 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v15 + v14, (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = sub_23212E390;
    *(_QWORD *)(v16 + 24) = v15;
    sub_232048D04();
    sub_232000590((unint64_t *)&qword_2541AF300, (uint64_t (*)(uint64_t))sub_232048D04, MEMORY[0x24BDB9AF8]);
    sub_2322007A4();
    a3 = v20;
    swift_release();
    swift_release();
    sub_232016AFC((uint64_t)v24);
    sub_232000590((unint64_t *)&unk_255F9F700, (uint64_t (*)(uint64_t))sub_23212E238, MEMORY[0x24BDB96C0]);
    v17 = v23;
    v13 = sub_232200774();
    result = (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v12, v17);
  }
  else
  {
    result = sub_23212DFC0((uint64_t)v24);
  }
  *a3 = v13;
  return result;
}

uint64_t sub_23212C320(void **a1, uint64_t (*a2)(_QWORD), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t (*v36)(_QWORD);
  uint64_t v37;
  uint64_t v38;

  v6 = sub_23220039C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v35 - v11;
  v13 = *a1;
  if (v13)
  {
    v14 = v13;
    sub_23220036C();
    v15 = v13;
    v16 = v13;
    v17 = sub_232200390();
    v18 = sub_2322012E4();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v20 = swift_slowAlloc();
      v35 = a3;
      v21 = v20;
      v38 = v20;
      *(_DWORD *)v19 = 136446466;
      v36 = a2;
      v22 = sub_232201BF0();
      v37 = sub_232013174(v22, v23, &v38);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2082;
      v37 = (uint64_t)v13;
      v24 = v13;
      sub_232016A8C(0, (unint64_t *)&qword_2541B78D0);
      v25 = sub_232200F0C();
      v37 = sub_232013174(v25, v26, &v38);
      a2 = v36;
      sub_232201710();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_231FFB000, v17, v18, "%{public}s Could not acknowledge notification: %{public}s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v21, -1, -1);
      MEMORY[0x2348FF468](v19, -1, -1);

    }
    else
    {

    }
    v33 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  else
  {
    sub_23220036C();
    v27 = sub_232200390();
    v28 = sub_2322012FC();
    if (os_log_type_enabled(v27, v28))
    {
      v35 = a3;
      v29 = (uint8_t *)swift_slowAlloc();
      v30 = swift_slowAlloc();
      v38 = v30;
      v36 = a2;
      *(_DWORD *)v29 = 136446210;
      v31 = sub_232201BF0();
      v37 = sub_232013174(v31, v32, &v38);
      a2 = v36;
      sub_232201710();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v27, v28, "%{public}s Acknowledged all notifiable content state", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v30, -1, -1);
      MEMORY[0x2348FF468](v29, -1, -1);
    }

    v33 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return a2(v33);
}

uint64_t sub_23212C6C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = sub_2321FE95C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23220039C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23220036C();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v10 = sub_232200390();
  v11 = sub_2322012FC();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v23 = v7;
    v13 = v12;
    v22 = swift_slowAlloc();
    v25 = v22;
    *(_DWORD *)v13 = 136446466;
    v14 = sub_232201BF0();
    v24 = sub_232013174(v14, v15, &v25);
    v21 = v6;
    sub_232201710();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    v16 = sub_2321FE950();
    v24 = sub_232013174(v16, v17, &v25);
    sub_232201710();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    _os_log_impl(&dword_231FFB000, v10, v11, "%{public}s Updated notification content state to %s", (uint8_t *)v13, 0x16u);
    v18 = v22;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v18, -1, -1);
    MEMORY[0x2348FF468](v13, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v9, v21);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_23212C924(int a1, void *a2, uint64_t a3, unint64_t a4, uint64_t (*a5)(_QWORD), uint64_t a6, uint64_t a7)
{
  NSObject *v12;
  Class isa;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, NSObject *);
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  char *v46;
  NSObject *v47;
  uint64_t v49;
  uint64_t v50;
  Class v51;
  uint64_t v52;
  int v53;
  int v54;
  char *v55;
  uint64_t v56;
  uint64_t (*v57)(_QWORD);
  uint64_t v58;
  NSObject *v59;
  uint64_t v60;
  uint64_t v61;

  v58 = a7;
  v54 = a1;
  v12 = sub_23220039C();
  isa = v12[-1].isa;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v49 - v17;
  sub_23220036C();
  swift_bridgeObjectRetain_n();
  v19 = sub_232200390();
  v20 = sub_2322012FC();
  v59 = v19;
  v53 = v20;
  v21 = os_log_type_enabled(v19, v20);
  v52 = a3;
  if (v21)
  {
    v22 = swift_slowAlloc();
    v57 = a5;
    v23 = v22;
    v50 = swift_slowAlloc();
    v61 = v50;
    *(_DWORD *)v23 = 136446722;
    v56 = a6;
    v24 = sub_232201BF0();
    v51 = isa;
    v60 = sub_232013174(v24, v25, &v61);
    v55 = v16;
    sub_232201710();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2080;
    swift_bridgeObjectRetain();
    v60 = sub_232013174(a3, a4, &v61);
    v16 = v55;
    a6 = v56;
    sub_232201710();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v23 + 22) = 1024;
    LODWORD(v60) = v54 & 1;
    sub_232201710();
    v26 = v59;
    _os_log_impl(&dword_231FFB000, v59, (os_log_type_t)v53, "%{public}s Sent dismiss instruction for %s successfully: %{BOOL}d", (uint8_t *)v23, 0x1Cu);
    v27 = v50;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v27, -1, -1);
    v28 = v23;
    a5 = v57;
    MEMORY[0x2348FF468](v28, -1, -1);

    v29 = (uint64_t (*)(char *, NSObject *))*((_QWORD *)v51 + 1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v29 = (uint64_t (*)(char *, NSObject *))*((_QWORD *)isa + 1);
  }
  v30 = v29(v18, v12);
  if (a2)
  {
    v31 = a2;
    sub_23220036C();
    swift_bridgeObjectRetain();
    v32 = a2;
    swift_bridgeObjectRetain();
    v33 = a2;
    v34 = sub_232200390();
    v35 = sub_2322012E4();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = swift_slowAlloc();
      v55 = v16;
      v37 = v36;
      v38 = swift_slowAlloc();
      v57 = a5;
      v39 = v38;
      v61 = v38;
      *(_DWORD *)v37 = 136446722;
      v56 = a6;
      v40 = sub_232201BF0();
      v59 = v12;
      v60 = sub_232013174(v40, v41, &v61);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 2080;
      swift_bridgeObjectRetain();
      v60 = sub_232013174(v52, a4, &v61);
      sub_232201710();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v37 + 22) = 2082;
      v60 = (uint64_t)a2;
      v42 = a2;
      sub_232016A8C(0, (unint64_t *)&qword_2541B78D0);
      v43 = sub_232200F0C();
      v60 = sub_232013174(v43, v44, &v61);
      sub_232201710();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_231FFB000, v34, v35, "%{public}s Unable to send dismiss instruction for %s. %{public}s", (uint8_t *)v37, 0x20u);
      swift_arrayDestroy();
      v45 = v39;
      a5 = v57;
      MEMORY[0x2348FF468](v45, -1, -1);
      MEMORY[0x2348FF468](v37, -1, -1);

      v46 = v55;
      v47 = v59;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v46 = v16;
      v47 = v12;
    }
    v30 = v29(v46, v47);
  }
  return a5(v30);
}

void sub_23212CE10(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

void sub_23212CE70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  NSObject *v18;
  os_log_type_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  uint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void *v37;
  _BYTE *v38;
  unint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  _BYTE v43[4];
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(_BYTE *, uint64_t, uint64_t);
  id v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t ObjectType;
  uint64_t aBlock[6];
  uint64_t v54;

  ObjectType = swift_getObjectType();
  v2 = sub_2321FDABC();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = MEMORY[0x24BDAC7A8](v2);
  v50 = &v43[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v43[-v6];
  v8 = sub_23220039C();
  v51 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = &v43[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v13 = &v43[-v12];
  v14 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v15 = objc_msgSend(v14, sel_connectedScenes);

  sub_232003E9C(0, &qword_255F9F710);
  sub_23212E4A0();
  v16 = sub_2322010BC();

  v17 = (void *)sub_23200ED84(v16);
  swift_bridgeObjectRelease();
  if (v17)
  {
    v49 = v17;
    sub_23220036C();
    v48 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16);
    v48(v7, a1, v2);
    v18 = sub_232200390();
    v19 = sub_2322012FC();
    v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      v21 = swift_slowAlloc();
      v47 = a1;
      v44 = v20;
      v22 = v21;
      v45 = swift_slowAlloc();
      aBlock[0] = v45;
      *(_DWORD *)v22 = 136446466;
      v23 = sub_232201BF0();
      v46 = v8;
      v54 = sub_232013174(v23, v24, aBlock);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2082;
      sub_232000590((unint64_t *)&unk_255F9F720, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
      v25 = sub_232201AB8();
      v54 = sub_232013174(v25, v26, aBlock);
      sub_232201710();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v7, v2);
      _os_log_impl(&dword_231FFB000, v18, (os_log_type_t)v44, "%{public}s Opening %{public}s", (uint8_t *)v22, 0x16u);
      v27 = v45;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v27, -1, -1);
      a1 = v47;
      MEMORY[0x2348FF468](v22, -1, -1);

      (*(void (**)(_BYTE *, uint64_t))(v51 + 8))(v13, v46);
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v7, v2);

      (*(void (**)(_BYTE *, uint64_t))(v51 + 8))(v13, v8);
    }
    v37 = (void *)sub_2321FDA98();
    v38 = v50;
    v48(v50, a1, v2);
    v39 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v40 = swift_allocObject();
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v3 + 32))(v40 + v39, v38, v2);
    *(_QWORD *)(v40 + ((v4 + v39 + 7) & 0xFFFFFFFFFFFFFFF8)) = ObjectType;
    aBlock[4] = (uint64_t)sub_23212E564;
    aBlock[5] = v40;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_23212D684;
    aBlock[3] = (uint64_t)&unk_250104620;
    v41 = _Block_copy(aBlock);
    swift_release();
    v42 = v49;
    objc_msgSend(v49, sel_openURL_options_completionHandler_, v37, 0, v41);
    _Block_release(v41);

  }
  else
  {
    sub_23220036C();
    v28 = sub_232200390();
    v29 = sub_2322012E4();
    v30 = os_log_type_enabled(v28, v29);
    v31 = v51;
    if (v30)
    {
      v32 = (uint8_t *)swift_slowAlloc();
      v33 = v8;
      v34 = swift_slowAlloc();
      aBlock[0] = v34;
      *(_DWORD *)v32 = 136446210;
      v35 = sub_232201BF0();
      v54 = sub_232013174(v35, v36, aBlock);
      sub_232201710();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v28, v29, "%{public}s Can not find connected scene. Something is really wrong!", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v34, -1, -1);
      MEMORY[0x2348FF468](v32, -1, -1);

      (*(void (**)(_BYTE *, uint64_t))(v31 + 8))(v11, v33);
    }
    else
    {

      (*(void (**)(_BYTE *, uint64_t))(v31 + 8))(v11, v8);
    }
  }
}

uint64_t sub_23212D3FC(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  _BYTE *v12;
  NSObject *v13;
  os_log_type_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _BYTE v23[12];
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = sub_2321FDABC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_23220039C();
  v9 = *(_QWORD *)(v8 - 8);
  result = MEMORY[0x24BDAC7A8](v8);
  v12 = &v23[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((a1 & 1) == 0)
  {
    sub_23220036C();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
    v13 = sub_232200390();
    v14 = sub_2322012E4();
    v15 = v14;
    if (os_log_type_enabled(v13, v14))
    {
      v16 = swift_slowAlloc();
      v26 = v8;
      v17 = v16;
      v25 = swift_slowAlloc();
      v28 = v25;
      *(_DWORD *)v17 = 136446466;
      v24 = v15;
      v18 = sub_232201BF0();
      v27 = sub_232013174(v18, v19, &v28);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2082;
      sub_232000590((unint64_t *)&unk_255F9F720, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
      v20 = sub_232201AB8();
      v27 = sub_232013174(v20, v21, &v28);
      sub_232201710();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
      _os_log_impl(&dword_231FFB000, v13, (os_log_type_t)v24, "%{public}s Could not open %{public}s", (uint8_t *)v17, 0x16u);
      v22 = v25;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v22, -1, -1);
      MEMORY[0x2348FF468](v17, -1, -1);

      return (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v12, v26);
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);

      return (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v12, v8);
    }
  }
  return result;
}

uint64_t sub_23212D684(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_23212D6C0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_23212D6E4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_23212D6F0(uint64_t (*a1)(_QWORD), uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t (*v17)(_QWORD);
  uint64_t v18;
  uint64_t v19;

  swift_getObjectType();
  v4 = sub_23220039C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23220036C();
  v8 = sub_232200390();
  v9 = sub_2322012FC();
  if (os_log_type_enabled(v8, v9))
  {
    v17 = a1;
    v10 = swift_slowAlloc();
    v16 = a2;
    v11 = (uint8_t *)v10;
    v12 = swift_slowAlloc();
    v19 = v12;
    *(_DWORD *)v11 = 136446210;
    v13 = sub_232201BF0();
    v18 = sub_232013174(v13, v14, &v19);
    a1 = v17;
    sub_232201710();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_231FFB000, v8, v9, "%{public}s Received notification in foreground mode", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v12, -1, -1);
    MEMORY[0x2348FF468](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return a1(26);
}

uint64_t sub_23212D8A8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v34[2];
  void *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;

  v40 = a2;
  v41 = a3;
  ObjectType = swift_getObjectType();
  v5 = sub_23220039C();
  v39 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v38 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v34 - v8;
  v10 = objc_msgSend(a1, sel_notification);
  v11 = objc_msgSend(v10, sel_request);

  v12 = objc_msgSend(v11, sel_identifier);
  v13 = sub_232200EC4();
  v15 = v14;

  v35 = a1;
  v16 = objc_msgSend(a1, sel_actionIdentifier);
  v17 = sub_232200EC4();
  v19 = v18;

  sub_23220036C();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v20 = sub_232200390();
  v21 = sub_2322012FC();
  v22 = os_log_type_enabled(v20, v21);
  v42 = v17;
  v34[1] = ObjectType;
  if (v22)
  {
    v23 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v37 = v5;
    v34[0] = v24;
    *(_QWORD *)&v43 = v24;
    *(_DWORD *)v23 = 136446978;
    v25 = sub_232201BF0();
    v46 = sub_232013174(v25, v26, (uint64_t *)&v43);
    sub_232201710();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2082;
    v46 = sub_232013174(0xD00000000000003BLL, 0x8000000232207D60, (uint64_t *)&v43);
    sub_232201710();
    *(_WORD *)(v23 + 22) = 2080;
    swift_bridgeObjectRetain();
    v46 = sub_232013174(v13, v15, (uint64_t *)&v43);
    sub_232201710();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v23 + 32) = 2082;
    swift_bridgeObjectRetain();
    v46 = sub_232013174(v42, v19, (uint64_t *)&v43);
    sub_232201710();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_231FFB000, v20, v21, "%{public}s %{public}s notification: %s action: %{public}s", (uint8_t *)v23, 0x2Au);
    v27 = v34[0];
    swift_arrayDestroy();
    v5 = v37;
    MEMORY[0x2348FF468](v27, -1, -1);
    MEMORY[0x2348FF468](v23, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v39 + 8))(v9, v5);
  v28 = sub_2321ED9A8(v13, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v29 = v36;
  sub_23212AABC();
  if ((v28 & 1) != 0)
    v30 = &OBJC_IVAR____TtC9Summaries20SummariesAppDelegate_trendsNotificationContentStateManager;
  else
    v30 = &OBJC_IVAR____TtC9Summaries20SummariesAppDelegate_healthSharingAlertsNotificationContentStateManager;
  v31 = *v30;
  if (*(_QWORD *)(v29 + *v30)
    && (swift_retain(), sub_2321FE11C(), swift_release(), (v32 = *(_QWORD *)(v29 + v31)) != 0))
  {
    *((_QWORD *)&v44 + 1) = sub_2321FE128();
    v45 = sub_232000590(&qword_2541B2330, (uint64_t (*)(uint64_t))MEMORY[0x24BE47380], MEMORY[0x24BE47378]);
    *(_QWORD *)&v43 = v32;
  }
  else
  {
    v45 = 0;
    v43 = 0u;
    v44 = 0u;
  }
  swift_retain();
  sub_23212ACB4(v35, (uint64_t)&v43, v40, v41);
  return sub_23212DFC0((uint64_t)&v43);
}

uint64_t sub_23212DFC0(uint64_t a1)
{
  uint64_t v2;

  sub_2320CF7E8(0, &qword_255F9F6B0, (uint64_t)&unk_255F9F6B8, MEMORY[0x24BE482D8], (void (*)(uint64_t, uint64_t, uint64_t))sub_232016A8C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23212E01C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23212E040()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

void sub_23212E074()
{
  uint64_t v0;

  sub_23212B0DC(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32), *(_QWORD *)(v0 + 40));
}

void sub_23212E084()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9F6C8)
  {
    sub_23212E0FC();
    sub_232000590(&qword_255F9F6D8, (uint64_t (*)(uint64_t))sub_23212E0FC, MEMORY[0x24BDB9AF8]);
    v0 = sub_2322005DC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9F6C8);
  }
}

void sub_23212E0FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9F6D0)
  {
    sub_2321FE95C();
    sub_232016A8C(255, (unint64_t *)&qword_2541B78D0);
    v0 = sub_232200624();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9F6D0);
  }
}

uint64_t sub_23212E178@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_23212C0E8(a1, *(_QWORD *)(v2 + 16), a2);
}

unint64_t sub_23212E190()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F9F6E8;
  if (!qword_255F9F6E8)
  {
    sub_2320057B8(255, &qword_255F9F6E0, (uint64_t (*)(uint64_t))sub_23212E0FC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_255F9F6E8);
  }
  return result;
}

uint64_t sub_23212E1F0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23212E214(void **a1)
{
  uint64_t v1;

  return sub_23212C320(a1, *(uint64_t (**)(_QWORD))(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23212E220()
{
  return swift_deallocObject();
}

uint64_t sub_23212E230(uint64_t a1)
{
  return sub_23212C6C4(a1);
}

void sub_23212E238()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9F6F8)
  {
    sub_232048D04();
    sub_2321FE95C();
    sub_232000590((unint64_t *)&qword_2541AF300, (uint64_t (*)(uint64_t))sub_232048D04, MEMORY[0x24BDB9AF8]);
    v0 = sub_232200540();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9F6F8);
  }
}

uint64_t sub_23212E2CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2320CF7E8(0, &qword_255F9F6B0, (uint64_t)&unk_255F9F6B8, MEMORY[0x24BE482D8], (void (*)(uint64_t, uint64_t, uint64_t))sub_232016A8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23212E330()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_2321FE95C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_23212E390@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_2321FE95C();
  return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80)), v3);
}

uint64_t sub_23212E3D4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23212E3F8()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23212E424(int a1, void *a2)
{
  uint64_t v2;

  return sub_23212C924(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(uint64_t (**)(_QWORD))(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_23212E434(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23212E444()
{
  return swift_release();
}

uint64_t sub_23212E44C(uint64_t a1)
{
  uint64_t v2;

  sub_2320057B8(0, &qword_255F9F2E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23212E4A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F9F718;
  if (!qword_255F9F718)
  {
    v1 = sub_232003E9C(255, &qword_255F9F710);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_255F9F718);
  }
  return result;
}

uint64_t sub_23212E4F8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_2321FDABC();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_23212E564(char a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_2321FDABC() - 8) + 80);
  return sub_23212D3FC(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_23212E5B4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t type metadata accessor for DataTypeDetailWorkoutDetailDisclosureDataSource(uint64_t a1)
{
  return sub_23201A14C(a1, qword_255F9F730);
}

uint64_t sub_23212E5E4()
{
  return sub_23212EA70();
}

unint64_t sub_23212E5F0()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_23212E610()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _BYTE v6[24];
  ValueMetadata *v7;
  unint64_t v8;

  v0 = sub_2321FF3A0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = &v6[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_2321FF3AC();
  v7 = &type metadata for WorkoutsDataTypeDetailConfigurationProvider.ShowAdditionalItemsComponent;
  v8 = sub_23212FC10();
  sub_2321FF3C4();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BE43EE0], v0);
  sub_2321FF418();
  sub_2321FF6F4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return sub_232016AFC((uint64_t)v6);
}

uint64_t sub_23212E724(uint64_t a1, void *a2)
{
  char *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _OWORD v18[2];

  v3 = (char *)objc_allocWithZone((Class)type metadata accessor for WorkoutSampleDetailViewController(0));
  *(_QWORD *)&v3[qword_255F9E4F0] = a2;
  type metadata accessor for WorkoutSampleDetailCompoundDataSource(0);
  v4 = swift_allocObject();
  type metadata accessor for DataTypeDetailWorkoutRouteDataSource(0);
  swift_allocObject();
  v5 = a2;
  swift_retain();
  v6 = sub_23212EBC4((uint64_t)v5);
  v7 = qword_255F9E4F8;
  *(_QWORD *)(v4 + qword_255F9E4F8) = v6;
  type metadata accessor for DataTypeDetailWorkoutEffortDataSource(0);
  swift_allocObject();
  v8 = v5;
  v9 = sub_23212F0C0((uint64_t)v8);

  v10 = qword_255F9E500;
  *(_QWORD *)(v4 + qword_255F9E500) = v9;
  type metadata accessor for DataTypeDetailWorkoutEstimatedEffortDataSource(0);
  swift_allocObject();
  v11 = v8;
  v12 = sub_23212F5C8((uint64_t)v11);

  v13 = qword_255F9E508;
  *(_QWORD *)(v4 + qword_255F9E508) = v12;
  swift_release();
  sub_23209823C();
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_232211930;
  v15 = MEMORY[0x24BE43520];
  *(_QWORD *)(v14 + 32) = *(_QWORD *)(v4 + v7);
  *(_QWORD *)(v14 + 40) = v15;
  *(_QWORD *)(v14 + 48) = *(_QWORD *)(v4 + v10);
  *(_QWORD *)(v14 + 56) = v15;
  *(_QWORD *)(v14 + 64) = *(_QWORD *)(v4 + v13);
  *(_QWORD *)(v14 + 72) = v15;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_2321FF2F8();
  v16 = (void *)sub_2321FF7E4();
  memset(v18, 0, sizeof(v18));
  sub_232201410();

  return sub_232031840((uint64_t)v18);
}

uint64_t sub_23212E8F0()
{
  return sub_23212EAA8();
}

void sub_23212E904()
{
  sub_23212EB98();
}

void sub_23212E928()
{
  sub_23212EB98();
}

uint64_t sub_23212E94C()
{
  sub_2321FF5F8();
  return swift_deallocClassInstance();
}

uint64_t sub_23212E968()
{
  return type metadata accessor for DataTypeDetailWorkoutDetailDisclosureDataSource(0);
}

uint64_t type metadata accessor for DataTypeDetailWorkoutRouteDataSource(uint64_t a1)
{
  return sub_23201A14C(a1, qword_255F9F780);
}

uint64_t sub_23212E984()
{
  return sub_23212EA70();
}

void sub_23212E990()
{
  sub_23212EB98();
}

void sub_23212E9B4()
{
  sub_23212EB98();
}

uint64_t sub_23212E9D8()
{
  return type metadata accessor for DataTypeDetailWorkoutRouteDataSource(0);
}

uint64_t type metadata accessor for DataTypeDetailWorkoutEffortDataSource(uint64_t a1)
{
  return sub_23201A14C(a1, qword_255F9F7D0);
}

uint64_t sub_23212E9F4()
{
  return sub_23212EA70();
}

void sub_23212EA00()
{
  sub_23212EB98();
}

void sub_23212EA24()
{
  sub_23212EB98();
}

uint64_t sub_23212EA48()
{
  return type metadata accessor for DataTypeDetailWorkoutEffortDataSource(0);
}

uint64_t type metadata accessor for DataTypeDetailWorkoutEstimatedEffortDataSource(uint64_t a1)
{
  return sub_23201A14C(a1, qword_255F9F820);
}

uint64_t sub_23212EA64()
{
  return sub_23212EA70();
}

uint64_t sub_23212EA70()
{
  return swift_initClassMetadata2();
}

uint64_t sub_23212EAA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_2321FF19C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2321FF184();
  sub_2321FF2E0();
  v4 = sub_2321FF190();
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

void sub_23212EB50()
{
  sub_23212EB98();
}

void sub_23212EB74()
{
  sub_23212EB98();
}

void sub_23212EB98()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_23212EBBC()
{
  return type metadata accessor for DataTypeDetailWorkoutEstimatedEffortDataSource(0);
}

uint64_t sub_23212EBC4(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  _QWORD v12[2];
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18[2];
  _BYTE v19[40];
  __int128 v20;
  uint64_t v21;
  uint64_t v22;

  v12[1] = a1;
  v15 = sub_2321FDCC0();
  v14 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v13 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2541B7488 != -1)
    swift_once();
  sub_2321FDA14();
  sub_2321FDA14();
  v20 = xmmword_232210D30;
  sub_2321FECA4();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_workoutRouteType);
  sub_2321FEC8C();

  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_workoutRouteType);
  sub_2321FEC98();

  swift_bridgeObjectRelease();
  sub_23212FB0C((uint64_t)&v21, (uint64_t)v19);
  sub_23212FB60((uint64_t)v19, (uint64_t)&v16);
  if (v17)
  {
    sub_2320167F8(&v16, (uint64_t)v18);
    sub_2320167F8(v18, (uint64_t)&v16);
    v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v5 = sub_232097508(0, v5[2] + 1, 1, v5);
    v7 = v5[2];
    v6 = v5[3];
    if (v7 >= v6 >> 1)
      v5 = sub_232097508((_QWORD *)(v6 > 1), v7 + 1, 1, v5);
    v5[2] = v7 + 1;
    sub_2320167F8(&v16, (uint64_t)&v5[5 * v7 + 4]);
  }
  else
  {
    sub_23212FBB4((uint64_t)&v16);
    v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  sub_23212FB0C((uint64_t)&v22, (uint64_t)v19);
  sub_23212FB60((uint64_t)v19, (uint64_t)&v16);
  if (v17)
  {
    sub_2320167F8(&v16, (uint64_t)v18);
    sub_2320167F8(v18, (uint64_t)&v16);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v5 = sub_232097508(0, v5[2] + 1, 1, v5);
    v9 = v5[2];
    v8 = v5[3];
    if (v9 >= v8 >> 1)
      v5 = sub_232097508((_QWORD *)(v8 > 1), v9 + 1, 1, v5);
    v5[2] = v9 + 1;
    sub_2320167F8(&v16, (uint64_t)&v5[5 * v9 + 4]);
  }
  else
  {
    sub_23212FBB4((uint64_t)&v16);
  }
  sub_23213060C(0, &qword_255F9F870, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  swift_arrayDestroy();
  sub_2320057B8(0, &qword_255F9F878, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_2321FF0AC();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_232210D40;
  v10 = v13;
  sub_2321FDCB4();
  sub_2321FDC84();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v15);
  sub_2321FF0A0();
  return sub_2321FF5D4();
}

uint64_t sub_23212F0C0(uint64_t a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  void *v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  _QWORD v12[2];
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18[2];
  _BYTE v19[40];
  __int128 v20;
  uint64_t v21;
  uint64_t v22;

  v12[1] = a1;
  v15 = sub_2321FDCC0();
  v14 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v13 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2541B7488 != -1)
    swift_once();
  sub_2321FDA14();
  v12[0] = sub_2321FDA14();
  v20 = xmmword_232210D30;
  sub_2321FECA4();
  sub_23212FAD0();
  v2 = (id)*MEMORY[0x24BDD36E0];
  v3 = (void *)MEMORY[0x2348FE4B4]();
  sub_2321FEC8C();

  swift_bridgeObjectRelease();
  v4 = (void *)MEMORY[0x2348FE4B4](v2);
  sub_2321FEC98();

  swift_bridgeObjectRelease();
  sub_23212FB0C((uint64_t)&v21, (uint64_t)v19);
  sub_23212FB60((uint64_t)v19, (uint64_t)&v16);
  if (v17)
  {
    sub_2320167F8(&v16, (uint64_t)v18);
    sub_2320167F8(v18, (uint64_t)&v16);
    v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v5 = sub_232097508(0, v5[2] + 1, 1, v5);
    v7 = v5[2];
    v6 = v5[3];
    if (v7 >= v6 >> 1)
      v5 = sub_232097508((_QWORD *)(v6 > 1), v7 + 1, 1, v5);
    v5[2] = v7 + 1;
    sub_2320167F8(&v16, (uint64_t)&v5[5 * v7 + 4]);
  }
  else
  {
    sub_23212FBB4((uint64_t)&v16);
    v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  sub_23212FB0C((uint64_t)&v22, (uint64_t)v19);
  sub_23212FB60((uint64_t)v19, (uint64_t)&v16);
  if (v17)
  {
    sub_2320167F8(&v16, (uint64_t)v18);
    sub_2320167F8(v18, (uint64_t)&v16);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v5 = sub_232097508(0, v5[2] + 1, 1, v5);
    v9 = v5[2];
    v8 = v5[3];
    if (v9 >= v8 >> 1)
      v5 = sub_232097508((_QWORD *)(v8 > 1), v9 + 1, 1, v5);
    v5[2] = v9 + 1;
    sub_2320167F8(&v16, (uint64_t)&v5[5 * v9 + 4]);
  }
  else
  {
    sub_23212FBB4((uint64_t)&v16);
  }
  sub_23213060C(0, &qword_255F9F870, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  swift_arrayDestroy();
  sub_2320057B8(0, &qword_255F9F878, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_2321FF0AC();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_232210D40;
  v10 = v13;
  sub_2321FDCB4();
  sub_2321FDC84();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v15);
  sub_2321FF0A0();
  return sub_2321FF5D4();
}

uint64_t sub_23212F5C8(uint64_t a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  void *v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  _QWORD v12[2];
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18[2];
  _BYTE v19[40];
  __int128 v20;
  uint64_t v21;
  uint64_t v22;

  v12[1] = a1;
  v15 = sub_2321FDCC0();
  v14 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v13 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2541B7488 != -1)
    swift_once();
  sub_2321FDA14();
  v12[0] = sub_2321FDA14();
  v20 = xmmword_232210D30;
  sub_2321FECA4();
  sub_23212FAD0();
  v2 = (id)*MEMORY[0x24BDD3588];
  v3 = (void *)MEMORY[0x2348FE4B4]();
  sub_2321FEC8C();

  swift_bridgeObjectRelease();
  v4 = (void *)MEMORY[0x2348FE4B4](v2);
  sub_2321FEC98();

  swift_bridgeObjectRelease();
  sub_23212FB0C((uint64_t)&v21, (uint64_t)v19);
  sub_23212FB60((uint64_t)v19, (uint64_t)&v16);
  if (v17)
  {
    sub_2320167F8(&v16, (uint64_t)v18);
    sub_2320167F8(v18, (uint64_t)&v16);
    v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v5 = sub_232097508(0, v5[2] + 1, 1, v5);
    v7 = v5[2];
    v6 = v5[3];
    if (v7 >= v6 >> 1)
      v5 = sub_232097508((_QWORD *)(v6 > 1), v7 + 1, 1, v5);
    v5[2] = v7 + 1;
    sub_2320167F8(&v16, (uint64_t)&v5[5 * v7 + 4]);
  }
  else
  {
    sub_23212FBB4((uint64_t)&v16);
    v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  sub_23212FB0C((uint64_t)&v22, (uint64_t)v19);
  sub_23212FB60((uint64_t)v19, (uint64_t)&v16);
  if (v17)
  {
    sub_2320167F8(&v16, (uint64_t)v18);
    sub_2320167F8(v18, (uint64_t)&v16);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v5 = sub_232097508(0, v5[2] + 1, 1, v5);
    v9 = v5[2];
    v8 = v5[3];
    if (v9 >= v8 >> 1)
      v5 = sub_232097508((_QWORD *)(v8 > 1), v9 + 1, 1, v5);
    v5[2] = v9 + 1;
    sub_2320167F8(&v16, (uint64_t)&v5[5 * v9 + 4]);
  }
  else
  {
    sub_23212FBB4((uint64_t)&v16);
  }
  sub_23213060C(0, &qword_255F9F870, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  swift_arrayDestroy();
  sub_2320057B8(0, &qword_255F9F878, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_2321FF0AC();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_232210D40;
  v10 = v13;
  sub_2321FDCB4();
  sub_2321FDC84();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v15);
  sub_2321FF0A0();
  return sub_2321FF5D4();
}

unint64_t sub_23212FAD0()
{
  unint64_t result;

  result = qword_2541B0C28;
  if (!qword_2541B0C28)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2541B0C28);
  }
  return result;
}

uint64_t sub_23212FB0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23213060C(0, &qword_255F9F870, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23212FB60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23213060C(0, &qword_255F9F870, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23212FBB4(uint64_t a1)
{
  uint64_t v2;

  sub_23213060C(0, &qword_255F9F870, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for WorkoutsDataTypeDetailConfigurationProvider()
{
  return &type metadata for WorkoutsDataTypeDetailConfigurationProvider;
}

unint64_t sub_23212FC10()
{
  unint64_t result;

  result = qword_255F9F880;
  if (!qword_255F9F880)
  {
    result = MEMORY[0x2348FF39C](&unk_232216FB0, &type metadata for WorkoutsDataTypeDetailConfigurationProvider.ShowAdditionalItemsComponent);
    atomic_store(result, (unint64_t *)&qword_255F9F880);
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutsDataTypeDetailConfigurationProvider.ShowAdditionalItemsComponent()
{
  return &type metadata for WorkoutsDataTypeDetailConfigurationProvider.ShowAdditionalItemsComponent;
}

uint64_t sub_23212FC64(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  id v34;
  char *v35;
  uint64_t (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69[5];

  v63 = a1;
  v1 = sub_2321FDCC0();
  v65 = *(_QWORD *)(v1 - 8);
  v66 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v64 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_2321FF70C();
  v57 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v55 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_2321FF124();
  v52 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v56 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, &qword_255F9F888, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC408], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v53 = (char *)&v44 - v7;
  sub_2320057B8(0, &qword_255F9F890, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC088], v5);
  MEMORY[0x24BDAC7A8](v8);
  v47 = (char *)&v44 - v9;
  v48 = sub_2322003D8();
  v46 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2322003A8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_2321FF1E4();
  v61 = *(_QWORD *)(v16 - 8);
  v62 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v60 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_232200408();
  v68 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23220042C();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2541B7488 != -1)
    swift_once();
  sub_2321FDA14();
  sub_232200420();
  v50 = v23;
  sub_232200414();
  sub_2322003FC();
  v24 = objc_msgSend((id)objc_opt_self(), sel_tertiarySystemBackgroundColor);
  v45 = v19;
  sub_2322003F0();
  v69[3] = v20;
  v69[4] = MEMORY[0x24BEBC5F0];
  v49 = v20;
  v25 = sub_2320251BC(v69);
  v51 = v21;
  (*(void (**)(uint64_t *, char *, uint64_t))(v21 + 16))(v25, v23, v20);
  sub_2320057B8(0, &qword_255F9F898, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC0E0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_2322003E4();
  v26 = swift_allocObject();
  v67 = xmmword_232210D40;
  *(_OWORD *)(v26 + 16) = xmmword_232210D40;
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x24BEBC058], v12);
  v27 = sub_2322003B4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v47, 1, 1, v27);
  sub_2322003CC();
  sub_2322003C0();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v11, v48);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v28 = swift_allocObject();
  v29 = v63;
  *(_QWORD *)(v28 + 16) = v63;
  v30 = v68;
  v31 = v53;
  v32 = v19;
  v33 = v58;
  (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v53, v32, v58);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v31, 0, 1, v33);
  (*(void (**)(char *, _QWORD, uint64_t))(v52 + 104))(v56, *MEMORY[0x24BE43600], v54);
  (*(void (**)(char *, _QWORD, uint64_t))(v57 + 104))(v55, *MEMORY[0x24BE44C60], v59);
  v34 = v29;
  v35 = v60;
  sub_2321FF1D8();
  v36 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598];
  sub_2320057B8(0, &qword_255F9F878, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_2321FF0AC();
  *(_OWORD *)(swift_allocObject() + 16) = v67;
  sub_23213060C(0, (unint64_t *)&qword_2541B13D8, v36);
  v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = v67;
  v38 = v62;
  *(_QWORD *)(v37 + 56) = v62;
  *(_QWORD *)(v37 + 64) = sub_232130678();
  v39 = sub_2320251BC((uint64_t *)(v37 + 32));
  v40 = v61;
  (*(void (**)(uint64_t *, char *, uint64_t))(v61 + 16))(v39, v35, v38);
  v41 = v64;
  sub_2321FDCB4();
  sub_2321FDC84();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v41, v66);
  sub_2321FF0A0();
  v42 = sub_2321FF5D4();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v35, v38);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v45, v33);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v50, v49);
  return v42;
}

uint64_t sub_232130404(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  void *v17;
  uint64_t v18;
  uint64_t v20;

  v2 = sub_2321FF40C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2321FF400();
  v6 = sub_2321FEE60();
  v8 = v7;
  if (v6 == sub_2321FEE60() && v8 == v9)
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
LABEL_12:
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0;
  }
  v10 = sub_232201ADC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  if ((v10 & 1) != 0)
    goto LABEL_12;
  sub_2321FF400();
  v11 = sub_2321FEE60();
  v13 = v12;
  if (v11 == sub_2321FEE60() && v13 == v14)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_12;
  }
  v16 = sub_232201ADC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((v16 & 1) != 0)
    return 0;
  v17 = (void *)sub_2321FF3F4();
  type metadata accessor for DataTypeDetailWorkoutDetailDisclosureDataSource(0);
  swift_allocObject();
  v18 = sub_23212FC64(v17);

  return v18;
}

uint64_t sub_2321305E0()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_232130604(uint64_t a1)
{
  uint64_t v1;

  return sub_23212E724(a1, *(void **)(v1 + 16));
}

void sub_23213060C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_2320982A4(255, (unint64_t *)&qword_2541B11F0);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_232130678()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F9F8A0;
  if (!qword_255F9F8A0)
  {
    v1 = sub_2321FF1E4();
    result = MEMORY[0x2348FF39C](MEMORY[0x24BE438A8], v1);
    atomic_store(result, (unint64_t *)&qword_255F9F8A0);
  }
  return result;
}

void sub_2321306C4()
{
  char *v0;
  void *v1;
  char *v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  unsigned __int8 v7;
  objc_super v8;

  *(_QWORD *)&v0[OBJC_IVAR____TtC9Summaries20SummariesAppDelegate_healthStore] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Summaries20SummariesAppDelegate_healthSharingAlertsNotificationContentStateManager] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Summaries20SummariesAppDelegate_trendsNotificationContentStateManager] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9Summaries20SummariesAppDelegate_healthSharingNotificationSyncStore] = 0;
  v1 = (void *)objc_opt_self();
  v2 = v0;
  v3 = objc_msgSend(v1, sel_sharedBehavior);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, sel_features);

    if (v5)
    {
      v6 = OBJC_IVAR____TtC9Summaries20SummariesAppDelegate_shouldDismissNotificationsUrgently;
      v7 = objc_msgSend(v5, sel_urgentNotificationDismiss);

      v2[v6] = v7;
      *(_QWORD *)&v2[OBJC_IVAR____TtC9Summaries20SummariesAppDelegate_cancellables] = MEMORY[0x24BEE4B08];

      v8.receiver = v2;
      v8.super_class = (Class)type metadata accessor for SummariesAppDelegate();
      objc_msgSendSuper2(&v8, sel_init);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_2321307F0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SummariesAppDelegate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SummariesAppDelegate()
{
  return objc_opt_self();
}

uint64_t sub_2321308A8(uint64_t a1, uint64_t a2)
{
  return sub_2320A099C(&qword_2541B58A0, a2, (uint64_t (*)(uint64_t))type metadata accessor for SummariesAppDelegate, (uint64_t)&unk_232217070);
}

id sub_2321308D4()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t sub_2321308F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unsigned int *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  swift_getObjectType();
  v2 = sub_2321FE194();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v24 - v7;
  v9 = sub_2321FE9D4();
  v10 = sub_23200ED98(v9);
  swift_bridgeObjectRelease();
  if (v10)
  {
    v29 = a1;
    sub_2320A099C(&qword_255F9F8D8, v11, (uint64_t (*)(uint64_t))type metadata accessor for SummariesAppDelegate, (uint64_t)&unk_232217028);
    v12 = sub_2321FF670();
    v27 = v13;
    v28 = v12;
    v26 = sub_2321FF688();
    v14 = sub_232201164();
    v15 = (unsigned int *)MEMORY[0x24BE47438];
    if ((v14 & 1) == 0)
      v15 = (unsigned int *)MEMORY[0x24BE47410];
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v8, *v15, v2);
    if (sub_2321FE9A4())
    {
      v25 = sub_2321FF8EC();
      swift_release();
    }
    else
    {
      v25 = 0;
    }
    v18 = sub_2321FE9D4();
    v24 = sub_23200ED98(v18);
    swift_bridgeObjectRelease();
    sub_2321FE9BC();
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    sub_232130FB8();
    v19 = *(_QWORD *)(sub_2321FF8E0() - 8);
    v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_232210D40;
    *(_QWORD *)(v21 + v20) = v10;
    (*(void (**)(void))(v19 + 104))();
    v22 = v29;
    sub_2321FF73C();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    v23 = sub_2321FF748();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 0, 1, v23);
  }
  else
  {
    v16 = sub_2321FF748();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a1, 1, 1, v16);
  }
}

uint64_t sub_232130BB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char v14;
  char v15;
  void (*v16)(_QWORD *, uint64_t, uint64_t);
  uint64_t v17;
  void *v18;
  id v19;
  void *v20;
  char v21;
  unsigned int *v22;
  uint64_t ObjCClassFromMetadata;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  _QWORD v35[6];
  id v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;

  v39 = a2;
  v3 = sub_2321FE194();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v37 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v35 - v7;
  v9 = sub_2321FF8E0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (_QWORD *)((char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_2321FEC20();
  v15 = v14;
  v16 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v10 + 16);
  v38 = a1;
  v16(v12, a1, v9);
  if ((*(unsigned int (**)(_QWORD *, uint64_t))(v10 + 88))(v12, v9) != *MEMORY[0x24BE458E8])
  {
    (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
LABEL_11:
    v34 = sub_2321FF748();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v39, 1, 1, v34);
  }
  if ((v15 & 1) != 0)
    v17 = 0;
  else
    v17 = v13;
  (*(void (**)(_QWORD *, uint64_t))(v10 + 96))(v12, v9);
  v18 = (void *)*v12;
  v19 = objc_msgSend((id)objc_opt_self(), sel_displayTypeForObjectType_wheelchairUse_, *v12, v17);
  if (!v19)
  {

    goto LABEL_11;
  }
  v20 = v19;
  v21 = sub_232201164();
  v22 = (unsigned int *)MEMORY[0x24BE47438];
  if ((v21 & 1) == 0)
    v22 = (unsigned int *)MEMORY[0x24BE47410];
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v8, *v22, v3);
  type metadata accessor for SummariesAppDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v35[5] = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v36 = v18;
  v24 = objc_msgSend(v20, sel_localization);
  v25 = objc_msgSend(v24, sel_displayName);

  v26 = sub_232200EC4();
  v35[3] = v27;
  v35[4] = v26;

  v28 = objc_msgSend(v20, sel_displayCategory);
  v35[2] = objc_msgSend(v28, sel_largeListIcon);

  v35[1] = objc_msgSend(v20, sel_displayCategory);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v37, v8, v3);
  sub_232130FB8();
  v29 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_232210D40;
  v16((_QWORD *)(v30 + v29), v38, v9);
  v31 = v39;
  sub_2321FF73C();

  (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v3);
  v32 = sub_2321FF748();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 0, 1, v32);
}

uint64_t sub_232130F30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_232130BB4(a1, a2);
}

uint64_t sub_232130F48()
{
  uint64_t v0;
  uint64_t v1;
  Class v2;
  id v3;
  uint64_t v5;

  v0 = type metadata accessor for SummariesInternalSettingsView();
  MEMORY[0x24BDAC7A8](v0);
  sub_232054554((uint64_t)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_232131198();
  v3 = objc_allocWithZone(v2);
  return sub_232200A68();
}

void sub_232130FB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B57E8)
  {
    sub_2321FF8E0();
    v0 = sub_232201AC4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B57E8);
  }
}

void sub_23213100C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void **v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  unsigned int v11;
  uint64_t v12;

  v2 = sub_2321FF8E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (void **)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(void **, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  if ((*(unsigned int (**)(void **, uint64_t))(v3 + 88))(v5, v2) != *MEMORY[0x24BE458E8])
  {
    (*(void (**)(void **, uint64_t))(v3 + 8))(v5, v2);
    return;
  }
  (*(void (**)(void **, uint64_t))(v3 + 96))(v5, v2);
  v6 = *v5;
  if ((sub_232201164() & 1) != 0)
  {
    v7 = (void *)sub_2321FE1D0();
    sub_2321D5890(v6);
LABEL_10:

    return;
  }
  v8 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(v8, sel_features);

    if (v10)
    {
      v11 = objc_msgSend(v10, sel_snidgets);

      v7 = (void *)sub_2321FE1D0();
      if (v11)
        sub_2321D5B2C(v6, (uint64_t)v7, 1);
      else
        sub_2321D5B34(v6, (uint64_t)v7, 1);
      goto LABEL_10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_232131198()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9F8E0)
  {
    type metadata accessor for SummariesInternalSettingsView();
    sub_2320A099C(&qword_255F9F8E8, 255, (uint64_t (*)(uint64_t))type metadata accessor for SummariesInternalSettingsView, (uint64_t)&unk_232211CA0);
    v0 = sub_232200A74();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9F8E0);
  }
}

uint64_t sub_232131214(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  void *v27;
  void *v28;
  unint64_t v29;
  unint64_t v30;
  void (*v31)(void **, _QWORD);
  _QWORD v32[2];
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36[5];
  uint64_t v37;
  uint64_t v38;
  char v39;
  _QWORD *v40;

  v4 = sub_2321FE608();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v35 = (uint64_t)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2541B3FF0 != -1)
    swift_once();
  v7 = (uint64_t)off_2541B3FE0;
  v33 = (unint64_t)off_2541B3FE0 & 0xC000000000000001;
  if (((unint64_t)off_2541B3FE0 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v8 = sub_2322017DC();
    if (v8)
      goto LABEL_5;
LABEL_8:
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  v8 = *((_QWORD *)off_2541B3FE0 + 2);
  swift_bridgeObjectRetain();
  if (!v8)
    goto LABEL_8;
LABEL_5:
  v40 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v9 = &v40;
  sub_232013774(0, v8 & ~(v8 >> 63), 0);
  if (v33)
  {
    v10 = sub_232201794();
    v12 = 1;
  }
  else
  {
    v10 = sub_232131E78(v7);
    v12 = v14 & 1;
  }
  v37 = v10;
  v38 = v11;
  v39 = v12;
  if (v8 < 0)
  {
    __break(1u);
LABEL_27:
    __break(1u);
    sub_2320167EC((uint64_t)v9, v1, v2);
    result = swift_release();
    __break(1u);
  }
  else
  {
    v15 = v7 & 0xFFFFFFFFFFFFFF8;
    if (v7 < 0)
      v15 = v7;
    v32[0] = v5;
    v32[1] = v15;
    v34 = v7;
    do
    {
      v2 = v39;
      sub_232131B90(v37, v38, v39, v7, (unint64_t *)&qword_2541B74A0);
      v28 = v27;
      v36[0] = v27;
      sub_2321316EC(v36, a1, v35);

      v9 = v40;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_232013774(0, v9[2] + 1, 1);
        v9 = v40;
      }
      v30 = v9[2];
      v29 = v9[3];
      v1 = v30 + 1;
      if (v30 >= v29 >> 1)
      {
        sub_232013774(v29 > 1, v30 + 1, 1);
        v9 = v40;
      }
      v9[2] = v1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))((unint64_t)v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v30, v35, v4);
      v40 = v9;
      if (v33)
      {
        if ((v39 & 1) == 0)
          goto LABEL_27;
        if (sub_2322017AC())
          swift_isUniquelyReferenced_nonNull_native();
        sub_232131DF0();
        v31 = (void (*)(void **, _QWORD))sub_2322010E0();
        sub_232201830();
        v31(v36, 0);
      }
      else
      {
        v16 = v37;
        v17 = v38;
        v18 = v39;
        v19 = sub_232131A84(v37, v38, v39, v34);
        v21 = v20;
        v22 = v4;
        v23 = a1;
        v25 = v24;
        sub_2320167EC(v16, v17, v18);
        v37 = v19;
        v38 = v21;
        v26 = v25 & 1;
        a1 = v23;
        v4 = v22;
        v5 = v32[0];
        v39 = v26;
      }
      --v8;
      v7 = v34;
    }
    while (v8);
    sub_2320167EC(v37, v38, v39);
    swift_bridgeObjectRelease();
    return (uint64_t)v40;
  }
  return result;
}

uint64_t sub_232131574()
{
  unint64_t inited;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t result;

  sub_232000608(0, (unint64_t *)&qword_2541B78C8, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2322170A0;
  *(_QWORD *)(inited + 32) = objc_msgSend((id)objc_opt_self(), sel_activitySummaryType);
  sub_232003E9C(0, (unint64_t *)&qword_2541B0C20);
  *(_QWORD *)(inited + 40) = MEMORY[0x2348FE4A8]((id)*MEMORY[0x24BDD2858]);
  sub_232003E9C(0, (unint64_t *)&qword_2541B0C28);
  *(_QWORD *)(inited + 48) = MEMORY[0x2348FE4B4]((id)*MEMORY[0x24BDD3368]);
  *(_QWORD *)(inited + 56) = MEMORY[0x2348FE4B4]((id)*MEMORY[0x24BDD3348]);
  sub_232201050();
  if (inited >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_232201998();
    swift_bridgeObjectRelease();
    if (v3)
      goto LABEL_3;
LABEL_5:
    v2 = (void *)MEMORY[0x24BEE4B08];
    goto LABEL_6;
  }
  if (!*(_QWORD *)((inited & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_5;
LABEL_3:
  sub_2321A9D34(inited);
  v2 = v1;
LABEL_6:
  result = swift_bridgeObjectRelease();
  off_2541B3FE0 = v2;
  return result;
}

void sub_2321316EC(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t (*v19)(void);
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  unint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;

  v28 = a3;
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, (unint64_t *)&qword_2541AF178, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v24 - v7;
  sub_2320057B8(0, &qword_2541AF180, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], v5);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v24 - v10;
  v12 = sub_2321FE6D4();
  MEMORY[0x24BDAC7A8](v12);
  v13 = *a1;
  sub_232003E9C(0, (unint64_t *)&qword_2541B0CA0);
  v27 = sub_232012E28(a2);
  v14 = objc_msgSend(v27, sel_data);
  if (v14)
  {
    v15 = v14;
    v16 = sub_2321FDAD4();
    v25 = v17;
    v26 = v16;

  }
  else
  {
    v25 = 0xC000000000000000;
    v26 = 0;
  }
  v29 = 0xD000000000000012;
  v30 = 0x80000002322085B0;
  v18 = objc_msgSend(v13, sel_identifier);
  sub_232200EC4();

  sub_232200F48();
  swift_bridgeObjectRelease();
  v24[1] = v29;
  v19 = MEMORY[0x24BEE3598];
  sub_2320057B8(0, (unint64_t *)&qword_2541B57E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE45940], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_2321FF8E0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_232210D40;
  sub_23220117C();
  sub_232000608(0, (unint64_t *)&qword_2541B78C8, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))v19);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_232210D20;
  *(_QWORD *)(v20 + 32) = v13;
  v29 = v20;
  sub_232201050();
  v21 = v13;
  sub_2321FE5D8();
  sub_2321FDE1C();
  v22 = sub_2321FDE28();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v11, 0, 1, v22);
  sub_2321FDCFC();
  v23 = sub_2321FDD08();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v8, 0, 1, v23);
  sub_2321FE5A8();

}

uint64_t sub_232131A24(unint64_t a1)
{
  uint64_t v2;

  if (!(a1 >> 62))
    return *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v2 = sub_232201998();
  swift_bridgeObjectRelease();
  return v2;
}

int64_t sub_232131A84(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void sub_232131B68(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_232131B90(a1, a2, a3, a4, &qword_2541B0D68);
}

void sub_232131B7C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_232131B90(a1, a2, a3, a4, (unint64_t *)&qword_2541B74A0);
}

void sub_232131B90(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  id v16;
  unint64_t *v17;

  v7 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (sub_2322017C4() == *(_DWORD *)(a4 + 36))
      {
        sub_2322017D0();
        sub_232003E9C(0, a5);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        a5 = v17;
        swift_unknownObjectRelease();
        v9 = sub_232201698();
        v10 = -1 << *(_BYTE *)(a4 + 32);
        v7 = v9 & ~v10;
        if (((*(_QWORD *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
        {
          v11 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
          v12 = sub_2322016A4();

          if ((v12 & 1) == 0)
          {
            v13 = ~v10;
            do
            {
              v7 = (v7 + 1) & v13;
              if (((*(_QWORD *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
                goto LABEL_24;
              v14 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
              v15 = sub_2322016A4();

            }
            while ((v15 & 1) == 0);
          }

LABEL_20:
          v16 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v8 = a4;
  else
    v8 = a4 & 0xFFFFFFFFFFFFFF8;
  MEMORY[0x2348FE970](a1, a2, v8);
  sub_232003E9C(0, a5);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
}

void sub_232131DF0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255F9F8F0)
  {
    sub_232003E9C(255, (unint64_t *)&qword_2541B74A0);
    sub_23207CE58();
    v0 = sub_2322010EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255F9F8F0);
  }
}

void sub_232131E60(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_232131B90(a1, a2, a3, a4, &qword_255F9F710);
}

uint64_t sub_232131E78(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 72);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

unint64_t sub_232131F00(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t inited;
  id v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  int64_t v14;
  unint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v20;
  unint64_t v21;

  v2 = sub_2321FE2A8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2321324D8();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232210D40;
  if (qword_2541B3FF0 != -1)
    swift_once();
  if ((sub_23209CFE4(a1, (uint64_t)off_2541B3FE0) & 1) != 0)
  {
    v20 = 0xD000000000000012;
    v21 = 0x80000002322085B0;
    v7 = objc_msgSend(a1, sel_identifier);
    sub_232200EC4();

    sub_232200F48();
    swift_bridgeObjectRelease();
    v9 = v20;
    v8 = v21;
    *(_QWORD *)(inited + 32) = v20;
    *(_QWORD *)(inited + 40) = v8;
    swift_bridgeObjectRetain();
    v10 = sub_232096810(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v12 = v10[2];
    v11 = v10[3];
    if (v12 >= v11 >> 1)
      v10 = sub_232096810((_QWORD *)(v11 > 1), v12 + 1, 1, v10);
    v10[2] = v12 + 1;
    v13 = &v10[2 * v12];
    v13[4] = v9;
    v13[5] = v8;
  }
  else
  {
    *(_QWORD *)(inited + 32) = 0;
    *(_QWORD *)(inited + 40) = 0;
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  swift_release();
  v14 = v10[2];
  if (v14)
  {
    v20 = MEMORY[0x24BEE4AF8];
    sub_2320137A0(0, v14, 0);
    v15 = v20;
    v16 = v10 + 5;
    do
    {
      swift_bridgeObjectRetain();
      sub_2321FE29C();
      v20 = v15;
      v18 = *(_QWORD *)(v15 + 16);
      v17 = *(_QWORD *)(v15 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_2320137A0(v17 > 1, v18 + 1, 1);
        v15 = v20;
      }
      v16 += 2;
      *(_QWORD *)(v15 + 16) = v18 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v15+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v18, v5, v2);
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return v15;
}

uint64_t sub_232132198()
{
  void *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  unint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  int64_t v12;
  unint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  void *v18;
  void *v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  void (*v27)(unint64_t *, _QWORD);
  uint64_t v28;
  void *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;

  if (qword_2541B3FF0 != -1)
    swift_once();
  v0 = off_2541B3FE0;
  v1 = (unint64_t)off_2541B3FE0 & 0xC000000000000001;
  if (((unint64_t)off_2541B3FE0 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v2 = sub_2322017DC();
    if (v2)
      goto LABEL_5;
LABEL_8:
    swift_bridgeObjectRelease();
    v6 = MEMORY[0x24BEE4AF8];
LABEL_23:
    v28 = sub_2321AAC10(v6);
    swift_bridgeObjectRelease();
    return v28;
  }
  v2 = *((_QWORD *)off_2541B3FE0 + 2);
  swift_bridgeObjectRetain();
  if (!v2)
    goto LABEL_8;
LABEL_5:
  v35 = MEMORY[0x24BEE4AF8];
  sub_2320138B4(0, v2 & ~(v2 >> 63), 0);
  if (v1)
  {
    result = sub_232201794();
    v5 = 1;
  }
  else
  {
    result = sub_232131E78((uint64_t)v0);
    v5 = v7 & 1;
  }
  v32 = result;
  v33 = v4;
  v34 = v5;
  if ((v2 & 0x8000000000000000) == 0)
  {
    v8 = (unint64_t *)&qword_2541B74A0;
    v29 = v0;
    do
    {
      while (1)
      {
        sub_232131B90(v32, v33, v34, (uint64_t)v0, v8);
        v19 = v18;
        v30 = 0xD000000000000012;
        v31 = 0x80000002322085B0;
        v20 = objc_msgSend(v18, sel_identifier);
        sub_232200EC4();

        sub_232200F48();
        swift_bridgeObjectRelease();
        v21 = v30;
        v22 = v31;
        v23 = v35;
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = sub_2320138B4(0, *(_QWORD *)(v23 + 16) + 1, 1);
          v23 = v35;
        }
        v25 = *(_QWORD *)(v23 + 16);
        v24 = *(_QWORD *)(v23 + 24);
        if (v25 >= v24 >> 1)
        {
          result = sub_2320138B4(v24 > 1, v25 + 1, 1);
          v23 = v35;
        }
        *(_QWORD *)(v23 + 16) = v25 + 1;
        v26 = v23 + 16 * v25;
        *(_QWORD *)(v26 + 32) = v21;
        *(_QWORD *)(v26 + 40) = v22;
        if (v1)
          break;
        v9 = v32;
        v10 = v33;
        v11 = v34;
        v12 = sub_232131A84(v32, v33, v34, (uint64_t)v0);
        v13 = v8;
        v15 = v14;
        v17 = v16;
        sub_2320167EC(v9, v10, v11);
        v32 = v12;
        v33 = v15;
        v8 = v13;
        v1 = 0;
        v0 = v29;
        v34 = v17 & 1;
        if (!--v2)
          goto LABEL_22;
      }
      if ((v34 & 1) == 0)
        goto LABEL_25;
      if (sub_2322017AC())
        swift_isUniquelyReferenced_nonNull_native();
      sub_232131DF0();
      v27 = (void (*)(unint64_t *, _QWORD))sub_2322010E0();
      sub_232201830();
      v27(&v30, 0);
      --v2;
    }
    while (v2);
LABEL_22:
    sub_2320167EC(v32, v33, v34);
    swift_bridgeObjectRelease();
    v6 = v35;
    goto LABEL_23;
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

void sub_2321324D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B27B8)
  {
    sub_232000608(255, (unint64_t *)&qword_2541B78A0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    v0 = sub_232201AC4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B27B8);
  }
}

uint64_t sub_232132544(void *a1, uint64_t a2, void (*a3)(void *, uint64_t), uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  uint64_t v16;

  v5 = v4;
  v9 = sub_2321FDC6C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(a1, sel_endDate);
  sub_2321FDC30();

  swift_retain();
  v14 = a1;
  swift_retain();
  sub_2321344E4((uint64_t)v12, 0, v5, (uint64_t)v5, v14, a3, a4);
  swift_release();

  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

void sub_232132644(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD v12[7];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v16 = a1;
  v1 = sub_23220039C();
  v12[4] = *(_QWORD *)(v1 - 8);
  v12[5] = v1;
  MEMORY[0x24BDAC7A8](v1);
  v12[3] = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2321FDDC8();
  MEMORY[0x24BDAC7A8](v13);
  v3 = sub_2321FDDD4();
  v12[6] = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_2320002B4(0, &qword_2541B7618, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_2321FDC6C();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v12[2] = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  MEMORY[0x24BDAC7A8](v8);
  v12[1] = (char *)v12 - v9;
  v10 = sub_2321FD8B8();
  v14 = *(_QWORD *)(v10 - 8);
  v15 = v10;
  MEMORY[0x24BDAC7A8](v10);
  sub_2321FD840();
  v11 = (char *)sub_232132850 + 4 * byte_2322170B0[sub_232200000()];
  __asm { BR              X10 }
}

uint64_t sub_232132850()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v20;

  sub_2321FDDA4();
  v10 = *MEMORY[0x24BDCF220];
  *(_QWORD *)(v9 - 112) = v8;
  v11 = v2;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 104);
  v13 = *(_QWORD *)(v9 - 120);
  v12(v7, v10, v13);
  sub_2321FD894();
  sub_2321FDD80();
  v14 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v14(v3, v6);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v7, v13);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 128) + 8))(v1, *(_QWORD *)(v9 - 112));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v0, 1, v6) == 1)
  {
    sub_23200040C(v0, &qword_2541B7618, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    v15 = *(_QWORD *)(v9 - 152);
    sub_232200318();
    v16 = sub_232200390();
    v17 = sub_2322012E4();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_231FFB000, v16, v17, "Unable to get 6 days before start of day today", v18, 2u);
      MEMORY[0x2348FF468](v18, -1, -1);
    }

    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 144) + 8))(v15, *(_QWORD *)(v9 - 136));
    return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v9 - 104) + 32))(*(_QWORD *)(v9 - 88), v4, *(_QWORD *)(v9 - 96));
  }
  else
  {
    v20 = *(_QWORD *)(v9 - 168);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v20, v0, v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v20, v6);
    sub_2321FD870();
    sub_2321FD87C();
    v14(v20, v6);
    return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 104) + 8))(v4, *(_QWORD *)(v9 - 96));
  }
}

void sub_232132A40()
{
  sub_232201968();
  __break(1u);
}

unint64_t sub_232132AF8(void *a1)
{
  id v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t result;
  id v5;

  v1 = objc_msgSend(a1, sel_statistics);
  sub_232003E9C(0, (unint64_t *)&qword_2541B7EB8);
  v2 = sub_232201038();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_232201998();
    swift_bridgeObjectRelease();
    if (!v3)
      goto LABEL_9;
  }
  else
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v3)
    {
LABEL_9:
      swift_bridgeObjectRelease();
      return v3;
    }
  }
  result = v3 - 1;
  if (__OFSUB__(v3, 1))
  {
    __break(1u);
    goto LABEL_13;
  }
  if ((v2 & 0xC000000000000001) != 0)
  {
LABEL_13:
    v5 = (id)MEMORY[0x2348FEA30](result, v2);
    goto LABEL_8;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v5 = *(id *)(v2 + 8 * result + 32);
LABEL_8:
    v3 = (uint64_t)v5;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

void sub_232132BF0(uint64_t a1, void *a2, void (*a3)(_QWORD, _QWORD), uint64_t a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t);
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  void *v35;
  _BYTE *v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  void *v43;
  id v44;
  void *v45;
  _QWORD *v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  id v50;
  id v51;
  void (*v52)(_QWORD, _QWORD);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD aBlock[6];

  v5 = v4;
  v10 = sub_2321FD960();
  v56 = *(_QWORD *)(v10 - 8);
  v57 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2321FDC6C();
  v54 = *(_QWORD *)(v13 - 8);
  v55 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_2321FD8B8();
  v59 = *(_QWORD *)(v16 - 8);
  v60 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = &v5[qword_2541BF5D0];
  v20 = *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28);
  v58 = (id *)v19;
  v21 = *(void **)&v19[v20];
  objc_opt_self();
  v22 = swift_dynamicCastObjCClass();
  if (v22)
  {
    v23 = v22;
    v52 = a3;
    v53 = a4;
    v24 = *(void (**)(uint64_t))(*(_QWORD *)v5 + 176);
    v50 = v21;
    v24(a1);
    v25 = (void *)objc_opt_self();
    v26 = (void *)sub_2321FD858();
    v27 = objc_msgSend(v25, sel_predicateForSamplesWithinDateInterval_options_, v26, 0);

    v51 = v27;
    if (a2)
    {
      sub_232027434();
      v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_232213870;
      *(_QWORD *)(v28 + 32) = v27;
      *(_QWORD *)(v28 + 40) = a2;
      aBlock[0] = v28;
      sub_232201050();
      sub_232003E9C(0, (unint64_t *)&qword_2541B0C00);
      v29 = v27;
      v30 = a2;
      v31 = v29;
      v32 = v30;
      v33 = (void *)sub_232201020();
      swift_bridgeObjectRelease();
      v34 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v33);

    }
    else
    {
      v34 = v27;
    }
    sub_2321FFFF4();
    v37 = sub_2322014DC();
    v38 = v50;
    v50 = v5;
    v39 = v38;
    v40 = v34;
    sub_2321FD870();
    sub_232200000();
    sub_2321FFD84();
    v41 = objc_allocWithZone(MEMORY[0x24BDD4000]);
    v42 = (void *)sub_2321FDBF4();
    v43 = (void *)sub_2321FD918();
    v44 = objc_msgSend(v41, sel_initWithSampleType_samplePredicate_options_anchorDate_intervalComponents_, v23, v40, v37, v42, v43);

    (*(void (**)(char *, uint64_t))(v56 + 8))(v12, v57);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v15, v55);
    v45 = (void *)sub_2321FD858();
    objc_msgSend(v44, sel_setDateInterval_, v45);

    v46 = (_QWORD *)swift_allocObject();
    v47 = v53;
    v46[2] = v52;
    v46[3] = v47;
    v46[4] = v50;
    aBlock[4] = sub_2321344C0;
    aBlock[5] = v46;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_232133CCC;
    aBlock[3] = &unk_2501047B8;
    v48 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v44, sel_setInitialResultsHandler_, v48);
    _Block_release(v48);
    objc_msgSend(v58[2], sel_executeQuery_, v44);

    (*(void (**)(char *, uint64_t))(v59 + 8))(v18, v60);
  }
  else
  {
    sub_232003BC0(0);
    sub_232000590((unint64_t *)&qword_255F9BF70, (uint64_t (*)(uint64_t))sub_232003BC0, (uint64_t)&unk_232217A40);
    v35 = (void *)swift_allocError();
    *v36 = 0;
    a3(v35, 1);

  }
}

uint8_t *sub_2321330A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint8_t *v38;
  NSObject *v39;
  os_log_type_t v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  char *v55;
  void *v56;
  id v57;
  void *v58;
  id v59;
  void *v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  id v64;
  id v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint8_t *result;
  uint8_t *v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  _BYTE *v77;
  char *v78;
  NSObject *v79;
  os_log_type_t v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  void (*v85)(char *, uint64_t);
  id v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  _BYTE *v90;
  _BYTE *v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint8_t *v101;
  void *v102;
  char *v103;
  void (**v104)(_QWORD, _QWORD);
  id v105;
  uint64_t v106;
  _OWORD v107[2];
  uint64_t v108;
  uint64_t v109;

  v5 = (_QWORD *)sub_23220039C();
  v104 = (void (**)(_QWORD, _QWORD))*(v5 - 1);
  v105 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (uint8_t *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v101 = (uint8_t *)&v92 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v92 = (char *)&v92 - v11;
  sub_2320002B4(0, (unint64_t *)&qword_2541B2A70, (void (*)(uint64_t))MEMORY[0x24BE4ADA0]);
  MEMORY[0x24BDAC7A8](v12);
  v93 = (char *)&v92 - v13;
  v14 = sub_2321FFD78();
  v99 = *(_QWORD *)(v14 - 8);
  v100 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v98 = (char *)&v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_2321FDC6C();
  v95 = *(_QWORD *)(v16 - 8);
  v96 = v16;
  v17 = MEMORY[0x24BDAC7A8](v16);
  MEMORY[0x24BDAC7A8](v17);
  v94 = (char *)&v92 - v18;
  sub_2320002B4(0, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v92 - v20;
  sub_2320002B4(0, &qword_2541B2A30, (void (*)(uint64_t))MEMORY[0x24BE4ABE8]);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v92 - v23;
  v106 = sub_2321FFC94();
  v25 = *(_QWORD *)(v106 - 8);
  v26 = MEMORY[0x24BDAC7A8](v106);
  v28 = (char *)&v92 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v103 = (char *)&v92 - v29;
  v30 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v2 + 192);
  v97 = a2;
  v31 = a2;
  v32 = v2;
  v33 = (void *)v30(a1, v31);
  if (!v33)
  {
    sub_232200318();
    swift_retain_n();
    v38 = v8;
    v39 = sub_232200390();
    v40 = sub_2322012F0();
    if (os_log_type_enabled(v39, v40))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      v106 = swift_slowAlloc();
      *(_QWORD *)&v107[0] = v106;
      *(_DWORD *)v38 = 136315138;
      v103 = (char *)(v38 + 4);
      v41 = objc_msgSend(*(id *)(v32+ qword_2541BF5D0+ *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28)), sel_identifier);
      v42 = sub_232200EC4();
      v44 = v43;

      v109 = sub_232013174(v42, v44, (uint64_t *)v107);
      sub_232201710();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v39, v40, "Unexpectedly received an empty statistics collection for %s when it had a sample within that date interval", v38, 0xCu);
      v45 = v106;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v45, -1, -1);
      MEMORY[0x2348FF468](v38, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    ((void (**)(uint8_t *, id))v104)[1](v8, v105);
    sub_232066DA4();
    swift_allocError();
    *v77 = 1;
    swift_willThrow();
    return v38;
  }
  v102 = v33;
  v34 = (uint8_t *)(v2 + qword_2541BF5C0);
  v35 = sub_2321FFFF4();
  if (*(_QWORD *)(v35 + 16))
  {
    v36 = v106;
    (*(void (**)(char *, unint64_t, uint64_t))(v25 + 16))(v24, v35 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80)), v106);
    v37 = 0;
  }
  else
  {
    v37 = 1;
    v36 = v106;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v24, v37, 1, v36);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v24, 1, v36) == 1)
  {
    sub_23200040C((uint64_t)v24, &qword_2541B2A30, (void (*)(uint64_t))MEMORY[0x24BE4ABE8]);
    v38 = v101;
    sub_232200318();
    swift_retain_n();
    v46 = sub_232200390();
    v47 = sub_2322012F0();
    if (os_log_type_enabled(v46, v47))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      v48 = swift_slowAlloc();
      *(_DWORD *)v38 = 136315138;
      v106 = (uint64_t)(v38 + 4);
      *(_QWORD *)&v107[0] = v48;
      v49 = objc_msgSend(*(id *)(v32+ qword_2541BF5D0+ *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28)), sel_identifier);
      v50 = sub_232200EC4();
      v52 = v51;

      v109 = sub_232013174(v50, v52, (uint64_t *)v107);
      sub_232201710();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v46, v47, "Unexpectedly no statistics options for %s", v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v48, -1, -1);
      MEMORY[0x2348FF468](v38, -1, -1);

      ((void (**)(uint8_t *, id))v104)[1](v101, v105);
    }
    else
    {

      swift_release_n();
      ((void (**)(uint8_t *, id))v104)[1](v38, v105);
    }
    sub_232066DA4();
    swift_allocError();
    *v53 = 2;
    swift_willThrow();

    return v38;
  }
  v54 = v36;
  v101 = v34;
  v55 = v103;
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v103, v24, v36);
  v56 = v102;
  v57 = sub_232134344(v102);
  if (!v57)
  {
    v78 = v92;
    sub_232200318();
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v55, v54);
    swift_retain_n();
    v79 = sub_232200390();
    v80 = sub_2322012F0();
    v81 = v80;
    if (os_log_type_enabled(v79, v80))
    {
      v82 = swift_slowAlloc();
      v101 = (uint8_t *)swift_slowAlloc();
      *(_QWORD *)&v107[0] = v101;
      *(_DWORD *)v82 = 136315394;
      LODWORD(v100) = v81;
      v83 = sub_2321FFC88();
      v109 = sub_232013174(v83, v84, (uint64_t *)v107);
      sub_232201710();
      swift_bridgeObjectRelease();
      v85 = *(void (**)(char *, uint64_t))(v25 + 8);
      v85(v28, v54);
      *(_WORD *)(v82 + 12) = 2080;
      v86 = objc_msgSend(*(id *)(v32+ qword_2541BF5D0+ *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28)), sel_identifier);
      v87 = sub_232200EC4();
      v89 = v88;

      v109 = sub_232013174(v87, v89, (uint64_t *)v107);
      sub_232201710();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v79, (os_log_type_t)v100, "Unexpectedly no %s statistic for %s", (uint8_t *)v82, 0x16u);
      v38 = v101;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v38, -1, -1);
      MEMORY[0x2348FF468](v82, -1, -1);

      ((void (**)(char *, id))v104)[1](v92, v105);
      sub_232066DA4();
      swift_allocError();
      *v90 = 3;
      swift_willThrow();

      v85(v103, v106);
    }
    else
    {
      v38 = *(uint8_t **)(v25 + 8);
      ((void (*)(char *, uint64_t))v38)(v28, v54);

      swift_release_n();
      ((void (**)(char *, id))v104)[1](v78, v105);
      sub_232066DA4();
      swift_allocError();
      *v91 = 3;
      swift_willThrow();

      ((void (*)(char *, uint64_t))v38)(v103, v54);
    }
    return v38;
  }
  v58 = v57;
  sub_232003E9C(0, &qword_2541B56C8);
  v59 = objc_msgSend(v56, sel_startDate);
  v60 = v56;
  v61 = (uint64_t)v94;
  sub_2321FDC30();

  v62 = objc_msgSend(v60, sel_endDate);
  sub_2321FDC30();

  sub_2321FD87C();
  v63 = sub_2321FD8B8();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v21, 0, 1, v63);
  v64 = HKCodableSummarySupplementaryValue.init(dateInterval:dataCount:)((uint64_t)v21, (uint64_t)objc_msgSend(v60, sel_dataCount), 0);
  sub_232003E9C(0, &qword_2541B56B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v95 + 16))(v61, v97, v96);
  v105 = v58;
  v65 = HKCodableSummaryQuantityValue.init(quantity:date:)(v105, v61);
  v66 = sub_232200024();
  v67 = v98;
  (*(void (**)(char *, uint8_t *, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v98, v101, v66);
  v68 = v99;
  v69 = v100;
  (*(void (**)(char *, _QWORD, uint64_t))(v99 + 104))(v67, *MEMORY[0x24BE4AD28], v100);
  v70 = v64;
  v104 = (void (**)(_QWORD, _QWORD))v65;
  result = (uint8_t *)objc_msgSend(v65, sel_data);
  if (result)
  {
    v72 = result;
    sub_232003E9C(0, &qword_2541B0CD0);
    v73 = sub_2321FDAD4();
    v75 = v74;

    v76 = (uint64_t)v93;
    (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v93, v67, v69);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v68 + 56))(v76, 0, 1, v69);
    v108 = 0;
    memset(v107, 0, sizeof(v107));
    v38 = (uint8_t *)sub_232015828(v73, v75, 14, v76, (uint64_t)v70, 0, (uint64_t)v107);

    sub_232003ED4(v73, v75);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v67, v69);

    (*(void (**)(char *, uint64_t))(v25 + 8))(v103, v106);
    return v38;
  }
  __break(1u);
  return result;
}

void sub_232133CCC(uint64_t a1, void *a2, void *a3, void *a4)
{
  void (*v7)(id, void *, void *);
  id v8;
  id v9;
  id v10;

  v7 = *(void (**)(id, void *, void *))(a1 + 32);
  swift_retain();
  v10 = a2;
  v8 = a3;
  v9 = a4;
  v7(v10, a3, a4);
  swift_release();

}

void sub_232133D54(void *a1, char a2, uint64_t a3, void *a4, void (*a5)(void *, uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;

  v10 = sub_2321FDC6C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v16 = a1;
    a5(a1, 1);
    sub_232047860(a1);
  }
  else
  {
    v14 = a1;
    v15 = objc_msgSend(a4, sel_endDate);
    sub_2321FDC30();

    v17 = (void *)(*(uint64_t (**)(id, char *))(*(_QWORD *)a3 + 184))(v14, v13);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v18 = v17;
    a5(v17, 0);
    sub_232047860(a1);

  }
}

void sub_232133EFC(uint64_t a1, void *a2, void *a3, void (*a4)(void *, uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  int v17;
  uint8_t *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  os_log_t v24;
  uint8_t *v25;
  uint64_t v26;
  void *v27;
  _BYTE *v28;
  _QWORD v29[2];
  uint8_t *v30;
  os_log_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;

  v10 = sub_23220039C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    v14 = a3;
    a4(a3, 1);

  }
  else if (a2)
  {
    v33 = a2;
    a4(a2, 0);

  }
  else
  {
    sub_232200318();
    swift_retain_n();
    v15 = sub_232200390();
    v16 = sub_2322012F0();
    v17 = v16;
    if (os_log_type_enabled(v15, v16))
    {
      LODWORD(v33) = v17;
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v32 = v19;
      v30 = v18;
      v31 = v15;
      *(_DWORD *)v18 = 136315138;
      v35 = v19;
      v29[1] = v18 + 4;
      v20 = objc_msgSend(*(id *)(a6+ qword_2541BF5D0+ *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28)), sel_identifier);
      v21 = sub_232200EC4();
      v23 = v22;

      v34 = sub_232013174(v21, v23, &v35);
      sub_232201710();
      swift_release_n();
      swift_bridgeObjectRelease();
      v25 = v30;
      v24 = v31;
      _os_log_impl(&dword_231FFB000, v31, (os_log_type_t)v33, "Unexpectedly received a nil statistics collection for %s when it had a sample within that date interval", v30, 0xCu);
      v26 = v32;
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v26, -1, -1);
      MEMORY[0x2348FF468](v25, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    sub_232066DA4();
    v27 = (void *)swift_allocError();
    *v28 = 0;
    a4(v27, 1);

  }
}

uint64_t sub_2321341D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + qword_2541BF5C0;
  v2 = sub_232200024();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t sub_23213420C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_232003F18(v0 + qword_2541BF5D0);
  v1 = v0 + qword_2541BF5C8;
  v2 = sub_232200180();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + qword_2541BF5C0;
  v4 = sub_232200024();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StatisticsCurrentValueSharableModelStep()
{
  uint64_t result;

  result = qword_2541B25E0;
  if (!qword_2541B25E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2321342D8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_232200024();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

id sub_232134344(void *a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  _QWORD v9[4];

  v2 = sub_2321FFC94();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4ABE8];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BE4ABC8], v2);
  sub_232000590(&qword_2541B2A28, v3, MEMORY[0x24BE4AC10]);
  sub_232200FF0();
  sub_232200FF0();
  if (v9[2] == v9[0] && v9[3] == v9[1])
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
    return objc_msgSend(a1, sel_mostRecentQuantity);
  }
  v7 = sub_232201ADC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  if ((v7 & 1) != 0)
    return objc_msgSend(a1, sel_mostRecentQuantity);
  return (id)sub_2322011B8();
}

void sub_2321344C0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;

  sub_232133EFC(a1, a2, a3, *(void (**)(void *, uint64_t))(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32));
}

uint64_t sub_2321344CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2321344DC()
{
  return swift_release();
}

uint64_t sub_2321344E4(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5, void (*a6)(void *, uint64_t), uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void (*v26)(uint64_t);
  id v27;
  void *v28;
  void *v29;
  id v30;
  void *v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  _BYTE *v40;
  id v41;
  id v42;
  uint64_t v44;
  id v45;
  id v46;
  id v47;
  char *v48;
  id v49;
  void *v50;
  void *v51;
  id v52;
  void *v53;
  _QWORD *v54;
  void *v55;
  id v56;
  uint64_t v57;
  id v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD aBlock[6];

  v59 = a2;
  v13 = sub_2321FD960();
  v63 = *(_QWORD *)(v13 - 8);
  v64 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v62 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_2321FDC6C();
  v60 = *(_QWORD *)(v15 - 8);
  v61 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_2321FD8B8();
  v66 = *(_QWORD *)(v18 - 8);
  v67 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = a4;
  v21[3] = a5;
  v21[4] = a6;
  v21[5] = a7;
  v22 = (uint64_t)a3 + qword_2541BF5D0;
  v23 = *(int *)(type metadata accessor for SummariesFullProfileExecutor.Request(0) + 28);
  v65 = v22;
  v24 = *(void **)(v22 + v23);
  objc_opt_self();
  v25 = swift_dynamicCastObjCClass();
  if (v25)
  {
    v57 = v25;
    v26 = *(void (**)(uint64_t))(*(_QWORD *)a3 + 176);
    swift_retain();
    v27 = a5;
    swift_retain();
    v56 = v24;
    v26(a1);
    v28 = (void *)objc_opt_self();
    v29 = (void *)sub_2321FD858();
    v30 = objc_msgSend(v28, sel_predicateForSamplesWithinDateInterval_options_, v29, 0);

    v31 = v59;
    v58 = v30;
    if (v59)
    {
      sub_232027434();
      v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_232213870;
      *(_QWORD *)(v32 + 32) = v30;
      *(_QWORD *)(v32 + 40) = v31;
      aBlock[0] = v32;
      sub_232201050();
      sub_232003E9C(0, (unint64_t *)&qword_2541B0C00);
      v33 = v30;
      v34 = v31;
      v35 = v33;
      v36 = v34;
      v37 = (void *)sub_232201020();
      swift_bridgeObjectRelease();
      v38 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v37);

    }
    else
    {
      v38 = v30;
    }
    sub_2321FFFF4();
    v44 = sub_2322014DC();
    v45 = v56;
    v59 = a3;
    v46 = v45;
    v47 = v38;
    sub_2321FD870();
    sub_232200000();
    v48 = v62;
    sub_2321FFD84();
    v49 = objc_allocWithZone(MEMORY[0x24BDD4000]);
    v50 = (void *)sub_2321FDBF4();
    v51 = (void *)sub_2321FD918();
    v52 = objc_msgSend(v49, sel_initWithSampleType_samplePredicate_options_anchorDate_intervalComponents_, v57, v47, v44, v50, v51);

    (*(void (**)(char *, uint64_t))(v63 + 8))(v48, v64);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v17, v61);
    v53 = (void *)sub_2321FD858();
    objc_msgSend(v52, sel_setDateInterval_, v53);

    v54 = (_QWORD *)swift_allocObject();
    v54[2] = sub_232134A4C;
    v54[3] = v21;
    v54[4] = v59;
    aBlock[4] = sub_232134BA8;
    aBlock[5] = v54;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_232133CCC;
    aBlock[3] = &unk_250104830;
    v55 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v52, sel_setInitialResultsHandler_, v55);
    _Block_release(v55);
    objc_msgSend(*(id *)(v65 + 16), sel_executeQuery_, v52);

    (*(void (**)(char *, uint64_t))(v66 + 8))(v20, v67);
    return swift_release();
  }
  else
  {
    sub_232003BC0(0);
    sub_232000590((unint64_t *)&qword_255F9BF70, (uint64_t (*)(uint64_t))sub_232003BC0, (uint64_t)&unk_232217A40);
    v39 = (void *)swift_allocError();
    *v40 = 0;
    swift_retain();
    v41 = a5;
    swift_retain();
    v42 = v39;
    a6(v39, 1);

    return swift_release();
  }
}

uint64_t sub_232134A18()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

void sub_232134A4C(void *a1, char a2)
{
  uint64_t v2;

  sub_232133D54(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(void (**)(void *, uint64_t))(v2 + 32));
}

uint64_t sub_232134A60()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t storeEnumTagSinglePayload for StatisticsCurrentValueSharableModelStep.StatisticsProcessingError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_232134AD8 + 4 * byte_2322170BA[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_232134B0C + 4 * byte_2322170B5[v4]))();
}

uint64_t sub_232134B0C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232134B14(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232134B1CLL);
  return result;
}

uint64_t sub_232134B28(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232134B30);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_232134B34(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232134B3C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StatisticsCurrentValueSharableModelStep.StatisticsProcessingError()
{
  return &type metadata for StatisticsCurrentValueSharableModelStep.StatisticsProcessingError;
}

unint64_t sub_232134B5C()
{
  unint64_t result;

  result = qword_255F9F8F8;
  if (!qword_255F9F8F8)
  {
    result = MEMORY[0x2348FF39C](&unk_23221714C, &type metadata for StatisticsCurrentValueSharableModelStep.StatisticsProcessingError);
    atomic_store(result, (unint64_t *)&qword_255F9F8F8);
  }
  return result;
}

void sub_232134BAC()
{
  qword_2541BF390 = (uint64_t)&unk_2500FDFA0;
}

uint64_t sub_232134BC0()
{
  uint64_t result;

  sub_2321FE188();
  swift_allocObject();
  result = sub_2321FE17C();
  qword_255F9F900 = result;
  return result;
}

unint64_t sub_232134BFC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v5;
  _OWORD v6[2];
  _BYTE v7[24];
  uint64_t v8;

  v1 = *(void **)(v0 + 80);
  v2 = (void *)sub_232200E94();
  v3 = objc_msgSend(v1, sel_objectForKey_, v2);

  if (v3)
  {
    sub_232201758();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_2320317A4((uint64_t)v6, (uint64_t)v7);
  if (v8)
  {
    sub_232136174();
    if (swift_dynamicCast())
      return v5;
  }
  else
  {
    sub_232031840((uint64_t)v7);
  }
  return sub_2320E2D40(MEMORY[0x24BEE4AF8]);
}

uint64_t sub_232134CE4(uint64_t a1)
{
  unint64_t *v1;
  unint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  void (*v32)(char *, _QWORD, uint64_t, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char v37;
  char *v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char *v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char isUniquelyReferenced_nonNull_native;
  void *v64;
  void *v65;
  void *v66;
  void (*v67)(char *, _QWORD, uint64_t, uint64_t);
  unsigned int (*v68)(char *, uint64_t, uint64_t);
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;

  v2 = v1;
  v75 = a1;
  v73 = *v1;
  v3 = sub_23220039C();
  v76 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v77 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v69 = (char *)&v67 - v6;
  v7 = sub_2321FDDD4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320057B8(0, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v71 = (uint64_t)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v67 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v67 - v17;
  v19 = sub_2321FDC6C();
  v78 = *(_QWORD *)(v19 - 8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v70 = (char *)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v74 = (char *)&v67 - v22;
  sub_2321FEB78();
  sub_2321FEB6C();
  v23 = sub_2321FEB60();
  result = swift_release();
  if ((v23 & 1) == 0)
    return result;
  v72 = v3;
  if (qword_255F9BB30 != -1)
    swift_once();
  sub_2321FE164();
  v25 = sub_232135584();
  v27 = v26;
  v28 = sub_232134BFC();
  if (*(_QWORD *)(v28 + 16) && (v29 = sub_23216A80C(v25, v27), (v30 & 1) != 0))
  {
    v31 = v78;
    (*(void (**)(char *, unint64_t, uint64_t))(v78 + 16))(v18, *(_QWORD *)(v28 + 56) + *(_QWORD *)(v78 + 72) * v29, v19);
    v32 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56);
    v33 = v18;
    v34 = 0;
  }
  else
  {
    v31 = v78;
    v32 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56);
    v33 = v18;
    v34 = 1;
  }
  v67 = v32;
  v32(v33, v34, 1, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v68 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
  if (v68(v18, 1, v19) == 1)
  {
    sub_232016D88((uint64_t)v18, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    v35 = v72;
LABEL_14:
    v47 = v77;
    sub_232200354();
    swift_retain_n();
    v48 = sub_232200390();
    v49 = sub_2322012CC();
    if (os_log_type_enabled(v48, v49))
    {
      v50 = swift_slowAlloc();
      v51 = swift_slowAlloc();
      v79 = v51;
      *(_DWORD *)v50 = 136315394;
      v80 = v73;
      swift_getMetatypeMetadata();
      v52 = sub_232200F00();
      v80 = sub_232013174(v52, v53, (uint64_t *)&v79);
      sub_232201710();
      swift_bridgeObjectRelease();
      *(_WORD *)(v50 + 12) = 2080;
      v80 = (unint64_t)v2;
      type metadata accessor for TrendGenerationAnalyticsEvent();
      swift_retain();
      v54 = sub_232200F00();
      v80 = sub_232013174(v54, v55, (uint64_t *)&v79);
      sub_232201710();
      swift_release_n();
      v31 = v78;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_231FFB000, v48, v49, "[%s]: Submitting analytics for trend: %s", (uint8_t *)v50, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348FF468](v51, -1, -1);
      MEMORY[0x2348FF468](v50, -1, -1);

      (*(void (**)(char *, uint64_t))(v76 + 8))(v77, v72);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v76 + 8))(v47, v35);
    }
    v80 = (unint64_t)v2;
    type metadata accessor for TrendGenerationAnalyticsEvent();
    sub_232136138(qword_255F9F918, (uint64_t)&unk_23221729C);
    sub_2321FEA4C();
    v56 = sub_232135584();
    v58 = v57;
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v16, v75, v19);
    v67(v16, 0, 1, v19);
    v80 = sub_232134BFC();
    if (v68(v16, 1, v19) == 1)
    {
      v59 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
      sub_232016D88((uint64_t)v16, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
      v60 = v71;
      sub_232135758(v56, v58, v71);
      swift_bridgeObjectRelease();
      sub_232016D88(v60, &qword_2541B7618, v59);
    }
    else
    {
      v61 = (uint64_t)v70;
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v70, v16, v19);
      v62 = v80;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v79 = v62;
      v80 = 0x8000000000000000;
      sub_2320E313C(v61, v56, v58, isUniquelyReferenced_nonNull_native);
      v80 = v79;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v64 = (void *)v2[10];
    v65 = (void *)sub_232200DBC();
    swift_bridgeObjectRelease();
    v66 = (void *)sub_232200E94();
    objc_msgSend(v64, sel_setObject_forKey_, v65, v66);

    return sub_2321FE170();
  }
  v36 = v74;
  (*(void (**)(void))(v31 + 32))();
  sub_2321FDDA4();
  v37 = sub_2321FDD38();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v35 = v72;
  if ((v37 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v36, v19);
    goto LABEL_14;
  }
  v38 = v69;
  sub_232200354();
  swift_retain_n();
  v39 = sub_232200390();
  v40 = sub_2322012CC();
  if (os_log_type_enabled(v39, v40))
  {
    v41 = swift_slowAlloc();
    v42 = swift_slowAlloc();
    v79 = v42;
    *(_DWORD *)v41 = 136315394;
    v80 = v73;
    swift_getMetatypeMetadata();
    v43 = sub_232200F00();
    v80 = sub_232013174(v43, v44, (uint64_t *)&v79);
    sub_232201710();
    swift_bridgeObjectRelease();
    *(_WORD *)(v41 + 12) = 2080;
    v80 = (unint64_t)v2;
    type metadata accessor for TrendGenerationAnalyticsEvent();
    swift_retain();
    v45 = sub_232200F00();
    v80 = sub_232013174(v45, v46, (uint64_t *)&v79);
    v36 = v74;
    sub_232201710();
    swift_release_n();
    v31 = v78;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_231FFB000, v39, v40, "[%s]: Analytics already submitted today for trend: %s", (uint8_t *)v41, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v42, -1, -1);
    MEMORY[0x2348FF468](v41, -1, -1);

    (*(void (**)(char *, uint64_t))(v76 + 8))(v69, v35);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v76 + 8))(v38, v35);
  }
  sub_2321FE170();
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v36, v19);
}

uint64_t sub_232135584()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;

  v1 = v0;
  v2 = *(id *)(v0 + 16);
  v3 = objc_msgSend(v2, sel_description);
  v4 = sub_232200EC4();

  sub_232200F48();
  v5 = *(id *)(v1 + 24);
  v6 = objc_msgSend(v5, sel_description);
  sub_232200EC4();

  sub_232200F48();
  swift_bridgeObjectRelease();
  return v4;
}

id *sub_232135654()
{
  id *v0;

  return v0;
}

uint64_t sub_2321356B0()
{
  sub_232135654();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TrendGenerationAnalyticsEvent()
{
  return objc_opt_self();
}

unint64_t sub_2321356F4()
{
  return 0xD000000000000025;
}

uint64_t sub_232135710()
{
  return sub_232136138(&qword_255F9F908, (uint64_t)&unk_232217258);
}

uint64_t sub_232135734()
{
  return sub_232136138(&qword_255F9F910, (uint64_t)&unk_232217230);
}

uint64_t sub_232135758@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_23216A80C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v17 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_2320A481C();
      v11 = v17;
    }
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v11 + 56);
    v13 = sub_2321FDC6C();
    v14 = *(_QWORD *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 32))(a3, v12 + *(_QWORD *)(v14 + 72) * v8, v13);
    sub_232135888(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, v13);
  }
  else
  {
    v16 = sub_2321FDC6C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 1, 1, v16);
  }
}

unint64_t sub_232135888(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23220177C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        sub_232201B78();
        swift_bridgeObjectRetain();
        sub_232200F3C();
        v9 = sub_232201B9C();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v10 < v8)
          goto LABEL_11;
LABEL_12:
        v11 = *(_QWORD *)(a2 + 48);
        v12 = (_OWORD *)(v11 + 16 * v3);
        v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1)
          *v12 = *v13;
        v14 = *(_QWORD *)(a2 + 56);
        v15 = *(_QWORD *)(*(_QWORD *)(sub_2321FDC6C() - 8) + 72);
        v16 = v15 * v3;
        result = v14 + v15 * v3;
        v17 = v15 * v6;
        v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v16 == v17)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v10 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v10)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_232135A84(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;

  v2 = sub_2321FDC6C();
  v34 = *(_QWORD *)(v2 - 8);
  v35 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v33 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v28 - v5;
  v32 = sub_2321FDDD4();
  v30 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_2321FD960();
  v29 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878];
  sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v28 - v13;
  v15 = sub_2321FD8B8();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232016080(a1, (uint64_t)v14, &qword_2541B7F60, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_232016D88((uint64_t)v14, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    sub_2321FDDA4();
    sub_2320057B8(0, &qword_2541B5798, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF290], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v20 = sub_2321FDDC8();
    v21 = *(_QWORD *)(v20 - 8);
    v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_232210D40;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v21 + 104))(v23 + v22, *MEMORY[0x24BDCF220], v20);
    sub_2321AA91C(v23);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_2321FD894();
    v24 = v33;
    sub_2321FD870();
    sub_2321FDD44();
    swift_bridgeObjectRelease();
    v25 = v35;
    v26 = *(void (**)(char *, uint64_t))(v34 + 8);
    v26(v24, v35);
    v26(v6, v25);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v32);
    v19 = sub_2321FD924();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v31);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  return v19;
}

_QWORD *sub_232135DF0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, int a8, char a9, char a10, uint64_t a11)
{
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  _QWORD v29[2];
  int v30;
  uint64_t v31;

  v12 = v11;
  v29[1] = a5;
  sub_2320057B8(0, &qword_2541B2A40, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)v29 - v19;
  result = objc_msgSend(a1, sel_identifier);
  if (result)
  {
    v30 = a8;
    v29[0] = a7;
    v12[2] = result;
    v31 = a4;
    sub_232016080(a4, (uint64_t)v20, &qword_2541B2A40, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80]);
    v22 = sub_2321FFD00();
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v20, 1, v22) == 1)
    {
      sub_232016D88((uint64_t)v20, &qword_2541B2A40, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80]);
      sub_232136138(&qword_2541AFA00, (uint64_t)&unk_232217280);
      sub_2321FEB0C();
    }
    else
    {
      sub_2321FFCF4();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v20, v22);
    }
    v24 = sub_232200E94();
    swift_bridgeObjectRelease();
    v12[5] = v24;
    sub_23220021C();
    v25 = sub_232200E94();
    swift_bridgeObjectRelease();
    v12[3] = v25;
    if (qword_2541AF9F8 != -1)
      swift_once();
    sub_232136138(&qword_2541AFA00, (uint64_t)&unk_232217280);
    v12[4] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, sub_2321FEAF4());
    if ((a6 & 1) != 0)
      v26 = (id)sub_2321FEB00();
    else
      v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, sub_2321FEAF4());
    v12[6] = v26;
    if ((v30 & 1) != 0)
      v27 = (id)sub_2321FEB00();
    else
      v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, sub_2321FEAF4());
    v12[7] = v27;
    v12[8] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, a9 & 1);
    v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, a10 & 1);
    sub_232016D88(v31, &qword_2541B2A40, (uint64_t (*)(uint64_t))MEMORY[0x24BE4AC80]);
    v12[9] = v28;
    v12[10] = a11;
    return v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_232136138(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for TrendGenerationAnalyticsEvent();
    result = MEMORY[0x2348FF39C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_232136174()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B5470)
  {
    sub_2321FDC6C();
    v0 = sub_232200DEC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B5470);
  }
}

uint64_t sub_2321361D8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2321361E4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_232136260()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_23213626C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for SnidgetFeedItemGeneratorRequest(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for WalkingSteadinessSnidgetFeedItemModelProvider()
{
  uint64_t result;

  result = qword_2541B2738;
  if (!qword_2541B2738)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23213631C(uint64_t a1)
{
  uint64_t result;

  result = sub_232000590(&qword_255F9CF60, (uint64_t (*)(uint64_t))type metadata accessor for WalkingSteadinessSnidgetFeedItemModelProvider, (uint64_t)&unk_23221732C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_232136358(void *a1@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;
  id v50;
  void *v51;
  char *v52;
  id v53;
  void *v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  id v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  void *v66;
  void *v67;
  id v68;
  void *v69;
  unsigned int v70;
  id v71;
  void *v72;
  unsigned int v73;
  void *v74;
  uint64_t inited;
  void *v76;
  id v77;
  id v78;
  uint64_t v79;
  char *v80;
  id v81;
  _BYTE *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  id v94;
  id v95;
  id v96;
  void *v97;
  uint64_t v98;
  void (*v99)(char *, _QWORD, uint64_t, uint64_t);
  id v100;
  char *v101;
  id v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(char *, uint64_t);
  char *v111;
  void (*v112)(char *, char *, uint64_t);
  char *v113;
  id v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  id v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  id v124;
  id v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  id v129;
  id v130;
  void *v131;
  id v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _BYTE *v138;
  _QWORD *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _BYTE *v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t *v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  char *v165;
  uint64_t v166;
  char *v167;
  char *v168;
  char *v169;
  _BYTE *v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  char *v176;
  char *v177;
  _BYTE *v178;
  char *v179;
  uint64_t v180;
  _QWORD *v181;
  id v182;
  uint64_t v183;
  uint64_t v184;
  id v185;
  char *v186;
  void *v187;
  uint64_t v188[2];
  uint64_t v189;

  v4 = v3;
  v180 = a2;
  v181 = a3;
  v187 = a1;
  v5 = type metadata accessor for WalkingSteadinessSnidgetFeedItemModelProvider();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v184 = (uint64_t)&v152 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (uint64_t *)((char *)&v152 - v8);
  v10 = sub_23220039C();
  v182 = *(id *)(v10 - 8);
  v183 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v152 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, &qword_2541B7F60, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  MEMORY[0x24BDAC7A8](v13);
  v179 = (char *)&v152 - v14;
  v15 = sub_2321FDC6C();
  MEMORY[0x24BDAC7A8](v15);
  v168 = (char *)&v152 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, qword_2541B78E0, (void (*)(uint64_t))MEMORY[0x24BE47DF8]);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v177 = (char *)&v152 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v169 = (char *)&v152 - v20;
  v21 = type metadata accessor for SnidgetFeedItemMetadata(0);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v178 = (char *)&v152 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v170 = (char *)&v152 - v24;
  sub_2320002B4(0, &qword_2541B2368, (void (*)(uint64_t))MEMORY[0x24BE445A8]);
  MEMORY[0x24BDAC7A8](v25);
  v167 = (char *)&v152 - v26;
  sub_2320002B4(0, &qword_2541B2930, (void (*)(uint64_t))MEMORY[0x24BE42FE0]);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v176 = (char *)&v152 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v163 = (char *)&v152 - v30;
  v162 = sub_2322002D0();
  v161 = *(_QWORD *)(v162 - 8);
  MEMORY[0x24BDAC7A8](v162);
  v159 = (uint64_t)&v152 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = sub_2321FEA7C();
  v157 = *(_QWORD *)(v160 - 8);
  v32 = MEMORY[0x24BDAC7A8](v160);
  v158 = (char *)&v152 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v32);
  v156 = (char *)&v152 - v34;
  v155 = sub_2321FEB84();
  v154 = *(_QWORD *)(v155 - 8);
  MEMORY[0x24BDAC7A8](v155);
  v153 = (char *)&v152 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2320002B4(0, (unint64_t *)&qword_2541B2838, (void (*)(uint64_t))MEMORY[0x24BDCC5A8]);
  v37 = MEMORY[0x24BDAC7A8](v36);
  v166 = (uint64_t)&v152 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = MEMORY[0x24BDAC7A8](v37);
  v165 = (char *)&v152 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v171 = (uint64_t)&v152 - v42;
  MEMORY[0x24BDAC7A8](v41);
  v44 = (char *)&v152 - v43;
  v173 = sub_2321FD9F0();
  v175 = *(_QWORD *)(v173 - 8);
  v45 = MEMORY[0x24BDAC7A8](v173);
  v164 = (char *)&v152 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v45);
  v174 = (char *)&v152 - v47;
  v48 = (void *)objc_opt_self();
  v49 = (void *)*v4;
  v50 = objc_msgSend(v48, sel_sharedInstanceForHealthStore_, *v4);
  if (!v50)
  {
    __break(1u);
    goto LABEL_33;
  }
  v51 = v50;
  v172 = (char *)v4 + *(int *)(v5 + 20);
  v52 = (char *)objc_msgSend(v50, sel_displayTypeForObjectType_, *((_QWORD *)v172 + 2));

  v186 = v52;
  if (v52)
  {
    v53 = v185;
    sub_2320849BC(v187);
    if (v53)
    {

      return;
    }
    v67 = v54;
    if (!v54)
      goto LABEL_20;
    if (!objc_msgSend(v54, sel_hasQuantity)
      || !objc_msgSend(v67, sel_hasClassificationRawValue)
      || !objc_msgSend(v67, sel_hasLevelViewDataConfiguration))
    {
      goto LABEL_19;
    }
    v68 = objc_msgSend(v67, sel_quantity);
    if (v68)
    {
      v69 = v68;
      v70 = objc_msgSend(v68, sel_hasDateData);

      if (v70)
      {
        v71 = objc_msgSend(v67, sel_quantity);
        if (v71)
        {
          v72 = v71;
          v73 = objc_msgSend(v71, sel_hasValue);

          if (v73)
          {
            v185 = v67;
            v183 = 0;
            v74 = *(void **)&v172[*(int *)(type metadata accessor for SnidgetFeedItemGeneratorRequest(0) + 32)];
            type metadata accessor for SnidgetStringBuilder();
            inited = swift_initStackObject();
            *(_QWORD *)(inited + 16) = v49;
            v76 = (void *)objc_opt_self();
            v182 = v74;
            v77 = v49;
            v78 = objc_msgSend(v76, sel_sharedInstanceForHealthStore_, v77);
            v184 = inited;
            *(_QWORD *)(inited + 32) = v78;
            if (v74)
            {
              v79 = v173;
              v80 = v174;
              v81 = v182;
            }
            else
            {
              v94 = v78;
              v81 = objc_msgSend(v94, sel_createHKUnitPreferenceController);

              v79 = v173;
              v80 = v174;
            }

            v95 = v185;
            *(_QWORD *)(v184 + 24) = v81;
            v96 = objc_msgSend((id)objc_opt_self(), sel_localizedTitleForClassification_, objc_msgSend(v95, sel_classificationRawValue));
            if (v96)
            {
              v97 = v96;
              sub_232200EC4();

              SnidgetStringBuilder.makePrimaryAttributedString(localizedString:)();
              swift_bridgeObjectRelease();
              v98 = v175;
              v99 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v175 + 56);
              v99(v44, 0, 1, v79);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48))(v44, 1, v79) != 1)
              {
                (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v80, v44, v79);
                sub_232137488(v187, v171);
                v100 = v185;
                v101 = (char *)objc_msgSend(v185, sel_levelViewDataConfiguration);
                if (v101)
                {
                  v102 = objc_msgSend(v186, sel_objectType);
                  v103 = v153;
                  sub_2321FEB90();
                  v187 = v99;
                  v104 = v154;
                  v105 = v156;
                  v106 = v155;
                  (*(void (**)(char *, char *, uint64_t))(v154 + 16))(v156, v103, v155);
                  v107 = v157;
                  v108 = v160;
                  (*(void (**)(char *, _QWORD, uint64_t))(v157 + 104))(v105, *MEMORY[0x24BE41348], v160);
                  v109 = v159;
                  LevelView.DataConfiguration.init(codable:)(v101, v159);
                  v110 = *(void (**)(char *, uint64_t))(v104 + 8);
                  v99 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v187;
                  v111 = v103;
                  v100 = v185;
                  v110(v111, v106);
                  v112 = *(void (**)(char *, char *, uint64_t))(v107 + 32);
                  v113 = v158;
                  v112(v158, v105, v108);
                  type metadata accessor for SnidgetLevelChartView.ViewModel();
                  v101 = (char *)swift_allocObject();
                  (*(void (**)(char *, uint64_t, uint64_t))(v161 + 32))(&v101[OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_dataConfiguration], v109, v162);
                  v112(&v101[OBJC_IVAR____TtCV9Summaries21SnidgetLevelChartView9ViewModel_accentColor], v113, v108);
                }
                v114 = objc_msgSend(v100, sel_quantity);
                if (v114)
                {
                  v115 = v114;
                  sub_2321FF208();
                  sub_232000448();
                  v117 = *(int *)(v116 + 48);
                  objc_msgSend(v115, sel_dateData);
                  v118 = (id)HKDecodeDateForValue();
                  v119 = v163;
                  sub_2321FDC30();

                  v119[v117] = 0;
                  v120 = *MEMORY[0x24BE42FD8];
                  v121 = sub_2321FEF5C();
                  v122 = *(_QWORD *)(v121 - 8);
                  (*(void (**)(char *, uint64_t, uint64_t))(v122 + 104))(v119, v120, v121);
                  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v119, 0, 1, v121);
                  v123 = v186;
                  v187 = (void *)sub_2321FF1FC();
                  v99(v165, 1, 1, v79);
                  (*(void (**)(char *, char *, uint64_t))(v175 + 16))(v164, v174, v79);
                  sub_232079A34(v171, v166);
                  v188[0] = 0x5F74656764696E53;
                  v188[1] = 0xE800000000000000;
                  v124 = *((id *)v172 + 2);
                  v125 = objc_msgSend(v124, sel_description);
                  sub_232200EC4();

                  sub_232200F48();
                  swift_bridgeObjectRelease();
                  v126 = v167;
                  sub_2321FF58C();
                  swift_bridgeObjectRelease();
                  v127 = sub_2321FF5A4();
                  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v127 - 8) + 56))(v126, 0, 1, v127);
                  sub_2321FF6C4();
                  swift_allocObject();
                  v128 = sub_2321FF6B8();
                  swift_retain();
                  v129 = v185;
                  v130 = objc_msgSend(v185, sel_quantity);
                  if (v130)
                  {
                    v131 = v130;
                    objc_msgSend(v130, sel_dateData);
                    v132 = (id)HKDecodeDateForValue();
                    sub_2321FDC30();

                    v133 = (uint64_t)v169;
                    sub_2321FE62C();
                    v134 = sub_2321FE65C();
                    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v134 - 8) + 56))(v133, 0, 1, v134);
                    v135 = sub_2321FD8B8();
                    v136 = (uint64_t)v179;
                    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v135 - 8) + 56))(v179, 1, 1, v135);
                    v137 = v180;
                    swift_bridgeObjectRetain();
                    v138 = v170;
                    sub_2320D71E8(1, v133, v137, v136, v170);

                    swift_release();
                    swift_release();
                    v139 = v181;
                    *v181 = v187;
                    v139[1] = v128;
                    v139[2] = v101;
                    sub_232044300(0);
                    sub_232104E50((uint64_t)v138, (uint64_t)v139 + *(int *)(v140 + 52));
                    sub_232079A90(v171);
                    (*(void (**)(char *, uint64_t))(v175 + 8))(v174, v173);
                    return;
                  }
                  goto LABEL_36;
                }
LABEL_35:
                swift_release();
                __break(1u);
LABEL_36:
                swift_release();
                __break(1u);
                return;
              }
            }
            else
            {
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v175 + 56))(v44, 1, 1, v79);
            }
            sub_232079A90((uint64_t)v44);
            v141 = sub_2321FE65C();
            v142 = (uint64_t)v177;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v141 - 8) + 56))(v177, 1, 1, v141);
            v143 = sub_2321FD8B8();
            v144 = (uint64_t)v179;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v143 - 8) + 56))(v179, 1, 1, v143);
            v145 = v180;
            swift_bridgeObjectRetain();
            v146 = v178;
            sub_2320D71E8(0, v142, v145, v144, v178);
            sub_2321FF208();
            v147 = sub_2321FEF5C();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v147 - 8) + 56))(v176, 1, 1, v147);
            v148 = v186;
            v149 = sub_2321FF1FC();
            sub_232044300(0);
            v151 = v181;
            sub_23200054C((uint64_t)v146, (uint64_t)v181 + *(int *)(v150 + 52), type metadata accessor for SnidgetFeedItemMetadata);

            swift_release();
            v151[1] = 0;
            v151[2] = 0;
            *v151 = v149;
            sub_232002CEC((uint64_t)v146, type metadata accessor for SnidgetFeedItemMetadata);
            return;
          }
          goto LABEL_19;
        }
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
LABEL_19:

LABEL_20:
      v83 = sub_2321FE65C();
      v84 = (uint64_t)v177;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v177, 1, 1, v83);
      v85 = sub_2321FD8B8();
      v86 = (uint64_t)v179;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 56))(v179, 1, 1, v85);
      v87 = v180;
      swift_bridgeObjectRetain();
      v88 = v178;
      sub_2320D71E8(0, v84, v87, v86, v178);
      sub_2321FF208();
      v89 = sub_2321FEF5C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 56))(v176, 1, 1, v89);
      v90 = v186;
      v91 = sub_2321FF1FC();
      sub_232044300(0);
      v93 = v181;
      sub_23200054C((uint64_t)v88, (uint64_t)v181 + *(int *)(v92 + 52), type metadata accessor for SnidgetFeedItemMetadata);

      v93[1] = 0;
      v93[2] = 0;
      *v93 = v91;
      sub_232002CEC((uint64_t)v88, type metadata accessor for SnidgetFeedItemMetadata);
      return;
    }
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  sub_232200318();
  sub_23200054C((uint64_t)v4, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for WalkingSteadinessSnidgetFeedItemModelProvider);
  v55 = v184;
  sub_23200054C((uint64_t)v4, v184, (uint64_t (*)(_QWORD))type metadata accessor for WalkingSteadinessSnidgetFeedItemModelProvider);
  v56 = sub_232200390();
  v57 = sub_2322012E4();
  v58 = v57;
  if (os_log_type_enabled(v56, v57))
  {
    v59 = swift_slowAlloc();
    v187 = (void *)swift_slowAlloc();
    v188[0] = (uint64_t)v187;
    *(_DWORD *)v59 = 136315394;
    v60 = sub_232085310(*v9, *((unsigned __int8 *)v9 + *(int *)(v5 + 20) + 8));
    v189 = sub_232013174(v60, v61, v188);
    v186 = v12;
    LODWORD(v185) = v58;
    sub_232201710();
    swift_bridgeObjectRelease();
    sub_232002CEC((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for WalkingSteadinessSnidgetFeedItemModelProvider);
    *(_WORD *)(v59 + 12) = 2080;
    v62 = objc_msgSend(*(id *)(v55 + *(int *)(v5 + 20) + 16), sel_sensitiveLoggingIdentifier);
    v63 = sub_232200EC4();
    v65 = v64;

    v189 = sub_232013174(v63, v65, v188);
    sub_232201710();
    swift_bridgeObjectRelease();
    sub_232002CEC(v55, (uint64_t (*)(_QWORD))type metadata accessor for WalkingSteadinessSnidgetFeedItemModelProvider);
    _os_log_impl(&dword_231FFB000, v56, (os_log_type_t)v185, "[%s]: unable to find display type: %s", (uint8_t *)v59, 0x16u);
    v66 = v187;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v66, -1, -1);
    MEMORY[0x2348FF468](v59, -1, -1);

    (*((void (**)(char *, uint64_t))v182 + 1))(v186, v183);
  }
  else
  {
    sub_232002CEC((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for WalkingSteadinessSnidgetFeedItemModelProvider);
    sub_232002CEC(v55, (uint64_t (*)(_QWORD))type metadata accessor for WalkingSteadinessSnidgetFeedItemModelProvider);

    (*((void (**)(char *, uint64_t))v182 + 1))(v12, v183);
  }
  sub_232005578();
  swift_allocError();
  *v82 = 0;
  swift_willThrow();
}

void sub_232137488(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  void *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v25 = sub_23220039C();
  v4 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2321FD8B8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, sel_hasSupplementaryValue))
  {
    v11 = a2;
    v12 = objc_msgSend(a1, sel_supplementaryValue);
    if (!v12)
    {
      __break(1u);
      goto LABEL_12;
    }
    v13 = v12;
    v14 = objc_msgSend(v12, sel_hasDateInterval);

    a2 = v11;
    if (v14)
    {
      v15 = v7;
      v16 = v8;
      v17 = objc_msgSend(a1, sel_supplementaryValue);
      if (v17)
      {
        v18 = v17;
        v19 = objc_msgSend(v17, sel_dateInterval);

        if (v19)
        {
          sub_232201500();

          SnidgetStringBuilder.makeDateRangeSupplementaryAttributedString(dateRange:)((uint64_t)v10, v11);
          (*(void (**)(char *, uint64_t))(v16 + 8))(v10, v15);
          return;
        }
        goto LABEL_13;
      }
LABEL_12:
      __break(1u);
LABEL_13:
      __break(1u);
      return;
    }
  }
  sub_232200318();
  v20 = sub_232200390();
  v21 = sub_2322012E4();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    _os_log_impl(&dword_231FFB000, v20, v21, "Current value model for walking steadiness does not have a supplementary value", v22, 2u);
    MEMORY[0x2348FF468](v22, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v25);
  v23 = sub_2321FD9F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a2, 1, 1, v23);
}

void sub_2321376D0(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_232136358(*(void **)a1, *(_QWORD *)(a1 + 16), a2);
}

uint64_t HKObjectType.summaryChartModelConfiguration.getter()
{
  void *v0;
  id v1;
  uint64_t result;

  v1 = objc_msgSend(v0, sel_code);
  result = 0;
  switch((unint64_t)v1)
  {
    case 0uLL:
    case 1uLL:
    case 3uLL:
    case 4uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x20uLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
    case 0x29uLL:
    case 0x2AuLL:
    case 0x2BuLL:
    case 0x2CuLL:
    case 0x2DuLL:
    case 0x2EuLL:
    case 0x2FuLL:
    case 0x30uLL:
    case 0x31uLL:
    case 0x32uLL:
    case 0x33uLL:
    case 0x34uLL:
    case 0x35uLL:
    case 0x36uLL:
    case 0x37uLL:
    case 0x38uLL:
    case 0x39uLL:
    case 0x3AuLL:
    case 0x3CuLL:
    case 0x3DuLL:
    case 0x3EuLL:
    case 0x3FuLL:
    case 0x46uLL:
    case 0x47uLL:
    case 0x48uLL:
    case 0x49uLL:
    case 0x4BuLL:
    case 0x4EuLL:
    case 0x4FuLL:
    case 0x53uLL:
    case 0x57uLL:
    case 0x5AuLL:
    case 0x63uLL:
    case 0x65uLL:
    case 0x6EuLL:
    case 0x6FuLL:
    case 0x71uLL:
    case 0x72uLL:
    case 0x76uLL:
    case 0x7DuLL:
    case 0x89uLL:
    case 0x8AuLL:
    case 0x8BuLL:
    case 0xACuLL:
    case 0xADuLL:
    case 0xB3uLL:
    case 0xB6uLL:
    case 0xB7uLL:
    case 0xBAuLL:
    case 0xBBuLL:
    case 0xBCuLL:
    case 0xBDuLL:
    case 0xC2uLL:
    case 0xC3uLL:
    case 0xC4uLL:
    case 0xFBuLL:
    case 0x100uLL:
    case 0x102uLL:
    case 0x103uLL:
    case 0x104uLL:
    case 0x10AuLL:
    case 0x10EuLL:
    case 0x110uLL:
    case 0x112uLL:
    case 0x117uLL:
    case 0x118uLL:
    case 0x119uLL:
    case 0x11AuLL:
    case 0x11BuLL:
    case 0x11EuLL:
    case 0x126uLL:
    case 0x127uLL:
    case 0x128uLL:
    case 0x129uLL:
    case 0x12DuLL:
    case 0x12EuLL:
    case 0x12FuLL:
      result = (uint64_t)&unk_2500FDB30;
      break;
    case 2uLL:
    case 0x12uLL:
    case 0x50uLL:
    case 0x59uLL:
    case 0x5BuLL:
    case 0x5CuLL:
    case 0x5FuLL:
    case 0x60uLL:
    case 0x61uLL:
    case 0x64uLL:
    case 0x8CuLL:
    case 0x90uLL:
    case 0x93uLL:
    case 0x9CuLL:
    case 0x9DuLL:
    case 0x9EuLL:
    case 0x9FuLL:
    case 0xA0uLL:
    case 0xA1uLL:
    case 0xA2uLL:
    case 0xA3uLL:
    case 0xA4uLL:
    case 0xA5uLL:
    case 0xA6uLL:
    case 0xA7uLL:
    case 0xA8uLL:
    case 0xA9uLL:
    case 0xAAuLL:
    case 0xABuLL:
    case 0xB2uLL:
    case 0xBFuLL:
    case 0xC0uLL:
    case 0xC1uLL:
    case 0xC7uLL:
    case 0xC9uLL:
    case 0xCAuLL:
    case 0xCBuLL:
    case 0xCCuLL:
    case 0xCDuLL:
    case 0xCEuLL:
    case 0xCFuLL:
    case 0xDCuLL:
    case 0xDDuLL:
    case 0xDEuLL:
    case 0xDFuLL:
    case 0xE0uLL:
    case 0xE1uLL:
    case 0xE2uLL:
    case 0xE5uLL:
    case 0xE6uLL:
    case 0xE7uLL:
    case 0xE8uLL:
    case 0xE9uLL:
    case 0xEAuLL:
    case 0xEBuLL:
    case 0xECuLL:
    case 0xEDuLL:
    case 0xF0uLL:
    case 0xF1uLL:
    case 0xF2uLL:
    case 0xF3uLL:
    case 0xF4uLL:
    case 0xF8uLL:
    case 0xF9uLL:
    case 0xFAuLL:
    case 0x106uLL:
    case 0x107uLL:
    case 0x108uLL:
    case 0x109uLL:
    case 0x11CuLL:
    case 0x11FuLL:
    case 0x120uLL:
      return result;
    case 5uLL:
    case 0xFuLL:
    case 0x10DuLL:
    case 0x115uLL:
      result = (uint64_t)&unk_2500FDB88;
      break;
    case 0x7CuLL:
      result = (uint64_t)&unk_2500FDBE0;
      break;
    case 0x113uLL:
    case 0x114uLL:
      result = 0;
      break;
    case 0x139uLL:
    case 0x13AuLL:
      result = 0;
      break;
    default:
      result = 1;
      break;
  }
  return result;
}

uint64_t sub_2321377B8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  char *v16;
  id v17;
  id v18;
  uint64_t (*v19)(void);
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v23 = a4;
  v8 = sub_2321FDC6C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  sub_2320CE3EC();
  v12 = *(_QWORD *)(v11 - 8);
  v24 = v11;
  v25 = v12;
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v8);
  v15 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v16 = (char *)swift_allocObject();
  *((_QWORD *)v16 + 2) = v4;
  *((_QWORD *)v16 + 3) = a1;
  *((_QWORD *)v16 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v16[v15], (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  *(_QWORD *)&v16[(v10 + v15 + 7) & 0xFFFFFFFFFFFFFFF8] = v23;
  sub_2320CE4B4();
  swift_allocObject();
  v17 = v4;
  v18 = a1;
  swift_bridgeObjectRetain();
  v26 = sub_2322006E4();
  v19 = MEMORY[0x24BDB9E10];
  sub_23213B988(0, (unint64_t *)&qword_2541B30C0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9E10]);
  sub_232000590(&qword_2541B79E8, (uint64_t (*)(uint64_t))sub_2320CE4B4, MEMORY[0x24BDB9E58]);
  sub_23213BA10(&qword_2541B79E0, (unint64_t *)&qword_2541B30C0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v19, MEMORY[0x24BDB9E20]);
  sub_2322007D4();
  swift_release();
  sub_232000590(&qword_2541B7988, (uint64_t (*)(uint64_t))sub_2320CE3EC, MEMORY[0x24BDB9740]);
  v20 = v24;
  v21 = sub_232200774();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v20);
  return v21;
}

void sub_232137A08(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_232137A7C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  void *v7;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  void *v37;
  uint64_t v39;
  id aBlock;
  uint64_t v41;
  void (*v42)(uint64_t, void *, void *);
  void *v43;
  uint64_t (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;

  v7 = v6;
  v46 = *MEMORY[0x24BDAC8D0];
  v13 = objc_msgSend(a1, sel_identifier);
  v14 = sub_232200EC4();
  v16 = v15;

  if (v14 == sub_232200EC4() && v16 == v17)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_12;
  }
  v19 = sub_232201ADC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v19 & 1) != 0)
  {
LABEL_12:
    v30 = objc_msgSend(v7, sel_healthStore);
    aBlock = 0;
    v31 = objc_msgSend(v30, sel_activityMoveModeWithError_, &aBlock);

    if (v31)
    {
      v32 = aBlock;
      v33 = (uint64_t)objc_msgSend(v31, sel_activityMoveMode);

    }
    else
    {
      v34 = aBlock;
      v35 = (void *)sub_2321FDA5C();

      swift_willThrow();
      v33 = 1;
    }
    v36 = swift_allocObject();
    *(_QWORD *)(v36 + 16) = a5;
    *(_QWORD *)(v36 + 24) = a6;
    v44 = sub_23213BC04;
    v45 = v36;
    aBlock = (id)MEMORY[0x24BDAC760];
    v41 = 1107296256;
    v42 = sub_232137A08;
    v43 = &unk_250104B50;
    v37 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    objc_msgSend(v7, sel_encodeActivityChartDataForActivityMoveMode_completion_, v33, v37);
    _Block_release(v37);
    goto LABEL_16;
  }
  v39 = a4;
  v20 = objc_msgSend(a1, sel_identifier);
  sub_232200EC4();

  v21 = *(_QWORD *)(a2 + 16);
  v22 = MEMORY[0x24BEE4AF8];
  if (v21)
  {
    aBlock = (id)MEMORY[0x24BEE4AF8];
    sub_2322018FC();
    v23 = (uint64_t *)(a2 + 32);
    do
    {
      v24 = *v23++;
      objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v24);
      sub_2322018E4();
      sub_232201908();
      sub_232201914();
      sub_2322018F0();
      --v21;
    }
    while (v21);
    v22 = (unint64_t)aBlock;
  }
  sub_2321AADD8(v22);
  swift_bridgeObjectRelease();
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = a5;
  *(_QWORD *)(v25 + 24) = a6;
  swift_retain();
  v26 = (void *)sub_232200E94();
  sub_232003E9C(0, (unint64_t *)&qword_2541B0D78);
  sub_232036AC0();
  v27 = (void *)sub_2322010B0();
  v28 = (void *)sub_2321FDBF4();
  v44 = sub_23213BC04;
  v45 = v25;
  aBlock = (id)MEMORY[0x24BDAC760];
  v41 = 1107296256;
  v42 = sub_232137A08;
  v43 = &unk_250104B00;
  v29 = _Block_copy(&aBlock);
  swift_retain();
  objc_msgSend(v7, sel_encodeChartQueryDataForTypeIdentifier_forTimeScopes_timeScopeReferenceDate_audience_completionHandler_, v26, v27, v28, v39, v29);
  _Block_release(v29);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_16:
  swift_release();
  return swift_release();
}

uint64_t sub_232137EA4(uint64_t a1, char a2, uint64_t (*a3)(uint64_t *))
{
  uint64_t v4;
  char v5;

  v4 = a1;
  v5 = a2 & 1;
  return a3(&v4);
}

uint64_t sub_232137EDC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = sub_23220039C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232200318();
  v6 = a1;
  v7 = a1;
  v8 = sub_232200390();
  v9 = sub_2322012E4();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v20 = v2;
    v11 = v10;
    v12 = swift_slowAlloc();
    v22 = v12;
    *(_DWORD *)v11 = 136315394;
    v21 = sub_232003E9C(0, (unint64_t *)&qword_2541B7EC8);
    sub_23213BB60();
    v13 = sub_232200F00();
    v21 = sub_232013174(v13, v14, &v22);
    sub_232201710();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2080;
    v21 = (uint64_t)a1;
    v15 = a1;
    sub_232016A8C(0, (unint64_t *)&qword_2541B78D0);
    v16 = sub_232200F0C();
    v21 = sub_232013174(v16, v17, &v22);
    sub_232201710();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_231FFB000, v8, v9, "[%s]: error when creating chart data: %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v12, -1, -1);
    MEMORY[0x2348FF468](v11, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v20);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_2320C0624(0, (unint64_t *)&qword_2541B5670, &qword_2541B0CB8, 0x24BE4A370, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  return sub_2322006C0();
}

uint64_t sub_232138184(void *a1, uint64_t a2, unint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  os_log_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  os_log_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;

  v44 = a2;
  sub_23213B2F0(0, &qword_255F9F9F8, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9E10]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v38 - v10;
  v12 = sub_23220039C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232200318();
  swift_bridgeObjectRetain();
  v16 = a4;
  v17 = a1;
  swift_bridgeObjectRetain();
  v18 = v16;
  v19 = a1;
  v20 = sub_232200390();
  v21 = sub_2322012E4();
  v45 = v21;
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v43 = v9;
    v23 = v22;
    v40 = swift_slowAlloc();
    v47 = v40;
    *(_DWORD *)v23 = 136446979;
    v42 = v12;
    sub_23213A278();
    v24 = sub_232201BF0();
    v41 = v13;
    v46 = sub_232013174(v24, v25, &v47);
    v39 = v20;
    sub_232201710();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2082;
    swift_bridgeObjectRetain();
    v46 = sub_232013174(v44, a3, &v47);
    sub_232201710();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v23 + 22) = 2081;
    v26 = objc_msgSend(v18, sel_identifier);
    v27 = sub_232200EC4();
    v44 = v8;
    v29 = v28;

    v46 = sub_232013174(v27, v29, &v47);
    sub_232201710();

    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 32) = 2082;
    v46 = (uint64_t)a1;
    v30 = a1;
    sub_232016A8C(0, (unint64_t *)&qword_2541B78D0);
    v31 = sub_232200F0C();
    v46 = sub_232013174(v31, v32, &v47);
    v8 = v44;
    sub_232201710();
    swift_bridgeObjectRelease();

    v33 = v39;
    _os_log_impl(&dword_231FFB000, v39, (os_log_type_t)v45, "%{public}s %{public}s %{private}s Error: %{public}s", (uint8_t *)v23, 0x2Au);
    v34 = v40;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v34, -1, -1);
    v35 = v23;
    v9 = v43;
    MEMORY[0x2348FF468](v35, -1, -1);

    (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v42);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  sub_232016A8C(0, &qword_2541B28D8);
  sub_2322006C0();
  sub_23213B368();
  v36 = sub_232200774();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v36;
}

_QWORD *sub_232138584(uint64_t a1, char a2, void *a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  void (*v34)(unint64_t, _QWORD, uint64_t);
  id v35;
  id v36;
  unint64_t v37;
  char *v38;
  char *v39;
  void (*v40)(uint64_t *, _QWORD);
  uint64_t v41;
  _QWORD *v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  id v45;
  _QWORD *v46;
  id v47;
  uint64_t v48;
  void *v49;
  id v50;
  id v51;
  char *v52;
  id v53;
  void *v54;
  void *v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  id v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  id v77;
  void *v78;
  uint64_t v79;
  char *v80;
  id v81;
  _QWORD *v82;
  id v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *result;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  void (**v95)(_QWORD, uint64_t);
  uint64_t v96;
  void (*v97)(char *, uint64_t, uint64_t);
  char *v98;
  id v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  id v106;
  uint64_t v107;
  char *v108;
  id v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  id v117;
  uint64_t v118;
  id v119;
  id v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;

  v109 = a3;
  v99 = (id)*v3;
  LODWORD(v120) = a2 & 1;
  sub_23213A1C4();
  v115 = v6;
  v114 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v113 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2321FE440();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v107 = v10;
  v108 = (char *)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23213A540();
  v104 = v11;
  v102 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v100 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23213A6E8();
  v105 = v13;
  v103 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v101 = (char *)&v90 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23213A278();
  v112 = v15;
  v111 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v110 = (char *)&v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_2321FDDD4();
  v95 = *(void (***)(_QWORD, uint64_t))(v96 - 8);
  MEMORY[0x24BDAC7A8](v96);
  v94 = (char *)&v90 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_2321FE194();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v93 = (char *)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v92 = (uint64_t)&v90 - v22;
  v91 = sub_2321FE38C();
  v90 = *(_QWORD *)(v91 - 8);
  MEMORY[0x24BDAC7A8](v91);
  v24 = (char *)&v90 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = sub_2321FE3BC();
  v118 = *(_QWORD *)(v125 - 8);
  v25 = MEMORY[0x24BDAC7A8](v125);
  v98 = (char *)&v90 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v121 = (char *)&v90 - v27;
  v106 = (id)objc_opt_self();
  v28 = objc_msgSend(v106, sel_activitySummaryType);
  v124 = v3;
  v116 = v9;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v122 = v8;
  v97 = v29;
  v29((char *)v3 + OBJC_IVAR____TtC9Summaries37ActivitySummaryModelGeneratorPipeline_context, a1, v8);
  v123 = a1;
  v117 = (id)sub_2321FE3F8();
  sub_232027434();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232210D20;
  v119 = v28;
  *(_QWORD *)(inited + 32) = v28;
  v127 = inited;
  sub_232201050();
  sub_2320057B8(0, &qword_2541B7530, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v31 = *(_QWORD *)(v19 + 72);
  v32 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  if ((a2 & 1) != 0)
  {
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_232210D40;
    v34 = *(void (**)(unint64_t, _QWORD, uint64_t))(v19 + 104);
    v34(v33 + v32, *MEMORY[0x24BE47410], v18);
  }
  else
  {
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_232210D30;
    v34 = *(void (**)(unint64_t, _QWORD, uint64_t))(v19 + 104);
    v34(v33 + v32, *MEMORY[0x24BE47460], v18);
    v34(v33 + v32 + v31, *MEMORY[0x24BE47490], v18);
  }
  v35 = v117;
  v36 = v119;
  sub_2321A492C(v33);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v37 = swift_bridgeObjectRetain();
  sub_2321A4950(v37);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t))(v90 + 104))(v24, *MEMORY[0x24BE47918], v91);
  v38 = v121;
  sub_2321FE3B0();

  swift_bridgeObjectRelease();
  v39 = v93;
  v34((unint64_t)v93, *MEMORY[0x24BE47440], v18);
  v40 = (void (*)(uint64_t *, _QWORD))sub_2321FE398();
  v41 = v92;
  sub_2321A1A2C(v92, v39);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v41, v18);
  v40(&v127, 0);
  v42 = v124;
  v43 = *(void (**)(char *, char *, uint64_t))(v118 + 16);
  v44 = v38;
  v43((char *)v124 + OBJC_IVAR____TtC9Summaries37ActivitySummaryModelGeneratorPipeline_domain, v38, v125);
  v45 = objc_msgSend(objc_allocWithZone((Class)sub_2321FEB9C()), sel_init);
  *(_QWORD *)((char *)v42 + OBJC_IVAR____TtC9Summaries37ActivitySummaryModelGeneratorPipeline_calendarCache) = v45;
  v46 = v42;
  v47 = v45;
  v117 = v47;
  v48 = v123;
  sub_2321FE3D4();
  sub_232016AD8(&v127, v128);
  v49 = (void *)sub_2321FE314();
  v50 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A658]), sel_initWithHealthStore_, v49);

  sub_232016AFC((uint64_t)&v127);
  v51 = objc_msgSend(v47, sel_currentCalendar);
  v52 = v94;
  sub_2321FDD68();

  v53 = objc_allocWithZone(MEMORY[0x24BE4A5B0]);
  v54 = (void *)sub_2321FDD5C();
  v55 = (void *)sub_232200E94();
  v56 = objc_msgSend(v53, sel_initWithCalendar_queryIdentifier_, v54, v55);

  ((void (**)(char *, uint64_t))v95)[1](v52, v96);
  objc_msgSend(v50, sel_setSleepDataSourceProvider_, v56);

  *(_QWORD *)((char *)v46 + OBJC_IVAR____TtC9Summaries37ActivitySummaryModelGeneratorPipeline_chartFactory) = v50;
  v95 = (void (**)(_QWORD, uint64_t))v50;
  sub_23213AA74(v48, (char)v120);
  v58 = v57;
  v96 = v57;
  sub_2321FE3D4();
  sub_232016AD8(&v127, v128);
  v59 = (void *)sub_2321FE314();
  v60 = sub_23213920C((uint64_t)v59);
  v99 = v60;

  sub_232016AFC((uint64_t)&v127);
  v126 = (uint64_t)v60;
  v127 = v58;
  sub_23213A5F4();
  sub_23213BCDC(0, &qword_2541B2FD0);
  v61 = MEMORY[0x24BDB9AF8];
  sub_232000590(&qword_2541AF2B8, (uint64_t (*)(uint64_t))sub_23213A5F4, MEMORY[0x24BDB9AF8]);
  sub_23213A690();
  v62 = v100;
  sub_232200798();
  sub_2321FE410();
  v63 = v101;
  v64 = v104;
  sub_2322004BC();
  (*(void (**)(char *, uint64_t))(v102 + 8))(v62, v64);
  sub_232000590(&qword_2541B2D98, (uint64_t (*)(uint64_t))sub_23213A6E8, MEMORY[0x24BDB97E0]);
  v65 = v105;
  v66 = sub_232200720();
  (*(void (**)(char *, uint64_t))(v103 + 8))(v63, v65);
  v126 = v66;
  sub_2321FE434();
  v67 = v98;
  v68 = v125;
  v43(v98, v44, v125);
  sub_23213A440();
  sub_232000590(&qword_2541B2FA8, (uint64_t (*)(uint64_t))sub_23213A440, v61);
  v69 = sub_232200738();
  v118 = *(_QWORD *)(v118 + 8);
  ((void (*)(char *, uint64_t))v118)(v67, v68);
  sub_232016AFC((uint64_t)&v127);
  swift_release();
  v127 = v69;
  v70 = v108;
  v71 = v122;
  v97(v108, v48, v122);
  v72 = v116;
  v73 = (*(unsigned __int8 *)(v116 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80);
  v74 = v73 + v107;
  v75 = (v73 + v107) & 0xFFFFFFFFFFFFFFF8;
  v76 = swift_allocObject();
  v77 = v109;
  *(_QWORD *)(v76 + 16) = v109;
  (*(void (**)(unint64_t, char *, uint64_t))(v72 + 32))(v76 + v73, v70, v71);
  *(_BYTE *)(v76 + v74) = (_BYTE)v120;
  v78 = v95;
  *(_QWORD *)(v75 + v76 + 8) = v95;
  v79 = swift_allocObject();
  *(_QWORD *)(v79 + 16) = sub_23213B1F8;
  *(_QWORD *)(v79 + 24) = v76;
  v120 = v78;
  v109 = v77;
  sub_23220060C();
  sub_23213B2F0(0, &qword_2541B2F00, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_23213A3E8();
  v80 = v110;
  sub_23220081C();
  swift_release();
  swift_release();
  v81 = objc_msgSend(v106, sel_activitySummaryType);
  v82 = (_QWORD *)swift_allocObject();
  v82[2] = 0xD000000000000028;
  v82[3] = 0x80000002322088F0;
  v82[4] = v81;
  sub_232000590(&qword_2541B2E08, (uint64_t (*)(uint64_t))sub_23213A278, MEMORY[0x24BDB98F0]);
  v83 = v81;
  v84 = v113;
  v85 = v112;
  sub_2322007D4();
  swift_release();
  sub_232000590(&qword_2541B2D78, (uint64_t (*)(uint64_t))sub_23213A1C4, MEMORY[0x24BDB9740]);
  v86 = v115;
  v87 = sub_232200774();
  (*(void (**)(char *, uint64_t))(v114 + 8))(v84, v86);

  (*(void (**)(char *, uint64_t))(v111 + 8))(v80, v85);
  v127 = v87;
  v88 = sub_232200774();

  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v123, v122);
  swift_release();
  ((void (*)(char *, uint64_t))v118)(v121, v125);
  result = v124;
  *(_QWORD *)((char *)v124 + OBJC_IVAR____TtC9Summaries37ActivitySummaryModelGeneratorPipeline_publisher) = v88;
  return result;
}

id sub_23213920C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  id result;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;

  v39 = a1;
  v1 = sub_2322011DC();
  v40 = *(_QWORD *)(v1 - 8);
  v41 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23213BC24();
  v47 = v4;
  v44 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v42 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23213BD50();
  v48 = *(_QWORD *)(v6 - 8);
  v49 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v46 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23213BDD0();
  v52 = *(_QWORD *)(v8 - 8);
  v53 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v51 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_2322011D0();
  v50 = *(_QWORD *)(v38 - 8);
  v10 = *(_QWORD *)(v50 + 64);
  v11 = MEMORY[0x24BDAC7A8](v38);
  v12 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v45 = (char *)&v36 - v13;
  v14 = objc_msgSend((id)objc_opt_self(), sel__predicateForObjectsFromAppleWatches);
  sub_232003E9C(0, (unint64_t *)&qword_2541B7EA8);
  result = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_activityCacheType);
  if (result)
  {
    v16 = result;
    v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3E98]), sel_initWithSampleType_predicate_, result, v14);

    sub_232027434();
    v37 = v14;
    v18 = swift_allocObject();
    v54 = xmmword_232210D20;
    *(_OWORD *)(v18 + 16) = xmmword_232210D20;
    *(_QWORD *)(v18 + 32) = v17;
    v55 = v18;
    sub_232201050();
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = v54;
    sub_232003E9C(0, (unint64_t *)&qword_2541B78A8);
    swift_getKeyPath();
    v20 = v17;
    *(_QWORD *)(v19 + 32) = sub_2322013D4();
    v55 = v19;
    sub_232201050();
    v21 = v45;
    sub_2322011E8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = v54;
    *(_QWORD *)(v22 + 32) = v20;
    v55 = v22;
    sub_232201050();
    *(_QWORD *)&v54 = v20;
    sub_232201200();
    swift_bridgeObjectRelease();
    sub_232000590(&qword_2541B55B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE459F8], MEMORY[0x24BE459F0]);
    v23 = v41;
    v24 = sub_232200774();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v3, v23);
    v55 = v24;
    v25 = v50;
    v26 = v38;
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v12, v21, v38);
    v27 = (*(unsigned __int8 *)(v25 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    v28 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v25 + 32))(v28 + v27, v12, v26);
    sub_23220060C();
    sub_23213BCDC(0, (unint64_t *)&qword_2541B3040);
    sub_2320C0624(0, (unint64_t *)&unk_2541B5530, &qword_2541B0D68, 0x24BDD3ED8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_23202CC44();
    sub_232000590(&qword_2541B55B0, (uint64_t (*)(uint64_t))MEMORY[0x24BE459E0], MEMORY[0x24BE459D8]);
    v29 = v42;
    sub_232200828();
    swift_release();
    swift_release();
    *(_QWORD *)(swift_allocObject() + 16) = v43;
    sub_232000590(&qword_2541B2E28, (uint64_t (*)(uint64_t))sub_23213BC24, MEMORY[0x24BDB98F0]);
    v31 = v46;
    v30 = v47;
    sub_2322007A4();
    swift_release();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v29, v30);
    sub_232000590(&qword_2541B2CB0, (uint64_t (*)(uint64_t))sub_23213BD50, MEMORY[0x24BDB96C0]);
    v32 = v51;
    v33 = v49;
    sub_232200858();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v31, v33);
    sub_232000590(&qword_2541B2BB8, (uint64_t (*)(uint64_t))sub_23213BDD0, MEMORY[0x24BDB9658]);
    v34 = v53;
    v35 = sub_232200774();

    (*(void (**)(char *, uint64_t))(v52 + 8))(v32, v34);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v21, v26);
    return (id)v35;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_232139814(unint64_t a1, int a2, void *a3, uint64_t a4, int a5, void *a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t result;
  id v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  id v33;
  uint64_t *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  int v40;
  uint64_t v41;
  id v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v42 = a6;
  v39 = a5;
  v40 = a2;
  sub_23213B3C0();
  v44 = *(_QWORD *)(v9 - 8);
  v45 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v43 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for ActivitySummaryCurrentValueSummarySharableModelGenerator.Request(0);
  MEMORY[0x24BDAC7A8](v38);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2321FE440();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v38 - v18;
  sub_2320057B8(0, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v38 - v21;
  sub_232139BFC(a3, (uint64_t)&v38 - v21);
  sub_23213B4A4(0, &qword_2541B57C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_232210D30;
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v41 = a4;
  v24(v19, a4, v13);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_232201998();
    v25 = result;
    if (!result)
      goto LABEL_7;
  }
  else
  {
    v25 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (!v25)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      v28 = v39 & 1;
      sub_23213B50C((uint64_t)v22, (uint64_t)&v12[*(int *)(v38 + 28)]);
      *(_QWORD *)v12 = v25;
      v12[8] = v28;
      v12[9] = v40 & 1;
      v29 = type metadata accessor for ActivitySummaryCurrentValueSummarySharableModelGenerator(0);
      swift_allocObject();
      v30 = sub_23215E08C((uint64_t)v19, (uint64_t)v12);
      *(_QWORD *)(v23 + 56) = v29;
      *(_QWORD *)(v23 + 64) = sub_232000590(&qword_2541AF368, type metadata accessor for ActivitySummaryCurrentValueSummarySharableModelGenerator, (uint64_t)&unk_232217E18);
      *(_QWORD *)(v23 + 32) = v30;
      v24(v17, v41, v13);
      v31 = type metadata accessor for ActivityChartSharableModelGenerator();
      v32 = (uint64_t *)swift_allocObject();
      v33 = v42;
      v34 = sub_23213B568((uint64_t)v17, (uint64_t)v33, v32);

      *(_QWORD *)(v23 + 96) = v31;
      *(_QWORD *)(v23 + 104) = sub_232000590(&qword_2541B44D8, (uint64_t (*)(uint64_t))type metadata accessor for ActivityChartSharableModelGenerator, (uint64_t)&unk_2322125D4);
      *(_QWORD *)(v23 + 72) = v34;
      v46 = v23;
      sub_23213B4A4(0, &qword_2541B54B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
      sub_23213B44C();
      v35 = v43;
      sub_232200FE4();
      swift_bridgeObjectRelease();
      sub_232000590(&qword_2541B7998, (uint64_t (*)(uint64_t))sub_23213B3C0, MEMORY[0x24BDB9970]);
      v36 = v45;
      v37 = sub_232200774();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v35, v36);
      sub_232016D88((uint64_t)v22, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
      return v37;
    }
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    v27 = (id)MEMORY[0x2348FEA30](0, a1);
    goto LABEL_6;
  }
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v27 = *(id *)(a1 + 32);
LABEL_6:
    v25 = (uint64_t)v27;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

void sub_232139BFC(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  id v9;
  unsigned int v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_2320057B8(0, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v16 - v5;
  v7 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (!v7)
  {
    __break(1u);
    goto LABEL_10;
  }
  v8 = v7;
  v9 = objc_msgSend(v7, sel_features);

  if (!v9)
  {
LABEL_10:
    __break(1u);
    return;
  }
  v10 = objc_msgSend(v9, sel_pauseRings);

  if (v10)
  {
    v11 = objc_msgSend(a1, sel_resumeDate);
    if (v11)
    {
      v12 = v11;
      sub_2321FDC30();

      v13 = sub_2321FDC6C();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v6, 0, 1, v13);
    }
    else
    {
      v15 = sub_2321FDC6C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v6, 1, 1, v15);
    }
    sub_2320CCC78((uint64_t)v6, a2);
  }
  else
  {
    v14 = sub_2321FDC6C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a2, 1, 1, v14);
  }
}

void sub_232139D94(id *a1)
{
  id v1;

  v1 = objc_msgSend(*a1, sel_endDate);
  sub_2321FDC30();

}

uint64_t sub_232139DE0@<X0>(unint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = sub_23220039C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  sub_232200354();
  swift_bridgeObjectRetain_n();
  v9 = sub_232200390();
  v10 = sub_2322012FC();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v26 = v5;
    v12 = v11;
    v25 = swift_slowAlloc();
    v28 = v25;
    *(_DWORD *)v12 = 136315394;
    v13 = sub_232201BF0();
    v27 = sub_232013174(v13, v14, &v28);
    v24 = v4;
    sub_232201710();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    v15 = sub_232003E9C(0, &qword_2541B0D68);
    v16 = swift_bridgeObjectRetain();
    v17 = MEMORY[0x2348FE1C0](v16, v15);
    v19 = v18;
    swift_bridgeObjectRelease();
    v27 = sub_232013174(v17, v19, &v28);
    sub_232201710();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_231FFB000, v9, v10, "[%s] Found activity cache from a watch source: %s", (uint8_t *)v12, 0x16u);
    v20 = v25;
    swift_arrayDestroy();
    MEMORY[0x2348FF468](v20, -1, -1);
    MEMORY[0x2348FF468](v12, -1, -1);

    result = (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v7, v24);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    v22 = sub_232201998();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v22 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *a2 = v22 != 0;
  return result;
}

uint64_t sub_23213A07C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC9Summaries37ActivitySummaryModelGeneratorPipeline_domain;
  v2 = sub_2321FE3BC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC9Summaries37ActivitySummaryModelGeneratorPipeline_context;
  v4 = sub_2321FE440();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_23213A124()
{
  return type metadata accessor for ActivitySummaryModelGeneratorPipeline();
}

uint64_t type metadata accessor for ActivitySummaryModelGeneratorPipeline()
{
  uint64_t result;

  result = qword_2541AFC90;
  if (!qword_2541AFC90)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23213A168()
{
  return swift_retain();
}

uint64_t sub_23213A17C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC9Summaries37ActivitySummaryModelGeneratorPipeline_domain;
  v4 = sub_2321FE3BC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void sub_23213A1C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2D80)
  {
    sub_23213A278();
    sub_23213B2F0(255, &qword_2541B2F00, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_232000590(&qword_2541B2E08, (uint64_t (*)(uint64_t))sub_23213A278, MEMORY[0x24BDB98F0]);
    sub_23213A3E8();
    v0 = sub_23220057C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2D80);
  }
}

void sub_23213A278()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2E10)
  {
    sub_23213A340();
    sub_23213A440();
    sub_232000590(&qword_2541B2B78, (uint64_t (*)(uint64_t))sub_23213A340, MEMORY[0x24BDB95F8]);
    sub_232000590(&qword_2541B2FA8, (uint64_t (*)(uint64_t))sub_23213A440, MEMORY[0x24BDB9AF8]);
    v0 = sub_2322005C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2E10);
  }
}

void sub_23213A340()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2B80)
  {
    sub_23213B2F0(255, &qword_2541B2F00, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_232016A8C(255, (unint64_t *)&qword_2541B78D0);
    sub_23213A3E8();
    v0 = sub_23220051C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2B80);
  }
}

unint64_t sub_23213A3E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541AF288;
  if (!qword_2541AF288)
  {
    sub_23213B2F0(255, &qword_2541B2F00, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB9AF8], v1);
    atomic_store(result, (unint64_t *)&qword_2541AF288);
  }
  return result;
}

void sub_23213A440()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2FB0)
  {
    sub_23213A4BC();
    sub_232016A8C(255, (unint64_t *)&qword_2541B78D0);
    v0 = sub_232200624();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2FB0);
  }
}

void sub_23213A4BC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2541B5520)
  {
    sub_2320C0624(255, &qword_2541B5518, &qword_2541B5618, 0x24BDD38E8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2541B5520);
  }
}

void sub_23213A540()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2B00)
  {
    sub_23213A5F4();
    sub_23213BCDC(255, &qword_2541B2FD0);
    sub_232000590(&qword_2541AF2B8, (uint64_t (*)(uint64_t))sub_23213A5F4, MEMORY[0x24BDB9AF8]);
    sub_23213A690();
    v0 = sub_2322004C8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2B00);
  }
}

void sub_23213A5F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2FB8)
  {
    sub_2320C0624(255, &qword_2541B5518, &qword_2541B5618, 0x24BDD38E8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_232016A8C(255, (unint64_t *)&qword_2541B78D0);
    v0 = sub_232200624();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2FB8);
  }
}

unint64_t sub_23213A690()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541AF2D0;
  if (!qword_2541AF2D0)
  {
    sub_23213BCDC(255, &qword_2541B2FD0);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB9AF8], v1);
    atomic_store(result, (unint64_t *)&qword_2541AF2D0);
  }
  return result;
}

void sub_23213A6E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2DA0)
  {
    sub_23213A540();
    sub_232000590(&qword_2541B2AF8, (uint64_t (*)(uint64_t))sub_23213A540, MEMORY[0x24BDB9450]);
    v0 = sub_2322005A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2DA0);
  }
}

uint64_t sub_23213A760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];
  _QWORD v22[6];

  v21[1] = a3;
  v5 = sub_2321FDC6C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23213B8C0();
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_msgSend((id)objc_opt_self(), sel_activitySummaryType);
  sub_2321FDC60();
  v15 = sub_2321377B8(v14, MEMORY[0x24BEE4AF8], (uint64_t)v8, 1);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v22[5] = v15;
  sub_2321FE434();
  v16 = MEMORY[0x24BDB9AE0];
  sub_23213B988(0, &qword_2541B3008, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_23213BA10((unint64_t *)&qword_2541B79C8, &qword_2541B3008, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v16, MEMORY[0x24BDB9AF8]);
  v17 = sub_232200738();
  sub_232016AFC((uint64_t)v22);
  swift_release();
  v22[0] = v17;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a4;
  *(_QWORD *)(v18 + 24) = a4;
  sub_2320057B8(0, &qword_2541B54B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE48110], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_2322007A4();
  swift_release();
  swift_release();
  sub_232000590(&qword_2541B7978, (uint64_t (*)(uint64_t))sub_23213B8C0, MEMORY[0x24BDB96C0]);
  v19 = sub_232200774();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v19;
}

uint64_t sub_23213A9B4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;

  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = a2;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_23213BBCC;
  *(_QWORD *)(v14 + 24) = v13;
  swift_retain();
  sub_232137A7C(a4, a5, a6, a7, (uint64_t)sub_2320CF884, v14);
  return swift_release();
}

uint64_t sub_23213AA6C(void **a1)
{
  return sub_232137EDC(*a1);
}

void sub_23213AA74(uint64_t a1, char a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id v24;
  uint64_t v25;
  void *v26;
  char *v27;
  void *v28;
  char *v29;
  uint64_t v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  char *v61;
  uint64_t v62;
  _QWORD v63[3];
  uint64_t v64;

  v2 = a2 & 1;
  sub_23213BE88();
  v53 = v3;
  v51 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v50 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23213BF1C();
  v57 = *(_QWORD *)(v5 - 8);
  v58 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v56 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2322011DC();
  v54 = *(_QWORD *)(v7 - 8);
  v55 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v52 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_232201218();
  v62 = *(_QWORD *)(v59 - 8);
  v9 = MEMORY[0x24BDAC7A8](v59);
  v49 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = v10;
  MEMORY[0x24BDAC7A8](v9);
  v61 = (char *)&v47 - v11;
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0];
  v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2320057B8(0, (unint64_t *)&qword_2541B2A70, (uint64_t (*)(uint64_t))MEMORY[0x24BE4ADA0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v47 - v15;
  sub_2320057B8(0, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], v13);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v47 - v18;
  v20 = sub_2321FD8B8();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2321FE3E0();
  LODWORD(v60) = sub_2321FE848();
  v24 = objc_msgSend((id)objc_opt_self(), sel_activitySummaryType);
  v25 = sub_2321FFD78();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v16, 1, 1, v25);
  LODWORD(v48) = v2;
  sub_232033C50(v24, v2, (uint64_t)v16, (uint64_t)v19);

  sub_232016D88((uint64_t)v16, (unint64_t *)&qword_2541B2A70, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_232016D88((uint64_t)v19, &qword_2541B7F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
    v26 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v23, v19, v20);
    sub_23220003C();
    v26 = (void *)sub_232200030();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  }
  sub_2321FE3D4();
  sub_232016AD8(v63, v64);
  v27 = (char *)sub_2321FE314();
  sub_232016AFC((uint64_t)v63);
  sub_2321FE3D4();
  sub_232016AD8(v63, v64);
  v28 = (void *)sub_2321FE314();
  v29 = v61;
  sub_232201248();

  sub_232016AFC((uint64_t)v63);
  v30 = v62;
  if ((v60 & 1) == 0)
  {
    sub_232000590(&qword_2541B55C8, (uint64_t (*)(uint64_t))MEMORY[0x24BE45A58], MEMORY[0x24BE45A50]);
    v37 = v59;
    sub_232200774();

    goto LABEL_8;
  }
  v60 = v26;
  sub_232003E9C(0, (unint64_t *)&qword_2541B7EA8);
  v31 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_activityCacheType);
  if (v31)
  {
    v32 = v31;
    v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3E98]), sel_initWithSampleType_predicate_, v31, 0);

    sub_232027434();
    v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_232210D20;
    *(_QWORD *)(v34 + 32) = v33;
    v63[0] = v34;
    sub_232201050();
    v63[0] = 0xD000000000000026;
    v63[1] = 0x8000000232208940;
    v48 = v33;
    sub_232200F48();
    swift_bridgeObjectRelease();
    v35 = v52;
    sub_232201200();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v36 = v49;
    v37 = v59;
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v49, v29, v59);
    v38 = (*(unsigned __int8 *)(v30 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    v39 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v30 + 32))(v39 + v38, v36, v37);
    sub_232000590(&qword_2541B55B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE459F8], MEMORY[0x24BE459F0]);
    v49 = v27;
    v40 = v50;
    v41 = v55;
    sub_2322007A4();
    swift_release();
    v42 = sub_232000590(&qword_2541B2D10, (uint64_t (*)(uint64_t))sub_23213BE88, MEMORY[0x24BDB96C0]);
    v43 = sub_232000590(&qword_2541B55C8, (uint64_t (*)(uint64_t))MEMORY[0x24BE45A58], MEMORY[0x24BE45A50]);
    v44 = v56;
    v45 = v53;
    MEMORY[0x2348FD8E4](v53, v42, v43);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v40, v45);
    sub_232000590(&qword_2541B2B98, (uint64_t (*)(uint64_t))sub_23213BF1C, MEMORY[0x24BDB9610]);
    v46 = v58;
    sub_232200774();

    (*(void (**)(char *, uint64_t))(v57 + 8))(v44, v46);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v35, v41);
LABEL_8:
    (*(void (**)(char *, uint64_t))(v30 + 8))(v29, v37);
    return;
  }

  __break(1u);
}

uint64_t sub_23213B168()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = sub_2321FE440();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = ((v3 + *(_QWORD *)(v2 + 64)) & 0xFFFFFFFFFFFFFFF8) + v0;

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23213B1F8(unint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(sub_2321FE440() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_232139814(a1, a2, *(void **)(v2 + 16), v2 + v6, *(unsigned __int8 *)(v2 + v6 + *(_QWORD *)(v5 + 64)), *(void **)(((v6 + *(_QWORD *)(v5 + 64)) & 0xFFFFFFFFFFFFF8) + v2 + 8));
}

uint64_t sub_23213B260@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 16))(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_23213B294()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_23213B2C0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_232138184(*a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32));
  *a2 = result;
  return result;
}

void sub_23213B2F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_232016A8C(255, &qword_2541B28D8);
    v7 = a3(a1, v6, MEMORY[0x24BEE4078], MEMORY[0x24BEE40A8]);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_23213B368()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255F9FA00;
  if (!qword_255F9FA00)
  {
    sub_23213B2F0(255, &qword_255F9F9F8, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9E10]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BDB9E20], v1);
    atomic_store(result, (unint64_t *)&qword_255F9FA00);
  }
  return result;
}

void sub_23213B3C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2E38)
  {
    sub_23213B4A4(255, &qword_2541B54B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_23213B44C();
    v0 = sub_2322005D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2E38);
  }
}

unint64_t sub_23213B44C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541B7E98;
  if (!qword_2541B7E98)
  {
    sub_23213B4A4(255, &qword_2541B54B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2348FF39C](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2541B7E98);
  }
  return result;
}

void sub_23213B4A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_232016A8C(255, &qword_2541B28D8);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_23213B50C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2320057B8(0, &qword_2541B7618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_23213B568(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t inited;
  unint64_t v21;
  uint64_t v22;
  void (*v23)(unint64_t, _QWORD, uint64_t);
  uint64_t v24;
  id v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v34 = a1;
  v42 = *a3;
  v43 = a2;
  v5 = sub_2321FE38C();
  v40 = *(_QWORD *)(v5 - 8);
  v41 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v39 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2321FE194();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8];
  v9 = *(_QWORD *)(v7 - 8);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v32 - v13;
  v15 = sub_2321FE3BC();
  v37 = *(_QWORD *)(v15 - 8);
  v38 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v33 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (char *)a3 + OBJC_IVAR____TtC9Summaries35ActivityChartSharableModelGenerator_generatorContext;
  v18 = sub_2321FE440();
  v19 = *(_QWORD *)(v18 - 8);
  v35 = v18;
  v36 = v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v17, a1, v18);
  v32 = (id)sub_2321FE3F8();
  sub_232027434();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_232210D20;
  *(_QWORD *)(inited + 32) = objc_msgSend((id)objc_opt_self(), sel_activitySummaryType);
  v44 = inited;
  sub_232201050();
  sub_2320057B8(0, &qword_2541B7530, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v21 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_232210D40;
  v23 = *(void (**)(unint64_t, _QWORD, uint64_t))(v9 + 104);
  v23(v22 + v21, *MEMORY[0x24BE47410], v7);
  v24 = sub_2321A492C(v22);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v44 = v24;
  v23((unint64_t)v12, *MEMORY[0x24BE47440], v7);
  sub_2321A1A2C((uint64_t)v14, v12);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v7);
  v25 = v32;
  v26 = swift_bridgeObjectRetain();
  sub_2321A4950(v26);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t))(v40 + 104))(v39, *MEMORY[0x24BE47918], v41);
  v27 = v33;
  sub_2321FE3B0();

  swift_bridgeObjectRelease();
  v28 = (uint64_t)a3 + OBJC_IVAR____TtC9Summaries35ActivityChartSharableModelGenerator_domain;
  (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))((uint64_t)a3 + OBJC_IVAR____TtC9Summaries35ActivityChartSharableModelGenerator_domain, v27, v38);
  v29 = v34;
  v30 = sub_23213A760(v34, v43, v28, v42);
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v29, v35);
  a3[2] = v30;
  return a3;
}

void sub_23213B8C0()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_2541B2C70)
  {
    v0 = MEMORY[0x24BDB9AE0];
    sub_23213B988(255, &qword_2541B3008, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_2320057B8(255, &qword_2541B54B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE48110], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_23213BA10((unint64_t *)&qword_2541B79C8, &qword_2541B3008, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v0, MEMORY[0x24BDB9AF8]);
    v1 = sub_232200540();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_2541B2C70);
  }
}

void sub_23213B988(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_2320C0624(255, (unint64_t *)&qword_2541B5670, &qword_2541B0CB8, 0x24BE4A370, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v7 = a3(a1, v6, MEMORY[0x24BEE4078], MEMORY[0x24BEE40A8]);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_23213BA10(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_23213B988(255, a2, a3);
    result = MEMORY[0x2348FF39C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23213BA50()
{
  return swift_deallocObject();
}

uint64_t sub_23213BA60@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_2320658D8(a1, *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_23213BA68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_2321FDC6C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23213BAF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(sub_2321FDC6C() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_23213A9B4(a1, a2, v2 + 16, *(void **)(v2 + 24), *(_QWORD *)(v2 + 32), v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

unint64_t sub_23213BB60()
{
  unint64_t result;

  result = qword_255F9FA08;
  if (!qword_255F9FA08)
  {
    sub_232003E9C(255, (unint64_t *)&qword_2541B7EC8);
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255F9FA08);
  }
  return result;
}

uint64_t sub_23213BBA8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23213BBCC(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t *);
  uint64_t v5;
  char v6;

  v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  v5 = a1;
  v6 = a2 & 1;
  return v3(&v5);
}

uint64_t sub_23213BC04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2320CEC4C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_23213BC0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23213BC1C()
{
  return swift_release();
}

void sub_23213BC24()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_2541B2E30)
  {
    sub_2322011D0();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BE459E0];
    sub_23213BCDC(255, (unint64_t *)&qword_2541B3040);
    sub_232000590(&qword_2541B55B0, v0, MEMORY[0x24BE459D8]);
    sub_23202CC44();
    v1 = sub_2322005C4();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_2541B2E30);
  }
}

void sub_23213BCDC(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    sub_232016A8C(255, (unint64_t *)&qword_2541B78D0);
    v3 = sub_232200624();
    if (!v4)
      atomic_store(v3, a2);
  }
}

void sub_23213BD50()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2CB8)
  {
    sub_23213BC24();
    sub_232000590(&qword_2541B2E28, (uint64_t (*)(uint64_t))sub_23213BC24, MEMORY[0x24BDB98F0]);
    v0 = sub_232200540();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2CB8);
  }
}

void sub_23213BDD0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541B2BC0)
  {
    sub_23213BD50();
    sub_232000590(&qword_2541B2CB0, (uint64_t (*)(uint64_t))sub_23213BD50, MEMORY[0x24BDB96C0]);
    v0 = sub_232200534();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541B2BC0);
  }
}

char *sub_23213BE48()
{
  return sel_endDate;
}

uint64_t sub_23213BE58()
{
  return sub_23213BFF0((uint64_t (*)(_QWORD))MEMORY[0x24BE459E0]);
}

uint64_t sub_23213BE64@<X0>(uint64_t a1@<X8>)
{
  return sub_23213C060((uint64_t (*)(_QWORD))MEMORY[0x24BE459E0], a1);
}

uint64_t sub_23213BE70()
{
  return swift_deallocObject();
}

uint64_t sub_23213BE80@<X0>(unint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_232139DE0(a1, a2);
}

void sub_23213BE88()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_2541B2D18)
  {
    sub_2322011DC();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BE459F8];
    sub_232201218();
    sub_232000590(&qword_2541B55B8, v0, MEMORY[0x24BE459F0]);
    v1 = sub_232200540();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_2541B2D18);
  }
}

void sub_23213BF1C()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_2541B2BA0)
  {
    sub_232201218();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BE45A58];
    sub_23213BE88();
    sub_232000590(&qword_2541B55C8, v0, MEMORY[0x24BE45A50]);
    sub_232000590(&qword_2541B2D10, (uint64_t (*)(uint64_t))sub_23213BE88, MEMORY[0x24BDB96C0]);
    v1 = sub_232200528();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_2541B2BA0);
  }
}

uint64_t sub_23213BFE4()
{
  return sub_23213BFF0((uint64_t (*)(_QWORD))MEMORY[0x24BE45A58]);
}

