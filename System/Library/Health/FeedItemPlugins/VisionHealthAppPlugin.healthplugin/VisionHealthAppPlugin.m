void sub_232243B44(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_232243B80()
{
  if (objc_msgSend((id)objc_opt_self(), sel_meterUnitWithMetricPrefix_, 4))
    __asm { BR              X10 }
  return 0;
}

void sub_232244290(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2322442CC()
{
  if (objc_msgSend((id)objc_opt_self(), sel_meterUnitWithMetricPrefix_, 4))
    __asm { BR              X10 }
  return 0;
}

id sub_2322449E8()
{
  void *v0;
  id v1;
  double v2;
  double v3;
  id v4;
  double v5;
  double v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;

  v1 = objc_msgSend(v0, sel_minimum);
  objc_msgSend(v1, sel__value);
  v3 = v2;

  v4 = objc_msgSend(v0, sel_maximum);
  objc_msgSend(v4, sel__value);
  v6 = v5;

  v7 = objc_msgSend(v0, sel_minimum);
  v8 = objc_msgSend(v7, sel__unit);

  v9 = (void *)objc_opt_self();
  v10 = (void *)objc_opt_self();
  v11 = v8;
  v12 = objc_msgSend(v10, sel_quantityWithUnit_doubleValue_, v11, v3 + v3);
  v13 = objc_msgSend(v10, sel_quantityWithUnit_doubleValue_, v11, v6 + v6);

  v14 = objc_msgSend(v9, sel_inclusiveRangeWithMinimum_maximum_, v12, v13);
  return v14;
}

uint64_t variable initialization expression of RangeView.minimumFractionDigits()
{
  return 0;
}

uint64_t variable initialization expression of RangeView.maximumFractionDigits()
{
  return 2;
}

uint64_t variable initialization expression of RangeView.showsPositivePrefix()
{
  return 0;
}

uint64_t variable initialization expression of VisionPrescriptionAddRecordConfirmationViewController.addToHealthButton()
{
  return 0;
}

uint64_t variable initialization expression of VisionPrescriptionAddRecordConfirmationViewController.healthStore()
{
  return 0;
}

uint64_t variable initialization expression of VisionPrescriptionAddRecordConfirmationViewController.profileStore()
{
  return 0;
}

uint64_t variable initialization expression of VisionPrescriptionAddRecordConfirmationViewController.samplePredicate()
{
  return 0;
}

void type metadata accessor for HKVisionEye(uint64_t a1)
{
  sub_232245470(a1, &qword_255FABAC8);
}

void type metadata accessor for HKPrismBase(uint64_t a1)
{
  sub_232245470(a1, &qword_255FABAD0);
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_232245470(a1, &qword_255FABAD8);
}

void type metadata accessor for HKVisionPrescriptionType(uint64_t a1)
{
  sub_232245470(a1, &qword_255FABAE0);
}

BOOL sub_232244BDC(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_232244BF0(uint64_t a1, uint64_t a2)
{
  return sub_232244CCC(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_232244C10(uint64_t a1, uint64_t a2)
{
  return sub_232244CCC(a1, a2, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_232244C1C()
{
  sub_2322B8E1C();
  sub_2322B8E7C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_232244C5C()
{
  uint64_t v0;

  sub_2322B8E1C();
  sub_2322B9434();
  sub_2322B8E7C();
  v0 = sub_2322B944C();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_232244CCC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_2322B8E1C();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_232244D08(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_2322B8E04();
  *a2 = 0;
  return result;
}

uint64_t sub_232244D7C(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_2322B8E10();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_232244DF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_2322B8E1C();
  v2 = sub_2322B8DEC();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

_QWORD *sub_232244E38@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_232244E48(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_232244E58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_2322B8E1C();
  v2 = v1;
  if (v0 == sub_2322B8E1C() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_2322B93F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_232244EE4()
{
  sub_232245044((unint64_t *)&qword_255FABB78, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_2322C0B50);
  sub_232245044(&qword_255FABB80, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_2322C0AA4);
  return sub_2322B93B0();
}

uint64_t sub_232244F68()
{
  sub_232245044((unint64_t *)&qword_255FABB00, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2322C06F0);
  sub_232245044(&qword_255FABB08, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2322C0574);
  return sub_2322B93B0();
}

uint64_t sub_232244FEC()
{
  return sub_232245044(&qword_255FABAE8, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2322C0538);
}

uint64_t sub_232245018()
{
  return sub_232245044(&qword_255FABAF0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2322C050C);
}

uint64_t sub_232245044(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x2349010BC](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_232245084()
{
  return sub_232245044(&qword_255FABAF8, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2322C05A8);
}

uint64_t sub_2322450B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_2322B8E1C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2322450D8()
{
  sub_232245044(&qword_255FABB90, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_2322C0BD8);
  sub_232245044(&qword_255FABB98, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_2322C0870);
  return sub_2322B93B0();
}

uint64_t sub_23224515C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_2322B8DEC();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_2322451A0()
{
  sub_232245044((unint64_t *)&unk_255FAEE90, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_2322C0B94);
  sub_232245044(&qword_255FABB88, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_2322C0984);
  return sub_2322B93B0();
}

id sub_232245224()
{
  id v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;

  v0 = objc_msgSend((id)objc_opt_self(), sel_prismDiopterUnit);
  if (!v0)
    return 0;
  v1 = v0;
  v2 = (void *)objc_opt_self();
  v3 = (void *)objc_opt_self();
  v4 = v1;
  v5 = objc_msgSend(v3, sel_quantityWithUnit_doubleValue_, v4, 0.0);
  v6 = objc_msgSend(v3, sel_quantityWithUnit_doubleValue_, v4, 40.0);

  v7 = objc_msgSend(v2, sel_inclusiveRangeWithMinimum_maximum_, v5, v6);
  return v7;
}

id sub_232245324()
{
  id v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;

  v0 = objc_msgSend((id)objc_opt_self(), sel_prismDiopterUnit);
  if (!v0)
    return 0;
  v1 = v0;
  v2 = (void *)objc_opt_self();
  v3 = (void *)objc_opt_self();
  v4 = v1;
  v5 = objc_msgSend(v3, sel_quantityWithUnit_doubleValue_, v4, 0.0);
  v6 = objc_msgSend(v3, sel_quantityWithUnit_doubleValue_, v4, 10.0);

  v7 = objc_msgSend(v2, sel_inclusiveRangeWithMinimum_maximum_, v5, v6);
  return v7;
}

void type metadata accessor for CFError(uint64_t a1)
{
  sub_232245470(a1, &qword_255FABB10);
}

void type metadata accessor for OpenExternalURLOptionsKey(uint64_t a1)
{
  sub_232245470(a1, &qword_255FABB18);
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
  sub_232245470(a1, &qword_255FABB20);
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
  sub_232245470(a1, &qword_255FABB28);
}

void sub_232245470(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_2322454B4()
{
  return sub_232245044(&qword_255FABB30, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_2322C0834);
}

uint64_t sub_2322454E0()
{
  return sub_232245044(&qword_255FABB38, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_2322C0808);
}

uint64_t sub_23224550C()
{
  return sub_232245044(&qword_255FABB40, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_2322C0948);
}

uint64_t sub_232245538()
{
  return sub_232245044(&qword_255FABB48, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_2322C091C);
}

uint64_t sub_232245564()
{
  return sub_232245044(&qword_255FABB50, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_2322C0A68);
}

uint64_t sub_232245590()
{
  return sub_232245044(&qword_255FABB58, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_2322C0A3C);
}

uint64_t sub_2322455BC()
{
  return sub_232245044(&qword_255FABB60, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_2322C0AD8);
}

uint64_t sub_2322455E8()
{
  return sub_232245044(&qword_255FABB68, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_2322C09B8);
}

uint64_t sub_232245614()
{
  return sub_232245044(&qword_255FABB70, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_2322C08A4);
}

uint64_t sub_232245654(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  id v15;
  void (*v16)(char *, char *, uint64_t);
  char *v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  char *v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  void *v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  char *v46;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;

  v59 = *MEMORY[0x24BDAC8D0];
  v53 = sub_2322B8918();
  v50 = *(_QWORD *)(v53 - 8);
  v2 = MEMORY[0x24BDAC7A8](v53);
  v51 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v52 = (char *)&v48 - v4;
  sub_232245CCC();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2322B8000();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v48 - v13;
  v15 = objc_msgSend(a1, sel_hk_hexString);
  sub_2322B8E1C();

  v57 = 0;
  v58 = 0xE000000000000000;
  sub_2322B92CC();
  swift_bridgeObjectRelease();
  v57 = 0xD00000000000001FLL;
  v58 = 0x80000002322B9EE0;
  sub_2322B8EAC();
  swift_bridgeObjectRelease();
  sub_2322B7FF4();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_232245D20((uint64_t)v7);
    return 0;
  }
  v16 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v49 = v14;
  v16(v14, v7, v8);
  v55 = *MEMORY[0x24BDFC9D0];
  if (objc_msgSend(a1, sel_length) == (id)16)
    v55 = *MEMORY[0x24BDFC9C8];
  v57 = 0;
  v17 = v49;
  v18 = (void *)sub_2322B7FB8();
  v19 = (void *)ACCBakerCreate();

  if (!v19)
  {
    v22 = v52;
    sub_2322B88E8();
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v17, v8);
    v23 = sub_2322B890C();
    v24 = sub_2322B8FFC();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = swift_slowAlloc();
      v26 = swift_slowAlloc();
      v56 = v26;
      *(_DWORD *)v25 = 136315394;
      v27 = sub_2322B9464();
      v54 = sub_232266EA0(v27, v28, &v56);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2080;
      sub_232245D5C();
      v29 = sub_2322B93C8();
      v54 = sub_232266EA0(v29, v30, &v56);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      v31 = *(void (**)(char *, uint64_t))(v9 + 8);
      v31(v12, v8);
      _os_log_impl(&dword_232241000, v23, v24, "[%s] failed to create SVG Data from URL \"%s\".", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x234901170](v26, -1, -1);
      v32 = v25;
      v17 = v49;
      MEMORY[0x234901170](v32, -1, -1);

      v33 = *(void (**)(char *, uint64_t))(v50 + 8);
      v33(v52, v53);
    }
    else
    {
      v31 = *(void (**)(char *, uint64_t))(v9 + 8);
      v31(v12, v8);

      v33 = *(void (**)(char *, uint64_t))(v50 + 8);
      v33(v22, v53);
    }
    v34 = v51;
    v35 = (void *)v57;
    if (v57)
    {
      sub_2322B88E8();
      v36 = v35;
      v37 = sub_2322B890C();
      v38 = sub_2322B8FFC();
      if (os_log_type_enabled(v37, v38))
      {
        v39 = swift_slowAlloc();
        v40 = swift_slowAlloc();
        v56 = v40;
        *(_DWORD *)v39 = 136315394;
        v41 = sub_2322B9464();
        v54 = sub_232266EA0(v41, v42, &v56);
        sub_2322B923C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v39 + 12) = 2080;
        v54 = (uint64_t)v36;
        type metadata accessor for CFError(0);
        v43 = v36;
        v44 = sub_2322B8E34();
        v54 = sub_232266EA0(v44, v45, &v56);
        sub_2322B923C();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_232241000, v37, v38, "[%s] %s.", (uint8_t *)v39, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x234901170](v40, -1, -1);
        MEMORY[0x234901170](v39, -1, -1);

        v33(v51, v53);
        v46 = v49;
LABEL_15:
        v31(v46, v8);
        return 0;
      }

      v33(v34, v53);
    }
    v46 = v17;
    goto LABEL_15;
  }
  v20 = v19;
  v21 = sub_2322B8024();

  (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
  return v21;
}

uint64_t sub_232245C9C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AppClipCodeGenerator()
{
  return objc_opt_self();
}

void sub_232245CCC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAEE60)
  {
    sub_2322B8000();
    v0 = sub_2322B9224();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAEE60);
  }
}

uint64_t sub_232245D20(uint64_t a1)
{
  uint64_t v2;

  sub_232245CCC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_232245D5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FAEE70;
  if (!qword_255FAEE70)
  {
    v1 = sub_2322B8000();
    result = MEMORY[0x2349010BC](MEMORY[0x24BDCDB28], v1);
    atomic_store(result, (unint64_t *)&qword_255FAEE70);
  }
  return result;
}

void sub_232245DA4()
{
  id v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;

  v0 = objc_msgSend((id)objc_opt_self(), sel_diopterUnit);
  if (v0)
  {
    v1 = v0;
    v2 = (void *)objc_opt_self();
    v3 = (void *)objc_opt_self();
    v4 = v1;
    v5 = objc_msgSend(v3, sel_quantityWithUnit_doubleValue_, v4, -40.0);
    v6 = objc_msgSend(v3, sel_quantityWithUnit_doubleValue_, v4, 20.0);

    v7 = objc_msgSend(v2, sel_inclusiveRangeWithMinimum_maximum_, v5, v6);
    qword_255FABBA0 = (uint64_t)v7;
  }
  else
  {
    __break(1u);
  }
}

void sub_232245EA4()
{
  id v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;

  v0 = objc_msgSend((id)objc_opt_self(), sel_diopterUnit);
  if (v0)
  {
    v1 = v0;
    v2 = (void *)objc_opt_self();
    v3 = (void *)objc_opt_self();
    v4 = v1;
    v5 = objc_msgSend(v3, sel_quantityWithUnit_doubleValue_, v4, -8.0);
    v6 = objc_msgSend(v3, sel_quantityWithUnit_doubleValue_, v4, 8.0);

    v7 = objc_msgSend(v2, sel_inclusiveRangeWithMinimum_maximum_, v5, v6);
    qword_255FABBA8 = (uint64_t)v7;
  }
  else
  {
    __break(1u);
  }
}

void sub_232245FA0()
{
  id v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;

  v0 = objc_msgSend((id)objc_opt_self(), sel_degreeAngleUnit);
  if (v0)
  {
    v1 = v0;
    v2 = (void *)objc_opt_self();
    v3 = (void *)objc_opt_self();
    v4 = v1;
    v5 = objc_msgSend(v3, sel_quantityWithUnit_doubleValue_, v4, 1.0);
    v6 = objc_msgSend(v3, sel_quantityWithUnit_doubleValue_, v4, 180.0);

    v7 = objc_msgSend(v2, sel_inclusiveRangeWithMinimum_maximum_, v5, v6);
    qword_255FABBB0 = (uint64_t)v7;
  }
  else
  {
    __break(1u);
  }
}

void sub_2322460A4()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_prismDiopterUnit);
  if (v0 && (v1 = v0, v2 = sub_232245224(), v1, v2))
    qword_255FABBB8 = (uint64_t)v2;
  else
    __break(1u);
}

id sub_232246100(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void (*v28)(_QWORD, _QWORD, _QWORD);
  NSObject *v29;
  os_log_type_t v30;
  int v31;
  _BOOL4 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(_QWORD, _QWORD);
  char *v43;
  uint64_t v44;
  char *v45;
  NSObject *v46;
  unint64_t v47;
  int v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void **v53;
  char *v54;
  unint64_t v55;
  uint64_t v56;
  NSObject *v57;
  char *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  _BYTE *v68;
  BOOL v69;
  double v70;
  id v71;
  uint64_t v72;
  _BYTE *v73;
  _BYTE *v74;
  BOOL v75;
  double v76;
  id v77;
  uint64_t v79;
  double v80;
  id v81;
  uint64_t v82;
  double v83;
  id v84;
  unint64_t v85;
  uint64_t v86;
  double v87;
  id v88;
  unint64_t v89;
  uint64_t v90;
  double v91;
  id v92;
  uint64_t v93;
  double v94;
  id v95;
  void *v96;
  uint64_t v97;
  double v98;
  id v99;
  uint64_t v100;
  double v101;
  id v102;
  unint64_t v103;
  uint64_t v104;
  double v105;
  id v106;
  unint64_t v107;
  uint64_t v108;
  double v109;
  id v110;
  uint64_t v111;
  double v112;
  id v113;
  void *v114;
  void *v115;
  unint64_t v116;
  unsigned int v117;
  uint64_t v118;
  char *v119;
  char v120;
  char *v121;
  id v122;
  uint64_t v123;
  NSObject *v124;
  os_log_type_t v125;
  uint64_t v126;
  uint8_t *v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  NSObject *v133;
  os_log_type_t v134;
  uint8_t *v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  unint64_t v148;
  int v149;
  int v150;
  uint64_t v151;
  uint64_t v152;
  id v153;
  uint64_t v154;
  objc_class *v155;
  id v156;
  NSObject *v157;
  objc_class *v158;
  id v159;
  id v160;
  id v161;
  objc_class *v162;
  id v163;
  NSObject *v164;
  objc_class *v165;
  id v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  NSObject *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  _QWORD *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  NSObject *v186;
  uint64_t v187;
  _QWORD *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  _QWORD *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  os_log_t v214;
  uint8_t *v215;
  _QWORD *v216;
  uint64_t v217;
  unint64_t v218;
  id v219;
  id v220;
  id v221;
  objc_class *v222;
  _QWORD *v223;
  _QWORD *v224;
  _WORD *v225;
  _WORD *v226;
  uint64_t v227;
  uint64_t v228;
  objc_class *v229;
  objc_class *v230;
  NSObject *v231;
  NSObject *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  _QWORD *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t inited;
  _QWORD *v244;
  char *v245;
  uint64_t v246;
  int v247;
  uint64_t v248;
  uint8_t *v249;
  uint64_t v250;
  unint64_t v251;
  NSObject *v252;
  char *v253;
  id v254;
  objc_class *v256;
  id v257;
  id v258;
  id v259;
  void **v260;
  void *v261;
  id v262;
  NSObject *v263;
  NSObject *v264;
  objc_class *v265;
  objc_class *v266;
  uint64_t v267;
  unint64_t v268;
  os_log_t v269;
  uint64_t v270;
  char *v271;
  id v272;
  uint64_t v273;
  NSObject *v274;
  void **v275;
  void *v276;
  id v277;
  id v278;
  id v279;
  char *v280;
  char *v281;
  id v282;
  id v283;
  id v284;
  id v285;
  char *v286;
  char *v287;
  id v288;
  id v289;
  char *v290;
  char *v291;
  _QWORD *v292;
  id v293;
  void **v294;
  void *v295;
  id v296;
  id v297;
  id v298;
  id v299;
  id v300;
  id v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t *v307;
  uint64_t *v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  char *v314;
  unint64_t v315;
  id v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  id v321;
  id v322;
  id v323;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  char v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  id v333;
  id v334;
  char v335;
  uint64_t v336;
  unsigned __int8 v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  char v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  id v345;
  char v346;
  uint64_t v347;
  char *v348;
  uint64_t v349;
  id v350;
  id v351;
  void *v352;
  void *v353;
  uint64_t v354;
  void *v355;
  void *v356;
  NSObject *v357;
  __int128 *v358;
  uint64_t v359;
  id v360;
  id v361;
  id v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  id v368;
  objc_class *v369;
  objc_class *v370;
  NSObject *v371;
  NSObject *v372;
  objc_class *v373;
  id v374;
  uint64_t v375;
  uint64_t v376;
  int v377;
  os_log_t v378;
  uint64_t v379;
  id v380;
  objc_class *v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  int v399;
  uint64_t v400;
  unint64_t v401;
  uint64_t v402;
  int v403;
  int v404;
  uint64_t v405;
  uint64_t v406;
  int v407;
  uint64_t v408;
  void **v409;
  int v410;
  int v411;
  int v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  char *v417;
  id v418;
  char *v419;
  id v420;
  id v421;
  id v422;
  uint64_t v423;
  char *v424;
  uint64_t v425;
  uint64_t v426;
  char *v427;
  char *v428;
  char *v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  unint64_t v433;
  uint64_t v434;
  char *v435;
  uint64_t v436;
  char *v437;
  NSObject *v438;
  _QWORD *v439;
  uint64_t v440;
  NSObject *v441;
  _QWORD *isa;
  unint64_t v443;
  _OWORD v444[2];
  __int128 v445;
  uint64_t v446;
  BOOL v447;
  id v448;
  id v449;
  NSObject *v450;
  id v451;
  id v452;
  id v453;
  uint64_t v454;

  v2 = v1;
  v454 = *MEMORY[0x24BDAC8D0];
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_23224BE78(0, (unint64_t *)&qword_255FABC68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v424 = (char *)&v359 - v6;
  v7 = sub_2322B8084();
  v425 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v427 = (char *)&v359 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v438 = sub_2322B7EE0();
  isa = v438[-1].isa;
  MEMORY[0x24BDAC7A8](v438);
  v437 = (char *)&v359 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23224BE78(0, &qword_255FABC70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBB78], v4);
  MEMORY[0x24BDAC7A8](v10);
  v441 = ((char *)&v359 - v11);
  v12 = sub_2322B7F04();
  v433 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v435 = (char *)&v359 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2322B8000();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v359 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v436 = sub_2322B8918();
  v434 = *(_QWORD *)(v436 - 8);
  v18 = MEMORY[0x24BDAC7A8](v436);
  v440 = (uint64_t)&v359 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v429 = (char *)&v359 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v439 = (uint64_t *)((char *)&v359 - v23);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v428 = (char *)&v359 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v359 - v26;
  sub_2322B88E8();
  v28 = *(void (**)(_QWORD, _QWORD, _QWORD))(v15 + 16);
  v432 = a1;
  v28(v17, a1, v14);
  v29 = sub_2322B890C();
  v30 = sub_2322B8FF0();
  v31 = v30;
  v32 = os_log_type_enabled(v29, v30);
  v430 = v2;
  v426 = v7;
  if (v32)
  {
    v33 = swift_slowAlloc();
    v431 = v12;
    v34 = v33;
    v423 = swift_slowAlloc();
    *(_QWORD *)&v445 = v423;
    *(_DWORD *)v34 = 136315394;
    LODWORD(v422) = v31;
    v35 = sub_2322B9464();
    *(_QWORD *)&v444[0] = sub_232266EA0(v35, v36, (uint64_t *)&v445);
    sub_2322B923C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 12) = 2080;
    sub_232245D5C();
    v37 = sub_2322B93C8();
    *(_QWORD *)&v444[0] = sub_232266EA0(v37, v38, (uint64_t *)&v445);
    v39 = v435;
    sub_2322B923C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    _os_log_impl(&dword_232241000, v29, (os_log_type_t)v422, "[%s] url: %s", (uint8_t *)v34, 0x16u);
    v40 = v423;
    swift_arrayDestroy();
    MEMORY[0x234901170](v40, -1, -1);
    v41 = v34;
    v12 = v431;
    MEMORY[0x234901170](v41, -1, -1);

    v42 = *(void (**)(_QWORD, _QWORD))(v434 + 8);
    v43 = v27;
    v44 = v436;
    v42(v43, v436);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);

    v42 = *(void (**)(_QWORD, _QWORD))(v434 + 8);
    v45 = v27;
    v44 = v436;
    v42(v45, v436);
    v39 = v435;
  }
  v46 = v441;
  sub_2322B7EF8();
  v47 = v433;
  v48 = (*(uint64_t (**)(NSObject *, uint64_t, uint64_t))(v433 + 48))(v46, 1, v12);
  v49 = v439;
  if (v48 == 1)
  {
    sub_23224BED0((uint64_t)v46);
LABEL_231:
    v123 = v440;
    sub_2322B88E8();
    v124 = sub_2322B890C();
    v125 = sub_2322B8FF0();
    if (os_log_type_enabled(v124, v125))
    {
      v126 = v123;
      v127 = (uint8_t *)swift_slowAlloc();
      v128 = swift_slowAlloc();
      *(_QWORD *)&v445 = v128;
      *(_DWORD *)v127 = 136315138;
      v129 = sub_2322B9464();
      *(_QWORD *)&v444[0] = sub_232266EA0(v129, v130, (uint64_t *)&v445);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232241000, v124, v125, "[%s] can't get query items", v127, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234901170](v128, -1, -1);
      MEMORY[0x234901170](v127, -1, -1);

      v131 = v126;
      v132 = v436;
    }
    else
    {

      v131 = v123;
      v132 = v44;
    }
    v42(v131, v132);
    return 0;
  }
  (*(void (**)(char *, NSObject *, uint64_t))(v47 + 32))(v39, v46, v12);
  v50 = sub_2322B7EEC();
  if (!v50)
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v39, v12);
    goto LABEL_231;
  }
  v51 = v50;
  v452 = 0;
  v453 = 0;
  v450 = 0;
  v451 = 0;
  v52 = swift_allocObject();
  v423 = v52;
  *(_QWORD *)(v52 + 16) = 0;
  v53 = (void **)(v52 + 16);
  v448 = 0;
  v449 = 0;
  v54 = *(char **)(v51 + 16);
  v431 = v12;
  if (!v54)
  {
    swift_bridgeObjectRelease();
    v122 = 0;
    v121 = 0;
    v420 = 0;
    v421 = 0;
    v422 = 0;
LABEL_236:
    sub_2322B88E8();
    v133 = sub_2322B890C();
    v134 = sub_2322B8FF0();
    if (!os_log_type_enabled(v133, v134))
    {

      (*(void (**)(id, uint64_t))(v434 + 8))(v49, v436);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v39, v12);
LABEL_249:
      swift_release();
      return 0;
    }
    v418 = v122;
    v419 = v121;
    v135 = (uint8_t *)swift_slowAlloc();
    v136 = swift_slowAlloc();
    *(_QWORD *)&v445 = v136;
    *(_DWORD *)v135 = 136315138;
    v137 = sub_2322B9464();
    *(_QWORD *)&v444[0] = sub_232266EA0(v137, v138, (uint64_t *)&v445);
    sub_2322B923C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_232241000, v133, v134, "[%s] checksum missing", v135, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234901170](v136, -1, -1);
    MEMORY[0x234901170](v135, -1, -1);

    (*(void (**)(id, uint64_t))(v434 + 8))(v49, v436);
LABEL_248:

    (*(void (**)(char *, uint64_t))(v433 + 8))(v435, v431);
    goto LABEL_249;
  }
  v409 = v53;
  v55 = v51 + ((*((unsigned __int8 *)isa + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)isa + 80));
  v440 = isa[9];
  v441 = isa[2];
  v416 = v51;
  swift_bridgeObjectRetain();
  v56 = 0;
  LODWORD(v413) = 0;
  v401 = 0;
  v402 = 0;
  v397 = 0;
  v398 = 0;
  v400 = 0;
  v418 = 0;
  v419 = 0;
  v417 = 0;
  v420 = 0;
  v421 = 0;
  v422 = 0;
  v408 = 4;
  v414 = 0;
  v415 = 1;
  v405 = 1;
  v406 = 0;
  v411 = 1;
  v410 = 1;
  v412 = 1;
  v399 = 1;
  v403 = 1;
  v404 = 1;
  v407 = 1;
  v57 = v438;
  v58 = v437;
  do
  {
    ((void (*)(char *, unint64_t, NSObject *))v441)(v58, v55, v57);
    v59 = sub_2322B7ED4();
    if (!v60)
    {
      ((void (*)(char *, NSObject *))isa[1])(v58, v57);
      goto LABEL_10;
    }
    v61 = v59;
    v62 = v60;
    v64 = sub_2322B7EC8();
    v65 = v63;
    if (v64 == 29548 && v63 == 0xE200000000000000 || (sub_2322B93F8() & 1) != 0)
    {
      v66 = swift_bridgeObjectRelease();
      *(_QWORD *)&v444[0] = 0;
      MEMORY[0x24BDAC7A8](v66);
      v65 = (unint64_t)(&v359 - 4);
      v358 = v444;
      if ((v62 & 0x1000000000000000) != 0 || !(v62 & 0x2000000000000000 | v61 & 0x1000000000000000))
      {
        sub_2322B92C0();
        swift_bridgeObjectRelease();
        v58 = v437;
      }
      else
      {
        if ((v62 & 0x2000000000000000) != 0)
        {
          *(_QWORD *)&v445 = v61;
          *((_QWORD *)&v445 + 1) = v62 & 0xFFFFFFFFFFFFFFLL;
          v69 = (v61 >= 0x21u || ((0x100003E01uLL >> v61) & 1) == 0)
             && (v68 = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0
             && *v68 == 0;
          v58 = v437;
          v447 = v69;
          swift_bridgeObjectRelease();
        }
        else
        {
          if ((v61 & 0x1000000000000000) != 0)
            v67 = (_BYTE *)((v62 & 0xFFFFFFFFFFFFFFFLL) + 32);
          else
            v67 = (_BYTE *)sub_2322B92FC();
          v58 = v437;
          sub_23224C650(v67, (BOOL *)&v445);
          v447 = v445;
          swift_bridgeObjectRelease();
        }
        v49 = v439;
      }
      if (!v447)
        goto LABEL_58;
      v70 = *(double *)v444;
      v71 = objc_msgSend((id)objc_opt_self(), sel_diopterUnit);
      v65 = (unint64_t)objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v71, v70);

      v57 = v438;
      if (qword_255FAB8E0 != -1)
        swift_once();
      v62 = (unint64_t)objc_msgSend((id)qword_255FABBA0, sel_containsQuantity_, v65);
      ((void (*)(char *, NSObject *))isa[1])(v58, v57);
      if ((_DWORD)v62)
      {

        v453 = (id)v65;
        goto LABEL_60;
      }
LABEL_59:

      goto LABEL_60;
    }
    if (v64 == 25452 && v65 == 0xE200000000000000 || (sub_2322B93F8() & 1) != 0)
    {
      v72 = swift_bridgeObjectRelease();
      *(_QWORD *)&v444[0] = 0;
      MEMORY[0x24BDAC7A8](v72);
      v65 = (unint64_t)(&v359 - 4);
      v358 = v444;
      if ((v62 & 0x1000000000000000) != 0 || !(v62 & 0x2000000000000000 | v61 & 0x1000000000000000))
      {
        sub_2322B92C0();
        swift_bridgeObjectRelease();
        v58 = v437;
      }
      else
      {
        if ((v62 & 0x2000000000000000) != 0)
        {
          *(_QWORD *)&v445 = v61;
          *((_QWORD *)&v445 + 1) = v62 & 0xFFFFFFFFFFFFFFLL;
          v75 = (v61 >= 0x21u || ((0x100003E01uLL >> v61) & 1) == 0)
             && (v74 = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0
             && *v74 == 0;
          v58 = v437;
          v447 = v75;
          swift_bridgeObjectRelease();
        }
        else
        {
          if ((v61 & 0x1000000000000000) != 0)
            v73 = (_BYTE *)((v62 & 0xFFFFFFFFFFFFFFFLL) + 32);
          else
            v73 = (_BYTE *)sub_2322B92FC();
          v58 = v437;
          sub_23224C650(v73, (BOOL *)&v445);
          v447 = v445;
          swift_bridgeObjectRelease();
        }
        v49 = v439;
      }
      if (!v447)
      {
LABEL_58:
        v57 = v438;
        ((void (*)(char *, NSObject *))isa[1])(v58, v438);
        goto LABEL_60;
      }
      v76 = *(double *)v444;
      v77 = objc_msgSend((id)objc_opt_self(), sel_diopterUnit);
      v65 = (unint64_t)objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v77, v76);

      v57 = v438;
      if (qword_255FAB8E8 != -1)
        swift_once();
      v62 = (unint64_t)objc_msgSend((id)qword_255FABBA8, sel_containsQuantity_, v65);
      ((void (*)(char *, NSObject *))isa[1])(v58, v57);
      if ((_DWORD)v62)
      {

        v452 = (id)v65;
        goto LABEL_60;
      }
      goto LABEL_59;
    }
    if (v64 == 24940 && v65 == 0xE200000000000000 || (sub_2322B93F8() & 1) != 0)
    {
      v79 = swift_bridgeObjectRelease();
      *(_QWORD *)&v445 = 0;
      MEMORY[0x24BDAC7A8](v79);
      v358 = &v445;
      v65 = sub_23224BD9C((void (*)(char *__return_ptr, _QWORD *))sub_23224C650, (uint64_t)(&v359 - 4), v61, v62);
      swift_bridgeObjectRelease();
      v57 = v438;
      if ((v65 & 1) == 0)
        goto LABEL_98;
      v80 = *(double *)&v445;
      v49 = v439;
      v58 = v437;
      if (*(double *)&v445 == 0.0)
      {
        ((void (*)(char *, NSObject *))isa[1])(v437, v438);
      }
      else
      {
        v81 = objc_msgSend((id)objc_opt_self(), sel_degreeAngleUnit);
        v65 = (unint64_t)objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v81, v80);

        if (qword_255FAB8F0 != -1)
          swift_once();
        v62 = (unint64_t)objc_msgSend((id)qword_255FABBB0, sel_containsQuantity_, v65);
        ((void (*)(char *, NSObject *))isa[1])(v58, v57);
        if ((_DWORD)v62)
        {

          v451 = (id)v65;
        }
        else
        {

          v412 = 0;
        }
      }
    }
    else
    {
      if (v64 == 7366764 && v65 == 0xE300000000000000 || (sub_2322B93F8() & 1) != 0)
      {
        v82 = swift_bridgeObjectRelease();
        *(_QWORD *)&v445 = 0;
        MEMORY[0x24BDAC7A8](v82);
        v358 = &v445;
        v65 = sub_23224BD9C((void (*)(char *__return_ptr, _QWORD *))sub_23224C650, (uint64_t)(&v359 - 4), v61, v62);
        swift_bridgeObjectRelease();
        v57 = v438;
        if ((v65 & 1) == 0)
          goto LABEL_98;
        v83 = *(double *)&v445;
        v84 = objc_msgSend((id)objc_opt_self(), sel_prismDiopterUnit);
        v65 = (unint64_t)objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v84, v83);

        v58 = v437;
        if (qword_255FAB8F8 != -1)
          swift_once();
        v62 = (unint64_t)objc_msgSend((id)qword_255FABBB8, sel_containsQuantity_, v65);
        ((void (*)(char *, NSObject *))isa[1])(v58, v57);
        v49 = v439;
        if ((_DWORD)v62)
        {

          v422 = (id)v65;
          goto LABEL_60;
        }
        goto LABEL_100;
      }
      if (v64 == 1685088364 && v65 == 0xE400000000000000 || (sub_2322B93F8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v65 = sub_23224A48C(v61, v62);
        v62 = v85;
        v58 = v437;
        v57 = v438;
        ((void (*)(char *, NSObject *))isa[1])(v437, v438);
        if ((v62 & 1) != 0)
          goto LABEL_60;
        if (!v65)
        {
          v407 = 0;
          v406 = 4;
          goto LABEL_60;
        }
        if (v65 == 1)
        {
          v407 = 0;
          v406 = 3;
          goto LABEL_60;
        }
LABEL_112:
        v411 = 0;
        goto LABEL_60;
      }
      if (v64 == 7370348 && v65 == 0xE300000000000000 || (sub_2322B93F8() & 1) != 0)
      {
        v86 = swift_bridgeObjectRelease();
        v57 = v438;
        *(_QWORD *)&v445 = 0;
        MEMORY[0x24BDAC7A8](v86);
        v358 = &v445;
        v65 = sub_23224BD9C((void (*)(char *__return_ptr, _QWORD *))sub_23224C650, (uint64_t)(&v359 - 4), v61, v62);
        swift_bridgeObjectRelease();
        if ((v65 & 1) != 0)
        {
          v87 = *(double *)&v445;
          v88 = objc_msgSend((id)objc_opt_self(), sel_prismDiopterUnit);
          v65 = (unint64_t)objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v88, v87);

          v58 = v437;
          if (qword_255FAB8F8 != -1)
            swift_once();
          v62 = (unint64_t)objc_msgSend((id)qword_255FABBB8, sel_containsQuantity_, v65);
          ((void (*)(char *, NSObject *))isa[1])(v58, v57);
          v49 = v439;
          if ((_DWORD)v62)
          {

            v421 = (id)v65;
            goto LABEL_60;
          }
LABEL_100:

          v411 = 0;
          goto LABEL_60;
        }
LABEL_98:
        v58 = v437;
        ((void (*)(char *, NSObject *))isa[1])(v437, v57);
LABEL_99:
        v49 = v439;
        goto LABEL_60;
      }
      if ((v64 != 1685091948 || v65 != 0xE400000000000000) && (sub_2322B93F8() & 1) == 0)
      {
        if (v64 == 29554 && v65 == 0xE200000000000000 || (sub_2322B93F8() & 1) != 0)
        {
          v90 = swift_bridgeObjectRelease();
          *(_QWORD *)&v445 = 0;
          MEMORY[0x24BDAC7A8](v90);
          v358 = &v445;
          v65 = sub_23224BD9C((void (*)(char *__return_ptr, _QWORD *))sub_23224C650, (uint64_t)(&v359 - 4), v61, v62);
          swift_bridgeObjectRelease();
          if ((v65 & 1) != 0)
          {
            v91 = *(double *)&v445;
            v92 = objc_msgSend((id)objc_opt_self(), sel_diopterUnit);
            v65 = (unint64_t)objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v92, v91);

            if (qword_255FAB8E0 != -1)
              swift_once();
            v62 = (unint64_t)objc_msgSend((id)qword_255FABBA0, sel_containsQuantity_, v65);
            v58 = v437;
            v57 = v438;
            ((void (*)(char *, NSObject *))isa[1])(v437, v438);
            if ((_DWORD)v62)
            {

              v450 = v65;
            }
            else
            {

            }
            goto LABEL_99;
          }
          goto LABEL_216;
        }
        if (v64 == 25458 && v65 == 0xE200000000000000 || (sub_2322B93F8() & 1) != 0)
        {
          v93 = swift_bridgeObjectRelease();
          *(_QWORD *)&v445 = 0;
          MEMORY[0x24BDAC7A8](v93);
          v358 = &v445;
          v65 = sub_23224BD9C((void (*)(char *__return_ptr, _QWORD *))sub_23224C650, (uint64_t)(&v359 - 4), v61, v62);
          swift_bridgeObjectRelease();
          if ((v65 & 1) == 0)
            goto LABEL_216;
          v94 = *(double *)&v445;
          v95 = objc_msgSend((id)objc_opt_self(), sel_diopterUnit);
          v65 = (unint64_t)objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v95, v94);

          if (qword_255FAB8E8 != -1)
            swift_once();
          v62 = (unint64_t)objc_msgSend((id)qword_255FABBA8, sel_containsQuantity_, v65);
          ((void (*)(char *, NSObject *))isa[1])(v437, v438);
          if ((_DWORD)v62)
          {
            v96 = *v409;
            *v409 = (void *)v65;

LABEL_197:
            v49 = v439;
            v57 = v438;
            v58 = v437;
            goto LABEL_60;
          }
LABEL_196:

          goto LABEL_197;
        }
        if (v64 == 24946 && v65 == 0xE200000000000000 || (sub_2322B93F8() & 1) != 0)
        {
          v97 = swift_bridgeObjectRelease();
          *(_QWORD *)&v445 = 0;
          MEMORY[0x24BDAC7A8](v97);
          v358 = &v445;
          v65 = sub_23224BD9C((void (*)(char *__return_ptr, _QWORD *))sub_23224C650, (uint64_t)(&v359 - 4), v61, v62);
          swift_bridgeObjectRelease();
          if ((v65 & 1) == 0)
            goto LABEL_216;
          v98 = *(double *)&v445;
          if (*(double *)&v445 == 0.0)
            goto LABEL_216;
          v99 = objc_msgSend((id)objc_opt_self(), sel_degreeAngleUnit);
          v65 = (unint64_t)objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v99, v98);

          if (qword_255FAB8F0 != -1)
            swift_once();
          v62 = (unint64_t)objc_msgSend((id)qword_255FABBB0, sel_containsQuantity_, v65);
          ((void (*)(char *, NSObject *))isa[1])(v437, v438);
          if ((_DWORD)v62)
          {

            v449 = (id)v65;
          }
          else
          {

            v410 = 0;
          }
          goto LABEL_197;
        }
        if (v64 == 7366770 && v65 == 0xE300000000000000 || (sub_2322B93F8() & 1) != 0)
        {
          v100 = swift_bridgeObjectRelease();
          *(_QWORD *)&v445 = 0;
          MEMORY[0x24BDAC7A8](v100);
          v358 = &v445;
          v65 = sub_23224BD9C((void (*)(char *__return_ptr, _QWORD *))sub_23224C650, (uint64_t)(&v359 - 4), v61, v62);
          swift_bridgeObjectRelease();
          if ((v65 & 1) == 0)
            goto LABEL_216;
          v101 = *(double *)&v445;
          v102 = objc_msgSend((id)objc_opt_self(), sel_prismDiopterUnit);
          v65 = (unint64_t)objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v102, v101);

          if (qword_255FAB8F8 != -1)
            swift_once();
          v62 = (unint64_t)objc_msgSend((id)qword_255FABBB8, sel_containsQuantity_, v65);
          ((void (*)(char *, NSObject *))isa[1])(v437, v438);
          if ((_DWORD)v62)
          {

            v420 = (id)v65;
            goto LABEL_197;
          }
LABEL_169:

LABEL_170:
          v411 = 0;
          goto LABEL_197;
        }
        if (v64 == 1685088370 && v65 == 0xE400000000000000 || (sub_2322B93F8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v65 = sub_23224A48C(v61, v62);
          v62 = v103;
          ((void (*)(char *, NSObject *))isa[1])(v437, v438);
          if ((v62 & 1) != 0)
            goto LABEL_197;
          if (!v65)
          {
            v403 = 0;
            v398 = 4;
            goto LABEL_197;
          }
          if (v65 == 1)
          {
            v403 = 0;
            v398 = 3;
            goto LABEL_197;
          }
          goto LABEL_170;
        }
        if (v64 == 7370354 && v65 == 0xE300000000000000 || (sub_2322B93F8() & 1) != 0)
        {
          v104 = swift_bridgeObjectRelease();
          *(_QWORD *)&v445 = 0;
          MEMORY[0x24BDAC7A8](v104);
          v358 = &v445;
          v65 = sub_23224BD9C((void (*)(char *__return_ptr, _QWORD *))sub_23224C650, (uint64_t)(&v359 - 4), v61, v62);
          swift_bridgeObjectRelease();
          if ((v65 & 1) == 0)
            goto LABEL_216;
          v105 = *(double *)&v445;
          v106 = objc_msgSend((id)objc_opt_self(), sel_prismDiopterUnit);
          v65 = (unint64_t)objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v106, v105);

          if (qword_255FAB8F8 != -1)
            swift_once();
          v62 = (unint64_t)objc_msgSend((id)qword_255FABBB8, sel_containsQuantity_, v65);
          ((void (*)(char *, NSObject *))isa[1])(v437, v438);
          if ((_DWORD)v62)
          {

            v417 = (char *)v65;
            goto LABEL_197;
          }
          goto LABEL_169;
        }
        if (v64 == 1685091954 && v65 == 0xE400000000000000 || (sub_2322B93F8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v65 = sub_23224A48C(v61, v62);
          v62 = v107;
          ((void (*)(char *, NSObject *))isa[1])(v437, v438);
          if ((v62 & 1) != 0)
            goto LABEL_197;
          if (!v65)
          {
            v399 = 0;
            v397 = 1;
            goto LABEL_197;
          }
          if (v65 == 1)
          {
            v399 = 0;
            v397 = 2;
            goto LABEL_197;
          }
          goto LABEL_170;
        }
        if (v64 == 7107186 && v65 == 0xE300000000000000 || (sub_2322B93F8() & 1) != 0)
        {
          v108 = swift_bridgeObjectRelease();
          *(_QWORD *)&v445 = 0;
          MEMORY[0x24BDAC7A8](v108);
          v358 = &v445;
          v65 = sub_23224BD9C((void (*)(char *__return_ptr, _QWORD *))sub_23224C650, (uint64_t)(&v359 - 4), v61, v62);
          swift_bridgeObjectRelease();
          if ((v65 & 1) == 0)
            goto LABEL_216;
          v109 = *(double *)&v445;
          v110 = objc_msgSend((id)objc_opt_self(), sel_diopterUnit);
          v65 = (unint64_t)objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v110, v109);

          if (qword_255FAB8E0 != -1)
            swift_once();
          v62 = (unint64_t)objc_msgSend((id)qword_255FABBA0, sel_containsQuantity_, v65);
          ((void (*)(char *, NSObject *))isa[1])(v437, v438);
          if ((_DWORD)v62)
          {

            v419 = (char *)v65;
            goto LABEL_197;
          }
          goto LABEL_196;
        }
        if (v64 == 6845042 && v65 == 0xE300000000000000 || (sub_2322B93F8() & 1) != 0)
        {
          v111 = swift_bridgeObjectRelease();
          *(_QWORD *)&v445 = 0;
          MEMORY[0x24BDAC7A8](v111);
          v358 = &v445;
          v65 = sub_23224BD9C((void (*)(char *__return_ptr, _QWORD *))sub_23224C650, (uint64_t)(&v359 - 4), v61, v62);
          swift_bridgeObjectRelease();
          if ((v65 & 1) == 0)
            goto LABEL_216;
          v112 = *(double *)&v445;
          v113 = objc_msgSend((id)objc_opt_self(), sel_diopterUnit);
          v65 = (unint64_t)objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v113, v112);

          if (qword_255FAB8E0 != -1)
            swift_once();
          v62 = (unint64_t)objc_msgSend((id)qword_255FABBA0, sel_containsQuantity_, v65);
          ((void (*)(char *, NSObject *))isa[1])(v437, v438);
          if ((_DWORD)v62)
          {

            v418 = (id)v65;
            goto LABEL_197;
          }
          goto LABEL_196;
        }
        if (v64 == 6513505 && v65 == 0xE300000000000000 || (sub_2322B93F8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          if (sub_2322B8E88() == 32 || sub_2322B8E88() == 38)
          {
            v114 = (void *)objc_opt_self();
            v115 = (void *)sub_2322B8DEC();
            swift_bridgeObjectRelease();
            v65 = (unint64_t)objc_msgSend(v114, sel_hk_dataWithHexString_, v115);

            v58 = v437;
            v57 = v438;
            ((void (*)(char *, NSObject *))isa[1])(v437, v438);

            v448 = (id)v65;
            goto LABEL_99;
          }
LABEL_227:
          v58 = v437;
          v57 = v438;
          ((void (*)(char *, NSObject *))isa[1])(v437, v438);
          swift_bridgeObjectRelease();
          goto LABEL_99;
        }
        if (v64 == 116 && v65 == 0xE100000000000000 || (sub_2322B93F8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v65 = sub_23224A48C(v61, v62);
          v62 = v116;
          ((void (*)(char *, NSObject *))isa[1])(v437, v438);
          if ((v62 & 1) == 0)
          {
            v117 = sub_232269BC8(v65);
            if (v117 == 4)
              v118 = v408;
            else
              v118 = v117;
            v408 = v118;
          }
          goto LABEL_197;
        }
        if (v64 == 25443 && v65 == 0xE200000000000000 || (sub_2322B93F8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v401 = sub_23224A6D8(v61, v62);
          v405 = HIDWORD(v401) & 1;
        }
        else
        {
          if (v64 == 28275 && v65 == 0xE200000000000000 || (sub_2322B93F8() & 1) != 0)
          {
            v119 = v437;
            v57 = v438;
            ((void (*)(char *, NSObject *))isa[1])(v437, v438);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v402 = v61;
            v58 = v119;
            v414 = v62;
            goto LABEL_99;
          }
          if (v64 == 99 && v65 == 0xE100000000000000)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            v120 = sub_2322B93F8();
            swift_bridgeObjectRelease();
            if ((v120 & 1) == 0)
              goto LABEL_227;
          }
          if (v56 != *(_QWORD *)(v416 + 16) - 1)
            goto LABEL_227;
          LODWORD(v413) = sub_23224A934(v61, v62, 0x10uLL);
          v415 = WORD1(v413) & 1;
        }
LABEL_216:
        v58 = v437;
        v57 = v438;
        ((void (*)(char *, NSObject *))isa[1])(v437, v438);
        goto LABEL_99;
      }
      swift_bridgeObjectRelease();
      v65 = sub_23224A48C(v61, v62);
      v62 = v89;
      v58 = v437;
      v57 = v438;
      ((void (*)(char *, NSObject *))isa[1])(v437, v438);
      if ((v62 & 1) != 0)
        goto LABEL_60;
      if (v65)
      {
        if (v65 == 1)
        {
          v404 = 0;
          v400 = 2;
          goto LABEL_60;
        }
        goto LABEL_112;
      }
      v404 = 0;
      v400 = 1;
    }
LABEL_60:
    if (__OFADD__(v56++, 1))
    {
      __break(1u);
      goto LABEL_289;
    }
LABEL_10:
    v55 += v440;
    --v54;
  }
  while (v54);
  swift_bridgeObjectRelease_n();
  if ((v415 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v12 = v431;
    v39 = v435;
    v47 = v433;
    v122 = v418;
    v121 = v419;
    v54 = v417;
    goto LABEL_236;
  }
  sub_2322B7F94();
  v139 = sub_23224BF48(7);
  v141 = v140;
  v143 = v142;
  v145 = v144;
  swift_bridgeObjectRelease();
  v146 = MEMORY[0x234900564](v139, v141, v143, v145);
  v148 = v147;
  swift_bridgeObjectRelease();
  v149 = sub_23224BFD0(v146, v148);
  swift_bridgeObjectRelease();
  v150 = v413;
  if ((unsigned __int16)v149 != (unsigned __int16)v413)
  {
    swift_bridgeObjectRelease();
    sub_2322B88E8();
    v223 = (_QWORD *)swift_allocObject();
    v223[2] = v430;
    v224 = v223;
    v439 = v223;
    v225 = (_WORD *)swift_allocObject();
    v412 = v149;
    v225[8] = v149;
    v226 = v225;
    v440 = (uint64_t)v225;
    isa = (_QWORD *)swift_allocObject();
    *((_WORD *)isa + 8) = v150;
    v441 = sub_2322B890C();
    LODWORD(v424) = sub_2322B8FF0();
    v227 = swift_allocObject();
    *(_BYTE *)(v227 + 16) = 32;
    v228 = swift_allocObject();
    *(_BYTE *)(v228 + 16) = 8;
    v229 = (objc_class *)swift_allocObject();
    *((_QWORD *)v229 + 2) = sub_23224C0A0;
    *((_QWORD *)v229 + 3) = v224;
    v230 = v229;
    v437 = (char *)v229;
    v231 = swift_allocObject();
    v231[2].isa = (Class)sub_23224C0F8;
    v231[3].isa = v230;
    v232 = v231;
    v438 = v231;
    v233 = swift_allocObject();
    *(_QWORD *)(v233 + 16) = sub_23224C100;
    *(_QWORD *)(v233 + 24) = v232;
    v234 = v233;
    v429 = (char *)swift_allocObject();
    v429[16] = 0;
    v235 = swift_allocObject();
    *(_BYTE *)(v235 + 16) = 2;
    v236 = swift_allocObject();
    *(_QWORD *)(v236 + 16) = sub_23224C0B8;
    *(_QWORD *)(v236 + 24) = v226;
    v237 = swift_allocObject();
    *(_QWORD *)(v237 + 16) = sub_23224C130;
    *(_QWORD *)(v237 + 24) = v236;
    v432 = v237;
    v414 = swift_allocObject();
    *(_BYTE *)(v414 + 16) = 0;
    v238 = swift_allocObject();
    *(_BYTE *)(v238 + 16) = 2;
    v239 = swift_allocObject();
    v240 = isa;
    *(_QWORD *)(v239 + 16) = sub_23224C734;
    *(_QWORD *)(v239 + 24) = v240;
    v241 = swift_allocObject();
    LODWORD(v413) = v150;
    v242 = v241;
    *(_QWORD *)(v241 + 16) = sub_23224C724;
    *(_QWORD *)(v241 + 24) = v239;
    sub_23224BE78(0, (unint64_t *)&qword_255FABC78, (uint64_t (*)(uint64_t))sub_23224C1D4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    inited = swift_initStackObject();
    v415 = sub_232287248(inited, 9);
    *v244 = sub_23224C0E0;
    v244[1] = v227;
    v244[2] = sub_23224C730;
    v244[3] = v228;
    v244[4] = sub_23224C108;
    v244[5] = v234;
    v245 = v429;
    v244[6] = sub_23224C730;
    v244[7] = v245;
    v244[8] = sub_23224C730;
    v244[9] = v235;
    v244[10] = sub_23224C158;
    v244[11] = v237;
    v246 = v414;
    v244[12] = sub_23224C730;
    v244[13] = v246;
    v244[14] = sub_23224C730;
    v244[15] = v238;
    v244[16] = sub_23224C158;
    v244[17] = v242;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v426 = v236;
    swift_retain();
    swift_retain();
    v427 = (char *)v239;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v416 = v235;
    swift_retain();
    swift_retain();
    swift_retain();
    v425 = v238;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    v247 = v424;
    if (os_log_type_enabled(v441, (os_log_type_t)v424))
    {
      v248 = swift_slowAlloc();
      LODWORD(v415) = v247;
      v249 = (uint8_t *)v248;
      v424 = (char *)swift_slowAlloc();
      *(_QWORD *)&v445 = v424;
      *(_WORD *)v249 = 770;
      v249[2] = 32;
      swift_release();
      v249[3] = 8;
      swift_release();
      v250 = sub_2322B9464();
      *(_QWORD *)&v444[0] = sub_232266EA0(v250, v251, (uint64_t *)&v445);
      sub_2322B923C();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      v249[12] = 0;
      swift_release();
      v249[13] = 2;
      swift_release();
      swift_release();
      LOWORD(v444[0]) = v412;
      sub_2322B923C();
      swift_release();
      swift_release();
      v249[16] = 0;
      swift_release();
      v249[17] = 2;
      swift_release();
      swift_release();
      LOWORD(v444[0]) = v413;
      sub_2322B923C();
      swift_release();
      swift_release();
      v252 = v441;
      _os_log_impl(&dword_232241000, v441, (os_log_type_t)v415, "[%s] checksum failed: %hu vs %hu", v249, 0x14u);
      v253 = v424;
      swift_arrayDestroy();
      MEMORY[0x234901170](v253, -1, -1);
      MEMORY[0x234901170](v249, -1, -1);

    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v434 + 8))(v428, v436);
    goto LABEL_248;
  }
  sub_2322B88E8();
  v151 = swift_allocObject();
  *(_QWORD *)(v151 + 16) = v430;
  v152 = v151;
  v385 = v151;
  v153 = v452;
  v154 = swift_allocObject();
  *(_QWORD *)(v154 + 16) = v153;
  v155 = (objc_class *)v453;
  v438 = swift_allocObject();
  v438[2].isa = v155;
  v156 = v451;
  v439 = (_QWORD *)swift_allocObject();
  v439[2] = v156;
  v157 = v450;
  v440 = swift_allocObject();
  *(_QWORD *)(v440 + 16) = v157;
  v158 = (objc_class *)v449;
  v441 = swift_allocObject();
  v441[2].isa = v158;
  v159 = v448;
  isa = (_QWORD *)swift_allocObject();
  isa[2] = v159;
  v362 = v159;
  v160 = v159;
  v360 = v153;
  v161 = v153;
  v369 = v155;
  v162 = v155;
  v361 = v156;
  v163 = v156;
  swift_retain_n();
  v372 = v157;
  v164 = v157;
  v373 = v158;
  v165 = v158;
  v374 = v160;
  v368 = v161;
  v370 = v162;
  v166 = v163;
  v386 = v154;
  v380 = v166;
  v371 = v164;
  v381 = v165;
  v378 = (os_log_t)sub_2322B890C();
  v377 = sub_2322B8FF0();
  v413 = swift_allocObject();
  *(_BYTE *)(v413 + 16) = 32;
  v396 = swift_allocObject();
  *(_BYTE *)(v396 + 16) = 8;
  v167 = swift_allocObject();
  *(_QWORD *)(v167 + 16) = sub_23224C738;
  *(_QWORD *)(v167 + 24) = v152;
  v168 = v167;
  v384 = v167;
  v169 = swift_allocObject();
  *(_QWORD *)(v169 + 16) = sub_23224C71C;
  *(_QWORD *)(v169 + 24) = v168;
  v170 = v169;
  v383 = v169;
  v171 = swift_allocObject();
  *(_QWORD *)(v171 + 16) = sub_23224C720;
  *(_QWORD *)(v171 + 24) = v170;
  v393 = swift_allocObject();
  *(_BYTE *)(v393 + 16) = 64;
  v391 = swift_allocObject();
  *(_BYTE *)(v391 + 16) = 8;
  v172 = swift_allocObject();
  v382 = v172;
  *(_QWORD *)(v172 + 16) = sub_23224C718;
  *(_QWORD *)(v172 + 24) = v154;
  v394 = swift_allocObject();
  *(_BYTE *)(v394 + 16) = 64;
  v392 = swift_allocObject();
  *(_BYTE *)(v392 + 16) = 8;
  v173 = swift_allocObject();
  v415 = v173;
  v174 = v438;
  *(_QWORD *)(v173 + 16) = sub_23224C718;
  *(_QWORD *)(v173 + 24) = v174;
  v395 = swift_allocObject();
  *(_BYTE *)(v395 + 16) = 64;
  v175 = swift_allocObject();
  *(_BYTE *)(v175 + 16) = 8;
  v176 = v175;
  v177 = swift_allocObject();
  v428 = (char *)v177;
  v178 = v439;
  *(_QWORD *)(v177 + 16) = sub_23224C3C0;
  *(_QWORD *)(v177 + 24) = v178;
  v179 = swift_allocObject();
  *(_BYTE *)(v179 + 16) = 64;
  v180 = v179;
  v387 = swift_allocObject();
  *(_BYTE *)(v387 + 16) = 8;
  v181 = swift_allocObject();
  v432 = v181;
  v182 = v423;
  *(_QWORD *)(v181 + 16) = sub_23224C3E4;
  *(_QWORD *)(v181 + 24) = v182;
  v388 = swift_allocObject();
  *(_BYTE *)(v388 + 16) = 64;
  v416 = swift_allocObject();
  *(_BYTE *)(v416 + 16) = 8;
  v183 = (char *)swift_allocObject();
  v437 = v183;
  v184 = v440;
  *((_QWORD *)v183 + 2) = sub_23224C718;
  *((_QWORD *)v183 + 3) = v184;
  v376 = swift_allocObject();
  *(_BYTE *)(v376 + 16) = 64;
  v375 = swift_allocObject();
  *(_BYTE *)(v375 + 16) = 8;
  v185 = swift_allocObject();
  v379 = v185;
  v186 = v441;
  *(_QWORD *)(v185 + 16) = sub_23224C718;
  *(_QWORD *)(v185 + 24) = v186;
  v390 = swift_allocObject();
  *(_BYTE *)(v390 + 16) = 32;
  v389 = swift_allocObject();
  *(_BYTE *)(v389 + 16) = 8;
  v187 = swift_allocObject();
  v188 = isa;
  *(_QWORD *)(v187 + 16) = sub_23224C424;
  *(_QWORD *)(v187 + 24) = v188;
  v189 = swift_allocObject();
  *(_QWORD *)(v189 + 16) = sub_23224C720;
  *(_QWORD *)(v189 + 24) = v187;
  sub_23224BE78(0, (unint64_t *)&qword_255FABC78, (uint64_t (*)(uint64_t))sub_23224C1D4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v190 = swift_allocObject();
  v363 = sub_232287248(v190, 24);
  v191 = v413;
  *v192 = sub_23224C730;
  v192[1] = v191;
  v193 = v396;
  v192[2] = sub_23224C730;
  v192[3] = v193;
  v192[4] = sub_23224C728;
  v192[5] = v171;
  v194 = v171;
  v195 = v393;
  v192[6] = sub_23224C730;
  v192[7] = v195;
  v196 = v391;
  v192[8] = sub_23224C730;
  v192[9] = v196;
  v197 = v382;
  v192[10] = sub_23224C4D8;
  v192[11] = v197;
  v198 = v394;
  v192[12] = sub_23224C730;
  v192[13] = v198;
  v199 = v392;
  v192[14] = sub_23224C730;
  v192[15] = v199;
  v200 = v415;
  v192[16] = sub_23224C72C;
  v192[17] = v200;
  v201 = v395;
  v192[18] = sub_23224C730;
  v192[19] = v201;
  v192[20] = sub_23224C730;
  v192[21] = v176;
  v202 = v176;
  v203 = v428;
  v192[22] = sub_23224C72C;
  v192[23] = v203;
  v192[24] = sub_23224C730;
  v192[25] = v180;
  v204 = v180;
  v205 = v387;
  v192[26] = sub_23224C730;
  v192[27] = v205;
  v206 = v432;
  v192[28] = sub_23224C72C;
  v192[29] = v206;
  v207 = v388;
  v192[30] = sub_23224C730;
  v192[31] = v207;
  v208 = v416;
  v192[32] = sub_23224C730;
  v192[33] = v208;
  v209 = v437;
  v192[34] = sub_23224C72C;
  v192[35] = v209;
  v210 = v375;
  v211 = v376;
  v192[36] = sub_23224C730;
  v192[37] = v211;
  v192[38] = sub_23224C730;
  v192[39] = v210;
  v192[40] = sub_23224C72C;
  v192[41] = v185;
  v212 = v390;
  v192[42] = sub_23224C730;
  v192[43] = v212;
  v213 = v389;
  v192[44] = sub_23224C730;
  v192[45] = v213;
  v192[46] = sub_23224C728;
  v192[47] = v189;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v367 = v187;
  swift_retain();
  swift_retain();
  swift_retain();
  v364 = v194;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v365 = v202;
  swift_retain();
  swift_retain();
  v366 = v204;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v214 = v378;
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(v214, (os_log_type_t)v377))
  {
    v363 = v189;
    v215 = (uint8_t *)swift_slowAlloc();
    v216 = (_QWORD *)swift_slowAlloc();
    v359 = swift_slowAlloc();
    *(_QWORD *)&v445 = v359;
    *(_WORD *)v215 = 2050;
    v215[2] = 32;
    swift_release();
    v215[3] = 8;
    swift_release();
    v217 = sub_2322B9464();
    *(_QWORD *)&v444[0] = sub_232266EA0(v217, v218, (uint64_t *)&v445);
    sub_2322B923C();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    v215[12] = 64;
    swift_release();
    v215[13] = 8;
    swift_release();
    v219 = v360;
    if (v360)
    {
      v220 = v368;
      *(_QWORD *)&v444[0] = v368;
      v221 = v368;
      sub_2322B923C();
      v222 = v370;
    }
    else
    {
      *(_QWORD *)&v444[0] = 0;
      sub_2322B923C();
      v222 = v370;
      v220 = v368;
    }
    *v216 = v219;

    swift_release();
    swift_release();
    v215[22] = 64;
    swift_release();
    v215[23] = 8;
    swift_release();
    if (v369)
    {
      *(_QWORD *)&v444[0] = v222;
      v256 = v222;
    }
    else
    {
      *(_QWORD *)&v444[0] = 0;
    }
    sub_2322B923C();
    v257 = v380;
    v216[1] = v369;

    swift_release();
    swift_release();
    v215[32] = 64;
    swift_release();
    v215[33] = 8;
    swift_release();
    v258 = v361;
    if (v361)
    {
      *(_QWORD *)&v444[0] = v257;
      v259 = v380;
      v257 = v380;
    }
    else
    {
      *(_QWORD *)&v444[0] = 0;
    }
    sub_2322B923C();
    v216[2] = v258;

    swift_release();
    swift_release();
    v215[42] = 64;
    swift_release();
    v215[43] = 8;
    swift_release();
    v260 = v409;
    swift_beginAccess();
    v261 = *v260;
    if (*v260)
    {
      *(_QWORD *)&v444[0] = *v260;
      v262 = v261;
    }
    else
    {
      *(_QWORD *)&v444[0] = 0;
    }
    sub_2322B923C();
    v263 = v371;
    v216[3] = v261;
    swift_release_n();
    swift_release();
    v215[52] = 64;
    swift_release();
    v215[53] = 8;
    swift_release();
    if (v372)
    {
      *(_QWORD *)&v444[0] = v263;
      v264 = v263;
    }
    else
    {
      *(_QWORD *)&v444[0] = 0;
    }
    sub_2322B923C();
    v55 = v433;
    v265 = v381;
    v216[4] = v372;

    swift_release();
    swift_release();
    v215[62] = 64;
    swift_release();
    v215[63] = 8;
    swift_release();
    if (v373)
    {
      *(_QWORD *)&v444[0] = v265;
      v266 = v381;
      v265 = v381;
    }
    else
    {
      *(_QWORD *)&v444[0] = 0;
    }
    sub_2322B923C();
    v216[5] = v373;

    swift_release();
    swift_release();
    v215[72] = 32;
    swift_release();
    v215[73] = 8;
    swift_release();
    *(_QWORD *)&v444[0] = v362;
    sub_23224C2EC(0, &qword_255FABCD8, (unint64_t *)&qword_255FABCC8);
    v267 = sub_2322B9218();
    *(_QWORD *)&v444[0] = sub_232266EA0(v267, v268, (uint64_t *)&v445);
    sub_2322B923C();

    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    v269 = v378;
    _os_log_impl(&dword_232241000, v378, (os_log_type_t)v377, "[%s] lc: %@, ls: %@, la: %@, rc: %@, rs: %@, ra: %@, acc: %s", v215, 0x52u);
    sub_23224C2EC(0, (unint64_t *)&qword_255FABCA0, (unint64_t *)&qword_255FAF9C0);
    swift_arrayDestroy();
    MEMORY[0x234901170](v216, -1, -1);
    v270 = v359;
    swift_arrayDestroy();
    MEMORY[0x234901170](v270, -1, -1);
    MEMORY[0x234901170](v215, -1, -1);

    (*(void (**)(char *, uint64_t))(v434 + 8))(v429, v436);
    v56 = v431;
  }
  else
  {

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    swift_release();
    swift_release();
    swift_release();
    swift_release();

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release_n();
    swift_release();
    swift_release();
    swift_release();

    swift_release();
    swift_release();
    swift_release();
    swift_release();

    swift_release();
    swift_release();
    swift_release();
    swift_release();

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v434 + 8))(v429, v436);
    v56 = v431;
    v55 = v433;
  }
  swift_beginAccess();
  v49 = v448;
  v271 = v435;
  v62 = (unint64_t)v418;
  v54 = v419;
  if (!v448)
  {

    swift_bridgeObjectRelease();
LABEL_278:

    (*(void (**)(char *, uint64_t))(v55 + 8))(v271, v56);
    goto LABEL_249;
  }
  if ((v412 & v410 & v411 & 1) == 0)
  {

    swift_bridgeObjectRelease();
    goto LABEL_278;
  }
  swift_beginAccess();
  v58 = (char *)v453;
  if (!v453)
  {

    swift_bridgeObjectRelease();
    v65 = (unint64_t)v452;
LABEL_290:

    (*(void (**)(char *, uint64_t))(v55 + 8))(v435, v56);
    goto LABEL_249;
  }
  swift_beginAccess();
  v57 = v450;
  if (!v450)
  {

    swift_bridgeObjectRelease();
LABEL_281:

    v65 = (unint64_t)v452;
    goto LABEL_290;
  }
  if (v408 != 1)
  {
    swift_beginAccess();
    v65 = (unint64_t)v452;
    if (v452)
    {
      v273 = v56;
      v274 = v57;
      v275 = v409;
      swift_beginAccess();
      v276 = *v275;
      v57 = v274;
      v56 = v273;
      if (v276)
        goto LABEL_284;
    }
LABEL_289:

    swift_bridgeObjectRelease();
    v283 = v449;

    v284 = v451;
    goto LABEL_290;
  }
  if ((v62 == 0) == (v54 != 0))
  {

    swift_bridgeObjectRelease();
    v272 = v449;

    goto LABEL_281;
  }
LABEL_284:
  if (v420)
  {
    v277 = v417;
    v278 = v421;
    if ((v403 & 1) != 0 || !v417 || (v399 & 1) != 0)
    {
      v279 = v49;
      v280 = v58;
      v281 = v57;
      v282 = 0;
    }
    else
    {
      v288 = objc_allocWithZone(MEMORY[0x24BDD4108]);
      v289 = v49;
      v290 = v58;
      v291 = v57;
      v282 = objc_msgSend(v288, sel_initWithVerticalAmount_verticalBase_horizontalAmount_horizontalBase_eye_, v277, v397, v420, v398, 2);
    }
  }
  else
  {
    v285 = v49;
    v286 = v58;
    v287 = v57;
    v282 = 0;
    v278 = v421;
  }
  if (v422 && !((v407 | v404) & 1 | (v278 == 0)))
  {
    v293 = objc_allocWithZone(MEMORY[0x24BDD4108]);
    v292 = objc_msgSend(v293, sel_initWithVerticalAmount_verticalBase_horizontalAmount_horizontalBase_eye_, v278, v400, v422, v406, 1);
  }
  else
  {
    v292 = 0;
  }
  v294 = v409;
  swift_beginAccess();
  v295 = *v294;
  swift_beginAccess();
  v296 = v449;
  v297 = objc_allocWithZone(MEMORY[0x24BDD3C10]);
  v441 = v57;
  v438 = objc_msgSend(v297, sel_initWithSphere_cylinder_axis_addPower_vertexDistance_prism_farPupillaryDistance_nearPupillaryDistance_, v57, v295, v296, 0, 0, v282, 0, 0);
  swift_beginAccess();
  v298 = v452;
  swift_beginAccess();
  v299 = v451;
  v300 = objc_allocWithZone(MEMORY[0x24BDD3C10]);
  isa = v58;
  v439 = v292;
  v301 = objc_msgSend(v300, sel_initWithSphere_cylinder_axis_addPower_vertexDistance_prism_farPupillaryDistance_nearPupillaryDistance_, v58, v298, v299, 0, 0, v292, 0, 0);
  if (qword_255FAB900 != -1)
    swift_once();
  v358 = (__int128 *)0xE000000000000000;
  v302 = sub_2322B7F58();
  v304 = v303;
  sub_23224BE78(0, (unint64_t *)&qword_255FABCB8, (uint64_t (*)(uint64_t))sub_23224C5A0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v305 = swift_allocObject();
  v306 = sub_2322867E8(v305, 3);
  v308 = v307;
  *v307 = sub_2322B8E1C();
  v308[1] = v309;
  v308[5] = sub_23224C618(0, (unint64_t *)&qword_255FABCC8);
  v308[2] = (uint64_t)v49;
  v308[6] = sub_2322B8E1C();
  v308[7] = v310;
  v311 = MEMORY[0x24BEE0D00];
  v308[11] = MEMORY[0x24BEE0D00];
  v308[8] = 0xD000000000000011;
  v308[9] = 0x80000002322B9E20;
  v308[12] = sub_2322B8E1C();
  v308[13] = v312;
  v308[17] = v311;
  v308[14] = v302;
  v308[15] = v304;
  v313 = nullsub_1(v306);
  v314 = (char *)v49;
  v315 = sub_23228C448(v313);
  v437 = v314;
  if (v419)
  {
    v316 = v418;
    if (v418)
    {
      v317 = sub_2322B8E1C();
      v319 = v318;
      v320 = sub_23224C618(0, (unint64_t *)&qword_255FABCD0);
      v446 = v320;
      v321 = v419;
      *(_QWORD *)&v445 = v419;
      sub_23224C608(&v445, v444);
      v322 = v321;
      v323 = v316;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v443 = v315;
      sub_2322B2EB4(v444, v317, v319, isUniquelyReferenced_nonNull_native);
      v325 = v443;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v326 = sub_2322B8E1C();
      v328 = v327;
      v446 = v320;
      *(_QWORD *)&v445 = v323;
      sub_23224C608(&v445, v444);
      v329 = swift_isUniquelyReferenced_nonNull_native();
      v443 = v325;
      sub_2322B2EB4(v444, v326, v328, v329);
      v315 = v443;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  if ((v405 & 1) == 0)
  {
    v330 = sub_2322B8E1C();
    v332 = v331;
    v333 = objc_allocWithZone(MEMORY[0x24BDD16E0]);
    v334 = objc_msgSend(v333, sel_initWithUnsignedInt_, v401);
    v446 = sub_23224C618(0, (unint64_t *)&qword_255FAEEA0);
    *(_QWORD *)&v445 = v334;
    sub_23224C608(&v445, v444);
    v335 = swift_isUniquelyReferenced_nonNull_native();
    v443 = v315;
    sub_2322B2EB4(v444, v330, v332, v335);
    v315 = v443;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v336 = v414;
  v337 = v408;
  if (v414)
  {
    v338 = sub_2322B8E1C();
    v340 = v339;
    v446 = v311;
    *(_QWORD *)&v445 = v402;
    *((_QWORD *)&v445 + 1) = v336;
    sub_23224C608(&v445, v444);
    v341 = swift_isUniquelyReferenced_nonNull_native();
    v443 = v315;
    sub_2322B2EB4(v444, v338, v340, v341);
    v315 = v443;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v440 = (uint64_t)v282;
  if (v337 != 4)
  {
    v342 = sub_2322B8E1C();
    v344 = v343;
    v345 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v337);
    v446 = sub_23224C618(0, (unint64_t *)&qword_255FAEEA0);
    *(_QWORD *)&v445 = v345;
    sub_23224C608(&v445, v444);
    v346 = swift_isUniquelyReferenced_nonNull_native();
    v443 = v315;
    sub_2322B2EB4(v444, v342, v344, v346);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v347 = v426;
  v348 = v424;
  v349 = v425;
  v438 = v438;
  v350 = v301;
  sub_2322B8078();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v349 + 56))(v348, 1, 1, v347);
  v351 = objc_msgSend((id)objc_opt_self(), sel_localDevice);
  v352 = (void *)sub_2322B8054();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v349 + 48))(v348, 1, v347) == 1)
  {
    v353 = 0;
  }
  else
  {
    v353 = (void *)sub_2322B8054();
    (*(void (**)(char *, uint64_t))(v349 + 8))(v348, v347);
  }
  v354 = v347;
  v355 = (void *)sub_2322B8DBC();
  swift_bridgeObjectRelease();
  v356 = (void *)objc_opt_self();
  v357 = v438;
  v254 = objc_msgSend(v356, sel_prescriptionWithRightEyeSpecification_leftEyeSpecification_dateIssued_expirationDate_device_metadata_, v438, v350, v352, v353, v351, v355);

  (*(void (**)(char *, uint64_t))(v349 + 8))(v427, v354);
  (*(void (**)(char *, uint64_t))(v433 + 8))(v435, v431);
  swift_release();
  return v254;
}

uint64_t sub_23224A48C(uint64_t result, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v21;
  char v22;
  _QWORD v23[3];

  v3 = HIBYTE(a2) & 0xF;
  v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = v3;
  else
    v5 = result & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0)
        v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v6 = (unsigned __int8 *)sub_2322B92FC();
      v7 = (uint64_t)sub_23224BB20(v6, v4, 10);
      v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3)
        goto LABEL_50;
      if (v3 == 1 || (BYTE1(result) - 48) > 9u)
        goto LABEL_34;
      v7 = (BYTE1(result) - 48);
      v14 = v3 - 2;
      if (v14)
      {
        v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          v16 = *v15 - 48;
          if (v16 > 9)
            goto LABEL_34;
          v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_34;
          v7 = v17 + v16;
          if (__OFADD__(v17, v16))
            goto LABEL_34;
          v9 = 0;
          ++v15;
          if (!--v14)
            goto LABEL_37;
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            v7 = -(uint64_t)(BYTE1(result) - 48);
            v10 = v3 - 2;
            if (v10)
            {
              v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                v12 = *v11 - 48;
                if (v12 > 9)
                  goto LABEL_34;
                v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
                  goto LABEL_34;
                v7 = v13 - v12;
                if (__OFSUB__(v13, v12))
                  goto LABEL_34;
                v9 = 0;
                ++v11;
                if (!--v10)
                  goto LABEL_37;
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          v7 = 0;
          v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u)
        goto LABEL_34;
      v7 = (result - 48);
      v18 = v3 - 1;
      if (v18)
      {
        v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          v20 = *v19 - 48;
          if (v20 > 9)
            goto LABEL_34;
          v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_34;
          v7 = v21 + v20;
          if (__OFADD__(v21, v20))
            goto LABEL_34;
          v9 = 0;
          ++v19;
          if (!--v18)
            goto LABEL_37;
        }
      }
    }
LABEL_36:
    v9 = 0;
    goto LABEL_37;
  }
  v7 = (uint64_t)sub_23224AF7C(result, a2, 10);
  v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
    return 0;
  else
    return v7;
}

unint64_t sub_23224A6D8(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  unint64_t v8;
  char v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 *v23;
  unsigned int v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;

  v3 = HIBYTE(a2) & 0xF;
  v4 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = v3;
  else
    v5 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_bridgeObjectRelease();
    v21 = 0;
    LOBYTE(v20) = 1;
    return v21 | ((unint64_t)v20 << 32);
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((a1 & 0x1000000000000000) != 0)
        v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v6 = (unsigned __int8 *)sub_2322B92FC();
      v7 = sub_23224B8A0(v6, v4, 10);
      LODWORD(v8) = (_DWORD)v7;
      v27 = BYTE4(v7) & 1;
      v9 = BYTE4(v7) & 1;
      goto LABEL_38;
    }
    v26[0] = a1;
    v26[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    v10 = a1;
    if (a1 == 43)
    {
      if (v3)
      {
        if (v3 != 1)
        {
          LODWORD(v8) = (BYTE1(a1) - 48);
          if (v8 <= 9)
          {
            v15 = v3 - 2;
            if (v15)
            {
              v16 = (unsigned __int8 *)v26 + 2;
              while (1)
              {
                v17 = *v16 - 48;
                if (v17 > 9)
                  goto LABEL_35;
                v18 = 10 * v8;
                if ((v18 & 0xFFFFFFFF00000000) != 0)
                  goto LABEL_35;
                LODWORD(v8) = v18 + v17;
                if (__CFADD__((_DWORD)v18, v17))
                  goto LABEL_35;
                v9 = 0;
                ++v16;
                if (!--v15)
                  goto LABEL_38;
              }
            }
            goto LABEL_37;
          }
        }
        goto LABEL_35;
      }
    }
    else
    {
      if (a1 != 45)
      {
        if (v3)
        {
          LODWORD(v8) = (a1 - 48);
          if (v8 <= 9)
          {
            v19 = v3 - 1;
            if (v19)
            {
              v23 = (unsigned __int8 *)v26 + 1;
              while (1)
              {
                v24 = *v23 - 48;
                if (v24 > 9)
                  goto LABEL_35;
                v25 = 10 * v8;
                if ((v25 & 0xFFFFFFFF00000000) != 0)
                  goto LABEL_35;
                LODWORD(v8) = v25 + v24;
                if (__CFADD__((_DWORD)v25, v24))
                  goto LABEL_35;
                v9 = 0;
                ++v23;
                if (!--v19)
                  goto LABEL_38;
              }
            }
            goto LABEL_37;
          }
        }
        goto LABEL_35;
      }
      if (v3)
      {
        if (v3 != 1 && (BYTE1(a1) - 48) <= 9u)
        {
          v10 = 0;
          LODWORD(v8) = -(BYTE1(a1) - 48);
          if (BYTE1(a1) == 48)
          {
            v11 = v3 - 2;
            if (v11)
            {
              v12 = (unsigned __int8 *)v26 + 2;
              while (1)
              {
                v13 = *v12 - 48;
                if (v13 > 9)
                  goto LABEL_35;
                v14 = 10 * v8;
                if ((v14 & 0xFFFFFFFF00000000) != 0)
                  goto LABEL_35;
                LODWORD(v8) = v14 - v13;
                if (v14 < v13)
                  goto LABEL_35;
                v9 = 0;
                ++v12;
                if (!--v11)
                  goto LABEL_38;
              }
            }
LABEL_37:
            v9 = 0;
            goto LABEL_38;
          }
LABEL_53:
          v9 = 1;
          LODWORD(v8) = v10;
          goto LABEL_38;
        }
LABEL_35:
        LODWORD(v8) = 0;
        v9 = 1;
LABEL_38:
        swift_bridgeObjectRelease();
        LODWORD(v20) = v9 & 1;
        goto LABEL_39;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_53;
  }
  v8 = sub_23224AE98(a1, a2, 10);
  swift_bridgeObjectRelease();
  v20 = HIDWORD(v8) & 1;
LABEL_39:
  v21 = v8;
  if ((_DWORD)v20)
    v21 = 0;
  return v21 | ((unint64_t)v20 << 32);
}

uint64_t sub_23224A934(uint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  int v21;
  uint64_t v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  unsigned __int8 *v26;
  unsigned int v27;
  char v28;
  int v29;
  unsigned __int8 v30;
  unsigned __int8 v31;
  unsigned __int8 v32;
  unsigned __int8 *v33;
  unsigned int v34;
  char v35;
  int v36;
  _QWORD v37[3];

  if (a3 - 37 < 0xFFFFFFFFFFFFFFDDLL)
  {
    __break(1u);
LABEL_75:
    swift_bridgeObjectRelease();
    v12 = 0;
    v11 = 1;
    return v12 | (v11 << 16);
  }
  v4 = HIBYTE(a2) & 0xF;
  v5 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v6 = v4;
  else
    v6 = result & 0xFFFFFFFFFFFFLL;
  if (!v6)
    goto LABEL_75;
  if ((a2 & 0x1000000000000000) != 0)
  {
    v10 = sub_23224B060(result, a2, a3);
    swift_bridgeObjectRelease();
    v11 = HIWORD(v10) & 1;
LABEL_12:
    v12 = (unsigned __int16)v10;
    if (v11)
      v12 = 0;
    return v12 | (v11 << 16);
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v8 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v8 = (unsigned __int8 *)sub_2322B92FC();
    v9 = sub_23224B13C(v8, v5, a3);
    LOWORD(v10) = v9;
    v11 = HIWORD(v9) & 1;
    goto LABEL_11;
  }
  v37[0] = result;
  v37[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v4)
    {
      v22 = v4 - 1;
      if (v22)
      {
        LOWORD(v14) = 0;
        v23 = a3 + 48;
        v24 = a3 + 55;
        v25 = a3 + 87;
        if (a3 > 0xA)
        {
          v23 = 58;
        }
        else
        {
          v25 = 97;
          v24 = 65;
        }
        v26 = (unsigned __int8 *)v37 + 1;
        v11 = 1;
        do
        {
          v27 = *v26;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              LOWORD(v10) = 0;
              if (v27 < 0x61 || v27 >= v25)
                goto LABEL_11;
              v28 = -87;
            }
            else
            {
              v28 = -55;
            }
          }
          else
          {
            v28 = -48;
          }
          v29 = (unsigned __int16)v14 * (unsigned __int16)a3;
          if ((v29 & 0xFFFF0000) != 0)
            goto LABEL_73;
          v14 = (unsigned __int16)v29 + (v27 + v28);
          if ((v14 & 0x10000) != 0)
            goto LABEL_73;
          ++v26;
          --v22;
        }
        while (v22);
LABEL_72:
        v11 = 0;
        LOWORD(v10) = v14;
        goto LABEL_11;
      }
      goto LABEL_73;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v4)
      {
        LOWORD(v14) = 0;
        v30 = a3 + 48;
        v31 = a3 + 55;
        v32 = a3 + 87;
        if (a3 > 0xA)
        {
          v30 = 58;
        }
        else
        {
          v32 = 97;
          v31 = 65;
        }
        v33 = (unsigned __int8 *)v37;
        v11 = 1;
        while (1)
        {
          v34 = *v33;
          if (v34 < 0x30 || v34 >= v30)
          {
            if (v34 < 0x41 || v34 >= v31)
            {
              LOWORD(v10) = 0;
              if (v34 < 0x61 || v34 >= v32)
                goto LABEL_11;
              v35 = -87;
            }
            else
            {
              v35 = -55;
            }
          }
          else
          {
            v35 = -48;
          }
          v36 = (unsigned __int16)v14 * (unsigned __int16)a3;
          if ((v36 & 0xFFFF0000) != 0)
            goto LABEL_73;
          v14 = (unsigned __int16)v36 + (v34 + v35);
          if ((v14 & 0x10000) != 0)
            goto LABEL_73;
          ++v33;
          if (!--v4)
            goto LABEL_72;
        }
      }
      goto LABEL_73;
    }
    if (v4)
    {
      v13 = v4 - 1;
      if (v13)
      {
        LOWORD(v14) = 0;
        v15 = a3 + 48;
        v16 = a3 + 55;
        v17 = a3 + 87;
        if (a3 > 0xA)
        {
          v15 = 58;
        }
        else
        {
          v17 = 97;
          v16 = 65;
        }
        v18 = (unsigned __int8 *)v37 + 1;
        v11 = 1;
        while (1)
        {
          v19 = *v18;
          if (v19 < 0x30 || v19 >= v15)
          {
            if (v19 < 0x41 || v19 >= v16)
            {
              LOWORD(v10) = 0;
              if (v19 < 0x61 || v19 >= v17)
                goto LABEL_11;
              v20 = -87;
            }
            else
            {
              v20 = -55;
            }
          }
          else
          {
            v20 = -48;
          }
          v21 = (unsigned __int16)v14 * (unsigned __int16)a3;
          if ((v21 & 0xFFFF0000) != 0)
            break;
          v14 = (unsigned __int16)v21 - (v19 + v20);
          if ((v14 & 0xFFFF0000) != 0)
            break;
          ++v18;
          if (!--v13)
            goto LABEL_72;
        }
      }
LABEL_73:
      LOWORD(v10) = 0;
      v11 = 1;
LABEL_11:
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for VisionPrescriptionURLDecoder()
{
  return objc_opt_self();
}

uint64_t sub_23224ACAC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_23224AE20(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_2322B92D8();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_2322B9344();
      __break(1u);
LABEL_10:
      v2 = sub_2322B8EB8();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_2322B93A4();
    __break(1u);
LABEL_14:
    result = sub_2322B9344();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_23224AE20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_23224C6D0(0, (unint64_t *)&qword_255FABCE0, MEMORY[0x24BEE4260], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v4 = (_QWORD *)swift_allocObject();
  v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_23224AE98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_2322B8F00();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_23224B3E4();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_2322B92FC();
  }
LABEL_7:
  v11 = sub_23224B8A0(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11 | ((((unint64_t)v11 >> 32) & 1) << 32);
}

unsigned __int8 *sub_23224AF7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_2322B8F00();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_23224B3E4();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_2322B92FC();
  }
LABEL_7:
  v11 = sub_23224BB20(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_23224B060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned int v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_2322B8F00();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_23224B3E4();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_2322B92FC();
  }
LABEL_7:
  v11 = sub_23224B13C(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11 & 0x1FFFF;
}

unsigned __int8 *sub_23224B13C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  int v8;
  unsigned __int8 *v9;
  unsigned int v10;
  char v11;
  unsigned __int16 v12;
  int v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  unsigned __int8 v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  int v24;
  unsigned int v25;
  char v26;

  v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      v14 = a2 - 1;
      if (a2 != 1)
      {
        v15 = a3 + 87;
        if (a3 > 10)
        {
          v16 = a3 + 55;
        }
        else
        {
          v15 = 97;
          v16 = 65;
        }
        if (a3 <= 10)
          v17 = a3 + 48;
        else
          v17 = 58;
        if (result)
        {
          LOWORD(v8) = 0;
          v18 = result + 1;
          do
          {
            v19 = *v18;
            if (v19 < 0x30 || v19 >= v17)
            {
              if (v19 < 0x41 || v19 >= v16)
              {
                v12 = 0;
                v13 = 1;
                if (v19 < 0x61 || v19 >= v15)
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                v20 = -87;
              }
              else
              {
                v20 = -55;
              }
            }
            else
            {
              v20 = -48;
            }
            if ((((unsigned __int16)v8 * (unsigned __int16)a3) & 0xFFFF0000) != 0)
              goto LABEL_72;
            v8 = (unsigned __int16)(v8 * a3) + (v19 + v20);
            if ((v8 & 0x10000) != 0)
              goto LABEL_72;
            ++v18;
            --v14;
          }
          while (v14);
LABEL_48:
          v13 = 0;
          v12 = v8;
          return (unsigned __int8 *)(v12 | (v13 << 16));
        }
        goto LABEL_71;
      }
LABEL_72:
      v12 = 0;
      v13 = 1;
      return (unsigned __int8 *)(v12 | (v13 << 16));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        v21 = a3 + 87;
        if (a3 > 10)
        {
          v22 = a3 + 55;
        }
        else
        {
          v21 = 97;
          v22 = 65;
        }
        if (a3 <= 10)
          v23 = a3 + 48;
        else
          v23 = 58;
        if (result)
        {
          LOWORD(v24) = 0;
          do
          {
            v25 = *result;
            if (v25 < 0x30 || v25 >= v23)
            {
              if (v25 < 0x41 || v25 >= v22)
              {
                v12 = 0;
                v13 = 1;
                if (v25 < 0x61 || v25 >= v21)
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                v26 = -87;
              }
              else
              {
                v26 = -55;
              }
            }
            else
            {
              v26 = -48;
            }
            if ((((unsigned __int16)v24 * (unsigned __int16)a3) & 0xFFFF0000) != 0)
              goto LABEL_72;
            v24 = (unsigned __int16)(v24 * a3) + (v25 + v26);
            if ((v24 & 0x10000) != 0)
              goto LABEL_72;
            ++result;
            --a2;
          }
          while (a2);
          v13 = 0;
          v12 = v24;
          return (unsigned __int8 *)(v12 | (v13 << 16));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      v4 = a2 - 1;
      if (a2 != 1)
      {
        v5 = a3 + 87;
        if (a3 > 10)
        {
          v6 = a3 + 55;
        }
        else
        {
          v5 = 97;
          v6 = 65;
        }
        if (a3 <= 10)
          v7 = a3 + 48;
        else
          v7 = 58;
        if (result)
        {
          LOWORD(v8) = 0;
          v9 = result + 1;
          while (1)
          {
            v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                v12 = 0;
                v13 = 1;
                if (v10 < 0x61 || v10 >= v5)
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                v11 = -87;
              }
              else
              {
                v11 = -55;
              }
            }
            else
            {
              v11 = -48;
            }
            if ((((unsigned __int16)v8 * (unsigned __int16)a3) & 0xFFFF0000) != 0)
              goto LABEL_72;
            v8 = (unsigned __int16)(v8 * a3) - (v10 + v11);
            if ((v8 & 0xFFFF0000) != 0)
              goto LABEL_72;
            ++v9;
            if (!--v4)
              goto LABEL_48;
          }
        }
LABEL_71:
        v12 = 0;
        v13 = 0;
        return (unsigned __int8 *)(v12 | (v13 << 16));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_23224B3E4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_2322B8F0C();
  v4 = sub_23224B460(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_23224B460(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_23224B5A4(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_23224AE20(v9, 0);
      v12 = sub_23224B690((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    v13 = MEMORY[0x234900588](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x234900588);
LABEL_9:
      sub_2322B92FC();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x234900588]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_23224B5A4(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_23229EF6C(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_23229EF6C(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_2322B8EDC();
  }
  __break(1u);
  return result;
}

unint64_t sub_23224B690(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_23229EF6C(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_2322B8EE8();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_2322B92FC();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_23229EF6C(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_2322B8EC4();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unsigned __int8 *sub_23224B8A0(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned int v8;
  unsigned __int8 *v9;
  unsigned int v10;
  char v11;
  unsigned int v12;
  unsigned __int8 v13;
  unint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 *v20;
  unsigned int v21;
  char v22;
  unint64_t v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unsigned int v28;
  unsigned int v29;
  char v30;
  unint64_t v31;
  unsigned __int8 v32;

  v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      v16 = a2 - 1;
      if (a2 != 1)
      {
        v17 = a3 + 87;
        if (a3 > 10)
        {
          v18 = a3 + 55;
        }
        else
        {
          v17 = 97;
          v18 = 65;
        }
        if (a3 <= 10)
          v19 = a3 + 48;
        else
          v19 = 58;
        if (result)
        {
          v8 = 0;
          v20 = result + 1;
          do
          {
            v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                v12 = 0;
                v13 = 1;
                if (v21 < 0x61 || v21 >= v17)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v22 = -87;
              }
              else
              {
                v22 = -55;
              }
            }
            else
            {
              v22 = -48;
            }
            v23 = v8 * (unint64_t)a3;
            if ((v23 & 0xFFFFFFFF00000000) != 0)
              goto LABEL_72;
            v24 = v21 + v22;
            v8 = v23 + v24;
            if (__CFADD__((_DWORD)v23, v24))
              goto LABEL_72;
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          v13 = 0;
          v12 = v8;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
LABEL_72:
      v12 = 0;
      v13 = 1;
      return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        v25 = a3 + 87;
        if (a3 > 10)
        {
          v26 = a3 + 55;
        }
        else
        {
          v25 = 97;
          v26 = 65;
        }
        if (a3 <= 10)
          v27 = a3 + 48;
        else
          v27 = 58;
        if (result)
        {
          v28 = 0;
          do
          {
            v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                v12 = 0;
                v13 = 1;
                if (v29 < 0x61 || v29 >= v25)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v30 = -87;
              }
              else
              {
                v30 = -55;
              }
            }
            else
            {
              v30 = -48;
            }
            v31 = v28 * (unint64_t)a3;
            if ((v31 & 0xFFFFFFFF00000000) != 0)
              goto LABEL_72;
            v32 = v29 + v30;
            v28 = v31 + v32;
            if (__CFADD__((_DWORD)v31, v32))
              goto LABEL_72;
            ++result;
            --a2;
          }
          while (a2);
          v13 = 0;
          v12 = v28;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      v4 = a2 - 1;
      if (a2 != 1)
      {
        v5 = a3 + 87;
        if (a3 > 10)
        {
          v6 = a3 + 55;
        }
        else
        {
          v5 = 97;
          v6 = 65;
        }
        if (a3 <= 10)
          v7 = a3 + 48;
        else
          v7 = 58;
        if (result)
        {
          v8 = 0;
          v9 = result + 1;
          while (1)
          {
            v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                v12 = 0;
                v13 = 1;
                if (v10 < 0x61 || v10 >= v5)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v11 = -87;
              }
              else
              {
                v11 = -55;
              }
            }
            else
            {
              v11 = -48;
            }
            v14 = v8 * (unint64_t)a3;
            if ((v14 & 0xFFFFFFFF00000000) != 0)
              goto LABEL_72;
            v15 = v10 + v11;
            v8 = v14 - v15;
            if (v14 < v15)
              goto LABEL_72;
            ++v9;
            if (!--v4)
              goto LABEL_48;
          }
        }
LABEL_71:
        v12 = 0;
        v13 = 0;
        return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_23224BB20(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_23224BD9C(void (*a1)(char *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  char v7;
  char v9;
  _QWORD v10[2];
  char v11;

  if ((a4 & 0x1000000000000000) != 0 || !(a4 & 0x2000000000000000 | a3 & 0x1000000000000000))
  {
    sub_2322B92C0();
    if (!v4)
      v7 = v11;
  }
  else if ((a4 & 0x2000000000000000) != 0)
  {
    v10[0] = a3;
    v10[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    a1(&v9, v10);
    if (!v4)
      v7 = v9;
  }
  else
  {
    if ((a3 & 0x1000000000000000) != 0)
      v6 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
    else
      v6 = sub_2322B92FC();
    a1((char *)v10, (_QWORD *)v6);
    if (!v4)
      v7 = v10[0];
  }
  return v7 & 1;
}

void sub_23224BE78(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_23224BED0(uint64_t a1)
{
  uint64_t v2;

  sub_23224BE78(0, &qword_255FABC70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBB78], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23224BF24()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23224BF48(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_2322B8E94();
    return sub_2322B8F0C();
  }
  return result;
}

uint64_t sub_23224BFD0(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char *v10;
  char v11;
  unsigned int v12;
  int v13;

  swift_bridgeObjectRetain();
  v4 = sub_23224ACAC(a1, a2);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v6 = (*(_BYTE *)(v4 + 32) ^ ~((~*(unsigned __int8 *)(v4 + 32) & 0xF0u) >> 4));
    v7 = (v6 << 12) ^ (32 * v6) ^ 0xFFFFFF00 ^ v6;
    v8 = v5 - 1;
    if (v8)
    {
      v9 = (unsigned __int16)(((_WORD)v6 << 12) ^ (32 * v6) ^ 0xFF00) >> 8;
      v10 = (char *)(v4 + 33);
      do
      {
        v11 = *v10++;
        v12 = (v11 ^ v9 ^ (((v11 ^ v9) & 0xF0) >> 4));
        v13 = (v12 << 12) ^ ((_DWORD)v7 << 8) ^ (32 * v12);
        v7 = v13 ^ v12;
        v9 = BYTE1(v13);
        --v8;
      }
      while (v8);
    }
  }
  else
  {
    v7 = 0xFFFFLL;
  }
  swift_release();
  return v7;
}

uint64_t sub_23224C090()
{
  return swift_deallocObject();
}

uint64_t sub_23224C0A0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_23224C0A8()
{
  return swift_deallocObject();
}

uint64_t sub_23224C0B8()
{
  uint64_t v0;

  return *(unsigned __int16 *)(v0 + 16);
}

uint64_t sub_23224C0C0()
{
  return swift_deallocObject();
}

uint64_t sub_23224C0D0()
{
  return swift_deallocObject();
}

_BYTE **sub_23224C0E0(_BYTE **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_232267304(a1, a2, a3, *(_BYTE *)(v3 + 16));
}

uint64_t sub_23224C0E8()
{
  return swift_deallocObject();
}

uint64_t sub_23224C0F8()
{
  uint64_t v0;

  return sub_232266DEC(*(void (**)(void))(v0 + 16));
}

uint64_t sub_23224C100()
{
  uint64_t v0;

  return sub_232266E10(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_23224C108(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  return sub_232266E30(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_23224C110()
{
  return swift_deallocObject();
}

uint64_t sub_23224C120()
{
  return swift_deallocObject();
}

uint64_t sub_23224C130@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_23224C15C()
{
  return swift_deallocObject();
}

uint64_t sub_23224C16C()
{
  return swift_deallocObject();
}

uint64_t sub_23224C17C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  (*(void (**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  v3 = *a1 + 2;
  result = sub_2322B923C();
  *a1 = v3;
  return result;
}

unint64_t sub_23224C1D4()
{
  unint64_t result;

  result = qword_255FABC80;
  if (!qword_255FABC80)
  {
    sub_23224C6D0(255, &qword_255FABC88, MEMORY[0x24BEE4260], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C28]);
    sub_23224BE78(255, &qword_255FABC90, (uint64_t (*)(uint64_t))sub_23224C280, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    sub_23224C340();
    result = swift_getFunctionTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255FABC80);
  }
  return result;
}

void sub_23224C280()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FABC98)
  {
    sub_23224C2EC(255, (unint64_t *)&qword_255FABCA0, (unint64_t *)&qword_255FAF9C0);
    v0 = sub_2322B920C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FABC98);
  }
}

void sub_23224C2EC(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_23224C618(255, a3);
    v4 = sub_2322B9224();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_23224C340()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FABCA8)
  {
    sub_23224C6D0(255, &qword_255FABCB0, MEMORY[0x24BEE4AD8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C28]);
    v0 = sub_2322B9224();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FABCA8);
  }
}

uint64_t sub_23224C3B0()
{
  return swift_deallocObject();
}

void *sub_23224C3C0()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

void *sub_23224C3E4()
{
  uint64_t v0;
  void *v1;
  id v2;

  swift_beginAccess();
  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

uint64_t sub_23224C424()
{
  sub_23224C2EC(0, &qword_255FABCD8, (unint64_t *)&qword_255FABCC8);
  return sub_2322B9218();
}

uint64_t sub_23224C474()
{
  return swift_deallocObject();
}

uint64_t sub_23224C484()
{
  return swift_deallocObject();
}

uint64_t sub_23224C494()
{
  return swift_deallocObject();
}

uint64_t sub_23224C4A4()
{
  return swift_deallocObject();
}

uint64_t sub_23224C4B4()
{
  swift_release();
  return swift_deallocObject();
}

void sub_23224C4D8(uint64_t *a1, _QWORD **a2, uint64_t a3)
{
  uint64_t v3;

  sub_2322B75A8(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_23224C4E0()
{
  return swift_deallocObject();
}

uint64_t sub_23224C4F0()
{
  return swift_deallocObject();
}

uint64_t sub_23224C500()
{
  return swift_deallocObject();
}

uint64_t sub_23224C510()
{
  return swift_deallocObject();
}

uint64_t sub_23224C520()
{
  return swift_deallocObject();
}

uint64_t sub_23224C530()
{
  return swift_deallocObject();
}

uint64_t sub_23224C540()
{
  return swift_deallocObject();
}

uint64_t sub_23224C550()
{
  return swift_deallocObject();
}

uint64_t sub_23224C560()
{
  return swift_deallocObject();
}

uint64_t sub_23224C570()
{
  return swift_deallocObject();
}

uint64_t sub_23224C580()
{
  return swift_deallocObject();
}

uint64_t sub_23224C590()
{
  return swift_deallocObject();
}

void sub_23224C5A0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255FABCC0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255FABCC0);
  }
}

_OWORD *sub_23224C608(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_23224C618(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

_BYTE *sub_23224C650@<X0>(_BYTE *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_23224C664(a1, a2);
}

_BYTE *sub_23224C664@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v3 = *result;
  v4 = v3 > 0x20;
  v5 = (1 << v3) & 0x100003E01;
  v6 = v4 || v5 == 0;
  v7 = v6 && (result = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

void sub_23224C6D0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = a4(0, a3);
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t type metadata accessor for VisionPrescriptionFieldCell(uint64_t a1)
{
  return sub_23224E434(a1, (uint64_t *)&unk_255FABD10);
}

uint64_t sub_23224C7AC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_23224C808(char a1)
{
  uint64_t result;

  result = 0;
  switch(a1)
  {
    case 0:
      if (qword_255FAB900 != -1)
        goto LABEL_22;
      goto LABEL_21;
    case 1:
      if (qword_255FAB900 == -1)
        goto LABEL_21;
      goto LABEL_22;
    case 2:
      if (qword_255FAB900 == -1)
        goto LABEL_21;
      goto LABEL_22;
    case 3:
      if (qword_255FAB900 == -1)
        goto LABEL_21;
      goto LABEL_22;
    case 4:
      if (qword_255FAB900 == -1)
        goto LABEL_21;
      goto LABEL_22;
    case 6:
      if (qword_255FAB900 == -1)
        goto LABEL_21;
      goto LABEL_22;
    case 11:
      if (qword_255FAB900 == -1)
        goto LABEL_21;
      goto LABEL_22;
    case 12:
      if (qword_255FAB900 == -1)
        goto LABEL_21;
      goto LABEL_22;
    case 13:
      if (qword_255FAB900 == -1)
        goto LABEL_21;
      goto LABEL_22;
    case 14:
      if (qword_255FAB900 == -1)
        goto LABEL_21;
LABEL_22:
      swift_once();
LABEL_21:
      result = sub_2322B7F58();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_23224CB94(uint64_t a1, unsigned __int8 a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if ((a1 & 0x100000000) != 0)
    return 0;
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16F0]), sel_init);
  v4 = v3;
  v5 = 2;
  switch(a2)
  {
    case 0u:
    case 1u:
    case 3u:
      goto LABEL_6;
    case 0xBu:
    case 0xCu:
      objc_msgSend(v3, sel_setMinimumFractionDigits_, 1);
      v6 = 2;
      break;
    case 0xDu:
    case 0xEu:
      v6 = 1;
      objc_msgSend(v3, sel_setMinimumFractionDigits_, 1);
      break;
    default:
      v5 = 0;
LABEL_6:
      objc_msgSend(v3, sel_setMinimumFractionDigits_, v5);
      if (a2 > 0xEu)
        v6 = 0;
      else
        v6 = qword_2322C0DD8[(char)a2];
      break;
  }
  objc_msgSend(v4, sel_setMaximumFractionDigits_, v6);
  v7 = (void *)sub_2322B8F78();
  v8 = objc_msgSend(v4, sel_stringFromNumber_, v7);

  if (!v8)
    return 0;
  v9 = sub_2322B8E1C();
  v11 = v10;

  if (a2 - 7 < 8 || a2 == 4)
  {
    sub_23225B330(a2);
    if (v12)
    {
      v13 = v12;
      if (qword_255FAB900 != -1)
        swift_once();
      sub_2322B7F58();
      sub_23224EBB4(0, (unint64_t *)&qword_255FADB70, (unint64_t *)&qword_255FAF820, MEMORY[0x24BEE45D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_2322C0E50;
      v15 = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v14 + 56) = MEMORY[0x24BEE0D00];
      v16 = sub_23224EC60();
      *(_QWORD *)(v14 + 64) = v16;
      *(_QWORD *)(v14 + 32) = v9;
      *(_QWORD *)(v14 + 40) = v11;
      v17 = objc_msgSend(v13, sel_unitString, 0xE000000000000000);
      v18 = sub_2322B8E1C();
      v20 = v19;

      *(_QWORD *)(v14 + 96) = v15;
      *(_QWORD *)(v14 + 104) = v16;
      *(_QWORD *)(v14 + 72) = v18;
      *(_QWORD *)(v14 + 80) = v20;
      v9 = sub_2322B8DF8();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return v9;
}

char *sub_23224CEC8(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  char *v10;
  uint64_t v11;
  id v12;
  char *v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  id v22;
  void *v23;
  char *v24;
  void *v25;
  objc_super v27;

  v5 = v4;
  v10 = &v4[qword_255FABCE8];
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((_QWORD *)v10 + 4) = 0;
  v11 = qword_255FABCF0;
  v12 = objc_allocWithZone(MEMORY[0x24BEBD708]);
  v13 = v5;
  v14 = objc_msgSend(v12, sel_init);
  objc_msgSend(v14, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_23224C618(0, (unint64_t *)&unk_255FACCD0);
  v15 = (void *)sub_2322B9128();
  objc_msgSend(v14, sel_setFont_, v15);

  objc_msgSend(v14, sel_setTextAlignment_, 4);
  objc_msgSend(v14, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v14, sel_setNumberOfLines_, 0);
  *(_QWORD *)&v5[v11] = v14;
  v16 = qword_255FABCF8;
  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB00]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v17, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v13[v16] = v17;
  v18 = qword_255FABD00;
  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  objc_msgSend(v19, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v20 = (void *)sub_2322B9128();
  objc_msgSend(v19, sel_setFont_, v20);

  objc_msgSend(v19, sel_setTextAlignment_, 4);
  objc_msgSend(v19, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v19, sel_setNumberOfLines_, 0);
  *(_QWORD *)&v13[v18] = v19;
  v21 = qword_255FABD08;
  v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  objc_msgSend(v22, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v23 = (void *)sub_2322B9128();
  objc_msgSend(v22, sel_setFont_, v23);

  objc_msgSend(v22, sel_setTextAlignment_, 4);
  objc_msgSend(v22, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v22, sel_setNumberOfLines_, 0);
  *(_QWORD *)&v13[v21] = v22;

  v27.receiver = v13;
  v27.super_class = (Class)type metadata accessor for VisionPrescriptionFieldCell(0);
  v24 = (char *)objc_msgSendSuper2(&v27, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v24, sel_setUserInteractionEnabled_, 0);
  objc_msgSend(v24, sel_addSubview_, *(_QWORD *)&v24[qword_255FABCF0]);
  v25 = *(void **)&v24[qword_255FABCF8];
  objc_msgSend(v24, sel_addSubview_, v25);
  objc_msgSend(v25, sel_addSubview_, *(_QWORD *)&v24[qword_255FABD00]);
  objc_msgSend(v25, sel_addSubview_, *(_QWORD *)&v24[qword_255FABD08]);
  sub_23224D2D0();

  return v24;
}

char *sub_23224D28C(double a1, double a2, double a3, double a4)
{
  return sub_23224CEC8(a1, a2, a3, a4);
}

void sub_23224D2AC(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_23224E660();
}

void sub_23224D2D0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  void *v52;
  id v53;

  v1 = v0;
  v52 = (void *)objc_opt_self();
  sub_23224ECA4();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_2322C0E60;
  v3 = *(void **)&v1[qword_255FABCF0];
  v4 = objc_msgSend(v3, sel_topAnchor);
  v5 = objc_msgSend(v1, (SEL)&stru_2501196F0.name + 4);
  v6 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v5, 9.0);

  *(_QWORD *)(v2 + 32) = v6;
  v7 = objc_msgSend(v3, sel_leadingAnchor);
  v8 = objc_msgSend(v1, (SEL)&off_250119130 + 6);
  v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_constant_, v8, 16.0);

  *(_QWORD *)(v2 + 40) = v9;
  v10 = objc_msgSend(v1, sel_trailingAnchor);
  v11 = objc_msgSend(v3, sel_trailingAnchor);
  v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_constant_, v11, 16.0);

  *(_QWORD *)(v2 + 48) = v12;
  v13 = *(void **)&v1[qword_255FABCF8];
  v14 = objc_msgSend(v13, (SEL)&stru_2501196F0.name + 4);
  v15 = objc_msgSend(v3, sel_bottomAnchor);
  v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

  *(_QWORD *)(v2 + 56) = v16;
  v17 = objc_msgSend(v13, (SEL)&off_250119130 + 6);
  v18 = objc_msgSend(v1, (SEL)&off_250119130 + 6);
  v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v18, 16.0);

  *(_QWORD *)(v2 + 64) = v19;
  v20 = objc_msgSend(v1, sel_trailingAnchor);
  v21 = objc_msgSend(v13, sel_trailingAnchor);
  v22 = objc_msgSend(v20, sel_constraintEqualToAnchor_constant_, v21, 16.0);

  *(_QWORD *)(v2 + 72) = v22;
  v23 = objc_msgSend(v1, sel_bottomAnchor);
  v24 = objc_msgSend(v13, sel_bottomAnchor);
  v25 = objc_msgSend(v23, sel_constraintEqualToAnchor_constant_, v24, 9.0);

  *(_QWORD *)(v2 + 80) = v25;
  v26 = *(void **)&v1[qword_255FABD08];
  v27 = objc_msgSend(v26, (SEL)&off_250119130 + 6);
  v28 = objc_msgSend(v13, (SEL)&off_250119130 + 6);
  v29 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v28);

  *(_QWORD *)(v2 + 88) = v29;
  v30 = objc_msgSend(v1, sel_centerXAnchor);
  v31 = objc_msgSend(v26, sel_trailingAnchor);
  v32 = objc_msgSend(v30, sel_constraintEqualToAnchor_constant_, v31, 8.0);

  *(_QWORD *)(v2 + 96) = v32;
  v33 = objc_msgSend(v26, sel_topAnchor);
  v34 = objc_msgSend(v13, sel_topAnchor);
  v35 = objc_msgSend(v33, sel_constraintEqualToAnchor_, v34);

  *(_QWORD *)(v2 + 104) = v35;
  v36 = objc_msgSend(v26, sel_bottomAnchor);
  v37 = objc_msgSend(v13, sel_bottomAnchor);
  v38 = objc_msgSend(v36, sel_constraintEqualToAnchor_, v37);

  *(_QWORD *)(v2 + 112) = v38;
  v39 = *(void **)&v1[qword_255FABD00];
  v40 = objc_msgSend(v39, sel_leadingAnchor);
  v41 = objc_msgSend(v1, sel_centerXAnchor);
  v42 = objc_msgSend(v40, sel_constraintEqualToAnchor_constant_, v41, 8.0);

  *(_QWORD *)(v2 + 120) = v42;
  v43 = objc_msgSend(v39, sel_trailingAnchor);
  v44 = objc_msgSend(v13, sel_trailingAnchor);
  v45 = objc_msgSend(v43, sel_constraintEqualToAnchor_, v44);

  *(_QWORD *)(v2 + 128) = v45;
  v46 = objc_msgSend(v39, sel_topAnchor);
  v47 = objc_msgSend(v13, sel_topAnchor);
  v48 = objc_msgSend(v46, sel_constraintEqualToAnchor_, v47);

  *(_QWORD *)(v2 + 136) = v48;
  v49 = objc_msgSend(v39, sel_bottomAnchor);
  v50 = objc_msgSend(v13, sel_bottomAnchor);
  v51 = objc_msgSend(v49, sel_constraintEqualToAnchor_, v50);

  *(_QWORD *)(v2 + 144) = v51;
  sub_2322B8F3C();
  sub_23224C618(0, (unint64_t *)&qword_255FABD30);
  v53 = (id)sub_2322B8F24();
  swift_bridgeObjectRelease();
  objc_msgSend(v52, sel_activateConstraints_, v53);

}

uint64_t sub_23224D958()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  _BYTE v16[24];
  uint64_t v17;

  v1 = v0 + qword_255FABCE8;
  swift_beginAccess();
  sub_23224E5FC(v1, (uint64_t)v16);
  if (!v17)
    return sub_23224E5A0((uint64_t)v16);
  sub_23224EC14(0, (unint64_t *)&qword_255FABD20);
  type metadata accessor for VisionPrescriptionFieldItem(0);
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v3 = *(void **)(v0 + qword_255FABCF0);
    swift_bridgeObjectRetain();
    v4 = (void *)sub_2322B8DEC();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setText_, v4);

    if (*(_QWORD *)(v15 + OBJC_IVAR____TtC21VisionHealthAppPlugin27VisionPrescriptionFieldItem_leftValueString + 8))
    {
      v5 = *(void **)(v0 + qword_255FABD00);
      swift_bridgeObjectRetain();
      v6 = (void *)sub_2322B8DEC();
      swift_bridgeObjectRelease();
      objc_msgSend(v5, sel_setText_, v6);

      v7 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
      objc_msgSend(v5, sel_setTextColor_, v7);
    }
    else
    {
      v8 = *(void **)(v0 + qword_255FABD00);
      if (qword_255FAB900 != -1)
        swift_once();
      sub_2322B7F58();
      v9 = (void *)sub_2322B8DEC();
      swift_bridgeObjectRelease();
      objc_msgSend(v8, sel_setText_, v9, 0xE000000000000000);

      v7 = objc_msgSend((id)objc_opt_self(), sel_tertiaryLabelColor);
      objc_msgSend(v8, sel_setTextColor_, v7);
    }

    if (*(_QWORD *)(v15 + OBJC_IVAR____TtC21VisionHealthAppPlugin27VisionPrescriptionFieldItem_rightValueString + 8))
    {
      v10 = *(void **)(v0 + qword_255FABD08);
      swift_bridgeObjectRetain();
      v11 = (void *)sub_2322B8DEC();
      swift_bridgeObjectRelease();
      objc_msgSend(v10, sel_setText_, v11);

      v12 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    }
    else
    {
      v10 = *(void **)(v0 + qword_255FABD08);
      if (qword_255FAB900 != -1)
        swift_once();
      sub_2322B7F58();
      v13 = (void *)sub_2322B8DEC();
      swift_bridgeObjectRelease();
      objc_msgSend(v10, sel_setText_, v13, 0xE000000000000000);

      v12 = objc_msgSend((id)objc_opt_self(), sel_tertiaryLabelColor);
    }
    v14 = v12;
    objc_msgSend(v10, sel_setTextColor_, v14);

    return swift_release();
  }
  return result;
}

void sub_23224DD3C()
{
  uint64_t v0;

  sub_23224E5A0(v0 + qword_255FABCE8);

}

id sub_23224DD98()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionFieldCell(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_23224DDCC(uint64_t a1)
{
  sub_23224E5A0(a1 + qword_255FABCE8);

}

uint64_t sub_23224DE34()
{
  return type metadata accessor for VisionPrescriptionFieldCell(0);
}

uint64_t sub_23224DE40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + qword_255FABCE8;
  swift_beginAccess();
  return sub_23224E5FC(v3, a1);
}

uint64_t sub_23224DE90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + qword_255FABCE8;
  swift_beginAccess();
  sub_23224E53C(a1, v3);
  swift_endAccess();
  sub_23224D958();
  return sub_23224E5A0(a1);
}

uint64_t (*sub_23224DEFC(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_23224DF44;
}

uint64_t sub_23224DF44(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_23224D958();
  return result;
}

uint64_t sub_23224DF74()
{
  uint64_t v1;

  v1 = sub_2322B9464();
  sub_2322B8EAC();
  sub_2322B8090();
  sub_2322B8EAC();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_23224DFE0(char a1)
{
  void *v1;
  char **v2;
  char **v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = &selRef_horizontalAmount;
  if ((a1 & 1) != 0)
  {
    v3 = &selRef_horizontalBase;
  }
  else
  {
    v2 = &selRef_verticalAmount;
    v3 = &selRef_verticalBase;
  }
  v4 = objc_msgSend(v1, *v2);
  v5 = objc_msgSend(v1, *v3);
  v6 = objc_msgSend((id)objc_opt_self(), sel_prismDiopterUnit);
  if (!v6)
    goto LABEL_10;
  v7 = v6;
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16F0]), sel_init);
  objc_msgSend(v8, sel_setMinimumFractionDigits_, 0);
  objc_msgSend(v8, sel_setMaximumFractionDigits_, 2);
  objc_msgSend(v4, sel_doubleValueForUnit_, v7);
  v9 = (void *)sub_2322B8F6C();
  v10 = objc_msgSend(v8, sel_stringFromNumber_, v9);

  if (!v10)
  {

LABEL_10:
    return 0;
  }
  v11 = sub_2322B8E1C();
  v13 = v12;

  switch((unint64_t)v5)
  {
    case 1uLL:
      if (qword_255FAB900 != -1)
        goto LABEL_19;
      goto LABEL_16;
    case 2uLL:
      if (qword_255FAB900 == -1)
        goto LABEL_16;
      goto LABEL_19;
    case 3uLL:
      if (qword_255FAB900 == -1)
        goto LABEL_16;
      goto LABEL_19;
    case 4uLL:
      if (qword_255FAB900 == -1)
        goto LABEL_16;
LABEL_19:
      swift_once();
LABEL_16:
      sub_2322B7F58();
      break;
    default:
      break;
  }
  sub_23224EBB4(0, (unint64_t *)&qword_255FADB70, (unint64_t *)&qword_255FAF820, MEMORY[0x24BEE45D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_2322C0E70;
  *(_QWORD *)(v15 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v15 + 64) = sub_23224EC60();
  *(_QWORD *)(v15 + 32) = v11;
  *(_QWORD *)(v15 + 40) = v13;
  v14 = sub_2322B8E28();
  swift_bridgeObjectRelease();

  return v14;
}

uint64_t sub_23224E384()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin27VisionPrescriptionFieldItem_uuid;
  v2 = sub_2322B80B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_23224E418()
{
  return type metadata accessor for VisionPrescriptionFieldItem(0);
}

uint64_t type metadata accessor for VisionPrescriptionFieldItem(uint64_t a1)
{
  return sub_23224E434(a1, (uint64_t *)&unk_2541BF8D0);
}

uint64_t sub_23224E434(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23224E468()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2322B80B4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23224E4EC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23224E51C()
{
  return sub_23224DF74();
}

uint64_t sub_23224E53C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23224EBB4(0, (unint64_t *)&qword_255FACC90, (unint64_t *)&qword_255FABD20, MEMORY[0x24BE41798], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_23224E5A0(uint64_t a1)
{
  uint64_t v2;

  sub_23224EBB4(0, (unint64_t *)&qword_255FACC90, (unint64_t *)&qword_255FABD20, MEMORY[0x24BE41798], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23224E5FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23224EBB4(0, (unint64_t *)&qword_255FACC90, (unint64_t *)&qword_255FABD20, MEMORY[0x24BE41798], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_23224E660()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;

  v1 = v0;
  v2 = &v0[qword_255FABCE8];
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_QWORD *)v2 + 4) = 0;
  v3 = qword_255FABCF0;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_23224C618(0, (unint64_t *)&unk_255FACCD0);
  v5 = (void *)sub_2322B9128();
  objc_msgSend(v4, sel_setFont_, v5);

  objc_msgSend(v4, sel_setTextAlignment_, 4);
  objc_msgSend(v4, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v4, sel_setNumberOfLines_, 0);
  *(_QWORD *)&v0[v3] = v4;
  v6 = qword_255FABCF8;
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB00]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v0[v6] = v7;
  v8 = qword_255FABD00;
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v10 = (void *)sub_2322B9128();
  objc_msgSend(v9, sel_setFont_, v10);

  objc_msgSend(v9, sel_setTextAlignment_, 4);
  objc_msgSend(v9, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v9, sel_setNumberOfLines_, 0);
  *(_QWORD *)&v0[v8] = v9;
  v11 = qword_255FABD08;
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v13 = (void *)sub_2322B9128();
  objc_msgSend(v12, sel_setFont_, v13);

  objc_msgSend(v12, sel_setTextAlignment_, 4);
  objc_msgSend(v12, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v12, sel_setNumberOfLines_, 0);
  *(_QWORD *)&v1[v11] = v12;

  sub_2322B9350();
  __break(1u);
}

uint64_t sub_23224E968(char a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t *v20;

  if ((a1 & 1) != 0)
  {
    if (qword_255FAB900 != -1)
      swift_once();
  }
  else if (qword_255FAB900 != -1)
  {
    swift_once();
  }
  v6 = sub_2322B7F58();
  v8 = v7;
  if (!a2)
  {
    v10 = 0;
    v12 = 0;
    if (a3)
      goto LABEL_9;
LABEL_11:
    v14 = 0;
    goto LABEL_12;
  }
  v9 = a2;
  v10 = sub_23224DFE0(a1 & 1);
  v12 = v11;

  if (!a3)
    goto LABEL_11;
LABEL_9:
  v13 = a3;
  v14 = sub_23224DFE0(a1 & 1);
  a3 = v15;

LABEL_12:
  type metadata accessor for VisionPrescriptionFieldItem(0);
  v16 = swift_allocObject();
  type metadata accessor for VisionPrescriptionFieldCell(0);
  sub_23224EB6C();
  *(_QWORD *)(v16 + 16) = sub_2322B8294();
  *(_QWORD *)(v16 + 24) = v17;
  sub_2322B80A8();
  v18 = (uint64_t *)(v16 + OBJC_IVAR____TtC21VisionHealthAppPlugin27VisionPrescriptionFieldItem_leftValueString);
  *v18 = 0;
  v18[1] = 0;
  v19 = (uint64_t *)(v16 + OBJC_IVAR____TtC21VisionHealthAppPlugin27VisionPrescriptionFieldItem_rightValueString);
  *v19 = 0;
  v19[1] = 0;
  v20 = (uint64_t *)(v16 + OBJC_IVAR____TtC21VisionHealthAppPlugin27VisionPrescriptionFieldItem_title);
  *v20 = v6;
  v20[1] = v8;
  *v18 = v10;
  v18[1] = v12;
  swift_bridgeObjectRelease();
  *v19 = v14;
  v19[1] = (uint64_t)a3;
  swift_bridgeObjectRelease();
  return v16;
}

unint64_t sub_23224EB6C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FABD28;
  if (!qword_255FABD28)
  {
    v1 = type metadata accessor for VisionPrescriptionFieldCell(255);
    result = MEMORY[0x2349010BC](&unk_2322C0DA8, v1);
    atomic_store(result, (unint64_t *)&qword_255FABD28);
  }
  return result;
}

void sub_23224EBB4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_23224EC14(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_23224EC14(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_23224EC60()
{
  unint64_t result;

  result = qword_255FAF9A0;
  if (!qword_255FAF9A0)
  {
    result = MEMORY[0x2349010BC](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_255FAF9A0);
  }
  return result;
}

void sub_23224ECA4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FACCE0)
  {
    v0 = sub_2322B93D4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FACCE0);
  }
}

uint64_t _s8SentinelCMa()
{
  return objc_opt_self();
}

id sub_23224ED1C()
{
  uint64_t ObjCClassFromMetadata;
  id result;

  _s8SentinelCMa();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  result = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  qword_255FB34F0 = (uint64_t)result;
  return result;
}

void *static HKPrismBase.allCases.getter()
{
  return &unk_250111998;
}

uint64_t HKPrismBase.text.getter(uint64_t a1)
{
  uint64_t result;

  switch(a1)
  {
    case 1:
      if (qword_255FAB900 != -1)
        goto LABEL_11;
      goto LABEL_10;
    case 2:
      if (qword_255FAB900 == -1)
        goto LABEL_10;
      goto LABEL_11;
    case 3:
      if (qword_255FAB900 == -1)
        goto LABEL_10;
      goto LABEL_11;
    case 4:
      if (qword_255FAB900 == -1)
        goto LABEL_10;
LABEL_11:
      swift_once();
LABEL_10:
      result = sub_2322B7F58();
      break;
    default:
      result = 0;
      break;
  }
  return result;
}

uint64_t sub_23224EF30()
{
  return sub_232245044(&qword_255FABDD0, (uint64_t (*)(uint64_t))type metadata accessor for HKPrismBase, (uint64_t)&unk_2322C06C4);
}

uint64_t sub_23224EF5C()
{
  uint64_t *v0;

  return HKPrismBase.text.getter(*v0);
}

unint64_t sub_23224EF68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FABDD8;
  if (!qword_255FABDD8)
  {
    sub_23224BE78(255, &qword_255FABDE0, (uint64_t (*)(uint64_t))type metadata accessor for HKPrismBase, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2349010BC](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_255FABDD8);
  }
  return result;
}

void sub_23224EFC8(_QWORD *a1@<X8>)
{
  *a1 = &unk_2501119D8;
}

uint64_t sub_23224EFD8@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t (*a3)(uint64_t a1)@<X2>, char a4@<W3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  int *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  void (**v33)(uint64_t, uint64_t, uint64_t);
  uint64_t (**v34)(uint64_t);
  void (**v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD v41[4];
  void (*v42)(uint64_t, uint64_t, uint64_t);
  int v43;
  uint64_t v44;
  uint64_t v45;

  v43 = a2;
  v9 = sub_2322B80B4();
  MEMORY[0x24BDAC7A8](v9);
  sub_23224BE78(0, &qword_255FABDE8, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC408], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v41 - v11;
  type metadata accessor for VisionPrescriptionValidationController();
  v13 = swift_allocObject();
  type metadata accessor for VisionPrescriptionValidationHandler();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = a3;
  v15 = sub_23224F80C;
  v16 = sub_23224FAA8;
  v17 = (void (*)(uint64_t, uint64_t, uint64_t))v14;
  switch(a4)
  {
    case 8:
    case 10:
      v42 = (void (*)(uint64_t, uint64_t, uint64_t))a1;
      v44 = sub_23225BB7C(a4);
      v45 = v18;
      swift_retain();
      sub_2322B8EAC();
      if (qword_255FAB900 != -1)
        swift_once();
      v19 = sub_2322B7F58();
      v41[2] = v20;
      v41[3] = v19;
      swift_bridgeObjectRelease();
      v21 = sub_2322B7F58();
      v41[0] = v22;
      v41[1] = v21;
      v23 = sub_2322B899C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v12, 1, 1, v23);
      v24 = swift_allocObject();
      v25 = v42;
      *(_QWORD *)(v24 + 16) = a3;
      *(_QWORD *)(v24 + 24) = v25;
      *(_BYTE *)(v24 + 32) = a4;
      v26 = swift_allocObject();
      *(_QWORD *)(v26 + 16) = a3;
      *(_BYTE *)(v26 + 24) = a4;
      *(_QWORD *)(v26 + 32) = v25;
      swift_retain_n();
      sub_2322B80A8();
      sub_23224FBA4();
      a5[3] = v27;
      a5[4] = sub_232245044(&qword_255FABE08, (uint64_t (*)(uint64_t))sub_23224FBA4, MEMORY[0x24BE42328]);
      sub_23224FA10(a5);
      type metadata accessor for HKPrismBase(0);
      sub_232245044(&qword_255FABE00, (uint64_t (*)(uint64_t))type metadata accessor for HKPrismBase, (uint64_t)&protocol conformance descriptor for HKPrismBase);
      sub_2322B8264();
      return swift_release();
    case 9:
      break;
    case 11:
      goto LABEL_6;
    case 12:
      v16 = sub_23224FA50;
LABEL_6:
      v17 = (void (*)(uint64_t, uint64_t, uint64_t))swift_allocObject();
      *((_QWORD *)v17 + 2) = a3;
      *((_QWORD *)v17 + 3) = a1;
      *((_QWORD *)v17 + 4) = v14;
      swift_retain();
      v15 = (void (*)(uint64_t, uint64_t, uint64_t))v16;
      break;
    default:
      v17 = (void (*)(uint64_t, uint64_t, uint64_t))v14;
      break;
  }
  v42 = v15;
  v29 = (int *)type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem(0);
  a5[3] = (uint64_t)v29;
  a5[4] = sub_232245044((unint64_t *)&qword_255FABDF0, type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem, (uint64_t)&unk_2322C2FC8);
  v30 = sub_23224FA10(a5);
  type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldCell(0);
  swift_retain_n();
  swift_retain();
  swift_retain();
  *v30 = sub_2322B8294();
  v30[1] = v31;
  sub_2322B80A8();
  v32 = a1;
  v33 = (void (**)(uint64_t, uint64_t, uint64_t))((char *)v30 + v29[6]);
  v34 = (uint64_t (**)(uint64_t))((char *)v30 + v29[7]);
  v35 = (void (**)(uint64_t, uint64_t, uint64_t))((char *)v30 + v29[8]);
  *((_BYTE *)v30 + v29[10]) = a4;
  *(uint64_t *)((char *)v30 + v29[11]) = v32;
  sub_232289D40(v32, a4);
  v37 = v36;
  v39 = v38;
  swift_release();
  result = swift_release();
  v40 = (uint64_t *)((char *)v30 + v29[12]);
  *v40 = v37;
  v40[1] = v39;
  *((_BYTE *)v30 + v29[9]) = v43 & 1;
  *v33 = v42;
  v33[1] = v17;
  *v34 = sub_23224F94C;
  v34[1] = a3;
  *v35 = sub_23224FA08;
  v35[1] = (void (*)(uint64_t, uint64_t, uint64_t))a3;
  return result;
}

void sub_23224F4D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  char v13;
  void *v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;

  v12 = type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem(0);
  v13 = *(_BYTE *)(a3 + *(int *)(v12 + 40));
  sub_23225B410(a1, a2, v13);
  if (v14)
  {
    v15 = v14;
    sub_23226986C(a8);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_2322B8BF4();
    swift_release();
    swift_release();
    swift_release();
    v16 = *(_QWORD *)(a3 + *(int *)(v12 + 44));
    v17 = v15;
    sub_232281B50(v17, v13, v16, v18, (uint64_t)v15);

  }
}

void sub_23224F60C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  char v13;
  void *v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;

  v12 = type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem(0);
  v13 = *(_BYTE *)(a3 + *(int *)(v12 + 40));
  sub_23225B410(a1, a2, v13);
  if (v14)
  {
    v15 = v14;
    sub_23226986C(a8);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_2322B8BF4();
    swift_release();
    swift_release();
    swift_release();
    v16 = *(_QWORD *)(a3 + *(int *)(v12 + 44));
    v17 = v15;
    sub_232281B50(v17, v13, v16, v15, (uint64_t)v18);

  }
}

void sub_23224F744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  void *v8;
  id v9;

  v6 = type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem(0);
  v7 = *(_BYTE *)(a3 + *(int *)(v6 + 40));
  sub_23225B410(a1, a2, v7);
  if (v8)
  {
    v9 = v8;
    sub_232281A5C(v8, v7, *(_QWORD *)(a3 + *(int *)(v6 + 44)));

  }
}

void sub_23224F80C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23224F744(a1, a2, a3);
}

uint64_t sub_23224F814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  char v7;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_23225057C(a5);
  swift_retain();
  sub_232272660(v6, v7, a4);
  return swift_release();
}

uint64_t sub_23224F868(uint64_t a1)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v9;

  v2 = type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem(0);
  v3 = *(_BYTE *)(a1 + *(int *)(v2 + 40));
  v4 = *(_QWORD *)(a1 + *(int *)(v2 + 44));
  swift_retain();
  sub_2322B8B4C();
  swift_release();
  if (v9 != 2)
  {
    if (v9 != 1)
      return 0;
    v5 = sub_232287CF4(v3, v4);
    if (v5)
      goto LABEL_4;
    return 0;
  }
  v5 = sub_232287D10(v3, v4);
  if (!v5)
    return 0;
LABEL_4:
  v6 = v5;
  v7 = sub_23225B628((uint64_t)v5, v3);

  return v7;
}

uint64_t sub_23224F94C(uint64_t a1)
{
  return sub_23224F868(a1);
}

void sub_23224F954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;

  if (a3)
  {
    v6 = type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem(0);
    v7 = *(_QWORD *)(a1 + *(int *)(v6 + 44));
    v8 = *(unsigned __int8 *)(a1 + *(int *)(v6 + 40));
    sub_23225B410(a2, a3, v8);
    v11 = v9;
    sub_232285944(v8, v7, v9);

  }
  else
  {
    v10 = type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem(0);
    sub_232285944(*(unsigned __int8 *)(a1 + *(int *)(v10 + 40)), *(_QWORD *)(a1 + *(int *)(v10 + 44)), 0);
  }
}

void sub_23224FA08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23224F954(a1, a2, a3);
}

uint64_t *sub_23224FA10(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

void sub_23224FA50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  sub_23224F60C(a1, a2, a3, a4, a5, a6, *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24));
}

uint64_t sub_23224FA7C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23224FAA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  sub_23224F4D4(a1, a2, a3, a4, a5, a6, *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24));
}

uint64_t sub_23224FAD0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23224FAF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v3;
  uint64_t result;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(unsigned __int8 *)(v1 + 32);
  result = sub_23225057C(*(_QWORD *)(v1 + 24));
  if (v3 == 10)
  {
    v5 = &OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_verticalPrismBase;
  }
  else
  {
    if (v3 != 8)
    {
      v7 = 0;
      v8 = 1;
      goto LABEL_7;
    }
    v5 = &OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_horizontalPrismBase;
  }
  v6 = result + *v5;
  v7 = *(_QWORD *)v6;
  v8 = *(_BYTE *)(v6 + 8);
LABEL_7:
  *(_QWORD *)a1 = v7;
  *(_BYTE *)(a1 + 8) = v8;
  return result;
}

uint64_t sub_23224FB70()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23224FB94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23224F814(a1, a2, *(_QWORD *)(v2 + 16), *(unsigned __int8 *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

void sub_23224FBA4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FABDF8)
  {
    type metadata accessor for HKPrismBase(255);
    sub_232245044(&qword_255FABE00, (uint64_t (*)(uint64_t))type metadata accessor for HKPrismBase, (uint64_t)&protocol conformance descriptor for HKPrismBase);
    v0 = sub_2322B8270();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FABDF8);
  }
}

uint64_t sub_23224FC1C@<X0>(_QWORD *a1@<X8>)
{
  return sub_23224FC58(a1);
}

uint64_t sub_23224FC30(void **a1)
{
  return sub_23224FCE4(a1);
}

uint64_t sub_23224FC44@<X0>(_QWORD *a1@<X8>)
{
  return sub_23224FC58(a1);
}

uint64_t sub_23224FC58@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2322B8BF4();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_23224FCD0(void **a1)
{
  return sub_23224FCE4(a1);
}

uint64_t sub_23224FCE4(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  v2 = v1;
  swift_retain();
  return sub_2322B8C00();
}

uint64_t sub_23224FD54@<X0>(_QWORD *a1@<X8>)
{
  return sub_23224FC58(a1);
}

uint64_t sub_23224FD78(void **a1)
{
  return sub_23224FCE4(a1);
}

uint64_t sub_23224FD9C@<X0>(_QWORD *a1@<X8>)
{
  return sub_23224FC58(a1);
}

uint64_t sub_23224FDC0(void **a1)
{
  return sub_23224FCE4(a1);
}

id sub_23224FDE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  unint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v25 = sub_2322B8918();
  v3 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23224BE78(0, &qword_255FABC68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v24 - v7;
  swift_retain();
  v9 = (unint64_t)sub_232271140();
  swift_release();
  swift_retain();
  v10 = (unint64_t)sub_232271140();
  swift_release();
  if (v9 | v10)
  {
    sub_232250B50(a2, (uint64_t)v8);
    swift_bridgeObjectRetain();
    v18 = (void *)sub_2322B8DEC();
    swift_bridgeObjectRelease();
    v19 = (void *)sub_2322B8054();
    v20 = sub_2322B8084();
    v21 = *(_QWORD *)(v20 - 8);
    v22 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v8, 1, v20) != 1)
    {
      v22 = (void *)sub_2322B8054();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v20);
    }
    v17 = objc_msgSend((id)objc_opt_self(), sel_prescriptionWithRightEyeSpecification_leftEyeSpecification_brand_dateIssued_expirationDate_device_metadata_, v10, v9, v18, v19, v22, 0, 0);

  }
  else
  {
    sub_2322B88F4();
    v11 = sub_2322B890C();
    v12 = sub_2322B8FFC();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v27 = v14;
      *(_DWORD *)v13 = 136315138;
      v15 = sub_2322B9464();
      v26 = sub_232266EA0(v15, v16, &v27);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232241000, v11, v12, "[%s] Lens specification of at least one side of vision needs to be non-nil.", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234901170](v14, -1, -1);
      MEMORY[0x234901170](v13, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v25);
    return 0;
  }
  return v17;
}

uint64_t type metadata accessor for ContactsManualDataEntryContext()
{
  return objc_opt_self();
}

id sub_232250130(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t inited;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v3 = v2;
  v33 = *v2;
  v34 = a2;
  v5 = sub_2322B8918();
  v35 = *(_QWORD *)(v5 - 8);
  v36 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23224BE78(0, &qword_255FABC68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v33 - v9;
  v11 = sub_2322B8084();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  v15 = (unint64_t)sub_232271B54();
  swift_release();
  swift_retain();
  v16 = (unint64_t)sub_232271B54();
  swift_release();
  if (v15 | v16)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
    sub_232250B50(v34, (uint64_t)v10);
    sub_23224BE78(0, &qword_255FABCB8, (uint64_t (*)(uint64_t))sub_23224C5A0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2322C0E70;
    *(_QWORD *)(inited + 32) = sub_2322B8E1C();
    *(_QWORD *)(inited + 40) = v25;
    v27 = v3[2];
    v26 = v3[3];
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
    if (!v26)
      v27 = 0;
    v28 = 0xE000000000000000;
    if (v26)
      v28 = v26;
    *(_QWORD *)(inited + 48) = v27;
    *(_QWORD *)(inited + 56) = v28;
    swift_bridgeObjectRetain();
    sub_23228C448(inited);
    v29 = (void *)sub_2322B8054();
    v30 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
    {
      v30 = (void *)sub_2322B8054();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    }
    v31 = (void *)sub_2322B8DBC();
    swift_bridgeObjectRelease();
    v23 = objc_msgSend((id)objc_opt_self(), sel_prescriptionWithRightEyeSpecification_leftEyeSpecification_dateIssued_expirationDate_device_metadata_, v16, v15, v29, v30, 0, v31, v33);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    sub_2322B88F4();
    v17 = sub_2322B890C();
    v18 = sub_2322B8FFC();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      v38 = v20;
      *(_DWORD *)v19 = 136315138;
      v21 = sub_2322B9464();
      v37 = sub_232266EA0(v21, v22, &v38);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232241000, v17, v18, "[%s] Lens specification of at least one side of vision needs to be non-nil.", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234901170](v20, -1, -1);
      MEMORY[0x234901170](v19, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v35 + 8))(v7, v36);
    return 0;
  }
  return v23;
}

uint64_t sub_232250510()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GlassesManualDataEntryContext()
{
  return objc_opt_self();
}

_UNKNOWN **sub_232250564()
{
  return &off_255FAD8E8;
}

_UNKNOWN **sub_232250570()
{
  return &off_255FAD940;
}

uint64_t sub_23225057C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  v4 = sub_2322B8918();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 2)
  {
LABEL_7:
    v8 = v2 + 40;
    return *(_QWORD *)v8;
  }
  if (a1 != 1)
  {
    sub_2322B88D0();
    v9 = sub_2322B890C();
    v10 = sub_2322B9008();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      v21 = v19;
      *(_DWORD *)v11 = 136446466;
      v12 = sub_2322B9464();
      v20 = sub_232266EA0(v12, v13, &v21);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2080;
      v20 = a1;
      type metadata accessor for HKVisionEye(0);
      v14 = sub_2322B8E34();
      v20 = sub_232266EA0(v14, v15, &v21);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232241000, v9, v10, "[%{public}s] Unknown eye received: %s", (uint8_t *)v11, 0x16u);
      v16 = v19;
      swift_arrayDestroy();
      MEMORY[0x234901170](v16, -1, -1);
      MEMORY[0x234901170](v11, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    goto LABEL_7;
  }
  v8 = v2 + 32;
  return *(_QWORD *)v8;
}

_QWORD *sub_232250780(void *a1)
{
  _QWORD *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;

  type metadata accessor for ContactsManualDataEntryContext();
  v2 = (_QWORD *)swift_allocObject();
  if (a1)
  {
    v3 = objc_msgSend(a1, sel_brand);
    v4 = sub_2322B8E1C();
    v6 = v5;

  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  v2[2] = v4;
  v2[3] = v6;
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(a1, sel_leftEye);
  type metadata accessor for ContactsLensSpecificationContext();
  swift_allocObject();
  v8 = sub_232273070(1, v7);

  v2[4] = v8;
  v9 = objc_msgSend(a1, sel_rightEye);
  swift_allocObject();
  v10 = sub_232273070(2, v9);

  v2[5] = v10;
  return v2;
}

_QWORD *sub_2322508A4(id a1)
{
  _QWORD *v1;
  _QWORD *v2;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;

  v2 = v1;
  v1[2] = 0;
  v1[3] = 0;
  if (!a1 || (v4 = objc_msgSend(a1, sel_metadata)) == 0)
  {
    v19 = 0u;
    v20 = 0u;
    goto LABEL_10;
  }
  v5 = v4;
  v6 = sub_2322B8DC8();

  v7 = sub_2322B8E1C();
  if (!*(_QWORD *)(v6 + 16) || (v9 = sub_2322B26FC(v7, v8), (v10 & 1) == 0))
  {
    v19 = 0u;
    v20 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_232250B14(*(_QWORD *)(v6 + 56) + 32 * v9, (uint64_t)&v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v20 + 1))
  {
LABEL_10:
    sub_232250A80((uint64_t)&v19);
    v12 = 0;
    v13 = 0;
    goto LABEL_11;
  }
  v11 = swift_dynamicCast();
  v12 = v17;
  v13 = v18;
  if (!v11)
  {
    v12 = 0;
    v13 = 0;
  }
LABEL_11:
  v2[2] = v12;
  v2[3] = v13;
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(a1, sel_leftEye);
  type metadata accessor for GlassesLensSpecificationContext();
  swift_allocObject();
  v2[4] = sub_23227154C(1, v14);
  v15 = objc_msgSend(a1, sel_rightEye);
  swift_allocObject();
  v2[5] = sub_23227154C(2, v15);
  return v2;
}

uint64_t sub_232250A80(uint64_t a1)
{
  uint64_t v2;

  sub_232250ABC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_232250ABC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FADB40)
  {
    v0 = sub_2322B9224();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FADB40);
  }
}

uint64_t sub_232250B14(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_232250B50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23224BE78(0, &qword_255FABC68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for VisionPrescriptionSingleEyeTitleCell()
{
  uint64_t result;

  result = qword_255FAC120;
  if (!qword_255FAC120)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_232250BE8()
{
  return swift_initClassMetadata2();
}

id sub_232250C48(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  char *v10;
  uint64_t v11;
  id v12;
  char *v13;
  id v14;
  void *v15;
  id v16;
  objc_super v18;

  v5 = v4;
  v10 = &v4[qword_255FAC100];
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((_QWORD *)v10 + 4) = 0;
  *(_QWORD *)&v4[qword_255FAC108] = 0;
  *(_QWORD *)&v4[qword_255FAC110] = 0;
  v11 = qword_255FAC118;
  v12 = objc_allocWithZone(MEMORY[0x24BEBD708]);
  v13 = v5;
  v14 = objc_msgSend(v12, sel_init);
  objc_msgSend(v14, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_23224C618(0, (unint64_t *)&unk_255FACCD0);
  v15 = (void *)sub_2322B9128();
  objc_msgSend(v14, sel_setFont_, v15);

  objc_msgSend(v14, sel_setTextAlignment_, 1);
  objc_msgSend(v14, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v14, sel_setNumberOfLines_, 0);
  *(_QWORD *)&v5[v11] = v14;

  v18.receiver = v13;
  v18.super_class = (Class)type metadata accessor for VisionPrescriptionSingleEyeTitleCell();
  v16 = objc_msgSendSuper2(&v18, sel_initWithFrame_, a1, a2, a3, a4);
  sub_232250E40();

  return v16;
}

id sub_232250DFC(double a1, double a2, double a3, double a4)
{
  return sub_232250C48(a1, a2, a3, a4);
}

void sub_232250E1C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_2322516A0();
}

void sub_232250E40()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;

  objc_msgSend(v0, sel_setUserInteractionEnabled_, 0);
  v1 = objc_msgSend(v0, sel_contentView);
  v2 = *(void **)&v0[qword_255FAC118];
  objc_msgSend(v1, sel_addSubview_, v2);

  v3 = objc_msgSend(v2, sel_topAnchor);
  v4 = objc_msgSend(v0, (SEL)0x25011AA48);
  v5 = objc_msgSend(v4, sel_topAnchor);

  v6 = objc_msgSend(v3, sel_constraintEqualToAnchor_constant_, v5, 3.0);
  v7 = objc_msgSend(v0, (SEL)0x25011AA48);
  v8 = objc_msgSend(v7, sel_bottomAnchor);

  v9 = objc_msgSend(v2, sel_bottomAnchor);
  v10 = objc_msgSend(v8, (SEL)&selRef_stringFromNumber_ + 7, v9, 3.0);

  v11 = *(void **)&v0[qword_255FAC108];
  *(_QWORD *)&v0[qword_255FAC108] = v6;
  v12 = v6;

  v13 = *(void **)&v0[qword_255FAC110];
  *(_QWORD *)&v0[qword_255FAC110] = v10;
  v14 = v10;

  v26 = (void *)objc_opt_self();
  sub_23224ECA4();
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_2322C10B0;
  *(_QWORD *)(v15 + 32) = v12;
  *(_QWORD *)(v15 + 40) = v14;
  v16 = v12;
  v17 = v14;
  v18 = objc_msgSend(v2, sel_leadingAnchor);
  v19 = objc_msgSend(v0, (SEL)0x25011AA48);
  v20 = objc_msgSend(v19, sel_leadingAnchor);

  v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v20, 16.0);
  *(_QWORD *)(v15 + 48) = v21;
  v22 = objc_msgSend(v0, (SEL)0x25011AA48);
  v23 = objc_msgSend(v22, sel_trailingAnchor);

  v24 = objc_msgSend(v2, sel_trailingAnchor);
  v25 = objc_msgSend(v23, sel_constraintEqualToAnchor_constant_, v24, 16.0);

  *(_QWORD *)(v15 + 56) = v25;
  sub_2322B8F3C();
  sub_23224C618(0, (unint64_t *)&qword_255FABD30);
  v27 = (id)sub_2322B8F24();
  swift_bridgeObjectRelease();
  objc_msgSend(v26, sel_activateConstraints_, v27);

}

void sub_2322511A0()
{
  char *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  _BYTE v12[24];
  uint64_t v13;

  v1 = (uint64_t)&v0[qword_255FAC100];
  swift_beginAccess();
  sub_23224E5FC(v1, (uint64_t)v12);
  if (!v13)
  {
    sub_23224E5A0((uint64_t)v12);
    goto LABEL_9;
  }
  sub_2322515F4();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    v8 = *(void **)&v0[qword_255FAC118];
    v9 = (void *)sub_2322B8DEC();
    objc_msgSend(v8, sel_setText_, v9);

    return;
  }
  v2 = *(void **)&v0[qword_255FAC118];
  sub_23227337C(v11);
  v3 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setText_, v3);

  v4 = objc_msgSend(v0, sel_traitCollection);
  v5 = objc_msgSend(v4, sel_preferredContentSizeCategory);

  LOBYTE(v4) = sub_2322B9104();
  v6 = *(void **)&v0[qword_255FAC108];
  if ((v4 & 1) != 0)
  {
    if (v6)
      objc_msgSend(v6, sel_setConstant_, 3.0);
    v7 = *(void **)&v0[qword_255FAC110];
    if (v7)
      objc_msgSend(v7, sel_setConstant_, 3.0);
  }
  else
  {
    if (v6)
      objc_msgSend(v6, sel_setConstant_, 0.0);
    v10 = *(void **)&v0[qword_255FAC110];
    if (v10)
      objc_msgSend(v10, sel_setConstant_, 0.0);
  }
}

void sub_23225138C()
{
  uint64_t v0;

  sub_23224E5A0(v0 + qword_255FAC100);

}

id sub_2322513D8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionSingleEyeTitleCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_23225140C(uint64_t a1)
{
  sub_23224E5A0(a1 + qword_255FAC100);

}

uint64_t sub_232251464()
{
  return type metadata accessor for VisionPrescriptionSingleEyeTitleCell();
}

uint64_t sub_23225146C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + qword_255FAC100;
  swift_beginAccess();
  return sub_23224E5FC(v3, a1);
}

uint64_t sub_2322514BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + qword_255FAC100;
  swift_beginAccess();
  sub_23224E53C(a1, v3);
  swift_endAccess();
  sub_2322511A0();
  return sub_23224E5A0(a1);
}

void (*sub_232251528(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_232251570;
}

void sub_232251570(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_2322511A0();
}

void sub_2322515A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FACC90)
  {
    sub_2322515F4();
    v0 = sub_2322B9224();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FACC90);
  }
}

unint64_t sub_2322515F4()
{
  unint64_t result;

  result = qword_255FABD20;
  if (!qword_255FABD20)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255FABD20);
  }
  return result;
}

uint64_t sub_232251648()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_232251674()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_2322516A0()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  id v4;
  void *v5;

  v1 = v0;
  v2 = &v0[qword_255FAC100];
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_QWORD *)v2 + 4) = 0;
  *(_QWORD *)&v0[qword_255FAC108] = 0;
  *(_QWORD *)&v0[qword_255FAC110] = 0;
  v3 = qword_255FAC118;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_23224C618(0, (unint64_t *)&unk_255FACCD0);
  v5 = (void *)sub_2322B9128();
  objc_msgSend(v4, sel_setFont_, v5);

  objc_msgSend(v4, sel_setTextAlignment_, 1);
  objc_msgSend(v4, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v4, sel_setNumberOfLines_, 0);
  *(_QWORD *)&v1[v3] = v4;

  sub_2322B9350();
  __break(1u);
}

uint64_t initializeBufferWithCopyOfBuffer for VisionPrescriptionSingleEyeTitleItem(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for VisionPrescriptionSingleEyeTitleItem()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for VisionPrescriptionSingleEyeTitleItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for VisionPrescriptionSingleEyeTitleItem(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

__n128 initializeWithTake for VisionPrescriptionSingleEyeTitleItem(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_QWORD *assignWithTake for VisionPrescriptionSingleEyeTitleItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for VisionPrescriptionSingleEyeTitleItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VisionPrescriptionSingleEyeTitleItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for VisionPrescriptionSingleEyeTitleItem()
{
  return &type metadata for VisionPrescriptionSingleEyeTitleItem;
}

uint64_t type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldDataSource()
{
  uint64_t result;

  result = qword_255FAC190;
  if (!qword_255FAC190)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_232251A60()
{
  return swift_initClassMetadata2();
}

_QWORD *sub_232251AC0(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  _QWORD *v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  _QWORD v19[2];

  v4 = v3;
  v8 = sub_2322B80B4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v4 + qword_255FAC170) = a1;
  *(_BYTE *)(v4 + qword_255FAC178) = a2;
  type metadata accessor for VisionPrescriptionValidationController();
  v12 = swift_allocObject();
  type metadata accessor for VisionPrescriptionValidationHandler();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = a3;
  *(_QWORD *)(v4 + qword_255FAC180) = v13;
  *(_QWORD *)(v4 + qword_255FAC188) = a3;
  v19[0] = 0;
  v19[1] = 0xE000000000000000;
  swift_retain_n();
  sub_2322B92CC();
  swift_bridgeObjectRelease();
  strcpy((char *)v19, "MutableArray<");
  HIWORD(v19[1]) = -4864;
  sub_2322B80A8();
  sub_2322B8090();
  v14 = *(void (**)(char *, uint64_t))(v9 + 8);
  v14(v11, v8);
  sub_2322B8EAC();
  swift_bridgeObjectRelease();
  sub_2322B8EAC();
  v15 = (_QWORD *)sub_2322B8420();
  sub_23224BE78(0, (unint64_t *)&unk_255FADB00, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_2322B83F0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_2322C0E70;
  v16 = *(void (**)(uint64_t))(qword_255FB3508 + *v15 + 48);
  v17 = swift_retain();
  v16(v17);
  sub_2322B80A8();
  sub_2322B8090();
  v14(v11, v8);
  sub_2322B83E4();
  sub_2322B8438();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v15;
}

void sub_232251D50()
{
  __asm { BR              X9 }
}

uint64_t sub_232251D8C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t (*v3)(uint64_t);

  sub_23224BE78(0, &qword_255FAC200, (uint64_t (*)(uint64_t))sub_2322515F4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_2322C0E50;
  v2 = *(unsigned __int8 *)(v0 + qword_255FAC178);
  v3 = *(uint64_t (**)(uint64_t))(v0 + qword_255FAC188);
  sub_23224EFD8(2, v2, v3, 4, (uint64_t *)(v1 + 32));
  sub_23224EFD8(1, v2, v3, 4, (uint64_t *)(v1 + 72));
  return v1;
}

void sub_232251E38()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_232251E64()
{
  swift_release();
  return swift_release();
}

uint64_t sub_232251E90()
{
  sub_2322B8468();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_232251EDC()
{
  return type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldDataSource();
}

uint64_t sub_232251EE4()
{
  sub_2322B87F8();
  sub_2322B9038();
  sub_2322B8528();
  sub_2322B9038();
  sub_2322B87BC();
  sub_2322B902C();
  type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldCell(0);
  sub_2322B9020();
  sub_2322B8858();
  return sub_2322B9020();
}

uint64_t sub_232251F78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t);
  _QWORD v13[2];

  v1 = sub_2322B84EC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v13 - v6;
  sub_232252088(*(_BYTE *)(v0 + qword_255FAC170));
  v9 = v8;
  swift_bridgeObjectRelease();
  if (v9)
    sub_2322B8498();
  else
    sub_2322B84B0();
  sub_2322B848C();
  sub_2322B8630();
  v10 = sub_2322B84E0();
  swift_unknownObjectRelease();
  v11 = *(void (**)(char *, uint64_t))(v2 + 8);
  v11(v5, v1);
  v11(v7, v1);
  return v10;
}

uint64_t sub_232252088(char a1)
{
  if (a1 == 7 || a1 == 5)
  {
    if (qword_255FAB900 == -1)
      return sub_2322B7F58();
    goto LABEL_12;
  }
  if (!a1)
  {
    if (qword_255FAB900 == -1)
      return sub_2322B7F58();
LABEL_12:
    swift_once();
    return sub_2322B7F58();
  }
  return 0;
}

uint64_t sub_232252198()
{
  return sub_232251F78();
}

uint64_t sub_2322521BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  uint64_t v19;
  char v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t *v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t);
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  unint64_t v37;
  __int128 v38;
  char v39;

  sub_23224BE78(0, &qword_255FAC1E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE43880], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v33 - v7;
  v9 = sub_2322B80B4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2322B87E0();
  v33 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_2322B8E1C() == a1 && v16 == a2;
  v35 = a3;
  if (v17)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = sub_2322B93F8();
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
    {
      if (sub_2322B8E1C() == a1 && v19 == a2)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v21 = sub_2322B93F8();
        swift_bridgeObjectRelease();
        if ((v21 & 1) == 0)
        {
LABEL_18:
          v30 = sub_2322B8318();
          v31 = (uint64_t (*)(uint64_t))MEMORY[0x24BE42908];
          v32 = v35;
          v35[3] = v30;
          v32[4] = sub_232245044(&qword_255FAC1E8, v31, MEMORY[0x24BE428F8]);
          sub_23224FA10(v32);
          return sub_2322B830C();
        }
      }
      sub_232252088(*(_BYTE *)(v34 + qword_255FAC170));
      if (v25)
      {
        v26 = sub_2322B8534();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v8, 1, 1, v26);
        v27 = sub_2322B854C();
        v28 = (uint64_t (*)(uint64_t))MEMORY[0x24BE43890];
        v29 = v35;
        v35[3] = v27;
        v29[4] = sub_232245044(&qword_255FAC1F0, v28, MEMORY[0x24BE43878]);
        sub_23224FA10(v29);
        return sub_2322B8540();
      }
      goto LABEL_18;
    }
  }
  sub_232252554(*(_BYTE *)(v34 + qword_255FAC170));
  v36 = 0x74497265746F6F46;
  v37 = 0xEB000000005F6D65;
  sub_2322B80A8();
  sub_2322B8090();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_2322B8EAC();
  swift_bridgeObjectRelease();
  sub_2322B87D4();
  v36 = 0;
  v37 = 0;
  v38 = xmmword_2322C11E0;
  v39 = 0;
  sub_2322B87C8();
  v22 = v35;
  v35[3] = v13;
  v22[4] = sub_232245044(&qword_255FAC1F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE446A8], MEMORY[0x24BE44688]);
  v23 = sub_23224FA10(v22);
  return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v33 + 32))(v23, v15, v13);
}

void sub_232252554(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23225257C()
{
  if (qword_255FAB900 != -1)
    swift_once();
  return sub_2322B7F58();
}

uint64_t sub_23225288C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_2322521BC(a1, a2, a3);
}

uint64_t sub_2322528AC()
{
  return 1;
}

uint64_t sub_2322528B4()
{
  sub_2322B9434();
  sub_2322B8E7C();
  return sub_2322B944C();
}

uint64_t sub_232252908()
{
  return sub_2322B8E7C();
}

uint64_t sub_232252924()
{
  sub_2322B9434();
  sub_2322B8E7C();
  return sub_2322B944C();
}

uint64_t sub_232252974@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_2322B93BC();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_2322529C4(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x80000002322B9E20;
}

uint64_t getEnumTagSinglePayload for VisionPrescriptionDeviceType(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for VisionPrescriptionDeviceType(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_232252A7C + 4 * byte_2322C1370[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_232252A9C + 4 * byte_2322C1375[v4]))();
}

_BYTE *sub_232252A7C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_232252A9C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_232252AA4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_232252AAC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_232252AB4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_232252ABC(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_232252AC8()
{
  return 0;
}

ValueMetadata *type metadata accessor for VisionPrescriptionDeviceType()
{
  return &type metadata for VisionPrescriptionDeviceType;
}

unint64_t sub_232252AE8()
{
  unint64_t result;

  result = qword_255FAC208;
  if (!qword_255FAC208)
  {
    result = MEMORY[0x2349010BC](&unk_2322C1418, &type metadata for VisionPrescriptionDeviceType);
    atomic_store(result, (unint64_t *)&qword_255FAC208);
  }
  return result;
}

uint64_t sub_232252B2C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ViewControllerHolder()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for VisionPrescriptionAllDataViewController()
{
  uint64_t result;

  result = qword_255FAC2E8;
  if (!qword_255FAC2E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_232252BAC()
{
  return swift_initClassMetadata2();
}

id sub_232252C10(void *a1, void *a2)
{
  char *v2;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v20;

  swift_getObjectType();
  v5 = qword_255FAC2D8;
  v20 = MEMORY[0x24BEE4AF8];
  sub_232256DD0();
  swift_allocObject();
  v6 = v2;
  v7 = sub_2322B8B70();
  *(_QWORD *)&v2[v5] = v7;
  *(_QWORD *)&v6[qword_255FAC2E0] = 0;
  *(_QWORD *)&v6[qword_255FAC2C8] = a1;
  *(_QWORD *)&v6[qword_255FAC2D0] = a2;
  type metadata accessor for ViewControllerHolder();
  v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v9 = a2;
  swift_retain();
  v10 = a1;
  v11 = sub_232252E88(v7, v10, v8);
  v13 = v12;
  swift_release();

  sub_2322B863C();
  sub_232256EB4();
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_2322C0E70;
  *(_QWORD *)(v14 + 32) = v11;
  *(_QWORD *)(v14 + 40) = v13;
  swift_unknownObjectRetain();
  sub_2322B8660();
  swift_retain();
  v15 = (void *)sub_2322B884C();
  swift_unknownObjectWeakAssign();
  v16 = qword_255FAB900;
  v17 = v15;
  if (v16 != -1)
    swift_once();
  sub_2322B7F58();
  v18 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_setTitle_, v18, 0xE000000000000000, v20);

  sub_232254A48();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();

  return v17;
}

uint64_t sub_232252E88(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  id v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;

  sub_232256F1C();
  v7 = v6;
  v25 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2322B80B4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322B80A8();
  v14 = sub_2322B8090();
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v26 = a1;
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a2;
  v17[3] = a1;
  v17[4] = a3;
  v17[5] = v14;
  v18 = v24[1];
  v17[6] = v16;
  v17[7] = v18;
  sub_232256DD0();
  sub_23224BE78(0, &qword_255FAC3D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_232245044(&qword_255FAC3E0, (uint64_t (*)(uint64_t))sub_232256DD0, MEMORY[0x24BDB9D10]);
  v19 = a2;
  swift_retain();
  swift_retain();
  sub_2322B8C6C();
  swift_release();
  sub_232245044(&qword_255FAC3E8, (uint64_t (*)(uint64_t))sub_232256F1C, MEMORY[0x24BDB96C0]);
  sub_2322B8C30();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v7);
  sub_2322B872C();
  v20 = (uint64_t (*)(uint64_t))MEMORY[0x24BE44198];
  v21 = MEMORY[0x24BE44190];
  sub_2322B8360();
  swift_release();
  sub_2322583C0(0, &qword_255FAC3F0, v20, v21, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE428B8]);
  sub_232257014();
  v22 = sub_2322B8384();
  swift_release();
  sub_232245044(&qword_255FAC400, (uint64_t (*)(uint64_t))sub_23225707C, MEMORY[0x24BE42788]);
  return v22;
}

void sub_232253124(char *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  id v6;

  v5 = qword_255FAC2D8;
  sub_232256DD0();
  swift_allocObject();
  v6 = a3;
  *(_QWORD *)&a1[v5] = sub_2322B8B70();
  *(_QWORD *)&a1[qword_255FAC2E0] = 0;

  sub_2322B9350();
  __break(1u);
}

uint64_t sub_2322531E0@<X0>(unint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X6>, uint64_t *a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t *v22;

  v22 = a6;
  v11 = sub_2322B83F0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a1;
  v16 = a2;
  swift_retain();
  swift_retain();
  v17 = sub_232254384(v15, v16, a3, a4, a5);
  sub_2322543EC(v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2322B83E4();
  sub_23224BE78(0, (unint64_t *)&unk_255FADB00, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v18 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_2322C0E70;
  result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v12 + 32))(v19 + v18, v14, v11);
  *v22 = v19;
  return result;
}

uint64_t sub_232253354@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  unint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  id v46;
  id v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  unint64_t v53;
  char v54;
  id v55;
  double v56;
  double v57;
  id v58;
  id v59;
  double v60;
  double v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  id v67;
  id v68;
  void *v69;
  id v70;
  uint64_t v71;
  id v72;
  char *v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t, uint64_t);
  char *v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t, uint64_t, uint64_t);
  char *v83;
  char *v84;
  void (*v85)(char *, uint64_t);
  char *v86;
  _QWORD *v87;
  id v88;
  uint64_t v89;
  void *v90;
  id v91;
  id v92;
  _QWORD *v93;
  uint64_t v94;
  id v95;
  id v96;
  void *v97;
  void *v98;
  id v99;
  uint64_t v100;
  id v101;
  void *v102;
  id v103;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD v117[2];
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  void *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  id v148;
  id v149;
  uint64_t v150;
  id v151;
  uint64_t v152;
  void *v153;
  __int128 aBlock;
  __int128 v155;
  void (*v156)(uint64_t, uint64_t, void (*)(uint64_t), uint64_t);
  _QWORD *v157;

  v144 = a4;
  v145 = a3;
  v146 = a5;
  v142 = a2;
  v139 = sub_2322B8840();
  v138 = *(_QWORD *)(v139 - 8);
  MEMORY[0x24BDAC7A8](v139);
  v141 = (char *)v117 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = sub_2322B8474();
  v136 = *(_QWORD *)(v137 - 8);
  MEMORY[0x24BDAC7A8](v137);
  v140 = (char *)v117 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = sub_2322B896C();
  v134 = *(_QWORD *)(v135 - 8);
  MEMORY[0x24BDAC7A8](v135);
  v133 = (char *)v117 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_23224BE78(0, (unint64_t *)&unk_255FADB30, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC088], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v10);
  v131 = (char *)v117 - v11;
  v128 = sub_2322B8930();
  v127 = *(_QWORD *)(v128 - 8);
  MEMORY[0x24BDAC7A8](v128);
  v126 = (char *)v117 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = sub_2322B893C();
  v125 = *(_QWORD *)(v130 - 8);
  MEMORY[0x24BDAC7A8](v130);
  v129 = (char *)v117 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2322B80B4();
  v124 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v121 = (char *)v117 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23224BE78(0, &qword_255FABDE8, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC408], v9);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v132 = (uint64_t)v117 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v152 = (uint64_t)v117 - v19;
  v123 = (_QWORD *)sub_2322B8084();
  v122 = *(v123 - 1);
  MEMORY[0x24BDAC7A8](v123);
  v21 = (char *)v117 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_2322B8A38();
  v150 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)v117 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = (unint64_t)objc_msgSend(a1, sel_leftSphere);
  v26 = (unint64_t)objc_msgSend(a1, sel_rightSphere);
  v148 = (id)v26;
  sub_2322B8A2C();
  v27 = (id)HKVisionPrescriptionTypeDetailedLongLocalizedString();
  v28 = sub_2322B8E1C();
  v30 = v29;

  v149 = (id)v25;
  v147 = v24;
  v151 = a1;
  if (!(v25 | v26))
  {
    v31 = (id)HKVisionPrescriptionImageOnlyLocalizedString();
    v32 = sub_2322B8E1C();
    v34 = v33;

    sub_232257AC0(v28, v30, v32, v34);
    v35 = v152;
    goto LABEL_24;
  }
  v119 = v28;
  v120 = v14;
  v36 = objc_msgSend(a1, sel_metadata);
  v37 = MEMORY[0x24BEE4AD8];
  if (!v36)
  {
    aBlock = 0u;
    v155 = 0u;
LABEL_15:
    sub_232257F24((uint64_t)&aBlock, (uint64_t)&qword_255FADB40, v37 + 8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_23224C6D0);
    goto LABEL_16;
  }
  v38 = v36;
  v39 = sub_2322B8DC8();

  v40 = sub_2322B8E1C();
  v42 = v30;
  if (*(_QWORD *)(v39 + 16) && (v43 = sub_2322B26FC(v40, v41), (v44 & 1) != 0))
  {
    sub_232250B14(*(_QWORD *)(v39 + 56) + 32 * v43, (uint64_t)&aBlock);
  }
  else
  {
    aBlock = 0u;
    v155 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v155 + 1))
    goto LABEL_15;
  v45 = sub_23224C618(0, (unint64_t *)&qword_255FABCD0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_16:
    v52 = v149;
LABEL_17:
    if (v52)
    {
      v55 = objc_msgSend((id)objc_opt_self(), sel_diopterUnit);
      objc_msgSend(v52, sel_doubleValueForUnit_, v55);
      v57 = v56;

      v52 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, v57);
    }
    v58 = v148;
    if (v148)
    {
      v59 = objc_msgSend((id)objc_opt_self(), sel_diopterUnit);
      objc_msgSend(v58, sel_doubleValueForUnit_, v59);
      v61 = v60;

      v62 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, v61);
    }
    else
    {
      v62 = 0;
    }
    v42 = v30;
    v46 = (id)HKVisionLeftRightShortLocalizedString();
    v63 = sub_2322B8E1C();
    v65 = v64;

    v35 = v152;
    goto LABEL_23;
  }
  v46 = v153;
  v47 = objc_msgSend(v151, sel_metadata);
  if (!v47)
  {
    aBlock = 0u;
    v155 = 0u;
    v52 = v149;
LABEL_34:

    sub_232257F24((uint64_t)&aBlock, (uint64_t)&qword_255FADB40, v37 + 8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_23224C6D0);
    goto LABEL_17;
  }
  v48 = v47;
  v118 = v45;
  v49 = sub_2322B8DC8();

  v50 = sub_2322B8E1C();
  v52 = v149;
  if (*(_QWORD *)(v49 + 16) && (v53 = sub_2322B26FC(v50, v51), (v54 & 1) != 0))
  {
    sub_232250B14(*(_QWORD *)(v49 + 56) + 32 * v53, (uint64_t)&aBlock);
  }
  else
  {
    aBlock = 0u;
    v155 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v155 + 1))
    goto LABEL_34;
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_17;
  }
  v62 = v153;
  if (qword_255FAB900 != -1)
    swift_once();
  v118 = sub_2322B7F58();
  v117[1] = v105;
  sub_2322573A8(0, (unint64_t *)&qword_255FADB70, (unint64_t *)&qword_255FAF820, MEMORY[0x24BEE45D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v106 = swift_allocObject();
  *(_OWORD *)(v106 + 16) = xmmword_2322C0E50;
  v107 = (void *)objc_opt_self();
  v108 = objc_msgSend(v107, sel_diopterUnit);
  objc_msgSend(v46, sel_doubleValueForUnit_, v108);
  v110 = v109;

  v111 = MEMORY[0x24BEE13C8];
  v112 = MEMORY[0x24BEE1448];
  *(_QWORD *)(v106 + 56) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(v106 + 64) = v112;
  *(_QWORD *)(v106 + 32) = v110;
  v113 = objc_msgSend(v107, sel_diopterUnit);
  objc_msgSend(v62, sel_doubleValueForUnit_, v113);
  v115 = v114;

  *(_QWORD *)(v106 + 96) = v111;
  *(_QWORD *)(v106 + 104) = v112;
  *(_QWORD *)(v106 + 72) = v115;
  v63 = sub_2322B8DF8();
  v65 = v116;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v35 = v152;
  v24 = v147;
LABEL_23:

  sub_232257AC0(v119, v42, v63, v65);
  v14 = v120;
LABEL_24:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2322B8A20();
  v66 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
  objc_msgSend(v66, sel_setDateStyle_, 2);
  objc_msgSend(v66, sel_setTimeStyle_, 0);
  v67 = v151;
  v68 = objc_msgSend(v151, sel_dateIssued);
  sub_2322B806C();

  v69 = (void *)sub_2322B8054();
  (*(void (**)(char *, _QWORD *))(v122 + 8))(v21, v123);
  v123 = v66;
  v70 = objc_msgSend(v66, sel_stringFromDate_, v69);

  sub_2322B8E1C();
  sub_2322B89C0();
  v71 = sub_2322B899C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v35, 1, 1, v71);
  v72 = objc_msgSend(v67, sel_UUID);
  v73 = v121;
  sub_2322B809C();

  v122 = sub_2322B8090();
  v120 = v74;
  (*(void (**)(char *, uint64_t))(v124 + 8))(v73, v14);
  *((_QWORD *)&v155 + 1) = v22;
  v156 = (void (*)(uint64_t, uint64_t, void (*)(uint64_t), uint64_t))MEMORY[0x24BEBC5F0];
  v75 = sub_23224FA10((uint64_t *)&aBlock);
  (*(void (**)(uint64_t *, char *, uint64_t))(v150 + 16))(v75, v24, v22);
  sub_23224BE78(0, &qword_255FAC418, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC0E0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_2322B8984();
  v121 = (char *)swift_allocObject();
  *((_OWORD *)v121 + 1) = xmmword_2322C0E50;
  v76 = *MEMORY[0x24BEBC048];
  v124 = v22;
  v77 = v125;
  v78 = *(void (**)(char *, uint64_t, uint64_t))(v125 + 104);
  v79 = v129;
  v80 = v130;
  v78(v129, v76, v130);
  v81 = sub_2322B8948();
  v82 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56);
  v83 = v131;
  v82(v131, 1, 1, v81);
  v84 = v126;
  sub_2322B8924();
  sub_2322B8978();
  (*(void (**)(char *, uint64_t))(v127 + 8))(v84, v128);
  v85 = *(void (**)(char *, uint64_t))(v77 + 8);
  v85(v79, v80);
  v78(v79, *MEMORY[0x24BEBC050], v80);
  v82(v83, 1, 1, v81);
  v86 = v133;
  sub_2322B8960();
  sub_2322B8954();
  (*(void (**)(char *, uint64_t))(v134 + 8))(v86, v135);
  v85(v79, v80);
  v87 = (_QWORD *)swift_allocObject();
  v88 = v151;
  v90 = v142;
  v89 = v143;
  v87[2] = v151;
  v87[3] = v90;
  v87[4] = v89;
  sub_232257E48(v152, v132);
  (*(void (**)(char *, _QWORD, uint64_t))(v136 + 104))(v140, *MEMORY[0x24BE43600], v137);
  (*(void (**)(char *, _QWORD, uint64_t))(v138 + 104))(v141, *MEMORY[0x24BE44C60], v139);
  v91 = v88;
  v92 = v90;
  sub_2322B8564();
  if (qword_255FAB900 != -1)
    swift_once();
  sub_2322B7F58();
  v93 = (_QWORD *)swift_allocObject();
  v94 = v144;
  v93[2] = v91;
  v93[3] = v94;
  v93[4] = v89;
  v93[5] = v92;
  v93[6] = v145;
  v95 = v91;
  v96 = v92;
  swift_retain();
  swift_retain();
  v97 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  v156 = sub_232257EE0;
  v157 = v93;
  *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v155 = sub_232256378;
  *((_QWORD *)&v155 + 1) = &unk_250112D00;
  v98 = _Block_copy(&aBlock);
  v99 = objc_msgSend((id)objc_opt_self(), sel_contextualActionWithStyle_title_handler_, 1, v97, v98);

  _Block_release(v98);
  swift_release();
  sub_23224C6D0(0, (unint64_t *)&qword_255FACCE0, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v100 = swift_allocObject();
  *(_OWORD *)(v100 + 16) = xmmword_2322C1440;
  *(_QWORD *)(v100 + 32) = v99;
  *(_QWORD *)&aBlock = v100;
  sub_2322B8F3C();
  sub_23224C618(0, &qword_255FAC420);
  v101 = v99;
  v102 = (void *)sub_2322B8F24();
  swift_bridgeObjectRelease();
  v103 = objc_msgSend((id)objc_opt_self(), sel_configurationWithActions_, v102);

  sub_2322B8558();
  sub_232257F24(v152, (uint64_t)&qword_255FABDE8, (uint64_t)MEMORY[0x24BEBC408], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_23224BE78);
  return (*(uint64_t (**)(char *, uint64_t))(v150 + 8))(v147, v124);
}

uint64_t sub_232254384(unint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;

  v6 = sub_232257C34(a1, a2, a3, a4, a5);

  swift_release();
  swift_release();
  return v6;
}

uint64_t sub_2322543EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = sub_2322B8570();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v19 = MEMORY[0x24BEE4AF8];
    sub_232257128(0, v6, 0);
    v7 = v19;
    v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v9 = *(_QWORD *)(v3 + 72);
    v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v10(v5, v8, v2);
      v19 = v7;
      v12 = *(_QWORD *)(v7 + 16);
      v11 = *(_QWORD *)(v7 + 24);
      if (v12 >= v11 >> 1)
        sub_232257128(v11 > 1, v12 + 1, 1);
      v17 = v2;
      v18 = sub_232245044(&qword_255FADB80, (uint64_t (*)(uint64_t))MEMORY[0x24BE438C0], MEMORY[0x24BE438A8]);
      v13 = sub_23224FA10((uint64_t *)&v16);
      v10((char *)v13, (uint64_t)v5, v2);
      v14 = v19;
      *(_QWORD *)(v19 + 16) = v12 + 1;
      sub_232257144(&v16, v14 + 40 * v12 + 32);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v7 = v19;
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_232254568(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_2322B9368();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x24BEE4AF8];
  if (!v2)
    return v3;
  v18 = MEMORY[0x24BEE4AF8];
  result = sub_2322571C0(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v3 = v18;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      do
      {
        v6 = MEMORY[0x2349009FC](v5, a1);
        v8 = *(_QWORD *)(v18 + 16);
        v7 = *(_QWORD *)(v18 + 24);
        if (v8 >= v7 >> 1)
          sub_2322571C0(v7 > 1, v8 + 1, 1);
        ++v5;
        v9 = sub_232258358();
        *(_QWORD *)(v18 + 16) = v8 + 1;
        v10 = v18 + 16 * v8;
        *(_QWORD *)(v10 + 32) = v6;
        *(_QWORD *)(v10 + 40) = v9;
      }
      while (v2 != v5);
    }
    else
    {
      v11 = (uint64_t *)(a1 + 32);
      v12 = *(_QWORD *)(v18 + 16);
      v13 = 16 * v12;
      do
      {
        v14 = *v11;
        v15 = *(_QWORD *)(v18 + 24);
        swift_retain();
        if (v12 >= v15 >> 1)
          sub_2322571C0(v15 > 1, v12 + 1, 1);
        v16 = sub_232258358();
        *(_QWORD *)(v18 + 16) = v12 + 1;
        v17 = v18 + v13;
        *(_QWORD *)(v17 + 32) = v14;
        *(_QWORD *)(v17 + 40) = v16;
        v13 += 16;
        ++v11;
        ++v12;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_2322546F8()
{
  sub_2322B8858();
  sub_2322B9020();
  return sub_2322B9038();
}

uint64_t sub_23225474C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v21;
  uint64_t v22[5];

  v21 = sub_2322B8840();
  v2 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v4 = (char *)&v22[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2322B8474();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23224BE78(0, &qword_255FABDE8, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC408], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v22[-1] - v10;
  v12 = sub_2322B8A38();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v22[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322B89B4();
  if (qword_255FAB900 != -1)
    swift_once();
  sub_2322B7F58();
  sub_2322B8A20();
  v22[3] = v12;
  v22[4] = MEMORY[0x24BEBC5F0];
  v16 = sub_23224FA10(v22);
  (*(void (**)(uint64_t *, char *, uint64_t))(v13 + 16))(v16, v15, v12);
  sub_2322B8990();
  v17 = sub_2322B899C();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v11, 0, 1, v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BE43600], v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BE44C60], v21);
  v18 = sub_2322B8570();
  v19 = (uint64_t (*)(uint64_t))MEMORY[0x24BE438C0];
  a1[3] = v18;
  a1[4] = sub_232245044(&qword_255FADB80, v19, MEMORY[0x24BE438A8]);
  sub_23224FA10(a1);
  sub_2322B8564();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_232254A48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *ObjCClassFromMetadata;
  id v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  _QWORD *v42;
  void *v43;
  uint64_t (*v44)(uint64_t);
  id v45;
  id v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v64;
  id v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  id v90;

  sub_23224BE78(0, &qword_255FAC480, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v89 = (char *)&v64 - v2;
  v67 = sub_2322B8FCC();
  v68 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v4 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232258520();
  v69 = v5;
  v70 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322586CC();
  v9 = *(_QWORD *)(v8 - 8);
  v73 = v8;
  v74 = v9;
  MEMORY[0x24BDAC7A8](v8);
  v66 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23225879C();
  v12 = *(_QWORD *)(v11 - 8);
  v76 = v11;
  v77 = v12;
  MEMORY[0x24BDAC7A8](v11);
  v71 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232258830();
  v15 = *(_QWORD *)(v14 - 8);
  v79 = v14;
  v80 = v15;
  MEMORY[0x24BDAC7A8](v14);
  v72 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322589B0();
  v18 = *(_QWORD *)(v17 - 8);
  v81 = v17;
  v82 = v18;
  MEMORY[0x24BDAC7A8](v17);
  v75 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232258AEC();
  v21 = *(_QWORD *)(v20 - 8);
  v85 = v20;
  v86 = v21;
  MEMORY[0x24BDAC7A8](v20);
  v78 = (char *)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232258BA0();
  v24 = *(_QWORD *)(v23 - 8);
  v87 = v23;
  v88 = v24;
  MEMORY[0x24BDAC7A8](v23);
  v83 = (char *)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = *(void **)(v0 + qword_255FAC2C8);
  sub_23224C618(0, (unint64_t *)&unk_255FAF960);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v27 = objc_msgSend(ObjCClassFromMetadata, sel_visionPrescriptionType);
  v65 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3E98]), sel_initWithSampleType_predicate_, v27, *(_QWORD *)(v0 + qword_255FAC2D0));

  sub_23224C6D0(0, (unint64_t *)&qword_255FACCE0, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_2322C1450;
  sub_2322B8E1C();
  v29 = objc_allocWithZone(MEMORY[0x24BDD17C0]);
  v30 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  v31 = objc_msgSend(v29, sel_initWithKey_ascending_, v30, 0);

  *(_QWORD *)(v28 + 32) = v31;
  sub_2322B8E1C();
  v32 = objc_allocWithZone(MEMORY[0x24BDD17C0]);
  v33 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  v34 = objc_msgSend(v32, sel_initWithKey_ascending_, v33, 0);

  *(_QWORD *)(v28 + 40) = v34;
  v90 = (id)v28;
  sub_2322B8F3C();
  v35 = v90;
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_2322C1440;
  *(_QWORD *)(v36 + 32) = objc_msgSend(ObjCClassFromMetadata, sel_visionPrescriptionType);
  v90 = (id)v36;
  sub_2322B8F3C();
  v37 = v64;
  sub_2322B8FE4();
  swift_bridgeObjectRelease();
  sub_2322585E8();
  sub_232245044(&qword_255FADBA0, (uint64_t (*)(uint64_t))MEMORY[0x24BE45A88], MEMORY[0x24BE45A80]);
  sub_232245044((unint64_t *)&qword_255FAC4A0, (uint64_t (*)(uint64_t))sub_2322585E8, MEMORY[0x24BDB9E20]);
  v38 = v67;
  sub_2322B8C84();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v4, v38);
  sub_2322B8FC0();
  sub_2322582C8(0, (unint64_t *)&qword_255FADBC0);
  v39 = MEMORY[0x24BDB9740];
  sub_232245044(&qword_255FAC4B0, (uint64_t (*)(uint64_t))sub_232258520, MEMORY[0x24BDB9740]);
  v40 = v66;
  v41 = v69;
  sub_2322B8C18();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v7, v41);
  v42 = (_QWORD *)swift_allocObject();
  v43 = v65;
  v42[2] = v37;
  v42[3] = v43;
  v42[4] = v35;
  sub_2322B8F9C();
  v44 = (uint64_t (*)(uint64_t))MEMORY[0x24BE459E0];
  sub_232245044(&qword_255FAC4C0, (uint64_t (*)(uint64_t))sub_2322586CC, MEMORY[0x24BE41D28]);
  v45 = v37;
  v46 = v43;
  v47 = v71;
  v48 = v73;
  sub_2322B8C6C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v40, v48);
  v49 = MEMORY[0x24BDB96C0];
  sub_232245044(&qword_255FAC4D8, (uint64_t (*)(uint64_t))sub_23225879C, MEMORY[0x24BDB96C0]);
  sub_232245044(&qword_255FADC00, v44, MEMORY[0x24BE459D8]);
  v50 = v72;
  v51 = v76;
  sub_2322B8CE4();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v47, v51);
  sub_232258A78();
  sub_232245044(&qword_255FAC4F8, (uint64_t (*)(uint64_t))sub_232258830, MEMORY[0x24BDB9610]);
  sub_232245044(&qword_255FAC500, (uint64_t (*)(uint64_t))sub_232258A78, MEMORY[0x24BDB9DF8]);
  v52 = v75;
  v53 = v79;
  sub_2322B8C84();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v50, v53);
  sub_232256E54(0, &qword_255FAC3C0, (unint64_t *)&qword_255FAD9C0, 0x24BDD4100, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_232245044(&qword_255FAC510, (uint64_t (*)(uint64_t))sub_2322589B0, v39);
  v54 = v78;
  v55 = v81;
  sub_2322B8C6C();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v52, v55);
  sub_23224C618(0, (unint64_t *)&qword_255FACCA0);
  v90 = (id)sub_2322B90B0();
  v56 = sub_2322B9098();
  v57 = (uint64_t)v89;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v89, 1, 1, v56);
  sub_232245044(&qword_255FAC520, (uint64_t (*)(uint64_t))sub_232258AEC, v49);
  sub_232258C54();
  v58 = v83;
  v59 = v85;
  sub_2322B8CB4();
  sub_232257F24(v57, (uint64_t)&qword_255FAC480, (uint64_t)MEMORY[0x24BEE56F0], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_23224BE78);

  (*(void (**)(char *, uint64_t))(v86 + 8))(v54, v59);
  swift_allocObject();
  v60 = v84;
  swift_unknownObjectWeakInit();
  sub_232245044(&qword_255FAC530, (uint64_t (*)(uint64_t))sub_232258BA0, MEMORY[0x24BDB9A08]);
  v61 = v87;
  v62 = sub_2322B8CFC();
  swift_release();
  *(_QWORD *)(v60 + qword_255FAC2E0) = v62;

  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v88 + 8))(v58, v61);
}

uint64_t sub_2322553A8()
{
  sub_23225864C();
  return sub_2322B8B94();
}

uint64_t sub_2322553E8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  id v5;

  sub_23224C6D0(0, (unint64_t *)&qword_255FACCE0, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2322C1440;
  *(_QWORD *)(v4 + 32) = a3;
  sub_2322B8F3C();
  v5 = a3;
  sub_2322B8FA8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2322554B8@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;

  v4 = sub_2322B8918();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  sub_2322B88D0();
  v9 = v8;
  v10 = v8;
  v11 = sub_2322B890C();
  v12 = sub_2322B8FFC();
  if (os_log_type_enabled(v11, v12))
  {
    v20[1] = a2;
    v13 = swift_slowAlloc();
    v20[0] = v4;
    v14 = (uint8_t *)v13;
    v15 = swift_slowAlloc();
    v21 = (uint64_t)v8;
    v22 = v15;
    *(_DWORD *)v14 = 136446210;
    v16 = v8;
    sub_2322582C8(0, (unint64_t *)&qword_255FADBC0);
    v17 = sub_2322B8E34();
    v21 = sub_232266EA0(v17, v18, &v22);
    sub_2322B923C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_232241000, v11, v12, "Error fetching vision prescription samples: %{public}s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234901170](v15, -1, -1);
    MEMORY[0x234901170](v14, -1, -1);

    (*(void (**)(char *, _QWORD))(v5 + 8))(v7, v20[0]);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v22 = MEMORY[0x24BEE4AF8];
  sub_232256E54(0, (unint64_t *)&unk_255FADC20, (unint64_t *)&unk_255FAF970, 0x24BDD3ED8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  return sub_2322B8B88();
}

uint64_t sub_232255704@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t i;
  uint64_t j;
  void *v8;
  uint64_t v9;

  v3 = *a1;
  v9 = MEMORY[0x24BEE4AF8];
  if (!((unint64_t)*a1 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *a2 = v9;
    return result;
  }
  swift_bridgeObjectRetain();
  result = sub_2322B9368();
  v4 = result;
  if (!result)
    goto LABEL_19;
LABEL_3:
  if (v4 >= 1)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v4; ++i)
      {
        MEMORY[0x2349009FC](i, v3);
        objc_opt_self();
        if (swift_dynamicCastObjCClass())
        {
          MEMORY[0x234900630]();
          if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_2322B8F48();
          sub_2322B8F54();
          sub_2322B8F3C();
        }
        else
        {
          swift_unknownObjectRelease();
        }
      }
    }
    else
    {
      for (j = 0; j != v4; ++j)
      {
        v8 = *(void **)(v3 + 8 * j + 32);
        objc_opt_self();
        if (swift_dynamicCastObjCClass())
        {
          MEMORY[0x234900630](v8);
          if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_2322B8F48();
          sub_2322B8F54();
          sub_2322B8F3C();
        }
      }
    }
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_2322558E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  result = MEMORY[0x2349011D0](v2);
  if (result)
  {
    v4 = (void *)result;
    swift_retain();

    swift_bridgeObjectRetain();
    sub_2322B8B58();
    return swift_release();
  }
  return result;
}

void sub_232255970(void *a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void);
  char v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  _QWORD v24[4];

  sub_23224BE78(0, &qword_255FAC438, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v24 - v7;
  v9 = a3;
  v10 = a2;
  v11 = objc_msgSend(v10, sel__source);
  v12 = v11;
  if (v11)
  {
    v13 = objc_msgSend(v11, sel_bundleIdentifier);

    v12 = (void *)sub_2322B8E1C();
    v15 = v14;

    v24[2] = v12;
    v24[3] = v15;
    v24[0] = sub_2322B8E1C();
    v24[1] = v16;
    v17 = sub_2322B80D8();
    v18 = MEMORY[0x24BDCEEA8];
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v8, 1, 1, v17);
    sub_232258314();
    sub_2322B9260();
    LODWORD(v12) = (v19 & 1) == 0;
    sub_232257F24((uint64_t)v8, (uint64_t)&qword_255FAC438, (uint64_t)v18, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_23224BE78);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v20 = objc_allocWithZone((Class)type metadata accessor for VisionPrescriptionDetailsViewController());
  v21 = (void *)VisionPrescriptionDetailsViewController.init(healthStore:visionPrescription:canEdit:)(v9, v10, (int)v12);
  v22 = objc_msgSend(a1, sel_navigationController);
  if (v22)
  {
    v23 = v22;
    objc_msgSend(v22, sel_pushViewController_animated_, v21, 1);

  }
}

void sub_232255B74(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, void *a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  void *v33;
  id v34;
  _QWORD *v35;
  void *v36;
  uint64_t v37;
  id v38;
  id v39;
  void *v40;
  void *v41;
  id v42;
  id v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  __int128 aBlock;
  __int128 v54;
  void *v55;
  _QWORD *v56;
  id v57;

  v51 = a7;
  v52 = a8;
  v50 = a4;
  v12 = a9;
  v13 = sub_2322B8918();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = objc_msgSend(a5, sel_metadata);
  v18 = MEMORY[0x24BEE4AD8];
  if (!v17)
  {
    aBlock = 0u;
    v54 = 0u;
    goto LABEL_12;
  }
  v19 = v17;
  v49 = a9;
  v20 = sub_2322B8DC8();

  v21 = sub_2322B8E1C();
  if (!*(_QWORD *)(v20 + 16) || (v23 = sub_2322B26FC(v21, v22), (v24 & 1) == 0))
  {
    aBlock = 0u;
    v54 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v12 = v49;
    goto LABEL_12;
  }
  sub_232250B14(*(_QWORD *)(v20 + 56) + 32 * v23, (uint64_t)&aBlock);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = v49;
  if (!*((_QWORD *)&v54 + 1))
  {
LABEL_12:
    sub_232257F24((uint64_t)&aBlock, (uint64_t)&qword_255FADB40, v18 + 8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_23224C6D0);
    goto LABEL_13;
  }
  sub_23224C618(0, (unint64_t *)&qword_255FABCC8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_13:
    sub_23225624C(v52, a5, v12, a3);
    return;
  }

  v25 = (void *)MEMORY[0x2349011D0](a6 + 16);
  if (v25)
  {
    v48 = v25;
    if (qword_255FAB900 != -1)
      swift_once();
    sub_2322B7F58();
    sub_2322B7F58();
    v26 = (void *)sub_2322B8DEC();
    swift_bridgeObjectRelease();
    v27 = (void *)sub_2322B8DEC();
    swift_bridgeObjectRelease();
    v28 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v26, v27, 1);

    sub_2322B7F58();
    v29 = swift_allocObject();
    v30 = v50;
    *(_QWORD *)(v29 + 16) = a3;
    *(_QWORD *)(v29 + 24) = v30;
    swift_retain();
    v31 = (void *)sub_2322B8DEC();
    swift_bridgeObjectRelease();
    v55 = sub_232257FC8;
    v56 = (_QWORD *)v29;
    *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v54 = sub_2322561FC;
    *((_QWORD *)&v54 + 1) = &unk_250112D78;
    v32 = _Block_copy(&aBlock);
    swift_release();
    v33 = (void *)objc_opt_self();
    v34 = objc_msgSend(v33, sel_actionWithTitle_style_handler_, v31, 0, v32);
    v47 = v34;
    _Block_release(v32);

    objc_msgSend(v28, sel_addAction_, v34);
    sub_2322B7F58();
    v35 = (_QWORD *)swift_allocObject();
    v36 = v52;
    v35[2] = v51;
    v35[3] = v36;
    v37 = v49;
    v35[4] = a5;
    v35[5] = v37;
    v35[6] = a3;
    v35[7] = v30;
    swift_retain();
    v38 = v36;
    v39 = a5;
    swift_retain();
    v40 = (void *)sub_2322B8DEC();
    swift_bridgeObjectRelease();
    v55 = sub_232258028;
    v56 = v35;
    *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v54 = sub_2322561FC;
    *((_QWORD *)&v54 + 1) = &unk_250112DC8;
    v41 = _Block_copy(&aBlock);
    swift_release();
    v42 = objc_msgSend(v33, sel_actionWithTitle_style_handler_, v40, 2, v41);
    _Block_release(v41);

    objc_msgSend(v28, sel_addAction_, v42);
    v43 = v48;
    objc_msgSend(v48, sel_presentViewController_animated_completion_, v28, 1, 0);

  }
  else
  {
    sub_2322B88D0();
    v44 = sub_2322B890C();
    v45 = sub_2322B8FFC();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v46 = 0;
      _os_log_impl(&dword_232241000, v44, v45, "Can't show delete confirmation alert; View Controller is gone", v46, 2u);
      MEMORY[0x234901170](v46, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
}

void sub_2322561FC(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

void sub_23225624C(void *a1, void *a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  unint64_t aBlock[7];

  sub_2322B8B4C();
  v8 = a2;
  sub_232258054(aBlock[0], v8);
  swift_bridgeObjectRelease();

  sub_2322B8B58();
  a4(1);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v4;
  aBlock[4] = (unint64_t)sub_2322582C0;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (unint64_t)sub_232258D30;
  aBlock[3] = (unint64_t)&unk_250112E18;
  v10 = _Block_copy(aBlock);
  v11 = v8;
  swift_release();
  objc_msgSend(a1, sel_deleteObject_withCompletion_, v11, v10);
  _Block_release(v10);
}

void sub_232256378(uint64_t a1, void *a2, void *a3, void *aBlock)
{
  void (*v6)(id, id, uint64_t (*)(char), uint64_t);
  void *v7;
  uint64_t v8;
  id v9;
  id v10;

  v6 = *(void (**)(id, id, uint64_t (*)(char), uint64_t))(a1 + 32);
  v7 = _Block_copy(aBlock);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  swift_retain();
  v10 = a2;
  v9 = a3;
  v6(v10, v9, sub_232257F90, v8);
  swift_release();
  swift_release();

}

uint64_t sub_232256428(int a1, void *a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  os_log_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  int v35;
  os_log_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;

  v40 = a1;
  v5 = sub_2322B80B4();
  v39 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2322B8918();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322B88F4();
  v12 = a3;
  v13 = a2;
  v14 = v12;
  v15 = a2;
  v16 = sub_2322B890C();
  v17 = sub_2322B9014();
  v18 = v17;
  if (os_log_type_enabled(v16, v17))
  {
    v19 = swift_slowAlloc();
    v38 = v9;
    v20 = v19;
    v37 = swift_slowAlloc();
    v42 = v37;
    *(_DWORD *)v20 = 136446978;
    v36 = v16;
    v21 = sub_2322B9464();
    v35 = v18;
    v41 = sub_232266EA0(v21, v22, &v42);
    sub_2322B923C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2080;
    v23 = objc_msgSend(v14, sel_UUID);
    sub_2322B809C();

    sub_232245044(&qword_255FAC428, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v24 = sub_2322B93C8();
    v34 = v8;
    v26 = v25;
    (*(void (**)(char *, uint64_t))(v39 + 8))(v7, v5);
    v41 = sub_232266EA0(v24, v26, &v42);
    sub_2322B923C();

    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 22) = 1024;
    LODWORD(v41) = v40 & 1;
    sub_2322B923C();
    *(_WORD *)(v20 + 28) = 2082;
    v41 = (uint64_t)a2;
    v27 = a2;
    sub_2322573A8(0, (unint64_t *)&unk_255FACCC0, (unint64_t *)&qword_255FADBC0, MEMORY[0x24BEE3EE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v28 = sub_2322B8E34();
    v41 = sub_232266EA0(v28, v29, &v42);
    sub_2322B923C();
    swift_bridgeObjectRelease();

    v30 = v36;
    _os_log_impl(&dword_232241000, v36, (os_log_type_t)v35, "[%{public}s] Delete vision prescription %s success: %{BOOL}d, error: %{public}s", (uint8_t *)v20, 0x26u);
    v31 = v37;
    swift_arrayDestroy();
    MEMORY[0x234901170](v31, -1, -1);
    MEMORY[0x234901170](v20, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v11, v34);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

void sub_2322567D0(void *a1)
{
  id v1;
  id v2;
  id v3;
  objc_super v4;

  v4.receiver = a1;
  v4.super_class = (Class)type metadata accessor for VisionPrescriptionAllDataViewController();
  v1 = v4.receiver;
  objc_msgSendSuper2(&v4, sel_viewDidLoad);
  v2 = objc_msgSend(v1, sel_navigationItem, v4.receiver, v4.super_class);
  v3 = objc_msgSend(v1, sel_editButtonItem);
  objc_msgSend(v2, sel_setRightBarButtonItem_, v3);

}

uint64_t sub_23225687C(void *a1)
{
  id v2;
  uint64_t v4;

  swift_unknownObjectRetain();
  v2 = a1;
  sub_2322B926C();
  swift_unknownObjectRelease();
  objc_msgSend(v2, sel_dismissViewControllerAnimated_completion_, 1, 0);

  return sub_232258500((uint64_t)&v4);
}

void sub_2322568EC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6;
  id v7;
  id v8;
  objc_super v9;

  v9.receiver = a1;
  v9.super_class = (Class)type metadata accessor for VisionPrescriptionAllDataViewController();
  v6 = v9.receiver;
  objc_msgSendSuper2(&v9, sel_setEditing_animated_, a3, a4);
  v7 = objc_msgSend(v6, sel_navigationItem, v9.receiver, v9.super_class);
  v8 = objc_msgSend(v7, sel_leftBarButtonItem);

  objc_msgSend(v8, sel_setHidden_, a3);
}

void sub_2322569A4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_2322569D0(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_232256A00()
{
  uint64_t v0;

  swift_release();
  return swift_release();
}

id sub_232256A4C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionAllDataViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_232256A80(uint64_t a1)
{

  swift_release();
  return swift_release();
}

uint64_t sub_232256AD8()
{
  return type metadata accessor for VisionPrescriptionAllDataViewController();
}

uint64_t sub_232256AE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BE42620];
  v3 = sub_2322B8288();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

void sub_232256B24(void *a1)
{
  id v1;
  id v2;
  id v3;
  id v4;

  v1 = a1;
  v2 = objc_msgSend(v1, sel_navigationItem);
  if ((objc_msgSend(v1, sel_isEditing) & 1) != 0)
    v3 = 0;
  else
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD410]), sel_initWithBarButtonSystemItem_target_action_, 0, v1, sel_didTapDone_);
  v4 = v3;
  objc_msgSend(v2, sel_setLeftBarButtonItem_);

}

void sub_232256BD8(void *a1)
{
  id v1;
  id v2;

  v1 = a1;
  v2 = objc_msgSend(v1, sel_navigationItem);
  objc_msgSend(v2, sel_setLeftBarButtonItem_, 0);

}

uint64_t sub_232256C30@<X0>(uint64_t a1@<X8>)
{
  void **v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *v1;
  sub_232256D44();
  v5 = *(int *)(v4 + 48);
  sub_2322B8498();
  *(_QWORD *)(a1 + v5) = objc_msgSend(v3, sel_collectionView);
  v6 = *MEMORY[0x24BE43688];
  v7 = sub_2322B8480();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 104))(a1, v6, v7);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
}

uint64_t sub_232256CCC()
{
  MEMORY[0x2349010BC](&unk_2322C1540);
  return sub_2322B87EC();
}

uint64_t sub_232256D18()
{
  return sub_232245044(&qword_255FAC398, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionAllDataViewController, (uint64_t)&unk_2322C1510);
}

void sub_232256D44()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255FAC3A0)
  {
    sub_2322B84EC();
    sub_232256E54(255, &qword_255FAC3A8, &qword_255FAC3B0, 0x24BEBD450, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255FAC3A0);
  }
}

void sub_232256DD0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAC3B8)
  {
    sub_232256E54(255, &qword_255FAC3C0, (unint64_t *)&qword_255FAD9C0, 0x24BDD4100, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v0 = sub_2322B8B64();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAC3B8);
  }
}

void sub_232256E54(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_23224C618(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_232256EB4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAC3C8)
  {
    sub_2322582C8(255, (unint64_t *)&qword_255FADA30);
    v0 = sub_2322B93D4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAC3C8);
  }
}

void sub_232256F1C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAC3D0)
  {
    sub_232256DD0();
    sub_23224BE78(255, &qword_255FAC3D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_232245044(&qword_255FAC3E0, (uint64_t (*)(uint64_t))sub_232256DD0, MEMORY[0x24BDB9D10]);
    v0 = sub_2322B8ABC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAC3D0);
  }
}

uint64_t sub_232256FC8()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_232257004@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_2322531E0(a1, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 56), a2);
}

unint64_t sub_232257014()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FAC3F8;
  if (!qword_255FAC3F8)
  {
    sub_2322583C0(255, &qword_255FAC3F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE44198], MEMORY[0x24BE44190], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE428B8]);
    result = MEMORY[0x2349010BC](MEMORY[0x24BE428C8], v1);
    atomic_store(result, (unint64_t *)&qword_255FAC3F8);
  }
  return result;
}

void sub_23225707C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAC408)
  {
    sub_2322583C0(255, &qword_255FAC3F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE44198], MEMORY[0x24BE44190], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE428B8]);
    sub_232257014();
    v0 = sub_2322B82C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAC408);
  }
}

uint64_t sub_2322570FC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23225740C(a1, a2, a3, (_QWORD *)*v3, &qword_255FAC478, (uint64_t (*)(uint64_t))MEMORY[0x24BE430E0]);
  *v3 = result;
  return result;
}

uint64_t sub_232257128(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2322571DC(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_232257144(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_23225715C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23225740C(a1, a2, a3, (_QWORD *)*v3, &qword_255FAC410, (uint64_t (*)(uint64_t))MEMORY[0x24BE438C0]);
  *v3 = result;
  return result;
}

uint64_t sub_232257188(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2322575FC(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_2322571A4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_232257794(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_2322571C0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23225792C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_2322571DC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_2322573A8(0, &qword_255FAC200, (unint64_t *)&qword_255FABD20, MEMORY[0x24BE41798], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (_QWORD *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8)
      memmove(v10 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    sub_2322582C8(0, (unint64_t *)&qword_255FABD20);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_2322B93A4();
  __break(1u);
  return result;
}

void sub_2322573A8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_2322582C8(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_23225740C(char a1, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  sub_23224BE78(0, a5, a6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_2322B93A4();
  __break(1u);
  return result;
}

uint64_t sub_2322575FC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_23224BE78(0, &qword_255FAC458, (uint64_t (*)(uint64_t))sub_232258420, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (_QWORD *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8)
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_232258420();
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_2322B93A4();
  __break(1u);
  return result;
}

uint64_t sub_232257794(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_232258494();
    v10 = (_QWORD *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8)
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_23224C6D0(0, &qword_255FAC470, (uint64_t)&type metadata for VisionPrescriptionManualDataEntryMeasurementField, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_2322B93A4();
  __break(1u);
  return result;
}

uint64_t sub_23225792C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_232256EB4();
    v10 = (_QWORD *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_2322582C8(0, (unint64_t *)&qword_255FADA30);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_2322B93A4();
  __break(1u);
  return result;
}

uint64_t sub_232257AC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (qword_255FAB900 != -1)
    swift_once();
  sub_2322B7F58();
  sub_2322573A8(0, (unint64_t *)&qword_255FADB70, (unint64_t *)&qword_255FAF820, MEMORY[0x24BEE45D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_2322C0E50;
  v9 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v8 + 56) = MEMORY[0x24BEE0D00];
  v10 = sub_23224EC60();
  *(_QWORD *)(v8 + 32) = a1;
  *(_QWORD *)(v8 + 40) = a2;
  *(_QWORD *)(v8 + 96) = v9;
  *(_QWORD *)(v8 + 104) = v10;
  *(_QWORD *)(v8 + 64) = v10;
  *(_QWORD *)(v8 + 72) = a3;
  *(_QWORD *)(v8 + 80) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = sub_2322B8DF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_232257C34(unint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  id v13;
  void *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v23 = a5;
  v21 = a3;
  v22 = a4;
  v20 = a2;
  v19 = sub_2322B8570();
  v6 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
    goto LABEL_18;
  v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v10 = MEMORY[0x24BEE4AF8];
    if (!v9)
      return v10;
    v25 = MEMORY[0x24BEE4AF8];
    result = sub_23225715C(0, v9 & ~(v9 >> 63), 0);
    if (v9 < 0)
      break;
    v12 = 0;
    v10 = v25;
    v18 = a1 & 0xC000000000000001;
    while (v9 != v12)
    {
      if (v18)
        v13 = (id)MEMORY[0x2349009FC](v12, a1);
      else
        v13 = *(id *)(a1 + 8 * v12 + 32);
      v14 = v13;
      sub_232253354(v13, v20, v21, v22, (uint64_t)v8);
      if (v24)
      {
        swift_release();

        v24 = 1;
        return v10;
      }

      v25 = v10;
      v16 = *(_QWORD *)(v10 + 16);
      v15 = *(_QWORD *)(v10 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_23225715C(v15 > 1, v16 + 1, 1);
        v10 = v25;
      }
      ++v12;
      *(_QWORD *)(v10 + 16) = v16 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v16, v8, v19);
      if (v9 == v12)
        return v10;
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    v9 = sub_2322B9368();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_232257E10()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_232257E3C(void *a1)
{
  uint64_t v1;

  sub_232255970(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_232257E48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23224BE78(0, &qword_255FABDE8, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC408], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_232257EA4()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_232257EE0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v4;

  sub_232255B74(a1, a2, a3, a4, *(void **)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(void **)(v4 + 40), *(_QWORD *)(v4 + 48));
}

uint64_t sub_232257F0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_232257F1C()
{
  return swift_release();
}

uint64_t sub_232257F24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t, uint64_t, _QWORD))
{
  uint64_t v5;

  v5 = a4(0, a2, a3, MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_232257F6C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_232257F90(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 16) + 16))(*(_QWORD *)(v1 + 16), a1 & 1);
}

uint64_t sub_232257FA4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_232257FC8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(0);
}

uint64_t sub_232257FEC()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_232258028()
{
  uint64_t v0;

  sub_23225624C(*(void **)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(void (**)(uint64_t))(v0 + 48));
}

uint64_t sub_232258054(unint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  char *v12;
  id v13;
  unint64_t v14;
  id v15;
  id v16;
  void (*v17)(char *, uint64_t);
  void *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;

  v3 = v2;
  v26 = a2;
  v5 = sub_2322B80B4();
  v25 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v24 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v23 = (char *)&v19 - v8;
  v27 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_16;
  v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v9)
  {
    while (1)
    {
      v19 = v3;
      v20 = v9;
      v10 = 0;
      v21 = a1 & 0xFFFFFFFFFFFFFF8;
      v22 = a1 & 0xC000000000000001;
      v11 = v23;
      v12 = v24;
      while (v22)
      {
        v13 = (id)MEMORY[0x2349009FC](v10, a1);
LABEL_9:
        v3 = v13;
        v14 = v10 + 1;
        if (__OFADD__(v10, 1))
          goto LABEL_15;
        v15 = objc_msgSend(v13, sel_UUID);
        sub_2322B809C();

        v16 = objc_msgSend(v26, sel_UUID);
        sub_2322B809C();

        sub_232245044(&qword_255FAC430, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        LOBYTE(v16) = sub_2322B8DE0();
        v17 = *(void (**)(char *, uint64_t))(v25 + 8);
        v17(v12, v5);
        v17(v11, v5);
        if ((v16 & 1) != 0)
        {

        }
        else
        {
          sub_2322B9308();
          sub_2322B932C();
          sub_2322B9338();
          sub_2322B9314();
        }
        ++v10;
        if (v14 == v20)
          return v27;
      }
      if (v10 < *(_QWORD *)(v21 + 16))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      v9 = sub_2322B9368();
      if (!v9)
        return MEMORY[0x24BEE4AF8];
    }
    v13 = *(id *)(a1 + 8 * v10 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23225829C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_2322582C0(int a1, void *a2)
{
  uint64_t v2;

  return sub_232256428(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_2322582C8(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_232258314()
{
  unint64_t result;

  result = qword_255FAC440;
  if (!qword_255FAC440)
  {
    result = MEMORY[0x2349010BC](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_255FAC440);
  }
  return result;
}

unint64_t sub_232258358()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FAC448;
  if (!qword_255FAC448)
  {
    sub_2322583C0(255, &qword_255FAC450, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldDataSource, MEMORY[0x24BE43520], MEMORY[0x24BE42CA8]);
    result = MEMORY[0x2349010BC](MEMORY[0x24BE42CC8], v1);
    atomic_store(result, (unint64_t *)&qword_255FAC448);
  }
  return result;
}

void sub_2322583C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    v9 = a3(255);
    v10 = a5(a1, v9, a4);
    if (!v11)
      atomic_store(v10, a2);
  }
}

void sub_232258420()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAC460)
  {
    sub_2322583C0(255, &qword_255FAC450, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldDataSource, MEMORY[0x24BE43520], MEMORY[0x24BE42CA8]);
    v0 = sub_2322B8F60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAC460);
  }
}

void sub_232258494()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAC468)
  {
    sub_23224C6D0(255, &qword_255FAC470, (uint64_t)&type metadata for VisionPrescriptionManualDataEntryMeasurementField, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    v0 = sub_2322B93D4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAC468);
  }
}

uint64_t sub_232258500(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

void sub_232258520()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_255FAC488)
  {
    sub_2322B8FCC();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BE45A88];
    sub_2322585E8();
    sub_232245044(&qword_255FADBA0, v0, MEMORY[0x24BE45A80]);
    sub_232245044((unint64_t *)&qword_255FAC4A0, (uint64_t (*)(uint64_t))sub_2322585E8, MEMORY[0x24BDB9E20]);
    v1 = sub_2322B8AD4();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_255FAC488);
  }
}

void sub_2322585E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAC490)
  {
    sub_23225864C();
    v0 = sub_2322B8BA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAC490);
  }
}

void sub_23225864C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAC498)
  {
    sub_2322B8FC0();
    sub_2322582C8(255, (unint64_t *)&qword_255FADBC0);
    v0 = sub_2322B9458();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAC498);
  }
}

void sub_2322586CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAC4A8)
  {
    sub_232258520();
    sub_2322B8FC0();
    sub_2322582C8(255, (unint64_t *)&qword_255FADBC0);
    sub_232245044(&qword_255FAC4B0, (uint64_t (*)(uint64_t))sub_232258520, MEMORY[0x24BDB9740]);
    v0 = sub_2322B8AA4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAC4A8);
  }
}

void sub_23225879C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAC4B8)
  {
    sub_2322586CC();
    sub_2322B8F9C();
    sub_232245044(&qword_255FAC4C0, (uint64_t (*)(uint64_t))sub_2322586CC, MEMORY[0x24BE41D28]);
    v0 = sub_2322B8ABC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAC4B8);
  }
}

void sub_232258830()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_255FAC4C8)
  {
    sub_2322B8F9C();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BE459E0];
    sub_2322588F8();
    sub_232245044(&qword_255FADC00, v0, MEMORY[0x24BE459D8]);
    sub_232245044(&qword_255FAC4E0, (uint64_t (*)(uint64_t))sub_2322588F8, MEMORY[0x24BDB95F8]);
    v1 = sub_2322B8A98();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_255FAC4C8);
  }
}

void sub_2322588F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAC4D0)
  {
    sub_23225879C();
    sub_2322582C8(255, (unint64_t *)&qword_255FADBC0);
    sub_232245044(&qword_255FAC4D8, (uint64_t (*)(uint64_t))sub_23225879C, MEMORY[0x24BDB96C0]);
    v0 = sub_2322B8A8C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAC4D0);
  }
}

void sub_2322589B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAC4E8)
  {
    sub_232258830();
    sub_232258A78();
    sub_232245044(&qword_255FAC4F8, (uint64_t (*)(uint64_t))sub_232258830, MEMORY[0x24BDB9610]);
    sub_232245044(&qword_255FAC500, (uint64_t (*)(uint64_t))sub_232258A78, MEMORY[0x24BDB9DF8]);
    v0 = sub_2322B8AD4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAC4E8);
  }
}

void sub_232258A78()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAC4F0)
  {
    sub_232256E54(255, (unint64_t *)&unk_255FADC20, (unint64_t *)&unk_255FAF970, 0x24BDD3ED8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v0 = sub_2322B8B7C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAC4F0);
  }
}

void sub_232258AEC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAC508)
  {
    sub_2322589B0();
    sub_232256E54(255, &qword_255FAC3C0, (unint64_t *)&qword_255FAD9C0, 0x24BDD4100, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_232245044(&qword_255FAC510, (uint64_t (*)(uint64_t))sub_2322589B0, MEMORY[0x24BDB9740]);
    v0 = sub_2322B8ABC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAC508);
  }
}

void sub_232258BA0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAC518)
  {
    sub_232258AEC();
    sub_23224C618(255, (unint64_t *)&qword_255FACCA0);
    sub_232245044(&qword_255FAC520, (uint64_t (*)(uint64_t))sub_232258AEC, MEMORY[0x24BDB96C0]);
    sub_232258C54();
    v0 = sub_2322B8B10();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAC518);
  }
}

unint64_t sub_232258C54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FAC528;
  if (!qword_255FAC528)
  {
    v1 = sub_23224C618(255, (unint64_t *)&qword_255FACCA0);
    result = MEMORY[0x2349010BC](MEMORY[0x24BEE5670], v1);
    atomic_store(result, (unint64_t *)&qword_255FAC528);
  }
  return result;
}

uint64_t sub_232258CAC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_232258CE0(uint64_t a1)
{
  uint64_t v1;

  return sub_2322553E8(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_232258CEC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_232258D10(uint64_t a1)
{
  uint64_t v1;

  return sub_2322558E4(a1, v1);
}

void sub_232258D30(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_232258DCC(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  id v22;
  void *v23;
  void (*v24)(char *, char *, uint64_t);
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  void *v49;
  void *v50;
  id v51;
  void *v52;
  id v53;
  void *v54;
  uint64_t v55;
  os_log_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t ObjectType;
  uint64_t v60;
  uint64_t v61[5];
  uint64_t v62;

  v58 = a2;
  ObjectType = swift_getObjectType();
  v60 = sub_2322B8918();
  v3 = *(_QWORD *)(v60 - 8);
  v4 = MEMORY[0x24BDAC7A8](v60);
  v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v55 - v7;
  sub_23224BE78(0, (unint64_t *)&qword_255FAEE60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v55 - v10;
  v12 = sub_2322B8000();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v55 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v55 - v20;
  v22 = objc_msgSend(a1, sel_webpageURL);
  if (v22)
  {
    v23 = v22;
    sub_2322B7FDC();

    v24 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v24(v11, v19, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
    {
      v24(v21, v11, v12);
      type metadata accessor for VisionPrescriptionURLDecoder();
      v25 = sub_232246100((uint64_t)v21);
      if (v25)
      {
        v26 = v25;
        v27 = (void *)sub_2322B85AC();
        sub_2322B85B8();
        v28 = objc_allocWithZone((Class)type metadata accessor for VisionPrescriptionAddRecordConfirmationViewController());
        v29 = sub_2322B4378(v26, v27, (uint64_t)v61);

        v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A728]), sel_initWithRootViewController_, v29);
        objc_msgSend(v30, sel_setModalPresentationStyle_, 2);
        v31 = (void *)sub_2322B85C4();
        objc_msgSend(v31, sel_presentViewController_animated_completion_, v30, 1, 0);

        return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v21, v12);
      }
      else
      {
        sub_2322B88E8();
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v21, v12);
        v39 = sub_2322B890C();
        v40 = sub_2322B8FFC();
        v41 = v40;
        if (os_log_type_enabled(v39, v40))
        {
          v42 = swift_slowAlloc();
          v57 = swift_slowAlloc();
          v61[0] = v57;
          *(_DWORD *)v42 = 136315394;
          v56 = v39;
          v43 = sub_2322B9464();
          LODWORD(ObjectType) = v41;
          v62 = sub_232266EA0(v43, v44, v61);
          sub_2322B923C();
          swift_bridgeObjectRelease();
          *(_WORD *)(v42 + 12) = 2080;
          sub_23225B170((unint64_t *)&qword_255FAEE70, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
          v45 = sub_2322B93C8();
          v62 = sub_232266EA0(v45, v46, v61);
          sub_2322B923C();
          swift_bridgeObjectRelease();
          v47 = *(void (**)(char *, uint64_t))(v13 + 8);
          v47(v16, v12);
          v39 = v56;
          _os_log_impl(&dword_232241000, v56, (os_log_type_t)ObjectType, "[%s] Invalid VRX ingestion URL: %s", (uint8_t *)v42, 0x16u);
          v48 = v57;
          swift_arrayDestroy();
          MEMORY[0x234901170](v48, -1, -1);
          MEMORY[0x234901170](v42, -1, -1);
        }
        else
        {
          v47 = *(void (**)(char *, uint64_t))(v13 + 8);
          v47(v16, v12);
        }

        (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v60);
        if (qword_255FAB900 != -1)
          swift_once();
        sub_2322B7F58();
        sub_2322B7F58();
        v49 = (void *)sub_2322B8DEC();
        swift_bridgeObjectRelease();
        v50 = (void *)sub_2322B8DEC();
        swift_bridgeObjectRelease();
        v51 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v49, v50, 1);

        sub_2322B7F58();
        v52 = (void *)sub_2322B8DEC();
        swift_bridgeObjectRelease();
        v53 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_handler_, v52, 0, 0);

        objc_msgSend(v51, sel_addAction_, v53);
        v54 = (void *)sub_2322B85C4();
        objc_msgSend(v54, sel_presentViewController_animated_completion_, v51, 1, 0);

        return ((uint64_t (*)(char *, uint64_t))v47)(v21, v12);
      }
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  }
  sub_23225B12C((uint64_t)v11, (unint64_t *)&qword_255FAEE60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0]);
  sub_2322B88E8();
  v33 = sub_2322B890C();
  v34 = sub_2322B8FFC();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)swift_slowAlloc();
    v36 = swift_slowAlloc();
    v61[0] = v36;
    *(_DWORD *)v35 = 136315138;
    v37 = sub_2322B9464();
    v62 = sub_232266EA0(v37, v38, v61);
    sub_2322B923C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_232241000, v33, v34, "[%s] No URL supplied for VRX ingestion", v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234901170](v36, -1, -1);
    MEMORY[0x234901170](v35, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v60);
}

id sub_2322595D8(uint64_t a1)
{
  return sub_23225AE7C(a1, type metadata accessor for VisionAppPluginAppDelegate);
}

uint64_t type metadata accessor for VisionAppPluginAppDelegate()
{
  return objc_opt_self();
}

id sub_232259604()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t sub_232259628()
{
  id v0;

  v0 = objc_allocWithZone((Class)type metadata accessor for VisionInternalSettingsViewController());
  return sub_232259720();
}

uint64_t type metadata accessor for VisionInternalSettingsViewController()
{
  uint64_t result;

  result = qword_255FAC5C0;
  if (!qword_255FAC5C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2322596E4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_232259720()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v18;
  uint64_t v19;
  unint64_t v20;

  swift_getObjectType();
  v0 = sub_2322B80B4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598];
  sub_23224BE78(0, (unint64_t *)&unk_255FADB00, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_2322B83F0();
  v5 = swift_allocObject();
  v18 = xmmword_2322C0E70;
  *(_OWORD *)(v5 + 16) = xmmword_2322C0E70;
  sub_2322573A8(0, &qword_255FAC200, (unint64_t *)&qword_255FABD20, MEMORY[0x24BE41798], v4);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_2322C0E50;
  v7 = sub_2322B8570();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BE438C0];
  *(_QWORD *)(v6 + 56) = v7;
  v9 = sub_23225B170(&qword_255FADB80, 255, v8, MEMORY[0x24BE438A8]);
  *(_QWORD *)(v6 + 64) = v9;
  v10 = sub_23224FA10((uint64_t *)(v6 + 32));
  sub_232259A88((uint64_t)v10);
  *(_QWORD *)(v6 + 96) = v7;
  *(_QWORD *)(v6 + 104) = v9;
  v11 = sub_23224FA10((uint64_t *)(v6 + 72));
  sub_232259EA8((uint64_t)v11);
  sub_2322B80A8();
  sub_2322B8090();
  v12 = *(void (**)(char *, uint64_t))(v1 + 8);
  v12(v3, v0);
  sub_2322B83E4();
  v19 = 0x3C53447961727241;
  v20 = 0xE800000000000000;
  sub_2322B80A8();
  sub_2322B8090();
  v12(v3, v0);
  sub_2322B8EAC();
  swift_bridgeObjectRelease();
  sub_2322B8EAC();
  sub_2322B82F4();
  swift_allocObject();
  sub_2322B82E8();
  sub_2322B8360();
  sub_23225AEE0();
  sub_23225B170((unint64_t *)&qword_255FADB10, 255, (uint64_t (*)(uint64_t))sub_23225AEE0, MEMORY[0x24BE428C8]);
  v13 = sub_2322B8378();
  swift_release();
  sub_2322B863C();
  sub_232256EB4();
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = v18;
  v15 = sub_23225B170(&qword_255FAC620, 255, (uint64_t (*)(uint64_t))sub_23225AF3C, MEMORY[0x24BE43020]);
  *(_QWORD *)(v14 + 32) = v13;
  *(_QWORD *)(v14 + 40) = v15;
  swift_retain();
  sub_2322B8660();
  v16 = sub_2322B884C();
  swift_release();
  swift_release();
  return v16;
}

uint64_t sub_232259A88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[5];

  v36 = a1;
  v1 = sub_2322B8840();
  v34 = *(_QWORD *)(v1 - 8);
  v35 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v33 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_2322B8474();
  v30 = *(_QWORD *)(v3 - 8);
  v31 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v29 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_23224BE78(0, &qword_255FABDE8, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC408], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v28 = (char *)&v26 - v7;
  sub_23224BE78(0, (unint64_t *)&unk_255FADB30, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC088], v5);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v26 - v9;
  v11 = sub_2322B896C();
  v26 = *(_QWORD *)(v11 - 8);
  v27 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2322B893C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_2322B8A38();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v26 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322B8A14();
  sub_2322B8A20();
  v37[3] = v18;
  v37[4] = MEMORY[0x24BEBC5F0];
  v22 = sub_23224FA10(v37);
  (*(void (**)(uint64_t *, char *, uint64_t))(v19 + 16))(v22, v21, v18);
  sub_23224BE78(0, &qword_255FAC418, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC0E0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_2322B8984();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_2322C0E70;
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x24BEBC058], v14);
  v23 = sub_2322B8948();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v10, 1, 1, v23);
  sub_2322B8960();
  sub_2322B8954();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v27);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  *(_QWORD *)(swift_allocObject() + 16) = v32;
  v24 = sub_2322B899C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v28, 1, 1, v24);
  (*(void (**)(char *, _QWORD, uint64_t))(v30 + 104))(v29, *MEMORY[0x24BE43600], v31);
  (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v33, *MEMORY[0x24BE44C60], v35);
  sub_2322B8564();
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v18);
}

uint64_t sub_232259EA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20[5];

  v19 = a1;
  v1 = sub_2322B8840();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v20[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2322B8474();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23224BE78(0, &qword_255FABDE8, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC408], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v20[-1] - v10;
  v12 = sub_2322B8A38();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v20[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322B8A14();
  sub_2322B8A20();
  v20[3] = v12;
  v20[4] = MEMORY[0x24BEBC5F0];
  v16 = sub_23224FA10(v20);
  (*(void (**)(uint64_t *, char *, uint64_t))(v13 + 16))(v16, v15, v12);
  v17 = sub_2322B899C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v11, 1, 1, v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BE43600], v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BE44C60], v1);
  sub_2322B8564();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_23225A0F0()
{
  sub_2322B8858();
  return sub_2322B9020();
}

uint64_t sub_23225A124()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_2322B84EC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322B84B0();
  v4 = sub_2322B84E0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

id sub_23225A1AC(void *a1, uint64_t a2, uint64_t a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for VisionInternalSettingsViewController();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

uint64_t sub_23225A1F4(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  id v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void *v32;
  id v33;
  void *v34;
  uint64_t (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[5];
  _QWORD v45[5];
  _QWORD v46[5];
  uint64_t v47[6];

  v39 = a2;
  sub_23224BE78(0, &qword_255FAC628, (uint64_t (*)(uint64_t))MEMORY[0x24BE42678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v36 - v4;
  v42 = sub_2322B8714();
  v41 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2322B8918();
  v43 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v36 - v10;
  v12 = sub_2322B8594();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322B8588();
  v16 = objc_msgSend(a1, sel_resolvedHealthStore);
  if (v16)
  {
    v17 = v16;
    v38 = v8;
    v40 = v13;
    sub_2322B9044();
    sub_2322B905C();
    sub_23225B0E8((uint64_t)v47, (uint64_t)v45);
    v18 = v17;
    v19 = objc_msgSend(v18, sel_profileIdentifier);
    v20 = sub_2322B8288();
    v21 = (uint64_t (*)(uint64_t))MEMORY[0x24BE42678];
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v5, 1, 1, v20);
    sub_2322B8324();

    sub_23225B12C((uint64_t)v5, &qword_255FAC628, v21);
    sub_23225B0E8((uint64_t)v46, (uint64_t)v44);
    sub_2322B9068();
    sub_2322B86FC();
    v22 = objc_msgSend((id)objc_opt_self(), sel_visionPrescriptionType);
    v32 = (void *)sub_2322B857C();

    v33 = objc_msgSend(a1, sel_navigationController);
    if (v33)
    {
      v34 = v33;
      objc_msgSend(v33, sel_pushViewController_animated_, v32, 1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v41 + 8))(v7, v42);
    sub_232258500((uint64_t)v46);
    sub_232258500((uint64_t)v47);
    v35 = *(uint64_t (**)(char *, uint64_t))(v40 + 8);
  }
  else
  {
    v23 = v8;
    sub_2322B88DC();
    v24 = sub_2322B890C();
    v25 = sub_2322B8FFC();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      v37 = v12;
      v28 = v27;
      v47[0] = v27;
      *(_DWORD *)v26 = 136315138;
      v29 = sub_2322B9464();
      v40 = v13;
      v46[0] = sub_232266EA0(v29, v30, v47);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232241000, v24, v25, "%s Cannot push view. No valid resolved health store on view controller", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234901170](v28, -1, -1);
      MEMORY[0x234901170](v26, -1, -1);

      (*(void (**)(char *, uint64_t))(v43 + 8))(v11, v23);
      return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v15, v37);
    }

    (*(void (**)(char *, uint64_t))(v43 + 8))(v11, v23);
    v35 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
  }
  return v35(v15, v12);
}

void sub_23225A8DC(void *a1)
{
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  _QWORD v7[6];

  v2 = (id)HKVisionPrescriptionGenerateGlassesPrescriptionSample();
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3C40]), sel_init);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  v7[4] = sub_23225AFDC;
  v7[5] = v4;
  v7[0] = MEMORY[0x24BDAC760];
  v7[1] = 1107296256;
  v7[2] = sub_232258D30;
  v7[3] = &unk_250112F08;
  v5 = _Block_copy(v7);
  v6 = a1;
  swift_release();
  objc_msgSend(v3, sel_saveObject_withCompletion_, v2, v5);
  _Block_release(v5);

}

uint64_t sub_23225A9D0(char a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v6 = sub_2322B8D14();
  v21 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2322B8D2C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23225AFFC();
  v13 = (void *)sub_2322B90B0();
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  *(_QWORD *)(v14 + 32) = a3;
  aBlock[4] = sub_23225B064;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23225ADE4;
  aBlock[3] = &unk_250112F58;
  v15 = _Block_copy(aBlock);
  v16 = a2;
  v17 = a3;
  swift_release();
  sub_2322B8D20();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  v18 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  sub_23225B170((unint64_t *)&qword_255FAF980, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_23224BE78(0, (unint64_t *)&qword_255FACCB0, v18, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_23225B070();
  sub_2322B9278();
  MEMORY[0x2349007D4](0, v12, v8, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

void sub_23225ABE4(char a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  id v10;

  if ((a1 & 1) == 0)
  {
    sub_2322B92CC();
    sub_2322B8EAC();
    v5 = a2;
    sub_2322573A8(0, (unint64_t *)&unk_255FACCC0, (unint64_t *)&qword_255FADBC0, MEMORY[0x24BEE3EE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    sub_2322B8E34();
    sub_2322B8EAC();
    swift_bridgeObjectRelease();
  }
  v6 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  v7 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v6, v7, 1);

  v9 = (void *)sub_2322B8DEC();
  v10 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_handler_, v9, 0, 0);

  objc_msgSend(v8, sel_addAction_, v10);
  objc_msgSend(a3, sel_presentViewController_animated_completion_, v8, 1, 0);

}

uint64_t sub_23225ADE4(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

void sub_23225AE10()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_23225AE3C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_23225AE6C()
{
  return sub_23225AE7C(0, type metadata accessor for VisionInternalSettingsViewController);
}

id sub_23225AE7C(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_23225AEAC()
{
  return type metadata accessor for VisionInternalSettingsViewController();
}

uint64_t sub_23225AEB4(uint64_t a1, uint64_t a2)
{
  return sub_23225B170(&qword_255FAC610, a2, (uint64_t (*)(uint64_t))type metadata accessor for VisionAppPluginAppDelegate, (uint64_t)&unk_2322C1690);
}

void sub_23225AEE0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAC618)
  {
    sub_2322B82F4();
    v0 = sub_2322B8300();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAC618);
  }
}

void sub_23225AF3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FADB20)
  {
    sub_23225AEE0();
    sub_23225B170((unint64_t *)&qword_255FADB10, 255, (uint64_t (*)(uint64_t))sub_23225AEE0, MEMORY[0x24BE428C8]);
    v0 = sub_2322B8390();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FADB20);
  }
}

uint64_t sub_23225AFB8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23225AFDC(char a1, void *a2)
{
  uint64_t v2;

  return sub_23225A9D0(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_23225AFE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23225AFF4()
{
  return swift_release();
}

unint64_t sub_23225AFFC()
{
  unint64_t result;

  result = qword_255FACCA0;
  if (!qword_255FACCA0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255FACCA0);
  }
  return result;
}

uint64_t sub_23225B038()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_23225B064()
{
  uint64_t v0;

  sub_23225ABE4(*(_BYTE *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

unint64_t sub_23225B070()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FAF990;
  if (!qword_255FAF990)
  {
    sub_23224BE78(255, (unint64_t *)&qword_255FACCB0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2349010BC](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_255FAF990);
  }
  return result;
}

uint64_t sub_23225B0D0()
{
  return swift_deallocObject();
}

uint64_t sub_23225B0E0(void *a1)
{
  uint64_t v1;

  return sub_23225A1F4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_23225B0E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_23225B12C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;

  sub_23224BE78(0, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_23225B170(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x2349010BC](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

_BYTE *_s23VisionPrescriptionFieldOwCP(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t _s23VisionPrescriptionFieldOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF2)
    goto LABEL_17;
  if (a2 + 14 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 14) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 14;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 14;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 14;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xF;
  v8 = v6 - 15;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s23VisionPrescriptionFieldOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_23225B2A0 + 4 * byte_2322C16C5[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_23225B2D4 + 4 * byte_2322C16C0[v4]))();
}

uint64_t sub_23225B2D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23225B2DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23225B2E4);
  return result;
}

uint64_t sub_23225B2F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23225B2F8);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_23225B2FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23225B304(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23225B310(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_23225B318(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *_s23VisionPrescriptionFieldOMa()
{
  return &_s23VisionPrescriptionFieldON;
}

void sub_23225B330(char a1)
{
  __asm { BR              X10 }
}

id sub_23225B35C()
{
  return objc_msgSend((id)objc_opt_self(), sel_meterUnitWithMetricPrefix_, 4);
}

void sub_23225B410(uint64_t a1, uint64_t a2, char a3)
{
  sub_2322B8228();
  MEMORY[0x24BDAC7A8]();
  __asm { BR              X10 }
}

id sub_23225B494()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  double v7;
  void *v8;
  id v9;

  v5 = objc_msgSend((id)objc_opt_self(), sel_meterUnitWithMetricPrefix_, 4);
  if (!v5)
    return 0;
  v6 = v5;
  *(_BYTE *)(v4 - 81) = v1;
  sub_23225C7C8();
  sub_2322B81EC();
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v3 + 88))(v2, v0) != *MEMORY[0x24BE41A28])
  {

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v0);
    return 0;
  }
  (*(void (**)(uint64_t, uint64_t))(v3 + 96))(v2, v0);
  v7 = *(double *)(v2 + 16);
  v8 = *(void **)(v2 + 24);
  swift_bridgeObjectRelease();

  v9 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v6, v7);
  return v9;
}

uint64_t sub_23225B628(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_2322B8228();
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_2322B8918();
  MEMORY[0x24BDAC7A8](v5);
  if (a1)
    __asm { BR              X10 }
  return 0;
}

uint64_t sub_23225BB7C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23225BBB4 + 4 * byte_2322C16CA[a1]))(0xD00000000000001ALL, 0x80000002322BB450);
}

uint64_t sub_23225BBB4(uint64_t a1)
{
  return a1 + 2;
}

id sub_23225BC98(unsigned __int8 a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v13;

  v2 = a1;
  v3 = sub_2322B80D8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16F0]), sel_init);
  sub_2322B80CC();
  v8 = (void *)sub_2322B80C0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  objc_msgSend(v7, sel_setLocale_, v8);

  v9 = 2;
  switch(v2)
  {
    case 0:
    case 1:
    case 3:
      goto LABEL_5;
    case 11:
    case 12:
      objc_msgSend(v7, sel_setMinimumFractionDigits_, 1);
      v10 = 2;
      break;
    case 13:
    case 14:
      v10 = 1;
      objc_msgSend(v7, sel_setMinimumFractionDigits_, 1);
      break;
    default:
      v9 = 0;
LABEL_5:
      objc_msgSend(v7, sel_setMinimumFractionDigits_, v9);
      if (a1 > 0xEu)
        v10 = 0;
      else
        v10 = qword_2322C17D8[(char)a1];
      break;
  }
  objc_msgSend(v7, sel_setMaximumFractionDigits_, v10);
  v11 = objc_msgSend(v7, sel_minusSign);
  objc_msgSend(v7, sel_setNegativePrefix_, v11);

  return v7;
}

id sub_23225BE80@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id result;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;

  v4 = sub_2322B7E98();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23225BC98(a1);
  sub_2322B7E68();
  result = objc_msgSend(v8, sel_plusSign);
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v10 = result;
  sub_2322B8E1C();

  sub_2322B7E80();
  swift_bridgeObjectRelease();
  result = objc_msgSend(v8, sel_minusSign);
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v11 = result;
  sub_2322B8E1C();

  sub_2322B7E80();
  swift_bridgeObjectRelease();
  result = objc_msgSend(v8, sel_decimalSeparator);
  if (result)
  {
    v12 = result;
    sub_2322B8E1C();

    sub_2322B7E80();
    swift_bridgeObjectRelease();
    sub_2322B7E8C();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (id)(*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
  }
LABEL_7:
  __break(1u);
  return result;
}

BOOL sub_23225C014(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23225C028()
{
  sub_2322B9434();
  sub_2322B9440();
  return sub_2322B944C();
}

uint64_t sub_23225C06C()
{
  return sub_2322B9440();
}

uint64_t sub_23225C094()
{
  sub_2322B9434();
  sub_2322B9440();
  return sub_2322B944C();
}

void sub_23225C0D4(_QWORD *a1@<X8>)
{
  *a1 = &unk_250111B50;
}

id sub_23225C0E4@<X0>(uint64_t a1@<X8>)
{
  unsigned __int8 *v1;

  return sub_23225BE80(*v1, a1);
}

id sub_23225C0EC()
{
  unsigned __int8 *v0;

  return sub_23225BC98(*v0);
}

unint64_t sub_23225C0FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FAC630;
  if (!qword_255FAC630)
  {
    sub_23225C144();
    result = MEMORY[0x2349010BC](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_255FAC630);
  }
  return result;
}

void sub_23225C144()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAC638)
  {
    v0 = sub_2322B8F60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAC638);
  }
}

unint64_t sub_23225C19C()
{
  unint64_t result;

  result = qword_255FAC640;
  if (!qword_255FAC640)
  {
    result = MEMORY[0x2349010BC](&unk_2322C17A8, &_s23VisionPrescriptionFieldON);
    atomic_store(result, (unint64_t *)&qword_255FAC640);
  }
  return result;
}

void sub_23225C1E0(unsigned __int8 a1, uint64_t a2)
{
  void *v2;
  id v5;
  id v6;

  objc_opt_self();
  if (swift_dynamicCastObjCClass())
  {
    v5 = v2;
    sub_23225C3E4(a1, a2);
  }
  else
  {
    objc_opt_self();
    if (!swift_dynamicCastObjCClass())
LABEL_6:
      __asm { BR              X10 }
    v6 = v2;
    sub_23225C654(a1, a2);
  }

  goto LABEL_6;
}

void sub_23225C2E4()
{
  objc_opt_self();
  JUMPOUT(0x23225C2F8);
}

id sub_23225C3E4(unsigned __int8 a1, uint64_t a2)
{
  void *v2;
  char **v3;
  int v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;

  v3 = &selRef_leftEye;
  v4 = a1;
  if (a2 != 1)
    v3 = &selRef_rightEye;
  v5 = objc_msgSend(v2, *v3);
  v6 = v5;
  switch(v4)
  {
    case 0:
      if (!v5)
        return 0;
      v8 = objc_msgSend(v5, sel_sphere);
      goto LABEL_30;
    case 1:
      if (!v5)
        return 0;
      v8 = objc_msgSend(v5, sel_cylinder);
      goto LABEL_30;
    case 2:
      if (!v5)
        return 0;
      v8 = objc_msgSend(v5, sel_axis);
      goto LABEL_30;
    case 3:
      if (!v5)
        return 0;
      v8 = objc_msgSend(v5, sel_addPower);
LABEL_30:
      v7 = v8;
      goto LABEL_31;
    case 4:
      v8 = objc_msgSend(v5, sel_vertexDistance);
      goto LABEL_30;
    case 5:
      if (!v5)
        return 0;
      v9 = objc_msgSend(v5, sel_prism);
      if (!v9)
        goto LABEL_4;
      v10 = v9;
      v11 = objc_msgSend(v9, sel_amount);
      goto LABEL_27;
    case 6:
      if (!v5)
        return 0;
      v12 = objc_msgSend(v5, sel_prism);
      if (!v12)
        goto LABEL_4;
      v10 = v12;
      v11 = objc_msgSend(v12, sel_angle);
      goto LABEL_27;
    case 7:
      if (!v5)
        return 0;
      v13 = objc_msgSend(v5, sel_prism);
      if (!v13)
        goto LABEL_4;
      v10 = v13;
      v11 = objc_msgSend(v13, sel_horizontalAmount);
      goto LABEL_27;
    case 9:
      if (!v5)
        return 0;
      v14 = objc_msgSend(v5, sel_prism);
      if (v14)
      {
        v10 = v14;
        v11 = objc_msgSend(v14, sel_verticalAmount);
LABEL_27:
        v7 = v11;

LABEL_31:
      }
      else
      {
LABEL_4:

        return 0;
      }
      return v7;
    case 11:
      v8 = objc_msgSend(v5, sel_nearPupillaryDistance);
      goto LABEL_30;
    case 12:
      v8 = objc_msgSend(v5, sel_farPupillaryDistance);
      goto LABEL_30;
    default:
      goto LABEL_4;
  }
}

id sub_23225C654(unsigned __int8 a1, uint64_t a2)
{
  void *v2;
  char **v3;
  int v4;
  id v5;
  void *v6;
  id v7;
  id v8;

  v3 = &selRef_leftEye;
  v4 = a1;
  if (a2 != 1)
    v3 = &selRef_rightEye;
  v5 = objc_msgSend(v2, *v3);
  v6 = v5;
  switch(v4)
  {
    case 0:
      if (!v5)
        goto LABEL_13;
      v7 = objc_msgSend(v5, sel_sphere);
      goto LABEL_16;
    case 1:
      if (!v5)
        goto LABEL_13;
      v7 = objc_msgSend(v5, sel_cylinder);
      goto LABEL_16;
    case 2:
      if (!v5)
        goto LABEL_13;
      v7 = objc_msgSend(v5, sel_axis);
      goto LABEL_16;
    case 3:
      if (!v5)
        goto LABEL_13;
      v7 = objc_msgSend(v5, sel_addPower);
LABEL_16:
      v8 = v7;

      break;
    case 13:
      v7 = objc_msgSend(v5, sel_baseCurve);
      goto LABEL_16;
    case 14:
      v7 = objc_msgSend(v5, sel_diameter);
      goto LABEL_16;
    default:

LABEL_13:
      v8 = 0;
      break;
  }
  return v8;
}

unint64_t sub_23225C7C8()
{
  unint64_t result;

  result = qword_255FAC648;
  if (!qword_255FAC648)
  {
    result = MEMORY[0x2349010BC](&unk_2322C16F8, &_s23VisionPrescriptionFieldON);
    atomic_store(result, (unint64_t *)&qword_255FAC648);
  }
  return result;
}

unint64_t sub_23225C80C()
{
  unint64_t result;

  result = qword_255FAEEA0;
  if (!qword_255FAEEA0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255FAEEA0);
  }
  return result;
}

void sub_23225C848(uint64_t a1, char a2)
{
  void *v4;
  void *v5;
  id v6;
  unsigned __int8 v7;
  void *v8;
  void *v9;
  id v10;

  if ((a2 - 11) > 1u)
  {
    sub_2322B92CC();
    sub_2322B8EAC();
    sub_2322B9464();
    sub_2322B8EAC();
    swift_bridgeObjectRelease();
    sub_2322B8EAC();
    sub_2322B8E34();
    sub_2322B8EAC();
    swift_bridgeObjectRelease();
    sub_2322B8EAC();
    sub_2322B9350();
    __break(1u);
  }
  else
  {
    sub_232244290(a2);
    if (!v4
      || (v5 = v4,
          v6 = sub_2322449E8(),
          v7 = objc_msgSend(v6, sel_containsQuantity_, a1),
          v6,
          v5,
          (v7 & 1) == 0))
    {
      sub_232243B44(a2);
      if (v8)
      {
        v9 = v8;
        v10 = sub_2322449E8();
        objc_msgSend(v10, sel_containsQuantity_, a1);

      }
    }
  }
}

uint64_t type metadata accessor for VisionPrescriptionValidationController()
{
  return objc_opt_self();
}

id sub_23225CA20(void *a1, void *a2)
{
  char *v2;
  void *v3;
  uint64_t v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  id v24;
  uint64_t v25;
  unint64_t v26;
  objc_super v27;
  __int128 v28;
  __int128 v29;

  v3 = v2;
  *(_QWORD *)&v2[OBJC_IVAR____TtC21VisionHealthAppPlugin43VisionPrescriptionRecordAddedViewController_healthStore] = a1;
  v5 = qword_255FAB900;
  v24 = a1;
  if (v5 != -1)
    swift_once();
  sub_2322B7F58();
  sub_2322B7F58();
  v6 = objc_msgSend(a2, sel_metadata, 0xE000000000000000);
  v7 = MEMORY[0x24BEE0D00];
  if (!v6)
  {
    v28 = 0u;
    v29 = 0u;
    goto LABEL_11;
  }
  v8 = v6;
  v9 = sub_2322B8DC8();

  v10 = sub_2322B8E1C();
  if (!*(_QWORD *)(v9 + 16) || (v12 = sub_2322B26FC(v10, v11), (v13 & 1) == 0))
  {
    v28 = 0u;
    v29 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  sub_232250B14(*(_QWORD *)(v9 + 56) + 32 * v12, (uint64_t)&v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v29 + 1))
  {
LABEL_11:
    sub_232250A80((uint64_t)&v28);
    goto LABEL_12;
  }
  if (!swift_dynamicCast())
  {
LABEL_12:
    v14 = 0;
    v15 = 0xE000000000000000;
    goto LABEL_13;
  }
  v14 = v25;
  v15 = v26;
LABEL_13:
  sub_23224BE78(0, (unint64_t *)&qword_255FADB70, (uint64_t (*)(uint64_t))sub_23225D414, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_2322C0E70;
  *(_QWORD *)(v16 + 56) = v7;
  *(_QWORD *)(v16 + 64) = sub_23224EC60();
  *(_QWORD *)(v16 + 32) = v14;
  *(_QWORD *)(v16 + 40) = v15;
  sub_2322B8DF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = (id)HKHealthUIFrameworkBundle();
  v18 = (void *)sub_2322B8DEC();
  v19 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v18, v17);

  v20 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  v21 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  v27.receiver = v3;
  v27.super_class = (Class)type metadata accessor for VisionPrescriptionRecordAddedViewController();
  v22 = objc_msgSendSuper2(&v27, sel_initWithTitle_detailText_icon_contentLayout_, v20, v21, v19, 2);

  return v22;
}

void sub_23225CDAC()
{
  void *v0;
  id v1;
  id v2;
  double v3;
  id v4;
  void *v5;
  id v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for VisionPrescriptionRecordAddedViewController();
  objc_msgSendSuper2(&v7, sel_viewDidLoad);
  v1 = objc_msgSend(v0, sel_headerView);
  objc_msgSend(v1, sel_setAllowFullWidthIcon_, 1);

  v2 = objc_msgSend(v0, sel_headerView);
  LODWORD(v3) = 1036831949;
  objc_msgSend(v2, sel_setTitleHyphenationFactor_, v3);

  v4 = objc_msgSend((id)objc_opt_self(), sel_boldButton);
  if (qword_255FAB900 != -1)
    swift_once();
  sub_2322B7F58();
  v5 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setTitle_forState_, v5, 0, 0xE000000000000000);

  objc_msgSend(v4, sel_addTarget_action_forControlEvents_, v0, sel_doneButtonTapped, 64);
  v6 = objc_msgSend(v0, sel_buttonTray);
  objc_msgSend(v6, sel_addButton_, v4);

}

uint64_t sub_23225CFAC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  char v16;
  uint64_t result;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void (*v24)(char *, char *, uint64_t);
  id v25;
  void *v26;
  void *v27;
  uint64_t v28;

  v1 = v0;
  sub_23224BE78(0, (unint64_t *)&qword_255FAEE60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v28 - v3;
  v5 = sub_2322B8000();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v28 - v10;
  v12 = sub_2322B8D38();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (uint64_t *)((char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23225AFFC();
  *v15 = sub_2322B90B0();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x24BEE5610], v12);
  v16 = sub_2322B8D44();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v13 + 8))(v15, v12);
  if ((v16 & 1) != 0)
  {
    v18 = objc_msgSend(v1, sel_presentingViewController);
    if (v18)
    {
      v19 = v18;
      objc_msgSend(v18, sel_dismissViewControllerAnimated_completion_, 1, 0);

    }
    v20 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC21VisionHealthAppPlugin43VisionPrescriptionRecordAddedViewController_healthStore], sel_profileIdentifier);
    v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE3F818]), sel_initWithProfileIdentifier_, v20);

    v22 = objc_msgSend((id)objc_opt_self(), sel_visionPrescriptionType);
    v23 = objc_msgSend(v21, sel_URLForDataTypeDetailWithObjectType_, v22);

    if (v23)
    {
      sub_2322B7FDC();

      v24 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v24(v4, v9, v5);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
      {
        v24(v11, v4, v5);
        v25 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
        v26 = (void *)sub_2322B7FB8();
        sub_23228C56C(MEMORY[0x24BEE4AF8]);
        type metadata accessor for OpenExternalURLOptionsKey(0);
        sub_23225D468();
        v27 = (void *)sub_2322B8DBC();
        swift_bridgeObjectRelease();
        objc_msgSend(v25, sel_openURL_options_completionHandler_, v26, v27, 0);

        return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    }

    return sub_232245D20((uint64_t)v4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_23225D3B4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionRecordAddedViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for VisionPrescriptionRecordAddedViewController()
{
  return objc_opt_self();
}

unint64_t sub_23225D414()
{
  unint64_t result;

  result = qword_255FAF820;
  if (!qword_255FAF820)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255FAF820);
  }
  return result;
}

unint64_t sub_23225D468()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FABB78;
  if (!qword_255FABB78)
  {
    type metadata accessor for OpenExternalURLOptionsKey(255);
    result = MEMORY[0x2349010BC](&unk_2322C0B50, v1);
    atomic_store(result, (unint64_t *)&qword_255FABB78);
  }
  return result;
}

uint64_t type metadata accessor for VisionPrescriptionAddPrescriptionButtonCell()
{
  uint64_t result;

  result = qword_255FAC740;
  if (!qword_255FAC740)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23225D4EC()
{
  return swift_initClassMetadata2();
}

void sub_23225D528()
{
  void (*v0)(void);
  id v1;

  sub_2322B84F8();
  v0 = (void (*)(void))sub_2322B8504();
  v0();
  sub_2322B8168();
  v1 = (id)*MEMORY[0x24BDE58E8];
  sub_2322B9140();

}

void *sub_23225D58C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  uint64_t v18;

  v0 = sub_2322B91DC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2322B91AC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2322B91F4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v18 - v13;
  sub_2322B91E8();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEBD060], v4);
  sub_2322B91B8();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BEBD180], v0);
  sub_2322B91A0();
  sub_2322B91C4();
  v15 = objc_msgSend((id)objc_opt_self(), sel_configurationWithTextStyle_, *MEMORY[0x24BEBE1D0]);
  sub_2322B9194();
  sub_23225D7F8();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  v16 = (void *)sub_2322B9200();
  objc_msgSend(v16, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  return v16;
}

id sub_23225D774(void *a1, uint64_t a2, uint64_t a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for VisionPrescriptionAddPrescriptionButtonCell();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_23225D7BC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionAddPrescriptionButtonCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23225D7F0()
{
  return type metadata accessor for VisionPrescriptionAddPrescriptionButtonCell();
}

unint64_t sub_23225D7F8()
{
  unint64_t result;

  result = qword_255FAC790;
  if (!qword_255FAC790)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255FAC790);
  }
  return result;
}

uint64_t type metadata accessor for VisionPrescriptionManualDataEntryRemoveImageButtonCell()
{
  uint64_t result;

  result = qword_255FAC798;
  if (!qword_255FAC798)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23225D870()
{
  return swift_initClassMetadata2();
}

void *sub_23225D8AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v19;

  v0 = sub_2322B91DC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2322B91AC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2322B91F4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v19 - v13;
  sub_2322B91E8();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEBD060], v4);
  sub_2322B91B8();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BEBD180], v0);
  sub_2322B91A0();
  v15 = objc_msgSend((id)objc_opt_self(), sel_systemRedColor);
  sub_2322B91D0();
  v16 = objc_msgSend((id)objc_opt_self(), sel_configurationWithTextStyle_, *MEMORY[0x24BEBE1D0]);
  sub_2322B9194();
  sub_23225D7F8();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  v17 = (void *)sub_2322B9200();
  objc_msgSend(v17, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  return v17;
}

id sub_23225DAB0(void *a1, uint64_t a2, uint64_t a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for VisionPrescriptionManualDataEntryRemoveImageButtonCell();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_23225DAF8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionManualDataEntryRemoveImageButtonCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23225DB2C()
{
  return type metadata accessor for VisionPrescriptionManualDataEntryRemoveImageButtonCell();
}

uint64_t type metadata accessor for VisionPrescriptionViewAttachmentCell(uint64_t a1)
{
  return sub_23224E434(a1, qword_255FAC840);
}

uint64_t sub_23225DB48()
{
  return swift_initClassMetadata2();
}

uint64_t sub_23225DBC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v0 = sub_2322B8A38();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322B8A14();
  sub_2322B89FC();
  v5 = v4;
  result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_255FAC7F0 = v5;
  return result;
}

id sub_23225DC54()
{
  id v0;
  void *v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 1);
  objc_msgSend(v0, sel_setContentHorizontalAlignment_, 5);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  if (qword_255FAB900 != -1)
    swift_once();
  sub_2322B7F58();
  v1 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setTitle_forState_, v1, 0, 0xE000000000000000);

  return v0;
}

id sub_23225DD7C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = qword_255FAC828;
  v2 = *(void **)(v0 + qword_255FAC828);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_255FAC828);
  }
  else
  {
    v4 = objc_msgSend(*(id *)(v0 + qword_255FAC818), sel_heightAnchor);
    v5 = objc_msgSend(v4, sel_constraintEqualToConstant_, 0.0);

    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

char *sub_23225DE20(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  id v14;
  char *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  char *v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  objc_super v31;

  v5 = v4;
  v10 = qword_255FAC7F8;
  type metadata accessor for VisionPrescriptionImagePreviewProvider();
  v11 = (_QWORD *)swift_allocObject();
  v11[3] = 0;
  v11[4] = 0;
  v11[2] = 0;
  *(_QWORD *)&v5[v10] = v11;
  swift_unknownObjectWeakInit();
  v12 = &v5[qword_255FAC808];
  *(_OWORD *)v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  *((_QWORD *)v12 + 4) = 0;
  v13 = qword_255FAC810;
  v14 = objc_allocWithZone(MEMORY[0x24BEBD708]);
  v15 = v5;
  v16 = objc_msgSend(v14, sel_init);
  sub_23224C618(0, (unint64_t *)&unk_255FACCD0);
  v17 = (void *)sub_2322B9128();
  objc_msgSend(v16, sel_setFont_, v17);

  objc_msgSend(v16, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v16, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v5[v13] = v16;
  v18 = qword_255FAC818;
  *(_QWORD *)&v15[v18] = sub_23225DC54();
  v19 = qword_255FAC820;
  v20 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for VisionPrescriptionImagePreviewView()), sel_init);
  objc_msgSend(v20, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v15[v19] = v20;
  *(_QWORD *)&v15[qword_255FAC828] = 0;
  *(_QWORD *)&v15[qword_255FAC830] = 0;
  *(_QWORD *)&v15[qword_255FAC838] = 0;

  v31.receiver = v15;
  v31.super_class = (Class)type metadata accessor for VisionPrescriptionViewAttachmentCell(0);
  v21 = (char *)objc_msgSendSuper2(&v31, sel_initWithFrame_, a1, a2, a3, a4);
  v22 = objc_msgSend(v21, sel_contentView);
  objc_msgSend(v22, sel_addSubview_, *(_QWORD *)&v21[qword_255FAC810]);

  v23 = objc_msgSend(v21, sel_contentView);
  objc_msgSend(v23, sel_addSubview_, *(_QWORD *)&v21[qword_255FAC820]);

  v24 = objc_msgSend(v21, sel_contentView);
  v25 = qword_255FAC818;
  objc_msgSend(v24, sel_addSubview_, *(_QWORD *)&v21[qword_255FAC818]);

  v26 = (id)*MEMORY[0x24BDE58E8];
  sub_2322B9140();

  v27 = (void *)objc_opt_self();
  sub_23225E804();
  sub_23224C618(0, (unint64_t *)&qword_255FABD30);
  v28 = (void *)sub_2322B8F24();
  swift_bridgeObjectRelease();
  objc_msgSend(v27, sel_activateConstraints_, v28);

  v29 = *(id *)&v21[v25];
  objc_msgSend(v29, sel_addTarget_action_forControlEvents_, v21, sel_presentPreviewViewController, 64);

  return v21;
}

char *sub_23225E170(double a1, double a2, double a3, double a4)
{
  return sub_23225DE20(a1, a2, a3, a4);
}

void sub_23225E190(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_232261258();
}

uint64_t sub_23225E1B4()
{
  return sub_23225E818(&qword_255FAC830, (uint64_t (*)(uint64_t))sub_23225E1C8);
}

uint64_t sub_23225E1C8(char *a1)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  double v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v52;
  id v53;
  uint64_t v54;

  v2 = *(void **)&a1[qword_255FAC810];
  v3 = objc_msgSend(v2, sel_trailingAnchor);
  v4 = objc_msgSend(a1, sel_contentView);
  v5 = objc_msgSend(v4, (SEL)&selRef_CGColor);

  v52 = objc_msgSend(v3, sel_constraintEqualToAnchor_constant_, v5, 0.0);
  LODWORD(v6) = 1132068864;
  objc_msgSend(v52, sel_setPriority_, v6);
  sub_23224ECA4();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_2322C1920;
  v8 = objc_msgSend(v2, sel_topAnchor);
  v9 = objc_msgSend(a1, (SEL)0x25011AA48);
  v10 = objc_msgSend(v9, sel_topAnchor);

  v11 = objc_msgSend(v8, sel_constraintEqualToAnchor_constant_, v10, 0.0);
  *(_QWORD *)(v7 + 32) = v11;
  v54 = qword_255FAC818;
  v12 = objc_msgSend(*(id *)&a1[qword_255FAC818], sel_topAnchor);
  v13 = objc_msgSend(a1, (SEL)0x25011AA48);
  v14 = objc_msgSend(v13, sel_topAnchor);

  v15 = objc_msgSend(v12, sel_constraintEqualToAnchor_constant_, v14, 0.0);
  *(_QWORD *)(v7 + 40) = v15;
  v16 = *(void **)&a1[qword_255FAC820];
  v17 = objc_msgSend(v16, sel_topAnchor);
  v18 = objc_msgSend(v2, sel_bottomAnchor);
  v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v18, 0.0);

  *(_QWORD *)(v7 + 48) = v19;
  v20 = objc_msgSend(a1, (SEL)0x25011AA48);
  v21 = objc_msgSend(v20, sel_bottomAnchor);

  v22 = objc_msgSend(v16, sel_bottomAnchor);
  v23 = objc_msgSend(v21, sel_constraintEqualToAnchor_constant_, v22, 0.0);

  *(_QWORD *)(v7 + 56) = v23;
  v24 = objc_msgSend(v2, sel_leadingAnchor);
  v25 = objc_msgSend(a1, (SEL)0x25011AA48);
  v26 = objc_msgSend(v25, sel_leadingAnchor);

  v27 = objc_msgSend(v24, sel_constraintEqualToAnchor_constant_, v26, 0.0);
  *(_QWORD *)(v7 + 64) = v27;
  v28 = objc_msgSend(v2, sel_trailingAnchor);
  v29 = objc_msgSend(*(id *)&a1[v54], sel_leadingAnchor);
  v30 = objc_msgSend(v28, sel_constraintEqualToAnchor_constant_, v29, 0.0);

  *(_QWORD *)(v7 + 72) = v30;
  *(_QWORD *)(v7 + 80) = v52;
  v31 = *(void **)&a1[v54];
  v53 = v52;
  v32 = objc_msgSend(v31, sel_trailingAnchor);
  v33 = objc_msgSend(a1, (SEL)0x25011AA48);
  v34 = objc_msgSend(v33, sel_trailingAnchor);

  v35 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v34, 0.0);
  *(_QWORD *)(v7 + 88) = v35;
  v36 = objc_msgSend(v16, sel_leadingAnchor);
  v37 = objc_msgSend(a1, (SEL)0x25011AA48);
  v38 = objc_msgSend(v37, sel_leadingAnchor);

  v39 = objc_msgSend(v36, sel_constraintEqualToAnchor_constant_, v38, 0.0);
  *(_QWORD *)(v7 + 96) = v39;
  v40 = objc_msgSend(v16, sel_trailingAnchor);
  v41 = objc_msgSend(a1, (SEL)0x25011AA48);
  v42 = objc_msgSend(v41, sel_trailingAnchor);

  v43 = objc_msgSend(v40, sel_constraintEqualToAnchor_constant_, v42, 0.0);
  *(_QWORD *)(v7 + 104) = v43;
  v44 = objc_msgSend(a1, (SEL)0x25011AA48);
  v45 = objc_msgSend(v44, sel_trailingAnchor);

  v46 = objc_msgSend(v16, sel_trailingAnchor);
  v47 = objc_msgSend(v45, sel_constraintEqualToAnchor_constant_, v46, 0.0);

  *(_QWORD *)(v7 + 112) = v47;
  v48 = objc_msgSend(v2, sel_centerYAnchor);
  v49 = objc_msgSend(*(id *)&a1[v54], sel_centerYAnchor);
  v50 = objc_msgSend(v48, sel_constraintEqualToAnchor_, v49);

  *(_QWORD *)(v7 + 120) = v50;
  sub_2322B8F3C();

  return v7;
}

uint64_t sub_23225E804()
{
  return sub_23225E818(&qword_255FAC838, (uint64_t (*)(uint64_t))sub_23225E878);
}

uint64_t sub_23225E818(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a1;
  v4 = *(_QWORD *)(v2 + *a1);
  if (v4)
  {
    v5 = v4;
  }
  else
  {
    v5 = a2(v2);
    *(_QWORD *)(v2 + v3) = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_23225E878(char *a1)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  double v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  void *v51;
  id v52;
  uint64_t v53;

  v2 = *(void **)&a1[qword_255FAC810];
  v3 = objc_msgSend(v2, sel_trailingAnchor);
  v4 = objc_msgSend(a1, sel_contentView);
  v5 = objc_msgSend(v4, sel_trailingAnchor);

  v6 = objc_msgSend(v3, sel_constraintEqualToAnchor_constant_, v5, 0.0);
  LODWORD(v7) = 1132068864;
  v51 = v6;
  objc_msgSend(v6, sel_setPriority_, v7);
  sub_23224ECA4();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_2322C1930;
  v9 = objc_msgSend(v2, sel_topAnchor);
  v10 = objc_msgSend(a1, (SEL)0x25011AA48);
  v11 = objc_msgSend(v10, sel_topAnchor);

  v12 = objc_msgSend(v9, sel_constraintEqualToAnchor_constant_, v11, 10.0);
  *(_QWORD *)(v8 + 32) = v12;
  v53 = qword_255FAC818;
  v13 = objc_msgSend(*(id *)&a1[qword_255FAC818], sel_topAnchor);
  v14 = objc_msgSend(a1, (SEL)0x25011AA48);
  v15 = objc_msgSend(v14, sel_topAnchor);

  v16 = objc_msgSend(v13, sel_constraintEqualToAnchor_constant_, v15, 10.0);
  *(_QWORD *)(v8 + 40) = v16;
  v17 = *(void **)&a1[qword_255FAC820];
  v18 = objc_msgSend(v17, sel_topAnchor);
  v19 = objc_msgSend(v2, sel_bottomAnchor);
  v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v19, 10.0);

  *(_QWORD *)(v8 + 48) = v20;
  v21 = objc_msgSend(a1, sel_contentView);
  v22 = objc_msgSend(v21, sel_bottomAnchor);

  v23 = objc_msgSend(v17, sel_bottomAnchor);
  v24 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v23, 14.0);

  *(_QWORD *)(v8 + 56) = v24;
  v25 = objc_msgSend(v2, sel_leadingAnchor);
  v26 = objc_msgSend(a1, sel_contentView);
  v27 = objc_msgSend(v26, sel_leadingAnchor);

  if (qword_255FAB908 != -1)
    swift_once();
  v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_constant_, v27, *(double *)&qword_255FAC7F0);

  *(_QWORD *)(v8 + 64) = v28;
  v29 = objc_msgSend(v2, sel_trailingAnchor);
  v30 = objc_msgSend(*(id *)&a1[v53], sel_leadingAnchor);
  v31 = objc_msgSend(v29, (SEL)&selRef_stringFromNumber_ + 7, v30, -*(double *)&qword_255FAC7F0);

  *(_QWORD *)(v8 + 72) = v31;
  *(_QWORD *)(v8 + 80) = v51;
  v32 = *(void **)&a1[v53];
  v52 = v51;
  v33 = objc_msgSend(v32, sel_trailingAnchor);
  v34 = objc_msgSend(a1, sel_contentView);
  v35 = objc_msgSend(v34, sel_trailingAnchor);

  v36 = objc_msgSend(v33, (SEL)&selRef_stringFromNumber_ + 7, v35, -*(double *)&qword_255FAC7F0);
  *(_QWORD *)(v8 + 88) = v36;
  v37 = objc_msgSend(v17, sel_leadingAnchor);
  v38 = objc_msgSend(a1, sel_contentView);
  v39 = objc_msgSend(v38, sel_readableContentGuide);

  v40 = objc_msgSend(v39, sel_leadingAnchor);
  v41 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v40);

  *(_QWORD *)(v8 + 96) = v41;
  v42 = objc_msgSend(v17, sel_trailingAnchor);
  v43 = objc_msgSend(a1, sel_contentView);
  v44 = objc_msgSend(v43, sel_readableContentGuide);

  v45 = objc_msgSend(v44, sel_trailingAnchor);
  v46 = objc_msgSend(v42, sel_constraintEqualToAnchor_, v45);

  *(_QWORD *)(v8 + 104) = v46;
  v47 = objc_msgSend(v2, sel_centerYAnchor);
  v48 = objc_msgSend(*(id *)&a1[v53], sel_centerYAnchor);
  v49 = objc_msgSend(v47, sel_constraintEqualToAnchor_, v48);

  *(_QWORD *)(v8 + 112) = v49;
  sub_2322B8F3C();

  return v8;
}

void sub_23225EEB8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  _BYTE v8[24];
  uint64_t v9;

  v1 = v0 + qword_255FAC808;
  swift_beginAccess();
  sub_23224E5FC(v1, (uint64_t)v8);
  if (v9)
  {
    sub_23224EC14(0, (unint64_t *)&qword_255FABD20);
    type metadata accessor for VisionPrescriptionViewAttachmentItem(0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      if ((*(_BYTE *)(v7 + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_hasPadding) & 1) == 0)
      {
        v5 = (void *)objc_opt_self();
        sub_23225E804();
        sub_23224C618(0, (unint64_t *)&qword_255FABD30);
        v6 = (void *)sub_2322B8F24();
        swift_bridgeObjectRelease();
        objc_msgSend(v5, sel_deactivateConstraints_, v6);

        sub_23225E1B4();
        v4 = (void *)sub_2322B8F24();
        swift_bridgeObjectRelease();
        objc_msgSend(v5, sel_activateConstraints_, v4);
        swift_release();
        goto LABEL_7;
      }
      swift_release();
    }
  }
  else
  {
    sub_23224E5A0((uint64_t)v8);
  }
  v2 = (void *)objc_opt_self();
  sub_23225E1B4();
  sub_23224C618(0, (unint64_t *)&qword_255FABD30);
  v3 = (void *)sub_2322B8F24();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_deactivateConstraints_, v3);

  sub_23225E804();
  v4 = (void *)sub_2322B8F24();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_activateConstraints_, v4);
LABEL_7:

}

id sub_23225F0BC()
{
  char *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _BOOL8 v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v22;
  _BYTE v23[24];
  uint64_t v24;

  v1 = (uint64_t)&v0[qword_255FAC808];
  swift_beginAccess();
  sub_23224E5FC(v1, (uint64_t)v23);
  if (!v24)
  {
    sub_23224E5A0((uint64_t)v23);
    goto LABEL_6;
  }
  sub_23224EC14(0, (unint64_t *)&qword_255FABD20);
  type metadata accessor for VisionPrescriptionViewAttachmentItem(0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_6:
    v3 = 0;
    goto LABEL_7;
  }
  v2 = *(_QWORD *)(v22 + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_attachments);
  swift_bridgeObjectRetain();
  swift_release();
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_2322B9368();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
  }
LABEL_7:
  v4 = v3 < 2;
  objc_msgSend(*(id *)&v0[qword_255FAC818], sel_setHidden_, v4);
  v5 = sub_23225DD7C();
  objc_msgSend(v5, sel_setActive_, v4);

  v6 = *(void **)&v0[qword_255FAC810];
  sub_23224E5FC(v1, (uint64_t)v23);
  if (v24)
  {
    sub_23224EC14(0, (unint64_t *)&qword_255FABD20);
    type metadata accessor for VisionPrescriptionViewAttachmentItem(0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v7 = *(_QWORD *)(v22 + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_title + 8);
      swift_bridgeObjectRetain();
      swift_release();
      if (v7)
      {
        v8 = (void *)sub_2322B8DEC();
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
    }
  }
  else
  {
    sub_23224E5A0((uint64_t)v23);
  }
  v8 = 0;
LABEL_13:
  objc_msgSend(v6, sel_setText_, v8);

  v9 = objc_msgSend(v6, sel_text);
  if (v9)
  {
    v10 = v9;
    v11 = sub_2322B8E1C();
    v13 = v12;

    swift_bridgeObjectRelease();
    v14 = HIBYTE(v13) & 0xF;
    if ((v13 & 0x2000000000000000) == 0)
      v14 = v11 & 0xFFFFFFFFFFFFLL;
    v15 = v14 == 0;
  }
  else
  {
    v15 = 1;
  }
  objc_msgSend(v6, sel_setHidden_, v15);
  v16 = *(char **)&v0[qword_255FAC820];
  sub_23224E5FC(v1, (uint64_t)v23);
  if (v24)
  {
    sub_23224EC14(0, (unint64_t *)&qword_255FABD20);
    type metadata accessor for VisionPrescriptionViewAttachmentItem(0);
    if (swift_dynamicCast())
      v17 = v22;
    else
      v17 = 0;
  }
  else
  {
    sub_23224E5A0((uint64_t)v23);
    v17 = 0;
  }
  v18 = OBJC_IVAR____TtC21VisionHealthAppPlugin34VisionPrescriptionImagePreviewView_item;
  *(_QWORD *)&v16[OBJC_IVAR____TtC21VisionHealthAppPlugin34VisionPrescriptionImagePreviewView_item] = v17;
  swift_retain();
  swift_release();
  v19 = *(_QWORD *)&v16[v18];
  if (v19)
    v20 = objc_retain(*(id *)(v19
                            + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_previewImage));
  else
    v20 = 0;
  objc_msgSend(v16, sel_setImage_, v20);

  objc_msgSend(v16, sel_setNeedsLayout);
  swift_release();
  sub_23225EEB8();
  return objc_msgSend(v0, sel_setNeedsLayout);
}

uint64_t sub_23225F448()
{
  void *v0;
  uint64_t v1;
  uint64_t result;
  id v3;
  double v4;
  double v5;
  double v6;
  double v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  _BYTE v11[24];
  uint64_t v12;
  objc_super v13;

  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for VisionPrescriptionViewAttachmentCell(0);
  objc_msgSendSuper2(&v13, sel_layoutSubviews);
  v1 = (uint64_t)v0 + qword_255FAC808;
  swift_beginAccess();
  sub_23224E5FC(v1, (uint64_t)v11);
  if (v12)
  {
    sub_23224EC14(0, (unint64_t *)&qword_255FABD20);
    type metadata accessor for VisionPrescriptionViewAttachmentItem(0);
    result = swift_dynamicCast();
    if ((result & 1) != 0)
    {
      v3 = objc_msgSend(v0, sel_contentView);
      objc_msgSend(v3, sel_bounds);
      v5 = v4;
      v7 = v6;

      v8 = swift_allocObject();
      *(_QWORD *)(v8 + 16) = v0;
      v9 = v0;
      sub_2322601D4(v10, (void (*)(_QWORD))sub_232261920, v8, v5, v7);
      swift_release();
      return swift_release();
    }
  }
  else
  {
    result = sub_23224E5A0((uint64_t)v11);
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_23225F5AC(void *a1, uint64_t a2)
{
  id v3;
  id v4;

  if (a1)
  {
    v3 = objc_msgSend(a1, sel_UIImage);
    if (v3)
    {
      v4 = v3;
      objc_msgSend(*(id *)(a2 + qword_255FAC820), sel_setImage_);

    }
  }
}

void sub_23225F620(void *a1)
{
  id v1;

  v1 = a1;
  sub_23225F448();

}

uint64_t sub_23225F654()
{
  uint64_t v0;

  swift_release();
  swift_unknownObjectWeakDestroy();
  sub_23224E5A0(v0 + qword_255FAC808);

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id sub_23225F6F0()
{
  return sub_23225AE7C(0, (uint64_t (*)(void))type metadata accessor for VisionPrescriptionViewAttachmentCell);
}

uint64_t sub_23225F700(uint64_t a1)
{
  swift_release();
  swift_unknownObjectWeakDestroy();
  sub_23224E5A0(a1 + qword_255FAC808);

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23225F7A8()
{
  return type metadata accessor for VisionPrescriptionViewAttachmentCell(0);
}

uint64_t sub_23225F7B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + qword_255FAC808;
  swift_beginAccess();
  return sub_23224E5FC(v3, a1);
}

uint64_t sub_23225F800(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + qword_255FAC808;
  swift_beginAccess();
  sub_23224E53C(a1, v3);
  swift_endAccess();
  sub_23225F0BC();
  return sub_23224E5A0(a1);
}

id (*sub_23225F86C(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_23225F8B4;
}

id sub_23225F8B4(uint64_t a1, char a2)
{
  id result;

  result = (id)swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_23225F0BC();
  return result;
}

uint64_t sub_23225F8E4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + qword_255FAC800;
  swift_beginAccess();
  return MEMORY[0x2349011D0](v1);
}

void sub_23225F92C(void *a1)
{
  swift_beginAccess();
  swift_unknownObjectWeakAssign();

}

void (*sub_23225F980(_QWORD *a1))(id **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = qword_255FAC800;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x2349011D0](v5);
  return sub_23225F9F0;
}

void sub_23225F9F0(id **a1, char a2)
{
  id *v3;
  id v4;

  v3 = *a1;
  v4 = (*a1)[3];
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();

  }
  free(v3);
}

void sub_23225FA58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  unint64_t v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31[5];

  v1 = v0;
  swift_getObjectType();
  v2 = sub_2322B8918();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v29 - v7;
  v9 = v1 + qword_255FAC808;
  swift_beginAccess();
  sub_23224E5FC(v9, (uint64_t)v31);
  if (!v31[3])
  {
    sub_23224E5A0((uint64_t)v31);
    goto LABEL_9;
  }
  sub_23224EC14(0, (unint64_t *)&qword_255FABD20);
  type metadata accessor for VisionPrescriptionViewAttachmentItem(0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    sub_2322B88F4();
    v16 = sub_2322B890C();
    v17 = sub_2322B9014();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v31[0] = v19;
      *(_DWORD *)v18 = 136315138;
      v20 = sub_2322B9464();
      v30 = sub_232266EA0(v20, v21, v31);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232241000, v16, v17, "[%s] Item was not of type visionPrescriptionViewAttachmentItem", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234901170](v19, -1, -1);
      MEMORY[0x234901170](v18, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    return;
  }
  v10 = v30;
  v11 = v1 + qword_255FAC800;
  swift_beginAccess();
  v12 = MEMORY[0x2349011D0](v11);
  if (v12)
  {
    v13 = (void *)v12;
    v14 = *(_QWORD *)(v10 + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_attachments);
    if (v14 >> 62)
    {
      swift_bridgeObjectRetain();
      v28 = sub_2322B9368();
      swift_bridgeObjectRelease();
      if (v28)
      {
LABEL_6:
        if (*(_QWORD *)(*(_QWORD *)(v10
                                   + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_data)
                       + 16))
        {
          v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE5EC0]), sel_init);
          objc_msgSend(v15, sel_setDataSource_, v10);
          objc_msgSend(v15, sel_setDelegate_, v1);
          objc_msgSend(v15, sel_setCurrentPreviewItemIndex_, 0);
          objc_msgSend(v13, sel_presentViewController_animated_completion_, v15, 1, 0);
          swift_release();

          return;
        }
      }
    }
    else if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_6;
    }
    swift_release();

    return;
  }
  sub_2322B88F4();
  v22 = sub_2322B890C();
  v23 = sub_2322B9014();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    v30 = v25;
    *(_DWORD *)v24 = 136315138;
    v29[1] = v24 + 4;
    v26 = sub_2322B9464();
    v29[2] = sub_232266EA0(v26, v27, &v30);
    sub_2322B923C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_232241000, v22, v23, "[%s] Could not get parent view controller", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234901170](v25, -1, -1);
    MEMORY[0x234901170](v24, -1, -1);
    swift_release();

  }
  else
  {

    swift_release();
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

void sub_23225FEDC(void *a1)
{
  id v1;

  v1 = a1;
  sub_23225FA58();

}

id sub_23225FF14()
{
  id *v0;

  return objc_msgSend(*v0, sel_presentPreviewViewController);
}

uint64_t sub_23225FF24@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = 1;
  v2 = *MEMORY[0x24BE435F8];
  v3 = sub_2322B8474();
  return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_23225FF78()
{
  uint64_t v1;

  v1 = sub_2322B9464();
  sub_2322B8EAC();
  sub_2322B8090();
  sub_2322B8EAC();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_23225FFE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_uuid;
  v2 = sub_2322B80B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_232260080()
{
  return type metadata accessor for VisionPrescriptionViewAttachmentItem(0);
}

uint64_t type metadata accessor for VisionPrescriptionViewAttachmentItem(uint64_t a1)
{
  return sub_23224E434(a1, qword_255FAC8C0);
}

uint64_t sub_23226009C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2322B80B4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_232260144()
{
  return sub_23225FF78();
}

id sub_232260164()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 16);
  if (v1)
  {
    v2 = *(id *)(v0 + 16);
  }
  else
  {
    v3 = objc_msgSend((id)objc_opt_self(), sel_sharedGenerator);
    v4 = *(void **)(v0 + 16);
    *(_QWORD *)(v0 + 16) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

void sub_2322601D4(uint64_t a1, void (*a2)(_QWORD), uint64_t a3, double a4, double a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  char v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  double v29;
  double v30;
  double v31;
  double v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  void *v39;
  uint64_t v40;
  unint64_t v41;
  id v42;
  id v43;
  double v44;
  double v45;
  id v46;
  void *v47;
  void *v48;
  id v49;
  void *v50;
  id v51;
  id v52;
  _QWORD *v53;
  uint64_t v54;
  void *v55;
  char *v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  void (*v68)(_QWORD);
  uint64_t v69;
  uint64_t aBlock[7];

  v6 = v5;
  v68 = a2;
  v69 = a3;
  v10 = *v5;
  v11 = sub_2322B8918();
  v64 = *(_QWORD *)(v11 - 8);
  v65 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v66 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2322B88B8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_2322B8D38();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (uint64_t *)((char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23224C618(0, (unint64_t *)&qword_255FACCA0);
  *v20 = sub_2322B90B0();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v18 + 104))(v20, *MEMORY[0x24BEE5610], v17);
  v21 = sub_2322B8D44();
  (*(void (**)(uint64_t *, uint64_t))(v18 + 8))(v20, v17);
  if ((v21 & 1) == 0)
  {
    __break(1u);
    return;
  }
  v67 = v10;
  v22 = (void *)v6[3];
  if (!v22)
    goto LABEL_13;
  v23 = v22;
  swift_retain();
  v24 = sub_23225FF78();
  v26 = v25;
  if (v24 == sub_23225FF78() && v26 == v27)
  {
    swift_bridgeObjectRelease_n();
LABEL_7:
    objc_msgSend(v23, sel_size);
    v30 = v29;
    v32 = v31;
    swift_release();

    if (v30 == a4 && v32 == a5)
      return;
    goto LABEL_11;
  }
  v28 = sub_2322B93F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v28 & 1) != 0)
    goto LABEL_7;
  swift_release();

LABEL_11:
  v33 = (void *)v6[3];
  if (v33)
  {
    sub_232261760((void *)v6[3]);
    v34 = v33;
    sub_23226178C(v33);
    v35 = sub_232260164();
    objc_msgSend(v35, sel_cancelRequest_, v34);

  }
LABEL_13:
  v36 = sub_23226142C(a1);
  if (v36)
  {
    v39 = (void *)v36;
    v40 = v37;
    v41 = v38;
    sub_2322611D0(v37, v38);
    v42 = objc_msgSend(v39, sel_contentType);
    sub_2322B8894();

    sub_2322B8888();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    v43 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
    objc_msgSend(v43, sel_scale);
    v45 = v44;

    v46 = objc_allocWithZone(MEMORY[0x24BDE5EF0]);
    v47 = (void *)sub_2322B8018();
    v48 = (void *)sub_2322B8DEC();
    swift_bridgeObjectRelease();
    v49 = objc_msgSend(v46, sel_initWithData_contentType_size_scale_representationTypes_, v47, v48, -1, a4, a5, v45);
    sub_232261214(v40, v41);

    v50 = (void *)v6[3];
    v6[3] = v49;
    v6[4] = a1;
    v51 = v49;
    swift_retain();
    sub_23226178C(v50);
    v52 = sub_232260164();
    v53 = (_QWORD *)swift_allocObject();
    v54 = v69;
    v53[2] = v68;
    v53[3] = v54;
    v53[4] = v67;
    aBlock[4] = (uint64_t)sub_2322617DC;
    aBlock[5] = (uint64_t)v53;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_2322A0A40;
    aBlock[3] = (uint64_t)&unk_250113168;
    v55 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v52, sel_generateBestRepresentationForRequest_completionHandler_, v51, v55);
    _Block_release(v55);

    sub_232261214(v40, v41);
  }
  else
  {
    v56 = v66;
    sub_2322B88DC();
    v57 = sub_2322B890C();
    v58 = sub_2322B8FFC();
    if (os_log_type_enabled(v57, v58))
    {
      v59 = (uint8_t *)swift_slowAlloc();
      v60 = swift_slowAlloc();
      aBlock[0] = v60;
      *(_DWORD *)v59 = 136315138;
      v61 = sub_2322B9464();
      aBlock[6] = sub_232266EA0(v61, v62, aBlock);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232241000, v57, v58, "[%s] Asked to render preview image, but no attachments or data found", v59, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234901170](v60, -1, -1);
      MEMORY[0x234901170](v59, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v64 + 8))(v56, v65);
    v68(0);
  }
}

uint64_t sub_232260794(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  void *v31;
  id v32;
  void *v33;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t aBlock[6];

  v35[1] = a5;
  v36 = a3;
  v8 = sub_2322B8918();
  v37 = *(_QWORD *)(v8 - 8);
  v38 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2322B8D14();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_2322B8D2C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    sub_2322B88DC();
    v19 = a2;
    v20 = a2;
    v21 = sub_2322B890C();
    v22 = sub_2322B8FFC();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = swift_slowAlloc();
      v24 = swift_slowAlloc();
      aBlock[0] = v24;
      *(_DWORD *)v23 = 136315394;
      v25 = sub_2322B9464();
      v39 = sub_232266EA0(v25, v26, aBlock);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      v39 = (uint64_t)a2;
      v27 = a2;
      sub_2322618A8(0, (unint64_t *)&unk_255FACCC0, (unint64_t *)&qword_255FADBC0);
      v28 = sub_2322B8E34();
      v39 = sub_232266EA0(v28, v29, aBlock);
      sub_2322B923C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_232241000, v21, v22, "[%s] QLThumbnailGenerator request returned error: %s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x234901170](v24, -1, -1);
      MEMORY[0x234901170](v23, -1, -1);
    }
    else
    {

    }
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v10, v38);
  }
  else
  {
    sub_23224C618(0, (unint64_t *)&qword_255FACCA0);
    v38 = sub_2322B90B0();
    v30 = (_QWORD *)swift_allocObject();
    v30[2] = v36;
    v30[3] = a4;
    v30[4] = a1;
    aBlock[4] = (uint64_t)sub_23226182C;
    aBlock[5] = (uint64_t)v30;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_23225ADE4;
    aBlock[3] = (uint64_t)&unk_2501131B8;
    v31 = _Block_copy(aBlock);
    v32 = a1;
    swift_retain();
    swift_release();
    sub_2322B8D20();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    sub_232245044((unint64_t *)&qword_255FAF980, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_232261854();
    sub_232245044((unint64_t *)&qword_255FAF990, (uint64_t (*)(uint64_t))sub_232261854, MEMORY[0x24BEE12C8]);
    sub_2322B9278();
    v33 = (void *)v38;
    MEMORY[0x2349007D4](0, v18, v14, v31);
    _Block_release(v31);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
}

uint64_t sub_232260BA0()
{
  uint64_t v0;

  sub_23226178C(*(void **)(v0 + 24));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VisionPrescriptionImagePreviewProvider()
{
  return objc_opt_self();
}

id sub_232260DD4()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id result;

  v1 = OBJC_IVAR____TtC21VisionHealthAppPlugin34VisionPrescriptionImagePreviewView_imageHeightAnchorConstraint;
  v2 = *(void **)&v0[OBJC_IVAR____TtC21VisionHealthAppPlugin34VisionPrescriptionImagePreviewView_imageHeightAnchorConstraint];
  if (v2)
    objc_msgSend(v2, sel_setActive_, 0);
  v3 = objc_msgSend(v0, sel_image);
  if (v3 && (v4 = v3, objc_msgSend(v3, sel_size), v6 = v5, v8 = v7, v4, v6 > 0.0))
  {
    v9 = objc_msgSend(v0, sel_heightAnchor);
    v10 = objc_msgSend(v0, sel_widthAnchor);
    v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_multiplier_, v10, fmin(v8 / v6, 1.0));

  }
  else
  {
    v10 = objc_msgSend(v0, sel_heightAnchor);
    v11 = objc_msgSend(v10, sel_constraintEqualToConstant_, 0.0);
  }

  v12 = *(void **)&v0[v1];
  *(_QWORD *)&v0[v1] = v11;

  result = *(id *)&v0[v1];
  if (result)
    return objc_msgSend(result, sel_setActive_, 1);
  return result;
}

id sub_232260FB0(uint64_t a1)
{
  return sub_23225AE7C(a1, type metadata accessor for VisionPrescriptionImagePreviewView);
}

uint64_t type metadata accessor for VisionPrescriptionImagePreviewView()
{
  return objc_opt_self();
}

id sub_232261014(uint64_t a1)
{
  return *(id *)(a1 + qword_255FAC820);
}

id sub_23226118C()
{
  return sub_23225AE7C(0, type metadata accessor for QLItemSingleDataProvider);
}

uint64_t type metadata accessor for QLItemSingleDataProvider()
{
  return objc_opt_self();
}

uint64_t sub_2322611D0(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_232261214(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

void sub_232261258()
{
  char *v0;
  char *v1;
  uint64_t v2;
  _QWORD *v3;
  char *v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v1 = v0;
  v2 = qword_255FAC7F8;
  type metadata accessor for VisionPrescriptionImagePreviewProvider();
  v3 = (_QWORD *)swift_allocObject();
  v3[3] = 0;
  v3[4] = 0;
  v3[2] = 0;
  *(_QWORD *)&v1[v2] = v3;
  swift_unknownObjectWeakInit();
  v4 = &v1[qword_255FAC808];
  *(_OWORD *)v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((_QWORD *)v4 + 4) = 0;
  v5 = qword_255FAC810;
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  sub_23224C618(0, (unint64_t *)&unk_255FACCD0);
  v7 = (void *)sub_2322B9128();
  objc_msgSend(v6, sel_setFont_, v7);

  objc_msgSend(v6, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v1[v5] = v6;
  v8 = qword_255FAC818;
  *(_QWORD *)&v1[v8] = sub_23225DC54();
  v9 = qword_255FAC820;
  v10 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for VisionPrescriptionImagePreviewView()), sel_init);
  objc_msgSend(v10, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v1[v9] = v10;
  *(_QWORD *)&v1[qword_255FAC828] = 0;
  *(_QWORD *)&v1[qword_255FAC830] = 0;
  *(_QWORD *)&v1[qword_255FAC838] = 0;

  sub_2322B9350();
  __break(1u);
}

uint64_t sub_23226142C(uint64_t a1)
{
  unint64_t v2;
  void *v3;
  uint64_t result;
  id v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(a1 + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_attachments);
  if (!(v2 >> 62))
  {
    v3 = *(void **)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease();
    return (uint64_t)v3;
  }
  swift_bridgeObjectRetain();
  result = sub_2322B9368();
  v3 = (void *)result;
  if (!result)
    goto LABEL_10;
LABEL_3:
  if ((v2 & 0xC000000000000001) != 0)
  {
    v5 = (id)MEMORY[0x2349009FC](0, v2);
LABEL_6:
    v3 = v5;
    swift_bridgeObjectRelease();
    v6 = *(_QWORD **)(a1 + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_data);
    if (v6[2])
    {
      sub_2322611D0(v6[4], v6[5]);
    }
    else
    {

      return 0;
    }
    return (uint64_t)v3;
  }
  if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v5 = *(id *)(v2 + 32);
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

id sub_232261528(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  objc_class *v14;
  char *v15;
  uint64_t *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  objc_super v24;

  v3 = sub_2322B88B8();
  v4 = *(_QWORD *)(v3 - 8);
  result = (id)MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_attachments);
  if ((v8 & 0xC000000000000001) == 0)
  {
    if ((a1 & 0x8000000000000000) == 0)
    {
      if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10) > a1)
      {
        result = *(id *)(v8 + 8 * a1 + 32);
        v9 = result;
        goto LABEL_5;
      }
LABEL_10:
      __break(1u);
      goto LABEL_11;
    }
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  v9 = (void *)MEMORY[0x2349009FC](a1, v8);
  result = (id)swift_bridgeObjectRelease();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
LABEL_5:
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_data);
  if (*(_QWORD *)(v10 + 16) > a1)
  {
    v11 = v10 + 16 * a1;
    v12 = *(_QWORD *)(v11 + 32);
    v13 = *(_QWORD *)(v11 + 40);
    v14 = (objc_class *)type metadata accessor for QLItemSingleDataProvider();
    v15 = (char *)objc_allocWithZone(v14);
    v16 = (uint64_t *)&v15[OBJC_IVAR____TtC21VisionHealthAppPluginP33_CF6C513206421B216281CAD0791521A824QLItemSingleDataProvider_data];
    *v16 = v12;
    v16[1] = v13;
    sub_2322611D0(v12, v13);
    v24.receiver = v15;
    v24.super_class = v14;
    v17 = objc_msgSendSuper2(&v24, sel_init);
    v18 = objc_msgSend(v9, sel_contentType);
    sub_2322B8894();

    sub_2322B8888();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    v19 = objc_msgSend(v9, sel_name);
    sub_2322B8E1C();

    v20 = objc_allocWithZone(MEMORY[0x24BDE5EB8]);
    v21 = (void *)sub_2322B8DEC();
    swift_bridgeObjectRelease();
    v22 = (void *)sub_2322B8DEC();
    swift_bridgeObjectRelease();
    v23 = objc_msgSend(v20, sel_initWithDataProvider_contentType_previewTitle_, v17, v21, v22);

    return v23;
  }
LABEL_11:
  __break(1u);
  return result;
}

void *sub_232261760(void *result)
{
  id v1;

  if (result)
  {
    v1 = result;
    return (void *)swift_retain();
  }
  return result;
}

void *sub_23226178C(void *result)
{
  if (result)
  {

    return (void *)swift_release();
  }
  return result;
}

uint64_t sub_2322617B8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2322617DC(void *a1, void *a2)
{
  uint64_t *v2;

  return sub_232260794(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_2322617E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2322617F8()
{
  return swift_release();
}

uint64_t sub_232261800()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23226182C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32));
}

void sub_232261854()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FACCB0)
  {
    sub_2322B8D14();
    v0 = sub_2322B8F60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FACCB0);
  }
}

void sub_2322618A8(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_23224EC14(255, a3);
    v4 = sub_2322B9224();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_2322618FC()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_232261920(void *a1)
{
  uint64_t v1;

  sub_23225F5AC(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_232261930(void *a1, char a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  id v44[5];

  v6 = sub_2322B80B4();
  v42 = *(_QWORD *)(v6 - 8);
  v43 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v41 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232261F38(0);
  MEMORY[0x24BDAC7A8](v8);
  v36 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232261F54(0);
  v11 = v10;
  v34 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232261F70();
  v15 = *(_QWORD *)(v14 - 8);
  v39 = v14;
  v40 = v15;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23226201C();
  v37 = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v38 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v33 - v22;
  swift_beginAccess();
  sub_23224BE78(0, &qword_255FACD78, (uint64_t (*)(uint64_t))sub_232245CCC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  sub_2322B8BE8();
  swift_endAccess();
  v24 = swift_allocObject();
  *(_BYTE *)(v24 + 16) = a2;
  *(_QWORD *)(v24 + 24) = a1;
  *(_QWORD *)(v24 + 32) = a3;
  *(_QWORD *)(v24 + 40) = v35;
  sub_23224BE78(0, &qword_255FAC3D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_232245044(&qword_255FACD60, (uint64_t (*)(uint64_t))sub_232261F54, MEMORY[0x24BDB9EE8]);
  v25 = a1;
  swift_retain();
  sub_2322B8C6C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v11);
  sub_23224C618(0, (unint64_t *)&qword_255FACCA0);
  v44[0] = (id)sub_2322B90B0();
  v26 = sub_2322B9098();
  v27 = (uint64_t)v36;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v36, 1, 1, v26);
  sub_232245044(&qword_255FACD70, (uint64_t (*)(uint64_t))sub_232261F70, MEMORY[0x24BDB96C0]);
  sub_232258C54();
  v28 = v39;
  sub_2322B8CB4();
  v29 = v37;
  sub_232262F64(v27, (uint64_t (*)(_QWORD))sub_232261F38);

  (*(void (**)(char *, uint64_t))(v40 + 8))(v17, v28);
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v38, v23, v29);
  sub_2322B872C();
  swift_allocObject();
  sub_232245044(&qword_255FACD80, (uint64_t (*)(uint64_t))sub_23226201C, MEMORY[0x24BDB9A08]);
  sub_2322B8738();
  sub_2322B8378();
  swift_release();
  sub_232262DD4();
  sub_232245044(&qword_255FACD90, (uint64_t (*)(uint64_t))sub_232262DD4, MEMORY[0x24BE43020]);
  sub_2322B8360();
  swift_release();
  if (qword_255FAB900 != -1)
    swift_once();
  sub_2322B7F58();
  v44[0] = (id)0x74497265746F6F46;
  v44[1] = (id)0xEB000000005F6D65;
  v30 = v41;
  sub_2322B80A8();
  sub_2322B8090();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v30, v43);
  sub_2322B8EAC();
  swift_bridgeObjectRelease();
  v44[3] = (id)sub_2322B87E0();
  v44[4] = (id)sub_232245044(&qword_255FAC1F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE446A8], MEMORY[0x24BE44688]);
  sub_23224FA10((uint64_t *)v44);
  sub_2322B87D4();
  sub_232262E30();
  sub_232245044(&qword_255FACDA0, (uint64_t (*)(uint64_t))sub_232262E30, MEMORY[0x24BE428C8]);
  v31 = sub_2322B836C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v23, v29);
  sub_232258500((uint64_t)v44);
  sub_232245044(&qword_255FACDA8, (uint64_t (*)(uint64_t))sub_232262EA8, MEMORY[0x24BE42788]);
  return v31;
}

void sub_232261F38(uint64_t a1)
{
  sub_23224BE78(a1, &qword_255FAC480, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

void sub_232261F54(uint64_t a1)
{
  sub_23224BE78(a1, &qword_255FACD50, (uint64_t (*)(uint64_t))sub_232245CCC, MEMORY[0x24BDB9ED8]);
}

void sub_232261F70()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FACD58)
  {
    sub_232261F54(255);
    sub_23224BE78(255, &qword_255FAC3D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_232245044(&qword_255FACD60, (uint64_t (*)(uint64_t))sub_232261F54, MEMORY[0x24BDB9EE8]);
    v0 = sub_2322B8ABC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FACD58);
  }
}

void sub_23226201C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FACD68)
  {
    sub_232261F70();
    sub_23224C618(255, (unint64_t *)&qword_255FACCA0);
    sub_232245044(&qword_255FACD70, (uint64_t (*)(uint64_t))sub_232261F70, MEMORY[0x24BDB96C0]);
    sub_232258C54();
    v0 = sub_2322B8B10();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FACD68);
  }
}

uint64_t sub_2322620D0@<X0>(uint64_t a1@<X0>, int a2@<W1>, void *a3@<X2>, uint64_t a4@<X3>, void (*a5)(char *, uint64_t)@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  int v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  _QWORD *v32;
  void *v33;
  id v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t (*v38)(uint64_t);
  uint64_t result;
  id v40;
  uint64_t (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  id v54;
  char *v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(uint64_t);
  uint64_t v60;
  uint64_t (*v61)(uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t *v67;
  uint64_t v68;
  void *v69;
  id v70;
  char *v71;
  void (*v72)(char *, uint64_t);
  uint64_t v73;
  uint64_t (*v74)(uint64_t);
  _QWORD v75[2];
  uint64_t *v76;
  id v77;
  __int128 v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t);
  uint64_t *v83;
  uint64_t v84;
  char *v85;
  void *v86;
  uint64_t v87;
  int v88;

  v82 = a5;
  v86 = a3;
  v10 = sub_2322B80B4();
  v87 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v85 = (char *)v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232245CCC();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_2322B8000();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)v75 - v20;
  sub_232262F20(a1, (uint64_t)v14);
  v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15);
  v83 = a6;
  v88 = a2;
  if (v22 == 1)
  {
    v23 = v10;
    sub_232262F64((uint64_t)v14, (uint64_t (*)(_QWORD))sub_232245CCC);
    v24 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598];
    sub_23224BE78(0, (unint64_t *)&unk_255FADB00, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v25 = *(unsigned __int8 *)(*(_QWORD *)(sub_2322B83F0() - 8) + 80);
    v26 = (v25 + 32) & ~v25;
    v27 = swift_allocObject();
    v80 = xmmword_2322C0E70;
    *(_OWORD *)(v27 + 16) = xmmword_2322C0E70;
    v84 = v27;
    v81 = v27 + v26;
    sub_23224BE78(0, &qword_255FAC200, (uint64_t (*)(uint64_t))sub_2322515F4, v24);
    v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = v80;
    *(_QWORD *)&v80 = v28 + 32;
    if (qword_255FAB900 != -1)
      swift_once();
    v79 = sub_2322B7F58();
    *(_QWORD *)&v78 = v29;
    v30 = (void *)sub_2322B8DEC();
    v31 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v30);

    v32 = (_QWORD *)swift_allocObject();
    v33 = v86;
    v32[2] = v86;
    v32[3] = a4;
    v32[4] = v82;
    type metadata accessor for VisionPrescriptionManualDataEntryAddImageButtonCell();
    v34 = v33;
    swift_retain();
    sub_2322B8294();
    v35 = v85;
    sub_2322B80A8();
    sub_2322B8090();
    v36 = *(void (**)(char *, uint64_t))(v87 + 8);
    v36(v35, v23);
    v37 = sub_2322B851C();
    v38 = (uint64_t (*)(uint64_t))MEMORY[0x24BE43850];
    *(_QWORD *)(v28 + 56) = v37;
    *(_QWORD *)(v28 + 64) = sub_232245044(&qword_255FACDC0, v38, MEMORY[0x24BE43840]);
    sub_23224FA10((uint64_t *)v80);
    sub_2322B8510();
    sub_2322B80A8();
    sub_2322B8090();
    v36(v35, v23);
    result = sub_2322B83E4();
LABEL_11:
    a6 = v83;
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v14, v15);
  sub_23224C618(0, &qword_255FACDC8);
  v40 = static UIImage.pdfThumbnail(from:)((uint64_t)v21);
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v21, v15);
  v81 = v15;
  *(_QWORD *)&v80 = v21;
  if (v40)
  {
    v82 = *(void (**)(char *, uint64_t))(v16 + 8);
    v82(v19, v15);
LABEL_8:
    v79 = v10;
    v41 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598];
    sub_23224BE78(0, (unint64_t *)&unk_255FADB00, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v42 = *(unsigned __int8 *)(*(_QWORD *)(sub_2322B83F0() - 8) + 80);
    v43 = (v42 + 32) & ~v42;
    v44 = swift_allocObject();
    *(_OWORD *)(v44 + 16) = xmmword_2322C0E70;
    v84 = v44;
    *(_QWORD *)&v78 = v44 + v43;
    sub_23224BE78(0, &qword_255FAC200, (uint64_t (*)(uint64_t))sub_2322515F4, v41);
    v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = xmmword_2322C0E50;
    v46 = type metadata accessor for VisionPrescriptionViewAttachmentItem(0);
    v47 = swift_allocObject();
    type metadata accessor for VisionPrescriptionViewAttachmentCell(0);
    sub_232245044(&qword_255FACDB8, type metadata accessor for VisionPrescriptionViewAttachmentCell, (uint64_t)&unk_2322C1BC4);
    v48 = v40;
    *(_QWORD *)(v47 + 16) = sub_2322B8294();
    *(_QWORD *)(v47 + 24) = v49;
    sub_2322B80A8();
    v50 = (_QWORD *)(v47 + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_title);
    *v50 = 0;
    v50[1] = 0;
    swift_bridgeObjectRelease();
    *(_BYTE *)(v47 + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_hasPadding) = 0;
    v51 = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(v47 + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_attachments) = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(v47 + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_data) = v51;
    v77 = v48;
    *(_QWORD *)(v47 + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_previewImage) = v48;
    *(_QWORD *)(v45 + 56) = v46;
    *(_QWORD *)(v45 + 64) = sub_232245044(&qword_255FACDD0, type metadata accessor for VisionPrescriptionViewAttachmentItem, (uint64_t)&unk_2322C1ADC);
    *(_QWORD *)(v45 + 32) = v47;
    v76 = (uint64_t *)(v45 + 72);
    if (qword_255FAB900 != -1)
      swift_once();
    v75[1] = sub_2322B7F58();
    v52 = swift_allocObject();
    v53 = v86;
    *(_QWORD *)(v52 + 16) = v86;
    type metadata accessor for VisionPrescriptionManualDataEntryRemoveImageButtonCell();
    v54 = v53;
    sub_2322B8294();
    v55 = v85;
    sub_2322B80A8();
    sub_2322B8090();
    v56 = *(void (**)(char *, uint64_t))(v87 + 8);
    v57 = v79;
    v56(v55, v79);
    v58 = sub_2322B851C();
    v59 = (uint64_t (*)(uint64_t))MEMORY[0x24BE43850];
    *(_QWORD *)(v45 + 96) = v58;
    *(_QWORD *)(v45 + 104) = sub_232245044(&qword_255FACDC0, v59, MEMORY[0x24BE43840]);
    sub_23224FA10(v76);
    sub_2322B8510();
    sub_2322B80A8();
    sub_2322B8090();
    v56(v55, v57);
    sub_2322B83E4();

    result = ((uint64_t (*)(_QWORD, uint64_t))v82)(v80, v81);
    goto LABEL_11;
  }
  v40 = static UIImage.withData(at:)();
  v82 = *(void (**)(char *, uint64_t))(v16 + 8);
  v82(v19, v15);
  if (v40)
    goto LABEL_8;
  v60 = v10;
  v61 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598];
  sub_23224BE78(0, (unint64_t *)&unk_255FADB00, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v62 = *(unsigned __int8 *)(*(_QWORD *)(sub_2322B83F0() - 8) + 80);
  v63 = (v62 + 32) & ~v62;
  v64 = swift_allocObject();
  v78 = xmmword_2322C0E70;
  *(_OWORD *)(v64 + 16) = xmmword_2322C0E70;
  v84 = v64;
  v79 = v64 + v63;
  sub_23224BE78(0, &qword_255FAC200, (uint64_t (*)(uint64_t))sub_2322515F4, v61);
  v65 = swift_allocObject();
  *(_OWORD *)(v65 + 16) = v78;
  *(_QWORD *)&v78 = v65 + 32;
  if (qword_255FAB900 != -1)
    swift_once();
  v66 = (void *)sub_2322B7F58();
  v76 = v67;
  v77 = v66;
  v68 = swift_allocObject();
  v69 = v86;
  *(_QWORD *)(v68 + 16) = v86;
  type metadata accessor for VisionPrescriptionManualDataEntryRemoveImageButtonCell();
  v70 = v69;
  sub_2322B8294();
  v71 = v85;
  sub_2322B80A8();
  sub_2322B8090();
  v72 = *(void (**)(char *, uint64_t))(v87 + 8);
  v72(v71, v60);
  v73 = sub_2322B851C();
  v74 = (uint64_t (*)(uint64_t))MEMORY[0x24BE43850];
  *(_QWORD *)(v65 + 56) = v73;
  *(_QWORD *)(v65 + 64) = sub_232245044(&qword_255FACDC0, v74, MEMORY[0x24BE43840]);
  sub_23224FA10((uint64_t *)v78);
  sub_2322B8510();
  sub_2322B80A8();
  sub_2322B8090();
  v72(v71, v60);
  sub_2322B83E4();
  result = ((uint64_t (*)(_QWORD, uint64_t))v82)(v80, v81);
LABEL_12:
  *a6 = v84;
  return result;
}

uint64_t sub_232262BC0()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_232262BEC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_2322620D0(a1, *(unsigned __int8 *)(v2 + 16), *(void **)(v2 + 24), *(_QWORD *)(v2 + 32), *(void (**)(char *, uint64_t))(v2 + 40), a2);
}

uint64_t sub_232262BFC(void *a1, void *a2, uint64_t a3)
{
  id v6;
  uint64_t v7;

  v6 = objc_msgSend((id)objc_opt_self(), sel_sharedPhotoLibrary);
  v7 = sub_2322634A8(a1, a2, v6, a3);

  return v7;
}

uint64_t sub_232262C6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, uint64_t);
  uint64_t v8;
  uint64_t v10;

  v0 = sub_2322B84EC();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v10 - v5;
  sub_2322B84B0();
  sub_2322B848C();
  v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v6, v0);
  v8 = sub_2322B84E0();
  v7(v4, v0);
  return v8;
}

uint64_t sub_232262D30()
{
  type metadata accessor for VisionPrescriptionManualDataEntryAddImageButtonCell();
  sub_2322B9020();
  type metadata accessor for VisionPrescriptionViewAttachmentCell(0);
  sub_232245044(&qword_255FACDB8, type metadata accessor for VisionPrescriptionViewAttachmentCell, (uint64_t)&unk_2322C1BC4);
  sub_2322B9020();
  type metadata accessor for VisionPrescriptionManualDataEntryRemoveImageButtonCell();
  sub_2322B9020();
  sub_2322B87BC();
  return sub_2322B902C();
}

void sub_232262DD4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FACD88)
  {
    sub_2322B872C();
    v0 = sub_2322B8390();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FACD88);
  }
}

void sub_232262E30()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FACD98)
  {
    sub_232262DD4();
    sub_232245044(&qword_255FACD90, (uint64_t (*)(uint64_t))sub_232262DD4, MEMORY[0x24BE43020]);
    v0 = sub_2322B8300();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FACD98);
  }
}

void sub_232262EA8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FACDB0)
  {
    sub_232262E30();
    sub_232245044(&qword_255FACDA0, (uint64_t (*)(uint64_t))sub_232262E30, MEMORY[0x24BE428C8]);
    v0 = sub_2322B82C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FACDB0);
  }
}

uint64_t sub_232262F20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_232245CCC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_232262F64(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_232262FA0()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_232262FCC(void *a1)
{
  uint64_t v1;

  return sub_232262BFC(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_232262FD8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_232262FFC()
{
  return sub_232299B34();
}

uint64_t sub_23226301C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  _QWORD *v7;
  id v8;
  id v9;

  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a2;
  v7[3] = a3;
  v7[4] = a4;
  v8 = a4;
  swift_retain();
  v9 = a3;
  sub_2322B8204();
  return swift_release();
}

void sub_23226308C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6;

  if (a1 == 2)
  {
    sub_2322B8210();
  }
  else if (a1 == 3)
  {
    sub_2322B5264(4, 0, 0, 0x10100u >> (8 * *(_BYTE *)(a2 + 64)));
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDFA1B8]), sel_init);
    objc_msgSend(v6, sel_setDelegate_, a3);
    if (a4)
      objc_msgSend(a4, sel_presentViewController_animated_completion_, v6, 1, 0);

  }
}

void sub_232263170(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;

  sub_23224BE78(0, &qword_255FACDF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDE3960], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v21 - v9;
  v11 = sub_2322B8DB0();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v21 - v16;
  sub_2322B5264(5, 0, 0, 0x10100u >> (8 * *(_BYTE *)(a2 + 64)));
  v18 = a3;
  sub_2322B8D8C();
  sub_2322B8D98();
  sub_2322B8D5C();
  v19 = sub_2322B8D68();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v10, 0, 1, v19);
  sub_2322B8DA4();
  sub_23224C618(0, &qword_255FACDF8);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
  v20 = (void *)sub_2322B9110();
  sub_232245044(&qword_255FACE00, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryImageSelectionHandler, (uint64_t)&unk_2322C3338);
  swift_unknownObjectRetain();
  sub_2322B911C();
  if (a5)
  {
    objc_msgSend(a5, sel_presentViewController_animated_completion_, v20, 1, 0);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);

  }
}

void sub_232263384(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6;
  id v7;
  void *v8;
  id v9;

  sub_2322B5264(6, 0, 0, 0x10100u >> (8 * *(_BYTE *)(a2 + 64)));
  v6 = (id)HKVisionPrescriptionSupportedImageUTTypeIdentifiers();
  sub_2322B88B8();
  sub_2322B8F30();

  v7 = objc_allocWithZone(MEMORY[0x24BEBD560]);
  v8 = (void *)sub_2322B8F24();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v7, sel_initForOpeningContentTypes_asCopy_, v8, 1);

  objc_msgSend(v9, sel_setDelegate_, a3);
  objc_msgSend(v9, sel_setAllowsMultipleSelection_, 0);
  if (a4)
    objc_msgSend(a4, sel_presentViewController_animated_completion_, v9, 1, 0);

}

uint64_t sub_2322634A8(void *a1, void *a2, void *a3, uint64_t a4)
{
  void *v7;
  id v8;
  _QWORD *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  _QWORD *v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  _QWORD *v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v39;
  unint64_t v41;

  v41 = MEMORY[0x24BEE4AF8];
  if ((sub_2322B81F8() & 1) != 0)
  {
    sub_23224C618(0, &qword_255FACDD8);
    if (qword_255FAB900 != -1)
      swift_once();
    sub_2322B7F58();
    v7 = (void *)sub_2322B8DEC();
    v8 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v7, 0xE000000000000000);

    v9 = (_QWORD *)swift_allocObject();
    v9[2] = a4;
    v9[3] = a2;
    v9[4] = a1;
    v10 = a1;
    swift_retain();
    v11 = a2;
    v12 = sub_2322B9188();
    MEMORY[0x234900630](v12, v13, v14, v15, v16);
    if (*(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_2322B8F48();
    sub_2322B8F54();
    sub_2322B8F3C();
  }
  sub_23224C618(0, &qword_255FACDD8);
  if (qword_255FAB900 != -1)
    swift_once();
  sub_2322B7F58();
  v17 = (void *)sub_2322B8DEC();
  v18 = (void *)objc_opt_self();
  v19 = objc_msgSend(v18, sel_systemImageNamed_, v17, 0xE000000000000000);

  v20 = (_QWORD *)swift_allocObject();
  v20[2] = a4;
  v20[3] = a3;
  v20[4] = a2;
  v20[5] = a1;
  v39 = a1;
  v21 = a3;
  swift_retain();
  v22 = a2;
  v23 = sub_2322B9188();
  MEMORY[0x234900630](v23, v24, v25, v26, v27);
  if (*(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_2322B8F48();
  sub_2322B8F54();
  sub_2322B8F3C();
  sub_2322B7F58();
  v28 = (void *)sub_2322B8DEC();
  v29 = objc_msgSend(v18, sel_systemImageNamed_, v28, 0xE000000000000000, 0, 0, sub_232263AF0, v20);

  v30 = (_QWORD *)swift_allocObject();
  v30[2] = a4;
  v30[3] = v22;
  v30[4] = a1;
  swift_retain();
  v31 = v22;
  v32 = v39;
  v33 = sub_2322B9188();
  MEMORY[0x234900630](v33, v34, v35, v36, v37);
  if (*(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_2322B8F48();
  sub_2322B8F54();
  sub_2322B8F3C();
  if (v41 >> 62)
  {
    sub_23224C618(0, &qword_255FACDE0);
    swift_bridgeObjectRetain();
    sub_2322B935C();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_2322B9404();
    sub_23224C618(0, &qword_255FACDE0);
  }
  swift_bridgeObjectRelease();
  sub_23224C618(0, &qword_255FACDE8);
  return sub_2322B9134();
}

uint64_t sub_232263AB4()
{
  id *v0;

  swift_release();

  return swift_deallocObject();
}

void sub_232263AF0(uint64_t a1)
{
  uint64_t v1;

  sub_232263170(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40));
}

void sub_232263B00(uint64_t a1)
{
  uint64_t v1;

  sub_232263384(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_232263B10(uint64_t a1)
{
  uint64_t v1;

  return sub_23226301C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_232263B20()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_232263B54(uint64_t a1)
{
  uint64_t v1;

  sub_23226308C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t getEnumTagSinglePayload for VisionPrescriptionError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for VisionPrescriptionError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_232263C44 + 4 * byte_2322C1BF5[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_232263C78 + 4 * byte_2322C1BF0[v4]))();
}

uint64_t sub_232263C78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_232263C80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x232263C88);
  return result;
}

uint64_t sub_232263C94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x232263C9CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_232263CA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_232263CA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VisionPrescriptionError()
{
  return &type metadata for VisionPrescriptionError;
}

unint64_t sub_232263CC8()
{
  unint64_t result;

  result = qword_255FACE08;
  if (!qword_255FACE08)
  {
    result = MEMORY[0x2349010BC](&unk_2322C1C88, &type metadata for VisionPrescriptionError);
    atomic_store(result, (unint64_t *)&qword_255FACE08);
  }
  return result;
}

uint64_t type metadata accessor for VisionPrescriptionSourceCell(uint64_t a1)
{
  return sub_23224E434(a1, qword_255FACE40);
}

uint64_t sub_232263D20()
{
  return swift_initClassMetadata2();
}

id sub_232263D88(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  objc_super v20;

  v9 = &v4[qword_255FACE10];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  v10 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v4[qword_255FACE30] = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v4[qword_255FACE38] = v10;
  sub_23224C618(0, (unint64_t *)&unk_255FACCD0);
  v11 = v4;
  v12 = (void *)sub_2322B9128();
  v13 = sub_232265864((uint64_t)v12);

  *(_QWORD *)&v11[qword_255FACE18] = v13;
  v14 = (void *)sub_2322B9128();
  v15 = sub_232265864((uint64_t)v14);

  *(_QWORD *)&v11[qword_255FACE20] = v15;
  v16 = (void *)sub_2322B9128();
  v17 = sub_232265864((uint64_t)v16);

  *(_QWORD *)&v11[qword_255FACE28] = v17;
  v20.receiver = v11;
  v20.super_class = (Class)type metadata accessor for VisionPrescriptionSourceCell(0);
  v18 = objc_msgSendSuper2(&v20, sel_initWithFrame_, a1, a2, a3, a4);
  sub_232264014();

  return v18;
}

id sub_232263F54(double a1, double a2, double a3, double a4)
{
  return sub_232263D88(a1, a2, a3, a4);
}

void sub_232263F74(char *a1, uint64_t a2, void *a3)
{
  char *v4;
  uint64_t v5;
  id v6;

  v4 = &a1[qword_255FACE10];
  *(_OWORD *)v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((_QWORD *)v4 + 4) = 0;
  v5 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&a1[qword_255FACE30] = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&a1[qword_255FACE38] = v5;
  v6 = a3;

  sub_2322B9350();
  __break(1u);
}

void sub_232264014()
{
  char *v0;
  id v1;
  id v2;
  id v3;

  objc_msgSend(v0, sel_setUserInteractionEnabled_, 0);
  v1 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v1, sel_addSubview_, *(_QWORD *)&v0[qword_255FACE18]);

  v2 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v2, sel_addSubview_, *(_QWORD *)&v0[qword_255FACE20]);

  v3 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v3, sel_addSubview_, *(_QWORD *)&v0[qword_255FACE28]);

  sub_2322640E0();
}

void sub_2322640E0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  void *v56;
  unint64_t v57;
  id v58;

  v1 = v0;
  sub_23224ECA4();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_2322C1440;
  v3 = objc_msgSend(v1, sel_contentView);
  v4 = objc_msgSend(v3, sel_bottomAnchor);

  v5 = *(void **)&v1[qword_255FACE20];
  v6 = objc_msgSend(v5, (SEL)&selRef_sharedGenerator + 5);
  v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v6, 14.0);

  *(_QWORD *)(v2 + 32) = v7;
  sub_2322B8F3C();
  *(_QWORD *)&v1[qword_255FACE38] = v2;
  swift_bridgeObjectRelease();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_2322C10B0;
  v9 = *(void **)&v1[qword_255FACE28];
  v10 = objc_msgSend(v9, sel_topAnchor);
  v11 = objc_msgSend(v5, (SEL)&selRef_sharedGenerator + 5);
  v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v11);

  *(_QWORD *)(v8 + 32) = v12;
  v13 = objc_msgSend(v9, sel_leadingAnchor);
  v14 = objc_msgSend(v1, sel_contentView);
  v15 = objc_msgSend(v14, sel_layoutMarginsGuide);

  v16 = objc_msgSend(v15, sel_leadingAnchor);
  v17 = objc_msgSend(v13, (SEL)0x25011AF4ELL, v16);

  *(_QWORD *)(v8 + 40) = v17;
  v18 = objc_msgSend(v9, sel_trailingAnchor);
  v19 = objc_msgSend(v1, sel_contentView);
  v20 = objc_msgSend(v19, sel_layoutMarginsGuide);

  v21 = objc_msgSend(v20, sel_trailingAnchor);
  v22 = objc_msgSend(v18, (SEL)0x25011AF4ELL, v21);

  *(_QWORD *)(v8 + 48) = v22;
  v23 = objc_msgSend(v1, sel_contentView);
  v24 = objc_msgSend(v23, sel_bottomAnchor);

  v25 = objc_msgSend(v9, sel_bottomAnchor);
  v26 = objc_msgSend(v24, sel_constraintEqualToAnchor_constant_, v25, 14.0);

  *(_QWORD *)(v8 + 56) = v26;
  sub_2322B8F3C();
  *(_QWORD *)&v1[qword_255FACE30] = v8;
  swift_bridgeObjectRelease();
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_2322C1CB0;
  v28 = *(void **)&v1[qword_255FACE18];
  v29 = objc_msgSend(v28, sel_topAnchor);
  v30 = objc_msgSend(v1, sel_contentView);
  v31 = objc_msgSend(v30, sel_topAnchor);

  v32 = objc_msgSend(v29, sel_constraintEqualToAnchor_constant_, v31, 12.0);
  *(_QWORD *)(v27 + 32) = v32;
  v33 = objc_msgSend(v28, sel_leadingAnchor);
  v34 = objc_msgSend(v1, (SEL)0x25011AA48);
  v35 = objc_msgSend(v34, sel_layoutMarginsGuide);

  v36 = objc_msgSend(v35, sel_leadingAnchor);
  v37 = objc_msgSend(v33, sel_constraintEqualToAnchor_, v36);

  *(_QWORD *)(v27 + 40) = v37;
  v38 = objc_msgSend(v28, sel_trailingAnchor);
  v39 = objc_msgSend(v1, sel_contentView);
  v40 = objc_msgSend(v39, sel_layoutMarginsGuide);

  v41 = objc_msgSend(v40, sel_trailingAnchor);
  v42 = objc_msgSend(v38, sel_constraintEqualToAnchor_, v41);

  *(_QWORD *)(v27 + 48) = v42;
  v43 = objc_msgSend(v5, sel_topAnchor);
  v44 = objc_msgSend(v28, sel_bottomAnchor);
  v45 = objc_msgSend(v43, sel_constraintEqualToAnchor_, v44);

  *(_QWORD *)(v27 + 56) = v45;
  v46 = objc_msgSend(v5, sel_leadingAnchor);
  v47 = objc_msgSend(v1, sel_contentView);
  v48 = objc_msgSend(v47, sel_layoutMarginsGuide);

  v49 = objc_msgSend(v48, sel_leadingAnchor);
  v50 = objc_msgSend(v46, (SEL)0x25011AF4ELL, v49);

  *(_QWORD *)(v27 + 64) = v50;
  v51 = objc_msgSend(v5, sel_trailingAnchor);
  v52 = objc_msgSend(v1, sel_contentView);
  v53 = objc_msgSend(v52, sel_layoutMarginsGuide);

  v54 = objc_msgSend(v53, sel_trailingAnchor);
  v55 = objc_msgSend(v51, (SEL)0x25011AF4ELL, v54);

  *(_QWORD *)(v27 + 72) = v55;
  sub_2322B8F3C();
  v56 = (void *)objc_opt_self();
  v57 = swift_bridgeObjectRetain();
  sub_2322A91E8(v57);
  sub_23224C618(0, (unint64_t *)&qword_255FABD30);
  v58 = (id)sub_2322B8F24();
  swift_bridgeObjectRelease();
  objc_msgSend(v56, sel_activateConstraints_, v58);

}

uint64_t sub_232264848()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  int v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  _BYTE v16[24];
  _BYTE v17[24];
  uint64_t v18;

  sub_23226593C(0, qword_255FACEA8, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionInfoItem);
  MEMORY[0x24BDAC7A8](v1);
  v3 = &v16[-v2];
  v4 = type metadata accessor for VisionPrescriptionInfoItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = v0 + qword_255FACE10;
  swift_beginAccess();
  sub_23224E5FC(v8, (uint64_t)v17);
  if (!v18)
  {
    sub_23224E5A0((uint64_t)v17);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    return sub_2322659DC((uint64_t)v3, qword_255FACEA8, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionInfoItem);
  }
  sub_23224EC14(0, (unint64_t *)&qword_255FABD20);
  v9 = swift_dynamicCast();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v3, v9 ^ 1u, 1, v4);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    return sub_2322659DC((uint64_t)v3, qword_255FACEA8, (void (*)(uint64_t))type metadata accessor for VisionPrescriptionInfoItem);
  sub_232265A18((uint64_t)v3, (uint64_t)v7);
  v10 = *(void **)(v0 + qword_255FACE18);
  swift_bridgeObjectRetain();
  v11 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setText_, v11);

  v12 = *(void **)(v0 + qword_255FACE20);
  sub_232264A84((uint64_t)v7);
  if (v13)
  {
    v14 = (void *)sub_2322B8DEC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = 0;
  }
  objc_msgSend(v12, sel_setText_, v14);

  sub_232264F34((uint64_t)&v7[*(int *)(v4 + 32)]);
  return sub_232265A5C((uint64_t)v7);
}

uint64_t sub_232264A84(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = type metadata accessor for VisionPrescriptionInfoItem(0);
  v3 = sub_232264C70(a1 + *(int *)(v2 + 28));
  v5 = v4;
  if (v4)
  {
    if (qword_255FAB900 != -1)
      swift_once();
    sub_2322B7F58();
    if ((*(_BYTE *)(a1 + *(int *)(v2 + 36)) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_2322B7F58();
    }
    sub_23224EBB4(0, (unint64_t *)&qword_255FADB70, (unint64_t *)&qword_255FAF820, MEMORY[0x24BEE45D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_2322C0E70;
    *(_QWORD *)(v6 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v6 + 64) = sub_23224EC60();
    *(_QWORD *)(v6 + 32) = v3;
    *(_QWORD *)(v6 + 40) = v5;
    v3 = sub_2322B8DF8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t sub_232264C70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  void *v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _BYTE v23[12];
  int v24;
  os_log_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  swift_getObjectType();
  v2 = sub_2322B8084();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v23[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_2322B8918();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = (void *)sub_2322B8054();
  v11 = (id)HKLocalizedStringForDateAndTemplate();

  if (v11)
  {
    v12 = sub_2322B8E1C();

  }
  else
  {
    sub_2322B88DC();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
    v13 = sub_2322B890C();
    v14 = sub_2322B8FFC();
    v15 = v14;
    if (os_log_type_enabled(v13, v14))
    {
      v16 = swift_slowAlloc();
      v26 = swift_slowAlloc();
      v28 = v26;
      *(_DWORD *)v16 = 136446466;
      v25 = v13;
      v17 = sub_2322B9464();
      v27 = sub_232266EA0(v17, v18, &v28);
      v24 = v15;
      sub_2322B923C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2080;
      sub_232265988(&qword_255FACEA0, MEMORY[0x24BDCE988]);
      v19 = sub_2322B93C8();
      v27 = sub_232266EA0(v19, v20, &v28);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
      v13 = v25;
      _os_log_impl(&dword_232241000, v25, (os_log_type_t)v24, "[%{public}s] Failed to get date string for %s", (uint8_t *)v16, 0x16u);
      v21 = v26;
      swift_arrayDestroy();
      MEMORY[0x234901170](v21, -1, -1);
      MEMORY[0x234901170](v16, -1, -1);
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
    }

    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
    return 0;
  }
  return v12;
}

void sub_232264F34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;

  sub_23226593C(0, &qword_255FABC68, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v18 - v4;
  v6 = sub_2322B8084();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232250B50(a1, (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_2322659DC((uint64_t)v5, &qword_255FABC68, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    v10 = sub_232264C70((uint64_t)v9);
    if (v11)
    {
      sub_23226521C((uint64_t)v9, v10, v11);
      swift_bridgeObjectRelease();
      objc_msgSend(*(id *)(v1 + qword_255FACE28), sel_setHidden_, 0);
      v12 = (void *)objc_opt_self();
      sub_23224C618(0, (unint64_t *)&qword_255FABD30);
      swift_bridgeObjectRetain();
      v13 = (void *)sub_2322B8F24();
      swift_bridgeObjectRelease();
      objc_msgSend(v12, sel_activateConstraints_, v13);

      swift_bridgeObjectRetain();
      v14 = (void *)sub_2322B8F24();
      swift_bridgeObjectRelease();
      objc_msgSend(v12, sel_deactivateConstraints_, v14);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      return;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  objc_msgSend(*(id *)(v1 + qword_255FACE28), sel_setHidden_, 1);
  v15 = (void *)objc_opt_self();
  sub_23224C618(0, (unint64_t *)&qword_255FABD30);
  swift_bridgeObjectRetain();
  v16 = (void *)sub_2322B8F24();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_activateConstraints_, v16);

  swift_bridgeObjectRetain();
  v17 = (void *)sub_2322B8F24();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_deactivateConstraints_, v17);

}

uint64_t sub_23226521C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  char v18;
  void (*v19)(char *, uint64_t);
  char **v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;

  v28 = a2;
  v29 = a3;
  v27[0] = a1;
  v3 = sub_2322B80FC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2322B8084();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v27 - v12;
  sub_23224C618(0, &qword_255FACE90);
  v14 = (void *)sub_2322B8F84();
  v15 = objc_msgSend(v14, sel_calendar, v27[0]);

  sub_2322B80F0();
  sub_2322B80E4();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v16 = (void *)sub_2322B8F84();
  v17 = objc_msgSend(v16, sel_startOfDayMidnight);

  sub_2322B806C();
  sub_232265988(&qword_255FACE98, MEMORY[0x24BDCE948]);
  v18 = sub_2322B8DD4();
  v19 = *(void (**)(char *, uint64_t))(v8 + 8);
  v19(v11, v7);
  if (qword_255FAB900 != -1)
    swift_once();
  if ((v18 & 1) != 0)
    v20 = &selRef_labelColor;
  else
    v20 = &selRef_redColor;
  sub_2322B7F58();
  v21 = *(void **)(v27[1] + qword_255FACE28);
  sub_23224EBB4(0, (unint64_t *)&qword_255FADB70, (unint64_t *)&qword_255FAF820, MEMORY[0x24BEE45D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_2322C0E70;
  *(_QWORD *)(v22 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v22 + 64) = sub_23224EC60();
  v23 = v29;
  *(_QWORD *)(v22 + 32) = v28;
  *(_QWORD *)(v22 + 40) = v23;
  swift_bridgeObjectRetain();
  sub_2322B8DF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v24 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  objc_msgSend(v21, sel_setText_, v24);

  v25 = objc_msgSend((id)objc_opt_self(), *v20);
  objc_msgSend(v21, sel_setTextColor_, v25);

  return ((uint64_t (*)(char *, uint64_t))v19)(v13, v7);
}

uint64_t sub_2322655B0()
{
  uint64_t v0;

  sub_23224E5A0(v0 + qword_255FACE10);

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id sub_23226561C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionSourceCell(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_232265650(uint64_t a1)
{
  sub_23224E5A0(a1 + qword_255FACE10);

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2322656C8()
{
  return type metadata accessor for VisionPrescriptionSourceCell(0);
}

uint64_t sub_2322656D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + qword_255FACE10;
  swift_beginAccess();
  return sub_23224E5FC(v3, a1);
}

uint64_t sub_232265720(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + qword_255FACE10;
  swift_beginAccess();
  sub_23224E53C(a1, v3);
  swift_endAccess();
  sub_232264848();
  return sub_23224E5A0(a1);
}

uint64_t (*sub_23226578C(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2322657D4;
}

uint64_t sub_2322657D4(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_232264848();
  return result;
}

unint64_t sub_232265804()
{
  sub_2322B8090();
  sub_2322B8EAC();
  swift_bridgeObjectRelease();
  return 0xD00000000000001BLL;
}

id sub_232265864(uint64_t a1)
{
  id v2;
  id v3;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_setFont_, a1);
  objc_msgSend(v2, sel_setTextAlignment_, 4);
  objc_msgSend(v2, sel_setAdjustsFontForContentSizeCategory_, 1);
  v3 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v2, sel_setTextColor_, v3);

  objc_msgSend(v2, sel_setNumberOfLines_, 0);
  return v2;
}

void sub_23226593C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_2322B9224();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_232265988(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_2322B8084();
    result = MEMORY[0x2349010BC](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for VisionPrescriptionInfoItem(uint64_t a1)
{
  return sub_23224E434(a1, qword_255FACF08);
}

uint64_t sub_2322659DC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  sub_23226593C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_232265A18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for VisionPrescriptionInfoItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_232265A5C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for VisionPrescriptionInfoItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_232265A98(_QWORD *a1, char *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v27 = *(_QWORD *)a2;
    *v4 = *(_QWORD *)a2;
    v4 = (_QWORD *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *((_QWORD *)a2 + 1);
    *a1 = *(_QWORD *)a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = &a2[v8];
    v11 = sub_2322B80B4();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = (_QWORD *)((char *)v4 + v13);
    v16 = &a2[v13];
    v17 = *((_QWORD *)v16 + 1);
    *v15 = *(_QWORD *)v16;
    v15[1] = v17;
    v18 = (char *)v4 + v14;
    v19 = &a2[v14];
    v20 = sub_2322B8084();
    v21 = *(_QWORD *)(v20 - 8);
    v22 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
    swift_bridgeObjectRetain();
    v22(v18, v19, v20);
    v23 = a3[8];
    v24 = (char *)v4 + v23;
    v25 = &a2[v23];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(&a2[v23], 1, v20))
    {
      sub_23226593C(0, &qword_255FABC68, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      v22(v24, v25, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v24, 0, 1, v20);
    }
    *((_BYTE *)v4 + a3[9]) = a2[a3[9]];
  }
  return v4;
}

uint64_t sub_232265C1C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  void (*v11)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_2322B80B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  v6 = a1 + a2[7];
  v7 = sub_2322B8084();
  v8 = *(_QWORD *)(v7 - 8);
  v11 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v11(v6, v7);
  v9 = a1 + a2[8];
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v9, 1, v7);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v11)(v9, v7);
  return result;
}

_QWORD *sub_232265D00(_QWORD *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v6 = *((_QWORD *)a2 + 1);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = &a2[v7];
  v10 = sub_2322B80B4();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v12);
  v15 = &a2[v12];
  v16 = *((_QWORD *)v15 + 1);
  *v14 = *(_QWORD *)v15;
  v14[1] = v16;
  v17 = (char *)a1 + v13;
  v18 = &a2[v13];
  v19 = sub_2322B8084();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  swift_bridgeObjectRetain();
  v21(v17, v18, v19);
  v22 = a3[8];
  v23 = (char *)a1 + v22;
  v24 = &a2[v22];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(&a2[v22], 1, v19))
  {
    sub_23226593C(0, &qword_255FABC68, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    v21(v23, v24, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v23, 0, 1, v19);
  }
  *((_BYTE *)a1 + a3[9]) = a2[a3[9]];
  return a1;
}

char *sub_232265E58(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;

  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_2322B80B4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = &a1[v10];
  v12 = (_QWORD *)((char *)a2 + v10);
  *(_QWORD *)v11 = *v12;
  *((_QWORD *)v11 + 1) = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = &a1[v13];
  v15 = (char *)a2 + v13;
  v16 = sub_2322B8084();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(void (**)(char *, char *, uint64_t))(v17 + 24);
  v18(v14, v15, v16);
  v19 = a3[8];
  v20 = &a1[v19];
  v21 = (char *)a2 + v19;
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v23 = v22(&a1[v19], 1, v16);
  v24 = v22(v21, 1, v16);
  if (!v23)
  {
    if (!v24)
    {
      v18(v20, v21, v16);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
    goto LABEL_6;
  }
  if (v24)
  {
LABEL_6:
    sub_23226593C(0, &qword_255FABC68, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v20, v21, v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
LABEL_7:
  a1[a3[9]] = *((_BYTE *)a2 + a3[9]);
  return a1;
}

_OWORD *sub_232266014(_OWORD *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  *a1 = *(_OWORD *)a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = &a2[v6];
  v9 = sub_2322B80B4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)&a2[a3[6]];
  v11 = (char *)a1 + v10;
  v12 = &a2[v10];
  v13 = sub_2322B8084();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v15(v11, v12, v13);
  v16 = a3[8];
  v17 = (char *)a1 + v16;
  v18 = &a2[v16];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(&a2[v16], 1, v13))
  {
    sub_23226593C(0, &qword_255FABC68, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v15(v17, v18, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
  }
  *((_BYTE *)a1 + a3[9]) = a2[a3[9]];
  return a1;
}

char *sub_232266148(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;

  v6 = a2[1];
  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = &a1[v7];
  v9 = (char *)a2 + v7;
  v10 = sub_2322B80B4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = &a1[v11];
  v13 = (_QWORD *)((char *)a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *(_QWORD *)v12 = v15;
  *((_QWORD *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = &a1[v16];
  v18 = (char *)a2 + v16;
  v19 = sub_2322B8084();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(void (**)(char *, char *, uint64_t))(v20 + 40);
  v21(v17, v18, v19);
  v22 = a3[8];
  v23 = &a1[v22];
  v24 = (char *)a2 + v22;
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  v26 = v25(&a1[v22], 1, v19);
  v27 = v25(v24, 1, v19);
  if (!v26)
  {
    if (!v27)
    {
      v21(v23, v24, v19);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v19);
    goto LABEL_6;
  }
  if (v27)
  {
LABEL_6:
    sub_23226593C(0, &qword_255FABC68, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v23, v24, v19);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v23, 0, 1, v19);
LABEL_7:
  a1[a3[9]] = *((_BYTE *)a2 + a3[9]);
  return a1;
}

uint64_t sub_2322662E4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2322662F0(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2322B80B4();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      v12 = sub_2322B8084();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[7];
      }
      else
      {
        sub_23226593C(0, &qword_255FABC68, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
        v10 = v13;
        v9 = *(_QWORD *)(v13 - 8);
        v11 = a3[8];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_2322663C4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2322663D0(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_2322B80B4();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = sub_2322B8084();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[7];
      }
      else
      {
        sub_23226593C(0, &qword_255FABC68, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
        v10 = v13;
        v9 = *(_QWORD *)(v13 - 8);
        v11 = a4[8];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_2322664A0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_2322B80B4();
  if (v0 <= 0x3F)
  {
    sub_2322B8084();
    if (v1 <= 0x3F)
    {
      sub_23226593C(319, &qword_255FABC68, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

id static UIImage.pdfThumbnail(from:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _BYTE v39[4];
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v2 = sub_2322B8000();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = &v39[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v4);
  v8 = &v39[-v7];
  v9 = sub_2322B8918();
  v42 = *(_QWORD *)(v9 - 8);
  v43 = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = &v39[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v10);
  v14 = &v39[-v13];
  v15 = objc_allocWithZone(MEMORY[0x24BDE30E8]);
  v16 = (void *)sub_2322B7FB8();
  v17 = objc_msgSend(v15, sel_initWithURL_, v16);

  if (!v17)
  {
    sub_2322B88DC();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v6, a1, v2);
    v21 = sub_2322B890C();
    v22 = sub_2322B9014();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = swift_slowAlloc();
      v41 = swift_slowAlloc();
      v45 = v41;
      *(_DWORD *)v23 = 136315394;
      v24 = sub_2322B9464();
      v44 = sub_232266EA0(v24, v25, &v45);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      sub_232245D5C();
      v26 = sub_2322B93C8();
      v44 = sub_232266EA0(v26, v27, &v45);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v6, v2);
      _os_log_impl(&dword_232241000, v21, v22, "[%s] file at %s cannot be pdf.", (uint8_t *)v23, 0x16u);
      v28 = v41;
      swift_arrayDestroy();
      MEMORY[0x234901170](v28, -1, -1);
      MEMORY[0x234901170](v23, -1, -1);
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v6, v2);
    }

    (*(void (**)(_BYTE *, uint64_t))(v42 + 8))(v12, v43);
    return 0;
  }
  v18 = objc_msgSend(v17, sel_pageAtIndex_, 0);
  if (!v18)
  {
    sub_2322B88DC();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v8, a1, v2);
    v29 = sub_2322B890C();
    v30 = sub_2322B9014();
    v31 = v30;
    if (os_log_type_enabled(v29, v30))
    {
      v32 = swift_slowAlloc();
      v41 = swift_slowAlloc();
      v45 = v41;
      *(_DWORD *)v32 = 136315394;
      v40 = v31;
      v33 = sub_2322B9464();
      v44 = sub_232266EA0(v33, v34, &v45);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2080;
      sub_232245D5C();
      v35 = sub_2322B93C8();
      v44 = sub_232266EA0(v35, v36, &v45);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v8, v2);
      _os_log_impl(&dword_232241000, v29, (os_log_type_t)v40, "[%s] pdf at %s is empty.", (uint8_t *)v32, 0x16u);
      v37 = v41;
      swift_arrayDestroy();
      MEMORY[0x234901170](v37, -1, -1);
      MEMORY[0x234901170](v32, -1, -1);

    }
    else
    {

      (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v8, v2);
    }
    (*(void (**)(_BYTE *, uint64_t))(v42 + 8))(v14, v43);
    return 0;
  }
  v19 = v18;
  v20 = objc_msgSend(v18, sel_thumbnailOfSize_forBox_, 4, 1000.0, 1000.0);

  return v20;
}

id static UIImage.withData(at:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  id v7;

  v0 = sub_2322B8000();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_2322B8918();
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_2322B800C();
  v4 = v3;
  v5 = objc_allocWithZone(MEMORY[0x24BEBD640]);
  v6 = (void *)sub_2322B8018();
  v7 = objc_msgSend(v5, sel_initWithData_, v6);
  sub_232261214(v2, v4);

  return v7;
}

id static UIImage.withAppClipCodePayload(data:darkTheme:)(void *a1)
{
  uint64_t v2;
  unint64_t v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  void *v7;
  void *v8;

  type metadata accessor for AppClipCodeGenerator();
  v2 = sub_232245654(a1);
  v4 = 0;
  if (v3 >> 60 != 15)
  {
    v5 = v2;
    v6 = v3;
    v7 = (void *)sub_2322B8018();
    v8 = (void *)CGSVGDocumentCreateFromData();

    if (v8)
    {
      v4 = objc_msgSend((id)objc_opt_self(), sel__imageWithCGSVGDocument_scale_orientation_, v8, 0, 1.0);

    }
    else
    {
      v4 = 0;
    }
    sub_232267314(v5, v6);
  }
  return v4;
}

uint64_t sub_232266DEC(void (*a1)(void))
{
  a1();
  return sub_2322B9464();
}

uint64_t sub_232266E10(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_232266E30(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_232266EA0(v6, v7, a3);
  v8 = *a1 + 8;
  sub_2322B923C();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_232266EA0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_232266F70(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_232250B14((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_232250B14((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_232258500((uint64_t)v12);
  return v7;
}

uint64_t sub_232266F70(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_2322B9248();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_232267128(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_2322B92FC();
  if (!v8)
  {
    sub_2322B9344();
    __break(1u);
LABEL_17:
    result = sub_2322B93A4();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_232267128(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_23224ACAC(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_2322671BC(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_2322671BC(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_2322671BC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_232267328();
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_2322B93A4();
  __break(1u);
  return result;
}

_BYTE **sub_232267304(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

uint64_t sub_232267314(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_232261214(a1, a2);
  return a1;
}

void sub_232267328()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FABCE0)
  {
    v0 = sub_2322B93D4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FABCE0);
  }
}

uint64_t type metadata accessor for VisionHealthPluginDelegate()
{
  return objc_opt_self();
}

uint64_t sub_23226739C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for VisionHealthPluginDelegate();
  result = swift_allocObject();
  *a1 = result;
  return result;
}

uint64_t sub_2322673CC()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t type metadata accessor for VisionPrescriptionColumnTitleCell(uint64_t a1)
{
  return sub_23224E434(a1, qword_255FACF68);
}

uint64_t sub_2322673F0()
{
  return swift_initClassMetadata2();
}

id sub_232267448(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  uint64_t v10;
  id v11;
  char *v12;
  id v13;
  void *v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  objc_super v22;

  v9 = &v4[qword_255FACF50];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  v10 = qword_255FACF58;
  v11 = objc_allocWithZone(MEMORY[0x24BEBD708]);
  v12 = v4;
  v13 = objc_msgSend(v11, sel_init);
  objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_23224C618(0, (unint64_t *)&unk_255FACCD0);
  v14 = (void *)sub_2322B9128();
  objc_msgSend(v13, sel_setFont_, v14);

  objc_msgSend(v13, sel_setTextAlignment_, 1);
  objc_msgSend(v13, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v13, sel_setNumberOfLines_, 0);
  if (qword_255FAB900 != -1)
    swift_once();
  sub_2322B7F58();
  v15 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_setText_, v15, 0xE000000000000000);

  *(_QWORD *)&v12[v10] = v13;
  v16 = qword_255FACF60;
  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  objc_msgSend(v17, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v18 = (void *)sub_2322B9128();
  objc_msgSend(v17, sel_setFont_, v18);

  objc_msgSend(v17, sel_setTextAlignment_, 1);
  objc_msgSend(v17, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v17, sel_setNumberOfLines_, 0);
  sub_2322B7F58();
  v19 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_setText_, v19, 0xE000000000000000);

  *(_QWORD *)&v12[v16] = v17;
  v22.receiver = v12;
  v22.super_class = (Class)type metadata accessor for VisionPrescriptionColumnTitleCell(0);
  v20 = objc_msgSendSuper2(&v22, sel_initWithFrame_, a1, a2, a3, a4);
  sub_232267814();

  return v20;
}

id sub_2322677D0(double a1, double a2, double a3, double a4)
{
  return sub_232267448(a1, a2, a3, a4);
}

void sub_2322677F0(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_232267FA8();
}

void sub_232267814()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;

  v1 = v0;
  objc_msgSend(v0, sel_setUserInteractionEnabled_, 0);
  v2 = *(void **)&v0[qword_255FACF58];
  objc_msgSend(v1, sel_addSubview_, v2);
  v3 = *(void **)&v1[qword_255FACF60];
  objc_msgSend(v1, sel_addSubview_, v3);
  v29 = (void *)objc_opt_self();
  sub_23224ECA4();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2322C1E30;
  v5 = objc_msgSend(v3, sel_topAnchor);
  v6 = objc_msgSend(v1, (SEL)&stru_2501196F0.name + 4);
  v7 = objc_msgSend(v5, sel_constraintEqualToAnchor_constant_, v6, 10.0);

  *(_QWORD *)(v4 + 32) = v7;
  v8 = objc_msgSend(v1, sel_bottomAnchor);
  v9 = objc_msgSend(v3, (SEL)&selRef_sharedGenerator + 5);
  v10 = objc_msgSend(v8, sel_constraintEqualToAnchor_constant_, v9, 10.0);

  *(_QWORD *)(v4 + 40) = v10;
  v11 = objc_msgSend(v3, sel_leadingAnchor);
  v12 = objc_msgSend(v1, sel_leadingAnchor);
  v13 = objc_msgSend(v11, sel_constraintEqualToAnchor_constant_, v12, 16.0);

  *(_QWORD *)(v4 + 48) = v13;
  v14 = objc_msgSend(v1, sel_centerXAnchor);
  v15 = objc_msgSend(v3, sel_trailingAnchor);
  v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_constant_, v15, 8.0);

  *(_QWORD *)(v4 + 56) = v16;
  v17 = objc_msgSend(v2, sel_leadingAnchor);
  v18 = objc_msgSend(v1, sel_centerXAnchor);
  v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v18, 8.0);

  *(_QWORD *)(v4 + 64) = v19;
  v20 = objc_msgSend(v1, sel_trailingAnchor);
  v21 = objc_msgSend(v2, sel_trailingAnchor);
  v22 = objc_msgSend(v20, sel_constraintEqualToAnchor_constant_, v21, 16.0);

  *(_QWORD *)(v4 + 72) = v22;
  v23 = objc_msgSend(v2, sel_topAnchor);
  v24 = objc_msgSend(v1, sel_topAnchor);
  v25 = objc_msgSend(v23, sel_constraintEqualToAnchor_constant_, v24, 10.0);

  *(_QWORD *)(v4 + 80) = v25;
  v26 = objc_msgSend(v1, sel_bottomAnchor);
  v27 = objc_msgSend(v2, sel_bottomAnchor);
  v28 = objc_msgSend(v26, sel_constraintEqualToAnchor_constant_, v27, 10.0);

  *(_QWORD *)(v4 + 88) = v28;
  sub_2322B8F3C();
  sub_23224C618(0, (unint64_t *)&qword_255FABD30);
  v30 = (id)sub_2322B8F24();
  swift_bridgeObjectRelease();
  objc_msgSend(v29, sel_activateConstraints_, v30);

}

void sub_232267C3C()
{
  uint64_t v0;

  sub_23224E5A0(v0 + qword_255FACF50);

}

id sub_232267C78()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionColumnTitleCell(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_232267CAC(uint64_t a1)
{
  sub_23224E5A0(a1 + qword_255FACF50);

}

uint64_t sub_232267CF4()
{
  return type metadata accessor for VisionPrescriptionColumnTitleCell(0);
}

uint64_t sub_232267CFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + qword_255FACF50;
  swift_beginAccess();
  return sub_23224E5FC(v3, a1);
}

uint64_t sub_232267D4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + qword_255FACF50;
  swift_beginAccess();
  sub_232267F64(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_232267DA4())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_232267DEC()
{
  uint64_t v1;

  v1 = sub_2322B9464();
  sub_2322B8EAC();
  sub_2322B8090();
  sub_2322B8EAC();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_232267E58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin33VisionPrescriptionColumnTitleItem_uuid;
  v2 = sub_2322B80B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_232267EB0()
{
  return type metadata accessor for VisionPrescriptionColumnTitleItem(0);
}

uint64_t type metadata accessor for VisionPrescriptionColumnTitleItem(uint64_t a1)
{
  return sub_23224E434(a1, qword_255FACFE8);
}

uint64_t sub_232267ECC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2322B80B4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_232267F44()
{
  return sub_232267DEC();
}

uint64_t sub_232267F64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2322515A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_232267FA8()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;

  v1 = v0;
  v2 = &v0[qword_255FACF50];
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_QWORD *)v2 + 4) = 0;
  v3 = qword_255FACF58;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_23224C618(0, (unint64_t *)&unk_255FACCD0);
  v5 = (void *)sub_2322B9128();
  objc_msgSend(v4, sel_setFont_, v5);

  objc_msgSend(v4, sel_setTextAlignment_, 1);
  objc_msgSend(v4, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v4, sel_setNumberOfLines_, 0);
  if (qword_255FAB900 != -1)
    swift_once();
  sub_2322B7F58();
  v6 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setText_, v6, 0xE000000000000000);

  *(_QWORD *)&v0[v3] = v4;
  v7 = qword_255FACF60;
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v9 = (void *)sub_2322B9128();
  objc_msgSend(v8, sel_setFont_, v9);

  objc_msgSend(v8, sel_setTextAlignment_, 1);
  objc_msgSend(v8, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v8, sel_setNumberOfLines_, 0);
  sub_2322B7F58();
  v10 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setText_, v10, 0xE000000000000000);

  *(_QWORD *)&v1[v7] = v8;
  sub_2322B9350();
  __break(1u);
}

uint64_t type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlViewController()
{
  uint64_t result;

  result = qword_255FAD0B0;
  if (!qword_255FAD0B0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_232268324()
{
  return swift_initClassMetadata2();
}

void sub_232268388()
{
  sub_2322B9350();
  __break(1u);
}

void sub_2322683E0(void *a1)
{
  id v1;
  objc_super v2;

  v2.receiver = a1;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlViewController();
  v1 = v2.receiver;
  objc_msgSendSuper2(&v2, sel_viewDidLoad);
  sub_232268440();
  sub_232268814();

}

void sub_232268440()
{
  char *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;

  v1 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v1, sel_setLargeTitleDisplayMode_, 2);

  v2 = objc_msgSend(v0, sel_navigationItem);
  sub_232268600(*(_QWORD *)&v0[qword_255FAD0A0], v0[qword_255FAD098]);
  v3 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setTitle_, v3);

  v4 = objc_msgSend(v0, sel_navigationItem);
  v5 = objc_msgSend(v4, sel_backBarButtonItem);

  if (v5)
  {
    if (qword_255FAB900 != -1)
      swift_once();
    sub_2322B7F58();
    v6 = (id)sub_2322B8DEC();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setTitle_, v6, 0xE000000000000000);

  }
}

uint64_t sub_232268600(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (a2 == 6)
  {
    if (qword_255FAB900 != -1)
      swift_once();
    sub_2322B7F58();
    sub_232268A7C();
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_2322C0E70;
    v5 = sub_232273488(a1);
    v7 = v6;
    *(_QWORD *)(v4 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v4 + 64) = sub_23224EC60();
    *(_QWORD *)(v4 + 32) = v5;
    *(_QWORD *)(v4 + 40) = v7;
    v2 = sub_2322B8E28();
    swift_bridgeObjectRelease();
  }
  else if (a2 == 4)
  {
    if (qword_255FAB900 != -1)
      swift_once();
    return sub_2322B7F58();
  }
  else
  {
    return 0;
  }
  return v2;
}

void sub_2322687E0(void *a1)
{
  id v1;

  v1 = a1;
  sub_2322689FC();

}

void sub_232268814()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;

  v1 = objc_msgSend(v0, sel_collectionView);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, sel_setKeyboardDismissMode_, 1);

    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDA20]), sel_initWithTarget_action_, v0, sel_dismissKeyboard);
    objc_msgSend(v3, sel_setCancelsTouchesInView_, 0);
    v4 = objc_msgSend(v0, sel_view);
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v4, sel_addGestureRecognizer_, v3);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_2322688E4(void *a1)
{
  id v1;
  id v2;
  id v3;

  v1 = a1;
  v2 = objc_msgSend(v1, sel_view);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, sel_endEditing_, 1);

  }
  else
  {
    __break(1u);
  }
}

void sub_232268944()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_232268970(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_2322689A0()
{
  return swift_release();
}

id sub_2322689B0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2322689E4()
{
  return swift_release();
}

uint64_t sub_2322689F4()
{
  return type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlViewController();
}

uint64_t sub_2322689FC()
{
  uint64_t v0;
  unsigned int v1;
  uint64_t result;

  if ((*(unsigned __int8 *)(v0 + qword_255FAD098) | 2) == 6)
  {
    v1 = 0x10100u >> (8 * *(_BYTE *)(*(_QWORD *)(v0 + qword_255FAD0A8) + 64));
    swift_retain();
    sub_2322B5264(17, 0, 0, v1);
    return swift_release();
  }
  return result;
}

void sub_232268A7C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FADB70)
  {
    sub_23225D414();
    v0 = sub_2322B93D4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FADB70);
  }
}

uint64_t type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldPrismDataSource()
{
  uint64_t result;

  result = qword_255FAD108;
  if (!qword_255FAD108)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_232268B0C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_232268B58(uint64_t a1)
{
  uint64_t result;

  switch(a1)
  {
    case 1:
      if (qword_255FAB900 != -1)
        goto LABEL_11;
      goto LABEL_10;
    case 2:
      if (qword_255FAB900 == -1)
        goto LABEL_10;
      goto LABEL_11;
    case 3:
      if (qword_255FAB900 == -1)
        goto LABEL_10;
      goto LABEL_11;
    case 4:
      if (qword_255FAB900 == -1)
        goto LABEL_10;
LABEL_11:
      swift_once();
LABEL_10:
      result = sub_2322B7F58();
      break;
    default:
      result = 0;
      break;
  }
  return result;
}

uint64_t sub_232268D0C()
{
  uint64_t v0;

  sub_232269B74(0, &qword_255FAC200, (unint64_t *)&qword_255FABD20);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_2322C0E50;
  sub_232287F64(2, 0, (uint64_t *)(v0 + 32));
  sub_232287F64(1, 0, (uint64_t *)(v0 + 72));
  return v0;
}

uint64_t sub_232268D84(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  swift_retain();
  sub_2322B8B4C();
  swift_release();
  if (v37 == 2)
  {
    v2 = sub_232287D10(9u, a1);
    goto LABEL_5;
  }
  if (v37 == 1)
  {
    v2 = sub_232287CF4(9u, a1);
LABEL_5:
    v3 = v2;
    goto LABEL_7;
  }
  v3 = 0;
LABEL_7:
  v35 = sub_23225B628((uint64_t)v3, 9);
  v5 = v4;
  swift_retain();
  v6 = sub_23225057C(a1);
  v7 = *(_QWORD *)(v6 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_verticalPrismBase);
  v8 = *(unsigned __int8 *)(v6
                          + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_verticalPrismBase
                          + 8);
  swift_release();
  swift_retain();
  sub_2322B8B4C();
  swift_release();
  if (v37 == 2)
  {
    v9 = sub_232287D10(7u, a1);
    goto LABEL_11;
  }
  if (v37 == 1)
  {
    v9 = sub_232287CF4(7u, a1);
LABEL_11:
    v10 = v9;
    goto LABEL_13;
  }
  v10 = 0;
LABEL_13:
  v36 = sub_23225B628((uint64_t)v10, 7);
  v12 = v11;
  swift_retain();
  v13 = sub_23225057C(a1);
  v14 = *(_QWORD *)(v13 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_horizontalPrismBase);
  v15 = *(_BYTE *)(v13 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_horizontalPrismBase + 8);
  swift_release();
  if (v5)
  {
    if (v8 || !v7)
    {
      swift_bridgeObjectRelease();
      v21 = 0;
      v5 = 0;
      if (!v12)
        goto LABEL_30;
    }
    else
    {
      v34 = v3;
      if (qword_255FAB900 != -1)
        swift_once();
      sub_2322B7F58();
      sub_232269B74(0, (unint64_t *)&qword_255FADB70, (unint64_t *)&qword_255FAF820);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_2322C0E50;
      v17 = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v16 + 56) = MEMORY[0x24BEE0D00];
      v18 = sub_23224EC60();
      *(_QWORD *)(v16 + 64) = v18;
      *(_QWORD *)(v16 + 32) = v35;
      *(_QWORD *)(v16 + 40) = v5;
      v19 = sub_232268B58(v7);
      *(_QWORD *)(v16 + 96) = v17;
      *(_QWORD *)(v16 + 104) = v18;
      *(_QWORD *)(v16 + 72) = v19;
      *(_QWORD *)(v16 + 80) = v20;
      v21 = sub_2322B8DF8();
      v5 = v22;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 = v34;
      if (!v12)
        goto LABEL_30;
    }
  }
  else
  {
    v21 = 0;
    if (!v12)
    {
LABEL_30:

      return v21;
    }
  }
  if ((v15 & 1) != 0 || !v14)
  {
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
  if (qword_255FAB900 != -1)
    swift_once();
  sub_2322B7F58();
  sub_232269B74(0, (unint64_t *)&qword_255FADB70, (unint64_t *)&qword_255FAF820);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_2322C0E50;
  v24 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v23 + 56) = MEMORY[0x24BEE0D00];
  v25 = sub_23224EC60();
  *(_QWORD *)(v23 + 64) = v25;
  *(_QWORD *)(v23 + 32) = v36;
  *(_QWORD *)(v23 + 40) = v12;
  v26 = sub_232268B58(v14);
  *(_QWORD *)(v23 + 96) = v24;
  *(_QWORD *)(v23 + 104) = v25;
  *(_QWORD *)(v23 + 72) = v26;
  *(_QWORD *)(v23 + 80) = v27;
  v28 = sub_2322B8DF8();
  v30 = v29;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_2322B7F58();
    v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_2322C0E50;
    v32 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v31 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v31 + 64) = v25;
    *(_QWORD *)(v31 + 32) = v28;
    *(_QWORD *)(v31 + 40) = v30;
    *(_QWORD *)(v31 + 96) = v32;
    *(_QWORD *)(v31 + 104) = v25;
    *(_QWORD *)(v31 + 72) = v21;
    *(_QWORD *)(v31 + 80) = v5;
    v21 = sub_2322B8DF8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  else
  {

    return v28;
  }
  return v21;
}

uint64_t sub_2322692BC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v3 = *v1;
  sub_23224BE78(0, &qword_255FAD158, (uint64_t (*)(uint64_t))sub_232269A78, MEMORY[0x24BDB9ED8]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v10 - v7;
  sub_23226986C(a1);
  swift_beginAccess();
  sub_23224BE78(0, &qword_255FAD170, (uint64_t (*)(uint64_t))sub_232269A78, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  swift_retain();
  sub_2322B8BE8();
  swift_endAccess();
  swift_release();
  *(_QWORD *)(swift_allocObject() + 16) = v3;
  swift_allocObject();
  swift_weakInit();
  sub_232269B14();
  sub_2322B8C78();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_beginAccess();
  sub_2322B8B34();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_232269498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v0 = sub_2322B8918();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322B88D0();
  v4 = sub_2322B890C();
  v5 = sub_2322B9014();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v12 = v7;
    *(_DWORD *)v6 = 136315138;
    v8 = sub_2322B9464();
    v11 = sub_232266EA0(v8, v9, &v12);
    sub_2322B923C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_232241000, v4, v5, "[%s] prism cancellable completed.", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234901170](v7, -1, -1);
    MEMORY[0x234901170](v6, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_232269624()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v0 = sub_2322B80B4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_23224BE78(0, (unint64_t *)&unk_255FADB00, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    sub_2322B83F0();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_2322C0E70;
    sub_232269B74(0, &qword_255FAC200, (unint64_t *)&qword_255FABD20);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_2322C0E50;
    sub_232287F64(2, 0, (uint64_t *)(v5 + 32));
    sub_232287F64(1, 0, (uint64_t *)(v5 + 72));
    sub_2322B80A8();
    sub_2322B8090();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    sub_2322B83E4();
    sub_2322B8438();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2322697F0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_232269800()
{
  sub_2322B8468();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_232269864()
{
  return type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldPrismDataSource();
}

uint64_t sub_23226986C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  v4 = sub_2322B8918();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 2)
  {
LABEL_7:
    v8 = *(_QWORD *)(v2 + 48) + 40;
    return *(_QWORD *)v8;
  }
  if (a1 != 1)
  {
    sub_2322B88D0();
    v9 = sub_2322B890C();
    v10 = sub_2322B9008();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      v21 = v19;
      *(_DWORD *)v11 = 136446466;
      v12 = sub_2322B9464();
      v20 = sub_232266EA0(v12, v13, &v21);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2080;
      v20 = a1;
      type metadata accessor for HKVisionEye(0);
      v14 = sub_2322B8E34();
      v20 = sub_232266EA0(v14, v15, &v21);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232241000, v9, v10, "[%{public}s] Unknown eye received: %s", (uint8_t *)v11, 0x16u);
      v16 = v19;
      swift_arrayDestroy();
      MEMORY[0x234901170](v16, -1, -1);
      MEMORY[0x234901170](v11, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    goto LABEL_7;
  }
  v8 = *(_QWORD *)(v2 + 48) + 32;
  return *(_QWORD *)v8;
}

void sub_232269A78(uint64_t a1)
{
  sub_23224BE78(a1, &qword_255FAD160, (uint64_t (*)(uint64_t))sub_232269A94, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

unint64_t sub_232269A94()
{
  unint64_t result;

  result = qword_255FAD168;
  if (!qword_255FAD168)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255FAD168);
  }
  return result;
}

uint64_t sub_232269AD0()
{
  return swift_deallocObject();
}

uint64_t sub_232269AE0()
{
  return sub_232269498();
}

uint64_t sub_232269AE8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_232269B0C()
{
  return sub_232269624();
}

unint64_t sub_232269B14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FAD178;
  if (!qword_255FAD178)
  {
    sub_23224BE78(255, &qword_255FAD158, (uint64_t (*)(uint64_t))sub_232269A78, MEMORY[0x24BDB9ED8]);
    result = MEMORY[0x2349010BC](MEMORY[0x24BDB9EE8], v1);
    atomic_store(result, (unint64_t *)&qword_255FAD178);
  }
  return result;
}

void sub_232269B74(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_23224EC14(255, a3);
    v4 = sub_2322B93D4();
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_232269BC8(unint64_t result)
{
  if (result >= 4)
    return 4;
  return result;
}

uint64_t type metadata accessor for LatestOrAddVisionPrescriptionDataSource()
{
  uint64_t result;

  result = qword_255FAD1B0;
  if (!qword_255FAD1B0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_232269C14()
{
  return swift_initClassMetadata2();
}

uint64_t sub_232269C78(void *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  uint64_t v16;
  void *v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;

  v4 = v3;
  v44 = a3;
  v42 = *v3;
  *(_QWORD *)&v43 = a2;
  sub_23226C300();
  v7 = v6;
  v41 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)((char *)v3 + qword_255FAD1A8) = 0;
  swift_retain();
  v46 = a1;
  v10 = sub_23226C47C(a1);
  *(_QWORD *)((char *)v4 + qword_255FAD1A0) = v10;
  v11 = qword_255FAB900;
  swift_retain();
  if (v11 != -1)
    swift_once();
  v12 = sub_2322B7F58();
  v14 = v13;
  v47 = v10;
  v45 = v10;
  v15 = MEMORY[0x24BDB9AE0];
  sub_23226EC70(0, &qword_255FAD208, (uint64_t (*)(uint64_t))sub_23226C3B8, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
  v40[1] = v16;
  sub_23226C418();
  sub_23226EB1C(&qword_255FAD220, &qword_255FAD208, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v15, MEMORY[0x24BDB9AF8]);
  sub_2322B8C6C();
  sub_232245044(&qword_255FAD228, (uint64_t (*)(uint64_t))sub_23226C300, MEMORY[0x24BDB96C0]);
  v17 = (void *)sub_2322B8C48();
  v18 = *(void (**)(char *, uint64_t))(v41 + 8);
  v18(v9, v7);
  v19 = sub_23226D148(v12, v14, v46, v17);
  swift_bridgeObjectRelease();
  swift_release();
  v41 = qword_255FAD180;
  *(_QWORD *)((char *)v4 + qword_255FAD180) = v19;
  v20 = sub_2322B7F58();
  v22 = v21;
  v47 = v45;
  sub_2322B8C6C();
  v23 = (void *)sub_2322B8C48();
  v18(v9, v7);
  v24 = v46;
  v25 = sub_23226D148(v20, v22, v46, v23);
  swift_bridgeObjectRelease();
  swift_release();
  v26 = qword_255FAD188;
  *(_QWORD *)((char *)v4 + qword_255FAD188) = v25;
  v27 = v24;
  v28 = sub_23226A0E4(v24);
  v29 = (_QWORD *)((char *)v4 + qword_255FAD190);
  *v29 = v28;
  v29[1] = v30;
  v31 = sub_23226D384(v43, v44);
  v32 = qword_255FAD198;
  *(_QWORD *)((char *)v4 + qword_255FAD198) = v31;
  swift_release();
  sub_23226D960(0, (unint64_t *)&qword_255FAC3C8, (unint64_t *)&qword_255FADA30);
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_2322C2050;
  v34 = *(_QWORD *)((char *)v4 + v41);
  v35 = sub_23226D9BC();
  *(_QWORD *)(v33 + 32) = v34;
  *(_QWORD *)(v33 + 40) = v35;
  *(_QWORD *)(v33 + 48) = *(_QWORD *)((char *)v4 + v26);
  *(_QWORD *)(v33 + 56) = v35;
  v43 = *(_OWORD *)v29;
  *(_OWORD *)(v33 + 64) = v43;
  v36 = *(_QWORD *)((char *)v4 + v32);
  v37 = sub_23226DB28();
  *(_QWORD *)(v33 + 80) = v36;
  *(_QWORD *)(v33 + 88) = v37;
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  v38 = sub_2322B8654();
  swift_retain();
  sub_23226BD74();
  swift_release();
  swift_release();

  swift_release();
  return v38;
}

id sub_23226A0CC@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;

  v2 = *a1;
  *a2 = v2;
  return v2;
}

id sub_23226A0D8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;

  v2 = *(void **)(a1 + 8);
  *a2 = v2;
  return v2;
}

uint64_t sub_23226A0E4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  id v67;

  sub_23224BE78(0, &qword_255FAC480, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v66 = (char *)&v50 - v3;
  v4 = sub_2322B8FCC();
  v51 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23226DCA8(0, &qword_255FAD278, v7, (void (*)(uint64_t))MEMORY[0x24BE45A10], (void (*)(void))sub_23226DD28);
  v50 = v8;
  v53 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v50 - v9;
  sub_23226DD44();
  v52 = v11;
  v54 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23226E830(0, &qword_255FAD298, v14, (void (*)(void))sub_23226DE6C);
  v16 = *(_QWORD *)(v15 - 8);
  v55 = v15;
  v56 = v16;
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v50 - v17;
  sub_23226DE88();
  v20 = *(_QWORD *)(v19 - 8);
  v58 = v19;
  v59 = v20;
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v50 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23226E010();
  v61 = v23;
  v63 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v57 = (char *)&v50 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23226E0BC(0, &qword_255FAD2D8, v25, (void (*)(void))sub_23226E158);
  v62 = v26;
  v64 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v60 = (char *)&v50 - v27;
  sub_23224C6D0(0, (unint64_t *)&qword_255FACCE0, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_2322C1440;
  sub_23224C618(0, (unint64_t *)&unk_255FAF960);
  *(_QWORD *)(v28 + 32) = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_visionPrescriptionType);
  v67 = (id)v28;
  sub_2322B8F3C();
  sub_2322B8FE4();
  swift_bridgeObjectRelease();
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  sub_2322B8FB4();
  sub_23226DD28();
  v29 = a1;
  sub_2322B8C6C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v6, v4);
  v30 = sub_23226DE04();
  v31 = sub_232245044(&qword_255FAD288, (uint64_t (*)(uint64_t))MEMORY[0x24BE45A10], MEMORY[0x24BE45A08]);
  v32 = v50;
  MEMORY[0x234900354](v50, v30, v31);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v10, v32);
  sub_23226DE6C();
  v33 = v52;
  v34 = MEMORY[0x24BEE1768];
  sub_2322B8C6C();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v13, v33);
  sub_23224C6D0(0, &qword_255FAD2B0, v34, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9DE0]);
  sub_23226DF48();
  sub_23226DFB0();
  v35 = v55;
  sub_2322B8C84();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v18, v35);
  v36 = swift_allocObject();
  v37 = v65;
  *(_QWORD *)(v36 + 16) = v29;
  *(_QWORD *)(v36 + 24) = v37;
  sub_23224BE78(0, &qword_255FAC3D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_232245044(&qword_255FAD2D0, (uint64_t (*)(uint64_t))sub_23226DE88, MEMORY[0x24BDB9740]);
  v38 = v29;
  v40 = v57;
  v39 = v58;
  sub_2322B8C6C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v22, v39);
  sub_23224C618(0, (unint64_t *)&qword_255FACCA0);
  v67 = (id)sub_2322B90B0();
  v41 = sub_2322B9098();
  v42 = (uint64_t)v66;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v66, 1, 1, v41);
  sub_23226E158();
  sub_232258C54();
  v44 = v60;
  v43 = v61;
  sub_2322B8CB4();
  sub_23226E1CC(v42);

  (*(void (**)(char *, uint64_t))(v63 + 8))(v40, v43);
  sub_23226ED70(&qword_255FAD2E8, &qword_255FAD2D8, (void (*)(uint64_t))sub_23226E010, (void (*)(void))sub_23226E158);
  v45 = v62;
  sub_2322B8C30();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v44, v45);
  sub_2322B872C();
  v46 = (uint64_t (*)(uint64_t))MEMORY[0x24BE44198];
  v47 = MEMORY[0x24BE44190];
  sub_2322B8360();
  swift_release();
  sub_2322583C0(0, &qword_255FAC3F0, v46, v47, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE428B8]);
  sub_23226DC00((unint64_t *)&qword_255FAC3F8, &qword_255FAC3F0, v46, v47);
  v48 = sub_2322B8378();
  swift_release();
  sub_232245044(&qword_255FAD2F0, (uint64_t (*)(uint64_t))sub_23226E220, MEMORY[0x24BE43020]);
  return v48;
}

uint64_t sub_23226A800(uint64_t a1, void *a2)
{
  uint64_t v3;
  id v4;

  sub_23224C6D0(0, (unint64_t *)&qword_255FACCE0, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_2322C1440;
  *(_QWORD *)(v3 + 32) = a2;
  sub_2322B8F3C();
  v4 = a2;
  sub_2322B8FA8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23226A8C8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t i;
  uint64_t j;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;

  v3 = *a1;
  v19 = MEMORY[0x24BEE4AF8];
  if ((unint64_t)*a1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_2322B9368();
    v4 = result;
    if (!result)
      goto LABEL_19;
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (!v4)
      goto LABEL_19;
  }
  if (v4 < 1)
  {
    __break(1u);
    return result;
  }
  if ((v3 & 0xC000000000000001) != 0)
  {
    for (i = 0; i != v4; ++i)
    {
      MEMORY[0x2349009FC](i, v3);
      objc_opt_self();
      if (swift_dynamicCastObjCClass())
      {
        MEMORY[0x234900630]();
        if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_2322B8F48();
        sub_2322B8F54();
        sub_2322B8F3C();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    for (j = 0; j != v4; ++j)
    {
      v8 = *(void **)(v3 + 8 * j + 32);
      objc_opt_self();
      if (swift_dynamicCastObjCClass())
      {
        MEMORY[0x234900630](v8);
        if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_2322B8F48();
        sub_2322B8F54();
        sub_2322B8F3C();
      }
    }
  }
LABEL_19:
  swift_bridgeObjectRelease();
  if (v19 >> 62)
    goto LABEL_41;
  v9 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v9; v9 = sub_2322B9368())
  {
    v10 = v19 & 0xC000000000000001;
    v11 = 4;
    while (1)
    {
      if (v10)
        v12 = (id)MEMORY[0x2349009FC](v11 - 4, v19);
      else
        v12 = *(id *)(v19 + 8 * v11);
      v13 = v12;
      v14 = v11 - 3;
      if (__OFADD__(v11 - 4, 1))
      {
        __break(1u);
        goto LABEL_40;
      }
      if (objc_msgSend(v12, sel_prescriptionType) == (id)1)
        break;

      ++v11;
      if (v14 == v9)
      {
        swift_bridgeObjectRelease();
        v13 = 0;
        goto LABEL_30;
      }
    }
    swift_bridgeObjectRelease();
LABEL_30:
    swift_bridgeObjectRetain();
    v15 = 4;
    while (1)
    {
      v16 = v10 ? (id)MEMORY[0x2349009FC](v15 - 4, v19) : *(id *)(v19 + 8 * v15);
      v17 = v16;
      v18 = v15 - 3;
      if (__OFADD__(v15 - 4, 1))
        break;
      if (objc_msgSend(v16, sel_prescriptionType) == (id)2)
      {
        result = swift_bridgeObjectRelease_n();
        goto LABEL_43;
      }

      ++v15;
      if (v18 == v9)
      {
        result = swift_bridgeObjectRelease_n();
        v17 = 0;
        goto LABEL_43;
      }
    }
LABEL_40:
    __break(1u);
LABEL_41:
    swift_bridgeObjectRetain();
  }
  result = swift_bridgeObjectRelease_n();
  v17 = 0;
  v13 = 0;
LABEL_43:
  *a2 = v13;
  a2[1] = v17;
  return result;
}

uint64_t sub_23226ABFC@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;

  v4 = sub_2322B8918();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  sub_2322B88D0();
  v9 = v8;
  v10 = v8;
  v11 = sub_2322B890C();
  v12 = sub_2322B8FFC();
  if (os_log_type_enabled(v11, v12))
  {
    v20[1] = a2;
    v13 = swift_slowAlloc();
    v20[0] = v4;
    v14 = (uint8_t *)v13;
    v15 = swift_slowAlloc();
    v21 = (uint64_t)v8;
    v22 = v15;
    *(_DWORD *)v14 = 136446210;
    v16 = v8;
    sub_2322582C8(0, (unint64_t *)&qword_255FADBC0);
    v17 = sub_2322B8E34();
    v21 = sub_232266EA0(v17, v18, &v22);
    sub_2322B923C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_232241000, v11, v12, "Error fetching most recent vision prescription sample: %{public}s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234901170](v15, -1, -1);
    MEMORY[0x234901170](v14, -1, -1);

    (*(void (**)(char *, _QWORD))(v5 + 8))(v7, v20[0]);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_23226C3B8();
  return sub_2322B8B94();
}

uint64_t sub_23226AE2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t result;

  v2 = sub_2322B8A38();
  MEMORY[0x24BDAC7A8](v2);
  swift_bridgeObjectRetain();
  sub_2322B8A08();
  v3 = sub_2322B8258();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BE42248];
  swift_allocObject();
  v5 = sub_2322B824C();
  a1[3] = v3;
  result = sub_232245044(&qword_255FAD310, v4, MEMORY[0x24BE42230]);
  a1[4] = result;
  *a1 = v5;
  return result;
}

uint64_t sub_23226AF24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_2322B84EC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322B84BC();
  sub_2322B84D4();
  v4 = sub_2322B84E0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_23226AFC4()
{
  type metadata accessor for VisionPrescriptionAddPrescriptionButtonCell();
  return sub_2322B9020();
}

uint64_t sub_23226AFF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  void (*v7)(_BYTE *, _QWORD);
  _QWORD *v8;
  uint64_t v9;
  void (*v10)(_BYTE *, uint64_t);
  _BYTE v12[32];

  v0 = sub_2322B84EC();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v2);
  v6 = &v12[-v5];
  sub_2322B84B0();
  v7 = (void (*)(_BYTE *, _QWORD))sub_2322B84C8();
  *v8 = 0x4038000000000000;
  v7(v12, 0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v1 + 16))(v4, v6, v0);
  v9 = sub_2322B84E0();
  v10 = *(void (**)(_BYTE *, uint64_t))(v1 + 8);
  v10(v4, v0);
  v10(v6, v0);
  return v9;
}

uint64_t sub_23226B0F0()
{
  uint64_t v0;

  sub_23224C6D0(0, (unint64_t *)&qword_255FACCE0, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_2322C1440;
  sub_23224C618(0, (unint64_t *)&unk_255FAF960);
  *(_QWORD *)(v0 + 32) = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_visionPrescriptionType);
  sub_2322B8F3C();
  sub_2322B8FD8();
  return swift_bridgeObjectRelease();
}

void sub_23226B1D4(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  id v4;
  void *v5;
  unint64_t v6;
  char v7;
  uint64_t v8;

  v3 = *a1;
  sub_23224C618(0, (unint64_t *)&unk_255FAF960);
  v4 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_visionPrescriptionType);
  v5 = v4;
  if (*(_QWORD *)(v3 + 16) && (v6 = sub_2322B2838((uint64_t)v4), (v7 & 1) != 0))
    v8 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v6);
  else
    v8 = 0;

  *a2 = v8;
}

uint64_t sub_23226B25C@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;

  v4 = sub_2322B8918();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  sub_2322B88D0();
  v9 = v8;
  v10 = v8;
  v11 = sub_2322B890C();
  v12 = sub_2322B8FFC();
  if (os_log_type_enabled(v11, v12))
  {
    v20[1] = a2;
    v13 = swift_slowAlloc();
    v20[0] = v4;
    v14 = (uint8_t *)v13;
    v15 = swift_slowAlloc();
    v21 = (uint64_t)v8;
    v22 = v15;
    *(_DWORD *)v14 = 136446210;
    v16 = v8;
    sub_2322582C8(0, (unint64_t *)&qword_255FADBC0);
    v17 = sub_2322B8E34();
    v21 = sub_232266EA0(v17, v18, &v22);
    sub_2322B923C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_232241000, v11, v12, "Error fetching vision prescription sample count: %{public}s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234901170](v15, -1, -1);
    MEMORY[0x234901170](v14, -1, -1);

    (*(void (**)(char *, _QWORD))(v5 + 8))(v7, v20[0]);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v22 = 0;
  return sub_2322B8B88();
}

uint64_t sub_23226B47C@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  char *v53;
  id v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77[6];

  v66 = a3;
  v71 = a2;
  v6 = sub_2322B80B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_2322B8840();
  v65 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v69 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2322B8474();
  v62 = *(_QWORD *)(v11 - 8);
  v63 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v68 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_23224BE78(0, &qword_255FABDE8, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC408], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v14);
  v64 = (char *)&v54 - v15;
  sub_23224BE78(0, (unint64_t *)&unk_255FADB30, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC088], v13);
  MEMORY[0x24BDAC7A8](v16);
  v60 = (char *)&v54 - v17;
  v18 = sub_2322B896C();
  v61 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_2322B893C();
  v21 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v23 = (char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_2322B8570();
  v72 = *(_QWORD *)(v24 - 8);
  v73 = v24;
  MEMORY[0x24BDAC7A8](v24);
  v70 = (char *)&v54 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_2322B8A38();
  result = MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v54 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = *a1;
  if (v31 < 1)
  {
    v35 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    *(_QWORD *)&v74 = v18;
    v75 = v28;
    v76 = result;
    v56 = v7;
    v57 = v6;
    v58 = a4;
    v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16F0]), sel_init);
    if (qword_255FAB900 != -1)
      swift_once();
    v55 = v9;
    sub_2322B7F58();
    v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v31);
    v54 = v32;
    v34 = objc_msgSend(v32, sel_stringFromNumber_, v33);

    if (v34)
    {
      sub_2322B8E1C();

    }
    v36 = v74;
    sub_2322B8A2C();
    sub_2322B8A20();
    sub_2322B89C0();
    v37 = v76;
    v77[3] = v76;
    v77[4] = MEMORY[0x24BEBC5F0];
    v38 = sub_23224FA10(v77);
    (*(void (**)(uint64_t *, char *, uint64_t))(v75 + 16))(v38, v30, v37);
    v39 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598];
    sub_23224BE78(0, &qword_255FAC418, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC0E0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    sub_2322B8984();
    v40 = swift_allocObject();
    v74 = xmmword_2322C0E70;
    *(_OWORD *)(v40 + 16) = xmmword_2322C0E70;
    v41 = v59;
    (*(void (**)(char *, _QWORD, uint64_t))(v21 + 104))(v23, *MEMORY[0x24BEBC058], v59);
    v42 = sub_2322B8948();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v60, 1, 1, v42);
    sub_2322B8960();
    sub_2322B8954();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v20, v36);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v41);
    v43 = swift_allocObject();
    v44 = v71;
    v45 = v66;
    *(_QWORD *)(v43 + 16) = v71;
    *(_QWORD *)(v43 + 24) = v45;
    v46 = sub_2322B899C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v64, 1, 1, v46);
    (*(void (**)(char *, _QWORD, uint64_t))(v62 + 104))(v68, *MEMORY[0x24BE43600], v63);
    (*(void (**)(char *, _QWORD, uint64_t))(v65 + 104))(v69, *MEMORY[0x24BE44C60], v67);
    v47 = v44;
    v48 = v70;
    sub_2322B8564();
    sub_23224BE78(0, (unint64_t *)&unk_255FADB00, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], v39);
    sub_2322B83F0();
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = v74;
    sub_23226D960(0, &qword_255FAC200, (unint64_t *)&qword_255FABD20);
    v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = v74;
    v50 = v73;
    *(_QWORD *)(v49 + 56) = v73;
    *(_QWORD *)(v49 + 64) = sub_232245044(&qword_255FADB80, (uint64_t (*)(uint64_t))MEMORY[0x24BE438C0], MEMORY[0x24BE438A8]);
    v51 = sub_23224FA10((uint64_t *)(v49 + 32));
    v52 = v72;
    (*(void (**)(uint64_t *, char *, uint64_t))(v72 + 16))(v51, v48, v50);
    v53 = v55;
    sub_2322B80A8();
    sub_2322B8090();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v53, v57);
    sub_2322B83E4();

    (*(void (**)(char *, uint64_t))(v52 + 8))(v48, v50);
    result = (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v30, v76);
    a4 = v58;
  }
  *a4 = v35;
  return result;
}

uint64_t sub_23226BC30(void *a1, void *a2)
{
  id v4;
  id v5;

  objc_allocWithZone((Class)type metadata accessor for VisionPrescriptionAllDataViewController());
  v4 = sub_232252C10(a2, 0);
  sub_23226E2D8();
  v5 = v4;
  objc_msgSend(a1, sel_showAdaptively_sender_, v5, sub_2322B9410());

  return swift_unknownObjectRelease();
}

uint64_t sub_23226BCD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_2322B84EC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322B84B0();
  sub_2322B84D4();
  v4 = sub_2322B84E0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_23226BD74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v16[2];

  v1 = v0;
  sub_23224BE78(0, &qword_255FAC480, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v16 - v3;
  sub_23226EDB0();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[1] = *(id *)(v0 + qword_255FAD1A0);
  sub_23224C618(0, (unint64_t *)&qword_255FACCA0);
  swift_retain();
  v16[0] = (id)sub_2322B90B0();
  v10 = sub_2322B9098();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 1, 1, v10);
  v11 = MEMORY[0x24BDB9AE0];
  sub_23226EC70(0, &qword_255FAD208, (uint64_t (*)(uint64_t))sub_23226C3B8, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_23226EB1C(&qword_255FAD220, &qword_255FAD208, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v11, MEMORY[0x24BDB9AF8]);
  sub_232258C54();
  sub_2322B8CB4();
  sub_23226E1CC((uint64_t)v4);

  swift_release();
  v12 = swift_allocObject();
  swift_weakInit();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_23226EEAC;
  *(_QWORD *)(v13 + 24) = v12;
  sub_232245044(&qword_255FAD420, (uint64_t (*)(uint64_t))sub_23226EDB0, MEMORY[0x24BDB9A08]);
  v14 = sub_2322B8CFC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(_QWORD *)(v1 + qword_255FAD1A8) = v14;
  return swift_release();
}

uint64_t sub_23226BFDC(uint64_t a1, uint64_t a2)
{
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;

  v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE42C68];
  sub_23226DB90(0, &qword_255FAD270, (uint64_t (*)(uint64_t))sub_23225AF3C, sub_23226DC48, MEMORY[0x24BE42C68]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v28 = (char *)&v26 - v8;
  sub_23226DB90(0, &qword_255FAD308, (uint64_t (*)(uint64_t))sub_23226DA24, sub_23226DB0C, v4);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v26 - v15;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v18 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
    v26 = v7;
    v19 = a2;
    v20 = *MEMORY[0x24BE42C58];
    v27 = v6;
    v21 = a1;
    v22 = *MEMORY[0x24BE42C60];
    if (v21)
      v23 = v22;
    else
      v23 = v20;
    v18(v16, v23, v10);
    sub_2322B8348();
    if (v19)
      v24 = v22;
    else
      v24 = v20;
    v18(v14, v24, v10);
    sub_2322B8348();
    if (v19 | v21)
      v25 = v20;
    else
      v25 = v22;
    (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v28, v25, v27);
    sub_2322B8348();
    return swift_release();
  }
  return result;
}

void sub_23226C1D4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_23226C200()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_23226C26C()
{
  sub_2322B8648();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_23226C2F8()
{
  return type metadata accessor for LatestOrAddVisionPrescriptionDataSource();
}

void sub_23226C300()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_255FAD200)
  {
    v0 = MEMORY[0x24BDB9AE0];
    sub_23226EC70(255, &qword_255FAD208, (uint64_t (*)(uint64_t))sub_23226C3B8, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_23226C418();
    sub_23226EB1C(&qword_255FAD220, &qword_255FAD208, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v0, MEMORY[0x24BDB9AF8]);
    v1 = sub_2322B8ABC();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_255FAD200);
  }
}

void sub_23226C3B8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255FAD210)
  {
    sub_23226C418();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255FAD210);
  }
}

void sub_23226C418()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAD218)
  {
    sub_23224C618(255, (unint64_t *)&qword_255FAD9C0);
    v0 = sub_2322B9224();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAD218);
  }
}

uint64_t sub_23226C47C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  void *ObjCClassFromMetadata;
  id v34;
  uint64_t v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  char *v50;
  _QWORD *v51;
  char *v52;
  _QWORD *v53;
  void *v54;
  uint64_t v55;
  uint64_t (*v56)(uint64_t);
  id v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t (*v64)(void);
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  void *v86;
  char *v87;
  uint64_t v88;
  _QWORD *v89;
  char *v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  id v118;
  uint64_t v119;

  v86 = a1;
  sub_23224BE78(0, &qword_255FAC480, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v112 = (char *)&v77 - v2;
  sub_23226E33C();
  v108 = *(_QWORD *)(v3 - 8);
  v109 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v107 = (char *)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23226E0BC(0, &qword_255FAD3D0, sub_23226EB68, (void (*)(void))sub_23226ECF4);
  v113 = v5;
  v111 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v110 = (char *)&v77 - v6;
  sub_23226E764();
  v96 = v7;
  v92 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v90 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23226DCA8(0, &qword_255FAD358, v9, (void (*)(uint64_t))MEMORY[0x24BE459E0], (void (*)(void))sub_23226EA14);
  v95 = v10;
  v94 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v91 = (char *)&v77 - v11;
  sub_23226E5E0();
  v98 = v12;
  v97 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v93 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23226DCA8(0, &qword_255FAD340, v14, (void (*)(uint64_t))sub_23226C3B8, (void (*)(void))sub_23226EA98);
  v100 = *(_QWORD *)(v15 - 8);
  v101 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v99 = (char *)&v77 - v16;
  sub_23226E4F8();
  v105 = *(_QWORD *)(v17 - 8);
  v106 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v104 = (char *)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = (_QWORD *)sub_2322B90EC();
  v88 = *(v89 - 1);
  MEMORY[0x24BDAC7A8](v89);
  v87 = (char *)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = MEMORY[0x24BEE4AE0] + 8;
  sub_23226E830(0, (unint64_t *)&unk_255FADBB0, v20, (void (*)(void))sub_23226E920);
  v117 = v21;
  v103 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v116 = (char *)&v77 - v22;
  v79 = sub_2322B8FCC();
  v80 = *(_QWORD *)(v79 - 8);
  MEMORY[0x24BDAC7A8](v79);
  v24 = (char *)&v77 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232258520();
  v81 = v25;
  v83 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&v77 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322586CC();
  v82 = v28;
  v84 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v78 = (char *)&v77 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23226E830(0, &qword_255FAD368, v30, (void (*)(void))sub_23226E904);
  v115 = v31;
  v102 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v114 = (char *)&v77 - v32;
  sub_23224C618(0, (unint64_t *)&unk_255FAF960);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v34 = objc_msgSend(ObjCClassFromMetadata, sel_visionPrescriptionType);
  v85 = objc_msgSend((id)objc_opt_self(), sel_queryDescriptorWithSampleType_, v34);

  sub_23224C6D0(0, (unint64_t *)&qword_255FACCE0, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_2322C1450;
  sub_2322B8E1C();
  v36 = objc_allocWithZone(MEMORY[0x24BDD17C0]);
  v37 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  v38 = objc_msgSend(v36, sel_initWithKey_ascending_, v37, 0);

  *(_QWORD *)(v35 + 32) = v38;
  sub_2322B8E1C();
  v39 = objc_allocWithZone(MEMORY[0x24BDD17C0]);
  v40 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  v41 = objc_msgSend(v39, sel_initWithKey_ascending_, v40, 0);

  *(_QWORD *)(v35 + 40) = v41;
  v119 = v35;
  sub_2322B8F3C();
  v42 = v119;
  v43 = v86;
  v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_2322C1440;
  *(_QWORD *)(v44 + 32) = objc_msgSend(ObjCClassFromMetadata, sel_visionPrescriptionType);
  v119 = v44;
  sub_2322B8F3C();
  sub_2322B8FE4();
  swift_bridgeObjectRelease();
  sub_23226EC70(0, (unint64_t *)&qword_255FAC490, (uint64_t (*)(uint64_t))sub_23225864C, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9E10]);
  sub_23226DD28();
  sub_23226E8A4();
  v45 = v79;
  sub_2322B8C84();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v24, v45);
  sub_2322B8FC0();
  sub_2322582C8(0, (unint64_t *)&qword_255FADBC0);
  sub_232245044(&qword_255FAC4B0, (uint64_t (*)(uint64_t))sub_232258520, MEMORY[0x24BDB9740]);
  v46 = v78;
  v47 = v81;
  sub_2322B8C18();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v27, v47);
  sub_23226E904();
  v48 = v82;
  sub_2322B8C6C();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v46, v48);
  v49 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  if (qword_255FABAC0 != -1)
    swift_once();
  v50 = v87;
  sub_2322B90F8();

  sub_23226E920();
  v51 = v89;
  sub_2322B8C6C();
  (*(void (**)(char *, _QWORD *))(v88 + 8))(v50, v51);
  sub_23226E93C();
  sub_23226E9A8();
  v52 = v90;
  sub_2322B8C90();
  v53 = (_QWORD *)swift_allocObject();
  v54 = v85;
  v53[2] = v43;
  v53[3] = v54;
  v53[4] = v42;
  v55 = swift_allocObject();
  *(_QWORD *)(v55 + 16) = sub_23226ED44;
  *(_QWORD *)(v55 + 24) = v53;
  sub_2322B8F9C();
  v56 = (uint64_t (*)(uint64_t))MEMORY[0x24BE459E0];
  sub_23226EA14();
  v57 = v43;
  v89 = v54;
  v58 = v91;
  v59 = v96;
  sub_2322B8C6C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v52, v59);
  sub_23226EA30();
  sub_232245044(&qword_255FADC00, v56, MEMORY[0x24BE459D8]);
  v60 = v93;
  v61 = v95;
  sub_2322B8CE4();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v58, v61);
  sub_23226C3B8();
  sub_23226EA98();
  v62 = v99;
  v63 = v98;
  sub_2322B8C6C();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v60, v63);
  v64 = MEMORY[0x24BDB9E10];
  sub_23226EC70(0, &qword_255FAD3A8, (uint64_t (*)(uint64_t))sub_23226C3B8, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9E10]);
  sub_23226EAB4();
  sub_23226EB1C(&qword_255FAD3B8, &qword_255FAD3A8, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v64, MEMORY[0x24BDB9E20]);
  v65 = v104;
  v66 = v101;
  sub_2322B8C84();
  (*(void (**)(char *, uint64_t))(v100 + 8))(v62, v66);
  sub_232245044(&qword_255FAD3C8, (uint64_t (*)(uint64_t))sub_23226E4F8, MEMORY[0x24BDB9740]);
  v68 = v106;
  v67 = v107;
  sub_2322B8CA8();
  sub_232245044(&qword_255FAD3F0, (uint64_t (*)(uint64_t))sub_23226E33C, MEMORY[0x24BDB9530]);
  v69 = v109;
  v70 = sub_2322B8C24();
  (*(void (**)(char *, uint64_t))(v108 + 8))(v67, v69);
  v119 = v70;
  sub_23224C618(0, (unint64_t *)&qword_255FACCA0);
  v118 = (id)sub_2322B90B0();
  v71 = sub_2322B9098();
  v72 = (uint64_t)v112;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v112, 1, 1, v71);
  sub_23226EB68(0);
  sub_23226ECF4();
  sub_232258C54();
  v73 = v110;
  sub_2322B8CB4();
  sub_23226E1CC(v72);

  swift_release();
  sub_23226ED70(&qword_255FAD410, &qword_255FAD3D0, sub_23226EB68, (void (*)(void))sub_23226ECF4);
  v74 = v113;
  v75 = sub_2322B8C48();

  (*(void (**)(char *, uint64_t))(v111 + 8))(v73, v74);
  (*(void (**)(char *, uint64_t))(v105 + 8))(v65, v68);
  (*(void (**)(char *, uint64_t))(v103 + 8))(v116, v117);
  (*(void (**)(char *, uint64_t))(v102 + 8))(v114, v115);
  return v75;
}

uint64_t sub_23226D148(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  sub_23226DB90(0, &qword_255FAD308, (uint64_t (*)(uint64_t))sub_23226DA24, sub_23226DB0C, MEMORY[0x24BE42C68]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v18 - v11;
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3930]), sel_initWithHealthStore_, a3);
  type metadata accessor for VisionPrescriptionAnalyticsContext();
  swift_allocObject();
  swift_retain();
  v14 = sub_2322B4D08(a3);
  type metadata accessor for VisionPrescriptionDataSource();
  swift_allocObject();
  sub_2322A0ED0(v13, a4, v14);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  swift_bridgeObjectRetain();
  v16 = MEMORY[0x24BE43520];
  sub_2322B8384();
  swift_release();
  swift_release();
  sub_2322583C0(0, &qword_255FAD248, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionDataSource, v16, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE42778]);
  sub_23226DAA4();
  sub_2322B8378();
  swift_release();
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BE42C60], v9);
  sub_23226DB90(0, &qword_255FAD238, (uint64_t (*)(uint64_t))sub_23226DA24, sub_23226DB0C, MEMORY[0x24BE42CA8]);
  swift_allocObject();
  return sub_2322B8354();
}

uint64_t sub_23226D384(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;

  sub_23226DB90(0, &qword_255FAD270, (uint64_t (*)(uint64_t))sub_23225AF3C, sub_23226DC48, MEMORY[0x24BE42C68]);
  v32 = *(_QWORD *)(v4 - 8);
  v33 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v37 = (char *)&v31 - v5;
  v6 = sub_2322B83F0();
  v35 = *(_QWORD *)(v6 - 8);
  v36 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v34 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2322B80B4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2322B851C();
  v39 = *(_QWORD *)(v12 - 8);
  v40 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v38 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255FAB900 != -1)
    swift_once();
  *(_QWORD *)&v31 = sub_2322B7F58();
  v14 = (void *)sub_2322B8DEC();
  v15 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v14);

  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = a2;
  type metadata accessor for VisionPrescriptionAddPrescriptionButtonCell();
  swift_retain();
  sub_2322B8294();
  sub_2322B80A8();
  sub_2322B8090();
  v17 = *(void (**)(char *, uint64_t))(v9 + 8);
  v17(v11, v8);
  v18 = v38;
  sub_2322B8510();
  sub_23226D960(0, &qword_255FAC200, (unint64_t *)&qword_255FABD20);
  v19 = swift_allocObject();
  v31 = xmmword_2322C0E70;
  *(_OWORD *)(v19 + 16) = xmmword_2322C0E70;
  v20 = v40;
  *(_QWORD *)(v19 + 56) = v40;
  *(_QWORD *)(v19 + 64) = sub_232245044(&qword_255FACDC0, (uint64_t (*)(uint64_t))MEMORY[0x24BE43850], MEMORY[0x24BE43840]);
  v21 = sub_23224FA10((uint64_t *)(v19 + 32));
  (*(void (**)(uint64_t *, char *, uint64_t))(v39 + 16))(v21, v18, v20);
  sub_2322B80A8();
  sub_2322B8090();
  v17(v11, v8);
  v22 = v34;
  sub_2322B83E4();
  sub_23224BE78(0, (unint64_t *)&unk_255FADB00, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v23 = v35;
  v24 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = v31;
  v26 = v36;
  (*(void (**)(unint64_t, char *, uint64_t))(v23 + 16))(v25 + v24, v22, v36);
  v41 = 0x3C53447961727241;
  v42 = 0xE800000000000000;
  sub_2322B80A8();
  sub_2322B8090();
  v17(v11, v8);
  sub_2322B8EAC();
  swift_bridgeObjectRelease();
  sub_2322B8EAC();
  sub_2322B82F4();
  v27 = (uint64_t (*)(uint64_t))MEMORY[0x24BE42898];
  swift_allocObject();
  sub_2322B82E8();
  v28 = MEMORY[0x24BE42890];
  sub_2322B8360();
  swift_release();
  sub_2322583C0(0, (unint64_t *)&qword_255FAC618, v27, v28, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE428B8]);
  sub_23226DC00((unint64_t *)&qword_255FADB10, (unint64_t *)&qword_255FAC618, v27, v28);
  sub_2322B8378();
  swift_release();
  (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v37, *MEMORY[0x24BE42C60], v33);
  sub_23226DB90(0, &qword_255FAD268, (uint64_t (*)(uint64_t))sub_23225AF3C, sub_23226DC48, MEMORY[0x24BE42CA8]);
  swift_allocObject();
  v29 = sub_2322B8354();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v22, v26);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v38, v40);
  return v29;
}

void sub_23226D960(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_2322582C8(255, a3);
    v4 = sub_2322B93D4();
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_23226D9BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FAD230;
  if (!qword_255FAD230)
  {
    sub_23226DB90(255, &qword_255FAD238, (uint64_t (*)(uint64_t))sub_23226DA24, sub_23226DB0C, MEMORY[0x24BE42CA8]);
    result = MEMORY[0x2349010BC](MEMORY[0x24BE42CC8], v1);
    atomic_store(result, (unint64_t *)&qword_255FAD230);
  }
  return result;
}

void sub_23226DA24()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAD240)
  {
    sub_2322583C0(255, &qword_255FAD248, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionDataSource, MEMORY[0x24BE43520], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE42778]);
    sub_23226DAA4();
    v0 = sub_2322B8390();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAD240);
  }
}

unint64_t sub_23226DAA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FAD250;
  if (!qword_255FAD250)
  {
    sub_2322583C0(255, &qword_255FAD248, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionDataSource, MEMORY[0x24BE43520], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE42778]);
    result = MEMORY[0x2349010BC](MEMORY[0x24BE42788], v1);
    atomic_store(result, (unint64_t *)&qword_255FAD250);
  }
  return result;
}

uint64_t sub_23226DB0C()
{
  return sub_232245044(&qword_255FAD258, (uint64_t (*)(uint64_t))sub_23226DA24, MEMORY[0x24BE43020]);
}

unint64_t sub_23226DB28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FAD260;
  if (!qword_255FAD260)
  {
    sub_23226DB90(255, &qword_255FAD268, (uint64_t (*)(uint64_t))sub_23225AF3C, sub_23226DC48, MEMORY[0x24BE42CA8]);
    result = MEMORY[0x2349010BC](MEMORY[0x24BE42CC8], v1);
    atomic_store(result, (unint64_t *)&qword_255FAD260);
  }
  return result;
}

void sub_23226DB90(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*a2)
  {
    v9 = a3(255);
    v10 = a4();
    v11 = a5(a1, v9, v10);
    if (!v12)
      atomic_store(v11, a2);
  }
}

uint64_t sub_23226DC00(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_2322583C0(255, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE428B8]);
    result = MEMORY[0x2349010BC](MEMORY[0x24BE428C8], v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23226DC48()
{
  return sub_232245044(&qword_255FAC620, (uint64_t (*)(uint64_t))sub_23225AF3C, MEMORY[0x24BE43020]);
}

uint64_t sub_23226DC64()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23226DC88()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_23226DCA8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t), void (*a5)(void))
{
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    a3(255);
    a4(255);
    a5();
    v8 = sub_2322B8ABC();
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_23226DD28()
{
  return sub_232245044(&qword_255FADBA0, (uint64_t (*)(uint64_t))MEMORY[0x24BE45A88], MEMORY[0x24BE45A80]);
}

void sub_23226DD44()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_255FAD280)
  {
    sub_2322B8FB4();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BE45A10];
    sub_23226DCA8(255, &qword_255FAD278, (void (*)(uint64_t))MEMORY[0x24BE45A88], (void (*)(uint64_t))MEMORY[0x24BE45A10], (void (*)(void))sub_23226DD28);
    sub_232245044(&qword_255FAD288, v0, MEMORY[0x24BE45A08]);
    sub_23226DE04();
    v1 = sub_2322B8A98();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_255FAD280);
  }
}

unint64_t sub_23226DE04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FAD290;
  if (!qword_255FAD290)
  {
    sub_23226DCA8(255, &qword_255FAD278, (void (*)(uint64_t))MEMORY[0x24BE45A88], (void (*)(uint64_t))MEMORY[0x24BE45A10], (void (*)(void))sub_23226DD28);
    result = MEMORY[0x2349010BC](MEMORY[0x24BDB96C0], v1);
    atomic_store(result, (unint64_t *)&qword_255FAD290);
  }
  return result;
}

uint64_t sub_23226DE6C()
{
  return sub_232245044(&qword_255FAD2A0, (uint64_t (*)(uint64_t))sub_23226DD44, MEMORY[0x24BDB9610]);
}

void sub_23226DE88()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  if (!qword_255FAD2A8)
  {
    v0 = MEMORY[0x24BEE1768];
    sub_23226E830(255, &qword_255FAD298, (void (*)(uint64_t))sub_23226DD44, (void (*)(void))sub_23226DE6C);
    sub_23224C6D0(255, &qword_255FAD2B0, v0, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9DE0]);
    sub_23226DF48();
    sub_23226DFB0();
    v1 = sub_2322B8AD4();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_255FAD2A8);
  }
}

unint64_t sub_23226DF48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FAD2B8;
  if (!qword_255FAD2B8)
  {
    sub_23226E830(255, &qword_255FAD298, (void (*)(uint64_t))sub_23226DD44, (void (*)(void))sub_23226DE6C);
    result = MEMORY[0x2349010BC](MEMORY[0x24BDB96C0], v1);
    atomic_store(result, (unint64_t *)&qword_255FAD2B8);
  }
  return result;
}

unint64_t sub_23226DFB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FAD2C0;
  if (!qword_255FAD2C0)
  {
    sub_23224C6D0(255, &qword_255FAD2B0, MEMORY[0x24BEE1768], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9DE0]);
    result = MEMORY[0x2349010BC](MEMORY[0x24BDB9DF8], v1);
    atomic_store(result, (unint64_t *)&qword_255FAD2C0);
  }
  return result;
}

void sub_23226E010()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAD2C8)
  {
    sub_23226DE88();
    sub_23224BE78(255, &qword_255FAC3D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_232245044(&qword_255FAD2D0, (uint64_t (*)(uint64_t))sub_23226DE88, MEMORY[0x24BDB9740]);
    v0 = sub_2322B8ABC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAD2C8);
  }
}

void sub_23226E0BC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    sub_23224C618(255, (unint64_t *)&qword_255FACCA0);
    a4();
    sub_232258C54();
    v6 = sub_2322B8B10();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_23226E158()
{
  return sub_232245044(&qword_255FAD2E0, (uint64_t (*)(uint64_t))sub_23226E010, MEMORY[0x24BDB96C0]);
}

uint64_t sub_23226E174()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23226E198()
{
  return sub_23226B0F0();
}

uint64_t sub_23226E1A0()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23226E1C4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_23226B47C(a1, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_23226E1CC(uint64_t a1)
{
  uint64_t v2;

  sub_23224BE78(0, &qword_255FAC480, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_23226E220()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  if (!qword_255FAD2F8)
  {
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BE44198];
    v1 = MEMORY[0x24BE44190];
    sub_2322583C0(255, &qword_255FAC3F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE44198], MEMORY[0x24BE44190], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE428B8]);
    sub_23226DC00((unint64_t *)&qword_255FAC3F8, &qword_255FAC3F0, v0, v1);
    v2 = sub_2322B8390();
    if (!v3)
      atomic_store(v2, (unint64_t *)&qword_255FAD2F8);
  }
}

uint64_t sub_23226E2D0(void *a1)
{
  uint64_t v1;

  return sub_23226BC30(a1, *(void **)(v1 + 16));
}

unint64_t sub_23226E2D8()
{
  unint64_t result;

  result = qword_255FAD300;
  if (!qword_255FAD300)
  {
    type metadata accessor for LatestOrAddVisionPrescriptionDataSource();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255FAD300);
  }
  return result;
}

uint64_t sub_23226E310()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23226E334@<X0>(uint64_t *a1@<X8>)
{
  return sub_23226AE2C(a1);
}

void sub_23226E33C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAD318)
  {
    sub_23226E404();
    sub_23226E4F8();
    sub_232245044(&qword_255FAD3C0, (uint64_t (*)(uint64_t))sub_23226E404, MEMORY[0x24BDB9970]);
    sub_232245044(&qword_255FAD3C8, (uint64_t (*)(uint64_t))sub_23226E4F8, MEMORY[0x24BDB9740]);
    v0 = sub_2322B8A80();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAD318);
  }
}

void sub_23226E404()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAD320)
  {
    sub_23224BE78(255, &qword_255FAD328, (uint64_t (*)(uint64_t))sub_23226C3B8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_23226E498();
    v0 = sub_2322B8AF8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAD320);
  }
}

unint64_t sub_23226E498()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FAD330;
  if (!qword_255FAD330)
  {
    sub_23224BE78(255, &qword_255FAD328, (uint64_t (*)(uint64_t))sub_23226C3B8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2349010BC](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_255FAD330);
  }
  return result;
}

void sub_23226E4F8()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_255FAD338)
  {
    sub_23226DCA8(255, &qword_255FAD340, (void (*)(uint64_t))sub_23226E5E0, (void (*)(uint64_t))sub_23226C3B8, (void (*)(void))sub_23226EA98);
    v0 = MEMORY[0x24BDB9E10];
    sub_23226EC70(255, &qword_255FAD3A8, (uint64_t (*)(uint64_t))sub_23226C3B8, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9E10]);
    sub_23226EAB4();
    sub_23226EB1C(&qword_255FAD3B8, &qword_255FAD3A8, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v0, MEMORY[0x24BDB9E20]);
    v1 = sub_2322B8AD4();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_255FAD338);
  }
}

void sub_23226E5E0()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_255FAD348)
  {
    sub_2322B8F9C();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BE459E0];
    sub_23226E6A8();
    sub_232245044(&qword_255FADC00, v0, MEMORY[0x24BE459D8]);
    sub_232245044(&qword_255FAD398, (uint64_t (*)(uint64_t))sub_23226E6A8, MEMORY[0x24BDB95F8]);
    v1 = sub_2322B8A98();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_255FAD348);
  }
}

void sub_23226E6A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAD350)
  {
    sub_23226DCA8(255, &qword_255FAD358, (void (*)(uint64_t))sub_23226E764, (void (*)(uint64_t))MEMORY[0x24BE459E0], (void (*)(void))sub_23226EA14);
    sub_2322582C8(255, (unint64_t *)&qword_255FADBC0);
    sub_23226EA30();
    v0 = sub_2322B8A8C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAD350);
  }
}

void sub_23226E764()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAD360)
  {
    sub_23226E830(255, &qword_255FAD368, (void (*)(uint64_t))sub_2322586CC, (void (*)(void))sub_23226E904);
    sub_23226E830(255, (unint64_t *)&unk_255FADBB0, (void (*)(uint64_t))MEMORY[0x24BDD0078], (void (*)(void))sub_23226E920);
    sub_23226E93C();
    sub_23226E9A8();
    v0 = sub_2322B8AE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAD360);
  }
}

void sub_23226E830(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4();
    v6 = sub_2322B8ABC();
    if (!v7)
      atomic_store(v6, a2);
  }
}

unint64_t sub_23226E8A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FAC4A0;
  if (!qword_255FAC4A0)
  {
    sub_23226EC70(255, (unint64_t *)&qword_255FAC490, (uint64_t (*)(uint64_t))sub_23225864C, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9E10]);
    result = MEMORY[0x2349010BC](MEMORY[0x24BDB9E20], v1);
    atomic_store(result, (unint64_t *)&qword_255FAC4A0);
  }
  return result;
}

uint64_t sub_23226E904()
{
  return sub_232245044(&qword_255FAC4C0, (uint64_t (*)(uint64_t))sub_2322586CC, MEMORY[0x24BE41D28]);
}

uint64_t sub_23226E920()
{
  return sub_232245044(&qword_255FAD370, (uint64_t (*)(uint64_t))MEMORY[0x24BDD0078], MEMORY[0x24BDD0070]);
}

unint64_t sub_23226E93C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FAD378;
  if (!qword_255FAD378)
  {
    sub_23226E830(255, &qword_255FAD368, (void (*)(uint64_t))sub_2322586CC, (void (*)(void))sub_23226E904);
    result = MEMORY[0x2349010BC](MEMORY[0x24BDB96C0], v1);
    atomic_store(result, (unint64_t *)&qword_255FAD378);
  }
  return result;
}

unint64_t sub_23226E9A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FAD380;
  if (!qword_255FAD380)
  {
    sub_23226E830(255, (unint64_t *)&unk_255FADBB0, (void (*)(uint64_t))MEMORY[0x24BDD0078], (void (*)(void))sub_23226E920);
    result = MEMORY[0x2349010BC](MEMORY[0x24BDB96C0], v1);
    atomic_store(result, (unint64_t *)&qword_255FAD380);
  }
  return result;
}

uint64_t sub_23226EA14()
{
  return sub_232245044(&qword_255FAD388, (uint64_t (*)(uint64_t))sub_23226E764, MEMORY[0x24BDB9798]);
}

unint64_t sub_23226EA30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FAD390;
  if (!qword_255FAD390)
  {
    sub_23226DCA8(255, &qword_255FAD358, (void (*)(uint64_t))sub_23226E764, (void (*)(uint64_t))MEMORY[0x24BE459E0], (void (*)(void))sub_23226EA14);
    result = MEMORY[0x2349010BC](MEMORY[0x24BDB96C0], v1);
    atomic_store(result, (unint64_t *)&qword_255FAD390);
  }
  return result;
}

uint64_t sub_23226EA98()
{
  return sub_232245044(&qword_255FAD3A0, (uint64_t (*)(uint64_t))sub_23226E5E0, MEMORY[0x24BDB9610]);
}

unint64_t sub_23226EAB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FAD3B0;
  if (!qword_255FAD3B0)
  {
    sub_23226DCA8(255, &qword_255FAD340, (void (*)(uint64_t))sub_23226E5E0, (void (*)(uint64_t))sub_23226C3B8, (void (*)(void))sub_23226EA98);
    result = MEMORY[0x2349010BC](MEMORY[0x24BDB96C0], v1);
    atomic_store(result, (unint64_t *)&qword_255FAD3B0);
  }
  return result;
}

uint64_t sub_23226EB1C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_23226EC70(255, a2, (uint64_t (*)(uint64_t))sub_23226C3B8, a3);
    result = MEMORY[0x2349010BC](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_23226EB68(uint64_t a1)
{
  sub_23226DB90(a1, &qword_255FAD3D8, (uint64_t (*)(uint64_t))sub_23226EB8C, sub_23226ECD8, MEMORY[0x24BDB9500]);
}

void sub_23226EB8C()
{
  uint64_t (*v0)(uint64_t, uint64_t, _QWORD, _QWORD);
  unint64_t v1;
  uint64_t v2;

  if (!qword_255FAD3E0)
  {
    sub_23226E33C();
    v0 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BE41130];
    sub_23226EC70(255, &qword_255FAD3E8, (uint64_t (*)(uint64_t))sub_23226C3B8, MEMORY[0x24BE41130]);
    sub_232245044(&qword_255FAD3F0, (uint64_t (*)(uint64_t))sub_23226E33C, MEMORY[0x24BDB9530]);
    sub_23226EB1C(&qword_255FAD3F8, &qword_255FAD3E8, v0, MEMORY[0x24BE41138]);
    v1 = sub_2322B8B04();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_255FAD3E0);
  }
}

void sub_23226EC70(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, _QWORD, _QWORD))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7, MEMORY[0x24BEE4078], MEMORY[0x24BEE40A8]);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_23226ECD8()
{
  return sub_232245044(&qword_255FAD400, (uint64_t (*)(uint64_t))sub_23226EB8C, MEMORY[0x24BDB99F0]);
}

uint64_t sub_23226ECF4()
{
  return sub_232245044(&qword_255FAD408, (uint64_t (*)(uint64_t))sub_23226EB68, MEMORY[0x24BDB9510]);
}

uint64_t sub_23226ED10()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23226ED44()
{
  uint64_t v0;

  return sub_23226A800(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_23226ED50()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_23226ED70(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_23226E0BC(255, a2, a3, a4);
    result = MEMORY[0x2349010BC](MEMORY[0x24BDB9A08], v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_23226EDB0()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_255FAD418)
  {
    v0 = MEMORY[0x24BDB9AE0];
    sub_23226EC70(255, &qword_255FAD208, (uint64_t (*)(uint64_t))sub_23226C3B8, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_23224C618(255, (unint64_t *)&qword_255FACCA0);
    sub_23226EB1C(&qword_255FAD220, &qword_255FAD208, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v0, MEMORY[0x24BDB9AF8]);
    sub_232258C54();
    v1 = sub_2322B8B10();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_255FAD418);
  }
}

uint64_t sub_23226EE88()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23226EEAC(uint64_t a1, uint64_t a2)
{
  return sub_23226BFDC(a1, a2);
}

uint64_t sub_23226EEB4(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*a1, a1[1]);
}

uint64_t sub_23226EEE8(char a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;

  switch(a1)
  {
    case 0:
      v2 = objc_msgSend(v1, sel_leftEye);
      if (v2)
      {
        v3 = v2;
        v4 = objc_msgSend(v2, sel_sphere);

      }
      else
      {
        v4 = 0;
      }
      v16 = objc_msgSend(v1, sel_rightEye);
      if (!v16)
        goto LABEL_29;
      v12 = v16;
      v13 = objc_msgSend(v16, sel_sphere);
      goto LABEL_25;
    case 1:
      v5 = objc_msgSend(v1, sel_leftEye);
      if (v5)
      {
        v6 = v5;
        v4 = objc_msgSend(v5, sel_cylinder);

      }
      else
      {
        v4 = 0;
      }
      v17 = objc_msgSend(v1, sel_rightEye);
      if (!v17)
        goto LABEL_29;
      v12 = v17;
      v13 = objc_msgSend(v17, sel_cylinder);
      goto LABEL_25;
    case 2:
      v7 = objc_msgSend(v1, sel_leftEye);
      if (v7)
      {
        v8 = v7;
        v4 = objc_msgSend(v7, sel_axis);

      }
      else
      {
        v4 = 0;
      }
      v18 = objc_msgSend(v1, sel_rightEye);
      if (!v18)
        goto LABEL_29;
      v12 = v18;
      v13 = objc_msgSend(v18, sel_axis);
      goto LABEL_25;
    case 3:
      v9 = objc_msgSend(v1, sel_leftEye);
      if (v9)
      {
        v10 = v9;
        v4 = objc_msgSend(v9, sel_addPower);

      }
      else
      {
        v4 = 0;
      }
      v19 = objc_msgSend(v1, sel_rightEye);
      if (v19)
      {
        v12 = v19;
        v13 = objc_msgSend(v19, sel_addPower);
LABEL_25:
        v20 = v13;

        if (v4)
          goto LABEL_26;
      }
      else
      {
LABEL_29:
        v20 = 0;
        if (v4)
        {
LABEL_26:
          if (v20)
          {
            v21 = *(_QWORD *)aBoth;
            swift_bridgeObjectRetain();

          }
          else
          {
            v21 = *(_QWORD *)aLeft;
            swift_bridgeObjectRetain();

          }
          return v21;
        }
      }
      if (v20)
      {
        v21 = *(_QWORD *)aRight;
        swift_bridgeObjectRetain();

      }
      else
      {
LABEL_32:
        v21 = *(_QWORD *)aNone;
        swift_bridgeObjectRetain();
      }
      return v21;
    case 4:
      v11 = objc_msgSend(v1, sel_leftEye);
      v4 = objc_msgSend(v11, sel_vertexDistance);

      v12 = objc_msgSend(v1, sel_rightEye);
      v13 = objc_msgSend(v12, sel_vertexDistance);
      goto LABEL_25;
    case 11:
      v14 = objc_msgSend(v1, sel_leftEye);
      v4 = objc_msgSend(v14, sel_nearPupillaryDistance);

      v12 = objc_msgSend(v1, sel_rightEye);
      v13 = objc_msgSend(v12, sel_nearPupillaryDistance);
      goto LABEL_25;
    case 12:
      v15 = objc_msgSend(v1, sel_leftEye);
      v4 = objc_msgSend(v15, sel_farPupillaryDistance);

      v12 = objc_msgSend(v1, sel_rightEye);
      v13 = objc_msgSend(v12, sel_farPupillaryDistance);
      goto LABEL_25;
    default:
      goto LABEL_32;
  }
}

uint64_t sub_23226F2F0()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;

  v1 = objc_msgSend(v0, sel_leftEye);
  v2 = objc_msgSend(v1, sel_prism);

  v3 = objc_msgSend(v0, sel_rightEye);
  v4 = objc_msgSend(v3, sel_prism);

  if (v2)
  {
    if (v4)
    {
      v5 = *(_QWORD *)aBoth;
      swift_bridgeObjectRetain();

    }
    else
    {
      v5 = *(_QWORD *)aLeft;
      swift_bridgeObjectRetain();
    }

  }
  else if (v4)
  {
    v5 = *(_QWORD *)aRight;
    swift_bridgeObjectRetain();

  }
  else
  {
    v5 = *(_QWORD *)aNone;
    swift_bridgeObjectRetain();
  }
  return v5;
}

uint64_t sub_23226F3FC(char a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;

  switch(a1)
  {
    case 0:
      v2 = objc_msgSend(v1, sel_leftEye);
      if (v2)
      {
        v3 = v2;
        v4 = objc_msgSend(v2, sel_sphere);

      }
      else
      {
        v4 = 0;
      }
      v15 = objc_msgSend(v1, sel_rightEye);
      if (!v15)
        goto LABEL_27;
      v12 = v15;
      v13 = objc_msgSend(v15, sel_sphere);
      goto LABEL_24;
    case 1:
      v5 = objc_msgSend(v1, sel_leftEye);
      if (v5)
      {
        v6 = v5;
        v4 = objc_msgSend(v5, sel_cylinder);

      }
      else
      {
        v4 = 0;
      }
      v16 = objc_msgSend(v1, sel_rightEye);
      if (!v16)
        goto LABEL_27;
      v12 = v16;
      v13 = objc_msgSend(v16, sel_cylinder);
      goto LABEL_24;
    case 2:
      v7 = objc_msgSend(v1, sel_leftEye);
      if (v7)
      {
        v8 = v7;
        v4 = objc_msgSend(v7, sel_axis);

      }
      else
      {
        v4 = 0;
      }
      v17 = objc_msgSend(v1, sel_rightEye);
      if (!v17)
        goto LABEL_27;
      v12 = v17;
      v13 = objc_msgSend(v17, sel_axis);
      goto LABEL_24;
    case 3:
      v9 = objc_msgSend(v1, sel_leftEye);
      if (v9)
      {
        v10 = v9;
        v4 = objc_msgSend(v9, sel_addPower);

      }
      else
      {
        v4 = 0;
      }
      v18 = objc_msgSend(v1, sel_rightEye);
      if (v18)
      {
        v12 = v18;
        v13 = objc_msgSend(v18, sel_addPower);
LABEL_24:
        v19 = v13;

        if (v4)
          goto LABEL_25;
      }
      else
      {
LABEL_27:
        v19 = 0;
        if (v4)
        {
LABEL_25:
          if (v19)
          {
            v20 = *(_QWORD *)aBoth;
            swift_bridgeObjectRetain();

          }
          else
          {
            v20 = *(_QWORD *)aLeft;
            swift_bridgeObjectRetain();

          }
          return v20;
        }
      }
      if (v19)
      {
        v20 = *(_QWORD *)aRight;
        swift_bridgeObjectRetain();

      }
      else
      {
LABEL_30:
        v20 = *(_QWORD *)aNone;
        swift_bridgeObjectRetain();
      }
      return v20;
    case 13:
      v11 = objc_msgSend(v1, sel_leftEye);
      v4 = objc_msgSend(v11, sel_baseCurve);

      v12 = objc_msgSend(v1, sel_rightEye);
      v13 = objc_msgSend(v12, sel_baseCurve);
      goto LABEL_24;
    case 14:
      v14 = objc_msgSend(v1, sel_leftEye);
      v4 = objc_msgSend(v14, sel_diameter);

      v12 = objc_msgSend(v1, sel_rightEye);
      v13 = objc_msgSend(v12, sel_diameter);
      goto LABEL_24;
    default:
      goto LABEL_30;
  }
}

uint64_t *sub_23226F7A8(uint64_t a1, id a2, int a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  _BOOL8 v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  _BOOL8 v44;
  id v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v61[2];
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  int v69;
  char *v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;

  v4 = v3;
  v69 = a3;
  v67 = *v4;
  sub_23226593C(0, &qword_255FABC68, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v70 = (char *)v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v61 - v10;
  v12 = sub_2322B8918();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v68 = (char *)v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23226593C(0, (unint64_t *)&qword_255FAD5B0, (void (*)(uint64_t))MEMORY[0x24BE43B60]);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v61 - v16;
  v18 = sub_2322B860C();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232270F98(a1, (uint64_t)v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_2322659DC((uint64_t)v17, (unint64_t *)&qword_255FAD5B0, (void (*)(uint64_t))MEMORY[0x24BE43B60]);
    v4[2] = 0;
    v4[3] = 0;
    v22 = (uint64_t)v70;
    v23 = v69;
    v24 = a1;
  }
  else
  {
    v64 = v13;
    v65 = v11;
    v66 = a1;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v17, v18);
    sub_2322B8900();
    v25 = sub_2322B890C();
    v26 = sub_2322B9014();
    if (os_log_type_enabled(v25, v26))
    {
      v63 = v12;
      v27 = (uint8_t *)swift_slowAlloc();
      v62 = swift_slowAlloc();
      *(_QWORD *)&v72 = v62;
      *(_DWORD *)v27 = 136315138;
      v61[1] = v27 + 4;
      v28 = sub_2322B9464();
      v71 = sub_232266EA0(v28, v29, (uint64_t *)&v72);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232241000, v25, v26, "[%s] Demographics data exists. Setting age and biological sex.", v27, 0xCu);
      v30 = v62;
      swift_arrayDestroy();
      MEMORY[0x234901170](v30, -1, -1);
      MEMORY[0x234901170](v27, -1, -1);

      (*(void (**)(char *, uint64_t))(v64 + 8))(v68, v63);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v64 + 8))(v68, v12);
    }
    v4[2] = sub_2322B85E8();
    v31 = sub_2322B85F4();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    v4[3] = v31;
    v11 = v65;
    v24 = v66;
    v22 = (uint64_t)v70;
    v23 = v69;
  }
  v4[4] = sub_2322B8DEC();
  if (a2 && (v32 = objc_msgSend(a2, sel_metadata)) != 0)
  {
    v33 = v32;
    v34 = sub_2322B8DC8();

    v35 = sub_2322B8E1C();
    if (*(_QWORD *)(v34 + 16) && (v37 = sub_2322B26FC(v35, v36), (v38 & 1) != 0))
    {
      sub_232250B14(*(_QWORD *)(v34 + 56) + 32 * v37, (uint64_t)&v72);
    }
    else
    {
      v72 = 0u;
      v73 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v39 = *((_QWORD *)&v73 + 1) != 0;
  }
  else
  {
    v39 = 0;
    v72 = 0u;
    v73 = 0u;
  }
  sub_232250A80((uint64_t)&v72);
  v4[6] = (uint64_t)objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, v39);
  v4[5] = (uint64_t)objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, v23 & 1);
  if (a2)
  {
    v40 = objc_msgSend(a2, sel_expirationDate);
    if (v40)
    {
      v41 = v40;
      sub_2322B806C();

      v42 = sub_2322B8084();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v22, 0, 1, v42);
    }
    else
    {
      v42 = sub_2322B8084();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v22, 1, 1, v42);
    }
    sub_232270FEC(v22, (uint64_t)v11);
    sub_2322B8084();
    v44 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 48))(v11, 1, v42) != 1;
  }
  else
  {
    v43 = sub_2322B8084();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v11, 1, 1, v43);
    v44 = 0;
  }
  sub_2322659DC((uint64_t)v11, &qword_255FABC68, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  v4[8] = (uint64_t)objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, v44);
  if (a2)
  {
    v45 = a2;
    sub_23226EEE8(0);

  }
  else
  {
    swift_bridgeObjectRetain();
  }
  v46 = sub_2322B8DEC();
  swift_bridgeObjectRelease();
  v4[9] = v46;
  if (a2)
  {
    v47 = a2;
    sub_23226EEE8(1);

  }
  else
  {
    swift_bridgeObjectRetain();
  }
  v48 = sub_2322B8DEC();
  swift_bridgeObjectRelease();
  v4[10] = v48;
  if (a2)
  {
    v49 = a2;
    sub_23226EEE8(2);

  }
  else
  {
    swift_bridgeObjectRetain();
  }
  v50 = sub_2322B8DEC();
  swift_bridgeObjectRelease();
  v4[11] = v50;
  if (a2)
  {
    v51 = a2;
    sub_23226EEE8(3);

  }
  else
  {
    swift_bridgeObjectRetain();
  }
  v52 = sub_2322B8DEC();
  swift_bridgeObjectRelease();
  v4[12] = v52;
  if (a2)
  {
    v53 = a2;
    sub_23226EEE8(12);

  }
  else
  {
    swift_bridgeObjectRetain();
  }
  v54 = sub_2322B8DEC();
  swift_bridgeObjectRelease();
  v4[13] = v54;
  if (a2)
  {
    v55 = a2;
    sub_23226EEE8(11);

  }
  else
  {
    swift_bridgeObjectRetain();
  }
  v56 = sub_2322B8DEC();
  swift_bridgeObjectRelease();
  v4[14] = v56;
  if (a2)
  {
    v57 = a2;
    sub_23226EEE8(4);

  }
  else
  {
    swift_bridgeObjectRetain();
  }
  v58 = sub_2322B8DEC();
  swift_bridgeObjectRelease();
  v4[15] = v58;
  if (a2)
  {
    a2 = a2;
    sub_23226F2F0();

  }
  else
  {
    swift_bridgeObjectRetain();
  }
  v59 = sub_2322B8DEC();
  swift_bridgeObjectRelease();

  sub_2322659DC(v24, (unint64_t *)&qword_255FAD5B0, (void (*)(uint64_t))MEMORY[0x24BE43B60]);
  v4[7] = 0;
  v4[17] = 0;
  v4[18] = 0;
  v4[16] = v59;
  return v4;
}

_QWORD *sub_23226FFF4(uint64_t a1, id a2, int a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  unint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  _BOOL8 v41;
  id v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint8_t *v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;

  v4 = v3;
  v62 = a3;
  v60 = *v3;
  sub_23226593C(0, &qword_255FABC68, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v63 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v54 - v10;
  v12 = sub_2322B8918();
  v61 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23226593C(0, (unint64_t *)&qword_255FAD5B0, (void (*)(uint64_t))MEMORY[0x24BE43B60]);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v54 - v16;
  v18 = sub_2322B860C();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232270F98(a1, (uint64_t)v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_2322659DC((uint64_t)v17, (unint64_t *)&qword_255FAD5B0, (void (*)(uint64_t))MEMORY[0x24BE43B60]);
    v4[2] = 0;
    v4[3] = 0;
  }
  else
  {
    v58 = v11;
    v59 = a1;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v17, v18);
    sub_2322B8900();
    v22 = sub_2322B890C();
    v23 = sub_2322B9014();
    if (os_log_type_enabled(v22, v23))
    {
      v57 = v12;
      v24 = (uint8_t *)swift_slowAlloc();
      v56 = swift_slowAlloc();
      v65 = v56;
      v55 = v24;
      *(_DWORD *)v24 = 136315138;
      v54 = v24 + 4;
      v25 = sub_2322B9464();
      v64 = sub_232266EA0(v25, v26, &v65);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      v27 = v55;
      _os_log_impl(&dword_232241000, v22, v23, "[%s] Demographics data exists. Setting age and biological sex.", v55, 0xCu);
      v28 = v56;
      swift_arrayDestroy();
      MEMORY[0x234901170](v28, -1, -1);
      MEMORY[0x234901170](v27, -1, -1);

      (*(void (**)(char *, uint64_t))(v61 + 8))(v14, v57);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v61 + 8))(v14, v12);
    }
    v11 = v58;
    a1 = v59;
    v4[2] = sub_2322B85E8();
    v29 = sub_2322B85F4();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    v4[3] = v29;
  }
  v4[4] = sub_2322B8DEC();
  v4[6] = 0;
  v30 = (uint64_t)v63;
  if (a2)
  {
    v31 = objc_msgSend(a2, sel_brand);
    v32 = sub_2322B8E1C();
    v34 = v33;

    swift_bridgeObjectRelease();
    if ((v34 & 0x2000000000000000) == 0)
    {
      v35 = v32 & 0xFFFFFFFFFFFFLL;
      goto LABEL_12;
    }
  }
  else
  {
    v34 = 0xE000000000000000;
  }
  v35 = HIBYTE(v34) & 0xF;
LABEL_12:
  v4[7] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, v35 != 0);
  v36 = objc_allocWithZone(MEMORY[0x24BDD16E0]);
  v4[5] = objc_msgSend(v36, sel_initWithBool_, v62 & 1);
  if (a2)
  {
    v37 = objc_msgSend(a2, sel_expirationDate);
    if (v37)
    {
      v38 = v37;
      sub_2322B806C();

      v39 = sub_2322B8084();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v30, 0, 1, v39);
    }
    else
    {
      v39 = sub_2322B8084();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v30, 1, 1, v39);
    }
    sub_232270FEC(v30, (uint64_t)v11);
    sub_2322B8084();
    v41 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 48))(v11, 1, v39) != 1;
  }
  else
  {
    v40 = sub_2322B8084();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v11, 1, 1, v40);
    v41 = 0;
  }
  sub_2322659DC((uint64_t)v11, &qword_255FABC68, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  v4[8] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, v41);
  if (a2)
  {
    v42 = a2;
    sub_23226F3FC(0);

  }
  else
  {
    swift_bridgeObjectRetain();
  }
  v43 = sub_2322B8DEC();
  swift_bridgeObjectRelease();
  v4[9] = v43;
  if (a2)
  {
    v44 = a2;
    sub_23226F3FC(1);

  }
  else
  {
    swift_bridgeObjectRetain();
  }
  v45 = sub_2322B8DEC();
  swift_bridgeObjectRelease();
  v4[10] = v45;
  if (a2)
  {
    v46 = a2;
    sub_23226F3FC(2);

  }
  else
  {
    swift_bridgeObjectRetain();
  }
  v47 = sub_2322B8DEC();
  swift_bridgeObjectRelease();
  v4[11] = v47;
  if (a2)
  {
    v48 = a2;
    sub_23226F3FC(3);

  }
  else
  {
    swift_bridgeObjectRetain();
  }
  v49 = sub_2322B8DEC();
  swift_bridgeObjectRelease();
  v4[12] = v49;
  if (a2)
  {
    v50 = a2;
    sub_23226F3FC(13);

  }
  else
  {
    swift_bridgeObjectRetain();
  }
  v51 = sub_2322B8DEC();
  swift_bridgeObjectRelease();
  v4[17] = v51;
  if (a2)
  {
    a2 = a2;
    sub_23226F3FC(14);

  }
  else
  {
    swift_bridgeObjectRetain();
  }
  v52 = sub_2322B8DEC();
  swift_bridgeObjectRelease();

  sub_2322659DC(a1, (unint64_t *)&qword_255FAD5B0, (void (*)(uint64_t))MEMORY[0x24BE43B60]);
  v4[18] = v52;
  *(_OWORD *)(v4 + 13) = 0u;
  *(_OWORD *)(v4 + 15) = 0u;
  return v4;
}

id *sub_232270724()
{
  id *v0;

  return v0;
}

uint64_t sub_2322707C0()
{
  sub_232270724();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VisionPrescriptionSampleAnalyticsEvent()
{
  return objc_opt_self();
}

unint64_t sub_232270804()
{
  return 0xD00000000000002FLL;
}

uint64_t sub_232270824()
{
  uint64_t v0;

  v0 = sub_232270AFC((uint64_t)&unk_250111BB0);
  swift_arrayDestroy();
  return v0;
}

uint64_t sub_232270868(uint64_t a1, uint64_t a2)
{
  return sub_23225B170(&qword_255FAD590, a2, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionSampleAnalyticsEvent, (uint64_t)&unk_2322C21E0);
}

uint64_t sub_232270894(uint64_t a1, uint64_t a2)
{
  return sub_23225B170(&qword_255FAD598, a2, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionSampleAnalyticsEvent, (uint64_t)&unk_2322C21B8);
}

uint64_t sub_2322708C0(uint64_t a1, void *a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t result;
  _QWORD v19[2];
  unint64_t v20;
  unint64_t v21;

  sub_23226593C(0, (unint64_t *)&qword_255FAD5B0, (void (*)(uint64_t))MEMORY[0x24BE43B60]);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v19 - v10;
  v12 = objc_msgSend(a2, sel_prescriptionType);
  if (v12 == (id)2)
  {
    sub_232270F98(a1, (uint64_t)v9);
    objc_opt_self();
    v13 = (void *)swift_dynamicCastObjCClass();
    if (v13)
      v14 = a2;
    type metadata accessor for VisionPrescriptionSampleAnalyticsEvent();
    v15 = swift_allocObject();
    sub_23226FFF4((uint64_t)v9, v13, a3 & 1);
LABEL_9:

    sub_2322659DC(a1, (unint64_t *)&qword_255FAD5B0, (void (*)(uint64_t))MEMORY[0x24BE43B60]);
    return v15;
  }
  if (v12 == (id)1)
  {
    sub_232270F98(a1, (uint64_t)v11);
    objc_opt_self();
    v16 = (void *)swift_dynamicCastObjCClass();
    if (v16)
      v17 = a2;
    type metadata accessor for VisionPrescriptionSampleAnalyticsEvent();
    v15 = swift_allocObject();
    sub_23226F7A8((uint64_t)v11, v16, a3 & 1);
    goto LABEL_9;
  }
  v20 = 0;
  v21 = 0xE000000000000000;
  sub_2322B92CC();
  swift_bridgeObjectRelease();
  v20 = 0xD00000000000001ALL;
  v21 = 0x80000002322BC8F0;
  v19[1] = objc_msgSend(a2, sel_prescriptionType);
  type metadata accessor for HKVisionPrescriptionType(0);
  sub_2322B8E34();
  sub_2322B8EAC();
  swift_bridgeObjectRelease();
  result = sub_2322B9350();
  __break(1u);
  return result;
}

uint64_t sub_232270AFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_232270C98();
    v3 = sub_2322B92A8();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      sub_2322B9434();
      swift_bridgeObjectRetain();
      sub_2322B8E7C();
      result = sub_2322B944C();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = sub_2322B93F8(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = sub_2322B93F8();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

void sub_232270C98()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAD5A0)
  {
    v0 = sub_2322B92B4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAD5A0);
  }
}

uint64_t sub_232270CF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_232270F1C();
    v3 = sub_2322B92A8();
    v4 = 0;
    v5 = v3 + 56;
    v31 = v1;
    v32 = a1 + 32;
    while (1)
    {
      v6 = *(void **)(v32 + 8 * v4);
      sub_2322B8E1C();
      sub_2322B9434();
      v7 = v6;
      sub_2322B8E7C();
      v8 = sub_2322B944C();
      result = swift_bridgeObjectRelease();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = v8 & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = sub_2322B8E1C();
        v17 = v16;
        if (v15 == sub_2322B8E1C() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        v20 = sub_2322B93F8();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        if ((v20 & 1) != 0)
          goto LABEL_4;
        v21 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v21;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v22 = sub_2322B8E1C();
          v24 = v23;
          if (v22 == sub_2322B8E1C() && v24 == v25)
            goto LABEL_3;
          v27 = sub_2322B93F8();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
          if ((v27 & 1) != 0)
            goto LABEL_4;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11) = v7;
      v28 = *(_QWORD *)(v3 + 16);
      v29 = __OFADD__(v28, 1);
      v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

void sub_232270F1C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAD5A8)
  {
    type metadata accessor for URLResourceKey(255);
    sub_23225B170(&qword_255FABB90, 255, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_2322C0BD8);
    v0 = sub_2322B92B4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAD5A8);
  }
}

uint64_t sub_232270F98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23226593C(0, (unint64_t *)&qword_255FAD5B0, (void (*)(uint64_t))MEMORY[0x24BE43B60]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_232270FEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23226593C(0, &qword_255FABC68, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_232271040()
{
  off_255FAD5B8 = &unk_250111AF0;
}

void sub_232271054()
{
  qword_255FAD5C0 = (uint64_t)&unk_250111AA0;
}

void sub_232271068()
{
  qword_255FAD5C8 = (uint64_t)&unk_250111AC8;
}

void sub_23227107C()
{
  off_255FAD5D0 = &unk_250111A78;
}

BOOL sub_232271090(unsigned __int8 a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  _BOOL8 result;
  uint64_t i;
  uint64_t v9;
  int v10;

  if (*a2 != -1)
    goto LABEL_18;
  while (1)
  {
    v5 = *a3;
    v6 = *(_QWORD *)(*a3 + 16);
    if (!v6)
      break;
    if (*(unsigned __int8 *)(v5 + 32) == a1)
      return 1;
    if (v6 == 1)
      break;
    if (*(unsigned __int8 *)(v5 + 33) == a1)
      return 1;
    if (v6 == 2)
      break;
    for (i = 34; ; ++i)
    {
      v9 = i - 31;
      if (__OFADD__(i - 32, 1))
        break;
      v10 = *(unsigned __int8 *)(v5 + i);
      result = v10 == a1;
      if (v10 == a1 || v9 == v6)
        return result;
    }
    __break(1u);
LABEL_18:
    swift_once();
  }
  return 0;
}

id sub_232271140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  id v37;
  id v38;
  id v39;
  _QWORD v40[2];
  uint64_t v41;

  v1 = sub_2322B8918();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t *)(v0 + 24);
  swift_beginAccess();
  v6 = *(_QWORD *)(v0 + 24);
  if (*(_QWORD *)(v6 + 16)
    && (v7 = sub_2322B2760(0), (v8 & 1) != 0)
    && (v9 = *(void **)(*(_QWORD *)(v6 + 56) + 8 * v7)) != 0)
  {
    v10 = *v5;
    if (*(_QWORD *)(*v5 + 16) && (v11 = sub_2322B2760(1u), (v12 & 1) != 0))
      v13 = *(id *)(*(_QWORD *)(v10 + 56) + 8 * v11);
    else
      v13 = 0;
    v22 = *v5;
    if (*(_QWORD *)(*v5 + 16) && (v23 = sub_2322B2760(2u), (v24 & 1) != 0))
      v25 = *(id *)(*(_QWORD *)(v22 + 56) + 8 * v23);
    else
      v25 = 0;
    v26 = *v5;
    if (*(_QWORD *)(*v5 + 16) && (v27 = sub_2322B2760(3u), (v28 & 1) != 0))
      v29 = *(id *)(*(_QWORD *)(v26 + 56) + 8 * v27);
    else
      v29 = 0;
    v30 = *v5;
    if (*(_QWORD *)(*v5 + 16) && (v31 = sub_2322B2760(0xDu), (v32 & 1) != 0))
      v33 = *(id *)(*(_QWORD *)(v30 + 56) + 8 * v31);
    else
      v33 = 0;
    v34 = *v5;
    if (*(_QWORD *)(*v5 + 16) && (v35 = sub_2322B2760(0xEu), (v36 & 1) != 0))
      v37 = *(id *)(*(_QWORD *)(v34 + 56) + 8 * v35);
    else
      v37 = 0;
    v38 = objc_allocWithZone(MEMORY[0x24BDD3A78]);
    v39 = v9;
    v20 = objc_msgSend(v38, sel_initWithSphere_cylinder_axis_addPower_baseCurve_diameter_, v39, v13, v25, v29, v33, v37);

  }
  else
  {
    sub_2322B88F4();
    v14 = sub_2322B890C();
    v15 = sub_2322B8FFC();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v41 = v17;
      *(_DWORD *)v16 = 136315138;
      v18 = sub_2322B9464();
      v40[1] = sub_232266EA0(v18, v19, &v41);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232241000, v14, v15, "[%s] sphere is required for HKContactsLensSpecification", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234901170](v17, -1, -1);
      MEMORY[0x234901170](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return 0;
  }
  return v20;
}

uint64_t sub_232271464()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ContactsLensSpecificationContext()
{
  return objc_opt_self();
}

uint64_t sub_2322714A8()
{
  return sub_2322714E4();
}

uint64_t sub_2322714BC()
{
  return sub_2322714E4();
}

uint64_t sub_2322714D0()
{
  return sub_2322714E4();
}

uint64_t sub_2322714E4()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2322B8BF4();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_23227154C(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(uint64_t, char *, uint64_t);
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t inited;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  unint64_t v37;
  id v38;
  void *v39;
  id v40;
  uint64_t v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v47 = a2;
  v49 = a1;
  sub_232272E58(0, &qword_255FAD170, &qword_255FAD160, (unint64_t *)&qword_255FAD168);
  v48 = v3;
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v46 - v5;
  sub_232272E58(0, qword_255FAD6F8, (unint64_t *)&unk_255FAF9D0, (unint64_t *)&qword_255FABCD0);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v46 - v10;
  v12 = v2 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext__farPupillaryDistance;
  v50 = 0;
  sub_23224C2EC(0, (unint64_t *)&unk_255FAF9D0, (unint64_t *)&qword_255FABCD0);
  sub_2322B8BDC();
  v13 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 32);
  v13(v12, v11, v8);
  v14 = v2 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext__nearPupillaryDistance;
  v50 = 0;
  sub_2322B8BDC();
  v13(v14, v11, v8);
  v15 = v47;
  v16 = v2 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext__prism;
  v50 = 0;
  sub_23224C2EC(0, &qword_255FAD160, (unint64_t *)&qword_255FAD168);
  sub_2322B8BDC();
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v16, v6, v48);
  v17 = v2 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_horizontalPrismBase;
  *(_QWORD *)v17 = 0;
  v18 = 1;
  *(_BYTE *)(v17 + 8) = 1;
  v19 = v2 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_verticalPrismBase;
  *(_QWORD *)v19 = 0;
  *(_BYTE *)(v19 + 8) = 1;
  *(_QWORD *)(v2 + 16) = v49;
  sub_232272EB0();
  inited = swift_initStackObject();
  v21 = inited;
  *(_OWORD *)(inited + 16) = xmmword_2322C2270;
  *(_BYTE *)(inited + 32) = 2;
  if (v15)
  {
    *(_QWORD *)(inited + 40) = objc_msgSend(v15, sel_axis);
    *(_BYTE *)(v21 + 48) = 0;
    *(_QWORD *)(v21 + 56) = objc_msgSend(v15, sel_sphere);
    *(_BYTE *)(v21 + 64) = 1;
    *(_QWORD *)(v21 + 72) = objc_msgSend(v15, sel_cylinder);
    *(_BYTE *)(v21 + 80) = 3;
    *(_QWORD *)(v21 + 88) = objc_msgSend(v15, sel_addPower);
    *(_BYTE *)(v21 + 96) = 4;
    *(_QWORD *)(v21 + 104) = objc_msgSend(v15, sel_vertexDistance);
    *(_BYTE *)(v21 + 112) = 12;
    *(_QWORD *)(v21 + 120) = objc_msgSend(v15, sel_farPupillaryDistance);
    *(_BYTE *)(v21 + 128) = 11;
    *(_QWORD *)(v21 + 136) = objc_msgSend(v15, sel_nearPupillaryDistance);
    *(_BYTE *)(v21 + 144) = 5;
    v22 = objc_msgSend(v15, sel_prism);
    if (v22)
    {
      v23 = v22;
      v24 = objc_msgSend(v22, sel_amount);

    }
    else
    {
      v24 = 0;
    }
    *(_QWORD *)(v21 + 152) = v24;
    *(_BYTE *)(v21 + 160) = 6;
    v28 = objc_msgSend(v15, sel_prism);
    if (v28)
    {
      v29 = v28;
      v30 = objc_msgSend(v28, sel_angle);

    }
    else
    {
      v30 = 0;
    }
    *(_QWORD *)(v21 + 168) = v30;
    *(_BYTE *)(v21 + 176) = 7;
    v31 = objc_msgSend(v15, sel_prism);
    if (v31)
    {
      v32 = v31;
      v33 = objc_msgSend(v31, sel_horizontalAmount);

    }
    else
    {
      v33 = 0;
    }
    *(_QWORD *)(v21 + 184) = v33;
    *(_BYTE *)(v21 + 192) = 9;
    v34 = objc_msgSend(v15, sel_prism);
    if (v34)
    {
      v35 = v34;
      v36 = objc_msgSend(v34, sel_verticalAmount);

    }
    else
    {
      v36 = 0;
    }
    *(_QWORD *)(v21 + 200) = v36;
    v37 = sub_23228E21C(v21);
    swift_setDeallocating();
    sub_232272F04();
    swift_arrayDestroy();
    *(_QWORD *)(v2 + 24) = v37;
    v38 = objc_msgSend(v15, sel_prism);
    v39 = v38;
    if (v38)
    {
      v40 = objc_msgSend(v38, sel_horizontalBase);

    }
    else
    {
      v40 = 0;
    }
    v41 = v2 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_horizontalPrismBase;
    *(_QWORD *)v41 = v40;
    *(_BYTE *)(v41 + 8) = v39 == 0;
    v42 = objc_msgSend(v15, sel_prism);
    if (v42)
    {
      v43 = v42;
      v26 = objc_msgSend(v42, sel_verticalBase);

      v18 = 0;
    }
    else
    {

      v26 = 0;
      v18 = 1;
    }
  }
  else
  {
    *(_QWORD *)(inited + 40) = 0;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = 0;
    *(_BYTE *)(inited + 64) = 1;
    *(_QWORD *)(inited + 72) = 0;
    *(_BYTE *)(inited + 80) = 3;
    *(_QWORD *)(inited + 88) = 0;
    *(_BYTE *)(inited + 96) = 4;
    *(_QWORD *)(inited + 104) = 0;
    *(_BYTE *)(inited + 112) = 12;
    *(_QWORD *)(inited + 120) = 0;
    *(_BYTE *)(inited + 128) = 11;
    *(_QWORD *)(inited + 136) = 0;
    *(_BYTE *)(inited + 144) = 5;
    *(_QWORD *)(inited + 152) = 0;
    *(_BYTE *)(inited + 160) = 6;
    *(_QWORD *)(inited + 168) = 0;
    *(_BYTE *)(inited + 176) = 7;
    *(_QWORD *)(inited + 184) = 0;
    *(_BYTE *)(inited + 192) = 9;
    *(_QWORD *)(inited + 200) = 0;
    v25 = sub_23228E21C(inited);
    swift_setDeallocating();
    sub_232272F04();
    swift_arrayDestroy();
    v26 = 0;
    *(_QWORD *)(v2 + 24) = v25;
    v27 = v2 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_horizontalPrismBase;
    *(_QWORD *)v27 = 0;
    *(_BYTE *)(v27 + 8) = 1;
  }
  v44 = v2 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_verticalPrismBase;
  *(_QWORD *)v44 = v26;
  *(_BYTE *)(v44 + 8) = v18;
  return v2;
}

id sub_232271B54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  id v43;
  _QWORD v44[2];
  uint64_t v45;

  v1 = sub_2322B8918();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t *)(v0 + 24);
  swift_beginAccess();
  v6 = *(_QWORD *)(v0 + 24);
  if (*(_QWORD *)(v6 + 16)
    && (v7 = sub_2322B2760(0), (v8 & 1) != 0)
    && (v9 = *(void **)(*(_QWORD *)(v6 + 56) + 8 * v7)) != 0)
  {
    v10 = *v5;
    if (*(_QWORD *)(*v5 + 16) && (v11 = sub_2322B2760(1u), (v12 & 1) != 0))
      v13 = *(id *)(*(_QWORD *)(v10 + 56) + 8 * v11);
    else
      v13 = 0;
    v22 = *v5;
    if (*(_QWORD *)(*v5 + 16) && (v23 = sub_2322B2760(2u), (v24 & 1) != 0))
      v25 = *(id *)(*(_QWORD *)(v22 + 56) + 8 * v23);
    else
      v25 = 0;
    v26 = *v5;
    if (*(_QWORD *)(*v5 + 16) && (v27 = sub_2322B2760(3u), (v28 & 1) != 0))
      v29 = *(id *)(*(_QWORD *)(v26 + 56) + 8 * v27);
    else
      v29 = 0;
    v30 = *v5;
    if (*(_QWORD *)(*v5 + 16) && (v31 = sub_2322B2760(4u), (v32 & 1) != 0))
      v33 = *(id *)(*(_QWORD *)(v30 + 56) + 8 * v31);
    else
      v33 = 0;
    v34 = v9;
    v35 = sub_2322729F8();
    if (!v35)
      v35 = sub_232272AB4();
    v36 = *v5;
    if (*(_QWORD *)(*v5 + 16) && (v37 = sub_2322B2760(0xCu), (v38 & 1) != 0))
      v39 = *(id *)(*(_QWORD *)(v36 + 56) + 8 * v37);
    else
      v39 = 0;
    v40 = *v5;
    if (*(_QWORD *)(*v5 + 16) && (v41 = sub_2322B2760(0xBu), (v42 & 1) != 0))
      v43 = *(id *)(*(_QWORD *)(v40 + 56) + 8 * v41);
    else
      v43 = 0;
    v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3C10]), sel_initWithSphere_cylinder_axis_addPower_vertexDistance_prism_farPupillaryDistance_nearPupillaryDistance_, v34, v13, v25, v29, v33, v35, v39, v43);

  }
  else
  {
    sub_2322B88E8();
    v14 = sub_2322B890C();
    v15 = sub_2322B8FFC();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v45 = v17;
      *(_DWORD *)v16 = 136315138;
      v18 = sub_2322B9464();
      v44[1] = sub_232266EA0(v18, v19, &v45);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232241000, v14, v15, "[%s] sphere is required for HKGlassesLensSpecification", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234901170](v17, -1, -1);
      MEMORY[0x234901170](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return 0;
  }
  return v20;
}

uint64_t sub_232271ED0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t result;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  char isUniquelyReferenced_nonNull_native;
  id v15;
  char v16;
  id v17;
  char v18;
  id v19;
  char v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = v1;
  if (qword_255FAB918 != -1)
    swift_once();
  v4 = qword_255FAD5C0;
  v5 = qword_255FAB920;
  swift_bridgeObjectRetain();
  if (v5 != -1)
    swift_once();
  v6 = swift_bridgeObjectRetain();
  sub_2322A90A0(v6);
  v7 = sub_2322A903C(a1, v4);
  result = swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
  {
    if (sub_232271090(a1, &qword_255FAB918, &qword_255FAD5C0))
    {
      sub_2322727AC();
    }
    else if (sub_232271090(a1, &qword_255FAB920, &qword_255FAD5C8))
    {
      sub_2322728E8();
      sub_232272298();
    }
    v9 = sub_2322729F8();
    if (v9)
    {
      v10 = v9;
    }
    else
    {
      v11 = sub_232272AB4();
      if (!v11)
      {
LABEL_15:
        swift_getKeyPath();
        swift_getKeyPath();
        swift_retain();
        return sub_2322B8C00();
      }
      v10 = v11;
      v9 = 0;
    }
    v12 = v9;
    v13 = objc_msgSend(v10, sel_angle);
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = *(_QWORD *)(v2 + 24);
    *(_QWORD *)(v2 + 24) = 0x8000000000000000;
    sub_2322B2FE4((uint64_t)v13, 6u, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v2 + 24) = v25;
    swift_bridgeObjectRelease();
    swift_endAccess();
    v15 = objc_msgSend(v10, sel_amount);
    swift_beginAccess();
    v16 = swift_isUniquelyReferenced_nonNull_native();
    v26 = *(_QWORD *)(v2 + 24);
    *(_QWORD *)(v2 + 24) = 0x8000000000000000;
    sub_2322B2FE4((uint64_t)v15, 5u, v16);
    *(_QWORD *)(v2 + 24) = v26;
    swift_bridgeObjectRelease();
    swift_endAccess();
    v17 = objc_msgSend(v10, sel_horizontalAmount);
    swift_beginAccess();
    v18 = swift_isUniquelyReferenced_nonNull_native();
    v27 = *(_QWORD *)(v2 + 24);
    *(_QWORD *)(v2 + 24) = 0x8000000000000000;
    sub_2322B2FE4((uint64_t)v17, 7u, v18);
    *(_QWORD *)(v2 + 24) = v27;
    swift_bridgeObjectRelease();
    swift_endAccess();
    v19 = objc_msgSend(v10, sel_verticalAmount);
    swift_beginAccess();
    v20 = swift_isUniquelyReferenced_nonNull_native();
    v28 = *(_QWORD *)(v2 + 24);
    *(_QWORD *)(v2 + 24) = 0x8000000000000000;
    sub_2322B2FE4((uint64_t)v19, 9u, v20);
    *(_QWORD *)(v2 + 24) = v28;
    swift_bridgeObjectRelease();
    swift_endAccess();
    v21 = objc_msgSend(v10, sel_horizontalBase);
    v22 = v2 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_horizontalPrismBase;
    *(_QWORD *)v22 = v21;
    *(_BYTE *)(v22 + 8) = 0;
    v23 = objc_msgSend(v10, sel_verticalBase);

    v24 = v2 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_verticalPrismBase;
    *(_QWORD *)v24 = v23;
    *(_BYTE *)(v24 + 8) = 0;
    goto LABEL_15;
  }
  return result;
}

void sub_232272298()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  char isUniquelyReferenced_nonNull_native;
  id v22;
  char v23;
  uint64_t v24;
  uint64_t v25;

  v1 = v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_verticalPrismBase;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_verticalPrismBase);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_verticalPrismBase + 8))
    v2 = 0;
  *(_QWORD *)v1 = v2;
  *(_BYTE *)(v1 + 8) = 0;
  v3 = v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_horizontalPrismBase;
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_horizontalPrismBase);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_horizontalPrismBase + 8))
    v4 = 0;
  *(_QWORD *)v3 = v4;
  *(_BYTE *)(v3 + 8) = 0;
  v5 = (uint64_t *)(v0 + 24);
  swift_beginAccess();
  v6 = *(_QWORD *)(v0 + 24);
  if (*(_QWORD *)(v6 + 16) && (v7 = sub_2322B2760(9u), (v8 & 1) != 0))
  {
    v9 = *(id *)(*(_QWORD *)(v6 + 56) + 8 * v7);
    v10 = v9;
  }
  else
  {
    v11 = (void *)objc_opt_self();
    v12 = objc_msgSend(v11, sel_prismDiopterUnit);
    if (v12 || (v12 = objc_msgSend(v11, sel_prismDiopterUnit)) != 0)
    {
      v9 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v12, 0.0);

    }
    else
    {
      v9 = 0;
    }
  }
  v13 = *v5;
  if (*(_QWORD *)(*v5 + 16) && (v14 = sub_2322B2760(7u), (v15 & 1) != 0))
  {
    v16 = *(id *)(*(_QWORD *)(v13 + 56) + 8 * v14);
    v17 = v16;
  }
  else
  {
    v18 = (void *)objc_opt_self();
    v19 = objc_msgSend(v18, sel_prismDiopterUnit);
    if (v19 || (v19 = objc_msgSend(v18, sel_prismDiopterUnit)) != 0)
    {
      v16 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v19, 0.0);

    }
    else
    {
      v16 = 0;
    }
  }
  swift_beginAccess();
  v20 = v9;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v24 = *v5;
  *v5 = 0x8000000000000000;
  sub_2322B2FE4((uint64_t)v9, 9u, isUniquelyReferenced_nonNull_native);
  *v5 = v24;
  swift_bridgeObjectRelease();
  v22 = v16;
  v23 = swift_isUniquelyReferenced_nonNull_native();
  v25 = *v5;
  *v5 = 0x8000000000000000;
  sub_2322B2FE4((uint64_t)v16, 7u, v23);
  *v5 = v25;
  swift_bridgeObjectRelease();
  swift_endAccess();

}

uint64_t sub_232272518(uint64_t result, void *a2)
{
  unsigned __int8 v3;
  uint64_t v4;
  id v5;
  uint64_t i;
  uint64_t v7;

  v3 = result;
  if (qword_255FAB910 != -1)
    result = swift_once();
  v4 = *((_QWORD *)off_255FAD5B8 + 2);
  if (v4)
  {
    if (*((unsigned __int8 *)off_255FAD5B8 + 32) == v3)
      goto LABEL_9;
    if (v4 == 1)
      return result;
    if (*((unsigned __int8 *)off_255FAD5B8 + 33) == v3)
      goto LABEL_9;
    if (v4 == 2)
      return result;
    if (*((unsigned __int8 *)off_255FAD5B8 + 34) == v3)
    {
LABEL_9:
      if (v3 == 11 || v3 == 12)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        v5 = a2;
        swift_retain();
        return sub_2322B8C00();
      }
    }
    else if (v4 != 3)
    {
      for (i = 35; ; ++i)
      {
        v7 = i - 31;
        if (__OFADD__(i - 32, 1))
          break;
        if (*((unsigned __int8 *)off_255FAD5B8 + i) == v3)
          goto LABEL_9;
        if (v7 == v4)
          return result;
      }
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_232272660(uint64_t result, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t i;
  uint64_t v14;

  v6 = result;
  if (qword_255FAB928 != -1)
    result = swift_once();
  v7 = *((_QWORD *)off_255FAD5D0 + 2);
  if (v7)
  {
    if (*((unsigned __int8 *)off_255FAD5D0 + 32) == a3)
      goto LABEL_9;
    if (v7 != 1)
    {
      if (*((unsigned __int8 *)off_255FAD5D0 + 33) == a3)
        goto LABEL_9;
      if (v7 != 2)
      {
        if (*((unsigned __int8 *)off_255FAD5D0 + 34) == a3)
        {
LABEL_9:
          if (a3 == 8)
          {
            v8 = &OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_verticalPrismBase;
            v9 = &OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_horizontalPrismBase;
          }
          else
          {
            if (a3 != 10)
              return sub_232271ED0(a3);
            v8 = &OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_horizontalPrismBase;
            v9 = &OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_verticalPrismBase;
          }
          v10 = v3 + *v9;
          *(_QWORD *)v10 = v6;
          *(_BYTE *)(v10 + 8) = a2 & 1;
          v11 = (uint64_t *)(v3 + *v8);
          v12 = *v11;
          if (*((_BYTE *)v11 + 8))
            v12 = 0;
          *v11 = v12;
          *((_BYTE *)v11 + 8) = 0;
          return sub_232271ED0(a3);
        }
        if (v7 != 3)
        {
          for (i = 35; ; ++i)
          {
            v14 = i - 31;
            if (__OFADD__(i - 32, 1))
              break;
            if (*((unsigned __int8 *)off_255FAD5D0 + i) == a3)
              goto LABEL_9;
            if (v14 == v7)
              return result;
          }
          __break(1u);
        }
      }
    }
  }
  return result;
}

uint64_t sub_2322727AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  unint64_t v4;
  char v5;
  unint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  void *v15;
  uint64_t v17;
  uint64_t v18;

  v1 = v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_horizontalPrismBase;
  *(_QWORD *)v1 = 0;
  *(_BYTE *)(v1 + 8) = 1;
  v2 = v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_verticalPrismBase;
  *(_QWORD *)v2 = 0;
  *(_BYTE *)(v2 + 8) = 1;
  v3 = (uint64_t *)(v0 + 24);
  swift_beginAccess();
  v4 = sub_2322B2760(7u);
  if ((v5 & 1) != 0)
  {
    v6 = v4;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v3;
    v17 = *v3;
    *v3 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_2322B376C();
      v8 = v17;
    }
    v9 = *(void **)(*(_QWORD *)(v8 + 56) + 8 * v6);
    sub_232297C00(v6, v8);
    *v3 = v8;
    swift_bridgeObjectRelease();

  }
  v10 = sub_2322B2760(9u);
  if ((v11 & 1) != 0)
  {
    v12 = v10;
    v13 = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v3;
    v18 = *v3;
    *v3 = 0x8000000000000000;
    if ((v13 & 1) == 0)
    {
      sub_2322B376C();
      v14 = v18;
    }
    v15 = *(void **)(*(_QWORD *)(v14 + 56) + 8 * v12);
    sub_232297C00(v12, v14);
    *v3 = v14;
    swift_bridgeObjectRelease();

  }
  return swift_endAccess();
}

uint64_t sub_2322728E8()
{
  uint64_t v0;
  uint64_t *v1;
  unint64_t v2;
  char v3;
  unint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  void *v13;
  uint64_t v15;
  uint64_t v16;

  v1 = (uint64_t *)(v0 + 24);
  swift_beginAccess();
  v2 = sub_2322B2760(5u);
  if ((v3 & 1) != 0)
  {
    v4 = v2;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v6 = *v1;
    v15 = *v1;
    *v1 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_2322B376C();
      v6 = v15;
    }
    v7 = *(void **)(*(_QWORD *)(v6 + 56) + 8 * v4);
    sub_232297C00(v4, v6);
    *v1 = v6;
    swift_bridgeObjectRelease();

  }
  v8 = sub_2322B2760(6u);
  if ((v9 & 1) != 0)
  {
    v10 = v8;
    v11 = swift_isUniquelyReferenced_nonNull_native();
    v12 = *v1;
    v16 = *v1;
    *v1 = 0x8000000000000000;
    if ((v11 & 1) == 0)
    {
      sub_2322B376C();
      v12 = v16;
    }
    v13 = *(void **)(*(_QWORD *)(v12 + 56) + 8 * v10);
    sub_232297C00(v10, v12);
    *v1 = v12;
    swift_bridgeObjectRelease();

  }
  return swift_endAccess();
}

id sub_2322729F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;

  v1 = v0;
  v2 = (uint64_t *)(v0 + 24);
  swift_beginAccess();
  v3 = *(_QWORD *)(v0 + 24);
  if (*(_QWORD *)(v3 + 16)
    && (v4 = sub_2322B2760(5u), (v5 & 1) != 0)
    && (v6 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v4)) != 0
    && (v7 = *v2, *(_QWORD *)(*v2 + 16))
    && (v8 = sub_2322B2760(6u), (v9 & 1) != 0)
    && (v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v8)) != 0)
  {
    return objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD4108]), sel_initWithAmount_angle_eye_, v6, v10, *(_QWORD *)(v1 + 16));
  }
  else
  {
    return 0;
  }
}

id sub_232272AB4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  char v11;
  id v12;
  uint64_t v13;
  void *v14;
  unint64_t v15;
  char v16;
  id v17;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_verticalPrismBase + 8) & 1) != 0)
    return 0;
  v1 = v0;
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_horizontalPrismBase + 8) & 1) != 0)
    return 0;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_verticalPrismBase);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext_horizontalPrismBase);
  v5 = objc_msgSend((id)objc_opt_self(), sel_prismDiopterUnit);
  v6 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v5, 0.0);

  v7 = (uint64_t *)(v1 + 24);
  swift_beginAccess();
  v8 = *(_QWORD *)(v1 + 24);
  v9 = v6;
  if (*(_QWORD *)(v8 + 16))
  {
    v10 = sub_2322B2760(9u);
    v9 = v6;
    if ((v11 & 1) != 0)
    {
      v9 = *(void **)(*(_QWORD *)(v8 + 56) + 8 * v10);
      if (!v9)
        v9 = v6;
    }
  }
  v12 = v9;
  v13 = *v7;
  v14 = v6;
  if (*(_QWORD *)(*v7 + 16))
  {
    v15 = sub_2322B2760(7u);
    v14 = v6;
    if ((v16 & 1) != 0)
    {
      v14 = *(void **)(*(_QWORD *)(v13 + 56) + 8 * v15);
      if (!v14)
        v14 = v6;
    }
  }
  v17 = v14;
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD4108]), sel_initWithVerticalAmount_verticalBase_horizontalAmount_horizontalBase_eye_, v12, v3, v17, v4, *(_QWORD *)(v1 + 16));

  return v2;
}

uint64_t sub_232272C48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext__farPupillaryDistance;
  sub_232272E58(0, qword_255FAD6F8, (unint64_t *)&unk_255FAF9D0, (unint64_t *)&qword_255FABCD0);
  v3 = v2;
  v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v4(v1, v2);
  v4(v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext__nearPupillaryDistance, v3);
  v5 = v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin31GlassesLensSpecificationContext__prism;
  sub_232272E58(0, &qword_255FAD170, &qword_255FAD160, (unint64_t *)&qword_255FAD168);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_deallocClassInstance();
}

uint64_t sub_232272D28()
{
  return type metadata accessor for GlassesLensSpecificationContext();
}

uint64_t type metadata accessor for GlassesLensSpecificationContext()
{
  uint64_t result;

  result = qword_255FAD6E8;
  if (!qword_255FAD6E8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_232272D6C()
{
  unint64_t v0;
  unint64_t v1;

  sub_232272E58(319, qword_255FAD6F8, (unint64_t *)&unk_255FAF9D0, (unint64_t *)&qword_255FABCD0);
  if (v0 <= 0x3F)
  {
    sub_232272E58(319, &qword_255FAD170, &qword_255FAD160, (unint64_t *)&qword_255FAD168);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

void sub_232272E58(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_23224C2EC(255, a3, a4);
    v5 = sub_2322B8C0C();
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_232272EB0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAD998)
  {
    sub_232272F04();
    v0 = sub_2322B93D4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAD998);
  }
}

void sub_232272F04()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255FAD9A0)
  {
    sub_23224C2EC(255, (unint64_t *)&unk_255FAF9D0, (unint64_t *)&qword_255FABCD0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255FAD9A0);
  }
}

uint64_t sub_232272F80@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2322B8BF4();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_232272FFC(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  v2 = v1;
  swift_retain();
  return sub_2322B8C00();
}

uint64_t sub_232273070(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t inited;
  id v5;
  unint64_t v6;

  *(_QWORD *)(v2 + 16) = a1;
  sub_232272EB0();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2322C2280;
  *(_BYTE *)(inited + 32) = 2;
  if (a2)
  {
    *(_QWORD *)(inited + 40) = objc_msgSend(a2, sel_axis);
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = objc_msgSend(a2, sel_sphere);
    *(_BYTE *)(inited + 64) = 1;
    *(_QWORD *)(inited + 72) = objc_msgSend(a2, sel_cylinder);
    *(_BYTE *)(inited + 80) = 3;
    *(_QWORD *)(inited + 88) = objc_msgSend(a2, sel_addPower);
    *(_BYTE *)(inited + 96) = 14;
    *(_QWORD *)(inited + 104) = objc_msgSend(a2, sel_diameter);
    *(_BYTE *)(inited + 112) = 13;
    v5 = objc_msgSend(a2, sel_baseCurve);
  }
  else
  {
    v5 = 0;
    *(_BYTE *)(inited + 64) = 1;
    *(_BYTE *)(inited + 80) = 3;
    *(_BYTE *)(inited + 96) = 14;
    *(_BYTE *)(inited + 112) = 13;
    *(_QWORD *)(inited + 40) = 0;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = 0;
    *(_QWORD *)(inited + 72) = 0;
    *(_QWORD *)(inited + 88) = 0;
    *(_QWORD *)(inited + 104) = 0;
  }
  *(_QWORD *)(inited + 120) = v5;
  v6 = sub_23228E21C(inited);
  swift_setDeallocating();
  sub_232272F04();
  swift_arrayDestroy();
  *(_QWORD *)(v2 + 24) = v6;
  return v2;
}

uint64_t sub_232273228()
{
  void *v0;
  uint64_t result;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  void *v8;
  __int128 v9;
  __int128 v10;

  result = (uint64_t)objc_msgSend(v0, sel_metadata);
  if (result)
  {
    v2 = (void *)result;
    v3 = sub_2322B8DC8();

    v4 = sub_2322B8E1C();
    if (*(_QWORD *)(v3 + 16) && (v6 = sub_2322B26FC(v4, v5), (v7 & 1) != 0))
    {
      sub_232250B14(*(_QWORD *)(v3 + 56) + 32 * v6, (uint64_t)&v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v10 + 1))
      {
        sub_232273340();
        result = swift_dynamicCast();
        if ((_DWORD)result)
        {

          return 1;
        }
        return result;
      }
    }
    else
    {
      v9 = 0u;
      v10 = 0u;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_232250A80((uint64_t)&v9);
    return 0;
  }
  return result;
}

unint64_t sub_232273340()
{
  unint64_t result;

  result = qword_255FABCC8;
  if (!qword_255FABCC8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255FABCC8);
  }
  return result;
}

uint64_t sub_23227337C(uint64_t a1)
{
  if (a1 == 2)
  {
    if (qword_255FAB900 == -1)
      return sub_2322B7F58();
LABEL_8:
    swift_once();
    return sub_2322B7F58();
  }
  if (a1 == 1)
  {
    if (qword_255FAB900 == -1)
      return sub_2322B7F58();
    goto LABEL_8;
  }
  return 0;
}

uint64_t sub_232273488(uint64_t a1)
{
  if (a1 == 2)
  {
    if (qword_255FAB900 == -1)
      return sub_2322B7F58();
LABEL_8:
    swift_once();
    return sub_2322B7F58();
  }
  if (a1 == 1)
  {
    if (qword_255FAB900 == -1)
      return sub_2322B7F58();
    goto LABEL_8;
  }
  return 0;
}

uint64_t VisionPrescriptionDetailsViewController.__allocating_init(healthStore:visionPrescription:canEdit:)(void *a1, void *a2, int a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return VisionPrescriptionDetailsViewController.init(healthStore:visionPrescription:canEdit:)(a1, a2, a3);
}

uint64_t VisionPrescriptionDetailsViewController.init(healthStore:visionPrescription:canEdit:)(void *a1, void *a2, int a3)
{
  void *v3;
  void *v4;
  char v5;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _BYTE *v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;

  v4 = v3;
  v5 = a3;
  v42 = a3;
  ObjectType = swift_getObjectType();
  sub_23227816C(0, &qword_255FAD9B0, (void (*)(uint64_t))sub_232273AA8, (void (*)(void))sub_232273B1C);
  v10 = *(_QWORD *)(v9 - 8);
  v40 = v9;
  v41 = v10;
  MEMORY[0x24BDAC7A8](v9);
  v39 = (char *)&v38 - v11;
  sub_232273B38();
  v13 = v12;
  v38 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = (uint64_t)a2;
  sub_232273AA8();
  swift_allocObject();
  v16 = v4;
  v17 = a2;
  v18 = sub_2322B8B70();
  *(_QWORD *)&v16[qword_255FAD9F0] = v18;
  *(_QWORD *)&v16[qword_255FAD9F8] = a1;
  v16[qword_255FADA00] = v5;
  swift_retain();
  v19 = a1;
  v43 = v17;
  v44 = ObjectType;
  v45 = sub_232273C60(v19, v17);
  sub_232273BDC();
  sub_23224C618(0, (unint64_t *)&qword_255FAD9C0);
  sub_232245044(&qword_255FAD9E8, (uint64_t (*)(uint64_t))sub_232273BDC, MEMORY[0x24BDB9AF8]);
  sub_2322B8C54();
  swift_release();
  sub_232245044(&qword_255FADA08, (uint64_t (*)(uint64_t))sub_232273B38, MEMORY[0x24BDB94C8]);
  swift_retain();
  v20 = sub_2322B8CFC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v15, v13);
  *(_QWORD *)&v16[qword_255FADA10] = v20;
  v45 = v18;
  sub_232256E54(0, (unint64_t *)&qword_255FAD218, (unint64_t *)&qword_255FAD9C0, 0x24BDD4100, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  sub_232273B1C();
  v21 = v39;
  sub_2322B8C6C();
  sub_23227468C(&qword_255FADA18, &qword_255FAD9B0, (void (*)(uint64_t))sub_232273AA8, (void (*)(void))sub_232273B1C);
  v22 = v40;
  v23 = (void *)sub_2322B8C48();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v21, v22);
  v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3930]), sel_initWithHealthStore_, v19);
  type metadata accessor for VisionPrescriptionAnalyticsContext();
  swift_allocObject();
  v25 = v19;
  swift_retain();
  v26 = sub_2322B4D08(v25);
  type metadata accessor for VisionPrescriptionDataSource();
  swift_allocObject();
  *(_QWORD *)&v16[qword_255FADA20] = sub_2322A0ED0(v24, v23, v26);
  swift_retain();
  v27 = sub_2322B8378();
  swift_release();

  sub_2322B863C();
  sub_23226D960(0, (unint64_t *)&qword_255FAC3C8, (unint64_t *)&qword_255FADA30);
  if ((v42 & 1) != 0)
  {
    v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_2322C2450;
    v29 = sub_232277820();
    *(_QWORD *)(v28 + 32) = v27;
    *(_QWORD *)(v28 + 40) = v29;
    swift_retain();
    v30 = v43;
    *(_QWORD *)(v28 + 48) = sub_232274794(v25, v43);
    *(_QWORD *)(v28 + 56) = v31;
    *(_QWORD *)(v28 + 64) = sub_232274AD4(v30);
    *(_QWORD *)(v28 + 72) = v32;
  }
  else
  {
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_2322C0E50;
    v34 = sub_232277820();
    *(_QWORD *)(v33 + 32) = v27;
    *(_QWORD *)(v33 + 40) = v34;
    swift_retain();
    v30 = v43;
    *(_QWORD *)(v33 + 48) = sub_232274AD4(v43);
    *(_QWORD *)(v33 + 56) = v35;
  }
  sub_2322B8660();
  v36 = sub_2322B884C();
  swift_release();
  swift_release();
  swift_release();

  return v36;
}

void sub_232273AA8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAD9B8)
  {
    sub_23224C618(255, (unint64_t *)&qword_255FAD9C0);
    v0 = sub_2322B8B64();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAD9B8);
  }
}

uint64_t sub_232273B1C()
{
  return sub_232245044(&qword_255FAD9D0, (uint64_t (*)(uint64_t))sub_232273AA8, MEMORY[0x24BDB9D10]);
}

void sub_232273B38()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAD9D8)
  {
    sub_232273BDC();
    sub_23224C618(255, (unint64_t *)&qword_255FAD9C0);
    sub_232245044(&qword_255FAD9E8, (uint64_t (*)(uint64_t))sub_232273BDC, MEMORY[0x24BDB9AF8]);
    v0 = sub_2322B8A74();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAD9D8);
  }
}

void sub_232273BDC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAD9E0)
  {
    sub_232256E54(255, (unint64_t *)&qword_255FAD218, (unint64_t *)&qword_255FAD9C0, 0x24BDD4100, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v0 = sub_2322B8B28();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAD9E0);
  }
}

uint64_t sub_232273C60(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  id v36;
  char *v37;
  char *v38;
  _QWORD *v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t);
  id v44;
  id v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v65 = a2;
  v89 = a1;
  sub_232277C58();
  v69 = v2;
  v67 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v66 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232277F48();
  v72 = v4;
  v71 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v70 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232277FDC();
  v75 = *(_QWORD *)(v6 - 8);
  v76 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v74 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322780A4();
  v79 = *(_QWORD *)(v8 - 8);
  v80 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v78 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23227816C(0, &qword_255FADC40, v10, (void (*)(void))sub_232278208);
  v87 = v11;
  v85 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v83 = (char *)&v63 - v12;
  sub_232278224();
  v88 = v13;
  v86 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v84 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232277CD0();
  v94 = v15;
  v82 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v81 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_2322B90EC();
  v63 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232277E98(0, (unint64_t *)&unk_255FADBB0, v20, (void (*)(void))sub_23226E920);
  v22 = v21;
  v64 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v63 - v23;
  sub_232277DBC();
  v93 = v25;
  v73 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v92 = (char *)&v63 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_2322B8FCC();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&v63 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232277E98(0, &qword_255FADB98, v31, (void (*)(void))sub_23226DD28);
  v91 = v32;
  v68 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v34 = (char *)&v63 - v33;
  sub_23224C6D0(0, (unint64_t *)&qword_255FACCE0, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_2322C1440;
  sub_23224C618(0, (unint64_t *)&unk_255FAF960);
  *(_QWORD *)(v35 + 32) = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_visionPrescriptionType);
  v95 = v35;
  sub_2322B8F3C();
  sub_2322B8FE4();
  swift_bridgeObjectRelease();
  sub_23226DD28();
  v90 = v34;
  sub_2322B8C6C();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
  v36 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  if (qword_255FABAC0 != -1)
    swift_once();
  sub_2322B90F8();

  sub_23226E920();
  sub_2322B8C6C();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v19, v17);
  sub_2322582C8(0, (unint64_t *)&qword_255FADBC0);
  sub_232277F08((unint64_t *)&qword_255FAD380, (unint64_t *)&unk_255FADBB0, (void (*)(uint64_t))MEMORY[0x24BDD0078], (void (*)(void))sub_23226E920);
  sub_2322B8CF0();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v24, v22);
  sub_232277F08(&qword_255FADBD0, &qword_255FADB98, (void (*)(uint64_t))MEMORY[0x24BE45A88], (void (*)(void))sub_23226DD28);
  sub_232245044(&qword_255FADBD8, (uint64_t (*)(uint64_t))sub_232277DBC, MEMORY[0x24BDB95F8]);
  v37 = v81;
  sub_2322B8C90();
  sub_232245044(&qword_255FADBE0, (uint64_t (*)(uint64_t))sub_232277CD0, MEMORY[0x24BDB9798]);
  v38 = v66;
  sub_2322B8CC0();
  v39 = (_QWORD *)swift_allocObject();
  v40 = v65;
  v41 = v89;
  v39[2] = v65;
  v39[3] = v41;
  v42 = v77;
  v39[4] = v77;
  sub_2322B8F9C();
  v43 = (uint64_t (*)(uint64_t))MEMORY[0x24BE459E0];
  sub_232245044(&qword_255FADBF0, (uint64_t (*)(uint64_t))sub_232277C58, MEMORY[0x24BDB96F8]);
  v44 = v40;
  v45 = v41;
  v46 = v70;
  v47 = v69;
  sub_2322B8C6C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v38, v47);
  v48 = sub_232245044(&qword_255FADC08, (uint64_t (*)(uint64_t))sub_232277F48, MEMORY[0x24BDB96C0]);
  v49 = sub_232245044(&qword_255FADC00, v43, MEMORY[0x24BE459D8]);
  v50 = v74;
  v51 = v72;
  MEMORY[0x234900354](v72, v48, v49);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v46, v51);
  *(_QWORD *)(swift_allocObject() + 16) = v42;
  sub_232258A78();
  sub_232245044((unint64_t *)&unk_255FADC30, (uint64_t (*)(uint64_t))sub_232277FDC, MEMORY[0x24BDB9610]);
  sub_232245044(&qword_255FAC500, (uint64_t (*)(uint64_t))sub_232258A78, MEMORY[0x24BDB9DF8]);
  v52 = v78;
  v53 = v76;
  sub_2322B8C84();
  swift_release();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v50, v53);
  sub_232256E54(0, (unint64_t *)&qword_255FAD218, (unint64_t *)&qword_255FAD9C0, 0x24BDD4100, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  sub_232278208();
  v54 = v83;
  v55 = v80;
  sub_2322B8C6C();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v52, v55);
  sub_23227839C(0, &qword_255FADC80, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v56 = swift_allocObject();
  *(_OWORD *)(v56 + 16) = xmmword_2322C0E70;
  *(_QWORD *)(v56 + 32) = v44;
  v95 = v56;
  sub_2322B8F3C();
  sub_23227468C(&qword_255FADC78, &qword_255FADC40, (void (*)(uint64_t))sub_2322780A4, (void (*)(void))sub_232278208);
  v57 = v44;
  v58 = v84;
  v59 = v87;
  sub_2322B8CA8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v54, v59);
  sub_232245044(&qword_255FADC88, (uint64_t (*)(uint64_t))sub_232278224, MEMORY[0x24BDB9530]);
  v60 = v88;
  v61 = sub_2322B8C48();
  (*(void (**)(char *, uint64_t))(v86 + 8))(v58, v60);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v37, v94);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v92, v93);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v90, v91);
  return v61;
}

uint64_t sub_232274664()
{
  return sub_2322B8B40();
}

uint64_t sub_23227468C(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_23227816C(255, a2, a3, a4);
    result = MEMORY[0x2349010BC](MEMORY[0x24BDB96C0], v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2322746CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, uint64_t);
  uint64_t v8;
  uint64_t v10;

  v0 = sub_2322B84EC();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v10 - v5;
  sub_2322B84BC();
  sub_2322B84A4();
  v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v6, v0);
  v8 = sub_2322B84E0();
  v7(v4, v0);
  return v8;
}

uint64_t sub_232274794(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v4 = sub_2322B80B4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_2322B83F0();
  v8 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23224BE78(0, &qword_255FAC410, (uint64_t (*)(uint64_t))MEMORY[0x24BE438C0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v11 = *(unsigned __int8 *)(*(_QWORD *)(sub_2322B8570() - 8) + 80);
  v12 = (v11 + 32) & ~v11;
  v13 = swift_allocObject();
  v22 = xmmword_2322C0E70;
  *(_OWORD *)(v13 + 16) = xmmword_2322C0E70;
  sub_232276CD8(a1, a2, v13 + v12);
  sub_2322543EC(v13);
  swift_bridgeObjectRelease();
  sub_2322B80A8();
  sub_2322B8090();
  v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v7, v4);
  sub_2322B83E4();
  sub_23224BE78(0, (unint64_t *)&unk_255FADB00, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v15 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = v22;
  v17 = v23;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 16))(v16 + v15, v10, v23);
  v24 = 0x3C53447961727241;
  v25 = 0xE800000000000000;
  sub_2322B80A8();
  sub_2322B8090();
  v14(v7, v4);
  sub_2322B8EAC();
  swift_bridgeObjectRelease();
  sub_2322B8EAC();
  sub_2322B82F4();
  v18 = (uint64_t (*)(uint64_t))MEMORY[0x24BE42898];
  swift_allocObject();
  sub_2322B82E8();
  v19 = MEMORY[0x24BE42890];
  sub_2322B8360();
  swift_release();
  sub_2322583C0(0, (unint64_t *)&qword_255FAC618, v18, v19, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE428B8]);
  sub_232277A60();
  v20 = sub_2322B8378();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v17);
  sub_232277B80(&qword_255FAC620, (unint64_t *)&qword_255FADB20, (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x24BE42FF0], MEMORY[0x24BE43020]);
  return v20;
}

uint64_t sub_232274AD4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  id v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  id v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  char *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(uint64_t);
  uint64_t v62;
  uint64_t (*v63)(uint64_t, uint64_t, unint64_t);
  uint64_t v64;
  void *v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  unint64_t v81;
  uint64_t v82;
  void *v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;

  v86 = *MEMORY[0x24BDAC8D0];
  v2 = sub_2322B80B4();
  v76 = *(_QWORD *)(v2 - 8);
  v77 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2322B83F0();
  v73 = *(_QWORD *)(v5 - 8);
  v74 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v78 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2322B8570();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BE438C0];
  v79 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v80 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v72 = (uint64_t)&v69 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v71 = (uint64_t)&v69 - v14;
  v15 = sub_2322B8084();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23224BE78(0, &qword_255FAC410, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v19 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v82 = *(_QWORD *)(v9 + 72);
  v20 = swift_allocObject();
  v75 = xmmword_2322C0E70;
  *(_OWORD *)(v20 + 16) = xmmword_2322C0E70;
  v81 = v19;
  v21 = objc_msgSend(a1, sel__creationDate);
  sub_2322B806C();

  sub_2322764F4(v20 + v19);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  v22 = objc_msgSend(a1, sel_metadata);
  if (!v22)
  {
    v84 = 0u;
    v85 = 0u;
LABEL_13:
    sub_232250A80((uint64_t)&v84);
    goto LABEL_14;
  }
  v23 = v22;
  v24 = sub_2322B8DC8();

  v25 = sub_2322B8E1C();
  if (*(_QWORD *)(v24 + 16) && (v27 = sub_2322B26FC(v25, v26), (v28 & 1) != 0))
  {
    sub_232250B14(*(_QWORD *)(v24 + 56) + 32 * v27, (uint64_t)&v84);
  }
  else
  {
    v84 = 0u;
    v85 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v85 + 1))
    goto LABEL_13;
  sub_23224C618(0, (unint64_t *)&qword_255FABCD0);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_14;
  v29 = v83;
  v30 = objc_msgSend(a1, sel_metadata);
  if (!v30)
  {
    v84 = 0u;
    v85 = 0u;
LABEL_38:

    sub_232250A80((uint64_t)&v84);
    goto LABEL_14;
  }
  v31 = v30;
  v70 = v29;
  v32 = sub_2322B8DC8();

  v33 = sub_2322B8E1C();
  if (*(_QWORD *)(v32 + 16) && (v35 = sub_2322B26FC(v33, v34), (v36 & 1) != 0))
  {
    sub_232250B14(*(_QWORD *)(v32 + 56) + 32 * v35, (uint64_t)&v84);
  }
  else
  {
    v84 = 0u;
    v85 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v29 = v70;
  if (!*((_QWORD *)&v85 + 1))
    goto LABEL_38;
  if ((swift_dynamicCast() & 1) != 0)
  {
    v66 = v83;
    sub_232276660(v29, v83, v71);
    v68 = *(_QWORD *)(v20 + 16);
    v67 = *(_QWORD *)(v20 + 24);
    if (v68 >= v67 >> 1)
      v20 = sub_2322AA60C(v67 > 1, v68 + 1, 1, v20);
    *(_QWORD *)(v20 + 16) = v68 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v9 + 32))(v20 + v81 + v68 * v82, v71, v79);

  }
  else
  {

  }
LABEL_14:
  v37 = objc_msgSend(a1, sel_metadata);
  if (!v37)
  {
    v84 = 0u;
    v85 = 0u;
    v42 = v79;
    v43 = (uint64_t)v80;
LABEL_27:
    sub_232250A80((uint64_t)&v84);
    goto LABEL_28;
  }
  v38 = v37;
  v39 = sub_2322B8DC8();

  v40 = sub_2322B8E1C();
  v42 = v79;
  v43 = (uint64_t)v80;
  if (*(_QWORD *)(v39 + 16) && (v44 = sub_2322B26FC(v40, v41), (v45 & 1) != 0))
  {
    sub_232250B14(*(_QWORD *)(v39 + 56) + 32 * v44, (uint64_t)&v84);
  }
  else
  {
    v84 = 0u;
    v85 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v85 + 1))
    goto LABEL_27;
  if ((swift_dynamicCast() & 1) != 0)
  {
    v46 = (uint64_t)v83;
    if (qword_255FAB900 != -1)
      swift_once();
    v47 = sub_2322B7F58();
    sub_232277234(v47, v46, v72);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v49 = *(_QWORD *)(v20 + 16);
    v48 = *(_QWORD *)(v20 + 24);
    if (v49 >= v48 >> 1)
      v20 = sub_2322AA60C(v48 > 1, v49 + 1, 1, v20);
    v43 = (uint64_t)v80;
    v50 = v81;
    *(_QWORD *)(v20 + 16) = v49 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v9 + 32))(v20 + v50 + v49 * v82, v72, v42);
  }
LABEL_28:
  v51 = objc_msgSend(a1, sel_sourceRevision);
  sub_2322768B4(v51, v43);

  v53 = *(_QWORD *)(v20 + 16);
  v52 = *(_QWORD *)(v20 + 24);
  if (v53 >= v52 >> 1)
    v20 = sub_2322AA60C(v52 > 1, v53 + 1, 1, v20);
  v55 = v73;
  v54 = v74;
  *(_QWORD *)(v20 + 16) = v53 + 1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v9 + 32))(v20 + v81 + v53 * v82, v43, v42);
  sub_2322543EC(v20);
  swift_bridgeObjectRelease();
  sub_2322B80A8();
  sub_2322B8090();
  v56 = v77;
  v57 = *(void (**)(char *, uint64_t))(v76 + 8);
  v57(v4, v77);
  v58 = v78;
  sub_2322B83E4();
  sub_23224BE78(0, (unint64_t *)&unk_255FADB00, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v59 = (*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
  v60 = swift_allocObject();
  *(_OWORD *)(v60 + 16) = v75;
  (*(void (**)(unint64_t, char *, uint64_t))(v55 + 16))(v60 + v59, v58, v54);
  *(_QWORD *)&v84 = 0x3C53447961727241;
  *((_QWORD *)&v84 + 1) = 0xE800000000000000;
  sub_2322B80A8();
  sub_2322B8090();
  v57(v4, v56);
  sub_2322B8EAC();
  swift_bridgeObjectRelease();
  sub_2322B8EAC();
  sub_2322B82F4();
  v61 = (uint64_t (*)(uint64_t))MEMORY[0x24BE42898];
  swift_allocObject();
  sub_2322B82E8();
  v62 = MEMORY[0x24BE42890];
  sub_2322B8360();
  swift_release();
  sub_2322583C0(0, (unint64_t *)&qword_255FAC618, v61, v62, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE428B8]);
  sub_232277A60();
  sub_2322B8384();
  swift_release();
  v63 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x24BE42778];
  sub_232277AFC(0, &qword_255FADB48, (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x24BE42778]);
  sub_232277B80(&qword_255FADB50, &qword_255FADB48, v63, MEMORY[0x24BE42788]);
  v64 = sub_2322B8378();
  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v58, v54);
  sub_232245044(&qword_255FADB58, (uint64_t (*)(uint64_t))sub_232277BC0, MEMORY[0x24BE43020]);
  return v64;
}

uint64_t sub_232275448(uint64_t a1, uint64_t a2, void *a3, void *a4, int a5)
{
  return VisionPrescriptionDetailsViewController.init(healthStore:visionPrescription:canEdit:)(a3, a4, a5);
}

uint64_t sub_232275494@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  _OWORD v41[2];
  __int128 v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;

  v40 = a1;
  v3 = sub_2322B8918();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322B88D0();
  v7 = sub_2322B890C();
  v8 = sub_2322B9014();
  v9 = os_log_type_enabled(v7, v8);
  v10 = MEMORY[0x24BEE4AD8];
  if (v9)
  {
    v11 = swift_slowAlloc();
    v38 = v3;
    v12 = (uint8_t *)v11;
    v13 = swift_slowAlloc();
    v39 = a2;
    v14 = v13;
    *(_QWORD *)&v44 = v13;
    *(_DWORD *)v12 = 136446210;
    v15 = sub_2322B9464();
    *(_QWORD *)&v42 = sub_232266EA0(v15, v16, (uint64_t *)&v44);
    sub_2322B923C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_232241000, v7, v8, "%{public}s Received prescription updates, updating sample details", v12, 0xCu);
    v10 = MEMORY[0x24BEE4AD8];
    swift_arrayDestroy();
    MEMORY[0x234901170](v14, -1, -1);
    MEMORY[0x234901170](v12, -1, -1);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v38);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  v17 = v10;
  v18 = v40;
  v19 = objc_msgSend(v40, sel_metadata);
  v20 = (id *)MEMORY[0x24BDD3210];
  if (v19)
  {
    v21 = v19;
    v22 = sub_2322B8DC8();

    v23 = sub_2322B8E1C();
    if (*(_QWORD *)(v22 + 16) && (v25 = sub_2322B26FC(v23, v24), (v26 & 1) != 0))
    {
      sub_232250B14(*(_QWORD *)(v22 + 56) + 32 * v25, (uint64_t)&v44);
    }
    else
    {
      v44 = 0u;
      v45 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v44 = 0u;
    v45 = 0u;
  }
  sub_2322784BC((uint64_t)&v44, (uint64_t)&v42);
  if (v43)
  {
    sub_23224C608(&v42, v41);
    sub_23224C6D0(0, (unint64_t *)&unk_255FADC90, v17 + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_2322C0E70;
    sub_23224C608(v41, (_OWORD *)(v27 + 32));
  }
  v28 = (void *)objc_opt_self();
  v29 = *v20;
  v30 = (void *)sub_2322B8F24();
  swift_bridgeObjectRelease();
  v31 = objc_msgSend(v28, sel_predicateForObjectsWithMetadataKey_allowedValues_, v29, v30);

  v32 = objc_msgSend(v18, sel_sampleType);
  v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3E98]), sel_initWithSampleType_predicate_, v32, v31);

  sub_23224C6D0(0, (unint64_t *)&qword_255FACCE0, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_2322C1440;
  *(_QWORD *)(v34 + 32) = v33;
  *(_QWORD *)&v42 = v34;
  sub_2322B8F3C();
  v35 = v33;
  sub_2322B8FA8();

  swift_bridgeObjectRelease();
  return sub_232250A80((uint64_t)&v44);
}

uint64_t sub_2322758BC@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;

  v4 = sub_2322B8918();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  sub_2322B88D0();
  v9 = v8;
  v10 = v8;
  v11 = sub_2322B890C();
  v12 = sub_2322B8FFC();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v22[1] = a2;
    v14 = v13;
    v15 = swift_slowAlloc();
    v24 = v15;
    *(_DWORD *)v14 = 136446466;
    v16 = sub_2322B9464();
    v23 = sub_232266EA0(v16, v17, &v24);
    sub_2322B923C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2082;
    v23 = (uint64_t)v8;
    v18 = v8;
    sub_2322582C8(0, (unint64_t *)&qword_255FADBC0);
    v19 = sub_2322B8E34();
    v23 = sub_232266EA0(v19, v20, &v24);
    sub_2322B923C();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_232241000, v11, v12, "[%{public}s] Single updating prescription stream failed: %{public}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x234901170](v15, -1, -1);
    MEMORY[0x234901170](v14, -1, -1);
  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v24 = MEMORY[0x24BEE4AF8];
  sub_232256E54(0, (unint64_t *)&unk_255FADC20, (unint64_t *)&unk_255FAF970, 0x24BDD3ED8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  return sub_2322B8B88();
}

void sub_232275B3C(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;

  v3 = *a1;
  if (!((unint64_t)*a1 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease();
LABEL_11:
    *a2 = 0;
    return;
  }
  swift_bridgeObjectRetain();
  if (!sub_2322B9368())
    goto LABEL_10;
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
    v5 = (id)MEMORY[0x2349009FC](0, v3);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v5 = *(id *)(v3 + 32);
LABEL_6:
    v6 = v5;
    swift_bridgeObjectRelease();
    objc_opt_self();
    v7 = swift_dynamicCastObjCClass();
    if (v7)
    {
      *a2 = v7;
      return;
    }

    goto LABEL_11;
  }
  __break(1u);
}

void sub_232275C18()
{
  sub_2322B9350();
  __break(1u);
}

Swift::Void __swiftcall VisionPrescriptionDetailsViewController.viewDidLoad()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for VisionPrescriptionDetailsViewController();
  objc_msgSendSuper2(&v1, sel_viewDidLoad);
  sub_232275D00();
}

void sub_232275CA8(void *a1)
{
  id v1;
  objc_super v2;

  v2.receiver = a1;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionDetailsViewController();
  v1 = v2.receiver;
  objc_msgSendSuper2(&v2, sel_viewDidLoad);
  sub_232275D00();

}

void sub_232275D00()
{
  void *v0;
  void *v1;
  id v2;
  unsigned int v3;

  if (qword_255FAB900 != -1)
    swift_once();
  sub_2322B7F58();
  v1 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setTitle_, v1, 0xE000000000000000);

  if (*((_BYTE *)v0 + qword_255FADA00) == 1
    && (v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD4198]), sel_init),
        v3 = objc_msgSend(v2, sel_hkui_isRunningInHealthApp),
        v2,
        v3))
  {
    sub_232275E58();
  }
  else if (objc_msgSend(v0, sel_isBeingPresented))
  {
    sub_23227604C();
  }
}

void sub_232275E58()
{
  void *v0;
  id v1;
  uint64_t v2;
  id v3;
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  id v11;
  _QWORD v12[4];

  v1 = objc_msgSend(v0, sel_navigationItem);
  if (qword_255FAB900 != -1)
    swift_once();
  sub_2322B7F58();
  v2 = type metadata accessor for VisionPrescriptionDetailsViewController();
  v12[3] = v2;
  v12[0] = v0;
  v3 = v0;
  v4 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  if (v2)
  {
    v5 = sub_232277A3C(v12, v2);
    v6 = *(_QWORD *)(v2 - 8);
    MEMORY[0x24BDAC7A8](v5);
    v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v6 + 16))(v8);
    v9 = sub_2322B93E0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v2);
    sub_232258500((uint64_t)v12);
  }
  else
  {
    v9 = 0;
  }
  v10 = objc_allocWithZone(MEMORY[0x24BEBD410]);
  v11 = objc_msgSend(v10, sel_initWithTitle_style_target_action_, v4, 0, v9, sel_editButtonTapped_, v12[0]);

  swift_unknownObjectRelease();
  objc_msgSend(v1, sel_setRightBarButtonItem_, v11);

}

void sub_23227604C()
{
  void *v0;
  id v1;
  uint64_t v2;
  id v3;
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  id v11;
  _QWORD v12[4];

  v1 = objc_msgSend(v0, sel_navigationItem);
  if (qword_255FAB900 != -1)
    swift_once();
  sub_2322B7F58();
  v2 = type metadata accessor for VisionPrescriptionDetailsViewController();
  v12[3] = v2;
  v12[0] = v0;
  v3 = v0;
  v4 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  if (v2)
  {
    v5 = sub_232277A3C(v12, v2);
    v6 = *(_QWORD *)(v2 - 8);
    MEMORY[0x24BDAC7A8](v5);
    v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v6 + 16))(v8);
    v9 = sub_2322B93E0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v2);
    sub_232258500((uint64_t)v12);
  }
  else
  {
    v9 = 0;
  }
  v10 = objc_allocWithZone(MEMORY[0x24BEBD410]);
  v11 = objc_msgSend(v10, sel_initWithTitle_style_target_action_, v4, 0, v9, sel_doneButtonTapped_, v12[0]);

  swift_unknownObjectRelease();
  objc_msgSend(v1, sel_setRightBarButtonItem_, v11);

}

uint64_t sub_232276240()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  char v4;
  id v5;
  char v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v12;
  void *v13;
  _QWORD *v14;
  void *v15;

  v1 = v0;
  v2 = *(void **)&v0[qword_255FAD9F8];
  type metadata accessor for VisionPrescriptionAnalyticsContext();
  swift_allocObject();
  v3 = v2;
  sub_2322B4D08(v3);
  v4 = 1;
  sub_2322B5264(1, 0, 0, 1);
  swift_retain();
  sub_2322B8B4C();
  swift_release();
  if (v12)
  {
    v5 = v12;
    sub_232277978(v13, (uint64_t)v14, v15);
    sub_2322779FC((uint64_t)v13, (uint64_t)v14, v15);
    v6 = sub_232273228();

    if ((v6 & 1) != 0)
      v4 = 2;
    else
      v4 = 1;
  }
  v7 = objc_allocWithZone((Class)type metadata accessor for VisionPrescriptionManualDataEntryViewController());
  v8 = v3;
  sub_232277934(v12, v13, (uint64_t)v14, v15);
  v9 = (void *)sub_23227BE34(v8, v12, (uint64_t)v13, v14, v15, v4);
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A728]), sel_initWithRootViewController_, v9);
  objc_msgSend(v10, sel_setModalInPresentation_, 1);
  objc_msgSend(v10, sel_setModalPresentationStyle_, 2);
  objc_msgSend(v1, sel_presentViewController_animated_completion_, v10, 1, 0);
  sub_2322779B8(v12, (uint64_t)v13, (uint64_t)v14, v15);

  return swift_release();
}

uint64_t sub_232276420(void *a1)
{
  id v2;
  uint64_t v4;

  swift_unknownObjectRetain();
  v2 = a1;
  sub_2322B926C();
  swift_unknownObjectRelease();
  sub_232276240();

  return sub_232258500((uint64_t)&v4);
}

uint64_t sub_232276484(void *a1)
{
  id v2;
  uint64_t v4;

  swift_unknownObjectRetain();
  v2 = a1;
  sub_2322B926C();
  swift_unknownObjectRelease();
  objc_msgSend(v2, sel_dismissViewControllerAnimated_completion_, 1, 0);

  return sub_232258500((uint64_t)&v4);
}

void sub_2322764F4(uint64_t a1@<X8>)
{
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;

  v7 = (id)HKDateFormatterFromTemplate();
  if (qword_255FAB900 != -1)
    swift_once();
  v2 = sub_2322B7F58();
  if (v7)
  {
    v3 = v7;
    v4 = (void *)sub_2322B8054();
    v5 = objc_msgSend(v3, sel_stringFromDate_, v4, 0xE000000000000000);

    v6 = sub_2322B8E1C();
  }
  else
  {
    v6 = 0;
  }
  sub_232277234(v2, v6, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

uint64_t sub_232276660@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (qword_255FAB900 != -1)
    swift_once();
  sub_2322B7F58();
  sub_23226D960(0, (unint64_t *)&qword_255FADB70, (unint64_t *)&qword_255FAF820);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2322C0E50;
  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_diopterUnit, 0xE000000000000000);
  objc_msgSend(a1, sel_doubleValueForUnit_, v7);
  v9 = v8;

  v10 = MEMORY[0x24BEE13C8];
  v11 = MEMORY[0x24BEE1448];
  *(_QWORD *)(v5 + 56) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(v5 + 64) = v11;
  *(_QWORD *)(v5 + 32) = v9;
  v12 = objc_msgSend(v6, sel_diopterUnit);
  objc_msgSend(a2, sel_doubleValueForUnit_, v12);
  v14 = v13;

  *(_QWORD *)(v5 + 96) = v10;
  *(_QWORD *)(v5 + 104) = v11;
  *(_QWORD *)(v5 + 72) = v14;
  v15 = sub_2322B8DF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v16 = sub_2322B7F58();
  sub_232277234(v16, v15, a3);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2322768B4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(a1, sel_source);
  v4 = objc_msgSend(v3, sel_name);

  v5 = sub_2322B8E1C();
  if (qword_255FAB900 != -1)
    swift_once();
  v6 = sub_2322B7F58();
  sub_232277234(v6, v5, a2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2322769D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v21;
  uint64_t v22[5];

  v21 = sub_2322B8840();
  v2 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v4 = (char *)&v22[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2322B8474();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23224BE78(0, &qword_255FABDE8, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC408], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v22[-1] - v10;
  v12 = sub_2322B8A38();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v22[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322B89B4();
  if (qword_255FAB900 != -1)
    swift_once();
  sub_2322B7F58();
  sub_2322B8A20();
  v22[3] = v12;
  v22[4] = MEMORY[0x24BEBC5F0];
  v16 = sub_23224FA10(v22);
  (*(void (**)(uint64_t *, char *, uint64_t))(v13 + 16))(v16, v15, v12);
  sub_2322B8990();
  v17 = sub_2322B899C();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v11, 0, 1, v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BE43600], v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BE44C60], v21);
  v18 = sub_2322B8570();
  v19 = (uint64_t (*)(uint64_t))MEMORY[0x24BE438C0];
  a1[3] = v18;
  a1[4] = sub_232245044(&qword_255FADB80, v19, MEMORY[0x24BE438A8]);
  sub_23224FA10(a1);
  sub_2322B8564();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_232276CCC(uint64_t a1, uint64_t a2)
{
  return sub_23227719C(a1, a2, (void (*)(uint64_t))MEMORY[0x24BE436A8]);
}

uint64_t sub_232276CD8@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  id v29;
  id v30;
  _QWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45[6];

  v42 = a2;
  v43 = a1;
  v44 = a3;
  v40 = sub_2322B8840();
  v38 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v41 = (char *)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2322B8474();
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_23224BE78(0, &qword_255FABDE8, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC408], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v37 = (char *)v32 - v8;
  sub_23224BE78(0, (unint64_t *)&unk_255FADB30, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC088], v6);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v32 - v10;
  v12 = sub_2322B896C();
  v33 = *(_QWORD *)(v12 - 8);
  v34 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_2322B893C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_2322B8A38();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)v32 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255FAB900 != -1)
    swift_once();
  v32[1] = sub_2322B7F58();
  sub_2322B8A14();
  swift_bridgeObjectRetain();
  sub_2322B8A20();
  v45[3] = v19;
  v45[4] = MEMORY[0x24BEBC5F0];
  v23 = sub_23224FA10(v45);
  (*(void (**)(uint64_t *, char *, uint64_t))(v20 + 16))(v23, v22, v19);
  sub_23224BE78(0, &qword_255FAC418, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC0E0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_2322B8984();
  v32[0] = v20;
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_2322C0E70;
  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v18, *MEMORY[0x24BEBC058], v15);
  v24 = sub_2322B8948();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v11, 1, 1, v24);
  sub_2322B8960();
  sub_2322B8954();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v34);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  v25 = swift_allocObject();
  v27 = v42;
  v26 = v43;
  *(_QWORD *)(v25 + 16) = v42;
  *(_QWORD *)(v25 + 24) = v26;
  v28 = sub_2322B899C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v37, 1, 1, v28);
  (*(void (**)(char *, _QWORD, uint64_t))(v35 + 104))(v39, *MEMORY[0x24BE43600], v36);
  (*(void (**)(char *, _QWORD, uint64_t))(v38 + 104))(v41, *MEMORY[0x24BE44C60], v40);
  v29 = v27;
  v30 = v26;
  sub_2322B8564();
  return (*(uint64_t (**)(char *, uint64_t))(v32[0] + 8))(v22, v19);
}

uint64_t sub_232277190(uint64_t a1, uint64_t a2)
{
  return sub_23227719C(a1, a2, (void (*)(uint64_t))MEMORY[0x24BE436B8]);
}

uint64_t sub_23227719C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v4 = sub_2322B84EC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3(v6);
  v9 = sub_2322B84E0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return v9;
}

uint64_t sub_232277234@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  void (*v15)(uint64_t *, _QWORD);
  void *v16;
  id v17;
  void (*v18)(uint64_t *, _QWORD);
  id v19;
  void (*v20)(uint64_t *, _QWORD);
  id v21;
  void (*v22)(uint64_t *, _QWORD);
  uint64_t *v23;
  uint64_t v24;
  _QWORD v26[2];
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[5];

  v26[1] = a2;
  v28 = a1;
  v35 = a3;
  v3 = sub_2322B8840();
  v33 = *(_QWORD *)(v3 - 8);
  v34 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v32 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2322B8474();
  v30 = *(_QWORD *)(v5 - 8);
  v31 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v29 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23224BE78(0, &qword_255FABDE8, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC408], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v27 = (char *)v26 - v8;
  v9 = sub_2322B8A38();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322B89A8();
  swift_bridgeObjectRetain();
  sub_2322B8A20();
  v13 = (void *)objc_opt_self();
  v14 = objc_msgSend(v13, sel_preferredFontForTextStyle_, *MEMORY[0x24BEBE220]);
  v15 = (void (*)(uint64_t *, _QWORD))sub_2322B89E4();
  sub_2322B89CC();
  v15(v36, 0);
  v16 = (void *)objc_opt_self();
  v17 = objc_msgSend(v16, sel_secondaryLabelColor);
  v18 = (void (*)(uint64_t *, _QWORD))sub_2322B89E4();
  sub_2322B89D8();
  v18(v36, 0);
  swift_bridgeObjectRetain();
  sub_2322B89C0();
  v19 = objc_msgSend(v13, sel_preferredFontForTextStyle_, *MEMORY[0x24BEBE1D0]);
  v20 = (void (*)(uint64_t *, _QWORD))sub_2322B89F0();
  sub_2322B89CC();
  v20(v36, 0);
  v21 = objc_msgSend(v16, sel_labelColor);
  v22 = (void (*)(uint64_t *, _QWORD))sub_2322B89F0();
  sub_2322B89D8();
  v22(v36, 0);
  v36[3] = v9;
  v36[4] = MEMORY[0x24BEBC5F0];
  v23 = sub_23224FA10(v36);
  (*(void (**)(uint64_t *, char *, uint64_t))(v10 + 16))(v23, v12, v9);
  v24 = sub_2322B899C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v27, 1, 1, v24);
  (*(void (**)(char *, _QWORD, uint64_t))(v30 + 104))(v29, *MEMORY[0x24BE43600], v31);
  (*(void (**)(char *, _QWORD, uint64_t))(v33 + 104))(v32, *MEMORY[0x24BE44C60], v34);
  swift_bridgeObjectRetain();
  sub_2322B8564();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

void sub_2322775E0(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;

  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A740]), sel_initWithSample_healthStore_, a2, a3);
  objc_msgSend(a1, sel_showViewController_sender_, v4, a1);

}

void VisionPrescriptionDetailsViewController.__allocating_init(dataSource:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void VisionPrescriptionDetailsViewController.init(dataSource:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id VisionPrescriptionDetailsViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCollectionViewLayout_, a1);

  return v3;
}

void VisionPrescriptionDetailsViewController.init(collectionViewLayout:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_232277718(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_232277748()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_release();
}

id VisionPrescriptionDetailsViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionDetailsViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2322777C8(uint64_t a1)
{
  swift_release();

  swift_release();
  return swift_release();
}

unint64_t sub_232277820()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FADA38;
  if (!qword_255FADA38)
  {
    sub_2322583C0(255, &qword_255FADA40, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionDataSource, MEMORY[0x24BE43520], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE42FF0]);
    result = MEMORY[0x2349010BC](MEMORY[0x24BE43020], v1);
    atomic_store(result, (unint64_t *)&qword_255FADA38);
  }
  return result;
}

uint64_t type metadata accessor for VisionPrescriptionDetailsViewController()
{
  uint64_t result;

  result = qword_255FADA48;
  if (!qword_255FADA48)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2322778C4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_23227792C()
{
  return type metadata accessor for VisionPrescriptionDetailsViewController();
}

id sub_232277934(id result, void *a2, uint64_t a3, void *a4)
{
  id v7;

  if (result)
  {
    v7 = result;
    return sub_232277978(a2, a3, a4);
  }
  return result;
}

id sub_232277978(id result, uint64_t a2, void *a3)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return a3;
  }
  return result;
}

void sub_2322779B8(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a1)
  {

    sub_2322779FC(a2, a3, a4);
  }
}

void sub_2322779FC(uint64_t a1, uint64_t a2, void *a3)
{
  if (a1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
}

_QWORD *sub_232277A3C(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_232277A60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FADB10;
  if (!qword_255FADB10)
  {
    sub_2322583C0(255, (unint64_t *)&qword_255FAC618, (uint64_t (*)(uint64_t))MEMORY[0x24BE42898], MEMORY[0x24BE42890], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE428B8]);
    result = MEMORY[0x2349010BC](MEMORY[0x24BE428C8], v1);
    atomic_store(result, (unint64_t *)&qword_255FADB10);
  }
  return result;
}

uint64_t sub_232277AC8()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_232277AF4(void *a1)
{
  uint64_t v1;

  sub_2322775E0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_232277AFC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_2322583C0(255, (unint64_t *)&qword_255FAC618, (uint64_t (*)(uint64_t))MEMORY[0x24BE42898], MEMORY[0x24BE42890], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE428B8]);
    v7 = v6;
    v8 = sub_232277A60();
    v9 = a3(a1, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_232277B80(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_232277AFC(255, a2, a3);
    result = MEMORY[0x2349010BC](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_232277BC0()
{
  uint64_t (*v0)(uint64_t, uint64_t, unint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_255FADB60)
  {
    v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x24BE42778];
    sub_232277AFC(255, &qword_255FADB48, (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x24BE42778]);
    sub_232277B80(&qword_255FADB50, &qword_255FADB48, v0, MEMORY[0x24BE42788]);
    v1 = sub_2322B8390();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_255FADB60);
  }
}

void sub_232277C58()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FADB88)
  {
    sub_232277CD0();
    sub_232245044(&qword_255FADBE0, (uint64_t (*)(uint64_t))sub_232277CD0, MEMORY[0x24BDB9798]);
    v0 = sub_2322B8AC8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FADB88);
  }
}

void sub_232277CD0()
{
  void (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_255FADB90)
  {
    v0 = (void (*)(uint64_t))MEMORY[0x24BE45A88];
    sub_232277E98(255, &qword_255FADB98, (void (*)(uint64_t))MEMORY[0x24BE45A88], (void (*)(void))sub_23226DD28);
    sub_232277DBC();
    sub_232277F08(&qword_255FADBD0, &qword_255FADB98, v0, (void (*)(void))sub_23226DD28);
    sub_232245044(&qword_255FADBD8, (uint64_t (*)(uint64_t))sub_232277DBC, MEMORY[0x24BDB95F8]);
    v1 = sub_2322B8AE0();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_255FADB90);
  }
}

void sub_232277DBC()
{
  void (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_255FADBA8)
  {
    v0 = (void (*)(uint64_t))MEMORY[0x24BDD0078];
    sub_232277E98(255, (unint64_t *)&unk_255FADBB0, (void (*)(uint64_t))MEMORY[0x24BDD0078], (void (*)(void))sub_23226E920);
    sub_2322582C8(255, (unint64_t *)&qword_255FADBC0);
    sub_232277F08((unint64_t *)&qword_255FAD380, (unint64_t *)&unk_255FADBB0, v0, (void (*)(void))sub_23226E920);
    v1 = sub_2322B8A8C();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_255FADBA8);
  }
}

void sub_232277E98(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4();
    v6 = sub_2322B8ABC();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_232277F08(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_232277E98(255, a2, a3, a4);
    result = MEMORY[0x2349010BC](MEMORY[0x24BDB96C0], v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_232277F48()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FADBE8)
  {
    sub_232277C58();
    sub_2322B8F9C();
    sub_232245044(&qword_255FADBF0, (uint64_t (*)(uint64_t))sub_232277C58, MEMORY[0x24BDB96F8]);
    v0 = sub_2322B8ABC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FADBE8);
  }
}

void sub_232277FDC()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_255FADBF8)
  {
    sub_2322B8F9C();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BE459E0];
    sub_232277F48();
    sub_232245044(&qword_255FADC00, v0, MEMORY[0x24BE459D8]);
    sub_232245044(&qword_255FADC08, (uint64_t (*)(uint64_t))sub_232277F48, MEMORY[0x24BDB96C0]);
    v1 = sub_2322B8A98();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_255FADBF8);
  }
}

void sub_2322780A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FADC10)
  {
    sub_232277FDC();
    sub_232258A78();
    sub_232245044((unint64_t *)&unk_255FADC30, (uint64_t (*)(uint64_t))sub_232277FDC, MEMORY[0x24BDB9610]);
    sub_232245044(&qword_255FAC500, (uint64_t (*)(uint64_t))sub_232258A78, MEMORY[0x24BDB9DF8]);
    v0 = sub_2322B8AD4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FADC10);
  }
}

void sub_23227816C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    sub_232256E54(255, (unint64_t *)&qword_255FAD218, (unint64_t *)&qword_255FAD9C0, 0x24BDD4100, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    a4();
    v6 = sub_2322B8ABC();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_232278208()
{
  return sub_232245044(&qword_255FADC48, (uint64_t (*)(uint64_t))sub_2322780A4, MEMORY[0x24BDB9740]);
}

void sub_232278224()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FADC50)
  {
    sub_232278310();
    sub_23227816C(255, &qword_255FADC40, (void (*)(uint64_t))sub_2322780A4, (void (*)(void))sub_232278208);
    sub_232245044(&qword_255FADC70, (uint64_t (*)(uint64_t))sub_232278310, MEMORY[0x24BDB9970]);
    sub_23227468C(&qword_255FADC78, &qword_255FADC40, (void (*)(uint64_t))sub_2322780A4, (void (*)(void))sub_232278208);
    v0 = sub_2322B8A80();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FADC50);
  }
}

void sub_232278310()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FADC58)
  {
    sub_23227839C(255, &qword_255FADC60, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_232278414();
    v0 = sub_2322B8AF8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FADC58);
  }
}

void sub_23227839C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_232256E54(255, (unint64_t *)&qword_255FAD218, (unint64_t *)&qword_255FAD9C0, 0x24BDD4100, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_232278414()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FADC68;
  if (!qword_255FADC68)
  {
    sub_23227839C(255, &qword_255FADC60, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2349010BC](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_255FADC68);
  }
  return result;
}

uint64_t sub_23227846C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_232278498@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_232275494(*(void **)(v1 + 16), a1);
}

uint64_t sub_2322784A4()
{
  return swift_deallocObject();
}

uint64_t sub_2322784B4@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2322758BC(a1, a2);
}

uint64_t sub_2322784BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23224C6D0(0, (unint64_t *)&qword_255FADB40, MEMORY[0x24BEE4AD8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23227851C()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FADCA0 = result;
  *(_QWORD *)algn_255FADCA8 = v1;
  return result;
}

void *static HKVisionPrescriptionType.allCases.getter()
{
  return &unk_250111D30;
}

uint64_t HKVisionPrescriptionType.text.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = sub_2322B8918();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 1)
  {
    if (qword_255FAB900 == -1)
      return sub_2322B7F58();
LABEL_10:
    swift_once();
    return sub_2322B7F58();
  }
  if (a1 == 2)
  {
    if (qword_255FAB900 == -1)
      return sub_2322B7F58();
    goto LABEL_10;
  }
  sub_2322B88F4();
  v7 = sub_2322B890C();
  v8 = sub_2322B8FFC();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v14 = v10;
    *(_DWORD *)v9 = 136315394;
    v13 = sub_232266EA0(0xD000000000000018, 0x80000002322BCDE0, &v14);
    sub_2322B923C();
    *(_WORD *)(v9 + 12) = 2080;
    v13 = a1;
    type metadata accessor for HKVisionPrescriptionType(0);
    v11 = sub_2322B8E34();
    v13 = sub_232266EA0(v11, v12, &v14);
    sub_2322B923C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_232241000, v7, v8, "[%s] unknown HKVisionPrescriptionType %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x234901170](v10, -1, -1);
    MEMORY[0x234901170](v9, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return 0;
}

void sub_232278898(_QWORD *a1@<X8>)
{
  *a1 = &unk_250111D60;
}

uint64_t sub_2322788A8()
{
  uint64_t *v0;

  return HKVisionPrescriptionType.text.getter(*v0);
}

uint64_t sub_2322788B0(char a1)
{
  if ((a1 & 1) != 0)
  {
    if (qword_255FAB900 != -1)
      swift_once();
  }
  else if (qword_255FAB900 != -1)
  {
    swift_once();
  }
  return sub_2322B7F58();
}

uint64_t sub_2322789A0(char a1)
{
  if ((a1 & 1) != 0)
  {
    if (qword_255FAB900 != -1)
      swift_once();
  }
  else if (qword_255FAB900 != -1)
  {
    swift_once();
  }
  return sub_2322B7F58();
}

BOOL sub_232278A90(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_232278AA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_retain();
  sub_2322B8B4C();
  result = swift_release();
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = 0;
  return result;
}

uint64_t sub_232278AF4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if ((*(_BYTE *)(a2 + 8) & 1) == 0)
  {
    swift_retain();
    sub_2322B8B58();
    return swift_release();
  }
  return result;
}

uint64_t sub_232278B40(char a1)
{
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = a1 & 1;
  sub_2322788B0(a1 & 1);
  sub_2322789A0(v1);
  v2 = swift_allocObject();
  swift_weakInit();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v2;
  *(_BYTE *)(v3 + 24) = v1;
  v4 = swift_allocObject();
  swift_weakInit();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_BYTE *)(v5 + 24) = v1;
  v6 = swift_allocObject();
  swift_weakInit();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v6;
  *(_BYTE *)(v7 + 24) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_2322788B0(v1);
  sub_2322B85D0();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_232278CF8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  sub_23224BE78(0, &qword_255FABC68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - v6;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    v9 = sub_2322B8084();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 1, 1, v9);
    if ((a4 & 1) != 0)
      sub_232285620((uint64_t)v7);
    else
      sub_23228538C((uint64_t)v7);
    swift_release();
    return sub_23225B12C((uint64_t)v7, &qword_255FABC68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  }
  return result;
}

uint64_t sub_232278E14(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_232278FD0(a3 & 1);
    return swift_release();
  }
  return result;
}

uint64_t sub_232278E70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_retain();
    swift_release();
    swift_retain();
    sub_2322B8B4C();
    swift_release();
    return swift_release();
  }
  else
  {
    v2 = sub_2322B8084();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
  }
}

uint64_t sub_232278F38(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    if ((a4 & 1) != 0)
      sub_232285620(a2);
    else
      sub_23228538C(a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_232278FD0(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t *v19;
  uint64_t v21[5];

  v2 = a1 & 1;
  v3 = sub_2322B85DC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v21[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23224BE78(0, &qword_255FADDD8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v21[-1] - v8;
  v10 = sub_2322B8150();
  v11 = *(_QWORD *)(v10 - 8);
  result = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v21[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = qword_255FADCE8;
  v16 = *(unsigned __int8 *)(v1 + qword_255FADCE8);
  if (v16 != 2)
  {
    sub_2322794F4(v16 & 1, (uint64_t)v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    {
      result = sub_23225B12C((uint64_t)v9, &qword_255FADDD8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF678]);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v9, v10);
      sub_2322B8414();
      result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    }
  }
  v17 = *(unsigned __int8 *)(v1 + v15);
  if (v17 != 2 && (v17 & 1) == (_DWORD)v2)
  {
    LOBYTE(v2) = 2;
  }
  else
  {
    sub_2322791E8(v2);
    sub_232278B40(v2);
    v21[3] = v3;
    v21[4] = sub_232245044(&qword_255FADD98, (uint64_t (*)(uint64_t))MEMORY[0x24BE43B30], MEMORY[0x24BE43B20]);
    v19 = sub_23224FA10(v21);
    (*(void (**)(uint64_t *, char *, uint64_t))(v4 + 16))(v19, v6, v3);
    sub_2322B8450();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_232258500((uint64_t)v21);
    result = sub_232279670(v2);
  }
  *(_BYTE *)(v1 + v15) = v2;
  return result;
}

uint64_t sub_2322791E8(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  int v21;
  uint64_t result;
  uint64_t (*v23)(char *, uint64_t, uint64_t);
  int v24;
  char *v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  char *v28;

  v2 = sub_2322B8084();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v28 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v27 - v6;
  sub_23224BE78(0, &qword_255FABC68, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v27 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v27 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v27 - v19;
  if ((a1 & 1) != 0)
  {
    swift_retain();
    sub_2322B8B4C();
    swift_release();
    v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48);
    v24 = v23(v15, 1, v2);
    result = sub_23225B12C((uint64_t)v15, &qword_255FABC68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    if (v24 == 1)
    {
      swift_retain();
      sub_2322B8B4C();
      swift_release();
      if (v23(v12, 1, v2) == 1)
      {
        return sub_23225B12C((uint64_t)v12, &qword_255FABC68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v7, v12, v2);
        v25 = v28;
        sub_2322B8048();
        (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v18, v25, v2);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v18, 0, 1, v2);
        swift_retain();
        sub_2322B8B58();
        swift_release();
        v26 = *(void (**)(char *, uint64_t))(v3 + 8);
        v26(v25, v2);
        return ((uint64_t (*)(char *, uint64_t))v26)(v7, v2);
      }
    }
  }
  else
  {
    swift_retain();
    sub_2322B8B4C();
    swift_release();
    v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v20, 1, v2);
    result = sub_23225B12C((uint64_t)v20, &qword_255FABC68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    if (v21 == 1)
    {
      swift_retain();
      sub_2322B8078();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v18, 0, 1, v2);
      sub_2322B8B58();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_2322794F4@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = a1 & 1;
  sub_23224BE78(0, &qword_255FADDD8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v17 - v5;
  v7 = sub_2322B8150();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2322788B0(v3);
  sub_23227A93C(v11, v12, (uint64_t)v6);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_23225B12C((uint64_t)v6, &qword_255FADDD8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF678]);
    v13 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, v13, 1, v7);
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  result = sub_2322B812C();
  v15 = result + 1;
  if (!__OFADD__(result, 1))
  {
    v16 = sub_2322B8144();
    MEMORY[0x2348FF838](v15, v16);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v13 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, v13, 1, v7);
  }
  __break(1u);
  return result;
}

uint64_t sub_232279670(char a1)
{
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22[5];

  v1 = a1 & 1;
  v2 = sub_2322B8408();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v22[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23224BE78(0, &qword_255FADDD8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v22[-1] - v7;
  v9 = sub_2322B8150();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v22[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322794F4(v1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_23225B12C((uint64_t)v8, &qword_255FADDD8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF678]);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  v14 = swift_allocObject();
  v21 = v3;
  v15 = v14;
  swift_weakInit();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v15;
  *(_BYTE *)(v16 + 24) = v1;
  v17 = swift_allocObject();
  swift_weakInit();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v17;
  *(_BYTE *)(v18 + 24) = v1;
  sub_2322B83FC();
  v22[3] = v2;
  v22[4] = sub_232245044(&qword_255FADDE0, (uint64_t (*)(uint64_t))MEMORY[0x24BE43388], MEMORY[0x24BE43378]);
  v19 = sub_23224FA10(v22);
  v20 = v21;
  (*(void (**)(uint64_t *, char *, uint64_t))(v21 + 16))(v19, v5, v2);
  sub_2322B8444();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return sub_232258500((uint64_t)v22);
}

uint64_t sub_2322798E0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];

  v1 = v0;
  v2 = *v0;
  sub_23227B94C();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)((char *)v0 + qword_255FADCF0);
  v9 = *(_QWORD *)(v8 + 24);
  v14[0] = *(_QWORD *)(v8 + 32);
  v14[1] = v9;
  sub_23227B9D0();
  sub_232245044(&qword_255FADDC0, (uint64_t (*)(uint64_t))sub_23227B9D0, MEMORY[0x24BDB9D10]);
  sub_2322B8C60();
  *(_QWORD *)(swift_allocObject() + 16) = v2;
  v10 = swift_allocObject();
  swift_weakInit();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_23227BA7C;
  *(_QWORD *)(v11 + 24) = v10;
  sub_232245044(&qword_255FADDC8, (uint64_t (*)(uint64_t))sub_23227B94C, MEMORY[0x24BDB9450]);
  v12 = sub_2322B8C78();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *(_QWORD *)((char *)v1 + qword_255FADCD8) = v12;
  return swift_release();
}

uint64_t sub_232279A98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t *v4;
  uint64_t result;
  uint64_t *v6;
  uint64_t v8[3];
  uint64_t v9;
  uint64_t v10;

  v0 = sub_2322B85DC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_232278B40(0);
    v9 = v0;
    v10 = sub_232245044(&qword_255FADD98, (uint64_t (*)(uint64_t))MEMORY[0x24BE43B30], MEMORY[0x24BE43B20]);
    v4 = sub_23224FA10(v8);
    (*(void (**)(uint64_t *, char *, uint64_t))(v1 + 16))(v4, v3, v0);
    sub_2322B8450();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    sub_232258500((uint64_t)v8);
    swift_release();
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_232278B40(1);
    v9 = v0;
    v10 = sub_232245044(&qword_255FADD98, (uint64_t (*)(uint64_t))MEMORY[0x24BE43B30], MEMORY[0x24BE43B20]);
    v6 = sub_23224FA10(v8);
    (*(void (**)(uint64_t *, char *, uint64_t))(v1 + 16))(v6, v3, v0);
    sub_2322B8450();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    sub_232258500((uint64_t)v8);
    return swift_release();
  }
  return result;
}

uint64_t sub_232279C30()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0;
  v2 = *v0;
  *(_QWORD *)(swift_allocObject() + 16) = v2;
  v3 = swift_allocObject();
  swift_weakInit();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v2;
  sub_23227B810();
  sub_232245044((unint64_t *)&qword_255FADDA8, (uint64_t (*)(uint64_t))sub_23227B810, MEMORY[0x24BDB9D10]);
  swift_retain();
  v5 = sub_2322B8C78();
  swift_release();
  swift_release();
  swift_release();
  *(_QWORD *)((char *)v1 + qword_255FADCD0) = v5;
  return swift_release();
}

uint64_t sub_232279D64(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;

  v4 = sub_2322B8918();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322B88D0();
  v8 = sub_2322B890C();
  v9 = sub_2322B9014();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v17 = a3;
    v11 = (uint8_t *)v10;
    v12 = swift_slowAlloc();
    v19 = v12;
    *(_DWORD *)v11 = 136315138;
    v13 = sub_2322B9464();
    v18 = sub_232266EA0(v13, v14, &v19);
    sub_2322B923C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_232241000, v8, v9, v17, v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234901170](v12, -1, -1);
    MEMORY[0x234901170](v11, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_232279EF4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20[5];

  v2 = sub_2322B8918();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (v6 == 2)
    {
      if (qword_255FAB900 != -1)
        swift_once();
      sub_2322B7F58();
      if (qword_255FAB930 == -1)
        goto LABEL_11;
LABEL_17:
      swift_once();
LABEL_11:
      v20[3] = sub_2322B82DC();
      v20[4] = sub_232245044(&qword_255FADD90, (uint64_t (*)(uint64_t))MEMORY[0x24BE427A0], MEMORY[0x24BE42790]);
      sub_23224FA10(v20);
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_2322B82D0();
      sub_2322B845C();
      swift_release();
      return sub_232258500((uint64_t)v20);
    }
    if (v6 == 1)
    {
      if (qword_255FAB900 != -1)
        swift_once();
      sub_2322B7F58();
      if (qword_255FAB930 == -1)
        goto LABEL_11;
      goto LABEL_17;
    }
    sub_2322B88D0();
    v8 = sub_2322B890C();
    v9 = sub_2322B8FFC();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = swift_slowAlloc();
      v17 = swift_slowAlloc();
      v19 = v17;
      *(_DWORD *)v10 = 136315394;
      v11 = sub_2322B9464();
      v18 = sub_232266EA0(v11, v12, &v19);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 2080;
      v18 = v6;
      type metadata accessor for HKVisionPrescriptionType(0);
      v13 = sub_2322B8E34();
      v18 = sub_232266EA0(v13, v14, &v19);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232241000, v8, v9, "[%s] unsupported vision prescription type %s", (uint8_t *)v10, 0x16u);
      v15 = v17;
      swift_arrayDestroy();
      MEMORY[0x234901170](v15, -1, -1);
      MEMORY[0x234901170](v10, -1, -1);
      swift_release();

    }
    else
    {

      swift_release();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return result;
}

void sub_23227A3C8()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_23227A3F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + qword_255FADCC8;
  v2 = sub_2322B8150();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_23227A470()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_2322B8468() + qword_255FADCC8;
  v1 = sub_2322B8150();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_23227A508()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);

  v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE439A8];
  sub_23227B6C8(0, &qword_255FADD58, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE439A8]);
  sub_23227AFF4(&qword_255FADD68, &qword_255FADD58, v0, MEMORY[0x24BE439B0]);
  sub_2322B9020();
  sub_2322B8780();
  sub_2322B9020();
  sub_2322B8828();
  sub_2322B9020();
  sub_2322B8804();
  sub_2322B9020();
  sub_2322B8240();
  return sub_2322B902C();
}

uint64_t sub_23227A5DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;

  v6 = sub_2322B8840();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23224BE78(0, &qword_255FADD70, (uint64_t (*)(uint64_t))MEMORY[0x24BE426D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v22 - v11;
  if (sub_2322B8E1C() == a1 && v13 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = sub_2322B93F8();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      v16 = sub_2322B8318();
      v17 = (uint64_t (*)(uint64_t))MEMORY[0x24BE42908];
      a3[3] = v16;
      a3[4] = sub_232245044(&qword_255FAC1E8, v17, MEMORY[0x24BE428F8]);
      sub_23224FA10(a3);
      return sub_2322B830C();
    }
  }
  if (qword_255FAB900 != -1)
    swift_once();
  sub_2322B7F58();
  v19 = sub_2322B82AC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v12, 1, 1, v19);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BE44C60], v6);
  v20 = sub_2322B82B8();
  v21 = (uint64_t (*)(uint64_t))MEMORY[0x24BE426E0];
  a3[3] = v20;
  a3[4] = sub_232245044(&qword_255FADD78, v21, MEMORY[0x24BE426C0]);
  sub_23224FA10(a3);
  return sub_2322B82A0();
}

uint64_t sub_23227A84C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, uint64_t);
  uint64_t v8;
  uint64_t v10;

  v0 = sub_2322B84EC();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v10 - v5;
  sub_2322B84B0();
  sub_2322B848C();
  v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v6, v0);
  sub_2322B8630();
  v8 = sub_2322B84E0();
  swift_unknownObjectRelease();
  v7(v4, v0);
  return v8;
}

uint64_t sub_23227A928@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_23227A5DC(a1, a2, a3);
}

uint64_t sub_23227A93C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  unint64_t i;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  unint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  _QWORD v52[4];

  v40 = a3;
  v5 = sub_2322B83F0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23227BBAC();
  v10 = v9;
  v51 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v41 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23224BE78(0, &qword_255FADDF0, v12, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (unint64_t *)((char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v14);
  v50 = (char *)&v39 - v17;
  result = sub_2322B842C();
  v19 = result;
  i = 0;
  v21 = *(_QWORD *)(result + 16);
  v48 = v8;
  v49 = result;
  v42 = v21;
  v43 = v16;
  v46 = v6;
  v47 = v5;
  v44 = v10;
  if (v21)
    goto LABEL_3;
LABEL_2:
  v22 = 1;
  for (i = v21; ; ++i)
  {
    v27 = v50;
    v26 = v51;
    (*(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v51 + 56))(v16, v22, 1, v10);
    sub_23227BC14((uint64_t)v16, (uint64_t)v27);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v27, 1, v10) == 1)
    {
      swift_bridgeObjectRelease();
      v38 = sub_2322B8150();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v40, 1, 1, v38);
    }
    v28 = *(_QWORD *)v27;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, &v27[*(int *)(v10 + 48)], v5);
    v29 = sub_2322B83D8();
    v30 = *(_QWORD *)(v29 + 16);
    if (v30)
      break;
    swift_bridgeObjectRelease();
LABEL_17:
    v8 = v48;
    v19 = v49;
    result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v48, v5);
    v16 = v43;
    v10 = v44;
    v21 = v42;
    if (i == v42)
      goto LABEL_2;
LABEL_3:
    if ((i & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_23:
      __break(1u);
      return result;
    }
    if (i >= *(_QWORD *)(v19 + 16))
      goto LABEL_23;
    v23 = v19
        + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
        + *(_QWORD *)(v6 + 72) * i;
    v24 = &v41[*(int *)(v10 + 48)];
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v24, v23, v5);
    v25 = (char *)v16 + *(int *)(v10 + 48);
    *v16 = i;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v25, v24, v5);
    v22 = 0;
  }
  v45 = v28;
  v31 = 0;
  v32 = v29 + 32;
  while (1)
  {
    sub_23225B0E8(v32, (uint64_t)v52);
    sub_232277A3C(v52, v52[3]);
    if (sub_2322B81BC() == a1 && v33 == a2)
      break;
    v35 = sub_2322B93F8();
    swift_bridgeObjectRelease();
    sub_232258500((uint64_t)v52);
    if ((v35 & 1) != 0)
      goto LABEL_20;
    ++v31;
    v32 += 40;
    if (v30 == v31)
    {
      swift_bridgeObjectRelease();
      v6 = v46;
      v5 = v47;
      goto LABEL_17;
    }
  }
  swift_bridgeObjectRelease();
  sub_232258500((uint64_t)v52);
LABEL_20:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v36 = v40;
  MEMORY[0x2348FF850](v31, v45);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v48, v47);
  v37 = sub_2322B8150();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v36, 0, 1, v37);
}

unint64_t sub_23227ACD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FADCB0;
  if (!qword_255FADCB0)
  {
    sub_23224BE78(255, &qword_255FADCB8, (uint64_t (*)(uint64_t))type metadata accessor for HKVisionPrescriptionType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2349010BC](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_255FADCB0);
  }
  return result;
}

uint64_t sub_23227AD38()
{
  return sub_232245044(&qword_255FADCC0, (uint64_t (*)(uint64_t))type metadata accessor for HKVisionPrescriptionType, (uint64_t)&unk_2322C0698);
}

uint64_t type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionMetadataDataSource()
{
  uint64_t result;

  result = qword_255FADD00;
  if (!qword_255FADD00)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23227ADA0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2322B8150();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23227AE3C()
{
  return type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionMetadataDataSource();
}

uint64_t getEnumTagSinglePayload for VisionPrescriptionManualDataEntryPrescriptionMetadataDataSource.VisionPrescriptionDateType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for VisionPrescriptionManualDataEntryPrescriptionMetadataDataSource.VisionPrescriptionDateType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23227AF20 + 4 * byte_2322C24A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23227AF54 + 4 * byte_2322C24A0[v4]))();
}

uint64_t sub_23227AF54(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23227AF5C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23227AF64);
  return result;
}

uint64_t sub_23227AF70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23227AF78);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23227AF7C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23227AF84(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_23227AF90(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionMetadataDataSource.VisionPrescriptionDateType()
{
  return &type metadata for VisionPrescriptionManualDataEntryPrescriptionMetadataDataSource.VisionPrescriptionDateType;
}

unint64_t sub_23227AFB0()
{
  unint64_t result;

  result = qword_255FADD50;
  if (!qword_255FADD50)
  {
    result = MEMORY[0x2349010BC](&unk_2322C261C, &type metadata for VisionPrescriptionManualDataEntryPrescriptionMetadataDataSource.VisionPrescriptionDateType);
    atomic_store(result, (unint64_t *)&qword_255FADD50);
  }
  return result;
}

uint64_t sub_23227AFF4(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_23227B6C8(255, a2, a3);
    result = MEMORY[0x2349010BC](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23227B034(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[2];

  sub_23224BE78(0, &qword_255FABDE8, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC408], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v27 - v6;
  sub_23227B6C8(0, &qword_255FADD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE42320]);
  v31 = *(_QWORD *)(v8 - 8);
  v32 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v28 = (char *)&v27 - v9;
  v10 = sub_2322B80B4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  MEMORY[0x2348FF838](1, 0);
  *(_QWORD *)(v2 + qword_255FADCD0) = 0;
  *(_QWORD *)(v2 + qword_255FADCD8) = 0;
  *(_QWORD *)(v2 + qword_255FADCE0) = 0;
  *(_BYTE *)(v2 + qword_255FADCE8) = 2;
  *(_QWORD *)(v2 + qword_255FADCF0) = a2;
  *(_BYTE *)(v2 + qword_255FADCF8) = a1;
  swift_retain();
  swift_release();
  v33[0] = 0;
  v33[1] = 0xE000000000000000;
  sub_2322B92CC();
  swift_bridgeObjectRelease();
  strcpy((char *)v33, "MutableArray<");
  HIWORD(v33[1]) = -4864;
  sub_2322B80A8();
  sub_2322B8090();
  v29 = *(void (**)(char *, uint64_t))(v11 + 8);
  v30 = v10;
  v29(v13, v10);
  sub_2322B8EAC();
  swift_bridgeObjectRelease();
  sub_2322B8EAC();
  v14 = sub_2322B8420();
  v15 = qword_255FAB900;
  swift_retain();
  if (v15 != -1)
    swift_once();
  sub_2322B7F58();
  v16 = sub_2322B899C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v7, 1, 1, v16);
  swift_retain_n();
  sub_2322B80A8();
  type metadata accessor for HKVisionPrescriptionType(0);
  sub_232245044(&qword_255FADD60, (uint64_t (*)(uint64_t))type metadata accessor for HKVisionPrescriptionType, (uint64_t)&protocol conformance descriptor for HKVisionPrescriptionType);
  v17 = v28;
  sub_2322B8264();
  sub_23224BE78(0, &qword_255FAC200, (uint64_t (*)(uint64_t))sub_2322515F4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_2322C2050;
  v19 = v32;
  *(_QWORD *)(v18 + 56) = v32;
  *(_QWORD *)(v18 + 64) = sub_23227AFF4(&qword_255FADD88, &qword_255FADD80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE42320], MEMORY[0x24BE42328]);
  v20 = sub_23224FA10((uint64_t *)(v18 + 32));
  (*(void (**)(uint64_t *, char *, uint64_t))(v31 + 16))(v20, v17, v19);
  sub_2322B7F58();
  if (qword_255FAB930 != -1)
    swift_once();
  v21 = sub_2322B82DC();
  v22 = (uint64_t (*)(uint64_t))MEMORY[0x24BE427A0];
  *(_QWORD *)(v18 + 96) = v21;
  *(_QWORD *)(v18 + 104) = sub_232245044(&qword_255FADD90, v22, MEMORY[0x24BE42790]);
  sub_23224FA10((uint64_t *)(v18 + 72));
  swift_retain_n();
  swift_bridgeObjectRetain();
  sub_2322B82D0();
  v23 = sub_2322B85DC();
  v24 = (uint64_t (*)(uint64_t))MEMORY[0x24BE43B30];
  *(_QWORD *)(v18 + 136) = v23;
  v25 = sub_232245044(&qword_255FADD98, v24, MEMORY[0x24BE43B20]);
  *(_QWORD *)(v18 + 144) = v25;
  sub_23224FA10((uint64_t *)(v18 + 112));
  sub_232278B40(0);
  *(_QWORD *)(v18 + 176) = v23;
  *(_QWORD *)(v18 + 184) = v25;
  sub_23224FA10((uint64_t *)(v18 + 152));
  sub_232278B40(1);
  sub_23224BE78(0, (unint64_t *)&unk_255FADB00, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_2322B83F0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_2322C0E70;
  swift_retain();
  sub_2322B80A8();
  sub_2322B8090();
  v29(v13, v30);
  sub_2322B83E4();
  sub_2322B8438();
  swift_release();
  swift_bridgeObjectRelease();
  sub_232279C30();
  sub_2322798E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v17, v32);
  return v14;
}

void sub_23227B6C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    type metadata accessor for HKVisionPrescriptionType(255);
    v7 = v6;
    v8 = sub_232245044(&qword_255FADD60, (uint64_t (*)(uint64_t))type metadata accessor for HKVisionPrescriptionType, (uint64_t)&protocol conformance descriptor for HKVisionPrescriptionType);
    v9 = a3(a1, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_23227B744@<X0>(uint64_t a1@<X8>)
{
  return sub_232278AA8(a1);
}

uint64_t sub_23227B74C(uint64_t a1, uint64_t a2)
{
  return sub_232278AF4(a1, a2);
}

uint64_t sub_23227B754()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23227B784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_232284FC4(a2, a3);
}

uint64_t sub_23227B790()
{
  return swift_deallocObject();
}

uint64_t sub_23227B7A0(uint64_t a1)
{
  uint64_t v1;

  return sub_232279D64(a1, *(_QWORD *)(v1 + 16), "[%s] prescriptionTypeCancellable completed.");
}

uint64_t sub_23227B7C0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23227B7E4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23227B808(uint64_t *a1)
{
  return sub_232279EF4(a1);
}

void sub_23227B810()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FADDA0)
  {
    type metadata accessor for HKVisionPrescriptionType(255);
    v0 = sub_2322B8B64();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FADDA0);
  }
}

uint64_t sub_23227B874()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + qword_255FADCF0) + 40) + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23227B8B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2322851A8(a2, a3);
}

uint64_t sub_23227B8E0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + qword_255FADCF0) + 48) + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23227B91C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_232284FC4(a2, a3);
}

void sub_23227B94C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FADDB0)
  {
    sub_23227B9D0();
    sub_232245044(&qword_255FADDC0, (uint64_t (*)(uint64_t))sub_23227B9D0, MEMORY[0x24BDB9D10]);
    v0 = sub_2322B8A44();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FADDB0);
  }
}

void sub_23227B9D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FADDB8)
  {
    sub_23224BE78(255, &qword_255FABC68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v0 = sub_2322B8B64();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FADDB8);
  }
}

uint64_t sub_23227BA4C()
{
  return swift_deallocObject();
}

uint64_t sub_23227BA5C(uint64_t a1)
{
  uint64_t v1;

  return sub_232279D64(a1, *(_QWORD *)(v1 + 16), "[%s] dateIssuedCancellable completed.");
}

uint64_t sub_23227BA7C()
{
  return sub_232279A98();
}

uint64_t sub_23227BA84()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23227BAA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 16);
  sub_23227BAE8();
  return v3(a1, a1 + *(int *)(v4 + 48));
}

void sub_23227BAE8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255FADDD0)
  {
    sub_23224BE78(255, &qword_255FABC68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255FADDD0);
  }
}

uint64_t sub_23227BB60()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23227BB84@<X0>(uint64_t a1@<X8>)
{
  return sub_232278E70(a1);
}

uint64_t sub_23227BBA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_232278F38(a1, a2, *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24));
}

void sub_23227BBAC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255FADDE8)
  {
    sub_2322B83F0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255FADDE8);
  }
}

uint64_t sub_23227BC14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23224BE78(0, &qword_255FADDF0, (uint64_t (*)(uint64_t))sub_23227BBAC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23227BC70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_232278CF8(a1, a2, *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24));
}

uint64_t sub_23227BC7C(uint64_t a1)
{
  uint64_t v1;

  return sub_232278E14(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t type metadata accessor for VisionPrescriptionManualDataEntryViewController()
{
  uint64_t result;

  result = qword_255FADE40;
  if (!qword_255FADE40)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23227BCD8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_23227BD48(char a1)
{
  if (a1)
  {
    if (qword_255FAB900 == -1)
      return sub_2322B7F58();
    goto LABEL_6;
  }
  if (qword_255FAB900 != -1)
LABEL_6:
    swift_once();
  return sub_2322B7F58();
}

uint64_t sub_23227BE34(void *a1, void *a2, uint64_t a3, _QWORD *a4, void *a5, char a6)
{
  char *v6;
  char *v7;
  char *v13;
  id v14;
  uint64_t v15;
  uint64_t result;
  id v17;
  void *v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  char v28;
  uint64_t v29;
  id v30;
  _QWORD *v31;
  id v32;
  id v33;
  id v34;
  _QWORD *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  void *v45;

  v7 = v6;
  v6[qword_255FADE38] = a6;
  if (!a2)
  {
    *(_QWORD *)&v6[qword_255FADE28] = 0;
    v21 = v6;
    goto LABEL_14;
  }
  v13 = v6;
  sub_232277934(a2, (void *)a3, (uint64_t)a4, a5);
  sub_2322779FC(a3, (uint64_t)a4, a5);
  *(_QWORD *)&v13[qword_255FADE28] = a2;
  v14 = a2;
  sub_232277978((id)a3, (uint64_t)a4, a5);

  if (!a3)
  {
LABEL_14:
    v19 = 0;
    v20 = 0;
    v18 = 0;
LABEL_15:
    v22 = (void *)objc_opt_self();
    sub_23227DFF4(v18, v20, v19);
    v23 = objc_msgSend(v22, sel_defaultManager);
    v24 = objc_allocWithZone((Class)type metadata accessor for VisionPrescriptionManualDataEntryImageSelectionHandler());
    v41 = v20;
    v42 = v19;
    v25 = sub_232298D94(v18, v20, v19, v23);
    *(_QWORD *)&v7[qword_255FADE18] = v25;
    if (v18)
      v26 = v18;
    *(_QWORD *)&v7[qword_255FADE30] = v18;
    v44 = (uint64_t)a4;
    v45 = a5;
    v43 = v7;
    if (a2)
    {
      sub_232277934(a2, (void *)a3, (uint64_t)a4, a5);
      v27 = v25;
      sub_2322779FC(a3, (uint64_t)a4, a5);
      v28 = a6;
      if (a3)
      {
        swift_bridgeObjectRetain();
        v29 = a3;
LABEL_22:
        type metadata accessor for VisionPrescriptionManualDataEntryManager();
        v31 = (_QWORD *)swift_allocObject();
        v31[8] = 0;
        v31[2] = a1;
        v31[3] = 0;
        v31[4] = a2;
        v31[5] = v29;
        type metadata accessor for VisionPrescriptionManualDataEntryContext();
        swift_allocObject();
        v32 = a2;
        v33 = v25;
        v34 = a1;
        v35 = sub_2322867F8(a2, v28, v34);

        v31[6] = v35;
        v31[7] = v33;
        *(_QWORD *)&v43[qword_255FADE20] = v31;
        type metadata accessor for VisionPrescriptionManualDataEntryDataSource();
        swift_allocObject();
        v36 = v33;
        swift_retain();
        v37 = sub_2322A96B0(v28, v36, (uint64_t)v31);

        sub_2322B863C();
        sub_23224BE78(0, (unint64_t *)&qword_255FAC3C8, (uint64_t (*)(uint64_t))sub_23227E148, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
        v38 = swift_allocObject();
        *(_OWORD *)(v38 + 16) = xmmword_2322C0E70;
        v39 = MEMORY[0x24BE43D68];
        *(_QWORD *)(v38 + 32) = v37;
        *(_QWORD *)(v38 + 40) = v39;
        swift_retain();
        sub_2322B8660();
        v40 = sub_2322B884C();
        sub_2322779B8(a2, a3, v44, v45);
        swift_release();

        sub_23227E198(v18, v41, v42);
        return v40;
      }
    }
    else
    {
      v28 = a6;
      v30 = v25;
    }
    v29 = MEMORY[0x24BEE4AF8];
    goto LABEL_22;
  }
  if (!((unint64_t)a3 >> 62))
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v15)
      goto LABEL_5;
LABEL_13:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  result = sub_2322B9368();
  if (!result)
    goto LABEL_13;
LABEL_5:
  if ((a3 & 0xC000000000000001) != 0)
  {
    v17 = (id)MEMORY[0x2349009FC](0, a3);
    goto LABEL_8;
  }
  if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v17 = *(id *)(a3 + 32);
LABEL_8:
    v18 = v17;
    swift_bridgeObjectRelease();
    if (a4[2])
    {
      v20 = a4[4];
      v19 = a4[5];
      sub_2322611D0(v20, v19);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      goto LABEL_15;
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

void sub_23227C23C(void *a1)
{
  id v1;

  v1 = a1;
  sub_23227E1CC();

}

void sub_23227C270()
{
  sub_2322B9350();
  __break(1u);
}

void sub_23227C2C8(void *a1)
{
  id v1;
  objc_super v2;

  v1 = a1;
  sub_23227C318();
  sub_232268814();
  v2.receiver = v1;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionManualDataEntryViewController();
  objc_msgSendSuper2(&v2, sel_viewDidLoad);

}

void sub_23227C318()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  void *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  _QWORD v18[4];

  v1 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v1, sel_setLargeTitleDisplayMode_, 2);

  v2 = objc_msgSend(v0, sel_navigationItem);
  if (qword_255FAB900 != -1)
    swift_once();
  sub_2322B7F58();
  v3 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setTitle_, v3);

  v4 = objc_msgSend(v0, sel_presentingViewController);
  if (v4)
  {
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD410]), sel_initWithBarButtonSystemItem_target_action_, 1, v0, sel_cancelAndDismiss_);
    v6 = objc_msgSend(v0, sel_navigationItem);
    objc_msgSend(v6, sel_setLeftBarButtonItem_, v5);

  }
  sub_23227BD48(*((_BYTE *)v0 + qword_255FADE38));
  v7 = type metadata accessor for VisionPrescriptionManualDataEntryViewController();
  v18[3] = v7;
  v18[0] = v0;
  v8 = v0;
  v9 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  if (v7)
  {
    v10 = sub_232277A3C(v18, v7);
    v11 = *(_QWORD *)(v7 - 8);
    MEMORY[0x24BDAC7A8](v10);
    v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v11 + 16))(v13);
    v14 = sub_2322B93E0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v7);
    sub_232258500((uint64_t)v18);
  }
  else
  {
    v14 = 0;
  }
  v15 = objc_allocWithZone(MEMORY[0x24BEBD410]);
  v16 = objc_msgSend(v15, sel_initWithTitle_style_target_action_, v9, 0, v14, sel_rightButtonTapped_, v18[0]);

  swift_unknownObjectRelease();
  v17 = objc_msgSend(v8, sel_navigationItem);
  objc_msgSend(v17, sel_setRightBarButtonItem_, v16);

}

uint64_t sub_23227C618(void *a1)
{
  id v2;
  uint64_t v4;

  swift_unknownObjectRetain();
  v2 = a1;
  sub_2322B926C();
  swift_unknownObjectRelease();
  objc_msgSend(v2, sel_dismissViewControllerAnimated_completion_, 1, 0);

  return sub_232258500((uint64_t)&v4);
}

void sub_23227C688()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  unsigned int v8;
  id v9;
  char v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  void *v38;
  void *v39;
  id v40;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  void *v47;
  uint64_t aBlock[7];

  v1 = v0;
  swift_getObjectType();
  v2 = sub_2322B8918();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(v0, sel_collectionView);
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v6, sel_endEditing_, 1);

    v9 = sub_232291740();
    v10 = v8;
    if (BYTE1(v8) != 4)
    {
      v11 = v8 >> 8;
      v47 = v9;
      sub_23227CCE8(SBYTE1(v8));
      v13 = v12;
      v15 = v14;
      v17 = v16;
      v19 = v18;
      v20 = swift_allocObject();
      *(_BYTE *)(v20 + 16) = v11;
      *(_QWORD *)(v20 + 24) = v1;
      v21 = v1;
      sub_23227DA98(v13, v15, v17, v19, (uint64_t)sub_23227E384, v20);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    if (v9)
    {
      v47 = v9;
      if (v8 == 2)
      {
        if (*((_BYTE *)v1 + qword_255FADE38))
        {
          sub_23227D65C(v47);
LABEL_8:

          return;
        }
        v43 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v44 = swift_allocObject();
        *(_QWORD *)(v44 + 16) = v43;
        v45 = v47;
        *(_QWORD *)(v44 + 24) = v47;
        v46 = v45;
        swift_retain();
        sub_232292158(v46, (void (*)(uint64_t))sub_23227E344, v44);

        swift_release();
        swift_release();
      }
      else
      {
        sub_23227E238();
        v28 = v47;
        v29 = sub_23227D1C4(v10 & 1);
        v33 = sub_2322915BC(v29, v30, v31, v32);
        if (qword_255FAB900 != -1)
          swift_once();
        sub_2322B7F58();
        v34 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v35 = swift_allocObject();
        *(_QWORD *)(v35 + 16) = v34;
        *(_QWORD *)(v35 + 24) = v28;
        v36 = v28;
        swift_retain();
        v37 = (void *)sub_2322B8DEC();
        swift_bridgeObjectRelease();
        aBlock[4] = (uint64_t)sub_23227E338;
        aBlock[5] = v35;
        aBlock[0] = MEMORY[0x24BDAC760];
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_2322561FC;
        aBlock[3] = (uint64_t)&unk_250113C90;
        v38 = _Block_copy(aBlock);
        swift_release();
        v39 = (void *)objc_opt_self();
        v40 = objc_msgSend(v39, sel_actionWithTitle_style_handler_, v37, 0, v38);
        _Block_release(v38);
        swift_release();

        objc_msgSend(v33, sel_addAction_, v40);
        sub_2322B7F58();
        v41 = (void *)sub_2322B8DEC();
        swift_bridgeObjectRelease();
        v42 = objc_msgSend(v39, sel_actionWithTitle_style_handler_, v41, 0, 0);

        objc_msgSend(v33, sel_addAction_, v42);
        objc_msgSend(v1, sel_presentViewController_animated_completion_, v33, 1, 0);

      }
    }
    else
    {
      sub_2322B88DC();
      v22 = sub_2322B890C();
      v23 = sub_2322B8FFC();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc();
        v25 = swift_slowAlloc();
        *(_DWORD *)v24 = 136315138;
        v47 = v24 + 4;
        aBlock[0] = v25;
        v26 = sub_2322B9464();
        aBlock[6] = sub_232266EA0(v26, v27, aBlock);
        sub_2322B923C();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_232241000, v22, v23, "[%s] There should have been an error if there's no prescription to save.", v24, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x234901170](v25, -1, -1);
        MEMORY[0x234901170](v24, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      if (qword_255FAB938 != -1)
        swift_once();
      sub_23227DA98(qword_255FADDF8, unk_255FADE00, qword_255FADE08, unk_255FADE10, 0, 0);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_23227CCE8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23227CD1C()
{
  uint64_t v0;

  if (qword_255FAB900 != -1)
    swift_once();
  v0 = sub_2322B7F58();
  sub_2322B7F58();
  return v0;
}

void sub_23227D018(unsigned __int8 a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;

  v3 = a1;
  sub_23224BE78(0, (unint64_t *)&qword_255FAEE60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v17 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v17 - v11;
  if (v3 == 3)
  {
    v13 = *(void **)(*(_QWORD *)(a2 + qword_255FADE20) + 56);
    v14 = sub_2322B8000();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v12, 1, 1, v14);
    swift_getKeyPath();
    swift_getKeyPath();
    v15 = v13;
    sub_2322B8BF4();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_232262F20((uint64_t)v12, (uint64_t)v7);
    v16 = v15;
    sub_2322B8C00();
    sub_2322988B4((uint64_t)v10);
    sub_232245D20((uint64_t)v12);
    sub_232245D20((uint64_t)v10);

  }
}

uint64_t sub_23227D1C4(char a1)
{
  uint64_t v1;

  if ((a1 & 1) != 0)
  {
    if (qword_255FAB900 != -1)
      swift_once();
  }
  else if (qword_255FAB900 != -1)
  {
    swift_once();
  }
  v1 = sub_2322B7F58();
  sub_2322B7F58();
  return v1;
}

void sub_23227D384(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = a2 + 16;
  swift_beginAccess();
  v5 = MEMORY[0x2349011D0](v4);
  if (v5)
  {
    v6 = (void *)v5;
    if (*(_BYTE *)(v5 + qword_255FADE38))
    {
      sub_23227D65C(a3);

    }
    else
    {
      v7 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v8 = swift_allocObject();
      *(_QWORD *)(v8 + 16) = v7;
      *(_QWORD *)(v8 + 24) = a3;
      swift_retain();
      sub_232292158(a3, (void (*)(uint64_t))sub_23227E3D0, v8);

      swift_release();
      swift_release();
    }
  }
}

uint64_t sub_23227D480(void *a1)
{
  id v2;
  uint64_t v4;

  swift_unknownObjectRetain();
  v2 = a1;
  sub_2322B926C();
  swift_unknownObjectRelease();
  sub_23227C688();

  return sub_232258500((uint64_t)&v4);
}

uint64_t sub_23227D4DC(char a1)
{
  uint64_t v1;

  if (a1 == 2)
  {
    if (qword_255FAB900 != -1)
      swift_once();
    v1 = sub_2322B7F58();
    sub_2322B7F58();
  }
  else
  {
    if (qword_255FAB938 != -1)
      swift_once();
    v1 = qword_255FADDF8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v1;
}

uint64_t sub_23227D65C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  swift_getObjectType();
  v4 = sub_2322B8918();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v2 + qword_255FADE28))
  {
    v8 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = v8;
    *(_QWORD *)(v9 + 24) = a1;
    swift_retain();
    v10 = a1;
    sub_232292B08((void (*)(uint64_t))sub_23227E318, v9);
    swift_release();
    return swift_release();
  }
  else
  {
    sub_2322B88DC();
    v12 = sub_2322B890C();
    v13 = sub_2322B8FFC();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v19 = v15;
      *(_DWORD *)v14 = 136315138;
      v16 = sub_2322B9464();
      v18 = sub_232266EA0(v16, v17, &v19);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232241000, v12, v13, "[%s] No initial vision prescription found to edit. Skipping editing", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234901170](v15, -1, -1);
      MEMORY[0x234901170](v14, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

void sub_23227D89C(char a1, uint64_t a2, id a3, int a4)
{
  uint64_t v4;
  uint64_t v7;
  void *v8;
  int v9;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;

  v4 = a2 + 16;
  if (a1 == 6)
  {
    if (objc_msgSend(a3, sel_prescriptionType) == (id)1)
    {
      swift_beginAccess();
      v7 = MEMORY[0x2349011D0](v4);
      if (!v7)
        goto LABEL_11;
      v8 = (void *)v7;
      swift_retain();

      swift_retain();
      swift_release();
      swift_retain();
      swift_release();
      v9 = 2;
    }
    else
    {
      if (objc_msgSend(a3, sel_prescriptionType) != (id)2)
        goto LABEL_11;
      swift_beginAccess();
      v17 = MEMORY[0x2349011D0](v4);
      if (!v17)
        goto LABEL_11;
      v18 = (void *)v17;
      swift_retain();

      swift_retain();
      swift_release();
      swift_retain();
      swift_release();
      v9 = 3;
    }
    sub_2322B5264(v9, 0, 0, a4);
    swift_release();
LABEL_11:
    swift_beginAccess();
    v19 = (void *)MEMORY[0x2349011D0](v4);
    if (v19)
    {
      v20 = v19;
      objc_msgSend(v19, sel_dismissViewControllerAnimated_completion_, 1, 0);

    }
    return;
  }
  swift_beginAccess();
  v11 = MEMORY[0x2349011D0](v4);
  if (v11)
  {
    v12 = (void *)v11;
    v13 = sub_23227D4DC(a1);
    sub_23227DA98(v13, v14, v15, v16, 0, 0);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_23227DA98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  void *v7;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  _QWORD aBlock[6];

  v7 = v6;
  sub_23227E238();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = sub_2322915BC(a1, a2, a3, a4);
  if (qword_255FAB900 != -1)
    swift_once();
  sub_2322B7F58();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a5;
  *(_QWORD *)(v15 + 24) = a6;
  sub_23227E2C8(a5);
  v16 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_23227E2A0;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2322561FC;
  aBlock[3] = &unk_250113BF0;
  v17 = _Block_copy(aBlock);
  swift_release();
  v18 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_handler_, v16, 0, v17, 0xE000000000000000);
  _Block_release(v17);

  objc_msgSend(v14, sel_addAction_, v18);
  objc_msgSend(v7, sel_presentViewController_animated_completion_, v14, 1, 0);

}

void sub_23227DCB4(void *a1)
{
  id v1;
  id v2;
  id v3;

  v1 = a1;
  v2 = objc_msgSend(v1, sel_view);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, sel_endEditing_, 1);

  }
  else
  {
    __break(1u);
  }
}

void sub_23227DD14()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_23227DD40(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_23227DD70()
{
  uint64_t v0;

  swift_release();
}

id sub_23227DDBC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionManualDataEntryViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_23227DDF0(uint64_t a1)
{

  swift_release();
}

uint64_t sub_23227DE48()
{
  return type metadata accessor for VisionPrescriptionManualDataEntryViewController();
}

uint64_t getEnumTagSinglePayload for VisionPrescriptionManualDataEntryMode(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for VisionPrescriptionManualDataEntryMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23227DF2C + 4 * byte_2322C26D9[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23227DF60 + 4 * byte_2322C26D4[v4]))();
}

uint64_t sub_23227DF60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23227DF68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23227DF70);
  return result;
}

uint64_t sub_23227DF7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23227DF84);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23227DF88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23227DF90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VisionPrescriptionManualDataEntryMode()
{
  return &type metadata for VisionPrescriptionManualDataEntryMode;
}

unint64_t sub_23227DFB0()
{
  unint64_t result;

  result = qword_255FADE90;
  if (!qword_255FADE90)
  {
    result = MEMORY[0x2349010BC](&unk_2322C27A8, &type metadata for VisionPrescriptionManualDataEntryMode);
    atomic_store(result, (unint64_t *)&qword_255FADE90);
  }
  return result;
}

void *sub_23227DFF4(void *result, uint64_t a2, unint64_t a3)
{
  id v5;

  if (result)
  {
    v5 = result;
    return (void *)sub_2322611D0(a2, a3);
  }
  return result;
}

uint64_t sub_23227E028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  if (qword_255FAB900 != -1)
    swift_once();
  v0 = sub_2322B7F58();
  v2 = v1;
  result = sub_2322B7F58();
  qword_255FADDF8 = v0;
  unk_255FADE00 = v2;
  qword_255FADE08 = result;
  unk_255FADE10 = v4;
  return result;
}

unint64_t sub_23227E148()
{
  unint64_t result;

  result = qword_255FADA30;
  if (!qword_255FADA30)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255FADA30);
  }
  return result;
}

void *sub_23227E198(void *result, uint64_t a2, unint64_t a3)
{
  if (result)
  {

    return (void *)sub_232261214(a2, a3);
  }
  return result;
}

uint64_t sub_23227E1CC()
{
  uint64_t v0;
  unsigned int v1;

  v1 = 0x10100u >> (8 * *(_BYTE *)(v0 + qword_255FADE38));
  swift_retain();
  sub_2322B5264(v1, 0, 0, v1);
  return swift_release();
}

unint64_t sub_23227E238()
{
  unint64_t result;

  result = qword_255FADE98;
  if (!qword_255FADE98)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255FADE98);
  }
  return result;
}

uint64_t sub_23227E274()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_23227E2A0()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1)
    return v1();
  return result;
}

uint64_t sub_23227E2C8(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_23227E2D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23227E2E8()
{
  return swift_release();
}

uint64_t sub_23227E2F0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_23227E318(char a1)
{
  uint64_t v1;

  sub_23227D89C(a1, *(_QWORD *)(v1 + 16), *(id *)(v1 + 24), 1);
}

void sub_23227E338(uint64_t a1)
{
  uint64_t v1;

  sub_23227D384(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_23227E344(char a1)
{
  uint64_t v1;

  sub_23227D89C(a1, *(_QWORD *)(v1 + 16), *(id *)(v1 + 24), 0);
}

uint64_t sub_23227E360()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_23227E384()
{
  uint64_t v0;

  sub_23227D018(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23227E39C()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t getEnumTagSinglePayload for VisionPrescriptionManualDataEntryMeasurementField(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for VisionPrescriptionManualDataEntryMeasurementField(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_23227E4B0 + 4 * byte_2322C2825[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_23227E4E4 + 4 * byte_2322C2820[v4]))();
}

uint64_t sub_23227E4E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23227E4EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23227E4F4);
  return result;
}

uint64_t sub_23227E500(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23227E508);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_23227E50C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23227E514(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VisionPrescriptionManualDataEntryMeasurementField()
{
  return &type metadata for VisionPrescriptionManualDataEntryMeasurementField;
}

unint64_t sub_23227E534()
{
  unint64_t result;

  result = qword_255FADEA0;
  if (!qword_255FADEA0)
  {
    result = MEMORY[0x2349010BC](&unk_2322C28B4, &type metadata for VisionPrescriptionManualDataEntryMeasurementField);
    atomic_store(result, (unint64_t *)&qword_255FADEA0);
  }
  return result;
}

uint64_t sub_23227E578(uint64_t a1, char a2, unsigned __int8 a3)
{
  uint64_t result;
  uint64_t v5;

  if ((a2 & 1) == 0 || (result = sub_23227E9E0(a1, a3), !v5))
    __asm { BR              X10 }
  return result;
}

uint64_t sub_23227E9E0(uint64_t a1, unsigned __int8 a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v3 = a2;
  v4 = sub_2322B8918();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v3 == 4)
  {
    if (qword_255FAB900 != -1)
      swift_once();
    sub_2322B7F58();
    sub_232268A7C();
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_2322C0E70;
    v9 = sub_232273488(a1);
    v11 = v10;
    *(_QWORD *)(v8 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v8 + 64) = sub_23224EC60();
    *(_QWORD *)(v8 + 32) = v9;
    *(_QWORD *)(v8 + 40) = v11;
    v12 = sub_2322B8E28();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2322B88DC();
    v13 = sub_2322B890C();
    v14 = sub_2322B8FFC();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v19 = v16;
      *(_DWORD *)v15 = 136315138;
      v18 = sub_232266EA0(0xD000000000000031, 0x80000002322C2820, &v19);
      sub_2322B923C();
      _os_log_impl(&dword_232241000, v13, v14, "[%s] Abbreviated title text is only supported for pupillary distance.", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234901170](v16, -1, -1);
      MEMORY[0x234901170](v15, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return 0;
  }
  return v12;
}

uint64_t type metadata accessor for VisionPrescriptionManualDataEntryAddImageButtonCell()
{
  uint64_t result;

  result = qword_255FADEA8;
  if (!qword_255FADEA8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23227ECC4()
{
  return swift_initClassMetadata2();
}

id sub_23227ED00(void *a1, uint64_t a2, uint64_t a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for VisionPrescriptionManualDataEntryAddImageButtonCell();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_23227ED48()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionManualDataEntryAddImageButtonCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23227ED7C()
{
  return type metadata accessor for VisionPrescriptionManualDataEntryAddImageButtonCell();
}

uint64_t type metadata accessor for VisionPrescriptionSingleFieldCell()
{
  uint64_t result;

  result = qword_255FADF18;
  if (!qword_255FADF18)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23227EDC0()
{
  return swift_initClassMetadata2();
}

id sub_23227EE20(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  char *v10;
  uint64_t v11;
  id v12;
  char *v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  objc_super v21;

  v5 = v4;
  v10 = &v4[qword_255FADEF8];
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((_QWORD *)v10 + 4) = 0;
  v11 = qword_255FADF00;
  v12 = objc_allocWithZone(MEMORY[0x24BEBD708]);
  v13 = v5;
  v14 = objc_msgSend(v12, sel_init);
  objc_msgSend(v14, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_23224C618(0, (unint64_t *)&unk_255FACCD0);
  v15 = (void *)sub_2322B9128();
  objc_msgSend(v14, sel_setFont_, v15);

  objc_msgSend(v14, sel_setTextAlignment_, 4);
  objc_msgSend(v14, sel_setNumberOfLines_, 0);
  objc_msgSend(v14, sel_setAdjustsFontForContentSizeCategory_, 1);
  *(_QWORD *)&v5[v11] = v14;
  v16 = qword_255FADF08;
  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  objc_msgSend(v17, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v18 = (void *)sub_2322B9128();
  objc_msgSend(v17, sel_setFont_, v18);

  objc_msgSend(v17, sel_setTextAlignment_, 4);
  objc_msgSend(v17, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v17, sel_setNumberOfLines_, 0);
  *(_QWORD *)&v13[v16] = v17;
  *(_QWORD *)&v13[qword_255FADF10] = 0;

  v21.receiver = v13;
  v21.super_class = (Class)type metadata accessor for VisionPrescriptionSingleFieldCell();
  v19 = objc_msgSendSuper2(&v21, sel_initWithFrame_, a1, a2, a3, a4);
  sub_23227F0C8();

  return v19;
}

id sub_23227F084(double a1, double a2, double a3, double a4)
{
  return sub_23227EE20(a1, a2, a3, a4);
}

void sub_23227F0A4(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_23227F9CC();
}

void sub_23227F0C8()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;

  objc_msgSend(v0, sel_setUserInteractionEnabled_, 0);
  v1 = objc_msgSend(v0, sel_contentView);
  v2 = *(void **)&v0[qword_255FADF00];
  objc_msgSend(v1, sel_addSubview_, v2);

  v3 = objc_msgSend(v0, sel_contentView);
  v4 = *(void **)&v0[qword_255FADF08];
  objc_msgSend(v3, sel_addSubview_, v4);

  v33 = (void *)objc_opt_self();
  sub_23224ECA4();
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2322C2920;
  v6 = objc_msgSend(v2, sel_topAnchor);
  v7 = objc_msgSend(v0, sel_contentView);
  v8 = objc_msgSend(v7, sel_topAnchor);

  v9 = objc_msgSend(v6, sel_constraintEqualToAnchor_constant_, v8, 9.0);
  *(_QWORD *)(v5 + 32) = v9;
  v10 = objc_msgSend(v2, sel_leadingAnchor);
  v11 = objc_msgSend(v0, sel_contentView);
  v12 = objc_msgSend(v11, (SEL)&off_250119130 + 6);

  v13 = objc_msgSend(v10, sel_constraintEqualToAnchor_constant_, v12, 16.0);
  *(_QWORD *)(v5 + 40) = v13;
  v14 = objc_msgSend(v0, sel_contentView);
  v15 = objc_msgSend(v14, sel_trailingAnchor);

  v16 = objc_msgSend(v2, (SEL)&selRef_CGColor);
  v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_constant_, v16, 16.0);

  *(_QWORD *)(v5 + 48) = v17;
  v18 = objc_msgSend(v4, sel_topAnchor);
  v19 = objc_msgSend(v2, sel_bottomAnchor);
  v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v19, 7.0);

  *(_QWORD *)(v5 + 56) = v20;
  v21 = objc_msgSend(v0, sel_contentView);
  v22 = objc_msgSend(v21, sel_bottomAnchor);

  v23 = objc_msgSend(v4, sel_bottomAnchor);
  v24 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v23, 20.0);

  *(_QWORD *)(v5 + 64) = v24;
  v25 = objc_msgSend(v4, sel_leadingAnchor);
  v26 = objc_msgSend(v0, sel_contentView);
  v27 = objc_msgSend(v26, sel_leadingAnchor);

  v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_constant_, v27, 16.0);
  *(_QWORD *)(v5 + 72) = v28;
  v29 = objc_msgSend(v0, sel_contentView);
  v30 = objc_msgSend(v29, sel_trailingAnchor);

  v31 = objc_msgSend(v4, sel_trailingAnchor);
  v32 = objc_msgSend(v30, sel_constraintEqualToAnchor_constant_, v31, 16.0);

  *(_QWORD *)(v5 + 80) = v32;
  sub_2322B8F3C();
  sub_23224C618(0, (unint64_t *)&qword_255FABD30);
  v34 = (id)sub_2322B8F24();
  swift_bridgeObjectRelease();
  objc_msgSend(v33, sel_activateConstraints_, v34);

}

void sub_23227F550()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  _BYTE v10[24];
  uint64_t v11;

  v1 = v0 + qword_255FADEF8;
  swift_beginAccess();
  sub_23224E5FC(v1, (uint64_t)v10);
  if (v11)
  {
    sub_2322515F4();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v2 = *(void **)(v0 + qword_255FADF00);
      v3 = (void *)sub_2322B8DEC();
      objc_msgSend(v2, sel_setText_, v3);

      if (v9)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v4 = *(void **)(v0 + qword_255FADF08);
        v5 = (void *)sub_2322B8DEC();
        swift_bridgeObjectRelease();
        objc_msgSend(v4, sel_setText_, v5);

        v6 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v4 = *(void **)(v0 + qword_255FADF08);
        if (qword_255FAB900 != -1)
          swift_once();
        sub_2322B7F58();
        v7 = (void *)sub_2322B8DEC();
        swift_bridgeObjectRelease();
        objc_msgSend(v4, sel_setText_, v7, 0xE000000000000000);

        v6 = objc_msgSend((id)objc_opt_self(), sel_tertiaryLabelColor);
      }
      v8 = v6;
      objc_msgSend(v4, sel_setTextColor_, v8);

    }
  }
  else
  {
    sub_23224E5A0((uint64_t)v10);
  }
}

void sub_23227F7B8()
{
  uint64_t v0;

  sub_23224E5A0(v0 + qword_255FADEF8);

}

id sub_23227F804()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionSingleFieldCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_23227F838(uint64_t a1)
{
  sub_23224E5A0(a1 + qword_255FADEF8);

}

uint64_t sub_23227F890()
{
  return type metadata accessor for VisionPrescriptionSingleFieldCell();
}

uint64_t sub_23227F898@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + qword_255FADEF8;
  swift_beginAccess();
  return sub_23224E5FC(v3, a1);
}

uint64_t sub_23227F8E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + qword_255FADEF8;
  swift_beginAccess();
  sub_23224E53C(a1, v3);
  swift_endAccess();
  sub_23227F550();
  return sub_23224E5A0(a1);
}

void (*sub_23227F954(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_23227F99C;
}

void sub_23227F99C(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_23227F550();
}

void sub_23227F9CC()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;

  v1 = v0;
  v2 = &v0[qword_255FADEF8];
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_QWORD *)v2 + 4) = 0;
  v3 = qword_255FADF00;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_23224C618(0, (unint64_t *)&unk_255FACCD0);
  v5 = (void *)sub_2322B9128();
  objc_msgSend(v4, sel_setFont_, v5);

  objc_msgSend(v4, sel_setTextAlignment_, 4);
  objc_msgSend(v4, sel_setNumberOfLines_, 0);
  objc_msgSend(v4, sel_setAdjustsFontForContentSizeCategory_, 1);
  *(_QWORD *)&v0[v3] = v4;
  v6 = qword_255FADF08;
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v8 = (void *)sub_2322B9128();
  objc_msgSend(v7, sel_setFont_, v8);

  objc_msgSend(v7, sel_setTextAlignment_, 4);
  objc_msgSend(v7, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v7, sel_setNumberOfLines_, 0);
  *(_QWORD *)&v1[v6] = v7;
  *(_QWORD *)&v1[qword_255FADF10] = 0;

  sub_2322B9350();
  __break(1u);
}

uint64_t sub_23227FBE8@<X0>(char a1@<W0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_2322B80B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    if (qword_255FAB900 != -1)
      swift_once();
  }
  else if (qword_255FAB900 != -1)
  {
    swift_once();
  }
  v10 = sub_2322B7F58();
  v23 = v11;
  v24 = v10;
  if (a2)
  {
    v12 = a2;
    a2 = (void *)sub_23224DFE0(a1 & 1);
    v14 = v13;

  }
  else
  {
    v14 = 0;
  }
  type metadata accessor for VisionPrescriptionSingleFieldCell();
  sub_23227FE04();
  v15 = sub_2322B8294();
  v17 = v16;
  swift_bridgeObjectRetain();
  sub_2322B80A8();
  v18 = sub_2322B8090();
  v20 = v19;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a3 = v15;
  a3[1] = v17;
  a3[2] = v18;
  a3[3] = v20;
  v22 = v23;
  a3[4] = v24;
  a3[5] = v22;
  a3[6] = (uint64_t)a2;
  a3[7] = v14;
  return result;
}

unint64_t sub_23227FE04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FADF68;
  if (!qword_255FADF68)
  {
    v1 = type metadata accessor for VisionPrescriptionSingleFieldCell();
    result = MEMORY[0x2349010BC](&unk_2322C29C0, v1);
    atomic_store(result, (unint64_t *)&qword_255FADF68);
  }
  return result;
}

uint64_t destroy for VisionPrescriptionSingleFieldItem()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for VisionPrescriptionSingleFieldItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for VisionPrescriptionSingleFieldItem(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for VisionPrescriptionSingleFieldItem(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_QWORD *assignWithTake for VisionPrescriptionSingleFieldItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VisionPrescriptionSingleFieldItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VisionPrescriptionSingleFieldItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for VisionPrescriptionSingleFieldItem()
{
  return &type metadata for VisionPrescriptionSingleFieldItem;
}

uint64_t sub_2322800B4()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FADF70 = result;
  *(_QWORD *)algn_255FADF78 = v1;
  return result;
}

uint64_t sub_232280158()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FADF80 = result;
  *(_QWORD *)algn_255FADF88 = v1;
  return result;
}

uint64_t sub_2322801FC()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FADF90 = result;
  *(_QWORD *)algn_255FADF98 = v1;
  return result;
}

uint64_t sub_2322802A0()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FADFA0 = result;
  *(_QWORD *)algn_255FADFA8 = v1;
  return result;
}

uint64_t sub_23228034C()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FADFB0 = result;
  *(_QWORD *)algn_255FADFB8 = v1;
  return result;
}

uint64_t sub_2322803F0()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FADFC0 = result;
  *(_QWORD *)algn_255FADFC8 = v1;
  return result;
}

uint64_t sub_232280494()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FADFD0 = result;
  *(_QWORD *)algn_255FADFD8 = v1;
  return result;
}

uint64_t sub_232280538()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FADFE0 = result;
  *(_QWORD *)algn_255FADFE8 = v1;
  return result;
}

uint64_t sub_2322805DC()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FADFF0 = result;
  *(_QWORD *)algn_255FADFF8 = v1;
  return result;
}

uint64_t sub_232280680()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FAE000 = result;
  *(_QWORD *)algn_255FAE008 = v1;
  return result;
}

uint64_t sub_232280724()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FAE010 = result;
  *(_QWORD *)algn_255FAE018 = v1;
  return result;
}

uint64_t sub_2322807C8()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FAE020 = result;
  *(_QWORD *)algn_255FAE028 = v1;
  return result;
}

uint64_t sub_23228086C()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FAE030 = result;
  *(_QWORD *)algn_255FAE038 = v1;
  return result;
}

uint64_t sub_232280910()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FAE040 = result;
  *(_QWORD *)algn_255FAE048 = v1;
  return result;
}

uint64_t sub_2322809B4()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FAE050 = result;
  *(_QWORD *)algn_255FAE058 = v1;
  return result;
}

uint64_t sub_232280A58()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FAE060 = result;
  *(_QWORD *)algn_255FAE068 = v1;
  return result;
}

uint64_t sub_232280AFC()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FAE070 = result;
  *(_QWORD *)algn_255FAE078 = v1;
  return result;
}

uint64_t sub_232280BA0()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FAE080 = result;
  *(_QWORD *)algn_255FAE088 = v1;
  return result;
}

uint64_t sub_232280C44()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FAE090 = result;
  *(_QWORD *)algn_255FAE098 = v1;
  return result;
}

uint64_t sub_232280CE8()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FAE0A0 = result;
  *(_QWORD *)algn_255FAE0A8 = v1;
  return result;
}

uint64_t sub_232280D8C()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FAE0B0 = result;
  *(_QWORD *)algn_255FAE0B8 = v1;
  return result;
}

uint64_t sub_232280E30()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FAE0C0 = result;
  *(_QWORD *)algn_255FAE0C8 = v1;
  return result;
}

uint64_t sub_232280ED4()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FAE0D0 = result;
  *(_QWORD *)algn_255FAE0D8 = v1;
  return result;
}

uint64_t sub_232280F78()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FAE0E0 = result;
  *(_QWORD *)algn_255FAE0E8 = v1;
  return result;
}

uint64_t sub_23228101C()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FAE0F0 = result;
  *(_QWORD *)algn_255FAE0F8 = v1;
  return result;
}

uint64_t sub_2322810C0()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FAE100 = result;
  *(_QWORD *)algn_255FAE108 = v1;
  return result;
}

uint64_t sub_232281164()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FAE110 = result;
  *(_QWORD *)algn_255FAE118 = v1;
  return result;
}

uint64_t sub_232281208()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FAE120 = result;
  *(_QWORD *)algn_255FAE128 = v1;
  return result;
}

uint64_t sub_2322812AC()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FAE130 = result;
  *(_QWORD *)algn_255FAE138 = v1;
  return result;
}

uint64_t sub_232281350()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FAE140 = result;
  *(_QWORD *)algn_255FAE148 = v1;
  return result;
}

uint64_t sub_2322813F4()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FAE150 = result;
  *(_QWORD *)algn_255FAE158 = v1;
  return result;
}

uint64_t sub_232281498()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FAE160 = result;
  *(_QWORD *)algn_255FAE168 = v1;
  return result;
}

uint64_t sub_23228153C()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FAE170 = result;
  *(_QWORD *)algn_255FAE178 = v1;
  return result;
}

uint64_t sub_2322815E0()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FAE180 = result;
  *(_QWORD *)algn_255FAE188 = v1;
  return result;
}

uint64_t sub_232281684()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FAE190 = result;
  *(_QWORD *)algn_255FAE198 = v1;
  return result;
}

uint64_t sub_232281728()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FAE1A0 = result;
  *(_QWORD *)algn_255FAE1A8 = v1;
  return result;
}

uint64_t sub_2322817CC()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FAE1B0 = result;
  *(_QWORD *)algn_255FAE1B8 = v1;
  return result;
}

uint64_t sub_232281870()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FAE1C0 = result;
  *(_QWORD *)algn_255FAE1C8 = v1;
  return result;
}

uint64_t sub_232281914()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FAE1D0 = result;
  *(_QWORD *)algn_255FAE1D8 = v1;
  return result;
}

uint64_t sub_2322819B8()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FAE1E0 = result;
  *(_QWORD *)algn_255FAE1E8 = v1;
  return result;
}

uint64_t sub_232281A5C(void *a1, char a2, uint64_t a3)
{
  void *v6;
  void *v7;
  unsigned int v8;
  void *v9;
  void *v10;
  unsigned int v11;

  sub_232244290(a2);
  if (v6 && (v7 = v6, v8 = objc_msgSend(v6, sel_containsQuantity_, a1), v7, v8))
  {
    LOBYTE(v9) = 0;
  }
  else
  {
    sub_232243B44(a2);
    v9 = v10;
    if (v10)
    {
      v11 = objc_msgSend(v10, sel_containsQuantity_, a1);

      if (v11)
        LOBYTE(v9) = 1;
      else
        LOBYTE(v9) = 3;
    }
  }
  sub_232281EF4(a2, a1, a3, (char)v9);
  sub_232283A10((char)v9);
  return swift_bridgeObjectRelease();
}

uint64_t sub_232281B50(void *a1, char a2, uint64_t a3, void *a4, uint64_t a5)
{
  void *v9;
  void *v10;
  unsigned __int8 v11;
  void *v12;
  void *v13;
  unsigned int v14;
  char v15;

  sub_232244290(a2);
  if (v9
    && (v10 = v9, v11 = objc_msgSend(v9, sel_containsQuantity_, a1), v10, (v11 & 1) != 0)
    || (sub_232243B44(a2), !v12))
  {
    v15 = 0;
    if (a4 && a5)
      v15 = 2 * (objc_msgSend(a4, sel_compare_) == (id)-1);
  }
  else
  {
    v13 = v12;
    v14 = objc_msgSend(v12, sel_containsQuantity_, a1);

    if (v14)
      v15 = 1;
    else
      v15 = 3;
  }
  sub_232281EF4(a2, a1, a3, v15);
  sub_232283A10(v15);
  return swift_bridgeObjectRelease();
}

uint64_t sub_232281C88(void *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  char v9;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = sub_2322B8918();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 - 11) > 1u)
  {
    sub_2322B88F4();
    v11 = sub_2322B890C();
    v12 = sub_2322B8FFC();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc();
      v14 = swift_slowAlloc();
      v20 = v14;
      *(_DWORD *)v13 = 136315394;
      v15 = sub_2322B9464();
      v19 = sub_232266EA0(v15, v16, &v20);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2080;
      LOBYTE(v19) = a2;
      v17 = sub_2322B8E34();
      v19 = sub_232266EA0(v17, v18, &v20);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232241000, v11, v12, "[%s] Cannot validate non-pupillary distance field %s against pupillary distance", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x234901170](v14, -1, -1);
      MEMORY[0x234901170](v13, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    sub_23225C848((uint64_t)a1, a2);
    v9 = v8;
    sub_23228276C(a2, a1, v8);
    sub_232283A10(v9);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_232281EF4(char a1, void *a2, uint64_t a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v7 = sub_2322B8918();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23225B330(a1);
  if (v11)
  {
    v12 = v11;
    sub_23224C618(0, (unint64_t *)&qword_255FAEEA0);
    objc_msgSend(a2, sel_doubleValueForUnit_, v12);
    v13 = sub_2322B9158();
    v14 = objc_msgSend((id)objc_opt_self(), sel_localizedStringFromNumber_numberStyle_, v13, 1);
    v25 = sub_2322B8E1C();

    __asm { BR              X10 }
  }
  sub_2322B88F4();
  v15 = sub_2322B890C();
  v16 = sub_2322B8FFC();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v25 = swift_slowAlloc();
    v26 = v25;
    *(_DWORD *)v17 = 136315394;
    v18 = sub_2322B9464();
    v27 = sub_232266EA0(v18, v19, &v26);
    sub_2322B923C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    LOBYTE(v27) = a1;
    v20 = sub_2322B8E34();
    v27 = sub_232266EA0(v20, v21, &v26);
    sub_2322B923C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_232241000, v15, v16, "[%s] Cannot find prescriptionField's unit to format quantity value string with %s", (uint8_t *)v17, 0x16u);
    v22 = v25;
    swift_arrayDestroy();
    MEMORY[0x234901170](v22, -1, -1);
    MEMORY[0x234901170](v17, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return 0;
}

uint64_t sub_23228276C(char a1, void *a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _BYTE v34[72];
  uint64_t v35[2];
  uint64_t v36;

  v6 = sub_2322B8918();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = &v34[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v8);
  v12 = &v34[-v11];
  if ((a1 - 11) > 1u)
  {
    sub_2322B88F4();
    v17 = sub_2322B890C();
    v18 = sub_2322B8FFC();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v20 = swift_slowAlloc();
      v35[0] = v20;
      *(_DWORD *)v19 = 136315394;
      v21 = sub_2322B9464();
      v36 = sub_232266EA0(v21, v22, v35);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2080;
      LOBYTE(v36) = a1;
      v23 = sub_2322B8E34();
      v36 = sub_232266EA0(v23, v24, v35);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232241000, v17, v18, "[%s] field %s is not a pupillary distance field. Skipping to create alert message", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x234901170](v20, -1, -1);
      MEMORY[0x234901170](v19, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v10, v6);
  }
  else
  {
    sub_23225B330(a1);
    if (v13)
    {
      v14 = v13;
      sub_23224C618(0, (unint64_t *)&qword_255FAEEA0);
      objc_msgSend(a2, sel_doubleValueForUnit_, v14);
      v15 = sub_2322B9158();
      v16 = objc_msgSend((id)objc_opt_self(), sel_localizedStringFromNumber_numberStyle_, v15, 1);
      sub_2322B8E1C();

      __asm { BR              X10 }
    }
    sub_2322B88F4();
    v25 = sub_2322B890C();
    v26 = sub_2322B8FFC();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = swift_slowAlloc();
      v28 = swift_slowAlloc();
      v35[0] = v28;
      *(_DWORD *)v27 = 136315394;
      v29 = sub_2322B9464();
      v36 = sub_232266EA0(v29, v30, v35);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2080;
      LOBYTE(v36) = a1;
      v31 = sub_2322B8E34();
      v36 = sub_232266EA0(v31, v32, v35);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232241000, v25, v26, "[%s] Cannot find prescriptionField's unit to format quantity value string with %s", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x234901170](v28, -1, -1);
      MEMORY[0x234901170](v27, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v12, v6);
  }
  return 0;
}

void sub_232282BA0()
{
  void *v0;
  void *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v7 = *(_QWORD *)(v5 + 24);
  swift_retain();
  v8 = sub_23224C808(v2);
  sub_2322B5264(9, v8, v9, 0x10100u >> (8 * *(_BYTE *)(v7 + 64)));
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_255FAB978 != -1)
    swift_once();
  sub_232268A7C();
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_2322C0E50;
  *(_QWORD *)(v6 - 120) = sub_23225BB7C(v2);
  *(_QWORD *)(v6 - 112) = v11;
  sub_2322B8EAC();
  if (qword_255FAB900 != -1)
    swift_once();
  v12 = sub_2322B7F58();
  v14 = v13;
  swift_bridgeObjectRelease();
  v15 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v10 + 56) = MEMORY[0x24BEE0D00];
  v16 = sub_23224EC60();
  *(_QWORD *)(v10 + 32) = v12;
  *(_QWORD *)(v10 + 40) = v14;
  *(_QWORD *)(v10 + 96) = v15;
  *(_QWORD *)(v10 + 104) = v16;
  *(_QWORD *)(v10 + 64) = v16;
  *(_QWORD *)(v10 + 72) = v4;
  *(_QWORD *)(v10 + 80) = v3;
  sub_2322B8DF8();

  swift_bridgeObjectRelease();
  JUMPOUT(0x232282B74);
}

uint64_t sub_232283208()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VisionPrescriptionValidationHandler()
{
  return objc_opt_self();
}

void sub_232283254(char a1)
{
  sub_2322839AC();
  __asm { BR              X10 }
}

uint64_t sub_23228328C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t result;

  if (v0 == 2)
  {
    if (qword_255FAB998 != -1)
      swift_once();
    v1 = &qword_255FAE020;
    return *v1;
  }
  if (v0 == 1)
  {
    if (qword_255FAB990 != -1)
      swift_once();
    v1 = &qword_255FAE010;
    return *v1;
  }
  result = sub_2322B93EC();
  __break(1u);
  return result;
}

void sub_2322839AC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255FAE2D0)
  {
    type metadata accessor for HKVisionEye(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255FAE2D0);
  }
}

void sub_232283A10(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_232283A64()
{
  uint64_t (*v0)(uint64_t);

  return v0(1);
}

uint64_t sub_232283F5C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_232283F80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_232283F90()
{
  return swift_release();
}

uint64_t sub_232283F98()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(v0 + 16))(1);
}

_QWORD *sub_232283FD8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v31[2];
  int v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = v5;
  v36 = a4;
  v35 = a2;
  v33 = *v5;
  v34 = a3;
  v9 = sub_2322B8918();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8]();
  v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322846CC();
  MEMORY[0x24BDAC7A8]();
  v14 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_2322B860C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8]();
  v18 = (char *)v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = a1;
  sub_232270F98(a1, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    v32 = a5;
    sub_232284720((uint64_t)v14);
    v6[2] = 0;
    v6[3] = 0;
    sub_2322B8900();
    v19 = sub_2322B890C();
    v20 = sub_2322B9014();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      v39 = v22;
      *(_DWORD *)v21 = 136315138;
      v31[1] = v21 + 4;
      v23 = sub_2322B9464();
      v38 = sub_232266EA0(v23, v24, &v39);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232241000, v19, v20, "[%s] Demographics data was nil. Setting age and biological sex to nil.", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234901170](v22, -1, -1);
      MEMORY[0x234901170](v21, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    v6[2] = sub_2322B85E8();
    v25 = sub_2322B85F4();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    v6[3] = v25;
  }
  v26 = v36;
  sub_232284324(v35);
  v6[4] = v27;
  if (v26)
  {
    v28 = sub_2322B8DEC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v28 = 0;
  }
  v6[6] = v28;
  sub_23228475C();
  v29 = sub_2322B917C();
  sub_232284720(v37);
  v6[5] = v29;
  return v6;
}

void sub_232284324(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23228434C()
{
  sub_23228475C();
  return sub_2322B917C();
}

uint64_t sub_232284584()
{
  id *v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VisionPrescriptionManualDataEntryAnalyticsEvent()
{
  return objc_opt_self();
}

unint64_t sub_2322845E8()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_232284604()
{
  uint64_t v0;

  v0 = sub_232270AFC((uint64_t)&unk_250111D90);
  swift_arrayDestroy();
  return v0;
}

uint64_t sub_232284648()
{
  return sub_232284690(&qword_255FAE398, (uint64_t)&unk_2322C2B78);
}

uint64_t sub_23228466C()
{
  return sub_232284690(&qword_255FAE3A0, (uint64_t)&unk_2322C2B50);
}

uint64_t sub_232284690(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for VisionPrescriptionManualDataEntryAnalyticsEvent();
    result = MEMORY[0x2349010BC](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_2322846CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAD5B0)
  {
    sub_2322B860C();
    v0 = sub_2322B9224();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAD5B0);
  }
}

uint64_t sub_232284720(uint64_t a1)
{
  uint64_t v2;

  sub_2322846CC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23228475C()
{
  unint64_t result;

  result = qword_255FAE3A8;
  if (!qword_255FAE3A8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255FAE3A8);
  }
  return result;
}

uint64_t sub_232284798(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  id v13;
  char isUniquelyReferenced_nonNull_native;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22[3];
  uint64_t v23;

  v7 = sub_2322B8918();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 == 2)
  {
    v11 = *(_QWORD *)(v3 + 40);
    swift_beginAccess();
    v13 = a3;
    swift_retain();
    goto LABEL_5;
  }
  if (a2 == 1)
  {
    v11 = *(_QWORD *)(v3 + 32);
    swift_beginAccess();
    v12 = a3;
    swift_retain();
LABEL_5:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = *(_QWORD *)(v11 + 24);
    *(_QWORD *)(v11 + 24) = 0x8000000000000000;
    sub_2322B2FE4((uint64_t)a3, a1, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v11 + 24) = v23;
    swift_bridgeObjectRelease();
    swift_endAccess();
    sub_232271ED0(a1);
    sub_232272518(a1, a3);
    return swift_release();
  }
  sub_2322B88D0();
  v16 = sub_2322B890C();
  v17 = sub_2322B9008();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v19 = swift_slowAlloc();
    v22[0] = v19;
    *(_DWORD *)v18 = 136446466;
    v23 = sub_232266EA0(0xD00000000000001DLL, 0x80000002322BE5A0, v22);
    sub_2322B923C();
    *(_WORD *)(v18 + 12) = 2080;
    v23 = a2;
    type metadata accessor for HKVisionEye(0);
    v20 = sub_2322B8E34();
    v23 = sub_232266EA0(v20, v21, v22);
    sub_2322B923C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_232241000, v16, v17, "[%{public}s] Unknown eye received: %s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x234901170](v19, -1, -1);
    MEMORY[0x234901170](v18, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_232284A48(unsigned __int8 a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  id v13;
  char isUniquelyReferenced_nonNull_native;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22[3];
  uint64_t v23;

  v7 = sub_2322B8918();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 == 2)
  {
    v11 = *(_QWORD *)(v3 + 40);
    swift_beginAccess();
    v13 = a3;
    swift_retain();
    goto LABEL_5;
  }
  if (a2 == 1)
  {
    v11 = *(_QWORD *)(v3 + 32);
    swift_beginAccess();
    v12 = a3;
    swift_retain();
LABEL_5:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = *(_QWORD *)(v11 + 24);
    *(_QWORD *)(v11 + 24) = 0x8000000000000000;
    sub_2322B2FE4((uint64_t)a3, a1, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v11 + 24) = v23;
    swift_bridgeObjectRelease();
    swift_endAccess();
    return swift_release();
  }
  sub_2322B88D0();
  v16 = sub_2322B890C();
  v17 = sub_2322B9008();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v19 = swift_slowAlloc();
    v22[0] = v19;
    *(_DWORD *)v18 = 136446466;
    v23 = sub_232266EA0(0xD00000000000001ELL, 0x80000002322BE5C0, v22);
    sub_2322B923C();
    *(_WORD *)(v18 + 12) = 2080;
    v23 = a2;
    type metadata accessor for HKVisionEye(0);
    v20 = sub_2322B8E34();
    v23 = sub_232266EA0(v20, v21, v22);
    sub_2322B923C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_232241000, v16, v17, "[%{public}s] Unknown eye received: %s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x234901170](v19, -1, -1);
    MEMORY[0x234901170](v18, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_232284CE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v0 = sub_2322B8918();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322B88F4();
  v4 = sub_2322B890C();
  v5 = sub_2322B9014();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v12 = v7;
    *(_DWORD *)v6 = 136315138;
    v8 = sub_2322B9464();
    v11 = sub_232266EA0(v8, v9, &v12);
    sub_2322B923C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_232241000, v4, v5, "[%s] prescriptionType completed.", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234901170](v7, -1, -1);
    MEMORY[0x234901170](v6, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_232284E6C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (v1 == 2)
    {
      v7 = *(_QWORD *)(result + 48);
      v8 = *(_QWORD *)(v7 + 32);
      swift_beginAccess();
      v9 = MEMORY[0x24BEE4B00];
      *(_QWORD *)(v8 + 24) = MEMORY[0x24BEE4B00];
      swift_retain();
      swift_bridgeObjectRelease();
      v10 = *(_QWORD *)(v7 + 40);
      swift_beginAccess();
      *(_QWORD *)(v10 + 24) = v9;
      swift_release();
      goto LABEL_6;
    }
    if (v1 == 1)
    {
      v3 = *(_QWORD *)(result + 40);
      v4 = *(_QWORD *)(v3 + 32);
      swift_beginAccess();
      v5 = MEMORY[0x24BEE4B00];
      *(_QWORD *)(v4 + 24) = MEMORY[0x24BEE4B00];
      swift_retain();
      swift_bridgeObjectRelease();
      v6 = *(_QWORD *)(v3 + 40);
      swift_beginAccess();
      *(_QWORD *)(v6 + 24) = v5;
      swift_release();
LABEL_6:
      swift_release();
      return swift_bridgeObjectRelease();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_232284FC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = sub_2322B8918();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_2322B8B4C();
  swift_release();
  if (v18 == 1)
  {
    v9 = *(_QWORD *)(v2 + 48);
    *(_QWORD *)(v9 + 16) = a1;
    *(_QWORD *)(v9 + 24) = a2;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_2322B88F4();
    v11 = sub_2322B890C();
    v12 = sub_2322B8FFC();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v18 = v14;
      *(_DWORD *)v13 = 136315138;
      v15 = sub_2322B9464();
      v17 = sub_232266EA0(v15, v16, &v18);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232241000, v11, v12, "[%s] currently selected prescription type is not glasses. Skipping updating the glasses description.", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234901170](v14, -1, -1);
      MEMORY[0x234901170](v13, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_2322851A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = sub_2322B8918();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_2322B8B4C();
  swift_release();
  if (v18 == 2)
  {
    v9 = *(_QWORD *)(v2 + 40);
    *(_QWORD *)(v9 + 16) = a1;
    *(_QWORD *)(v9 + 24) = a2;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_2322B88F4();
    v11 = sub_2322B890C();
    v12 = sub_2322B8FFC();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v18 = v14;
      *(_DWORD *)v13 = 136315138;
      v15 = sub_2322B9464();
      v17 = sub_232266EA0(v15, v16, &v18);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232241000, v11, v12, "[%s] currently selected prescription type is not contacts. Skipping updating the brand of contacts.", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234901170](v14, -1, -1);
      MEMORY[0x234901170](v13, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_23228538C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  char *v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  char *v26;

  v2 = sub_2322B8084();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v25 - v7;
  sub_23224BE78(0, &qword_255FABC68, v9, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v25 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v25 - v17;
  sub_232250B50(a1, (uint64_t)&v25 - v17);
  swift_retain();
  sub_2322B8B58();
  swift_release();
  sub_232250B50(a1, (uint64_t)v16);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  if (v19(v16, 1, v2) == 1)
  {
    sub_232287080((uint64_t)v16);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v18, 1, 1, v2);
    swift_retain();
    sub_2322B8B58();
    return swift_release();
  }
  else
  {
    v26 = v6;
    v21 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    v21(v8, v16, v2);
    swift_retain();
    sub_2322B8B4C();
    swift_release();
    if (v19(v13, 1, v2) == 1)
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      return sub_232287080((uint64_t)v13);
    }
    else
    {
      v22 = v26;
      v21(v26, v13, v2);
      v23 = v22;
      if ((sub_2322B8060() & 1) != 0)
      {
        swift_retain();
        swift_retain();
        sub_2322B8B4C();
        swift_release();
        sub_2322B8B58();
        swift_release();
      }
      v24 = *(void (**)(char *, uint64_t))(v3 + 8);
      v24(v23, v2);
      return ((uint64_t (*)(char *, uint64_t))v24)(v8, v2);
    }
  }
}

uint64_t sub_232285620(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t);
  unsigned int v26;
  uint64_t v27;
  char *v28;

  v2 = sub_2322B8084();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v28 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v27 - v6;
  sub_23224BE78(0, &qword_255FABC68, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v27 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v27 - v17;
  MEMORY[0x24BDAC7A8](v16);
  sub_232250B50(a1, (uint64_t)&v27 - v19);
  swift_retain();
  sub_2322B8B58();
  swift_release();
  sub_232250B50(a1, (uint64_t)v18);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  if (v20(v18, 1, v2) == 1)
    return sub_232287080((uint64_t)v18);
  v27 = v3;
  v22 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  v22(v7, v18, v2);
  swift_retain();
  sub_2322B8B4C();
  swift_release();
  if (v20(v15, 1, v2) == 1)
  {
    sub_232287080((uint64_t)v15);
    v23 = v27;
  }
  else
  {
    v24 = v28;
    v22(v28, v15, v2);
    if ((sub_2322B8060() & 1) != 0)
    {
      swift_retain();
      swift_retain();
      sub_2322B8B4C();
      swift_release();
      sub_2322B8B58();
      swift_release();
      v25 = *(void (**)(char *, uint64_t))(v27 + 8);
      v25(v24, v2);
      return ((uint64_t (*)(char *, uint64_t))v25)(v7, v2);
    }
    v23 = v27;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v24, v2);
  }
  swift_retain();
  sub_2322B8B4C();
  swift_release();
  v26 = v20(v12, 1, v2);
  sub_232287080((uint64_t)v12);
  if (v26 == 1)
  {
    swift_retain();
    swift_retain();
    sub_2322B8B4C();
    swift_release();
    sub_2322B8B58();
    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v7, v2);
}

uint64_t sub_232285944(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = v3;
  v8 = sub_2322B8918();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_2322B8B4C();
  swift_release();
  if (v24 == 2)
    return sub_232284A48(a1, a2, a3);
  if (v24 == 1)
    return sub_232284798(a1, a2, a3);
  sub_2322B88F4();
  swift_retain_n();
  v13 = sub_2322B890C();
  v14 = sub_2322B8FFC();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v16 = swift_slowAlloc();
    v23 = v16;
    *(_DWORD *)v15 = 136315394;
    v21 = v8;
    v17 = sub_2322B9464();
    v22 = sub_232266EA0(v17, v18, &v23);
    sub_2322B923C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    v22 = *(_QWORD *)(v4 + 16);
    sub_23227B810();
    swift_retain();
    v19 = sub_2322B8E34();
    v22 = sub_232266EA0(v19, v20, &v23);
    sub_2322B923C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_232241000, v13, v14, "[%s] Updating VisionPrescriptionManualDataEntryContext currently not supported for %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x234901170](v16, -1, -1);
    MEMORY[0x234901170](v15, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v21);
  }
  else
  {

    swift_release_n();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

id sub_232285BDC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  id v25;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v1 = v0;
  v40 = *v0;
  v41 = sub_2322B8918();
  v2 = *(_QWORD *)(v41 - 8);
  v3 = MEMORY[0x24BDAC7A8](v41);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v37 - v6;
  sub_23224BE78(0, &qword_255FABC68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v37 - v12;
  v14 = sub_2322B8084();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_2322B8B4C();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_232287080((uint64_t)v13);
    sub_2322B88E8();
    v18 = sub_2322B890C();
    v19 = sub_2322B8FFC();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v44 = v21;
      *(_DWORD *)v20 = 136315138;
      v22 = sub_2322B9464();
      v43 = sub_232266EA0(v22, v23, &v44);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232241000, v18, v19, "[%s] Cannot create HKVisionPrescriptiton without dateIssued.", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234901170](v21, -1, -1);
      MEMORY[0x234901170](v20, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v41);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
  if ((sub_23228610C() & 1) != 0)
  {
    v24 = sub_232286340();
LABEL_13:
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    return v24;
  }
  swift_retain();
  sub_2322B8B4C();
  swift_release();
  if (v44 == 2)
  {
    swift_retain();
    sub_2322B8B4C();
    swift_release();
    v25 = sub_23224FDE4((uint64_t)v17, (uint64_t)v11);
    goto LABEL_12;
  }
  if (v44 == 1)
  {
    swift_retain();
    sub_2322B8B4C();
    swift_release();
    v25 = sub_232250130((uint64_t)v17, (uint64_t)v11);
LABEL_12:
    v24 = v25;
    sub_232287080((uint64_t)v11);
    goto LABEL_13;
  }
  sub_2322B88E8();
  swift_retain_n();
  v27 = sub_2322B890C();
  v28 = sub_2322B8FFC();
  v29 = v28;
  if (os_log_type_enabled(v27, v28))
  {
    v30 = swift_slowAlloc();
    v39 = v29;
    v31 = v30;
    v38 = swift_slowAlloc();
    v43 = v38;
    *(_DWORD *)v31 = 136315394;
    v32 = sub_2322B9464();
    v42 = sub_232266EA0(v32, v33, &v43);
    sub_2322B923C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2080;
    v40 = v31 + 14;
    v42 = v1[2];
    sub_23227B810();
    swift_retain();
    v34 = sub_2322B8E34();
    v42 = sub_232266EA0(v34, v35, &v43);
    sub_2322B923C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_232241000, v27, (os_log_type_t)v39, "[%s] unsupported prescription type %s", (uint8_t *)v31, 0x16u);
    v36 = v38;
    swift_arrayDestroy();
    MEMORY[0x234901170](v36, -1, -1);
    MEMORY[0x234901170](v31, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v41);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  return 0;
}

uint64_t sub_23228610C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t result;
  uint64_t j;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t i;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;

  swift_retain();
  sub_2322B8B4C();
  swift_release();
  if (v26 == 2)
  {
    v8 = 15;
    v9 = *(_QWORD *)(v0 + 40);
    v10 = *(_QWORD *)(v9 + 32) + 24;
    swift_beginAccess();
    v11 = (unsigned __int8 *)&byte_250111B70;
    while (1)
    {
      v12 = *(_QWORD *)v10;
      if (*(_QWORD *)(*(_QWORD *)v10 + 16))
      {
        v13 = sub_2322B2760(*v11);
        if ((v14 & 1) != 0)
        {
          if (*(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v13))
            break;
        }
      }
      ++v11;
      if (!--v8)
      {
        v21 = *(_QWORD *)(v9 + 40) + 24;
        result = swift_beginAccess();
        for (i = 0; ; ++i)
        {
          v23 = i + 1;
          if (__OFADD__(i, 1))
            break;
          v24 = *(_QWORD *)v21;
          if (*(_QWORD *)(*(_QWORD *)v21 + 16))
          {
            result = sub_2322B2760(*((_BYTE *)&unk_250111B50 + i + 32));
            if ((v25 & 1) != 0)
            {
              if (*(_QWORD *)(*(_QWORD *)(v24 + 56) + 8 * result))
                return 0;
            }
          }
          if (v23 == 15)
            return 1;
        }
LABEL_32:
        __break(1u);
        return result;
      }
    }
  }
  else if (v26 == 1)
  {
    v1 = 15;
    v2 = *(_QWORD *)(v0 + 48);
    v3 = *(_QWORD *)(v2 + 32) + 24;
    swift_beginAccess();
    v4 = (unsigned __int8 *)&byte_250111B70;
    while (1)
    {
      v5 = *(_QWORD *)v3;
      if (*(_QWORD *)(*(_QWORD *)v3 + 16))
      {
        v6 = sub_2322B2760(*v4);
        if ((v7 & 1) != 0)
        {
          if (*(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v6))
            break;
        }
      }
      ++v4;
      if (!--v1)
      {
        v15 = *(_QWORD *)(v2 + 40) + 24;
        result = swift_beginAccess();
        for (j = 0; ; ++j)
        {
          v18 = j + 1;
          if (__OFADD__(j, 1))
            break;
          v19 = *(_QWORD *)v15;
          if (*(_QWORD *)(*(_QWORD *)v15 + 16))
          {
            result = sub_2322B2760(*((_BYTE *)&unk_250111B50 + j + 32));
            if ((v20 & 1) != 0)
            {
              if (*(_QWORD *)(*(_QWORD *)(v19 + 56) + 8 * result))
                return 0;
            }
          }
          if (v18 == 15)
            return 1;
        }
        __break(1u);
        goto LABEL_32;
      }
    }
  }
  return 0;
}

id sub_232286340()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t inited;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;

  v37 = *v0;
  v1 = sub_2322B8918();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v38 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23224BE78(0, &qword_255FABC68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v35 - v8;
  v10 = sub_2322B8084();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v35 - v15;
  swift_retain();
  sub_2322B8B4C();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    v35 = v2;
    v36 = v1;
    sub_232287080((uint64_t)v9);
    v17 = v38;
    sub_2322B88E8();
    v18 = sub_2322B890C();
    v19 = sub_2322B8FFC();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v40 = v21;
      *(_DWORD *)v20 = 136315138;
      v22 = sub_2322B9464();
      v39 = sub_232266EA0(v22, v23, &v40);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232241000, v18, v19, "[%s] Cannot create HKVisionPrescriptiton without dateIssued.", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234901170](v21, -1, -1);
      MEMORY[0x234901170](v20, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v35 + 8))(v17, v36);
    return 0;
  }
  else
  {
    v25 = v7;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v9, v10);
    swift_retain();
    sub_2322B8B4C();
    swift_release();
    if (v40 == 1)
    {
      v26 = v0[6];
      v27 = (uint64_t)v7;
      if (*(_QWORD *)(v26 + 24))
      {
        v28 = *(_QWORD *)(v26 + 16);
        v29 = *(_QWORD *)(v26 + 24);
      }
      else
      {
        v28 = 0;
        v29 = 0xE000000000000000;
      }
      sub_23224BE78(0, &qword_255FABCB8, (uint64_t (*)(uint64_t))sub_23224C5A0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_2322C0E70;
      *(_QWORD *)(inited + 32) = sub_2322B8E1C();
      *(_QWORD *)(inited + 40) = v32;
      *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(inited + 48) = v28;
      *(_QWORD *)(inited + 56) = v29;
      swift_bridgeObjectRetain();
      v30 = sub_23228C448(inited);
    }
    else
    {
      v30 = 0;
      v27 = (uint64_t)v25;
    }
    sub_2322870D4();
    swift_retain();
    sub_2322B8B4C();
    swift_release();
    v33 = v40;
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
    swift_retain();
    sub_2322B8B4C();
    swift_release();
    v24 = sub_232287110(v33, (uint64_t)v14, v27, 0, v30);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  }
  return v24;
}

uint64_t sub_23228675C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_2322867A8()
{
  sub_23228675C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VisionPrescriptionManualDataEntryContext()
{
  return objc_opt_self();
}

uint64_t sub_2322867E8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 16) = a2;
  *(_QWORD *)(result + 24) = 2 * a2;
  return result;
}

_QWORD *sub_2322867F8(void *a1, char a2, void *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  _QWORD *v30;
  id v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  _QWORD *v39;
  _QWORD *v40;
  id v41;
  id v42;
  _QWORD *v43;
  id v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  _QWORD *v48;
  id v49;
  id v50;
  BOOL v51;
  id v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;

  v4 = v3;
  v8 = *v3;
  sub_23224BE78(0, &qword_255FABC68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v65 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v65 - v16;
  v4[9] = 0;
  v66 = v8;
  if (a1)
    v18 = (uint64_t)objc_msgSend(a1, sel_prescriptionType);
  else
    v18 = 1;
  *(_QWORD *)&v69 = v18;
  sub_23227B810();
  swift_allocObject();
  v4[2] = sub_2322B8B70();
  v65 = a3;
  if (a1)
  {
    v19 = objc_msgSend(a1, sel_dateIssued);
    sub_2322B806C();

    v20 = sub_2322B8084();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v17, 0, 1, v20);
  }
  else
  {
    v21 = sub_2322B8084();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v17, 1, 1, v21);
  }
  sub_23227B9D0();
  swift_allocObject();
  v4[3] = sub_2322B8B70();
  if (a1)
  {
    v22 = objc_msgSend(a1, sel_expirationDate);
    if (v22)
    {
      v23 = v22;
      sub_2322B806C();

      v24 = sub_2322B8084();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v12, 0, 1, v24);
    }
    else
    {
      v26 = sub_2322B8084();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v12, 1, 1, v26);
    }
    sub_232270FEC((uint64_t)v12, (uint64_t)v15);
  }
  else
  {
    v25 = sub_2322B8084();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v15, 1, 1, v25);
  }
  swift_allocObject();
  v4[4] = sub_2322B8B70();
  *((_BYTE *)v4 + 64) = a2;
  if (!a1)
    goto LABEL_18;
  objc_opt_self();
  v27 = swift_dynamicCastObjCClass();
  if (!v27)
  {
    objc_opt_self();
    v36 = swift_dynamicCastObjCClass();
    if (v36)
    {
      v37 = (void *)v36;
      v38 = a1;
      v39 = sub_232250780(v37);

      v4[5] = v39;
      type metadata accessor for GlassesManualDataEntryContext();
      v40 = (_QWORD *)swift_allocObject();
      v40[2] = 0;
      v40[3] = 0;
      swift_bridgeObjectRelease();
      v41 = objc_msgSend(0, sel_leftEye);
      type metadata accessor for GlassesLensSpecificationContext();
      swift_allocObject();
      v40[4] = sub_23227154C(1, v41);
      v42 = objc_msgSend(0, sel_rightEye);
      swift_allocObject();
      v40[5] = sub_23227154C(2, v42);
      v4[6] = v40;
      v35 = v66;
      goto LABEL_33;
    }
LABEL_18:
    type metadata accessor for ContactsManualDataEntryContext();
    v43 = (_QWORD *)swift_allocObject();
    v43[2] = 0;
    v43[3] = 0;
    swift_bridgeObjectRelease();
    v44 = objc_msgSend(0, sel_leftEye);
    type metadata accessor for ContactsLensSpecificationContext();
    swift_allocObject();
    v45 = sub_232273070(1, v44);

    v43[4] = v45;
    v46 = objc_msgSend(0, sel_rightEye);
    swift_allocObject();
    v47 = sub_232273070(2, v46);

    v43[5] = v47;
    v4[5] = v43;
    type metadata accessor for GlassesManualDataEntryContext();
    v48 = (_QWORD *)swift_allocObject();
    v48[2] = 0;
    v48[3] = 0;
    swift_bridgeObjectRelease();
    v49 = objc_msgSend(0, sel_leftEye);
    type metadata accessor for GlassesLensSpecificationContext();
    swift_allocObject();
    v48[4] = sub_23227154C(1, v49);
    v50 = objc_msgSend(0, sel_rightEye);
    swift_allocObject();
    v48[5] = sub_23227154C(2, v50);
    v51 = v18 == 1;
    v35 = v66;
    if (!v51)
      goto LABEL_32;
    if (a1 && (v52 = objc_msgSend(a1, sel_metadata)) != 0)
    {
      v53 = v52;
      v54 = sub_2322B8DC8();

      v55 = sub_2322B8E1C();
      if (*(_QWORD *)(v54 + 16) && (v57 = sub_2322B26FC(v55, v56), (v58 & 1) != 0))
      {
        sub_232250B14(*(_QWORD *)(v54 + 56) + 32 * v57, (uint64_t)&v69);
      }
      else
      {
        v69 = 0u;
        v70 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v70 + 1))
      {
        v59 = swift_dynamicCast();
        v60 = v67;
        v61 = v68;
        if (!v59)
        {
          v60 = 0;
          v61 = 0;
        }
        goto LABEL_31;
      }
    }
    else
    {
      v69 = 0u;
      v70 = 0u;
    }
    sub_232250A80((uint64_t)&v69);
    v60 = 0;
    v61 = 0;
LABEL_31:
    v48[2] = v60;
    v48[3] = v61;
    swift_bridgeObjectRelease();
LABEL_32:
    v4[6] = v48;
    goto LABEL_33;
  }
  v28 = (void *)v27;
  type metadata accessor for GlassesManualDataEntryContext();
  swift_allocObject();
  v29 = a1;
  v4[6] = sub_2322508A4(v28);
  type metadata accessor for ContactsManualDataEntryContext();
  v30 = (_QWORD *)swift_allocObject();
  v30[2] = 0;
  v30[3] = 0;
  swift_bridgeObjectRelease();
  v31 = objc_msgSend(0, sel_leftEye);
  type metadata accessor for ContactsLensSpecificationContext();
  swift_allocObject();
  v32 = sub_232273070(1, v31);

  v30[4] = v32;
  v33 = objc_msgSend(0, sel_rightEye);
  swift_allocObject();
  v34 = sub_232273070(2, v33);

  v30[5] = v34;
  v4[5] = v30;
  v35 = v66;
LABEL_33:
  v62 = v65;
  type metadata accessor for VisionPrescriptionAnalyticsContext();
  swift_allocObject();
  v4[7] = sub_2322B4D08(v62);
  *(_QWORD *)&v69 = v4[2];
  *(_QWORD *)(swift_allocObject() + 16) = v35;
  swift_allocObject();
  swift_weakInit();
  sub_232287038();
  swift_retain();
  v63 = sub_2322B8C78();
  swift_release();
  swift_release();
  swift_release();
  v4[9] = v63;
  swift_release();
  return v4;
}

uint64_t sub_232286FF4()
{
  return swift_deallocObject();
}

uint64_t sub_232287004()
{
  return sub_232284CE0();
}

uint64_t sub_23228700C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_232287030(uint64_t *a1)
{
  return sub_232284E6C(a1);
}

unint64_t sub_232287038()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FADDA8;
  if (!qword_255FADDA8)
  {
    sub_23227B810();
    result = MEMORY[0x2349010BC](MEMORY[0x24BDB9D10], v1);
    atomic_store(result, (unint64_t *)&qword_255FADDA8);
  }
  return result;
}

uint64_t sub_232287080(uint64_t a1)
{
  uint64_t v2;

  sub_23224BE78(0, &qword_255FABC68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2322870D4()
{
  unint64_t result;

  result = qword_255FAD9C0;
  if (!qword_255FAD9C0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255FAD9C0);
  }
  return result;
}

id sub_232287110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;

  v10 = (void *)sub_2322B8054();
  v11 = sub_2322B8084();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a3, 1, v11) != 1)
  {
    v13 = (void *)sub_2322B8054();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a3, v11);
  }
  if (a5)
  {
    v14 = (void *)sub_2322B8DBC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = 0;
  }
  v15 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_prescriptionWithType_dateIssued_expirationDate_device_metadata_, a1, v10, v13, a4, v14);

  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a2, v11);
  return v15;
}

uint64_t type metadata accessor for VisionPrescriptionRoomViewController()
{
  uint64_t result;

  result = qword_255FAE550;
  if (!qword_255FAE550)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_232287288()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2322872C4(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v11;

  v4 = sub_2322B8714();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_allocWithZone(v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  v9 = sub_2322B87A4();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  return v9;
}

void sub_232287384(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  objc_class *v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  objc_super v11;

  v2 = sub_2322B8288();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (objc_class *)type metadata accessor for VisionPrescriptionRoomViewController();
  v11.receiver = a1;
  v11.super_class = v6;
  v7 = a1;
  objc_msgSendSuper2(&v11, sel_viewDidLoad);
  v8 = objc_msgSend(v7, sel_collectionView);
  if (v8)
  {
    v9 = v8;
    sub_2322B9050();
    v10 = (void *)sub_2322B827C();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    objc_msgSend(v9, sel_setBackgroundColor_, v10);

  }
  else
  {
    __break(1u);
  }
}

void sub_232287484(char a1)
{
  void *v1;
  void *v2;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v2 = v1;
  v4 = (void *)sub_2322B8798();
  v5 = objc_allocWithZone((Class)type metadata accessor for VisionPrescriptionManualDataEntryViewController());
  v6 = (void *)sub_23227BE34(v4, 0, 0, 0, 0, 0);
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A728]), sel_initWithRootViewController_, v6);
  objc_msgSend(v7, sel_setModalInPresentation_, 1);
  objc_msgSend(v7, sel_setModalPresentationStyle_, 2);
  objc_msgSend(v2, sel_presentViewController_animated_completion_, v7, a1 & 1, 0);

}

id sub_232287558(void *a1, uint64_t a2, uint64_t a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for VisionPrescriptionRoomViewController();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_2322875A0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionRoomViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2322875D4()
{
  return type metadata accessor for VisionPrescriptionRoomViewController();
}

uint64_t sub_2322875DC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;

  sub_232287B80();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_2322C2450;
  v3 = type metadata accessor for VisionPrescriptionComponent();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = 0xD00000000000001BLL;
  *(_QWORD *)(v4 + 24) = 0x80000002322C2CF0;
  *(_QWORD *)(v2 + 56) = v3;
  *(_QWORD *)(v2 + 64) = sub_232287C28();
  *(_QWORD *)(v2 + 32) = v4;
  v5 = sub_2322B86B4();
  v6 = MEMORY[0x24BE43FB8];
  *(_QWORD *)(v2 + 96) = v5;
  *(_QWORD *)(v2 + 104) = v6;
  sub_23224FA10((uint64_t *)(v2 + 72));
  v7 = a1;
  sub_2322B86A8();
  sub_2322B869C();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_2322C0E50;
  v9 = v7;
  sub_2322B86E4();
  v10 = sub_2322B86F0();
  v11 = MEMORY[0x24BE44030];
  *(_QWORD *)(v8 + 56) = v10;
  *(_QWORD *)(v8 + 64) = v11;
  sub_23224FA10((uint64_t *)(v8 + 32));
  sub_2322B86D8();
  v12 = sub_2322B8684();
  v13 = MEMORY[0x24BE43E10];
  *(_QWORD *)(v8 + 96) = v12;
  *(_QWORD *)(v8 + 104) = v13;
  sub_23224FA10((uint64_t *)(v8 + 72));
  v14 = v9;
  sub_2322B8678();
  v15 = sub_2322B86CC();
  v16 = MEMORY[0x24BE44008];
  *(_QWORD *)(v2 + 136) = v15;
  *(_QWORD *)(v2 + 144) = v16;
  sub_23224FA10((uint64_t *)(v2 + 112));
  sub_2322B86C0();
  return sub_2322B8690();
}

uint64_t type metadata accessor for VisionPrescriptionDataTypeDetailConfigurationProvider()
{
  return objc_opt_self();
}

uint64_t sub_2322877E0(void *a1)
{
  return sub_2322875DC(a1);
}

void sub_2322877F4(void *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;

  v4 = sub_2322B8918();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 && (type metadata accessor for VisionPrescriptionRoomViewController(), (v8 = swift_dynamicCastClass()) != 0))
  {
    v9 = (void *)v8;
    v10 = a1;
    v11 = (void *)sub_2322B8798();
    v12 = objc_allocWithZone((Class)type metadata accessor for VisionPrescriptionManualDataEntryViewController());
    v13 = (void *)sub_23227BE34(v11, 0, 0, 0, 0, 0);
    v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A728]), sel_initWithRootViewController_, v13);
    objc_msgSend(v21, sel_setModalInPresentation_, 1);
    objc_msgSend(v21, sel_setModalPresentationStyle_, 2);
    objc_msgSend(v9, sel_presentViewController_animated_completion_, v21, 1, 0);

  }
  else
  {
    sub_2322B88DC();
    swift_retain_n();
    v14 = sub_2322B890C();
    v15 = sub_2322B8FFC();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      *(_DWORD *)v16 = 136315138;
      v21 = v16 + 4;
      v22 = *a2;
      v23 = v17;
      sub_232287B4C();
      v18 = sub_2322B8E34();
      v22 = sub_232266EA0(v18, v19, &v23);
      sub_2322B923C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232241000, v14, v15, "Expected UIViewController to be VisionPrescriptionRoomViewController, was %s instead.", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234901170](v17, -1, -1);
      MEMORY[0x234901170](v16, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t type metadata accessor for VisionPrescriptionComponent()
{
  return objc_opt_self();
}

uint64_t sub_232287AD4()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = (void *)sub_2322B8708();
  type metadata accessor for LatestOrAddVisionPrescriptionDataSource();
  swift_allocObject();
  swift_retain();
  return sub_232269C78(v2, (uint64_t)sub_232287B44, v1);
}

void sub_232287B44(void *a1)
{
  uint64_t *v1;

  sub_2322877F4(a1, v1);
}

unint64_t sub_232287B4C()
{
  unint64_t result;

  result = qword_255FAE700;
  if (!qword_255FAE700)
  {
    type metadata accessor for VisionPrescriptionComponent();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255FAE700);
  }
  return result;
}

void sub_232287B80()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAE708)
  {
    sub_232287BD4();
    v0 = sub_2322B93D4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAE708);
  }
}

unint64_t sub_232287BD4()
{
  unint64_t result;

  result = qword_255FAE710;
  if (!qword_255FAE710)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255FAE710);
  }
  return result;
}

unint64_t sub_232287C28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FAE718;
  if (!qword_255FAE718)
  {
    v1 = type metadata accessor for VisionPrescriptionComponent();
    result = MEMORY[0x2349010BC](&unk_2322C2D2C, v1);
    atomic_store(result, (unint64_t *)&qword_255FAE718);
  }
  return result;
}

uint64_t type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldPupillaryDistanceDataSource()
{
  uint64_t result;

  result = qword_255FAE728;
  if (!qword_255FAE728)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_232287CA8()
{
  return swift_initClassMetadata2();
}

void *sub_232287CF4(unsigned __int8 a1, uint64_t a2)
{
  return sub_232287D2C(a1, a2, 0xD00000000000001DLL, 0x80000002322BE5A0);
}

void *sub_232287D10(unsigned __int8 a1, uint64_t a2)
{
  return sub_232287D2C(a1, a2, 0xD00000000000001ELL, 0x80000002322BE5C0);
}

void *sub_232287D2C(unsigned __int8 a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  void *v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28[3];
  uint64_t v29;

  v9 = sub_2322B8918();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 == 2)
  {
    v13 = *(_QWORD *)(v4 + 40);
  }
  else
  {
    if (a2 != 1)
    {
      sub_2322B88D0();
      v19 = sub_2322B890C();
      v20 = sub_2322B9008();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = swift_slowAlloc();
        v27 = swift_slowAlloc();
        v28[0] = v27;
        *(_DWORD *)v21 = 136446466;
        v29 = sub_232266EA0(a3, a4, v28);
        sub_2322B923C();
        *(_WORD *)(v21 + 12) = 2080;
        v29 = a2;
        type metadata accessor for HKVisionEye(0);
        v22 = sub_2322B8E34();
        v29 = sub_232266EA0(v22, v23, v28);
        sub_2322B923C();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_232241000, v19, v20, "[%{public}s] Unknown eye received: %s", (uint8_t *)v21, 0x16u);
        v24 = v27;
        swift_arrayDestroy();
        MEMORY[0x234901170](v24, -1, -1);
        MEMORY[0x234901170](v21, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      return 0;
    }
    v13 = *(_QWORD *)(v4 + 32);
  }
  swift_beginAccess();
  v14 = *(_QWORD *)(v13 + 24);
  if (!*(_QWORD *)(v14 + 16))
    return 0;
  v15 = sub_2322B2760(a1);
  if ((v16 & 1) == 0)
    return 0;
  v17 = *(void **)(*(_QWORD *)(v14 + 56) + 8 * v15);
  v18 = v17;
  return v17;
}

uint64_t sub_232287F64@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void (*v26)(uint64_t *, _QWORD);
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t);
  uint64_t *v38;
  _QWORD v40[2];
  uint64_t v41;
  int v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57[6];

  v4 = v3;
  v42 = a2;
  v54 = a3;
  v52 = sub_2322B8840();
  v50 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v55 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2322B8474();
  v48 = *(_QWORD *)(v7 - 8);
  v49 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v53 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_23224BE78(0, &qword_255FABDE8, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC408], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v10);
  v51 = (char *)v40 - v11;
  sub_23224BE78(0, (unint64_t *)&unk_255FADB30, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC088], v9);
  MEMORY[0x24BDAC7A8](v12);
  v44 = (char *)v40 - v13;
  v45 = sub_2322B896C();
  v43 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v15 = (char *)v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_2322B893C();
  v40[0] = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v17 = (char *)v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_2322B8A38();
  v56 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322B8A2C();
  v21 = *(_BYTE *)(v3 + qword_255FAC170);
  v22 = sub_23227E578(a1, 0, v21);
  v24 = v23;
  swift_bridgeObjectRetain();
  v46 = v24;
  v47 = v22;
  sub_2322B8A20();
  v25 = objc_msgSend((id)objc_opt_self(), sel_systemBlueColor);
  v26 = (void (*)(uint64_t *, _QWORD))sub_2322B89F0();
  sub_2322B89D8();
  v26(v57, 0);
  v27 = a1;
  v40[1] = v4;
  sub_232268D84(a1);
  if (!v28)
  {
    if (qword_255FAB900 != -1)
      swift_once();
    sub_2322B7F58();
  }
  sub_2322B89C0();
  sub_23227E578(a1, v42 & 1, v21);
  sub_2322B8A20();
  v57[3] = v18;
  v57[4] = MEMORY[0x24BEBC5F0];
  v29 = sub_23224FA10(v57);
  (*(void (**)(uint64_t *, char *, uint64_t))(v56 + 16))(v29, v20, v18);
  sub_23224BE78(0, &qword_255FAC418, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC0E0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_2322B8984();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_2322C0E70;
  v30 = v40[0];
  v31 = v41;
  (*(void (**)(char *, _QWORD, uint64_t))(v40[0] + 104))(v17, *MEMORY[0x24BEBC058], v41);
  v32 = sub_2322B8948();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v44, 1, 1, v32);
  sub_2322B8960();
  sub_2322B8954();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v45);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
  v33 = swift_allocObject();
  swift_weakInit();
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = v33;
  *(_QWORD *)(v34 + 24) = v27;
  v35 = sub_2322B899C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v51, 1, 1, v35);
  (*(void (**)(char *, _QWORD, uint64_t))(v48 + 104))(v53, *MEMORY[0x24BE43600], v49);
  (*(void (**)(char *, _QWORD, uint64_t))(v50 + 104))(v55, *MEMORY[0x24BE44C60], v52);
  v36 = sub_2322B8570();
  v37 = (uint64_t (*)(uint64_t))MEMORY[0x24BE438C0];
  v38 = v54;
  v54[3] = v36;
  v38[4] = sub_232245044(&qword_255FADB80, v37, MEMORY[0x24BE438A8]);
  sub_23224FA10(v38);
  swift_retain();
  sub_2322B8564();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v20, v18);
  return swift_release();
}

uint64_t sub_23228855C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void (*v26)(uint64_t *, _QWORD);
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, _QWORD, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t);
  uint64_t *v43;
  uint64_t v45;
  int v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63[6];

  v4 = v3;
  v46 = a2;
  v60 = a3;
  v58 = sub_2322B8840();
  v56 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v61 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2322B8474();
  v54 = *(_QWORD *)(v7 - 8);
  v55 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v59 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_23224BE78(0, &qword_255FABDE8, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC408], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v10);
  v57 = (char *)&v45 - v11;
  sub_23224BE78(0, (unint64_t *)&unk_255FADB30, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC088], v9);
  MEMORY[0x24BDAC7A8](v12);
  v48 = (char *)&v45 - v13;
  v49 = sub_2322B896C();
  v47 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_2322B893C();
  v16 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_2322B8A38();
  v62 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v20 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322B8A2C();
  v21 = *(_BYTE *)(v3 + qword_255FAC170);
  v22 = sub_23227E578(a1, 0, v21);
  v24 = v23;
  swift_bridgeObjectRetain();
  v50 = v24;
  v51 = v22;
  sub_2322B8A20();
  v25 = objc_msgSend((id)objc_opt_self(), sel_systemBlueColor);
  v26 = (void (*)(uint64_t *, _QWORD))sub_2322B89F0();
  sub_2322B89D8();
  v26(v63, 0);
  v53 = v4;
  swift_retain();
  v27 = sub_232287D2C(0xCu, a1, 0xD00000000000001DLL, 0x80000002322BE5A0);
  swift_release();
  swift_retain();
  v28 = sub_232287D2C(0xBu, a1, 0xD00000000000001DLL, 0x80000002322BE5A0);
  swift_release();
  sub_232289704((uint64_t)v27, (uint64_t)v28);
  v30 = v29;

  if (!v30)
  {
    if (qword_255FAB900 != -1)
      swift_once();
    sub_2322B7F58();
  }
  sub_2322B89C0();
  sub_23227E578(a1, v46 & 1, v21);
  sub_2322B8A20();
  v31 = v52;
  v63[3] = v52;
  v63[4] = MEMORY[0x24BEBC5F0];
  v32 = sub_23224FA10(v63);
  (*(void (**)(uint64_t *, char *, uint64_t))(v62 + 16))(v32, v20, v31);
  sub_23224BE78(0, &qword_255FAC418, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC0E0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_2322B8984();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_2322C0E70;
  v33 = a1;
  v34 = v16;
  v35 = *(void (**)(char *, _QWORD, uint64_t))(v16 + 104);
  v36 = v45;
  v35(v18, *MEMORY[0x24BEBC058], v45);
  v37 = sub_2322B8948();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v48, 1, 1, v37);
  sub_2322B8960();
  sub_2322B8954();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v15, v49);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v18, v36);
  v38 = swift_allocObject();
  swift_weakInit();
  v39 = swift_allocObject();
  *(_QWORD *)(v39 + 16) = v38;
  *(_QWORD *)(v39 + 24) = v33;
  v40 = sub_2322B899C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v57, 1, 1, v40);
  (*(void (**)(char *, _QWORD, uint64_t))(v54 + 104))(v59, *MEMORY[0x24BE43600], v55);
  (*(void (**)(char *, _QWORD, uint64_t))(v56 + 104))(v61, *MEMORY[0x24BE44C60], v58);
  v41 = sub_2322B8570();
  v42 = (uint64_t (*)(uint64_t))MEMORY[0x24BE438C0];
  v43 = v60;
  v60[3] = v41;
  v43[4] = sub_232245044(&qword_255FADB80, v42, MEMORY[0x24BE438A8]);
  sub_23224FA10(v43);
  swift_retain();
  sub_2322B8564();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v20, v31);
  return swift_release();
}

uint64_t sub_232288BFC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  char v11;
  _BYTE *v12;
  void *v13;
  int v14;
  unsigned int v15;
  int v16;
  id v17;
  void *v18;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (!result)
    return result;
  v6 = result;
  v7 = qword_255FAC188;
  v8 = *(_QWORD *)(result + qword_255FAC188);
  v9 = qword_255FAC170;
  v10 = *(unsigned __int8 *)(result + qword_255FAC178);
  v11 = *(_BYTE *)(result + qword_255FAC170);
  v12 = objc_allocWithZone((Class)type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlViewController());
  v12[qword_255FAD098] = v11;
  *(_QWORD *)&v12[qword_255FAD0A0] = a3;
  *(_QWORD *)&v12[qword_255FAD0A8] = v8;
  type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource(0);
  swift_allocObject();
  swift_retain_n();
  sub_23229C488(v11, a3, v10, v8);
  swift_retain();
  v13 = (void *)sub_2322B884C();
  swift_release();
  swift_release();
  v14 = *(unsigned __int8 *)(v6 + v9);
  if (v14 == 6)
  {
    v15 = 0x10100u >> (8 * *(_BYTE *)(*(_QWORD *)(v6 + v7) + 64));
    swift_retain();
    v16 = 14;
    goto LABEL_6;
  }
  if (v14 == 4)
  {
    v15 = 0x10100u >> (8 * *(_BYTE *)(*(_QWORD *)(v6 + v7) + 64));
    swift_retain();
    v16 = 16;
LABEL_6:
    sub_2322B5264(v16, 0, 0, v15);
    swift_release();
  }
  v17 = objc_msgSend(a1, sel_navigationController);
  if (v17)
  {
    v18 = v17;
    objc_msgSend(v17, sel_pushViewController_animated_, v13, 1);

  }
  return swift_release();
}

uint64_t sub_232288DF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  _BOOL4 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + qword_255FAC188);
  swift_retain();
  sub_2322B8B4C();
  swift_release();
  if (v25 == 2)
  {
    v2 = *(_QWORD *)(v1 + 40);
  }
  else
  {
    if (v25 != 1)
      goto LABEL_8;
    v2 = *(_QWORD *)(v1 + 48);
  }
  v3 = *(_QWORD *)(v2 + 32);
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  if (*(_QWORD *)(v4 + 16))
  {
    v5 = sub_2322B2760(0xCu);
    if ((v6 & 1) != 0)
    {
      if (*(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v5))
        goto LABEL_22;
    }
  }
LABEL_8:
  swift_retain();
  sub_2322B8B4C();
  swift_release();
  if (v25 == 2)
  {
    v7 = *(_QWORD *)(v1 + 40);
  }
  else
  {
    if (v25 != 1)
      goto LABEL_15;
    v7 = *(_QWORD *)(v1 + 48);
  }
  v8 = *(_QWORD *)(v7 + 40);
  swift_beginAccess();
  v9 = *(_QWORD *)(v8 + 24);
  if (*(_QWORD *)(v9 + 16))
  {
    v10 = sub_2322B2760(0xCu);
    if ((v11 & 1) != 0)
    {
      if (*(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10))
        goto LABEL_22;
    }
  }
LABEL_15:
  swift_retain();
  sub_2322B8B4C();
  swift_release();
  if (v25 == 2)
  {
    v12 = *(_QWORD *)(v1 + 40);
  }
  else
  {
    if (v25 != 1)
      goto LABEL_23;
    v12 = *(_QWORD *)(v1 + 48);
  }
  v13 = *(_QWORD *)(v12 + 32);
  swift_beginAccess();
  v14 = *(_QWORD *)(v13 + 24);
  if (!*(_QWORD *)(v14 + 16)
    || (v15 = sub_2322B2760(0xBu), (v16 & 1) == 0)
    || !*(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v15))
  {
LABEL_23:
    swift_retain();
    sub_2322B8B4C();
    swift_release();
    if (v26 == 2)
    {
      v18 = *(_QWORD *)(v1 + 40);
    }
    else
    {
      if (v26 != 1)
        goto LABEL_30;
      v18 = *(_QWORD *)(v1 + 48);
    }
    v19 = *(_QWORD *)(v18 + 40);
    swift_beginAccess();
    v20 = *(_QWORD *)(v19 + 24);
    if (*(_QWORD *)(v20 + 16))
    {
      v21 = sub_2322B2760(0xBu);
      if ((v22 & 1) != 0)
      {
        v17 = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * v21) != 0;
        goto LABEL_31;
      }
    }
LABEL_30:
    v17 = 0;
    goto LABEL_31;
  }
LABEL_22:
  v17 = 1;
LABEL_31:
  sub_232269B74(0, &qword_255FAC200, (unint64_t *)&qword_255FABD20);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_2322C0E50;
  sub_23228855C(2, v17, (uint64_t *)(v23 + 32));
  sub_23228855C(1, v17, (uint64_t *)(v23 + 72));
  return v23;
}

uint64_t sub_232289088(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v20 = *v1;
  sub_23224BE78(0, &qword_255FAE778, (uint64_t (*)(uint64_t))sub_232289A8C, MEMORY[0x24BDB9ED8]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - v9;
  sub_232289AE4();
  v12 = v11;
  v21 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23226986C(a1);
  swift_beginAccess();
  sub_23224BE78(0, qword_255FAD6F8, (uint64_t (*)(uint64_t))sub_232289A8C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  swift_retain();
  sub_2322B8BE8();
  swift_endAccess();
  swift_beginAccess();
  sub_2322B8BE8();
  swift_endAccess();
  sub_232289B68();
  sub_2322B8C60();
  v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v8, v4);
  v15(v10, v4);
  *(_QWORD *)(swift_allocObject() + 16) = v20;
  v16 = swift_allocObject();
  swift_weakInit();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = sub_232289BE0;
  *(_QWORD *)(v17 + 24) = v16;
  sub_232245044(&qword_255FAE790, (uint64_t (*)(uint64_t))sub_232289AE4, MEMORY[0x24BDB9450]);
  sub_2322B8C78();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v14, v12);
  swift_beginAccess();
  sub_2322B8B34();
  swift_endAccess();
  swift_release();
  return swift_release();
}

uint64_t sub_232289384()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v0 = sub_2322B8918();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322B88D0();
  v4 = sub_2322B890C();
  v5 = sub_2322B9014();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v12 = v7;
    *(_DWORD *)v6 = 136315138;
    v8 = sub_2322B9464();
    v11 = sub_232266EA0(v8, v9, &v12);
    sub_2322B923C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_232241000, v4, v5, "[%s] pupillary distance cancellable completed.", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234901170](v7, -1, -1);
    MEMORY[0x234901170](v6, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_232289510()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  uint64_t v5;

  v0 = sub_2322B80B4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_23224BE78(0, (unint64_t *)&unk_255FADB00, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    sub_2322B83F0();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_2322C0E70;
    sub_232288DF4();
    sub_2322B80A8();
    sub_2322B8090();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    sub_2322B83E4();
    sub_2322B8438();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_232289688()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_232289698()
{
  sub_2322B8468();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_2322896FC()
{
  return type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldPupillaryDistanceDataSource();
}

uint64_t sub_232289704(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = sub_23225B628(a1, 12);
  v5 = v4;
  v7 = sub_23225B628(a2, 11);
  v8 = v6;
  if (v5)
  {
    if (v6)
    {
      if (qword_255FAB900 != -1)
        swift_once();
      sub_2322B7F58();
      sub_232269B74(0, (unint64_t *)&qword_255FADB70, (unint64_t *)&qword_255FAF820);
      v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_2322C0E50;
      v10 = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v9 + 56) = MEMORY[0x24BEE0D00];
      v11 = sub_23224EC60();
      *(_QWORD *)(v9 + 32) = v3;
      *(_QWORD *)(v9 + 40) = v5;
      *(_QWORD *)(v9 + 96) = v10;
      *(_QWORD *)(v9 + 104) = v11;
      *(_QWORD *)(v9 + 64) = v11;
      *(_QWORD *)(v9 + 72) = v7;
      *(_QWORD *)(v9 + 80) = v8;
    }
    else
    {
      if (qword_255FAB900 != -1)
        swift_once();
      sub_2322B7F58();
      sub_232269B74(0, (unint64_t *)&qword_255FADB70, (unint64_t *)&qword_255FAF820);
      v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_2322C0E70;
      *(_QWORD *)(v13 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v13 + 64) = sub_23224EC60();
      *(_QWORD *)(v13 + 32) = v3;
      *(_QWORD *)(v13 + 40) = v5;
    }
LABEL_13:
    v7 = sub_2322B8DF8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v7;
  }
  if (v6)
  {
    if (qword_255FAB900 != -1)
      swift_once();
    sub_2322B7F58();
    sub_232269B74(0, (unint64_t *)&qword_255FADB70, (unint64_t *)&qword_255FAF820);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_2322C0E70;
    *(_QWORD *)(v12 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v12 + 64) = sub_23224EC60();
    *(_QWORD *)(v12 + 32) = v7;
    *(_QWORD *)(v12 + 40) = v8;
    goto LABEL_13;
  }
  return v7;
}

uint64_t sub_232289A50()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_232289A74(void *a1)
{
  uint64_t v1;

  return sub_232288BFC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_232289A8C(uint64_t a1)
{
  sub_23224BE78(a1, (unint64_t *)&unk_255FAF9D0, (uint64_t (*)(uint64_t))sub_232289AA8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

unint64_t sub_232289AA8()
{
  unint64_t result;

  result = qword_255FABCD0;
  if (!qword_255FABCD0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255FABCD0);
  }
  return result;
}

void sub_232289AE4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAE780)
  {
    sub_23224BE78(255, &qword_255FAE778, (uint64_t (*)(uint64_t))sub_232289A8C, MEMORY[0x24BDB9ED8]);
    sub_232289B68();
    v0 = sub_2322B8A44();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAE780);
  }
}

unint64_t sub_232289B68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FAE788;
  if (!qword_255FAE788)
  {
    sub_23224BE78(255, &qword_255FAE778, (uint64_t (*)(uint64_t))sub_232289A8C, MEMORY[0x24BDB9ED8]);
    result = MEMORY[0x2349010BC](MEMORY[0x24BDB9EE8], v1);
    atomic_store(result, (unint64_t *)&qword_255FAE788);
  }
  return result;
}

uint64_t sub_232289BC8()
{
  return swift_deallocObject();
}

uint64_t sub_232289BD8()
{
  return sub_232289384();
}

uint64_t sub_232289BE0()
{
  return sub_232289510();
}

uint64_t sub_232289BE8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_232289C0C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldCell(uint64_t a1)
{
  return sub_23224E434(a1, qword_255FAE7B0);
}

uint64_t sub_232289C54()
{
  return swift_initClassMetadata2();
}

uint64_t sub_232289C9C()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255FAB900 != -1)
    swift_once();
  result = sub_2322B7F58();
  qword_255FAE798 = result;
  unk_255FAE7A0 = v1;
  return result;
}

void sub_232289D40(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_232289D78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_255FAB900 != -1)
    swift_once();
  sub_2322B7F58();
  sub_23224EBB4(0, (unint64_t *)&qword_255FADB70, (unint64_t *)&qword_255FAF820, MEMORY[0x24BEE45D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_2322C0E70;
  v2 = sub_232273488(v0);
  v4 = v3;
  *(_QWORD *)(v1 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v1 + 64) = sub_23224EC60();
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v4;
  v5 = sub_2322B8E28();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_23228A334(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 48));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_23228A368()
{
  return 8;
}

uint64_t sub_23228A370(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 36));
}

uint64_t sub_23228A37C()
{
  uint64_t v0;

  if (qword_255FABA80 != -1)
    swift_once();
  v0 = qword_255FAE798;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_23228A3D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t);

  v2 = *(uint64_t (**)(uint64_t))(v1 + *(int *)(a1 + 28));
  if (v2)
    return v2(v1);
  else
    return 0;
}

id sub_23228A41C()
{
  return objc_msgSend((id)objc_opt_self(), sel_systemBlueColor);
}

uint64_t sub_23228A448(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + *(int *)(a3 + 32));
  if (v4)
    return v4(v3, result, a2);
  return result;
}

unint64_t sub_23228A48C()
{
  sub_2322B8090();
  sub_2322B8EAC();
  swift_bridgeObjectRelease();
  return 0xD000000000000036;
}

uint64_t sub_23228A4EC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(void);
  int v8;
  _BYTE v11[24];
  uint64_t v12;

  sub_23224BE78(0, &qword_255FAE800, type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v0);
  v2 = &v11[-v1 - 8];
  v3 = type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_2322B8780();
  v7 = (void (*)(void))sub_2322B878C();
  v7();
  sub_2322B875C();
  if (v12)
  {
    sub_23224EC14(0, (unint64_t *)&qword_255FABD20);
    v8 = swift_dynamicCast();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v2, v8 ^ 1u, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) != 1)
    {
      sub_23228B8D4((uint64_t)v2, (uint64_t)v6);
      sub_23228A684(v6[*(int *)(v3 + 40)]);
      sub_2322B8744();
      swift_bridgeObjectRelease();
      return sub_23228B918((uint64_t)v6);
    }
  }
  else
  {
    sub_23224E5A0((uint64_t)v11);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  }
  return sub_23228B880((uint64_t)v2);
}

unint64_t sub_23228A684(unsigned __int8 a1)
{
  void *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  void *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v26;
  _QWORD v28[4];
  unint64_t v29;

  v2 = v1;
  v29 = MEMORY[0x24BEE4AF8];
  if (a1 <= 1u)
  {
    v3 = (void *)sub_2322B8DEC();
    v4 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v3);

    v5 = objc_allocWithZone(MEMORY[0x24BEBD410]);
    v6 = v2;
    v7 = objc_msgSend(v5, sel_initWithImage_style_target_action_, v4, 0, v6, sel_plusMinusPressed);

    objc_msgSend(v7, sel_setIsAccessibilityElement_, 1);
    v8 = qword_255FAB900;
    v9 = v7;
    if (v8 != -1)
      swift_once();
    sub_2322B7F58();
    v10 = (void *)sub_2322B8DEC();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setAccessibilityLabel_, v10);

    v11 = v9;
    MEMORY[0x234900630]();
    if (*(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_2322B8F48();
    sub_2322B8F54();
    sub_2322B8F3C();

  }
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD410]), sel_initWithBarButtonSystemItem_target_action_, 5, v2, 0);
  if (qword_255FAB900 != -1)
    swift_once();
  sub_2322B7F58();
  v13 = type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldCell(0);
  v28[3] = v13;
  v28[0] = v2;
  v14 = v2;
  v15 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  if (v13)
  {
    v16 = sub_232277A3C(v28, v13);
    v17 = *(_QWORD *)(v13 - 8);
    MEMORY[0x24BDAC7A8](v16);
    v19 = (char *)&v28[-1] - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v17 + 16))(v19);
    v20 = sub_2322B93E0();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v13);
    sub_232258500((uint64_t)v28);
  }
  else
  {
    v20 = 0;
  }
  v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD410]), sel_initWithTitle_style_target_action_, v15, 0, v20, sel_done);

  swift_unknownObjectRelease();
  if (v29 >> 62)
  {
    swift_bridgeObjectRetain();
    v26 = sub_2322B9368();
    swift_bridgeObjectRelease();
    v23 = v26 + 2;
    if (!__OFADD__(v26, 2))
    {
LABEL_14:
      sub_23228B9C0(v23, 1);
      sub_2322B8F3C();
      v12 = v12;
      MEMORY[0x234900630]();
      if (*(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        goto LABEL_15;
      goto LABEL_21;
    }
  }
  else
  {
    v22 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
    v23 = v22 + 2;
    if (!__OFADD__(v22, 2))
      goto LABEL_14;
  }
  __break(1u);
LABEL_21:
  sub_2322B8F48();
LABEL_15:
  sub_2322B8F54();
  sub_2322B8F3C();
  v24 = v21;
  MEMORY[0x234900630]();
  if (*(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_2322B8F48();
  sub_2322B8F54();
  sub_2322B8F3C();

  return v29;
}

uint64_t sub_23228AB30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, char *, void *, void (*)(char), _QWORD *);
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  char v24[24];
  uint64_t v25;

  v1 = v0;
  v2 = sub_2322B8228();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v24[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_23224BE78(0, &qword_255FAE800, type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v24[-v7 - 8];
  v9 = type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = &v24[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_2322B875C();
  if (!v25)
  {
    sub_23224E5A0((uint64_t)v24);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    return sub_23228B880((uint64_t)v8);
  }
  sub_23224EC14(0, (unint64_t *)&qword_255FABD20);
  v13 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, v13 ^ 1u, 1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_23228B880((uint64_t)v8);
  sub_23228B8D4((uint64_t)v8, (uint64_t)v12);
  sub_2322B8768();
  if (v14)
  {
    v24[0] = v12[*(int *)(v9 + 40)];
    sub_23225C7C8();
    sub_2322B81EC();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t))(v3 + 88))(v5, v2) == *MEMORY[0x24BE41A28])
    {
      (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
      v15 = *(_QWORD *)v5;
      v16 = *((_QWORD *)v5 + 1);

      v17 = *(void (**)(uint64_t, uint64_t, char *, void *, void (*)(char), _QWORD *))&v12[*(int *)(v9 + 24)];
      if (v17)
      {
        v18 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v19 = (_QWORD *)swift_allocObject();
        v19[2] = v18;
        v19[3] = v15;
        v19[4] = v16;
        v20 = v1 + qword_255FAE7A8;
        swift_beginAccess();
        v21 = (void *)MEMORY[0x2349011D0](v20);
        sub_23227E2C8((uint64_t)v17);
        swift_bridgeObjectRetain();
        v17(v15, v16, v12, v21, sub_23228B9A4, v19);
        sub_23228B9B0((uint64_t)v17);
        swift_bridgeObjectRelease();
        swift_release();

      }
      else
      {
        sub_2322B8774();
        swift_bridgeObjectRelease();
      }
      return sub_23228B918((uint64_t)v12);
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_2322B8774();
  return sub_23228B918((uint64_t)v12);
}

void sub_23228AE90(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  v2 = a2 + 16;
  if ((a1 & 1) != 0)
  {
    swift_beginAccess();
    v3 = MEMORY[0x2349011D0](v2);
    if (!v3)
      return;
    v4 = (void *)v3;
    sub_2322B8774();
    goto LABEL_8;
  }
  swift_beginAccess();
  v5 = MEMORY[0x2349011D0](v2);
  if (v5)
  {
    v6 = (void *)v5;
    sub_2322B8774();

  }
  swift_beginAccess();
  v7 = MEMORY[0x2349011D0](v2);
  if (v7)
  {
    v4 = (void *)v7;
    sub_2322B8750();
LABEL_8:

  }
}

uint64_t sub_23228AF64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int v16;
  _BOOL8 v17;
  char v20[24];
  uint64_t v21;

  v5 = sub_2322B8228();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_23224BE78(0, &qword_255FAE800, type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v20[-v10 - 8];
  v12 = type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = &v20[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (!a4)
    return 1;
  sub_2322B875C();
  if (!v21)
  {
    sub_23224E5A0((uint64_t)v20);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    goto LABEL_6;
  }
  sub_23224EC14(0, (unint64_t *)&qword_255FABD20);
  v16 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, v16 ^ 1u, 1, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
LABEL_6:
    sub_23228B880((uint64_t)v11);
    return 1;
  }
  sub_23228B8D4((uint64_t)v11, (uint64_t)v15);
  v20[0] = v15[*(int *)(v12 + 40)];
  sub_23225C7C8();
  sub_2322B81EC();
  sub_23228B918((uint64_t)v15);
  v17 = (*(unsigned int (**)(char *, uint64_t))(v6 + 88))(v8, v5) != *MEMORY[0x24BE41A18];
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v17;
}

id sub_23228B188(void *a1, double a2, double a3, double a4, double a5)
{
  objc_super v11;

  swift_unknownObjectWeakInit();
  v11.receiver = a1;
  v11.super_class = (Class)type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldCell(0);
  return objc_msgSendSuper2(&v11, sel_initWithFrame_, a2, a3, a4, a5);
}

id sub_23228B20C(void *a1, uint64_t a2, uint64_t a3)
{
  objc_super v6;

  swift_unknownObjectWeakInit();
  v6.receiver = a1;
  v6.super_class = (Class)type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldCell(0);
  return objc_msgSendSuper2(&v6, sel_initWithCoder_, a3);
}

uint64_t sub_23228B268()
{
  return swift_unknownObjectWeakDestroy();
}

id sub_23228B278()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldCell(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23228B2AC()
{
  return swift_unknownObjectWeakDestroy();
}

uint64_t sub_23228B2BC()
{
  return type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldCell(0);
}

uint64_t sub_23228B2C4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + qword_255FAE7A8;
  swift_beginAccess();
  return MEMORY[0x2349011D0](v1);
}

void sub_23228B30C(void *a1)
{
  swift_beginAccess();
  swift_unknownObjectWeakAssign();

}

void (*sub_23228B360(_QWORD *a1))(id **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = qword_255FAE7A8;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x2349011D0](v5);
  return sub_23225F9F0;
}

uint64_t sub_23228B3D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  int v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t);
  int v18;
  void *v19;
  void *v20;
  char v21;
  id v22;
  id v23;
  void *v24;
  char *v25;
  int v26;
  uint64_t (*v27)(char *, uint64_t);
  void (*v28)(char *, uint64_t);
  unint64_t v29;
  id v30;
  int v31;
  int v32;
  char *v33;
  uint64_t v34;
  char v35[24];
  uint64_t v36;

  v0 = sub_2322B8228();
  v34 = *(_QWORD *)(v0 - 8);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v33 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v27 - v3;
  sub_23224BE78(0, &qword_255FAE800, type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v27 - v6;
  v8 = type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_2322B8768();
  if (!v13)
    return result;
  sub_2322B875C();
  if (!v36)
  {
    sub_23224E5A0((uint64_t)v35);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_8;
  }
  sub_23224EC14(0, (unint64_t *)&qword_255FABD20);
  v14 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, v14 ^ 1u, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    return sub_23228B880((uint64_t)v7);
  }
  sub_23228B8D4((uint64_t)v7, (uint64_t)v11);
  v32 = v11[*(int *)(v8 + 40)];
  v35[0] = v32;
  v15 = sub_23225C7C8();
  sub_2322B81EC();
  swift_bridgeObjectRelease();
  v16 = v34;
  v17 = *(uint64_t (**)(char *, uint64_t))(v34 + 88);
  v18 = v17(v4, v0);
  if (v18 == *MEMORY[0x24BE41A28])
  {
    v31 = v18;
    v28 = *(void (**)(char *, uint64_t))(v16 + 96);
    v29 = v15;
    v28(v4, v0);
    v19 = (void *)*((_QWORD *)v4 + 3);
    swift_bridgeObjectRelease();

    sub_23225C80C();
    v20 = (void *)sub_2322B9158();
    sub_23224BE78(0, qword_255FAE808, (uint64_t (*)(uint64_t))MEMORY[0x24BE41858], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    sub_2322B81D4();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_2322C0E70;
    sub_2322B81C8();
    v21 = v32;
    v22 = sub_23225BC98(v32);
    v30 = v20;
    v23 = objc_msgSend(v22, sel_stringFromNumber_, v20);
    if (v23)
    {
      v24 = v23;
      sub_2322B8E1C();
      v27 = v17;

      v35[0] = v21;
      v25 = v33;
      v17 = v27;
      sub_2322B81E0();
      swift_bridgeObjectRelease();
      v16 = v34;
      swift_bridgeObjectRelease();

    }
    else
    {

      v25 = v33;
      (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v33, *MEMORY[0x24BE41A20], v0);
      swift_bridgeObjectRelease();
    }
    v26 = v17(v25, v0);
    if (v26 == v31)
    {
      v28(v25, v0);

      sub_2322B8774();
      swift_bridgeObjectRelease();
      return sub_23228B918((uint64_t)v11);
    }
    else
    {
      sub_23228B918((uint64_t)v11);

      return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v25, v0);
    }
  }
  else
  {
    sub_23228B918((uint64_t)v11);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v4, v0);
  }
}

void sub_23228B828(void *a1)
{
  id v1;

  v1 = a1;
  sub_23228B3D0();

}

id sub_23228B85C(void *a1)
{
  return objc_msgSend(a1, sel_endEditing_, 1);
}

uint64_t type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem(uint64_t a1)
{
  return sub_23224E434(a1, qword_255FAE868);
}

uint64_t sub_23228B880(uint64_t a1)
{
  uint64_t v2;

  sub_23224BE78(0, &qword_255FAE800, type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23228B8D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23228B918(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23228B954()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23228B978()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23228B9A4(char a1)
{
  uint64_t v1;

  sub_23228AE90(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_23228B9B0(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_23228B9C0(uint64_t a1, char a2)
{
  uint64_t *v2;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *v2;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v5;
  v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
      return result;
    v7 = 1;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_2322B9368();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1)
    v9 = a1;
  else
    v9 = v8;
  result = MEMORY[0x234900A08](v7, v9, a2 & 1, v5);
  *v2 = result;
  return result;
}

_QWORD *sub_23228BA7C(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_2322B80B4();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = (_QWORD *)((char *)v4 + v13);
    v15 = (_QWORD *)((char *)a2 + v13);
    if (*v15)
    {
      v16 = v15[1];
      *v14 = *v15;
      v14[1] = v16;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v14 = *(_OWORD *)v15;
    }
    v18 = a3[7];
    v19 = (_QWORD *)((char *)v4 + v18);
    v20 = (_QWORD *)((char *)a2 + v18);
    if (*v20)
    {
      v21 = v20[1];
      *v19 = *v20;
      v19[1] = v21;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v19 = *(_OWORD *)v20;
    }
    v22 = a3[8];
    v23 = (_QWORD *)((char *)v4 + v22);
    v24 = (_QWORD *)((char *)a2 + v22);
    if (*v24)
    {
      v25 = v24[1];
      *v23 = *v24;
      v23[1] = v25;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v23 = *(_OWORD *)v24;
    }
    v26 = a3[10];
    *((_BYTE *)v4 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    *((_BYTE *)v4 + v26) = *((_BYTE *)a2 + v26);
    v27 = a3[12];
    *(_QWORD *)((char *)v4 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
    v28 = (_QWORD *)((char *)v4 + v27);
    v29 = (_QWORD *)((char *)a2 + v27);
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_23228BBE0(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_2322B80B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  if (*(_QWORD *)(a1 + a2[6]))
    swift_release();
  if (*(_QWORD *)(a1 + a2[7]))
    swift_release();
  if (*(_QWORD *)(a1 + a2[8]))
    swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_23228BC88(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2322B80B4();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  if (*v14)
  {
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v13 = *(_OWORD *)v14;
  }
  v16 = a3[7];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  if (*v18)
  {
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v17 = *(_OWORD *)v18;
  }
  v20 = a3[8];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  if (*v22)
  {
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v21 = *(_OWORD *)v22;
  }
  v24 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *((_BYTE *)a1 + v24) = *((_BYTE *)a2 + v24);
  v25 = a3[12];
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_23228BDC0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2322B80B4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (char *)a2 + v10;
  v13 = *(_QWORD *)((char *)a1 + v10);
  v14 = *(_QWORD *)((char *)a2 + v10);
  if (v13)
  {
    if (v14)
    {
      v15 = *((_QWORD *)v12 + 1);
      *v11 = v14;
      v11[1] = v15;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v14)
  {
    v16 = *((_QWORD *)v12 + 1);
    *v11 = v14;
    v11[1] = v16;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)v11 = *(_OWORD *)v12;
LABEL_8:
  v17 = a3[7];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (char *)a2 + v17;
  v20 = *(_QWORD *)((char *)a1 + v17);
  v21 = *(_QWORD *)((char *)a2 + v17);
  if (v20)
  {
    if (v21)
    {
      v22 = *((_QWORD *)v19 + 1);
      *v18 = v21;
      v18[1] = v22;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v21)
  {
    v23 = *((_QWORD *)v19 + 1);
    *v18 = v21;
    v18[1] = v23;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)v18 = *(_OWORD *)v19;
LABEL_15:
  v24 = a3[8];
  v25 = (_QWORD *)((char *)a1 + v24);
  v26 = (char *)a2 + v24;
  v27 = *(_QWORD *)((char *)a1 + v24);
  v28 = *(_QWORD *)((char *)a2 + v24);
  if (!v27)
  {
    if (v28)
    {
      v30 = *((_QWORD *)v26 + 1);
      *v25 = v28;
      v25[1] = v30;
      swift_retain();
      goto LABEL_22;
    }
LABEL_21:
    *(_OWORD *)v25 = *(_OWORD *)v26;
    goto LABEL_22;
  }
  if (!v28)
  {
    swift_release();
    goto LABEL_21;
  }
  v29 = *((_QWORD *)v26 + 1);
  *v25 = v28;
  v25[1] = v29;
  swift_retain();
  swift_release();
LABEL_22:
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  v31 = a3[12];
  v32 = (_QWORD *)((char *)a1 + v31);
  v33 = (_QWORD *)((char *)a2 + v31);
  *v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_23228BFA8(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2322B80B4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (uint64_t *)((char *)a2 + v10);
  v13 = *v12;
  if (*v12)
  {
    v14 = v12[1];
    *v11 = v13;
    v11[1] = v14;
  }
  else
  {
    *(_OWORD *)v11 = *(_OWORD *)v12;
  }
  v15 = a3[7];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (uint64_t *)((char *)a2 + v15);
  v18 = *v17;
  if (*v17)
  {
    v19 = v17[1];
    *v16 = v18;
    v16[1] = v19;
  }
  else
  {
    *(_OWORD *)v16 = *(_OWORD *)v17;
  }
  v20 = a3[8];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (uint64_t *)((char *)a2 + v20);
  v23 = *v22;
  if (*v22)
  {
    v24 = v22[1];
    *v21 = v23;
    v21[1] = v24;
  }
  else
  {
    *(_OWORD *)v21 = *(_OWORD *)v22;
  }
  v25 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *((_BYTE *)a1 + v25) = *((_BYTE *)a2 + v25);
  v26 = a3[12];
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  *(_OWORD *)((char *)a1 + v26) = *(_OWORD *)((char *)a2 + v26);
  return a1;
}

_QWORD *sub_23228C0B4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2322B80B4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (char *)a2 + v11;
  v14 = *(_QWORD *)((char *)a1 + v11);
  v15 = *(_QWORD *)((char *)a2 + v11);
  if (v14)
  {
    if (v15)
    {
      v16 = *((_QWORD *)v13 + 1);
      *v12 = v15;
      v12[1] = v16;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v15)
  {
    v17 = *((_QWORD *)v13 + 1);
    *v12 = v15;
    v12[1] = v17;
    goto LABEL_8;
  }
  *(_OWORD *)v12 = *(_OWORD *)v13;
LABEL_8:
  v18 = a3[7];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (char *)a2 + v18;
  v21 = *(_QWORD *)((char *)a1 + v18);
  v22 = *(_QWORD *)((char *)a2 + v18);
  if (v21)
  {
    if (v22)
    {
      v23 = *((_QWORD *)v20 + 1);
      *v19 = v22;
      v19[1] = v23;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v22)
  {
    v24 = *((_QWORD *)v20 + 1);
    *v19 = v22;
    v19[1] = v24;
    goto LABEL_15;
  }
  *(_OWORD *)v19 = *(_OWORD *)v20;
LABEL_15:
  v25 = a3[8];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (char *)a2 + v25;
  v28 = *(_QWORD *)((char *)a1 + v25);
  v29 = *(_QWORD *)((char *)a2 + v25);
  if (!v28)
  {
    if (v29)
    {
      v31 = *((_QWORD *)v27 + 1);
      *v26 = v29;
      v26[1] = v31;
      goto LABEL_22;
    }
LABEL_21:
    *(_OWORD *)v26 = *(_OWORD *)v27;
    goto LABEL_22;
  }
  if (!v29)
  {
    swift_release();
    goto LABEL_21;
  }
  v30 = *((_QWORD *)v27 + 1);
  *v26 = v29;
  v26[1] = v30;
  swift_release();
LABEL_22:
  v32 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *((_BYTE *)a1 + v32) = *((_BYTE *)a2 + v32);
  v33 = a3[12];
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  v34 = (_QWORD *)((char *)a1 + v33);
  v35 = (_QWORD *)((char *)a2 + v33);
  v37 = *v35;
  v36 = v35[1];
  *v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23228C250()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23228C25C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2322B80B4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_23228C2D8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23228C2E4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_2322B80B4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_23228C358()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2322B80B4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_23228C400()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FABDF0;
  if (!qword_255FABDF0)
  {
    v1 = type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem(255);
    result = MEMORY[0x2349010BC](&unk_2322C2FC8, v1);
    atomic_store(result, (unint64_t *)&qword_255FABDF0);
  }
  return result;
}

unint64_t sub_23228C448(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_23228ED18();
  v2 = sub_2322B938C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_23228ED80(v6, (uint64_t)&v15);
    v7 = v15;
    v8 = v16;
    result = sub_2322B26FC(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_23224C608(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23228C56C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_23228EE70(0, &qword_255FAE928, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (unint64_t *)&qword_255FABB78, (uint64_t)&unk_2322C0B50);
  v2 = sub_2322B938C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_23228EDC4(v6, (uint64_t)&v13, &qword_255FAE930, type metadata accessor for OpenExternalURLOptionsKey);
    v7 = v13;
    result = sub_2322B27B8(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_23224C608(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23228C6C0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_23228EE70(0, &qword_255FAE938, (uint64_t (*)(uint64_t))type metadata accessor for Key, (unint64_t *)&qword_255FABB00, (uint64_t)&unk_2322C06F0);
  v2 = sub_2322B938C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_23228EDC4(v6, (uint64_t)&v13, (unint64_t *)&qword_255FAE8F0, type metadata accessor for Key);
    v7 = v13;
    result = sub_2322B2868(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_23224C608(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_23228C814()
{
  qword_255FB3670 = 0x4062600000000000;
}

void sub_23228C828()
{
  qword_255FB3678 = 0x3FF0000000000000;
}

void sub_23228C838()
{
  qword_255FB3680 = 0x4020000000000000;
}

void sub_23228C848()
{
  qword_255FB3688 = 0x4008000000000000;
}

void sub_23228C858()
{
  qword_255FB3690 = 0x3FF0000000000000;
}

void sub_23228C868()
{
  qword_255FB3698 = 0x4024000000000000;
}

void sub_23228C878()
{
  qword_255FB36A0 = 0x4000000000000000;
}

double RangeView.range.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_range;
  swift_beginAccess();
  return *(double *)v1;
}

id RangeView.range.setter(double a1, double a2)
{
  char *v2;
  double *v5;
  double v6;

  v5 = (double *)&v2[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_range];
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  v6 = *(double *)&v2[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView__value];
  if (v6 < a1 || v6 > a2)
  {
    if (v6 <= a1)
      v6 = a1;
    if (v6 > a2)
      v6 = a2;
    *(double *)&v2[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView__value] = v6;
  }
  return objc_msgSend(v2, sel_setNeedsDisplay);
}

void (*RangeView.range.modify(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_range;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_23228C9B4;
}

void sub_23228C9B4(_QWORD **a1, char a2)
{
  _QWORD *v3;
  char *v4;
  double *v5;
  double v6;
  double v7;
  double v8;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v4 = (char *)v3[3];
    v5 = (double *)&v4[v3[4]];
    v7 = *v5;
    v6 = v5[1];
    v8 = *(double *)&v4[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView__value];
    if (*v5 > v8 || v8 > v6)
    {
      if (v8 > v7)
        v7 = *(double *)&v4[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView__value];
      if (v6 >= v7)
        v6 = v7;
      *(double *)&v4[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView__value] = v6;
      v4 = (char *)v3[3];
    }
    objc_msgSend(v4, sel_setNeedsDisplay);
  }
  free(v3);
}

double RangeView.value.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView__value);
}

id RangeView.value.setter(double a1)
{
  char *v1;
  double *v3;
  double v4;

  v3 = (double *)&v1[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_range];
  swift_beginAccess();
  v4 = *v3;
  if (*v3 < a1)
    v4 = a1;
  if (v3[1] < v4)
    v4 = v3[1];
  *(double *)&v1[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView__value] = v4;
  return objc_msgSend(v1, sel_setNeedsDisplay);
}

void (*RangeView.value.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView__value;
  v3[7] = v1;
  v3[8] = v4;
  v3[6] = *(_QWORD *)(v1 + v4);
  return sub_23228CB00;
}

void sub_23228CB00(uint64_t a1)
{
  void *v1;
  double v2;
  char *v3;
  double *v4;
  uint64_t v5;
  double v6;

  v1 = *(void **)a1;
  v2 = *(double *)(*(_QWORD *)a1 + 48);
  v3 = *(char **)(*(_QWORD *)a1 + 56);
  v4 = (double *)&v3[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_range];
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 64);
  swift_beginAccess();
  v6 = *v4;
  if (v2 > *v4)
    v6 = v2;
  if (v4[1] < v6)
    v6 = v4[1];
  *(double *)&v3[v5] = v6;
  objc_msgSend(v3, sel_setNeedsDisplay);
  free(v1);
}

uint64_t RangeView.minimumFractionDigits.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_minimumFractionDigits;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

id RangeView.minimumFractionDigits.setter(uint64_t a1)
{
  return sub_23228CC88(a1, &OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_minimumFractionDigits);
}

uint64_t (*RangeView.minimumFractionDigits.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_23228CC34;
}

uint64_t RangeView.maximumFractionDigits.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_maximumFractionDigits;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

id RangeView.maximumFractionDigits.setter(uint64_t a1)
{
  return sub_23228CC88(a1, &OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_maximumFractionDigits);
}

id sub_23228CC88(uint64_t a1, _QWORD *a2)
{
  char *v2;
  char *v4;

  v4 = &v2[*a2];
  swift_beginAccess();
  *(_QWORD *)v4 = a1;
  return objc_msgSend(v2, sel_setNeedsDisplay);
}

uint64_t (*RangeView.maximumFractionDigits.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_23228CC34;
}

uint64_t RangeView.showsPositivePrefix.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_showsPositivePrefix);
  swift_beginAccess();
  return *v1;
}

id RangeView.showsPositivePrefix.setter(char a1)
{
  char *v1;
  char *v3;

  v3 = &v1[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_showsPositivePrefix];
  swift_beginAccess();
  *v3 = a1;
  return objc_msgSend(v1, sel_setNeedsDisplay);
}

uint64_t (*RangeView.showsPositivePrefix.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_23228CC34;
}

id sub_23228CE18(uint64_t a1, char a2)
{
  id result;

  result = (id)swift_endAccess();
  if ((a2 & 1) == 0)
    return objc_msgSend(*(id *)(a1 + 24), sel_setNeedsDisplay);
  return result;
}

id RangeView.intrinsicContentSize.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_sizeThatFits_, 0.0, 0.0);
}

id RangeView.__allocating_init(range:value:)(double a1, double a2, double a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return RangeView.init(range:value:)(a1, a2, a3);
}

id RangeView.init(range:value:)(double a1, double a2, double a3)
{
  _BYTE *v3;
  double *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  objc_super v10;

  *(_QWORD *)&v3[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_minimumFractionDigits] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_maximumFractionDigits] = 2;
  v3[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_showsPositivePrefix] = 0;
  v4 = (double *)&v3[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_range];
  *v4 = a1;
  v4[1] = a2;
  if (a3 > a1)
    a1 = a3;
  if (a1 > a2)
    a1 = a2;
  *(double *)&v3[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView__value] = a1;
  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for RangeView();
  v5 = objc_msgSendSuper2(&v10, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v6 = (void *)objc_opt_self();
  v7 = v5;
  v8 = objc_msgSend(v6, sel_clearColor);
  objc_msgSend(v7, sel_setBackgroundColor_, v8);

  return v7;
}

uint64_t type metadata accessor for RangeView()
{
  return objc_opt_self();
}

id RangeView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void RangeView.init(coder:)()
{
  _BYTE *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_minimumFractionDigits] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_maximumFractionDigits] = 2;
  v0[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_showsPositivePrefix] = 0;

  sub_2322B9350();
  __break(1u);
}

Swift::Void __swiftcall RangeView.layoutSubviews()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for RangeView();
  objc_msgSendSuper2(&v1, sel_layoutSubviews);
  objc_msgSend(v0, sel_setNeedsDisplay);
}

id sub_23228D21C(char a1, double a2)
{
  uint64_t v2;
  id v5;
  _QWORD *v6;
  _QWORD *v7;
  _BYTE *v8;
  id v9;
  id v10;
  id v11;

  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16F0]), sel_init);
  if ((a1 & 1) != 0)
  {
    v6 = (_QWORD *)(v2 + OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_minimumFractionDigits);
    swift_beginAccess();
    objc_msgSend(v5, sel_setMinimumFractionDigits_, *v6);
    v7 = (_QWORD *)(v2 + OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_maximumFractionDigits);
    swift_beginAccess();
    objc_msgSend(v5, sel_setMaximumFractionDigits_, *v7);
  }
  v8 = (_BYTE *)(v2 + OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_showsPositivePrefix);
  swift_beginAccess();
  if (*v8 == 1)
  {
    v9 = objc_msgSend(v5, sel_plusSign);
    objc_msgSend(v5, sel_setPositivePrefix_, v9);

  }
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, a2);
  v11 = objc_msgSend(v5, sel_stringFromNumber_, v10);

  if (!v11)
  {
    sub_23224C618(0, (unint64_t *)&qword_255FAE3A8);
    v11 = (id)sub_2322B917C();
  }

  return v11;
}

Swift::Void __swiftcall RangeView.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  void *v1;
  void *v2;
  Class isa;
  id v4;
  void *v5;
  objc_class *v6;
  char v7;
  objc_super v8;

  v2 = v1;
  isa = a1.value.super.isa;
  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for RangeView();
  objc_msgSendSuper2(&v8, sel_traitCollectionDidChange_, isa);
  v4 = objc_msgSend(v2, sel_traitCollection);
  v5 = v4;
  if (!isa)
  {
    if (!v4)
      return;

    goto LABEL_7;
  }
  if (!v4
    || (sub_23224C618(0, &qword_255FAE8E8),
        v6 = isa,
        v7 = sub_2322B9170(),
        v6,
        v6,
        v5,
        (v7 & 1) == 0))
  {
LABEL_7:
    objc_msgSend(v2, sel_invalidateIntrinsicContentSize);
    objc_msgSend(v2, sel_setNeedsDisplay);
  }
}

Swift::Void __swiftcall RangeView.draw(_:)(CGRect a1)
{
  uint64_t v1;
  CGFloat height;
  CGFloat width;
  CGFloat y;
  CGFloat x;
  CGContext *v6;
  CGContext *v7;
  double v8;
  id v9;
  uint64_t inited;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  void *v26;
  double v27;
  CGRect v28;

  height = a1.size.height;
  width = a1.size.width;
  y = a1.origin.y;
  x = a1.origin.x;
  v6 = UIGraphicsGetCurrentContext();
  if (v6)
  {
    v7 = v6;
    v8 = sub_23228D860(x, y, width, height);
    UIGraphicsPushContext(v7);
    v9 = sub_23228D21C(1, *(double *)(v1 + OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView__value));
    sub_23228E9F8();
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2322C0E50;
    v11 = (void *)*MEMORY[0x24BEBB360];
    *(_QWORD *)(inited + 32) = *MEMORY[0x24BEBB360];
    v12 = sub_23224C618(0, (unint64_t *)&unk_255FACCD0);
    v13 = v11;
    *(_QWORD *)(inited + 40) = sub_2322B9128();
    v14 = (void *)*MEMORY[0x24BEBB368];
    *(_QWORD *)(inited + 64) = v12;
    *(_QWORD *)(inited + 72) = v14;
    v15 = (void *)objc_opt_self();
    v16 = v14;
    v17 = objc_msgSend(v15, sel_labelColor);
    *(_QWORD *)(inited + 104) = sub_23224C618(0, qword_255FAF700);
    *(_QWORD *)(inited + 80) = v17;
    sub_23228C6C0(inited);
    type metadata accessor for Key(0);
    sub_232245044((unint64_t *)&qword_255FABB00, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2322C06F0);
    v18 = (void *)sub_2322B8DBC();
    objc_msgSend(v9, sel_sizeWithAttributes_, v18);
    v20 = v19;
    v22 = v21;

    v28.origin.x = x;
    v28.origin.y = y;
    v28.size.width = width;
    v28.size.height = height;
    v23 = CGRectGetWidth(v28) - v20;
    v24 = 0.0;
    if (v8 + v20 * -0.5 > 0.0)
      v24 = v8 + v20 * -0.5;
    if (v23 >= v24)
      v25 = v24;
    else
      v25 = v23;
    v26 = (void *)sub_2322B8DBC();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_drawAtPoint_withAttributes_, v26, v25, y);

    UIGraphicsPopContext();
    v27 = sub_23228D99C(v7, x, y, width, height, v22);
    sub_23228EA5C(v7, v8, v27);
    sub_23228DBF8(v7, x, y, width, height);

  }
}

double sub_23228D860(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  char *v4;
  double *v9;
  double v10;
  double v11;
  double v12;
  double Width;
  double v14;
  double v15;
  id v16;
  id v17;
  double v18;
  CGRect v20;

  v9 = (double *)&v4[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_range];
  swift_beginAccess();
  v10 = *(double *)&v4[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView__value];
  v12 = *v9;
  v11 = v9[1];
  v20.origin.x = a1;
  v20.origin.y = a2;
  v20.size.width = a3;
  v20.size.height = a4;
  Width = CGRectGetWidth(v20);
  if (qword_255FABAB0 != -1)
    swift_once();
  v14 = Width - *(double *)&qword_255FB3698;
  v15 = vabdd_f64(v12, v10) / (fabs(v12) + fabs(v11));
  v16 = objc_msgSend(v4, sel_traitCollection);
  v17 = objc_msgSend(v16, sel_layoutDirection);

  v18 = 1.0 - v15;
  if (v17 != (id)1)
    v18 = v15;
  return v14 * v18 + *(double *)&qword_255FB3698 * 0.5;
}

double sub_23228D99C(CGContext *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, double a6)
{
  void *v6;
  void *v7;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  double v18;
  double Width;
  double v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  char **v25;
  id v26;
  CGColor *v27;
  const CGPath *v28;
  uint64_t v30;
  CGRect v31;

  v7 = v6;
  v14 = sub_2322B815C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255FABA90 != -1)
    swift_once();
  v18 = *(double *)&qword_255FB3678;
  v31.origin.x = a2;
  v31.origin.y = a3;
  v31.size.width = a4;
  v31.size.height = a5;
  Width = CGRectGetWidth(v31);
  if (qword_255FABA98 != -1)
    swift_once();
  v20 = a3 + a6 + v18;
  v21 = objc_msgSend((id)objc_opt_self(), sel_bezierPathWithRoundedRect_cornerRadius_, a2, v20, Width, *(double *)&qword_255FB3680, *(double *)&qword_255FB3680 * 0.5);
  v22 = objc_msgSend(v7, sel_traitCollection);
  v23 = objc_msgSend(v22, sel_userInterfaceStyle);

  v24 = (void *)objc_opt_self();
  v25 = &selRef_tertiarySystemFillColor;
  if (v23 != (id)2)
    v25 = &selRef_systemGray5Color;
  v26 = objc_msgSend(v24, *v25);
  v27 = (CGColor *)objc_msgSend(v26, sel_CGColor);
  CGContextSetFillColorWithColor(a1, v27);

  v28 = (const CGPath *)objc_msgSend(v21, sel_CGPath);
  CGContextAddPath(a1, v28);

  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x24BDBD730], v14);
  sub_2322B8F90();

  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  return v20;
}

void sub_23228DBF8(CGContext *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  char *v5;
  double *v10;
  double v11;
  id v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  double v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  uint64_t inited;
  void *v24;
  uint64_t v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  double v32;
  double v33;
  double v34;
  void *v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  id v41;
  id v42;
  CGFloat Width;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  void *v50;
  void *v51;
  CGFloat Height;
  double v53;
  double v54;
  id v55;
  CGRect v56;
  CGRect v57;

  UIGraphicsPushContext(a1);
  v10 = (double *)&v5[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_range];
  swift_beginAccess();
  v11 = *v10;
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16F0]), sel_init);
  v55 = v5;
  v13 = &v5[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_showsPositivePrefix];
  swift_beginAccess();
  if (*v13 == 1)
  {
    v14 = objc_msgSend(v12, sel_plusSign);
    objc_msgSend(v12, sel_setPositivePrefix_, v14);

  }
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, v11);
  v16 = objc_msgSend(v12, sel_stringFromNumber_, v15);

  if (!v16)
  {
    sub_23224C618(0, (unint64_t *)&qword_255FAE3A8);
    v16 = (id)sub_2322B917C();
  }

  v17 = v10[1];
  v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16F0]), sel_init);
  v19 = v18;
  if (*v13 == 1)
  {
    v20 = objc_msgSend(v18, sel_plusSign);
    objc_msgSend(v19, sel_setPositivePrefix_, v20);

  }
  v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, v17);
  v22 = objc_msgSend(v19, sel_stringFromNumber_, v21);

  if (!v22)
  {
    sub_23224C618(0, (unint64_t *)&qword_255FAE3A8);
    v22 = (id)sub_2322B917C();
  }

  sub_23228E9F8();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2322C0E50;
  v24 = (void *)*MEMORY[0x24BEBB360];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BEBB360];
  v25 = sub_23224C618(0, (unint64_t *)&unk_255FACCD0);
  v26 = v24;
  *(_QWORD *)(inited + 40) = sub_2322B9128();
  v27 = (void *)*MEMORY[0x24BEBB368];
  *(_QWORD *)(inited + 64) = v25;
  *(_QWORD *)(inited + 72) = v27;
  v28 = (void *)objc_opt_self();
  v29 = v27;
  v30 = objc_msgSend(v28, sel_secondaryLabelColor);
  *(_QWORD *)(inited + 104) = sub_23224C618(0, qword_255FAF700);
  *(_QWORD *)(inited + 80) = v30;
  sub_23228C6C0(inited);
  type metadata accessor for Key(0);
  sub_232245044((unint64_t *)&qword_255FABB00, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2322C06F0);
  v31 = (void *)sub_2322B8DBC();
  objc_msgSend(v16, sel_sizeWithAttributes_, v31);
  v54 = v32;
  v34 = v33;

  v35 = (void *)sub_2322B8DBC();
  objc_msgSend(v22, sel_sizeWithAttributes_, v35);
  v37 = v36;
  v39 = v38;

  v56.origin.x = a2;
  v56.origin.y = a3;
  v56.size.width = a4;
  v56.size.height = a5;
  Height = CGRectGetHeight(v56);
  if (qword_255FABAA8 != -1)
    swift_once();
  v40 = *(double *)&qword_255FB3690;
  v41 = objc_msgSend(v55, sel_traitCollection, *(_QWORD *)&Height);
  v42 = objc_msgSend(v41, sel_layoutDirection);

  v57.origin.x = a2;
  v57.origin.y = a3;
  v57.size.width = a4;
  v57.size.height = a5;
  Width = CGRectGetWidth(v57);
  v44 = Width - v37;
  v45 = Width - v54;
  if (v42 == (id)1)
    v44 = -0.0;
  v46 = v44 + a2;
  if (v42 != (id)1)
    v45 = -0.0;
  v47 = v45 + a2;
  if (v34 > v39)
    v48 = v34;
  else
    v48 = v39;
  v49 = v53 - v48 - v40 + a3;
  v50 = (void *)sub_2322B8DBC();
  objc_msgSend(v16, sel_drawAtPoint_withAttributes_, v50, v47, v49);

  v51 = (void *)sub_2322B8DBC();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_drawAtPoint_withAttributes_, v51, v46, v49);

  UIGraphicsPopContext();
}

id RangeView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void RangeView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id RangeView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RangeView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_23228E21C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  unsigned __int8 v4;
  void *v5;
  unint64_t result;
  char v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  char v15;
  id v16;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4B00];
  sub_23228EC6C();
  v3 = (_QWORD *)sub_2322B938C();
  v4 = *(_BYTE *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  result = sub_2322B2760(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    v16 = v5;
    return (unint64_t)v3;
  }
  v8 = (_QWORD *)(a1 + 56);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    *(_QWORD *)(v3[7] + 8 * result) = v5;
    v9 = v3[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      break;
    v3[2] = v11;
    if (!--v1)
      goto LABEL_8;
    v12 = v8 + 2;
    v4 = *((_BYTE *)v8 - 8);
    v13 = (void *)*v8;
    v14 = v5;
    result = sub_2322B2760(v4);
    v8 = v12;
    v5 = v13;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

void _s21VisionHealthAppPlugin9RangeViewC12sizeThatFitsySo6CGSizeVAFF_0()
{
  uint64_t v0;
  double *v1;
  double v2;
  id v3;
  _BYTE *v4;
  id v5;
  id v6;
  id v7;
  uint64_t inited;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  double v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;

  v1 = (double *)(v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_range);
  swift_beginAccess();
  v2 = *v1;
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16F0]), sel_init);
  v37 = v0;
  v4 = (_BYTE *)(v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_showsPositivePrefix);
  swift_beginAccess();
  if (*v4 == 1)
  {
    v5 = objc_msgSend(v3, sel_plusSign);
    objc_msgSend(v3, sel_setPositivePrefix_, v5);

  }
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, v2);
  v7 = objc_msgSend(v3, sel_stringFromNumber_, v6);

  if (!v7)
  {
    sub_23224C618(0, (unint64_t *)&qword_255FAE3A8);
    v7 = (id)sub_2322B917C();
  }

  sub_23228E9F8();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2322C0E50;
  v9 = (void *)*MEMORY[0x24BEBB360];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BEBB360];
  v10 = sub_23224C618(0, (unint64_t *)&unk_255FACCD0);
  v32 = v9;
  *(_QWORD *)(inited + 40) = sub_2322B9128();
  v11 = (void *)*MEMORY[0x24BEBB368];
  v34 = v10;
  *(_QWORD *)(inited + 64) = v10;
  *(_QWORD *)(inited + 72) = v11;
  v12 = (void *)objc_opt_self();
  v13 = v11;
  v36 = v12;
  v14 = objc_msgSend(v12, sel_secondaryLabelColor);
  v35 = sub_23224C618(0, qword_255FAF700);
  *(_QWORD *)(inited + 104) = v35;
  *(_QWORD *)(inited + 80) = v14;
  sub_23228C6C0(inited);
  type metadata accessor for Key(0);
  sub_232245044((unint64_t *)&qword_255FABB00, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2322C06F0);
  v15 = (void *)sub_2322B8DBC();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_sizeWithAttributes_, v15);

  v16 = v1[1];
  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16F0]), sel_init);
  v18 = v17;
  if (*v4 == 1)
  {
    v19 = objc_msgSend(v17, sel_plusSign);
    objc_msgSend(v18, sel_setPositivePrefix_, v19);

  }
  v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, v16);
  v21 = objc_msgSend(v18, sel_stringFromNumber_, v20);

  if (!v21)
  {
    sub_23224C618(0, (unint64_t *)&qword_255FAE3A8);
    v21 = (id)sub_2322B917C();
  }

  v22 = swift_initStackObject();
  *(_OWORD *)(v22 + 16) = xmmword_2322C0E50;
  *(_QWORD *)(v22 + 32) = v32;
  v33 = v32;
  *(_QWORD *)(v22 + 40) = sub_2322B9128();
  *(_QWORD *)(v22 + 64) = v34;
  *(_QWORD *)(v22 + 72) = v13;
  v23 = v13;
  v24 = objc_msgSend(v36, sel_secondaryLabelColor);
  *(_QWORD *)(v22 + 104) = v35;
  *(_QWORD *)(v22 + 80) = v24;
  sub_23228C6C0(v22);
  v25 = (void *)sub_2322B8DBC();
  swift_bridgeObjectRelease();
  objc_msgSend(v21, sel_sizeWithAttributes_, v25);

  if (qword_255FABA88 != -1)
    swift_once();
  v26 = sub_23228D21C(1, *(double *)(v37 + OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView__value));
  v27 = swift_initStackObject();
  *(_OWORD *)(v27 + 16) = xmmword_2322C0E50;
  *(_QWORD *)(v27 + 32) = v33;
  v28 = v33;
  *(_QWORD *)(v27 + 40) = sub_2322B9128();
  *(_QWORD *)(v27 + 64) = v34;
  *(_QWORD *)(v27 + 72) = v23;
  v29 = v23;
  v30 = objc_msgSend(v36, sel_labelColor);
  *(_QWORD *)(v27 + 104) = v35;
  *(_QWORD *)(v27 + 80) = v30;
  sub_23228C6C0(v27);
  v31 = (void *)sub_2322B8DBC();
  swift_bridgeObjectRelease();
  objc_msgSend(v26, sel_sizeWithAttributes_, v31);

  if (qword_255FABA90 != -1)
    swift_once();
  if (qword_255FABA98 != -1)
    swift_once();
  if (qword_255FABAA0 != -1)
    swift_once();
  if (qword_255FABAA8 != -1)
    swift_once();
}

void sub_23228E9F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAF6F0)
  {
    sub_23228EE10(255, (unint64_t *)&qword_255FAE8F0, type metadata accessor for Key);
    v0 = sub_2322B93D4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAF6F0);
  }
}

void sub_23228EA5C(CGContextRef c, double a2, CGFloat a3)
{
  void *v3;
  void *v4;
  double v8;
  double v9;
  id v10;
  id v11;
  void *v12;
  char **v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  char **v18;
  CGFloat v19;
  CGColor *v20;
  CGColor *v21;
  id v22;
  CGRect v23;

  v4 = v3;
  if (qword_255FABAB0 != -1)
    swift_once();
  v8 = *(double *)&qword_255FB3698;
  if (qword_255FABAB8 != -1)
    swift_once();
  v9 = *(double *)&qword_255FB36A0;
  CGContextSetLineWidth(c, *(CGFloat *)&qword_255FB36A0);
  v10 = objc_msgSend(v3, sel_traitCollection);
  v11 = objc_msgSend(v10, sel_userInterfaceStyle);

  v12 = (void *)objc_opt_self();
  if (v11 == (id)2)
    v13 = &selRef_whiteColor;
  else
    v13 = &selRef_blackColor;
  v14 = objc_msgSend(v12, *v13);
  v15 = objc_msgSend(v4, sel_traitCollection);
  v16 = objc_msgSend(v15, sel_userInterfaceStyle);

  v17 = (void *)objc_opt_self();
  if (v16 == (id)2)
    v18 = &selRef_blackColor;
  else
    v18 = &selRef_whiteColor;
  v22 = objc_msgSend(v17, *v18);
  v19 = v8 - v9;
  v20 = (CGColor *)objc_msgSend(v14, sel_CGColor);
  CGContextSetFillColorWithColor(c, v20);

  v21 = (CGColor *)objc_msgSend(v22, sel_CGColor);
  CGContextSetStrokeColorWithColor(c, v21);

  v23.origin.x = a2 + v19 * -0.5;
  v23.origin.y = a3;
  v23.size.width = v19;
  v23.size.height = v19;
  CGContextAddEllipseInRect(c, v23);
  CGContextDrawPath(c, kCGPathFillStroke);

}

void sub_23228EC6C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAE920)
  {
    sub_232289A8C(255);
    sub_23228ECD4();
    v0 = sub_2322B9398();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAE920);
  }
}

unint64_t sub_23228ECD4()
{
  unint64_t result;

  result = qword_255FAF9E0;
  if (!qword_255FAF9E0)
  {
    result = MEMORY[0x2349010BC](&unk_2322C1768, &_s23VisionPrescriptionFieldON);
    atomic_store(result, (unint64_t *)&qword_255FAF9E0);
  }
  return result;
}

void sub_23228ED18()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAF9B0)
  {
    v0 = sub_2322B9398();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAF9B0);
  }
}

uint64_t sub_23228ED80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23224C5A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23228EDC4(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_23228EE10(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_23228EE10(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_23228EE70(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    a3(255);
    sub_232245044(a4, a3, a5);
    v9 = sub_2322B9398();
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t type metadata accessor for VisionPrescriptionRangeCell(uint64_t a1)
{
  return sub_23224E434(a1, qword_255FAE980);
}

uint64_t sub_23228EF10()
{
  return swift_initClassMetadata2();
}

id sub_23228EF84()
{
  return sub_23228EF9C(&qword_255FAE970);
}

id sub_23228EF90()
{
  return sub_23228EF9C(&qword_255FAE978);
}

id sub_23228EF9C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;

  v2 = *a1;
  v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    v4 = *(id *)(v1 + *a1);
  }
  else
  {
    v5 = v1;
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
    objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    sub_23224C618(0, (unint64_t *)&unk_255FACCD0);
    v7 = (void *)sub_2322B9128();
    objc_msgSend(v6, sel_setFont_, v7);

    objc_msgSend(v6, sel_setTextAlignment_, 4);
    v8 = objc_msgSend((id)objc_opt_self(), sel_tertiaryLabelColor);
    objc_msgSend(v6, sel_setTextColor_, v8);

    objc_msgSend(v6, sel_setAdjustsFontForContentSizeCategory_, 1);
    if (qword_255FAB900 != -1)
      swift_once();
    sub_2322B7F58();
    v9 = (void *)sub_2322B8DEC();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setText_, v9, 0xE000000000000000);

    v10 = *(void **)(v5 + v2);
    *(_QWORD *)(v5 + v2) = v6;
    v4 = v6;

    v3 = 0;
  }
  v11 = v3;
  return v4;
}

id sub_23228F1A4(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  char *v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  objc_class *v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  objc_super v33;

  v5 = v4;
  v10 = qword_255FAE940;
  v11 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v4[qword_255FAE940] = MEMORY[0x24BEE4AF8];
  v12 = &v4[qword_255FAE948];
  *(_OWORD *)v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  *((_QWORD *)v12 + 4) = 0;
  v13 = qword_255FAE950;
  v14 = objc_allocWithZone(MEMORY[0x24BEBD708]);
  v15 = v5;
  v16 = objc_msgSend(v14, sel_init);
  objc_msgSend(v16, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_23224C618(0, (unint64_t *)&unk_255FACCD0);
  v17 = (void *)sub_2322B9128();
  objc_msgSend(v16, sel_setFont_, v17);

  objc_msgSend(v16, sel_setTextAlignment_, 4);
  objc_msgSend(v16, sel_setAdjustsFontForContentSizeCategory_, 1);
  *(_QWORD *)&v5[v13] = v16;
  v18 = qword_255FAE958;
  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB00]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v19, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v15[v18] = v19;
  v20 = qword_255FAE960;
  v21 = (objc_class *)type metadata accessor for RangeView();
  v22 = objc_allocWithZone(v21);
  v23 = RangeView.init(range:value:)(0.0, 1.0, 0.0);
  objc_msgSend(v23, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v15[v20] = v23;
  v24 = qword_255FAE968;
  v25 = objc_allocWithZone(v21);
  v26 = RangeView.init(range:value:)(0.0, 1.0, 0.0);
  objc_msgSend(v26, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v15[v24] = v26;
  *(_QWORD *)&v15[qword_255FAE970] = 0;
  *(_QWORD *)&v15[qword_255FAE978] = 0;
  *(_QWORD *)&v5[v10] = v11;

  swift_bridgeObjectRelease();
  v33.receiver = v15;
  v33.super_class = (Class)type metadata accessor for VisionPrescriptionRangeCell(0);
  v27 = objc_msgSendSuper2(&v33, sel_initWithFrame_, a1, a2, a3, a4);
  sub_232291484();
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_2322C0E70;
  v29 = sub_2322B8D50();
  v30 = sub_232291520();
  *(_QWORD *)(v28 + 32) = v29;
  *(_QWORD *)(v28 + 40) = v30;
  v31 = v27;
  MEMORY[0x234900864](v28, sel_traitWidthDesignationDidChange);
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  sub_23228FA9C();

  return v31;
}

id sub_23228F498(double a1, double a2, double a3, double a4)
{
  return sub_23228F1A4(a1, a2, a3, a4);
}

void sub_23228F4B8(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_232291250();
}

void sub_23228F4DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD v13[3];
  uint64_t v14;

  v1 = v0;
  swift_getObjectType();
  v2 = sub_2322B8918();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322B88DC();
  v6 = sub_2322B890C();
  v7 = sub_2322B9014();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v13[1] = v1;
    v9 = (uint8_t *)v8;
    v10 = swift_slowAlloc();
    v14 = v10;
    *(_DWORD *)v9 = 136315138;
    v11 = sub_2322B9464();
    v13[2] = sub_232266EA0(v11, v12, &v14);
    sub_2322B923C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_232241000, v6, v7, "[%s] Updating the constraints based on traitWidthDesignation changes", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234901170](v10, -1, -1);
    MEMORY[0x234901170](v9, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_23228F6B8();
}

void sub_23228F684(void *a1)
{
  id v1;

  v1 = a1;
  sub_23228F4DC();

}

void sub_23228F6B8()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  double v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  double v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  double v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  double v30;
  id v31;
  uint64_t v32;
  id v33;

  v1 = v0;
  v2 = (void *)objc_opt_self();
  v32 = qword_255FAE940;
  sub_23224C618(0, (unint64_t *)&qword_255FABD30);
  swift_bridgeObjectRetain();
  v3 = (void *)sub_2322B8F24();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_deactivateConstraints_, v3);

  sub_23224ECA4();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2322C10B0;
  v5 = objc_msgSend(v1, sel_centerXAnchor);
  v6 = objc_msgSend(*(id *)&v1[qword_255FAE968], sel_trailingAnchor);
  v7 = (void *)objc_opt_self();
  v8 = objc_msgSend(v1, sel_traitCollection);
  v9 = sub_2322B90D4();

  objc_msgSend(v7, sel_interItemSpacingForWidthDesignation_, v9);
  v11 = objc_msgSend(v5, sel_constraintEqualToAnchor_constant_, v6, v10 * 0.5);

  *(_QWORD *)(v4 + 32) = v11;
  v12 = objc_msgSend(v1, sel_centerXAnchor);
  v13 = sub_23228EF90();
  v14 = objc_msgSend(v13, sel_trailingAnchor);

  v15 = objc_msgSend(v1, sel_traitCollection);
  v16 = sub_2322B90D4();

  objc_msgSend(v7, sel_interItemSpacingForWidthDesignation_, v16);
  v18 = objc_msgSend(v12, sel_constraintEqualToAnchor_constant_, v14, v17 * 0.5);

  *(_QWORD *)(v4 + 40) = v18;
  v19 = objc_msgSend(*(id *)&v1[qword_255FAE960], sel_leadingAnchor);
  v20 = objc_msgSend(v1, sel_centerXAnchor);
  v21 = objc_msgSend(v1, sel_traitCollection);
  v22 = sub_2322B90D4();

  objc_msgSend(v7, sel_interItemSpacingForWidthDesignation_, v22);
  v24 = objc_msgSend(v19, sel_constraintEqualToAnchor_constant_, v20, v23 * 0.5);

  *(_QWORD *)(v4 + 48) = v24;
  v25 = sub_23228EF84();
  v26 = objc_msgSend(v25, sel_leadingAnchor);

  v27 = objc_msgSend(v1, sel_centerXAnchor);
  v28 = objc_msgSend(v1, sel_traitCollection);
  v29 = sub_2322B90D4();

  objc_msgSend(v7, sel_interItemSpacingForWidthDesignation_, v29);
  v31 = objc_msgSend(v26, sel_constraintEqualToAnchor_constant_, v27, v30 * 0.5);

  *(_QWORD *)(v4 + 56) = v31;
  sub_2322B8F3C();
  *(_QWORD *)&v1[v32] = v4;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v33 = (id)sub_2322B8F24();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_activateConstraints_, v33);

}

void sub_23228FA9C()
{
  char *v0;
  void *v1;
  id v2;
  id v3;

  objc_msgSend(v0, sel_setUserInteractionEnabled_, 0);
  objc_msgSend(v0, sel_addSubview_, *(_QWORD *)&v0[qword_255FAE950]);
  v1 = *(void **)&v0[qword_255FAE958];
  objc_msgSend(v0, sel_addSubview_, v1);
  objc_msgSend(v1, sel_addSubview_, *(_QWORD *)&v0[qword_255FAE960]);
  v2 = sub_23228EF84();
  objc_msgSend(v1, sel_addSubview_, v2);

  objc_msgSend(v1, sel_addSubview_, *(_QWORD *)&v0[qword_255FAE968]);
  v3 = sub_23228EF90();
  objc_msgSend(v1, sel_addSubview_, v3);

  sub_23228FB70();
}

void sub_23228FB70()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  void *v69;
  id v70;

  sub_23228F6B8();
  v69 = (void *)objc_opt_self();
  sub_23224ECA4();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_2322C3020;
  v2 = *(void **)&v0[qword_255FAE950];
  v3 = objc_msgSend(v2, sel_topAnchor);
  v4 = objc_msgSend(v0, (SEL)&stru_2501196F0.name + 4);
  v5 = objc_msgSend(v3, sel_constraintEqualToAnchor_constant_, v4, 9.0);

  *(_QWORD *)(v1 + 32) = v5;
  v6 = objc_msgSend(v2, sel_leadingAnchor);
  v7 = objc_msgSend(v0, sel_leadingAnchor);
  v8 = objc_msgSend(v6, sel_constraintEqualToAnchor_constant_, v7, 16.0);

  *(_QWORD *)(v1 + 40) = v8;
  v9 = objc_msgSend(v0, sel_trailingAnchor);
  v10 = objc_msgSend(v2, (SEL)&selRef_CGColor);
  v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_constant_, v10, 16.0);

  *(_QWORD *)(v1 + 48) = v11;
  v12 = *(void **)&v0[qword_255FAE958];
  v13 = objc_msgSend(v12, (SEL)&stru_2501196F0.name + 4);
  v14 = objc_msgSend(v2, sel_bottomAnchor);
  v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_constant_, v14, 7.0);

  *(_QWORD *)(v1 + 56) = v15;
  v16 = objc_msgSend(v12, sel_leadingAnchor);
  v17 = objc_msgSend(v0, sel_leadingAnchor);
  v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_constant_, v17, 16.0);

  *(_QWORD *)(v1 + 64) = v18;
  v19 = objc_msgSend(v0, (SEL)&selRef_CGColor);
  v20 = objc_msgSend(v12, (SEL)&selRef_CGColor);
  v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_constant_, v20, 16.0);

  *(_QWORD *)(v1 + 72) = v21;
  v22 = objc_msgSend(v0, sel_bottomAnchor);
  v23 = objc_msgSend(v12, sel_bottomAnchor);
  v24 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v23, 9.0);

  *(_QWORD *)(v1 + 80) = v24;
  v25 = *(void **)&v0[qword_255FAE968];
  v26 = objc_msgSend(v25, sel_leadingAnchor);
  v27 = objc_msgSend(v12, sel_leadingAnchor);
  v28 = objc_msgSend(v26, sel_constraintEqualToAnchor_, v27);

  *(_QWORD *)(v1 + 88) = v28;
  v29 = objc_msgSend(v25, sel_topAnchor);
  v30 = objc_msgSend(v12, sel_topAnchor);
  v31 = objc_msgSend(v29, sel_constraintEqualToAnchor_, v30);

  *(_QWORD *)(v1 + 96) = v31;
  v32 = objc_msgSend(v25, sel_bottomAnchor);
  v33 = objc_msgSend(v12, sel_bottomAnchor);
  v34 = objc_msgSend(v32, sel_constraintEqualToAnchor_, v33);

  *(_QWORD *)(v1 + 104) = v34;
  v35 = sub_23228EF90();
  v36 = objc_msgSend(v35, sel_leadingAnchor);

  v37 = objc_msgSend(v12, sel_leadingAnchor);
  v38 = objc_msgSend(v36, sel_constraintEqualToAnchor_, v37);

  *(_QWORD *)(v1 + 112) = v38;
  v39 = sub_23228EF90();
  v40 = objc_msgSend(v39, sel_topAnchor);

  v41 = objc_msgSend(v12, sel_topAnchor);
  v42 = objc_msgSend(v40, sel_constraintEqualToAnchor_, v41);

  *(_QWORD *)(v1 + 120) = v42;
  v43 = sub_23228EF90();
  v44 = objc_msgSend(v43, sel_bottomAnchor);

  v45 = objc_msgSend(v12, sel_bottomAnchor);
  v46 = objc_msgSend(v44, sel_constraintEqualToAnchor_, v45);

  *(_QWORD *)(v1 + 128) = v46;
  v47 = *(void **)&v0[qword_255FAE960];
  v48 = objc_msgSend(v47, sel_trailingAnchor);
  v49 = objc_msgSend(v12, sel_trailingAnchor);
  v50 = objc_msgSend(v48, sel_constraintEqualToAnchor_, v49);

  *(_QWORD *)(v1 + 136) = v50;
  v51 = objc_msgSend(v47, sel_topAnchor);
  v52 = objc_msgSend(v12, sel_topAnchor);
  v53 = objc_msgSend(v51, sel_constraintEqualToAnchor_, v52);

  *(_QWORD *)(v1 + 144) = v53;
  v54 = objc_msgSend(v47, sel_bottomAnchor);
  v55 = objc_msgSend(v12, sel_bottomAnchor);
  v56 = objc_msgSend(v54, sel_constraintEqualToAnchor_, v55);

  *(_QWORD *)(v1 + 152) = v56;
  v57 = sub_23228EF84();
  v58 = objc_msgSend(v57, sel_trailingAnchor);

  v59 = objc_msgSend(v12, sel_trailingAnchor);
  v60 = objc_msgSend(v58, sel_constraintEqualToAnchor_, v59);

  *(_QWORD *)(v1 + 160) = v60;
  v61 = sub_23228EF84();
  v62 = objc_msgSend(v61, sel_topAnchor);

  v63 = objc_msgSend(v12, sel_topAnchor);
  v64 = objc_msgSend(v62, sel_constraintEqualToAnchor_, v63);

  *(_QWORD *)(v1 + 168) = v64;
  v65 = sub_23228EF84();
  v66 = objc_msgSend(v65, sel_bottomAnchor);

  v67 = objc_msgSend(v12, sel_bottomAnchor);
  v68 = objc_msgSend(v66, sel_constraintEqualToAnchor_, v67);

  *(_QWORD *)(v1 + 176) = v68;
  sub_2322B8F3C();
  sub_23224C618(0, (unint64_t *)&qword_255FABD30);
  v70 = (id)sub_2322B8F24();
  swift_bridgeObjectRelease();
  objc_msgSend(v69, sel_activateConstraints_, v70);

}

void sub_23229037C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  double v19;
  double v20;
  id v21;
  double v22;
  double v23;
  id v24;
  char *v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  id v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  id v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  _BYTE v61[12];
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65[3];
  uint64_t v66[6];

  v1 = v0;
  swift_getObjectType();
  v2 = sub_2322B8918();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = &v61[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v4);
  v8 = &v61[-v7];
  v9 = (uint64_t)&v1[qword_255FAE948];
  swift_beginAccess();
  sub_23224E5FC(v9, (uint64_t)v66);
  if (!v66[3])
  {
    sub_23224E5A0((uint64_t)v66);
    goto LABEL_9;
  }
  sub_23224EC14(0, (unint64_t *)&qword_255FABD20);
  type metadata accessor for VisionPrescriptionRangeItem(0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    sub_2322B88F4();
    v25 = v1;
    v26 = sub_2322B890C();
    v27 = sub_2322B9014();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v29 = swift_slowAlloc();
      v65[0] = v29;
      *(_DWORD *)v28 = 136315394;
      v64 = v2;
      v30 = sub_2322B9464();
      v66[0] = sub_232266EA0(v30, v31, v65);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2080;
      sub_23224E5FC(v9, (uint64_t)v66);
      sub_232291568(0, (unint64_t *)&qword_255FACC90, (uint64_t)&qword_255FABD20, MEMORY[0x24BE41798], (void (*)(uint64_t, uint64_t, uint64_t))sub_23224EC14);
      v32 = sub_2322B8E34();
      v66[0] = sub_232266EA0(v32, v33, v65);
      sub_2322B923C();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232241000, v26, v27, "[%s] Item was not of type VisionPrescriptionRangeItem. Item: %s", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x234901170](v29, -1, -1);
      MEMORY[0x234901170](v28, -1, -1);

      (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v6, v64);
    }
    else
    {

      (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v6, v2);
    }
    v34 = sub_23228EF84();
    objc_msgSend(v34, sel_setHidden_, 0);

    objc_msgSend(*(id *)&v25[qword_255FAE960], sel_setHidden_, 1);
    v35 = sub_23228EF90();
    objc_msgSend(v35, sel_setHidden_, 0);

    objc_msgSend(*(id *)&v25[qword_255FAE968], sel_setHidden_, 1);
    return;
  }
  v10 = v65[0];
  v11 = *(void **)&v1[qword_255FAE950];
  v12 = OBJC_IVAR____TtC21VisionHealthAppPlugin27VisionPrescriptionRangeItem_prescriptionField;
  sub_23224C808(*(_BYTE *)(v65[0]
                         + OBJC_IVAR____TtC21VisionHealthAppPlugin27VisionPrescriptionRangeItem_prescriptionField));
  v13 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setText_, v13);

  sub_232243B44(*(_BYTE *)(v10 + v12));
  if (!v14)
  {
LABEL_14:
    sub_2322B88F4();
    swift_retain_n();
    v36 = sub_2322B890C();
    v37 = sub_2322B9014();
    v38 = v37;
    if (os_log_type_enabled(v36, v37))
    {
      v39 = swift_slowAlloc();
      v62 = v38;
      v40 = v39;
      v63 = swift_slowAlloc();
      v66[0] = v63;
      *(_DWORD *)v40 = 136315650;
      v64 = v2;
      v41 = sub_2322B9464();
      v65[0] = sub_232266EA0(v41, v42, v66);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v40 + 12) = 2080;
      sub_232243B44(*(_BYTE *)(v10 + v12));
      v65[0] = v43;
      sub_232291568(0, &qword_255FAEB30, (uint64_t)&unk_255FAEB38, 0x24BDD3E60, (void (*)(uint64_t, uint64_t, uint64_t))sub_23224C618);
      v44 = sub_2322B8E34();
      v65[0] = sub_232266EA0(v44, v45, v66);
      sub_2322B923C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v40 + 22) = 2080;
      sub_23225B330(*(_BYTE *)(v10 + v12));
      v65[0] = v46;
      sub_232291568(0, &qword_255FAEB40, (uint64_t)&unk_255FAEB48, 0x24BDD4048, (void (*)(uint64_t, uint64_t, uint64_t))sub_23224C618);
      v47 = sub_2322B8E34();
      v65[0] = sub_232266EA0(v47, v48, v66);
      sub_2322B923C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232241000, v36, (os_log_type_t)v62, "[%s] VisionPrescriptionRangeItem Range/Unit were nil: Range: %s, Unit: %s", (uint8_t *)v40, 0x20u);
      v49 = v63;
      swift_arrayDestroy();
      MEMORY[0x234901170](v49, -1, -1);
      MEMORY[0x234901170](v40, -1, -1);

      (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v8, v64);
    }
    else
    {

      swift_release_n();
      (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v8, v2);
    }
    v50 = sub_23228EF84();
    objc_msgSend(v50, sel_setHidden_, 0);

    objc_msgSend(*(id *)&v1[qword_255FAE960], sel_setHidden_, 1);
    v51 = sub_23228EF90();
    objc_msgSend(v51, sel_setHidden_, 0);

    objc_msgSend(*(id *)&v1[qword_255FAE968], sel_setHidden_, 1);
    swift_release();
    return;
  }
  v15 = v14;
  sub_23225B330(*(_BYTE *)(v10 + v12));
  if (!v16)
  {

    goto LABEL_14;
  }
  v17 = v16;
  v18 = objc_msgSend(v15, sel_minimum);
  objc_msgSend(v18, sel_doubleValueForUnit_, v17);
  v20 = v19;

  v21 = objc_msgSend(v15, sel_maximum);
  objc_msgSend(v21, sel_doubleValueForUnit_, v17);
  v23 = v22;

  if (v20 > v23)
  {
    __break(1u);
  }
  else
  {
    if ((*(_BYTE *)(v10 + OBJC_IVAR____TtC21VisionHealthAppPlugin27VisionPrescriptionRangeItem_leftValue + 4) & 1) != 0)
    {
      v24 = sub_23228EF84();
      objc_msgSend(v24, sel_setHidden_, 0);

      objc_msgSend(*(id *)&v1[qword_255FAE960], sel_setHidden_, 1);
    }
    else
    {
      sub_232290D04(*(float *)(v10 + OBJC_IVAR____TtC21VisionHealthAppPlugin27VisionPrescriptionRangeItem_leftValue), v20, v23);
      v52 = *(char **)&v1[qword_255FAE960];
      v53 = &v52[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_minimumFractionDigits];
      if (*(unsigned __int8 *)(v10 + v12) >= 2u)
      {
        swift_beginAccess();
        *(_QWORD *)v53 = 0;
        objc_msgSend(v52, sel_setNeedsDisplay);
        v55 = &v52[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_showsPositivePrefix];
        swift_beginAccess();
        *v55 = 0;
      }
      else
      {
        swift_beginAccess();
        *(_QWORD *)v53 = 2;
        objc_msgSend(v52, sel_setNeedsDisplay);
        v54 = &v52[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_showsPositivePrefix];
        swift_beginAccess();
        *v54 = 1;
      }
      objc_msgSend(v52, sel_setNeedsDisplay);
    }
    if ((*(_BYTE *)(v10 + OBJC_IVAR____TtC21VisionHealthAppPlugin27VisionPrescriptionRangeItem_rightValue + 4) & 1) != 0)
    {
      v56 = sub_23228EF90();
      objc_msgSend(v56, sel_setHidden_, 0);

      objc_msgSend(*(id *)&v1[qword_255FAE968], sel_setHidden_, 1);
    }
    else
    {
      sub_232290D18(*(float *)(v10 + OBJC_IVAR____TtC21VisionHealthAppPlugin27VisionPrescriptionRangeItem_rightValue), v20, v23);
      v57 = *(char **)&v1[qword_255FAE968];
      v58 = &v57[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_minimumFractionDigits];
      if (*(unsigned __int8 *)(v10 + v12) >= 2u)
      {
        swift_beginAccess();
        *(_QWORD *)v58 = 0;
        objc_msgSend(v57, sel_setNeedsDisplay);
        v60 = &v57[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_showsPositivePrefix];
        swift_beginAccess();
        *v60 = 0;
      }
      else
      {
        swift_beginAccess();
        *(_QWORD *)v58 = 2;
        objc_msgSend(v57, sel_setNeedsDisplay);
        v59 = &v57[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_showsPositivePrefix];
        swift_beginAccess();
        *v59 = 1;
      }
      objc_msgSend(v57, sel_setNeedsDisplay);
    }
    swift_release();

  }
}

id sub_232290D04(double a1, double a2, double a3)
{
  return sub_232290D2C((uint64_t (*)(void))sub_23228EF84, &qword_255FAE960, a1, a2, a3);
}

id sub_232290D18(double a1, double a2, double a3)
{
  return sub_232290D2C((uint64_t (*)(void))sub_23228EF90, &qword_255FAE968, a1, a2, a3);
}

id sub_232290D2C(uint64_t (*a1)(void), _QWORD *a2, double a3, double a4, double a5)
{
  uint64_t v5;
  void *v10;
  char *v11;
  double *v12;
  uint64_t v13;
  double v14;
  double v16;

  v10 = (void *)a1();
  objc_msgSend(v10, sel_setHidden_, 1);

  v11 = *(char **)(v5 + *a2);
  objc_msgSend(v11, sel_setHidden_, 0);
  v12 = (double *)&v11[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_range];
  swift_beginAccess();
  *v12 = a4;
  v12[1] = a5;
  v13 = OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView__value;
  v14 = *(double *)&v11[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView__value];
  if (v14 < a4 || v14 > a5)
  {
    if (v14 <= a4)
      v14 = a4;
    if (v14 > a5)
      v14 = a5;
    *(double *)&v11[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView__value] = v14;
  }
  objc_msgSend(v11, sel_setNeedsDisplay);
  v16 = *v12;
  if (*v12 < a3)
    v16 = a3;
  if (v12[1] < v16)
    v16 = v12[1];
  *(double *)&v11[v13] = v16;
  return objc_msgSend(v11, sel_setNeedsDisplay);
}

void sub_232290E30()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_23224E5A0(v0 + qword_255FAE948);

}

id sub_232290EBC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionRangeCell(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_232290EF0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_23224E5A0(a1 + qword_255FAE948);

}

uint64_t sub_232290F88()
{
  return type metadata accessor for VisionPrescriptionRangeCell(0);
}

uint64_t sub_232290F90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + qword_255FAE948;
  swift_beginAccess();
  return sub_23224E5FC(v3, a1);
}

uint64_t sub_232290FE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + qword_255FAE948;
  swift_beginAccess();
  sub_23224E53C(a1, v3);
  swift_endAccess();
  sub_23229037C();
  return sub_23224E5A0(a1);
}

void (*sub_23229104C(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_232291094;
}

void sub_232291094(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_23229037C();
}

uint64_t sub_2322910C4()
{
  uint64_t v1;

  v1 = sub_2322B9464();
  sub_2322B8EAC();
  sub_2322B8090();
  sub_2322B8EAC();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_232291130()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin27VisionPrescriptionRangeItem_uuid;
  v2 = sub_2322B80B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_232291188()
{
  return type metadata accessor for VisionPrescriptionRangeItem(0);
}

uint64_t type metadata accessor for VisionPrescriptionRangeItem(uint64_t a1)
{
  return sub_23224E434(a1, qword_255FAEA00);
}

uint64_t sub_2322911A4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2322B80B4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_232291230()
{
  return sub_2322910C4();
}

void sub_232291250()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  objc_class *v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;

  v1 = v0;
  *(_QWORD *)&v0[qword_255FAE940] = MEMORY[0x24BEE4AF8];
  v2 = &v0[qword_255FAE948];
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_QWORD *)v2 + 4) = 0;
  v3 = qword_255FAE950;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_23224C618(0, (unint64_t *)&unk_255FACCD0);
  v5 = (void *)sub_2322B9128();
  objc_msgSend(v4, sel_setFont_, v5);

  objc_msgSend(v4, sel_setTextAlignment_, 4);
  objc_msgSend(v4, sel_setAdjustsFontForContentSizeCategory_, 1);
  *(_QWORD *)&v1[v3] = v4;
  v6 = qword_255FAE958;
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB00]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v1[v6] = v7;
  v8 = qword_255FAE960;
  v9 = (objc_class *)type metadata accessor for RangeView();
  v10 = objc_allocWithZone(v9);
  v11 = RangeView.init(range:value:)(0.0, 1.0, 0.0);
  objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v1[v8] = v11;
  v12 = qword_255FAE968;
  v13 = objc_allocWithZone(v9);
  v14 = RangeView.init(range:value:)(0.0, 1.0, 0.0);
  objc_msgSend(v14, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v1[v12] = v14;
  *(_QWORD *)&v1[qword_255FAE970] = 0;
  *(_QWORD *)&v1[qword_255FAE978] = 0;

  sub_2322B9350();
  __break(1u);
}

void sub_232291484()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAEB10)
  {
    sub_2322914D8();
    v0 = sub_2322B93D4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAEB10);
  }
}

unint64_t sub_2322914D8()
{
  unint64_t result;

  result = qword_255FAEB18;
  if (!qword_255FAEB18)
  {
    sub_23224EC14(255, &qword_255FAEB20);
    result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255FAEB18);
  }
  return result;
}

unint64_t sub_232291520()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FAEB28;
  if (!qword_255FAEB28)
  {
    v1 = sub_2322B8D50();
    result = MEMORY[0x2349010BC](MEMORY[0x24BE49D90], v1);
    atomic_store(result, (unint64_t *)&qword_255FAEB28);
  }
  return result;
}

void sub_232291568(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a5(255, a3, a4);
    v6 = sub_2322B9224();
    if (!v7)
      atomic_store(v6, a2);
  }
}

id sub_2322915BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  void *v6;
  id v7;

  if (!a2)
  {
    v5 = 0;
    if (a4)
      goto LABEL_3;
LABEL_5:
    v6 = 0;
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  v5 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  if (!a4)
    goto LABEL_5;
LABEL_3:
  swift_bridgeObjectRetain();
  v6 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease_n();
LABEL_6:
  swift_bridgeObjectRelease();
  v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_alertControllerWithTitle_message_preferredStyle_, v5, v6, 1);

  return v7;
}

BOOL sub_232291690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 32);
  swift_beginAccess();
  v3 = *(_QWORD *)(v2 + 24);
  if (*(_QWORD *)(v3 + 16))
  {
    v4 = sub_2322B2760(0);
    if ((v5 & 1) != 0)
    {
      if (*(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v4))
        return 0;
    }
  }
  v7 = *(_QWORD *)(v1 + 40);
  swift_beginAccess();
  v8 = *(_QWORD *)(v7 + 24);
  if (*(_QWORD *)(v8 + 16) && (v9 = sub_2322B2760(0), (v10 & 1) != 0))
    return *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9) == 0;
  else
    return 1;
}

id sub_232291740()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  id v38;
  id v39;
  BOOL v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t, uint64_t);
  char *v43;
  uint64_t v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v51;
  char *v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  BOOL v66;
  char v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  v1 = v0;
  v81 = *v0;
  v2 = sub_2322B8918();
  v83 = *(_QWORD *)(v2 - 8);
  v84 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v75 = (char *)&v71 - v6;
  v7 = type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType();
  v79 = *(_QWORD *)(v7 - 8);
  v80 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v74 = (uint64_t)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_23224BE78(0, (unint64_t *)&qword_255FAEE60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v71 - v11;
  v78 = sub_2322B8000();
  v82 = *(_QWORD *)(v78 - 8);
  v13 = MEMORY[0x24BDAC7A8](v78);
  v15 = (char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v77 = (char *)&v71 - v16;
  sub_23224BE78(0, &qword_255FAECB0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType, v9);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v73 = (uint64_t)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v76 = (uint64_t)&v71 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v71 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v71 - v25;
  v27 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  sub_23224BE78(0, &qword_255FABC68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], v9);
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v71 - v29;
  swift_retain();
  sub_2322B8B4C();
  swift_release();
  v31 = sub_2322B8084();
  LODWORD(v9) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v30, 1, v31);
  sub_23225B12C((uint64_t)v30, &qword_255FABC68, v27);
  if ((_DWORD)v9 != 1)
  {
    v39 = (id)v1[7];
    v40 = sub_232299E48();

    if (!v40)
      return 0;
    v41 = v79;
    v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v79 + 56);
    v72 = v26;
    v43 = v26;
    v44 = v80;
    v42(v43, 1, 1, v80);
    v45 = (void *)v1[7];
    swift_getKeyPath();
    swift_getKeyPath();
    v46 = v45;
    sub_2322B8BF4();

    swift_release();
    swift_release();
    v47 = v82;
    v48 = v78;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v12, 1, v78) == 1)
    {
      sub_23225B12C((uint64_t)v12, (unint64_t *)&qword_255FAEE60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0]);
      v49 = (uint64_t)v72;
    }
    else
    {
      v51 = v77;
      (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v77, v12, v48);
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v15, v51, v48);
      sub_232293CD0((uint64_t)v15, (uint64_t)v24);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v24, 1, v44) == 1)
      {
        sub_23225B12C((uint64_t)v24, &qword_255FAECB0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
        v52 = v75;
        sub_2322B88F4();
        v53 = sub_2322B890C();
        v54 = sub_2322B8FFC();
        if (os_log_type_enabled(v53, v54))
        {
          v55 = (uint8_t *)swift_slowAlloc();
          v56 = v48;
          v57 = swift_slowAlloc();
          v86 = v57;
          *(_DWORD *)v55 = 136315138;
          v58 = sub_2322B9464();
          v85 = sub_232266EA0(v58, v59, &v86);
          sub_2322B923C();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_232241000, v53, v54, "[%s] A prescription image is selected, but could not create URLAndContentType. Skipping saving a prescription and attachment.", v55, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x234901170](v57, -1, -1);
          MEMORY[0x234901170](v55, -1, -1);

          (*(void (**)(char *, uint64_t))(v83 + 8))(v52, v84);
          (*(void (**)(char *, uint64_t))(v82 + 8))(v77, v56);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v83 + 8))(v52, v84);
          (*(void (**)(char *, uint64_t))(v82 + 8))(v77, v48);
        }
        sub_23225B12C((uint64_t)v72, &qword_255FAECB0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
        return 0;
      }
      (*(void (**)(char *, uint64_t))(v47 + 8))(v51, v48);
      v49 = (uint64_t)v72;
      sub_23225B12C((uint64_t)v72, &qword_255FAECB0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
      v60 = v74;
      sub_232297E98((uint64_t)v24, v74);
      sub_232297E98(v60, v49);
      v42((char *)v49, 0, 1, v44);
    }
    swift_retain();
    v38 = sub_232285BDC();
    swift_release();
    swift_retain();
    v61 = sub_23228610C();
    swift_release();
    if ((v61 & 1) != 0)
    {
      v62 = v76;
      sub_232297DB8(v49, v76);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v62, 1, v44) == 1)
      {

        sub_23225B12C(v62, &qword_255FAECB0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
        sub_23225B12C(v49, &qword_255FAECB0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
        return 0;
      }
      sub_23225B12C(v62, &qword_255FAECB0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
      swift_retain();
      sub_2322B8B4C();
      swift_release();
      if (v86 != 2)
        goto LABEL_40;
      v63 = *(_QWORD *)(v1[6] + 40);
      if (*(_QWORD *)(v63 + 24))
      {
        v64 = *(_QWORD *)(v63 + 16) & 0xFFFFFFFFFFFFLL;
        v65 = *(_QWORD *)(v63 + 24);
      }
      else
      {
        v64 = 0;
        v65 = 0xE000000000000000;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v70 = HIBYTE(v65) & 0xF;
      if ((v65 & 0x2000000000000000) == 0)
        v70 = v64;
      if (!v70)
      {
LABEL_40:
        swift_retain();
        sub_2322B5264(12, 0, 0, 0);
        swift_release();
        sub_23225B12C(v49, &qword_255FAECB0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
        return v38;
      }
LABEL_39:
      sub_23225B12C(v49, &qword_255FAECB0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);

      return 0;
    }
    swift_retain();
    swift_retain();
    sub_2322B8B4C();
    swift_release();
    if (v86 == 1 || v86 == 2)
    {
      v66 = sub_232291690();
      swift_release();
      if (v66)
        goto LABEL_39;
      if (v1[4])
      {
LABEL_27:
        v67 = sub_232273228();
        if (!v38)
          goto LABEL_34;
LABEL_31:
        if ((v67 & 1) == 0)
        {
          v68 = v73;
          sub_232297DB8(v49, v73);
          v69 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v68, 1, v44);
          sub_23225B12C(v68, &qword_255FAECB0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
          if (v69 == 1)
          {
            swift_retain();
            sub_2322B5264(13, 0, 0, 0);
            swift_release();
            sub_23225B12C(v49, &qword_255FAECB0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
            return v38;
          }
        }
LABEL_34:
        sub_23225B12C(v49, &qword_255FAECB0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
        return v38;
      }
    }
    else
    {
      swift_release();
      if (v1[4])
        goto LABEL_27;
    }
    v67 = 0;
    if (!v38)
      goto LABEL_34;
    goto LABEL_31;
  }
  sub_2322B88E8();
  v32 = sub_2322B890C();
  v33 = sub_2322B8FFC();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc();
    v35 = swift_slowAlloc();
    v86 = v35;
    *(_DWORD *)v34 = 136315138;
    v36 = sub_2322B9464();
    v85 = sub_232266EA0(v36, v37, &v86);
    sub_2322B923C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_232241000, v32, v33, "[%s] Cannot create HKVisionPrescriptiton without dateIssued.", v34, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234901170](v35, -1, -1);
    MEMORY[0x234901170](v34, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v83 + 8))(v5, v84);
  return 0;
}

uint64_t sub_232292158(void *a1, void (*a2)(uint64_t), uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(void);
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  void *v50;
  void *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  double v67;
  double v68;
  uint64_t result;
  char v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  void *v76;
  id v77;
  _QWORD *v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  void *v86;
  id v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(void);
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(uint64_t);
  uint64_t v109;
  id v110;
  __int128 aBlock;
  void (*v112)(uint64_t, uint64_t, void *);
  void *v113;
  uint64_t (*v114)(uint64_t, uint64_t);
  _QWORD *v115;
  unint64_t v116;
  __int128 v117;

  v107 = a3;
  v108 = a2;
  v110 = a1;
  v106 = *v3;
  v4 = sub_2322B8084();
  v104 = *(_QWORD *)(v4 - 8);
  v105 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v103 = (char *)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_2322B80B4();
  v101 = *(_QWORD *)(v102 - 8);
  MEMORY[0x24BDAC7A8](v102);
  v100 = (char *)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = sub_2322B8918();
  v89 = *(_QWORD *)(v90 - 8);
  MEMORY[0x24BDAC7A8](v90);
  v93 = (char *)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v92 = (uint64_t)&v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_23224BE78(0, (unint64_t *)&qword_255FAEE60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v89 - v13;
  v15 = sub_2322B8000();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v89 - v20;
  sub_23224BE78(0, &qword_255FAECB0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType, v11);
  v96 = *(_QWORD *)(v22 - 8);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v98 = (uint64_t)&v89 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v89 - v26;
  v97 = v28;
  MEMORY[0x24BDAC7A8](v25);
  v94 = v9;
  v29 = *(void (**)(void))(v9 + 56);
  v109 = (uint64_t)&v89 - v30;
  v95 = v8;
  v91 = v29;
  v29();
  v99 = v3;
  v31 = (void *)v3[7];
  swift_getKeyPath();
  swift_getKeyPath();
  v32 = v31;
  sub_2322B8BF4();

  v33 = (id)v15;
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_23225B12C((uint64_t)v14, (unint64_t *)&qword_255FAEE60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0]);
    v34 = v109;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v14, v15);
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v21, v15);
    sub_232293CD0((uint64_t)v19, (uint64_t)v27);
    v35 = v95;
    v36 = v21;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v94 + 48))(v27, 1, v95) == 1)
    {
      sub_23225B12C((uint64_t)v27, &qword_255FAECB0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
      v37 = v93;
      sub_2322B88F4();
      v38 = sub_2322B890C();
      v39 = sub_2322B8FFC();
      if (os_log_type_enabled(v38, v39))
      {
        v40 = (uint8_t *)swift_slowAlloc();
        v41 = swift_slowAlloc();
        v110 = v33;
        *(_QWORD *)&aBlock = v41;
        v42 = v41;
        *(_DWORD *)v40 = 136315138;
        v43 = sub_2322B9464();
        *(_QWORD *)&v117 = sub_232266EA0(v43, v44, (uint64_t *)&aBlock);
        sub_2322B923C();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_232241000, v38, v39, "[%s] A prescription image is selected, but could not create URLAndContentType. Skipping saving a prescription and attachment.", v40, 0xCu);
        swift_arrayDestroy();
        v45 = v42;
        v33 = v110;
        MEMORY[0x234901170](v45, -1, -1);
        MEMORY[0x234901170](v40, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v89 + 8))(v37, v90);
      v46 = v109;
      if (v108)
        v108(2);
      (*(void (**)(char *, id))(v16 + 8))(v36, v33);
      return sub_23225B12C(v46, &qword_255FAECB0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
    }
    (*(void (**)(char *, id))(v16 + 8))(v21, v33);
    v34 = v109;
    sub_23225B12C(v109, &qword_255FAECB0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
    v47 = v92;
    sub_232297E98((uint64_t)v27, v92);
    sub_232297E98(v47, v34);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v91)(v34, 0, 1, v35);
  }
  v48 = v110;
  v49 = objc_msgSend(v110, sel_metadata);
  v50 = (void *)MEMORY[0x24BEE0D00];
  if (v49)
  {
    v51 = v49;
    v52 = sub_2322B8DC8();

  }
  else
  {
    v52 = sub_23228C448(MEMORY[0x24BEE4AF8]);
  }
  v53 = sub_2322B8E1C();
  v55 = v54;
  v56 = objc_msgSend(v48, sel_UUID);
  v57 = v100;
  sub_2322B809C();

  v58 = sub_2322B8090();
  v60 = v59;
  (*(void (**)(char *, uint64_t))(v101 + 8))(v57, v102);
  v113 = v50;
  *(_QWORD *)&aBlock = v58;
  *((_QWORD *)&aBlock + 1) = v60;
  sub_23224C608(&aBlock, &v117);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v116 = v52;
  sub_2322B2EB4(&v117, v53, v55, isUniquelyReferenced_nonNull_native);
  v62 = v116;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v63 = sub_2322B8E1C();
  v65 = v64;
  v66 = v103;
  sub_2322B8078();
  sub_2322B803C();
  v68 = v67;
  result = (*(uint64_t (**)(char *, uint64_t))(v104 + 8))(v66, v105);
  if ((~*(_QWORD *)&v68 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (v68 <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v68 < 9.22337204e18)
  {
    v113 = (void *)MEMORY[0x24BEE1768];
    *(_QWORD *)&aBlock = (uint64_t)v68;
    sub_23224C608(&aBlock, &v117);
    v70 = swift_isUniquelyReferenced_nonNull_native();
    v116 = v62;
    sub_2322B2EB4(&v117, v63, v65, v70);
    v71 = v116;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v72 = sub_2322B8E1C();
    v74 = v73;
    v113 = (void *)MEMORY[0x24BEE1328];
    LOBYTE(aBlock) = 1;
    sub_23224C608(&aBlock, &v117);
    v75 = swift_isUniquelyReferenced_nonNull_native();
    v116 = v71;
    sub_2322B2EB4(&v117, v72, v74, v75);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v76 = (void *)sub_2322B8DBC();
    swift_bridgeObjectRelease();
    objc_msgSend(v48, sel__setMetadata_, v76);

    v77 = v48;
    v78 = v99;
    v79 = (void *)v99[2];
    v80 = v34;
    v46 = v34;
    v81 = v98;
    sub_232297DB8(v80, v98);
    v82 = (*(unsigned __int8 *)(v96 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80);
    v83 = (v97 + v82 + 7) & 0xFFFFFFFFFFFFFFF8;
    v84 = (_QWORD *)swift_allocObject();
    v85 = (uint64_t)v108;
    v84[2] = v77;
    v84[3] = v85;
    v84[4] = v107;
    sub_232297E18(v81, (uint64_t)v84 + v82);
    *(_QWORD *)((char *)v84 + v83) = v78;
    *(_QWORD *)((char *)v84 + ((v83 + 15) & 0xFFFFFFFFFFFFFFF8)) = v106;
    v114 = sub_232297E74;
    v115 = v84;
    *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v112 = sub_232258D30;
    v113 = &unk_250114418;
    v86 = _Block_copy(&aBlock);
    v87 = v79;
    v88 = v110;
    sub_23227E2C8(v85);
    swift_retain();
    swift_release();
    objc_msgSend(v87, sel_saveObject_withCompletion_, v88, v86);
    _Block_release(v86);

    return sub_23225B12C(v46, &qword_255FAECB0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
  }
LABEL_20:
  __break(1u);
  return result;
}

void sub_232292B08(void (*a1)(uint64_t), uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  char *v31;
  char *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  char *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  __int128 v52;
  id v53;
  void *v54;
  unint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  double v73;
  double v74;
  unint64_t v75;
  char v76;
  id v77;
  id v78;
  void *v79;
  id v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  void *v92;
  uint64_t v93;
  _QWORD *v94;
  void (*v95)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  id v101;
  void (*v102)(uint64_t);
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  unint64_t v112;
  _OWORD v113[2];
  unint64_t v114;
  __int128 v115;
  __int128 v116;

  v108 = a2;
  v103 = *v2;
  v98 = sub_2322B8084();
  v97 = *(_QWORD *)(v98 - 8);
  MEMORY[0x24BDAC7A8](v98);
  v96 = (char *)&v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2322B8918();
  v106 = *(_QWORD *)(v5 - 8);
  v107 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v105 = (char *)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v100 = (char *)&v94 - v8;
  v9 = type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v99 = (uint64_t)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_23224BE78(0, (unint64_t *)&qword_255FAEE60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v94 - v14;
  v109 = sub_2322B8000();
  v16 = *(_QWORD *)(v109 - 8);
  v17 = MEMORY[0x24BDAC7A8](v109);
  v19 = (char *)&v94 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v104 = (char *)&v94 - v20;
  sub_23224BE78(0, &qword_255FAECB0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType, v12);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v94 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v110 = (uint64_t)&v94 - v25;
  v26 = (void *)v2[4];
  if (!v26)
    goto LABEL_47;
  swift_retain();
  v111 = v26;
  v27 = sub_232285BDC();
  swift_release();
  if (v27)
  {
    v101 = v27;
    v102 = a1;
    v95 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v95(v110, 1, 1, v9);
    v94 = v2;
    v28 = (void *)v2[7];
    swift_getKeyPath();
    swift_getKeyPath();
    v29 = v28;
    sub_2322B8BF4();

    swift_release();
    swift_release();
    v30 = v109;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, v109) == 1)
    {
      sub_23225B12C((uint64_t)v15, (unint64_t *)&qword_255FAEE60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0]);
    }
    else
    {
      v31 = v104;
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v104, v15, v30);
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v31, v30);
      sub_232293CD0((uint64_t)v19, (uint64_t)v24);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v24, 1, v9) == 1)
      {
        sub_23225B12C((uint64_t)v24, &qword_255FAECB0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
        v32 = v100;
        sub_2322B88F4();
        v33 = sub_2322B890C();
        v34 = sub_2322B8FFC();
        if (os_log_type_enabled(v33, v34))
        {
          v35 = (uint8_t *)swift_slowAlloc();
          v36 = swift_slowAlloc();
          *(_QWORD *)&v115 = v36;
          *(_DWORD *)v35 = 136315138;
          v37 = sub_2322B9464();
          *(_QWORD *)&v113[0] = sub_232266EA0(v37, v38, (uint64_t *)&v115);
          sub_2322B923C();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_232241000, v33, v34, "[%s] A prescription image is selected, but could not create URLAndContentType. Skipping saving a prescription and attachment.", v35, 0xCu);
          swift_arrayDestroy();
          v39 = v36;
          v30 = v109;
          MEMORY[0x234901170](v39, -1, -1);
          MEMORY[0x234901170](v35, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v106 + 8))(v32, v107);
        v40 = v101;
        if (v102)
          v102(2);

        (*(void (**)(char *, uint64_t))(v16 + 8))(v104, v30);
        goto LABEL_30;
      }
      (*(void (**)(char *, uint64_t))(v16 + 8))(v31, v30);
      v41 = v110;
      sub_23225B12C(v110, &qword_255FAECB0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
      v42 = v99;
      sub_232297E98((uint64_t)v24, v99);
      sub_232297E98(v42, v41);
      v95(v41, 0, 1, v9);
    }
    v43 = objc_msgSend(v111, sel_metadata);
    v44 = v105;
    if (v43)
    {
      v45 = v43;
      v46 = sub_2322B8DC8();

      v47 = sub_2322B8E1C();
      if (*(_QWORD *)(v46 + 16) && (v49 = sub_2322B26FC(v47, v48), (v50 & 1) != 0))
      {
        sub_232250B14(*(_QWORD *)(v46 + 56) + 32 * v49, (uint64_t)&v115);
      }
      else
      {
        v115 = 0u;
        v116 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v116 + 1))
      {
        v51 = MEMORY[0x24BEE0D00];
        if ((swift_dynamicCast() & 1) != 0)
        {
          v52 = v113[0];
          v53 = objc_msgSend(v111, sel_metadata);
          if (v53)
          {
            v54 = v53;
            v55 = sub_2322B8DC8();

          }
          else
          {
            v55 = sub_23228C448(MEMORY[0x24BEE4AF8]);
          }
          v64 = v97;
          v65 = sub_2322B8E1C();
          v67 = v66;
          *((_QWORD *)&v116 + 1) = v51;
          v115 = v52;
          sub_23224C608(&v115, v113);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v112 = v55;
          v114 = 0x8000000000000000;
          sub_2322B2EB4(v113, v65, v67, isUniquelyReferenced_nonNull_native);
          v114 = v112;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v69 = sub_2322B8E1C();
          v71 = v70;
          v72 = v96;
          sub_2322B8078();
          sub_2322B803C();
          v74 = v73;
          (*(void (**)(char *, uint64_t))(v64 + 8))(v72, v98);
          if ((~*(_QWORD *)&v74 & 0x7FF0000000000000) != 0)
          {
            if (v74 > -9.22337204e18)
            {
              if (v74 < 9.22337204e18)
              {
                *((_QWORD *)&v116 + 1) = MEMORY[0x24BEE1768];
                *(_QWORD *)&v115 = (uint64_t)v74;
                sub_23224C608(&v115, v113);
                v75 = v114;
                v76 = swift_isUniquelyReferenced_nonNull_native();
                v112 = v75;
                v114 = 0x8000000000000000;
                sub_2322B2EB4(v113, v69, v71, v76);
                v114 = v112;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v77 = v101;
                v78 = objc_msgSend(v111, sel__source);
                v79 = v78;
                if (v78)
                {
                  v80 = objc_msgSend(v78, sel_bundleIdentifier);

                  sub_2322B8E1C();
                  v79 = (void *)sub_2322B8DEC();
                  swift_bridgeObjectRelease();
                }
                v81 = (uint64_t)v102;
                objc_msgSend(v77, sel__setSourceBundleIdentifier_, v79);

                v82 = v94;
                swift_retain();
                sub_2322B8B4C();
                swift_release();
                if ((_QWORD)v115 == 1)
                {
                  v83 = sub_2322B8E1C();
                  v85 = v83;
                  v86 = v84;
                  v87 = *(_QWORD *)(v82[6] + 48);
                  v88 = *(_QWORD *)(v87 + 24);
                  if (v88)
                  {
                    v89 = *(_QWORD *)(v87 + 16);
                    *((_QWORD *)&v116 + 1) = v51;
                    *(_QWORD *)&v115 = v89;
                    *((_QWORD *)&v115 + 1) = v88;
                    sub_23224C608(&v115, v113);
                    swift_bridgeObjectRetain();
                    v90 = v114;
                    v91 = swift_isUniquelyReferenced_nonNull_native();
                    v112 = v90;
                    v114 = 0x8000000000000000;
                    sub_2322B2EB4(v113, v85, v86, v91);
                    v114 = v112;
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    sub_23229793C(v83, v84, &v115);
                    swift_bridgeObjectRelease();
                    sub_232262F64((uint64_t)&v115, (uint64_t (*)(_QWORD))sub_232250ABC);
                  }
                }
                v92 = (void *)sub_2322B8DBC();
                swift_bridgeObjectRelease();
                objc_msgSend(v77, sel__setMetadata_, v92);

                v93 = v110;
                sub_232294B8C(v77, v110, v81, v108);

                v63 = v93;
                goto LABEL_31;
              }
              goto LABEL_46;
            }
          }
          else
          {
            __break(1u);
          }
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          sub_2322B9350();
          __break(1u);
          return;
        }
        goto LABEL_26;
      }
    }
    else
    {
      v115 = 0u;
      v116 = 0u;
    }
    sub_232262F64((uint64_t)&v115, (uint64_t (*)(_QWORD))sub_232250ABC);
LABEL_26:
    sub_2322B88F4();
    v56 = sub_2322B890C();
    v57 = sub_2322B9008();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = (uint8_t *)swift_slowAlloc();
      v59 = swift_slowAlloc();
      *(_QWORD *)&v115 = v59;
      *(_DWORD *)v58 = 136315138;
      v60 = sub_2322B9464();
      *(_QWORD *)&v113[0] = sub_232266EA0(v60, v61, (uint64_t *)&v115);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232241000, v56, v57, "[%s] Cannot edit vision prescription sample without sync identifier", v58, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234901170](v59, -1, -1);
      MEMORY[0x234901170](v58, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v106 + 8))(v44, v107);
    v62 = v101;
    if (!v102)
    {
      sub_23225B12C(v110, &qword_255FAECB0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);

      return;
    }
    v102(5);

LABEL_30:
    v63 = v110;
LABEL_31:
    sub_23225B12C(v63, &qword_255FAECB0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
    return;
  }
  if (a1)
    a1(0);

}

uint64_t sub_232293764()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t inited;
  void *v5;
  id v6;
  uint64_t v8;
  uint64_t v9;

  v9 = sub_2322B8918();
  MEMORY[0x24BDAC7A8](v9);
  v0 = sub_2322B7F7C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23224BE78(0, qword_255FAECB8, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2322C0E70;
  v5 = (void *)*MEMORY[0x24BDBCBE8];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BDBCBE8];
  v6 = v5;
  sub_232270CF4(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  sub_2322B7FA0();
  swift_bridgeObjectRelease();
  sub_2322B7F70();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_232293A9C()
{
  uint64_t result;

  result = sub_2322B8DEC();
  qword_255FB36D0 = result;
  return result;
}

id sub_232293AD0()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 24);
  if (v1)
  {
    v2 = *(id *)(v0 + 24);
  }
  else
  {
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3930]), sel_initWithHealthStore_, *(_QWORD *)(v0 + 16));
    v4 = *(void **)(v0 + 24);
    *(_QWORD *)(v0 + 24) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

id *sub_232293B40()
{
  id *v0;

  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  return v0;
}

uint64_t sub_232293B8C()
{
  sub_232293B40();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VisionPrescriptionManualDataEntryManager()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType()
{
  uint64_t result;

  result = qword_255FAED18;
  if (!qword_255FAED18)
    return swift_getSingletonMetadata();
  return result;
}

void sub_232293C08(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  _QWORD v8[6];

  v3 = *v1;
  v4 = (void *)v1[2];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v3;
  v8[4] = sub_232298024;
  v8[5] = v5;
  v8[0] = MEMORY[0x24BDAC760];
  v8[1] = 1107296256;
  v8[2] = sub_232258D30;
  v8[3] = &unk_2501145F8;
  v6 = _Block_copy(v8);
  v7 = v4;
  swift_release();
  objc_msgSend(v7, sel_deleteObject_withCompletion_, a1, v6);
  _Block_release(v6);

}

uint64_t sub_232293CD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v20;

  sub_23224BE78(0, (unint64_t *)&unk_255FAEE80, (uint64_t (*)(uint64_t))MEMORY[0x24BEE63B8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v20 - v5;
  v7 = sub_2322B88B8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232293764();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    v15 = sub_2322B8000();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(a1, v15);
    sub_23225B12C((uint64_t)v6, (unint64_t *)&unk_255FAEE80, (uint64_t (*)(uint64_t))MEMORY[0x24BEE63B8]);
    v16 = 1;
  }
  else
  {
    v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v17(v10, v6, v7);
    v18 = sub_2322B8000();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v14, a1, v18);
    v17(&v14[*(int *)(v11 + 20)], v10, v7);
    sub_232297E98((uint64_t)v14, a2);
    v16 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(a2, v16, 1, v11);
}

uint64_t sub_232293E98(char a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  id v53;
  uint64_t v54;
  unint64_t v55;
  id v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  NSObject *v68;
  os_log_type_t v69;
  BOOL v70;
  uint64_t v71;
  uint8_t *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t aBlock;
  uint64_t v111;
  uint64_t (*v112)(uint64_t);
  void *v113;
  uint64_t (*v114)();
  uint64_t v115;

  v97 = a2;
  v98 = a8;
  v106 = a4;
  v107 = a5;
  v104 = sub_2322B8D14();
  v102 = *(_QWORD *)(v104 - 8);
  MEMORY[0x24BDAC7A8](v104);
  v101 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_2322B8D2C();
  v100 = *(_QWORD *)(v103 - 8);
  MEMORY[0x24BDAC7A8](v103);
  v99 = (char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23224BE78(0, &qword_255FAECB0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v91 - v15;
  v17 = type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v91 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_2322B8918();
  v21 = MEMORY[0x24BDAC7A8](v108);
  v23 = (char *)&v91 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v21);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v91 - v26;
  v105 = v28;
  if ((a1 & 1) != 0)
  {
    v94 = v20;
    v95 = v18;
    v93 = v17;
    v96 = a6;
    v97 = a7;
    v92 = v25;
    sub_2322B88F4();
    v29 = a3;
    v30 = sub_2322B890C();
    v31 = sub_2322B9014();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = swift_slowAlloc();
      v33 = swift_slowAlloc();
      aBlock = v33;
      *(_DWORD *)v32 = 136315395;
      v34 = sub_2322B9464();
      v109 = sub_232266EA0(v34, v35, &aBlock);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2081;
      v109 = (uint64_t)v29;
      sub_23224C618(0, (unint64_t *)&qword_255FAD9C0);
      v36 = v29;
      v37 = v29;
      v38 = sub_2322B8E40();
      v109 = sub_232266EA0(v38, v39, &aBlock);
      sub_2322B923C();

      v29 = v36;
      v40 = v108;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232241000, v30, v31, "[%s] Saving vision prescription %{private}s was successful.", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x234901170](v33, -1, -1);
      MEMORY[0x234901170](v32, -1, -1);

      v41 = *(void (**)(char *, uint64_t))(v105 + 8);
      v41(v27, v40);
    }
    else
    {

      v41 = *(void (**)(char *, uint64_t))(v105 + 8);
      v41(v27, v108);
    }
    v64 = v93;
    v65 = v95;
    v66 = (uint64_t)v94;
    sub_232297DB8(v96, (uint64_t)v16);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v16, 1, v64) == 1)
    {
      sub_23225B12C((uint64_t)v16, &qword_255FAECB0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
      v67 = v92;
      sub_2322B88F4();
      v68 = sub_2322B890C();
      v69 = sub_2322B9014();
      v70 = os_log_type_enabled(v68, v69);
      v71 = v102;
      if (v70)
      {
        v72 = (uint8_t *)swift_slowAlloc();
        v73 = swift_slowAlloc();
        aBlock = v73;
        *(_DWORD *)v72 = 136315138;
        v74 = sub_2322B9464();
        v109 = sub_232266EA0(v74, v75, &aBlock);
        sub_2322B923C();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_232241000, v68, v69, "[%s] No attachment to save. Returning.", v72, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x234901170](v73, -1, -1);
        MEMORY[0x234901170](v72, -1, -1);
      }

      v41(v67, v108);
      sub_23224C618(0, (unint64_t *)&qword_255FACCA0);
      v76 = (void *)sub_2322B90B0();
      v77 = swift_allocObject();
      v79 = v106;
      v78 = v107;
      *(_QWORD *)(v77 + 16) = v106;
      *(_QWORD *)(v77 + 24) = v78;
      v114 = sub_232297F88;
      v115 = v77;
      aBlock = MEMORY[0x24BDAC760];
      v111 = 1107296256;
      v112 = sub_23225ADE4;
      v113 = &unk_2501144B8;
      v80 = _Block_copy(&aBlock);
      sub_23227E2C8(v79);
      swift_release();
      v81 = v99;
      sub_2322B8D20();
      aBlock = MEMORY[0x24BEE4AF8];
      sub_232297F3C();
      sub_23224BE78(0, (unint64_t *)&qword_255FACCB0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
      sub_23225B070();
      v82 = v101;
      v83 = v104;
      sub_2322B9278();
      MEMORY[0x2349007D4](0, v81, v82, v80);
      _Block_release(v80);

      (*(void (**)(char *, uint64_t))(v71 + 8))(v82, v83);
      return (*(uint64_t (**)(char *, uint64_t))(v100 + 8))(v81, v103);
    }
    else
    {
      sub_232297E98((uint64_t)v16, v66);
      sub_2322948FC(v66, v29, 1, v106, v107);
      return sub_232262F64(v66, (uint64_t (*)(_QWORD))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
    }
  }
  else
  {
    sub_2322B88F4();
    v42 = a3;
    v43 = v97;
    v44 = v97;
    v45 = v42;
    v46 = v43;
    v47 = sub_2322B890C();
    v48 = sub_2322B8FFC();
    if (os_log_type_enabled(v47, v48))
    {
      v49 = swift_slowAlloc();
      v50 = swift_slowAlloc();
      aBlock = v50;
      *(_DWORD *)v49 = 136315651;
      v51 = sub_2322B9464();
      v109 = sub_232266EA0(v51, v52, &aBlock);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v49 + 12) = 2081;
      v109 = (uint64_t)v45;
      sub_23224C618(0, (unint64_t *)&qword_255FAD9C0);
      v53 = v45;
      v54 = sub_2322B8E40();
      v109 = sub_232266EA0(v54, v55, &aBlock);
      sub_2322B923C();

      swift_bridgeObjectRelease();
      *(_WORD *)(v49 + 22) = 2080;
      v109 = (uint64_t)v43;
      v56 = v43;
      sub_23224BE78(0, (unint64_t *)&unk_255FACCC0, (uint64_t (*)(uint64_t))sub_232297EDC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v57 = sub_2322B8E34();
      v109 = sub_232266EA0(v57, v58, &aBlock);
      v59 = v103;
      sub_2322B923C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_232241000, v47, v48, "[%s] Failed to save vision prescription %{private}s) with error: %s", (uint8_t *)v49, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x234901170](v50, -1, -1);
      MEMORY[0x234901170](v49, -1, -1);

      (*(void (**)(char *, uint64_t))(v105 + 8))(v23, v108);
      v61 = v101;
      v60 = v102;
      v63 = v99;
      v62 = v100;
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v105 + 8))(v23, v108);
      v61 = v101;
      v60 = v102;
      v63 = v99;
      v62 = v100;
      v59 = v103;
    }
    sub_23224C618(0, (unint64_t *)&qword_255FACCA0);
    v85 = (void *)sub_2322B90B0();
    v86 = swift_allocObject();
    v88 = v106;
    v87 = v107;
    *(_QWORD *)(v86 + 16) = v106;
    *(_QWORD *)(v86 + 24) = v87;
    v114 = sub_232297F34;
    v115 = v86;
    aBlock = MEMORY[0x24BDAC760];
    v111 = 1107296256;
    v112 = sub_23225ADE4;
    v113 = &unk_250114468;
    v89 = _Block_copy(&aBlock);
    sub_23227E2C8(v88);
    swift_release();
    sub_2322B8D20();
    aBlock = MEMORY[0x24BEE4AF8];
    sub_232297F3C();
    sub_23224BE78(0, (unint64_t *)&qword_255FACCB0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_23225B070();
    v90 = v104;
    sub_2322B9278();
    MEMORY[0x2349007D4](0, v63, v61, v89);
    _Block_release(v89);

    (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v90);
    return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v63, v59);
  }
}

uint64_t sub_2322948FC(uint64_t a1, void *a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a4;
  v33 = a5;
  v30 = a3;
  v31 = *v5;
  v8 = sub_2322B8000();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2322B88B8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_232293AD0();
  if (qword_255FAB900 != -1)
    swift_once();
  v28 = sub_2322B7F58();
  v16 = type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1 + *(int *)(v16 + 20), v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v17 = swift_allocObject();
  swift_weakInit();
  v18 = swift_allocObject();
  v26 = v13;
  v27 = v12;
  v19 = a2;
  *(_QWORD *)(v18 + 16) = a2;
  *(_BYTE *)(v18 + 24) = v30 & 1;
  v21 = v32;
  v20 = v33;
  *(_QWORD *)(v18 + 32) = v17;
  *(_QWORD *)(v18 + 40) = v21;
  v22 = v31;
  *(_QWORD *)(v18 + 48) = v20;
  *(_QWORD *)(v18 + 56) = v22;
  v23 = v19;
  swift_retain();
  sub_23227E2C8(v21);
  sub_232297670(MEMORY[0x24BEE4AF8]);
  v24 = v29;
  sub_2322B9074();

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v15, v27);
  return swift_release();
}

void sub_232294B8C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[6];

  v5 = v4;
  v9 = *v5;
  v26 = a2;
  v27 = v9;
  sub_23224BE78(0, &qword_255FAECB0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v26 - v13;
  v15 = objc_msgSend(a1, sel__sourceBundleIdentifier);
  if (v15)
  {
    v16 = v15;
    sub_2322B8E1C();
    v18 = v17;

  }
  else
  {
    v18 = 0;
  }
  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3C40]), sel_init);
  if (v18)
    v20 = (void *)sub_2322B8DEC();
  else
    v20 = 0;
  objc_msgSend(v19, sel_setSourceBundleIdentifier_, v20, v26);

  objc_msgSend(v19, sel_resume);
  swift_bridgeObjectRelease();
  v21 = swift_allocObject();
  swift_weakInit();
  sub_232297DB8(v26, (uint64_t)v14);
  v22 = (*(unsigned __int8 *)(v11 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = a1;
  v23[3] = a3;
  v23[4] = a4;
  v23[5] = v21;
  sub_232297E18((uint64_t)v14, (uint64_t)v23 + v22);
  *(_QWORD *)((char *)v23 + ((v12 + v22 + 7) & 0xFFFFFFFFFFFFFFF8)) = v27;
  aBlock[4] = sub_23229812C;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_232258D30;
  aBlock[3] = &unk_250114648;
  v24 = _Block_copy(aBlock);
  v25 = a1;
  sub_23227E2C8(a3);
  swift_release();
  objc_msgSend(v19, sel_saveObject_withCompletion_, v25, v24);
  _Block_release(v24);

}

uint64_t sub_232294DD8(char a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  id v39;
  id v40;
  id v41;
  id v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  id v48;
  uint64_t v49;
  unint64_t v50;
  id v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t Strong;
  uint64_t v57;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  char *v64;
  char *v65;
  char *v66;
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t aBlock;
  uint64_t v97;
  uint64_t (*v98)(uint64_t);
  void *v99;
  uint64_t (*v100)();
  uint64_t v101;

  v86 = a8;
  v90 = a4;
  v91 = a5;
  v13 = sub_2322B8D14();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v89 = (char *)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_2322B8D2C();
  v88 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v87 = (char *)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_2322B8918();
  v18 = MEMORY[0x24BDAC7A8](v93);
  v20 = (char *)&v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v18);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v81 - v23;
  v92 = v25;
  if ((a1 & 1) != 0)
  {
    v82 = v22;
    v83 = v13;
    v84 = v14;
    v26 = a6 + 16;
    sub_2322B88F4();
    v27 = a3;
    v28 = sub_2322B890C();
    v29 = sub_2322B9014();
    v30 = os_log_type_enabled(v28, v29);
    v85 = v16;
    if (v30)
    {
      v31 = swift_slowAlloc();
      v81 = v26;
      v32 = v31;
      v33 = swift_slowAlloc();
      aBlock = v33;
      *(_DWORD *)v32 = 136315395;
      v34 = sub_2322B9464();
      v95 = sub_232266EA0(v34, v35, &aBlock);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2081;
      v95 = (uint64_t)v27;
      sub_23224C618(0, (unint64_t *)&qword_255FAD9C0);
      v36 = v27;
      v37 = sub_2322B8E40();
      v95 = sub_232266EA0(v37, v38, &aBlock);
      sub_2322B923C();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232241000, v28, v29, "[%s] Successfully saved the updated vision prescription %{private}s. Continuing to update prescription image attachment.", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x234901170](v33, -1, -1);
      MEMORY[0x234901170](v32, -1, -1);

    }
    else
    {

    }
    v55 = *(void (**)(char *, uint64_t))(v92 + 8);
    v55(v24, v93);
    swift_beginAccess();
    Strong = swift_weakLoadStrong();
    v57 = v84;
    if (Strong)
    {
      sub_232295738(a7, v27, v90, v91);
      return swift_release();
    }
    else
    {
      v66 = v82;
      sub_2322B88F4();
      v67 = sub_2322B890C();
      v68 = sub_2322B8FFC();
      if (os_log_type_enabled(v67, v68))
      {
        v69 = (uint8_t *)swift_slowAlloc();
        v70 = swift_slowAlloc();
        aBlock = v70;
        *(_DWORD *)v69 = 136315138;
        v71 = sub_2322B9464();
        v94 = sub_232266EA0(v71, v72, &aBlock);
        sub_2322B923C();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_232241000, v67, v68, "[%s] completion handler is called but self has been deallocated.", v69, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x234901170](v70, -1, -1);
        MEMORY[0x234901170](v69, -1, -1);
      }

      v55(v66, v93);
      sub_23224C618(0, (unint64_t *)&qword_255FACCA0);
      v73 = (void *)sub_2322B90B0();
      v74 = swift_allocObject();
      v76 = v90;
      v75 = v91;
      *(_QWORD *)(v74 + 16) = v90;
      *(_QWORD *)(v74 + 24) = v75;
      v100 = sub_23229800C;
      v101 = v74;
      aBlock = MEMORY[0x24BDAC760];
      v97 = 1107296256;
      v98 = sub_23225ADE4;
      v99 = &unk_2501146E8;
      v77 = _Block_copy(&aBlock);
      sub_23227E2C8(v76);
      swift_release();
      v78 = v87;
      sub_2322B8D20();
      aBlock = MEMORY[0x24BEE4AF8];
      sub_232297F3C();
      sub_23224BE78(0, (unint64_t *)&qword_255FACCB0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
      sub_23225B070();
      v79 = v89;
      v80 = v83;
      sub_2322B9278();
      MEMORY[0x2349007D4](0, v78, v79, v77);
      _Block_release(v77);

      (*(void (**)(char *, uint64_t))(v57 + 8))(v79, v80);
      return (*(uint64_t (**)(char *, uint64_t))(v88 + 8))(v78, v85);
    }
  }
  else
  {
    sub_2322B88F4();
    v39 = a3;
    v40 = a2;
    v41 = v39;
    v42 = a2;
    v43 = sub_2322B890C();
    v44 = sub_2322B8FFC();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = swift_slowAlloc();
      v84 = swift_slowAlloc();
      aBlock = v84;
      *(_DWORD *)v45 = 136315651;
      v46 = sub_2322B9464();
      v85 = v16;
      v95 = sub_232266EA0(v46, v47, &aBlock);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v45 + 12) = 2081;
      v95 = (uint64_t)v41;
      sub_23224C618(0, (unint64_t *)&qword_255FAD9C0);
      v48 = v41;
      v49 = sub_2322B8E40();
      v95 = sub_232266EA0(v49, v50, &aBlock);
      sub_2322B923C();

      swift_bridgeObjectRelease();
      *(_WORD *)(v45 + 22) = 2080;
      v95 = (uint64_t)a2;
      v51 = a2;
      sub_23224BE78(0, (unint64_t *)&unk_255FACCC0, (uint64_t (*)(uint64_t))sub_232297EDC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v52 = sub_2322B8E34();
      v95 = sub_232266EA0(v52, v53, &aBlock);
      v16 = v85;
      sub_2322B923C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_232241000, v43, v44, "[%s] Failed to save edited vision prescription %{private}s) with error: %s", (uint8_t *)v45, 0x20u);
      v54 = v84;
      swift_arrayDestroy();
      MEMORY[0x234901170](v54, -1, -1);
      MEMORY[0x234901170](v45, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v92 + 8))(v20, v93);
    sub_23224C618(0, (unint64_t *)&qword_255FACCA0);
    v59 = (void *)sub_2322B90B0();
    v60 = swift_allocObject();
    v62 = v90;
    v61 = v91;
    *(_QWORD *)(v60 + 16) = v90;
    *(_QWORD *)(v60 + 24) = v61;
    v100 = sub_2322981B0;
    v101 = v60;
    aBlock = MEMORY[0x24BDAC760];
    v97 = 1107296256;
    v98 = sub_23225ADE4;
    v99 = &unk_250114698;
    v63 = _Block_copy(&aBlock);
    sub_23227E2C8(v62);
    swift_release();
    v64 = v87;
    sub_2322B8D20();
    aBlock = MEMORY[0x24BEE4AF8];
    sub_232297F3C();
    sub_23224BE78(0, (unint64_t *)&qword_255FACCB0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_23225B070();
    v65 = v89;
    sub_2322B9278();
    MEMORY[0x2349007D4](0, v64, v65, v63);
    _Block_release(v63);

    (*(void (**)(char *, uint64_t))(v14 + 8))(v65, v13);
    return (*(uint64_t (**)(char *, uint64_t))(v88 + 8))(v64, v16);
  }
}

void sub_232295738(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  void *v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[2];
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t aBlock;
  uint64_t v86;
  void *v87;
  void *v88;
  void *v89;
  _QWORD *v90;

  v5 = v4;
  v81 = a1;
  v82 = a3;
  v7 = *v4;
  v79 = a2;
  v80 = v7;
  v8 = sub_2322B8D14();
  v74 = *(_QWORD *)(v8 - 8);
  v75 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v73 = (char *)v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2322B8D2C();
  v71 = *(_QWORD *)(v10 - 8);
  v72 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v70 = (char *)v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType();
  v76 = *(_QWORD *)(v12 - 8);
  v77 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v68 = (uint64_t)v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_2322B8918();
  v14 = *(_QWORD *)(v78 - 8);
  v15 = MEMORY[0x24BDAC7A8](v78);
  v69 = (char *)v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v67 - v17;
  sub_23224BE78(0, &qword_255FAECB0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(_QWORD *)(v20 + 64);
  v22 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)v67 - v24;
  v26 = v5[5];
  if (v26 >> 62)
  {
    swift_bridgeObjectRetain();
    v40 = sub_2322B9368();
    v83 = a4;
    if (v40)
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    sub_2322B88F4();
    v41 = sub_2322B890C();
    v42 = sub_2322B9014();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      v44 = swift_slowAlloc();
      aBlock = v44;
      *(_DWORD *)v43 = 136315138;
      v67[1] = v43 + 4;
      v45 = sub_2322B9464();
      v84 = sub_232266EA0(v45, v46, &aBlock);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232241000, v41, v42, "[%s] No attachment to remove. Continue to saving a new attachment.", v43, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234901170](v44, -1, -1);
      MEMORY[0x234901170](v43, -1, -1);
    }

    v47 = *(void (**)(char *, uint64_t))(v14 + 8);
    v48 = v78;
    v47(v18, v78);
    v50 = v76;
    v49 = v77;
    sub_232297DB8(v81, (uint64_t)v23);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v23, 1, v49) == 1)
    {
      sub_23225B12C((uint64_t)v23, &qword_255FAECB0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
      v51 = v69;
      sub_2322B88F4();
      v52 = sub_2322B890C();
      v53 = sub_2322B9014();
      if (os_log_type_enabled(v52, v53))
      {
        v54 = (uint8_t *)swift_slowAlloc();
        v55 = swift_slowAlloc();
        aBlock = v55;
        *(_DWORD *)v54 = 136315138;
        v56 = sub_2322B9464();
        v84 = sub_232266EA0(v56, v57, &aBlock);
        sub_2322B923C();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_232241000, v52, v53, "[%s] No attachment to save. Returning.", v54, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x234901170](v55, -1, -1);
        MEMORY[0x234901170](v54, -1, -1);
      }

      v47(v51, v48);
      sub_23224C618(0, (unint64_t *)&qword_255FACCA0);
      v58 = (void *)sub_2322B90B0();
      v59 = swift_allocObject();
      v61 = v82;
      v60 = v83;
      *(_QWORD *)(v59 + 16) = v82;
      *(_QWORD *)(v59 + 24) = v60;
      v89 = sub_232297F88;
      v90 = (_QWORD *)v59;
      aBlock = MEMORY[0x24BDAC760];
      v86 = 1107296256;
      v87 = sub_23225ADE4;
      v88 = &unk_250114788;
      v62 = _Block_copy(&aBlock);
      sub_23227E2C8(v61);
      swift_release();
      v63 = v70;
      sub_2322B8D20();
      aBlock = MEMORY[0x24BEE4AF8];
      sub_232297F3C();
      sub_23224BE78(0, (unint64_t *)&qword_255FACCB0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
      sub_23225B070();
      v64 = v73;
      v65 = v75;
      sub_2322B9278();
      MEMORY[0x2349007D4](0, v63, v64, v62);
      _Block_release(v62);

      (*(void (**)(char *, uint64_t))(v74 + 8))(v64, v65);
      (*(void (**)(char *, uint64_t))(v71 + 8))(v63, v72);
    }
    else
    {
      v66 = v68;
      sub_232297E98((uint64_t)v23, v68);
      sub_2322948FC(v66, v79, 0, v82, v83);
      sub_232262F64(v66, (uint64_t (*)(_QWORD))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
    }
    return;
  }
  v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v83 = a4;
  if (!v27)
    goto LABEL_8;
LABEL_3:
  if ((v26 & 0xC000000000000001) != 0)
  {
    v28 = (id)MEMORY[0x2349009FC](0, v26);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v28 = *(id *)(v26 + 32);
LABEL_6:
    v78 = (uint64_t)v28;
    swift_bridgeObjectRelease();
    v29 = sub_232293AD0();
    v30 = swift_allocObject();
    swift_weakInit();
    sub_232297DB8(v81, (uint64_t)v25);
    v31 = (*(unsigned __int8 *)(v20 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    v32 = (v21 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
    v33 = (_QWORD *)swift_allocObject();
    v34 = v79;
    v36 = v82;
    v35 = v83;
    v33[2] = v79;
    v33[3] = v36;
    v33[4] = v35;
    sub_232297E18((uint64_t)v25, (uint64_t)v33 + v31);
    *(_QWORD *)((char *)v33 + v32) = v30;
    *(_QWORD *)((char *)v33 + ((v32 + 15) & 0xFFFFFFFFFFFFFFF8)) = v80;
    v89 = sub_2322982D0;
    v90 = v33;
    aBlock = MEMORY[0x24BDAC760];
    v86 = 1107296256;
    v87 = sub_232258D30;
    v88 = &unk_250114738;
    v37 = _Block_copy(&aBlock);
    v38 = v34;
    sub_23227E2C8(v36);
    swift_release();
    v39 = (void *)v78;
    objc_msgSend(v29, sel_removeAttachment_fromObject_completion_, v78, v38, v37);
    _Block_release(v37);

    return;
  }
  __break(1u);
}

uint64_t sub_232295EE0(char a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  id v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  id v58;
  uint64_t v59;
  unint64_t v60;
  id v61;
  uint64_t v62;
  unint64_t v63;
  char *v64;
  id v65;
  NSObject *v66;
  os_log_type_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  id v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  char *v78;
  NSObject *v80;
  os_log_type_t v81;
  uint8_t *v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t aBlock;
  uint64_t v105;
  uint64_t (*v106)(uint64_t);
  void *v107;
  void *v108;
  uint64_t v109;

  v90 = a7;
  v91 = a8;
  v98 = a4;
  v99 = a5;
  v96 = sub_2322B8D14();
  v94 = *(_QWORD *)(v96 - 8);
  MEMORY[0x24BDAC7A8](v96);
  v93 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_2322B8D2C();
  v92 = *(_QWORD *)(v95 - 8);
  MEMORY[0x24BDAC7A8](v95);
  v97 = (char *)&v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2322B8918();
  v100 = *(_QWORD *)(v14 - 8);
  v101 = v14;
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v87 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v89 = (char *)&v87 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v87 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v87 - v23;
  sub_23224BE78(0, &qword_255FAECB0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&v87 - v26;
  v28 = type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType();
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)&v87 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    sub_2322B88F4();
    v48 = a3;
    v49 = a2;
    v50 = v48;
    v51 = a2;
    v52 = sub_2322B890C();
    v53 = sub_2322B8FFC();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = swift_slowAlloc();
      v55 = swift_slowAlloc();
      aBlock = v55;
      *(_DWORD *)v54 = 136315651;
      v56 = sub_2322B9464();
      v103 = sub_232266EA0(v56, v57, &aBlock);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v54 + 12) = 2081;
      v103 = (uint64_t)v50;
      sub_23224C618(0, (unint64_t *)&qword_255FAD9C0);
      v58 = v50;
      v59 = sub_2322B8E40();
      v103 = sub_232266EA0(v59, v60, &aBlock);
      sub_2322B923C();

      swift_bridgeObjectRelease();
      *(_WORD *)(v54 + 22) = 2080;
      v103 = (uint64_t)a2;
      v61 = a2;
      sub_23224BE78(0, (unint64_t *)&unk_255FACCC0, (uint64_t (*)(uint64_t))sub_232297EDC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v62 = sub_2322B8E34();
      v103 = sub_232266EA0(v62, v63, &aBlock);
      sub_2322B923C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_232241000, v52, v53, "[%s] Failed to remove vision prescription %{private}s) with error: %s", (uint8_t *)v54, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x234901170](v55, -1, -1);
      MEMORY[0x234901170](v54, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v100 + 8))(v17, v101);
    v38 = v98;
    v75 = v99;
    v40 = v95;
    v39 = v96;
    v42 = v93;
    v41 = v94;
    v43 = v92;
    sub_23224C618(0, (unint64_t *)&qword_255FACCA0);
    v44 = (void *)sub_2322B90B0();
    v76 = swift_allocObject();
    *(_QWORD *)(v76 + 16) = v38;
    *(_QWORD *)(v76 + 24) = v75;
    v108 = sub_232298380;
    v109 = v76;
    aBlock = MEMORY[0x24BDAC760];
    v105 = 1107296256;
    v47 = &unk_2501147D8;
    goto LABEL_13;
  }
  v88 = v31;
  sub_232297DB8(a6, (uint64_t)v27);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
  {
    sub_23225B12C((uint64_t)v27, &qword_255FAECB0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
    sub_2322B88F4();
    v32 = sub_2322B890C();
    v33 = sub_2322B9014();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      v35 = swift_slowAlloc();
      aBlock = v35;
      *(_DWORD *)v34 = 136315138;
      v36 = sub_2322B9464();
      v103 = sub_232266EA0(v36, v37, &aBlock);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232241000, v32, v33, "[%s] No attachment to save. Returning.", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234901170](v35, -1, -1);
      MEMORY[0x234901170](v34, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v100 + 8))(v24, v101);
    v38 = v98;
    v40 = v95;
    v39 = v96;
    v42 = v93;
    v41 = v94;
    v43 = v92;
    sub_23224C618(0, (unint64_t *)&qword_255FACCA0);
    v44 = (void *)sub_2322B90B0();
    v45 = swift_allocObject();
    v46 = v99;
    *(_QWORD *)(v45 + 16) = v38;
    *(_QWORD *)(v45 + 24) = v46;
    v108 = sub_2322983B8;
    v109 = v45;
    aBlock = MEMORY[0x24BDAC760];
    v105 = 1107296256;
    v47 = &unk_250114828;
LABEL_13:
    v106 = sub_23225ADE4;
    v107 = v47;
    v77 = _Block_copy(&aBlock);
    sub_23227E2C8(v38);
    swift_release();
    v78 = v97;
    sub_2322B8D20();
    aBlock = MEMORY[0x24BEE4AF8];
    sub_232297F3C();
    sub_23224BE78(0, (unint64_t *)&qword_255FACCB0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_23225B070();
    sub_2322B9278();
    MEMORY[0x2349007D4](0, v78, v42, v77);
    _Block_release(v77);

    (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v39);
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v78, v40);
  }
  sub_232297E98((uint64_t)v27, (uint64_t)v88);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v64 = v89;
    sub_2322B88F4();
    v65 = a3;
    v66 = sub_2322B890C();
    v67 = sub_2322B9014();
    if (os_log_type_enabled(v66, v67))
    {
      v68 = swift_slowAlloc();
      v69 = swift_slowAlloc();
      v103 = v69;
      *(_DWORD *)v68 = 136315395;
      v70 = sub_2322B9464();
      v102 = sub_232266EA0(v70, v71, &v103);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v68 + 12) = 2081;
      v102 = (uint64_t)v65;
      sub_23224C618(0, (unint64_t *)&qword_255FAD9C0);
      v72 = v65;
      v73 = sub_2322B8E40();
      v102 = sub_232266EA0(v73, v74, &v103);
      sub_2322B923C();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232241000, v66, v67, "[%s] Successfully removed the original attachment for %{private}s. Continuing to save the new prescription image attachment.", (uint8_t *)v68, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x234901170](v69, -1, -1);
      MEMORY[0x234901170](v68, -1, -1);

      (*(void (**)(char *, uint64_t))(v100 + 8))(v89, v101);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v100 + 8))(v64, v101);
    }
    v86 = (uint64_t)v88;
    sub_2322948FC((uint64_t)v88, v65, 0, v98, v99);
    swift_release();
    return sub_232262F64(v86, (uint64_t (*)(_QWORD))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
  }
  else
  {
    sub_2322B88F4();
    v80 = sub_2322B890C();
    v81 = sub_2322B8FFC();
    if (os_log_type_enabled(v80, v81))
    {
      v82 = (uint8_t *)swift_slowAlloc();
      v83 = swift_slowAlloc();
      v103 = v83;
      *(_DWORD *)v82 = 136315138;
      v84 = sub_2322B9464();
      v102 = sub_232266EA0(v84, v85, &v103);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232241000, v80, v81, "[%s] Has an attachment to save but self has been deallocated.", v82, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234901170](v83, -1, -1);
      MEMORY[0x234901170](v82, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v100 + 8))(v22, v101);
    return sub_232262F64((uint64_t)v88, (uint64_t (*)(_QWORD))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType);
  }
}

uint64_t sub_23229699C(uint64_t a1, void *a2, void *a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  BOOL v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  id v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  id v51;
  uint64_t v52;
  unint64_t v53;
  char *v54;
  void (*v55)(char *, uint64_t);
  char *v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *aBlock;
  uint64_t v94;
  uint64_t (*v95)(uint64_t);
  void *v96;
  uint64_t (*v97)();
  uint64_t v98;

  v84 = a8;
  v88 = a6;
  v89 = a7;
  LODWORD(v83) = a4;
  v11 = sub_2322B8D14();
  v91 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = sub_2322B8D2C();
  v14 = *(_QWORD *)(v90 - 8);
  MEMORY[0x24BDAC7A8](v90);
  v16 = (char *)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_2322B8918();
  v86 = *(_QWORD *)(v17 - 8);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v85 = (char *)&v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v76 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v76 - v23;
  v87 = v16;
  if (a2)
  {
    sub_2322B88F4();
    v25 = a3;
    v26 = a2;
    v27 = v25;
    v28 = a2;
    v29 = sub_2322B890C();
    v30 = sub_2322B8FFC();
    v31 = os_log_type_enabled(v29, v30);
    v82 = v14;
    v80 = (uint64_t)v27;
    if (v31)
    {
      v32 = swift_slowAlloc();
      v78 = a5;
      v33 = v27;
      v34 = v32;
      v77 = swift_slowAlloc();
      aBlock = (char *)v77;
      *(_DWORD *)v34 = 136315651;
      v35 = sub_2322B9464();
      v81 = v11;
      v92 = sub_232266EA0(v35, v36, (uint64_t *)&aBlock);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 12) = 2081;
      v92 = (uint64_t)v33;
      sub_23224C618(0, (unint64_t *)&qword_255FAD9C0);
      v37 = v33;
      v79 = v17;
      v38 = v37;
      v39 = sub_2322B8E40();
      v92 = sub_232266EA0(v39, v40, (uint64_t *)&aBlock);
      sub_2322B923C();

      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 22) = 2080;
      v92 = (uint64_t)a2;
      v41 = a2;
      sub_23224BE78(0, (unint64_t *)&unk_255FACCC0, (uint64_t (*)(uint64_t))sub_232297EDC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v42 = sub_2322B8E34();
      v92 = sub_232266EA0(v42, v43, (uint64_t *)&aBlock);
      v17 = v79;
      sub_2322B923C();
      v11 = v81;
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_232241000, v29, v30, "[%s] Failed save prescription image for vision prescription %{private}s) with error: %s", (uint8_t *)v34, 0x20u);
      v44 = v77;
      swift_arrayDestroy();
      MEMORY[0x234901170](v44, -1, -1);
      MEMORY[0x234901170](v34, -1, -1);
    }
    else
    {

    }
    v55 = *(void (**)(char *, uint64_t))(v86 + 8);
    v55(v22, v17);
    v56 = v85;
    if ((v83 & 1) != 0)
    {
      sub_2322B88F4();
      v57 = sub_2322B890C();
      v58 = sub_2322B9014();
      if (os_log_type_enabled(v57, v58))
      {
        v81 = v11;
        v59 = (uint8_t *)swift_slowAlloc();
        v60 = swift_slowAlloc();
        v83 = v13;
        v61 = v60;
        aBlock = (char *)v60;
        *(_DWORD *)v59 = 136315138;
        v62 = sub_2322B9464();
        v92 = sub_232266EA0(v62, v63, (uint64_t *)&aBlock);
        v11 = v81;
        sub_2322B923C();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_232241000, v57, v58, "[%s] Reverting the saved prescription since image failed to save", v59, 0xCu);
        swift_arrayDestroy();
        v64 = v61;
        v13 = v83;
        MEMORY[0x234901170](v64, -1, -1);
        MEMORY[0x234901170](v59, -1, -1);

        v65 = v85;
      }
      else
      {

        v65 = v56;
      }
      v55(v65, v17);
      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        sub_232293C08(v80);
        swift_release();
      }
    }
    sub_23224C618(0, (unint64_t *)&qword_255FACCA0);
    v67 = (void *)sub_2322B90B0();
    v72 = swift_allocObject();
    v74 = v88;
    v73 = v89;
    *(_QWORD *)(v72 + 16) = v88;
    *(_QWORD *)(v72 + 24) = v73;
    v97 = sub_23229800C;
    v98 = v72;
    aBlock = (char *)MEMORY[0x24BDAC760];
    v94 = 1107296256;
    v95 = sub_23225ADE4;
    v96 = &unk_2501145A8;
    v71 = _Block_copy(&aBlock);
    sub_23227E2C8(v74);
    swift_release();
    v66 = v87;
    sub_2322B8D20();
    aBlock = (char *)MEMORY[0x24BEE4AF8];
    sub_232297F3C();
    sub_23224BE78(0, (unint64_t *)&qword_255FACCB0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_23225B070();
    sub_2322B9278();
    MEMORY[0x2349007D4](0, v66, v13, v71);
    v14 = v82;
  }
  else
  {
    sub_2322B88F4();
    v45 = a3;
    v46 = sub_2322B890C();
    v47 = sub_2322B9014();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = swift_slowAlloc();
      v85 = (char *)swift_slowAlloc();
      aBlock = v85;
      *(_DWORD *)v48 = 136315395;
      v49 = sub_2322B9464();
      v83 = v13;
      v92 = sub_232266EA0(v49, v50, (uint64_t *)&aBlock);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v48 + 12) = 2081;
      v92 = (uint64_t)v45;
      sub_23224C618(0, (unint64_t *)&qword_255FAD9C0);
      v51 = v45;
      v52 = sub_2322B8E40();
      v92 = sub_232266EA0(v52, v53, (uint64_t *)&aBlock);
      v13 = v83;
      sub_2322B923C();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232241000, v46, v47, "[%s] Successfully saved the new attachment for %{private}s.", (uint8_t *)v48, 0x16u);
      v54 = v85;
      swift_arrayDestroy();
      MEMORY[0x234901170](v54, -1, -1);
      MEMORY[0x234901170](v48, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v86 + 8))(v24, v17);
    v66 = v87;
    sub_23224C618(0, (unint64_t *)&qword_255FACCA0);
    v67 = (void *)sub_2322B90B0();
    v68 = swift_allocObject();
    v69 = v88;
    v70 = v89;
    *(_QWORD *)(v68 + 16) = v88;
    *(_QWORD *)(v68 + 24) = v70;
    v97 = sub_232298850;
    v98 = v68;
    aBlock = (char *)MEMORY[0x24BDAC760];
    v94 = 1107296256;
    v95 = sub_23225ADE4;
    v96 = &unk_250114558;
    v71 = _Block_copy(&aBlock);
    sub_23227E2C8(v69);
    swift_release();
    sub_2322B8D20();
    aBlock = (char *)MEMORY[0x24BEE4AF8];
    sub_232297F3C();
    sub_23224BE78(0, (unint64_t *)&qword_255FACCB0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_23225B070();
    sub_2322B9278();
    MEMORY[0x2349007D4](0, v66, v13, v71);
  }
  _Block_release(v71);

  (*(void (**)(char *, uint64_t))(v91 + 8))(v13, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v66, v90);
}

void sub_232297304(void (*a1)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  void *v8;
  _OWORD v9[2];

  v2 = sub_2322B7EBC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  if (qword_255FABAC0 != -1)
    swift_once();
  memset(v9, 0, sizeof(v9));
  v7 = (id)qword_255FB36D0;
  sub_2322B7EB0();
  v8 = (void *)sub_2322B7EA4();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  objc_msgSend(v6, sel_postNotification_, v8);

  if (a1)
    a1(6);
}

uint64_t sub_232297430(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = sub_2322B8918();
  v4 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v8 = a2;
    sub_2322B88F4();
    v9 = a2;
    v10 = a2;
    v11 = sub_2322B890C();
    v12 = sub_2322B8FFC();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc();
      v14 = swift_slowAlloc();
      v21 = v14;
      *(_DWORD *)v13 = 136315394;
      v15 = sub_2322B9464();
      v20 = sub_232266EA0(v15, v16, &v21);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2080;
      v20 = (uint64_t)a2;
      v17 = a2;
      sub_232297EDC();
      v18 = sub_2322B8E34();
      v20 = sub_232266EA0(v18, v19, &v21);
      sub_2322B923C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_232241000, v11, v12, "[%s] Error occurred while deleting a vision prescription sample: %s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x234901170](v14, -1, -1);
      MEMORY[0x234901170](v13, -1, -1);

    }
    else
    {

    }
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

unint64_t sub_232297670(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_23228ED18();
  v2 = sub_2322B938C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_23228ED80(v6, (uint64_t)&v15);
    v7 = v15;
    v8 = v16;
    result = sub_232297794(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_23224C608(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_232297794(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2322B9434();
  sub_2322B8E7C();
  v4 = sub_2322B944C();
  return sub_2322977F8(a1, a2, v4);
}

unint64_t sub_2322977F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v15;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_2322B93F8() & 1) == 0)
    {
      v12 = ~v5;
      i = (i + 1) & v12;
      if (((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v13 = (_QWORD *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_2322B93F8() & 1) == 0)
        {
          for (i = (i + 1) & v12; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v12)
          {
            v15 = (_QWORD *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2)
              break;
            if ((sub_2322B93F8() & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

double sub_23229793C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_2322B26FC(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_2322B358C();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_23224C608((_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v8), a3);
    sub_232297A2C(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

unint64_t sub_232297A2C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_2322B9284();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_2322B9434();
        swift_bridgeObjectRetain();
        sub_2322B8E7C();
        v10 = sub_2322B944C();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_OWORD *)(v15 + 32 * v3);
          v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= v17 + 2))
          {
            v9 = v17[1];
            *v16 = *v17;
            v16[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_232297C00(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_2322B9284();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_2322B9434();
        sub_2322B9440();
        result = sub_2322B944C();
        v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8)
            goto LABEL_5;
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          v10 = *(_QWORD *)(a2 + 48);
          v11 = (_BYTE *)(v10 + v3);
          v12 = (_BYTE *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1)
            *v11 = *v12;
          v13 = *(_QWORD *)(a2 + 56);
          v14 = (_QWORD *)(v13 + 8 * v3);
          v15 = (_QWORD *)(v13 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v14 >= v15 + 1))
          {
            *v14 = *v15;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v17 = *v16;
    v18 = (-1 << v3) - 1;
  }
  else
  {
    v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    v18 = *v16;
    v17 = (-1 << result) - 1;
  }
  *v16 = v18 & v17;
  v19 = *(_QWORD *)(a2 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_232297DB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23224BE78(0, &qword_255FAECB0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_232297E18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23224BE78(0, &qword_255FAECB0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_232297E74(uint64_t a1, uint64_t a2)
{
  return sub_2322982DC(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, char *, _QWORD, _QWORD))sub_232293E98);
}

uint64_t sub_232297E80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_232297E90()
{
  return swift_release();
}

uint64_t sub_232297E98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_232297EDC()
{
  unint64_t result;

  result = qword_255FADBC0;
  if (!qword_255FADBC0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255FADBC0);
  }
  return result;
}

uint64_t sub_232297F34()
{
  return sub_23227E2A0();
}

unint64_t sub_232297F3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FAF980;
  if (!qword_255FAF980)
  {
    v1 = sub_2322B8D14();
    result = MEMORY[0x2349010BC](MEMORY[0x24BEE5468], v1);
    atomic_store(result, (unint64_t *)&qword_255FAF980);
  }
  return result;
}

uint64_t sub_232297F88()
{
  return sub_23227E2A0();
}

uint64_t sub_232297F90()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_232297FB4()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 40))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_232297FF0(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_23229699C(a1, a2, *(void **)(v2 + 16), *(unsigned __int8 *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_23229800C()
{
  return sub_23227E2A0();
}

uint64_t sub_232298014()
{
  return swift_deallocObject();
}

uint64_t sub_232298024(uint64_t a1, void *a2)
{
  return sub_232297430(a1, a2);
}

uint64_t sub_23229802C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23224BE78(0, &qword_255FAECB0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 48) & ~v2;

  if (*(_QWORD *)(v0 + 24))
    swift_release();
  swift_release();
  v4 = type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v0 + v3, 1, v4))
  {
    v5 = sub_2322B8000();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v0 + v3, v5);
    v6 = v0 + v3 + *(int *)(v4 + 20);
    v7 = sub_2322B88B8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  return swift_deallocObject();
}

uint64_t sub_23229812C(char a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  sub_23224BE78(0, &qword_255FAECB0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return sub_232294DD8(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), v2 + v7, *(_QWORD *)(v2 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_2322981B0()
{
  return sub_23227E2A0();
}

uint64_t sub_2322981C0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  sub_23224BE78(0, &qword_255FAECB0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);

  if (*(_QWORD *)(v0 + 24))
    swift_release();
  v3 = type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v0 + v2, 1, v3))
  {
    v4 = sub_2322B8000();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v2, v4);
    v5 = v0 + v2 + *(int *)(v3 + 20);
    v6 = sub_2322B88B8();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2322982D0(uint64_t a1, uint64_t a2)
{
  return sub_2322982DC(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, char *, _QWORD, _QWORD))sub_232295EE0);
}

uint64_t sub_2322982DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, char *, _QWORD, _QWORD))
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  sub_23224BE78(0, &qword_255FAECB0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryManager.URLAndContentType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  return a3(a1, a2, *((_QWORD *)v3 + 2), *((_QWORD *)v3 + 3), *((_QWORD *)v3 + 4), &v3[v8], *(_QWORD *)&v3[v9], *(_QWORD *)&v3[(v9 + 15) & 0xFFFFFFFFFFFFF8]);
}

uint64_t sub_232298380()
{
  return sub_23227E2A0();
}

uint64_t sub_23229838C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

void sub_2322983B8()
{
  uint64_t v0;

  sub_232297304(*(void (**)(uint64_t))(v0 + 16));
}

uint64_t *sub_2322983D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2322B8000();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_2322B88B8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_232298478(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_2322B8000();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_2322B88B8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_2322984D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_2322B8000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2322B88B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_232298550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_2322B8000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2322B88B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_2322985CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_2322B8000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2322B88B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_232298648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_2322B8000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2322B88B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_2322986C4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2322986D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_2322B8000();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_2322B88B8();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_232298744()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_232298750(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_2322B8000();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_2322B88B8();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_2322987CC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2322B8000();
  if (v1 <= 0x3F)
  {
    result = sub_2322B88B8();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_2322988B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  void *v17;
  void *v18;
  uint64_t (*v19)(_BYTE *, uint64_t);
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  void (*v34)(_BYTE *, uint64_t);
  id v35;
  uint64_t v36;
  unint64_t v37;
  os_log_t v38;
  void *v39;
  _BYTE v40[12];
  int v41;
  os_log_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47[2];

  v47[1] = *(id *)MEMORY[0x24BDAC8D0];
  swift_getObjectType();
  v3 = sub_2322B8918();
  v45 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v40[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_232245CCC();
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v40[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_2322B8000();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = &v40[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v11);
  v15 = &v40[-v14];
  sub_232262F20(a1, (uint64_t)v8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_232262F64((uint64_t)v8, (uint64_t (*)(_QWORD))sub_232245CCC);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v15, v8, v9);
  v17 = *(void **)(v1
                 + OBJC_IVAR____TtC21VisionHealthAppPlugin54VisionPrescriptionManualDataEntryImageSelectionHandler_fileManager);
  v18 = (void *)sub_2322B7FB8();
  v47[0] = 0;
  LODWORD(v17) = objc_msgSend(v17, sel_removeItemAtURL_error_, v18, v47);

  if ((_DWORD)v17)
  {
    v19 = *(uint64_t (**)(_BYTE *, uint64_t))(v10 + 8);
    v20 = v47[0];
    return v19(v15, v9);
  }
  else
  {
    v21 = v47[0];
    v22 = (void *)sub_2322B7F88();

    swift_willThrow();
    sub_2322B88F4();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v13, v15, v9);
    v23 = v22;
    v24 = v22;
    v25 = sub_2322B890C();
    v26 = sub_2322B8FFC();
    v27 = v26;
    if (os_log_type_enabled(v25, v26))
    {
      v28 = swift_slowAlloc();
      v44 = v3;
      v29 = v28;
      v43 = (void *)swift_slowAlloc();
      v47[0] = v43;
      *(_DWORD *)v29 = 136315650;
      v42 = v25;
      v30 = sub_2322B9464();
      v46 = sub_232266EA0(v30, v31, (uint64_t *)v47);
      v41 = v27;
      sub_2322B923C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2080;
      sub_232245044((unint64_t *)&qword_255FAEE70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
      v32 = sub_2322B93C8();
      v46 = sub_232266EA0(v32, v33, (uint64_t *)v47);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      v34 = *(void (**)(_BYTE *, uint64_t))(v10 + 8);
      v34(v13, v9);
      *(_WORD *)(v29 + 22) = 2080;
      v46 = (uint64_t)v22;
      v35 = v22;
      sub_232297EDC();
      v36 = sub_2322B8E40();
      v46 = sub_232266EA0(v36, v37, (uint64_t *)v47);
      sub_2322B923C();
      swift_bridgeObjectRelease();

      v38 = v42;
      _os_log_impl(&dword_232241000, v42, (os_log_type_t)v41, "[%s] Error occurred while attempting to clean up file at %s: %s", (uint8_t *)v29, 0x20u);
      v39 = v43;
      swift_arrayDestroy();
      MEMORY[0x234901170](v39, -1, -1);
      MEMORY[0x234901170](v29, -1, -1);

      (*(void (**)(_BYTE *, uint64_t))(v45 + 8))(v5, v44);
    }
    else
    {

      v34 = *(void (**)(_BYTE *, uint64_t))(v10 + 8);
      v34(v13, v9);

      (*(void (**)(_BYTE *, uint64_t))(v45 + 8))(v5, v3);
    }
    return ((uint64_t (*)(_BYTE *, uint64_t))v34)(v15, v9);
  }
}

uint64_t sub_232298D30()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2322B8BF4();
  swift_release();
  return swift_release();
}

id sub_232298D94(void *a1, uint64_t a2, unint64_t a3, void *a4)
{
  char *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  id v27;
  objc_class *v28;
  id v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v40;
  id v41;
  id v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  objc_super v50;

  v48 = a2;
  v49 = a3;
  v7 = sub_2322B88B8();
  v44 = *(_QWORD *)(v7 - 8);
  v45 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v43 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23224BE78(0, &qword_255FACD78, (uint64_t (*)(uint64_t))sub_232245CCC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v40 - v12;
  sub_232245CCC();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v46 = (uint64_t)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v47 = (char *)&v40 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v40 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v40 - v22;
  v24 = &v4[OBJC_IVAR____TtC21VisionHealthAppPlugin54VisionPrescriptionManualDataEntryImageSelectionHandler__selectedImageURL];
  v25 = sub_2322B8000();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v23, 1, 1, v25);
  sub_232262F20((uint64_t)v23, (uint64_t)v21);
  v26 = v4;
  sub_2322B8BDC();
  sub_232262F64((uint64_t)v23, (uint64_t (*)(_QWORD))sub_232245CCC);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v24, v13, v10);
  *(_QWORD *)&v26[OBJC_IVAR____TtC21VisionHealthAppPlugin54VisionPrescriptionManualDataEntryImageSelectionHandler_fileManager] = a4;
  v27 = a4;

  v28 = (objc_class *)type metadata accessor for VisionPrescriptionManualDataEntryImageSelectionHandler();
  v50.receiver = v26;
  v50.super_class = v28;
  v29 = objc_msgSendSuper2(&v50, sel_init);
  if (a1)
  {
    v30 = a1;
    v31 = v48;
    v32 = v49;
    sub_23227DFF4(a1, v48, v49);
    sub_23227DFF4(a1, v31, v32);
    v33 = v29;
    sub_232261214(v31, v32);
    v34 = objc_msgSend(a1, sel_contentType);
    v42 = v29;
    v35 = v34;

    v41 = v27;
    v36 = (uint64_t)v43;
    sub_2322B8894();

    sub_23229915C(v31, v32, v36, (uint64_t)v23);
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v36, v45);
    sub_232262F20((uint64_t)v23, (uint64_t)v21);
    swift_getKeyPath();
    swift_getKeyPath();
    v37 = (uint64_t)v47;
    sub_2322B8BF4();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_232262F20((uint64_t)v21, v46);
    v38 = v33;
    sub_2322B8C00();
    sub_2322988B4(v37);
    sub_232262F64((uint64_t)v21, (uint64_t (*)(_QWORD))sub_232245CCC);
    sub_232262F64(v37, (uint64_t (*)(_QWORD))sub_232245CCC);

    sub_23227E198(v30, v31, v32);
    sub_23227E198(v30, v31, v32);
    v29 = v42;
    sub_232262F64((uint64_t)v23, (uint64_t (*)(_QWORD))sub_232245CCC);
  }
  else
  {

  }
  return v29;
}

uint64_t sub_23229915C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  NSString *v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  _QWORD v23[4];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v25 = a3;
  v26 = a1;
  v27 = a2;
  v28 = a4;
  v23[0] = swift_getObjectType();
  v4 = sub_2322B8918();
  v23[1] = *(_QWORD *)(v4 - 8);
  v23[2] = v4;
  MEMORY[0x24BDAC7A8](v4);
  v23[3] = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_2322B80B4();
  v6 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2322B8000();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)v23 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v23 - v17;
  v19 = NSTemporaryDirectory();
  sub_2322B8E1C();

  sub_2322B7FAC();
  swift_bridgeObjectRelease();
  sub_2322B80A8();
  sub_2322B8090();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v24);
  sub_2322B7FD0();
  swift_bridgeObjectRelease();
  sub_2322B7FC4();
  v20 = *(void (**)(char *, uint64_t))(v10 + 8);
  v20(v13, v9);
  sub_2322B8030();
  v20(v18, v9);
  v21 = v28;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v28, v16, v9);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v21, 0, 1, v9);
}

id sub_232299584()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void *v15;
  void *v16;
  void (*v17)(char *, uint64_t);
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void (*v32)(char *, uint64_t);
  id v33;
  uint64_t v34;
  unint64_t v35;
  os_log_t v36;
  void *v37;
  void (*v38)(char *, uint64_t);
  objc_class *v39;
  uint64_t *v41;
  os_log_t v42;
  int v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  objc_super v49;
  id v50[2];

  v1 = v0;
  v50[1] = *(id *)MEMORY[0x24BDAC8D0];
  swift_getObjectType();
  v2 = sub_2322B8918();
  v45 = *(_QWORD *)(v2 - 8);
  v46 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232245CCC();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2322B8000();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v41 - v13;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2322B8BF4();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_232262F64((uint64_t)v7, (uint64_t (*)(_QWORD))sub_232245CCC);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
    v15 = *(void **)&v1[OBJC_IVAR____TtC21VisionHealthAppPlugin54VisionPrescriptionManualDataEntryImageSelectionHandler_fileManager];
    v16 = (void *)sub_2322B7FB8();
    v50[0] = 0;
    LODWORD(v15) = objc_msgSend(v15, sel_removeItemAtURL_error_, v16, v50);

    if ((_DWORD)v15)
    {
      v17 = *(void (**)(char *, uint64_t))(v9 + 8);
      v18 = v50[0];
      v17(v14, v8);
    }
    else
    {
      v19 = v50[0];
      v20 = (void *)sub_2322B7F88();

      swift_willThrow();
      sub_2322B88F4();
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
      v21 = v20;
      v22 = v20;
      v23 = sub_2322B890C();
      v24 = sub_2322B8FFC();
      v25 = v24;
      if (os_log_type_enabled(v23, v24))
      {
        v26 = swift_slowAlloc();
        v43 = v25;
        v27 = v26;
        v44 = (void *)swift_slowAlloc();
        v50[0] = v44;
        *(_DWORD *)v27 = 136315650;
        v42 = v23;
        v28 = sub_2322B9464();
        v47 = sub_232266EA0(v28, v29, (uint64_t *)v50);
        v41 = &v48;
        sub_2322B923C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v27 + 12) = 2080;
        sub_232245044((unint64_t *)&qword_255FAEE70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
        v30 = sub_2322B93C8();
        v47 = sub_232266EA0(v30, v31, (uint64_t *)v50);
        sub_2322B923C();
        swift_bridgeObjectRelease();
        v32 = *(void (**)(char *, uint64_t))(v9 + 8);
        v32(v12, v8);
        *(_WORD *)(v27 + 22) = 2080;
        v47 = (uint64_t)v20;
        v33 = v20;
        sub_232297EDC();
        v34 = sub_2322B8E40();
        v47 = sub_232266EA0(v34, v35, (uint64_t *)v50);
        sub_2322B923C();
        swift_bridgeObjectRelease();

        v36 = v42;
        _os_log_impl(&dword_232241000, v42, (os_log_type_t)v43, "[%s] Error occurred while attempting to clean up file at %s: %s", (uint8_t *)v27, 0x20u);
        v37 = v44;
        swift_arrayDestroy();
        MEMORY[0x234901170](v37, -1, -1);
        MEMORY[0x234901170](v27, -1, -1);

        (*(void (**)(char *, uint64_t))(v45 + 8))(v4, v46);
        v32(v14, v8);
      }
      else
      {

        v38 = *(void (**)(char *, uint64_t))(v9 + 8);
        v38(v12, v8);

        (*(void (**)(char *, uint64_t))(v45 + 8))(v4, v46);
        v38(v14, v8);
      }
    }
  }
  v39 = (objc_class *)type metadata accessor for VisionPrescriptionManualDataEntryImageSelectionHandler();
  v49.receiver = v1;
  v49.super_class = v39;
  return objc_msgSendSuper2(&v49, sel_dealloc);
}

uint64_t sub_232299AF0()
{
  return type metadata accessor for VisionPrescriptionManualDataEntryImageSelectionHandler();
}

uint64_t type metadata accessor for VisionPrescriptionManualDataEntryImageSelectionHandler()
{
  uint64_t result;

  result = qword_255FAEE48;
  if (!qword_255FAEE48)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_232299B34()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;

  v1 = v0;
  swift_getObjectType();
  sub_232245CCC();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v26 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v26 - v9;
  v11 = sub_2322B8918();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322B88F4();
  v15 = sub_2322B890C();
  v16 = sub_2322B9014();
  if (os_log_type_enabled(v15, v16))
  {
    v27 = v12;
    v17 = swift_slowAlloc();
    v26 = v11;
    v18 = (uint8_t *)v17;
    v19 = swift_slowAlloc();
    v29 = v1;
    v20 = v19;
    v31 = v19;
    v28 = v5;
    *(_DWORD *)v18 = 136315138;
    v21 = sub_2322B9464();
    v30 = sub_232266EA0(v21, v22, &v31);
    v5 = v28;
    sub_2322B923C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_232241000, v15, v16, "[%s] Removing image selection.", v18, 0xCu);
    swift_arrayDestroy();
    v23 = v20;
    v1 = v29;
    MEMORY[0x234901170](v23, -1, -1);
    MEMORY[0x234901170](v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v26);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  v24 = sub_2322B8000();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v10, 1, 1, v24);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2322B8BF4();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_232262F20((uint64_t)v10, (uint64_t)v5);
  v1;
  sub_2322B8C00();
  sub_2322988B4((uint64_t)v8);
  sub_232262F64((uint64_t)v10, (uint64_t (*)(_QWORD))sub_232245CCC);
  return sub_232262F64((uint64_t)v8, (uint64_t (*)(_QWORD))sub_232245CCC);
}

BOOL sub_232299E48()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  char v18;
  id v19;
  void *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint8_t *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  id v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;

  v39 = *MEMORY[0x24BDAC8D0];
  swift_getObjectType();
  v35 = sub_2322B8918();
  v0 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v2 = (char *)&v32 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232245CCC();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2322B8000();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2322B8BF4();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_232262F64((uint64_t)v5, (uint64_t (*)(_QWORD))sub_232245CCC);
    return 1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
  v10 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_2322B7FE8();
  v11 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v37 = 0;
  v12 = objc_msgSend(v10, sel_attributesOfItemAtPath_error_, v11, &v37);

  v13 = (void *)v37;
  if (v12)
  {
    type metadata accessor for FileAttributeKey(0);
    sub_232245044((unint64_t *)&unk_255FAEE90, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_2322C0B94);
    v14 = sub_2322B8DC8();
    v15 = v13;

    if (*(_QWORD *)(v14 + 16))
    {
      v16 = (id)*MEMORY[0x24BDD0D08];
      v17 = sub_2322B2868();
      if ((v18 & 1) != 0)
      {
        sub_232250B14(*(_QWORD *)(v14 + 56) + 32 * v17, (uint64_t)&v37);
      }
      else
      {
        v37 = 0u;
        v38 = 0u;
      }

    }
    else
    {
      v37 = 0u;
      v38 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v38 + 1))
    {
      sub_23225C80C();
      if ((swift_dynamicCast() & 1) != 0)
      {
        v29 = v36;
        v30 = (uint64_t)objc_msgSend(v36, sel_integerValue);

        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        return v30 < 26214400;
      }
    }
    else
    {
      sub_232262F64((uint64_t)&v37, (uint64_t (*)(_QWORD))sub_232250ABC);
    }
LABEL_17:
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return 1;
  }
  v19 = (id)v37;
  v20 = (void *)sub_2322B7F88();

  swift_willThrow();
  sub_2322B88F4();
  v21 = sub_2322B890C();
  v22 = sub_2322B8FFC();
  if (!os_log_type_enabled(v21, v22))
  {

    (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v35);
    goto LABEL_17;
  }
  v23 = swift_slowAlloc();
  v34 = v20;
  v24 = (uint8_t *)v23;
  v33 = swift_slowAlloc();
  *(_QWORD *)&v37 = v33;
  *(_DWORD *)v24 = 136315138;
  v32 = v24 + 4;
  v25 = sub_2322B9464();
  v36 = (id)sub_232266EA0(v25, v26, (uint64_t *)&v37);
  sub_2322B923C();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_232241000, v21, v22, "[%s] Failed to read size information", v24, 0xCu);
  v27 = 1;
  v28 = v33;
  swift_arrayDestroy();
  MEMORY[0x234901170](v28, -1, -1);
  MEMORY[0x234901170](v24, -1, -1);

  (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v35);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v27;
}

void sub_23229A348()
{
  unint64_t v0;

  sub_23224BE78(319, &qword_255FACD78, (uint64_t (*)(uint64_t))sub_232245CCC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_23229A3E0(void *a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD v25[2];
  uint64_t aBlock[6];

  ObjectType = swift_getObjectType();
  v5 = sub_2322B8918();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2322B88B8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a1, sel_dismissViewControllerAnimated_completion_, 1, 0);
  if (*(_QWORD *)(a2 + 16))
  {
    sub_2322B8D80();
    v13 = (void *)sub_2322B8D74();
    sub_2322B88AC();
    sub_2322B8888();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v14 = (void *)sub_2322B8DEC();
    swift_bridgeObjectRelease();
    v15 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = v15;
    *(_QWORD *)(v16 + 24) = ObjectType;
    aBlock[4] = (uint64_t)sub_23229BE04;
    aBlock[5] = v16;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_23229BA34;
    aBlock[3] = (uint64_t)&unk_2501148C8;
    v17 = _Block_copy(aBlock);
    swift_release();
    v18 = objc_msgSend(v13, sel_loadFileRepresentationForTypeIdentifier_completionHandler_, v14, v17);
    _Block_release(v17);

  }
  else
  {
    sub_2322B88F4();
    v19 = sub_2322B890C();
    v20 = sub_2322B9014();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      aBlock[0] = v22;
      *(_DWORD *)v21 = 136315138;
      v23 = sub_2322B9464();
      v25[1] = sub_232266EA0(v23, v24, aBlock);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232241000, v19, v20, "[%s] No photo selected", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234901170](v22, -1, -1);
      MEMORY[0x234901170](v21, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

void sub_23229A700(void *a1, void *a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  void *v38;
  char *v39;
  id v40;

  v5 = sub_2322B88B8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v39 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232245CCC();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v33 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v33 - v15;
  objc_msgSend(a1, sel_dismissViewControllerAnimated_completion_, 1, 0);
  v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE30E8]), sel_init);
  v17 = (unint64_t)objc_msgSend(a2, sel_pageCount);
  if ((v17 & 0x8000000000000000) != 0)
  {
LABEL_12:
    __break(1u);
    return;
  }
  v18 = v17;
  v33 = v6;
  v34 = v5;
  v35 = v16;
  v36 = v11;
  v37 = v14;
  v38 = v2;
  if (v17)
  {
    v19 = 0;
    while (v18 != v19)
    {
      v20 = objc_msgSend(a2, sel_imageOfPageAtIndex_, v19);
      v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE30F8]), sel_initWithImage_, v20);
      if (!v21)
      {

        goto LABEL_10;
      }
      v22 = v21;
      objc_msgSend(v40, sel_insertPage_atIndex_, v21, v19);

      if (v18 == ++v19)
        goto LABEL_7;
    }
    __break(1u);
    goto LABEL_12;
  }
LABEL_7:
  v23 = objc_msgSend(v40, sel_dataRepresentation, v33, v34);
  if (v23)
  {
    v24 = v23;
    v25 = sub_2322B8024();
    v27 = v26;

    v28 = (uint64_t)v39;
    sub_2322B88A0();
    v29 = (uint64_t)v35;
    v30 = v38;
    sub_23229915C(v25, v27, v28, (uint64_t)v35);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v28, v34);
    swift_getKeyPath();
    swift_getKeyPath();
    v31 = (uint64_t)v37;
    sub_2322B8BF4();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_232262F20(v29, (uint64_t)v36);
    v32 = v30;
    sub_2322B8C00();
    sub_2322988B4(v31);
    sub_232262F64(v29, (uint64_t (*)(_QWORD))sub_232245CCC);
    sub_232262F64(v31, (uint64_t (*)(_QWORD))sub_232245CCC);

    sub_232261214(v25, v27);
  }
  else
  {
LABEL_10:

  }
}

uint64_t sub_23229AAB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t result;
  void *v32;
  unsigned int (*v33)(char *, uint64_t, uint64_t);
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  void *v40;
  void (*v41)(char *, char *, uint64_t);
  char *v42;
  NSObject *v43;
  os_log_type_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  id v54;
  id v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  char *v58;
  id v59;
  uint64_t v60;
  uint64_t (**v61)(char *, uint64_t);
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v62 = a4;
  v6 = sub_2322B8918();
  v64 = *(_QWORD *)(v6 - 8);
  v65 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v63 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v57 - v9;
  sub_232245CCC();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v60 = (uint64_t)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v61 = (uint64_t (**)(char *, uint64_t))((char *)&v57 - v15);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v57 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v57 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v57 - v22;
  v24 = sub_2322B8000();
  v25 = *(char **)(v24 - 8);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v57 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v57 - v29;
  swift_beginAccess();
  result = MEMORY[0x2349011D0](a3 + 16);
  if (result)
  {
    v32 = (void *)result;
    sub_232262F20(a1, (uint64_t)v23);
    v33 = (unsigned int (*)(char *, uint64_t, uint64_t))*((_QWORD *)v25 + 6);
    if (v33(v23, 1, v24) == 1)
    {
      sub_232262F64((uint64_t)v23, (uint64_t (*)(_QWORD))sub_232245CCC);
      sub_2322B88F4();
      v34 = sub_2322B890C();
      v35 = sub_2322B8FFC();
      if (os_log_type_enabled(v34, v35))
      {
        v36 = (uint8_t *)swift_slowAlloc();
        v37 = swift_slowAlloc();
        v67 = v37;
        *(_DWORD *)v36 = 136315138;
        v38 = sub_2322B9464();
        v66 = sub_232266EA0(v38, v39, &v67);
        sub_2322B923C();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_232241000, v34, v35, "[%s] URL is empty. Skipping updating the url of selectedImageURL", v36, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x234901170](v37, -1, -1);
        MEMORY[0x234901170](v36, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v10, v65);
    }
    else
    {
      v40 = v32;
      v41 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v25 + 4);
      v41(v30, v23, v24);
      v59 = v40;
      sub_23229B0C4((uint64_t)v30, (uint64_t)v21);
      if (v33(v21, 1, v24) == 1)
      {
        v61 = (uint64_t (**)(char *, uint64_t))v25;
        sub_232262F64((uint64_t)v21, (uint64_t (*)(_QWORD))sub_232245CCC);
        v42 = v63;
        sub_2322B88F4();
        v43 = sub_2322B890C();
        v44 = sub_2322B8FFC();
        v45 = os_log_type_enabled(v43, v44);
        v47 = v64;
        v46 = v65;
        if (v45)
        {
          v48 = (uint8_t *)swift_slowAlloc();
          v49 = swift_slowAlloc();
          v58 = v30;
          v50 = v49;
          v67 = v49;
          *(_DWORD *)v48 = 136315138;
          v51 = sub_2322B9464();
          v66 = sub_232266EA0(v51, v52, &v67);
          sub_2322B923C();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_232241000, v43, v44, "[%s] Unable to move the file to a temporary location.", v48, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x234901170](v50, -1, -1);
          MEMORY[0x234901170](v48, -1, -1);

          (*(void (**)(char *, uint64_t))(v47 + 8))(v63, v46);
          return v61[1](v58, v24);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v47 + 8))(v42, v46);
          return v61[1](v30, v24);
        }
      }
      else
      {
        v41(v28, v21, v24);
        (*((void (**)(char *, char *, uint64_t))v25 + 2))(v18, v28, v24);
        (*((void (**)(char *, _QWORD, uint64_t, uint64_t))v25 + 7))(v18, 0, 1, v24);
        swift_getKeyPath();
        swift_getKeyPath();
        v58 = v30;
        v53 = (uint64_t)v61;
        v54 = v59;
        sub_2322B8BF4();
        swift_release();
        swift_release();
        swift_getKeyPath();
        swift_getKeyPath();
        sub_232262F20((uint64_t)v18, v60);
        v55 = v54;
        sub_2322B8C00();
        sub_2322988B4(v53);
        sub_232262F64((uint64_t)v18, (uint64_t (*)(_QWORD))sub_232245CCC);
        sub_232262F64(v53, (uint64_t (*)(_QWORD))sub_232245CCC);

        v56 = (void (*)(char *, uint64_t))*((_QWORD *)v25 + 1);
        v56(v28, v24);
        return ((uint64_t (*)(char *, uint64_t))v56)(v58, v24);
      }
    }
  }
  return result;
}

uint64_t sub_23229B0C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (**v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t inited;
  void *v27;
  id v28;
  char *v29;
  char *v30;
  char *v31;
  id v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  void *v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v65;
  NSString *v66;
  NSString *v67;
  char *v68;
  char *v69;
  char *v70;
  void (*v71)(char *, uint64_t);
  void *v72;
  void *v73;
  void *v74;
  id v75;
  id v76;
  char *v77;
  void *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  void (**v88)(char *, char *);
  char *v89;
  uint64_t ObjectType;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  id v100[8];

  v94 = a2;
  v100[6] = *(id *)MEMORY[0x24BDAC8D0];
  ObjectType = swift_getObjectType();
  v3 = sub_2322B8918();
  v92 = *(_QWORD *)(v3 - 8);
  v93 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v95 = (char *)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v89 = (char *)&v79 - v6;
  v84 = sub_2322B80B4();
  v83 = *(_QWORD *)(v84 - 8);
  MEMORY[0x24BDAC7A8](v84);
  v82 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2322B8000();
  v97 = *(_QWORD *)(v8 - 8);
  v98 = v8;
  v9 = MEMORY[0x24BDAC7A8](v8);
  v91 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v81 = (char *)&v79 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v85 = (char *)&v79 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v87 = (char *)&v79 - v15;
  sub_23229BE24(0);
  MEMORY[0x24BDAC7A8](v16);
  v88 = (void (**)(char *, char *))((char *)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = sub_2322B88B8();
  v19 = *(void (***)(char *, uint64_t, uint64_t))(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_2322B7F7C();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v79 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23224BE78(0, qword_255FAECB8, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2322C0E70;
  v27 = (void *)*MEMORY[0x24BDBCCF0];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BDBCCF0];
  v28 = v27;
  sub_232270CF4(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  v96 = a1;
  sub_2322B7FA0();
  v51 = (uint64_t)v88;
  v80 = v21;
  v52 = v89;
  swift_bridgeObjectRelease();
  sub_2322B7F64();
  v54 = v53;
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  v47 = v97;
  if (v54)
  {
    v55 = v51;
    sub_2322B88C4();
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v19[6])(v51, 1, v18) != 1)
    {
      v65 = v80;
      v19[4](v80, v55, v18);
      v66 = NSTemporaryDirectory();
      v89 = (char *)v18;
      v67 = v66;
      sub_2322B8E1C();
      v88 = (void (**)(char *, char *))v19;

      sub_2322B7FAC();
      swift_bridgeObjectRelease();
      v68 = v82;
      sub_2322B80A8();
      sub_2322B8090();
      (*(void (**)(char *, uint64_t))(v83 + 8))(v68, v84);
      v69 = v81;
      sub_2322B7FD0();
      swift_bridgeObjectRelease();
      v70 = v85;
      sub_2322B7FC4();
      v71 = *(void (**)(char *, uint64_t))(v47 + 8);
      v49 = v98;
      v71(v69, v98);
      v72 = *(void **)(v86
                     + OBJC_IVAR____TtC21VisionHealthAppPlugin54VisionPrescriptionManualDataEntryImageSelectionHandler_fileManager);
      v43 = v96;
      v73 = (void *)sub_2322B7FB8();
      v74 = (void *)sub_2322B7FB8();
      v100[0] = 0;
      LODWORD(v69) = objc_msgSend(v72, sel_moveItemAtURL_toURL_error_, v73, v74, v100);

      if ((_DWORD)v69)
      {
        v75 = v100[0];
        v71(v87, v49);
        v88[1](v65, v89);
        v63 = v94;
        (*(void (**)(uint64_t, char *, uint64_t))(v47 + 32))(v94, v70, v49);
        v62 = 0;
      }
      else
      {
        v76 = v100[0];
        v77 = v65;
        v78 = (void *)sub_2322B7F88();

        swift_willThrow();
        v71(v70, v49);
        v71(v87, v49);
        v88[1](v77, v89);
        v29 = v95;
        sub_2322B88F4();
        v30 = *(char **)(v47 + 16);
        v31 = v91;
        ((void (*)(char *, uint64_t, uint64_t))v30)(v91, v43, v49);
        v32 = v78;
        v33 = v78;
        v34 = sub_2322B890C();
        v35 = sub_2322B8FFC();
        if (os_log_type_enabled(v34, v35))
        {
          v36 = swift_slowAlloc();
          v89 = v30;
          v37 = v36;
          v38 = (void *)swift_slowAlloc();
          v100[0] = v38;
          *(_DWORD *)v37 = 136315650;
          v39 = sub_2322B9464();
          v99 = sub_232266EA0(v39, v40, (uint64_t *)v100);
          sub_2322B923C();
          swift_bridgeObjectRelease();
          *(_WORD *)(v37 + 12) = 2080;
          sub_232245044((unint64_t *)&qword_255FAEE70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
          v41 = sub_2322B93C8();
          v99 = sub_232266EA0(v41, v42, (uint64_t *)v100);
          sub_2322B923C();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v97 + 8))(v31, v98);
          *(_WORD *)(v37 + 22) = 2080;
          v43 = v96;
          v99 = (uint64_t)v78;
          v44 = v78;
          sub_232297EDC();
          v45 = sub_2322B8E34();
          v99 = sub_232266EA0(v45, v46, (uint64_t *)v100);
          v47 = v97;
          sub_2322B923C();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_232241000, v34, v35, "[%s] error occurred while moving file from url %s: %s", (uint8_t *)v37, 0x20u);
          swift_arrayDestroy();
          v48 = v38;
          v49 = v98;
          MEMORY[0x234901170](v48, -1, -1);
          v50 = v37;
          v30 = v89;
          MEMORY[0x234901170](v50, -1, -1);

          (*(void (**)(char *, uint64_t))(v92 + 8))(v95, v93);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v47 + 8))(v31, v49);
          (*(void (**)(char *, uint64_t))(v92 + 8))(v29, v93);
        }
        v63 = v94;
        ((void (*)(uint64_t, uint64_t, uint64_t))v30)(v94, v43, v49);
        v62 = 0;
      }
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56))(v63, v62, 1, v49);
    }
    sub_232262F64(v51, (uint64_t (*)(_QWORD))sub_23229BE24);
  }
  sub_2322B88F4();
  v56 = sub_2322B890C();
  v57 = sub_2322B8FFC();
  if (os_log_type_enabled(v56, v57))
  {
    v58 = (uint8_t *)swift_slowAlloc();
    v59 = (void *)swift_slowAlloc();
    v100[0] = v59;
    *(_DWORD *)v58 = 136315138;
    v60 = sub_2322B9464();
    v99 = sub_232266EA0(v60, v61, (uint64_t *)v100);
    sub_2322B923C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_232241000, v56, v57, "[%s] cannot get the type identifier. Skipping to move file.", v58, 0xCu);
    v62 = 1;
    swift_arrayDestroy();
    MEMORY[0x234901170](v59, -1, -1);
    MEMORY[0x234901170](v58, -1, -1);

    (*(void (**)(char *, uint64_t))(v92 + 8))(v52, v93);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v92 + 8))(v52, v93);
    v62 = 1;
  }
  v63 = v94;
  v49 = v98;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56))(v63, v62, 1, v49);
}

uint64_t sub_23229BA34(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, void *);
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v14;

  sub_232245CCC();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void (**)(char *, void *))(a1 + 32);
  if (a2)
  {
    sub_2322B7FDC();
    v10 = sub_2322B8000();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 0, 1, v10);
  }
  else
  {
    v11 = sub_2322B8000();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 1, 1, v11);
  }
  swift_retain();
  v12 = a3;
  v9(v8, a3);
  swift_release();

  return sub_232262F64((uint64_t)v8, (uint64_t (*)(_QWORD))sub_232245CCC);
}

uint64_t sub_23229BB98(uint64_t a1)
{
  uint64_t result;

  result = sub_232245044(&qword_255FACE00, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryImageSelectionHandler, (uint64_t)&unk_2322C3338);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23229BBD4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2322B8BF4();
  swift_release();
  return swift_release();
}

uint64_t sub_23229BC40(uint64_t a1, void **a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v15;

  sub_232245CCC();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v15 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v15 - v11;
  sub_232262F20(a1, (uint64_t)&v15 - v11);
  v13 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2322B8BF4();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_232262F20((uint64_t)v12, (uint64_t)v7);
  v13;
  sub_2322B8C00();
  sub_2322988B4((uint64_t)v10);
  sub_232262F64((uint64_t)v12, (uint64_t (*)(_QWORD))sub_232245CCC);
  return sub_232262F64((uint64_t)v10, (uint64_t (*)(_QWORD))sub_232245CCC);
}

uint64_t sub_23229BDBC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23229BDE0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23229BE04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23229AAB4(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_23229BE0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23229BE1C()
{
  return swift_release();
}

void sub_23229BE24(uint64_t a1)
{
  sub_23224BE78(a1, (unint64_t *)&unk_255FAEE80, (uint64_t (*)(uint64_t))MEMORY[0x24BEE63B8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

uint64_t sub_23229BE40(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, unint64_t, uint64_t);
  void (*v29)(char *, _QWORD, uint64_t, uint64_t);
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  NSObject *v34;
  os_log_type_t v35;
  _BOOL4 v36;
  uint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t ObjectType;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  ObjectType = swift_getObjectType();
  v3 = sub_2322B8918();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v59 = (char *)&v54 - v8;
  sub_232245CCC();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v57 = (uint64_t)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v58 = (char *)&v54 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v56 = (char *)&v54 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v54 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v54 - v19;
  v21 = sub_2322B8000();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v54 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v27 = *(_QWORD *)(a1 + 16);
  v62 = v3;
  v63 = v4;
  if (v27)
  {
    v60 = (char *)&v54 - v26;
    v28 = *(void (**)(char *, unint64_t, uint64_t))(v22 + 16);
    v28(v20, a1 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80)), v21);
    v29 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56);
    v29(v20, 0, 1, v21);
    v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
    if (v30(v20, 1, v21) != 1)
    {
      v55 = v25;
      v31 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
      v32 = (uint64_t)v60;
      v31(v60, v20, v21);
      sub_23229B0C4(v32, (uint64_t)v18);
      if (v30(v18, 1, v21) == 1)
      {
        sub_232262F64((uint64_t)v18, (uint64_t (*)(_QWORD))sub_232245CCC);
        v33 = v59;
        sub_2322B88F4();
        v34 = sub_2322B890C();
        v35 = sub_2322B8FFC();
        v36 = os_log_type_enabled(v34, v35);
        v37 = v62;
        if (v36)
        {
          v38 = (uint8_t *)swift_slowAlloc();
          v39 = swift_slowAlloc();
          v65 = v39;
          *(_DWORD *)v38 = 136315138;
          v40 = sub_2322B9464();
          v64 = sub_232266EA0(v40, v41, &v65);
          sub_2322B923C();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_232241000, v34, v35, "[%s] Unable to move the file to a temporary location.", v38, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x234901170](v39, -1, -1);
          MEMORY[0x234901170](v38, -1, -1);

          (*(void (**)(char *, uint64_t))(v63 + 8))(v59, v37);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v63 + 8))(v33, v37);
        }
        return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v60, v21);
      }
      else
      {
        v49 = v55;
        v31(v55, v18, v21);
        v50 = (uint64_t)v56;
        v28(v56, (unint64_t)v49, v21);
        v29((char *)v50, 0, 1, v21);
        swift_getKeyPath();
        swift_getKeyPath();
        v51 = (uint64_t)v58;
        sub_2322B8BF4();
        swift_release();
        swift_release();
        swift_getKeyPath();
        swift_getKeyPath();
        sub_232262F20(v50, v57);
        v52 = v1;
        sub_2322B8C00();
        sub_2322988B4(v51);
        sub_232262F64(v50, (uint64_t (*)(_QWORD))sub_232245CCC);
        sub_232262F64(v51, (uint64_t (*)(_QWORD))sub_232245CCC);
        v53 = *(void (**)(char *, uint64_t))(v22 + 8);
        v53(v49, v21);
        return ((uint64_t (*)(char *, uint64_t))v53)(v60, v21);
      }
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v20, 1, 1, v21);
  }
  sub_232262F64((uint64_t)v20, (uint64_t (*)(_QWORD))sub_232245CCC);
  sub_2322B88F4();
  v42 = sub_2322B890C();
  v43 = sub_2322B8FFC();
  if (os_log_type_enabled(v42, v43))
  {
    v44 = (uint8_t *)swift_slowAlloc();
    v45 = swift_slowAlloc();
    v65 = v45;
    *(_DWORD *)v44 = 136315138;
    v46 = sub_2322B9464();
    v64 = sub_232266EA0(v46, v47, &v65);
    sub_2322B923C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_232241000, v42, v43, "[%s] No document selected. Skipping updating the url of selectedImageURL", v44, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234901170](v45, -1, -1);
    MEMORY[0x234901170](v44, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v7, v62);
}

uint64_t type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource(uint64_t a1)
{
  return sub_23224E434(a1, qword_255FAEEB0);
}

uint64_t sub_23229C44C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_23229C488(char a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void);
  uint64_t v22;
  uint64_t (*v23)(void);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v35[2];
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;

  sub_23229EE28();
  v10 = v9;
  v46 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v47 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v35 - v13;
  v15 = type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Segment(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23229C9D4(a1, a2, a3, a4);
  v20 = v19;
  if (*(_QWORD *)(v19 + 16))
  {
    sub_23229F634(v19 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80)), (uint64_t)v18, type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Segment);
    v21 = MEMORY[0x24BDB9CE0];
    sub_23229EF04(0, &qword_255FAEF18, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9CE0]);
    v45 = a4;
    swift_allocObject();
    v22 = sub_2322B8B70();
    v48 = v22;
    sub_23229F0A8(v20, v22);
    swift_bridgeObjectRelease();
    sub_2322B8624();
    swift_allocObject();
    v44 = sub_2322B8618();
    v49 = v22;
    v42 = sub_23229F2E0(&qword_255FAEF20, &qword_255FAEF18, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v21, MEMORY[0x24BDB9D10]);
    v41 = sub_2322B8C48();
    v49 = v41;
    v23 = MEMORY[0x24BDB9AE0];
    sub_23229EF04(0, &qword_255FAEF08, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
    v39 = v24;
    sub_23224BE78(0, &qword_255FAC3D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v38 = v25;
    v37 = sub_23229F2E0(&qword_255FAEF10, &qword_255FAEF08, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v23, MEMORY[0x24BDB9AF8]);
    sub_2322B8C6C();
    v27 = v46;
    v26 = v47;
    v36 = *(void (**)(char *, char *, uint64_t))(v46 + 16);
    v36(v47, v14, v10);
    sub_2322B872C();
    swift_allocObject();
    v35[1] = sub_232245044(&qword_255FAEF28, (uint64_t (*)(uint64_t))sub_23229EE28, MEMORY[0x24BDB96C0]);
    sub_2322B8738();
    sub_2322B8378();
    swift_release();
    sub_232262DD4();
    v43 = v4;
    sub_232245044(&qword_255FACD90, (uint64_t (*)(uint64_t))sub_232262DD4, MEMORY[0x24BE43020]);
    v40 = sub_2322B8360();
    swift_release();
    v28 = *(void (**)(char *, uint64_t))(v27 + 8);
    v28(v14, v10);
    swift_release();
    v29 = sub_232245044(&qword_255FACDA0, (uint64_t (*)(uint64_t))sub_232262E30, MEMORY[0x24BE428C8]);
    v49 = v48;
    v49 = sub_2322B8C48();
    sub_2322B8C6C();
    v36(v26, v14, v10);
    swift_allocObject();
    sub_2322B8738();
    sub_2322B8378();
    swift_release();
    v30 = sub_2322B8360();
    swift_release();
    v28(v14, v10);
    swift_release();
    sub_232256EB4();
    v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_2322C2450;
    v32 = MEMORY[0x24BE43520];
    *(_QWORD *)(v31 + 32) = v44;
    *(_QWORD *)(v31 + 40) = v32;
    *(_QWORD *)(v31 + 48) = v40;
    *(_QWORD *)(v31 + 56) = v29;
    *(_QWORD *)(v31 + 64) = v30;
    *(_QWORD *)(v31 + 72) = v29;
    swift_retain();
    swift_retain();
    swift_retain();
    v33 = sub_2322B8654();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    v33 = sub_2322B8654();
  }
  swift_release();
  return v33;
}

uint64_t sub_23229C9D4(char a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t (**v36)();
  uint64_t *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t *v44;
  uint64_t (**v45)();
  uint64_t result;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t (**v83)();
  NSObject *v84;
  os_log_type_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;

  LODWORD(v99) = a3;
  v98 = a2;
  v7 = sub_2322B8918();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (uint64_t *)((char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23224BE78(0, (unint64_t *)&qword_255FAEE60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v93 - v15;
  v17 = type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link(0);
  MEMORY[0x24BDAC7A8](v17);
  v100 = v4;
  if (a1 == 4)
  {
    v95 = (uint64_t *)((char *)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
    v98 = a4;
    if (qword_255FAB900 != -1)
      swift_once();
    v47 = sub_2322B7F58();
    v49 = v48;
    sub_2322B7F58();
    sub_2322573A8(0, (unint64_t *)&qword_255FADB70, (unint64_t *)&qword_255FAF820, MEMORY[0x24BEE45D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v50 = swift_allocObject();
    *(_OWORD *)(v50 + 16) = xmmword_2322C0E70;
    *(_QWORD *)(v50 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v50 + 64) = sub_23224EC60();
    *(_QWORD *)(v50 + 32) = v47;
    *(_QWORD *)(v50 + 40) = v49;
    swift_bridgeObjectRetain();
    v51 = sub_2322B8DF8();
    v93 = v52;
    v94 = v51;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2322B7FF4();
    v53 = sub_2322B8000();
    v54 = *(_QWORD *)(v53 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48))(v16, 1, v53);
    if ((_DWORD)result == 1)
    {
      __break(1u);
    }
    else
    {
      v55 = v95;
      *v95 = v47;
      v55[1] = v49;
      v56 = (uint64_t)v55;
      (*(void (**)(char *, char *, uint64_t))(v54 + 32))((char *)v55 + *(int *)(v17 + 20), v16, v53);
      sub_23224BE78(0, qword_255FAEF58, type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Segment, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v57 = type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Segment(0);
      v58 = *(_QWORD *)(v57 - 8);
      v59 = *(_QWORD *)(v58 + 72);
      v60 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
      v61 = swift_allocObject();
      v97 = v61;
      *(_OWORD *)(v61 + 16) = xmmword_2322C0E50;
      v62 = (uint64_t *)(v61 + v60);
      v63 = sub_2322B7F58();
      v65 = v64;
      sub_23229F348();
      v67 = (uint64_t)v13 + *(int *)(v66 + 48);
      v68 = v93;
      *v13 = v94;
      v13[1] = v68;
      sub_23229F634(v56, v67, type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link);
      v96 = v11;
      swift_storeEnumTagMultiPayload();
      v69 = swift_allocObject();
      v70 = v99 & 1;
      *(_BYTE *)(v69 + 16) = v99 & 1;
      v71 = v98;
      v72 = v100;
      *(_QWORD *)(v69 + 24) = v98;
      *(_QWORD *)(v69 + 32) = v72;
      *v62 = v63;
      v62[1] = v65;
      sub_23229F6C0((uint64_t)v13, (uint64_t)v62 + *(int *)(v57 + 20), type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer);
      v73 = (uint64_t *)((char *)v62 + *(int *)(v57 + 24));
      *v73 = sub_23229F69C;
      v73[1] = v69;
      v74 = (uint64_t *)((char *)v62 + v59);
      swift_retain();
      v75 = sub_2322B7F58();
      v77 = v76;
      v78 = sub_2322B7F58();
      v80 = v79;
      v81 = swift_allocObject();
      *(_BYTE *)(v81 + 16) = v70;
      *(_QWORD *)(v81 + 24) = v71;
      *(_QWORD *)(v81 + 32) = v72;
      v82 = (uint64_t *)((char *)v74 + *(int *)(v57 + 20));
      *v82 = v78;
      v82[1] = v80;
      swift_storeEnumTagMultiPayload();
      *v74 = v75;
      v74[1] = v77;
      v83 = (uint64_t (**)())((char *)v74 + *(int *)(v57 + 24));
      *v83 = sub_23229F704;
      v83[1] = (uint64_t (*)())v81;
      swift_retain();
      sub_232262F64((uint64_t)v95, type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link);
      return v97;
    }
  }
  else if (a1 == 6)
  {
    v96 = v11;
    v19 = a4;
    sub_23224BE78(0, qword_255FAEF58, type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Segment, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v20 = type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Segment(0);
    v21 = *(_QWORD *)(v20 - 8);
    v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
    v95 = *(uint64_t **)(v21 + 72);
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_2322C0E50;
    v97 = v23;
    v24 = (uint64_t *)(v23 + v22);
    if (qword_255FAB900 != -1)
      swift_once();
    v25 = sub_2322B7F58();
    v93 = v26;
    v94 = v25;
    v27 = sub_2322B7F58();
    v29 = v28;
    v30 = swift_allocObject();
    v31 = v98;
    *(_QWORD *)(v30 + 16) = v98;
    v32 = v99 & 1;
    *(_BYTE *)(v30 + 24) = v99 & 1;
    v33 = v100;
    *(_QWORD *)(v30 + 32) = v19;
    *(_QWORD *)(v30 + 40) = v33;
    v34 = (uint64_t *)((char *)v24 + *(int *)(v20 + 20));
    *v34 = v27;
    v34[1] = v29;
    swift_storeEnumTagMultiPayload();
    v35 = v93;
    *v24 = v94;
    v24[1] = v35;
    v36 = (uint64_t (**)())((char *)v24 + *(int *)(v20 + 24));
    *v36 = sub_23229F710;
    v36[1] = (uint64_t (*)())v30;
    v37 = (uint64_t *)((char *)v95 + (_QWORD)v24);
    swift_retain();
    v99 = sub_2322B7F58();
    v95 = v38;
    v39 = sub_2322B7F58();
    v41 = v40;
    v42 = swift_allocObject();
    *(_QWORD *)(v42 + 16) = v31;
    *(_BYTE *)(v42 + 24) = v32;
    *(_QWORD *)(v42 + 32) = v19;
    *(_QWORD *)(v42 + 40) = v33;
    v43 = (uint64_t *)((char *)v37 + *(int *)(v20 + 20));
    *v43 = v39;
    v43[1] = v41;
    swift_storeEnumTagMultiPayload();
    v44 = v95;
    *v37 = v99;
    v37[1] = (uint64_t)v44;
    v45 = (uint64_t (**)())((char *)v37 + *(int *)(v20 + 24));
    *v45 = sub_23229F744;
    v45[1] = (uint64_t (*)())v42;
    swift_retain();
    return v97;
  }
  else
  {
    sub_2322B88DC();
    v84 = sub_2322B890C();
    v85 = sub_2322B8FFC();
    if (os_log_type_enabled(v84, v85))
    {
      v86 = swift_slowAlloc();
      v87 = swift_slowAlloc();
      v102 = v87;
      *(_DWORD *)v86 = 136315394;
      v88 = v100;
      v89 = sub_2322B9464();
      v101 = sub_232266EA0(v89, v90, &v102);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v86 + 12) = 2080;
      v101 = v88;
      sub_23229F5FC();
      v91 = sub_2322B8E34();
      v101 = sub_232266EA0(v91, v92, &v102);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232241000, v84, v85, "[%s] %s is unsupported to have segments", (uint8_t *)v86, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x234901170](v87, -1, -1);
      MEMORY[0x234901170](v86, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

uint64_t sub_23229D458@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v4 = sub_2322B80B4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Segment(0);
  (*(void (**)(void))(a1 + *(int *)(v8 + 24)))();
  sub_23224BE78(0, (unint64_t *)&unk_255FADB00, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_2322B83F0();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_2322C0E70;
  sub_2322B80A8();
  sub_2322B8090();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  result = sub_2322B83E4();
  *a2 = v9;
  return result;
}

uint64_t sub_23229D59C()
{
  type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldCell(0);
  sub_2322B9020();
  sub_23229F448();
  sub_232245044(&qword_255FAEF48, (uint64_t (*)(uint64_t))sub_23229F448, MEMORY[0x24BE439B0]);
  return sub_2322B9020();
}

uint64_t sub_23229D608@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t *v20;
  uint64_t v21;
  int EnumCaseMultiPayload;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t);
  uint64_t *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t result;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;

  v59 = a2;
  v3 = sub_2322B80B4();
  v57 = *(_QWORD *)(v3 - 8);
  v58 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v56 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_23224BE78(0, &qword_255FAC438, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v50 - v7;
  v9 = type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_2322B8840();
  v55 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23224BE78(0, &qword_255FADD70, (uint64_t (*)(uint64_t))MEMORY[0x24BE426D8], v5);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v50 - v16;
  v18 = type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer(0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (unint64_t *)((char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Segment(0);
  sub_23229F634(a1 + *(int *)(v21 + 20), (uint64_t)v20, type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v23 = *v20;
  v54 = v20[1];
  if (EnumCaseMultiPayload == 1)
  {
    v52 = v17;
    v53 = v12;
    sub_23229F348();
    sub_23229F6C0((uint64_t)v20 + *(int *)(v24 + 48), (uint64_t)v11, type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link);
    v62 = 91;
    v63 = 0xE100000000000000;
    v25 = v23;
    v27 = *v11;
    v26 = v11[1];
    swift_bridgeObjectRetain();
    sub_2322B8EAC();
    swift_bridgeObjectRelease();
    sub_2322B8EAC();
    sub_2322B8000();
    sub_232245044((unint64_t *)&qword_255FAEE70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
    sub_2322B93C8();
    sub_2322B8EAC();
    swift_bridgeObjectRelease();
    sub_2322B8EAC();
    v28 = v63;
    v51 = v62;
    v29 = v54;
    v62 = v25;
    v63 = v54;
    v60 = v27;
    v61 = v26;
    v30 = sub_2322B80D8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v8, 1, 1, v30);
    sub_232258314();
    swift_bridgeObjectRetain();
    v31 = sub_2322B9260();
    v33 = v32;
    LOBYTE(v27) = v34;
    sub_23229F3B0((uint64_t)v8);
    swift_bridgeObjectRelease();
    v35 = v55;
    if ((v27 & 1) == 0)
    {
      sub_23229DC44(v31, v33, v51, v28, v25, v29);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_2322573A8(0, &qword_255FAC200, (unint64_t *)&qword_255FABD20, MEMORY[0x24BE41798], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_2322C0E70;
    v41 = sub_2322B82AC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v52, 1, 1, v41);
    (*(void (**)(char *, _QWORD, uint64_t))(v35 + 104))(v14, *MEMORY[0x24BE44C60], v53);
    v42 = sub_2322B82B8();
    v43 = (uint64_t (*)(uint64_t))MEMORY[0x24BE426E0];
    *(_QWORD *)(v40 + 56) = v42;
    *(_QWORD *)(v40 + 64) = sub_232245044(&qword_255FADD78, v43, MEMORY[0x24BE426C0]);
    sub_23224FA10((uint64_t *)(v40 + 32));
    sub_2322B82A0();
    sub_232262F64((uint64_t)v11, type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link);
  }
  else
  {
    sub_2322573A8(0, &qword_255FAC200, (unint64_t *)&qword_255FABD20, MEMORY[0x24BE41798], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_2322C0E70;
    v37 = sub_2322B82AC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v17, 1, 1, v37);
    (*(void (**)(char *, _QWORD, uint64_t))(v55 + 104))(v14, *MEMORY[0x24BE44C60], v12);
    v38 = sub_2322B82B8();
    v39 = (uint64_t (*)(uint64_t))MEMORY[0x24BE426E0];
    *(_QWORD *)(v36 + 56) = v38;
    *(_QWORD *)(v36 + 64) = sub_232245044(&qword_255FADD78, v39, MEMORY[0x24BE426C0]);
    sub_23224FA10((uint64_t *)(v36 + 32));
    sub_2322B82A0();
  }
  v45 = v58;
  v44 = v59;
  v46 = v56;
  v47 = v57;
  sub_23224BE78(0, (unint64_t *)&unk_255FADB00, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_2322B83F0();
  v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_2322C0E70;
  sub_2322B80A8();
  sub_2322B8090();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v46, v45);
  result = sub_2322B83E4();
  *v44 = v48;
  return result;
}

uint64_t sub_23229DC44(unint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  swift_bridgeObjectRetain();
  sub_2322B9230();
  v13 = v12;
  swift_bridgeObjectRelease();
  if ((v13 & 0x1000000000000000) != 0)
    goto LABEL_25;
  swift_bridgeObjectRetain();
  sub_2322B9230();
  v15 = v14;
  result = swift_bridgeObjectRelease();
  if ((v15 & 0x1000000000000000) != 0)
    goto LABEL_25;
  v17 = (a5 >> 59) & 1;
  if ((a6 & 0x1000000000000000) == 0)
    LOBYTE(v17) = 1;
  v18 = 4 << v17;
  v19 = a1;
  if ((a1 & 0xC) == 4 << v17)
  {
    result = sub_23229EF6C(a1, a5, a6);
    v19 = result;
  }
  v40 = a3;
  v20 = a2;
  v21 = a5 & 0x800000000000000;
  if ((a6 & 0x1000000000000000) != 0)
  {
    v23 = a6 & 0x2000000000000000;
    v25 = a5 & 0xFFFFFFFFFFFFLL;
    v24 = HIBYTE(a6) & 0xF;
    if ((a6 & 0x2000000000000000) != 0)
      v32 = HIBYTE(a6) & 0xF;
    else
      v32 = a5 & 0xFFFFFFFFFFFFLL;
    if (v32 < v19 >> 16)
      goto LABEL_43;
    result = sub_2322B8EDC();
    v22 = result;
    if (v21)
      v26 = 7;
    else
      v26 = 11;
  }
  else
  {
    v22 = v19 >> 16;
    v23 = a6 & 0x2000000000000000;
    v24 = HIBYTE(a6) & 0xF;
    v25 = a5 & 0xFFFFFFFFFFFFLL;
    v26 = 7;
  }
  if (!v23)
    v24 = v25;
  v27 = 4 << (v21 >> 59);
  v28 = v26 | (v24 << 16);
  a2 = v20;
  if ((a6 & 0x1000000000000000) == 0)
    v27 = 8;
  v29 = v20;
  if ((v20 & 0xC) == v27)
  {
    v33 = v20;
    v34 = v22;
    result = sub_23229EF6C(v33, a5, a6);
    v22 = v34;
    v29 = result;
  }
  if ((v26 & 0xC) == v18)
  {
    v35 = v26 | (v24 << 16);
    v36 = v22;
    result = sub_23229EF6C(v35, a5, a6);
    v22 = v36;
    v28 = result;
    if ((a6 & 0x1000000000000000) == 0)
    {
LABEL_17:
      v30 = (v28 >> 16) - (v29 >> 16);
      if ((a4 & 0x1000000000000000) == 0)
        goto LABEL_18;
      goto LABEL_37;
    }
  }
  else if ((a6 & 0x1000000000000000) == 0)
  {
    goto LABEL_17;
  }
  if (v24 < v29 >> 16)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v24 >= v28 >> 16)
  {
    v37 = v22;
    v38 = sub_2322B8EDC();
    v22 = v37;
    v30 = v38;
    if ((a4 & 0x1000000000000000) == 0)
    {
LABEL_18:
      if ((a4 & 0x2000000000000000) != 0)
      {
        result = HIBYTE(a4) & 0xF;
        v31 = v22 + result;
        if (!__OFADD__(v22, result))
          goto LABEL_23;
      }
      else
      {
        result = v40 & 0xFFFFFFFFFFFFLL;
        v31 = v22 + (v40 & 0xFFFFFFFFFFFFLL);
        if (!__OFADD__(v22, v40 & 0xFFFFFFFFFFFFLL))
          goto LABEL_23;
      }
      goto LABEL_39;
    }
LABEL_37:
    v39 = v22;
    result = sub_2322B8EB8();
    v31 = v39 + result;
    if (!__OFADD__(v39, result))
    {
LABEL_23:
      result = v31 + v30;
      if (!__OFADD__(v31, v30))
      {
        MEMORY[0x234900570](result);
LABEL_25:
        sub_2322B8F0C();
        sub_23229F404();
        sub_2322B8EA0();
        swift_bridgeObjectRelease();
        sub_2322B8EA0();
        sub_23229EFE4(a2, a5, a6);
        sub_2322B8EA0();
        swift_bridgeObjectRelease();
        return 0;
      }
      goto LABEL_40;
    }
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_23229DF88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  void (*v7)(_BYTE *, _QWORD);
  _QWORD *v8;
  uint64_t v9;
  void (*v10)(_BYTE *, uint64_t);
  _BYTE v12[32];

  v0 = sub_2322B84EC();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v2);
  v6 = &v12[-v5];
  sub_2322B84B0();
  v7 = (void (*)(_BYTE *, _QWORD))sub_2322B84C8();
  *v8 = 0xC034000000000000;
  v7(v12, 0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v1 + 16))(v4, v6, v0);
  v9 = sub_2322B84E0();
  v10 = *(void (**)(_BYTE *, uint64_t))(v1 + 8);
  v10(v4, v0);
  v10(v6, v0);
  return v9;
}

uint64_t sub_23229E080()
{
  sub_2322B8240();
  return sub_2322B9020();
}

uint64_t sub_23229E0B4(uint64_t a1, int a2, uint64_t (*a3)(uint64_t a1))
{
  uint64_t v6;

  sub_2322573A8(0, &qword_255FAC200, (unint64_t *)&qword_255FABD20, MEMORY[0x24BE41798], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_2322C2050;
  sub_23224EFD8(a1, a2, a3, 8, (uint64_t *)(v6 + 32));
  sub_23224EFD8(a1, a2, a3, 7, (uint64_t *)(v6 + 72));
  sub_23224EFD8(a1, a2, a3, 10, (uint64_t *)(v6 + 112));
  sub_23224EFD8(a1, a2, a3, 9, (uint64_t *)(v6 + 152));
  return v6;
}

uint64_t sub_23229E188(uint64_t a1, int a2, uint64_t (*a3)(uint64_t a1))
{
  uint64_t v6;

  sub_2322573A8(0, &qword_255FAC200, (unint64_t *)&qword_255FABD20, MEMORY[0x24BE41798], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_2322C0E50;
  sub_23224EFD8(a1, a2, a3, 5, (uint64_t *)(v6 + 32));
  sub_23224EFD8(a1, a2, a3, 6, (uint64_t *)(v6 + 72));
  return v6;
}

_QWORD *sub_23229E22C(char a1, void (*a2)(uint64_t a1))
{
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26[2];
  _BYTE v27[40];
  _QWORD *v28;
  __int128 v29;
  _BYTE v30[40];
  _BYTE v31[40];

  v29 = xmmword_2322C0E50;
  sub_23229E624(12, a1, a2, (uint64_t)v30);
  sub_23229E624(11, a1, a2, (uint64_t)v31);
  v28 = (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_23224E5FC((uint64_t)v30, (uint64_t)v27);
  sub_23229F754((uint64_t)v27, (uint64_t)&v23);
  if (v24)
  {
    sub_232257144(&v23, (uint64_t)v26);
    sub_232257144(v26, (uint64_t)&v23);
    v4 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v4 = sub_2322AA744(0, v4[2] + 1, 1, v4);
      v28 = v4;
    }
    v6 = v4[2];
    v5 = v4[3];
    if (v6 >= v5 >> 1)
      v28 = sub_2322AA744((_QWORD *)(v5 > 1), v6 + 1, 1, v4);
    v7 = v24;
    v8 = v25;
    v9 = sub_23229F7B8((uint64_t)&v23, v24);
    MEMORY[0x24BDAC7A8](v9);
    v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v12 + 16))(v11);
    sub_23229F030(v6, (uint64_t)v11, (uint64_t *)&v28, v7, v8);
    sub_232258500((uint64_t)&v23);
  }
  else
  {
    sub_23224E5A0((uint64_t)&v23);
  }
  sub_23224E5FC((uint64_t)v31, (uint64_t)v27);
  sub_23229F754((uint64_t)v27, (uint64_t)&v23);
  if (v24)
  {
    sub_232257144(&v23, (uint64_t)v26);
    sub_232257144(v26, (uint64_t)&v23);
    v13 = v28;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v13 = sub_2322AA744(0, v13[2] + 1, 1, v13);
      v28 = v13;
    }
    v15 = v13[2];
    v14 = v13[3];
    if (v15 >= v14 >> 1)
      v28 = sub_2322AA744((_QWORD *)(v14 > 1), v15 + 1, 1, v13);
    v16 = v24;
    v17 = v25;
    v18 = sub_23229F7B8((uint64_t)&v23, v24);
    MEMORY[0x24BDAC7A8](v18);
    v20 = (char *)&v23 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v21 + 16))(v20);
    sub_23229F030(v15, (uint64_t)v20, (uint64_t *)&v28, v16, v17);
    sub_232258500((uint64_t)&v23);
  }
  else
  {
    sub_23224E5A0((uint64_t)&v23);
  }
  sub_2322573A8(0, (unint64_t *)&qword_255FACC90, (unint64_t *)&qword_255FABD20, MEMORY[0x24BE41798], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  swift_arrayDestroy();
  return v28;
}

uint64_t sub_23229E554(int a1, uint64_t (*a2)(uint64_t a1))
{
  uint64_t v4;

  sub_2322573A8(0, &qword_255FAC200, (unint64_t *)&qword_255FABD20, MEMORY[0x24BE41798], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2322C2050;
  sub_23224EFD8(2, a1, a2, 12, (uint64_t *)(v4 + 32));
  sub_23224EFD8(1, a1, a2, 12, (uint64_t *)(v4 + 72));
  sub_23224EFD8(2, a1, a2, 11, (uint64_t *)(v4 + 112));
  sub_23224EFD8(1, a1, a2, 11, (uint64_t *)(v4 + 152));
  return v4;
}

uint64_t sub_23229E624@<X0>(char a1@<W0>, char a2@<W1>, void (*a3)(uint64_t a1)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t result;
  void (**v19)(uint64_t, uint64_t, uint64_t);
  void (**v20)(uint64_t);
  void (**v21)(uint64_t, uint64_t, uint64_t);
  uint64_t *v22;

  type metadata accessor for VisionPrescriptionValidationController();
  v8 = swift_allocObject();
  type metadata accessor for VisionPrescriptionValidationHandler();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = a3;
  if (a1 == 11)
  {
    v11 = qword_255FAB900;
    swift_retain();
    if (v11 == -1)
    {
LABEL_6:
      v12 = sub_2322B7F58();
      v14 = v13;
      v15 = (int *)type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem(0);
      *(_QWORD *)(a4 + 24) = v15;
      *(_QWORD *)(a4 + 32) = sub_232245044((unint64_t *)&qword_255FABDF0, type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem, (uint64_t)&unk_2322C2FC8);
      v16 = sub_23224FA10((uint64_t *)a4);
      type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldCell(0);
      swift_retain_n();
      swift_retain_n();
      *v16 = sub_2322B8294();
      v16[1] = v17;
      sub_2322B80A8();
      result = swift_release_n();
      v19 = (void (**)(uint64_t, uint64_t, uint64_t))((char *)v16 + v15[6]);
      v20 = (void (**)(uint64_t))((char *)v16 + v15[7]);
      v21 = (void (**)(uint64_t, uint64_t, uint64_t))((char *)v16 + v15[8]);
      *((_BYTE *)v16 + v15[10]) = a1;
      *(uint64_t *)((char *)v16 + v15[11]) = 1;
      v22 = (uint64_t *)((char *)v16 + v15[12]);
      *v22 = v12;
      v22[1] = v14;
      *((_BYTE *)v16 + v15[9]) = a2 & 1;
      *v19 = sub_23229F7E0;
      v19[1] = (void (*)(uint64_t, uint64_t, uint64_t))v9;
      *v20 = sub_23229F7E8;
      v20[1] = a3;
      *v21 = sub_23229F7F0;
      v21[1] = (void (*)(uint64_t, uint64_t, uint64_t))a3;
      return result;
    }
LABEL_8:
    swift_once();
    goto LABEL_6;
  }
  if (a1 == 12)
  {
    v10 = qword_255FAB900;
    swift_retain();
    if (v10 == -1)
      goto LABEL_6;
    goto LABEL_8;
  }
  *(_QWORD *)(a4 + 32) = 0;
  *(_OWORD *)a4 = 0u;
  *(_OWORD *)(a4 + 16) = 0u;
  swift_retain();
  return swift_release();
}

void sub_23229E8D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5;
  void *v6;
  id v7;

  v5 = *(_BYTE *)(a3
                + *(int *)(type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem(0) + 40));
  sub_23225B410(a1, a2, v5);
  if (v6)
  {
    v7 = v6;
    sub_232281C88(v6, v5);

  }
}

void sub_23229E984(uint64_t a1)
{
  char *v1;

  v1 = (char *)&loc_23229E9C8
     + *((int *)qword_23229EC38
       + *(unsigned __int8 *)(a1
                            + *(int *)(type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem(0)
                                     + 40)));
  __asm { BR              X9 }
}

uint64_t sub_23229E9DC()
{
  char v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  void *v16;
  id v17;
  char **p_types;
  double v19;
  double v20;
  double v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  v2 = objc_msgSend((id)objc_opt_self(), sel_meterUnitWithMetricPrefix_, 4);
  if (!v2)
    return 0;
  v3 = v2;
  swift_retain();
  sub_2322B8B4C();
  swift_release();
  if (v26 == 1)
  {
    v4 = *(_QWORD *)(v1 + 48);
  }
  else
  {
    if (v26 != 2)
      goto LABEL_9;
    v4 = *(_QWORD *)(v1 + 40);
  }
  v5 = *(_QWORD *)(v4 + 32);
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 24);
  if (*(_QWORD *)(v6 + 16))
  {
    v7 = sub_2322B2760(v0);
    if ((v8 & 1) != 0)
    {
      v9 = *(void **)(*(_QWORD *)(v6 + 56) + 8 * v7);
      v10 = v9;
      goto LABEL_10;
    }
  }
LABEL_9:
  v9 = 0;
LABEL_10:
  swift_retain();
  sub_2322B8B4C();
  swift_release();
  if (v27 == 2)
  {
    v11 = *(_QWORD *)(v1 + 40);
  }
  else
  {
    if (v27 != 1)
      goto LABEL_19;
    v11 = *(_QWORD *)(v1 + 48);
  }
  v12 = *(_QWORD *)(v11 + 40);
  swift_beginAccess();
  v13 = *(_QWORD *)(v12 + 24);
  if (!*(_QWORD *)(v13 + 16) || (v14 = sub_2322B2760(v0), (v15 & 1) == 0))
  {
LABEL_19:
    v16 = 0;
    p_types = &stru_250118FF8.types;
    if (!v9)
      goto LABEL_17;
    goto LABEL_20;
  }
  v16 = *(void **)(*(_QWORD *)(v13 + 56) + 8 * v14);
  v17 = v16;
  p_types = (char **)(&stru_250118FF8 + 8);
  if (!v9)
  {
LABEL_17:
    if (v16)
    {
      v9 = 0;
      v19 = 0.0;
      goto LABEL_21;
    }

    return 0;
  }
LABEL_20:
  objc_msgSend(v9, p_types[491], v3);
  v19 = v20;
  if (!v16)
  {
    v21 = 0.0;
    goto LABEL_23;
  }
LABEL_21:
  objc_msgSend(v16, p_types[491], v3);
LABEL_23:
  v22 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v3, v21 + v19);
  v23 = v22;
  v24 = sub_23225B628((uint64_t)v22, v0);

  return v24;
}

void sub_23229EC74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  double v10;
  double v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;

  if (a3
    && (v6 = *(int *)(type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem(0) + 40),
        v7 = *(unsigned __int8 *)(a1 + v6),
        sub_23225B410(a2, a3, *(_BYTE *)(a1 + v6)),
        v8))
  {
    v9 = v8;
    objc_msgSend(v8, sel__value);
    v11 = v10 * 0.5;
    v12 = objc_msgSend(v9, sel__unit);
    v13 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v12, v11);

    v14 = v13;
    sub_232285944(v7, 1, v13);

    v16 = v14;
    sub_232285944(v7, 2, v13);

  }
  else
  {
    v15 = *(unsigned __int8 *)(a1
                             + *(int *)(type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldItem(0)
                                      + 40));
    sub_232285944(v15, 1, 0);
    sub_232285944(v15, 2, 0);
  }
}

void sub_23229EDD8()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_23229EE04()
{
  sub_2322B8648();
  return swift_deallocClassInstance();
}

uint64_t sub_23229EE20()
{
  return type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource(0);
}

void sub_23229EE28()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_255FAEF00)
  {
    v0 = MEMORY[0x24BDB9AE0];
    sub_23229EF04(255, &qword_255FAEF08, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_23224BE78(255, &qword_255FAC3D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_23229F2E0(&qword_255FAEF10, &qword_255FAEF08, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v0, MEMORY[0x24BDB9AF8]);
    v1 = sub_2322B8ABC();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_255FAEF00);
  }
}

uint64_t type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Segment(uint64_t a1)
{
  return sub_23224E434(a1, qword_255FAF0F0);
}

void sub_23229EF04(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Segment(255);
    v7 = a3(a1, v6, MEMORY[0x24BEE4078], MEMORY[0x24BEE40A8]);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_23229EF6C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_2322B8EF4();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x2349005E8](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

unint64_t sub_23229EFE4(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;

  v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v3 = a2 & 0xFFFFFFFFFFFFLL;
  if (4 * v3 >= result >> 14)
    return sub_2322B8F0C();
  __break(1u);
  return result;
}

uint64_t sub_23229F030(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  v9 = sub_23224FA10((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v9, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_232257144(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_23229F0A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD v19[4];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v24 = a2;
  v3 = type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Segment(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v23 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_2322B83A8();
  v22 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x24BEE4AF8];
  if (v8)
  {
    v26 = MEMORY[0x24BEE4AF8];
    sub_2322570FC(0, v8, 0);
    v10 = *(unsigned __int8 *)(v4 + 80);
    v11 = a1 + ((v10 + 32) & ~v10);
    v12 = *(_QWORD *)(v4 + 72);
    v20 = (v10 + 24) & ~v10;
    v21 = v12;
    v19[2] = v10 | 7;
    v19[3] = v20 + v5;
    v14 = (uint64_t)v23;
    v13 = v24;
    do
    {
      sub_23229F634(v11, v14, type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Segment);
      v15 = swift_allocObject();
      *(_QWORD *)(v15 + 16) = v13;
      sub_23229F6C0(v14, v15 + v20, type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Segment);
      swift_bridgeObjectRetain();
      swift_retain();
      sub_2322B839C();
      v9 = v26;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2322570FC(0, *(_QWORD *)(v9 + 16) + 1, 1);
        v9 = v26;
      }
      v17 = *(_QWORD *)(v9 + 16);
      v16 = *(_QWORD *)(v9 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_2322570FC(v16 > 1, v17 + 1, 1);
        v9 = v26;
      }
      *(_QWORD *)(v9 + 16) = v17 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v22 + 32))(v9+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(_QWORD *)(v22 + 72) * v17, v7, v25);
      v26 = v9;
      v11 += v21;
      --v8;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_23229F2E0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_23229EF04(255, a2, a3);
    result = MEMORY[0x2349010BC](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link(uint64_t a1)
{
  return sub_23224E434(a1, qword_255FAF060);
}

uint64_t type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer(uint64_t a1)
{
  return sub_23224E434(a1, qword_255FAEFD0);
}

void sub_23229F348()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255FAEF30)
  {
    type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255FAEF30);
  }
}

uint64_t sub_23229F3B0(uint64_t a1)
{
  uint64_t v2;

  sub_23224BE78(0, &qword_255FAC438, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23229F404()
{
  unint64_t result;

  result = qword_255FAEF38;
  if (!qword_255FAEF38)
  {
    result = MEMORY[0x2349010BC](MEMORY[0x24BEE1E20], MEMORY[0x24BEE1E08]);
    atomic_store(result, (unint64_t *)&qword_255FAEF38);
  }
  return result;
}

void sub_23229F448()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAEF40)
  {
    type metadata accessor for HKPrismBase(255);
    sub_232245044(&qword_255FABE00, (uint64_t (*)(uint64_t))type metadata accessor for HKPrismBase, (uint64_t)&protocol conformance descriptor for HKPrismBase);
    v0 = sub_2322B85A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAEF40);
  }
}

uint64_t sub_23229F4C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Segment(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  swift_bridgeObjectRelease();
  v3 = v0 + ((v2 + 24) & ~v2) + *(int *)(v1 + 20);
  type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
  {
    sub_23229F348();
    v6 = v3 + *(int *)(v5 + 48);
    swift_bridgeObjectRelease();
    v7 = v6
       + *(int *)(type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link(0)
                + 20);
    v8 = sub_2322B8000();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23229F5BC()
{
  type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Segment(0);
  return sub_2322B8B40();
}

unint64_t sub_23229F5FC()
{
  unint64_t result;

  result = qword_255FAEF50;
  if (!qword_255FAEF50)
  {
    type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource(255);
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255FAEF50);
  }
  return result;
}

uint64_t sub_23229F634(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23229F678()
{
  swift_release();
  return swift_deallocObject();
}

_QWORD *sub_23229F69C()
{
  uint64_t v0;

  return sub_23229E22C(*(_BYTE *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24));
}

uint64_t sub_23229F6C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_23229F704()
{
  uint64_t v0;

  return sub_23229E554(*(unsigned __int8 *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24));
}

uint64_t sub_23229F710()
{
  uint64_t v0;

  return sub_23229E0B4(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32));
}

uint64_t sub_23229F720()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23229F744()
{
  uint64_t v0;

  return sub_23229E188(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32));
}

uint64_t sub_23229F754(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2322573A8(0, (unint64_t *)&qword_255FACC90, (unint64_t *)&qword_255FABD20, MEMORY[0x24BE41798], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23229F7B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

void sub_23229F7E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23229E8D4(a1, a2, a3);
}

void sub_23229F7E8(uint64_t a1)
{
  sub_23229E984(a1);
}

void sub_23229F7F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23229EC74(a1, a2, a3);
}

uint64_t *sub_23229F7F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    if (EnumCaseMultiPayload == 1)
    {
      sub_23229F348();
      v9 = *(int *)(v8 + 48);
      v10 = (uint64_t *)((char *)a1 + v9);
      v11 = (char *)a2 + v9;
      v12 = *(uint64_t *)((char *)a2 + v9);
      v13 = *((_QWORD *)v11 + 1);
      *v10 = v12;
      v10[1] = v13;
      v14 = *(int *)(type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link(0)
                   + 20);
      v15 = (char *)v10 + v14;
      v16 = &v11[v14];
      v17 = sub_2322B8000();
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v18(v15, v16, v17);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23229F90C(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  result = swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
  {
    sub_23229F348();
    v5 = a1 + *(int *)(v4 + 48);
    swift_bridgeObjectRelease();
    v6 = v5
       + *(int *)(type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link(0)
                + 20);
    v7 = sub_2322B8000();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  return result;
}

_QWORD *sub_23229F98C(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  if (EnumCaseMultiPayload == 1)
  {
    sub_23229F348();
    v7 = *(int *)(v6 + 48);
    v8 = (_QWORD *)((char *)a1 + v7);
    v9 = (char *)a2 + v7;
    v10 = *(_QWORD *)((char *)a2 + v7);
    v11 = *((_QWORD *)v9 + 1);
    *v8 = v10;
    v8[1] = v11;
    v12 = *(int *)(type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link(0)
                 + 20);
    v13 = (char *)v8 + v12;
    v14 = &v9[v12];
    v15 = sub_2322B8000();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_23229FA6C(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_232262F64((uint64_t)a1, type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    a1[1] = a2[1];
    if (EnumCaseMultiPayload == 1)
    {
      sub_23229F348();
      v6 = *(int *)(v5 + 48);
      v7 = (_QWORD *)((char *)a1 + v6);
      v8 = (char *)a2 + v6;
      *v7 = *(_QWORD *)((char *)a2 + v6);
      v7[1] = *(_QWORD *)((char *)a2 + v6 + 8);
      v9 = *(int *)(type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link(0)
                  + 20);
      v10 = (char *)v7 + v9;
      v11 = &v8[v9];
      v12 = sub_2322B8000();
      v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13(v10, v11, v12);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_23229FB74(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    sub_23229F348();
    v7 = *(int *)(v6 + 48);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    *(_OWORD *)((char *)a1 + v7) = *(_OWORD *)((char *)a2 + v7);
    v10 = *(int *)(type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link(0)
                 + 20);
    v11 = &v8[v10];
    v12 = &v9[v10];
    v13 = sub_2322B8000();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_23229FC40(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  if (a1 != a2)
  {
    sub_232262F64((uint64_t)a1, type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      sub_23229F348();
      v7 = *(int *)(v6 + 48);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      *(_OWORD *)((char *)a1 + v7) = *(_OWORD *)((char *)a2 + v7);
      v10 = *(int *)(type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link(0)
                   + 20);
      v11 = &v8[v10];
      v12 = &v9[v10];
      v13 = sub_2322B8000();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_23229FD24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t sub_23229FD30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_23229FD40()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23229FD50()
{
  uint64_t result;
  unint64_t v1;
  _QWORD v2[6];

  v2[4] = &unk_2322C3440;
  result = type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_23229FDD4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_2322B8000();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_23229FE70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_2322B8000();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_23229FEB8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_2322B8000();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *sub_23229FF28(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2322B8000();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_23229FFA4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_2322B8000();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_2322A0000(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2322B8000();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_2322A006C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2322A0078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2322A080C(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BDCDAC0]);
}

uint64_t sub_2322A0084()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2322A0090(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_2322A08A0(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDCDAC0]);
}

uint64_t sub_2322A009C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2322B8000();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2322A0110(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  char *v29;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer(0);
    swift_bridgeObjectRetain();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v12 = v10[1];
    *v9 = *v10;
    v9[1] = v12;
    if (EnumCaseMultiPayload == 1)
    {
      sub_23229F348();
      v14 = *(int *)(v13 + 48);
      v15 = (_QWORD *)((char *)v9 + v14);
      v16 = (char *)v10 + v14;
      v17 = *(_QWORD *)((char *)v10 + v14);
      v18 = *((_QWORD *)v16 + 1);
      *v15 = v17;
      v15[1] = v18;
      v19 = *(int *)(type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link(0)
                   + 20);
      v29 = (char *)v15 + v19;
      v20 = &v16[v19];
      v21 = sub_2322B8000();
      v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v22(v29, v20, v21);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    v24 = *(int *)(a3 + 24);
    v25 = (uint64_t *)((char *)v4 + v24);
    v26 = (uint64_t *)((char *)a2 + v24);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
  }
  swift_retain();
  return v4;
}

uint64_t sub_2322A026C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
  {
    sub_23229F348();
    v7 = v4 + *(int *)(v6 + 48);
    swift_bridgeObjectRelease();
    v8 = v7
       + *(int *)(type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link(0)
                + 20);
    v9 = sub_2322B8000();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  return swift_release();
}

_QWORD *sub_2322A031C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  char *v27;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer(0);
  swift_bridgeObjectRetain();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v11 = v9[1];
  *v8 = *v9;
  v8[1] = v11;
  if (EnumCaseMultiPayload == 1)
  {
    sub_23229F348();
    v13 = *(int *)(v12 + 48);
    v14 = (_QWORD *)((char *)v8 + v13);
    v15 = (char *)v9 + v13;
    v16 = *(_QWORD *)((char *)v9 + v13);
    v17 = *((_QWORD *)v15 + 1);
    *v14 = v16;
    v14[1] = v17;
    v18 = *(int *)(type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link(0)
                 + 20);
    v27 = (char *)v14 + v18;
    v19 = &v15[v18];
    v20 = sub_2322B8000();
    v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21(v27, v19, v20);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  v22 = *(int *)(a3 + 24);
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  swift_retain();
  return a1;
}

_QWORD *sub_2322A0450(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  char *v23;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_232262F64((uint64_t)a1 + v6, type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer);
    type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *v7 = *v8;
    v7[1] = v8[1];
    if (EnumCaseMultiPayload == 1)
    {
      sub_23229F348();
      v11 = *(int *)(v10 + 48);
      v12 = (_QWORD *)((char *)v7 + v11);
      v13 = (char *)v8 + v11;
      *v12 = *(_QWORD *)((char *)v8 + v11);
      v12[1] = *(_QWORD *)((char *)v8 + v11 + 8);
      v14 = *(int *)(type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link(0)
                   + 20);
      v23 = (char *)v12 + v14;
      v15 = &v13[v14];
      v16 = sub_2322B8000();
      v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v17(v23, v15, v16);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v18 = *(int *)(a3 + 24);
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_2322A05C8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (_OWORD *)((char *)a1 + v6);
  v8 = (_OWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *v7 = *v8;
    sub_23229F348();
    v11 = *(int *)(v10 + 48);
    v12 = (char *)v7 + v11;
    v13 = (char *)v8 + v11;
    *(_OWORD *)((char *)v7 + v11) = *(_OWORD *)((char *)v8 + v11);
    v14 = *(int *)(type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link(0)
                 + 20);
    v15 = &v12[v14];
    v16 = &v13[v14];
    v17 = sub_2322B8000();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_2322A06C8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (_OWORD *)((char *)a1 + v7);
    v9 = (_OWORD *)((char *)a2 + v7);
    sub_232262F64((uint64_t)a1 + v7, type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer);
    v10 = type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *v8 = *v9;
      sub_23229F348();
      v12 = *(int *)(v11 + 48);
      v13 = (char *)v8 + v12;
      v14 = (char *)v9 + v12;
      *(_OWORD *)((char *)v8 + v12) = *(_OWORD *)((char *)v9 + v12);
      v15 = *(int *)(type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer.Link(0)
                   + 20);
      v16 = &v13[v15];
      v17 = &v14[v15];
      v18 = sub_2322B8000();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_release();
  return a1;
}

uint64_t sub_2322A07F4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2322A0800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2322A080C(a1, a2, a3, type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer);
}

uint64_t sub_2322A080C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  unint64_t v5;
  uint64_t v9;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v5 = *(_QWORD *)(a1 + 8);
    if (v5 >= 0xFFFFFFFF)
      LODWORD(v5) = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = a4(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v9);
  }
}

uint64_t sub_2322A0888()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2322A0894(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_2322A08A0(a1, a2, a3, a4, type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer);
}

uint64_t sub_2322A08A0(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v6;
  uint64_t v8;

  v6 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = a5(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6 + *(int *)(a4 + 20), a2, a2, v8);
  }
  return result;
}

uint64_t sub_2322A0914()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionFieldSegmentedControlDataSource.Footer(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for VisionPrescriptionDataSource()
{
  uint64_t result;

  result = qword_255FAF160;
  if (!qword_255FAF160)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2322A09D8()
{
  return swift_initClassMetadata2();
}

void sub_2322A0A40(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_2322A0AB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;

  sub_23224C6D0(0, &qword_255FAF4B8, (uint64_t)&type metadata for VisionPrescriptionDataSource.ItemsLayout, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9DE0]);
  v1 = v0;
  v27 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v25 - v2;
  sub_2322A8D34();
  v28 = v4;
  v30 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322A8ED8();
  v29 = v7;
  v31 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2322B90EC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322A8DF8();
  v15 = v14;
  v26 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  sub_2322B90F8();

  sub_232245044(&qword_255FAD370, (uint64_t (*)(uint64_t))MEMORY[0x24BDD0078], MEMORY[0x24BDD0070]);
  sub_2322B8C6C();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v19 = objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
  v20 = objc_msgSend(v19, sel_preferredContentSizeCategory);
  LOBYTE(v10) = sub_2322B9104();

  v32 = (v10 & 1) == 0;
  sub_2322B8B88();
  sub_2322A8E78();
  sub_232245044(&qword_255FAF4D8, (uint64_t (*)(uint64_t))sub_2322A8DF8, MEMORY[0x24BDB96C0]);
  sub_2322B8C9C();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v3, v1);
  sub_232245044(&qword_255FAF4E8, (uint64_t (*)(uint64_t))sub_2322A8D34, MEMORY[0x24BDB9530]);
  sub_2322A59DC();
  v21 = v28;
  sub_2322B8CCC();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v21);
  sub_232245044(&qword_255FAF4F0, (uint64_t (*)(uint64_t))sub_2322A8ED8, MEMORY[0x24BDB9658]);
  v22 = v29;
  v23 = sub_2322B8C48();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v22);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v17, v15);
  return v23;
}

void sub_2322A0E48(BOOL *a1@<X8>)
{
  id v2;
  id v3;
  char v4;

  v2 = objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
  v3 = objc_msgSend(v2, sel_preferredContentSizeCategory);
  v4 = sub_2322B9104();

  *a1 = (v4 & 1) == 0;
}

uint64_t sub_2322A0ED0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  _OWORD v17[2];

  v4 = v3;
  v8 = sub_2322B80B4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = qword_255FAF138;
  sub_2322A7A90(0, &qword_255FAF4B0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9CE0]);
  memset(v17, 0, sizeof(v17));
  swift_allocObject();
  swift_retain();
  *(_QWORD *)(v3 + v12) = sub_2322B8B70();
  *(_QWORD *)(v3 + qword_255FAF140) = 0;
  *(_QWORD *)(v3 + qword_255FAF150) = 0;
  v13 = qword_255FAF158;
  *(_QWORD *)(v4 + v13) = sub_2322A0AB4();
  *(_QWORD *)(v4 + qword_255FAF130) = a1;
  *(_QWORD *)(v4 + qword_255FAF148) = a3;
  v14 = a1;
  swift_retain();
  swift_release();
  *(_QWORD *)&v17[0] = 0;
  *((_QWORD *)&v17[0] + 1) = 0xE000000000000000;
  sub_2322B92CC();
  swift_bridgeObjectRelease();
  strcpy((char *)v17, "MutableArray<");
  HIWORD(v17[0]) = -4864;
  sub_2322B80A8();
  sub_2322B8090();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_2322B8EAC();
  swift_bridgeObjectRelease();
  sub_2322B8EAC();
  v15 = sub_2322B8420();
  swift_retain();
  sub_2322A119C(v14, a2);
  swift_release();

  swift_release();
  swift_release();
  return v15;
}

uint64_t sub_2322A10D0(unint64_t *a1, uint64_t a2, void *a3)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      v6 = sub_2322B9368();
      swift_bridgeObjectRelease();
    }
    else
    {
      v6 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    sub_2322B5790(a3, v6 != 0);
    return swift_release();
  }
  return result;
}

uint64_t sub_2322A119C(void *a1, void *a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v48[2];
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  id v62;

  v52 = *v2;
  sub_232261F38(0);
  MEMORY[0x24BDAC7A8](v5);
  v59 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322A7798();
  v8 = v7;
  v49 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322A78D8();
  v51 = v11;
  v53 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322A79EC();
  v15 = *(_QWORD *)(v14 - 8);
  v54 = v14;
  v55 = v15;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322A7B10();
  v19 = *(_QWORD *)(v18 - 8);
  v57 = v18;
  v58 = v19;
  MEMORY[0x24BDAC7A8](v18);
  v50 = (char *)v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322A7C24();
  v22 = *(_QWORD *)(v21 - 8);
  v60 = v21;
  v61 = v22;
  MEMORY[0x24BDAC7A8](v21);
  v56 = (char *)v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = a2;
  v24 = swift_allocObject();
  swift_weakInit();
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = v24;
  *(_QWORD *)(v25 + 24) = a1;
  sub_232273BDC();
  sub_2322A7F8C(0, &qword_255FAF290, (void (*)(uint64_t))sub_2322A783C);
  sub_232245044(&qword_255FAD9E8, (uint64_t (*)(uint64_t))sub_232273BDC, MEMORY[0x24BDB9AF8]);
  v26 = a1;
  sub_2322B8C54();
  swift_release();
  v27 = sub_232245044(&qword_255FAF2B0, (uint64_t (*)(uint64_t))sub_2322A7798, MEMORY[0x24BDB94C8]);
  v28 = sub_2322A7994();
  MEMORY[0x2349003F0](v8, v27, v28);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v10, v8);
  v29 = swift_allocObject();
  v30 = v48[1];
  swift_weakInit();
  v31 = (_QWORD *)swift_allocObject();
  v31[2] = v29;
  v31[3] = v26;
  v32 = v52;
  v31[4] = v52;
  v33 = swift_allocObject();
  *(_QWORD *)(v33 + 16) = sub_2322A7D24;
  *(_QWORD *)(v33 + 24) = v31;
  sub_2322A7A90(0, &qword_255FAF2C0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
  v34 = MEMORY[0x24BDB9610];
  sub_232245044(&qword_255FAF2D0, (uint64_t (*)(uint64_t))sub_2322A78D8, MEMORY[0x24BDB9610]);
  v35 = v26;
  v36 = v51;
  sub_2322B8C54();
  swift_release();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v13, v36);
  v37 = sub_232245044(&qword_255FAF2E8, (uint64_t (*)(uint64_t))sub_2322A79EC, MEMORY[0x24BDB94C8]);
  v38 = sub_2322A7BCC();
  v39 = v50;
  v40 = v54;
  MEMORY[0x2349003F0](v54, v37, v38);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v17, v40);
  sub_23224C618(0, (unint64_t *)&qword_255FACCA0);
  v62 = (id)sub_2322B90B0();
  v41 = sub_2322B9098();
  v42 = (uint64_t)v59;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v59, 1, 1, v41);
  sub_232245044(&qword_255FAF2F8, (uint64_t (*)(uint64_t))sub_2322A7B10, v34);
  sub_232258C54();
  v44 = v56;
  v43 = v57;
  sub_2322B8CB4();
  sub_232262F64(v42, (uint64_t (*)(_QWORD))sub_232261F38);

  (*(void (**)(char *, uint64_t))(v58 + 8))(v39, v43);
  *(_QWORD *)(swift_allocObject() + 16) = v32;
  swift_allocObject();
  swift_weakInit();
  sub_232245044(&qword_255FAF300, (uint64_t (*)(uint64_t))sub_2322A7C24, MEMORY[0x24BDB9A08]);
  v45 = v60;
  v46 = sub_2322B8C78();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v44, v45);
  *(_QWORD *)(v30 + qword_255FAF140) = v46;
  return swift_release();
}

uint64_t sub_2322A173C@<X0>(void **a1@<X0>, void *a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t result;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[2];
  uint64_t v38;
  id v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  sub_232256E54(0, &qword_255FAF320, (unint64_t *)&qword_255FAD9C0, 0x24BDD4100, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v44 = *(_QWORD *)(v6 - 8);
  v45 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v37 - v7;
  sub_2322A89F0();
  v46 = *(_QWORD *)(v9 - 8);
  v47 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322A8ABC();
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (!result)
    goto LABEL_5;
  v19 = result;
  if (!v17)
  {
    result = swift_release();
LABEL_5:
    v36 = 0;
    goto LABEL_6;
  }
  v20 = v17;
  v48 = sub_2322A2B94(a2, v20);
  v41 = v48;
  v42 = v11;
  v21 = v48;
  v22 = swift_allocObject();
  swift_weakInit();
  v23 = swift_allocObject();
  v43 = a3;
  *(_QWORD *)(v23 + 16) = v22;
  *(_QWORD *)(v23 + 24) = v20;
  sub_2322A7F08();
  v25 = v24;
  sub_232245044(&qword_255FAF360, (uint64_t (*)(uint64_t))sub_2322A7F08, MEMORY[0x24BDB9AF8]);
  v40 = v8;
  v26 = v20;
  v38 = v14;
  v39 = v26;
  v37[1] = v25;
  v27 = sub_2322B8CFC();
  swift_release();
  *(_QWORD *)(v19 + qword_255FAF150) = v27;
  swift_release();
  v48 = v21;
  sub_2322A8CBC(0, &qword_255FAF498, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_2322C0E70;
  *(_QWORD *)(v28 + 32) = MEMORY[0x24BEE4AF8];
  sub_2322B8CA8();
  swift_bridgeObjectRelease();
  sub_232245044(&qword_255FAF4A0, (uint64_t (*)(uint64_t))sub_2322A8ABC, MEMORY[0x24BDB9530]);
  v29 = sub_2322B8C48();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v16, v13);
  v30 = v39;
  v48 = (uint64_t)v39;
  sub_23224C618(0, (unint64_t *)&qword_255FAD9C0);
  v31 = v30;
  v32 = v40;
  sub_2322B8B88();
  v48 = v29;
  sub_2322A8684();
  v33 = v42;
  v34 = v45;
  sub_2322B8C60();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v34);
  sub_232245044(&qword_255FAF4A8, (uint64_t (*)(uint64_t))sub_2322A89F0, MEMORY[0x24BDB9450]);
  v35 = v47;
  v36 = sub_2322B8C48();

  a3 = v43;
  swift_release();
  swift_release();
  swift_release();
  result = (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v33, v35);
LABEL_6:
  *a3 = v36;
  return result;
}

uint64_t sub_2322A1B0C(void *a1, unint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t Strong;
  uint64_t v30;
  uint64_t result;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;

  v58 = a5;
  v57 = a4;
  v72 = a1;
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0];
  sub_2322A8CBC(0, &qword_255FAF318, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v66 = *(_QWORD *)(v7 - 8);
  v67 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v65 = (char *)&v54 - v8;
  sub_232256E54(0, &qword_255FAF320, (unint64_t *)&qword_255FAD9C0, 0x24BDD4100, v6);
  v63 = *(_QWORD *)(v9 - 8);
  v64 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v62 = (char *)&v54 - v10;
  sub_2322A7D9C();
  v69 = *(_QWORD *)(v11 - 8);
  v70 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v68 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322A80E4();
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v71 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322A8190();
  v18 = v17;
  v59 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322A84F4();
  v61 = v21;
  v60 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322A82FC(0, &qword_255FAF3F8, &qword_255FAF2C8, (uint64_t)&type metadata for PrescriptionAndAttachmentData, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
  v25 = v24;
  v26 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v54 - v27;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return 0;
  v73 = Strong;
  if (!(a2 >> 62))
  {
    v30 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v30)
      goto LABEL_4;
LABEL_10:
    swift_bridgeObjectRelease();
    v52 = v72;
    v74 = (uint64_t)v72;
    v75 = 0;
    v76 = 0;
    v77 = 0;
    sub_23224C6D0(0, &qword_255FAF2C8, (uint64_t)&type metadata for PrescriptionAndAttachmentData, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    v53 = v52;
    sub_2322B8B88();
    sub_2322A8744();
    v51 = sub_2322B8C48();

    swift_release();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
    return v51;
  }
  swift_bridgeObjectRetain();
  result = sub_2322B9368();
  if (!result)
    goto LABEL_10;
LABEL_4:
  v56 = v14;
  v55 = v15;
  if ((a2 & 0xC000000000000001) != 0)
  {
    v32 = (id)MEMORY[0x2349009FC](0, a2);
    goto LABEL_7;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v32 = *(id *)(a2 + 32);
LABEL_7:
    v33 = v32;
    swift_bridgeObjectRelease();
    v74 = sub_2322A22F4(v57, a2);
    v34 = swift_allocObject();
    *(_QWORD *)(v34 + 16) = v73;
    *(_QWORD *)(v34 + 24) = v33;
    swift_retain();
    v58 = v33;
    sub_2322B8B1C();
    sub_2322A87AC(0, &qword_255FAF3B0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_2322A8244();
    sub_2322A849C();
    sub_232245044(&qword_255FAF3B8, (uint64_t (*)(uint64_t))sub_2322A8244, MEMORY[0x24BDB9450]);
    sub_2322B8D08();
    swift_release();
    swift_release();
    sub_23224BE78(0, &qword_255FAF400, (uint64_t (*)(uint64_t))sub_2322A7FE8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_2322C0E70;
    *(_QWORD *)(v35 + 32) = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(v35 + 40) = 0;
    sub_232245044(&qword_255FAF3F0, (uint64_t (*)(uint64_t))sub_2322A8190, MEMORY[0x24BDB98F0]);
    sub_2322B8CA8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v20, v18);
    sub_232245044(&qword_255FAF408, (uint64_t (*)(uint64_t))sub_2322A84F4, MEMORY[0x24BDB9530]);
    v36 = v61;
    v37 = sub_2322B8C48();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v23, v36);
    v38 = v72;
    v74 = (uint64_t)v72;
    sub_23224C618(0, (unint64_t *)&qword_255FAD9C0);
    v39 = v38;
    v40 = v62;
    sub_2322B8B88();
    sub_2322A8684();
    v41 = v64;
    v42 = sub_2322B8C48();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v40, v41);
    v74 = v42;
    v79 = a2;
    sub_232256E54(0, &qword_255FAF268, &qword_255FAF270, 0x24BDD3928, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    swift_bridgeObjectRetain();
    v43 = v65;
    sub_2322B8B88();
    sub_2322A86EC();
    v44 = v67;
    v45 = sub_2322B8C48();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v43, v44);
    v78 = v37;
    v79 = v45;
    sub_2322A7E94();
    sub_2322A7F08();
    sub_2322A7F8C(0, &qword_255FAF340, (void (*)(uint64_t))sub_2322A7FE8);
    v46 = MEMORY[0x24BDB9AF8];
    sub_232245044(&qword_255FAF358, (uint64_t (*)(uint64_t))sub_2322A7E94, MEMORY[0x24BDB9AF8]);
    sub_232245044(&qword_255FAF360, (uint64_t (*)(uint64_t))sub_2322A7F08, v46);
    sub_2322A808C();
    swift_retain();
    v47 = v68;
    sub_2322B8A68();
    sub_23224C6D0(0, &qword_255FAF2C8, (uint64_t)&type metadata for PrescriptionAndAttachmentData, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    sub_232245044(&qword_255FAF378, (uint64_t (*)(uint64_t))sub_2322A7D9C, MEMORY[0x24BDB9470]);
    v48 = v70;
    v49 = v71;
    sub_2322B8C6C();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v47, v48);
    sub_232245044(&qword_255FAF420, (uint64_t (*)(uint64_t))sub_2322A80E4, MEMORY[0x24BDB96C0]);
    v50 = v56;
    v51 = sub_2322B8C48();
    swift_release();

    swift_release();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v49, v50);
    return v51;
  }
  __break(1u);
  return result;
}

uint64_t sub_2322A22F4(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  uint64_t v14;

  sub_2322A7438(0, &qword_255FAF430, (uint64_t)&qword_255FAF438, (void (*)(uint64_t, uint64_t, uint64_t (*)(void)))sub_2322A87AC, (void (*)(void))sub_2322A882C);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v14 - v8;
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a1;
  v10[4] = v2;
  sub_2322A87AC(0, &qword_255FAF438, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9E38]);
  sub_2322A882C();
  swift_bridgeObjectRetain();
  v11 = a1;
  sub_2322B8BC4();
  sub_2322A88A0();
  v12 = sub_2322B8C48();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v12;
}

uint64_t sub_2322A241C(_QWORD *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t (*v6)(void);
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;

  v5 = MEMORY[0x24BDCDDE8];
  v6 = MEMORY[0x24BEE1250];
  sub_2322A82FC(0, &qword_255FAF390, &qword_255FAF350, MEMORY[0x24BDCDDE8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  MEMORY[0x24BDAC7A8](v7);
  v8 = (_QWORD *)*a1;
  sub_23224C6D0(0, &qword_255FAF350, v5, (uint64_t (*)(_QWORD, uint64_t))v6);
  swift_bridgeObjectRetain();
  sub_2322B8B88();
  if (v8[2])
  {
    v9 = v8[4];
    v10 = v8[5];
    sub_2322611D0(v9, v10);
  }
  else
  {
    v9 = 0;
    v10 = 0xF000000000000000;
  }
  sub_2322A4104(a3, v9, v10);
  sub_232267314(v9, v10);
  sub_2322A8354(0, &qword_255FAF398, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_2322A83DC();
  sub_2322A8444();
  return sub_2322B8A50();
}

id sub_2322A2594@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v8;

  v8 = *(id *)a1;
  v3 = *(void **)(a1 + 24);
  if (v3)
  {
    v5 = *(_QWORD *)(a1 + 8);
    v4 = *(_QWORD *)(a1 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v5 = 0;
    v4 = 0;
  }
  *a2 = v8;
  a2[1] = v5;
  a2[2] = v4;
  a2[3] = v3;
  v6 = v3;
  return v8;
}

uint64_t sub_2322A2604()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v0 = sub_2322B8918();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322B88D0();
  v4 = sub_2322B890C();
  v5 = sub_2322B9014();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v12 = v7;
    *(_DWORD *)v6 = 136315138;
    v8 = sub_2322B9464();
    v11 = sub_232266EA0(v8, v9, &v12);
    sub_2322B923C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_232241000, v4, v5, "[%s] vision prescription and attachment stream completed.", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234901170](v7, -1, -1);
    MEMORY[0x234901170](v6, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_2322A2790(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  id v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  char *v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD v39[2];
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  void *v47;
  void *v48;
  uint64_t v49;
  void *v50;

  v45 = sub_2322B83F0();
  v2 = *(_QWORD *)(v45 - 8);
  v3 = MEMORY[0x24BDAC7A8](v45);
  v46 = (char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v42 = (char *)v39 - v5;
  sub_2322A7D80(0);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v44 = (uint64_t)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v43 = (uint64_t)v39 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v39 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v39 - v16;
  v19 = *(void **)a1;
  v18 = *(void **)(a1 + 8);
  v21 = *(_QWORD *)(a1 + 16);
  v20 = *(void **)(a1 + 24);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v23 = result;
    v40 = v2;
    v41 = v7;
    v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
    v25 = v45;
    v24(v17, 1, 1, v45);
    v39[1] = v23;
    v47 = v19;
    v48 = v18;
    v49 = v21;
    v50 = v20;
    sub_2322B8B40();
    if (v19)
    {
      v26 = v19;
      sub_232277978(v18, v21, v20);
      sub_2322A4BC4(v26, v18, v21, v20, (uint64_t)v15);

      sub_2322779FC((uint64_t)v18, v21, v20);
      sub_232262F64((uint64_t)v17, (uint64_t (*)(_QWORD))sub_2322A7D80);
      v24(v15, 0, 1, v25);
      sub_23229F6C0((uint64_t)v15, (uint64_t)v17, (uint64_t (*)(_QWORD))sub_2322A7D80);
    }
    sub_23224BE78(0, &qword_255FAF310, (uint64_t (*)(uint64_t))sub_2322A7D80, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v27 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_2322C0E70;
    v29 = v28 + v27;
    sub_23229F634((uint64_t)v17, v28 + v27, (uint64_t (*)(_QWORD))sub_2322A7D80);
    v30 = v43;
    sub_23229F634(v29, v43, (uint64_t (*)(_QWORD))sub_2322A7D80);
    v31 = v30;
    v32 = v44;
    sub_23229F6C0(v31, v44, (uint64_t (*)(_QWORD))sub_2322A7D80);
    v33 = v40;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v32, 1, v25) == 1)
    {
      sub_232262F64(v32, (uint64_t (*)(_QWORD))sub_2322A7D80);
    }
    else
    {
      v34 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 32);
      v35 = v42;
      v34(v42, v32, v25);
      v34(v46, (uint64_t)v35, v25);
      v36 = MEMORY[0x24BEE4AF8];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v36 = sub_2322AA87C(0, *(_QWORD *)(v36 + 16) + 1, 1, v36);
      v38 = *(_QWORD *)(v36 + 16);
      v37 = *(_QWORD *)(v36 + 24);
      if (v38 >= v37 >> 1)
        v36 = sub_2322AA87C(v37 > 1, v38 + 1, 1, v36);
      *(_QWORD *)(v36 + 16) = v38 + 1;
      v34((char *)(v36+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(_QWORD *)(v33 + 72) * v38), (uint64_t)v46, v25);
    }
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_2322B8438();
    swift_release();
    swift_bridgeObjectRelease();
    return sub_232262F64((uint64_t)v17, (uint64_t (*)(_QWORD))sub_2322A7D80);
  }
  return result;
}

uint64_t sub_2322A2B94(void *a1, void *a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v16;

  v5 = *v2;
  sub_2322A764C();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a1;
  v11[3] = a2;
  v11[4] = v5;
  sub_2322A76C4();
  sub_232245044(&qword_255FAF278, (uint64_t (*)(uint64_t))sub_2322A76C4, MEMORY[0x24BDB9E58]);
  v12 = a1;
  v13 = a2;
  sub_2322B8BC4();
  sub_232245044(&qword_255FAF280, (uint64_t (*)(uint64_t))sub_2322A764C, MEMORY[0x24BDB9E90]);
  v14 = sub_2322B8C48();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v14;
}

uint64_t sub_2322A2CC8@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  _QWORD *v8;
  id v9;
  id v10;
  uint64_t result;

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  sub_2322A76C4();
  swift_allocObject();
  v9 = a1;
  v10 = a2;
  result = sub_2322B8BB8();
  *a4 = result;
  return result;
}

void sub_2322A2D58(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  _QWORD v13[6];

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = sub_2322A7600;
  v11[3] = v10;
  v11[4] = a5;
  v13[4] = sub_2322A778C;
  v13[5] = v11;
  v13[0] = MEMORY[0x24BDAC760];
  v13[1] = 1107296256;
  v13[2] = sub_2322A339C;
  v13[3] = &unk_250114D50;
  v12 = _Block_copy(v13);
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_getAttachmentsForObject_completion_, a4, v12);
  _Block_release(v12);
}

void sub_2322A2E54(uint64_t a1, void *a2, void (*a3)(uint64_t, _QWORD), uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint8_t *v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  NSObject *v42;
  uint64_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  _QWORD v50[3];
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, _QWORD);
  uint64_t v54;
  uint64_t v55;

  v53 = a3;
  v9 = sub_2322B8918();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)v50 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v50 - v17;
  if (a2)
  {
    v19 = a2;
    sub_2322B88F4();
    v20 = a2;
    v21 = a2;
    v22 = sub_2322B890C();
    v23 = sub_2322B8FFC();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc();
      v25 = swift_slowAlloc();
      v55 = v25;
      *(_DWORD *)v24 = 136315394;
      v51 = v10;
      v26 = sub_2322B9464();
      v54 = sub_232266EA0(v26, v27, &v55);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2080;
      v54 = (uint64_t)a2;
      v28 = a2;
      sub_23224EC14(0, (unint64_t *)&qword_255FADBC0);
      v52 = v9;
      v29 = sub_2322B8E40();
      v54 = sub_232266EA0(v29, v30, &v55);
      sub_2322B923C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_232241000, v22, v23, "[%s] Error fetching attachments associated with vision prescription sample: %s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x234901170](v25, -1, -1);
      MEMORY[0x234901170](v24, -1, -1);

      (*(void (**)(char *, uint64_t))(v51 + 8))(v16, v52);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    }
    v53(MEMORY[0x24BEE4AF8], 0);

  }
  else
  {
    v50[2] = a5;
    sub_2322B88F4();
    v31 = sub_2322B890C();
    v32 = sub_2322B9014();
    if (os_log_type_enabled(v31, v32))
    {
      v51 = v10;
      v33 = swift_slowAlloc();
      v52 = v9;
      v34 = (uint8_t *)v33;
      v35 = swift_slowAlloc();
      v50[1] = a4;
      v36 = v35;
      v55 = v35;
      *(_DWORD *)v34 = 136315138;
      v37 = sub_2322B9464();
      v54 = sub_232266EA0(v37, v38, &v55);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232241000, v31, v32, "[%s] Successfully retrieved HKAttachments associated with vision prescription", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234901170](v36, -1, -1);
      v39 = v34;
      v9 = v52;
      MEMORY[0x234901170](v39, -1, -1);

      v40 = *(void (**)(char *, uint64_t))(v51 + 8);
    }
    else
    {

      v40 = *(void (**)(char *, uint64_t))(v10 + 8);
    }
    v40(v18, v9);
    if (a1)
    {
      v41 = a1;
    }
    else
    {
      sub_2322B88F4();
      v42 = sub_2322B890C();
      v43 = sub_2322B9014();
      if (os_log_type_enabled(v42, (os_log_type_t)v43))
      {
        v44 = (uint8_t *)swift_slowAlloc();
        v45 = swift_slowAlloc();
        v55 = v45;
        v52 = v9;
        *(_DWORD *)v44 = 136315138;
        v46 = sub_2322B9464();
        v54 = sub_232266EA0(v46, v47, &v55);
        sub_2322B923C();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_232241000, v42, (os_log_type_t)v43, "[%s] HKAttachments were nil. Sending empty attachment array.", v44, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x234901170](v45, -1, -1);
        MEMORY[0x234901170](v44, -1, -1);

        v48 = v13;
        v49 = v52;
      }
      else
      {

        v48 = v13;
        v49 = v9;
      }
      v40(v48, v49);
      v41 = MEMORY[0x24BEE4AF8];
    }
    v53(v41, 0);
  }
}

uint64_t sub_2322A339C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  id v6;

  v4 = a2;
  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_23224C618(0, &qword_255FAF270);
    v4 = sub_2322B8F30();
  }
  swift_retain();
  v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2322A3428@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  _QWORD *v8;
  id v9;
  uint64_t result;

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  sub_2322A87AC(0, &qword_255FAF438, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9E38]);
  swift_allocObject();
  swift_bridgeObjectRetain();
  v9 = a2;
  result = sub_2322B8BB8();
  *a4 = result;
  return result;
}

uint64_t sub_2322A34CC(uint64_t a1, uint64_t a2, unint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  dispatch_group_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  id v23;
  void *v24;
  _QWORD *v25;
  void *v26;
  NSObject *v27;
  id v28;
  char *v29;
  uint64_t v30;
  void *v31;
  _QWORD *v32;
  uint64_t v33;
  void *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t aBlock;
  uint64_t v52;
  void *v53;
  void *v54;
  void *v55;
  _QWORD *v56;

  v48 = a4;
  v49 = a5;
  v8 = sub_2322B8D14();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2322B90A4();
  v41 = *(_QWORD *)(v12 - 8);
  v42 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v43 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_2322B908C();
  MEMORY[0x24BDAC7A8](v38);
  v40 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_2322B8D2C();
  v45 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v44 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a1;
  *(_QWORD *)(v17 + 24) = a2;
  v39 = v17;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = MEMORY[0x24BEE4AF8];
  swift_retain();
  v19 = dispatch_group_create();
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_2322B9368();
    v20 = result;
  }
  else
  {
    v20 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
  }
  v46 = v15;
  v47 = v11;
  if (!v20)
  {
    swift_bridgeObjectRelease();
LABEL_12:
    sub_23224C618(0, (unint64_t *)&qword_255FACCA0);
    v29 = v44;
    sub_2322B8D20();
    v30 = MEMORY[0x24BEE4AF8];
    aBlock = MEMORY[0x24BEE4AF8];
    sub_232245044(&qword_255FAF450, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
    sub_2322A899C(0);
    sub_232245044(&qword_255FAF460, (uint64_t (*)(uint64_t))sub_2322A899C, MEMORY[0x24BEE12C8]);
    sub_2322B9278();
    (*(void (**)(char *, _QWORD, uint64_t))(v41 + 104))(v43, *MEMORY[0x24BEE5750], v42);
    v31 = (void *)sub_2322B90C8();
    v32 = (_QWORD *)swift_allocObject();
    v33 = v39;
    v32[2] = sub_2322A7600;
    v32[3] = v33;
    v32[4] = v18;
    v55 = sub_2322A89E4;
    v56 = v32;
    aBlock = MEMORY[0x24BDAC760];
    v52 = 1107296256;
    v53 = sub_23225ADE4;
    v54 = &unk_250114F80;
    v34 = _Block_copy(&aBlock);
    swift_retain();
    sub_2322B8D20();
    v50 = v30;
    sub_232245044((unint64_t *)&qword_255FAF980, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_232261854();
    sub_232245044((unint64_t *)&qword_255FAF990, (uint64_t (*)(uint64_t))sub_232261854, MEMORY[0x24BEE12C8]);
    v35 = v47;
    sub_2322B9278();
    sub_2322B9080();
    _Block_release(v34);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v35, v8);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v29, v46);
    swift_release();
    return swift_release();
  }
  if (v20 >= 1)
  {
    v36 = v9;
    v37 = v8;
    v22 = 0;
    do
    {
      if ((a3 & 0xC000000000000001) != 0)
        v23 = (id)MEMORY[0x2349009FC](v22, a3);
      else
        v23 = *(id *)(a3 + 8 * v22 + 32);
      v24 = v23;
      ++v22;
      dispatch_group_enter(v19);
      v25 = (_QWORD *)swift_allocObject();
      v25[2] = v18;
      v25[3] = v19;
      v25[4] = v49;
      v55 = sub_2322A8990;
      v56 = v25;
      aBlock = MEMORY[0x24BDAC760];
      v52 = 1107296256;
      v53 = sub_2322A400C;
      v54 = &unk_250114F30;
      v26 = _Block_copy(&aBlock);
      swift_retain();
      v27 = v19;
      swift_release();
      v28 = objc_msgSend(v48, sel_getDataForAttachment_completion_, v24, v26);
      _Block_release(v26);

    }
    while (v20 != v22);
    swift_bridgeObjectRelease();
    v8 = v37;
    v9 = v36;
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

void sub_2322A3A18(uint64_t a1, unint64_t a2, void *a3, _QWORD **a4, NSObject *a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  id v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint8_t *v44;
  void (*v45)(char *, uint64_t);
  _QWORD **v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  _QWORD *v57;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  _QWORD v63[2];
  _QWORD **v64;
  uint64_t v65;
  NSObject *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69[3];

  v67 = a1;
  v11 = sub_2322B8918();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)v63 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)v63 - v19;
  if (a3)
  {
    v21 = a3;
    sub_2322B88F4();
    v22 = a3;
    v23 = a3;
    v24 = sub_2322B890C();
    v25 = sub_2322B8FFC();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = swift_slowAlloc();
      v66 = a5;
      v27 = v26;
      v28 = swift_slowAlloc();
      v69[0] = v28;
      *(_DWORD *)v27 = 136315394;
      v29 = sub_2322B9464();
      v65 = v11;
      v68 = sub_232266EA0(v29, v30, v69);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2080;
      v68 = (uint64_t)a3;
      v31 = a3;
      sub_23224EC14(0, (unint64_t *)&qword_255FADBC0);
      v32 = sub_2322B8E40();
      v68 = sub_232266EA0(v32, v33, v69);
      sub_2322B923C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_232241000, v24, v25, "[%s] Error fetching data associated with attachment: %s", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x234901170](v28, -1, -1);
      v34 = v27;
      a5 = v66;
      MEMORY[0x234901170](v34, -1, -1);

      (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v65);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11);
    }
  }
  else
  {
    v63[1] = a6;
    v64 = a4;
    sub_2322B88F4();
    v35 = sub_2322B890C();
    v36 = sub_2322B9014();
    if (os_log_type_enabled(v35, v36))
    {
      v63[0] = a2;
      v37 = swift_slowAlloc();
      v65 = v11;
      v38 = (uint8_t *)v37;
      v39 = swift_slowAlloc();
      v66 = a5;
      v40 = v39;
      v69[0] = v39;
      *(_DWORD *)v38 = 136315138;
      v41 = sub_2322B9464();
      v68 = sub_232266EA0(v41, v42, v69);
      a2 = v63[0];
      sub_2322B923C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232241000, v35, v36, "[%s] Successfully retrieved Data associated with attachment", v38, 0xCu);
      swift_arrayDestroy();
      v43 = v40;
      a5 = v66;
      MEMORY[0x234901170](v43, -1, -1);
      v44 = v38;
      v11 = v65;
      MEMORY[0x234901170](v44, -1, -1);
    }

    v45 = *(void (**)(char *, uint64_t))(v12 + 8);
    v45(v20, v11);
    if (a2 >> 60 != 15)
    {
      v46 = v64 + 2;
      sub_2322611D0(v67, a2);
      sub_2322B88F4();
      v47 = sub_2322B890C();
      v48 = sub_2322B9014();
      if (os_log_type_enabled(v47, v48))
      {
        v65 = v11;
        v49 = (uint8_t *)swift_slowAlloc();
        v50 = swift_slowAlloc();
        v66 = a5;
        v51 = v50;
        v69[0] = v50;
        v64 = v46;
        *(_DWORD *)v49 = 136315138;
        v52 = sub_2322B9464();
        v68 = sub_232266EA0(v52, v53, v69);
        v46 = v64;
        sub_2322B923C();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_232241000, v47, v48, "[%s] Appending data to data objects array", v49, 0xCu);
        swift_arrayDestroy();
        v54 = v51;
        a5 = v66;
        MEMORY[0x234901170](v54, -1, -1);
        MEMORY[0x234901170](v49, -1, -1);

        v55 = v15;
        v56 = v65;
      }
      else
      {

        v55 = v15;
        v56 = v11;
      }
      v45(v55, v56);
      swift_beginAccess();
      v57 = *v46;
      sub_2322611D0(v67, a2);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v46 = v57;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v57 = sub_2322AAAAC(0, v57[2] + 1, 1, v57);
        *v46 = v57;
      }
      v60 = v57[2];
      v59 = v57[3];
      if (v60 >= v59 >> 1)
      {
        v57 = sub_2322AAAAC((_QWORD *)(v59 > 1), v60 + 1, 1, v57);
        *v46 = v57;
      }
      v57[2] = v60 + 1;
      v61 = &v57[2 * v60];
      v62 = v67;
      v61[4] = v67;
      v61[5] = a2;
      swift_endAccess();
      sub_232267314(v62, a2);
    }
  }
  dispatch_group_leave(a5);
}

uint64_t sub_2322A400C(uint64_t a1, void *a2, void *a3)
{
  void *v4;
  void (*v5)(void *, unint64_t, void *);
  id v6;
  unint64_t v7;
  unint64_t v8;
  id v9;

  v4 = a2;
  v5 = *(void (**)(void *, unint64_t, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    v6 = v4;
    v4 = (void *)sub_2322B8024();
    v8 = v7;

  }
  else
  {
    swift_retain();
    v8 = 0xF000000000000000;
  }
  v9 = a3;
  v5(v4, v8, a3);

  sub_232267314((uint64_t)v4, v8);
  return swift_release();
}

uint64_t sub_2322A40A0(void (*a1)(uint64_t, _QWORD))
{
  uint64_t v2;

  swift_beginAccess();
  v2 = swift_bridgeObjectRetain();
  a1(v2, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2322A4104(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  uint64_t v17;

  v7 = *v3;
  sub_2322A7438(0, &qword_255FAF230, (uint64_t)&qword_255FAF238, (void (*)(uint64_t, uint64_t, uint64_t (*)(void)))sub_2322A8354, (void (*)(void))sub_2322A74AC);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v17 - v11;
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a2;
  v13[3] = a3;
  v13[4] = a1;
  v13[5] = v7;
  sub_2322A7514(a2, a3);
  sub_2322A8354(0, &qword_255FAF238, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9E38]);
  sub_2322A74AC();
  v14 = a1;
  sub_2322B8BC4();
  sub_2322A7528();
  v15 = sub_2322B8C48();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v15;
}

uint64_t sub_2322A4240@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  _QWORD *v10;
  id v11;
  uint64_t result;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a1;
  v10[3] = a2;
  v10[4] = a3;
  v10[5] = a4;
  sub_2322A8354(0, &qword_255FAF238, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9E38]);
  swift_allocObject();
  sub_2322A7514(a1, a2);
  v11 = a3;
  result = sub_2322B8BB8();
  *a5 = result;
  return result;
}

void sub_2322A42EC(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3, unint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  void (*v22)(uint64_t *);
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  void *v32;
  id v33;
  double v34;
  CGFloat v35;
  double v36;
  CGFloat v37;
  double v38;
  CGFloat v39;
  double v40;
  CGFloat v41;
  double Width;
  id v43;
  double v44;
  CGFloat v45;
  double v46;
  CGFloat v47;
  double v48;
  CGFloat v49;
  double v50;
  CGFloat v51;
  double Height;
  id v53;
  double v54;
  double v55;
  id v56;
  void *v57;
  void *v58;
  id v59;
  _QWORD *v60;
  uint64_t v61;
  void *v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t aBlock;
  uint64_t v70;
  void (*v71)(uint64_t, void *, void *);
  void *v72;
  void (*v73)(void *, void *);
  _QWORD *v74;
  uint64_t v75;
  CGRect v76;
  CGRect v77;

  v68 = a6;
  v65 = a3;
  v66 = a5;
  v9 = sub_2322B88B8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2322B8918();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a1;
  *(_QWORD *)(v17 + 24) = a2;
  v67 = v17;
  v18 = (void *)objc_opt_self();
  swift_retain();
  v19 = objc_msgSend(v18, sel_sharedGenerator);
  if (a4 >> 60 == 15)
  {
    v64 = v14;
    v65 = v13;
    swift_release();
    sub_2322B88F4();
    v20 = sub_2322B890C();
    v21 = sub_2322B9014();
    v22 = a1;
    if (os_log_type_enabled(v20, v21))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v66 = v19;
      v25 = v24;
      aBlock = v24;
      *(_DWORD *)v23 = 136315138;
      v26 = sub_2322B9464();
      v75 = sub_232266EA0(v26, v27, &aBlock);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232241000, v20, v21, "[%s] Could not grab attachment or attachment data.", v23, 0xCu);
      swift_arrayDestroy();
      v28 = v25;
      v19 = v66;
      MEMORY[0x234901170](v28, -1, -1);
      MEMORY[0x234901170](v23, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v64 + 8))(v16, v65);
    aBlock = 0;
    LOBYTE(v70) = 0;
    v22(&aBlock);

  }
  else
  {
    v29 = v65;
    v30 = a4;
    sub_2322611D0(v65, a4);
    sub_2322611D0(v29, a4);
    v31 = objc_msgSend(v66, sel_contentType);
    sub_2322B8894();

    sub_2322B8888();
    v66 = v19;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v32 = (void *)objc_opt_self();
    v33 = objc_msgSend(v32, sel_mainScreen);
    objc_msgSend(v33, sel_bounds);
    v35 = v34;
    v37 = v36;
    v39 = v38;
    v41 = v40;

    v76.origin.x = v35;
    v76.origin.y = v37;
    v76.size.width = v39;
    v76.size.height = v41;
    Width = CGRectGetWidth(v76);
    v43 = objc_msgSend(v32, sel_mainScreen);
    objc_msgSend(v43, sel_bounds);
    v45 = v44;
    v47 = v46;
    v49 = v48;
    v51 = v50;

    v77.origin.x = v45;
    v77.origin.y = v47;
    v77.size.width = v49;
    v77.size.height = v51;
    Height = CGRectGetHeight(v77);
    v53 = objc_msgSend(v32, sel_mainScreen);
    objc_msgSend(v53, sel_scale);
    v55 = v54;

    v56 = objc_allocWithZone(MEMORY[0x24BDE5EF0]);
    v57 = (void *)sub_2322B8018();
    v58 = (void *)sub_2322B8DEC();
    swift_bridgeObjectRelease();
    v59 = objc_msgSend(v56, sel_initWithData_contentType_size_scale_representationTypes_, v57, v58, -1, Width, Height, v55);
    sub_232267314(v29, a4);

    v60 = (_QWORD *)swift_allocObject();
    v61 = v67;
    v60[2] = sub_2322A7600;
    v60[3] = v61;
    v60[4] = v68;
    v73 = sub_2322A7628;
    v74 = v60;
    aBlock = MEMORY[0x24BDAC760];
    v70 = 1107296256;
    v71 = sub_2322A0A40;
    v72 = &unk_250114C88;
    v62 = _Block_copy(&aBlock);
    swift_release();
    v63 = v66;
    objc_msgSend(v66, sel_generateBestRepresentationForRequest_completionHandler_, v59, v62);

    _Block_release(v62);
    sub_232267314(v29, v30);
  }
}

void sub_2322A47D8(void *a1, void *a2, void (*a3)(_QWORD, _QWORD), uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  id v35;
  _QWORD v36[2];
  uint64_t v37;
  void (*v38)(_QWORD, _QWORD);
  uint64_t v39;
  uint64_t v40;

  v8 = sub_2322B8918();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v36 - v13;
  if (a2)
  {
    v15 = a2;
    sub_2322B88F4();
    v16 = a2;
    v17 = a2;
    v18 = sub_2322B890C();
    v19 = sub_2322B8FFC();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = swift_slowAlloc();
      v21 = swift_slowAlloc();
      v37 = a4;
      v22 = v21;
      v40 = v21;
      *(_DWORD *)v20 = 136315394;
      v38 = a3;
      v23 = sub_2322B9464();
      v39 = sub_232266EA0(v23, v24, &v40);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2080;
      v39 = (uint64_t)a2;
      v25 = a2;
      sub_23224EC14(0, (unint64_t *)&qword_255FADBC0);
      v26 = sub_2322B8E40();
      v39 = sub_232266EA0(v26, v27, &v40);
      a3 = v38;
      sub_2322B923C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_232241000, v18, v19, "[%s] Error fetching data associated with attachment: %s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x234901170](v22, -1, -1);
      MEMORY[0x234901170](v20, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    a3(0, 0);

  }
  else
  {
    sub_2322B88F4();
    v28 = sub_2322B890C();
    v29 = sub_2322B9014();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v37 = a4;
      v32 = v31;
      v40 = v31;
      v38 = a3;
      *(_DWORD *)v30 = 136315138;
      v36[1] = v30 + 4;
      v33 = sub_2322B9464();
      v39 = sub_232266EA0(v33, v34, &v40);
      a3 = v38;
      sub_2322B923C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232241000, v28, v29, "[%s] Successfully retrieved Data associated with attachment", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x234901170](v32, -1, -1);
      MEMORY[0x234901170](v30, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    if (a1)
      v35 = objc_msgSend(a1, sel_UIImage);
    else
      v35 = 0;
    a3(v35, 0);

  }
}

uint64_t sub_2322A4BC4@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  _BOOL4 v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  void *v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t *v56;
  unint64_t v57;
  unint64_t v58;
  void *v59;
  uint64_t v60;
  _QWORD *v61;
  char *v62;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  _BOOL4 v67;
  void *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;

  v65 = a3;
  v66 = a4;
  v72 = a5;
  v7 = sub_2322B80B4();
  v70 = *(_QWORD *)(v7 - 8);
  v71 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v69 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23224BE78(0, &qword_255FABC68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v64 - v10;
  v12 = sub_2322B8084();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v74 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (int *)type metadata accessor for VisionPrescriptionInfoItem(0);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (uint64_t *)((char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v16);
  v75 = (uint64_t)&v64 - v19;
  v20 = a1;
  v21 = objc_msgSend(v20, sel_metadata);
  if (!v21)
  {
    v77 = 0u;
    v78 = 0u;
    goto LABEL_9;
  }
  v22 = v21;
  v23 = sub_2322B8DC8();

  v24 = sub_2322B8E1C();
  if (!*(_QWORD *)(v23 + 16) || (v26 = sub_2322B26FC(v24, v25), (v27 & 1) == 0))
  {
    v77 = 0u;
    v78 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_232250B14(*(_QWORD *)(v23 + 56) + 32 * v26, (uint64_t)&v77);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v78 + 1))
  {
LABEL_9:
    sub_232250A80((uint64_t)&v77);
    goto LABEL_10;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    v28 = sub_2322B93BC();
    swift_bridgeObjectRelease();
    v29 = v28 != 0;
    goto LABEL_11;
  }
LABEL_10:
  v29 = 1;
LABEL_11:
  v67 = v29;
  v73 = a2;
  v30 = (id)HKVisionPrescriptionTypeDetailedLongLocalizedString();
  v31 = sub_2322B8E1C();
  v33 = v32;

  v34 = objc_msgSend(v20, sel_dateIssued);
  sub_2322B806C();

  v35 = objc_msgSend(v20, sel_expirationDate);
  v68 = v20;
  if (v35)
  {
    v36 = v35;
    sub_2322B806C();

    v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v37(v11, 0, 1, v12);
  }
  else
  {
    v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v37(v11, 1, 1, v12);
  }
  type metadata accessor for VisionPrescriptionSourceCell(0);
  sub_232245044(&qword_255FAF1B8, type metadata accessor for VisionPrescriptionSourceCell, (uint64_t)&unk_2322C1D30);
  *v18 = sub_2322B8294();
  v18[1] = v38;
  sub_2322B80A8();
  v39 = (uint64_t)v18 + v15[8];
  v37((char *)v39, 1, 1, v12);
  v40 = v15[9];
  *((_BYTE *)v18 + v40) = 1;
  v41 = (uint64_t *)((char *)v18 + v15[6]);
  *v41 = v31;
  v41[1] = v33;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))((char *)v18 + v15[7], v74, v12);
  sub_2322A71D8((uint64_t)v11, v39);
  *((_BYTE *)v18 + v40) = v67;
  v42 = v75;
  sub_23229F6C0((uint64_t)v18, v75, type metadata accessor for VisionPrescriptionInfoItem);
  sub_2322A734C(0, &qword_255FAC200, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_2322C0E70;
  *(_QWORD *)(v43 + 56) = v15;
  *(_QWORD *)(v43 + 64) = sub_232245044(&qword_255FAF1E8, type metadata accessor for VisionPrescriptionInfoItem, (uint64_t)&unk_2322C1D98);
  v44 = sub_23224FA10((uint64_t *)(v43 + 32));
  sub_23229F634(v42, (uint64_t)v44, type metadata accessor for VisionPrescriptionInfoItem);
  v76 = v43;
  if (v73)
  {
    v46 = v65;
    v45 = v66;
    sub_232277978(v73, v65, v66);
    v47 = qword_255FAB900;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v48 = v45;
    if (v47 != -1)
      swift_once();
    v49 = sub_2322B7F58();
    v51 = v50;
    v52 = type metadata accessor for VisionPrescriptionViewAttachmentItem(0);
    v53 = swift_allocObject();
    type metadata accessor for VisionPrescriptionViewAttachmentCell(0);
    sub_232245044(&qword_255FACDB8, type metadata accessor for VisionPrescriptionViewAttachmentCell, (uint64_t)&unk_2322C1BC4);
    v54 = v48;
    *(_QWORD *)(v53 + 16) = sub_2322B8294();
    *(_QWORD *)(v53 + 24) = v55;
    sub_2322B80A8();
    v56 = (uint64_t *)(v53 + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_title);
    *v56 = v49;
    v56[1] = v51;
    swift_bridgeObjectRelease();
    *(_BYTE *)(v53 + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_hasPadding) = 1;
    *(_QWORD *)(v53 + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_attachments) = v73;
    *(_QWORD *)(v53 + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_data) = v46;
    *(_QWORD *)(v53 + OBJC_IVAR____TtC21VisionHealthAppPlugin36VisionPrescriptionViewAttachmentItem_previewImage) = v54;
    v58 = *(_QWORD *)(v43 + 16);
    v57 = *(_QWORD *)(v43 + 24);
    if (v58 >= v57 >> 1)
      v43 = (uint64_t)sub_2322AA744((_QWORD *)(v57 > 1), v58 + 1, 1, (_QWORD *)v43);
    *((_QWORD *)&v78 + 1) = v52;
    v79 = sub_232245044(&qword_255FACDD0, type metadata accessor for VisionPrescriptionViewAttachmentItem, (uint64_t)&unk_2322C1ADC);
    *(_QWORD *)&v77 = v53;
    *(_QWORD *)(v43 + 16) = v58 + 1;
    sub_232257144(&v77, v43 + 40 * v58 + 32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v76 = v43;
  }
  v59 = v68;
  v60 = sub_2322A6A70(v68);
  sub_2322A9538(v60);
  v61 = sub_2322A6CF8(v59);
  sub_2322A9538((uint64_t)v61);
  v62 = v69;
  sub_2322B80A8();
  sub_2322B8090();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v62, v71);
  sub_2322B83E4();

  return sub_232262F64(v75, type metadata accessor for VisionPrescriptionInfoItem);
}

void sub_2322A52D0()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_2322A52FC()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_2322A5368()
{

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2322A53F4()
{
  return type metadata accessor for VisionPrescriptionDataSource();
}

uint64_t storeEnumTagSinglePayload for VisionPrescriptionDataSource.ItemsLayout(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2322A5448 + 4 * byte_2322C3475[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2322A547C + 4 * asc_2322C3470[v4]))();
}

uint64_t sub_2322A547C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2322A5484(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2322A548CLL);
  return result;
}

uint64_t sub_2322A5498(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2322A54A0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2322A54A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2322A54AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VisionPrescriptionDataSource.ItemsLayout()
{
  return &type metadata for VisionPrescriptionDataSource.ItemsLayout;
}

void destroy for PrescriptionAndAttachmentData(uint64_t a1)
{

  if (*(_QWORD *)(a1 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
}

_QWORD *initializeWithCopy for PrescriptionAndAttachmentData(_QWORD *a1, uint64_t a2)
{
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;

  v4 = *(void **)a2;
  *a1 = *(_QWORD *)a2;
  v5 = a1 + 1;
  v7 = a2 + 8;
  v6 = *(_QWORD *)(a2 + 8);
  v8 = v4;
  if (v6)
  {
    v10 = *(_QWORD *)(a2 + 16);
    v9 = *(void **)(a2 + 24);
    a1[1] = v6;
    a1[2] = v10;
    a1[3] = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = v9;
  }
  else
  {
    *(_OWORD *)v5 = *(_OWORD *)v7;
    v5[2] = *(_QWORD *)(v7 + 16);
  }
  return a1;
}

uint64_t assignWithCopy for PrescriptionAndAttachmentData(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  _OWORD *v7;
  uint64_t v8;
  _OWORD *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  __int128 v16;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = (_OWORD *)(a1 + 8);
  v9 = (_OWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8))
  {
    if (v8)
    {
      *(_QWORD *)(a1 + 8) = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v10 = *(void **)(a2 + 24);
      v11 = *(void **)(a1 + 24);
      *(_QWORD *)(a1 + 24) = v10;
      v12 = v10;

    }
    else
    {
      sub_2322A568C(a1 + 8);
      v15 = *(_QWORD *)(a2 + 24);
      *v7 = *v9;
      *(_QWORD *)(a1 + 24) = v15;
    }
  }
  else if (v8)
  {
    *(_QWORD *)(a1 + 8) = v8;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    v13 = *(void **)(a2 + 24);
    *(_QWORD *)(a1 + 24) = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = v13;
  }
  else
  {
    v16 = *v9;
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *v7 = v16;
  }
  return a1;
}

uint64_t sub_2322A568C(uint64_t a1)
{
  destroy for PrescriptionAndAttachmentData.AttachmentDataImage(a1);
  return a1;
}

__n128 initializeWithTake for PrescriptionAndAttachmentData(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for PrescriptionAndAttachmentData(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;
  void *v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v5 = a2[1];
  if (!*(_QWORD *)(a1 + 8))
    goto LABEL_5;
  if (!v5)
  {
    sub_2322A568C(a1 + 8);
LABEL_5:
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_QWORD *)(a1 + 24) = a2[3];
    return a1;
  }
  *(_QWORD *)(a1 + 8) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = a2[2];
  swift_bridgeObjectRelease();
  v6 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = a2[3];

  return a1;
}

uint64_t getEnumTagSinglePayload for PrescriptionAndAttachmentData(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PrescriptionAndAttachmentData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PrescriptionAndAttachmentData()
{
  return &type metadata for PrescriptionAndAttachmentData;
}

void destroy for PrescriptionAndAttachmentData.AttachmentDataImage(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

_QWORD *_s21VisionHealthAppPlugin29PrescriptionAndAttachmentDataV19AttachmentDataImageVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = v4;
  return a1;
}

_QWORD *assignWithCopy for PrescriptionAndAttachmentData.AttachmentDataImage(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[2];
  v5 = (void *)a1[2];
  a1[2] = v4;
  v6 = v4;

  return a1;
}

__n128 initializeWithTake for PrescriptionAndAttachmentData.AttachmentDataImage(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for PrescriptionAndAttachmentData.AttachmentDataImage(uint64_t a1, uint64_t a2)
{
  void *v4;

  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

uint64_t getEnumTagSinglePayload for PrescriptionAndAttachmentData.AttachmentDataImage(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PrescriptionAndAttachmentData.AttachmentDataImage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PrescriptionAndAttachmentData.AttachmentDataImage()
{
  return &type metadata for PrescriptionAndAttachmentData.AttachmentDataImage;
}

unint64_t sub_2322A59DC()
{
  unint64_t result;

  result = qword_255FAF1B0;
  if (!qword_255FAF1B0)
  {
    result = MEMORY[0x2349010BC](&unk_2322C3514, &type metadata for VisionPrescriptionDataSource.ItemsLayout);
    atomic_store(result, (unint64_t *)&qword_255FAF1B0);
  }
  return result;
}

uint64_t sub_2322A5A24(uint64_t a1, int64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v5;
  int64_t v6;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v5 = *(_QWORD **)v3;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  if (v6 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)v3 = v5;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v10 > v5[3] >> 1)
  {
    if (v6 <= v10)
      v13 = v6 + v9;
    else
      v13 = v6;
    v5 = sub_2322AA744(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *(_QWORD *)v3 = v5;
  }
  v14 = (uint64_t)&v5[5 * a1 + 4];
  sub_23224EC14(0, (unint64_t *)&qword_255FABD20);
  swift_arrayDestroy();
  if (!v9)
    goto LABEL_20;
  v15 = v5[2];
  v16 = __OFSUB__(v15, a2);
  v17 = v15 - a2;
  if (v16)
    goto LABEL_26;
  if ((v17 & 0x8000000000000000) == 0)
  {
    v18 = (char *)(v14 + 40);
    v19 = (char *)&v5[5 * a2 + 4];
    if ((char *)(v14 + 40) != v19 || v18 >= &v19[40 * v17])
      memmove(v18, v19, 40 * v17);
    v20 = v5[2];
    v16 = __OFADD__(v20, v9);
    v21 = v20 + v9;
    if (!v16)
    {
      v5[2] = v21;
LABEL_20:
      sub_23225B0E8(a3, v14);
      return sub_2322A7300(a3);
    }
    goto LABEL_27;
  }
LABEL_28:
  result = sub_2322B93A4();
  __break(1u);
  return result;
}

uint64_t sub_2322A5BD0(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v3 = sub_2322B80B4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23225C1E0(a2, 1);
  v8 = v7;
  sub_23225C1E0(a2, 2);
  v10 = v9;
  if ((v8 & 0x100000000) != 0 && (v9 & 0x100000000) != 0)
    return MEMORY[0x24BEE4AF8];
  v12 = objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
  v13 = objc_msgSend(v12, sel_preferredContentSizeCategory);
  v14 = sub_2322B9104();

  sub_2322A734C(0, &qword_255FAC200, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v11 = swift_allocObject();
  if ((v14 & 1) != 0)
  {
    *(_OWORD *)(v11 + 16) = xmmword_2322C0E70;
    v15 = type metadata accessor for VisionPrescriptionRangeItem(0);
    v16 = swift_allocObject();
    type metadata accessor for VisionPrescriptionRangeCell(0);
    sub_232245044(&qword_255FAF1C8, type metadata accessor for VisionPrescriptionRangeCell, (uint64_t)&unk_2322C3170);
    *(_QWORD *)(v16 + 16) = sub_2322B8294();
    *(_QWORD *)(v16 + 24) = v17;
    sub_2322B80A8();
    v18 = v16 + OBJC_IVAR____TtC21VisionHealthAppPlugin27VisionPrescriptionRangeItem_leftValue;
    v19 = v16 + OBJC_IVAR____TtC21VisionHealthAppPlugin27VisionPrescriptionRangeItem_rightValue;
    *(_BYTE *)(v16 + OBJC_IVAR____TtC21VisionHealthAppPlugin27VisionPrescriptionRangeItem_prescriptionField) = a2;
    *(_DWORD *)v18 = v8;
    *(_BYTE *)(v18 + 4) = BYTE4(v8) & 1;
    *(_DWORD *)v19 = v10;
    *(_BYTE *)(v19 + 4) = BYTE4(v10) & 1;
    *(_QWORD *)(v11 + 56) = v15;
    *(_QWORD *)(v11 + 64) = sub_232245044(&qword_255FAF228, type metadata accessor for VisionPrescriptionRangeItem, (uint64_t)&unk_2322C3108);
    *(_QWORD *)(v11 + 32) = v16;
  }
  else
  {
    *(_OWORD *)(v11 + 16) = xmmword_2322C2050;
    v20 = type metadata accessor for VisionPrescriptionSingleEyeTitleCell();
    v21 = sub_232245044(&qword_255FAF1D8, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionSingleEyeTitleCell, (uint64_t)&unk_2322C1150);
    v60 = v20;
    v61 = v21;
    v22 = sub_2322B8294();
    v24 = v23;
    sub_2322B80A8();
    v25 = sub_2322B8090();
    v62 = v8;
    v27 = v26;
    v56 = *(void (**)(char *, uint64_t))(v4 + 8);
    v56(v6, v3);
    *(_QWORD *)(v11 + 56) = &type metadata for VisionPrescriptionSingleEyeTitleItem;
    v59 = sub_2322A7234();
    *(_QWORD *)(v11 + 64) = v59;
    v28 = (_QWORD *)swift_allocObject();
    *(_QWORD *)(v11 + 32) = v28;
    v28[2] = v22;
    v28[3] = v24;
    v28[4] = v25;
    v28[5] = v27;
    v28[6] = 2;
    type metadata accessor for VisionPrescriptionSingleRangeCell();
    v58 = sub_232245044(&qword_255FAF1D0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionSingleRangeCell, (uint64_t)&unk_2322C38F0);
    v29 = sub_2322B8294();
    v55 = v30;
    sub_2322B80A8();
    v31 = sub_2322B8090();
    v33 = v32;
    v34 = v56;
    v56(v6, v3);
    *(_QWORD *)(v11 + 96) = &type metadata for VisionPrescriptionSingleRangeItem;
    v57 = sub_2322A73B4();
    *(_QWORD *)(v11 + 104) = v57;
    v35 = swift_allocObject();
    *(_QWORD *)(v11 + 72) = v35;
    v36 = v55;
    *(_QWORD *)(v35 + 16) = v29;
    *(_QWORD *)(v35 + 24) = v36;
    *(_QWORD *)(v35 + 32) = v31;
    *(_QWORD *)(v35 + 40) = v33;
    *(_BYTE *)(v35 + 48) = a2;
    *(_DWORD *)(v35 + 52) = v10;
    *(_BYTE *)(v35 + 56) = BYTE4(v10) & 1;
    v37 = sub_2322B8294();
    v39 = v38;
    sub_2322B80A8();
    v40 = sub_2322B8090();
    v42 = v41;
    v34(v6, v3);
    v43 = v59;
    *(_QWORD *)(v11 + 136) = &type metadata for VisionPrescriptionSingleEyeTitleItem;
    *(_QWORD *)(v11 + 144) = v43;
    v44 = (_QWORD *)swift_allocObject();
    *(_QWORD *)(v11 + 112) = v44;
    v44[2] = v37;
    v44[3] = v39;
    v44[4] = v40;
    v44[5] = v42;
    v44[6] = 1;
    v45 = sub_2322B8294();
    v47 = v46;
    sub_2322B80A8();
    v48 = sub_2322B8090();
    v50 = v49;
    v34(v6, v3);
    v51 = v57;
    *(_QWORD *)(v11 + 176) = &type metadata for VisionPrescriptionSingleRangeItem;
    *(_QWORD *)(v11 + 184) = v51;
    v52 = swift_allocObject();
    *(_QWORD *)(v11 + 152) = v52;
    *(_QWORD *)(v52 + 16) = v45;
    *(_QWORD *)(v52 + 24) = v47;
    *(_QWORD *)(v52 + 32) = v48;
    *(_QWORD *)(v52 + 40) = v50;
    *(_BYTE *)(v52 + 48) = a2;
    v53 = BYTE4(v62);
    *(_DWORD *)(v52 + 52) = v62;
    *(_BYTE *)(v52 + 56) = v53 & 1;
  }
  return v11;
}

uint64_t sub_2322A6068(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  _QWORD *v73;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  void (*v86)(char *, uint64_t);

  v3 = sub_2322B80B4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23225C1E0(a2, 1);
  v8 = v7;
  sub_23225C1E0(a2, 2);
  v10 = v9;
  if ((v8 & 0x100000000) != 0 && (v9 & 0x100000000) != 0)
    return MEMORY[0x24BEE4AF8];
  v12 = objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
  v13 = objc_msgSend(v12, sel_preferredContentSizeCategory);
  v14 = sub_2322B9104();

  sub_2322A734C(0, &qword_255FAC200, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v11 = swift_allocObject();
  if ((v14 & 1) != 0)
  {
    *(_OWORD *)(v11 + 16) = xmmword_2322C0E70;
    v15 = sub_23224CB94(v8 | ((HIDWORD(v8) & 1) << 32), a2);
    v17 = v16;
    v18 = sub_23224CB94(v10 | ((HIDWORD(v10) & 1) << 32), a2);
    v20 = v19;
    v21 = sub_23224C808(a2);
    v23 = v22;
    v24 = type metadata accessor for VisionPrescriptionFieldItem(0);
    v25 = swift_allocObject();
    type metadata accessor for VisionPrescriptionFieldCell(0);
    sub_232245044((unint64_t *)&qword_255FABD28, type metadata accessor for VisionPrescriptionFieldCell, (uint64_t)&unk_2322C0DA8);
    *(_QWORD *)(v25 + 16) = sub_2322B8294();
    *(_QWORD *)(v25 + 24) = v26;
    sub_2322B80A8();
    v27 = (uint64_t *)(v25 + OBJC_IVAR____TtC21VisionHealthAppPlugin27VisionPrescriptionFieldItem_leftValueString);
    *v27 = 0;
    v27[1] = 0;
    v28 = (uint64_t *)(v25 + OBJC_IVAR____TtC21VisionHealthAppPlugin27VisionPrescriptionFieldItem_rightValueString);
    *v28 = 0;
    v28[1] = 0;
    v29 = (uint64_t *)(v25 + OBJC_IVAR____TtC21VisionHealthAppPlugin27VisionPrescriptionFieldItem_title);
    *v29 = v21;
    v29[1] = v23;
    *v27 = v15;
    v27[1] = v17;
    swift_bridgeObjectRelease();
    *v28 = v18;
    v28[1] = v20;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v11 + 56) = v24;
    *(_QWORD *)(v11 + 64) = sub_232245044(&qword_255FAF210, type metadata accessor for VisionPrescriptionFieldItem, (uint64_t)&unk_2322C0D40);
    *(_QWORD *)(v11 + 32) = v25;
  }
  else
  {
    *(_OWORD *)(v11 + 16) = xmmword_2322C2050;
    v30 = type metadata accessor for VisionPrescriptionSingleEyeTitleCell();
    v31 = sub_232245044(&qword_255FAF1D8, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionSingleEyeTitleCell, (uint64_t)&unk_2322C1150);
    v83 = v30;
    v84 = v31;
    v32 = sub_2322B8294();
    v76 = v3;
    v85 = v8;
    v33 = v32;
    v35 = v34;
    sub_2322B80A8();
    v36 = sub_2322B8090();
    v38 = v37;
    v86 = *(void (**)(char *, uint64_t))(v4 + 8);
    v86(v6, v3);
    *(_QWORD *)(v11 + 56) = &type metadata for VisionPrescriptionSingleEyeTitleItem;
    v82 = sub_2322A7234();
    *(_QWORD *)(v11 + 64) = v82;
    v39 = (_QWORD *)swift_allocObject();
    *(_QWORD *)(v11 + 32) = v39;
    v39[2] = v33;
    v39[3] = v35;
    v39[4] = v36;
    v39[5] = v38;
    v39[6] = 2;
    v40 = sub_23224C808(a2);
    v78 = v41;
    v79 = v40;
    v77 = sub_23224CB94(v10 | ((HIDWORD(v10) & 1) << 32), a2);
    v43 = v42;
    type metadata accessor for VisionPrescriptionSingleFieldCell();
    v81 = sub_232245044((unint64_t *)&qword_255FADF68, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionSingleFieldCell, (uint64_t)&unk_2322C29C0);
    v75 = sub_2322B8294();
    v45 = v44;
    swift_bridgeObjectRetain();
    sub_2322B80A8();
    v46 = sub_2322B8090();
    v48 = v47;
    v49 = v76;
    v50 = v86;
    v86(v6, v76);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v11 + 96) = &type metadata for VisionPrescriptionSingleFieldItem;
    v80 = sub_2322A7280();
    *(_QWORD *)(v11 + 104) = v80;
    v51 = (_QWORD *)swift_allocObject();
    *(_QWORD *)(v11 + 72) = v51;
    v51[2] = v75;
    v51[3] = v45;
    v51[4] = v46;
    v51[5] = v48;
    v52 = v78;
    v51[6] = v79;
    v51[7] = v52;
    v51[8] = v77;
    v51[9] = v43;
    v53 = sub_2322B8294();
    v55 = v54;
    sub_2322B80A8();
    v56 = sub_2322B8090();
    v58 = v57;
    v50(v6, v49);
    v59 = v82;
    *(_QWORD *)(v11 + 136) = &type metadata for VisionPrescriptionSingleEyeTitleItem;
    *(_QWORD *)(v11 + 144) = v59;
    v60 = (_QWORD *)swift_allocObject();
    *(_QWORD *)(v11 + 112) = v60;
    v60[2] = v53;
    v60[3] = v55;
    v60[4] = v56;
    v60[5] = v58;
    v60[6] = 1;
    v84 = sub_23224C808(a2);
    v62 = v61;
    v63 = sub_23224CB94(v85 | ((HIDWORD(v85) & 1) << 32), a2);
    v65 = v64;
    v66 = sub_2322B8294();
    v68 = v67;
    swift_bridgeObjectRetain();
    sub_2322B80A8();
    v69 = sub_2322B8090();
    v71 = v70;
    v86(v6, v49);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v72 = v80;
    *(_QWORD *)(v11 + 176) = &type metadata for VisionPrescriptionSingleFieldItem;
    *(_QWORD *)(v11 + 184) = v72;
    v73 = (_QWORD *)swift_allocObject();
    *(_QWORD *)(v11 + 152) = v73;
    v73[2] = v66;
    v73[3] = v68;
    v73[4] = v69;
    v73[5] = v71;
    v73[6] = v84;
    v73[7] = v62;
    v73[8] = v63;
    v73[9] = v65;
  }
  return v11;
}

uint64_t sub_2322A6610(void *a1, int a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  unint64_t v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  id v17;
  id v18;
  char v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  id v29;
  id v30;
  char v31;
  unint64_t v32;
  _OWORD *v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  id v44;
  _OWORD *v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  int v49;
  unint64_t v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  id v53;
  id v54;
  _OWORD v55[4];
  _OWORD v56[4];

  v4 = sub_2322B80B4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_opt_self();
  v8 = swift_dynamicCastObjCClass();
  if (!v8)
    return MEMORY[0x24BEE4AF8];
  v9 = (void *)v8;
  v10 = a1;
  v11 = objc_msgSend(v9, sel_leftEye);
  v12 = (unint64_t)objc_msgSend(v11, sel_prism);

  v13 = objc_msgSend(v9, sel_rightEye);
  v14 = (unint64_t)objc_msgSend(v13, sel_prism);

  if (!(v12 | v14))
  {

    return MEMORY[0x24BEE4AF8];
  }
  v17 = objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
  v18 = objc_msgSend(v17, sel_preferredContentSizeCategory);
  v19 = sub_2322B9104();

  sub_2322A734C(0, &qword_255FAC200, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  if ((v19 & 1) != 0)
  {
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_2322C0E70;
    v20 = (id)v12;
    v21 = (id)v14;
    v22 = sub_23224E968(a2 & 1, (void *)v12, (void *)v14);

    *(_QWORD *)(v15 + 56) = type metadata accessor for VisionPrescriptionFieldItem(0);
    *(_QWORD *)(v15 + 64) = sub_232245044(&qword_255FAF210, type metadata accessor for VisionPrescriptionFieldItem, (uint64_t)&unk_2322C0D40);
    *(_QWORD *)(v15 + 32) = v22;

  }
  else
  {
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_2322C2050;
    type metadata accessor for VisionPrescriptionSingleEyeTitleCell();
    v49 = a2;
    v52 = sub_232245044(&qword_255FAF1D8, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionSingleEyeTitleCell, (uint64_t)&unk_2322C1150);
    v23 = sub_2322B8294();
    v53 = v24;
    sub_2322B80A8();
    v25 = sub_2322B8090();
    v54 = v10;
    v27 = v26;
    v51 = *(void (**)(char *, uint64_t))(v5 + 8);
    v51(v7, v4);
    *(_QWORD *)(v15 + 56) = &type metadata for VisionPrescriptionSingleEyeTitleItem;
    v50 = sub_2322A7234();
    *(_QWORD *)(v15 + 64) = v50;
    v28 = (_QWORD *)swift_allocObject();
    *(_QWORD *)(v15 + 32) = v28;
    v29 = v53;
    v28[2] = v23;
    v28[3] = v29;
    v28[4] = v25;
    v28[5] = v27;
    v28[6] = 2;
    v30 = (id)v14;
    v53 = v30;
    v31 = v49 & 1;
    sub_23227FBE8(v49 & 1, (void *)v14, (uint64_t *)v55);

    *(_QWORD *)(v15 + 96) = &type metadata for VisionPrescriptionSingleFieldItem;
    v32 = sub_2322A7280();
    *(_QWORD *)(v15 + 104) = v32;
    v33 = (_OWORD *)swift_allocObject();
    *(_QWORD *)(v15 + 72) = v33;
    v34 = v55[1];
    v33[1] = v55[0];
    v33[2] = v34;
    v35 = v55[3];
    v33[3] = v55[2];
    v33[4] = v35;
    v36 = sub_2322B8294();
    v38 = v37;
    sub_2322B80A8();
    v39 = sub_2322B8090();
    v41 = v40;
    v51(v7, v4);
    v42 = v50;
    *(_QWORD *)(v15 + 136) = &type metadata for VisionPrescriptionSingleEyeTitleItem;
    *(_QWORD *)(v15 + 144) = v42;
    v43 = (_QWORD *)swift_allocObject();
    *(_QWORD *)(v15 + 112) = v43;
    v43[2] = v36;
    v43[3] = v38;
    v43[4] = v39;
    v43[5] = v41;
    v43[6] = 1;
    v44 = (id)v12;
    sub_23227FBE8(v31, (void *)v12, (uint64_t *)v56);

    *(_QWORD *)(v15 + 176) = &type metadata for VisionPrescriptionSingleFieldItem;
    *(_QWORD *)(v15 + 184) = v32;
    v45 = (_OWORD *)swift_allocObject();
    *(_QWORD *)(v15 + 152) = v45;
    v46 = v56[1];
    v45[1] = v56[0];
    v45[2] = v46;
    v47 = v56[3];
    v45[3] = v56[2];
    v45[4] = v47;

  }
  return v15;
}

uint64_t sub_2322A6A70(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[40];
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = sub_2322A5BD0((uint64_t)a1, 0);
  v3 = sub_2322A5BD0((uint64_t)a1, 1u);
  sub_2322A9538(v3);
  v4 = sub_2322A5BD0((uint64_t)a1, 2u);
  *(_QWORD *)&v23 = v2;
  sub_2322A9538(v4);
  v5 = sub_2322A6068((uint64_t)a1, 3);
  sub_2322A9538(v5);
  v6 = v2;
  v7 = objc_msgSend(a1, sel_prescriptionType);
  if (v7 == (id)2)
  {
    v8 = sub_2322A6068((uint64_t)a1, 13);
    v12 = sub_2322A6068((uint64_t)a1, 14);
  }
  else
  {
    if (v7 != (id)1)
    {
      v13 = MEMORY[0x24BEE4AF8];
      goto LABEL_7;
    }
    v8 = sub_2322A6068((uint64_t)a1, 12);
    v9 = sub_2322A6068((uint64_t)a1, 11);
    sub_2322A9538(v9);
    v10 = sub_2322A6068((uint64_t)a1, 4);
    sub_2322A9538(v10);
    v11 = sub_2322A6610(a1, 1);
    *(_QWORD *)&v23 = v8;
    sub_2322A9538(v11);
    v12 = sub_2322A6610(a1, 0);
  }
  sub_2322A9538(v12);
  v13 = v8;
LABEL_7:
  sub_2322A9538(v13);
  v14 = v6;
  v26 = v6;
  if (*(_QWORD *)(v6 + 16))
  {
    v15 = objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
    v16 = objc_msgSend(v15, sel_preferredContentSizeCategory);
    v17 = sub_2322B9104();

    if ((v17 & 1) != 0)
    {
      v18 = type metadata accessor for VisionPrescriptionColumnTitleItem(0);
      v19 = swift_allocObject();
      type metadata accessor for VisionPrescriptionColumnTitleCell(0);
      sub_232245044(&qword_255FAF1C0, type metadata accessor for VisionPrescriptionColumnTitleCell, (uint64_t)&unk_2322C1F38);
      *(_QWORD *)(v19 + 16) = sub_2322B8294();
      *(_QWORD *)(v19 + 24) = v20;
      sub_2322B80A8();
      v24 = v18;
      v25 = sub_232245044(&qword_255FAF1F8, type metadata accessor for VisionPrescriptionColumnTitleItem, (uint64_t)&unk_2322C1ED0);
      *(_QWORD *)&v23 = v19;
      sub_232257144(&v23, (uint64_t)v22);
      sub_2322A5A24(0, 0, (uint64_t)v22);
      return v26;
    }
  }
  return v14;
}

_QWORD *sub_2322A6CF8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  void *v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  void *v23;

  v2 = type metadata accessor for VisionPrescriptionAppClipCodeItem(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (uint64_t *)((char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (objc_msgSend(a1, sel_prescriptionType) != (id)1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  v5 = objc_msgSend(a1, sel_metadata);
  if (!v5)
  {
    v20 = 0u;
    v21 = 0u;
    goto LABEL_12;
  }
  v6 = v5;
  v7 = sub_2322B8DC8();

  v8 = sub_2322B8E1C();
  if (!*(_QWORD *)(v7 + 16) || (v10 = sub_2322B26FC(v8, v9), (v11 & 1) == 0))
  {
    v20 = 0u;
    v21 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  sub_232250B14(*(_QWORD *)(v7 + 56) + 32 * v10, (uint64_t)&v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v21 + 1))
  {
LABEL_12:
    sub_232250A80((uint64_t)&v20);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  sub_23224C618(0, (unint64_t *)&qword_255FABCC8);
  if ((swift_dynamicCast() & 1) == 0)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  v12 = v23;
  type metadata accessor for VisionPrescriptionAppClipCodeImageCell(0);
  sub_232245044(&qword_255FAF1E0, type metadata accessor for VisionPrescriptionAppClipCodeImageCell, (uint64_t)&unk_2322C36C0);
  v13 = v12;
  *v4 = sub_2322B8294();
  v4[1] = v14;
  sub_2322B80A8();
  *(uint64_t *)((char *)v4 + *(int *)(v2 + 24)) = (uint64_t)v13;
  v15 = sub_2322AA744(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v17 = v15[2];
  v16 = v15[3];
  if (v17 >= v16 >> 1)
    v15 = sub_2322AA744((_QWORD *)(v16 > 1), v17 + 1, 1, v15);
  *((_QWORD *)&v21 + 1) = v2;
  v22 = sub_232245044(&qword_255FAF1F0, type metadata accessor for VisionPrescriptionAppClipCodeItem, (uint64_t)&unk_2322C3730);
  v18 = sub_23224FA10((uint64_t *)&v20);
  sub_23229F634((uint64_t)v4, (uint64_t)v18, type metadata accessor for VisionPrescriptionAppClipCodeItem);
  v15[2] = v17 + 1;
  sub_232257144(&v20, (uint64_t)&v15[5 * v17 + 4]);
  sub_232262F64((uint64_t)v4, type metadata accessor for VisionPrescriptionAppClipCodeItem);

  return v15;
}

uint64_t sub_2322A6F94()
{
  sub_2322B881C();
  sub_2322B9038();
  type metadata accessor for VisionPrescriptionSourceCell(0);
  sub_232245044(&qword_255FAF1B8, type metadata accessor for VisionPrescriptionSourceCell, (uint64_t)&unk_2322C1D30);
  sub_2322B9020();
  type metadata accessor for VisionPrescriptionColumnTitleCell(0);
  sub_232245044(&qword_255FAF1C0, type metadata accessor for VisionPrescriptionColumnTitleCell, (uint64_t)&unk_2322C1F38);
  sub_2322B9020();
  type metadata accessor for VisionPrescriptionViewAttachmentCell(0);
  sub_232245044(&qword_255FACDB8, type metadata accessor for VisionPrescriptionViewAttachmentCell, (uint64_t)&unk_2322C1BC4);
  sub_2322B9020();
  type metadata accessor for VisionPrescriptionFieldCell(0);
  sub_232245044((unint64_t *)&qword_255FABD28, type metadata accessor for VisionPrescriptionFieldCell, (uint64_t)&unk_2322C0DA8);
  sub_2322B9020();
  type metadata accessor for VisionPrescriptionRangeCell(0);
  sub_232245044(&qword_255FAF1C8, type metadata accessor for VisionPrescriptionRangeCell, (uint64_t)&unk_2322C3170);
  sub_2322B9020();
  type metadata accessor for VisionPrescriptionSingleRangeCell();
  sub_232245044(&qword_255FAF1D0, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionSingleRangeCell, (uint64_t)&unk_2322C38F0);
  sub_2322B9020();
  type metadata accessor for VisionPrescriptionSingleEyeTitleCell();
  sub_232245044(&qword_255FAF1D8, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionSingleEyeTitleCell, (uint64_t)&unk_2322C1150);
  sub_2322B9020();
  type metadata accessor for VisionPrescriptionSingleFieldCell();
  sub_232245044((unint64_t *)&qword_255FADF68, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionSingleFieldCell, (uint64_t)&unk_2322C29C0);
  sub_2322B9020();
  type metadata accessor for VisionPrescriptionAppClipCodeImageCell(0);
  sub_232245044(&qword_255FAF1E0, type metadata accessor for VisionPrescriptionAppClipCodeImageCell, (uint64_t)&unk_2322C36C0);
  sub_2322B9020();
  sub_2322B8858();
  return sub_2322B9020();
}

uint64_t sub_2322A71D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23224BE78(0, &qword_255FABC68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_2322A7234()
{
  unint64_t result;

  result = qword_255FAF200;
  if (!qword_255FAF200)
  {
    result = MEMORY[0x2349010BC](&unk_2322C11A8, &type metadata for VisionPrescriptionSingleEyeTitleItem);
    atomic_store(result, (unint64_t *)&qword_255FAF200);
  }
  return result;
}

uint64_t sub_2322A7278()
{
  return sub_2322A7400();
}

unint64_t sub_2322A7280()
{
  unint64_t result;

  result = qword_255FAF208;
  if (!qword_255FAF208)
  {
    result = MEMORY[0x2349010BC](&unk_2322C2A14, &type metadata for VisionPrescriptionSingleFieldItem);
    atomic_store(result, (unint64_t *)&qword_255FAF208);
  }
  return result;
}

uint64_t sub_2322A72C4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2322A7300(uint64_t a1)
{
  uint64_t v2;

  sub_2322A734C(0, &qword_255FAF218, MEMORY[0x24BEE28D0]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2322A734C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_23224EC14(255, (unint64_t *)&qword_255FABD20);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_2322A73B4()
{
  unint64_t result;

  result = qword_255FAF220;
  if (!qword_255FAF220)
  {
    result = MEMORY[0x2349010BC](&unk_2322C3944, &type metadata for VisionPrescriptionSingleRangeItem);
    atomic_store(result, (unint64_t *)&qword_255FAF220);
  }
  return result;
}

uint64_t sub_2322A73F8()
{
  return sub_2322A7400();
}

uint64_t sub_2322A7400()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_2322A7438(uint64_t a1, unint64_t *a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t (*)(void)), void (*a5)(void))
{
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    a4(255, a3, MEMORY[0x24BDB9E38]);
    a5();
    v7 = sub_2322B8BD0();
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_2322A74AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FAF248;
  if (!qword_255FAF248)
  {
    sub_2322A8354(255, &qword_255FAF238, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9E38]);
    result = MEMORY[0x2349010BC](MEMORY[0x24BDB9E58], v1);
    atomic_store(result, (unint64_t *)&qword_255FAF248);
  }
  return result;
}

uint64_t sub_2322A7508@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_2322A4240(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

uint64_t sub_2322A7514(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_2322611D0(a1, a2);
  return a1;
}

unint64_t sub_2322A7528()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FAF250;
  if (!qword_255FAF250)
  {
    sub_2322A7438(255, &qword_255FAF230, (uint64_t)&qword_255FAF238, (void (*)(uint64_t, uint64_t, uint64_t (*)(void)))sub_2322A8354, (void (*)(void))sub_2322A74AC);
    result = MEMORY[0x2349010BC](MEMORY[0x24BDB9E90], v1);
    atomic_store(result, (unint64_t *)&qword_255FAF250);
  }
  return result;
}

uint64_t sub_2322A7594()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1 >> 60 != 15)
    sub_232261214(*(_QWORD *)(v0 + 16), v1);

  return swift_deallocObject();
}

void sub_2322A75D0(void (*a1)(uint64_t *), uint64_t a2)
{
  uint64_t v2;

  sub_2322A42EC(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_2322A75DC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2322A7604()
{
  swift_release();
  return swift_deallocObject();
}

void sub_2322A7628(void *a1, void *a2)
{
  uint64_t v2;

  sub_2322A47D8(a1, a2, *(void (**)(_QWORD, _QWORD))(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_2322A7634(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2322A7644()
{
  return swift_release();
}

void sub_2322A764C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAF258)
  {
    sub_2322A76C4();
    sub_232245044(&qword_255FAF278, (uint64_t (*)(uint64_t))sub_2322A76C4, MEMORY[0x24BDB9E58]);
    v0 = sub_2322B8BD0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAF258);
  }
}

void sub_2322A76C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAF260)
  {
    sub_232256E54(255, &qword_255FAF268, &qword_255FAF270, 0x24BDD3928, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v0 = sub_2322B8BAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAF260);
  }
}

uint64_t sub_2322A7748()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_2322A7774@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_2322A2CC8(*(void **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

void sub_2322A7780(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_2322A2D58(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

void sub_2322A778C(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_2322A2E54(a1, a2, *(void (**)(uint64_t, _QWORD))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

void sub_2322A7798()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAF288)
  {
    sub_232273BDC();
    sub_2322A7F8C(255, &qword_255FAF290, (void (*)(uint64_t))sub_2322A783C);
    sub_232245044(&qword_255FAD9E8, (uint64_t (*)(uint64_t))sub_232273BDC, MEMORY[0x24BDB9AF8]);
    v0 = sub_2322B8A74();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAF288);
  }
}

void sub_2322A783C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255FAF298)
  {
    sub_23224C618(255, (unint64_t *)&qword_255FAD9C0);
    sub_232256E54(255, &qword_255FAF268, &qword_255FAF270, 0x24BDD3928, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255FAF298);
  }
}

void sub_2322A78D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAF2A0)
  {
    sub_2322A7F8C(255, &qword_255FAF290, (void (*)(uint64_t))sub_2322A783C);
    sub_2322A7798();
    sub_2322A7994();
    sub_232245044(&qword_255FAF2B0, (uint64_t (*)(uint64_t))sub_2322A7798, MEMORY[0x24BDB94C8]);
    v0 = sub_2322B8A98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAF2A0);
  }
}

unint64_t sub_2322A7994()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FAF2A8;
  if (!qword_255FAF2A8)
  {
    sub_2322A7F8C(255, &qword_255FAF290, (void (*)(uint64_t))sub_2322A783C);
    result = MEMORY[0x2349010BC](MEMORY[0x24BDB9AF8], v1);
    atomic_store(result, (unint64_t *)&qword_255FAF2A8);
  }
  return result;
}

void sub_2322A79EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAF2B8)
  {
    sub_2322A78D8();
    sub_2322A7A90(255, &qword_255FAF2C0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_232245044(&qword_255FAF2D0, (uint64_t (*)(uint64_t))sub_2322A78D8, MEMORY[0x24BDB9610]);
    v0 = sub_2322B8A74();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAF2B8);
  }
}

void sub_2322A7A90(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_23224C6D0(255, &qword_255FAF2C8, (uint64_t)&type metadata for PrescriptionAndAttachmentData, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    v7 = a3(a1, v6, MEMORY[0x24BEE4078], MEMORY[0x24BEE40A8]);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_2322A7B10()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAF2D8)
  {
    sub_2322A7A90(255, &qword_255FAF2C0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_2322A79EC();
    sub_2322A7BCC();
    sub_232245044(&qword_255FAF2E8, (uint64_t (*)(uint64_t))sub_2322A79EC, MEMORY[0x24BDB94C8]);
    v0 = sub_2322B8A98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAF2D8);
  }
}

unint64_t sub_2322A7BCC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FAF2E0;
  if (!qword_255FAF2E0)
  {
    sub_2322A7A90(255, &qword_255FAF2C0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
    result = MEMORY[0x2349010BC](MEMORY[0x24BDB9AF8], v1);
    atomic_store(result, (unint64_t *)&qword_255FAF2E0);
  }
  return result;
}

void sub_2322A7C24()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAF2F0)
  {
    sub_2322A7B10();
    sub_23224C618(255, (unint64_t *)&qword_255FACCA0);
    sub_232245044(&qword_255FAF2F8, (uint64_t (*)(uint64_t))sub_2322A7B10, MEMORY[0x24BDB9610]);
    sub_232258C54();
    v0 = sub_2322B8B10();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAF2F0);
  }
}

uint64_t sub_2322A7CD8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2322A7CFC()
{
  return sub_2322A8C78((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_2322A7D0C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_2322A173C(a1, *(void **)(v2 + 24), a2);
}

uint64_t sub_2322A7D14()
{
  return sub_2322A8C78((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_2322A7D24(void *a1, unint64_t a2)
{
  uint64_t v2;

  return sub_2322A1B0C(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_2322A7D30@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 16))(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_2322A7D60()
{
  return swift_deallocObject();
}

uint64_t sub_2322A7D70()
{
  return sub_2322A2604();
}

uint64_t sub_2322A7D78(uint64_t a1)
{
  return sub_2322A2790(a1);
}

void sub_2322A7D80(uint64_t a1)
{
  sub_23224BE78(a1, &qword_255FAF308, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

void sub_2322A7D9C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  if (!qword_255FAF328)
  {
    sub_2322A7E94();
    sub_2322A7F08();
    sub_2322A7F8C(255, &qword_255FAF340, (void (*)(uint64_t))sub_2322A7FE8);
    v0 = MEMORY[0x24BDB9AF8];
    sub_232245044(&qword_255FAF358, (uint64_t (*)(uint64_t))sub_2322A7E94, MEMORY[0x24BDB9AF8]);
    sub_232245044(&qword_255FAF360, (uint64_t (*)(uint64_t))sub_2322A7F08, v0);
    sub_2322A808C();
    v1 = sub_2322B8A5C();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_255FAF328);
  }
}

void sub_2322A7E94()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAF330)
  {
    sub_23224C618(255, (unint64_t *)&qword_255FAD9C0);
    v0 = sub_2322B8B28();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAF330);
  }
}

void sub_2322A7F08()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAF338)
  {
    sub_232256E54(255, &qword_255FAF268, &qword_255FAF270, 0x24BDD3928, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v0 = sub_2322B8B28();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAF338);
  }
}

void sub_2322A7F8C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_2322B8B28();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_2322A7FE8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255FAF348)
  {
    sub_23224C6D0(255, &qword_255FAF350, MEMORY[0x24BDCDDE8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    sub_232256E54(255, &qword_255FAF240, &qword_255FACDC8, 0x24BEBD640, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255FAF348);
  }
}

unint64_t sub_2322A808C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FAF368;
  if (!qword_255FAF368)
  {
    sub_2322A7F8C(255, &qword_255FAF340, (void (*)(uint64_t))sub_2322A7FE8);
    result = MEMORY[0x2349010BC](MEMORY[0x24BDB9AF8], v1);
    atomic_store(result, (unint64_t *)&qword_255FAF368);
  }
  return result;
}

void sub_2322A80E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAF370)
  {
    sub_2322A7D9C();
    sub_23224C6D0(255, &qword_255FAF2C8, (uint64_t)&type metadata for PrescriptionAndAttachmentData, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    sub_232245044(&qword_255FAF378, (uint64_t (*)(uint64_t))sub_2322A7D9C, MEMORY[0x24BDB9470]);
    v0 = sub_2322B8ABC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAF370);
  }
}

void sub_2322A8190()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAF380)
  {
    sub_2322A8244();
    sub_2322A87AC(255, &qword_255FAF3B0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_232245044(&qword_255FAF3B8, (uint64_t (*)(uint64_t))sub_2322A8244, MEMORY[0x24BDB9450]);
    sub_2322A849C();
    v0 = sub_2322B8AEC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAF380);
  }
}

void sub_2322A8244()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAF388)
  {
    sub_2322A82FC(255, &qword_255FAF390, &qword_255FAF350, MEMORY[0x24BDCDDE8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    sub_2322A8354(255, &qword_255FAF398, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_2322A83DC();
    sub_2322A8444();
    v0 = sub_2322B8A44();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAF388);
  }
}

void sub_2322A82FC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    sub_23224C6D0(255, a3, a4, a5);
    v6 = sub_2322B8B7C();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_2322A8354(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_232256E54(255, &qword_255FAF240, &qword_255FACDC8, 0x24BEBD640, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v7 = a3(a1, v6, MEMORY[0x24BEE4078], MEMORY[0x24BEE40A8]);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_2322A83DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FAF3A0;
  if (!qword_255FAF3A0)
  {
    sub_2322A82FC(255, &qword_255FAF390, &qword_255FAF350, MEMORY[0x24BDCDDE8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2349010BC](MEMORY[0x24BDB9DF8], v1);
    atomic_store(result, (unint64_t *)&qword_255FAF3A0);
  }
  return result;
}

unint64_t sub_2322A8444()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FAF3A8;
  if (!qword_255FAF3A8)
  {
    sub_2322A8354(255, &qword_255FAF398, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
    result = MEMORY[0x2349010BC](MEMORY[0x24BDB9AF8], v1);
    atomic_store(result, (unint64_t *)&qword_255FAF3A8);
  }
  return result;
}

unint64_t sub_2322A849C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FAF3C0;
  if (!qword_255FAF3C0)
  {
    sub_2322A87AC(255, &qword_255FAF3B0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
    result = MEMORY[0x2349010BC](MEMORY[0x24BDB9AF8], v1);
    atomic_store(result, (unint64_t *)&qword_255FAF3C0);
  }
  return result;
}

void sub_2322A84F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAF3C8)
  {
    sub_2322A85BC();
    sub_2322A8190();
    sub_232245044(&qword_255FAF3E8, (uint64_t (*)(uint64_t))sub_2322A85BC, MEMORY[0x24BDB9970]);
    sub_232245044(&qword_255FAF3F0, (uint64_t (*)(uint64_t))sub_2322A8190, MEMORY[0x24BDB98F0]);
    v0 = sub_2322B8A80();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAF3C8);
  }
}

void sub_2322A85BC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAF3D0)
  {
    sub_2322A8650(255);
    sub_232245044(&qword_255FAF3E0, (uint64_t (*)(uint64_t))sub_2322A8650, MEMORY[0x24BEE12C8]);
    v0 = sub_2322B8AF8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAF3D0);
  }
}

void sub_2322A8650(uint64_t a1)
{
  sub_23224BE78(a1, &qword_255FAF3D8, (uint64_t (*)(uint64_t))sub_2322A7FE8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
}

uint64_t sub_2322A866C()
{
  return sub_2322A8C78((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_2322A867C(_QWORD *a1)
{
  uint64_t v1;

  return sub_2322A241C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

unint64_t sub_2322A8684()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FAF410;
  if (!qword_255FAF410)
  {
    sub_232256E54(255, &qword_255FAF320, (unint64_t *)&qword_255FAD9C0, 0x24BDD4100, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
    result = MEMORY[0x2349010BC](MEMORY[0x24BDB9DF8], v1);
    atomic_store(result, (unint64_t *)&qword_255FAF410);
  }
  return result;
}

unint64_t sub_2322A86EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FAF418;
  if (!qword_255FAF418)
  {
    sub_2322A8CBC(255, &qword_255FAF318, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
    result = MEMORY[0x2349010BC](MEMORY[0x24BDB9DF8], v1);
    atomic_store(result, (unint64_t *)&qword_255FAF418);
  }
  return result;
}

unint64_t sub_2322A8744()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FAF428;
  if (!qword_255FAF428)
  {
    sub_2322A82FC(255, &qword_255FAF3F8, &qword_255FAF2C8, (uint64_t)&type metadata for PrescriptionAndAttachmentData, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    result = MEMORY[0x2349010BC](MEMORY[0x24BDB9DF8], v1);
    atomic_store(result, (unint64_t *)&qword_255FAF428);
  }
  return result;
}

void sub_2322A87AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_23224C6D0(255, &qword_255FAF350, MEMORY[0x24BDCDDE8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    v7 = a3(a1, v6, MEMORY[0x24BEE4078], MEMORY[0x24BEE40A8]);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_2322A882C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FAF440;
  if (!qword_255FAF440)
  {
    sub_2322A87AC(255, &qword_255FAF438, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9E38]);
    result = MEMORY[0x2349010BC](MEMORY[0x24BDB9E58], v1);
    atomic_store(result, (unint64_t *)&qword_255FAF440);
  }
  return result;
}

uint64_t sub_2322A8884()
{
  return sub_2322A8C78((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_2322A8894@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_2322A3428(*(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

unint64_t sub_2322A88A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FAF448;
  if (!qword_255FAF448)
  {
    sub_2322A7438(255, &qword_255FAF430, (uint64_t)&qword_255FAF438, (void (*)(uint64_t, uint64_t, uint64_t (*)(void)))sub_2322A87AC, (void (*)(void))sub_2322A882C);
    result = MEMORY[0x2349010BC](MEMORY[0x24BDB9E90], v1);
    atomic_store(result, (unint64_t *)&qword_255FAF448);
  }
  return result;
}

uint64_t sub_2322A8908()
{
  return sub_2322A8C78((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_2322A8918(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2322A34CC(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_2322A8924(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t *);
  uint64_t v5;
  char v6;

  v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  v5 = a1;
  v6 = a2 & 1;
  return v3(&v5);
}

uint64_t sub_2322A895C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2322A8980()
{
  return sub_2322A8C78((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_2322A8990(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v3;

  sub_2322A3A18(a1, a2, a3, *(_QWORD ***)(v3 + 16), *(NSObject **)(v3 + 24), *(_QWORD *)(v3 + 32));
}

void sub_2322A899C(uint64_t a1)
{
  sub_23224BE78(a1, &qword_255FAF458, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
}

uint64_t sub_2322A89B8()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2322A89E4()
{
  uint64_t v0;

  return sub_2322A40A0(*(void (**)(uint64_t, _QWORD))(v0 + 16));
}

void sub_2322A89F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAF468)
  {
    sub_232256E54(255, &qword_255FAF320, (unint64_t *)&qword_255FAD9C0, 0x24BDD4100, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
    sub_2322A7F08();
    sub_2322A8684();
    sub_232245044(&qword_255FAF360, (uint64_t (*)(uint64_t))sub_2322A7F08, MEMORY[0x24BDB9AF8]);
    v0 = sub_2322B8A44();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAF468);
  }
}

void sub_2322A8ABC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAF470)
  {
    sub_2322A8B84();
    sub_2322A7F08();
    sub_232245044(&qword_255FAF490, (uint64_t (*)(uint64_t))sub_2322A8B84, MEMORY[0x24BDB9970]);
    sub_232245044(&qword_255FAF360, (uint64_t (*)(uint64_t))sub_2322A7F08, MEMORY[0x24BDB9AF8]);
    v0 = sub_2322B8A80();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAF470);
  }
}

void sub_2322A8B84()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAF478)
  {
    sub_2322A8CBC(255, &qword_255FAF480, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_2322A8C10();
    v0 = sub_2322B8AF8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAF478);
  }
}

unint64_t sub_2322A8C10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FAF488;
  if (!qword_255FAF488)
  {
    sub_2322A8CBC(255, &qword_255FAF480, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2349010BC](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_255FAF488);
  }
  return result;
}

uint64_t sub_2322A8C68()
{
  return sub_2322A8C78((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_2322A8C78(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));

  return swift_deallocObject();
}

uint64_t sub_2322A8CB4(unint64_t *a1)
{
  uint64_t v1;

  return sub_2322A10D0(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_2322A8CBC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_232256E54(255, &qword_255FAF268, &qword_255FAF270, 0x24BDD3928, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_2322A8D34()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAF4C0)
  {
    sub_23224C6D0(255, &qword_255FAF4B8, (uint64_t)&type metadata for VisionPrescriptionDataSource.ItemsLayout, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9DE0]);
    sub_2322A8DF8();
    sub_2322A8E78();
    sub_232245044(&qword_255FAF4D8, (uint64_t (*)(uint64_t))sub_2322A8DF8, MEMORY[0x24BDB96C0]);
    v0 = sub_2322B8A80();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAF4C0);
  }
}

void sub_2322A8DF8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAF4C8)
  {
    sub_2322B90EC();
    sub_232245044(&qword_255FAD370, (uint64_t (*)(uint64_t))MEMORY[0x24BDD0078], MEMORY[0x24BDD0070]);
    v0 = sub_2322B8ABC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAF4C8);
  }
}

unint64_t sub_2322A8E78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FAF4D0;
  if (!qword_255FAF4D0)
  {
    sub_23224C6D0(255, &qword_255FAF4B8, (uint64_t)&type metadata for VisionPrescriptionDataSource.ItemsLayout, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9DE0]);
    result = MEMORY[0x2349010BC](MEMORY[0x24BDB9DF8], v1);
    atomic_store(result, (unint64_t *)&qword_255FAF4D0);
  }
  return result;
}

void sub_2322A8ED8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAF4E0)
  {
    sub_2322A8D34();
    sub_232245044(&qword_255FAF4E8, (uint64_t (*)(uint64_t))sub_2322A8D34, MEMORY[0x24BDB9530]);
    v0 = sub_2322B8AB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAF4E0);
  }
}

uint64_t type metadata accessor for VisionPrescriptionManualDataEntryDataSource()
{
  uint64_t result;

  result = qword_255FAF548;
  if (!qword_255FAF548)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2322A8FB8()
{
  return swift_initClassMetadata2();
}

BOOL sub_2322A9040(_BOOL8 result, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t i;
  uint64_t v5;
  int v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v3 = result;
  if (*(_BYTE *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 33; ; ++i)
  {
    v5 = i - 31;
    if (__OFADD__(i - 32, 1))
      break;
    v6 = *(unsigned __int8 *)(a2 + i);
    result = v6 == v3;
    if (v6 == v3 || v5 == v2)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_2322A90A0(uint64_t a1)
{
  char **v1;
  size_t v2;
  char *v3;
  int64_t v4;
  int64_t v5;
  char *isUniquelyReferenced_nonNull_native;
  size_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  BOOL v13;
  size_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *((_QWORD *)*v1 + 2);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= *((_QWORD *)v3 + 3) >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_2322AA508(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = *((_QWORD *)v3 + 2);
  if ((*((_QWORD *)v3 + 3) >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = &v3[v9 + 32];
  if (a1 + 32 < (unint64_t)&v10[v8] && (unint64_t)v10 < a1 + 32 + v8)
    goto LABEL_24;
  memcpy(v10, (const void *)(a1 + 32), v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = *((_QWORD *)v3 + 2);
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    *((_QWORD *)v3 + 2) = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_2322B93A4();
  __break(1u);
  return result;
}

uint64_t sub_2322A91E8(unint64_t a1)
{
  return sub_2322A9200(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_2322AAD84);
}

uint64_t sub_2322A91F4(unint64_t a1)
{
  return sub_2322A9200(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_2322AAF90);
}

uint64_t sub_2322A9200(unint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, unint64_t))
{
  unint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_2322B9368();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_2322B9368();
    swift_bridgeObjectRelease();
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_23;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if (v6 >> 62)
    goto LABEL_25;
  v11 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    swift_bridgeObjectRetain();
    v6 = MEMORY[0x234900A08](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v11 = sub_2322B9368();
    swift_bridgeObjectRelease();
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_2322B8F3C();
  }
  __break(1u);
  return result;
}

uint64_t sub_2322A93BC(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_2322AA620(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[2 * v9 + 4];
  if (a1 + 32 < v10 + 16 * v8 && v10 < a1 + 32 + 16 * v8)
    goto LABEL_24;
  sub_2322582C8(0, (unint64_t *)&qword_255FADA30);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_2322B93A4();
  __break(1u);
  return result;
}

uint64_t sub_2322A9538(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_2322AA744(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2)
    goto LABEL_24;
  sub_2322582C8(0, (unint64_t *)&qword_255FABD20);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_2322B93A4();
  __break(1u);
  return result;
}

uint64_t sub_2322A96B0(char a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t *v34;
  id v35;

  v4 = v3;
  *(_QWORD *)(v3 + qword_255FAF540) = 0;
  *(_QWORD *)(v3 + qword_255FAF4F8) = a2;
  *(_QWORD *)(v3 + qword_255FAF500) = a3;
  v8 = a1 != 2;
  v9 = *(_QWORD *)(a3 + 48);
  swift_retain();
  v35 = a2;
  swift_retain();
  swift_retain();
  v10 = sub_232261930(v35, v8, v9);
  v12 = v11;
  swift_release();
  v34 = (uint64_t *)(v4 + qword_255FAF508);
  *v34 = v10;
  v34[1] = v12;
  v13 = *(_QWORD *)(a3 + 48);
  type metadata accessor for VisionPrescriptionManualDataEntryPrescriptionMetadataDataSource();
  swift_allocObject();
  swift_retain();
  v14 = sub_23227B034(a1, v13);
  swift_release();
  v33 = qword_255FAF510;
  *(_QWORD *)(v4 + qword_255FAF510) = v14;
  v15 = *(_QWORD *)(a3 + 48);
  type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldDataSource();
  swift_allocObject();
  swift_retain();
  v16 = sub_232251AC0(0, v8, v15);
  v17 = qword_255FAF518;
  *(_QWORD *)(v4 + qword_255FAF518) = v16;
  v18 = *(_QWORD *)(a3 + 48);
  swift_allocObject();
  swift_retain();
  v19 = sub_232251AC0(1, v8, v18);
  v20 = qword_255FAF520;
  *(_QWORD *)(v4 + qword_255FAF520) = v19;
  v21 = *(_QWORD *)(a3 + 48);
  swift_allocObject();
  swift_retain();
  v22 = sub_232251AC0(2, v8, v21);
  v23 = qword_255FAF528;
  *(_QWORD *)(v4 + qword_255FAF528) = v22;
  v24 = *(_QWORD *)(a3 + 48);
  swift_allocObject();
  swift_retain();
  v25 = sub_232251AC0(3, v8, v24);
  v26 = qword_255FAF530;
  *(_QWORD *)(v4 + qword_255FAF530) = v25;
  v27 = sub_2322AB874(v8, (uint64_t)&unk_250111D00, a3);
  *(_QWORD *)(v4 + qword_255FAF538) = v27;
  sub_23226D960(0, (unint64_t *)&qword_255FAC3C8, (unint64_t *)&qword_255FADA30);
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_2322C2280;
  v29 = MEMORY[0x24BE43520];
  *(_QWORD *)(v28 + 32) = *(_QWORD *)(v4 + v33);
  *(_QWORD *)(v28 + 40) = v29;
  *(_OWORD *)(v28 + 48) = *(_OWORD *)v34;
  *(_QWORD *)(v28 + 64) = *(_QWORD *)(v4 + v17);
  *(_QWORD *)(v28 + 72) = v29;
  *(_QWORD *)(v28 + 80) = *(_QWORD *)(v4 + v20);
  *(_QWORD *)(v28 + 88) = v29;
  *(_QWORD *)(v28 + 96) = *(_QWORD *)(v4 + v23);
  *(_QWORD *)(v28 + 104) = v29;
  *(_QWORD *)(v28 + 112) = *(_QWORD *)(v4 + v26);
  *(_QWORD *)(v28 + 120) = v29;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  v30 = sub_232254568(v27);
  swift_bridgeObjectRelease();
  sub_2322A93BC(v30);
  v31 = sub_2322B8654();
  swift_retain();
  sub_2322A9A24();
  swift_release();

  swift_release();
  return v31;
}

uint64_t sub_2322A9A24()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = v0;
  v2 = *v0;
  v3 = sub_2322B8918();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322B88D0();
  v7 = sub_2322B890C();
  v8 = sub_2322B9014();
  if (os_log_type_enabled(v7, v8))
  {
    v19 = v3;
    v9 = swift_slowAlloc();
    v20 = v2;
    v10 = (uint8_t *)v9;
    v11 = swift_slowAlloc();
    v22 = v11;
    *(_DWORD *)v10 = 136315138;
    v12 = sub_2322B9464();
    v21 = sub_232266EA0(v12, v13, &v22);
    sub_2322B923C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_232241000, v7, v8, "[%s] Creating a stream to observe selected prescription type changes and update the visibility of addtional fields data sources", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234901170](v11, -1, -1);
    v14 = v10;
    v2 = v20;
    MEMORY[0x234901170](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v19);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  v22 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)((char *)v1 + qword_255FAF500) + 48) + 16);
  *(_QWORD *)(swift_allocObject() + 16) = v2;
  v15 = swift_allocObject();
  swift_weakInit();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = v2;
  sub_23227B810();
  sub_232245044((unint64_t *)&qword_255FADDA8, (uint64_t (*)(uint64_t))sub_23227B810, MEMORY[0x24BDB9D10]);
  swift_retain();
  v17 = sub_2322B8C78();
  swift_release();
  swift_release();
  swift_release();
  *(_QWORD *)((char *)v1 + qword_255FAF540) = v17;
  return swift_release();
}

void sub_2322A9CD4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_2322A9D00()
{
  uint64_t v0;

  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_2322A9DAC()
{
  uint64_t v0;

  v0 = sub_2322B8648();

  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_2322A9E70()
{
  sub_2322A9DAC();
  return swift_deallocClassInstance();
}

uint64_t sub_2322A9E8C()
{
  return type metadata accessor for VisionPrescriptionManualDataEntryDataSource();
}

uint64_t sub_2322A9E94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v0 = sub_2322B8918();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322B88D0();
  v4 = sub_2322B890C();
  v5 = sub_2322B9014();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v12 = v7;
    *(_DWORD *)v6 = 136315138;
    v8 = sub_2322B9464();
    v11 = sub_232266EA0(v8, v9, &v12);
    sub_2322B923C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_232241000, v4, v5, "[%s] prescriptionTypeVisibilityStream completed", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x234901170](v7, -1, -1);
    MEMORY[0x234901170](v6, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_2322AA020(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t result;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v6 = *(_QWORD *)(result + qword_255FAF538);
    if (v6 >> 62)
    {
      swift_bridgeObjectRetain_n();
      result = sub_2322B9368();
      v7 = result;
      if (result)
        goto LABEL_4;
    }
    else
    {
      v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain_n();
      if (v7)
      {
LABEL_4:
        if (v7 < 1)
        {
          __break(1u);
          return result;
        }
        v8 = 0;
        do
        {
          if ((v6 & 0xC000000000000001) != 0)
          {
            v9 = MEMORY[0x2349009FC](v8, v6);
          }
          else
          {
            v9 = *(_QWORD *)(v6 + 8 * v8 + 32);
            swift_retain();
          }
          ++v8;
          v10 = v9;
          sub_2322AA164((uint64_t)&v10, v4, a3);
          swift_release();
        }
        while (v7 != v8);
      }
    }
    swift_release();
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t sub_2322AA164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  BOOL v19;
  unsigned int *v20;
  NSObject *v21;
  os_log_type_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _BYTE v34[12];
  int v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v37 = a3;
  v4 = sub_2322B8918();
  v40 = *(_QWORD *)(v4 - 8);
  v41 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v34[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2322AB410(0, &qword_255FAF598, MEMORY[0x24BE42C68]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v38 = &v34[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v10);
  v13 = &v34[-v12];
  v14 = sub_2322B8330();
  v15 = v14;
  v16 = qword_255FAC170;
  v17 = (void *)MEMORY[0x24BEE4AF8];
  if (a2 == 2)
    v17 = &unk_250111E30;
  if (a2 == 1)
    v18 = &unk_250111E08;
  else
    v18 = v17;
  v19 = sub_2322A9040(*(unsigned __int8 *)(v14 + qword_255FAC170), (uint64_t)v18);
  swift_bridgeObjectRelease();
  v20 = (unsigned int *)MEMORY[0x24BE42C60];
  if (!v19)
    v20 = (unsigned int *)MEMORY[0x24BE42C58];
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v9 + 104))(v13, *v20, v8);
  sub_2322B8348();
  sub_2322B88D0();
  swift_retain_n();
  swift_retain_n();
  v39 = v6;
  v21 = sub_2322B890C();
  v22 = sub_2322B9014();
  v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    v24 = swift_slowAlloc();
    v35 = v23;
    v25 = v24;
    v36 = swift_slowAlloc();
    v43 = v36;
    *(_DWORD *)v25 = 136315650;
    v26 = sub_2322B9464();
    v42 = sub_232266EA0(v26, v27, &v43);
    sub_2322B923C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2080;
    LOBYTE(v42) = *(_BYTE *)(v15 + v16);
    v28 = sub_2322B8E34();
    v42 = sub_232266EA0(v28, v29, &v43);
    sub_2322B923C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 22) = 2080;
    sub_2322B833C();
    v30 = sub_2322B8E34();
    v42 = sub_232266EA0(v30, v31, &v43);
    sub_2322B923C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_232241000, v21, (os_log_type_t)v35, "[%s] Setting the visibility of %s data source to %s", (uint8_t *)v25, 0x20u);
    v32 = v36;
    swift_arrayDestroy();
    MEMORY[0x234901170](v32, -1, -1);
    MEMORY[0x234901170](v25, -1, -1);
    swift_release();

  }
  else
  {

    swift_release_n();
    swift_release_n();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v40 + 8))(v39, v41);
}

char *sub_2322AA508(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      sub_2322AB794(0, &qword_255FAF5B0);
      v10 = (char *)swift_allocObject();
      v11 = j__malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v12 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2322AB1AC(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2322AA60C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2322AA890(a1, a2, a3, a4, &qword_255FAC410, (uint64_t (*)(uint64_t))MEMORY[0x24BE438C0]);
}

_QWORD *sub_2322AA620(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_23226D960(0, (unint64_t *)&qword_255FAC3C8, (unint64_t *)&qword_255FADA30);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2322AB2F8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2322AA744(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_23226D960(0, &qword_255FAC200, (unint64_t *)&qword_255FABD20);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2322AB470(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2322AA87C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2322AA890(a1, a2, a3, a4, (unint64_t *)&unk_255FADB00, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368]);
}

uint64_t sub_2322AA890(char a1, int64_t a2, char a3, unint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  sub_23224BE78(0, a5, a6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = j__malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_2322B9344();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_2322AB58C(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_2322AAAAC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_2322AB794(0, &qword_255FAF5A8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2322AB6A4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_2322AABC4(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_2322AAC9C(v6, a2, a3);
  return sub_2322AAC18;
}

uint64_t (*sub_2322AAC1C(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_2322AAD10(v6, a2, a3);
  return sub_2322AAC18;
}

void sub_2322AAC70(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_2322AAC9C(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x2349009FC](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_2322AAD08;
  }
  __break(1u);
  return result;
}

void sub_2322AAD08(id *a1)
{

}

uint64_t (*sub_2322AAD10(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x2349009FC](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain();
LABEL_5:
    *v3 = v4;
    return sub_2322AAD7C;
  }
  __break(1u);
  return result;
}

uint64_t sub_2322AAD7C()
{
  return swift_release();
}

uint64_t sub_2322AAD84(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_2322B9368();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_2322B9368();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_23224BE78(0, &qword_255FAF5B8, (uint64_t (*)(uint64_t))sub_2322AB7D8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
        sub_2322AB814();
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_2322AABC4(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_2322AB7D8();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_2322B93A4();
  __break(1u);
  return result;
}

uint64_t sub_2322AAF90(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  uint64_t *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_2322B9368();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_2322B9368();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_232258420();
        sub_232245044(&qword_255FAF5A0, (uint64_t (*)(uint64_t))sub_232258420, MEMORY[0x24BEE12E0]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_2322AAC1C(v16, i, a3);
          v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_2322AB410(0, &qword_255FAC450, MEMORY[0x24BE42CA8]);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_2322B93A4();
  __break(1u);
  return result;
}

char *sub_2322AB1AC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_2322B93A4();
  __break(1u);
  return result;
}

uint64_t sub_2322AB290()
{
  return swift_deallocObject();
}

uint64_t sub_2322AB2A0()
{
  return sub_2322A9E94();
}

uint64_t sub_2322AB2A8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2322AB2CC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2322AB2F0(uint64_t *a1)
{
  uint64_t v1;

  return sub_2322AA020(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_2322AB2F8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_2322582C8(0, (unint64_t *)&qword_255FADA30);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2322B93A4();
  __break(1u);
  return result;
}

void sub_2322AB410(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldDataSource();
    v7 = a3(a1, v6, MEMORY[0x24BE43520]);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_2322AB470(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_2322582C8(0, (unint64_t *)&qword_255FABD20);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2322B93A4();
  __break(1u);
  return result;
}

uint64_t sub_2322AB58C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_2322B93A4();
  __break(1u);
  return result;
}

uint64_t sub_2322AB6A4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2322B93A4();
  __break(1u);
  return result;
}

void sub_2322AB794(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_2322B93D4();
    if (!v4)
      atomic_store(v3, a2);
  }
}

unint64_t sub_2322AB7D8()
{
  unint64_t result;

  result = qword_255FABD30;
  if (!qword_255FABD30)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255FABD30);
  }
  return result;
}

unint64_t sub_2322AB814()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FAF5C0;
  if (!qword_255FAF5C0)
  {
    sub_23224BE78(255, &qword_255FAF5B8, (uint64_t (*)(uint64_t))sub_2322AB7D8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2349010BC](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_255FAF5C0);
  }
  return result;
}

uint64_t sub_2322AB874(int a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  int64_t v9;
  unint64_t *v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t *v21;
  uint64_t (*v22)(uint64_t, uint64_t, _QWORD);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 *v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  void (*v41)(char *, _QWORD, uint64_t);
  char *v42;
  uint64_t v43;
  unint64_t v44;
  int64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t i;
  unint64_t v49;
  unint64_t *v50;
  char *v51;
  uint64_t v52;
  _QWORD *v53;
  int v54;
  uint64_t v55;
  int64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t *v59;
  uint64_t v60;
  unint64_t v61;
  unsigned int v62;
  unint64_t v63;
  unint64_t *v64;
  uint64_t v65;

  LODWORD(v5) = a1;
  sub_2322AB410(0, &qword_255FAF598, MEMORY[0x24BE42C68]);
  v52 = v6;
  v60 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v51 = (char *)&v50 - v7;
  v8 = (unint64_t *)MEMORY[0x24BEE4AF8];
  v65 = MEMORY[0x24BEE4AF8];
  v9 = *(_QWORD *)(a2 + 16);
  v55 = a3;
  v54 = v5;
  if (v9)
  {
    v64 = (unint64_t *)MEMORY[0x24BEE4AF8];
    sub_2322571A4(0, v9, 0);
    v8 = (unint64_t *)MEMORY[0x24BEE4AF8];
    v10 = v64;
    v11 = (uint64_t *)(a2 + 32);
    v12 = v64[2];
    do
    {
      v14 = *v11++;
      v13 = v14;
      if (v14 == 2)
        v15 = &unk_250111CD8;
      else
        v15 = v8;
      if (v13 == 1)
        v16 = &unk_250111CB0;
      else
        v16 = v15;
      v64 = v10;
      v17 = v10[3];
      v18 = v12 + 1;
      if (v12 >= v17 >> 1)
      {
        sub_2322571A4(v17 > 1, v12 + 1, 1);
        v8 = (unint64_t *)MEMORY[0x24BEE4AF8];
        v10 = v64;
      }
      v10[2] = v18;
      v10[v12++ + 4] = (unint64_t)v16;
      --v9;
    }
    while (v9);
    v50 = v10;
    a3 = v55;
    LOBYTE(v5) = v54;
  }
  else
  {
    v18 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
    if (!v18)
    {
      v21 = (unint64_t *)MEMORY[0x24BEE4AF8];
LABEL_41:
      swift_bridgeObjectRelease();
      v47 = v21[2];
      if (v47)
      {
        swift_bridgeObjectRetain();
        for (i = 0; i != v47; ++i)
        {
          v49 = swift_bridgeObjectRetain();
          sub_2322A91F4(v49);
        }
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      return v65;
    }
    v50 = (unint64_t *)MEMORY[0x24BEE4AF8];
  }
  v56 = v18;
  v64 = v8;
  sub_232257188(0, v18, 0);
  v19 = MEMORY[0x24BEE4AF8];
  v20 = 0;
  v21 = v64;
  v53 = v50 + 4;
  v22 = (uint64_t (*)(uint64_t, uint64_t, _QWORD))MEMORY[0x24BE42CA8];
  v62 = *MEMORY[0x24BE42C58];
  while (1)
  {
    v58 = v20;
    v59 = v21;
    v23 = v53[v20];
    v24 = *(_QWORD *)(v23 + 16);
    v57 = v23;
    if (v24)
      break;
    swift_bridgeObjectRetain();
    v32 = v19;
    if (v19 >> 62)
      goto LABEL_33;
LABEL_26:
    v33 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v33)
      goto LABEL_27;
LABEL_34:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v39 = v19;
LABEL_38:
    v64 = v21;
    v5 = v21[2];
    v44 = v21[3];
    v45 = v56;
    v46 = v58;
    if (v5 >= v44 >> 1)
    {
      sub_232257188(v44 > 1, v5 + 1, 1);
      v46 = v58;
      v45 = v56;
      v19 = MEMORY[0x24BEE4AF8];
      v21 = v64;
    }
    v20 = v46 + 1;
    v21[2] = v5 + 1;
    v21[v5 + 4] = v39;
    a3 = v55;
    LOBYTE(v5) = v54;
    if (v20 == v45)
      goto LABEL_41;
  }
  v63 = v19;
  v25 = v23;
  swift_bridgeObjectRetain();
  sub_2322B9320();
  v26 = (unsigned __int8 *)(v25 + 32);
  do
  {
    v29 = *v26++;
    v28 = v29;
    if (v29 == 4)
    {
      v31 = *(_QWORD *)(a3 + 48);
      type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldPupillaryDistanceDataSource();
      *(_QWORD *)(swift_allocObject() + qword_255FAE720) = MEMORY[0x24BEE4B08];
      swift_retain_n();
      sub_232251AC0(4, v5 & 1, v31);
      swift_retain();
      sub_232289088(2);
      sub_232289088(1);
    }
    else
    {
      if (v28 != 6)
      {
        v27 = *(_QWORD *)(a3 + 48);
        type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldDataSource();
        swift_allocObject();
        swift_retain();
        sub_232251AC0(v28, v5 & 1, v27);
        goto LABEL_19;
      }
      v30 = *(_QWORD *)(a3 + 48);
      type metadata accessor for VisionPrescriptionManualDataEntryMeasurementFieldPrismDataSource();
      *(_QWORD *)(swift_allocObject() + qword_255FAD100) = MEMORY[0x24BEE4B08];
      swift_retain_n();
      sub_232251AC0(6, v5 & 1, v30);
      swift_retain();
      sub_2322692BC(2);
      sub_2322692BC(1);
    }
    swift_release();
    swift_release();
LABEL_19:
    sub_2322B9308();
    sub_2322B932C();
    sub_2322B9338();
    sub_2322B9314();
    --v24;
  }
  while (v24);
  v32 = v63;
  v19 = MEMORY[0x24BEE4AF8];
  v21 = v59;
  if (!(v63 >> 62))
    goto LABEL_26;
LABEL_33:
  swift_bridgeObjectRetain();
  v19 = MEMORY[0x24BEE4AF8];
  v33 = sub_2322B9368();
  swift_bridgeObjectRelease();
  if (!v33)
    goto LABEL_34;
LABEL_27:
  v63 = v19;
  result = sub_2322B9320();
  if ((v33 & 0x8000000000000000) == 0)
  {
    v61 = v32;
    if ((v32 & 0xC000000000000001) != 0)
    {
      v35 = 0;
      v37 = v51;
      v36 = v52;
      do
      {
        v38 = v35 + 1;
        MEMORY[0x2349009FC]();
        (*(void (**)(char *, _QWORD, uint64_t))(v60 + 104))(v37, v62, v36);
        sub_2322AB410(0, &qword_255FAC450, v22);
        swift_allocObject();
        sub_2322B8354();
        sub_2322B9308();
        sub_2322B932C();
        sub_2322B9338();
        sub_2322B9314();
        v35 = v38;
      }
      while (v33 != v38);
    }
    else
    {
      v40 = v32 + 32;
      v41 = *(void (**)(char *, _QWORD, uint64_t))(v60 + 104);
      v42 = v51;
      v43 = v52;
      do
      {
        v40 += 8;
        v41(v42, v62, v43);
        sub_2322AB410(0, &qword_255FAC450, v22);
        swift_allocObject();
        swift_retain();
        sub_2322B8354();
        sub_2322B9308();
        sub_2322B932C();
        sub_2322B9338();
        sub_2322B9314();
        --v33;
      }
      while (v33);
    }
    v39 = v63;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v19 = MEMORY[0x24BEE4AF8];
    v21 = v59;
    goto LABEL_38;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for VisionPrescriptionAppClipCodeImageCell(uint64_t a1)
{
  return sub_23224E434(a1, (uint64_t *)&unk_255FAF620);
}

uint64_t sub_2322ABED8()
{
  return swift_initClassMetadata2();
}

id sub_2322ABF40()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = qword_255FAF5F0;
  v2 = *(void **)(v0 + qword_255FAF5F0);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_255FAF5F0);
  }
  else
  {
    v4 = sub_2322ABFA0(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_2322ABFA0(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t inited;
  void *v8;
  id v9;
  id v10;
  void *v11;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDA88]), sel_init);
  objc_msgSend(v2, sel_setTextAlignment_, 4);
  objc_msgSend(v2, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_setEditable_, 0);
  v3 = (void *)objc_opt_self();
  v4 = v2;
  v5 = objc_msgSend(v3, sel_clearColor);
  objc_msgSend(v4, sel_setBackgroundColor_, v5);

  objc_msgSend(v4, sel_setScrollEnabled_, 0);
  v6 = objc_msgSend(v4, sel_textContainer);
  objc_msgSend(v6, sel_setLineFragmentPadding_, 0.0);

  sub_23224BE78(0, (unint64_t *)&qword_255FAF6F0, (uint64_t (*)(uint64_t))sub_2322AD884, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2322C0E70;
  v8 = (void *)*MEMORY[0x24BEBB368];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BEBB368];
  v9 = v8;
  v10 = objc_msgSend(v3, sel_linkColor);
  *(_QWORD *)(inited + 64) = sub_23224C618(0, qword_255FAF700);
  *(_QWORD *)(inited + 40) = v10;
  sub_23228C6C0(inited);
  type metadata accessor for Key(0);
  sub_2322AD8EC();
  v11 = (void *)sub_2322B8DBC();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setLinkTextAttributes_, v11);

  objc_msgSend(v4, sel__setInteractiveTextSelectionDisabled_, 1);
  objc_msgSend(v4, sel_setDelegate_, a1);
  return v4;
}

char *sub_2322AC1E0(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  uint64_t v10;
  id v11;
  char *v12;
  id v13;
  char *v14;
  uint64_t v15;
  char *v16;
  id v17;
  objc_super v19;

  v9 = &v4[qword_255FAF5E0];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  v10 = qword_255FAF5E8;
  v11 = objc_allocWithZone(MEMORY[0x24BEBD668]);
  v12 = v4;
  v13 = objc_msgSend(v11, sel_init);
  objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v13, sel_setContentMode_, 1);
  *(_QWORD *)&v4[v10] = v13;
  *(_QWORD *)&v12[qword_255FAF5F0] = 0;
  *(_QWORD *)&v12[qword_255FAF5F8] = 0;
  *(_QWORD *)&v12[qword_255FAF600] = 0;
  *(_QWORD *)&v12[qword_255FAF608] = 0;
  *(_QWORD *)&v12[qword_255FAF610] = 0;
  *(_QWORD *)&v12[qword_255FAF618] = 0;

  v19.receiver = v12;
  v19.super_class = (Class)type metadata accessor for VisionPrescriptionAppClipCodeImageCell(0);
  v14 = (char *)objc_msgSendSuper2(&v19, sel_initWithFrame_, a1, a2, a3, a4);
  v15 = *(_QWORD *)&v14[qword_255FAF5E8];
  v16 = v14;
  objc_msgSend(v16, sel_addSubview_, v15);
  v17 = sub_2322ABF40();
  objc_msgSend(v16, sel_addSubview_, v17);

  sub_2322AC3A8();
  return v16;
}

char *sub_2322AC364(double a1, double a2, double a3, double a4)
{
  return sub_2322AC1E0(a1, a2, a3, a4);
}

void sub_2322AC384(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_2322AD6E0();
}

void sub_2322AC3A8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  id v37;

  v1 = v0;
  v37 = (id)objc_opt_self();
  sub_23224ECA4();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_2322C2920;
  v3 = *(void **)&v0[qword_255FAF5E8];
  v4 = objc_msgSend(v3, sel_topAnchor);
  v5 = objc_msgSend(v1, sel_topAnchor);
  v6 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v5, 16.0);

  *(_QWORD *)(v2 + 32) = v6;
  v7 = objc_msgSend(v3, sel_leadingAnchor);
  v8 = objc_msgSend(v1, sel_leadingAnchor);
  v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_constant_, v8, 16.0);

  *(_QWORD *)(v2 + 40) = v9;
  v10 = objc_msgSend(v1, sel_trailingAnchor);
  v11 = objc_msgSend(v3, sel_trailingAnchor);
  v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_constant_, v11, 16.0);

  *(_QWORD *)(v2 + 48) = v12;
  v13 = sub_2322ABF40();
  v14 = objc_msgSend(v13, sel_topAnchor);

  v15 = objc_msgSend(v3, sel_bottomAnchor);
  v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

  *(_QWORD *)(v2 + 56) = v16;
  v17 = sub_2322ABF40();
  v18 = objc_msgSend(v17, sel_leadingAnchor);

  v19 = objc_msgSend(v1, sel_leadingAnchor);
  v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v19, 16.0);

  *(_QWORD *)(v2 + 64) = v20;
  v21 = objc_msgSend(v1, sel_trailingAnchor);
  v22 = sub_2322ABF40();
  v23 = objc_msgSend(v22, sel_trailingAnchor);

  v24 = objc_msgSend(v21, sel_constraintEqualToAnchor_constant_, v23, 16.0);
  *(_QWORD *)(v2 + 72) = v24;
  v25 = objc_msgSend(v1, sel_bottomAnchor);
  v26 = sub_2322ABF40();
  v27 = objc_msgSend(v26, sel_bottomAnchor);

  v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_constant_, v27, 16.0);
  *(_QWORD *)(v2 + 80) = v28;
  sub_2322B8F3C();
  sub_23224C618(0, (unint64_t *)&qword_255FABD30);
  v29 = (void *)sub_2322B8F24();
  swift_bridgeObjectRelease();
  objc_msgSend(v37, sel_activateConstraints_, v29);

  v30 = objc_msgSend(v3, sel_heightAnchor);
  v31 = objc_msgSend(v30, sel_constraintEqualToConstant_, 0.0);

  v32 = *(void **)&v1[qword_255FAF608];
  *(_QWORD *)&v1[qword_255FAF608] = v31;

  v33 = sub_2322ABF40();
  v34 = objc_msgSend(v33, sel_heightAnchor);

  v35 = objc_msgSend(v34, sel_constraintEqualToConstant_, 0.0);
  v36 = *(void **)&v1[qword_255FAF618];
  *(_QWORD *)&v1[qword_255FAF618] = v35;

}

void sub_2322AC7F4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void *v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  void *v36;
  double v37;
  double v38;
  double v39;
  double v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  void *v45;
  id v46;
  char *v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t ObjectType;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD v73[6];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v71 = sub_2322B8918();
  v2 = *(_QWORD *)(v71 - 8);
  MEMORY[0x24BDAC7A8](v71);
  v4 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_2322B7F28();
  v66 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68);
  v67 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2322B7F34();
  v64 = *(_QWORD *)(v6 - 8);
  v65 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2322B7F4C();
  MEMORY[0x24BDAC7A8](v9);
  v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_23224BE78(0, (unint64_t *)&qword_255FAEE60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v63 - v12;
  sub_23224BE78(0, &qword_255FAF6D8, type metadata accessor for VisionPrescriptionAppClipCodeItem, v10);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v63 - v15;
  v17 = type metadata accessor for VisionPrescriptionAppClipCodeItem(0);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v70 = (uint64_t)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = v1;
  v21 = (uint64_t)&v1[qword_255FAF5E0];
  swift_beginAccess();
  sub_23224E5FC(v21, (uint64_t)v73);
  if (!v73[3])
  {
    sub_23225B12C((uint64_t)v73, (unint64_t *)&qword_255FACC90, (uint64_t (*)(uint64_t))sub_2322515F4);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
    goto LABEL_13;
  }
  sub_2322515F4();
  v22 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v16, v22 ^ 1u, 1, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
LABEL_13:
    sub_23225B12C((uint64_t)v16, &qword_255FAF6D8, type metadata accessor for VisionPrescriptionAppClipCodeItem);
    sub_2322B88F4();
    v47 = v20;
    v48 = sub_2322B890C();
    v49 = sub_2322B9014();
    if (os_log_type_enabled(v48, v49))
    {
      v50 = swift_slowAlloc();
      v51 = swift_slowAlloc();
      v72 = v51;
      *(_DWORD *)v50 = 136315394;
      v52 = sub_2322B9464();
      v73[0] = sub_232266EA0(v52, v53, &v72);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v50 + 12) = 2080;
      sub_23224E5FC(v21, (uint64_t)v73);
      sub_23224BE78(0, (unint64_t *)&qword_255FACC90, (uint64_t (*)(uint64_t))sub_2322515F4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v54 = sub_2322B8E34();
      v73[0] = sub_232266EA0(v54, v55, &v72);
      sub_2322B923C();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_232241000, v48, v49, "[%s] Item was not of type VisionPrescriptionAppClipCodeItem. Item: %s", (uint8_t *)v50, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x234901170](v51, -1, -1);
      MEMORY[0x234901170](v50, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v71);
    objc_msgSend(*(id *)&v47[qword_255FAF5E8], sel_setImage_, 0);
    return;
  }
  v23 = v70;
  sub_2322AD804((uint64_t)v16, v70);
  v24 = objc_msgSend(v20, sel_traitCollection);
  objc_msgSend(v24, sel_userInterfaceStyle);

  v25 = *(void **)(v23 + *(int *)(v17 + 24));
  type metadata accessor for AppClipCodeGenerator();
  v26 = v25;
  v27 = sub_232245654(v26);
  if (v28 >> 60 == 15)
  {
LABEL_18:

    goto LABEL_19;
  }
  v29 = v27;
  v30 = v28;
  v31 = (void *)sub_2322B8018();
  v32 = (void *)CGSVGDocumentCreateFromData();

  if (!v32)
  {
    sub_232267314(v29, v30);
    goto LABEL_18;
  }
  v33 = objc_msgSend((id)objc_opt_self(), sel__imageWithCGSVGDocument_scale_orientation_, v32, 0, 1.0);

  sub_232267314(v29, v30);
  if (!v33)
  {
LABEL_19:
    if (qword_255FAB900 != -1)
      swift_once();
    sub_2322B7F58();
    sub_23224C618(0, (unint64_t *)&unk_255FAF6E0);
    v56 = sub_2322B8000();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v13, 1, 1, v56);
    (*(void (**)(char *, _QWORD, uint64_t))(v64 + 104))(v8, *MEMORY[0x24BDCC3D8], v65);
    (*(void (**)(char *, _QWORD, uint64_t))(v66 + 104))(v67, *MEMORY[0x24BDCC3C0], v68);
    sub_2322B7F40();
    v57 = (void *)sub_2322B90E0();
    v58 = *MEMORY[0x24BEBB360];
    sub_23224C618(0, (unint64_t *)&unk_255FACCD0);
    v59 = (void *)sub_2322B9128();
    objc_msgSend(v57, sel_addAttribute_value_range_, v58, v59, 0, objc_msgSend(v57, sel_length));

    v60 = *MEMORY[0x24BEBB368];
    v61 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    objc_msgSend(v57, sel_addAttribute_value_range_, v60, v61, 0, objc_msgSend(v57, sel_length));

    v62 = sub_2322ABF40();
    objc_msgSend(v62, sel_setAttributedText_, v57);

    sub_2322AD174();
    goto LABEL_22;
  }
  v34 = *(void **)&v20[qword_255FAF5E8];
  objc_msgSend(v34, sel_setImage_, v33);
  v35 = objc_msgSend(v34, sel_image);
  if (!v35)
  {
LABEL_11:

LABEL_22:
    sub_2322AD848(v70);
    return;
  }
  v36 = v35;
  objc_msgSend(v35, sel_size);
  v38 = v37;
  v40 = v39;

  if (v38 <= 0.0)
  {
    sub_2322AD848(v70);

  }
  else
  {
    v41 = objc_msgSend(v20, sel_heightAnchor);
    v42 = objc_msgSend(v20, sel_widthAnchor);
    v43 = objc_msgSend(v41, sel_constraintEqualToAnchor_multiplier_, v42, v40 / v38);

    objc_msgSend(v43, sel_setActive_, 1);
    v44 = *(void **)&v20[qword_255FAF608];
    if (v44)
    {
      objc_msgSend(v44, sel_setActive_, 0);
      v45 = *(void **)&v20[qword_255FAF618];
      if (v45)
      {
        objc_msgSend(v45, sel_setActive_, 1);
        objc_msgSend(*(id *)&v20[qword_255FAF610], sel_setActive_, 1);
        v46 = sub_2322ABF40();
        objc_msgSend(v46, sel_setHidden_, 1);

        objc_msgSend(v34, sel_setHidden_, 0);
        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

id sub_2322AD174()
{
  uint64_t v0;
  void *v1;
  id result;
  id v3;

  v1 = *(void **)(v0 + qword_255FAF610);
  if (v1)
    objc_msgSend(v1, sel_setActive_, 0);
  result = *(id *)(v0 + qword_255FAF608);
  if (result)
  {
    objc_msgSend(result, sel_setActive_, 1);
    result = *(id *)(v0 + qword_255FAF618);
    if (result)
    {
      objc_msgSend(result, sel_setActive_, 0);
      v3 = sub_2322ABF40();
      objc_msgSend(v3, sel_setHidden_, 0);

      return objc_msgSend(*(id *)(v0 + qword_255FAF5E8), sel_setHidden_, 1);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_2322AD224(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  id v6;
  id v7;
  objc_super v8;

  v8.receiver = a1;
  v8.super_class = (Class)type metadata accessor for VisionPrescriptionAppClipCodeImageCell(0);
  v4 = v8.receiver;
  v5 = a3;
  objc_msgSendSuper2(&v8, sel_traitCollectionDidChange_, v5);
  v6 = objc_msgSend(v4, sel_traitCollection, v8.receiver, v8.super_class);
  v7 = objc_msgSend(v6, sel_userInterfaceStyle);

  if (!v5 || v7 != objc_msgSend(v5, sel_userInterfaceStyle))
    sub_2322AC7F4();

}

uint64_t sub_2322AD2E4(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v12;

  v5 = sub_2322B8000();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322B7FDC();
  v9 = a3;
  v10 = a1;
  swift_bridgeObjectRetain();
  sub_2322B8E64();

  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return 0;
}

void sub_2322AD3BC()
{
  uint64_t v0;

  sub_23225B12C(v0 + qword_255FAF5E0, (unint64_t *)&qword_255FACC90, (uint64_t (*)(uint64_t))sub_2322515F4);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

id sub_2322AD458()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionAppClipCodeImageCell(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_2322AD48C(uint64_t a1)
{
  sub_23225B12C(a1 + qword_255FAF5E0, (unint64_t *)&qword_255FACC90, (uint64_t (*)(uint64_t))sub_2322515F4);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

uint64_t sub_2322AD534()
{
  return type metadata accessor for VisionPrescriptionAppClipCodeImageCell(0);
}

uint64_t sub_2322AD53C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + qword_255FAF5E0;
  swift_beginAccess();
  return sub_23224E5FC(v3, a1);
}

uint64_t sub_2322AD58C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + qword_255FAF5E0;
  swift_beginAccess();
  sub_23224E53C(a1, v3);
  swift_endAccess();
  sub_2322AC7F4();
  return sub_23225B12C(a1, (unint64_t *)&qword_255FACC90, (uint64_t (*)(uint64_t))sub_2322515F4);
}

void (*sub_2322AD608(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2322AD650;
}

void sub_2322AD650(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_2322AC7F4();
}

unint64_t sub_2322AD680()
{
  sub_2322B8090();
  sub_2322B8EAC();
  swift_bridgeObjectRelease();
  return 0xD000000000000022;
}

void sub_2322AD6E0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;

  v1 = &v0[qword_255FAF5E0];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_QWORD *)v1 + 4) = 0;
  v2 = qword_255FAF5E8;
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD668]), sel_init);
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v3, sel_setContentMode_, 1);
  *(_QWORD *)&v0[v2] = v3;
  *(_QWORD *)&v0[qword_255FAF5F0] = 0;
  *(_QWORD *)&v0[qword_255FAF5F8] = 0;
  *(_QWORD *)&v0[qword_255FAF600] = 0;
  *(_QWORD *)&v0[qword_255FAF608] = 0;
  *(_QWORD *)&v0[qword_255FAF610] = 0;
  *(_QWORD *)&v0[qword_255FAF618] = 0;

  sub_2322B9350();
  __break(1u);
}

uint64_t type metadata accessor for VisionPrescriptionAppClipCodeItem(uint64_t a1)
{
  return sub_23224E434(a1, qword_255FAF768);
}

uint64_t sub_2322AD804(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for VisionPrescriptionAppClipCodeItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2322AD848(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for VisionPrescriptionAppClipCodeItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2322AD884()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255FAE8F0)
  {
    type metadata accessor for Key(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255FAE8F0);
  }
}

unint64_t sub_2322AD8EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255FABB00;
  if (!qword_255FABB00)
  {
    type metadata accessor for Key(255);
    result = MEMORY[0x2349010BC](&unk_2322C06F0, v1);
    atomic_store(result, (unint64_t *)&qword_255FABB00);
  }
  return result;
}

uint64_t *sub_2322AD934(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_2322B80B4();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(a3 + 24);
    v14 = *(void **)((char *)a2 + v13);
    *(uint64_t *)((char *)v4 + v13) = (uint64_t)v14;
    v15 = v14;
  }
  return v4;
}

void sub_2322AD9F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_2322B80B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

}

_QWORD *sub_2322ADA4C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  void *v13;
  id v14;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2322B80B4();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = *(int *)(a3 + 24);
  v13 = *(void **)((char *)a2 + v12);
  *(_QWORD *)((char *)a1 + v12) = v13;
  v14 = v13;
  return a1;
}

_QWORD *sub_2322ADADC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2322B80B4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = *(void **)((char *)a2 + v10);
  v12 = *(void **)((char *)a1 + v10);
  *(_QWORD *)((char *)a1 + v10) = v11;
  v13 = v11;

  return a1;
}

_OWORD *sub_2322ADB78(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2322B80B4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_2322ADBF0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2322B80B4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = *(void **)((char *)a1 + v11);
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);

  return a1;
}

uint64_t sub_2322ADC78()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2322ADC84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2322B80B4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_2322ADD00()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2322ADD0C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_2322B80B4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_2322ADD80()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2322B80B4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

id VisionPrescriptionAddRecordConfirmationViewController.__allocating_init(visionPrescription:healthStore:pinnedContentManager:)(void *a1, void *a2, uint64_t a3)
{
  objc_class *v3;
  id v7;
  id v8;

  v7 = objc_allocWithZone(v3);
  v8 = sub_2322B4378(a1, a2, a3);

  return v8;
}

id sub_2322ADF0C()
{
  return sub_2322B25A0(type metadata accessor for VisionPrescriptionPreviewTableViewCell);
}

id VisionPrescriptionAddRecordConfirmationViewController.init(visionPrescription:healthStore:pinnedContentManager:)(void *a1, void *a2, uint64_t a3)
{
  id v5;

  v5 = sub_2322B4378(a1, a2, a3);

  return v5;
}

Swift::Void __swiftcall VisionPrescriptionAddRecordConfirmationViewController.viewDidLoad()()
{
  char *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  void *ObjCClassFromMetadata;
  id v17;
  id v18;
  id v19;
  double v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  objc_super v35;

  v35.receiver = v0;
  v35.super_class = (Class)type metadata accessor for VisionPrescriptionAddRecordConfirmationViewController();
  objc_msgSendSuper2(&v35, sel_viewDidLoad);
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD9F0]), sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, sel_setTableView_, v1);

  v2 = objc_msgSend(v0, sel_tableView);
  if (!v2)
  {
    __break(1u);
    goto LABEL_16;
  }
  v3 = v2;
  objc_msgSend(v2, sel_setAllowsSelection_, 0);

  v4 = objc_msgSend(v0, sel_tableView);
  if (!v4)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v5 = v4;
  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_systemBackgroundColor);
  objc_msgSend(v5, sel_setBackgroundColor_, v7);

  v8 = objc_msgSend(v0, sel_tableView);
  if (!v8)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v9 = v8;
  objc_msgSend(v8, sel_setSeparatorStyle_, 0);

  v10 = objc_msgSend(v0, sel_tableView);
  if (!v10)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v11 = v10;
  objc_msgSend(v10, sel_setDataSource_, v0);

  v12 = objc_msgSend(v0, sel_tableView);
  if (!v12)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v13 = v12;
  objc_msgSend(v12, sel_setDelegate_, v0);

  v14 = objc_msgSend(v0, sel_tableView);
  if (!v14)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v15 = v14;
  type metadata accessor for VisionPrescriptionPreviewTableViewCell();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v17 = objc_msgSend(ObjCClassFromMetadata, sel_defaultReuseIdentifier);
  if (!v17)
  {
    sub_2322B8E1C();
    v17 = (id)sub_2322B8DEC();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v15, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v17);

  v18 = objc_msgSend(v0, sel_headerView);
  objc_msgSend(v18, sel_setAllowFullWidthIcon_, 1);

  v19 = objc_msgSend(v0, sel_headerView);
  LODWORD(v20) = 1036831949;
  objc_msgSend(v19, sel_setTitleHyphenationFactor_, v20);

  v21 = objc_msgSend(v0, sel_navigationController);
  objc_msgSend(v21, sel_setNavigationBarHidden_, 1);

  v22 = objc_msgSend(v0, sel_navigationController);
  if (v22)
  {
    v23 = v22;
    objc_msgSend(v22, sel_setModalInPresentation_, 1);

  }
  v24 = objc_msgSend((id)objc_opt_self(), sel_boldButton);
  v25 = objc_msgSend(v6, sel_systemBlueColor);
  objc_msgSend(v24, sel_setTintColor_, v25);

  if (qword_255FAB900 != -1)
    swift_once();
  sub_2322B7F58();
  v26 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  objc_msgSend(v24, sel_setTitle_forState_, v26, 0, 0xE000000000000000);

  objc_msgSend(v24, sel_addTarget_action_forControlEvents_, v0, sel_addRecord, 64);
  v27 = objc_msgSend(v0, sel_buttonTray);
  objc_msgSend(v27, sel_addButton_, v24);

  v28 = *(void **)&v0[OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_addToHealthButton];
  *(_QWORD *)&v0[OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_addToHealthButton] = v24;
  v29 = v24;

  v30 = objc_msgSend((id)objc_opt_self(), sel_linkButton);
  sub_2322B7F58();
  v31 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  objc_msgSend(v30, sel_setTitle_forState_, v31, 0, 0xE000000000000000);

  objc_msgSend(v30, sel_addTarget_action_forControlEvents_, v0, sel_dismissPreview, 64);
  v32 = objc_msgSend(v0, sel_buttonTray);
  objc_msgSend(v32, sel_addButton_, v30);

  v33 = objc_msgSend(v0, sel_tableView);
  if (v33)
  {
    v34 = v33;
    objc_msgSend(v33, sel_reloadData);

    return;
  }
LABEL_21:
  __break(1u);
}

Swift::Void __swiftcall VisionPrescriptionAddRecordConfirmationViewController.viewWillAppear(_:)(Swift::Bool a1)
{
  void *v1;
  id v3;
  void *v4;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for VisionPrescriptionAddRecordConfirmationViewController();
  objc_msgSendSuper2(&v5, sel_viewWillAppear_, a1);
  v3 = objc_msgSend(v1, sel_navigationController);
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, sel_setNavigationBarHidden_, 1);

  }
}

void sub_2322AE650()
{
  char *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  char *v6;
  _QWORD v7[6];

  v1 = *(void **)&v0[OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_addToHealthButton];
  if (v1)
  {
    objc_msgSend(v1, sel_showsBusyIndicator);
    v2 = *(void **)&v0[OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_healthStore];
    if (v2)
    {
      v3 = swift_allocObject();
      *(_QWORD *)(v3 + 16) = v0;
      v7[4] = sub_2322B4CCC;
      v7[5] = v3;
      v7[0] = MEMORY[0x24BDAC760];
      v7[1] = 1107296256;
      v7[2] = sub_2322561FC;
      v7[3] = &unk_250115328;
      v4 = _Block_copy(v7);
      v5 = v2;
      v6 = v0;
      swift_release();
      objc_msgSend(v5, sel_hk_fetchExistingDemographicInformationWithCompletion_, v4);
      _Block_release(v4);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_2322AE740(void *a1, char *a2)
{
  id v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char *v10;

  v4 = *(id *)&a2[OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_visionPrescription];
  v5 = objc_msgSend(a1, sel_firstName);
  v6 = sub_2322B8E1C();
  v8 = v7;

  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a2;
  v10 = a2;
  sub_2322B04CC(v4, v6, v8, (uint64_t)sub_2322B4CD4, v9);

  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_2322AE800(char a1, uint64_t a2)
{
  void *v2;
  id v3;

  if ((a1 & 1) != 0)
  {
    v2 = *(void **)(a2
                  + OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_addToHealthButton);
    if (v2)
    {
      objc_msgSend(v2, sel_hidesBusyIndicator);
      sub_2322AEB2C();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    v3 = objc_retain(*(id *)(a2
                           + OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_visionPrescription));
    sub_2322AF810(v3);

  }
}

void sub_2322AE8AC()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  id v7;
  void *v8;
  uint64_t v9;

  v1 = v0;
  v2 = sub_2322B8D38();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23224C618(0, (unint64_t *)&qword_255FACCA0);
  *v5 = sub_2322B90B0();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5610], v2);
  v6 = sub_2322B8D44();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    v7 = objc_msgSend(v1, sel_presentingViewController);
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v7, sel_dismissViewControllerAnimated_completion_, 1, 0);

    }
  }
  else
  {
    __break(1u);
  }
}

void sub_2322AE9E4(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;

  v2 = v1;
  v4 = sub_2322B8D38();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23224C618(0, (unint64_t *)&qword_255FACCA0);
  *v7 = sub_2322B90B0();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEE5610], v4);
  v8 = sub_2322B8D44();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  v9 = *(void **)&v2[OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_healthStore];
  if (!v9)
  {
LABEL_7:
    __break(1u);
    return;
  }
  v10 = objc_allocWithZone((Class)type metadata accessor for VisionPrescriptionRecordAddedViewController());
  v11 = sub_23225CA20(v9, a1);
  v12 = objc_msgSend(v2, sel_navigationController);
  if (v12)
  {
    v13 = v12;
    objc_msgSend(v12, sel_pushViewController_animated_, v11, 1);

  }
}

void sub_2322AEB2C()
{
  void *v0;
  void *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  char v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  _QWORD aBlock[6];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = sub_2322B8D38();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (_QWORD *)((char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23224C618(0, (unint64_t *)&qword_255FACCA0);
  *v6 = sub_2322B90B0();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BEE5610], v3);
  v7 = sub_2322B8D44();
  (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
  if ((v7 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (qword_255FAB900 != -1)
LABEL_5:
    swift_once();
  sub_2322B7F58();
  sub_2322B7F58();
  v8 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  v9 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v8, v9, 1);

  sub_2322B7F58();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v1;
  *(_QWORD *)(v11 + 24) = ObjectType;
  v12 = v1;
  v13 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_2322B4CA0;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2322561FC;
  aBlock[3] = &unk_2501152D8;
  v14 = _Block_copy(aBlock);
  swift_release();
  v15 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_handler_, v13, 0, v14);
  _Block_release(v14);

  objc_msgSend(v10, sel_addAction_, v15);
  objc_msgSend(v12, sel_presentViewController_animated_completion_, v10, 1, 0);

}

void sub_2322AEEC8(uint64_t a1, void *a2)
{
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;

  v3 = sub_2322B8918();
  MEMORY[0x24BDAC7A8](v3);
  v4 = objc_msgSend(a2, sel_presentingViewController);
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, sel_dismissViewControllerAnimated_completion_, 1, 0);

  }
  v8 = (void *)sub_2322AF1AC();
  v6 = objc_msgSend(a2, sel_navigationController);
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v6, sel_pushViewController_animated_, v8, 1);

  }
}

uint64_t sub_2322AF1AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  void *v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[40];

  sub_23224BE78(0, &qword_255FAC628, (uint64_t (*)(uint64_t))MEMORY[0x24BE42678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v16 - v2;
  v17 = sub_2322B8714();
  v4 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_2322B8594();
  v7 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2322B8588();
  result = sub_2322B9044();
  v11 = *(void **)(v0
                 + OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_healthStore);
  if (v11)
  {
    v12 = objc_msgSend(v11, sel_profileIdentifier);
    v13 = sub_2322B8288();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v3, 1, 1, v13);
    sub_2322B8324();

    sub_2322B4C28((uint64_t)v3);
    sub_23225B0E8(v0+ OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_pinnedContentManager, (uint64_t)v18);
    sub_2322B9068();
    sub_2322B86FC();
    v14 = objc_msgSend((id)objc_opt_self(), sel_visionPrescriptionType);
    v15 = sub_2322B857C();

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v17);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v16);
    return v15;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_2322AF3CC(char a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  uint64_t v9;
  id v10;
  void *v11;
  unsigned int v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  _QWORD v18[2];

  v2 = v1;
  v4 = sub_2322B8D38();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (_QWORD *)((char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23224C618(0, (unint64_t *)&qword_255FACCA0);
  *v7 = sub_2322B90B0();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEE5610], v4);
  v8 = sub_2322B8D44();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) != 0)
  {
    if (qword_255FAB900 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  sub_2322B7F58();
  v18[0] = sub_2322B7F58();
  v18[1] = v9;
  v10 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(v10, sel_isAppleInternalInstall);

    if (v12)
    {
      sub_2322B8EAC();
      sub_23227D4DC(a1);
      swift_bridgeObjectRelease();
      sub_2322B8EAC();
      swift_bridgeObjectRelease();
    }
    v13 = (void *)sub_2322B8DEC();
    swift_bridgeObjectRelease();
    v14 = (void *)sub_2322B8DEC();
    swift_bridgeObjectRelease();
    v15 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v13, v14, 1);

    sub_2322B7F58();
    v16 = (void *)sub_2322B8DEC();
    swift_bridgeObjectRelease();
    v17 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_handler_, v16, 0, 0);

    objc_msgSend(v15, sel_addAction_, v17);
    objc_msgSend(v2, sel_presentViewController_animated_completion_, v15, 1, 0);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2322AF810(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  void *v14;
  void *v15;
  id v16;
  objc_class *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  id v22;
  id v23;
  _QWORD *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  id v28;
  id v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  id v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t ObjectType;
  objc_super v38;

  v35 = a1;
  ObjectType = swift_getObjectType();
  sub_23224BE78(0, &qword_255FACD78, (uint64_t (*)(uint64_t))sub_232245CCC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v34 - v5;
  sub_232245CCC();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v34 - v12;
  v36 = v1;
  v14 = *(void **)(v1
                 + OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_healthStore);
  if (v14)
  {
    v15 = (void *)objc_opt_self();
    v34 = v14;
    v16 = objc_msgSend(v15, sel_defaultManager);
    v17 = (objc_class *)type metadata accessor for VisionPrescriptionManualDataEntryImageSelectionHandler();
    v18 = (char *)objc_allocWithZone(v17);
    v19 = &v18[OBJC_IVAR____TtC21VisionHealthAppPlugin54VisionPrescriptionManualDataEntryImageSelectionHandler__selectedImageURL];
    v20 = sub_2322B8000();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v13, 1, 1, v20);
    sub_232262F20((uint64_t)v13, (uint64_t)v10);
    v21 = v18;
    sub_2322B8BDC();
    sub_232262F64((uint64_t)v13, (uint64_t (*)(_QWORD))sub_232245CCC);
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v19, v6, v3);
    *(_QWORD *)&v21[OBJC_IVAR____TtC21VisionHealthAppPlugin54VisionPrescriptionManualDataEntryImageSelectionHandler_fileManager] = v16;
    v22 = v16;

    v38.receiver = v21;
    v38.super_class = v17;
    v23 = objc_msgSendSuper2(&v38, sel_init);

    type metadata accessor for VisionPrescriptionManualDataEntryManager();
    v24 = (_QWORD *)swift_allocObject();
    v24[8] = 0;
    v25 = v34;
    v26 = v35;
    v24[2] = v34;
    v24[3] = 0;
    v27 = MEMORY[0x24BEE4AF8];
    v24[4] = v26;
    v24[5] = v27;
    type metadata accessor for VisionPrescriptionManualDataEntryContext();
    swift_allocObject();
    v28 = v25;
    v29 = v26;
    v30 = sub_2322867F8(v26, 2, v28);

    v24[6] = v30;
    v24[7] = v23;
    v31 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v32 = (_QWORD *)swift_allocObject();
    v32[2] = v31;
    v32[3] = v29;
    v32[4] = ObjectType;
    v33 = v29;
    swift_retain();
    sub_232292158(v33, (void (*)(uint64_t))sub_2322B4BC8, (uint64_t)v32);
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2322AFB08(int a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  void *v25;
  char v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  id v40;
  id v41;
  uint64_t v42;
  _QWORD v43[2];
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t aBlock;
  uint64_t v55;
  void *v56;
  void *v57;
  void *v58;
  uint64_t v59;

  v52 = a4;
  v50 = a3;
  v49 = sub_2322B8D14();
  v6 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v8 = (char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2322B8D2C();
  v51 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2322B8918();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x2349011D0](a2 + 16);
  if (result)
  {
    v17 = (void *)result;
    v46 = a1;
    v18 = MEMORY[0x24BDAC760];
    v47 = v9;
    v48 = v6;
    if (a1 == 6)
    {
      v19 = *(void **)(result
                     + OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_healthStore);
      if (!v19)
      {
        __break(1u);
        return result;
      }
      v20 = swift_allocObject();
      v21 = v52;
      *(_QWORD *)(v20 + 16) = v52;
      v58 = sub_2322B4BE4;
      v59 = v20;
      aBlock = v18;
      v55 = 1107296256;
      v56 = sub_232258D30;
      v57 = &unk_250115238;
      v22 = _Block_copy(&aBlock);
      v23 = v18;
      v24 = v19;
      swift_release();
      objc_msgSend(v24, sel_forceCloudSyncWithOptions_completion_, 2, v22);
      _Block_release(v22);

      v25 = v50;
      v26 = v46;
    }
    else
    {
      sub_2322B88E8();
      v27 = sub_2322B890C();
      v28 = sub_2322B8FFC();
      v29 = v28;
      if (os_log_type_enabled(v27, v28))
      {
        v30 = swift_slowAlloc();
        v45 = swift_slowAlloc();
        aBlock = v45;
        *(_DWORD *)v30 = 136315394;
        v44 = v30 + 4;
        v31 = sub_2322B9464();
        v53 = sub_232266EA0(v31, v32, &aBlock);
        sub_2322B923C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 12) = 2080;
        v43[1] = v30 + 14;
        LODWORD(v44) = v29;
        v33 = v46;
        LOBYTE(v53) = v46;
        v34 = sub_2322B8E34();
        v53 = sub_232266EA0(v34, v35, &aBlock);
        sub_2322B923C();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_232241000, v27, (os_log_type_t)v44, "[%s] Failed to save prescription: %s)", (uint8_t *)v30, 0x16u);
        v36 = v45;
        swift_arrayDestroy();
        MEMORY[0x234901170](v36, -1, -1);
        MEMORY[0x234901170](v30, -1, -1);

        v26 = v33;
        v21 = v52;
        (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
        v25 = v50;
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
        v25 = v50;
        v21 = v52;
        v26 = v46;
      }
      v23 = MEMORY[0x24BDAC760];
    }
    sub_23224C618(0, (unint64_t *)&qword_255FACCA0);
    v37 = (void *)sub_2322B90B0();
    v38 = swift_allocObject();
    *(_QWORD *)(v38 + 16) = v17;
    *(_BYTE *)(v38 + 24) = v26;
    *(_QWORD *)(v38 + 32) = v25;
    *(_QWORD *)(v38 + 40) = v21;
    v58 = sub_2322B4C18;
    v59 = v38;
    aBlock = v23;
    v55 = 1107296256;
    v56 = sub_23225ADE4;
    v57 = &unk_250115288;
    v39 = _Block_copy(&aBlock);
    v40 = v17;
    v41 = v25;
    swift_release();
    sub_2322B8D20();
    aBlock = MEMORY[0x24BEE4AF8];
    sub_232297F3C();
    sub_23224BE78(0, (unint64_t *)&qword_255FACCB0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_23225B070();
    v42 = v49;
    sub_2322B9278();
    MEMORY[0x2349007D4](0, v11, v8, v39);
    _Block_release(v39);

    (*(void (**)(char *, uint64_t))(v48 + 8))(v8, v42);
    return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v11, v47);
  }
  return result;
}

uint64_t sub_2322AFFF4(char a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24[2];

  v24[1] = *MEMORY[0x24BDAC8D0];
  v4 = sub_2322B8918();
  v5 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    sub_2322B88E8();
    v9 = a2;
    v10 = a2;
    v11 = sub_2322B890C();
    v12 = sub_2322B8FFC();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc();
      v21 = (_QWORD *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      v24[0] = v22;
      *(_DWORD *)v13 = 136315394;
      v14 = sub_2322B9464();
      v23 = sub_232266EA0(v14, v15, v24);
      sub_2322B923C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2112;
      if (a2)
      {
        v16 = a2;
        v17 = _swift_stdlib_bridgeErrorToNSError();
        v23 = v17;
        sub_2322B923C();
      }
      else
      {
        v23 = 0;
        sub_2322B923C();
        v17 = 0;
      }
      v18 = v21;
      *v21 = v17;

      _os_log_impl(&dword_232241000, v11, v12, "[%s] Failed to force cloud push: %@)", (uint8_t *)v13, 0x16u);
      sub_23224C2EC(0, (unint64_t *)&qword_255FABCA0, (unint64_t *)&qword_255FAF9C0);
      swift_arrayDestroy();
      MEMORY[0x234901170](v18, -1, -1);
      v19 = v22;
      swift_arrayDestroy();
      MEMORY[0x234901170](v19, -1, -1);
      MEMORY[0x234901170](v13, -1, -1);
    }
    else
    {

    }
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  return result;
}

void sub_2322B02A0(uint64_t a1, char a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_2322B8918();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void **)(a1
                 + OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_addToHealthButton);
  if (v10)
  {
    objc_msgSend(v10, sel_hidesBusyIndicator);
    if (a2 == 6)
    {
      sub_2322AE9E4(a3);
    }
    else
    {
      sub_2322B88E8();
      v11 = sub_2322B890C();
      v12 = sub_2322B8FFC();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = swift_slowAlloc();
        v20 = swift_slowAlloc();
        v22 = v20;
        *(_DWORD *)v13 = 136315394;
        v14 = sub_2322B9464();
        v21 = sub_232266EA0(v14, v15, &v22);
        sub_2322B923C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v13 + 12) = 2080;
        LOBYTE(v21) = a2;
        v16 = sub_2322B8E34();
        v21 = sub_232266EA0(v16, v17, &v22);
        sub_2322B923C();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_232241000, v11, v12, "[%s] Failed to save VRX: %s)", (uint8_t *)v13, 0x16u);
        v18 = v20;
        swift_arrayDestroy();
        MEMORY[0x234901170](v18, -1, -1);
        MEMORY[0x234901170](v13, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      sub_2322AF3CC(a2);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_2322B04CC(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  char *v6;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  unint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  void *v38;
  uint64_t v39;
  id v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  void *v46;
  char *v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  __int128 aBlock;
  __int128 v73;
  uint64_t (*v74)(uint64_t, unint64_t, uint64_t);
  _QWORD *v75;
  uint64_t v76;

  v6 = v5;
  v66 = a4;
  v67 = a5;
  ObjectType = swift_getObjectType();
  v11 = sub_2322B8918();
  v71 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v62 - v15;
  sub_2322B88E8();
  swift_bridgeObjectRetain_n();
  v17 = sub_2322B890C();
  v18 = sub_2322B8FF0();
  v69 = v18;
  v19 = os_log_type_enabled(v17, v18);
  v70 = v11;
  v68 = ObjectType;
  v65 = a2;
  if (v19)
  {
    v20 = a2;
    v21 = swift_slowAlloc();
    v63 = swift_slowAlloc();
    *(_QWORD *)&aBlock = v63;
    *(_DWORD *)v21 = 136315394;
    v64 = a1;
    v22 = sub_2322B9464();
    v76 = sub_232266EA0(v22, v23, (uint64_t *)&aBlock);
    sub_2322B923C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2080;
    if (a3)
      v24 = v20;
    else
      v24 = 0x296C696E28;
    if (a3)
      v25 = a3;
    else
      v25 = 0xE500000000000000;
    swift_bridgeObjectRetain();
    v26 = v24;
    a1 = v64;
    v76 = sub_232266EA0(v26, v25, (uint64_t *)&aBlock);
    v11 = v70;
    sub_2322B923C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_232241000, v17, (os_log_type_t)v69, "[%s] Ensuring uniqueness; firstName: %s",
      (uint8_t *)v21,
      0x16u);
    v27 = v63;
    swift_arrayDestroy();
    MEMORY[0x234901170](v27, -1, -1);
    MEMORY[0x234901170](v21, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v71 = *(_QWORD *)(v71 + 8);
  ((void (*)(char *, uint64_t))v71)(v16, v11);
  v28 = objc_msgSend(a1, sel_metadata);
  if (!v28)
  {
    aBlock = 0u;
    v73 = 0u;
LABEL_20:
    sub_232262F64((uint64_t)&aBlock, (uint64_t (*)(_QWORD))sub_232250ABC);
    goto LABEL_21;
  }
  v29 = v28;
  v30 = a3;
  v31 = (uint64_t *)MEMORY[0x24BDD4418];
  v32 = sub_2322B8DC8();

  v33 = *v31;
  v34 = sub_2322B8E1C();
  if (*(_QWORD *)(v32 + 16) && (v36 = sub_2322B26FC(v34, v35), (v37 & 1) != 0))
  {
    sub_232250B14(*(_QWORD *)(v32 + 56) + 32 * v36, (uint64_t)&aBlock);
  }
  else
  {
    aBlock = 0u;
    v73 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v73 + 1))
    goto LABEL_20;
  sub_23224C618(0, (unint64_t *)&qword_255FABCC8);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v38 = (void *)v76;
    v39 = swift_allocObject();
    *(_QWORD *)(v39 + 16) = MEMORY[0x24BEE4B08];
    v40 = objc_msgSend((id)objc_opt_self(), sel_predicateForObjectsWithMetadataKey_, v33);
    v71 = *(_QWORD *)&v6[OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_sampleType];
    v41 = (_QWORD *)swift_allocObject();
    v41[2] = v39;
    v41[3] = v6;
    v42 = v65;
    v41[4] = v38;
    v41[5] = v42;
    v41[6] = v30;
    v41[7] = a1;
    v43 = v67;
    v41[8] = v66;
    v41[9] = v43;
    v44 = a1;
    v45 = objc_allocWithZone(MEMORY[0x24BDD3F00]);
    v74 = sub_2322B4724;
    v75 = v41;
    *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v73 = sub_2322B265C;
    *((_QWORD *)&v73 + 1) = &unk_250115148;
    v46 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    v47 = v6;
    v48 = v38;
    v49 = v44;
    swift_retain();
    v50 = objc_msgSend(v45, sel_initWithSampleType_predicate_limit_sortDescriptors_resultsHandler_, v71, v40, 0, 0, v46);
    _Block_release(v46);
    swift_release();
    v51 = *(void **)&v47[OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_healthStore];
    if (v51)
    {
      objc_msgSend(v51, sel_executeQuery_, v50);

      swift_release();
    }
    else
    {
      __break(1u);
    }
    return;
  }
LABEL_21:
  sub_2322B88E8();
  v52 = sub_2322B890C();
  v53 = sub_2322B8FFC();
  if (os_log_type_enabled(v52, v53))
  {
    v54 = swift_slowAlloc();
    v55 = swift_slowAlloc();
    *(_QWORD *)&aBlock = v55;
    *(_DWORD *)v54 = 136315394;
    v56 = sub_2322B9464();
    v76 = sub_232266EA0(v56, v57, (uint64_t *)&aBlock);
    sub_2322B923C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v54 + 12) = 2080;
    v58 = sub_2322B8E1C();
    v76 = sub_232266EA0(v58, v59, (uint64_t *)&aBlock);
    sub_2322B923C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_232241000, v52, v53, "[%s] Ingested VRX has invalid type for metadata key %s", (uint8_t *)v54, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x234901170](v55, -1, -1);
    MEMORY[0x234901170](v54, -1, -1);

    v60 = v14;
    v61 = v70;
  }
  else
  {

    v60 = v14;
    v61 = v11;
  }
  ((void (*)(char *, uint64_t))v71)(v60, v61);
}

uint64_t sub_2322B0B44(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, void *a9, uint64_t a10, uint64_t a11)
{
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)();
  id v34;
  void *v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)();
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char *v53;
  unint64_t v54;
  id v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  unint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  BOOL v71;
  uint64_t v72;
  _QWORD *v73;
  BOOL v74;
  id v76;
  id v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char isUniquelyReferenced_nonNull_native;
  void *v84;
  void *v85;
  uint64_t v86;
  void *v87;
  char *v88;
  uint64_t v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  char *v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  char *v102;
  id v103;
  unint64_t *v104;
  uint64_t v105;
  _OWORD v106[2];
  __int128 aBlock;
  __int128 v108;
  uint64_t (*v109)();
  uint64_t v110;

  v16 = sub_2322B8D14();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v90 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_2322B8D2C();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v102 = (char *)&v90 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_2322B7E98();
  v24 = MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v90 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
    goto LABEL_71;
  v92 = v27;
  v96 = a6;
  v93 = v25;
  v94 = v24;
  v95 = a7;
  if (a2 >> 62)
    goto LABEL_73;
  v28 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (1)
  {
    v104 = (unint64_t *)(a4 + 16);
    v100 = v16;
    v99 = v17;
    v98 = v19;
    v97 = v20;
    v101 = v21;
    if (v28)
    {
      if (v28 >= 1)
      {
        v91 = a8;
        v29 = 0;
        v30 = a2 & 0xC000000000000001;
        v31 = *MEMORY[0x24BDD31A0];
        v32 = MEMORY[0x24BEE4AD8] + 8;
        v33 = sub_232250ABC;
        v103 = (id)v28;
        while (1)
        {
          if (v30)
            v34 = (id)MEMORY[0x2349009FC](v29, a2);
          else
            v34 = *(id *)(a2 + 8 * v29 + 32);
          v35 = v34;
          v36 = objc_msgSend(v34, sel_metadata);
          if (v36)
          {
            v37 = v36;
            v38 = sub_2322B8DC8();

            v39 = sub_2322B8E1C();
            if (*(_QWORD *)(v38 + 16) && (v41 = sub_2322B26FC(v39, v40), (v42 & 1) != 0))
            {
              sub_232250B14(*(_QWORD *)(v38 + 56) + 32 * v41, (uint64_t)&aBlock);
            }
            else
            {
              aBlock = 0u;
              v108 = 0u;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*((_QWORD *)&v108 + 1))
            {
              if ((swift_dynamicCast() & 1) != 0)
              {
                v43 = v30;
                v44 = a2;
                v45 = v32;
                v46 = v31;
                v47 = v33;
                v49 = *((_QWORD *)&v106[0] + 1);
                v48 = *(_QWORD *)&v106[0];
                swift_beginAccess();
                v50 = v48;
                v33 = v47;
                v31 = v46;
                v32 = v45;
                a2 = v44;
                v30 = v43;
                v28 = (uint64_t)v103;
                sub_2322B3908((uint64_t *)v106, v50, v49);
                swift_endAccess();

                swift_bridgeObjectRelease();
              }
              else
              {

              }
              goto LABEL_9;
            }
          }
          else
          {
            aBlock = 0u;
            v108 = 0u;
          }

          sub_232262F64((uint64_t)&aBlock, (uint64_t (*)(_QWORD))v33);
LABEL_9:
          if (v28 == ++v29)
          {
            swift_bridgeObjectRelease();
            v16 = v100;
            v17 = v99;
            v19 = v98;
            v20 = v97;
            v21 = v101;
            a8 = v91;
            goto LABEL_24;
          }
        }
      }
      __break(1u);
      goto LABEL_75;
    }
    swift_bridgeObjectRelease();
LABEL_24:
    if ((sub_2322B47C0(a2, v96) & 1) != 0)
    {
      LOBYTE(a2) = 1;
      goto LABEL_71;
    }
    v51 = v95;
    if (!a8)
      v51 = 0;
    v52 = 0xE000000000000000;
    if (a8)
      v52 = a8;
    *(_QWORD *)&aBlock = v51;
    *((_QWORD *)&aBlock + 1) = v52;
    swift_bridgeObjectRetain();
    v53 = v92;
    sub_2322B7E74();
    sub_232258314();
    a2 = MEMORY[0x24BEE0D00];
    v21 = sub_2322B9254();
    v20 = v54;
    (*(void (**)(char *, uint64_t))(v93 + 8))(v53, v94);
    swift_bridgeObjectRelease();
    v55 = objc_msgSend(a9, sel_metadata);
    v103 = a9;
    if (!v55)
    {
      aBlock = 0u;
      v108 = 0u;
LABEL_39:
      sub_232262F64((uint64_t)&aBlock, (uint64_t (*)(_QWORD))sub_232250ABC);
      goto LABEL_40;
    }
    v56 = v55;
    v57 = sub_2322B8DC8();

    v58 = sub_2322B8E1C();
    if (*(_QWORD *)(v57 + 16) && (v60 = sub_2322B26FC(v58, v59), (v61 & 1) != 0))
    {
      sub_232250B14(*(_QWORD *)(v57 + 56) + 32 * v60, (uint64_t)&aBlock);
    }
    else
    {
      aBlock = 0u;
      v108 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!*((_QWORD *)&v108 + 1))
      goto LABEL_39;
    if ((swift_dynamicCast() & 1) != 0)
    {
      v62 = (char *)&loc_2322B101C + dword_2322B1944[sub_232269BC8(*(unint64_t *)&v106[0])];
      __asm { BR              X10 }
    }
LABEL_40:
    v63 = HIBYTE(v20) & 0xF;
    if ((v20 & 0x2000000000000000) == 0)
      v63 = v21 & 0xFFFFFFFFFFFFLL;
    if (v63)
    {
      if (qword_255FAB900 == -1)
      {
LABEL_44:
        sub_2322B7F58();
        sub_232268A7C();
        v64 = swift_allocObject();
        *(_OWORD *)(v64 + 16) = xmmword_2322C0E70;
        *(_QWORD *)(v64 + 56) = a2;
        *(_QWORD *)(v64 + 64) = sub_23224EC60();
        *(_QWORD *)(v64 + 32) = v21;
        *(_QWORD *)(v64 + 40) = v20;
        v21 = sub_2322B8DF8();
        v19 = v65;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_48;
      }
LABEL_75:
      swift_once();
      goto LABEL_44;
    }
    swift_bridgeObjectRelease();
    if (qword_255FAB900 != -1)
      swift_once();
    v21 = sub_2322B7F58();
    v19 = v66;
LABEL_48:
    swift_bridgeObjectRetain();
    v67 = v104;
    swift_beginAccess();
    a2 = *v67;
    if (!*(_QWORD *)(*v67 + 16))
      break;
    a8 = 0;
    v20 = (unint64_t)v19;
    a4 = v21;
    while (1)
    {
      sub_2322B9434();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2322B8E7C();
      v68 = sub_2322B944C();
      v69 = -1 << *(_BYTE *)(a2 + 32);
      v16 = v68 & ~v69;
      if (((*(_QWORD *)(a2 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
        goto LABEL_66;
      v17 = *(_QWORD *)(a2 + 48);
      v70 = (_QWORD *)(v17 + 16 * v16);
      v71 = *v70 == a4 && v70[1] == v20;
      if (!v71 && (sub_2322B93F8() & 1) == 0)
      {
        v72 = ~v69;
        while (1)
        {
          v16 = (v16 + 1) & v72;
          if (((*(_QWORD *)(a2 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
            break;
          v73 = (_QWORD *)(v17 + 16 * v16);
          v74 = *v73 == a4 && v73[1] == v20;
          if (v74 || (sub_2322B93F8() & 1) != 0)
            goto LABEL_63;
        }
LABEL_66:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_69;
      }
LABEL_63:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (__OFADD__(a8++, 1))
        break;
      *(_QWORD *)&aBlock = v21;
      *((_QWORD *)&aBlock + 1) = v19;
      swift_bridgeObjectRetain();
      sub_2322B8EAC();
      *(_QWORD *)&v106[0] = a8;
      sub_2322B93C8();
      sub_2322B8EAC();
      swift_bridgeObjectRelease();
      v20 = *((_QWORD *)&aBlock + 1);
      a4 = aBlock;
      a2 = *v104;
      if (!*(_QWORD *)(*v104 + 16))
        goto LABEL_68;
    }
    __break(1u);
LABEL_73:
    swift_bridgeObjectRetain();
    v28 = sub_2322B9368();
  }
  a4 = v21;
  v20 = (unint64_t)v19;
LABEL_68:
  swift_bridgeObjectRelease();
LABEL_69:
  swift_bridgeObjectRelease();
  v76 = v103;
  v77 = objc_msgSend(v103, sel_metadata);
  v21 = v101;
  if (!v77)
  {
    swift_bridgeObjectRelease();
    __break(1u);
    JUMPOUT(0x2322B1944);
  }
  v78 = v77;
  a2 = MEMORY[0x24BEE0D00];
  v79 = sub_2322B8DC8();

  v80 = sub_2322B8E1C();
  v82 = v81;
  *((_QWORD *)&v108 + 1) = a2;
  *(_QWORD *)&aBlock = a4;
  *((_QWORD *)&aBlock + 1) = v20;
  sub_23224C608(&aBlock, v106);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v105 = v79;
  sub_2322B2EB4(v106, v80, v82, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v84 = (void *)sub_2322B8DBC();
  swift_bridgeObjectRelease();
  objc_msgSend(v76, sel__setMetadata_, v84);

  LOBYTE(a2) = 0;
  v16 = v100;
  v17 = v99;
  v19 = v98;
  v20 = v97;
LABEL_71:
  sub_23224C618(0, (unint64_t *)&qword_255FACCA0);
  v85 = (void *)sub_2322B90B0();
  v86 = swift_allocObject();
  *(_QWORD *)(v86 + 16) = a10;
  *(_QWORD *)(v86 + 24) = a11;
  *(_BYTE *)(v86 + 32) = a2;
  v109 = sub_2322B4798;
  v110 = v86;
  *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v108 = sub_23225ADE4;
  *((_QWORD *)&v108 + 1) = &unk_250115198;
  v87 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v88 = v102;
  sub_2322B8D20();
  *(_QWORD *)&aBlock = MEMORY[0x24BEE4AF8];
  sub_232297F3C();
  sub_23224BE78(0, (unint64_t *)&qword_255FACCB0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_23225B070();
  sub_2322B9278();
  MEMORY[0x2349007D4](0, v88, v19, v87);
  _Block_release(v87);

  (*(void (**)(char *, unint64_t))(v17 + 8))(v19, v16);
  return (*(uint64_t (**)(char *, unint64_t))(v21 + 8))(v88, v20);
}

Swift::Int __swiftcall VisionPrescriptionAddRecordConfirmationViewController.numberOfSections(in:)(UITableView *in)
{
  return 1;
}

Swift::Int __swiftcall VisionPrescriptionAddRecordConfirmationViewController.tableView(_:numberOfRowsInSection:)(UITableView *_, Swift::Int numberOfRowsInSection)
{
  return 1;
}

void *VisionPrescriptionAddRecordConfirmationViewController.tableView(_:cellForRowAt:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  unint64_t v28;
  char v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v37;
  __int128 v38;
  __int128 v39;

  v2 = v1;
  type metadata accessor for VisionPrescriptionPreviewTableViewCell();
  v4 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_defaultReuseIdentifier);
  if (!v4)
  {
    sub_2322B8E1C();
    v4 = (id)sub_2322B8DEC();
    swift_bridgeObjectRelease();
  }
  v5 = (void *)sub_2322B8108();
  v6 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v4, v5);

  v37 = swift_dynamicCastClassUnconditional();
  v7 = OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_visionPrescription;
  v8 = objc_msgSend(*(id *)(v2+ OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_visionPrescription), sel_rightEye);
  v9 = 0;
  v10 = 0;
  if (v8)
  {
    v11 = v8;
    v12 = objc_msgSend(v8, sel_sphere);
    v13 = objc_msgSend((id)objc_opt_self(), sel_diopterUnit);
    objc_msgSend(v12, sel_doubleValueForUnit_, v13);
    v10 = v14;

  }
  v15 = objc_msgSend(*(id *)(v2 + v7), sel_leftEye);
  if (v15)
  {
    v16 = v15;
    v17 = objc_msgSend(v15, sel_sphere);
    v18 = objc_msgSend((id)objc_opt_self(), sel_diopterUnit);
    objc_msgSend(v17, sel_doubleValueForUnit_, v18);
    v9 = v19;

  }
  v20 = *(void **)(v2 + v7);
  v21 = v6;
  v22 = objc_msgSend(v20, sel_metadata);
  if (!v22)
  {
    v38 = 0u;
    v39 = 0u;
    v27 = (void *)v37;
    goto LABEL_15;
  }
  v23 = v22;
  v24 = sub_2322B8DC8();

  v25 = sub_2322B8E1C();
  v27 = (void *)v37;
  if (!*(_QWORD *)(v24 + 16) || (v28 = sub_2322B26FC(v25, v26), (v29 & 1) == 0))
  {
    v38 = 0u;
    v39 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  sub_232250B14(*(_QWORD *)(v24 + 56) + 32 * v28, (uint64_t)&v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v39 + 1))
  {
LABEL_15:
    sub_232262F64((uint64_t)&v38, (uint64_t (*)(_QWORD))sub_232250ABC);
    goto LABEL_16;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    v30 = (void *)sub_2322B8DEC();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
LABEL_16:
  v30 = 0;
LABEL_17:
  objc_msgSend(v27, sel_setPrimaryText_, v30);

  if (qword_255FAB900 != -1)
    swift_once();
  sub_2322B7F58();
  sub_232268A7C();
  v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_2322C0E50;
  v32 = MEMORY[0x24BEE13C8];
  v33 = MEMORY[0x24BEE1448];
  *(_QWORD *)(v31 + 56) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(v31 + 64) = v33;
  *(_QWORD *)(v31 + 32) = v10;
  *(_QWORD *)(v31 + 96) = v32;
  *(_QWORD *)(v31 + 104) = v33;
  *(_QWORD *)(v31 + 72) = v9;
  v34 = v21;
  sub_2322B8E28();
  swift_bridgeObjectRelease();
  v35 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  objc_msgSend(v27, sel_setSecondaryText_, v35, 0xE000000000000000);

  return v27;
}

Swift::String_optional __swiftcall VisionPrescriptionAddRecordConfirmationViewController.tableView(_:titleForHeaderInSection:)(UITableView *_, Swift::Int titleForHeaderInSection)
{
  uint64_t v2;
  void *v3;
  Swift::String_optional result;

  if (titleForHeaderInSection)
  {
    v2 = 0;
    v3 = 0;
  }
  else
  {
    if (qword_255FAB900 != -1)
      swift_once();
    v2 = sub_2322B7F58();
  }
  result.value._object = v3;
  result.value._countAndFlagsBits = v2;
  return result;
}

Swift::String_optional __swiftcall VisionPrescriptionAddRecordConfirmationViewController.tableView(_:titleForFooterInSection:)(UITableView *_, Swift::Int titleForFooterInSection)
{
  uint64_t v2;
  void *v3;
  Swift::String_optional result;

  v2 = 0;
  v3 = 0;
  result.value._object = v3;
  result.value._countAndFlagsBits = v2;
  return result;
}

double VisionPrescriptionAddRecordConfirmationViewController.tableView(_:estimatedHeightForRowAt:)()
{
  return *MEMORY[0x24BEBE770];
}

double VisionPrescriptionAddRecordConfirmationViewController.tableView(_:heightForHeaderInSection:)(uint64_t a1, uint64_t a2)
{
  double result;

  result = *MEMORY[0x24BEBE770];
  if (!a2)
    return 10.0;
  return result;
}

double VisionPrescriptionAddRecordConfirmationViewController.tableView(_:heightForFooterInSection:)()
{
  return 0.0;
}

void __swiftcall VisionPrescriptionAddRecordConfirmationViewController.tableView(_:viewForFooterInSection:)(UIView_optional *__return_ptr retstr, UITableView *_, Swift::Int viewForFooterInSection)
{
  ;
}

id VisionPrescriptionAddRecordConfirmationViewController.__allocating_init(title:detailText:symbolName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  objc_class *v6;
  void *v9;
  void *v10;
  void *v11;
  id v12;

  v9 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  if (!a4)
  {
    v10 = 0;
    if (a6)
      goto LABEL_3;
LABEL_5:
    v11 = 0;
    goto LABEL_6;
  }
  v10 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  if (!a6)
    goto LABEL_5;
LABEL_3:
  v11 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
LABEL_6:
  v12 = objc_msgSend(objc_allocWithZone(v6), sel_initWithTitle_detailText_symbolName_, v9, v10, v11);

  return v12;
}

void VisionPrescriptionAddRecordConfirmationViewController.init(title:detailText:symbolName:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id VisionPrescriptionAddRecordConfirmationViewController.__allocating_init(title:detailText:icon:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  objc_class *v5;
  objc_class *v6;
  void *v9;
  void *v10;
  id v11;

  v6 = v5;
  v9 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  if (a4)
  {
    v10 = (void *)sub_2322B8DEC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0;
  }
  v11 = objc_msgSend(objc_allocWithZone(v6), sel_initWithTitle_detailText_icon_, v9, v10, a5);

  return v11;
}

void VisionPrescriptionAddRecordConfirmationViewController.init(title:detailText:icon:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id VisionPrescriptionAddRecordConfirmationViewController.__allocating_init(title:detailText:symbolName:adoptTableViewScrollView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  objc_class *v7;
  objc_class *v8;
  void *v12;
  void *v13;
  void *v14;
  id v15;

  v8 = v7;
  v12 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  if (!a4)
  {
    v13 = 0;
    if (a6)
      goto LABEL_3;
LABEL_5:
    v14 = 0;
    goto LABEL_6;
  }
  v13 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  if (!a6)
    goto LABEL_5;
LABEL_3:
  v14 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
LABEL_6:
  v15 = objc_msgSend(objc_allocWithZone(v8), sel_initWithTitle_detailText_symbolName_adoptTableViewScrollView_, v12, v13, v14, a7 & 1);

  return v15;
}

void VisionPrescriptionAddRecordConfirmationViewController.init(title:detailText:symbolName:adoptTableViewScrollView:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id VisionPrescriptionAddRecordConfirmationViewController.__allocating_init(title:detailText:icon:adoptTableViewScrollView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6)
{
  objc_class *v6;
  objc_class *v7;
  void *v11;
  void *v12;
  id v13;

  v7 = v6;
  v11 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  if (a4)
  {
    v12 = (void *)sub_2322B8DEC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = 0;
  }
  v13 = objc_msgSend(objc_allocWithZone(v7), sel_initWithTitle_detailText_icon_adoptTableViewScrollView_, v11, v12, a5, a6 & 1);

  return v13;
}

void VisionPrescriptionAddRecordConfirmationViewController.init(title:detailText:icon:adoptTableViewScrollView:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id VisionPrescriptionAddRecordConfirmationViewController.__deallocating_deinit()
{
  return sub_2322B25A0(type metadata accessor for VisionPrescriptionAddRecordConfirmationViewController);
}

id sub_2322B25A0(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_2322B265C(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  void (*v7)(id, uint64_t, void *);
  id v8;
  id v9;

  v5 = a3;
  v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_23224C618(0, (unint64_t *)&unk_255FAF970);
    v5 = sub_2322B8F30();
  }
  swift_retain();
  v8 = a2;
  v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

unint64_t sub_2322B26FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2322B9434();
  sub_2322B8E7C();
  v4 = sub_2322B944C();
  return sub_2322B3180(a1, a2, v4);
}

unint64_t sub_2322B2760(unsigned __int8 a1)
{
  uint64_t v2;

  sub_2322B9434();
  sub_2322B9440();
  v2 = sub_2322B944C();
  return sub_2322B3260(a1, v2);
}

unint64_t sub_2322B27B8(uint64_t a1)
{
  uint64_t v2;

  sub_2322B8E1C();
  sub_2322B9434();
  sub_2322B8E7C();
  v2 = sub_2322B944C();
  swift_bridgeObjectRelease();
  return sub_2322B3300(a1, v2);
}

unint64_t sub_2322B2838(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2322B9164();
  return sub_2322B3474(a1, v2);
}

unint64_t sub_2322B286C(uint64_t a1)
{
  uint64_t v2;

  sub_2322B8E1C();
  sub_2322B9434();
  sub_2322B8E7C();
  v2 = sub_2322B944C();
  swift_bridgeObjectRelease();
  return sub_2322B3300(a1, v2);
}

uint64_t sub_2322B28F8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  sub_23228ED18();
  v6 = sub_2322B9380();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_23224C608(v24, v35);
      }
      else
      {
        sub_232250B14((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_2322B9434();
      sub_2322B8E7C();
      result = sub_2322B944C();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_23224C608(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2322B2BF0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  char v26;
  void *v27;
  id v28;
  uint64_t v29;
  int64_t v30;
  _QWORD *v31;

  v3 = v2;
  v5 = *v2;
  sub_23228EC6C();
  result = sub_2322B9380();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v31 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v30 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v19 >= v30)
          goto LABEL_33;
        v20 = v31[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v30)
            goto LABEL_33;
          v20 = v31[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v30)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v29 = 1 << *(_BYTE *)(v5 + 32);
              if (v29 >= 64)
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v31 = -1 << v29;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v31[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_42;
                if (v8 >= v30)
                  goto LABEL_33;
                v20 = v31[v8];
                ++v21;
                if (v20)
                  goto LABEL_30;
              }
            }
            v8 = v21;
          }
        }
LABEL_30:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v26 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v18);
      v27 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0)
        v28 = v27;
      sub_2322B9434();
      sub_2322B9440();
      result = sub_2322B944C();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v24 = v15 == v23;
          if (v15 == v23)
            v15 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v16) = v26;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v16) = v27;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

_OWORD *sub_2322B2EB4(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_2322B26FC(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        sub_232258500((uint64_t)v19);
        return sub_23224C608(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_2322B358C();
      goto LABEL_7;
    }
    sub_2322B28F8(v15, a4 & 1);
    v21 = sub_2322B26FC(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_2322B3118(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_2322B9428();
  __break(1u);
  return result;
}

void sub_2322B2FE4(uint64_t a1, unsigned __int8 a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v8 = *v3;
  v10 = sub_2322B2760(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_2322B376C();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];

      *(_QWORD *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v16[6] + v10) = a2;
    *(_QWORD *)(v16[7] + 8 * v10) = a1;
    v20 = v16[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return;
    }
    goto LABEL_14;
  }
  sub_2322B2BF0(v13, a3 & 1);
  v18 = sub_2322B2760(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    v10 = v18;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_2322B9428();
  __break(1u);
}

_OWORD *sub_2322B3118(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_23224C608(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

unint64_t sub_2322B3180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_2322B93F8() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_2322B93F8() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_2322B3260(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_2322B3300(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_2322B8E1C();
    v8 = v7;
    if (v6 == sub_2322B8E1C() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_2322B93F8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_2322B8E1C();
          v15 = v14;
          if (v13 == sub_2322B8E1C() && v15 == v16)
            break;
          v18 = sub_2322B93F8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_2322B3474(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v6;
  char v7;
  uint64_t v8;
  id v9;
  char v10;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_23224C618(0, (unint64_t *)&unk_255FAF960);
    v6 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v7 = sub_2322B9170();

    if ((v7 & 1) == 0)
    {
      v8 = ~v4;
      for (i = (i + 1) & v8; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v8)
      {
        v9 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v10 = sub_2322B9170();

        if ((v10 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

void *sub_2322B358C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  sub_23228ED18();
  v2 = *v0;
  v3 = sub_2322B9374();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_232250B14(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_23224C608(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_2322B376C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  sub_23228EC6C();
  v2 = *v0;
  v3 = sub_2322B9374();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(void **)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    result = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_2322B3908(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_2322B9434();
  swift_bridgeObjectRetain();
  sub_2322B8E7C();
  v8 = sub_2322B944C();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_2322B93F8() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_2322B93F8() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_2322B3D8C(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_2322B3AB4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  sub_232270C98();
  v3 = sub_2322B929C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_2322B9434();
      sub_2322B8E7C();
      result = sub_2322B944C();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_2322B3D8C(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_2322B3AB4();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_2322B3F24();
      goto LABEL_22;
    }
    sub_2322B40D0();
  }
  v11 = *v4;
  sub_2322B9434();
  sub_2322B8E7C();
  result = sub_2322B944C();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_2322B93F8(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_2322B941C();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_2322B93F8();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

void *sub_2322B3F24()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_232270C98();
  v2 = *v0;
  v3 = sub_2322B9290();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_2322B40D0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  sub_232270C98();
  v3 = sub_2322B929C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_2322B9434();
    swift_bridgeObjectRetain();
    sub_2322B8E7C();
    result = sub_2322B944C();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

id sub_2322B4378(void *a1, void *a2, uint64_t a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  objc_super v26;

  *(_QWORD *)&v3[OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_addToHealthButton] = 0;
  v7 = OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_healthStore;
  *(_QWORD *)&v3[OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_healthStore] = 0;
  v8 = OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_profileStore;
  *(_QWORD *)&v3[OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_profileStore] = 0;
  v9 = OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_samplePredicate;
  *(_QWORD *)&v3[OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_samplePredicate] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_visionPrescription] = a1;
  v10 = *(void **)&v3[v7];
  *(_QWORD *)&v3[v7] = a2;
  v11 = v3;
  v12 = a1;
  v13 = a2;

  sub_23225B0E8(a3, (uint64_t)&v11[OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_pinnedContentManager]);
  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3E40]), sel_initWithHealthStore_, v13);
  v15 = *(void **)&v3[v8];
  *(_QWORD *)&v3[v8] = v14;

  sub_23224C618(0, (unint64_t *)&unk_255FAF960);
  v16 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_visionPrescriptionType);
  *(_QWORD *)&v11[OBJC_IVAR____TtC21VisionHealthAppPlugin53VisionPrescriptionAddRecordConfirmationViewController_sampleType] = v16;
  v17 = objc_msgSend((id)objc_opt_self(), sel_predicateForObjectsWithMetadataKey_, *MEMORY[0x24BDD4418]);
  v18 = *(void **)&v3[v9];
  *(_QWORD *)&v3[v9] = v17;

  v19 = (id)HKHealthUIFrameworkBundle();
  v20 = (void *)sub_2322B8DEC();
  v21 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v20, v19);

  if (qword_255FAB900 != -1)
    swift_once();
  sub_2322B7F58();
  v22 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  sub_2322B7F58();
  v23 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  v26.receiver = v11;
  v26.super_class = (Class)type metadata accessor for VisionPrescriptionAddRecordConfirmationViewController();
  v24 = objc_msgSendSuper2(&v26, sel_initWithTitle_detailText_icon_adoptTableViewScrollView_, v22, v23, v21, 1, 0xE000000000000000);

  sub_232258500(a3);
  return v24;
}

uint64_t type metadata accessor for VisionPrescriptionAddRecordConfirmationViewController()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for VisionPrescriptionPreviewTableViewCell()
{
  return objc_opt_self();
}

uint64_t sub_2322B46B4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2322B46D8()
{
  id *v0;

  swift_release();

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2322B4724(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_2322B0B44(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), *(void **)(v3 + 56), *(_QWORD *)(v3 + 64), *(_QWORD *)(v3 + 72));
}

uint64_t sub_2322B475C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2322B476C()
{
  return swift_release();
}

uint64_t sub_2322B4774()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2322B4798()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(*(unsigned __int8 *)(v0 + 32));
}

uint64_t sub_2322B47C0(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  uint64_t j;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  unsigned int v21;
  void *v23;
  __int128 v24;
  __int128 v25;

  *(_QWORD *)&v24 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_2322B9368();
    v3 = result;
    if (!result)
      goto LABEL_19;
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (!v3)
      goto LABEL_19;
  }
  if (v3 < 1)
  {
    __break(1u);
    return result;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    for (i = 0; i != v3; ++i)
    {
      MEMORY[0x2349009FC](i, a1);
      objc_opt_self();
      if (swift_dynamicCastObjCClass())
      {
        MEMORY[0x234900630]();
        if (*(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_2322B8F48();
        sub_2322B8F54();
        sub_2322B8F3C();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    for (j = 0; j != v3; ++j)
    {
      v7 = *(void **)(a1 + 8 * j + 32);
      objc_opt_self();
      if (swift_dynamicCastObjCClass())
      {
        MEMORY[0x234900630](v7);
        if (*(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_2322B8F48();
        sub_2322B8F54();
        sub_2322B8F3C();
      }
    }
  }
LABEL_19:
  swift_bridgeObjectRelease();
  v8 = v24;
  if ((unint64_t)v24 >> 62)
    goto LABEL_40;
  v9 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v9)
  {
    v10 = 4;
    while (1)
    {
      v11 = (v8 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2349009FC](v10 - 4, v8) : *(id *)(v8 + 8 * v10);
      v12 = v11;
      v13 = v10 - 3;
      if (__OFADD__(v10 - 4, 1))
        break;
      v14 = objc_msgSend(v11, sel_metadata);
      if (!v14)
      {
        v24 = 0u;
        v25 = 0u;
LABEL_23:

        sub_232262F64((uint64_t)&v24, (uint64_t (*)(_QWORD))sub_232250ABC);
        goto LABEL_24;
      }
      v15 = v14;
      v16 = sub_2322B8DC8();

      v17 = sub_2322B8E1C();
      if (*(_QWORD *)(v16 + 16) && (v19 = sub_2322B26FC(v17, v18), (v20 & 1) != 0))
      {
        sub_232250B14(*(_QWORD *)(v16 + 56) + 32 * v19, (uint64_t)&v24);
      }
      else
      {
        v24 = 0u;
        v25 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!*((_QWORD *)&v25 + 1))
        goto LABEL_23;
      sub_23224C618(0, (unint64_t *)&qword_255FABCC8);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v21 = objc_msgSend(v23, sel_isEqualToData_, a2);

        if (v21)
        {
          swift_bridgeObjectRelease();
          return 1;
        }
      }
      else
      {

      }
LABEL_24:
      ++v10;
      if (v13 == v9)
        goto LABEL_41;
    }
    __break(1u);
LABEL_40:
    swift_bridgeObjectRetain();
    v9 = sub_2322B9368();
    swift_bridgeObjectRelease();
  }
LABEL_41:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_2322B4B78()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2322B4B9C()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2322B4BC8(int a1)
{
  uint64_t v1;

  return sub_2322AFB08(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_2322B4BD4()
{
  return swift_deallocObject();
}

uint64_t sub_2322B4BE4(char a1, void *a2)
{
  return sub_2322AFFF4(a1, a2);
}

uint64_t sub_2322B4BEC()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_2322B4C18()
{
  uint64_t v0;

  sub_2322B02A0(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_2322B4C28(uint64_t a1)
{
  uint64_t v2;

  sub_23224BE78(0, &qword_255FAC628, (uint64_t (*)(uint64_t))MEMORY[0x24BE42678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2322B4C7C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_2322B4CA0(uint64_t a1)
{
  uint64_t v1;

  sub_2322AEEC8(a1, *(void **)(v1 + 16));
}

uint64_t sub_2322B4CA8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_2322B4CCC(void *a1)
{
  uint64_t v1;

  return sub_2322AE740(a1, *(char **)(v1 + 16));
}

void sub_2322B4CD4(char a1)
{
  uint64_t v1;

  sub_2322AE800(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_2322B4D08(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  id v11;
  uint64_t v12;
  _QWORD v14[2];

  v2 = v1;
  v4 = sub_2322B8864();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + 24) = 0;
  sub_2322B81A4();
  swift_allocObject();
  *(_QWORD *)(v1 + 32) = sub_2322B8198();
  v8 = v1 + OBJC_IVAR____TtC21VisionHealthAppPlugin34VisionPrescriptionAnalyticsContext_demographicsData;
  v9 = sub_2322B860C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *(_QWORD *)(v2 + 16) = a1;
  sub_2322B887C();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x24BE458A0];
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BE45878], v4);
  sub_23225AFFC();
  v11 = a1;
  sub_2322B90B0();
  v14[1] = sub_2322B8870();
  swift_allocObject();
  swift_weakInit();
  sub_232245044(&qword_255FAFB18, v10, MEMORY[0x24BE45898]);
  v12 = sub_2322B8CFC();

  swift_release();
  swift_release();
  *(_QWORD *)(v2 + 24) = v12;
  swift_release();
  return v2;
}

uint64_t sub_2322B4EB4()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];

  sub_2322846CC();
  MEMORY[0x24BDAC7A8](v0);
  v2 = &v7[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = result;
    swift_retain();
    sub_2322B8180();
    swift_release();
    v5 = sub_2322B860C();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v2, 1, 1, v5);
    v6 = v4 + OBJC_IVAR____TtC21VisionHealthAppPlugin34VisionPrescriptionAnalyticsContext_demographicsData;
    swift_beginAccess();
    sub_2322B5DF0((uint64_t)v2, v6);
    swift_endAccess();
    swift_retain();
    sub_2322B818C();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_2322B4FCC(void *a1, uint64_t a2, void (*a3)(char *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  uint64_t Strong;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v22;
  void (*v23)(char *);

  v23 = a3;
  sub_2322846CC();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v22 - v8;
  v10 = sub_2322B7F1C();
  MEMORY[0x24BDAC7A8](v10);
  v11 = sub_2322B860C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = objc_msgSend(a1, sel_dateOfBirthComponents);
  sub_2322B7F10();

  v16 = objc_msgSend(a1, sel_biologicalSexObject);
  objc_msgSend(v16, sel_biologicalSex);

  sub_2322B8600();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v18 = Strong;
    swift_retain();
    sub_2322B8180();
    swift_release();
    v19 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v19(v9, v14, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    sub_2322B5DAC((uint64_t)v9, (uint64_t)v7);
    v20 = v18 + OBJC_IVAR____TtC21VisionHealthAppPlugin34VisionPrescriptionAnalyticsContext_demographicsData;
    swift_beginAccess();
    sub_2322B5DF0((uint64_t)v7, v20);
    swift_endAccess();
    swift_retain();
    sub_2322B818C();
    swift_release();
    swift_release();
  }
  else
  {
    v19 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  }
  v19(v9, v14, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  v23(v9);
  sub_232284720((uint64_t)v9);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_2322B5264(int a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  _QWORD *v27;
  void *v28;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD aBlock[6];

  sub_2322846CC();
  v8 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v30 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v30 - v14;
  v16 = sub_2322B860C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = swift_allocObject();
  *(_BYTE *)(v20 + 16) = a1;
  *(_QWORD *)(v20 + 24) = a2;
  *(_QWORD *)(v20 + 32) = a3;
  v34 = v20;
  *(_BYTE *)(v20 + 40) = a4;
  swift_bridgeObjectRetain_n();
  if (HKImproveHealthAndActivityAnalyticsAllowed())
  {
    v30 = a2;
    v31 = a4;
    v21 = v33;
    sub_2322B8180();
    v32 = a3;
    v22 = v21 + OBJC_IVAR____TtC21VisionHealthAppPlugin34VisionPrescriptionAnalyticsContext_demographicsData;
    swift_beginAccess();
    v23 = v22;
    v24 = v32;
    sub_232270F98(v23, (uint64_t)v15);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    {
      sub_232284720((uint64_t)v15);
      sub_2322B818C();
      v25 = *(void **)(v33 + 16);
      v26 = swift_allocObject();
      swift_weakInit();
      v27 = (_QWORD *)swift_allocObject();
      v27[2] = v26;
      v27[3] = sub_2322B5E58;
      v27[4] = v34;
      aBlock[4] = sub_2322B5E74;
      aBlock[5] = v27;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_2322561FC;
      aBlock[3] = &unk_250115468;
      v28 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v25, sel_hk_fetchExistingDemographicInformationWithCompletion_, v28);
      _Block_release(v28);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
      sub_2322B818C();
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v13, v19, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
      sub_232270F98((uint64_t)v13, (uint64_t)v10);
      type metadata accessor for VisionPrescriptionManualDataEntryAnalyticsEvent();
      swift_allocObject();
      swift_bridgeObjectRetain();
      aBlock[0] = sub_232283FD8((uint64_t)v10, a1, v30, v24, v31);
      sub_232245044(&qword_255FAFB10, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryAnalyticsEvent, (uint64_t)&unk_2322C2BCC);
      sub_2322B81B0();
      swift_release();
      sub_232284720((uint64_t)v13);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v13, 1, 1, v16);
    sub_232270F98((uint64_t)v13, (uint64_t)v10);
    type metadata accessor for VisionPrescriptionManualDataEntryAnalyticsEvent();
    swift_allocObject();
    swift_bridgeObjectRetain();
    aBlock[0] = sub_232283FD8((uint64_t)v10, a1, a2, a3, a4);
    sub_232245044(&qword_255FAFB10, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryAnalyticsEvent, (uint64_t)&unk_2322C2BCC);
    sub_2322B81B0();
    swift_release();
    sub_232284720((uint64_t)v13);
  }
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_2322B5684(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v10;
  char *v11;
  _QWORD v13[2];

  sub_2322846CC();
  MEMORY[0x24BDAC7A8]();
  v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232270F98(a1, (uint64_t)v11);
  type metadata accessor for VisionPrescriptionManualDataEntryAnalyticsEvent();
  swift_allocObject();
  swift_bridgeObjectRetain();
  v13[1] = sub_232283FD8((uint64_t)v11, a2, a3, a4, a5);
  sub_232245044(&qword_255FAFB10, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionManualDataEntryAnalyticsEvent, (uint64_t)&unk_2322C2BCC);
  sub_2322B81B0();
  return swift_release();
}

uint64_t sub_2322B5790(void *a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  _QWORD *v24;
  void *v25;
  id v26;
  _BYTE v28[12];
  int v29;
  uint64_t v30;
  _QWORD aBlock[6];

  v3 = v2;
  sub_2322846CC();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = &v28[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = &v28[-v11];
  MEMORY[0x24BDAC7A8](v10);
  v14 = &v28[-v13];
  v15 = sub_2322B860C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = &v28[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a1;
  v30 = v19;
  *(_BYTE *)(v19 + 24) = a2;
  v20 = a1;
  if (HKImproveHealthAndActivityAnalyticsAllowed())
  {
    v29 = a2;
    sub_2322B8180();
    v21 = v3 + OBJC_IVAR____TtC21VisionHealthAppPlugin34VisionPrescriptionAnalyticsContext_demographicsData;
    swift_beginAccess();
    sub_232270F98(v21, (uint64_t)v14);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    {
      sub_232284720((uint64_t)v14);
      sub_2322B818C();
      v22 = *(void **)(v3 + 16);
      v23 = swift_allocObject();
      swift_weakInit();
      v24 = (_QWORD *)swift_allocObject();
      v24[2] = v23;
      v24[3] = sub_2322B5D54;
      v24[4] = v30;
      aBlock[4] = sub_2322B5D88;
      aBlock[5] = v24;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_2322561FC;
      aBlock[3] = &unk_2501153F0;
      v25 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v22, sel_hk_fetchExistingDemographicInformationWithCompletion_, v25);
      _Block_release(v25);
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v16 + 32))(v18, v14, v15);
      sub_2322B818C();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v16 + 16))(v12, v18, v15);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
      sub_232270F98((uint64_t)v12, (uint64_t)v9);
      v26 = v20;
      aBlock[0] = sub_2322708C0((uint64_t)v9, v26, v29 & 1);
      type metadata accessor for VisionPrescriptionSampleAnalyticsEvent();
      sub_232245044(&qword_255FAFB08, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionSampleAnalyticsEvent, (uint64_t)&unk_2322C2234);
      sub_2322B81B0();
      swift_release();
      sub_232284720((uint64_t)v12);
      (*(void (**)(_BYTE *, uint64_t))(v16 + 8))(v18, v15);
    }
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v12, 1, 1, v15);
    sub_232270F98((uint64_t)v12, (uint64_t)v9);
    aBlock[0] = sub_2322708C0((uint64_t)v9, v20, a2 & 1);
    type metadata accessor for VisionPrescriptionSampleAnalyticsEvent();
    sub_232245044(&qword_255FAFB08, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionSampleAnalyticsEvent, (uint64_t)&unk_2322C2234);
    sub_2322B81B0();
    swift_release();
    sub_232284720((uint64_t)v12);
  }

  return swift_release();
}

uint64_t sub_2322B5B40(uint64_t a1, void *a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  sub_2322846CC();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_232270F98(a1, (uint64_t)v8);
  v10[1] = sub_2322708C0((uint64_t)v8, a2, a3);
  type metadata accessor for VisionPrescriptionSampleAnalyticsEvent();
  sub_232245044(&qword_255FAFB08, (uint64_t (*)(uint64_t))type metadata accessor for VisionPrescriptionSampleAnalyticsEvent, (uint64_t)&unk_2322C2234);
  sub_2322B81B0();
  return swift_release();
}

uint64_t sub_2322B5C10()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_232284720(v0 + OBJC_IVAR____TtC21VisionHealthAppPlugin34VisionPrescriptionAnalyticsContext_demographicsData);
  return swift_deallocClassInstance();
}

uint64_t sub_2322B5C58()
{
  return type metadata accessor for VisionPrescriptionAnalyticsContext();
}

uint64_t type metadata accessor for VisionPrescriptionAnalyticsContext()
{
  uint64_t result;

  result = qword_255FAFA20;
  if (!qword_255FAFA20)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2322B5C9C()
{
  unint64_t v0;

  sub_2322846CC();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_2322B5D30()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_2322B5D54(uint64_t a1)
{
  uint64_t v1;

  return sub_2322B5B40(a1, *(void **)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_2322B5D60()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2322B5D88(void *a1)
{
  uint64_t v1;

  return sub_2322B4FCC(a1, *(_QWORD *)(v1 + 16), *(void (**)(char *))(v1 + 24));
}

uint64_t sub_2322B5D94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2322B5DA4()
{
  return swift_release();
}

uint64_t sub_2322B5DAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2322846CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2322B5DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2322846CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2322B5E34()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2322B5E58(uint64_t a1)
{
  uint64_t v1;

  return sub_2322B5684(a1, *(unsigned __int8 *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
}

uint64_t sub_2322B5E6C()
{
  return sub_2322B4EB4();
}

uint64_t type metadata accessor for VisionPrescriptionSingleRangeCell()
{
  uint64_t result;

  result = qword_255FAFB50;
  if (!qword_255FAFB50)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2322B5EBC()
{
  return swift_initClassMetadata2();
}

id sub_2322B5F20()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;

  v1 = qword_255FAFB38;
  v2 = *(void **)(v0 + qword_255FAFB38);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_255FAFB38);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    sub_23224C618(0, (unint64_t *)&unk_255FACCD0);
    v6 = (void *)sub_2322B9128();
    objc_msgSend(v5, sel_setFont_, v6);

    objc_msgSend(v5, sel_setTextAlignment_, 4);
    v7 = objc_msgSend((id)objc_opt_self(), sel_tertiaryLabelColor);
    objc_msgSend(v5, sel_setTextColor_, v7);

    objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);
    if (qword_255FAB900 != -1)
      swift_once();
    sub_2322B7F58();
    v8 = (void *)sub_2322B8DEC();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setText_, v8, 0xE000000000000000);

    v9 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v10 = v2;
  return v3;
}

id sub_2322B612C(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  char *v10;
  uint64_t v11;
  id v12;
  char *v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  objc_super v21;

  v5 = v4;
  v10 = &v4[qword_255FAFB20];
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((_QWORD *)v10 + 4) = 0;
  v11 = qword_255FAFB28;
  v12 = objc_allocWithZone(MEMORY[0x24BEBD708]);
  v13 = v5;
  v14 = objc_msgSend(v12, sel_init);
  objc_msgSend(v14, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_23224C618(0, (unint64_t *)&unk_255FACCD0);
  v15 = (void *)sub_2322B9128();
  objc_msgSend(v14, sel_setFont_, v15);

  objc_msgSend(v14, sel_setTextAlignment_, 4);
  objc_msgSend(v14, sel_setAdjustsFontForContentSizeCategory_, 1);
  *(_QWORD *)&v5[v11] = v14;
  v16 = qword_255FAFB30;
  v17 = objc_allocWithZone((Class)type metadata accessor for RangeView());
  v18 = RangeView.init(range:value:)(0.0, 1.0, 0.0);
  objc_msgSend(v18, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v13[v16] = v18;
  *(_QWORD *)&v13[qword_255FAFB38] = 0;
  *(_QWORD *)&v13[qword_255FAFB40] = 0;
  *(_QWORD *)&v13[qword_255FAFB48] = 0;

  v21.receiver = v13;
  v21.super_class = (Class)type metadata accessor for VisionPrescriptionSingleRangeCell();
  v19 = objc_msgSendSuper2(&v21, sel_initWithFrame_, a1, a2, a3, a4);
  sub_2322B6358();

  return v19;
}

id sub_2322B6314(double a1, double a2, double a3, double a4)
{
  return sub_2322B612C(a1, a2, a3, a4);
}

void sub_2322B6334(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_2322B720C();
}

void sub_2322B6358()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;

  objc_msgSend(v0, sel_setUserInteractionEnabled_, 0);
  v1 = objc_msgSend(v0, sel_contentView);
  v2 = *(void **)&v0[qword_255FAFB28];
  objc_msgSend(v1, sel_addSubview_, v2);

  v3 = objc_msgSend(v0, (SEL)0x25011AA48);
  v4 = *(void **)&v0[qword_255FAFB30];
  objc_msgSend(v3, sel_addSubview_, v4);

  v5 = objc_msgSend(v0, (SEL)0x25011AA48);
  v6 = sub_2322B5F20();
  objc_msgSend(v5, sel_addSubview_, v6);

  v7 = objc_msgSend(v0, (SEL)0x25011AA48);
  v8 = objc_msgSend(v7, sel_bottomAnchor);

  v9 = objc_msgSend(v4, (SEL)&selRef_sharedGenerator + 5);
  v10 = objc_msgSend(v8, sel_constraintEqualToAnchor_constant_, v9, 20.0);

  v11 = objc_msgSend(v0, (SEL)0x25011AA48);
  v12 = objc_msgSend(v11, (SEL)&selRef_sharedGenerator + 5);

  v13 = sub_2322B5F20();
  v14 = objc_msgSend(v13, (SEL)&selRef_sharedGenerator + 5);

  v15 = objc_msgSend(v12, (SEL)&selRef_stringFromNumber_ + 7, v14, 20.0);
  v16 = *(void **)&v0[qword_255FAFB40];
  *(_QWORD *)&v0[qword_255FAFB40] = v10;
  v17 = v10;

  v18 = *(void **)&v0[qword_255FAFB48];
  *(_QWORD *)&v0[qword_255FAFB48] = v15;
  v59 = v15;

  v58 = (id)objc_opt_self();
  sub_23224ECA4();
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_2322C3850;
  v20 = objc_msgSend(v2, sel_topAnchor);
  v21 = objc_msgSend(v0, (SEL)0x25011AA48);
  v22 = objc_msgSend(v21, (SEL)&stru_2501196F0.name + 4);

  v23 = objc_msgSend(v20, sel_constraintEqualToAnchor_constant_, v22, 9.0);
  *(_QWORD *)(v19 + 32) = v23;
  v24 = objc_msgSend(v2, sel_leadingAnchor);
  v25 = objc_msgSend(v0, (SEL)0x25011AA48);
  v26 = objc_msgSend(v25, (SEL)&off_250119130 + 6);

  v27 = objc_msgSend(v24, sel_constraintEqualToAnchor_constant_, v26, 16.0);
  *(_QWORD *)(v19 + 40) = v27;
  v28 = objc_msgSend(v0, (SEL)0x25011AA48);
  v29 = objc_msgSend(v28, sel_trailingAnchor);

  v30 = objc_msgSend(v2, (SEL)&selRef_CGColor);
  v31 = objc_msgSend(v29, sel_constraintEqualToAnchor_constant_, v30, 16.0);

  *(_QWORD *)(v19 + 48) = v31;
  v32 = objc_msgSend(v4, sel_topAnchor);
  v33 = objc_msgSend(v2, sel_bottomAnchor);
  v34 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v33, 7.0);

  *(_QWORD *)(v19 + 56) = v34;
  *(_QWORD *)(v19 + 64) = v17;
  v57 = v17;
  v35 = objc_msgSend(v4, sel_leadingAnchor);
  v36 = objc_msgSend(v0, sel_contentView);
  v37 = objc_msgSend(v36, sel_leadingAnchor);

  v38 = objc_msgSend(v35, sel_constraintEqualToAnchor_constant_, v37, 16.0);
  *(_QWORD *)(v19 + 72) = v38;
  v39 = objc_msgSend(v0, sel_contentView);
  v40 = objc_msgSend(v39, sel_trailingAnchor);

  v41 = objc_msgSend(v4, sel_trailingAnchor);
  v42 = objc_msgSend(v40, sel_constraintEqualToAnchor_constant_, v41, 16.0);

  *(_QWORD *)(v19 + 80) = v42;
  v43 = sub_2322B5F20();
  v44 = objc_msgSend(v43, sel_topAnchor);

  v45 = objc_msgSend(v2, sel_bottomAnchor);
  v46 = objc_msgSend(v44, sel_constraintEqualToAnchor_constant_, v45, 7.0);

  *(_QWORD *)(v19 + 88) = v46;
  v47 = sub_2322B5F20();
  v48 = objc_msgSend(v47, sel_leadingAnchor);

  v49 = objc_msgSend(v0, sel_contentView);
  v50 = objc_msgSend(v49, sel_leadingAnchor);

  v51 = objc_msgSend(v48, (SEL)&selRef_stringFromNumber_ + 7, v50, 16.0);
  *(_QWORD *)(v19 + 96) = v51;
  v52 = objc_msgSend(v0, sel_contentView);
  v53 = objc_msgSend(v52, sel_trailingAnchor);

  v54 = sub_2322B5F20();
  v55 = objc_msgSend(v54, sel_trailingAnchor);

  v56 = objc_msgSend(v53, (SEL)&selRef_stringFromNumber_ + 7, v55, 16.0);
  *(_QWORD *)(v19 + 104) = v56;
  sub_2322B8F3C();
  sub_23224C618(0, (unint64_t *)&qword_255FABD30);
  v60 = (id)sub_2322B8F24();
  swift_bridgeObjectRelease();
  objc_msgSend(v58, sel_activateConstraints_, v60);

}

void sub_2322B6A7C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  double v13;
  double v14;
  id v15;
  double v16;
  double v17;
  char v18;
  float v19;
  char v20;
  _BYTE v21[24];
  uint64_t v22;

  v1 = v0 + qword_255FAFB20;
  swift_beginAccess();
  sub_23224E5FC(v1, (uint64_t)v21);
  if (!v22)
  {
    sub_23224E5A0((uint64_t)v21);
    goto LABEL_8;
  }
  sub_2322515F4();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    v9 = *(void **)(v0 + qword_255FAFB28);
    v10 = (void *)sub_2322B8DEC();
    objc_msgSend(v9, sel_setText_, v10);

LABEL_11:
    v11 = sub_2322B5F20();
    objc_msgSend(v11, sel_setHidden_, 0);

    objc_msgSend(*(id *)(v0 + qword_255FAFB30), sel_setHidden_, 1);
    objc_msgSend(*(id *)(v0 + qword_255FAFB48), sel_setActive_, 1);
    objc_msgSend(*(id *)(v0 + qword_255FAFB40), sel_setActive_, 0);
    return;
  }
  v2 = *(void **)(v0 + qword_255FAFB28);
  sub_23224C808(v18);
  v3 = (void *)sub_2322B8DEC();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setText_, v3);

  sub_232243B44(v18);
  if (!v4)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v5 = v4;
  sub_23225B330(v18);
  if (!v6)
  {

    goto LABEL_10;
  }
  v7 = v6;
  if ((v20 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = sub_2322B5F20();
    objc_msgSend(v8, sel_setHidden_, 0);

    objc_msgSend(*(id *)(v0 + qword_255FAFB30), sel_setHidden_, 1);
    objc_msgSend(*(id *)(v0 + qword_255FAFB48), sel_setActive_, 1);
    objc_msgSend(*(id *)(v0 + qword_255FAFB40), sel_setActive_, 0);
LABEL_14:

    return;
  }
  v12 = objc_msgSend(v5, sel_minimum);
  objc_msgSend(v12, sel_doubleValueForUnit_, v7);
  v14 = v13;

  v15 = objc_msgSend(v5, sel_maximum);
  objc_msgSend(v15, sel_doubleValueForUnit_, v7);
  v17 = v16;

  if (v14 <= v17)
  {
    sub_2322B6E78(v14, v17, v19);
    sub_2322B6D74(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  __break(1u);
}

id sub_2322B6D74(unsigned __int8 a1)
{
  uint64_t v1;
  char *v2;
  char *v3;
  char *v4;
  char *v5;

  v2 = *(char **)(v1 + qword_255FAFB30);
  v3 = &v2[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_minimumFractionDigits];
  if (a1 > 1u)
  {
    swift_beginAccess();
    *(_QWORD *)v3 = 0;
    objc_msgSend(v2, sel_setNeedsDisplay);
    v5 = &v2[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_showsPositivePrefix];
    swift_beginAccess();
    *v5 = 0;
  }
  else
  {
    swift_beginAccess();
    *(_QWORD *)v3 = 2;
    objc_msgSend(v2, sel_setNeedsDisplay);
    v4 = &v2[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_showsPositivePrefix];
    swift_beginAccess();
    *v4 = 1;
  }
  return objc_msgSend(v2, sel_setNeedsDisplay);
}

id sub_2322B6E78(double a1, double a2, double a3)
{
  uint64_t v3;
  char *v7;
  id v8;
  double *v9;
  uint64_t v10;
  double v11;
  double v13;

  v7 = *(char **)(v3 + qword_255FAFB30);
  objc_msgSend(v7, sel_setHidden_, 0);
  v8 = sub_2322B5F20();
  objc_msgSend(v8, sel_setHidden_, 1);

  v9 = (double *)&v7[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView_range];
  swift_beginAccess();
  *v9 = a1;
  v9[1] = a2;
  v10 = OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView__value;
  v11 = *(double *)&v7[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView__value];
  if (v11 < a1 || v11 > a2)
  {
    if (v11 <= a1)
      v11 = a1;
    if (v11 > a2)
      v11 = a2;
    *(double *)&v7[OBJC_IVAR____TtC21VisionHealthAppPlugin9RangeView__value] = v11;
  }
  objc_msgSend(v7, sel_setNeedsDisplay);
  v13 = *v9;
  if (*v9 < a3)
    v13 = a3;
  if (v9[1] < v13)
    v13 = v9[1];
  *(double *)&v7[v10] = v13;
  objc_msgSend(v7, sel_setNeedsDisplay);
  objc_msgSend(*(id *)(v3 + qword_255FAFB48), sel_setActive_, 0);
  return objc_msgSend(*(id *)(v3 + qword_255FAFB40), sel_setActive_, 1);
}

void sub_2322B6FB8()
{
  uint64_t v0;

  sub_23224E5A0(v0 + qword_255FAFB20);

}

id sub_2322B7024()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisionPrescriptionSingleRangeCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_2322B7058(uint64_t a1)
{
  sub_23224E5A0(a1 + qword_255FAFB20);

}

uint64_t sub_2322B70D0()
{
  return type metadata accessor for VisionPrescriptionSingleRangeCell();
}

uint64_t sub_2322B70D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + qword_255FAFB20;
  swift_beginAccess();
  return sub_23224E5FC(v3, a1);
}

uint64_t sub_2322B7128(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + qword_255FAFB20;
  swift_beginAccess();
  sub_23224E53C(a1, v3);
  swift_endAccess();
  sub_2322B6A7C();
  return sub_23224E5A0(a1);
}

void (*sub_2322B7194(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2322B71DC;
}

void sub_2322B71DC(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_2322B6A7C();
}

void sub_2322B720C()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;

  v1 = v0;
  v2 = &v0[qword_255FAFB20];
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_QWORD *)v2 + 4) = 0;
  v3 = qword_255FAFB28;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_23224C618(0, (unint64_t *)&unk_255FACCD0);
  v5 = (void *)sub_2322B9128();
  objc_msgSend(v4, sel_setFont_, v5);

  objc_msgSend(v4, sel_setTextAlignment_, 4);
  objc_msgSend(v4, sel_setAdjustsFontForContentSizeCategory_, 1);
  *(_QWORD *)&v1[v3] = v4;
  v6 = qword_255FAFB30;
  v7 = objc_allocWithZone((Class)type metadata accessor for RangeView());
  v8 = RangeView.init(range:value:)(0.0, 1.0, 0.0);
  objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(_QWORD *)&v1[v6] = v8;
  *(_QWORD *)&v1[qword_255FAFB38] = 0;
  *(_QWORD *)&v1[qword_255FAFB40] = 0;
  *(_QWORD *)&v1[qword_255FAFB48] = 0;

  sub_2322B9350();
  __break(1u);
}

uint64_t initializeWithCopy for VisionPrescriptionSingleRangeItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for VisionPrescriptionSingleRangeItem(uint64_t a1, uint64_t a2)
{
  int v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = *(_DWORD *)(a2 + 36);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_DWORD *)(a1 + 36) = v4;
  return a1;
}

__n128 initializeWithTake for VisionPrescriptionSingleRangeItem(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for VisionPrescriptionSingleRangeItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for VisionPrescriptionSingleRangeItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VisionPrescriptionSingleRangeItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for VisionPrescriptionSingleRangeItem()
{
  return &type metadata for VisionPrescriptionSingleRangeItem;
}

void sub_2322B75A8(uint64_t *a1, _QWORD **a2, uint64_t a3, uint64_t (*a4)(void))
{
  void *v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = (void *)a4();
  v7 = *a1 + 8;
  sub_2322B923C();
  *a1 = v7;
  v8 = *a2;
  if (*a2)
  {
    *v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {

  }
}

uint64_t sub_2322B7658(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  id v26;
  uint64_t v27;
  char *v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  _QWORD *v34;
  id v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  _QWORD v49[4];
  _OWORD v50[2];
  uint64_t v51;

  v41 = a2;
  v3 = sub_2322B8918();
  v45 = *(_QWORD *)(v3 - 8);
  v46 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v44 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v40 - v6;
  v7 = sub_2322B8714();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v40 - v12;
  v43 = sub_2322B8720();
  v42 = *(_QWORD *)(v43 - 8);
  v14 = MEMORY[0x24BDAC7A8](v43);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v40 - v17;
  v19 = objc_msgSend(a1, sel_identifier);
  v20 = sub_2322B8E1C();
  v22 = v21;

  if (v20 == 0xD000000000000022 && v22 == 0x80000002322C03B0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    type metadata accessor for VisionPrescriptionDataTypeDetailConfigurationProvider();
    swift_initStackObject();
    sub_2322875DC(a1);
    v24 = v41;
    sub_2322B866C();
    v25 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v25(v13, v24, v7);
    objc_allocWithZone((Class)type metadata accessor for VisionPrescriptionRoomViewController());
    v25(v11, (uint64_t)v13, v7);
    v26 = a1;
    v27 = sub_2322B87A4();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    swift_release();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v18, v43);
    return v27;
  }
  v23 = sub_2322B93F8();
  swift_bridgeObjectRelease();
  if ((v23 & 1) != 0)
    goto LABEL_5;
  v51 = 0;
  memset(v50, 0, sizeof(v50));
  sub_2322B7CD4((uint64_t)v50, (uint64_t)&v47);
  if (v48)
  {
    sub_232257144(&v47, (uint64_t)v49);
    sub_232277A3C(v49, v49[3]);
    sub_2322B8810();
    v36 = v41;
    sub_2322B866C();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v13, v36, v7);
    objc_allocWithZone((Class)sub_2322B87B0());
    v37 = a1;
    v27 = sub_2322B87A4();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v16, v43);
    sub_2322B7D7C((uint64_t)v50);
    sub_232258500((uint64_t)v49);
  }
  else
  {
    sub_2322B7D7C((uint64_t)&v47);
    v29 = v40;
    sub_2322B88F4();
    v30 = a1;
    v31 = sub_2322B890C();
    v32 = sub_2322B8FFC();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v33 = 138412290;
      v49[0] = v30;
      v35 = v30;
      sub_2322B923C();
      *v34 = v30;

      _os_log_impl(&dword_232241000, v31, v32, "[VisionAppPluginAppDelegate] No custom detail view controller or configuration provided for %@", v33, 0xCu);
      sub_2322B7DB8();
      swift_arrayDestroy();
      MEMORY[0x234901170](v34, -1, -1);
      MEMORY[0x234901170](v33, -1, -1);
    }
    else
    {

    }
    v39 = v45;
    v38 = v46;

    (*(void (**)(char *, uint64_t))(v39 + 8))(v29, v38);
    sub_2322B7D7C((uint64_t)v50);
    return 0;
  }
  return v27;
}

uint64_t sub_2322B7CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2322B7D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_2322B7D18()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FAFBA0)
  {
    sub_23224EC14(255, &qword_255FAFBA8);
    v0 = sub_2322B9224();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FAFBA0);
  }
}

uint64_t sub_2322B7D7C(uint64_t a1)
{
  uint64_t v2;

  sub_2322B7D18();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2322B7DB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255FABCA0)
  {
    sub_2322B7E0C();
    v0 = sub_2322B9224();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255FABCA0);
  }
}

unint64_t sub_2322B7E0C()
{
  unint64_t result;

  result = qword_255FAF9C0;
  if (!qword_255FAF9C0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255FAF9C0);
  }
  return result;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self();
}

uint64_t sub_2322B7E68()
{
  return MEMORY[0x24BDCB648]();
}

uint64_t sub_2322B7E74()
{
  return MEMORY[0x24BDCB6C0]();
}

uint64_t sub_2322B7E80()
{
  return MEMORY[0x24BDCB6E8]();
}

uint64_t sub_2322B7E8C()
{
  return MEMORY[0x24BDCB720]();
}

uint64_t sub_2322B7E98()
{
  return MEMORY[0x24BDCB750]();
}

uint64_t sub_2322B7EA4()
{
  return MEMORY[0x24BDCB8D8]();
}

uint64_t sub_2322B7EB0()
{
  return MEMORY[0x24BDCB8F0]();
}

uint64_t sub_2322B7EBC()
{
  return MEMORY[0x24BDCB930]();
}

uint64_t sub_2322B7EC8()
{
  return MEMORY[0x24BDCB960]();
}

uint64_t sub_2322B7ED4()
{
  return MEMORY[0x24BDCB980]();
}

uint64_t sub_2322B7EE0()
{
  return MEMORY[0x24BDCB988]();
}

uint64_t sub_2322B7EEC()
{
  return MEMORY[0x24BDCBA58]();
}

uint64_t sub_2322B7EF8()
{
  return MEMORY[0x24BDCBAB0]();
}

uint64_t sub_2322B7F04()
{
  return MEMORY[0x24BDCBB78]();
}

uint64_t sub_2322B7F10()
{
  return MEMORY[0x24BDCBCC0]();
}

uint64_t sub_2322B7F1C()
{
  return MEMORY[0x24BDCBDE0]();
}

uint64_t sub_2322B7F28()
{
  return MEMORY[0x24BDCC3C8]();
}

uint64_t sub_2322B7F34()
{
  return MEMORY[0x24BDCC3E0]();
}

uint64_t sub_2322B7F40()
{
  return MEMORY[0x24BDCC3E8]();
}

uint64_t sub_2322B7F4C()
{
  return MEMORY[0x24BDCC3F0]();
}

uint64_t sub_2322B7F58()
{
  return MEMORY[0x24BDCC6D8]();
}

uint64_t sub_2322B7F64()
{
  return MEMORY[0x24BDCC760]();
}

uint64_t sub_2322B7F70()
{
  return MEMORY[0x24BEE6118]();
}

uint64_t sub_2322B7F7C()
{
  return MEMORY[0x24BDCC818]();
}

uint64_t sub_2322B7F88()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_2322B7F94()
{
  return MEMORY[0x24BDCD820]();
}

uint64_t sub_2322B7FA0()
{
  return MEMORY[0x24BDCD848]();
}

uint64_t sub_2322B7FAC()
{
  return MEMORY[0x24BDCD860]();
}

uint64_t sub_2322B7FB8()
{
  return MEMORY[0x24BDCD8D0]();
}

uint64_t sub_2322B7FC4()
{
  return MEMORY[0x24BEE6128]();
}

uint64_t sub_2322B7FD0()
{
  return MEMORY[0x24BDCD928]();
}

uint64_t sub_2322B7FDC()
{
  return MEMORY[0x24BDCD9C0]();
}

uint64_t sub_2322B7FE8()
{
  return MEMORY[0x24BDCD9F8]();
}

uint64_t sub_2322B7FF4()
{
  return MEMORY[0x24BDCDA68]();
}

uint64_t sub_2322B8000()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_2322B800C()
{
  return MEMORY[0x24BDCDB78]();
}

uint64_t sub_2322B8018()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_2322B8024()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_2322B8030()
{
  return MEMORY[0x24BDCDD20]();
}

uint64_t sub_2322B803C()
{
  return MEMORY[0x24BDCDE90]();
}

uint64_t sub_2322B8048()
{
  return MEMORY[0x24BE40F40]();
}

uint64_t sub_2322B8054()
{
  return MEMORY[0x24BDCE5D8]();
}

uint64_t sub_2322B8060()
{
  return MEMORY[0x24BDCE5F0]();
}

uint64_t sub_2322B806C()
{
  return MEMORY[0x24BDCE878]();
}

uint64_t sub_2322B8078()
{
  return MEMORY[0x24BDCE8F8]();
}

uint64_t sub_2322B8084()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_2322B8090()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_2322B809C()
{
  return MEMORY[0x24BDCE9F8]();
}

uint64_t sub_2322B80A8()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_2322B80B4()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_2322B80C0()
{
  return MEMORY[0x24BDCEC90]();
}

uint64_t sub_2322B80CC()
{
  return MEMORY[0x24BDCED58]();
}

uint64_t sub_2322B80D8()
{
  return MEMORY[0x24BDCEEA8]();
}

uint64_t sub_2322B80E4()
{
  return MEMORY[0x24BDCEFC8]();
}

uint64_t sub_2322B80F0()
{
  return MEMORY[0x24BDCF128]();
}

uint64_t sub_2322B80FC()
{
  return MEMORY[0x24BDCF2D8]();
}

uint64_t sub_2322B8108()
{
  return MEMORY[0x24BDCF638]();
}

uint64_t sub_2322B8114()
{
  return MEMORY[0x24BDCF650]();
}

uint64_t sub_2322B8120()
{
  return MEMORY[0x24BEBBE78]();
}

uint64_t sub_2322B812C()
{
  return MEMORY[0x24BEBBE88]();
}

uint64_t sub_2322B8138()
{
  return MEMORY[0x24BEBBE90]();
}

uint64_t sub_2322B8144()
{
  return MEMORY[0x24BEBBEB8]();
}

uint64_t sub_2322B8150()
{
  return MEMORY[0x24BDCF678]();
}

uint64_t sub_2322B815C()
{
  return MEMORY[0x24BDBD738]();
}

uint64_t sub_2322B8168()
{
  return MEMORY[0x24BE41EC0]();
}

uint64_t sub_2322B8174()
{
  return MEMORY[0x24BE47298]();
}

uint64_t sub_2322B8180()
{
  return MEMORY[0x24BE473E0]();
}

uint64_t sub_2322B818C()
{
  return MEMORY[0x24BE473E8]();
}

uint64_t sub_2322B8198()
{
  return MEMORY[0x24BE473F0]();
}

uint64_t sub_2322B81A4()
{
  return MEMORY[0x24BE473F8]();
}

uint64_t sub_2322B81B0()
{
  return MEMORY[0x24BE41338]();
}

uint64_t sub_2322B81BC()
{
  return MEMORY[0x24BE417A8]();
}

uint64_t sub_2322B81C8()
{
  return MEMORY[0x24BE41850]();
}

uint64_t sub_2322B81D4()
{
  return MEMORY[0x24BE41858]();
}

uint64_t sub_2322B81E0()
{
  return MEMORY[0x24BE41890]();
}

uint64_t sub_2322B81EC()
{
  return MEMORY[0x24BE41898]();
}

uint64_t sub_2322B81F8()
{
  return MEMORY[0x24BE418B0]();
}

uint64_t sub_2322B8204()
{
  return MEMORY[0x24BE418B8]();
}

uint64_t sub_2322B8210()
{
  return MEMORY[0x24BE418C0]();
}

uint64_t sub_2322B821C()
{
  return MEMORY[0x24BE419F0]();
}

uint64_t sub_2322B8228()
{
  return MEMORY[0x24BE41A30]();
}

uint64_t sub_2322B8234()
{
  return MEMORY[0x24BE41C30]();
}

uint64_t sub_2322B8240()
{
  return MEMORY[0x24BE42060]();
}

uint64_t sub_2322B824C()
{
  return MEMORY[0x24BE42238]();
}

uint64_t sub_2322B8258()
{
  return MEMORY[0x24BE42248]();
}

uint64_t sub_2322B8264()
{
  return MEMORY[0x24BE42318]();
}

uint64_t sub_2322B8270()
{
  return MEMORY[0x24BE42320]();
}

uint64_t sub_2322B827C()
{
  return MEMORY[0x24BE42638]();
}

uint64_t sub_2322B8288()
{
  return MEMORY[0x24BE42678]();
}

uint64_t sub_2322B8294()
{
  return MEMORY[0x24BE426A0]();
}

uint64_t sub_2322B82A0()
{
  return MEMORY[0x24BE426D0]();
}

uint64_t sub_2322B82AC()
{
  return MEMORY[0x24BE426D8]();
}

uint64_t sub_2322B82B8()
{
  return MEMORY[0x24BE426E0]();
}

uint64_t sub_2322B82C4()
{
  return MEMORY[0x24BE42778]();
}

uint64_t sub_2322B82D0()
{
  return MEMORY[0x24BE42798]();
}

uint64_t sub_2322B82DC()
{
  return MEMORY[0x24BE427A0]();
}

uint64_t sub_2322B82E8()
{
  return MEMORY[0x24BE42888]();
}

uint64_t sub_2322B82F4()
{
  return MEMORY[0x24BE42898]();
}

uint64_t sub_2322B8300()
{
  return MEMORY[0x24BE428B8]();
}

uint64_t sub_2322B830C()
{
  return MEMORY[0x24BE42900]();
}

uint64_t sub_2322B8318()
{
  return MEMORY[0x24BE42908]();
}

uint64_t sub_2322B8324()
{
  return MEMORY[0x24BE42C28]();
}

uint64_t sub_2322B8330()
{
  return MEMORY[0x24BE42C40]();
}

uint64_t sub_2322B833C()
{
  return MEMORY[0x24BE42C78]();
}

uint64_t sub_2322B8348()
{
  return MEMORY[0x24BE42C80]();
}

uint64_t sub_2322B8354()
{
  return MEMORY[0x24BE42C98]();
}

uint64_t sub_2322B8360()
{
  return MEMORY[0x24BE42D28]();
}

uint64_t sub_2322B836C()
{
  return MEMORY[0x24BE42D30]();
}

uint64_t sub_2322B8378()
{
  return MEMORY[0x24BE42D48]();
}

uint64_t sub_2322B8384()
{
  return MEMORY[0x24BE42D50]();
}

uint64_t sub_2322B8390()
{
  return MEMORY[0x24BE42FF0]();
}

uint64_t sub_2322B839C()
{
  return MEMORY[0x24BE430D8]();
}

uint64_t sub_2322B83A8()
{
  return MEMORY[0x24BE430E0]();
}

uint64_t sub_2322B83B4()
{
  return MEMORY[0x24BE431A0]();
}

uint64_t sub_2322B83C0()
{
  return MEMORY[0x24BE431A8]();
}

uint64_t sub_2322B83CC()
{
  return MEMORY[0x24BE431B0]();
}

uint64_t sub_2322B83D8()
{
  return MEMORY[0x24BE43358]();
}

uint64_t sub_2322B83E4()
{
  return MEMORY[0x24BE43360]();
}

uint64_t sub_2322B83F0()
{
  return MEMORY[0x24BE43368]();
}

uint64_t sub_2322B83FC()
{
  return MEMORY[0x24BE43380]();
}

uint64_t sub_2322B8408()
{
  return MEMORY[0x24BE43388]();
}

uint64_t sub_2322B8414()
{
  return MEMORY[0x24BE43478]();
}

uint64_t sub_2322B8420()
{
  return MEMORY[0x24BE434A0]();
}

uint64_t sub_2322B842C()
{
  return MEMORY[0x24BE434A8]();
}

uint64_t sub_2322B8438()
{
  return MEMORY[0x24BE434B0]();
}

uint64_t sub_2322B8444()
{
  return MEMORY[0x24BE434E8]();
}

uint64_t sub_2322B8450()
{
  return MEMORY[0x24BE43500]();
}

uint64_t sub_2322B845C()
{
  return MEMORY[0x24BE43508]();
}

uint64_t sub_2322B8468()
{
  return MEMORY[0x24BE43538]();
}

uint64_t sub_2322B8474()
{
  return MEMORY[0x24BE43608]();
}

uint64_t sub_2322B8480()
{
  return MEMORY[0x24BE43698]();
}

uint64_t sub_2322B848C()
{
  return MEMORY[0x24BE436A0]();
}

uint64_t sub_2322B8498()
{
  return MEMORY[0x24BE436A8]();
}

uint64_t sub_2322B84A4()
{
  return MEMORY[0x24BE436B0]();
}

uint64_t sub_2322B84B0()
{
  return MEMORY[0x24BE436B8]();
}

uint64_t sub_2322B84BC()
{
  return MEMORY[0x24BE436D0]();
}

uint64_t sub_2322B84C8()
{
  return MEMORY[0x24BE436E0]();
}

uint64_t sub_2322B84D4()
{
  return MEMORY[0x24BE436E8]();
}

uint64_t sub_2322B84E0()
{
  return MEMORY[0x24BE436F0]();
}

uint64_t sub_2322B84EC()
{
  return MEMORY[0x24BE436F8]();
}

uint64_t sub_2322B84F8()
{
  return MEMORY[0x24BE43828]();
}

uint64_t sub_2322B8504()
{
  return MEMORY[0x24BE43838]();
}

uint64_t sub_2322B8510()
{
  return MEMORY[0x24BE43848]();
}

uint64_t sub_2322B851C()
{
  return MEMORY[0x24BE43850]();
}

uint64_t sub_2322B8528()
{
  return MEMORY[0x24BE43870]();
}

uint64_t sub_2322B8534()
{
  return MEMORY[0x24BE43880]();
}

uint64_t sub_2322B8540()
{
  return MEMORY[0x24BE43888]();
}

uint64_t sub_2322B854C()
{
  return MEMORY[0x24BE43890]();
}

uint64_t sub_2322B8558()
{
  return MEMORY[0x24BE438A0]();
}

uint64_t sub_2322B8564()
{
  return MEMORY[0x24BE438B8]();
}

uint64_t sub_2322B8570()
{
  return MEMORY[0x24BE438C0]();
}

uint64_t sub_2322B857C()
{
  return MEMORY[0x24BE43958]();
}

uint64_t sub_2322B8588()
{
  return MEMORY[0x24BE43960]();
}

uint64_t sub_2322B8594()
{
  return MEMORY[0x24BE43968]();
}

uint64_t sub_2322B85A0()
{
  return MEMORY[0x24BE439A8]();
}

uint64_t sub_2322B85AC()
{
  return MEMORY[0x24BE439D0]();
}

uint64_t sub_2322B85B8()
{
  return MEMORY[0x24BE439D8]();
}

uint64_t sub_2322B85C4()
{
  return MEMORY[0x24BE439E0]();
}

uint64_t sub_2322B85D0()
{
  return MEMORY[0x24BE43B28]();
}

uint64_t sub_2322B85DC()
{
  return MEMORY[0x24BE43B30]();
}

uint64_t sub_2322B85E8()
{
  return MEMORY[0x24BE43B48]();
}

uint64_t sub_2322B85F4()
{
  return MEMORY[0x24BE43B50]();
}

uint64_t sub_2322B8600()
{
  return MEMORY[0x24BE43B58]();
}

uint64_t sub_2322B860C()
{
  return MEMORY[0x24BE43B60]();
}

uint64_t sub_2322B8618()
{
  return MEMORY[0x24BE43C00]();
}

uint64_t sub_2322B8624()
{
  return MEMORY[0x24BE43C08]();
}

uint64_t sub_2322B8630()
{
  return MEMORY[0x24BE43CD8]();
}

uint64_t sub_2322B863C()
{
  return MEMORY[0x24BE43D78]();
}

uint64_t sub_2322B8648()
{
  return MEMORY[0x24BE43D88]();
}

uint64_t sub_2322B8654()
{
  return MEMORY[0x24BE43D90]();
}

uint64_t sub_2322B8660()
{
  return MEMORY[0x24BE43D98]();
}

uint64_t sub_2322B866C()
{
  return MEMORY[0x24BE43DF8]();
}

uint64_t sub_2322B8678()
{
  return MEMORY[0x24BE43E00]();
}

uint64_t sub_2322B8684()
{
  return MEMORY[0x24BE43E18]();
}

uint64_t sub_2322B8690()
{
  return MEMORY[0x24BE43E90]();
}

uint64_t sub_2322B869C()
{
  return MEMORY[0x24BE43F50]();
}

uint64_t sub_2322B86A8()
{
  return MEMORY[0x24BE43FA8]();
}

uint64_t sub_2322B86B4()
{
  return MEMORY[0x24BE43FC0]();
}

uint64_t sub_2322B86C0()
{
  return MEMORY[0x24BE44000]();
}

uint64_t sub_2322B86CC()
{
  return MEMORY[0x24BE44010]();
}

uint64_t sub_2322B86D8()
{
  return MEMORY[0x24BE44020]();
}

uint64_t sub_2322B86E4()
{
  return MEMORY[0x24BE44028]();
}

uint64_t sub_2322B86F0()
{
  return MEMORY[0x24BE44038]();
}

uint64_t sub_2322B86FC()
{
  return MEMORY[0x24BE44098]();
}

uint64_t sub_2322B8708()
{
  return MEMORY[0x24BE440A0]();
}

uint64_t sub_2322B8714()
{
  return MEMORY[0x24BE440C0]();
}

uint64_t sub_2322B8720()
{
  return MEMORY[0x24BE440D8]();
}

uint64_t sub_2322B872C()
{
  return MEMORY[0x24BE44198]();
}

uint64_t sub_2322B8738()
{
  return MEMORY[0x24BE441A8]();
}

uint64_t sub_2322B8744()
{
  return MEMORY[0x24BE441C8]();
}

uint64_t sub_2322B8750()
{
  return MEMORY[0x24BE441E0]();
}

uint64_t sub_2322B875C()
{
  return MEMORY[0x24BE441E8]();
}

uint64_t sub_2322B8768()
{
  return MEMORY[0x24BE441F0]();
}

uint64_t sub_2322B8774()
{
  return MEMORY[0x24BE441F8]();
}

uint64_t sub_2322B8780()
{
  return MEMORY[0x24BE44208]();
}

uint64_t sub_2322B878C()
{
  return MEMORY[0x24BE44218]();
}

uint64_t sub_2322B8798()
{
  return MEMORY[0x24BE44268]();
}

uint64_t sub_2322B87A4()
{
  return MEMORY[0x24BE44270]();
}

uint64_t sub_2322B87B0()
{
  return MEMORY[0x24BE442A0]();
}

uint64_t sub_2322B87BC()
{
  return MEMORY[0x24BE44670]();
}

uint64_t sub_2322B87C8()
{
  return MEMORY[0x24BE44698]();
}

uint64_t sub_2322B87D4()
{
  return MEMORY[0x24BE446A0]();
}

uint64_t sub_2322B87E0()
{
  return MEMORY[0x24BE446A8]();
}

uint64_t sub_2322B87EC()
{
  return MEMORY[0x24BE44820]();
}

uint64_t sub_2322B87F8()
{
  return MEMORY[0x24BE448D0]();
}

uint64_t sub_2322B8804()
{
  return MEMORY[0x24BE44908]();
}

uint64_t sub_2322B8810()
{
  return MEMORY[0x24BE44B20]();
}

uint64_t sub_2322B881C()
{
  return MEMORY[0x24BE44B30]();
}

uint64_t sub_2322B8828()
{
  return MEMORY[0x24BE44C00]();
}

uint64_t sub_2322B8834()
{
  return MEMORY[0x24BE44C18]();
}

uint64_t sub_2322B8840()
{
  return MEMORY[0x24BE44C70]();
}

uint64_t sub_2322B884C()
{
  return MEMORY[0x24BE44F30]();
}

uint64_t sub_2322B8858()
{
  return MEMORY[0x24BE44F68]();
}

uint64_t sub_2322B8864()
{
  return MEMORY[0x24BE45880]();
}

uint64_t sub_2322B8870()
{
  return MEMORY[0x24BE45888]();
}

uint64_t sub_2322B887C()
{
  return MEMORY[0x24BE458A0]();
}

uint64_t sub_2322B8888()
{
  return MEMORY[0x24BEE6190]();
}

uint64_t sub_2322B8894()
{
  return MEMORY[0x24BEE6260]();
}

uint64_t sub_2322B88A0()
{
  return MEMORY[0x24BEE6270]();
}

uint64_t sub_2322B88AC()
{
  return MEMORY[0x24BEE6310]();
}

uint64_t sub_2322B88B8()
{
  return MEMORY[0x24BEE63B8]();
}

uint64_t sub_2322B88C4()
{
  return MEMORY[0x24BEE6410]();
}

uint64_t sub_2322B88D0()
{
  return MEMORY[0x24BE48470]();
}

uint64_t sub_2322B88DC()
{
  return MEMORY[0x24BE484B0]();
}

uint64_t sub_2322B88E8()
{
  return MEMORY[0x24BE484C8]();
}

uint64_t sub_2322B88F4()
{
  return MEMORY[0x24BE484D0]();
}

uint64_t sub_2322B8900()
{
  return MEMORY[0x24BE484E8]();
}

uint64_t sub_2322B890C()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_2322B8918()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_2322B8924()
{
  return MEMORY[0x24BEBC038]();
}

uint64_t sub_2322B8930()
{
  return MEMORY[0x24BEBC040]();
}

uint64_t sub_2322B893C()
{
  return MEMORY[0x24BEBC060]();
}

uint64_t sub_2322B8948()
{
  return MEMORY[0x24BEBC088]();
}

uint64_t sub_2322B8954()
{
  return MEMORY[0x24BEBC098]();
}

uint64_t sub_2322B8960()
{
  return MEMORY[0x24BEBC0B0]();
}

uint64_t sub_2322B896C()
{
  return MEMORY[0x24BEBC0B8]();
}

uint64_t sub_2322B8978()
{
  return MEMORY[0x24BEBC0C0]();
}

uint64_t sub_2322B8984()
{
  return MEMORY[0x24BEBC0E0]();
}

uint64_t sub_2322B8990()
{
  return MEMORY[0x24BEBC3E0]();
}

uint64_t sub_2322B899C()
{
  return MEMORY[0x24BEBC408]();
}

uint64_t sub_2322B89A8()
{
  return MEMORY[0x24BEBC458]();
}

uint64_t sub_2322B89B4()
{
  return MEMORY[0x24BEBC468]();
}

uint64_t sub_2322B89C0()
{
  return MEMORY[0x24BEBC478]();
}

uint64_t sub_2322B89CC()
{
  return MEMORY[0x24BEBC4D0]();
}

uint64_t sub_2322B89D8()
{
  return MEMORY[0x24BEBC4E0]();
}

uint64_t sub_2322B89E4()
{
  return MEMORY[0x24BEBC508]();
}

uint64_t sub_2322B89F0()
{
  return MEMORY[0x24BEBC560]();
}

uint64_t sub_2322B89FC()
{
  return MEMORY[0x24BEBC578]();
}

uint64_t sub_2322B8A08()
{
  return MEMORY[0x24BEBC598]();
}

uint64_t sub_2322B8A14()
{
  return MEMORY[0x24BEBC5B0]();
}

uint64_t sub_2322B8A20()
{
  return MEMORY[0x24BEBC5C0]();
}

uint64_t sub_2322B8A2C()
{
  return MEMORY[0x24BEBC5E8]();
}

uint64_t sub_2322B8A38()
{
  return MEMORY[0x24BEBC5F8]();
}

uint64_t sub_2322B8A44()
{
  return MEMORY[0x24BDB9438]();
}

uint64_t sub_2322B8A50()
{
  return MEMORY[0x24BDB9448]();
}

uint64_t sub_2322B8A5C()
{
  return MEMORY[0x24BDB9458]();
}

uint64_t sub_2322B8A68()
{
  return MEMORY[0x24BDB9468]();
}

uint64_t sub_2322B8A74()
{
  return MEMORY[0x24BDB94B8]();
}

uint64_t sub_2322B8A80()
{
  return MEMORY[0x24BDB9520]();
}

uint64_t sub_2322B8A8C()
{
  return MEMORY[0x24BDB95E8]();
}

uint64_t sub_2322B8A98()
{
  return MEMORY[0x24BDB9600]();
}

uint64_t sub_2322B8AA4()
{
  return MEMORY[0x24BE41D20]();
}

uint64_t sub_2322B8AB0()
{
  return MEMORY[0x24BDB9648]();
}

uint64_t sub_2322B8ABC()
{
  return MEMORY[0x24BDB96B0]();
}

uint64_t sub_2322B8AC8()
{
  return MEMORY[0x24BDB96E8]();
}

uint64_t sub_2322B8AD4()
{
  return MEMORY[0x24BDB9730]();
}

uint64_t sub_2322B8AE0()
{
  return MEMORY[0x24BDB9780]();
}

uint64_t sub_2322B8AEC()
{
  return MEMORY[0x24BDB98E0]();
}

uint64_t sub_2322B8AF8()
{
  return MEMORY[0x24BDB9960]();
}

uint64_t sub_2322B8B04()
{
  return MEMORY[0x24BDB99E0]();
}

uint64_t sub_2322B8B10()
{
  return MEMORY[0x24BDB99F8]();
}

uint64_t sub_2322B8B1C()
{
  return MEMORY[0x24BDB9AC0]();
}

uint64_t sub_2322B8B28()
{
  return MEMORY[0x24BDB9AE0]();
}

uint64_t sub_2322B8B34()
{
  return MEMORY[0x24BDB9B40]();
}

uint64_t sub_2322B8B40()
{
  return MEMORY[0x24BDB9CC0]();
}

uint64_t sub_2322B8B4C()
{
  return MEMORY[0x24BDB9CD0]();
}

uint64_t sub_2322B8B58()
{
  return MEMORY[0x24BDB9CD8]();
}

uint64_t sub_2322B8B64()
{
  return MEMORY[0x24BDB9CE0]();
}

uint64_t sub_2322B8B70()
{
  return MEMORY[0x24BDB9D00]();
}

uint64_t sub_2322B8B7C()
{
  return MEMORY[0x24BDB9DE0]();
}

uint64_t sub_2322B8B88()
{
  return MEMORY[0x24BDB9DF0]();
}

uint64_t sub_2322B8B94()
{
  return MEMORY[0x24BDB9E08]();
}

uint64_t sub_2322B8BA0()
{
  return MEMORY[0x24BDB9E10]();
}

uint64_t sub_2322B8BAC()
{
  return MEMORY[0x24BDB9E38]();
}

uint64_t sub_2322B8BB8()
{
  return MEMORY[0x24BDB9E50]();
}

uint64_t sub_2322B8BC4()
{
  return MEMORY[0x24BDB9E78]();
}

uint64_t sub_2322B8BD0()
{
  return MEMORY[0x24BDB9E80]();
}

uint64_t sub_2322B8BDC()
{
  return MEMORY[0x24BDB9E98]();
}

uint64_t sub_2322B8BE8()
{
  return MEMORY[0x24BDB9EA0]();
}

uint64_t sub_2322B8BF4()
{
  return MEMORY[0x24BDB9EC8]();
}

uint64_t sub_2322B8C00()
{
  return MEMORY[0x24BDB9ED0]();
}

uint64_t sub_2322B8C0C()
{
  return MEMORY[0x24BDB9EF0]();
}

uint64_t sub_2322B8C18()
{
  return MEMORY[0x24BE41D30]();
}

uint64_t sub_2322B8C24()
{
  return MEMORY[0x24BE41D38]();
}

uint64_t sub_2322B8C30()
{
  return MEMORY[0x24BE453E8]();
}

uint64_t sub_2322B8C3C()
{
  return MEMORY[0x24BDB9F18]();
}

uint64_t sub_2322B8C48()
{
  return MEMORY[0x24BDB9F20]();
}

uint64_t sub_2322B8C54()
{
  return MEMORY[0x24BDB9F30]();
}

uint64_t sub_2322B8C60()
{
  return MEMORY[0x24BDB9F68]();
}

uint64_t sub_2322B8C6C()
{
  return MEMORY[0x24BDB9F90]();
}

uint64_t sub_2322B8C78()
{
  return MEMORY[0x24BDB9FB0]();
}

uint64_t sub_2322B8C84()
{
  return MEMORY[0x24BDB9FB8]();
}

uint64_t sub_2322B8C90()
{
  return MEMORY[0x24BDB9FD8]();
}

uint64_t sub_2322B8C9C()
{
  return MEMORY[0x24BDBA020]();
}

uint64_t sub_2322B8CA8()
{
  return MEMORY[0x24BDBA080]();
}

uint64_t sub_2322B8CB4()
{
  return MEMORY[0x24BDBA090]();
}

uint64_t sub_2322B8CC0()
{
  return MEMORY[0x24BDBA0C0]();
}

uint64_t sub_2322B8CCC()
{
  return MEMORY[0x24BDBA0E8]();
}

uint64_t sub_2322B8CD8()
{
  return MEMORY[0x24BDBA0F0]();
}

uint64_t sub_2322B8CE4()
{
  return MEMORY[0x24BDBA0F8]();
}

uint64_t sub_2322B8CF0()
{
  return MEMORY[0x24BDBA100]();
}

uint64_t sub_2322B8CFC()
{
  return MEMORY[0x24BDBA110]();
}

uint64_t sub_2322B8D08()
{
  return MEMORY[0x24BDBA138]();
}

uint64_t sub_2322B8D14()
{
  return MEMORY[0x24BEE5458]();
}

uint64_t sub_2322B8D20()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_2322B8D2C()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_2322B8D38()
{
  return MEMORY[0x24BEE5618]();
}

uint64_t sub_2322B8D44()
{
  return MEMORY[0x24BEE5648]();
}

uint64_t sub_2322B8D50()
{
  return MEMORY[0x24BE49D98]();
}

uint64_t sub_2322B8D5C()
{
  return MEMORY[0x24BDE3948]();
}

uint64_t sub_2322B8D68()
{
  return MEMORY[0x24BDE3960]();
}

uint64_t sub_2322B8D74()
{
  return MEMORY[0x24BDE3970]();
}

uint64_t sub_2322B8D80()
{
  return MEMORY[0x24BDE3988]();
}

uint64_t sub_2322B8D8C()
{
  return MEMORY[0x24BDE39C0]();
}

uint64_t sub_2322B8D98()
{
  return MEMORY[0x24BDE39D8]();
}

uint64_t sub_2322B8DA4()
{
  return MEMORY[0x24BDE3A98]();
}

uint64_t sub_2322B8DB0()
{
  return MEMORY[0x24BDE3AF8]();
}

uint64_t sub_2322B8DBC()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_2322B8DC8()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_2322B8DD4()
{
  return MEMORY[0x24BEE07E0]();
}

uint64_t sub_2322B8DE0()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_2322B8DEC()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_2322B8DF8()
{
  return MEMORY[0x24BDCF9F0]();
}

uint64_t sub_2322B8E04()
{
  return MEMORY[0x24BDCFA08]();
}

uint64_t sub_2322B8E10()
{
  return MEMORY[0x24BDCFA18]();
}

uint64_t sub_2322B8E1C()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_2322B8E28()
{
  return MEMORY[0x24BDCFA78]();
}

uint64_t sub_2322B8E34()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_2322B8E40()
{
  return MEMORY[0x24BEE0A10]();
}

uint64_t sub_2322B8E4C()
{
  return MEMORY[0x24BEE0A50]();
}

uint64_t sub_2322B8E58()
{
  return MEMORY[0x24BEE0A70]();
}

uint64_t sub_2322B8E64()
{
  return MEMORY[0x24BE41D50]();
}

uint64_t sub_2322B8E70()
{
  return MEMORY[0x24BEE0AD8]();
}

uint64_t sub_2322B8E7C()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_2322B8E88()
{
  return MEMORY[0x24BEE0B68]();
}

uint64_t sub_2322B8E94()
{
  return MEMORY[0x24BEE0B80]();
}

uint64_t sub_2322B8EA0()
{
  return MEMORY[0x24BEE0BB0]();
}

uint64_t sub_2322B8EAC()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_2322B8EB8()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_2322B8EC4()
{
  return MEMORY[0x24BEE0C18]();
}

uint64_t sub_2322B8ED0()
{
  return MEMORY[0x24BEE0C30]();
}

uint64_t sub_2322B8EDC()
{
  return MEMORY[0x24BEE0C38]();
}

uint64_t sub_2322B8EE8()
{
  return MEMORY[0x24BEE0C40]();
}

uint64_t sub_2322B8EF4()
{
  return MEMORY[0x24BEE0CA0]();
}

uint64_t sub_2322B8F00()
{
  return MEMORY[0x24BEE0DD0]();
}

uint64_t sub_2322B8F0C()
{
  return MEMORY[0x24BEE0DE0]();
}

uint64_t sub_2322B8F18()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_2322B8F24()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_2322B8F30()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_2322B8F3C()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_2322B8F48()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_2322B8F54()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_2322B8F60()
{
  return MEMORY[0x24BEE1250]();
}

uint64_t sub_2322B8F6C()
{
  return MEMORY[0x24BDCFC58]();
}

uint64_t sub_2322B8F78()
{
  return MEMORY[0x24BDCFC80]();
}

uint64_t sub_2322B8F84()
{
  return MEMORY[0x24BE45440]();
}

uint64_t sub_2322B8F90()
{
  return MEMORY[0x24BDBD7B0]();
}

uint64_t sub_2322B8F9C()
{
  return MEMORY[0x24BE459E0]();
}

uint64_t sub_2322B8FA8()
{
  return MEMORY[0x24BE45A00]();
}

uint64_t sub_2322B8FB4()
{
  return MEMORY[0x24BE45A10]();
}

uint64_t sub_2322B8FC0()
{
  return MEMORY[0x24BE45A68]();
}

uint64_t sub_2322B8FCC()
{
  return MEMORY[0x24BE45A88]();
}

uint64_t sub_2322B8FD8()
{
  return MEMORY[0x24BE45AA8]();
}

uint64_t sub_2322B8FE4()
{
  return MEMORY[0x24BE45AC0]();
}

uint64_t sub_2322B8FF0()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_2322B8FFC()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_2322B9008()
{
  return MEMORY[0x24BEE7920]();
}

uint64_t sub_2322B9014()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_2322B9020()
{
  return MEMORY[0x24BE45478]();
}

uint64_t sub_2322B902C()
{
  return MEMORY[0x24BE45480]();
}

uint64_t sub_2322B9038()
{
  return MEMORY[0x24BE45488]();
}

uint64_t sub_2322B9044()
{
  return MEMORY[0x24BE45498]();
}

uint64_t sub_2322B9050()
{
  return MEMORY[0x24BE454B0]();
}

uint64_t sub_2322B905C()
{
  return MEMORY[0x24BE454B8]();
}

uint64_t sub_2322B9068()
{
  return MEMORY[0x24BE454C0]();
}

uint64_t sub_2322B9074()
{
  return MEMORY[0x24BDD25E8]();
}

uint64_t sub_2322B9080()
{
  return MEMORY[0x24BEE5660]();
}

uint64_t sub_2322B908C()
{
  return MEMORY[0x24BEE5688]();
}

uint64_t sub_2322B9098()
{
  return MEMORY[0x24BEE56F0]();
}

uint64_t sub_2322B90A4()
{
  return MEMORY[0x24BEE5760]();
}

uint64_t sub_2322B90B0()
{
  return MEMORY[0x24BEE5770]();
}

uint64_t sub_2322B90BC()
{
  return MEMORY[0x24BEE5790]();
}

uint64_t sub_2322B90C8()
{
  return MEMORY[0x24BEE57A0]();
}

uint64_t sub_2322B90D4()
{
  return MEMORY[0x24BE49F88]();
}

uint64_t sub_2322B90E0()
{
  return MEMORY[0x24BDCFFE8]();
}

uint64_t sub_2322B90EC()
{
  return MEMORY[0x24BDD0078]();
}

uint64_t sub_2322B90F8()
{
  return MEMORY[0x24BDD0098]();
}

uint64_t sub_2322B9104()
{
  return MEMORY[0x24BEBCD58]();
}

uint64_t sub_2322B9110()
{
  return MEMORY[0x24BDE3B70]();
}

uint64_t sub_2322B911C()
{
  return MEMORY[0x24BDE3B78]();
}

uint64_t sub_2322B9128()
{
  return MEMORY[0x24BE455D0]();
}

uint64_t sub_2322B9134()
{
  return MEMORY[0x24BEBCFA0]();
}

uint64_t sub_2322B9140()
{
  return MEMORY[0x24BE455D8]();
}

uint64_t sub_2322B914C()
{
  return MEMORY[0x24BEBCFB8]();
}

uint64_t sub_2322B9158()
{
  return MEMORY[0x24BDD01E0]();
}

uint64_t sub_2322B9164()
{
  return MEMORY[0x24BEE5BB8]();
}

uint64_t sub_2322B9170()
{
  return MEMORY[0x24BEE5BC0]();
}

uint64_t sub_2322B917C()
{
  return MEMORY[0x24BDD0248]();
}

uint64_t sub_2322B9188()
{
  return MEMORY[0x24BEBD030]();
}

uint64_t sub_2322B9194()
{
  return MEMORY[0x24BEBD038]();
}

uint64_t sub_2322B91A0()
{
  return MEMORY[0x24BEBD050]();
}

uint64_t sub_2322B91AC()
{
  return MEMORY[0x24BEBD080]();
}

uint64_t sub_2322B91B8()
{
  return MEMORY[0x24BEBD088]();
}

uint64_t sub_2322B91C4()
{
  return MEMORY[0x24BEBD098]();
}

uint64_t sub_2322B91D0()
{
  return MEMORY[0x24BEBD130]();
}

uint64_t sub_2322B91DC()
{
  return MEMORY[0x24BEBD190]();
}

uint64_t sub_2322B91E8()
{
  return MEMORY[0x24BEBD1B0]();
}

uint64_t sub_2322B91F4()
{
  return MEMORY[0x24BEBD1F8]();
}

uint64_t sub_2322B9200()
{
  return MEMORY[0x24BEBD208]();
}

uint64_t sub_2322B920C()
{
  return MEMORY[0x24BEE1C28]();
}

uint64_t sub_2322B9218()
{
  return MEMORY[0x24BEE1C58]();
}

uint64_t sub_2322B9224()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_2322B9230()
{
  return MEMORY[0x24BEE1E68]();
}

uint64_t sub_2322B923C()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_2322B9248()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_2322B9254()
{
  return MEMORY[0x24BDD0548]();
}

uint64_t sub_2322B9260()
{
  return MEMORY[0x24BDD0600]();
}

uint64_t sub_2322B926C()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_2322B9278()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_2322B9284()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_2322B9290()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_2322B929C()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_2322B92A8()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_2322B92B4()
{
  return MEMORY[0x24BEE24D8]();
}

uint64_t sub_2322B92C0()
{
  return MEMORY[0x24BEE24F0]();
}

uint64_t sub_2322B92CC()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_2322B92D8()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_2322B92E4()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_2322B92F0()
{
  return MEMORY[0x24BEE2660]();
}

uint64_t sub_2322B92FC()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_2322B9308()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t sub_2322B9314()
{
  return MEMORY[0x24BEE2938]();
}

uint64_t sub_2322B9320()
{
  return MEMORY[0x24BEE2958]();
}

uint64_t sub_2322B932C()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t sub_2322B9338()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t sub_2322B9344()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_2322B9350()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_2322B935C()
{
  return MEMORY[0x24BEE2F58]();
}

uint64_t sub_2322B9368()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_2322B9374()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_2322B9380()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_2322B938C()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_2322B9398()
{
  return MEMORY[0x24BEE30A0]();
}

uint64_t sub_2322B93A4()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_2322B93B0()
{
  return MEMORY[0x24BEE31D0]();
}

uint64_t sub_2322B93BC()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_2322B93C8()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_2322B93D4()
{
  return MEMORY[0x24BEE3598]();
}

uint64_t sub_2322B93E0()
{
  return MEMORY[0x24BEE3A20]();
}

uint64_t sub_2322B93EC()
{
  return MEMORY[0x24BEE3A28]();
}

uint64_t sub_2322B93F8()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_2322B9404()
{
  return MEMORY[0x24BEE3B90]();
}

uint64_t sub_2322B9410()
{
  return MEMORY[0x24BEE3DE0]();
}

uint64_t sub_2322B941C()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_2322B9428()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_2322B9434()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_2322B9440()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_2322B944C()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_2322B9458()
{
  return MEMORY[0x24BEE4408]();
}

uint64_t sub_2322B9464()
{
  return MEMORY[0x24BEE4A98]();
}

uint64_t ACCBakerCreate()
{
  return MEMORY[0x24BDFC9C0]();
}

void CGContextAddEllipseInRect(CGContextRef c, CGRect rect)
{
  MEMORY[0x24BDBDCC8](c, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

void CGContextAddPath(CGContextRef c, CGPathRef path)
{
  MEMORY[0x24BDBDCE0](c, path);
}

void CGContextDrawPath(CGContextRef c, CGPathDrawingMode mode)
{
  MEMORY[0x24BDBDE18](c, *(_QWORD *)&mode);
}

void CGContextSetFillColorWithColor(CGContextRef c, CGColorRef color)
{
  MEMORY[0x24BDBDFD8](c, color);
}

void CGContextSetLineWidth(CGContextRef c, CGFloat width)
{
  MEMORY[0x24BDBE038](c, width);
}

void CGContextSetStrokeColorWithColor(CGContextRef c, CGColorRef color)
{
  MEMORY[0x24BDBE0D0](c, color);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBEFE8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBF020]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

uint64_t CGSVGDocumentCreateFromData()
{
  return MEMORY[0x24BE280D8]();
}

uint64_t HKDateFormatterFromTemplate()
{
  return MEMORY[0x24BE4A000]();
}

uint64_t HKHealthUIFrameworkBundle()
{
  return MEMORY[0x24BE4A0C0]();
}

uint64_t HKImproveHealthAndActivityAnalyticsAllowed()
{
  return MEMORY[0x24BDD2F40]();
}

uint64_t HKLocalizedStringForDateAndTemplate()
{
  return MEMORY[0x24BE4A0E0]();
}

uint64_t HKVisionLeftRightShortLocalizedString()
{
  return MEMORY[0x24BE4A278]();
}

uint64_t HKVisionPrescriptionGenerateGlassesPrescriptionSample()
{
  return MEMORY[0x24BE4A280]();
}

uint64_t HKVisionPrescriptionImageOnlyLocalizedString()
{
  return MEMORY[0x24BE4A288]();
}

uint64_t HKVisionPrescriptionSupportedImageUTTypeIdentifiers()
{
  return MEMORY[0x24BE4A290]();
}

uint64_t HKVisionPrescriptionTypeDetailedLongLocalizedString()
{
  return MEMORY[0x24BE4A298]();
}

NSString *NSTemporaryDirectory(void)
{
  return (NSString *)MEMORY[0x24BDD1280]();
}

CGContextRef UIGraphicsGetCurrentContext(void)
{
  return (CGContextRef)MEMORY[0x24BEBE2A8]();
}

void UIGraphicsPopContext(void)
{
  MEMORY[0x24BEBE2B8]();
}

void UIGraphicsPushContext(CGContextRef context)
{
  MEMORY[0x24BEBE2C0](context);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

uint64_t _swift_stdlib_strtod_clocale()
{
  return MEMORY[0x24BEE4B48]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x24BDADDC8]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x24BDADDD0](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x24BDADDD8](group);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x24BEE4C40]();
}

uint64_t swift_dynamicCastClassUnconditional()
{
  return MEMORY[0x24BEE4C48]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x24BEE4C60]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getExistentialMetatypeMetadata()
{
  return MEMORY[0x24BEE4D20]();
}

uint64_t swift_getExistentialTypeMetadata()
{
  return MEMORY[0x24BEE4D28]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getFunctionTypeMetadata()
{
  return MEMORY[0x24BEE4D50]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x24BEE4D98]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x24BEE4DE0]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x24BEE4DF8]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x24BEE4E28]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x24BEE4E90]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x24BEE4FB0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x24BEE4FC8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x24BEE4FD0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x24BEE4FD8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x24BEE5028]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x24BEE5030]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x24BEE5038]();
}

