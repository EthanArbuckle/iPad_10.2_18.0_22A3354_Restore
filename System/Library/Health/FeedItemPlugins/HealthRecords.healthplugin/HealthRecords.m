uint64_t variable initialization expression of BaseFeedItemViewController.feedItemData@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a2, 1, 1);
}

uint64_t variable initialization expression of BaseFeedItemViewController.$__lazy_storage_$_decoder()
{
  return 0;
}

double variable initialization expression of BaseFeedItemViewController.context@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t variable initialization expression of AccountSidebarContentConfigurationModel.accountId@<X0>(uint64_t a1@<X8>)
{
  return sub_2311714E0((uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], a1);
}

uint64_t variable initialization expression of AccountSidebarContentConfigurationProvider.accountIconProvider()
{
  sub_231171440();
  sub_231264528();
  sub_231262A34();
  sub_231262A28();
  sub_231262BC0();
  swift_allocObject();
  return sub_231262BA8();
}

unint64_t sub_231171440()
{
  unint64_t result;

  result = qword_255EB7868;
  if (!qword_255EB7868)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255EB7868);
  }
  return result;
}

uint64_t variable initialization expression of AccountSidebarContentConfigurationProvider.sidebarConfigProvider()
{
  sub_231263718();
  swift_allocObject();
  return sub_23126370C();
}

uint64_t variable initialization expression of AccountSidebarContentConfigurationProvider.accountId@<X0>(uint64_t a1@<X8>)
{
  return sub_2311714E0((uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], a1);
}

uint64_t variable initialization expression of AccountSidebarContentConfigurationProvider.fetchedAccountIcon@<X0>(uint64_t a1@<X8>)
{
  return sub_2311714E0(type metadata accessor for FetchedAccountIcon, a1);
}

uint64_t variable initialization expression of AccountSidebarContentConfigurationProvider.delegate()
{
  return 0;
}

uint64_t variable initialization expression of AccountStatusReloginSummaryTileFeedItemViewController.tileType@<X0>(uint64_t a1@<X8>)
{
  return sub_2311714E0((uint64_t (*)(_QWORD))MEMORY[0x24BE48800], a1);
}

uint64_t sub_2311714E0@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = a1(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 1, 1, v3);
}

double variable initialization expression of AccountStatusReloginSummaryTileFeedItemViewController.$__lazy_storage_$_factory@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t variable initialization expression of AccountStatusReloginSummaryTileFeedItemViewController.headerType@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BE42848];
  v3 = sub_23126346C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t variable initialization expression of AccountStatusReloginSummaryTileFeedItemViewController.showsSeparator()
{
  return 1;
}

uint64_t sub_23117157C()
{
  return sub_231264300();
}

uint64_t sub_231171584(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  char v4;
  int v5;
  int v6;
  char v7;

  v6 = 0;
  v7 = 1;
  result = MEMORY[0x2348D7710](a1, &v6);
  v4 = v7;
  v5 = v6;
  if (v7)
    v5 = 0;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v4;
  return result;
}

uint64_t sub_2311715D4(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;
  int v5;
  int v7;
  char v8;

  v7 = 0;
  v8 = 1;
  v3 = MEMORY[0x2348D771C](a1, &v7);
  v4 = v8;
  v5 = v7;
  if (v8)
    v5 = 0;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v4;
  return v3 & 1;
}

void sub_231171628(float *a1@<X8>)
{
  *a1 = MEMORY[0x2348D7728]();
}

uint64_t sub_23117164C(uint64_t a1, uint64_t a2)
{
  return sub_231171A3C(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_231171664(uint64_t a1, uint64_t a2)
{
  return sub_231171A3C(a1, a2, MEMORY[0x24BEE0CD8]);
}

void sub_231171678(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_231171684(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_231264084();
  *a2 = 0;
  return result;
}

uint64_t sub_2311716F8(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_231264090();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_231171774@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_23126409C();
  v2 = sub_23126406C();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

_QWORD *sub_2311717B4@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

_DWORD *sub_2311717C8@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

float sub_2311717D8@<S0>(_DWORD *a1@<X8>)
{
  float *v1;
  float result;

  result = *v1;
  *a1 = *(_DWORD *)v1;
  return result;
}

uint64_t sub_2311717E4()
{
  sub_231172048(&qword_255EB7978, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_231265758);
  sub_231172048((unint64_t *)&unk_255EB7980, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_2312656F8);
  return sub_231264A08();
}

uint64_t sub_23117187C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_23126409C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2311718A4()
{
  sub_231172048((unint64_t *)&qword_255EB7958, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_231265A3C);
  sub_231172048(&qword_255EB7960, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_231265990);
  return sub_231264A08();
}

uint64_t sub_231171928@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23126406C();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_23117196C()
{
  sub_231172048(&qword_255EB7968, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardIdentifier, (uint64_t)&unk_2312658A0);
  sub_231172048(&qword_255EB7970, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardIdentifier, (uint64_t)&unk_231265848);
  return sub_231264A08();
}

uint64_t sub_2311719F0()
{
  return sub_231264330();
}

uint64_t sub_2311719F8()
{
  return sub_231264C24();
}

void sub_231171A28()
{
  JUMPOUT(0x2348D7FF8);
}

uint64_t sub_231171A3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_23126409C();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_231171A78()
{
  sub_23126409C();
  sub_231264114();
  return swift_bridgeObjectRelease();
}

uint64_t sub_231171AB8()
{
  uint64_t v0;

  sub_23126409C();
  sub_231264C00();
  sub_231264114();
  v0 = sub_231264C3C();
  swift_bridgeObjectRelease();
  return v0;
}

BOOL sub_231171B28(float *a1, float *a2)
{
  return *a1 == *a2;
}

uint64_t sub_231171B3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_23126409C();
  v2 = v1;
  if (v0 == sub_23126409C() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_231264B58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_231171BC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD v17[2];
  unint64_t v18;
  unint64_t v19;

  v0 = sub_231261E94();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231171FD8(0, (unint64_t *)&qword_2541557B0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_231265570;
  v5 = (void *)sub_231261FF0();
  v6 = sub_2312626C8();
  if (v5)
  {
    v18 = 0x656C69666F72505BLL;
    v19 = 0xE90000000000003ALL;
    v17[1] = v6;
    v7 = v5;
    v17[0] = v0;
    v8 = v1;
    v9 = v7;
    v10 = objc_msgSend(v7, sel_identifier);
    sub_231261E7C();

    sub_231261E58();
    (*(void (**)(char *, _QWORD))(v8 + 8))(v3, v17[0]);
    sub_231264144();
    swift_bridgeObjectRelease();
    sub_231264144();

    v11 = v18;
    v12 = v19;
  }
  else
  {
    v12 = 0x800000023126B610;
    v11 = 0xD000000000000013;
  }
  v18 = v11;
  v19 = v12;
  sub_231264144();

  swift_bridgeObjectRelease();
  v13 = v19;
  *(_QWORD *)(v4 + 32) = v18;
  *(_QWORD *)(v4 + 40) = v13;
  v18 = 0;
  v19 = 0xE000000000000000;
  sub_2312648C4();
  swift_bridgeObjectRelease();
  v18 = 0xD00000000000001DLL;
  v19 = 0x800000023126B630;
  sub_231172048(&qword_255EB78D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_231264B28();
  sub_231264144();
  swift_bridgeObjectRelease();
  sub_231264144();
  v14 = v19;
  *(_QWORD *)(v4 + 48) = v18;
  *(_QWORD *)(v4 + 56) = v14;
  v18 = v4;
  sub_231171FD8(0, (unint64_t *)&qword_254155690, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_231171E78();
  v15 = sub_231264024();
  swift_bridgeObjectRelease();
  return v15;
}

unint64_t sub_231171E78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254155698;
  if (!qword_254155698)
  {
    sub_231171FD8(255, (unint64_t *)&qword_254155690, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2348D8544](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_254155698);
  }
  return result;
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_231171FD8(a1, (unint64_t *)&unk_255EB78E0, (uint64_t)&unk_25000B050, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for HKOntologyShardIdentifier(uint64_t a1)
{
  sub_231171FD8(a1, &qword_254154638, (uint64_t)&unk_25000B078, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for UILayoutPriority(uint64_t a1)
{
  sub_231171FD8(a1, &qword_255EB78F0, (uint64_t)&unk_25000B0A0, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for ComparisonResult(uint64_t a1)
{
  sub_231171FD8(a1, &qword_255EB78F8, (uint64_t)&unk_25000B0C8, MEMORY[0x24BEE4D40]);
}

__n128 initializeWithTake for ClinicalSharingOnboardingTileViewController.ViewModel(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_231171F58(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_231171F78(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for _NSRange(uint64_t a1)
{
  sub_231171FD8(a1, &qword_255EB7900, (uint64_t)&unk_25000B140, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for HKClinicalOnboardingOptions(uint64_t a1)
{
  sub_231171FD8(a1, &qword_255EB7908, (uint64_t)&unk_25000B168, MEMORY[0x24BEE4D40]);
}

void sub_231171FD8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = a4(0, a3);
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_23117201C()
{
  return sub_231172048(&qword_255EB7910, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_2312656BC);
}

uint64_t sub_231172048(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x2348D8544](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_231172088()
{
  return sub_231172048(&qword_255EB7918, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_231265690);
}

uint64_t sub_2311720B4()
{
  return sub_231172048(&qword_255EB7920, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_23126572C);
}

uint64_t sub_2311720E0()
{
  return sub_231172048(&qword_255EB7928, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardIdentifier, (uint64_t)&unk_231265810);
}

uint64_t sub_23117210C()
{
  return sub_231172048(&qword_255EB7930, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardIdentifier, (uint64_t)&unk_2312657E8);
}

uint64_t sub_231172138()
{
  return sub_231172048(&qword_255EB7938, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardIdentifier, (uint64_t)&unk_231265878);
}

uint64_t sub_231172164()
{
  return sub_231172048(&qword_255EB7940, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_231265954);
}

uint64_t sub_231172190()
{
  return sub_231172048(&qword_255EB7948, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_231265928);
}

uint64_t sub_2311721BC()
{
  return sub_231172048(&qword_255EB7950, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2312659C4);
}

void BaseFeedItemViewController.decoder.setter()
{
  swift_deletedMethodError();
  __break(1u);
}

uint64_t sub_231172204(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  __int128 v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  _QWORD v91[3];
  uint64_t v92;

  v84 = *v1;
  v3 = type metadata accessor for HealthRecordsGeneratorContext();
  v4 = *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64);
  v82 = *(_QWORD *)(v3 - 8);
  v83 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v79 = (uint64_t)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, &qword_2541556F0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v74 = (char *)&v62 - v7;
  v8 = sub_2312644C8();
  v76 = *(_QWORD *)(v8 - 8);
  v77 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v73 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231172F40();
  v11 = *(_QWORD *)(v10 - 8);
  v80 = v10;
  v81 = v11;
  MEMORY[0x24BDAC7A8](v10);
  v75 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311730A8();
  v86 = v13;
  v88 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v78 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231173190();
  v87 = v15;
  v89 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v85 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_231264534();
  v69 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v65 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23117334C();
  v68 = v18;
  v70 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v66 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_2312621DC();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_2312621F4();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v62 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = a1;
  sub_2311733CC(a1, (uint64_t)v1 + OBJC_IVAR____TtC13HealthRecords27RecordKindGeneratorPipeline_context);
  v71 = (id)sub_231262230();
  sub_2311735E0(0, &qword_254155718, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v28 = sub_231261FA8();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v31 = swift_allocObject();
  v72 = xmmword_231265AC0;
  *(_OWORD *)(v31 + 16) = xmmword_231265AC0;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v29 + 104))(v31 + v30, *MEMORY[0x24BE47460], v28);
  (*(void (**)(char *, _QWORD, uint64_t))(v21 + 104))(v23, *MEMORY[0x24BE47910], v20);
  sub_2312621E8();
  v32 = v63;
  (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v63 + OBJC_IVAR____TtC13HealthRecords27RecordKindGeneratorPipeline_domain, v27, v24);
  v33 = v64;
  sub_23126220C();
  sub_231173410(v91, v92);
  v34 = (void *)sub_231262194();
  objc_msgSend(v34, sel_supportsHealthRecords);

  sub_231173434((uint64_t)v91);
  sub_23126220C();
  sub_231173410(v91, v92);
  v35 = (void *)sub_231262194();
  sub_231173434((uint64_t)v91);
  v36 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v37 = v35;
  v71 = v37;
  v38 = v65;
  sub_231264540();

  sub_231172048(&qword_254155700, (uint64_t (*)(uint64_t))MEMORY[0x24BDD0078], MEMORY[0x24BDD0070]);
  v39 = v66;
  v40 = v67;
  sub_231263E80();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v38, v40);
  sub_231172048((unint64_t *)&qword_254155568, (uint64_t (*)(uint64_t))sub_23117334C, MEMORY[0x24BDB96C0]);
  v41 = v68;
  v42 = sub_231263E38();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v39, v41);
  *(_QWORD *)(v32 + OBJC_IVAR____TtC13HealthRecords27RecordKindGeneratorPipeline_indexerPublisher) = v42;
  v43 = (void *)sub_231262254();
  v91[0] = v42;
  swift_retain();
  v44 = v73;
  sub_2312644BC();
  v90 = v43;
  v45 = sub_2312644B0();
  v46 = (uint64_t)v74;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v74, 1, 1, v45);
  sub_231173008();
  sub_23117306C();
  sub_231172048((unint64_t *)&qword_2541555A8, (uint64_t (*)(uint64_t))sub_231173008, MEMORY[0x24BDB9AF8]);
  sub_231172048((unint64_t *)&qword_2541556F8, (uint64_t (*)(uint64_t))sub_23117306C, MEMORY[0x24BEE5670]);
  v47 = v75;
  sub_231263F04();
  sub_231173454(v46);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v44, v77);
  swift_release();
  v48 = v79;
  sub_2311733CC(v33, v79);
  v49 = (*(unsigned __int8 *)(v82 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
  v50 = (v83 + v49 + 7) & 0xFFFFFFFFFFFFFFF8;
  v51 = swift_allocObject();
  sub_23117353C(v48, v51 + v49);
  *(_QWORD *)(v51 + v50) = v84;
  sub_23117313C();
  sub_231172048(&qword_254154498, (uint64_t (*)(uint64_t))sub_231172F40, MEMORY[0x24BDB9920]);
  v52 = v78;
  v53 = v80;
  sub_231263E80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v47, v53);
  sub_2311735E0(0, &qword_254155730, (uint64_t (*)(uint64_t))sub_23117313C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v54 = swift_allocObject();
  *(_OWORD *)(v54 + 16) = v72;
  sub_2311733CC(v33, v48);
  v55 = type metadata accessor for RecordKindGenerator(0);
  swift_allocObject();
  v56 = sub_2311B3F40(v48);
  *(_QWORD *)(v54 + 56) = v55;
  *(_QWORD *)(v54 + 64) = sub_231172048(&qword_254154E38, type metadata accessor for RecordKindGenerator, (uint64_t)&unk_2312677E4);
  *(_QWORD *)(v54 + 32) = v56;
  sub_231172048(&qword_2541541E0, (uint64_t (*)(uint64_t))sub_2311730A8, MEMORY[0x24BDB96C0]);
  v58 = v85;
  v57 = v86;
  sub_231263EEC();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v52, v57);
  sub_231172048(&qword_254154030, (uint64_t (*)(uint64_t))sub_231173190, MEMORY[0x24BDB9530]);
  v59 = v87;
  v60 = sub_231263E38();

  sub_231173638(v33);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v58, v59);
  *(_QWORD *)(v32 + 16) = v60;
  return v32;
}

void sub_231172AE4(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_231172AF0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = type metadata accessor for HealthRecordsGeneratorContext();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_231263B5C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231263B08();
  v13 = sub_231263B50();
  v14 = sub_2312643CC();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v25 = v9;
    v16 = v15;
    v17 = swift_slowAlloc();
    *(_DWORD *)v16 = 136446466;
    v26 = a1;
    v27 = v17;
    v28 = a2;
    swift_getMetatypeMetadata();
    v18 = sub_2312640B4();
    v28 = sub_2311CBDE4(v18, v19, &v27);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2082;
    v28 = type metadata accessor for RecordKindGenerator(0);
    sub_231173674();
    v20 = sub_2312640B4();
    v28 = sub_2311CBDE4(v20, v21, &v27);
    a1 = v26;
    sub_231264750();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23116F000, v13, v14, "[%{public}s]: Emitting %{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v17, -1, -1);
    MEMORY[0x2348D85EC](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v25);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  sub_2311733CC(a1, (uint64_t)v8);
  v22 = type metadata accessor for RecordKindGenerator(0);
  swift_allocObject();
  v23 = sub_2311B3F40((uint64_t)v8);
  a3[3] = v22;
  result = sub_231172048(&qword_254154E38, type metadata accessor for RecordKindGenerator, (uint64_t)&unk_2312677E4);
  a3[4] = result;
  *a3 = v23;
  return result;
}

uint64_t sub_231172D94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC13HealthRecords27RecordKindGeneratorPipeline_domain;
  v2 = sub_2312621F4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_231173638(v0 + OBJC_IVAR____TtC13HealthRecords27RecordKindGeneratorPipeline_context);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_231172E0C()
{
  return type metadata accessor for RecordKindGeneratorPipeline();
}

uint64_t type metadata accessor for RecordKindGeneratorPipeline()
{
  uint64_t result;

  result = qword_254155368;
  if (!qword_254155368)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_231172E50()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2312621F4();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for HealthRecordsGeneratorContext();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_231172EEC()
{
  return swift_retain();
}

uint64_t sub_231172EF8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC13HealthRecords27RecordKindGeneratorPipeline_domain;
  v4 = sub_2312621F4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void sub_231172F40()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541544A0)
  {
    sub_231173008();
    sub_23117306C();
    sub_231172048((unint64_t *)&qword_2541555A8, (uint64_t (*)(uint64_t))sub_231173008, MEMORY[0x24BDB9AF8]);
    sub_231172048((unint64_t *)&qword_2541556F8, (uint64_t (*)(uint64_t))sub_23117306C, MEMORY[0x24BEE5670]);
    v0 = sub_231263CAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541544A0);
  }
}

void sub_231173008()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541555B0)
  {
    v0 = sub_231263D0C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541555B0);
  }
}

unint64_t sub_23117306C()
{
  unint64_t result;

  result = qword_2541558F0;
  if (!qword_2541558F0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2541558F0);
  }
  return result;
}

void sub_2311730A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541541E8)
  {
    sub_231172F40();
    sub_23117313C();
    sub_231172048(&qword_254154498, (uint64_t (*)(uint64_t))sub_231172F40, MEMORY[0x24BDB9920]);
    v0 = sub_231263C1C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541541E8);
  }
}

unint64_t sub_23117313C()
{
  unint64_t result;

  result = qword_254155508;
  if (!qword_254155508)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_254155508);
  }
  return result;
}

void sub_231173190()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254154038)
  {
    sub_231173258();
    sub_2311730A8();
    sub_231172048((unint64_t *)&qword_254155578, (uint64_t (*)(uint64_t))sub_231173258, MEMORY[0x24BDB9970]);
    sub_231172048(&qword_2541541E0, (uint64_t (*)(uint64_t))sub_2311730A8, MEMORY[0x24BDB96C0]);
    v0 = sub_231263BC8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254154038);
  }
}

void sub_231173258()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254155580)
  {
    sub_2311735E0(255, &qword_254155640, (uint64_t (*)(uint64_t))sub_23117313C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_2311732EC();
    v0 = sub_231263CC4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254155580);
  }
}

unint64_t sub_2311732EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254155648;
  if (!qword_254155648)
  {
    sub_2311735E0(255, &qword_254155640, (uint64_t (*)(uint64_t))sub_23117313C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2348D8544](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_254155648);
  }
  return result;
}

void sub_23117334C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254155570)
  {
    sub_231264534();
    sub_231172048(&qword_254155700, (uint64_t (*)(uint64_t))MEMORY[0x24BDD0078], MEMORY[0x24BDD0070]);
    v0 = sub_231263C1C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254155570);
  }
}

uint64_t sub_2311733CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HealthRecordsGeneratorContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_QWORD *sub_231173410(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_231173434(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_231173454(uint64_t a1)
{
  uint64_t v2;

  sub_2311735E0(0, &qword_2541556F0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2311734A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for HealthRecordsGeneratorContext();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_23126226C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocObject();
}

uint64_t sub_23117353C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HealthRecordsGeneratorContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_231173580@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_231172AF0(v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)), a1);
}

void sub_2311735E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_231173638(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for HealthRecordsGeneratorContext();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_231173674()
{
  unint64_t result;

  result = qword_255EB79F0;
  if (!qword_255EB79F0)
  {
    type metadata accessor for RecordKindGenerator(255);
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255EB79F0);
  }
  return result;
}

id sub_2311736AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  double v11;
  void *v12;
  id v13;
  uint64_t v15;

  v1 = v0;
  sub_2311787F4(0, &qword_255EB7C60, (void (*)(uint64_t))MEMORY[0x24BEBD1F8]);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v15 - v3;
  v5 = qword_255EB7A08;
  v6 = *(void **)(v0 + qword_255EB7A08);
  if (v6)
  {
    v7 = *(id *)(v0 + qword_255EB7A08);
  }
  else
  {
    v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD430]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    sub_231178AD0(0, &qword_255EB7C80);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    v9 = (void *)sub_2312646A8();
    objc_msgSend(v8, sel_addAction_forControlEvents_, v9, 64);

    sub_231174248();
    v10 = sub_231264708();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 0, 1, v10);
    sub_231264714();
    objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    LODWORD(v11) = 1148846080;
    objc_msgSend(v8, sel_setContentHuggingPriority_forAxis_, 0, v11);
    objc_msgSend(v8, sel_setAlpha_, 0.0);
    v12 = *(void **)(v1 + v5);
    *(_QWORD *)(v1 + v5) = v8;
    v7 = v8;

    v6 = 0;
  }
  v13 = v6;
  return v7;
}

void sub_23117389C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x2348D8688](v2);
  if (v3)
  {
    v4 = (void *)v3;
    sub_2311765C8(0);

  }
}

uint64_t sub_2311738F0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void *v25;
  id v26;
  uint64_t v27;
  _QWORD v28[3];
  uint64_t v29;

  v1 = v0;
  sub_231178A30(0, (unint64_t *)&qword_2541534D0, &qword_2541531B0);
  v3 = v2;
  v27 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v28 - v4 + 16;
  v6 = type metadata accessor for UserDomainConceptFeedItemData();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  sub_2311787F4(0, qword_254152810, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v28 - v11 + 16;
  v13 = (uint64_t)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x60);
  swift_beginAccess();
  sub_231178A84(v13, (uint64_t)v12, qword_254152810, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6))
  {
    sub_2311786C0((uint64_t)v12, qword_254152810, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
    v14 = 0;
    return v14 & 1;
  }
  sub_231178454((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptFeedItemData);
  sub_2311786C0((uint64_t)v12, qword_254152810, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
  v15 = v27;
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v5, &v9[*(int *)(v6 + 20)], v3);
  sub_231178498((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptFeedItemData);
  v16 = (void *)sub_231263F88();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v3);
  sub_2312628A8();
  v17 = (void *)sub_231262884();
  v18 = (uint64_t)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x70);
  swift_beginAccess();
  result = sub_231178704(v18, (uint64_t)v28, (uint64_t)&qword_2541548B0, (uint64_t)&qword_2541548A0, MEMORY[0x24BE443C0], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_231178754);
  v20 = v29;
  if (v29)
  {
    v21 = sub_231173410(v28, v29);
    v22 = *(_QWORD *)(v20 - 8);
    MEMORY[0x24BDAC7A8](v21);
    v24 = (char *)v28 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
    (*(void (**)(char *))(v22 + 16))(v24);
    v25 = (void *)sub_23126376C();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v20);
    v26 = objc_msgSend(v25, sel_profileIdentifier);

    sub_231262848();
    sub_231173434((uint64_t)v28);
    v14 = sub_231263A6C();

    swift_release();
    return v14 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_231173C38(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v21 = a1;
  v4 = sub_231263100();
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311787F4(0, qword_254152810, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v21 - v8;
  v10 = type metadata accessor for UserDomainConceptFeedItemData();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (uint64_t)v2 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v2) + 0x60);
  swift_beginAccess();
  sub_231178A84(v14, (uint64_t)v9, qword_254152810, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_2311786C0((uint64_t)v9, qword_254152810, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
    return 0;
  }
  else
  {
    sub_231178840((uint64_t)v9, (uint64_t)v13);
    sub_231175B5C((uint64_t)v13, (uint64_t)v6);
    sub_231171FD8(0, (unint64_t *)&qword_2541557B0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_231265B40;
    strcpy((char *)(v16 + 32), "LabLatestView");
    *(_WORD *)(v16 + 46) = -4864;
    *(_QWORD *)(v16 + 48) = v21;
    *(_QWORD *)(v16 + 56) = a2;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v16 + 64) = sub_2312630F4();
    *(_QWORD *)(v16 + 72) = v17;
    v18 = (void *)sub_2312641EC();
    swift_bridgeObjectRelease();
    v19 = (id)HKUIJoinStringsForAutomationIdentifier();

    if (v19)
    {
      v15 = sub_23126409C();

    }
    else
    {
      v15 = 0;
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v23);
    sub_231178498((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptFeedItemData);
  }
  return v15;
}

void sub_231173ED0()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  objc_super v15;

  v1 = v0;
  v15.receiver = v0;
  v15.super_class = (Class)type metadata accessor for ConceptLatestValueFeedItemViewController();
  objc_msgSendSuper2(&v15, sel_viewDidLoad);
  v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  v3 = v2;
  objc_msgSend(v2, sel_addSubview_, *(_QWORD *)&v1[qword_255EB79F8]);

  v4 = objc_msgSend(v1, sel_view);
  if (!v4)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v5 = v4;
  objc_msgSend(v4, sel_addSubview_, *(_QWORD *)&v1[qword_255EB7A00]);

  v6 = objc_msgSend(v1, sel_view);
  if (!v6)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v7 = v6;
  v8 = sub_2311736AC();
  objc_msgSend(v7, sel_addSubview_, v8);

  v9 = objc_msgSend(v1, sel_view);
  if (!v9)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v10 = v9;
  sub_231261F60();
  v11 = (id)*MEMORY[0x24BDE58E8];
  sub_231264630();

  v12 = objc_msgSend(v1, sel_view);
  if (v12)
  {
    v13 = v12;
    v14 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemGroupedBackgroundColor);
    objc_msgSend(v13, sel_setBackgroundColor_, v14);

    sub_231174440();
    sub_231174EEC();
    sub_231174188();
    return;
  }
LABEL_11:
  __break(1u);
}

void sub_2311740A4(void *a1)
{
  id v1;

  v1 = a1;
  sub_231173ED0();

}

void sub_2311740D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x2348D8688](v1);
  if (v2)
  {
    v3 = (void *)v2;
    sub_231174188();
    v4 = objc_msgSend(v3, sel_view);
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v4, sel_layoutIfNeeded);

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_23117415C(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

void sub_231174188()
{
  uint64_t v0;
  id v1;

  if (*(_BYTE *)(v0 + qword_255EC1FF8) == 1)
  {
    sub_231262DDC();
    sub_231262DE8();
    sub_231262E18();
    v1 = sub_2311736AC();
    objc_msgSend(v1, sel_setAlpha_, 1.0);
  }
  else
  {
    sub_231262DDC();
    sub_231262DE8();
    sub_231262E18();
    v1 = sub_2311736AC();
    objc_msgSend(v1, sel_setAlpha_, 0.0);
  }

  sub_231174440();
}

void sub_231174248()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  v13 = sub_2312646C0();
  v0 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_2312646E4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312646FC();
  sub_2311738F0();
  v7 = objc_msgSend((id)objc_opt_self(), sel_configurationWithScale_, 2);
  v8 = (void *)sub_23126406C();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v8, v7);

  v10 = v9;
  sub_2312646F0();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BEBD178], v3);
  sub_2312646B4();
  (*(void (**)(char *, _QWORD, uint64_t))(v0 + 104))(v2, *MEMORY[0x24BEBD070], v13);
  sub_2312646CC();
  v11 = objc_msgSend((id)objc_opt_self(), sel_systemYellowColor);
  sub_2312646D8();

}

void sub_231174440()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  double v51;
  id v52;
  id v53;
  void *v54;
  id v55;
  id v56;
  uint64_t v57;
  id v58;
  void *v59;
  id v60;
  id v61;
  uint64_t v62;
  int v63;
  SEL *p_base_props;
  id v65;
  id v66;
  unint64_t v67;
  const char *v68;
  id v69;
  id v70;
  id v71;
  id v72;
  void *v73;
  uint64_t v74;
  id v75;
  id v76;
  id v77;
  void *v78;
  id v79;
  id v80;
  id v81;
  double v82;
  uint64_t v83;
  id v84;
  id v85;
  void *v86;
  uint64_t v87;
  id v88;

  v1 = v0;
  v2 = (void *)objc_opt_self();
  v3 = (uint64_t *)&v0[qword_255EC1FF0];
  swift_beginAccess();
  sub_231178AD0(0, &qword_255EBA000);
  swift_bridgeObjectRetain();
  v4 = (void *)sub_2312641EC();
  swift_bridgeObjectRelease();
  v88 = v2;
  objc_msgSend(v2, sel_deactivateConstraints_, v4);

  sub_231171FD8(0, (unint64_t *)&qword_254154688, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_231265B50;
  v6 = *(void **)&v1[qword_255EB79F8];
  v7 = objc_msgSend(v6, sel_leadingAnchor);
  v8 = objc_msgSend(v1, sel_view);
  if (!v8)
    goto LABEL_32;
  v9 = v8;
  v10 = objc_msgSend(v8, sel_leadingAnchor);

  v11 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v10);
  *(_QWORD *)(v5 + 32) = v11;
  v12 = objc_msgSend(v6, sel_topAnchor);
  v13 = objc_msgSend(v1, sel_view);
  if (!v13)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v14 = v13;
  v15 = objc_msgSend(v13, sel_topAnchor);

  v16 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v15);
  *(_QWORD *)(v5 + 40) = v16;
  v17 = *(void **)&v1[qword_255EB7A00];
  v18 = objc_msgSend(v17, sel_leadingAnchor);
  v19 = objc_msgSend(v1, sel_view);
  if (!v19)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v20 = v19;
  v21 = objc_msgSend(v19, sel_leadingAnchor);

  v22 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v21);
  *(_QWORD *)(v5 + 48) = v22;
  v23 = objc_msgSend(v17, sel_trailingAnchor);
  v24 = sub_2311736AC();
  v25 = objc_msgSend(v24, (SEL)&stru_250014128.name + 6);

  v26 = objc_msgSend(v23, sel_constraintEqualToAnchor_constant_, v25, -7.0);
  *(_QWORD *)(v5 + 56) = v26;
  v27 = objc_msgSend(v17, sel_topAnchor);
  v28 = objc_msgSend(v6, sel_bottomAnchor);
  v29 = objc_msgSend(v27, sel_constraintGreaterThanOrEqualToAnchor_constant_, v28, 7.0);

  v30 = sub_231264504();
  *(_QWORD *)(v5 + 64) = v30;
  v31 = objc_msgSend(v17, sel_bottomAnchor);
  v32 = objc_msgSend(v1, sel_view);
  if (!v32)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v33 = v32;
  v34 = objc_msgSend(v32, sel_bottomAnchor);

  v35 = objc_msgSend(v31, sel_constraintEqualToAnchor_, v34);
  *(_QWORD *)(v5 + 72) = v35;
  v36 = sub_2311736AC();
  v37 = objc_msgSend(v36, sel_centerYAnchor);

  v38 = objc_msgSend(v1, sel_view);
  if (!v38)
  {
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v39 = v38;
  v40 = objc_msgSend(v38, sel_centerYAnchor);

  v41 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v40);
  *(_QWORD *)(v5 + 80) = v41;
  v42 = sub_2311736AC();
  v43 = objc_msgSend(v42, sel_heightAnchor);

  v44 = sub_2311736AC();
  v45 = objc_msgSend(v44, sel_widthAnchor);

  v46 = objc_msgSend(v43, sel_constraintEqualToAnchor_multiplier_, v45, 1.0);
  *(_QWORD *)(v5 + 88) = v46;
  v47 = sub_2311736AC();
  v48 = objc_msgSend(v47, sel_widthAnchor);

  v49 = objc_msgSend(v1, sel_traitCollection);
  v50 = objc_msgSend(v49, sel_preferredContentSizeCategory);

  LOBYTE(v49) = sub_231264564();
  v51 = 32.0;
  if ((v49 & 1) != 0)
    v51 = 64.0;
  v52 = objc_msgSend(v48, sel_constraintEqualToConstant_, v51);

  *(_QWORD *)(v5 + 96) = v52;
  v53 = objc_msgSend(v1, sel_view);
  if (!v53)
    goto LABEL_37;
  v54 = v53;
  v55 = objc_msgSend(v53, sel_heightAnchor);

  v56 = objc_msgSend(v55, sel_constraintGreaterThanOrEqualToConstant_, 115.0);
  v57 = sub_231264504();

  *(_QWORD *)(v5 + 104) = v57;
  v58 = objc_msgSend(v1, sel_view);
  if (!v58)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v59 = v58;
  v60 = objc_msgSend(v58, sel_heightAnchor);

  v61 = objc_msgSend(v60, sel_constraintEqualToConstant_, 115.0);
  v62 = sub_231264504();

  *(_QWORD *)(v5 + 112) = v62;
  sub_231264210();
  *v3 = v5;
  swift_bridgeObjectRelease();
  v63 = v1[qword_255EC1FF8];
  p_base_props = (SEL *)&NewRecordsDataProvider.base_props;
  v65 = objc_msgSend(v6, sel_trailingAnchor);
  v66 = sub_2311736AC();
  v67 = (unint64_t)objc_msgSend(v66, sel_leadingAnchor);

  v68 = sel_constraintEqualToAnchor_constant_;
  if (v63 == 1)
  {
    v69 = objc_msgSend(v65, sel_constraintEqualToAnchor_constant_, v67, -7.0);

    v70 = sub_2311736AC();
    v71 = objc_msgSend(v70, sel_trailingAnchor);

    v72 = objc_msgSend(v1, (SEL)&stru_250014148);
    if (!v72)
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v73 = v72;
    p_base_props = (SEL *)objc_msgSend(v72, sel_trailingAnchor);

    v65 = objc_msgSend(v71, sel_constraintEqualToAnchor_constant_, p_base_props, -16.0);
    swift_beginAccess();
    v67 = *v3;
    if ((unint64_t)*v3 >> 62)
    {
      swift_bridgeObjectRetain();
      v1 = (char *)sub_2312649A8();
      swift_bridgeObjectRelease();
      v74 = (uint64_t)(v1 + 2);
      if (!__OFADD__(v1, 2))
        goto LABEL_21;
    }
    else
    {
      v1 = *(char **)((v67 & 0xFFFFFFFFFFFFF8) + 0x10);
      v74 = (uint64_t)(v1 + 2);
      if (!__OFADD__(v1, 2))
        goto LABEL_21;
    }
    __break(1u);
  }
  v69 = objc_msgSend(v65, v68, v67, 7.0);

  v75 = sub_2311736AC();
  v76 = objc_msgSend(v75, p_base_props[177]);

  v77 = objc_msgSend(v1, (SEL)&stru_250014148);
  if (!v77)
  {
LABEL_40:
    __break(1u);
    return;
  }
  v78 = v77;
  v79 = objc_msgSend(v77, p_base_props[177]);

  v80 = objc_msgSend(v1, sel_traitCollection);
  v81 = objc_msgSend(v80, sel_preferredContentSizeCategory);

  LOBYTE(v80) = sub_231264564();
  v82 = 56.0;
  if ((v80 & 1) == 0)
    v82 = 24.0;
  v65 = objc_msgSend(v76, sel_constraintEqualToAnchor_constant_, v79, v82);

  swift_beginAccess();
  if ((unint64_t)*v3 >> 62)
  {
    swift_bridgeObjectRetain();
    v87 = sub_2312649A8();
    swift_bridgeObjectRelease();
    v74 = v87 + 2;
    if (!__OFADD__(v87, 2))
      goto LABEL_21;
    goto LABEL_31;
  }
  v83 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  v74 = v83 + 2;
  if (__OFADD__(v83, 2))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
LABEL_21:
  sub_2311785D0(v74, 1);
  sub_231264210();
  v84 = v69;
  MEMORY[0x2348D75E4]();
  if (*(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_23126424C();
  sub_231264264();
  sub_231264210();
  v85 = v65;
  MEMORY[0x2348D75E4]();
  if (*(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_23126424C();
  sub_231264264();
  sub_231264210();
  swift_endAccess();

  swift_bridgeObjectRetain();
  v86 = (void *)sub_2312641EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v88, sel_activateConstraints_, v86);

}

uint64_t sub_231174EEC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  void (*v20)(uint64_t *, uint64_t, uint64_t);
  id v21;
  char *v22;
  uint64_t v23;
  char v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[5];

  sub_2311787F4(0, &qword_255EB7C60, (void (*)(uint64_t))MEMORY[0x24BEBD1F8]);
  MEMORY[0x24BDAC7A8](v1);
  v33 = (char *)&v32 - v2;
  sub_2311787F4(0, &qword_255EB7CA0, (void (*)(uint64_t))MEMORY[0x24BE49870]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v32 - v4;
  v6 = sub_231263100();
  v35 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v34 = (uint64_t)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311787F4(0, qword_254152810, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v32 - v9;
  v11 = type metadata accessor for UserDomainConceptFeedItemData();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311752A8();
  v15 = (uint64_t)v0 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0x60);
  swift_beginAccess();
  sub_231178A84(v15, (uint64_t)v10, qword_254152810, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    return sub_2311786C0((uint64_t)v10, qword_254152810, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
  sub_231178840((uint64_t)v10, (uint64_t)v14);
  v17 = v34;
  sub_231175B5C((uint64_t)v14, v34);
  v36[3] = v6;
  v36[4] = MEMORY[0x24BE49868];
  v18 = sub_231178884(v36);
  v19 = v35;
  v20 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v35 + 16);
  v20(v18, v17, v6);
  sub_231262E00();
  v20((uint64_t *)v5, v17, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v5, 0, 1, v6);
  sub_231262E24();
  v21 = sub_2311736AC();
  v22 = v33;
  sub_231174248();
  v23 = sub_231264708();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 0, 1, v23);
  sub_231264714();

  v24 = sub_2311738F0();
  v25 = (v24 & 1) == 0;
  if ((v24 & 1) != 0)
    v26 = 0x7475426E69706E55;
  else
    v26 = 0x6F747475426E6950;
  if (v25)
    v27 = 0xE90000000000006ELL;
  else
    v27 = 0xEB000000006E6F74;
  sub_231173C38(v26, v27);
  v29 = v28;
  swift_bridgeObjectRelease();
  if (v29)
  {
    v30 = sub_2311736AC();
    v31 = (void *)sub_23126406C();
    swift_bridgeObjectRelease();
    objc_msgSend(v30, sel_setAccessibilityIdentifier_, v31);

  }
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v6);
  return sub_231178498((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptFeedItemData);
}

uint64_t sub_2311752A8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;

  v1 = sub_231263B5C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231263B2C();
  v5 = v0;
  v6 = sub_231263B50();
  v7 = sub_2312643CC();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v15 = v1;
    v9 = (uint8_t *)v8;
    v10 = swift_slowAlloc();
    v17 = v10;
    *(_DWORD *)v9 = 136446210;
    ObjectType = swift_getObjectType();
    sub_2311788C0();
    v11 = sub_2312640B4();
    ObjectType = sub_2311CBDE4(v11, v12, &v17);
    sub_231264750();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23116F000, v6, v7, "reloadView: %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v10, -1, -1);
    MEMORY[0x2348D85EC](v9, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v15);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

uint64_t sub_23117547C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  void *v37;
  uint64_t v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[3];
  uint64_t v68;

  v2 = v1;
  sub_231178A30(0, (unint64_t *)&qword_2541534D0, &qword_2541531B0);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v54 - v7;
  v66 = type metadata accessor for UserDomainConceptFeedItemData();
  v64 = *(_QWORD *)(v66 - 8);
  MEMORY[0x24BDAC7A8](v66);
  v60 = (uint64_t)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311787F4(0, qword_254152810, v10);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v65 = (uint64_t)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v54 - v14;
  v16 = sub_23126292C();
  v62 = *(_QWORD *)(v16 - 8);
  v63 = v16;
  v17 = MEMORY[0x24BDAC7A8](v16);
  v59 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v61 = (char *)&v54 - v19;
  v20 = sub_231263424();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v54 - v25;
  if (*((_BYTE *)v2 + qword_255EC1FF8) == 1)
    return sub_2311765C8(0);
  v57 = v8;
  v58 = v6;
  v55 = v5;
  sub_2311761C8(a1);
  v28 = (uint64_t)v2 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v2) + 0x70);
  swift_beginAccess();
  result = sub_231178704(v28, (uint64_t)v67, (uint64_t)&qword_2541548B0, (uint64_t)&qword_2541548A0, MEMORY[0x24BE443C0], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_231178754);
  v29 = v68;
  if (v68)
  {
    v30 = sub_231173410(v67, v68);
    v56 = &v54;
    v31 = *(_QWORD *)(v29 - 8);
    MEMORY[0x24BDAC7A8](v30);
    v33 = (char *)&v54 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v31 + 16))(v33);
    sub_231263778();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v29);
    (*(void (**)(char *, _QWORD, uint64_t))(v21 + 104))(v24, *MEMORY[0x24BE42650], v20);
    v34 = sub_231263418();
    v35 = *(void (**)(char *, uint64_t))(v21 + 8);
    v35(v24, v20);
    v35(v26, v20);
    sub_231173434((uint64_t)v67);
    v36 = 15;
    if ((v34 & 1) != 0)
      v36 = 16;
    v56 = (uint64_t *)v36;
    sub_2312629EC();
    v37 = (void *)sub_2312629E0();
    v38 = (uint64_t)v2 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v2) + 0x60);
    swift_beginAccess();
    sub_231178A84(v38, (uint64_t)v15, qword_254152810, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
    v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48);
    v40 = v66;
    if (v39(v15, 1, v66))
    {
      sub_2311786C0((uint64_t)v15, qword_254152810, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
      v42 = v61;
      v41 = v62;
      v43 = v63;
      (*(void (**)(char *, _QWORD, uint64_t))(v62 + 104))(v61, *MEMORY[0x24BE490D0], v63);
    }
    else
    {
      v44 = v60;
      sub_231178454((uint64_t)v15, v60, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptFeedItemData);
      sub_2311786C0((uint64_t)v15, qword_254152810, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
      v41 = v62;
      v43 = v63;
      v45 = v59;
      (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v59, v44, v63);
      v40 = v66;
      sub_231178498(v44, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptFeedItemData);
      v42 = v61;
      (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v61, v45, v43);
    }
    v47 = v57;
    v46 = v58;
    v48 = v65;
    sub_231178A84(v38, v65, qword_254152810, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
    if (v39((char *)v48, 1, v40))
    {
      sub_2311786C0(v48, qword_254152810, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
      v49 = 0;
    }
    else
    {
      v50 = v48;
      v51 = v48;
      v52 = v60;
      sub_231178454(v50, v60, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptFeedItemData);
      sub_2311786C0(v51, qword_254152810, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
      v53 = v55;
      (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v47, v52 + *(int *)(v40 + 20), v55);
      sub_231178498(v52, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptFeedItemData);
      v49 = (void *)sub_231263F88();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v53);
    }
    sub_2312629A4();

    return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v42, v43);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_231175A38(void *a1)
{
  void *v1;
  id v2;
  char v3;
  int v4;
  id v5;
  id v6;
  int v7;

  if (a1)
  {
    v2 = objc_msgSend(a1, sel_preferredContentSizeCategory);
    v3 = sub_231264564();

    v4 = v3 & 1;
  }
  else
  {
    v4 = 2;
  }
  v5 = objc_msgSend(v1, sel_traitCollection);
  v6 = objc_msgSend(v5, sel_preferredContentSizeCategory);

  v7 = sub_231264564();
  if (v4 == 2 || ((v7 ^ (v4 != 0)) & 1) != 0)
    sub_231174EEC();
}

void sub_231175B04(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;

  v5 = a3;
  v6 = a1;
  sub_231175A38(a3);

}

uint64_t sub_231175B5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void *v35;
  void *v36;
  uint64_t v37;
  void (*v38)(uint64_t);
  uint64_t v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  id v46;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  void *v58;
  id v59;
  id v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v74[3];
  uint64_t v75;

  v3 = v2;
  v72 = a2;
  sub_2311789C4();
  MEMORY[0x24BDAC7A8](v5);
  v68 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311787F4(0, (unint64_t *)&qword_254154938, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v61 - v8;
  v10 = sub_231261E40();
  v66 = *(_QWORD *)(v10 - 8);
  v67 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v61 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_231262B60();
  v63 = *(_QWORD *)(v12 - 8);
  v64 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311787F4(0, (unint64_t *)&qword_254151918, (void (*)(uint64_t))MEMORY[0x24BDCEEA8]);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v61 - v16;
  v18 = sub_2312627B8();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_23126292C();
  v23 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
  v65 = a1;
  v23(v21, a1, v22);
  v24 = *MEMORY[0x24BE48E88];
  v69 = v19;
  v70 = v18;
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 104);
  v62 = v21;
  v25(v21, v24, v18);
  sub_2312628A8();
  v26 = (void *)sub_231262884();
  v27 = *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v3) + 0x70);
  v71 = v3;
  v28 = (uint64_t)v3 + v27;
  swift_beginAccess();
  result = sub_231178704(v28, (uint64_t)v74, (uint64_t)&qword_2541548B0, (uint64_t)&qword_2541548A0, MEMORY[0x24BE443C0], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_231178754);
  v30 = v75;
  if (v75)
  {
    v31 = sub_231173410(v74, v75);
    v32 = *(_QWORD *)(v30 - 8);
    MEMORY[0x24BDAC7A8](v31);
    v34 = (char *)&v61 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v32 + 16))(v34);
    v35 = (void *)sub_23126376C();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v30);
    v36 = (void *)sub_231262890();

    sub_231173434((uint64_t)v74);
    v37 = sub_231261EAC();
    v38 = (void (*)(uint64_t))MEMORY[0x24BDCEEA8];
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v17, 1, 1, v37);
    sub_231262B54();
    v73 = sub_2312632EC();
    v40 = v39;
    (*(void (**)(char *, uint64_t))(v63 + 8))(v14, v64);
    sub_2311786C0((uint64_t)v17, (unint64_t *)&qword_254151918, v38);
    v41 = (int *)type metadata accessor for UserDomainConceptFeedItemData();
    v42 = v65;
    sub_231178A84(v65 + v41[7], (uint64_t)v9, (unint64_t *)&qword_254154938, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    v44 = v66;
    v43 = v67;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v9, 1, v67) == 1)
    {
      v64 = v40;
      sub_2311786C0((uint64_t)v9, (unint64_t *)&qword_254154938, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    }
    else
    {
      swift_bridgeObjectRelease();
      v45 = v61;
      (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v61, v9, v43);
      v46 = objc_msgSend(v36, sel_utcDateFormatter);
      v47 = (void *)sub_231261DE0();
      v48 = objc_msgSend(v46, sel_relativeStringFromDate_, v47);

      v73 = sub_23126409C();
      v64 = v49;

      (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v43);
    }
    v50 = (uint64_t)v68;
    v51 = v36;
    v52 = *(char **)(v42 + v41[6] + 8);
    swift_bridgeObjectRetain();
    v53 = v62;
    v67 = sub_23126271C();
    v66 = sub_231262788();
    sub_231178454(v42 + v41[8], v50, (uint64_t (*)(_QWORD))sub_2311789C4);
    sub_231178A30(0, &qword_2541534C0, (unint64_t *)&qword_2541531A0);
    v55 = v54;
    v56 = *(_QWORD *)(v54 - 8);
    v57 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v50, 1, v54);
    v68 = v52;
    if (v57 == 1)
    {
      sub_231178498(v50, (uint64_t (*)(_QWORD))sub_2311789C4);
    }
    else
    {
      v58 = (void *)sub_231263F88();
      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v50, v55);
      v59 = v58;
      if (objc_msgSend(v59, sel_hasRenderableContent))
        v60 = objc_msgSend((id)objc_opt_self(), sel_referenceRangeViewDataFromInspectableValueInRange_, v59);

    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2311738F0();
    sub_2312630E8();

    return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v53, v70);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2311761C8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  _QWORD v36[4];

  v2 = v1;
  v32 = a1;
  sub_231178A30(0, (unint64_t *)&qword_2541534D0, &qword_2541531B0);
  v4 = v3;
  v33 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v32 - v5;
  v7 = type metadata accessor for UserDomainConceptFeedItemData();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311787F4(0, qword_254152810, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v32 - v12;
  v14 = (uint64_t)v2 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v2) + 0x60);
  swift_beginAccess();
  sub_231178A84(v14, (uint64_t)v13, qword_254152810, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7))
    return sub_2311786C0((uint64_t)v13, qword_254152810, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
  v16 = v32;
  sub_231178454((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptFeedItemData);
  sub_2311786C0((uint64_t)v13, qword_254152810, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
  v17 = v33;
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v6, &v10[*(int *)(v7 + 20)], v4);
  sub_231178498((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptFeedItemData);
  v18 = (void *)sub_231263F88();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v4);
  v19 = (uint64_t)v2 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v2) + 0x70);
  swift_beginAccess();
  sub_231178704(v19, (uint64_t)&v34, (uint64_t)&qword_2541548B0, (uint64_t)&qword_2541548A0, MEMORY[0x24BE443C0], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_231178754);
  if (v35)
  {
    v20 = v2;
    sub_2311789AC(&v34, (uint64_t)v36);
    sub_2312628A8();
    v21 = (void *)sub_231262884();
    sub_231173410(v36, v36[3]);
    v22 = (void *)sub_23126376C();
    v23 = (void *)sub_231262890();

    sub_231262CC8();
    v24 = (void *)sub_231262CBC();
    v25 = (void *)sub_231262C8C();

    sub_231178704(v16, (uint64_t)&v34, (uint64_t)&qword_255EB9FE0, MEMORY[0x24BEE4AD8] + 8, (uint64_t)MEMORY[0x24BEE1C68], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_231171FD8);
    v26 = v35;
    if (v35)
    {
      v27 = sub_231173410(&v34, v35);
      v28 = *(_QWORD *)(v26 - 8);
      MEMORY[0x24BDAC7A8](v27);
      v30 = (char *)&v32 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v28 + 16))(v30);
      v31 = sub_231264B40();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v26);
      sub_231173434((uint64_t)&v34);
    }
    else
    {
      v31 = 0;
    }
    objc_msgSend(v20, sel_showViewController_sender_, v25, v31, v32);

    swift_unknownObjectRelease();
    return sub_231173434((uint64_t)v36);
  }
  else
  {

    return sub_231178970((uint64_t)&v34, (unint64_t *)&qword_2541548B0, (unint64_t *)&qword_2541548A0);
  }
}

uint64_t sub_2311765C8(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  NSObject *v30;
  _BOOL4 v31;
  _QWORD *v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  unint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void (*v44)(char *, uint64_t);
  id v45;
  char *v46;
  unint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  unint64_t *v50;
  uint64_t (*v51)();
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  void *v57;
  void *v58;
  uint64_t v59;
  uint64_t result;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  void *v66;
  id v67;
  char v68;
  BOOL v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  void *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  int v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;

  v105 = a1;
  v103 = sub_231263AB4();
  v102 = *(_QWORD *)(v103 - 8);
  MEMORY[0x24BDAC7A8](v103);
  v101 = (char *)&v94 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = sub_231262E3C();
  v99 = *(_QWORD *)(v100 - 8);
  MEMORY[0x24BDAC7A8](v100);
  v98 = (char *)&v94 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311787F4(0, &qword_255EB7C78, (void (*)(uint64_t))MEMORY[0x24BE497C0]);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v104 = (char *)&v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v111 = (char *)&v94 - v7;
  v8 = sub_23126301C();
  v9 = *(_QWORD *)(v8 - 8);
  v112 = v8;
  v113 = v9;
  MEMORY[0x24BDAC7A8](v8);
  v110 = (char *)&v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_231261E94();
  v107 = *(_QWORD *)(v108 - 8);
  MEMORY[0x24BDAC7A8](v108);
  v106 = (char *)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231178A30(0, (unint64_t *)&qword_2541534D0, &qword_2541531B0);
  v13 = v12;
  v116 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v115 = (char *)&v94 - v14;
  v15 = type metadata accessor for UserDomainConceptFeedItemData();
  v117 = *(_QWORD *)(v15 - 8);
  v118 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v94 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311787F4(0, qword_254152810, v18);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v94 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v94 - v23;
  v25 = sub_231263B5C();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v94 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231263B20();
  v29 = v1;
  v30 = sub_231263B50();
  v114 = sub_2312643F0();
  v31 = os_log_type_enabled(v30, (os_log_type_t)v114);
  v32 = (_QWORD *)MEMORY[0x24BEE4EA0];
  if (v31)
  {
    v95 = v26;
    v96 = v25;
    v109 = v13;
    v33 = (uint8_t *)swift_slowAlloc();
    v34 = swift_slowAlloc();
    v119 = v34;
    *(_DWORD *)v33 = 136446210;
    v35 = (uint64_t)v29 + *(_QWORD *)((*v32 & *v29) + 0x60);
    swift_beginAccess();
    sub_231178A84(v35, (uint64_t)v24, qword_254152810, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
    v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v117 + 48))(v24, 1, v118);
    v97 = v17;
    if (v36)
    {
      sub_2311786C0((uint64_t)v24, qword_254152810, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
      v37 = 0x44495555206F4E3CLL;
      v38 = 0xE90000000000003ELL;
    }
    else
    {
      sub_231178454((uint64_t)v24, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptFeedItemData);
      sub_2311786C0((uint64_t)v24, qword_254152810, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
      v39 = &v17[*(int *)(v118 + 20)];
      v94 = v34;
      v40 = v115;
      v41 = v116;
      v42 = v109;
      (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v115, v39, v109);
      sub_231178498((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptFeedItemData);
      v43 = (void *)sub_231263F88();
      v44 = *(void (**)(char *, uint64_t))(v41 + 8);
      v34 = v94;
      v44(v40, v42);
      v45 = objc_msgSend(v43, sel_UUID);

      v46 = v106;
      sub_231261E7C();

      v37 = sub_231261E58();
      v38 = v47;
      (*(void (**)(char *, uint64_t))(v107 + 8))(v46, v108);
    }
    v121 = sub_2311CBDE4(v37, v38, &v119);
    sub_231264750();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23116F000, v30, (os_log_type_t)v114, "Attempting to toggle pin state %{public}s", v33, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v34, -1, -1);
    MEMORY[0x2348D85EC](v33, -1, -1);

    (*(void (**)(char *, uint64_t))(v95 + 8))(v28, v96);
    v13 = v109;
    v17 = v97;
    v32 = (_QWORD *)MEMORY[0x24BEE4EA0];
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  }
  v48 = v32;
  v49 = (uint64_t)v29 + *(_QWORD *)((*v32 & *v29) + 0x60);
  swift_beginAccess();
  sub_231178A84(v49, (uint64_t)v22, qword_254152810, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v117 + 48))(v22, 1, v118))
  {
    sub_231178454((uint64_t)v22, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptFeedItemData);
    sub_2311786C0((uint64_t)v22, qword_254152810, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
    v53 = &v17[*(int *)(v118 + 20)];
    v54 = (uint64_t)v17;
    v56 = v115;
    v55 = v116;
    (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v115, v53, v13);
    sub_231178498(v54, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptFeedItemData);
    v57 = (void *)sub_231263F88();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v13);
    sub_2312628A8();
    v58 = (void *)sub_231262884();
    v59 = (uint64_t)v29 + *(_QWORD *)((*v48 & *v29) + 0x70);
    swift_beginAccess();
    result = sub_231178704(v59, (uint64_t)&v119, (uint64_t)&qword_2541548B0, (uint64_t)&qword_2541548A0, MEMORY[0x24BE443C0], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_231178754);
    v61 = v120;
    if (v120)
    {
      v62 = sub_231173410(&v119, v120);
      v63 = *(_QWORD *)(v61 - 8);
      MEMORY[0x24BDAC7A8](v62);
      v65 = (char *)&v94 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v63 + 16))(v65);
      v66 = (void *)sub_23126376C();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v65, v61);
      v67 = objc_msgSend(v66, sel_profileIdentifier);

      sub_231262848();
      sub_231173434((uint64_t)&v119);
      v68 = sub_2311738F0();
      v69 = (v68 & 1) == 0;
      if ((v68 & 1) != 0)
        v70 = 0x7475426E69706E55;
      else
        v70 = 0x6F747475426E6950;
      if (v69)
        v71 = 0xE90000000000006ELL;
      else
        v71 = 0xEB000000006E6F74;
      sub_231173C38(v70, v71);
      v73 = v72;
      v74 = swift_bridgeObjectRelease();
      if (v73)
      {
        v75 = (void *)sub_2311736AC(v74);
        v76 = (void *)sub_23126406C();
        swift_bridgeObjectRelease();
        objc_msgSend(v75, sel_setAccessibilityIdentifier_, v76);

      }
      v77 = v111;
      sub_231264480();
      v79 = v112;
      v78 = v113;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v113 + 48))(v77, 1, v112) == 1)
      {

        swift_release();
        v50 = &qword_255EB7C78;
        v51 = MEMORY[0x24BE497C0];
        v52 = (uint64_t)v77;
        return sub_2311786C0(v52, v50, (void (*)(uint64_t))v51);
      }
      v80 = v110;
      (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v110, v77, v79);
      v81 = sub_231263A54();
      if (v81 >> 62)
        v82 = sub_2312649A8();
      else
        v82 = *(_QWORD *)((v81 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRelease();
      if (v82)
      {
LABEL_27:
        v91 = v101;
        sub_231263A3C();
        (*(void (**)(char *, uint64_t))(v102 + 8))(v91, v103);
        sub_2312629EC();
        v92 = (void *)sub_2312629E0();
        v93 = (uint64_t)v104;
        (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v104, v80, v79);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v78 + 56))(v93, 0, 1, v79);
        sub_231262998();

        swift_release();
        sub_2311786C0(v93, &qword_255EB7C78, (void (*)(uint64_t))MEMORY[0x24BE497C0]);
        return (*(uint64_t (**)(char *, uint64_t))(v78 + 8))(v80, v79);
      }
      result = sub_231178704(v59, (uint64_t)&v119, (uint64_t)&qword_2541548B0, (uint64_t)&qword_2541548A0, MEMORY[0x24BE443C0], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_231178754);
      v83 = v120;
      if (v120)
      {
        v84 = sub_231173410(&v119, v120);
        v85 = *(_QWORD *)(v83 - 8);
        MEMORY[0x24BDAC7A8](v84);
        v87 = (char *)&v94 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v85 + 16))(v87);
        sub_23126376C();
        (*(void (**)(char *, uint64_t))(v85 + 8))(v87, v83);
        sub_231263064();
        swift_allocObject();
        sub_231263058();
        sub_231173434((uint64_t)&v119);
        v88 = v99;
        v89 = v98;
        v90 = v100;
        (*(void (**)(char *, _QWORD, uint64_t))(v99 + 104))(v98, *MEMORY[0x24BE49608], v100);
        sub_231263034();
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v88 + 8))(v89, v90);
        v78 = v113;
        v80 = v110;
        goto LABEL_27;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return result;
  }
  v50 = qword_254152810;
  v51 = type metadata accessor for UserDomainConceptFeedItemData;
  v52 = (uint64_t)v22;
  return sub_2311786C0(v52, v50, (void (*)(uint64_t))v51);
}

uint64_t sub_23117716C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  sub_231178A30(0, (unint64_t *)&qword_2541534D0, &qword_2541531B0);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v16 - v4;
  v6 = type metadata accessor for UserDomainConceptFeedItemData();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311787F4(0, qword_254152810, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v16 - v11;
  v13 = (uint64_t)v0 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0x60);
  swift_beginAccess();
  sub_231178A84(v13, (uint64_t)v12, qword_254152810, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6))
  {
    sub_2311786C0((uint64_t)v12, qword_254152810, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
    return 0;
  }
  else
  {
    sub_231178454((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptFeedItemData);
    sub_2311786C0((uint64_t)v12, qword_254152810, (void (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, &v9[*(int *)(v6 + 20)], v2);
    sub_231178498((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptFeedItemData);
    v14 = sub_231263F88();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v14;
}

id sub_231177368(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  objc_super v14;

  v6 = qword_255EB79F8;
  v7 = objc_allocWithZone((Class)sub_231262E0C());
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v9 = qword_255EB7A00;
  *(_QWORD *)&v8[v9] = objc_msgSend(objc_allocWithZone((Class)sub_231262E30()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v8[qword_255EB7A08] = 0;
  *(_QWORD *)&v8[qword_255EC1FF0] = MEMORY[0x24BEE4AF8];
  v10 = &v8[qword_255EB7A10];
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((_QWORD *)v10 + 4) = 0;
  v8[qword_255EC1FF8] = 0;

  if (a2)
  {
    v11 = (void *)sub_23126406C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  v14.receiver = v8;
  v14.super_class = (Class)type metadata accessor for ConceptLatestValueFeedItemViewController();
  v12 = objc_msgSendSuper2(&v14, sel_initWithNibName_bundle_, v11, a3);

  return v12;
}

id sub_2311774C0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  if (a3)
  {
    v5 = sub_23126409C();
    v7 = v6;
  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  v8 = a4;
  return sub_231177368(v5, v7, a4);
}

id sub_23117751C(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  char *v7;
  id v8;
  objc_super v10;

  v3 = qword_255EB79F8;
  v4 = objc_allocWithZone((Class)sub_231262E0C());
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v6 = qword_255EB7A00;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)sub_231262E30()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v5[qword_255EB7A08] = 0;
  *(_QWORD *)&v5[qword_255EC1FF0] = MEMORY[0x24BEE4AF8];
  v7 = &v5[qword_255EB7A10];
  *(_OWORD *)v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((_QWORD *)v7 + 4) = 0;
  v5[qword_255EC1FF8] = 0;

  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for ConceptLatestValueFeedItemViewController();
  v8 = objc_msgSendSuper2(&v10, sel_initWithCoder_, a1);

  return v8;
}

id sub_231177638(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_23117751C(a3);
}

uint64_t sub_23117765C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return sub_231178970(v0 + qword_255EB7A10, &qword_255EB7C98, (unint64_t *)&unk_255EB8F80);
}

id sub_2311776D4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConceptLatestValueFeedItemViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_231177708(uint64_t a1)
{

  swift_bridgeObjectRelease();
  return sub_231178970(a1 + qword_255EB7A10, &qword_255EB7C98, (unint64_t *)&unk_255EB8F80);
}

uint64_t type metadata accessor for ConceptLatestValueFeedItemViewController()
{
  uint64_t result;

  result = qword_255EB7A40;
  if (!qword_255EB7A40)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2311777C8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_231177838()
{
  return type metadata accessor for ConceptLatestValueFeedItemViewController();
}

uint64_t sub_231177840()
{
  return sub_23117716C();
}

double sub_231177860()
{
  id *v0;
  id v1;
  double result;
  void *v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  CGRect v12;

  v1 = objc_msgSend(*v0, sel_view);
  if (v1)
  {
    v3 = v1;
    objc_msgSend(v1, sel_frame);
    v5 = v4;
    v7 = v6;
    v9 = v8;
    v11 = v10;

    v12.origin.x = v5;
    v12.origin.y = v7;
    v12.size.width = v9;
    v12.size.height = v11;
    return CGRectGetWidth(v12);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_2311778E0(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  _QWORD aBlock[6];

  v3 = v2;
  v5 = a1 & 1;
  sub_2311787F4(0, &qword_255EB7C60, (void (*)(uint64_t))MEMORY[0x24BEBD1F8]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)aBlock - v7;
  if (*(unsigned __int8 *)(v3 + qword_255EC1FF8) != v5)
  {
    *(_BYTE *)(v3 + qword_255EC1FF8) = v5;
    v9 = sub_2311736AC();
    sub_231174248();
    v10 = sub_231264708();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 0, 1, v10);
    sub_231264714();

    if ((a2 & 1) != 0)
    {
      v11 = (void *)objc_opt_self();
      v12 = swift_allocObject();
      swift_unknownObjectWeakInit();
      aBlock[4] = sub_2311784F8;
      aBlock[5] = v12;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_23117415C;
      aBlock[3] = &unk_25000B298;
      v13 = _Block_copy(aBlock);
      swift_release();
      objc_msgSend(v11, sel_animateWithDuration_animations_, v13, 0.25);
      _Block_release(v13);
    }
    else
    {
      sub_231174188();
    }
  }
}

void sub_231177A6C(char a1, char a2)
{
  sub_2311778E0(a1, a2);
}

id sub_231177A8C()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;

  v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  if ((sub_2311738F0() & 1) != 0)
    v1 = _sSo18UIContextualActionC13HealthRecordsE05unpinB07handlerAByAB_So6UIViewCySbctc_tFZ_0((uint64_t)sub_231178518, v0);
  else
    v1 = _sSo18UIContextualActionC13HealthRecordsE03pinB07handlerAByAB_So6UIViewCySbctc_tFZ_0((uint64_t)sub_231178518, v0);
  v2 = v1;
  sub_231173C38(0xD000000000000013, 0x800000023126B780);
  if (v3)
  {
    v4 = v2;
    v5 = (void *)sub_23126406C();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5);

  }
  sub_231171FD8(0, (unint64_t *)&qword_254154688, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_231265B60;
  *(_QWORD *)(v6 + 32) = v2;
  sub_231264210();
  sub_231178AD0(0, &qword_255EB7C68);
  v7 = v2;
  v8 = (void *)sub_2312641EC();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend((id)objc_opt_self(), sel_configurationWithActions_, v8);
  swift_release();

  return v9;
}

void sub_231177C3C(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v6 = a5 + 16;
  swift_beginAccess();
  v7 = MEMORY[0x2348D8688](v6);
  if (v7)
  {
    v8 = (void *)v7;
    sub_2311765C8(2);
    ((void (*)(uint64_t))a3)(1);

  }
  else
  {
    a3();
  }
}

uint64_t sub_231177CBC()
{
  return 0;
}

id sub_231177CC4()
{
  return sub_231177A8C();
}

uint64_t sub_231177CE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v0 = sub_231262B60();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311787F4(0, (unint64_t *)&qword_254151918, (void (*)(uint64_t))MEMORY[0x24BDCEEA8]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v10 - v5;
  sub_2311738F0();
  v7 = sub_231261EAC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  sub_231262B54();
  v8 = sub_2312632EC();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_2311786C0((uint64_t)v6, (unint64_t *)&qword_254151918, (void (*)(uint64_t))MEMORY[0x24BDCEEA8]);
  return v8;
}

id sub_231177E68()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v11;
  uint64_t v12;
  id (*v13)(uint64_t);
  void *v14;
  void *v15;
  uint64_t v16;

  v1 = v0;
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v1;
  v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v4 = (void *)objc_opt_self();
  v15 = sub_2311786B0;
  v16 = v2;
  v5 = MEMORY[0x24BDAC760];
  v11 = MEMORY[0x24BDAC760];
  v12 = 1107296256;
  v13 = sub_231178520;
  v14 = &unk_25000B2E8;
  v6 = _Block_copy(&v11);
  v7 = v1;
  swift_retain();
  swift_retain();
  swift_release();
  v15 = sub_2311786B8;
  v16 = v3;
  v11 = v5;
  v12 = 1107296256;
  v13 = sub_231178558;
  v14 = &unk_25000B310;
  v8 = _Block_copy(&v11);
  swift_retain();
  swift_release();
  v9 = objc_msgSend(v4, sel_configurationWithIdentifier_previewProvider_actionProvider_, 0, v6, v8);
  swift_release();
  swift_release();
  _Block_release(v8);
  _Block_release(v6);
  swift_release();
  return v9;
}

uint64_t sub_231177FFC()
{
  type metadata accessor for ConceptLatestValueFeedItemViewController();
  sub_231172048(&qword_255EB7C90, (uint64_t (*)(uint64_t))type metadata accessor for ConceptLatestValueFeedItemViewController, (uint64_t)&unk_231265C78);
  return sub_231263214();
}

uint64_t sub_231178058(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;

  sub_2311787F4(0, &qword_255EB7C78, (void (*)(uint64_t))MEMORY[0x24BE497C0]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v21 - v4;
  v6 = sub_23126301C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v10 = (void *)MEMORY[0x2348D8688](a2 + 16);
  if (!v10)
    return 0;
  v11 = v10;
  sub_231264480();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {

    sub_2311786C0((uint64_t)v5, &qword_255EB7C78, (void (*)(uint64_t))MEMORY[0x24BE497C0]);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
  if ((sub_231263010() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);

    return 0;
  }
  sub_231177CE4();
  sub_2311738F0();
  v14 = (void *)sub_23126406C();
  v15 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v14);

  sub_231178AD0(0, &qword_255EB7C80);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  v16 = (void *)sub_2312646A8();
  sub_231173C38(0x73657250676E6F4CLL, 0xE900000000000073);
  if (v17)
  {
    v18 = v16;
    v19 = (void *)sub_23126406C();
    swift_bridgeObjectRelease();
    objc_msgSend(v18, sel_setAccessibilityIdentifier_, v19);

  }
  sub_231178AD0(0, &qword_255EB7C88);
  sub_231171FD8(0, (unint64_t *)&qword_254154688, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_231265B60;
  *(_QWORD *)(v20 + 32) = v16;
  v21 = v20;
  sub_231264210();
  v12 = sub_231264618();

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v12;
}

void sub_2311783E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x2348D8688](v2);
  if (v3)
  {
    v4 = (void *)v3;
    sub_2311765C8(1);

  }
}

id sub_231178434()
{
  return sub_231177E68();
}

uint64_t sub_231178454(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_231178498(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2311784D4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_2311784F8()
{
  uint64_t v0;

  sub_2311740D8(v0);
}

uint64_t sub_231178500(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_231178510()
{
  return swift_release();
}

void sub_231178518(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v4;

  sub_231177C3C(a1, a2, a3, a4, v4);
}

id sub_231178520(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  void *v3;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v3 = (void *)v1(v2);
  swift_release();
  return v3;
}

id sub_231178558(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  void *v3;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  sub_231178AD0(0, &qword_255EB7C70);
  v2 = sub_2312641F8();
  swift_retain();
  v3 = (void *)v1(v2);
  swift_release();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_2311785D0(uint64_t a1, char a2)
{
  uint64_t *v2;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *v2;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v5;
  v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
      return result;
    v7 = 1;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_2312649A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1)
    v9 = a1;
  else
    v9 = v8;
  result = MEMORY[0x2348D7CEC](v7, v9, a2 & 1, v5);
  *v2 = result;
  return result;
}

uint64_t sub_23117868C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_2311786B0()
{
  return sub_231177FFC();
}

uint64_t sub_2311786B8(uint64_t a1)
{
  uint64_t v1;

  return sub_231178058(a1, v1);
}

uint64_t sub_2311786C0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  sub_2311787F4(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_2311786FC(uint64_t a1)
{
  uint64_t v1;

  sub_2311783E0(a1, v1);
}

uint64_t sub_231178704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8;

  v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

void sub_231178754(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_2311787A8(255, a3);
    v4 = sub_231264738();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_2311787A8(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_2311787F4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_231264738();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_231178840(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UserDomainConceptFeedItemData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_231178884(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

unint64_t sub_2311788C0()
{
  unint64_t result;

  result = qword_255EB7CA8;
  if (!qword_255EB7CA8)
  {
    sub_2311788F8(255);
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255EB7CA8);
  }
  return result;
}

void sub_2311788F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_255EB7CB0)
  {
    v2 = type metadata accessor for UserDomainConceptFeedItemData();
    v3 = sub_231172048(qword_255EB7CB8, (uint64_t (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData, (uint64_t)&unk_2312698D0);
    v5 = type metadata accessor for BaseFeedItemViewController(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_255EB7CB0);
  }
}

uint64_t sub_231178970(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t v4;

  sub_231178754(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_2311789AC(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void sub_2311789C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541534C8)
  {
    sub_231178A30(255, &qword_2541534C0, (unint64_t *)&qword_2541531A0);
    v0 = sub_231264738();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541534C8);
  }
}

void sub_231178A30(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_231178AD0(255, a3);
    v4 = sub_231263FA0();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_231178A84(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_2311787F4(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_231178AD0(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_231178B08(uint64_t a1)
{
  uint64_t v1;

  sub_23117389C(a1, v1);
}

id FeedItemViewController.feedItemView.getter()
{
  void *v0;
  id result;
  void *v2;

  result = objc_msgSend(v0, sel_view);
  if (result)
  {
    v2 = result;
    result = (id)swift_dynamicCastUnknownClass();
    if (!result)
    {

      return 0;
    }
  }
  return result;
}

void FeedItemViewController.apply(data:to:)()
{
  sub_231264984();
  __break(1u);
}

Swift::Void __swiftcall FeedItemViewController.loadView()()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;

  v1 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v0, sel_setView_, v1);

  v2 = objc_msgSend(v0, sel_view);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
    objc_msgSend(v3, sel_setBackgroundColor_, v4);

    v5 = objc_msgSend(v0, sel_view);
    if (v5)
    {
      sub_2312645AC();
      objc_msgSend(v5, sel_setDirectionalLayoutMargins_);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_231178CEC(void *a1)
{
  id v1;

  v1 = a1;
  FeedItemViewController.loadView()();

}

Swift::Void __swiftcall FeedItemViewController.reloadView()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  int v18;
  void (*v19)(char *, uint64_t);
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  void *v23;
  id v24;
  void *v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  id v29;
  uint64_t v30;

  v1 = v0;
  v2 = *MEMORY[0x24BEE4EA0] & *v0;
  v3 = sub_231263B5C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v29 - v8;
  v10 = *(_QWORD *)(v2 + 240);
  v11 = sub_231264738();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v29 - v16;
  if (objc_msgSend(v1, sel_isViewLoaded))
  {
    v30 = v3;
    BaseFeedItemViewController.reloadView()();
    v29 = FeedItemViewController.feedItemView.getter();
    if (v29)
    {
      BaseFeedItemViewController.feedItemData.getter((uint64_t)v17);
      v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v17, 1, v10);
      v19 = *(void (**)(char *, uint64_t))(v12 + 8);
      v19(v17, v11);
      if (v18 == 1)
      {
        sub_231263B2C();
        v20 = sub_231263B50();
        v21 = sub_2312643D8();
        if (os_log_type_enabled(v20, v21))
        {
          v22 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v22 = 0;
          _os_log_impl(&dword_23116F000, v20, v21, "Attempting to reload view without any feedItemData.", v22, 2u);
          MEMORY[0x2348D85EC](v22, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v30);
      }
      BaseFeedItemViewController.feedItemData.getter((uint64_t)v15);
      v23 = v29;
      (*(void (**)(char *, id))((*MEMORY[0x24BEE4EA0] & *v1) + 0x108))(v15, v29);
      v19(v15, v11);
      v24 = objc_msgSend(v1, sel_view);
      if (v24)
      {
        v25 = v24;
        objc_msgSend(v24, sel_setNeedsLayout);

      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      sub_231263B2C();
      v26 = sub_231263B50();
      v27 = sub_2312643D8();
      if (os_log_type_enabled(v26, v27))
      {
        v28 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v28 = 0;
        _os_log_impl(&dword_23116F000, v26, v27, "Unable to reload view before feedItemView is available.", v28, 2u);
        MEMORY[0x2348D85EC](v28, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v30);
    }
  }
}

id FeedItemViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_23126406C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

id FeedItemViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  objc_class *v8;
  id v9;
  objc_super v11;

  v5 = *v3;
  v6 = *MEMORY[0x24BEE4EA0];
  if (a2)
  {
    v7 = (void *)sub_23126406C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  v8 = (objc_class *)type metadata accessor for FeedItemViewController(0, *(_QWORD *)((v6 & v5) + 0xE8), *(_QWORD *)((v6 & v5) + 0xF0), *(_QWORD *)((v6 & v5) + 0xF8));
  v11.receiver = v3;
  v11.super_class = v8;
  v9 = objc_msgSendSuper2(&v11, sel_initWithNibName_bundle_, v7, a3);

  return v9;
}

id sub_231179138(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  if (a3)
  {
    v5 = sub_23126409C();
    v7 = v6;
  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  v8 = a4;
  return FeedItemViewController.init(nibName:bundle:)(v5, v7, a4);
}

id FeedItemViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id FeedItemViewController.init(coder:)(void *a1)
{
  _QWORD *v1;
  objc_class *v3;
  id v4;
  objc_super v6;

  v3 = (objc_class *)type metadata accessor for FeedItemViewController(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0xE8), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0xF0), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0xF8));
  v6.receiver = v1;
  v6.super_class = v3;
  v4 = objc_msgSendSuper2(&v6, sel_initWithCoder_, a1);

  return v4;
}

id sub_231179240(uint64_t a1, uint64_t a2, void *a3)
{
  return FeedItemViewController.init(coder:)(a3);
}

id FeedItemViewController.__deallocating_deinit()
{
  _QWORD *v0;
  objc_class *v1;
  objc_super v3;

  v1 = (objc_class *)type metadata accessor for FeedItemViewController(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0xE8), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0xF0), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0xF8));
  v3.receiver = v0;
  v3.super_class = v1;
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for FeedItemViewController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2311792F8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedItemViewController);
}

uint64_t sub_2311792C4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2311792F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x2348D84CC](a1, v6, a5);
}

uint64_t type metadata accessor for NewRecordsLabFeedItemView()
{
  uint64_t result;

  result = qword_255EB7D60;
  if (!qword_255EB7D60)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_231179360()
{
  return swift_initClassMetadata2();
}

void sub_2311793A8()
{
  qword_255EB7D40 = 0x4030000000000000;
}

void sub_2311793B8()
{
  qword_255EB7D48 = 0x4010000000000000;
}

uint64_t sub_2311793C8()
{
  void *v0;
  id v1;
  id v2;

  v0 = (void *)*MEMORY[0x24BEBE220];
  v1 = objc_allocWithZone((Class)sub_231262824());
  v2 = v0;
  return sub_231262818();
}

id sub_231179404(uint64_t a1, _QWORD *a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t, uint64_t);
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  uint64_t *v17;
  uint64_t *v18;
  id result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t, uint64_t, uint64_t);
  void *v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;

  v66 = a2;
  v3 = sub_231262B60();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, (unint64_t *)&qword_254151918, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v61 - v8;
  v10 = (void *)sub_231262D7C();
  v11 = sub_231261EAC();
  v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  v12(v9, 1, 1, v11);
  sub_231262B54();
  sub_2312632EC();
  v13 = *(void (**)(char *, uint64_t))(v4 + 8);
  v65 = v3;
  v14 = v3;
  v15 = v66;
  v13(v6, v14);
  sub_23117A588((uint64_t)v9);
  v16 = (void *)sub_23126406C();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setText_, v16);

  v17 = (uint64_t *)&v2[qword_255EB7D50];
  *v17 = 0;
  v17[1] = 0;
  swift_bridgeObjectRelease();
  v64 = v2;
  v18 = (uint64_t *)&v2[qword_255EB7D58];
  *v18 = 0;
  v18[1] = 0;
  result = (id)swift_bridgeObjectRelease();
  if (!v15)
    return result;
  v62 = v11;
  v63 = v12;
  v12(v9, 1, 1, v11);
  swift_bridgeObjectRetain();
  sub_231262B54();
  v20 = sub_2312632EC();
  v22 = v21;
  v23 = v65;
  v13(v6, v65);
  sub_23117A588((uint64_t)v9);
  *v17 = v20;
  v17[1] = v22;
  swift_bridgeObjectRelease();
  v67 = v15;
  swift_bridgeObjectRetain();
  sub_2311D7A28((uint64_t *)&v67);
  swift_bridgeObjectRelease();
  v24 = v67;
  v25 = v67[2];
  switch(v25)
  {
    case 0:
      swift_release();
      goto LABEL_17;
    case 1:
      v44 = v67[4];
      v43 = v67[5];
      swift_bridgeObjectRetain();
      swift_release();
      *v18 = v44;
      v18[1] = v43;
      goto LABEL_16;
    case 2:
      v63(v9, 1, 1, v62);
      sub_231262B54();
      sub_2312632EC();
      v13(v6, v23);
      sub_23117A588((uint64_t)v9);
      sub_2311735E0(0, (unint64_t *)&qword_254155750, (uint64_t (*)(uint64_t))sub_23117A5DC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_231265570;
      v27 = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v26 + 56) = MEMORY[0x24BEE0D00];
      v28 = sub_23117A630();
      *(_QWORD *)(v26 + 64) = v28;
      v29 = v24[2];
      if (!v29)
      {
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
        swift_release();
        __break(1u);
        JUMPOUT(0x231179AE4);
      }
      v30 = v28;
      v31 = v24[5];
      *(_QWORD *)(v26 + 32) = v24[4];
      *(_QWORD *)(v26 + 40) = v31;
      *(_QWORD *)(v26 + 96) = v27;
      *(_QWORD *)(v26 + 104) = v30;
      if (v29 == 1)
        goto LABEL_22;
      v33 = v24[6];
      v32 = v24[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
      *(_QWORD *)(v26 + 72) = v33;
      *(_QWORD *)(v26 + 80) = v32;
LABEL_15:
      v53 = sub_2312640A8();
      v55 = v54;
      swift_bridgeObjectRelease();
      *v18 = v53;
      v18[1] = v55;
LABEL_16:
      swift_bridgeObjectRelease();
LABEL_17:
      v56 = *v17;
      v57 = v17[1];
      v58 = *v18;
      v59 = v18[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v60 = v64;
      sub_231179C44(v56, v57, v58, v59);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return objc_msgSend(v60, sel_setNeedsLayout);
    case 3:
      v63(v9, 1, 1, v62);
      sub_231262B54();
      sub_2312632EC();
      v13(v6, v23);
      sub_23117A588((uint64_t)v9);
      sub_2311735E0(0, (unint64_t *)&qword_254155750, (uint64_t (*)(uint64_t))sub_23117A5DC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = xmmword_231265B40;
      v35 = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v34 + 56) = MEMORY[0x24BEE0D00];
      v36 = sub_23117A630();
      *(_QWORD *)(v34 + 64) = v36;
      v37 = v24[2];
      if (!v37)
        goto LABEL_20;
      v38 = v36;
      v39 = v24[5];
      *(_QWORD *)(v34 + 32) = v24[4];
      *(_QWORD *)(v34 + 40) = v39;
      *(_QWORD *)(v34 + 96) = v35;
      *(_QWORD *)(v34 + 104) = v38;
      if (v37 == 1)
        goto LABEL_23;
      v40 = v24[7];
      *(_QWORD *)(v34 + 72) = v24[6];
      *(_QWORD *)(v34 + 80) = v40;
      *(_QWORD *)(v34 + 136) = v35;
      *(_QWORD *)(v34 + 144) = v38;
      if (v37 < 3)
        goto LABEL_25;
      v42 = v24[8];
      v41 = v24[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
      *(_QWORD *)(v34 + 112) = v42;
      *(_QWORD *)(v34 + 120) = v41;
      goto LABEL_15;
    default:
      v63(v9, 1, 1, v62);
      sub_231262B54();
      sub_2312632EC();
      v13(v6, v23);
      sub_23117A588((uint64_t)v9);
      sub_2311735E0(0, (unint64_t *)&qword_254155750, (uint64_t (*)(uint64_t))sub_23117A5DC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v45 = swift_allocObject();
      *(_OWORD *)(v45 + 16) = xmmword_231265B40;
      v46 = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v45 + 56) = MEMORY[0x24BEE0D00];
      v47 = sub_23117A630();
      *(_QWORD *)(v45 + 64) = v47;
      v48 = v24[2];
      if (!v48)
        goto LABEL_21;
      v49 = v47;
      v50 = v24[5];
      *(_QWORD *)(v45 + 32) = v24[4];
      *(_QWORD *)(v45 + 40) = v50;
      *(_QWORD *)(v45 + 96) = v46;
      *(_QWORD *)(v45 + 104) = v49;
      if (v48 == 1)
        goto LABEL_24;
      v51 = v24[7];
      *(_QWORD *)(v45 + 72) = v24[6];
      *(_QWORD *)(v45 + 80) = v51;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
      v52 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v45 + 136) = MEMORY[0x24BEE1768];
      *(_QWORD *)(v45 + 144) = v52;
      *(_QWORD *)(v45 + 112) = v25 - 2;
      goto LABEL_15;
  }
}

uint64_t sub_231179AF4()
{
  return 0;
}

id sub_231179AFC()
{
  char *v0;
  char *v1;
  void (*v2)(void);
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = v0;
  sub_23117A674();
  v2 = (void (*)(void))sub_2312626BC();
  v2();
  v3 = (void *)sub_231262D70();
  v4 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x24BEBE220]);
  sub_231262800();

  v5 = *(_QWORD *)&v1[qword_255EB7D50];
  v6 = *(_QWORD *)&v1[qword_255EB7D50 + 8];
  v7 = *(_QWORD *)&v1[qword_255EB7D58];
  v8 = *(_QWORD *)&v1[qword_255EB7D58 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_231179C44(v5, v6, v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return objc_msgSend(v1, sel_setNeedsLayout);
}

void sub_231179BE0(void *a1)
{
  id v1;
  void *v2;
  objc_super v3;

  v1 = a1;
  v2 = (void *)sub_231262D70();
  objc_msgSend(v2, sel_layoutSubviews);

  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for NewRecordsLabFeedItemView();
  objc_msgSendSuper2(&v3, sel_layoutSubviews);

}

uint64_t sub_231179C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  double v30;
  double v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  void *ObjCClassFromMetadata;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t inited;
  void *v42;
  id v43;
  id v44;
  void *v45;
  void *v46;
  id v47;
  void *v48;
  void *v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  id v53;
  void *v54;
  void *v55;
  id v56;
  void *v57;
  double v58;
  __int128 v59;
  uint64_t v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  char *v65;
  id v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v5 = v4;
  v72 = a1;
  v9 = sub_23126292C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_231262950();
  v14 = *(_QWORD *)(v13 - 8);
  result = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 && a4)
  {
    v71 = a3;
    sub_231262BD8();
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BE490B8], v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_231262BCC();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    sub_231262938();
    if (v18)
    {
      v69 = v14;
      v70 = v13;
      sub_231178AD0(0, &qword_255EB7DB8);
      v19 = (void *)sub_231264678();
      v20 = objc_msgSend(v5, sel_traitCollection);
      v21 = (void *)sub_23126406C();
      swift_bridgeObjectRelease();
      v22 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_compatibleWithTraitCollection_, v21, v19, v20);

      v68 = v5;
      v65 = v17;
      if (v22)
      {
        v23 = objc_msgSend(v22, sel_imageWithRenderingMode_, 2);

        v24 = (void *)sub_231262944();
        v25 = objc_msgSend(v23, sel_imageWithTintColor_, v24);

      }
      else
      {
        v25 = 0;
      }
      v67 = a4;
      v26 = sub_231178AD0(0, &qword_2541548C0);
      v64 = *MEMORY[0x24BEBE220];
      v27 = v26;
      v28 = (void *)sub_23126460C();
      v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBB4B8]), sel_init);
      v66 = v25;
      objc_msgSend(v29, sel_setImage_, v25);
      objc_msgSend(v28, sel_capHeight);
      if (qword_255EB77E0 != -1)
      {
        v58 = v30;
        swift_once();
        v30 = v58;
      }
      v31 = *(double *)&qword_255EB7D40;
      objc_msgSend(v29, sel_setBounds_, 0.0, round(v30 - *(double *)&qword_255EB7D40) * 0.5, *(double *)&qword_255EB7D40, *(double *)&qword_255EB7D40);
      v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBB4B8]), sel_init);
      if (qword_255EB77E8 != -1)
        swift_once();
      objc_msgSend(v32, sel_setBounds_, v31, 0.0, *(double *)&qword_255EB7D48, *(double *)&qword_255EB7D40);
      v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD640]), sel_init);
      v34 = v32;
      v35 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
      v36 = objc_msgSend(v33, sel_imageWithTintColor_, v35);

      v62 = v34;
      objc_msgSend(v34, sel_setImage_, v36);

      sub_231178AD0(0, &qword_255EB7DC0);
      ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
      v63 = v29;
      v38 = objc_msgSend(ObjCClassFromMetadata, sel_attributedStringWithAttachment_, v29);
      v39 = objc_msgSend(ObjCClassFromMetadata, sel_attributedStringWithAttachment_, v34);
      objc_msgSend(v38, sel_appendAttributedString_, v39);

      sub_2311735E0(0, &qword_255EB7DC8, (uint64_t (*)(uint64_t))sub_23117A6D0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v60 = v40;
      inited = swift_initStackObject();
      v59 = xmmword_231265AC0;
      *(_OWORD *)(inited + 16) = xmmword_231265AC0;
      v42 = (void *)*MEMORY[0x24BEBB360];
      *(_QWORD *)(inited + 64) = v27;
      *(_QWORD *)(inited + 32) = v42;
      *(_QWORD *)(inited + 40) = v28;
      v43 = v42;
      v61 = v28;
      sub_23123F328(inited);
      v44 = objc_allocWithZone(MEMORY[0x24BDD1458]);
      v45 = (void *)sub_23126406C();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      sub_23117A738();
      v46 = (void *)sub_231263FB8();
      swift_bridgeObjectRelease();
      v47 = objc_msgSend(v44, sel_initWithString_attributes_, v45, v46);

      objc_msgSend(v38, sel_appendAttributedString_, v47);
      v48 = (void *)sub_231262D70();
      sub_23126280C();

      v49 = (void *)sub_231262D70();
      sub_2312627F4();

      v50 = swift_initStackObject();
      *(_OWORD *)(v50 + 16) = v59;
      *(_QWORD *)(v50 + 32) = v43;
      v51 = v43;
      v52 = sub_23126460C();
      *(_QWORD *)(v50 + 64) = v27;
      *(_QWORD *)(v50 + 40) = v52;
      sub_23123F328(v50);
      v53 = objc_allocWithZone(MEMORY[0x24BDD1458]);
      v54 = (void *)sub_23126406C();
      swift_bridgeObjectRelease();
      v55 = (void *)sub_231263FB8();
      swift_bridgeObjectRelease();
      v56 = objc_msgSend(v53, sel_initWithString_attributes_, v54, v55);

      v57 = (void *)sub_231262D70();
      sub_2312627F4();

      return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v65, v70);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

id sub_23117A3D0(char *a1, double a2, double a3, double a4, double a5)
{
  char *v10;
  char *v11;
  objc_class *v12;
  objc_super v14;

  v10 = &a1[qword_255EB7D50];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  v11 = &a1[qword_255EB7D58];
  v12 = (objc_class *)type metadata accessor for NewRecordsLabFeedItemView();
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  v14.receiver = a1;
  v14.super_class = v12;
  return objc_msgSendSuper2(&v14, sel_initWithFrame_, a2, a3, a4, a5);
}

id sub_23117A460(char *a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  char *v6;
  objc_class *v7;
  objc_super v9;

  v5 = &a1[qword_255EB7D50];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v6 = &a1[qword_255EB7D58];
  v7 = (objc_class *)type metadata accessor for NewRecordsLabFeedItemView();
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v9.receiver = a1;
  v9.super_class = v7;
  return objc_msgSendSuper2(&v9, sel_initWithCoder_, a3);
}

uint64_t sub_23117A4D0()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id sub_23117A504()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NewRecordsLabFeedItemView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23117A538()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id sub_23117A578(uint64_t a1)
{
  return sub_231179404(a1, *(_QWORD **)(a1 + 8));
}

uint64_t sub_23117A580()
{
  return type metadata accessor for NewRecordsLabFeedItemView();
}

uint64_t sub_23117A588(uint64_t a1)
{
  uint64_t v2;

  sub_2311735E0(0, (unint64_t *)&qword_254151918, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23117A5DC()
{
  unint64_t result;

  result = qword_254155770;
  if (!qword_254155770)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_254155770);
  }
  return result;
}

unint64_t sub_23117A630()
{
  unint64_t result;

  result = qword_254155628;
  if (!qword_254155628)
  {
    result = MEMORY[0x2348D8544](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_254155628);
  }
  return result;
}

void sub_23117A674()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255EB7DB0)
  {
    sub_231262824();
    v0 = sub_231262D94();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255EB7DB0);
  }
}

void sub_23117A6D0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255EB7DD0)
  {
    type metadata accessor for Key(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255EB7DD0);
  }
}

unint64_t sub_23117A738()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255EB7958;
  if (!qword_255EB7958)
  {
    type metadata accessor for Key(255);
    result = MEMORY[0x2348D8544](&unk_231265A3C, v1);
    atomic_store(result, (unint64_t *)&qword_255EB7958);
  }
  return result;
}

uint64_t sub_23117A780()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23117A7AC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23117A7DC()
{
  return 1;
}

void sub_23117A7EC(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;

  v8 = sub_231261E40();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23117AA1C();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_opt_self();
  if (!swift_dynamicCastObjCClass())
  {
    swift_bridgeObjectRelease();

    v19 = 0;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    a2 = 0;
    a3 = 0;
    v23 = 0;
LABEL_16:
    *a4 = v19;
    a4[1] = v20;
    a4[2] = v21;
    a4[3] = v22;
    a4[4] = a2;
    a4[5] = a3;
    a4[6] = v23;
    return;
  }
  v15 = a1;
  v16 = objc_msgSend(v15, sel_meaningfulDate);
  if (v16)
  {
    v17 = v16;
    sub_231261E28();

    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v11, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v14, 0, 1, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8) == 1)
    {
      v18 = 0;
    }
    else
    {
      v18 = (void *)sub_231261DE0();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v14, 1, 1, v8);
    v18 = 0;
  }
  v24 = (id)HKLocalizedStringForDateAndTemplateWithFormattingContext();

  if (v24)
  {
    v19 = sub_23126409C();
    v20 = v25;

    v26 = sub_231264594();
    if (v27)
      v21 = v26;
    else
      v21 = 0;
    if (v27)
      v22 = v27;
    else
      v22 = 0xE000000000000000;
    v23 = sub_2312645A0();

    goto LABEL_16;
  }
  __break(1u);
}

void sub_23117AA1C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254154938)
  {
    sub_231261E40();
    v0 = sub_231264738();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254154938);
  }
}

uint64_t initializeBufferWithCopyOfBuffer for ConceptDeltaHighlightRecordViewData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

void destroy for ConceptDeltaHighlightRecordViewData(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

_QWORD *initializeWithCopy for ConceptDeltaHighlightRecordViewData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = (void *)a2[6];
  a1[6] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = v6;
  return a1;
}

_QWORD *assignWithCopy for ConceptDeltaHighlightRecordViewData(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a1[6];
  v5 = (void *)a2[6];
  a1[6] = v5;
  v6 = v5;

  return a1;
}

__n128 initializeWithTake for ConceptDeltaHighlightRecordViewData(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ConceptDeltaHighlightRecordViewData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v6 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  return a1;
}

uint64_t getEnumTagSinglePayload for ConceptDeltaHighlightRecordViewData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ConceptDeltaHighlightRecordViewData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ConceptDeltaHighlightRecordViewData()
{
  return &type metadata for ConceptDeltaHighlightRecordViewData;
}

uint64_t sub_23117ACFC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  _QWORD v44[2];
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[3];
  uint64_t v59;

  v52 = *v1;
  v3 = type metadata accessor for HealthRecordsGeneratorContext();
  v4 = *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64);
  v49 = *(_QWORD *)(v3 - 8);
  v50 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v48 = (uint64_t)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23117B6BC();
  v54 = v6;
  v56 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v51 = (char *)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23117B7B4();
  v55 = v8;
  v57 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v53 = (char *)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2312621DC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2312621F4();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a1;
  sub_2311733CC(a1, (uint64_t)v1 + OBJC_IVAR____TtC13HealthRecords34RemovedCategoriesGeneratorPipeline_context);
  v44[1] = sub_231262230();
  sub_2311735E0(0, &qword_254155718, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v18 = sub_231261FA8();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = swift_allocObject();
  v47 = xmmword_231265AC0;
  *(_OWORD *)(v21 + 16) = xmmword_231265AC0;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v19 + 104))(v21 + v20, *MEMORY[0x24BE47408], v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BE47910], v10);
  sub_2312621E8();
  v22 = v45;
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v45 + OBJC_IVAR____TtC13HealthRecords34RemovedCategoriesGeneratorPipeline_domain, v17, v14);
  v23 = v46;
  sub_23126220C();
  sub_231173410(v58, v59);
  v24 = (void *)sub_231262194();
  objc_msgSend(v24, sel_supportsHealthRecords);

  sub_231173434((uint64_t)v58);
  sub_2312628A8();
  v25 = (void *)sub_231262884();
  sub_23126220C();
  sub_231173410(v58, v59);
  v26 = (void *)sub_231262194();
  v27 = objc_msgSend(v26, sel_profileIdentifier);

  v28 = sub_231262878();
  sub_231173434((uint64_t)v58);
  *(_QWORD *)(v22 + OBJC_IVAR____TtC13HealthRecords34RemovedCategoriesGeneratorPipeline_udcChangeProvider) = v28;
  v58[0] = sub_231263ACC();
  v29 = v48;
  sub_2311733CC(v23, v48);
  v30 = (*(unsigned __int8 *)(v49 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  v31 = (v50 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  v32 = swift_allocObject();
  v33 = v32 + v30;
  v34 = v29;
  sub_23117353C(v29, v33);
  *(_QWORD *)(v32 + v31) = v52;
  sub_23117B750();
  sub_23117313C();
  sub_231172048(&qword_254154740, (uint64_t (*)(uint64_t))sub_23117B750, MEMORY[0x24BDB9D10]);
  v35 = v51;
  sub_231263E44();
  swift_release();
  swift_release();
  sub_2311735E0(0, &qword_254155730, (uint64_t (*)(uint64_t))sub_23117313C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = v47;
  sub_2311733CC(v23, v29);
  v37 = type metadata accessor for RemovedCategoriesGenerator();
  swift_allocObject();
  v38 = sub_2311F8364(v34);
  *(_QWORD *)(v36 + 56) = v37;
  *(_QWORD *)(v36 + 64) = sub_231172048(&qword_254152340, (uint64_t (*)(uint64_t))type metadata accessor for RemovedCategoriesGenerator, (uint64_t)&unk_23126941C);
  *(_QWORD *)(v36 + 32) = v38;
  sub_231172048(&qword_2541546D0, (uint64_t (*)(uint64_t))sub_23117B6BC, MEMORY[0x24BDB94C8]);
  v40 = v53;
  v39 = v54;
  sub_231263EEC();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v35, v39);
  sub_231172048(&qword_254154700, (uint64_t (*)(uint64_t))sub_23117B7B4, MEMORY[0x24BDB9530]);
  v41 = v55;
  v42 = sub_231263E38();
  sub_231173638(v23);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v40, v41);
  result = v22;
  *(_QWORD *)(v22 + 16) = v42;
  return result;
}

uint64_t sub_23117B270@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = type metadata accessor for HealthRecordsGeneratorContext();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_231263B5C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231263B08();
  v13 = sub_231263B50();
  v14 = sub_2312643CC();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v25 = v9;
    v16 = v15;
    v17 = swift_slowAlloc();
    *(_DWORD *)v16 = 136446466;
    v26 = a1;
    v27 = v17;
    v28 = a2;
    swift_getMetatypeMetadata();
    v18 = sub_2312640B4();
    v28 = sub_2311CBDE4(v18, v19, &v27);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2082;
    v28 = type metadata accessor for RemovedCategoriesGenerator();
    sub_23117B970();
    v20 = sub_2312640B4();
    v28 = sub_2311CBDE4(v20, v21, &v27);
    a1 = v26;
    sub_231264750();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23116F000, v13, v14, "[%{public}s]: Emitting %{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v17, -1, -1);
    MEMORY[0x2348D85EC](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v25);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  sub_2311733CC(a1, (uint64_t)v8);
  v22 = type metadata accessor for RemovedCategoriesGenerator();
  swift_allocObject();
  v23 = sub_2311F8364((uint64_t)v8);
  a3[3] = v22;
  result = sub_231172048(&qword_254152340, (uint64_t (*)(uint64_t))type metadata accessor for RemovedCategoriesGenerator, (uint64_t)&unk_23126941C);
  a3[4] = result;
  *a3 = v23;
  return result;
}

uint64_t sub_23117B514()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC13HealthRecords34RemovedCategoriesGeneratorPipeline_domain;
  v2 = sub_2312621F4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_231173638(v0 + OBJC_IVAR____TtC13HealthRecords34RemovedCategoriesGeneratorPipeline_context);

  return swift_deallocClassInstance();
}

uint64_t sub_23117B58C()
{
  return type metadata accessor for RemovedCategoriesGeneratorPipeline();
}

uint64_t type metadata accessor for RemovedCategoriesGeneratorPipeline()
{
  uint64_t result;

  result = qword_254152970;
  if (!qword_254152970)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23117B5D0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2312621F4();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for HealthRecordsGeneratorContext();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_23117B674@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC13HealthRecords34RemovedCategoriesGeneratorPipeline_domain;
  v4 = sub_2312621F4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void sub_23117B6BC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541546D8)
  {
    sub_23117B750();
    sub_23117313C();
    sub_231172048(&qword_254154740, (uint64_t (*)(uint64_t))sub_23117B750, MEMORY[0x24BDB9D10]);
    v0 = sub_231263BBC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541546D8);
  }
}

void sub_23117B750()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541546A8)
  {
    sub_231263AC0();
    v0 = sub_231263D3C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541546A8);
  }
}

void sub_23117B7B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254154708)
  {
    sub_231173258();
    sub_23117B6BC();
    sub_231172048((unint64_t *)&qword_254155578, (uint64_t (*)(uint64_t))sub_231173258, MEMORY[0x24BDB9970]);
    sub_231172048(&qword_2541546D0, (uint64_t (*)(uint64_t))sub_23117B6BC, MEMORY[0x24BDB94C8]);
    v0 = sub_231263BC8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254154708);
  }
}

uint64_t sub_23117B87C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for HealthRecordsGeneratorContext();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_23126226C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocObject();
}

uint64_t sub_23117B910@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_23117B270(v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)), a1);
}

unint64_t sub_23117B970()
{
  unint64_t result;

  result = qword_254152420;
  if (!qword_254152420)
  {
    type metadata accessor for RemovedCategoriesGenerator();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_254152420);
  }
  return result;
}

id sub_23117B9A8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  double v8;
  void *v9;
  id v10;

  v1 = qword_255EB7DD8;
  v2 = *(void **)(v0 + qword_255EB7DD8);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_255EB7DD8);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
    v6 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    objc_msgSend(v5, sel_setTextColor_, v6);

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    sub_231178AD0(0, &qword_2541548C0);
    v7 = (void *)sub_23126460C();
    objc_msgSend(v5, sel_setFont_, v7);

    objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);
    LODWORD(v8) = 1132068864;
    objc_msgSend(v5, sel_setContentHuggingPriority_forAxis_, 0, v8);
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    v9 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v10 = v2;
  return v3;
}

id sub_23117BB14()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  double v8;
  double v9;
  void *v10;
  id v11;

  v1 = qword_255EB7DE0;
  v2 = *(void **)(v0 + qword_255EB7DE0);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_255EB7DE0);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD668]), sel_init);
    sub_231178AD0(0, &qword_2541547D8);
    v6 = (void *)sub_231264660();
    objc_msgSend(v5, sel_setImage_, v6);

    v7 = objc_msgSend((id)objc_opt_self(), sel_tertiaryLabelColor);
    objc_msgSend(v5, sel_setTintColor_, v7);

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    LODWORD(v8) = 1144750080;
    objc_msgSend(v5, sel_setContentHuggingPriority_forAxis_, 0, v8);
    LODWORD(v9) = 1148846080;
    objc_msgSend(v5, sel_setContentCompressionResistancePriority_forAxis_, 0, v9);
    v10 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v11 = v2;
  return v3;
}

void sub_23117BC9C(void *a1)
{
  id v1;
  id v2;
  void *v3;
  void *v4;
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for NavigationFeedItemViewController();
  v1 = v5.receiver;
  objc_msgSendSuper2(&v5, sel_viewDidLoad);
  sub_23117BD88();
  sub_23117C314(v1);
  v2 = sub_23117C5E8(v1);
  v3 = (void *)objc_opt_self();
  sub_231210814((unint64_t)v2);
  sub_231178AD0(0, &qword_255EBA000);
  v4 = (void *)sub_2312641EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_activateConstraints_, v4);

}

void sub_23117BD88()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  double v8;
  id v9;
  void *v10;
  id v11;

  v1 = objc_msgSend(v0, sel_view);
  if (!v1)
  {
    __break(1u);
    goto LABEL_6;
  }
  v2 = v1;
  v3 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemGroupedBackgroundColor);
  objc_msgSend(v2, sel_setBackgroundColor_, v3);

  v4 = objc_msgSend(v0, sel_view);
  if (!v4)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v5 = v4;
  v6 = objc_msgSend(v4, sel_heightAnchor);

  v7 = objc_msgSend(v6, sel_constraintGreaterThanOrEqualToConstant_, 60.0);
  LODWORD(v8) = 1148829696;
  objc_msgSend(v7, sel_setPriority_, v8);
  objc_msgSend(v7, sel_setActive_, 1);
  sub_23117BEF4();
  v9 = objc_msgSend(v0, sel_view);
  if (v9)
  {
    v10 = v9;
    v11 = sub_23117BB14();
    objc_msgSend(v10, sel_addSubview_, v11);

    return;
  }
LABEL_7:
  __break(1u);
}

id sub_23117BEF4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  id result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  void *v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  _QWORD *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v1 = sub_23126292C();
  v45 = *(_QWORD *)(v1 - 8);
  v46 = v1;
  v2 = MEMORY[0x24BDAC7A8](v1);
  v44 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v41 - v4;
  v6 = type metadata accessor for NavigationFeedItemData();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v47 = (uint64_t)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311787F4(0, &qword_255EB7FC8, v9);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v41 - v14;
  v16 = sub_23126283C();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v49 = (uint64_t)&v41 - v21;
  v22 = (uint64_t)v0 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0x60);
  swift_beginAccess();
  sub_231178A84(v22, (uint64_t)v15, &qword_255EB7FC8, (void (*)(uint64_t))type metadata accessor for NavigationFeedItemData);
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v48 = v6;
  if (v23(v15, 1, v6))
    return (id)sub_2311786C0((uint64_t)v15, &qword_255EB7FC8, (void (*)(uint64_t))type metadata accessor for NavigationFeedItemData);
  v42 = v0;
  v43 = v5;
  v25 = v47;
  sub_231178454((uint64_t)v15, v47, (uint64_t (*)(_QWORD))type metadata accessor for NavigationFeedItemData);
  sub_2311786C0((uint64_t)v15, &qword_255EB7FC8, (void (*)(uint64_t))type metadata accessor for NavigationFeedItemData);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v20, v25, v16);
  sub_23117DAAC(v25);
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v49, v20, v16);
  sub_231178A84(v22, (uint64_t)v13, &qword_255EB7FC8, (void (*)(uint64_t))type metadata accessor for NavigationFeedItemData);
  v26 = v48;
  v27 = v16;
  if (v23(v13, 1, v48))
  {
    sub_2311786C0((uint64_t)v13, &qword_255EB7FC8, (void (*)(uint64_t))type metadata accessor for NavigationFeedItemData);
    return (id)(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v49, v16);
  }
  v41 = v17;
  sub_231178454((uint64_t)v13, v25, (uint64_t (*)(_QWORD))type metadata accessor for NavigationFeedItemData);
  sub_2311786C0((uint64_t)v13, &qword_255EB7FC8, (void (*)(uint64_t))type metadata accessor for NavigationFeedItemData);
  v28 = v44;
  v29 = v45;
  v30 = v46;
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v44, v25 + *(int *)(v26 + 20), v46);
  sub_23117DAAC(v25);
  v31 = (uint64_t)v43;
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v43, v28, v30);
  v32 = v49;
  sub_23117DDE0(v49, v31);
  if (v33)
  {
    v34 = v42;
    v35 = sub_23117B9A8();
    v36 = (void *)sub_23126406C();
    swift_bridgeObjectRelease();
    objc_msgSend(v35, sel_setText_, v36);

    result = objc_msgSend(v34, sel_view);
    v37 = v41;
    if (!result)
    {
      __break(1u);
      return result;
    }
    v38 = result;
    v39 = sub_23117B9A8();
    objc_msgSend(v38, sel_addSubview_, v39);

    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v31, v30);
    v40 = *(uint64_t (**)(uint64_t, uint64_t))(v37 + 8);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v31, v30);
    v40 = *(uint64_t (**)(uint64_t, uint64_t))(v41 + 8);
  }
  return (id)v40(v32, v27);
}

id sub_23117C314(void *a1)
{
  id v2;
  id v3;
  id result;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;

  v18 = MEMORY[0x24BEE4AF8];
  v2 = sub_23117B9A8();
  v3 = objc_msgSend(v2, sel_leadingAnchor);

  result = objc_msgSend(a1, sel_view);
  if (!result)
  {
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    return result;
  }
  v5 = result;
  v6 = objc_msgSend(result, sel_leadingAnchor);

  v7 = objc_msgSend(v3, sel_constraintEqualToAnchor_constant_, v6, 16.0);
  MEMORY[0x2348D75E4]();
  if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_23126424C();
  sub_231264264();
  sub_231264210();
  v8 = sub_23117B9A8();
  v9 = objc_msgSend(v8, sel_topAnchor);

  result = objc_msgSend(a1, sel_view);
  if (!result)
    goto LABEL_12;
  v10 = result;
  v11 = objc_msgSend(result, sel_topAnchor);

  v12 = objc_msgSend(v9, sel_constraintEqualToAnchor_constant_, v11, 8.0);
  MEMORY[0x2348D75E4]();
  if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_23126424C();
  sub_231264264();
  sub_231264210();
  v13 = sub_23117B9A8();
  v14 = objc_msgSend(v13, sel_bottomAnchor);

  result = objc_msgSend(a1, sel_view);
  if (!result)
    goto LABEL_13;
  v15 = result;
  v16 = objc_msgSend(result, sel_bottomAnchor);

  v17 = objc_msgSend(v14, sel_constraintEqualToAnchor_constant_, v16, -8.0);
  MEMORY[0x2348D75E4]();
  if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_23126424C();
  sub_231264264();
  sub_231264210();
  return (id)v18;
}

id sub_23117C5E8(void *a1)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id result;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;

  v18 = MEMORY[0x24BEE4AF8];
  v2 = sub_23117BB14();
  v3 = objc_msgSend(v2, sel_leadingAnchor);

  v4 = sub_23117B9A8();
  v5 = objc_msgSend(v4, sel_trailingAnchor);

  v6 = objc_msgSend(v3, sel_constraintEqualToAnchor_constant_, v5, 8.0);
  MEMORY[0x2348D75E4]();
  if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_23126424C();
  sub_231264264();
  sub_231264210();
  v7 = sub_23117BB14();
  v8 = objc_msgSend(v7, sel_trailingAnchor);

  result = objc_msgSend(a1, sel_view);
  if (!result)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    return result;
  }
  v10 = result;
  v11 = objc_msgSend(result, sel_trailingAnchor);

  v12 = objc_msgSend(v8, sel_constraintEqualToAnchor_constant_, v11, -16.0);
  MEMORY[0x2348D75E4]();
  if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_23126424C();
  sub_231264264();
  sub_231264210();
  v13 = sub_23117BB14();
  v14 = objc_msgSend(v13, sel_centerYAnchor);

  result = objc_msgSend(a1, sel_view);
  if (!result)
    goto LABEL_11;
  v15 = result;
  v16 = objc_msgSend(result, sel_centerYAnchor);

  v17 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v16);
  MEMORY[0x2348D75E4]();
  if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_23126424C();
  sub_231264264();
  sub_231264210();
  return (id)v18;
}

void sub_23117C8B0(void *a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  void *v6;
  objc_super v7;

  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for NavigationFeedItemViewController();
  objc_msgSendSuper2(&v7, sel_traitCollectionDidChange_, a1);
  v3 = objc_msgSend(v1, sel_traitCollection);
  v4 = objc_msgSend(v3, sel_legibilityWeight);

  if (!a1 || v4 != objc_msgSend(a1, sel_legibilityWeight))
  {
    v5 = sub_23117B9A8();
    sub_231178AD0(0, &qword_2541548C0);
    v6 = (void *)sub_23126460C();
    objc_msgSend(v5, sel_setFont_, v6);

  }
}

void sub_23117C9B8(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;

  v5 = a3;
  v6 = a1;
  sub_23117C8B0(a3);

}

uint64_t sub_23117CA10(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unsigned int (*v28)(__int128 *, uint64_t, uint64_t);
  unint64_t *v29;
  void (*v30)(uint64_t);
  __int128 *v31;
  uint64_t result;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(char *, uint64_t);
  int v46;
  int v47;
  int v48;
  int v49;
  id v50;
  void *v51;
  uint64_t v52;
  id v53;
  char *v54;
  void *v55;
  void *v56;
  id v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t i;
  uint64_t v62;
  uint64_t v63;
  id v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  id v69;
  uint64_t v70;
  id v71;
  id v72;
  char isUniquelyReferenced_nonNull_native;
  char v74;
  unint64_t v75;
  uint64_t v76;
  _BOOL8 v77;
  uint64_t v78;
  char v79;
  unint64_t v80;
  char v81;
  uint64_t v82;
  BOOL v83;
  uint64_t v84;
  id v85;
  char *v86;
  void (*v87)(char *, char *, uint64_t);
  uint64_t v88;
  char *v89;
  uint64_t v90;
  int v91;
  id v92;
  void *v93;
  void *v94;
  void *v95;
  void *v96;
  void *v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  void (*v105)(char *, uint64_t);
  void *v106;
  char *v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  char *v122;
  char *v123;
  char *v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  unint64_t v130;
  unint64_t v131;
  __int128 v132;
  uint64_t v133;
  _QWORD v134[3];
  uint64_t v135;

  v2 = v1;
  v128 = a1;
  v125 = sub_23126292C();
  v127 = *(_QWORD *)(v125 - 8);
  v3 = MEMORY[0x24BDAC7A8](v125);
  v124 = (char *)&v119 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v126 = (char *)&v119 - v5;
  v6 = type metadata accessor for NavigationFeedItemData();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v130 = (unint64_t)&v119 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311787F4(0, &qword_255EB7FC8, v9);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v129 = (char *)&v119 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (__int128 *)((char *)&v119 - v13);
  v15 = sub_23126283C();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v123 = (char *)&v119 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v119 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)&v119 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v119 - v25;
  v27 = (uint64_t)&v1[*(_QWORD *)((*MEMORY[0x24BEE4EA0] & *(_QWORD *)v1) + 0x60)];
  swift_beginAccess();
  sub_231178A84(v27, (uint64_t)v14, &qword_255EB7FC8, (void (*)(uint64_t))type metadata accessor for NavigationFeedItemData);
  v28 = *(unsigned int (**)(__int128 *, uint64_t, uint64_t))(v7 + 48);
  v131 = v6;
  if (v28(v14, 1, v6))
  {
    v29 = &qword_255EB7FC8;
    v30 = (void (*)(uint64_t))type metadata accessor for NavigationFeedItemData;
    v31 = v14;
    return sub_2311786C0((uint64_t)v31, v29, v30);
  }
  v121 = v21;
  v122 = v2;
  v33 = v130;
  sub_231178454((uint64_t)v14, v130, (uint64_t (*)(_QWORD))type metadata accessor for NavigationFeedItemData);
  sub_2311786C0((uint64_t)v14, &qword_255EB7FC8, (void (*)(uint64_t))type metadata accessor for NavigationFeedItemData);
  v34 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v34(v24, v33, v15);
  sub_23117DAAC(v33);
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v26, v24, v15);
  v35 = (uint64_t)v129;
  sub_231178A84(v27, (uint64_t)v129, &qword_255EB7FC8, (void (*)(uint64_t))type metadata accessor for NavigationFeedItemData);
  v36 = v131;
  if (v28((__int128 *)v35, 1, v131))
  {
    sub_2311786C0(v35, &qword_255EB7FC8, (void (*)(uint64_t))type metadata accessor for NavigationFeedItemData);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v26, v15);
  }
  v120 = v26;
  v119 = v16;
  sub_231178454(v35, v33, (uint64_t (*)(_QWORD))type metadata accessor for NavigationFeedItemData);
  sub_2311786C0(v35, &qword_255EB7FC8, (void (*)(uint64_t))type metadata accessor for NavigationFeedItemData);
  v37 = v127;
  v38 = v124;
  v39 = v125;
  (*(void (**)(char *, uint64_t, uint64_t))(v127 + 16))(v124, v33 + *(int *)(v36 + 20), v125);
  sub_23117DAAC(v33);
  v40 = v126;
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v126, v38, v39);
  v41 = &v122[*(_QWORD *)((*MEMORY[0x24BEE4EA0] & *(_QWORD *)v122) + 0x70)];
  swift_beginAccess();
  sub_231178A84((uint64_t)v41, (uint64_t)&v132, (unint64_t *)&qword_2541548B0, (void (*)(uint64_t))sub_23117DAE8);
  if (!v133)
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v40, v39);
    (*(void (**)(char *, uint64_t))(v119 + 8))(v120, v15);
    v29 = (unint64_t *)&qword_2541548B0;
    v30 = (void (*)(uint64_t))sub_23117DAE8;
    v31 = &v132;
    return sub_2311786C0((uint64_t)v31, v29, v30);
  }
  sub_2311789AC(&v132, (uint64_t)v134);
  v42 = v121;
  v43 = (uint64_t)v120;
  v34(v121, (uint64_t)v120, v15);
  v44 = v119;
  v45 = *(uint64_t (**)(char *, uint64_t))(v119 + 88);
  v46 = v45(v42, v15);
  v47 = *MEMORY[0x24BE48FD0];
  if (v46 == *MEMORY[0x24BE48FD0])
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v40, v39);
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v15);
    return sub_231173434((uint64_t)v134);
  }
  v48 = *MEMORY[0x24BE48FC0];
  v49 = *MEMORY[0x24BE48FC8];
  if (v46 == *MEMORY[0x24BE48FC0] || v46 == v49)
  {
    v86 = v123;
    v87 = (void (*)(char *, char *, uint64_t))v34;
    v88 = (uint64_t)v120;
    v87(v123, v120, v15);
    v89 = v86;
    v90 = v119;
    v91 = v45(v89, v15);
    if (v91 == v47)
      goto LABEL_41;
    if (v91 == v48)
    {
      v92 = v122;
    }
    else
    {
      v92 = v122;
      if (v91 != v49)
      {
        v88 = (uint64_t)v120;
        if (v91 != *MEMORY[0x24BE48FD8])
          goto LABEL_66;
LABEL_41:
        (*(void (**)(char *, uint64_t))(v37 + 8))(v40, v39);
        (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v88, v15);
        return sub_231173434((uint64_t)v134);
      }
    }
    sub_2312628A8();
    v93 = (void *)sub_231262884();
    sub_231173410(v134, v135);
    v94 = (void *)sub_23126376C();
    v95 = (void *)sub_231262890();

    sub_231262CC8();
    v96 = (void *)sub_231262CBC();
    v97 = (void *)sub_231262C80();

    sub_231178454(v128, (uint64_t)&v132, (uint64_t (*)(_QWORD))sub_23117DD88);
    v98 = v133;
    if (v133)
    {
      v99 = sub_231173410(&v132, v133);
      v100 = v15;
      v101 = *(_QWORD *)(v98 - 8);
      MEMORY[0x24BDAC7A8](v99);
      v103 = (char *)&v119 - ((v102 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v101 + 16))(v103);
      v104 = sub_231264B40();
      v105 = *(void (**)(char *, uint64_t))(v101 + 8);
      v15 = v100;
      v40 = v126;
      v105(v103, v98);
      v37 = v127;
      sub_231173434((uint64_t)&v132);
    }
    else
    {
      v104 = 0;
    }
    objc_msgSend(v92, sel_showViewController_sender_, v97, v104);

    swift_unknownObjectRelease();
LABEL_49:
    (*(void (**)(char *, uint64_t))(v37 + 8))(v40, v39);
    (*(void (**)(char *, uint64_t))(v119 + 8))(v120, v15);
    return sub_231173434((uint64_t)v134);
  }
  if (v46 == *MEMORY[0x24BE48FD8])
  {
    v50 = objc_msgSend((id)objc_opt_self(), sel_supportedRecordCategoriesByCategoryType);
    if (v50)
    {
      v51 = v50;
      sub_231178AD0(0, &qword_255EB7FD0);
      sub_231178AD0(0, &qword_255EB7FD8);
      sub_23117E224(&qword_255EB7FE0, &qword_255EB7FD0);
      v52 = sub_231263FC4();

      v53 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, sub_2312628E4());
      v54 = (char *)sub_23117D6EC(v53, v52);

      swift_bridgeObjectRelease();
      v124 = v54;
      if (v54)
      {
        v123 = (char *)v15;
        sub_2312628A8();
        v55 = (void *)sub_231262884();
        sub_231173410(v134, v135);
        v56 = (void *)sub_23126376C();
        v129 = (char *)sub_231262890();

        v57 = objc_msgSend((id)objc_opt_self(), sel_predicateForMedicalRecordWithState_, 1);
        v58 = sub_2312628FC();
        v59 = sub_23123F450(MEMORY[0x24BEE4AF8]);
        if (v58 >> 62)
          goto LABEL_56;
        v60 = *(_QWORD *)((v58 & 0xFFFFFFFFFFFFF8) + 0x10);
        for (i = v128; v60; i = v128)
        {
          v130 = v58;
          v131 = v58 & 0xC000000000000001;
          v62 = 4;
          while (1)
          {
            v64 = v131 ? (id)MEMORY[0x2348D7CE0](v62 - 4, v58) : *(id *)(v58 + 8 * v62);
            v65 = v64;
            v66 = v62 - 3;
            if (__OFADD__(v62 - 4, 1))
              break;
            if ((v59 & 0xC000000000000001) != 0)
            {
              if (v59 < 0)
                v67 = v59;
              else
                v67 = v59 & 0xFFFFFFFFFFFFFF8;
              v68 = v64;
              v69 = v57;
              v70 = sub_23126481C();
              if (__OFADD__(v70, 1))
                goto LABEL_54;
              v59 = sub_23117DB3C(v67, v70 + 1);
            }
            else
            {
              v71 = v64;
              v72 = v57;
            }
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *(_QWORD *)&v132 = v59;
            v58 = v59;
            v75 = sub_231242BE0((uint64_t)v65);
            v76 = *(_QWORD *)(v59 + 16);
            v77 = (v74 & 1) == 0;
            v78 = v76 + v77;
            if (__OFADD__(v76, v77))
              goto LABEL_53;
            v79 = v74;
            if (*(_QWORD *)(v59 + 24) >= v78)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                sub_23124BD3C();
            }
            else
            {
              sub_23124AF64(v78, isUniquelyReferenced_nonNull_native);
              v80 = sub_231242BE0((uint64_t)v65);
              if ((v79 & 1) != (v81 & 1))
                goto LABEL_65;
              v75 = v80;
            }
            v59 = v132;
            v58 = 8 * v75;
            if ((v79 & 1) != 0)
            {
              v63 = *(_QWORD *)(v132 + 56);

              *(_QWORD *)(v63 + 8 * v75) = v57;
            }
            else
            {
              *(_QWORD *)(v132 + 8 * (v75 >> 6) + 64) |= 1 << v75;
              *(_QWORD *)(*(_QWORD *)(v59 + 48) + 8 * v75) = v65;
              *(_QWORD *)(*(_QWORD *)(v59 + 56) + 8 * v75) = v57;
              v82 = *(_QWORD *)(v59 + 16);
              v83 = __OFADD__(v82, 1);
              v84 = v82 + 1;
              if (v83)
                goto LABEL_55;
              *(_QWORD *)(v59 + 16) = v84;
              v85 = v65;
            }
            i = v128;
            v58 = v130;

            swift_bridgeObjectRelease();
            ++v62;
            if (v66 == v60)
              goto LABEL_57;
          }
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
LABEL_56:
          swift_bridgeObjectRetain();
          v60 = sub_2312649A8();
          swift_bridgeObjectRelease();
        }
LABEL_57:
        swift_bridgeObjectRelease();
        sub_231262CC8();
        v106 = (void *)sub_231262CBC();
        sub_23123FAC8(v59);
        swift_bridgeObjectRelease();
        v107 = v124;
        v108 = (void *)sub_231262C5C();

        swift_bridgeObjectRelease();
        sub_23126313C();
        v109 = swift_dynamicCastClass();
        v110 = (uint64_t)v126;
        if (v109)
        {
          v111 = v108;
          sub_23117DDE0((uint64_t)v120, v110);
          sub_231263130();

        }
        sub_231178454(i, (uint64_t)&v132, (uint64_t (*)(_QWORD))sub_23117DD88);
        v112 = v133;
        v113 = v125;
        if (v133)
        {
          v114 = sub_231173410(&v132, v133);
          v115 = *(_QWORD *)(v112 - 8);
          MEMORY[0x24BDAC7A8](v114);
          v117 = (char *)&v119 - ((v116 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v115 + 16))(v117);
          v118 = sub_231264B40();
          (*(void (**)(char *, uint64_t))(v115 + 8))(v117, v112);
          sub_231173434((uint64_t)&v132);
        }
        else
        {
          v118 = 0;
        }
        objc_msgSend(v122, sel_showViewController_sender_, v108, v118);

        swift_unknownObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v110, v113);
        (*(void (**)(char *, char *))(v119 + 8))(v120, v123);
        return sub_231173434((uint64_t)v134);
      }
      goto LABEL_49;
    }
    __break(1u);
LABEL_65:
    sub_231178AD0(0, &qword_255EB7FE8);
    sub_231264BA0();
    __break(1u);
  }
LABEL_66:
  result = sub_231264984();
  __break(1u);
  return result;
}

void *sub_23117D6EC(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  char v7;
  id v8;
  void *v10;

  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v6 = sub_231242C2C((uint64_t)a1);
      if ((v7 & 1) != 0)
      {
        v5 = *(void **)(*(_QWORD *)(a2 + 56) + 8 * v6);
        v8 = v5;
        return v5;
      }
    }
    return 0;
  }
  v3 = a1;
  v4 = sub_231264960();

  if (!v4)
    return 0;
  sub_231178AD0(0, &qword_255EB7FD8);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  v5 = v10;
  swift_unknownObjectRelease();
  return v5;
}

id sub_23117D7C0(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  void *v5;
  id v6;
  objc_super v8;

  *(_QWORD *)&v3[qword_255EB7DD8] = 0;
  *(_QWORD *)&v3[qword_255EB7DE0] = 0;
  *(_QWORD *)&v3[qword_255EB7DE8] = 0x4030000000000000;
  *(_QWORD *)&v3[qword_255EB7DF0] = 0x4020000000000000;
  if (a2)
  {
    v5 = (void *)sub_23126406C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for NavigationFeedItemViewController();
  v6 = objc_msgSendSuper2(&v8, sel_initWithNibName_bundle_, v5, a3);

  return v6;
}

id sub_23117D878(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  if (a3)
  {
    v5 = sub_23126409C();
    v7 = v6;
  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  v8 = a4;
  return sub_23117D7C0(v5, v7, a4);
}

id sub_23117D8D4(void *a1)
{
  char *v1;
  id v3;
  objc_super v5;

  *(_QWORD *)&v1[qword_255EB7DD8] = 0;
  *(_QWORD *)&v1[qword_255EB7DE0] = 0;
  *(_QWORD *)&v1[qword_255EB7DE8] = 0x4030000000000000;
  *(_QWORD *)&v1[qword_255EB7DF0] = 0x4020000000000000;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for NavigationFeedItemViewController();
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id sub_23117D95C(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_23117D8D4(a3);
}

void sub_23117D980()
{
  uint64_t v0;

}

id sub_23117D9AC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NavigationFeedItemViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_23117D9E0(uint64_t a1)
{

}

uint64_t type metadata accessor for NavigationFeedItemViewController()
{
  uint64_t result;

  result = qword_255EB7E20;
  if (!qword_255EB7E20)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23117DA54()
{
  return swift_initClassMetadata2();
}

uint64_t sub_23117DAA4()
{
  return type metadata accessor for NavigationFeedItemViewController();
}

uint64_t sub_23117DAAC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NavigationFeedItemData();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23117DAE8()
{
  unint64_t result;

  result = qword_2541548A0;
  if (!qword_2541548A0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_2541548A0);
  }
  return result;
}

uint64_t sub_23117DB3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (a2)
  {
    sub_23117E16C();
    v2 = sub_2312649D8();
    v18 = v2;
    sub_231264948();
    v3 = sub_23126496C();
    if (v3)
    {
      v4 = v3;
      sub_231178AD0(0, &qword_255EB7FE8);
      do
      {
        swift_dynamicCast();
        sub_231178AD0(0, &qword_255EB8000);
        swift_dynamicCast();
        v2 = v18;
        v12 = *(_QWORD *)(v18 + 16);
        if (*(_QWORD *)(v18 + 24) <= v12)
        {
          sub_23124AF64(v12 + 1, 1);
          v2 = v18;
        }
        result = sub_231264690();
        v6 = v2 + 64;
        v7 = -1 << *(_BYTE *)(v2 + 32);
        v8 = result & ~v7;
        v9 = v8 >> 6;
        if (((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          v10 = __clz(__rbit64((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v13 = 0;
          v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v15 = v9 == v14;
            if (v9 == v14)
              v9 = 0;
            v13 |= v15;
            v16 = *(_QWORD *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(_QWORD *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        v11 = 8 * v10;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + v11) = v17;
        *(_QWORD *)(*(_QWORD *)(v2 + 56) + v11) = v4;
        ++*(_QWORD *)(v2 + 16);
        v4 = sub_23126496C();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x24BEE4B00];
  }
  return v2;
}

void sub_23117DD88()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255EB9FE0)
  {
    v0 = sub_231264738();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255EB9FE0);
  }
}

uint64_t sub_23117DDE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v25 = sub_231262B60();
  v4 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311787F4(0, (unint64_t *)&qword_254151918, (void (*)(uint64_t))MEMORY[0x24BDCEEA8]);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v24 - v8;
  sub_23117E100();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = &v13[*(int *)(v11 + 48)];
  v15 = sub_23126283C();
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v13, a1, v15);
  v17 = sub_23126292C();
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v14, a2, v17);
  v19 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v13, v15);
  if (v19 != *MEMORY[0x24BE48FC0])
  {
    if (v19 == *MEMORY[0x24BE48FC8])
    {
      if ((*(unsigned int (**)(char *, uint64_t))(v18 + 88))(v14, v17) == *MEMORY[0x24BE490B8])
        goto LABEL_9;
    }
    else if (v19 == *MEMORY[0x24BE48FD8]
           && (*(unsigned int (**)(char *, uint64_t))(v18 + 88))(v14, v17) == *MEMORY[0x24BE490B8])
    {
      goto LABEL_9;
    }
LABEL_10:
    (*(void (**)(char *, uint64_t))(v18 + 8))(v14, v17);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    return 0;
  }
  if ((*(unsigned int (**)(char *, uint64_t))(v18 + 88))(v14, v17) != *MEMORY[0x24BE490B8])
    goto LABEL_10;
LABEL_9:
  (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
  v20 = sub_231261EAC();
  v21 = (void (*)(uint64_t))MEMORY[0x24BDCEEA8];
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v9, 1, 1, v20);
  sub_231262B54();
  v22 = sub_2312632EC();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v25);
  sub_2311786C0((uint64_t)v9, (unint64_t *)&qword_254151918, v21);
  return v22;
}

void sub_23117E100()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255EB7FF0)
  {
    sub_23126283C();
    sub_23126292C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255EB7FF0);
  }
}

void sub_23117E16C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255EB7FF8)
  {
    sub_231178AD0(255, &qword_255EB7FE8);
    sub_231178AD0(255, &qword_255EB8000);
    sub_23117E224(&qword_255EB8008, &qword_255EB7FE8);
    v0 = sub_2312649F0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255EB7FF8);
  }
}

uint64_t sub_23117E224(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_231178AD0(255, a2);
    result = MEMORY[0x2348D8544](MEMORY[0x24BEE5BD8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23117E264(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  char v19;
  NSObject *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  NSObject *v24;
  _QWORD *v25;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  NSObject *v31;

  v6 = sub_231263B5C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(a1, sel_activityType);
  v11 = sub_23126409C();
  v13 = v12;

  if (sub_23126409C() == v11 && v14 == v13)
  {
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  v30 = v6;
  v16 = sub_231264B58();
  swift_bridgeObjectRelease();
  if ((v16 & 1) != 0)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    return sub_23117E550(a1, a2, a3);
  }
  if (sub_23126409C() == v11 && v17 == v13)
  {
    swift_bridgeObjectRelease_n();
    return sub_23117E90C(a1);
  }
  v19 = sub_231264B58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v19 & 1) != 0)
    return sub_23117E90C(a1);
  sub_231263B2C();
  v20 = a1;
  v21 = sub_231263B50();
  v22 = sub_2312643D8();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    v29 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v23 = 138543362;
    v31 = v20;
    v24 = v20;
    sub_231264750();
    v25 = v29;
    *v29 = v20;

    _os_log_impl(&dword_23116F000, v21, v22, "Unsupported NSUA was directed to HealthRecords plugin: %{public}@", v23, 0xCu);
    sub_2311787F4(0, (unint64_t *)&qword_2541534F8, (void (*)(uint64_t))sub_23117E8D0);
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v25, -1, -1);
    MEMORY[0x2348D85EC](v23, -1, -1);
  }
  else
  {

    v21 = v20;
  }
  v27 = v30;

  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v27);
}

uint64_t sub_23117E550(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  id v21;
  void *v22;
  void (*v23)(char *, char *, uint64_t);
  NSObject *v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  _QWORD *v29;
  NSObject *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;

  v34 = a3;
  v5 = sub_231263B5C();
  v35 = *(_QWORD *)(v5 - 8);
  v36 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311787F4(0, &qword_255EB8010, (void (*)(uint64_t))MEMORY[0x24BE44720]);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v33 - v9;
  sub_2311787F4(0, &qword_255EB8018, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v33 - v12;
  v14 = sub_231261D74();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v33 - v19;
  v21 = objc_msgSend(a1, sel_webpageURL);
  if (v21)
  {
    v22 = v21;
    sub_231261D68();

    v23 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v23(v13, v18, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
    {
      v23(v20, v13, v14);
      sub_2312313D0((uint64_t)v20, a2, v34, (uint64_t)v10);
      sub_2311786C0((uint64_t)v10, &qword_255EB8010, (void (*)(uint64_t))MEMORY[0x24BE44720]);
      return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v20, v14);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
  }
  sub_2311786C0((uint64_t)v13, &qword_255EB8018, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
  sub_231263B2C();
  v25 = a1;
  v26 = sub_231263B50();
  v27 = sub_2312643D8();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    v29 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v28 = 138543362;
    v37 = v25;
    v30 = v25;
    sub_231264750();
    *v29 = v25;

    _os_log_impl(&dword_23116F000, v26, v27, "Web Browsing activity missing the webpageURL variable: %{public}@", v28, 0xCu);
    sub_2311787F4(0, (unint64_t *)&qword_2541534F8, (void (*)(uint64_t))sub_23117E8D0);
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v29, -1, -1);
    MEMORY[0x2348D85EC](v28, -1, -1);
  }
  else
  {

    v26 = v25;
  }
  v32 = v35;
  v31 = v36;

  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v7, v31);
}

unint64_t sub_23117E8D0()
{
  unint64_t result;

  result = qword_2541534F0;
  if (!qword_2541534F0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2541534F0);
  }
  return result;
}

uint64_t sub_23117E90C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  NSObject *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  _QWORD *v18;
  NSObject *v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  __int128 v27;
  __int128 v28;

  v2 = sub_231263B5C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(a1, sel_userInfo);
  if (!v6)
  {
    v27 = 0u;
    v28 = 0u;
LABEL_10:
    sub_23117EBF4((uint64_t)&v27);
    goto LABEL_11;
  }
  v7 = v6;
  v8 = sub_231263FC4();

  v24 = sub_23126409C();
  v25 = v9;
  sub_231264870();
  if (*(_QWORD *)(v8 + 16) && (v10 = sub_231242C78((uint64_t)&v26), (v11 & 1) != 0))
  {
    sub_23117EC64(*(_QWORD *)(v8 + 56) + 32 * v10, (uint64_t)&v27);
  }
  else
  {
    v27 = 0u;
    v28 = 0u;
  }
  sub_23117EC30((uint64_t)&v26);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v28 + 1))
    goto LABEL_10;
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_2312625D8();
    sub_2312625B4();
    return swift_bridgeObjectRelease();
  }
LABEL_11:
  sub_231263B2C();
  v13 = a1;
  v14 = sub_231263B50();
  v15 = sub_2312643D8();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v23 = v2;
    v18 = (_QWORD *)v17;
    v22 = v5;
    *(_DWORD *)v16 = 138543362;
    v26 = v13;
    v19 = v13;
    v5 = v22;
    sub_231264750();
    *v18 = v13;

    _os_log_impl(&dword_23116F000, v14, v15, "Attemping to restore from health records authorization settings user activity, but no app bundle identifier found: %{public}@", v16, 0xCu);
    sub_2311787F4(0, (unint64_t *)&qword_2541534F8, (void (*)(uint64_t))sub_23117E8D0);
    swift_arrayDestroy();
    v20 = v18;
    v2 = v23;
    MEMORY[0x2348D85EC](v20, -1, -1);
    MEMORY[0x2348D85EC](v16, -1, -1);
  }
  else
  {

    v14 = v13;
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_23117EBF4(uint64_t a1)
{
  uint64_t v2;

  sub_23117DD88();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23117EC30(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

uint64_t sub_23117EC64(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_23117ECA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[8];
  _QWORD v25[3];
  uint64_t v26;

  v1 = v0;
  v2 = sub_231263B5C();
  MEMORY[0x24BDAC7A8](v2);
  sub_2311787F4(0, &qword_255EB8078, (void (*)(uint64_t))MEMORY[0x24BE49328]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v24 - v7;
  v9 = v0 + OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_context;
  swift_beginAccess();
  sub_231180680(v9, (uint64_t)v25);
  v10 = v26;
  if (v26)
  {
    v24[7] = v2;
    v11 = sub_231173410(v25, v26);
    v12 = *(_QWORD *)(v10 - 8);
    MEMORY[0x24BDAC7A8](v11);
    v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v12 + 16))(v14);
    sub_231180624((uint64_t)v25);
    v15 = sub_231263784();
    v16 = *(void (**)(char *, uint64_t))(v12 + 8);
    v18 = v17;
    v16(v14, v10);
    if (v18 >> 60 != 15)
    {
      v19 = sub_231262B18();
      sub_231172048(&qword_255EB8098, (uint64_t (*)(uint64_t))MEMORY[0x24BE49328], MEMORY[0x24BE49340]);
      sub_231261C3C();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 0, 1, v19);
      v22 = v1 + OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_feedItemData;
      swift_beginAccess();
      sub_231180738((uint64_t)v8, v22);
      swift_endAccess();
      return sub_23118078C(v15, v18);
    }
  }
  else
  {
    sub_231180624((uint64_t)v25);
  }
  v20 = sub_231262B18();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v6, 1, 1, v20);
  v21 = v1 + OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_feedItemData;
  swift_beginAccess();
  sub_231180738((uint64_t)v6, v21);
  return swift_endAccess();
}

id sub_23117F1FC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC13HealthRecords21LabsTipViewController____lazy_storage___tipsView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC13HealthRecords21LabsTipViewController____lazy_storage___tipsView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC13HealthRecords21LabsTipViewController____lazy_storage___tipsView);
  }
  else
  {
    v4 = sub_23117F25C(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_23117F25C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t, uint64_t);
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v25;
  uint64_t v26;
  id v27;

  v26 = a1;
  sub_2311787F4(0, &qword_255EB8078, (void (*)(uint64_t))MEMORY[0x24BE49328]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v25 - v2;
  v4 = sub_231262B60();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311787F4(0, (unint64_t *)&qword_254151918, (void (*)(uint64_t))MEMORY[0x24BDCEEA8]);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v25 - v9;
  v11 = objc_msgSend(objc_allocWithZone((Class)sub_2312632D4()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v12 = sub_231261EAC();
  v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v13(v10, 1, 1, v12);
  sub_231262B54();
  sub_2312632EC();
  v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v7, v4);
  sub_2311786C0((uint64_t)v10, (unint64_t *)&qword_254151918, (void (*)(uint64_t))MEMORY[0x24BDCEEA8]);
  v27 = v11;
  sub_2312632C8();
  v13(v10, 1, 1, v12);
  sub_231262B48();
  sub_2312632EC();
  v14(v7, v4);
  sub_2311786C0((uint64_t)v10, (unint64_t *)&qword_254151918, (void (*)(uint64_t))MEMORY[0x24BDCEEA8]);
  sub_2311805C4(0, (unint64_t *)&qword_254155750, (unint64_t *)&qword_254155770, MEMORY[0x24BEE45D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_231265AC0;
  v16 = v26 + OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_feedItemData;
  swift_beginAccess();
  sub_2311806E4(v16, (uint64_t)v3);
  v17 = sub_231262B18();
  v18 = 0;
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v3, 1, v17))
    v18 = sub_231262AE8();
  sub_2311786C0((uint64_t)v3, &qword_255EB8078, (void (*)(uint64_t))MEMORY[0x24BE49328]);
  v19 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v15 + 56) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v15 + 64) = v19;
  *(_QWORD *)(v15 + 32) = v18;
  sub_2312640A8();
  swift_bridgeObjectRelease();
  v20 = v27;
  sub_2312632B0();
  sub_231178AD0(0, &qword_2541547D8);
  sub_231264660();
  sub_2312632BC();
  v21 = (void *)objc_opt_self();
  v22 = v20;
  v23 = objc_msgSend(v21, sel_secondaryLabelColor);
  objc_msgSend(v22, sel_setTintColor_, v23);

  return v22;
}

id sub_23117F790(void *a1, double a2)
{
  id v4;
  id v5;
  id result;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;

  v25 = MEMORY[0x24BEE4AF8];
  v4 = sub_23117F1FC();
  v5 = objc_msgSend(v4, sel_leadingAnchor);

  result = objc_msgSend(a1, sel_view);
  if (!result)
  {
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    return result;
  }
  v7 = result;
  v8 = objc_msgSend(result, sel_leadingAnchor);

  v9 = objc_msgSend(v5, sel_constraintEqualToAnchor_, v8);
  MEMORY[0x2348D75E4]();
  if (*(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_23126424C();
  sub_231264264();
  sub_231264210();
  v10 = sub_23117F1FC();
  v11 = objc_msgSend(v10, sel_trailingAnchor);

  result = objc_msgSend(a1, sel_view);
  if (!result)
    goto LABEL_15;
  v12 = result;
  v13 = objc_msgSend(result, sel_trailingAnchor);

  v14 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v13);
  MEMORY[0x2348D75E4]();
  if (*(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_23126424C();
  sub_231264264();
  sub_231264210();
  v15 = sub_23117F1FC();
  v16 = objc_msgSend(v15, sel_topAnchor);

  result = objc_msgSend(a1, sel_view);
  if (!result)
    goto LABEL_16;
  v17 = result;
  v18 = objc_msgSend(result, sel_topAnchor);

  v19 = objc_msgSend(v16, sel_constraintEqualToAnchor_constant_, v18, -a2);
  MEMORY[0x2348D75E4]();
  if (*(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_23126424C();
  sub_231264264();
  sub_231264210();
  v20 = sub_23117F1FC();
  v21 = objc_msgSend(v20, sel_bottomAnchor);

  result = objc_msgSend(a1, sel_view);
  if (!result)
    goto LABEL_17;
  v22 = result;
  v23 = objc_msgSend(result, sel_bottomAnchor);

  v24 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v23);
  MEMORY[0x2348D75E4]();
  if (*(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_23126424C();
  sub_231264264();
  sub_231264210();
  return (id)v25;
}

id sub_23117FB40(uint64_t a1, uint64_t a2, void *a3)
{
  _BYTE *v3;
  _BYTE *v4;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  objc_super v18;

  v4 = v3;
  v7 = &v3[OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_context];
  *(_OWORD *)v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((_QWORD *)v7 + 4) = 0;
  v8 = &v3[OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_feedItemData];
  v9 = sub_231262B18();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v4[OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_isDismissible] = 1;
  v10 = &v4[OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_headerType];
  v11 = *MEMORY[0x24BE42848];
  v12 = sub_23126346C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  v4[OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_showsSeparator] = 0;
  v13 = OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_decoder;
  sub_231261C54();
  swift_allocObject();
  v14 = v4;
  *(_QWORD *)&v4[v13] = sub_231261C48();
  *(_QWORD *)&v14[OBJC_IVAR____TtC13HealthRecords21LabsTipViewController____lazy_storage___tipsView] = 0;

  if (a2)
  {
    v15 = (void *)sub_23126406C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = 0;
  }
  v18.receiver = v14;
  v18.super_class = (Class)type metadata accessor for LabsTipViewController();
  v16 = objc_msgSendSuper2(&v18, sel_initWithNibName_bundle_, v15, a3);

  return v16;
}

id sub_23117FD18(void *a1)
{
  _BYTE *v1;
  _BYTE *v2;
  char *v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  objc_super v14;

  v2 = v1;
  v4 = &v1[OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_context];
  *(_OWORD *)v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((_QWORD *)v4 + 4) = 0;
  v5 = &v1[OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_feedItemData];
  v6 = sub_231262B18();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v2[OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_isDismissible] = 1;
  v7 = &v2[OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_headerType];
  v8 = *MEMORY[0x24BE42848];
  v9 = sub_23126346C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  v2[OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_showsSeparator] = 0;
  v10 = OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_decoder;
  sub_231261C54();
  swift_allocObject();
  v11 = v2;
  *(_QWORD *)&v2[v10] = sub_231261C48();
  *(_QWORD *)&v11[OBJC_IVAR____TtC13HealthRecords21LabsTipViewController____lazy_storage___tipsView] = 0;

  v14.receiver = v11;
  v14.super_class = (Class)type metadata accessor for LabsTipViewController();
  v12 = objc_msgSendSuper2(&v14, sel_initWithCoder_, a1);

  return v12;
}

id sub_23117FE7C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LabsTipViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23117FF40()
{
  return type metadata accessor for LabsTipViewController();
}

uint64_t type metadata accessor for LabsTipViewController()
{
  uint64_t result;

  result = qword_255EB8068;
  if (!qword_255EB8068)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23117FF84()
{
  unint64_t v0;
  unint64_t v1;

  sub_2311787F4(319, &qword_255EB8078, (void (*)(uint64_t))MEMORY[0x24BE49328]);
  if (v0 <= 0x3F)
  {
    sub_23126346C();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t sub_231180044@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_context;
  swift_beginAccess();
  return sub_231180680(v3, a1);
}

uint64_t sub_231180094(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_context;
  swift_beginAccess();
  sub_231180560(a1, v3);
  swift_endAccess();
  sub_23117ECA0();
  return sub_231180624(a1);
}

uint64_t (*sub_231180100(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_231180148;
}

uint64_t sub_231180148(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_23117ECA0();
  return result;
}

uint64_t sub_231180180()
{
  type metadata accessor for LabsTipViewController();
  sub_231172048(&qword_255EB8090, (uint64_t (*)(uint64_t))type metadata accessor for LabsTipViewController, (uint64_t)&unk_231265EE8);
  return sub_231262C38();
}

uint64_t sub_2311801F8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_headerType;
  v4 = sub_23126346C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_231180248()
{
  id *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*v0, sel_title);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_23126409C();

  return v3;
}

uint64_t sub_2311802B0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_2311787F4(0, &qword_255EB8078, (void (*)(uint64_t))MEMORY[0x24BE49328]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v12 - v4;
  v6 = *v1 + OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_feedItemData;
  swift_beginAccess();
  sub_2311806E4(v6, (uint64_t)v5);
  v7 = sub_231262B18();
  v8 = *(_QWORD *)(v7 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_231262AF4();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
    v10 = *MEMORY[0x24BE49610];
    v11 = sub_231262E3C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(a1, v10, v11);
  }
  return result;
}

uint64_t sub_2311803CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v9[24];
  _QWORD v10[3];
  uint64_t v11;

  v1 = *v0 + OBJC_IVAR____TtC13HealthRecords21LabsTipViewController_context;
  swift_beginAccess();
  result = sub_231180680(v1, (uint64_t)v10);
  v3 = v11;
  if (v11)
  {
    v4 = sub_231173410(v10, v11);
    v5 = *(_QWORD *)(v3 - 8);
    MEMORY[0x24BDAC7A8](v4);
    v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(_BYTE *))(v5 + 16))(v7);
    v8 = sub_23126376C();
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v3);
    sub_231173434((uint64_t)v10);
    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2311804C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BE42648];
  v3 = sub_231263424();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_231180508()
{
  return sub_231172048(&qword_255EB8080, (uint64_t (*)(uint64_t))type metadata accessor for LabsTipViewController, (uint64_t)&unk_231265F28);
}

uint64_t sub_231180534()
{
  return sub_231172048(&qword_255EB8088, (uint64_t (*)(uint64_t))type metadata accessor for LabsTipViewController, (uint64_t)&unk_231265F78);
}

uint64_t sub_231180560(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2311805C4(0, (unint64_t *)&qword_2541548B0, (unint64_t *)&qword_2541548A0, MEMORY[0x24BE443C0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_2311805C4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_2311787A8(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_231180624(uint64_t a1)
{
  uint64_t v2;

  sub_2311805C4(0, (unint64_t *)&qword_2541548B0, (unint64_t *)&qword_2541548A0, MEMORY[0x24BE443C0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_231180680(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2311805C4(0, (unint64_t *)&qword_2541548B0, (unint64_t *)&qword_2541548A0, MEMORY[0x24BE443C0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2311806E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2311787F4(0, &qword_255EB8078, (void (*)(uint64_t))MEMORY[0x24BE49328]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_231180738(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2311787F4(0, &qword_255EB8078, (void (*)(uint64_t))MEMORY[0x24BE49328]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23118078C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_2311807A0(a1, a2);
  return a1;
}

uint64_t sub_2311807A0(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

unint64_t sub_2311807E4()
{
  unint64_t result;

  result = qword_255EB80A0;
  if (!qword_255EB80A0)
  {
    sub_231262B18();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255EB80A0);
  }
  return result;
}

uint64_t type metadata accessor for SharedConcept_SharingVersionMismatchTileView(uint64_t a1)
{
  return sub_231187940(a1, qword_255EB80A8);
}

uint64_t sub_231180830()
{
  return swift_initClassMetadata2();
}

id sub_23118086C(void *a1, double a2, double a3, double a4, double a5)
{
  objc_super v10;

  v10.receiver = a1;
  v10.super_class = (Class)type metadata accessor for SharedConcept_SharingVersionMismatchTileView(0);
  return objc_msgSendSuper2(&v10, sel_initWithFrame_, a2, a3, a4, a5);
}

id sub_2311808DC(void *a1, uint64_t a2, uint64_t a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for SharedConcept_SharingVersionMismatchTileView(0);
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_231180924()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SharedConcept_SharingVersionMismatchTileView(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_231180958()
{
  return type metadata accessor for SharedConcept_SharingVersionMismatchTileView(0);
}

uint64_t sub_231180960(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void (*v26)(unint64_t, _QWORD, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  char v58[40];
  uint64_t v59;
  _QWORD v60[4];

  v57 = a3;
  v55 = a2;
  v4 = sub_23126226C();
  v49 = *(_QWORD *)(v4 - 8);
  v5 = *(_QWORD *)(v49 + 64);
  v51 = v4;
  v52 = v5;
  MEMORY[0x24BDAC7A8](v4);
  v48 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_2312621DC();
  v45 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_2312621F4();
  v9 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2312624F4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231187CB8();
  v17 = *(_QWORD *)(v16 - 8);
  v53 = v16;
  v54 = v17;
  MEMORY[0x24BDAC7A8](v16);
  v50 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231262200();
  sub_231173410(v60, v60[3]);
  sub_2312624E8();
  v19 = sub_231262434();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v59 = v19;
  sub_231262260();
  sub_231262230();
  sub_2311735E0(0, &qword_254155718, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v20 = sub_231261FA8();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 72);
  v23 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_231265570;
  v25 = v24 + v23;
  v26 = *(void (**)(unint64_t, _QWORD, uint64_t))(v21 + 104);
  v26(v25, *MEMORY[0x24BE47460], v20);
  v26(v25 + v22, *MEMORY[0x24BE47410], v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v45 + 104))(v8, *MEMORY[0x24BE47920], v46);
  sub_2312621E8();
  sub_231187DD8();
  v46 = v27;
  sub_231172048(&qword_254152F10, (uint64_t (*)(uint64_t))sub_231187DD8, MEMORY[0x24BDB9AF8]);
  v28 = sub_231263E2C();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v47);
  sub_231173434((uint64_t)v58);
  swift_release();
  sub_231173434((uint64_t)v60);
  v60[0] = v28;
  v30 = v48;
  v29 = v49;
  v31 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v48, a1, v51);
  v32 = (*(unsigned __int8 *)(v29 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v33 = (v52 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
  v34 = (v33 + 15) & 0xFFFFFFFFFFFFFFF8;
  v35 = (v34 + 15) & 0xFFFFFFFFFFFFFFF8;
  v36 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v29 + 32))(v36 + v32, v30, v31);
  v37 = v56;
  *(_QWORD *)(v36 + v33) = v55;
  *(_QWORD *)(v36 + v34) = v37;
  v38 = v57;
  *(_QWORD *)(v36 + v35) = v57;
  *(_QWORD *)(v36 + ((v35 + 15) & 0xFFFFFFFFFFFFFFF8)) = v37;
  swift_bridgeObjectRetain();
  v39 = v38;
  sub_231263CF4();
  sub_231187D64();
  sub_231187E54();
  v40 = v50;
  sub_231263F34();
  swift_release();
  swift_release();
  sub_231172048(&qword_2541543C8, (uint64_t (*)(uint64_t))sub_231187CB8, MEMORY[0x24BDB98F0]);
  v41 = v53;
  v42 = sub_231263E38();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v40, v41);
  return v42;
}

uint64_t sub_231180DE8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(_QWORD);
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  int64_t v28;
  unint64_t v29;
  void (*v30)(char *, unint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _DWORD *v42;
  char *v43;
  uint64_t *v44;
  char *v45;
  uint64_t result;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  id v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  char *v68;
  unint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, _QWORD, uint64_t);
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(char *, char *, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  uint64_t v98;
  void (*v99)(char *, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char v108;
  char *v109;
  uint64_t v110;
  unint64_t *v111;
  _QWORD *v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(char *, _QWORD, uint64_t);
  char *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  unint64_t v129;
  unint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t *v154;
  uint64_t v155;
  uint64_t v156;
  size_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t *v165;
  uint64_t v166;
  void *v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t *v172;
  int v173;
  int v174;
  int v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t *v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  void (*v188)(char *, uint64_t);
  void (*v189)(char *, _QWORD, uint64_t);
  unsigned int v190;
  char *v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206[4];
  uint64_t v207;
  uint64_t v208;

  v167 = a5;
  v168 = a4;
  v184 = a3;
  v172 = a6;
  sub_231188B88(0, &qword_254152E58, (uint64_t (*)(uint64_t))sub_231187D64, sub_231187E54, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB99B8]);
  v171 = v8;
  v170 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v169 = (char *)&v164 - v9;
  v10 = sub_2312623EC();
  v203 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v202 = (char *)&v164 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v201 = (char *)&v164 - v13;
  v194 = sub_23126292C();
  v196 = *(_QWORD *)(v194 - 8);
  MEMORY[0x24BDAC7A8](v194);
  v193 = (char *)&v164 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v177 = sub_2312624C4();
  v179 = *(_QWORD *)(v177 - 8);
  MEMORY[0x24BDAC7A8](v177);
  v178 = (uint64_t *)((char *)&v164 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v180 = sub_23126226C();
  v197 = *(_QWORD *)(v180 - 8);
  MEMORY[0x24BDAC7A8](v180);
  v198 = (char *)&v164 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v186 = sub_231263B5C();
  v185 = *(_QWORD *)(v186 - 8);
  MEMORY[0x24BDAC7A8](v186);
  v181 = (char *)&v164 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v200 = sub_23126217C();
  v18 = *(_QWORD *)(v200 - 8);
  MEMORY[0x24BDAC7A8](v200);
  v20 = (char *)&v164 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v183 = 0;
  v21 = sub_2312626E0();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v164 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v187 = *a1;
  v207 = MEMORY[0x24BEE4B08];
  v208 = MEMORY[0x24BEE4B08];
  v195 = a2;
  sub_23126220C();
  sub_231173410(v206, v206[3]);
  v25 = *(void (**)(_QWORD))(v22 + 104);
  v190 = *MEMORY[0x24BE48DE0];
  v189 = (void (*)(char *, _QWORD, uint64_t))v25;
  v25(v24);
  v26 = sub_231262188();
  v27 = *(void (**)(char *, uint64_t))(v22 + 8);
  v191 = v24;
  v192 = v21;
  v188 = v27;
  v27(v24, v21);
  sub_231173434((uint64_t)v206);
  v28 = *(_QWORD *)(v26 + 16);
  v204 = v10;
  v166 = v26;
  if (v28)
  {
    v206[0] = MEMORY[0x24BEE4AF8];
    sub_231199248(0, v28, 0);
    v29 = v26 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    v199 = *(_QWORD *)(v18 + 72);
    v30 = *(void (**)(char *, unint64_t, uint64_t))(v18 + 16);
    v31 = v18;
    do
    {
      v32 = v200;
      v30(v20, v29, v200);
      v33 = sub_2312620D4();
      v35 = v34;
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v32);
      v36 = v206[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_231199248(0, *(_QWORD *)(v36 + 16) + 1, 1);
        v36 = v206[0];
      }
      v38 = *(_QWORD *)(v36 + 16);
      v37 = *(_QWORD *)(v36 + 24);
      if (v38 >= v37 >> 1)
      {
        sub_231199248(v37 > 1, v38 + 1, 1);
        v36 = v206[0];
      }
      *(_QWORD *)(v36 + 16) = v38 + 1;
      v39 = v36 + 16 * v38;
      *(_QWORD *)(v39 + 32) = v33;
      *(_QWORD *)(v39 + 40) = v35;
      v29 += v199;
      --v28;
      v18 = v31;
    }
    while (v28);
    v176 = v36;
    v10 = v204;
  }
  else
  {
    v176 = MEMORY[0x24BEE4AF8];
  }
  v40 = v179;
  v41 = v184;
  v42 = (_DWORD *)MEMORY[0x24BE48108];
  v43 = v201;
  v44 = v178;
  v182 = *(_QWORD *)(v184 + 16);
  v45 = v198;
  if (v182)
  {
    result = swift_bridgeObjectRetain();
LABEL_17:
    v63 = 0;
    v181 = (char *)(v41 + ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80)));
    LODWORD(v180) = *v42;
    v175 = *MEMORY[0x24BE480E0];
    v174 = *MEMORY[0x24BE48100];
    v173 = *MEMORY[0x24BE480E8];
    LODWORD(v187) = *MEMORY[0x24BE490B8];
    v165 = (uint64_t *)(v176 + 40);
    v64 = v177;
    v184 = v41;
    while (1)
    {
      if (v63 >= *(_QWORD *)(v41 + 16))
      {
        __break(1u);
        return result;
      }
      v65 = *(_QWORD *)(v40 + 72);
      v186 = v63;
      (*(void (**)(uint64_t *, char *, uint64_t))(v40 + 16))(v44, &v181[v65 * v63], v64);
      v66 = (*(uint64_t (**)(uint64_t *, uint64_t))(v40 + 88))(v44, v64);
      if (v66 == (_DWORD)v180)
      {
        (*(void (**)(uint64_t *, uint64_t))(v40 + 96))(v44, v64);
        v67 = *v44;
        v68 = *(char **)(*v44 + 16);
        v185 = v67;
        if (v68)
        {
          v69 = v67 + ((*(unsigned __int8 *)(v203 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v203 + 80));
          v197 = *(_QWORD *)(v203 + 72);
          swift_bridgeObjectRetain();
          v70 = (_QWORD *)MEMORY[0x24BEE4AF8];
          do
          {
            v71 = sub_2312623C8();
            v73 = v72;
            swift_bridgeObjectRetain();
            v74 = sub_2311DDBBC(v71, v73);
            if (v74)
            {
              v77 = v74;
              v198 = v68;
              v199 = sub_2311DBA50(v74, v75, v76);
              sub_2311884EC(v77);
              v78 = v196;
              v79 = *(void (**)(char *, _QWORD, uint64_t))(v196 + 104);
              v200 = (uint64_t)v70;
              v80 = v193;
              v81 = v194;
              v79(v193, v187, v194);
              v82 = v191;
              v83 = v192;
              v189(v191, v190, v192);
              v84 = (void *)sub_231262230();
              v199 = sub_2312630A0();
              v86 = v85;
              swift_bridgeObjectRelease();

              v188(v82, v83);
              v87 = v80;
              v70 = (_QWORD *)v200;
              (*(void (**)(char *, uint64_t))(v78 + 8))(v87, v81);
              swift_bridgeObjectRelease();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v70 = sub_2311DC450(0, v70[2] + 1, 1, v70);
              v68 = v198;
              v88 = v199;
              v90 = v70[2];
              v89 = v70[3];
              if (v90 >= v89 >> 1)
                v70 = sub_2311DC450((_QWORD *)(v89 > 1), v90 + 1, 1, v70);
              v70[2] = v90 + 1;
              v91 = &v70[2 * v90];
              v91[4] = v88;
              v91[5] = v86;
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            v69 += v197;
            --v68;
          }
          while (v68);
          swift_bridgeObjectRelease();
          v10 = v204;
        }
        else
        {
          v70 = (_QWORD *)MEMORY[0x24BEE4AF8];
        }
        v132 = swift_bridgeObjectRetain();
        v133 = v183;
        v134 = sub_231187FF0(v132, v70);
        v183 = v133;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v135 = *(_QWORD *)(v134 + 16);
        if (v135)
        {
          v136 = (uint64_t *)(v134 + 40);
          do
          {
            v137 = *(v136 - 1);
            v138 = *v136;
            swift_bridgeObjectRetain();
            sub_2312519E4(v206, v137, v138);
            swift_bridgeObjectRelease();
            v136 += 2;
            --v135;
          }
          while (v135);
        }
        swift_bridgeObjectRelease();
        sub_2311BFAC4(v185);
        result = swift_bridgeObjectRelease();
        v43 = v201;
        goto LABEL_61;
      }
      if (v66 != v175)
        break;
      (*(void (**)(uint64_t *, uint64_t))(v40 + 96))(v44, v64);
      v92 = *v44;
      v199 = *(_QWORD *)(*v44 + 16);
      if (v199)
      {
        v93 = 0;
        v94 = *(unsigned __int8 *)(v203 + 80);
        v197 = v92;
        v198 = (char *)(v92 + ((v94 + 32) & ~v94));
        v95 = *(_QWORD *)(v203 + 72);
        v96 = *(void (**)(char *, char *, uint64_t))(v203 + 16);
        do
        {
          v200 = v93;
          v96(v43, &v198[v95 * v93], v10);
          v101 = v208;
          sub_231172048(&qword_255EB80F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47D40], MEMORY[0x24BE47D50]);
          swift_bridgeObjectRetain();
          v102 = sub_231264000();
          v103 = -1 << *(_BYTE *)(v101 + 32);
          v104 = v102 & ~v103;
          if (((*(_QWORD *)(v101 + 56 + ((v104 >> 3) & 0xFFFFFFFFFFFFF8)) >> v104) & 1) != 0)
          {
            v105 = ~v103;
            while (1)
            {
              v106 = v202;
              v107 = v204;
              v96(v202, (char *)(*(_QWORD *)(v101 + 48) + v104 * v95), v204);
              sub_231172048(&qword_255EB8100, (uint64_t (*)(uint64_t))MEMORY[0x24BE47D40], MEMORY[0x24BE47D58]);
              v108 = sub_231264060();
              v99 = *(void (**)(char *, uint64_t))(v203 + 8);
              v99(v106, v107);
              if ((v108 & 1) != 0)
                break;
              v104 = (v104 + 1) & v105;
              v43 = v201;
              if (((*(_QWORD *)(v101 + 56 + ((v104 >> 3) & 0xFFFFFFFFFFFFF8)) >> v104) & 1) == 0)
                goto LABEL_35;
            }
            swift_bridgeObjectRelease();
            v10 = v204;
            v43 = v201;
          }
          else
          {
LABEL_35:
            swift_bridgeObjectRelease();
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v98 = (uint64_t)v202;
            v10 = v204;
            v96(v202, v43, v204);
            v206[0] = v208;
            sub_2312565E8(v98, v104, isUniquelyReferenced_nonNull_native);
            v208 = v206[0];
            swift_bridgeObjectRelease();
            v99 = *(void (**)(char *, uint64_t))(v203 + 8);
          }
          v100 = v200;
          v99(v43, v10);
          v93 = v100 + 1;
        }
        while (v93 != v199);
        result = swift_bridgeObjectRelease();
LABEL_61:
        v64 = v177;
LABEL_62:
        v40 = v179;
LABEL_63:
        v44 = v178;
        goto LABEL_19;
      }
      result = swift_bridgeObjectRelease();
LABEL_19:
      v41 = v184;
      v63 = v186 + 1;
      if (v186 + 1 == v182)
        goto LABEL_77;
    }
    if (v66 == v174)
    {
      (*(void (**)(uint64_t *, uint64_t))(v40 + 96))(v44, v64);
      v109 = (char *)*v44;
      v110 = *(_QWORD *)(*v44 + 16);
      if (v110)
      {
        swift_bridgeObjectRetain();
        v198 = v109;
        v111 = (unint64_t *)(v109 + 40);
        v112 = (_QWORD *)MEMORY[0x24BEE4AF8];
        do
        {
          v113 = *(v111 - 1);
          v114 = *v111;
          swift_bridgeObjectRetain_n();
          v115 = sub_2311DDBBC(v113, v114);
          if (v115)
          {
            v118 = v115;
            v199 = sub_2311DBA50(v115, v116, v117);
            sub_2311884EC(v118);
            v119 = *(void (**)(char *, _QWORD, uint64_t))(v196 + 104);
            v200 = (uint64_t)v112;
            v120 = v193;
            v121 = v194;
            v119(v193, v187, v194);
            v122 = v191;
            v123 = v192;
            v189(v191, v190, v192);
            v124 = (void *)sub_231262230();
            v199 = sub_2312630A0();
            v126 = v125;
            swift_bridgeObjectRelease();

            v188(v122, v123);
            v127 = v120;
            v112 = (_QWORD *)v200;
            (*(void (**)(char *, uint64_t))(v196 + 8))(v127, v121);
            swift_bridgeObjectRelease();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v112 = sub_2311DC450(0, v112[2] + 1, 1, v112);
            v128 = v199;
            v130 = v112[2];
            v129 = v112[3];
            if (v130 >= v129 >> 1)
              v112 = sub_2311DC450((_QWORD *)(v129 > 1), v130 + 1, 1, v112);
            v112[2] = v130 + 1;
            v131 = &v112[2 * v130];
            v131[4] = v128;
            v131[5] = v126;
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          v111 += 2;
          --v110;
        }
        while (v110);
        swift_bridgeObjectRelease();
        v10 = v204;
        v43 = v201;
        v64 = v177;
        v40 = v179;
      }
      else
      {
        v112 = (_QWORD *)MEMORY[0x24BEE4AF8];
      }
      swift_bridgeObjectRelease();
      v143 = v112[2];
      if (!v143)
      {
        result = swift_bridgeObjectRelease();
        goto LABEL_63;
      }
      v144 = v112 + 5;
      do
      {
        v145 = *(v144 - 1);
        v146 = *v144;
        swift_bridgeObjectRetain();
        sub_2312519E4(v206, v145, v146);
        swift_bridgeObjectRelease();
        v144 += 2;
        --v143;
      }
      while (v143);
    }
    else
    {
      if (v66 != v173)
      {
        result = (*(uint64_t (**)(uint64_t *, uint64_t))(v40 + 8))(v44, v64);
        goto LABEL_19;
      }
      swift_bridgeObjectRelease();
      v208 = MEMORY[0x24BEE4B08];
      result = v176;
      v139 = *(_QWORD *)(v176 + 16);
      if (!v139)
        goto LABEL_63;
      swift_bridgeObjectRetain();
      v140 = v165;
      do
      {
        v141 = *(v140 - 1);
        v142 = *v140;
        swift_bridgeObjectRetain();
        sub_2312519E4(v206, v141, v142);
        swift_bridgeObjectRelease();
        v140 += 2;
        --v139;
      }
      while (v139);
    }
    result = swift_bridgeObjectRelease();
    v43 = v201;
    goto LABEL_62;
  }
  v47 = v181;
  sub_231263B08();
  v48 = v197;
  v49 = v180;
  (*(void (**)(char *, uint64_t, uint64_t))(v197 + 16))(v45, v195, v180);
  v50 = sub_231263B50();
  v51 = sub_2312643CC();
  v52 = v51;
  if (os_log_type_enabled(v50, v51))
  {
    v53 = swift_slowAlloc();
    v200 = swift_slowAlloc();
    v205 = v200;
    *(_DWORD *)v53 = 136446466;
    LODWORD(v199) = v52;
    v206[0] = sub_231188518(0);
    sub_23118852C(0, &qword_254152960, (void (*)(uint64_t))sub_231188518);
    v54 = sub_2312640B4();
    v206[0] = sub_2311CBDE4(v54, v55, &v205);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v53 + 12) = 2082;
    v206[0] = sub_231262230();
    sub_231264B88();
    v56 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_2312647B0();
    swift_unknownObjectRelease();
    v57 = sub_2312640B4();
    v206[0] = sub_2311CBDE4(v57, v58, &v205);
    v43 = v201;
    sub_231264750();
    swift_bridgeObjectRelease();
    v42 = (_DWORD *)MEMORY[0x24BE48108];
    (*(void (**)(char *, uint64_t))(v197 + 8))(v45, v49);
    _os_log_impl(&dword_23116F000, v50, (os_log_type_t)v199, "[%{public}s]: for profile: %{public}s, prepended generator generating for previous sharable models", (uint8_t *)v53, 0x16u);
    v59 = v200;
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v59, -1, -1);
    v60 = v53;
    v40 = v179;
    MEMORY[0x2348D85EC](v60, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v48 + 8))(v45, v49);
  }

  (*(void (**)(char *, uint64_t))(v185 + 8))(v47, v186);
  sub_2311735E0(0, &qword_254153230, (uint64_t (*)(uint64_t))MEMORY[0x24BE48110], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v61 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_231265AC0;
  *(_QWORD *)(v41 + v61) = v187;
  (*(void (**)(void))(v40 + 104))();
  v62 = *(_QWORD *)(v41 + 16);
  result = swift_bridgeObjectRetain();
  v182 = v62;
  if (v62)
  {
    v44 = v178;
    goto LABEL_17;
  }
LABEL_77:
  swift_bridgeObjectRelease();
  v147 = swift_bridgeObjectRelease();
  v148 = v208;
  MEMORY[0x24BDAC7A8](v147);
  v149 = v195;
  *(&v164 - 2) = v168;
  *(&v164 - 1) = v149;
  swift_bridgeObjectRetain();
  v150 = sub_2312455C8((void (*)(uint64_t *__return_ptr, char *))sub_231187F90, (uint64_t)(&v164 - 4), v148);
  swift_bridgeObjectRelease();
  v151 = v207;
  v152 = v166;
  if (*(_QWORD *)(v207 + 16) && (v153 = *(_QWORD *)(v150 + 16)) != 0)
  {
    swift_bridgeObjectRetain();
    v154 = (uint64_t *)(v150 + 40);
    do
    {
      v155 = *(v154 - 1);
      v156 = *v154;
      swift_bridgeObjectRetain();
      sub_231228518(v155, v156);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v154 += 2;
      --v153;
    }
    while (v153);
    swift_bridgeObjectRelease_n();
    v151 = v207;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v157 = sub_2311976F8(v148);
  swift_bridgeObjectRelease();
  v158 = sub_2311825C0(v157, v152, v195, v167);
  swift_release();
  swift_bridgeObjectRelease();
  sub_2311974EC(v151);
  swift_bridgeObjectRelease();
  v159 = sub_231188248();
  swift_release();
  sub_2311735E0(0, &qword_254153240, (uint64_t (*)(uint64_t))sub_231187D64, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v160 = swift_allocObject();
  *(_OWORD *)(v160 + 16) = xmmword_231265570;
  *(_QWORD *)(v160 + 32) = v158;
  *(_QWORD *)(v160 + 40) = v159;
  v206[0] = v160;
  sub_231264210();
  sub_231187D64();
  sub_2311735E0(0, &qword_2541530F8, (uint64_t (*)(uint64_t))sub_231187D64, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_231187E54();
  sub_231188424();
  swift_retain();
  swift_retain();
  v161 = v169;
  sub_231263CDC();
  sub_231188484();
  v162 = v171;
  v163 = sub_231263E38();
  swift_release();
  swift_release();
  result = (*(uint64_t (**)(char *, uint64_t))(v170 + 8))(v161, v162);
  *v172 = v163;
  return result;
}

unint64_t sub_2311820F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_2311735E0(0, qword_2541521F0, type metadata accessor for SharedConceptFeedItemData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v26 - v4;
  v29 = type metadata accessor for SharedConceptFeedItemData(0);
  v6 = *(_QWORD *)(v29 - 8);
  v7 = MEMORY[0x24BDAC7A8](v29);
  v28 = (uint64_t)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v27 = (uint64_t)v26 - v9;
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
    return MEMORY[0x24BEE4AF8];
  v26[1] = v1;
  v11 = *(_QWORD *)(sub_2312623EC() - 8);
  v12 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  v13 = *(_QWORD *)(v11 + 72);
  v26[0] = a1;
  v14 = swift_bridgeObjectRetain();
  v15 = MEMORY[0x24BEE4AF8];
  do
  {
    v16 = (void *)MEMORY[0x2348D810C](v14);
    v17 = sub_2312623E0();
    v19 = v18;
    v20 = sub_2312623C8();
    sub_2311A6380(v17, v19, v20, v21, v5);
    objc_autoreleasePoolPop(v16);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v5, 1, v29) == 1)
    {
      v14 = sub_231189628((uint64_t)v5, qword_2541521F0, type metadata accessor for SharedConceptFeedItemData);
    }
    else
    {
      v22 = v27;
      sub_231188F00((uint64_t)v5, v27);
      sub_231188F00(v22, v28);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v15 = sub_2311DC43C(0, *(_QWORD *)(v15 + 16) + 1, 1, v15);
      v24 = *(_QWORD *)(v15 + 16);
      v23 = *(_QWORD *)(v15 + 24);
      if (v24 >= v23 >> 1)
        v15 = sub_2311DC43C(v23 > 1, v24 + 1, 1, v15);
      *(_QWORD *)(v15 + 16) = v24 + 1;
      v14 = sub_231188F00(v28, v15+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v24);
    }
    v12 += v13;
    --v10;
  }
  while (v10);
  swift_bridgeObjectRelease();
  return v15;
}

unint64_t sub_231182360(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  unint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, _QWORD);
  void (*v23)(char *, char *, uint64_t);
  char *v24;
  char *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD v30[2];
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  unint64_t v33;
  char *v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  char v38[32];
  uint64_t v39;

  v2 = v1;
  v4 = sub_23126217C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v35 = (char *)v30 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v34 = (char *)v30 - v11;
  v12 = *(_QWORD *)(a1 + 16);
  if (!v12)
    return MEMORY[0x24BEE4AF8];
  v33 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v13 = a1 + v33;
  v32 = *(_QWORD *)(v5 + 72);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v30[1] = v2;
  v31 = v14;
  v30[0] = a1;
  swift_bridgeObjectRetain();
  v15 = MEMORY[0x24BEE4AF8];
  do
  {
    v36 = v15;
    v39 = v12;
    v16 = v35;
    v31(v35, v13, v4);
    v17 = sub_231262344();
    v19 = v18;
    v20 = v8;
    v21 = v5;
    v22 = (void (*)(char *, _QWORD))sub_23126214C();
    swift_bridgeObjectRetain();
    sub_2312519E4(&v37, v17, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v22(v38, 0);
    v5 = v21;
    v8 = v20;
    v23 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v24 = v34;
    v25 = v16;
    v15 = v36;
    v23(v34, v25, v4);
    v23(v20, v24, v4);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v15 = sub_2311DCA10(0, *(_QWORD *)(v15 + 16) + 1, 1, v15);
    v27 = *(_QWORD *)(v15 + 16);
    v26 = *(_QWORD *)(v15 + 24);
    if (v27 >= v26 >> 1)
      v15 = sub_2311DCA10(v26 > 1, v27 + 1, 1, v15);
    *(_QWORD *)(v15 + 16) = v27 + 1;
    v28 = v32;
    v23((char *)(v15 + v33 + v27 * v32), v20, v4);
    v13 += v28;
    v12 = v39 - 1;
  }
  while (v39 != 1);
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_2311825C0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (**v52)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(_QWORD, _QWORD, _QWORD);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  void (**v79)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t (*v81)(void);
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  void (*v132)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v133;
  void *v134;
  uint64_t v135;
  uint64_t v136;
  void (**v137)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  _OWORD v141[5];
  uint64_t v142;

  v104 = a4;
  v106 = a3;
  v109 = sub_23126226C();
  v108 = *(_QWORD *)(v109 - 8);
  MEMORY[0x24BDAC7A8](v109);
  v105 = v6;
  v107 = (char *)&v100 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231188870();
  v119 = v7;
  v117 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v112 = (char *)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231188A2C();
  v121 = v9;
  v118 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v114 = (char *)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231188B88(0, &qword_254152C48, v11, sub_231188BF8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB9598]);
  v122 = v12;
  v120 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v116 = (char *)&v100 - v13;
  sub_231188914();
  v115 = v14;
  v113 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v111 = (char *)&v100 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231188C14();
  v101 = v16;
  v17 = MEMORY[0x24BDAC7A8](v16);
  v103 = (char *)&v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v127 = (uint64_t)&v100 - v19;
  v110 = sub_231261E40();
  v102 = *(_QWORD *)(v110 - 8);
  MEMORY[0x24BDAC7A8](v110);
  v125 = (char *)&v100 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, qword_2541521F0, type metadata accessor for SharedConceptFeedItemData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v100 - v22;
  v24 = type metadata accessor for SharedConceptFeedItemData(0);
  v137 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 - 8);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v131 = (uint64_t *)((char *)&v100 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = MEMORY[0x24BDAC7A8](v25);
  v130 = (uint64_t)&v100 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v133 = (uint64_t)&v100 - v29;
  sub_231261C78();
  swift_allocObject();
  v124 = sub_231261C6C();
  v30 = sub_2311820F8(a1);
  v134 = 0;
  sub_231261C54();
  swift_allocObject();
  v128 = sub_231261C48();
  v31 = MEMORY[0x24BEE4B08];
  *(_QWORD *)&v141[0] = MEMORY[0x24BEE4B08];
  v32 = *(_QWORD *)(a2 + 16);
  v136 = v24;
  v123 = v30;
  if (v32)
  {
    v33 = *(_QWORD *)(sub_23126217C() - 8);
    v34 = a2 + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80));
    v35 = *(_QWORD *)(v33 + 72);
    v132 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))a2;
    v36 = swift_bridgeObjectRetain();
    v37 = (uint64_t)v23;
    v135 = v35;
    do
    {
      v38 = (void *)MEMORY[0x2348D810C](v36);
      v39 = sub_231262170();
      if (v40 >> 60 != 15)
      {
        v41 = v39;
        v42 = v40;
        sub_231172048(&qword_255EB8110, type metadata accessor for SharedConceptFeedItemData, (uint64_t)&unk_231266E98);
        v43 = v134;
        sub_231261C3C();
        if (v43)
        {

          v137[7](v37, 1, 1, v24);
          sub_23118078C(v41, v42);
          sub_231189628(v37, qword_2541521F0, type metadata accessor for SharedConceptFeedItemData);
          v134 = 0;
        }
        else
        {
          v134 = 0;
          v137[7](v37, 0, 1, v24);
          v44 = v133;
          sub_231188F00(v37, v133);
          v45 = swift_bridgeObjectRetain();
          v46 = sub_23124E300(v45);
          swift_bridgeObjectRelease();
          v47 = v46;
          v24 = v136;
          sub_2311BA95C(v47);
          sub_23118078C(v41, v42);
          sub_231178498(v44, type metadata accessor for SharedConceptFeedItemData);
        }
        v35 = v135;
      }
      objc_autoreleasePoolPop(v38);
      v34 += v35;
      --v32;
    }
    while (v32);
    swift_bridgeObjectRelease();
    v48 = *(_QWORD *)&v141[0];
    v30 = v123;
    v31 = MEMORY[0x24BEE4B08];
  }
  else
  {
    v48 = MEMORY[0x24BEE4B08];
  }
  v140 = v31;
  v135 = *(_QWORD *)(v30 + 16);
  if (v135)
  {
    v133 = v30 + ((*((unsigned __int8 *)v137 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v137 + 80));
    v132 = v137[9];
    v49 = swift_bridgeObjectRetain();
    v50 = 0;
    v129 = v48;
    do
    {
      v51 = v133 + (_QWORD)v132 * v50;
      v52 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x2348D810C](v49);
      v53 = *(_QWORD *)(v51 + *(int *)(v24 + 48));
      sub_231188C7C();
      swift_bridgeObjectRetain();
      v54 = sub_231264354();
      v139 = v54;
      v55 = *(_QWORD *)(v53 + 16);
      if (v55)
      {
        v137 = v52;
        v56 = 32;
        do
        {
          v57 = *(_OWORD *)(v53 + v56 + 16);
          v141[0] = *(_OWORD *)(v53 + v56);
          v141[1] = v57;
          v58 = *(_OWORD *)(v53 + v56 + 32);
          v59 = *(_OWORD *)(v53 + v56 + 48);
          v60 = *(_OWORD *)(v53 + v56 + 64);
          v142 = *(_QWORD *)(v53 + v56 + 80);
          v141[3] = v59;
          v141[4] = v60;
          v141[2] = v58;
          sub_231188CC0((uint64_t)v141);
          sub_231251DD4(&v138, (uint64_t)v141);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v56 += 88;
          --v55;
        }
        while (v55);
        swift_bridgeObjectRelease();
        v61 = v139;
        v24 = v136;
        v48 = v129;
        v52 = v137;
      }
      else
      {
        v61 = v54;
        swift_bridgeObjectRelease();
        v24 = v136;
      }
      if (*(_QWORD *)(v48 + 16) <= *(_QWORD *)(v61 + 16) >> 3)
      {
        v138 = v61;
        sub_2312281C0(v48);
        v62 = v138;
      }
      else
      {
        v62 = sub_2312299A4(v48, v61);
      }
      v63 = *(_QWORD *)(v62 + 16);
      swift_bridgeObjectRelease();
      if (v63)
      {
        v64 = v131;
        sub_231178454(v51, (uint64_t)v131, type metadata accessor for SharedConceptFeedItemData);
        v65 = v130;
        sub_231252A80(v130, v64);
        sub_231178498(v65, type metadata accessor for SharedConceptFeedItemData);
      }
      ++v50;
      objc_autoreleasePoolPop(v52);
    }
    while (v50 != v135);
    swift_bridgeObjectRelease();
    v30 = v123;
    swift_bridgeObjectRelease();
    v66 = v140;
  }
  else
  {
    swift_bridgeObjectRelease();
    v66 = MEMORY[0x24BEE4B08];
  }
  sub_231261E34();
  v67 = v101;
  v136 = v127 + *(int *)(v101 + 48);
  v137 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v127 + *(int *)(v101 + 64));
  sub_231261DBC();
  sub_231261DC8();
  sub_231261DD4();
  v68 = (void (*)(_QWORD, _QWORD, _QWORD))sub_2311975E4(v66);
  swift_bridgeObjectRelease();
  v69 = v124;
  v70 = v106;
  v71 = sub_2311F1EE0(v68, v124, v106, v104);
  swift_release();
  v138 = v71;
  v140 = sub_231183318(v30, v69, v70);
  v72 = (uint64_t)v103;
  v73 = (uint64_t)&v103[*(int *)(v67 + 48)];
  v74 = (uint64_t)&v103[*(int *)(v67 + 64)];
  v75 = v102;
  v76 = *(void (**)(char *, uint64_t, uint64_t))(v102 + 16);
  v77 = v110;
  v76(v103, v127, v110);
  v76((char *)v73, v136, v77);
  v76((char *)v74, (uint64_t)v137, v77);
  v78 = sub_2311836D0(v30, v72, v73, v74, v69, v70);
  swift_bridgeObjectRelease();
  v79 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v75 + 8);
  v137 = v79;
  ((void (*)(uint64_t, uint64_t))v79)(v74, v77);
  ((void (*)(uint64_t, uint64_t))v79)(v73, v77);
  v80 = v77;
  ((void (*)(uint64_t, uint64_t))v79)(v72, v77);
  v139 = v78;
  v81 = MEMORY[0x24BDB9AE0];
  sub_231188FDC(0, &qword_254152EF8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_231189178((unint64_t *)&qword_254152EF0, &qword_254152EF8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v81, MEMORY[0x24BDB9AF8]);
  v82 = v111;
  sub_231263BB0();
  v83 = v108;
  v84 = v107;
  v85 = v109;
  (*(void (**)(char *, uint64_t, uint64_t))(v108 + 16))(v107, v70, v109);
  v86 = (*(unsigned __int8 *)(v83 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
  v87 = (v105 + v86 + 7) & 0xFFFFFFFFFFFFFFF8;
  v88 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v83 + 32))(v88 + v86, v84, v85);
  v89 = v126;
  *(_QWORD *)(v88 + v87) = v126;
  *(_QWORD *)(v88 + ((v87 + 15) & 0xFFFFFFFFFFFFFFF8)) = v89;
  v90 = swift_allocObject();
  *(_QWORD *)(v90 + 16) = sub_231188DA4;
  *(_QWORD *)(v90 + 24) = v88;
  sub_23118860C(0, (unint64_t *)&qword_254155638, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE1250]);
  sub_231172048(&qword_254152C10, (uint64_t (*)(uint64_t))sub_231188914, MEMORY[0x24BDB9470]);
  v91 = v112;
  v92 = v115;
  sub_231263EBC();
  swift_release();
  *(_QWORD *)(swift_allocObject() + 16) = v89;
  sub_231188B08(0, &qword_254152F28, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v81);
  sub_231172048(&qword_254152D68, (uint64_t (*)(uint64_t))sub_231188870, MEMORY[0x24BDB98C8]);
  sub_231188F44(&qword_254152F20, &qword_254152F28, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v81, MEMORY[0x24BDB9AF8]);
  v93 = v114;
  v94 = v119;
  sub_231263E8C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v91, v94);
  v138 = MEMORY[0x24BEE4AF8];
  sub_231188BF8();
  v95 = v116;
  v96 = v121;
  sub_231263E5C();
  (*(void (**)(char *, uint64_t))(v118 + 8))(v93, v96);
  sub_231188E98();
  v97 = v122;
  v98 = sub_231263E38();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v120 + 8))(v95, v97);
  (*(void (**)(char *, uint64_t))(v113 + 8))(v82, v92);
  sub_231178498(v127, (uint64_t (*)(_QWORD))sub_231188C14);
  ((void (*)(char *, uint64_t))v137)(v125, v80);
  return v98;
}

uint64_t sub_231183318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void);
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v35 = a3;
  v34 = a2;
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0];
  sub_2311735E0(0, &qword_254153040, (uint64_t (*)(uint64_t))sub_2311889BC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v31 - v8;
  sub_2311735E0(0, &qword_254153038, (uint64_t (*)(uint64_t))sub_231188FC0, v4);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v31 - v13;
  sub_231188FDC(0, &qword_254153250, MEMORY[0x24BDBA1B0]);
  v16 = v15;
  v37 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v31 - v17;
  sub_23118904C();
  v20 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v31 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 16) < 0xBuLL)
  {
    v38 = MEMORY[0x24BEE4AF8];
    sub_2311889BC(0);
    sub_231263D84();
    sub_2311889D8();
    sub_231263D54();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_231189178((unint64_t *)&qword_254153248, &qword_254153250, MEMORY[0x24BDBA1B0], MEMORY[0x24BDBA1D0]);
    v29 = sub_231263E38();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v18, v16);
  }
  else
  {
    v38 = a1;
    v32 = v20;
    v33 = v21;
    sub_231188FC0(0);
    swift_bridgeObjectRetain();
    v24 = sub_231263D84();
    MEMORY[0x24BDAC7A8](v24);
    v25 = v36;
    v26 = v34;
    *(&v31 - 4) = v36;
    *(&v31 - 3) = v26;
    *(&v31 - 2) = v35;
    sub_2311889BC(0);
    sub_231263D6C();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    *(_QWORD *)(swift_allocObject() + 16) = v25;
    v27 = MEMORY[0x24BDB9AE0];
    sub_231188FDC(0, &qword_254152EF8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_231189178((unint64_t *)&qword_254153248, &qword_254153250, MEMORY[0x24BDBA1B0], MEMORY[0x24BDBA1D0]);
    sub_231189178((unint64_t *)&qword_254152EF0, &qword_254152EF8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v27, MEMORY[0x24BDB9AF8]);
    sub_231263E8C();
    swift_release();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v18, v16);
    sub_231172048(&qword_254152D48, (uint64_t (*)(uint64_t))sub_23118904C, MEMORY[0x24BDB9740]);
    v28 = v32;
    v29 = sub_231263E38();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v23, v28);
  }
  return v29;
}

uint64_t sub_2311836D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t (*v33)(void);
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v46 = a5;
  v47 = a6;
  v40 = a2;
  v41 = a3;
  sub_2311735E0(0, &qword_254153038, (uint64_t (*)(uint64_t))sub_231188FC0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v9 = *(_QWORD *)(v8 - 8);
  v43 = v8;
  v44 = v9;
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v39 - v10;
  sub_231188FDC(0, &qword_254153250, MEMORY[0x24BDBA1B0]);
  v49 = v12;
  v51 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v42 = (char *)&v39 - v13;
  sub_23118904C();
  v50 = v14;
  v52 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v48 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231188C14();
  v17 = v16;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&v39 - v22;
  v24 = (char *)&v39 + *(int *)(v21 + 48) - v22;
  v25 = (char *)&v39 + *(int *)(v21 + 64) - v22;
  v26 = sub_231261E40();
  v27 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
  v27(v23, v40, v26);
  v27(v24, v41, v26);
  v27(v25, a4, v26);
  v57 = a1;
  sub_231188FC0(0);
  swift_bridgeObjectRetain();
  sub_231263D84();
  v28 = &v20[*(int *)(v17 + 48)];
  v29 = &v20[*(int *)(v17 + 64)];
  v27(v20, (uint64_t)v23, v26);
  v27(v28, (uint64_t)v24, v26);
  v27(v29, (uint64_t)v25, v26);
  v30 = v45;
  v53 = v45;
  v54 = v20;
  v55 = v46;
  v56 = v47;
  sub_2311889BC(0);
  v32 = v42;
  v31 = v43;
  sub_231263D6C();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v11, v31);
  sub_231178498((uint64_t)v20, (uint64_t (*)(_QWORD))sub_231188C14);
  *(_QWORD *)(swift_allocObject() + 16) = v30;
  v33 = MEMORY[0x24BDB9AE0];
  sub_231188FDC(0, &qword_254152EF8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_231189178((unint64_t *)&qword_254153248, &qword_254153250, MEMORY[0x24BDBA1B0], MEMORY[0x24BDBA1D0]);
  sub_231189178((unint64_t *)&qword_254152EF0, &qword_254152EF8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v33, MEMORY[0x24BDB9AF8]);
  v35 = v48;
  v34 = v49;
  sub_231263E8C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v32, v34);
  sub_231172048(&qword_254152D48, (uint64_t (*)(uint64_t))sub_23118904C, MEMORY[0x24BDB9740]);
  v36 = v50;
  v37 = sub_231263E38();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v35, v36);
  sub_231178498((uint64_t)v23, (uint64_t (*)(_QWORD))sub_231188C14);
  return v37;
}

double sub_231183A90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  uint64_t v37;
  void *v38;
  void *v39;
  char v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  void *v52;
  void *v53;
  id v54;
  id v55;
  char *v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  id v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  double result;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80[2];

  v70 = a3;
  v78 = a1;
  v6 = sub_23126226C();
  v72 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v73 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_231263B5C();
  v74 = *(_QWORD *)(v8 - 8);
  v75 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2312626E0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23126292C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = a2;
  v19 = *(_QWORD *)(a2 + 16);
  v76 = v10;
  v77 = a4;
  if (v19)
  {
    v20 = (char *)MEMORY[0x24BEE4AF8];
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v18, *MEMORY[0x24BE490B8], v15);
    (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BE48DE0], v11);
    v21 = (void *)sub_231262230();
    v22 = sub_231263094();
    v68 = v23;
    v69 = v22;

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    v20 = (char *)sub_2311DC450(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v25 = *((_QWORD *)v20 + 2);
    v24 = *((_QWORD *)v20 + 3);
    if (v25 >= v24 >> 1)
      v20 = (char *)sub_2311DC450((_QWORD *)(v24 > 1), v25 + 1, 1, v20);
    *((_QWORD *)v20 + 2) = v25 + 1;
    v26 = &v20[16 * v25];
    v27 = v68;
    *((_QWORD *)v26 + 4) = v69;
    *((_QWORD *)v26 + 5) = v27;
    v10 = v76;
  }
  if (*(_QWORD *)(v78 + 16))
  {
    v28 = v73;
    v73 = v20;
    if (!v19)
      goto LABEL_15;
  }
  else
  {
    v69 = v6;
    v29 = v20;
    (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v18, *MEMORY[0x24BE490B8], v15);
    (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BE48DE0], v11);
    v30 = (void *)sub_231262230();
    v31 = sub_231263088();
    v68 = v32;

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      v33 = v29;
    else
      v33 = (char *)sub_2311DC450(0, *((_QWORD *)v29 + 2) + 1, 1, v29);
    v35 = *((_QWORD *)v33 + 2);
    v34 = *((_QWORD *)v33 + 3);
    v10 = v76;
    v6 = v69;
    v28 = v73;
    if (v35 >= v34 >> 1)
      v33 = (char *)sub_2311DC450((_QWORD *)(v34 > 1), v35 + 1, 1, v33);
    *((_QWORD *)v33 + 2) = v35 + 1;
    v36 = &v33[16 * v35];
    v37 = v68;
    *((_QWORD *)v36 + 4) = v31;
    *((_QWORD *)v36 + 5) = v37;
    v73 = v33;
    if (!v19)
      goto LABEL_15;
  }
  v38 = (void *)sub_231262230();
  v39 = (void *)sub_231262014();
  v40 = sub_231262008();

  if ((v40 & 1) != 0)
  {
LABEL_15:
    v41 = swift_bridgeObjectRetain();
    goto LABEL_17;
  }
  v41 = sub_231182360(v70);
LABEL_17:
  v79 = v41;
  v42 = v72;
  v43 = swift_bridgeObjectRetain();
  sub_231210B14(v43);
  v44 = swift_bridgeObjectRetain();
  sub_231210B14(v44);
  v45 = v79;
  sub_231263B08();
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v28, v77, v6);
  swift_bridgeObjectRetain_n();
  v46 = sub_231263B50();
  v47 = sub_2312643CC();
  v48 = v47;
  if (os_log_type_enabled(v46, v47))
  {
    v49 = swift_slowAlloc();
    v78 = swift_slowAlloc();
    v80[0] = v78;
    *(_DWORD *)v49 = 136446722;
    LODWORD(v77) = v48;
    v79 = sub_231188518(0);
    sub_23118852C(0, &qword_254152960, (void (*)(uint64_t))sub_231188518);
    v50 = sub_2312640B4();
    v79 = sub_2311CBDE4(v50, v51, v80);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v49 + 12) = 2082;
    v72 = v49 + 14;
    v52 = (void *)sub_231262230();
    v53 = (void *)sub_231261FF0();

    v79 = (uint64_t)v53;
    sub_2311735E0(0, (unint64_t *)&qword_254153178, (uint64_t (*)(uint64_t))sub_231188F84, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v54 = v53;
    sub_231264B88();
    v55 = (id)HKSensitiveLogItem();
    v56 = v28;
    swift_unknownObjectRelease();
    sub_2312647B0();
    swift_unknownObjectRelease();
    v57 = sub_2312640B4();
    v59 = v58;

    v79 = sub_2311CBDE4(v57, v59, v80);
    sub_231264750();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v56, v6);
    *(_WORD *)(v49 + 22) = 2082;
    v79 = v45;
    sub_2311889BC(0);
    swift_bridgeObjectRetain_n();
    sub_231264B88();
    v60 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_2312647B0();
    swift_unknownObjectRelease();
    v61 = sub_2312640B4();
    v63 = v62;
    swift_bridgeObjectRelease();
    v79 = sub_2311CBDE4(v61, v63, v80);
    sub_231264750();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23116F000, v46, (os_log_type_t)v77, "[%{public}s]: for profile: %{public}s, generated new feed items: %{public}s", (uint8_t *)v49, 0x20u);
    v64 = v78;
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v64, -1, -1);
    MEMORY[0x2348D85EC](v49, -1, -1);

    (*(void (**)(char *, uint64_t))(v74 + 8))(v76, v75);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v28, v6);

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v10, v75);
  }
  sub_23118860C(0, &qword_254153220, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE3598]);
  v65 = swift_allocObject();
  *(_QWORD *)&result = 2;
  *(_OWORD *)(v65 + 16) = xmmword_231265570;
  *(_QWORD *)(v65 + 32) = v45;
  *(_QWORD *)(v65 + 40) = 0;
  *(_QWORD *)(v65 + 48) = 0;
  *(_QWORD *)(v65 + 56) = 0;
  *(_BYTE *)(v65 + 64) = 0;
  *(_QWORD *)(v65 + 72) = v73;
  *(_QWORD *)(v65 + 80) = 0;
  *(_QWORD *)(v65 + 88) = 0;
  *(_QWORD *)(v65 + 96) = 0;
  *(_BYTE *)(v65 + 104) = 32;
  return result;
}

uint64_t sub_2311841E0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_2311885A8();
  v5 = v4;
  v44 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231188B08(0, &qword_255EB8118, MEMORY[0x24BDBA1B0]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v36 - v11;
  v13 = sub_231263B5C();
  v42 = *(_QWORD *)(v13 - 8);
  v43 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a1;
  sub_231263B08();
  v17 = v16;
  v18 = v16;
  v19 = sub_231263B50();
  v20 = sub_2312643D8();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    v38 = v10;
    v22 = v21;
    v37 = swift_slowAlloc();
    v46 = v37;
    *(_DWORD *)v22 = 136446466;
    v39 = v5;
    v45 = sub_231188518(0);
    sub_23118852C(0, &qword_254152960, (void (*)(uint64_t))sub_231188518);
    v40 = v9;
    v23 = sub_2312640B4();
    v41 = a2;
    v45 = sub_2311CBDE4(v23, v24, &v46);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2082;
    v36 = v22 + 14;
    v45 = (uint64_t)v16;
    v25 = v16;
    v26 = v16;
    sub_2311889D8();
    sub_231264B88();
    v27 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_2312647B0();
    swift_unknownObjectRelease();
    v28 = sub_2312640B4();
    v30 = v29;

    v31 = v28;
    v5 = v39;
    v45 = sub_2311CBDE4(v31, v30, &v46);
    sub_231264750();
    v9 = v40;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23116F000, v19, v20, "[%{public}s] Unable to compute desired feed item difference based on sharable model change for commit: %{public}s", (uint8_t *)v22, 0x16u);
    v32 = v37;
    a2 = v41;
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v32, -1, -1);
    v33 = v22;
    v10 = v38;
    MEMORY[0x2348D85EC](v33, -1, -1);
  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v42 + 8))(v15, v43);
  v45 = MEMORY[0x24BEE4AF8];
  sub_23118860C(0, (unint64_t *)&qword_254155638, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE1250]);
  sub_231263D84();
  sub_2311889D8();
  sub_231263D54();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v7, v5);
  sub_231188F44(&qword_255EB8120, &qword_255EB8118, MEMORY[0x24BDBA1B0], MEMORY[0x24BDBA1D0]);
  v34 = sub_231263E38();
  result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  *a2 = v34;
  return result;
}

uint64_t sub_2311845DC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t result;
  unint64_t v46;
  unint64_t v47;
  void (*v48)(_QWORD, _QWORD, _QWORD);
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t, uint64_t);
  char v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(_QWORD, _QWORD, _QWORD);
  unint64_t v59;
  unint64_t v60;
  os_log_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  os_log_t v66;
  char *v67;
  void (*v68)(char *, char *, uint64_t);
  char *v69;
  uint64_t v70;
  uint64_t v71;
  os_log_t v72;
  char *v73;
  void (*v74)(uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  void (*v76)(char *, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t, uint64_t);
  char *v83;
  char *v84;
  NSObject *v85;
  os_log_type_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char *v91;
  void *v92;
  void *v93;
  id v94;
  id v95;
  char *v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  char *v100;
  void (*v101)(char *, char *, uint64_t);
  id v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  void (*v106)(char *, uint64_t);
  uint64_t v107;
  os_log_t v108;
  void (*v109)(_QWORD, _QWORD, _QWORD);
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  void (*v135)(uint64_t, uint64_t, uint64_t);
  char *v136;
  char *v137;
  uint64_t v138;
  os_log_t v139;
  void (*isa)(_QWORD, _QWORD, _QWORD);
  uint64_t v141;
  void (*v142)(char *, uint64_t, uint64_t);
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  void (*v147)(_QWORD, _QWORD, _QWORD);

  v129 = a4;
  v126 = a3;
  v127 = a2;
  v125 = a5;
  v6 = sub_23126226C();
  v120 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v119 = (char *)&v113 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = sub_231263B5C();
  v116 = *(_QWORD *)(v117 - 8);
  MEMORY[0x24BDAC7A8](v117);
  v9 = (char *)&v113 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2311735E0(0, &qword_2541554F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v11);
  v128 = (uint64_t)&v113 - v12;
  v124 = sub_23126217C();
  v123 = *(_QWORD *)(v124 - 8);
  v13 = MEMORY[0x24BDAC7A8](v124);
  v114 = (char *)&v113 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v115 = (char *)&v113 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v113 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v122 = (char *)&v113 - v20;
  v21 = sub_231261E40();
  v139 = *(os_log_t *)(v21 - 8);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v137 = (char *)&v113 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v136 = (char *)&v113 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v132 = (char *)&v113 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v133 = (char *)&v113 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v130 = (char *)&v113 - v30;
  sub_2311735E0(0, &qword_254152BE8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], v10);
  v32 = MEMORY[0x24BDAC7A8](v31);
  v135 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)&v113 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v32);
  v35 = (char *)&v113 - v34;
  v145 = type metadata accessor for SharedConceptFeedItemData(0);
  v142 = *(void (**)(char *, uint64_t, uint64_t))(v145 - 8);
  v36 = MEMORY[0x24BDAC7A8](v145);
  v138 = (uint64_t)&v113 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = MEMORY[0x24BDAC7A8](v36);
  v134 = (uint64_t)&v113 - v39;
  MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v113 - v40;
  v42 = *a1;
  v43 = (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE4AF8];
  v146 = MEMORY[0x24BEE4AF8];
  v44 = *(_QWORD *)(v42 + 16);
  result = swift_bridgeObjectRetain();
  v141 = v21;
  v144 = result;
  v118 = v9;
  v143 = v19;
  v121 = v6;
  if (v44)
  {
    v46 = 0;
    while (1)
    {
      if (v46 >= *(_QWORD *)(result + 16))
      {
        __break(1u);
        return result;
      }
      v47 = (*((unsigned __int8 *)v142 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v142 + 80);
      v48 = (void (*)(_QWORD, _QWORD, _QWORD))*((_QWORD *)v142 + 9);
      sub_231178454(result + v47 + (_QWORD)v48 * v46, (uint64_t)v41, type metadata accessor for SharedConceptFeedItemData);
      sub_2311896A0((uint64_t)&v41[*(int *)(v145 + 52)], (uint64_t)v35);
      v49 = sub_231262464();
      v50 = *(_QWORD *)(v49 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v35, 1, v49) == 1)
      {
        sub_231189628((uint64_t)v35, &qword_254152BE8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70]);
      }
      else
      {
        isa = v48;
        v51 = v35;
        v52 = v41;
        v53 = v44;
        v54 = v135;
        sub_231262458();
        (*(void (**)(void (*)(uint64_t, uint64_t, uint64_t), _QWORD, uint64_t, uint64_t))(v50 + 56))(v54, 0, 1, v49);
        v55 = sub_23126244C();
        v56 = (uint64_t)v54;
        v44 = v53;
        v41 = v52;
        v35 = v51;
        sub_231189628(v56, &qword_254152BE8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70]);
        (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v49);
        if ((v55 & 1) != 0)
        {
          sub_231188F00((uint64_t)v41, v134);
          v57 = v146;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_231199264(0, *(_QWORD *)(v57 + 16) + 1, 1);
            v57 = v146;
          }
          v58 = isa;
          v60 = *(_QWORD *)(v57 + 16);
          v59 = *(_QWORD *)(v57 + 24);
          if (v60 >= v59 >> 1)
          {
            sub_231199264(v59 > 1, v60 + 1, 1);
            v57 = v146;
          }
          *(_QWORD *)(v57 + 16) = v60 + 1;
          sub_231188F00(v134, v57 + v47 + v60 * (_QWORD)v58);
          v21 = v141;
          v19 = v143;
          goto LABEL_5;
        }
      }
      sub_231178498((uint64_t)v41, type metadata accessor for SharedConceptFeedItemData);
      v21 = v141;
      v19 = v143;
LABEL_5:
      ++v46;
      result = v144;
      if (v44 == v46)
      {
        v43 = (void (*)(uint64_t, uint64_t, uint64_t))v146;
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  v61 = v139;
  if (*((_QWORD *)v43 + 2))
  {
    v135 = v43;
    v62 = v133;
    sub_231261DA4();
    isa = (void (*)(_QWORD, _QWORD, _QWORD))v61[2].isa;
    isa(v132, v62, v21);
    if (v44)
    {
      v63 = v144 + ((*((unsigned __int8 *)v142 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v142 + 80));
      v142 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v142 + 9);
      v64 = v138;
      swift_bridgeObjectRetain();
      v65 = v132;
      do
      {
        sub_231178454(v63, v64, type metadata accessor for SharedConceptFeedItemData);
        v69 = v137;
        sub_231261E04();
        if ((sub_231261DEC() & 1) != 0)
        {
          v66 = v139;
          v67 = v136;
          ((void (*)(char *, char *, uint64_t))v139[4].isa)(v136, v69, v21);
        }
        else
        {
          v66 = v139;
          ((void (*)(char *, uint64_t))v139[1].isa)(v69, v21);
          v67 = v136;
          isa(v136, v65, v21);
        }
        v64 = v138;
        sub_231178498(v138, type metadata accessor for SharedConceptFeedItemData);
        ((void (*)(char *, uint64_t))v66[1].isa)(v65, v21);
        v68 = (void (*)(char *, char *, uint64_t))v66[4].isa;
        v68(v65, v67, v21);
        v63 += (uint64_t)v142;
        --v44;
      }
      while (v44);
      swift_bridgeObjectRelease();
      v70 = v131;
      v19 = v143;
      v71 = v126;
      v72 = v139;
      v73 = v65;
    }
    else
    {
      v72 = v61;
      v68 = (void (*)(char *, char *, uint64_t))v61[4].isa;
      v70 = v131;
      v73 = v132;
      v71 = v126;
    }
    v74 = v135;
    v75 = (uint64_t)v130;
    v68(v130, v73, v21);
    v76 = (void (*)(char *, uint64_t))v72[1].isa;
    v76(v133, v21);
    v77 = v128;
    sub_2311852C4(v74, v75, v71, v129, v128);
    if (v70)
    {
      v76((char *)v75, v21);
      return swift_release();
    }
    else
    {
      swift_release();
      v78 = v123;
      v79 = v77;
      v80 = v77;
      v81 = v124;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v123 + 48))(v79, 1, v124) == 1)
      {
        sub_231189628(v80, &qword_2541554F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0]);
        result = ((uint64_t (*)(char *, uint64_t))v76)(v130, v21);
        *v125 = MEMORY[0x24BEE4AF8];
      }
      else
      {
        v82 = *(void (**)(char *, uint64_t, uint64_t))(v78 + 32);
        v83 = v122;
        v82(v122, v80, v81);
        v84 = v118;
        sub_231263B08();
        (*(void (**)(char *, uint64_t, uint64_t))(v120 + 16))(v119, v129, v121);
        v145 = *(_QWORD *)(v78 + 16);
        ((void (*)(char *, char *, uint64_t))v145)(v19, v83, v81);
        v85 = sub_231263B50();
        v86 = sub_2312643CC();
        LODWORD(v144) = v86;
        if (os_log_type_enabled(v85, v86))
        {
          v87 = swift_slowAlloc();
          v131 = 0;
          v88 = v87;
          isa = (void (*)(_QWORD, _QWORD, _QWORD))swift_slowAlloc();
          v147 = isa;
          *(_DWORD *)v88 = 136446722;
          v139 = v85;
          v146 = sub_231188518(0);
          sub_23118852C(0, &qword_254152960, (void (*)(uint64_t))sub_231188518);
          v89 = sub_2312640B4();
          v142 = v82;
          v146 = sub_2311CBDE4(v89, v90, (uint64_t *)&v147);
          sub_231264750();
          swift_bridgeObjectRelease();
          *(_WORD *)(v88 + 12) = 2082;
          v138 = v88 + 14;
          v91 = v119;
          v92 = (void *)sub_231262230();
          v93 = (void *)sub_231261FF0();

          v146 = (uint64_t)v93;
          sub_2311735E0(0, (unint64_t *)&qword_254153178, (uint64_t (*)(uint64_t))sub_231188F84, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
          v94 = v93;
          sub_231264B88();
          v95 = (id)HKSensitiveLogItem();
          v96 = v19;
          swift_unknownObjectRelease();
          sub_2312647B0();
          swift_unknownObjectRelease();
          v137 = (char *)(MEMORY[0x24BEE4AD8] + 8);
          v97 = sub_2312640B4();
          v99 = v98;

          v146 = sub_2311CBDE4(v97, v99, (uint64_t *)&v147);
          sub_231264750();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v120 + 8))(v91, v121);
          *(_WORD *)(v88 + 22) = 2082;
          v100 = v115;
          v101 = (void (*)(char *, char *, uint64_t))v145;
          ((void (*)(char *, char *, uint64_t))v145)(v115, v96, v124);
          v101(v114, v100, v124);
          sub_231264B88();
          v102 = (id)HKSensitiveLogItem();
          swift_unknownObjectRelease();
          sub_2312647B0();
          swift_unknownObjectRelease();
          v103 = sub_2312640B4();
          v105 = v104;
          v106 = *(void (**)(char *, uint64_t))(v123 + 8);
          v106(v100, v124);
          v107 = v103;
          v81 = v124;
          v146 = sub_2311CBDE4(v107, v105, (uint64_t *)&v147);
          v82 = v142;
          sub_231264750();
          swift_bridgeObjectRelease();
          v106(v96, v81);
          v21 = v141;
          v108 = v139;
          _os_log_impl(&dword_23116F000, v139, (os_log_type_t)v144, "[%{public}s]: for profile: %{public}s, generated combo feed item: %{public}s", (uint8_t *)v88, 0x20u);
          v109 = isa;
          swift_arrayDestroy();
          MEMORY[0x2348D85EC](v109, -1, -1);
          MEMORY[0x2348D85EC](v88, -1, -1);

          (*(void (**)(char *, uint64_t))(v116 + 8))(v118, v117);
          v110 = v123;
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v120 + 8))(v119, v121);
          v110 = v123;
          (*(void (**)(char *, uint64_t))(v123 + 8))(v19, v81);

          (*(void (**)(char *, uint64_t))(v116 + 8))(v84, v117);
        }
        sub_2311735E0(0, &qword_254155720, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
        v111 = (*(unsigned __int8 *)(v110 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80);
        v112 = swift_allocObject();
        *(_OWORD *)(v112 + 16) = xmmword_231265AC0;
        v82((char *)(v112 + v111), (uint64_t)v122, v81);
        result = ((uint64_t (*)(char *, uint64_t))v76)(v130, v21);
        *v125 = v112;
      }
    }
  }
  else
  {
    result = swift_release();
    *v125 = MEMORY[0x24BEE4AF8];
  }
  return result;
}

void sub_2311852C4(void (*a1)(uint64_t, uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  void *v10;

  v10 = (void *)MEMORY[0x2348D810C]();
  sub_231185748(a1, a2, a4, a3, a5);
  objc_autoreleasePoolPop(v10);
}

uint64_t sub_231185348@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_2311735E0(0, &qword_254153040, (uint64_t (*)(uint64_t))sub_2311889BC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v5 = v4;
  v44 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v36 - v6;
  sub_231188FDC(0, &qword_254153250, MEMORY[0x24BDBA1B0]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v36 - v11;
  v13 = sub_231263B5C();
  v42 = *(_QWORD *)(v13 - 8);
  v43 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a1;
  sub_231263B08();
  v17 = v16;
  v18 = v16;
  v19 = sub_231263B50();
  v20 = sub_2312643D8();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    v38 = v10;
    v22 = v21;
    v37 = swift_slowAlloc();
    v46 = v37;
    *(_DWORD *)v22 = 136446466;
    v39 = v5;
    v45 = sub_231188518(0);
    sub_23118852C(0, &qword_254152960, (void (*)(uint64_t))sub_231188518);
    v40 = v9;
    v23 = sub_2312640B4();
    v41 = a2;
    v45 = sub_2311CBDE4(v23, v24, &v46);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2082;
    v36 = v22 + 14;
    v45 = (uint64_t)v16;
    v25 = v16;
    v26 = v16;
    sub_2311889D8();
    sub_231264B88();
    v27 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_2312647B0();
    swift_unknownObjectRelease();
    v28 = sub_2312640B4();
    v30 = v29;

    v31 = v28;
    v5 = v39;
    v45 = sub_2311CBDE4(v31, v30, &v46);
    sub_231264750();
    v9 = v40;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23116F000, v19, v20, "[%{public}s] Unable to generate combo tile: %{public}s", (uint8_t *)v22, 0x16u);
    v32 = v37;
    a2 = v41;
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v32, -1, -1);
    v33 = v22;
    v10 = v38;
    MEMORY[0x2348D85EC](v33, -1, -1);
  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v42 + 8))(v15, v43);
  v45 = MEMORY[0x24BEE4AF8];
  sub_2311889BC(0);
  sub_231263D84();
  sub_2311889D8();
  sub_231263D54();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v7, v5);
  sub_231189178((unint64_t *)&qword_254153248, &qword_254153250, MEMORY[0x24BDBA1B0], MEMORY[0x24BDBA1D0]);
  v34 = sub_231263E38();
  result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  *a2 = v34;
  return result;
}

id sub_231185748@<X0>(void (*a1)(uint64_t, uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  unsigned int v36;
  void (*v37)(_QWORD);
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  id result;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  char *v92;
  char *v93;
  uint64_t v94;
  void (*v95)(char *, _QWORD, uint64_t);
  unsigned int v96;
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void (*v112)(uint64_t, uint64_t, uint64_t);
  uint64_t v113;
  uint64_t v114;
  int64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;

  v110 = a2;
  v106 = a4;
  v109 = a3;
  v112 = a1;
  v100 = a5;
  v87 = sub_231262128();
  v86 = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87);
  v85 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, &qword_255EB8138, (uint64_t (*)(uint64_t))MEMORY[0x24BE47DF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v93 = (char *)&v80 - v7;
  v108 = sub_231261E40();
  v105 = *(_QWORD *)(v108 - 8);
  MEMORY[0x24BDAC7A8](v108);
  v92 = (char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_231261CCC();
  MEMORY[0x24BDAC7A8](v9);
  v91 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = sub_231262428();
  v11 = *(_QWORD *)(v94 - 8);
  MEMORY[0x24BDAC7A8](v94);
  v13 = (char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_231261FA8();
  v88 = *(_QWORD *)(v89 - 8);
  MEMORY[0x24BDAC7A8](v89);
  v90 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = type metadata accessor for SharedConceptFeedItemData(0);
  v15 = *(_QWORD *)(v117 - 8);
  v16 = MEMORY[0x24BDAC7A8](v117);
  v114 = (uint64_t)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v80 - v18;
  v20 = sub_23126217C();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v99 = (char *)&v80 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_2312626E0();
  v103 = *(_QWORD *)(v23 - 8);
  v104 = v23;
  MEMORY[0x24BDAC7A8](v23);
  v102 = (char *)&v80 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_23126292C();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v101 = (char *)&v80 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&v80 - v29;
  v31 = type metadata accessor for SharedConceptComboFeedItemData(0);
  v32 = MEMORY[0x24BDAC7A8](v31);
  v107 = (uint64_t)&v80 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = *(_QWORD *)(v33 + 16);
  if (!v35)
    return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v100, 1, 1, v20);
  v98 = v32;
  v82 = v21;
  v113 = v20;
  v83 = v13;
  v84 = v11;
  v36 = *MEMORY[0x24BE490B8];
  v37 = *(void (**)(_QWORD))(v26 + 104);
  v38 = v33;
  v97 = v30;
  v39 = v35;
  v96 = v36;
  v95 = (void (*)(char *, _QWORD, uint64_t))v37;
  v37(v30);
  v40 = v38 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v118 = *(_QWORD *)(v15 + 72);
  swift_bridgeObjectRetain();
  v41 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v81 = v40;
  v115 = v39;
  v116 = v25;
  v42 = v26;
  do
  {
    sub_231178454(v40, (uint64_t)v19, type metadata accessor for SharedConceptFeedItemData);
    v43 = &v19[*(int *)(v117 + 28)];
    v44 = *(_QWORD *)v43;
    v45 = *((_QWORD *)v43 + 1);
    swift_bridgeObjectRetain();
    sub_231178498((uint64_t)v19, type metadata accessor for SharedConceptFeedItemData);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v41 = sub_2311DC450(0, v41[2] + 1, 1, v41);
    v47 = v41[2];
    v46 = v41[3];
    if (v47 >= v46 >> 1)
      v41 = sub_2311DC450((_QWORD *)(v46 > 1), v47 + 1, 1, v41);
    v41[2] = v47 + 1;
    v48 = &v41[2 * v47];
    v48[4] = v44;
    v48[5] = v45;
    v40 += v118;
    --v39;
    v49 = v116;
  }
  while (v39);
  v50 = v42;
  swift_bridgeObjectRelease();
  v51 = v98;
  v52 = v107;
  v53 = v107 + *(int *)(v98 + 24);
  v112 = *(void (**)(uint64_t, uint64_t, uint64_t))(v105 + 16);
  v112(v53, v110, v108);
  (*(void (**)(uint64_t, char *, uint64_t))(v50 + 32))(v52, v97, v49);
  *(_QWORD *)(v52 + *(int *)(v51 + 20)) = v41;
  v54 = v101;
  v95(v101, v96, v49);
  v56 = v102;
  v55 = v103;
  v57 = v104;
  (*(void (**)(char *, _QWORD, uint64_t))(v103 + 104))(v102, *MEMORY[0x24BE48DE0], v104);
  v58 = v49;
  v59 = (void *)sub_231262230();
  v105 = sub_231263094();
  v117 = v60;

  (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v57);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v54, v58);
  sub_231172048(&qword_255EB8150, type metadata accessor for SharedConceptComboFeedItemData, (uint64_t)&unk_231267098);
  v61 = v111;
  sub_231261C60();
  if (v61)
  {
    sub_231178498(v52, type metadata accessor for SharedConceptComboFeedItemData);
    return (id)swift_bridgeObjectRelease();
  }
  else
  {
    v111 = 0;
    type metadata accessor for SharedConceptComboTileViewController();
    (*(void (**)(char *, _QWORD, uint64_t))(v88 + 104))(v90, *MEMORY[0x24BE47410], v89);
    sub_231262230();
    sub_231262038();
    v112((uint64_t)v92, v110, v108);
    sub_231261CC0();
    v63 = v83;
    sub_231262410();
    v64 = v84;
    v65 = v93;
    v66 = v94;
    (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v93, v63, v94);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v65, 0, 1, v66);
    sub_231262104();
    result = objc_msgSend((id)objc_opt_self(), sel_categoryWithID_, 20);
    if (result)
    {
      v67 = result;
      sub_231262110();

      sub_2312620B0();
      v119 = MEMORY[0x24BEE4AF8];
      sub_231199290(0, v115, 0);
      v68 = v119;
      v69 = v87;
      v70 = v86;
      v71 = v85;
      v72 = v81;
      do
      {
        v73 = v114;
        sub_231178454(v72, v114, type metadata accessor for SharedConceptFeedItemData);
        swift_bridgeObjectRetain();
        sub_23126211C();
        sub_231178498(v73, type metadata accessor for SharedConceptFeedItemData);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_231199290(0, *(_QWORD *)(v68 + 16) + 1, 1);
          v68 = v119;
        }
        v75 = *(_QWORD *)(v68 + 16);
        v74 = *(_QWORD *)(v68 + 24);
        if (v75 >= v74 >> 1)
        {
          sub_231199290(v74 > 1, v75 + 1, 1);
          v68 = v119;
        }
        *(_QWORD *)(v68 + 16) = v75 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v70 + 32))(v68+ ((*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80))+ *(_QWORD *)(v70 + 72) * v75, v71, v69);
        v119 = v68;
        v72 += v118;
        --v115;
        v76 = v113;
      }
      while (v115);
      sub_23124E3EC(v68);
      swift_release();
      v77 = v99;
      sub_231262140();
      (*(void (**)(char *, uint64_t))(v84 + 8))(v83, v66);
      sub_231178498(v107, type metadata accessor for SharedConceptComboFeedItemData);
      v78 = v82;
      v79 = v100;
      (*(void (**)(uint64_t, char *, uint64_t))(v82 + 32))(v100, v77, v76);
      return (id)(*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v78 + 56))(v79, 0, 1, v76);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_231186060@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t *a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  unint64_t v22;
  uint64_t result;
  unint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28[16];
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v26 = a4;
  v27 = a5;
  v24 = a6;
  v25 = a2;
  sub_231188C14();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v13 = *(int *)(v9 + 48);
  v14 = &v11[v13];
  v15 = *(int *)(v9 + 64);
  v16 = &v11[v15];
  v17 = a3 + v13;
  v18 = a3 + v15;
  v19 = sub_231261E40();
  v20 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  v20(v11, a3, v19);
  v20(v14, v17, v19);
  v20(v16, v18, v19);
  v29 = v25;
  v30 = v11;
  v31 = v26;
  v32 = v27;
  v21 = v33;
  v22 = sub_23118937C(v12, (void (*)(_QWORD))sub_2311891B8, (uint64_t)v28);
  result = sub_231178498((uint64_t)v11, (uint64_t (*)(_QWORD))sub_231188C14);
  if (!v21)
    *v24 = v22;
  return result;
}

uint64_t sub_23118619C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void (*a5)(_QWORD, _QWORD, _QWORD)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_QWORD, _QWORD, _QWORD);
  uint64_t v31;

  v29 = a2;
  v30 = a5;
  v27 = a1;
  v28 = a4;
  v26 = a6;
  sub_231188C14();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(int *)(v8 + 48);
  v12 = (uint64_t)&v10[v11];
  v13 = *(int *)(v8 + 64);
  v14 = (uint64_t)&v10[v13];
  v15 = a3 + v11;
  v16 = a3 + v13;
  v17 = sub_231261E40();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v19(v10, a3, v17);
  v19((char *)v12, v15, v17);
  v19((char *)v14, v16, v17);
  v20 = v26;
  v21 = v31;
  sub_231186328(v27, (uint64_t)v10, v12, v14, v28, v30, v26);
  v22 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  v22(v14, v17);
  v22(v12, v17);
  if (v21)
    return ((uint64_t (*)(char *, uint64_t))v22)(v10, v17);
  v22((uint64_t)v10, v17);
  v24 = sub_23126217C();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v20, 0, 1, v24);
}

uint64_t sub_231186328@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void (*a6)(_QWORD, _QWORD, _QWORD)@<X5>, uint64_t a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  char *v21;
  char *v22;
  uint64_t v23;
  void *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(_QWORD, _QWORD, _QWORD);
  uint64_t v30;
  uint64_t v31;

  v30 = a5;
  v28 = a1;
  v29 = a6;
  v26 = a4;
  v27 = a7;
  sub_231188C14();
  v10 = v9;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v26 - v15;
  v17 = (char *)&v26 + *(int *)(v14 + 48) - v15;
  v18 = (char *)&v26 + *(int *)(v14 + 64) - v15;
  v19 = sub_231261E40();
  v20 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  v20(v16, a2, v19);
  v20(v17, a3, v19);
  v20(v18, v26, v19);
  v21 = &v13[*(int *)(v10 + 48)];
  v22 = &v13[*(int *)(v10 + 64)];
  v20(v13, (uint64_t)v16, v19);
  v20(v21, (uint64_t)v17, v19);
  v23 = ((uint64_t (*)(char *, char *, uint64_t))v20)(v22, v18, v19);
  v24 = (void *)MEMORY[0x2348D810C](v23);
  sub_231186850(v28, v29, v31, v30, (uint64_t)v13, v27);
  objc_autoreleasePoolPop(v24);
  sub_231178498((uint64_t)v16, (uint64_t (*)(_QWORD))sub_231188C14);
  return sub_231178498((uint64_t)v13, (uint64_t (*)(_QWORD))sub_231188C14);
}

uint64_t sub_2311864BC@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  _QWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  sub_231188FDC(0, &qword_255EB8128, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9E10]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v32 - v7;
  v9 = sub_231263B5C();
  v37 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  sub_231263B08();
  v13 = v12;
  v14 = v12;
  v15 = sub_231263B50();
  v16 = sub_2312643D8();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v35 = v6;
    v18 = v17;
    v33 = swift_slowAlloc();
    v39 = v33;
    *(_DWORD *)v18 = 136446466;
    v38 = sub_231188518(0);
    sub_23118852C(0, &qword_254152960, (void (*)(uint64_t))sub_231188518);
    v34 = v9;
    v19 = sub_2312640B4();
    v36 = a2;
    v38 = sub_2311CBDE4(v19, v20, &v39);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2082;
    v32[1] = v18 + 14;
    v38 = (uint64_t)v12;
    v21 = v12;
    v22 = v12;
    sub_2311889D8();
    sub_231264B88();
    v23 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_2312647B0();
    swift_unknownObjectRelease();
    v24 = sub_2312640B4();
    v26 = v25;

    v27 = v24;
    a2 = v36;
    v38 = sub_2311CBDE4(v27, v26, &v39);
    sub_231264750();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23116F000, v15, v16, "[%{public}s] Unable to generate sharing snippets: %{public}s", (uint8_t *)v18, 0x16u);
    v28 = v33;
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v28, -1, -1);
    v29 = v18;
    v6 = v35;
    MEMORY[0x2348D85EC](v29, -1, -1);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v34);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v9);
  }
  sub_2311889BC(0);
  sub_2311889D8();
  sub_231263D90();
  sub_231189178(&qword_255EB8130, &qword_255EB8128, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9E10], MEMORY[0x24BDB9E20]);
  v30 = sub_231263E38();
  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v30;
  return result;
}

id sub_231186850@<X0>(uint64_t a1@<X0>, void (*a2)(_QWORD, _QWORD, _QWORD)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(_QWORD, _QWORD, _QWORD);
  uint64_t v50;
  uint64_t v51;
  void (*v52)(_QWORD, _QWORD, _QWORD);
  void (*v53)(_QWORD, _QWORD, _QWORD);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id result;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, _QWORD);
  char *v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, _QWORD);
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(char *, uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t (*v98)(uint64_t);
  uint64_t v99;
  void (*v100)(char *, uint64_t);
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(char *, _QWORD);
  char *v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(uint64_t, _QWORD, uint64_t, uint64_t);
  char *v114;
  char *v115;
  char *v116;
  uint64_t v117;
  void (*v118)(char *, uint64_t, uint64_t);
  uint64_t (*v119)(uint64_t);
  uint64_t v120;
  unsigned int *v121;
  char *v122;
  uint64_t v123;
  void (*v124)(uint64_t, _QWORD, uint64_t, uint64_t);
  char *v125;
  char *v126;
  uint64_t (*v127)(uint64_t);
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  void (*v136)(char *, _QWORD);
  _QWORD v137[2];
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  _QWORD *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  char *v170;
  void (*v171)(_QWORD, _QWORD, _QWORD);
  uint64_t v172;
  uint64_t v173;
  char v174[8];

  v142 = a5;
  v143 = a4;
  v160 = a3;
  v171 = a2;
  v153 = a6;
  sub_231188C14();
  v145 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v144 = (char *)v137 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2311735E0(0, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v141 = (char *)v137 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v152 = (char *)v137 - v13;
  v148 = sub_231263904();
  v147 = *(_QWORD *)(v148 - 8);
  MEMORY[0x24BDAC7A8](v148);
  v146 = (char *)v137 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, &qword_255EB8138, (uint64_t (*)(uint64_t))MEMORY[0x24BE47DF8], v9);
  MEMORY[0x24BDAC7A8](v15);
  v151 = (char *)v137 - v16;
  v17 = sub_231261CCC();
  MEMORY[0x24BDAC7A8](v17);
  v150 = (char *)v137 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v165 = sub_231262428();
  v162 = *(_QWORD *)(v165 - 8);
  MEMORY[0x24BDAC7A8](v165);
  v163 = (char *)v137 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = sub_231261E40();
  v169 = *(_QWORD *)(v161 - 8);
  v20 = MEMORY[0x24BDAC7A8](v161);
  v149 = (char *)v137 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v164 = (char *)v137 - v22;
  v139 = sub_231261FA8();
  v138 = *(_QWORD *)(v139 - 8);
  MEMORY[0x24BDAC7A8](v139);
  v140 = (char *)v137 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = sub_23126226C();
  v168 = *(char **)(v158 - 8);
  MEMORY[0x24BDAC7A8](v158);
  v157 = (char *)v137 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = type metadata accessor for SharedConceptFeedItemData(0);
  MEMORY[0x24BDAC7A8](v172);
  v159 = (_QWORD *)((char *)v137 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2311735E0(0, &qword_254152BE8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], v9);
  MEMORY[0x24BDAC7A8](v26);
  v156 = (char *)v137 - v27;
  sub_2311735E0(0, &qword_2541554F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0], v9);
  MEMORY[0x24BDAC7A8](v28);
  v167 = (uint64_t)v137 - v29;
  v30 = sub_2312626E0();
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)v137 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_23126292C();
  v35 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v37 = (char *)v137 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = a1;
  (*(void (**)(char *, _QWORD, uint64_t))(v35 + 104))(v37, *MEMORY[0x24BE490B8], v34);
  (*(void (**)(char *, _QWORD, uint64_t))(v31 + 104))(v33, *MEMORY[0x24BE48DE0], v30);
  v38 = (void *)sub_231262230();
  v39 = sub_2312630A0();
  v170 = v40;

  v41 = v33;
  v42 = v168;
  v43 = v30;
  v44 = v157;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v43);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v34);
  v45 = v155;
  v154 = v155 + *(int *)(v172 + 52);
  v46 = (uint64_t)v156;
  sub_231262458();
  v47 = sub_231262464();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v46, 0, 1, v47);
  type metadata accessor for SharedConcept_SharingVersionMismatchTileView(0);
  type metadata accessor for SharedConceptFeedItemGenerator(0);
  sub_231172048(&qword_255EB8140, type metadata accessor for SharedConceptFeedItemGenerator, (uint64_t)&unk_231266110);
  v48 = v167;
  v49 = v171;
  v137[1] = v39;
  v50 = v45;
  sub_2312638EC();
  sub_231189628(v46, &qword_254152BE8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70]);
  v51 = v45;
  v52 = (void (*)(_QWORD, _QWORD, _QWORD))v159;
  sub_231178454(v51, (uint64_t)v159, type metadata accessor for SharedConceptFeedItemData);
  v53 = v49;
  v54 = v158;
  (*((void (**)(char *, void (*)(_QWORD, _QWORD, _QWORD)))v42 + 2))(v44, v53);
  v55 = sub_23126217C();
  v56 = *(_QWORD *)(v55 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v48, 1, v55) == 1)
  {
    sub_231172048(&qword_255EB8148, type metadata accessor for SharedConceptFeedItemData, (uint64_t)&unk_231266E70);
    v57 = v166;
    sub_231261C60();
    if (v57)
    {
      swift_bridgeObjectRelease();
      (*((void (**)(char *, uint64_t))v168 + 1))(v44, v54);
      sub_231178498((uint64_t)v52, type metadata accessor for SharedConceptFeedItemData);
      return (id)sub_231189628(v167, &qword_2541554F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0]);
    }
    v166 = 0;
    type metadata accessor for SharedConceptTileViewController();
    (*(void (**)(char *, _QWORD, uint64_t))(v138 + 104))(v140, *MEMORY[0x24BE47410], v139);
    sub_231262230();
    sub_231262038();
    (*((void (**)(char *, uint64_t))v168 + 1))(v44, v54);
    sub_231178498((uint64_t)v52, type metadata accessor for SharedConceptFeedItemData);
    sub_231189628(v167, &qword_2541554F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0]);
  }
  else
  {
    swift_bridgeObjectRelease();
    (*((void (**)(char *, uint64_t))v42 + 1))(v44, v54);
    sub_231178498((uint64_t)v52, type metadata accessor for SharedConceptFeedItemData);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 32))(v153, v48, v55);
  }
  v59 = v172;
  v170 = (char *)(v50 + *(int *)(v172 + 44));
  v60 = v164;
  sub_231261E04();
  v61 = v161;
  v171 = *(void (**)(_QWORD, _QWORD, _QWORD))(v169 + 16);
  v171(v149, v60, v161);
  sub_231261CC0();
  v62 = v163;
  sub_231262410();
  v63 = v162;
  v64 = v151;
  v65 = v62;
  v66 = v165;
  (*(void (**)(char *, char *, uint64_t))(v162 + 16))(v151, v65, v165);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v64, 0, 1, v66);
  sub_231262104();
  swift_bridgeObjectRetain();
  sub_2312620BC();
  v67 = sub_231262380();
  v68 = v50;
  v70 = v69;
  v71 = (void (*)(char *, _QWORD))sub_23126214C();
  swift_bridgeObjectRetain();
  sub_2312519E4(&v173, v67, v70);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v71(v174, 0);
  result = objc_msgSend((id)objc_opt_self(), sel_categoryWithID_, 20);
  v72 = v152;
  if (result)
  {
    v73 = result;
    sub_231262110();

    sub_2312620B0();
    sub_2311735E0(0, &qword_255EB84C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47758], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    sub_231262128();
    v74 = swift_allocObject();
    *(_OWORD *)(v74 + 16) = xmmword_231265AC0;
    swift_bridgeObjectRetain();
    sub_23126211C();
    sub_23124E3EC(v74);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_231262140();
    if (*(_BYTE *)(v68 + *(int *)(v59 + 40)) == 1)
    {
      v75 = *MEMORY[0x24BE450C8];
      v76 = sub_231263994();
      v77 = v146;
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 104))(v146, v75, v76);
      v78 = v147;
      v79 = v148;
      (*(void (**)(char *, _QWORD, uint64_t))(v147 + 104))(v77, *MEMORY[0x24BE44E68], v148);
      v80 = sub_2312638F8();
      v82 = v81;
      (*(void (**)(char *, uint64_t))(v78 + 8))(v77, v79);
      v83 = (void (*)(char *, _QWORD))sub_23126214C();
      sub_2312519E4(&v173, v80, v82);
      swift_bridgeObjectRelease();
      v83(v174, 0);
      (*(void (**)(char *, uint64_t))(v162 + 8))(v163, v165);
      return (id)(*(uint64_t (**)(char *, uint64_t))(v169 + 8))(v164, v61);
    }
    sub_231261E04();
    v84 = (uint64_t)v72;
    v172 = *(_QWORD *)(v169 + 56);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v172)(v72, 0, 1, v61);
    v85 = *(int *)(v145 + 48);
    v86 = v144;
    v87 = &v144[v85];
    v168 = &v144[v85];
    v88 = *(int *)(v145 + 64);
    v89 = &v144[v88];
    v90 = v142;
    v91 = v142 + v85;
    v92 = v142 + v88;
    v93 = v61;
    v94 = v61;
    v95 = (void (*)(char *, uint64_t, uint64_t))v171;
    v171(v144, v142, v93);
    v160 = v91;
    v95(v87, v91, v94);
    v167 = v92;
    v95(v89, v92, v94);
    v96 = v169;
    v97 = (uint64_t)v141;
    v159 = *(_QWORD **)(v169 + 32);
    ((void (*)(char *, char *, uint64_t))v159)(v141, v86, v94);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v172)(v97, 0, 1, v94);
    LOBYTE(v95) = sub_2312460D8(v84, v97);
    v98 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
    sub_231189628(v97, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    v99 = v161;
    sub_231189628(v84, (unint64_t *)&qword_254154938, v98);
    v100 = *(void (**)(char *, uint64_t))(v96 + 8);
    v100(v89, v99);
    v100(v168, v99);
    if ((v95 & 1) != 0)
    {
      v101 = *MEMORY[0x24BE450C0];
      v102 = sub_231263994();
      v103 = v146;
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 104))(v146, v101, v102);
      v104 = v147;
      v105 = v148;
      (*(void (**)(char *, _QWORD, uint64_t))(v147 + 104))(v103, *MEMORY[0x24BE44E68], v148);
      v106 = sub_2312638F8();
      v108 = v107;
      (*(void (**)(char *, uint64_t))(v104 + 8))(v103, v105);
      v109 = (void (*)(char *, _QWORD))sub_23126214C();
      sub_2312519E4(&v173, v106, v108);
      swift_bridgeObjectRelease();
      v109(v174, 0);
      (*(void (**)(char *, uint64_t))(v162 + 8))(v163, v165);
      v110 = v164;
      v111 = v99;
      return (id)((uint64_t (*)(char *, uint64_t))v100)(v110, v111);
    }
    v112 = (uint64_t)v152;
    sub_231261E04();
    v113 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v172;
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v172)(v112, 0, 1, v99);
    v114 = v144;
    v115 = &v144[*(int *)(v145 + 48)];
    v116 = &v144[*(int *)(v145 + 64)];
    v117 = v90;
    v118 = (void (*)(char *, uint64_t, uint64_t))v171;
    v171(v144, v117, v99);
    v118(v115, v160, v99);
    v118(v116, v167, v99);
    ((void (*)(uint64_t, char *, uint64_t))v159)(v97, v115, v99);
    v113(v97, 0, 1, v99);
    LOBYTE(v115) = sub_2312460D8(v112, v97);
    v119 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
    sub_231189628(v97, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    v120 = v161;
    sub_231189628(v112, (unint64_t *)&qword_254154938, v119);
    v100(v116, v120);
    v100(v114, v120);
    if ((v115 & 1) != 0)
    {
      v121 = (unsigned int *)MEMORY[0x24BE450D0];
    }
    else
    {
      v122 = v114;
      v123 = (uint64_t)v152;
      sub_231261E04();
      v124 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v172;
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v172)(v123, 0, 1, v120);
      v170 = &v122[*(int *)(v145 + 48)];
      v125 = v170;
      v126 = &v122[*(int *)(v145 + 64)];
      v118(v122, v142, v120);
      v118(v125, v160, v120);
      v118(v126, v167, v120);
      ((void (*)(uint64_t, char *, uint64_t))v159)(v97, v126, v120);
      v124(v97, 0, 1, v120);
      LOBYTE(v125) = sub_2312460D8(v123, v97);
      v127 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
      sub_231189628(v97, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
      sub_231189628(v123, (unint64_t *)&qword_254154938, v127);
      v100(v170, v120);
      v100(v122, v120);
      if ((v125 & 1) == 0)
      {
LABEL_16:
        (*(void (**)(char *, uint64_t))(v162 + 8))(v163, v165);
        v110 = v164;
        v111 = v120;
        return (id)((uint64_t (*)(char *, uint64_t))v100)(v110, v111);
      }
      v121 = (unsigned int *)MEMORY[0x24BE450B8];
    }
    v128 = *v121;
    v129 = sub_231263994();
    v130 = v146;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v129 - 8) + 104))(v146, v128, v129);
    v131 = v147;
    v132 = v148;
    (*(void (**)(char *, _QWORD, uint64_t))(v147 + 104))(v130, *MEMORY[0x24BE44E68], v148);
    v133 = sub_2312638F8();
    v135 = v134;
    (*(void (**)(char *, uint64_t))(v131 + 8))(v130, v132);
    v136 = (void (*)(char *, _QWORD))sub_23126214C();
    sub_2312519E4(&v173, v133, v135);
    swift_bridgeObjectRelease();
    v136(v174, 0);
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_231187894()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC13HealthRecords30SharedConceptFeedItemGenerator_domain;
  v2 = sub_2312621F4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_231178498(v0 + OBJC_IVAR____TtC13HealthRecords30SharedConceptFeedItemGenerator_context, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_231187924()
{
  return type metadata accessor for SharedConceptFeedItemGenerator(0);
}

uint64_t type metadata accessor for SharedConceptFeedItemGenerator(uint64_t a1)
{
  return sub_231187940(a1, (uint64_t *)&unk_2541518B0);
}

uint64_t sub_231187940(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_231187974()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2312621F4();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for HealthRecordsGeneratorContext();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_231187A28@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC13HealthRecords30SharedConceptFeedItemGenerator_domain;
  v4 = sub_2312621F4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t *sub_231187A70(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void (*v18)(unint64_t, _QWORD, uint64_t);
  uint64_t v19;
  _QWORD v21[2];
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = v3;
  v27 = *v4;
  v25 = sub_2312621DC();
  v23 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_2312621F4();
  v24 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231178454(a1, (uint64_t)v4 + OBJC_IVAR____TtC13HealthRecords30SharedConceptFeedItemGenerator_context, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
  *(uint64_t *)((char *)v4 + OBJC_IVAR____TtC13HealthRecords30SharedConceptFeedItemGenerator_changes) = a2;
  *(uint64_t *)((char *)v4 + OBJC_IVAR____TtC13HealthRecords30SharedConceptFeedItemGenerator_primaryHealthStore) = (uint64_t)a3;
  swift_bridgeObjectRetain();
  v22 = a3;
  v21[1] = sub_231262230();
  sub_2311735E0(0, &qword_254155718, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v12 = sub_231261FA8();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_231265570;
  v17 = v16 + v15;
  v18 = *(void (**)(unint64_t, _QWORD, uint64_t))(v13 + 104);
  v18(v17, *MEMORY[0x24BE47460], v12);
  v18(v17 + v14, *MEMORY[0x24BE47410], v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v23 + 104))(v9, *MEMORY[0x24BE47920], v25);
  sub_2312621E8();
  (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))((uint64_t)v4 + OBJC_IVAR____TtC13HealthRecords30SharedConceptFeedItemGenerator_domain, v11, v26);
  v19 = sub_231180960(a1, a2, v22);
  sub_231178498(a1, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
  v4[2] = v19;
  return v4;
}

void sub_231187CB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541543D0)
  {
    sub_231187D64();
    sub_231187DD8();
    sub_231187E54();
    sub_231172048(&qword_254152F10, (uint64_t (*)(uint64_t))sub_231187DD8, MEMORY[0x24BDB9AF8]);
    v0 = sub_231263CA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541543D0);
  }
}

void sub_231187D64()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254152F38)
  {
    sub_23118860C(255, (unint64_t *)&qword_254155638, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE1250]);
    v0 = sub_231263D0C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254152F38);
  }
}

void sub_231187DD8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254152F18)
  {
    sub_2311735E0(255, &qword_2541530D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47D40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v0 = sub_231263D0C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254152F18);
  }
}

uint64_t sub_231187E54()
{
  return sub_231172048(&qword_254152F30, (uint64_t (*)(uint64_t))sub_231187D64, MEMORY[0x24BDB9AF8]);
}

uint64_t sub_231187E70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_23126226C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_231187F0C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(sub_23126226C() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_231180DE8(a1, v2 + v6, *(_QWORD *)(v2 + v7), *(_QWORD *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v2 + ((((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), a2);
}

uint64_t sub_231187F90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v3 = *(_QWORD *)(v1 + 24);
  v4 = sub_2312623C8();
  v6 = sub_2311891D4(v4, v5, v3);
  v8 = v7;
  result = swift_bridgeObjectRelease();
  *a1 = v6;
  a1[1] = v8;
  return result;
}

uint64_t sub_231187FF0(uint64_t result, _QWORD *a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v22;
  unint64_t v23;

  v2 = *(_QWORD *)(result + 16);
  if (!v2)
    return MEMORY[0x24BEE4AF8];
  v3 = 0;
  v22 = result + 32;
  v19 = a2 + 7;
  v4 = MEMORY[0x24BEE4AF8];
  do
  {
    v20 = v4;
    if (v3 <= v2)
      v5 = v2;
    else
      v5 = v3;
    v23 = v5;
    while (1)
    {
      if (v3 == v23)
      {
        __break(1u);
LABEL_34:
        __break(1u);
        return result;
      }
      v6 = (uint64_t *)(v22 + 16 * v3);
      v8 = *v6;
      v7 = v6[1];
      ++v3;
      swift_bridgeObjectRetain();
      sub_231263070();
      sub_231188564();
      v9 = sub_2312647A4();
      swift_bridgeObjectRelease();
      if ((v9 & 1) == 0)
      {
        sub_23126307C();
        v10 = sub_2312647A4();
        swift_bridgeObjectRelease();
        if ((v10 & 1) == 0)
        {
          v11 = a2[2];
          if (!v11)
            goto LABEL_24;
          if (a2[4] != v8 || a2[5] != v7)
          {
            result = sub_231264B58();
            if ((result & 1) == 0)
              break;
          }
        }
      }
LABEL_7:
      result = swift_bridgeObjectRelease();
      if (v3 == v2)
        return v20;
    }
    if (v11 != 1)
    {
      v12 = v19;
      v13 = 1;
      do
      {
        v14 = v13 + 1;
        if (__OFADD__(v13, 1))
          goto LABEL_34;
        if (*(v12 - 1) == v8 && *v12 == v7)
          goto LABEL_7;
        result = sub_231264B58();
        if ((result & 1) != 0)
          goto LABEL_7;
        v12 += 2;
        ++v13;
      }
      while (v14 != v11);
    }
LABEL_24:
    result = swift_isUniquelyReferenced_nonNull_native();
    v4 = v20;
    if ((result & 1) == 0)
    {
      result = sub_231199248(0, *(_QWORD *)(v20 + 16) + 1, 1);
      v4 = v20;
    }
    v17 = *(_QWORD *)(v4 + 16);
    v16 = *(_QWORD *)(v4 + 24);
    if (v17 >= v16 >> 1)
    {
      result = sub_231199248(v16 > 1, v17 + 1, 1);
      v4 = v20;
    }
    *(_QWORD *)(v4 + 16) = v17 + 1;
    v18 = v4 + 16 * v17;
    *(_QWORD *)(v18 + 32) = v8;
    *(_QWORD *)(v18 + 40) = v7;
  }
  while (v3 != v2);
  return v4;
}

uint64_t sub_231188248()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[5];
  _BYTE v13[40];

  sub_2311885A8();
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2312626E0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BE48DE0], v5);
  sub_23126220C();
  sub_231262470();
  sub_231173434((uint64_t)v12);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_23118860C(0, &qword_254153220, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE3598]);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_231265AC0;
  sub_231188654((uint64_t)v13, v9 + 32);
  v12[0] = v9;
  sub_231188764((uint64_t)v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_231188690);
  sub_23118860C(0, (unint64_t *)&qword_254155638, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE1250]);
  sub_231263D84();
  sub_231172048((unint64_t *)&qword_254153048, (uint64_t (*)(uint64_t))sub_2311885A8, MEMORY[0x24BDB9DF8]);
  v10 = sub_231263E38();
  sub_231188764((uint64_t)v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23118879C);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v10;
}

unint64_t sub_231188424()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254153100;
  if (!qword_254153100)
  {
    sub_2311735E0(255, &qword_2541530F8, (uint64_t (*)(uint64_t))sub_231187D64, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2348D8544](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_254153100);
  }
  return result;
}

unint64_t sub_231188484()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254152E50;
  if (!qword_254152E50)
  {
    sub_231188B88(255, &qword_254152E58, (uint64_t (*)(uint64_t))sub_231187D64, sub_231187E54, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB99B8]);
    result = MEMORY[0x2348D8544](MEMORY[0x24BDB99D8], v1);
    atomic_store(result, (unint64_t *)&qword_254152E50);
  }
  return result;
}

uint64_t sub_2311884EC(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_231188518(uint64_t a1)
{
  return sub_23118852C(a1, &qword_254152958, (void (*)(uint64_t))type metadata accessor for SharedConceptFeedItemGenerator);
}

uint64_t sub_23118852C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    a3(255);
    result = swift_getMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_231188564()
{
  unint64_t result;

  result = qword_255EB83B0;
  if (!qword_255EB83B0)
  {
    result = MEMORY[0x2348D8544](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_255EB83B0);
  }
  return result;
}

void sub_2311885A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254153050)
  {
    sub_23118860C(255, (unint64_t *)&qword_254155638, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE1250]);
    v0 = sub_231263D78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254153050);
  }
}

void sub_23118860C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, _QWORD))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, MEMORY[0x24BE47F58]);
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_231188654(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BE47F58] - 8) + 32))(a2, a1);
  return a2;
}

void sub_231188690(uint64_t a1, void *a2, void *a3, void *a4, unsigned __int8 a5)
{
  char v8;

  switch(a5 >> 5)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      swift_bridgeObjectRetain();
      break;
    case 4:
      v8 = a5 & 0x1F;
      swift_bridgeObjectRetain();
      sub_231188700(a2, a3, a4, v8);
      break;
    default:
      return;
  }
}

id sub_231188700(id result, void *a2, void *a3, char a4)
{
  if (!a4)
  {
    a3 = a2;
LABEL_6:
    swift_bridgeObjectRetain();
    result = a3;
    return sub_231188754(result);
  }
  if (a4 != 2)
  {
    if (a4 != 1)
      return result;
    goto LABEL_6;
  }
  return sub_231188754(result);
}

id sub_231188754(id result)
{
  if (result != (id)1)
    return result;
  return result;
}

uint64_t sub_231188764(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + 32));
  return a1;
}

void sub_23118879C(uint64_t a1, void *a2, void *a3, void *a4, unsigned __int8 a5)
{
  char v8;

  switch(a5 >> 5)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      swift_bridgeObjectRelease();
      break;
    case 4:
      v8 = a5 & 0x1F;
      swift_bridgeObjectRelease();
      sub_23118880C(a2, a3, a4, v8);
      break;
    default:
      return;
  }
}

void sub_23118880C(void *a1, void *a2, void *a3, char a4)
{
  if (!a4)
  {
    a3 = a2;
LABEL_6:
    swift_bridgeObjectRelease();
    a1 = a3;
    goto LABEL_7;
  }
  if (a4 != 2)
  {
    if (a4 != 1)
      return;
    goto LABEL_6;
  }
LABEL_7:
  sub_231188860(a1);
}

void sub_231188860(id a1)
{
  if (a1 != (id)1)

}

void sub_231188870()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254152D70)
  {
    sub_231188914();
    sub_23118860C(255, (unint64_t *)&qword_254155638, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE1250]);
    sub_231172048(&qword_254152C10, (uint64_t (*)(uint64_t))sub_231188914, MEMORY[0x24BDB9470]);
    v0 = sub_231263C88();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254152D70);
  }
}

void sub_231188914()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_2541518E0)
  {
    v0 = MEMORY[0x24BDB9AE0];
    sub_231188FDC(255, &qword_254152EF8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_231189178((unint64_t *)&qword_254152EF0, &qword_254152EF8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v0, MEMORY[0x24BDB9AF8]);
    v1 = sub_231263BA4();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_2541518E0);
  }
}

void sub_2311889BC(uint64_t a1)
{
  sub_2311735E0(a1, &qword_254151870, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
}

unint64_t sub_2311889D8()
{
  unint64_t result;

  result = qword_254155900[0];
  if (!qword_254155900[0])
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, qword_254155900);
  }
  return result;
}

void sub_231188A2C()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_254152D00)
  {
    sub_231188870();
    v0 = MEMORY[0x24BDB9AE0];
    sub_231188B08(255, &qword_254152F28, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_231172048(&qword_254152D68, (uint64_t (*)(uint64_t))sub_231188870, MEMORY[0x24BDB98C8]);
    sub_231188F44(&qword_254152F20, &qword_254152F28, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v0, MEMORY[0x24BDB9AF8]);
    v1 = sub_231263C40();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_254152D00);
  }
}

void sub_231188B08(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_23118860C(255, (unint64_t *)&qword_254155638, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE1250]);
    v7 = v6;
    v8 = sub_2311889D8();
    v9 = a3(a1, v7, v8, MEMORY[0x24BEE3F20]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_231188B88(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*a2)
  {
    v9 = a3(255);
    v10 = a4();
    v11 = a5(a1, v9, v10);
    if (!v12)
      atomic_store(v11, a2);
  }
}

uint64_t sub_231188BF8()
{
  return sub_231172048(&qword_254152CF8, (uint64_t (*)(uint64_t))sub_231188A2C, MEMORY[0x24BDB9740]);
}

void sub_231188C14()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_2541518E8)
  {
    sub_231261E40();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_2541518E8);
  }
}

unint64_t sub_231188C7C()
{
  unint64_t result;

  result = qword_255EB8108;
  if (!qword_255EB8108)
  {
    result = MEMORY[0x2348D8544](&unk_231266EE8, &type metadata for SharedConceptFormattedRecord);
    atomic_store(result, (unint64_t *)&qword_255EB8108);
  }
  return result;
}

uint64_t sub_231188CC0(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_231188D30()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23126226C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

double sub_231188DA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = sub_23126226C();
  return sub_231183A90(a1, a2, a3, v3+ ((*(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80)));
}

uint64_t sub_231188E18()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_231188E3C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v2 + 16))(*a1, a1[1], a1[2]);
  *a2 = result;
  return result;
}

uint64_t sub_231188E80()
{
  return swift_deallocObject();
}

uint64_t sub_231188E90@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2311841E0(a1, a2);
}

unint64_t sub_231188E98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254152C40;
  if (!qword_254152C40)
  {
    sub_231188B88(255, &qword_254152C48, (uint64_t (*)(uint64_t))sub_231188A2C, sub_231188BF8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB9598]);
    result = MEMORY[0x2348D8544](MEMORY[0x24BDB95A8], v1);
    atomic_store(result, (unint64_t *)&qword_254152C40);
  }
  return result;
}

uint64_t sub_231188F00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SharedConceptFeedItemData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_231188F44(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_231188B08(255, a2, a3);
    result = MEMORY[0x2348D8544](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_231188F84()
{
  unint64_t result;

  result = qword_254153170;
  if (!qword_254153170)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254153170);
  }
  return result;
}

void sub_231188FC0(uint64_t a1)
{
  sub_2311735E0(a1, &qword_2541530C8, type metadata accessor for SharedConceptFeedItemData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
}

void sub_231188FDC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_2311889BC(255);
    v7 = v6;
    v8 = sub_2311889D8();
    v9 = a3(a1, v7, v8, MEMORY[0x24BEE3F20]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_23118904C()
{
  uint64_t (*v0)(uint64_t, uint64_t, unint64_t, _QWORD);
  uint64_t (*v1)(void);
  unint64_t v2;
  uint64_t v3;

  if (!qword_254152D50)
  {
    v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDBA1B0];
    sub_231188FDC(255, &qword_254153250, MEMORY[0x24BDBA1B0]);
    v1 = MEMORY[0x24BDB9AE0];
    sub_231188FDC(255, &qword_254152EF8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_231189178((unint64_t *)&qword_254153248, &qword_254153250, v0, MEMORY[0x24BDBA1D0]);
    sub_231189178((unint64_t *)&qword_254152EF0, &qword_254152EF8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v1, MEMORY[0x24BDB9AF8]);
    v2 = sub_231263C40();
    if (!v3)
      atomic_store(v2, (unint64_t *)&qword_254152D50);
  }
}

uint64_t sub_231189144@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_231186060(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_231189160()
{
  return swift_deallocObject();
}

uint64_t sub_231189170@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2311864BC(a1, a2);
}

uint64_t sub_231189178(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_231188FDC(255, a2, a3);
    result = MEMORY[0x2348D8544](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2311891B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23118619C(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(void (**)(_QWORD, _QWORD, _QWORD))(v2 + 40), a2);
}

uint64_t sub_2311891D4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  _QWORD v22[2];

  v6 = sub_2312626E0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23126292C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  v14 = sub_2311DDBBC(a1, a2);
  v17 = v14;
  if (!v14)
    return 0;
  v18 = sub_2311DBA50(v14, v15, v16);
  v22[0] = a3;
  v22[1] = v18;
  sub_2311884EC(v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BE490B8], v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BE48DE0], v6);
  v19 = (void *)sub_231262230();
  v20 = sub_2312630A0();
  swift_bridgeObjectRelease();

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v20;
}

unint64_t sub_23118937C(uint64_t a1, void (*a2)(_QWORD), uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  void (*v28)(_QWORD);
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a3;
  sub_2311735E0(0, &qword_2541554F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v27 - v7;
  v9 = sub_23126217C();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v31 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v29 = (char *)&v27 - v13;
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
    return MEMORY[0x24BEE4AF8];
  v33 = v12;
  v15 = *(_QWORD *)(type metadata accessor for SharedConceptFeedItemData(0) - 8);
  v16 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v30 = *(_QWORD *)(v15 + 72);
  v27 = a1;
  v17 = swift_bridgeObjectRetain();
  v18 = MEMORY[0x24BEE4AF8];
  v28 = a2;
  do
  {
    v19 = (void *)MEMORY[0x2348D810C](v17);
    a2(v16);
    if (v3)
    {
      objc_autoreleasePoolPop(v19);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v18;
    }
    objc_autoreleasePoolPop(v19);
    v20 = v33;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v8, 1, v9) == 1)
    {
      v17 = sub_231189628((uint64_t)v8, &qword_2541554F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0]);
    }
    else
    {
      v21 = v9;
      v22 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
      v23 = v29;
      v22(v29, v8, v21);
      v22(v31, v23, v21);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v18 = sub_2311DCA10(0, *(_QWORD *)(v18 + 16) + 1, 1, v18);
      v25 = *(_QWORD *)(v18 + 16);
      v24 = *(_QWORD *)(v18 + 24);
      if (v25 >= v24 >> 1)
        v18 = sub_2311DCA10(v24 > 1, v25 + 1, 1, v18);
      *(_QWORD *)(v18 + 16) = v25 + 1;
      v17 = ((uint64_t (*)(unint64_t, char *, uint64_t))v22)(v18+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(_QWORD *)(v33 + 72) * v25, v31, v21);
      v9 = v21;
      a2 = v28;
    }
    v16 += v30;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_231189628(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;

  sub_2311735E0(0, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_23118966C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_2311845DC(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_231189688()
{
  return swift_deallocObject();
}

uint64_t sub_231189698@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_231185348(a1, a2);
}

uint64_t sub_2311896A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2311735E0(0, &qword_254152BE8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *sub_2311896FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v1 = v0;
  v2 = OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline____lazy_storage___accountStateChangeListener;
  v3 = *(void **)(v0
                + OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline____lazy_storage___accountStateChangeListener);
  v4 = v3;
  if (v3 == (void *)1)
  {
    v5 = objc_allocWithZone((Class)sub_231262EC0());
    v4 = (void *)sub_231262EB4();
    v6 = *(void **)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v4;
    v7 = v4;
    sub_231188860(v6);
  }
  sub_231188754(v3);
  return v4;
}

void *sub_231189788()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v1 = v0;
  v2 = OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline____lazy_storage___healthRecordsSupportedListener;
  v3 = *(void **)(v0
                + OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline____lazy_storage___healthRecordsSupportedListener);
  v4 = v3;
  if (v3 == (void *)1)
  {
    v5 = objc_allocWithZone((Class)sub_231262638());
    v4 = (void *)sub_23126262C();
    v6 = *(void **)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v4;
    v7 = v4;
    sub_231188860(v6);
  }
  sub_231188754(v3);
  return v4;
}

void *sub_231189810()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v18;

  v1 = v0;
  sub_23118B464(0);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23118B49C(0, &qword_254155560, v7, (void (*)(void))sub_23118B508);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v18 - v11;
  v13 = OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline____lazy_storage___accountStateChangePublisher;
  v14 = *(_QWORD *)(v0
                  + OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline____lazy_storage___accountStateChangePublisher);
  v15 = (void *)v14;
  if (v14 == 1)
  {
    v15 = sub_2311896FC();
    if (v15)
    {
      sub_231262EA8();

      sub_23118B508();
      sub_231263E80();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      sub_23118B524();
      v15 = (void *)sub_231263E38();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
    v16 = *(_QWORD *)(v1 + v13);
    *(_QWORD *)(v1 + v13) = v15;
    swift_retain();
    sub_23118B444(v16);
  }
  sub_23118B454(v14);
  return v15;
}

void *sub_231189990()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v18;

  v1 = v0;
  sub_23118B390(0);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23118B49C(0, &qword_254155550, v7, (void (*)(void))sub_23118B3C8);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v18 - v11;
  v13 = OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline____lazy_storage___healthRecordsSupportedPublisher;
  v14 = *(_QWORD *)(v0
                  + OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline____lazy_storage___healthRecordsSupportedPublisher);
  v15 = (void *)v14;
  if (v14 == 1)
  {
    v15 = sub_231189788();
    if (v15)
    {
      sub_231262620();

      sub_23118B3C8();
      sub_231263E80();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      sub_23118B3E4();
      v15 = (void *)sub_231263E38();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
    v16 = *(_QWORD *)(v1 + v13);
    *(_QWORD *)(v1 + v13) = v15;
    swift_retain();
    sub_23118B444(v16);
  }
  sub_23118B454(v14);
  return v15;
}

uint64_t *sub_231189B10(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  void (**v24)(char *, _QWORD);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  void (**v48)(char *, _QWORD);
  void (**v49)(char *, _QWORD);
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  char *v77;
  NSObject *v78;
  os_log_type_t v79;
  uint8_t *v80;
  char *v82;
  char *v83;
  __int128 v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  void *v114;
  void (**v115)(char *, _QWORD);
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;

  v2 = v1;
  v98 = *v2;
  sub_2311735E0(0, &qword_254153030, (uint64_t (*)(uint64_t))sub_23117313C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v107 = *(_QWORD *)(v4 - 8);
  v108 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v106 = (char *)&v82 - v5;
  v6 = type metadata accessor for HealthRecordsGeneratorContext();
  v95 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v96 = v7;
  v109 = (uint64_t)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23118AE44(0);
  MEMORY[0x24BDAC7A8](v8);
  v91 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = sub_2312644C8();
  v89 = *(_QWORD *)(v90 - 8);
  MEMORY[0x24BDAC7A8](v90);
  v88 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23118AE60();
  v87 = v11;
  v86 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v85 = (char *)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23118AED8();
  v94 = v13;
  v93 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v92 = (char *)&v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23118AFA0();
  v101 = v15;
  v99 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v97 = (char *)&v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23118B034();
  v102 = *(_QWORD *)(v17 - 8);
  v103 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v100 = (char *)&v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_231263B5C();
  v104 = *(_QWORD *)(v19 - 8);
  v105 = v19;
  v20 = MEMORY[0x24BDAC7A8](v19);
  v82 = (char *)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v83 = (char *)&v82 - v22;
  sub_23118B0FC();
  v24 = (void (**)(char *, _QWORD))*(v23 - 1);
  v114 = v23;
  v115 = v24;
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v82 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = sub_2312621DC();
  v27 = *(_QWORD *)(v112 - 8);
  MEMORY[0x24BDAC7A8](v112);
  v29 = (char *)&v82 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = (_QWORD *)sub_2312621F4();
  v111 = *(v113 - 1);
  MEMORY[0x24BDAC7A8](v113);
  v31 = (char *)&v82 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(uint64_t *)((char *)v2
             + OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline____lazy_storage___accountStateChangeListener) = 1;
  *(uint64_t *)((char *)v2
             + OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline____lazy_storage___healthRecordsSupportedListener) = 1;
  *(uint64_t *)((char *)v2
             + OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline____lazy_storage___accountStateChangePublisher) = 1;
  *(uint64_t *)((char *)v2
             + OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline____lazy_storage___healthRecordsSupportedPublisher) = 1;
  *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline_observerToken) = 0;
  v110 = a1;
  sub_2311733CC(a1, (uint64_t)v2 + OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline_context);
  sub_231262230();
  sub_2311735E0(0, &qword_254155718, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v32 = sub_231261FA8();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  v35 = swift_allocObject();
  v84 = xmmword_231265AC0;
  *(_OWORD *)(v35 + 16) = xmmword_231265AC0;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v33 + 104))(v35 + v34, *MEMORY[0x24BE47418], v32);
  (*(void (**)(char *, _QWORD, uint64_t))(v27 + 104))(v29, *MEMORY[0x24BE47910], v112);
  sub_2312621E8();
  v36 = v31;
  v37 = v110;
  (*(void (**)(uint64_t, char *, _QWORD *))(v111 + 32))((uint64_t)v2 + OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline_domain, v36, v113);
  sub_23117313C();
  sub_231263D90();
  sub_231172048(&qword_2541555B8, (uint64_t (*)(uint64_t))sub_23118B0FC, MEMORY[0x24BDB9E20]);
  v38 = v114;
  v39 = sub_231263E38();
  ((void (**)(char *, void *))v115)[1](v26, v38);
  v2[2] = v39;
  sub_231262218();
  if ((sub_2312624D0() & 1) != 0)
  {
    v40 = v109;
    sub_2311733CC(v37, v109);
    v41 = type metadata accessor for ClinicalSharingGenerator();
    swift_allocObject();
    v42 = sub_2311FFDC4(v40);
    v117 = v41;
    v118 = sub_231172048(&qword_2541535F0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingGenerator, (uint64_t)&unk_23126970C);
    v116 = v42;
    v43 = v106;
    sub_231263D84();
    sub_23118B2B4(&qword_254153028, &qword_254153030, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0], MEMORY[0x24BDB9DF8]);
    v44 = v108;
    v45 = sub_231263E38();
    sub_231178498(v37, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
    (*(void (**)(char *, uint64_t))(v107 + 8))(v43, v44);
    v2[2] = v45;
LABEL_6:
    swift_release();
    return v2;
  }
  v46 = sub_231189810();
  if (v46)
  {
    v47 = v46;
    v48 = (void (**)(char *, _QWORD))sub_231189990();
    if (v48)
    {
      v49 = v48;
      sub_2311735E0(0, &qword_254155740, (uint64_t (*)(uint64_t))sub_231173008, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v50 = swift_allocObject();
      *(_OWORD *)(v50 + 16) = xmmword_231265570;
      *(_QWORD *)(v50 + 32) = v47;
      *(_QWORD *)(v50 + 40) = v49;
      v115 = v49;
      v116 = (_QWORD *)v50;
      sub_231264210();
      v114 = v47;
      v51 = v116;
      swift_retain();
      swift_retain();
      v52 = (_QWORD *)sub_231262254();
      v113 = v52;
      v116 = v51;
      sub_231173008();
      sub_2311735E0(0, &qword_254155658, (uint64_t (*)(uint64_t))sub_231173008, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
      sub_231172048((unint64_t *)&qword_2541555A8, (uint64_t (*)(uint64_t))sub_231173008, MEMORY[0x24BDB9AF8]);
      sub_23118B160();
      v53 = v85;
      sub_231263CDC();
      v54 = v88;
      sub_2312644BC();
      v116 = v52;
      v55 = sub_2312644B0();
      v56 = (uint64_t)v91;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v91, 1, 1, v55);
      sub_23117306C();
      sub_231172048(&qword_254155598, (uint64_t (*)(uint64_t))sub_23118AE60, MEMORY[0x24BDB99D8]);
      sub_231172048((unint64_t *)&qword_2541556F8, (uint64_t (*)(uint64_t))sub_23117306C, MEMORY[0x24BEE5670]);
      v57 = v92;
      v58 = v87;
      sub_231263F04();
      sub_231178498(v56, (uint64_t (*)(_QWORD))sub_23118AE44);
      (*(void (**)(char *, uint64_t))(v89 + 8))(v54, v90);
      (*(void (**)(char *, uint64_t))(v86 + 8))(v53, v58);
      v59 = v109;
      sub_2311733CC(v37, v109);
      v60 = (*(unsigned __int8 *)(v95 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80);
      v61 = (v96 + v60 + 7) & 0xFFFFFFFFFFFFFFF8;
      v62 = swift_allocObject();
      sub_23117353C(v59, v62 + v60);
      *(_QWORD *)(v62 + v61) = v98;
      sub_231172048(&qword_254152DF8, (uint64_t (*)(uint64_t))sub_23118AED8, MEMORY[0x24BDB9920]);
      v63 = v97;
      v64 = v94;
      sub_231263E80();
      swift_release();
      (*(void (**)(char *, uint64_t))(v93 + 8))(v57, v64);
      sub_2311735E0(0, &qword_254155730, (uint64_t (*)(uint64_t))sub_23117313C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v65 = swift_allocObject();
      *(_OWORD *)(v65 + 16) = v84;
      sub_2311733CC(v37, v59);
      v66 = type metadata accessor for ClinicalSharingGenerator();
      swift_allocObject();
      v67 = sub_2311FFDC4(v59);
      *(_QWORD *)(v65 + 56) = v66;
      *(_QWORD *)(v65 + 64) = sub_231172048(&qword_2541535F0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingGenerator, (uint64_t)&unk_23126970C);
      *(_QWORD *)(v65 + 32) = v67;
      sub_231172048(&qword_254152CB0, (uint64_t (*)(uint64_t))sub_23118AFA0, MEMORY[0x24BDB96C0]);
      v69 = v100;
      v68 = v101;
      sub_231263EEC();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v99 + 8))(v63, v68);
      sub_231172048(&qword_2541533E0, (uint64_t (*)(uint64_t))sub_23118B034, MEMORY[0x24BDB9530]);
      v70 = v103;
      v71 = sub_231263E38();
      (*(void (**)(char *, uint64_t))(v102 + 8))(v69, v70);
      v2[2] = v71;
      swift_release();
      v72 = sub_23118A9E8();
      swift_release();
      swift_release();

      sub_231178498(v37, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
      *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline_observerToken) = v72;
      goto LABEL_6;
    }
    v77 = v82;
    sub_231263B20();
    v78 = sub_231263B50();
    v79 = sub_2312643F0();
    if (os_log_type_enabled(v78, v79))
    {
      v80 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v80 = 0;
      _os_log_impl(&dword_23116F000, v78, v79, "healthRecordsSupportedPublisher was nil", v80, 2u);
      MEMORY[0x2348D85EC](v80, -1, -1);
    }
    swift_release();

    sub_231178498(v37, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
    (*(void (**)(char *, uint64_t))(v104 + 8))(v77, v105);
  }
  else
  {
    v73 = v83;
    sub_231263B20();
    v74 = sub_231263B50();
    v75 = sub_2312643F0();
    if (os_log_type_enabled(v74, v75))
    {
      v76 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v76 = 0;
      _os_log_impl(&dword_23116F000, v74, v75, "accountStateChangePublisher was nil", v76, 2u);
      MEMORY[0x2348D85EC](v76, -1, -1);
    }

    sub_231178498(v37, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
    (*(void (**)(char *, uint64_t))(v104 + 8))(v73, v105);
  }
  return v2;
}

uint64_t sub_23118A744@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = type metadata accessor for HealthRecordsGeneratorContext();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_231263B5C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231263B08();
  v13 = sub_231263B50();
  v14 = sub_2312643CC();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v25 = v9;
    v16 = v15;
    v17 = swift_slowAlloc();
    *(_DWORD *)v16 = 136446466;
    v26 = a1;
    v27 = v17;
    v28 = a2;
    swift_getMetatypeMetadata();
    v18 = sub_2312640B4();
    v28 = sub_2311CBDE4(v18, v19, &v27);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2082;
    v28 = type metadata accessor for ClinicalSharingGenerator();
    sub_23118B300();
    v20 = sub_2312640B4();
    v28 = sub_2311CBDE4(v20, v21, &v27);
    a1 = v26;
    sub_231264750();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23116F000, v13, v14, "[%{public}s]: Emitting %{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v17, -1, -1);
    MEMORY[0x2348D85EC](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v25);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  sub_2311733CC(a1, (uint64_t)v8);
  v22 = type metadata accessor for ClinicalSharingGenerator();
  swift_allocObject();
  v23 = sub_2311FFDC4((uint64_t)v8);
  a3[3] = v22;
  result = sub_231172048(&qword_2541535F0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingGenerator, (uint64_t)&unk_23126970C);
  a3[4] = result;
  *a3 = v23;
  return result;
}

uint64_t sub_23118A9E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;

  v1 = sub_231263B5C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2311896FC();
  if (v5)
  {
    v6 = v5;
    objc_msgSend(*(id *)(v0+ OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline_context+ *(int *)(type metadata accessor for HealthRecordsGeneratorContext() + 20)), sel_addAccountStateChangeListener_, v5);
    v7 = swift_allocObject();
    swift_weakInit();
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v7;
    *(_QWORD *)(v8 + 24) = v6;
    sub_231262A70();
    swift_allocObject();
    return sub_231262A58();
  }
  else
  {
    sub_231263B20();
    v10 = sub_231263B50();
    v11 = sub_2312643F0();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_23116F000, v10, v11, "accountStateChangeListener was nil", v12, 2u);
      MEMORY[0x2348D85EC](v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return 0;
  }
}

uint64_t sub_23118AB80(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    objc_msgSend(*(id *)(result+ OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline_context+ *(int *)(type metadata accessor for HealthRecordsGeneratorContext() + 20)), sel_removeAccountStateChangeListener_, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_23118AC08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline_observerToken))
  {
    swift_retain();
    sub_231262A64();
    swift_release();
  }
  swift_release();
  v2 = v0 + OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline_domain;
  v3 = sub_2312621F4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  sub_231178498(v1 + OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline_context, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
  sub_231188860(*(id *)(v1
                      + OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline____lazy_storage___accountStateChangeListener));
  sub_231188860(*(id *)(v1
                      + OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline____lazy_storage___healthRecordsSupportedListener));
  sub_23118B444(*(_QWORD *)(v1
                          + OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline____lazy_storage___accountStateChangePublisher));
  sub_23118B444(*(_QWORD *)(v1
                          + OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline____lazy_storage___healthRecordsSupportedPublisher));
  swift_release();
  return v1;
}

uint64_t sub_23118ACE4()
{
  sub_23118AC08();
  return swift_deallocClassInstance();
}

uint64_t sub_23118AD08()
{
  return type metadata accessor for ClinicalSharingGeneratorPipeline();
}

uint64_t type metadata accessor for ClinicalSharingGeneratorPipeline()
{
  uint64_t result;

  result = qword_254153830;
  if (!qword_254153830)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23118AD4C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2312621F4();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for HealthRecordsGeneratorContext();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_23118ADFC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC13HealthRecords32ClinicalSharingGeneratorPipeline_domain;
  v4 = sub_2312621F4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void sub_23118AE44(uint64_t a1)
{
  sub_2311735E0(a1, &qword_2541556F0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

void sub_23118AE60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541555A0)
  {
    sub_231173008();
    sub_231172048((unint64_t *)&qword_2541555A8, (uint64_t (*)(uint64_t))sub_231173008, MEMORY[0x24BDB9AF8]);
    v0 = sub_231263CD0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541555A0);
  }
}

void sub_23118AED8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254152E00)
  {
    sub_23118AE60();
    sub_23117306C();
    sub_231172048(&qword_254155598, (uint64_t (*)(uint64_t))sub_23118AE60, MEMORY[0x24BDB99D8]);
    sub_231172048((unint64_t *)&qword_2541556F8, (uint64_t (*)(uint64_t))sub_23117306C, MEMORY[0x24BEE5670]);
    v0 = sub_231263CAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254152E00);
  }
}

void sub_23118AFA0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254152CB8)
  {
    sub_23118AED8();
    sub_23117313C();
    sub_231172048(&qword_254152DF8, (uint64_t (*)(uint64_t))sub_23118AED8, MEMORY[0x24BDB9920]);
    v0 = sub_231263C1C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254152CB8);
  }
}

void sub_23118B034()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541533E8)
  {
    sub_231173258();
    sub_23118AFA0();
    sub_231172048((unint64_t *)&qword_254155578, (uint64_t (*)(uint64_t))sub_231173258, MEMORY[0x24BDB9970]);
    sub_231172048(&qword_254152CB0, (uint64_t (*)(uint64_t))sub_23118AFA0, MEMORY[0x24BDB96C0]);
    v0 = sub_231263BC8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541533E8);
  }
}

void sub_23118B0FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541555C0)
  {
    sub_23117313C();
    v0 = sub_231263D9C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541555C0);
  }
}

unint64_t sub_23118B160()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254155660;
  if (!qword_254155660)
  {
    sub_2311735E0(255, &qword_254155658, (uint64_t (*)(uint64_t))sub_231173008, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2348D8544](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_254155660);
  }
  return result;
}

uint64_t sub_23118B1C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for HealthRecordsGeneratorContext();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_23126226C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocObject();
}

uint64_t sub_23118B254@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_23118A744(v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)), a1);
}

uint64_t sub_23118B2B4(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_2311735E0(255, a2, (uint64_t (*)(uint64_t))sub_23117313C, a3);
    result = MEMORY[0x2348D8544](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23118B300()
{
  unint64_t result;

  result = qword_2541536D0;
  if (!qword_2541536D0)
  {
    type metadata accessor for ClinicalSharingGenerator();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_2541536D0);
  }
  return result;
}

uint64_t sub_23118B338()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23118B35C()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23118B388()
{
  uint64_t v0;

  return sub_23118AB80(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_23118B390(uint64_t a1)
{
  sub_2311735E0(a1, &qword_2541555F0, (uint64_t (*)(uint64_t))sub_23118B3AC, MEMORY[0x24BDB9ED8]);
}

void sub_23118B3AC(uint64_t a1)
{
  sub_2311735E0(a1, &qword_254155510, MEMORY[0x24BE48C58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

uint64_t sub_23118B3C8()
{
  return sub_231172048(&qword_2541555E8, (uint64_t (*)(uint64_t))sub_23118B390, MEMORY[0x24BDB9EE8]);
}

unint64_t sub_23118B3E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254155548;
  if (!qword_254155548)
  {
    sub_23118B49C(255, &qword_254155550, sub_23118B390, (void (*)(void))sub_23118B3C8);
    result = MEMORY[0x2348D8544](MEMORY[0x24BDB96C0], v1);
    atomic_store(result, (unint64_t *)&qword_254155548);
  }
  return result;
}

uint64_t sub_23118B444(uint64_t result)
{
  if (result != 1)
    return swift_release();
  return result;
}

uint64_t sub_23118B454(uint64_t result)
{
  if (result != 1)
    return swift_retain();
  return result;
}

void sub_23118B464(uint64_t a1)
{
  sub_2311735E0(a1, &qword_254155600, (uint64_t (*)(uint64_t))sub_23118B480, MEMORY[0x24BDB9ED8]);
}

void sub_23118B480(uint64_t a1)
{
  sub_2311735E0(a1, &qword_254155530, MEMORY[0x24BE49280], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

void sub_23118B49C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4();
    v6 = sub_231263C1C();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_23118B508()
{
  return sub_231172048(&qword_2541555F8, (uint64_t (*)(uint64_t))sub_23118B464, MEMORY[0x24BDB9EE8]);
}

unint64_t sub_23118B524()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254155558;
  if (!qword_254155558)
  {
    sub_23118B49C(255, &qword_254155560, sub_23118B464, (void (*)(void))sub_23118B508);
    result = MEMORY[0x2348D8544](MEMORY[0x24BDB96C0], v1);
    atomic_store(result, (unint64_t *)&qword_254155558);
  }
  return result;
}

void sub_23118B588(char a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  objc_class *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  void *v11;
  objc_super v12;

  v3 = sub_231263B5C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (objc_class *)type metadata accessor for NewRecordsLabFeedItemViewController();
  v12.receiver = v1;
  v12.super_class = v7;
  objc_msgSendSuper2(&v12, sel_viewDidAppear_, a1 & 1);
  sub_231263B20();
  v8 = sub_231263B50();
  v9 = sub_2312643F0();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_23116F000, v8, v9, "New Lab Records tile did appear", v10, 2u);
    MEMORY[0x2348D85EC](v10, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_2312629EC();
  v11 = (void *)sub_2312629E0();
  sub_2312629BC();

}

void sub_23118B6CC(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_23118B588(a3);

}

uint64_t sub_23118B70C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[40];
  __int128 v8;
  uint64_t v9;
  uint64_t v10;

  v3 = v1 + qword_255EB8158;
  swift_beginAccess();
  sub_23118CE48(v3, (uint64_t)&v8, &qword_255EB7C98, (unint64_t *)&unk_255EB8F80);
  if (!v9)
  {
    sub_23118CCC4((uint64_t)&v8);
    v4 = sub_231262CC8();
    v5 = sub_231262CBC();
    v9 = v4;
    v10 = MEMORY[0x24BE49490];
    *(_QWORD *)&v8 = v5;
    sub_23118CE98((uint64_t)&v8, (uint64_t)v7);
    swift_beginAccess();
    sub_23118CEDC((uint64_t)v7, v3);
    swift_endAccess();
  }
  return sub_2311789AC(&v8, a1);
}

void sub_23118B7EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  void (*v22)(uint64_t);
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;

  v24 = a2;
  v3 = sub_231262B60();
  v25 = *(_QWORD *)(v3 - 8);
  v26 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311787F4(0, (unint64_t *)&qword_254151918, (void (*)(uint64_t))MEMORY[0x24BDCEEA8]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v24 - v7;
  v9 = type metadata accessor for NewLabsFeedItemData(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (uint64_t *)((char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v24 - v14;
  sub_2311787F4(0, &qword_255EB8340, (void (*)(uint64_t))type metadata accessor for NewLabsFeedItemData);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v24 - v17;
  sub_231178A84(a1, (uint64_t)&v24 - v17, &qword_255EB8340, (void (*)(uint64_t))type metadata accessor for NewLabsFeedItemData);
  v19 = 0;
  v20 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v18, 1, v9) != 1)
  {
    sub_23118CD54((uint64_t)v18, (uint64_t)v15);
    sub_231178454((uint64_t)v15, (uint64_t)v13, type metadata accessor for NewLabsFeedItemData);
    v19 = *v13;
    v20 = *(_QWORD **)((char *)v13 + *(int *)(v9 + 24));
    swift_bridgeObjectRetain();
    sub_231178498((uint64_t)v13, type metadata accessor for NewLabsFeedItemData);
    sub_231178498((uint64_t)v15, type metadata accessor for NewLabsFeedItemData);
  }
  sub_231179404(v19, v20);
  swift_bridgeObjectRelease();
  v21 = sub_231261EAC();
  v22 = (void (*)(uint64_t))MEMORY[0x24BDCEEA8];
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v8, 1, 1, v21);
  sub_231262B54();
  sub_2312632EC();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v26);
  sub_2311786C0((uint64_t)v8, (unint64_t *)&qword_254151918, v22);
  v23 = (void *)sub_23126406C();
  swift_bridgeObjectRelease();
  objc_msgSend(v27, sel_setTitle_, v23, v24);

}

uint64_t sub_23118BAC0(void *a1)
{
  void *v2;
  id v3;
  _QWORD v5[4];

  sub_2312432E0(a1);
  sub_2312629EC();
  v2 = (void *)sub_2312629E0();
  sub_2312629BC();

  v5[3] = sub_23118CD18();
  v5[0] = a1;
  v3 = a1;
  sub_23118C304((uint64_t)v5);
  return sub_231178498((uint64_t)v5, (uint64_t (*)(_QWORD))sub_23117DD88);
}

uint64_t sub_23118BB54@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v3 = type metadata accessor for NewLabsFeedItemData(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311787F4(0, &qword_255EB8340, (void (*)(uint64_t))type metadata accessor for NewLabsFeedItemData);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v25 - v8;
  sub_2311787F4(0, (unint64_t *)&qword_254154938, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v25 - v11;
  v13 = (uint64_t)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x60);
  swift_beginAccess();
  sub_231178A84(v13, (uint64_t)v9, &qword_255EB8340, (void (*)(uint64_t))type metadata accessor for NewLabsFeedItemData);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3))
  {
    sub_2311786C0((uint64_t)v9, &qword_255EB8340, (void (*)(uint64_t))type metadata accessor for NewLabsFeedItemData);
    v14 = sub_231261E40();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v12, 1, 1, v14);
  }
  else
  {
    sub_231178454((uint64_t)v9, (uint64_t)v6, type metadata accessor for NewLabsFeedItemData);
    sub_2311786C0((uint64_t)v9, &qword_255EB8340, (void (*)(uint64_t))type metadata accessor for NewLabsFeedItemData);
    sub_231178A84((uint64_t)&v6[*(int *)(v3 + 20)], (uint64_t)v12, (unint64_t *)&qword_254154938, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    sub_231178498((uint64_t)v6, type metadata accessor for NewLabsFeedItemData);
    v15 = sub_231261E40();
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v12, 1, v15) != 1)
    {
      sub_23118CDD8();
      v19 = a1 + *(int *)(v18 + 48);
      (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(a1, v12, v15);
      v20 = *MEMORY[0x24BE43120];
      v21 = sub_231263580();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v19, v20, v21);
      v17 = (unsigned int *)MEMORY[0x24BE43130];
      goto LABEL_6;
    }
  }
  v17 = (unsigned int *)MEMORY[0x24BE43138];
LABEL_6:
  v22 = *v17;
  v23 = sub_23126358C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(a1, v22, v23);
}

void sub_23118BE00()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  void *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[3];
  uint64_t v30;

  v1 = sub_231263B5C();
  v27 = *(_QWORD *)(v1 - 8);
  v28 = v1;
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v25 - v5;
  v7 = sub_231263424();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0x70);
  v26 = v0;
  v12 = (uint64_t)v0 + v11;
  swift_beginAccess();
  sub_23118CE48(v12, (uint64_t)v29, (unint64_t *)&qword_2541548B0, (unint64_t *)&qword_2541548A0);
  v13 = v30;
  if (v30)
  {
    v14 = sub_231173410(v29, v30);
    v15 = *(_QWORD *)(v13 - 8);
    MEMORY[0x24BDAC7A8](v14);
    v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v15 + 16))(v17);
    sub_231263778();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v13);
    if ((*(unsigned int (**)(char *, uint64_t))(v8 + 88))(v10, v7) == *MEMORY[0x24BE425F0])
    {
      sub_231173434((uint64_t)v29);
      sub_231263B2C();
      v18 = sub_231263B50();
      v19 = sub_2312643F0();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v20 = 0;
        _os_log_impl(&dword_23116F000, v18, v19, "User dismissed NewLabRecords tile", v20, 2u);
        MEMORY[0x2348D85EC](v20, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v28);
      v29[0] = v26;
      type metadata accessor for NewRecordsLabFeedItemViewController();
      sub_23118CD98(&qword_255EB8348, (uint64_t)&unk_231266258);
      sub_231262C38();
      sub_2312629EC();
      v21 = (void *)sub_2312629E0();
      sub_2312629BC();

    }
    else
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      sub_231173434((uint64_t)v29);
      sub_231263B2C();
      v22 = sub_231263B50();
      v23 = sub_2312643D8();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v24 = 0;
        _os_log_impl(&dword_23116F000, v22, v23, "didTapDismis invoked for tile without a dismiss button!", v24, 2u);
        MEMORY[0x2348D85EC](v24, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v28);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_23118C170()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  int v12;
  int v13;
  _BYTE v14[24];
  _QWORD v15[3];
  uint64_t v16;

  v1 = sub_231263424();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = (uint64_t)v0 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0x70);
  swift_beginAccess();
  result = sub_23118CE48(v5, (uint64_t)v15, (unint64_t *)&qword_2541548B0, (unint64_t *)&qword_2541548A0);
  v7 = v16;
  if (v16)
  {
    v8 = sub_231173410(v15, v16);
    v9 = *(_QWORD *)(v7 - 8);
    MEMORY[0x24BDAC7A8](v8);
    v11 = &v14[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(_BYTE *))(v9 + 16))(v11);
    sub_231263778();
    (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v7);
    v12 = (*(uint64_t (**)(_BYTE *, uint64_t))(v2 + 88))(v4, v1);
    v13 = *MEMORY[0x24BE425F0];
    if (v12 != *MEMORY[0x24BE425F0])
      (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
    sub_231173434((uint64_t)v15);
    return v12 == v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23118C304(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  NSObject *v29;
  uint64_t v30;
  uint8_t *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[3];
  uint64_t v37;

  v2 = v1;
  v35 = a1;
  v3 = sub_231263B5C();
  v33 = *(_QWORD *)(v3 - 8);
  v34 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v32 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2312627B8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312628A8();
  v9 = (void *)sub_231262884();
  v10 = (uint64_t)v2 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v2) + 0x70);
  swift_beginAccess();
  result = sub_23118CE48(v10, (uint64_t)v36, (unint64_t *)&qword_2541548B0, (unint64_t *)&qword_2541548A0);
  v12 = v37;
  if (v37)
  {
    v13 = sub_231173410(v36, v37);
    v14 = *(_QWORD *)(v12 - 8);
    MEMORY[0x24BDAC7A8](v13);
    v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v14 + 16))(v16);
    v17 = (void *)sub_23126376C();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v12);
    v18 = (void *)sub_231262890();

    sub_231173434((uint64_t)v36);
    sub_23118B70C((uint64_t)v36);
    sub_231173410(v36, v37);
    v19 = *MEMORY[0x24BE490B8];
    v20 = sub_23126292C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v8, v19, v20);
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BE48E88], v5);
    v21 = (void *)sub_231262F14();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    if (v21)
    {
      sub_231173434((uint64_t)v36);
      sub_231178454(v35, (uint64_t)v36, (uint64_t (*)(_QWORD))sub_23117DD88);
      v22 = v37;
      if (v37)
      {
        v23 = sub_231173410(v36, v37);
        v24 = *(_QWORD *)(v22 - 8);
        MEMORY[0x24BDAC7A8](v23);
        v26 = (char *)&v32 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v24 + 16))(v26);
        v27 = sub_231264B40();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v22);
        sub_231173434((uint64_t)v36);
      }
      else
      {
        v27 = 0;
      }
      objc_msgSend(v2, sel_showViewController_sender_, v21, v27);

      return swift_unknownObjectRelease();
    }
    else
    {
      sub_231173434((uint64_t)v36);
      v28 = v32;
      sub_231263B2C();
      v29 = sub_231263B50();
      v30 = sub_2312643D8();
      if (os_log_type_enabled(v29, (os_log_type_t)v30))
      {
        v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v31 = 0;
        _os_log_impl(&dword_23116F000, v29, (os_log_type_t)v30, "Error tapping on NewLabRecords feed item, can't load labs view controller", v31, 2u);
        MEMORY[0x2348D85EC](v31, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v28, v34);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_23118C6C8(_BYTE *a1, uint64_t a2, uint64_t a3, void *a4)
{
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  objc_super v19;

  if (a3)
  {
    sub_23126409C();
    v6 = &a1[qword_255EB8158];
    *(_OWORD *)v6 = 0u;
    *((_OWORD *)v6 + 1) = 0u;
    *((_QWORD *)v6 + 4) = 0;
    v7 = &a1[qword_255EC2038];
    v8 = *MEMORY[0x24BE42848];
    v9 = sub_23126346C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
    a1[qword_255EC2040] = 1;
    v10 = a4;
    v11 = (void *)sub_23126406C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = &a1[qword_255EB8158];
    *(_OWORD *)v12 = 0u;
    *((_OWORD *)v12 + 1) = 0u;
    *((_QWORD *)v12 + 4) = 0;
    v13 = &a1[qword_255EC2038];
    v14 = *MEMORY[0x24BE42848];
    v15 = sub_23126346C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v13, v14, v15);
    a1[qword_255EC2040] = 1;
    v16 = a4;
    v11 = 0;
  }
  v19.receiver = a1;
  v19.super_class = (Class)type metadata accessor for NewRecordsLabFeedItemViewController();
  v17 = objc_msgSendSuper2(&v19, sel_initWithNibName_bundle_, v11, a4);

  return v17;
}

id sub_23118C830(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  objc_super v10;

  v5 = &a1[qword_255EB8158];
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((_QWORD *)v5 + 4) = 0;
  v6 = &a1[qword_255EC2038];
  v7 = *MEMORY[0x24BE42848];
  v8 = sub_23126346C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v6, v7, v8);
  a1[qword_255EC2040] = 1;
  v10.receiver = a1;
  v10.super_class = (Class)type metadata accessor for NewRecordsLabFeedItemViewController();
  return objc_msgSendSuper2(&v10, sel_initWithCoder_, a3);
}

uint64_t sub_23118C8E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23118CCC4(v0 + qword_255EB8158);
  v1 = v0 + qword_255EC2038;
  v2 = sub_23126346C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

id sub_23118C92C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NewRecordsLabFeedItemViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23118C960(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_23118CCC4(a1 + qword_255EB8158);
  v2 = a1 + qword_255EC2038;
  v3 = sub_23126346C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t type metadata accessor for NewRecordsLabFeedItemViewController()
{
  uint64_t result;

  result = qword_255EB8188;
  if (!qword_255EB8188)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23118C9EC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23126346C();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23118CA6C()
{
  return type metadata accessor for NewRecordsLabFeedItemViewController();
}

uint64_t sub_23118CA7C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + qword_255EC2038;
  v4 = sub_23126346C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23118CAC4@<X0>(uint64_t a1@<X8>)
{
  return sub_23118BB54(a1);
}

uint64_t sub_23118CAE4(uint64_t a1)
{
  MEMORY[0x2348D8544](&unk_231266318, a1);
  MEMORY[0x2348D8544](&protocol conformance descriptor for BaseFeedItemViewController<A>, a1);
  return sub_2312637CC() & 1;
}

uint64_t sub_23118CB44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BE49600];
  v3 = sub_231262E3C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_23118CB88()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v9[24];
  _QWORD v10[3];
  uint64_t v11;

  v1 = *v0 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *(_QWORD *)*v0) + 0x70);
  swift_beginAccess();
  result = sub_23118CE48(v1, (uint64_t)v10, (unint64_t *)&qword_2541548B0, (unint64_t *)&qword_2541548A0);
  v3 = v11;
  if (v11)
  {
    v4 = sub_231173410(v10, v11);
    v5 = *(_QWORD *)(v3 - 8);
    MEMORY[0x24BDAC7A8](v4);
    v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(_BYTE *))(v5 + 16))(v7);
    v8 = sub_23126376C();
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v3);
    sub_231173434((uint64_t)v10);
    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23118CCA0()
{
  return sub_23118CD98(&qword_255EB8330, (uint64_t)&unk_231266298);
}

uint64_t sub_23118CCC4(uint64_t a1)
{
  uint64_t v2;

  sub_231178754(0, &qword_255EB7C98, (unint64_t *)&unk_255EB8F80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23118CD18()
{
  unint64_t result;

  result = qword_255EB8338;
  if (!qword_255EB8338)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255EB8338);
  }
  return result;
}

uint64_t sub_23118CD54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NewLabsFeedItemData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23118CD98(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for NewRecordsLabFeedItemViewController();
    result = MEMORY[0x2348D8544](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_23118CDD8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255EB8350)
  {
    sub_231261E40();
    sub_231263580();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255EB8350);
  }
}

uint64_t sub_23118CE48(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4)
{
  uint64_t v6;

  sub_231178754(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_23118CE98(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_23118CEDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_231178754(0, &qword_255EB7C98, (unint64_t *)&unk_255EB8F80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

char *sub_23118CF38(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  void *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  void (*v48)(_QWORD, _QWORD);
  uint64_t v49;
  uint64_t v50;
  void (*v51)(_QWORD, _QWORD);
  id v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void (**v62)(_QWORD, _QWORD);
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (**v91)(_QWORD, _QWORD);
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  char *v101;
  uint64_t v102;
  void (**v103)(_QWORD, _QWORD);
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD v126[4];

  v2 = (char *)v1;
  v115 = *v1;
  v122 = type metadata accessor for HealthRecordsGeneratorContext();
  v4 = *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64);
  v111 = *(_QWORD *)(v122 - 8);
  v112 = v4;
  MEMORY[0x24BDAC7A8](v122);
  v110 = (uint64_t)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23118AE44(0);
  MEMORY[0x24BDAC7A8](v6);
  v105 = (char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_2312644C8();
  v107 = *(_QWORD *)(v108 - 8);
  MEMORY[0x24BDAC7A8](v108);
  v104 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23118E6D4();
  v10 = *(_QWORD *)(v9 - 8);
  v113 = v9;
  v114 = v10;
  MEMORY[0x24BDAC7A8](v9);
  v106 = (char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23118E930();
  v117 = v12;
  v119 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v109 = (char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23118E9C4();
  v118 = v14;
  v120 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v116 = (char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23118AE60();
  v102 = v16;
  v103 = *(void (***)(_QWORD, _QWORD))(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v101 = (char *)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23118E79C();
  v124 = v18;
  v121 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v123 = (char *)&v84 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_231264534();
  v98 = *(_QWORD *)(v96 - 8);
  MEMORY[0x24BDAC7A8](v96);
  v93 = (char *)&v84 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23118B49C(0, (unint64_t *)&qword_254155570, v21, (void (*)(void))sub_23118EB84);
  v95 = v22;
  v97 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v94 = (char *)&v84 - v23;
  sub_23118B464(0);
  v89 = v24;
  v91 = *(void (***)(_QWORD, _QWORD))(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v84 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23118B49C(0, &qword_254155560, v27, (void (*)(void))sub_23118B508);
  v88 = v28;
  v90 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v84 - v29;
  v86 = sub_2312621DC();
  v84 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86);
  v32 = (char *)&v84 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_2312621F4();
  v85 = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87);
  v34 = (char *)&v84 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC13HealthRecords41AccountStatusSummaryTileGeneratorPipeline_observerToken) = 0;
  sub_23126220C();
  sub_231173410(v126, v126[3]);
  sub_231262194();
  sub_231263208();
  swift_allocObject();
  v125 = sub_2312631E4();
  sub_231173434((uint64_t)v126);
  v99 = a1;
  sub_2311733CC(a1, (uint64_t)v1 + OBJC_IVAR____TtC13HealthRecords41AccountStatusSummaryTileGeneratorPipeline_context);
  sub_231262230();
  sub_2311735E0(0, &qword_254155718, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v35 = sub_231261FA8();
  v36 = *(_QWORD *)(v35 - 8);
  v37 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  v38 = swift_allocObject();
  v100 = xmmword_231265AC0;
  *(_OWORD *)(v38 + 16) = xmmword_231265AC0;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v36 + 104))(v38 + v37, *MEMORY[0x24BE474A0], v35);
  (*(void (**)(char *, _QWORD, uint64_t))(v84 + 104))(v32, *MEMORY[0x24BE47910], v86);
  sub_2312621E8();
  (*(void (**)(uint64_t, char *, uint64_t))(v85 + 32))((uint64_t)v1 + OBJC_IVAR____TtC13HealthRecords41AccountStatusSummaryTileGeneratorPipeline_domain, v34, v87);
  v39 = objc_allocWithZone((Class)sub_231262EC0());
  *(_QWORD *)((char *)v1
            + OBJC_IVAR____TtC13HealthRecords41AccountStatusSummaryTileGeneratorPipeline_accountStateChangeListener) = sub_231262EB4();
  sub_231262EA8();
  sub_23118B508();
  v40 = v89;
  sub_231263E80();
  ((void (**)(char *, uint64_t))v91)[1](v26, v40);
  sub_23118B524();
  v41 = v88;
  v42 = sub_231263E38();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v30, v41);
  *(_QWORD *)((char *)v1
            + OBJC_IVAR____TtC13HealthRecords41AccountStatusSummaryTileGeneratorPipeline_accountStateChangePublisher) = v42;
  v91 = (void (**)(_QWORD, _QWORD))objc_opt_self();
  v43 = objc_msgSend(v91, sel_defaultCenter);
  v44 = (void *)sub_231264510();
  v45 = v93;
  sub_231264540();

  v90 = sub_23118EB84();
  swift_retain();
  v46 = v94;
  v47 = v96;
  sub_231263E80();
  swift_release();
  v48 = *(void (**)(_QWORD, _QWORD))(v98 + 8);
  v48(v45, v47);
  sub_23118EBBC();
  v49 = v95;
  v50 = sub_231263E38();
  v51 = *(void (**)(_QWORD, _QWORD))(v97 + 8);
  v51(v46, v49);
  *(_QWORD *)&v2[OBJC_IVAR____TtC13HealthRecords41AccountStatusSummaryTileGeneratorPipeline_accountStatusSummaryTileDidDismissPublisher] = v50;
  v52 = objc_msgSend(v91, sel_defaultCenter);
  v53 = (void *)sub_23126451C();
  sub_231264540();

  swift_retain();
  sub_231263E80();
  swift_release();
  v48(v45, v47);
  v54 = sub_231263E38();
  v51(v46, v49);
  *(_QWORD *)&v2[OBJC_IVAR____TtC13HealthRecords41AccountStatusSummaryTileGeneratorPipeline_accountStatusSummaryTileShouldResetPublisher] = v54;
  sub_2311735E0(0, &qword_254155740, (uint64_t (*)(uint64_t))sub_231173008, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = xmmword_231265B40;
  v56 = v2;
  v57 = *(_QWORD *)&v2[OBJC_IVAR____TtC13HealthRecords41AccountStatusSummaryTileGeneratorPipeline_accountStateChangePublisher];
  v58 = *(_QWORD *)&v56[OBJC_IVAR____TtC13HealthRecords41AccountStatusSummaryTileGeneratorPipeline_accountStatusSummaryTileDidDismissPublisher];
  v92 = v56;
  *(_QWORD *)(v55 + 32) = v57;
  *(_QWORD *)(v55 + 40) = v58;
  *(_QWORD *)(v55 + 48) = v54;
  v126[0] = v55;
  sub_231264210();
  sub_231173008();
  sub_2311735E0(0, &qword_254155658, (uint64_t (*)(uint64_t))sub_231173008, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_231172048((unint64_t *)&qword_2541555A8, (uint64_t (*)(uint64_t))sub_231173008, MEMORY[0x24BDB9AF8]);
  sub_23118B160();
  swift_retain();
  swift_retain();
  swift_retain();
  v59 = v101;
  sub_231263CDC();
  sub_231172048(&qword_254155598, (uint64_t (*)(uint64_t))sub_23118AE60, MEMORY[0x24BDB99D8]);
  v60 = v102;
  sub_231263EEC();
  ((void (**)(char *, uint64_t))v103)[1](v59, v60);
  v61 = v99;
  v62 = (void (**)(_QWORD, _QWORD))sub_231262254();
  v103 = v62;
  v63 = v104;
  sub_2312644BC();
  v126[0] = v62;
  v64 = sub_2312644B0();
  v65 = (uint64_t)v105;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v105, 1, 1, v64);
  sub_23117306C();
  sub_231172048(&qword_254155538, (uint64_t (*)(uint64_t))sub_23118E79C, MEMORY[0x24BDB9530]);
  sub_231172048((unint64_t *)&qword_2541556F8, (uint64_t (*)(uint64_t))sub_23117306C, MEMORY[0x24BEE5670]);
  v66 = v106;
  sub_231263F04();
  sub_231178498(v65, (uint64_t (*)(_QWORD))sub_23118AE44);
  (*(void (**)(char *, uint64_t))(v107 + 8))(v63, v108);
  v67 = v110;
  sub_2311733CC(v61, v110);
  v68 = (*(unsigned __int8 *)(v111 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v111 + 80);
  v69 = (v112 + v68 + 7) & 0xFFFFFFFFFFFFFFF8;
  v70 = swift_allocObject();
  sub_23117353C(v67, v70 + v68);
  v71 = v125;
  *(_QWORD *)(v70 + v69) = v125;
  *(_QWORD *)(v70 + ((v69 + 15) & 0xFFFFFFFFFFFFFFF8)) = v115;
  sub_23117313C();
  sub_231172048(&qword_2541544D8, (uint64_t (*)(uint64_t))sub_23118E6D4, MEMORY[0x24BDB9920]);
  swift_retain();
  v72 = v109;
  v73 = v113;
  sub_231263E80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v114 + 8))(v66, v73);
  sub_2311735E0(0, &qword_254155730, (uint64_t (*)(uint64_t))sub_23117313C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v74 = swift_allocObject();
  *(_OWORD *)(v74 + 16) = v100;
  sub_2311733CC(v61, v67);
  v75 = type metadata accessor for AccountStatusSummaryTileGenerator();
  swift_allocObject();
  swift_retain();
  v76 = sub_2311A1410(v67, v71);
  swift_release();
  *(_QWORD *)(v74 + 56) = v75;
  *(_QWORD *)(v74 + 64) = sub_231172048(&qword_2541539B0, (uint64_t (*)(uint64_t))type metadata accessor for AccountStatusSummaryTileGenerator, (uint64_t)&unk_2312667D4);
  *(_QWORD *)(v74 + 32) = v76;
  sub_231172048(&qword_2541541F0, (uint64_t (*)(uint64_t))sub_23118E930, MEMORY[0x24BDB96C0]);
  v78 = v116;
  v77 = v117;
  sub_231263EEC();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v119 + 8))(v72, v77);
  sub_231172048(&qword_254154040, (uint64_t (*)(uint64_t))sub_23118E9C4, MEMORY[0x24BDB9530]);
  v79 = v118;
  v80 = sub_231263E38();
  (*(void (**)(char *, uint64_t))(v120 + 8))(v78, v79);
  v81 = v92;
  *((_QWORD *)v92 + 2) = v80;
  objc_msgSend(*(id *)&v81[OBJC_IVAR____TtC13HealthRecords41AccountStatusSummaryTileGeneratorPipeline_context + *(int *)(v122 + 20)], sel_addAccountStateChangeListener_, *(_QWORD *)&v81[OBJC_IVAR____TtC13HealthRecords41AccountStatusSummaryTileGeneratorPipeline_accountStateChangeListener]);
  swift_allocObject();
  swift_weakInit();
  sub_231262A70();
  swift_allocObject();
  v82 = sub_231262A58();
  swift_release();

  sub_231178498(v61, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
  (*(void (**)(char *, uint64_t))(v121 + 8))(v123, v124);
  *(_QWORD *)&v81[OBJC_IVAR____TtC13HealthRecords41AccountStatusSummaryTileGeneratorPipeline_observerToken] = v82;
  swift_release();
  return v81;
}

unint64_t sub_23118DD00(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t result;
  int64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  char v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[40];
  _OWORD v28[2];
  _OWORD v29[2];
  uint64_t v30;
  _OWORD v31[2];
  _OWORD v32[2];
  uint64_t v33;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_23118EDAC();
    v1 = (_QWORD *)sub_2312649E4();
  }
  else
  {
    v1 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v23 = a1 + 64;
  v2 = -1;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v2 = ~(-1 << -(char)v3);
  v4 = v2 & *(_QWORD *)(a1 + 64);
  v22 = (unint64_t)(63 - v3) >> 6;
  result = swift_bridgeObjectRetain();
  v6 = 0;
  while (1)
  {
    if (v4)
    {
      v10 = (v4 - 1) & v4;
      v11 = __clz(__rbit64(v4)) | (v6 << 6);
      v12 = v6;
    }
    else
    {
      v13 = v6 + 1;
      if (__OFADD__(v6, 1))
        goto LABEL_40;
      if (v13 >= v22)
      {
LABEL_36:
        sub_23118EEB4();
        return (unint64_t)v1;
      }
      v14 = *(_QWORD *)(v23 + 8 * v13);
      v12 = v6 + 1;
      if (!v14)
      {
        v12 = v6 + 2;
        if (v6 + 2 >= v22)
          goto LABEL_36;
        v14 = *(_QWORD *)(v23 + 8 * v12);
        if (!v14)
        {
          v12 = v6 + 3;
          if (v6 + 3 >= v22)
            goto LABEL_36;
          v14 = *(_QWORD *)(v23 + 8 * v12);
          if (!v14)
          {
            v12 = v6 + 4;
            if (v6 + 4 >= v22)
              goto LABEL_36;
            v14 = *(_QWORD *)(v23 + 8 * v12);
            if (!v14)
            {
              v15 = v6 + 5;
              if (v6 + 5 >= v22)
                goto LABEL_36;
              v14 = *(_QWORD *)(v23 + 8 * v15);
              if (!v14)
              {
                while (1)
                {
                  v12 = v15 + 1;
                  if (__OFADD__(v15, 1))
                    goto LABEL_41;
                  if (v12 >= v22)
                    goto LABEL_36;
                  v14 = *(_QWORD *)(v23 + 8 * v12);
                  ++v15;
                  if (v14)
                    goto LABEL_26;
                }
              }
              v12 = v6 + 5;
            }
          }
        }
      }
LABEL_26:
      v10 = (v14 - 1) & v14;
      v11 = __clz(__rbit64(v14)) + (v12 << 6);
    }
    sub_23118EE0C(*(_QWORD *)(a1 + 48) + 40 * v11, (uint64_t)v31);
    sub_23117EC64(*(_QWORD *)(a1 + 56) + 32 * v11, (uint64_t)v32 + 8);
    v29[0] = v32[0];
    v29[1] = v32[1];
    v30 = v33;
    v28[0] = v31[0];
    v28[1] = v31[1];
    sub_23118EE0C((uint64_t)v28, (uint64_t)v27);
    if (!swift_dynamicCast())
    {
      sub_231178498((uint64_t)v28, (uint64_t (*)(_QWORD))sub_23118EE48);
LABEL_35:
      swift_bridgeObjectRelease();
      sub_23118EEB4();
      swift_release();
      return 0;
    }
    sub_23117EC64((uint64_t)v29 + 8, (uint64_t)v27);
    sub_231178498((uint64_t)v28, (uint64_t (*)(_QWORD))sub_23118EE48);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    result = sub_231242CA8(v25, v26);
    if ((v16 & 1) != 0)
    {
      v7 = 16 * result;
      v8 = (uint64_t *)(v1[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v8 = v25;
      v8[1] = v26;
      v9 = (uint64_t *)(v1[7] + v7);
      result = swift_bridgeObjectRelease();
      *v9 = v25;
      v9[1] = v26;
      goto LABEL_8;
    }
    if (v1[2] >= v1[3])
      break;
    *(_QWORD *)((char *)v1 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v17 = (uint64_t *)(v1[6] + 16 * result);
    *v17 = v25;
    v17[1] = v26;
    v18 = (uint64_t *)(v1[7] + 16 * result);
    *v18 = v25;
    v18[1] = v26;
    v19 = v1[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_39;
    v1[2] = v21;
LABEL_8:
    v6 = v12;
    v4 = v10;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_23118E0C4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  unint64_t v3;

  result = sub_231261CD8();
  if (result)
  {
    v3 = sub_23118DD00(result);
    result = swift_bridgeObjectRelease();
    if (v3)
    {
      sub_2312631D8();
      swift_bridgeObjectRelease();
      result = swift_release();
    }
  }
  *a1 = 1;
  return result;
}

uint64_t sub_23118E148@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;

  v8 = type metadata accessor for HealthRecordsGeneratorContext();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_231263B5C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231263B08();
  v15 = sub_231263B50();
  v16 = sub_2312643CC();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v32 = a4;
    v18 = v17;
    v19 = swift_slowAlloc();
    v30 = v11;
    v20 = v19;
    v33 = v19;
    v34 = a3;
    *(_DWORD *)v18 = 136446466;
    v31 = a1;
    swift_getMetatypeMetadata();
    v21 = sub_2312640B4();
    v34 = sub_2311CBDE4(v21, v22, &v33);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2082;
    v34 = type metadata accessor for AccountStatusSummaryTileGenerator();
    sub_23118ED74();
    v23 = sub_2312640B4();
    v34 = sub_2311CBDE4(v23, v24, &v33);
    a1 = v31;
    sub_231264750();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23116F000, v15, v16, "[%{public}s]: Emitting %{public}s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v20, -1, -1);
    v25 = v18;
    a4 = v32;
    MEMORY[0x2348D85EC](v25, -1, -1);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v30);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  sub_2311733CC(a1, (uint64_t)v10);
  v26 = type metadata accessor for AccountStatusSummaryTileGenerator();
  swift_allocObject();
  swift_retain();
  v27 = sub_2311A1410((uint64_t)v10, a2);
  swift_release();
  a4[3] = v26;
  result = sub_231172048(&qword_2541539B0, (uint64_t (*)(uint64_t))type metadata accessor for AccountStatusSummaryTileGenerator, (uint64_t)&unk_2312667D4);
  a4[4] = result;
  *a4 = v27;
  return result;
}

uint64_t sub_23118E40C()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    objc_msgSend(*(id *)(result+ OBJC_IVAR____TtC13HealthRecords41AccountStatusSummaryTileGeneratorPipeline_context+ *(int *)(type metadata accessor for HealthRecordsGeneratorContext() + 20)), sel_removeAccountStateChangeListener_, *(_QWORD *)(result+ OBJC_IVAR____TtC13HealthRecords41AccountStatusSummaryTileGeneratorPipeline_accountStateChangeListener));
    return swift_release();
  }
  return result;
}

uint64_t sub_23118E490()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC13HealthRecords41AccountStatusSummaryTileGeneratorPipeline_observerToken))
  {
    swift_retain();
    sub_231262A64();
    swift_release();
  }
  swift_release();
  v2 = v0 + OBJC_IVAR____TtC13HealthRecords41AccountStatusSummaryTileGeneratorPipeline_domain;
  v3 = sub_2312621F4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  sub_231178498(v1 + OBJC_IVAR____TtC13HealthRecords41AccountStatusSummaryTileGeneratorPipeline_context, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
  objc_release(*(id *)(v1
                     + OBJC_IVAR____TtC13HealthRecords41AccountStatusSummaryTileGeneratorPipeline_accountStateChangeListener));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_23118E56C()
{
  sub_23118E490();
  return swift_deallocClassInstance();
}

uint64_t sub_23118E590()
{
  return type metadata accessor for AccountStatusSummaryTileGeneratorPipeline();
}

uint64_t type metadata accessor for AccountStatusSummaryTileGeneratorPipeline()
{
  uint64_t result;

  result = qword_254153C78;
  if (!qword_254153C78)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23118E5D4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2312621F4();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for HealthRecordsGeneratorContext();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_23118E68C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC13HealthRecords41AccountStatusSummaryTileGeneratorPipeline_domain;
  v4 = sub_2312621F4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void sub_23118E6D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541544E0)
  {
    sub_23118E79C();
    sub_23117306C();
    sub_231172048(&qword_254155538, (uint64_t (*)(uint64_t))sub_23118E79C, MEMORY[0x24BDB9530]);
    sub_231172048((unint64_t *)&qword_2541556F8, (uint64_t (*)(uint64_t))sub_23117306C, MEMORY[0x24BEE5670]);
    v0 = sub_231263CAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541544E0);
  }
}

void sub_23118E79C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254155540)
  {
    sub_23118EA88(255, &qword_254155590, (void (*)(uint64_t))sub_23118E860, (void (*)(void))sub_23118E8B4);
    sub_23118AE60();
    sub_23118E8D0();
    sub_231172048(&qword_254155598, (uint64_t (*)(uint64_t))sub_23118AE60, MEMORY[0x24BDB99D8]);
    v0 = sub_231263BC8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254155540);
  }
}

void sub_23118E860()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541556A0)
  {
    v0 = sub_231264270();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541556A0);
  }
}

uint64_t sub_23118E8B4()
{
  return sub_231172048(&qword_2541556A8, (uint64_t (*)(uint64_t))sub_23118E860, MEMORY[0x24BEE12C8]);
}

unint64_t sub_23118E8D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254155588;
  if (!qword_254155588)
  {
    sub_23118EA88(255, &qword_254155590, (void (*)(uint64_t))sub_23118E860, (void (*)(void))sub_23118E8B4);
    result = MEMORY[0x2348D8544](MEMORY[0x24BDB9970], v1);
    atomic_store(result, (unint64_t *)&qword_254155588);
  }
  return result;
}

void sub_23118E930()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541541F8)
  {
    sub_23118E6D4();
    sub_23117313C();
    sub_231172048(&qword_2541544D8, (uint64_t (*)(uint64_t))sub_23118E6D4, MEMORY[0x24BDB9920]);
    v0 = sub_231263C1C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541541F8);
  }
}

void sub_23118E9C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254154048)
  {
    sub_23118EA88(255, (unint64_t *)&qword_254155580, sub_23118EB08, (void (*)(void))sub_2311732EC);
    sub_23118E930();
    sub_23118EB24();
    sub_231172048(&qword_2541541F0, (uint64_t (*)(uint64_t))sub_23118E930, MEMORY[0x24BDB96C0]);
    v0 = sub_231263BC8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254154048);
  }
}

void sub_23118EA88(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4();
    v6 = sub_231263CC4();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_23118EB08(uint64_t a1)
{
  sub_2311735E0(a1, &qword_254155640, (uint64_t (*)(uint64_t))sub_23117313C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
}

unint64_t sub_23118EB24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254155578;
  if (!qword_254155578)
  {
    sub_23118EA88(255, (unint64_t *)&qword_254155580, sub_23118EB08, (void (*)(void))sub_2311732EC);
    result = MEMORY[0x2348D8544](MEMORY[0x24BDB9970], v1);
    atomic_store(result, (unint64_t *)&qword_254155578);
  }
  return result;
}

uint64_t sub_23118EB84()
{
  return sub_231172048(&qword_254155700, (uint64_t (*)(uint64_t))MEMORY[0x24BDD0078], MEMORY[0x24BDD0070]);
}

uint64_t sub_23118EBA0@<X0>(_BYTE *a1@<X8>)
{
  return sub_23118E0C4(a1);
}

unint64_t sub_23118EBBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254155568;
  if (!qword_254155568)
  {
    sub_23118B49C(255, (unint64_t *)&qword_254155570, (void (*)(uint64_t))MEMORY[0x24BDD0078], (void (*)(void))sub_23118EB84);
    result = MEMORY[0x2348D8544](MEMORY[0x24BDB96C0], v1);
    atomic_store(result, (unint64_t *)&qword_254155568);
  }
  return result;
}

uint64_t sub_23118EC1C@<X0>(_BYTE *a1@<X8>)
{
  return sub_23118E0C4(a1);
}

uint64_t sub_23118EC38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for HealthRecordsGeneratorContext();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_23126226C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23118ECDC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23118E148(v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFF8)), a1);
}

uint64_t sub_23118ED48()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23118ED6C()
{
  return sub_23118E40C();
}

unint64_t sub_23118ED74()
{
  unint64_t result;

  result = qword_254153A78;
  if (!qword_254153A78)
  {
    type metadata accessor for AccountStatusSummaryTileGenerator();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_254153A78);
  }
  return result;
}

void sub_23118EDAC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255EB8358)
  {
    v0 = sub_2312649F0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255EB8358);
  }
}

uint64_t sub_23118EE0C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

void sub_23118EE48()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255EB8360)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255EB8360);
  }
}

uint64_t sub_23118EEB4()
{
  return swift_release();
}

uint64_t sub_23118EEBC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void *v16;
  id v17;
  void *v18;
  void *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  _QWORD v36[4];

  v32 = *v1;
  v33 = sub_231263B5C();
  v3 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v34 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23126226C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for HealthRecordsGeneratorContext();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v31 - v13;
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v15(v8, a1, v5);
  v15(v12, (uint64_t)v8, v5);
  sub_23126220C();
  sub_231173410(v36, v36[3]);
  v16 = (void *)sub_231262194();
  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE489E0]), sel_initWithHealthStore_, v16);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_231173434((uint64_t)v36);
  *(_QWORD *)&v12[*(int *)(v9 + 20)] = v17;
  sub_23117353C((uint64_t)v12, (uint64_t)v14);
  v18 = (void *)sub_231262230();
  v19 = (void *)sub_231262014();
  LOBYTE(v5) = sub_231262008();

  if ((v5 & 1) != 0)
  {
    v20 = v32;
    sub_231263B38();
    v21 = sub_231263B50();
    v22 = sub_2312643F0();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v35 = v24;
      v36[0] = v20;
      *(_DWORD *)v23 = 136315138;
      swift_getMetatypeMetadata();
      v25 = sub_2312640B4();
      v36[0] = sub_2311CBDE4(v25, v26, &v35);
      sub_231264750();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23116F000, v21, v22, "[%s]: Returning CHI sharable model pipeline for primary profile", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348D85EC](v24, -1, -1);
      MEMORY[0x2348D85EC](v23, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v34, v33);
    sub_23118F23C();
    v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_231265AC0;
    sub_2311733CC((uint64_t)v14, (uint64_t)v12);
    v28 = type metadata accessor for ConceptSharableModelPipeline();
    swift_allocObject();
    v29 = sub_23121E0B8((uint64_t)v12);
    *(_QWORD *)(v27 + 56) = v28;
    *(_QWORD *)(v27 + 64) = sub_23118F2E4();
    *(_QWORD *)(v27 + 32) = v29;
  }
  else
  {
    v27 = MEMORY[0x24BEE4AF8];
  }
  sub_231173638((uint64_t)v14);
  return v27;
}

void sub_23118F23C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254153238)
  {
    sub_23118F290();
    v0 = sub_231264B34();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254153238);
  }
}

unint64_t sub_23118F290()
{
  unint64_t result;

  result = qword_2541518C0;
  if (!qword_2541518C0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_2541518C0);
  }
  return result;
}

unint64_t sub_23118F2E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254152518;
  if (!qword_254152518)
  {
    v1 = type metadata accessor for ConceptSharableModelPipeline();
    result = MEMORY[0x2348D8544](&unk_23126A3D0, v1);
    atomic_store(result, (unint64_t *)&qword_254152518);
  }
  return result;
}

uint64_t sub_23118F32C(void (*a1)(uint64_t, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t *);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = v3;
  v19 = a1;
  v20 = a2;
  v18 = sub_23126217C();
  v6 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = MEMORY[0x24BEE4AF8];
  if (v9)
  {
    v22 = MEMORY[0x24BEE4AF8];
    sub_2311992BC(0, v9, 0);
    v10 = v22;
    v11 = *(_QWORD *)(sub_231262FC8() - 8);
    v12 = a3 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v17 = *(_QWORD *)(v11 + 72);
    while (1)
    {
      v19(v12, &v21);
      if (v4)
        break;
      v4 = 0;
      v22 = v10;
      v14 = *(_QWORD *)(v10 + 16);
      v13 = *(_QWORD *)(v10 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_2311992BC(v13 > 1, v14 + 1, 1);
        v10 = v22;
      }
      *(_QWORD *)(v10 + 16) = v14 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v14, v8, v18);
      v12 += v17;
      if (!--v9)
        return v10;
    }
    swift_release();
  }
  return v10;
}

void sub_23118F4A8()
{
  id v0;
  void *v1;
  unsigned int v2;
  void *v3;
  void *v4;
  id v5;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (v0)
  {
    v1 = v0;
    v2 = objc_msgSend(v0, sel_isAppleInternalInstall);

    if (!v2
      || (sub_231178AD0(0, &qword_254153160),
          v3 = (void *)sub_2312643FC(),
          v4 = (void *)sub_23126406C(),
          v5 = objc_msgSend(v3, sel_integerForKey_, v4),
          v3,
          v4,
          !v5)
      || !__OFSUB__(0, v5))
    {
      sub_231261DBC();
      return;
    }
    __break(1u);
  }
  __break(1u);
}

_QWORD *sub_23118F5C4(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;

  v2 = v1;
  v23 = *v1;
  v21 = sub_2312621DC();
  v4 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_2312621F4();
  v7 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231178454(a1, (uint64_t)v1 + OBJC_IVAR____TtC13HealthRecords19AddAccountGenerator_context, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
  v20[1] = sub_231262230();
  sub_2311735E0(0, &qword_254155718, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v10 = sub_231261FA8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_231265AC0;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v11 + 104))(v13 + v12, *MEMORY[0x24BE474E0], v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BE47910], v21);
  sub_2312621E8();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))((uint64_t)v2 + OBJC_IVAR____TtC13HealthRecords19AddAccountGenerator_domain, v9, v22);
  sub_23126220C();
  v14 = v25;
  v15 = v26;
  sub_231173410(v24, v25);
  v16 = sub_23119CE0C(v14, v15);
  type metadata accessor for AddAccountDataProvider();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_231173434((uint64_t)v24);
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC13HealthRecords19AddAccountGenerator_dataProvider) = v17;
  v18 = sub_23118F810(a1, v17);
  sub_231178498(a1, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
  v2[2] = v18;
  return v2;
}

uint64_t sub_23118F810(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  id v29;
  char *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD v73[4];
  void (*v74)(char *, uint64_t);
  id v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  __int128 v112;
  uint64_t v113;

  v82 = a2;
  v86 = sub_23126226C();
  v85 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86);
  v83 = v3;
  v84 = (char *)v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311932A0();
  v89 = v4;
  v88 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v87 = (char *)v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311933D0();
  v92 = v6;
  v91 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v90 = (char *)v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231193464();
  v95 = v8;
  v94 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v93 = (char *)v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231193580();
  v98 = *(_QWORD *)(v10 - 8);
  v99 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v96 = (char *)v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23119362C();
  v100 = *(_QWORD *)(v12 - 8);
  v101 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v97 = (char *)v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311936F4();
  v103 = *(_QWORD *)(v14 - 8);
  v104 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v102 = (char *)v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_231262E3C();
  v105 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78);
  v77 = (char *)v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23119376C();
  v81 = v17;
  v76 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v80 = (char *)v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_231261E94();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v106 = (char *)v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_2312626E0();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)v73 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23126220C();
  (*(void (**)(char *, _QWORD, uint64_t))(v23 + 104))(v25, *MEMORY[0x24BE48DC8], v22);
  v107 = a1;
  v26 = (void *)sub_231262230();
  v27 = (void *)sub_231261FF0();
  v28 = sub_2312626C8();
  if (v27)
  {
    v110 = 0x656C69666F72505BLL;
    v111 = 0xE90000000000003ALL;
    v79 = v28;
    v75 = v27;
    v29 = objc_msgSend(v75, sel_identifier);
    v30 = v106;
    sub_231261E7C();

    sub_231261E58();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v30, v19);
    sub_231264144();
    swift_bridgeObjectRelease();
    sub_231264144();

    v31 = v110;
    v32 = v111;
  }
  else
  {
    v32 = 0x800000023126B610;
    v31 = 0xD000000000000013;
  }
  v110 = v31;
  v111 = v32;
  sub_231264144();

  swift_bridgeObjectRelease();
  v33 = v110;
  v34 = v111;
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  type metadata accessor for FeedItemContextChangeGenerator();
  v35 = swift_allocObject();
  sub_2311789AC(&v112, v35 + 16);
  v79 = v35;
  *(_QWORD *)(v35 + 56) = v33;
  *(_QWORD *)(v35 + 64) = v34;
  sub_23126220C();
  sub_231173410(&v112, v113);
  sub_231262194();
  sub_231263064();
  swift_allocObject();
  v106 = (char *)sub_231263058();
  sub_231173434((uint64_t)&v112);
  v36 = *MEMORY[0x24BE495F8];
  v37 = v105;
  v75 = *(id *)(v105 + 104);
  v38 = v77;
  v39 = v78;
  ((void (*)(char *, uint64_t, uint64_t))v75)(v77, v36, v78);
  v40 = sub_23126304C();
  v74 = *(void (**)(char *, uint64_t))(v37 + 8);
  v74(v38, v39);
  *(_QWORD *)&v112 = v40;
  *(_QWORD *)(swift_allocObject() + 16) = v108;
  sub_231193CA4(0, &qword_254152E78, (uint64_t (*)(uint64_t))sub_23117AA1C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  v73[3] = v41;
  sub_23119336C();
  v43 = v42;
  v73[2] = sub_231193830();
  sub_231172048((unint64_t *)&qword_254152E80, (uint64_t (*)(uint64_t))sub_23119336C, MEMORY[0x24BDB9AF8]);
  v44 = v80;
  v73[1] = v43;
  sub_231263E8C();
  swift_release();
  swift_release();
  sub_231172048(&qword_254152CD8, (uint64_t (*)(uint64_t))sub_23119376C, MEMORY[0x24BDB9740]);
  v45 = v81;
  v105 = sub_231263E38();
  v46 = *(void (**)(char *, uint64_t))(v76 + 8);
  v46(v44, v45);
  ((void (*)(char *, _QWORD, uint64_t))v75)(v38, *MEMORY[0x24BE49620], v39);
  v47 = sub_23126304C();
  v74(v38, v39);
  *(_QWORD *)&v112 = v47;
  *(_QWORD *)(swift_allocObject() + 16) = v108;
  sub_231263E8C();
  swift_release();
  swift_release();
  v48 = sub_231263E38();
  v46(v44, v45);
  *(_QWORD *)&v112 = sub_23126457C();
  v109 = v48;
  v110 = v105;
  sub_231173008();
  sub_231172048((unint64_t *)&qword_2541555A8, (uint64_t (*)(uint64_t))sub_231173008, MEMORY[0x24BDB9AF8]);
  swift_retain();
  swift_retain();
  v49 = v87;
  sub_231263BB0();
  v50 = v85;
  v51 = v84;
  v52 = v86;
  (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v84, v107, v86);
  v53 = (*(unsigned __int8 *)(v50 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  v54 = (v83 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
  v55 = swift_allocObject();
  v56 = v108;
  *(_QWORD *)(v55 + 16) = v108;
  (*(void (**)(unint64_t, char *, uint64_t))(v50 + 32))(v55 + v53, v51, v52);
  *(_QWORD *)(v55 + v54) = v56;
  v57 = swift_allocObject();
  *(_QWORD *)(v57 + 16) = sub_23119395C;
  *(_QWORD *)(v57 + 24) = v55;
  sub_2311889BC(0);
  sub_231172048(&qword_254152C18, (uint64_t (*)(uint64_t))sub_2311932A0, MEMORY[0x24BDB9470]);
  v58 = v90;
  v59 = v89;
  sub_231263EBC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v49, v59);
  *(_QWORD *)(swift_allocObject() + 16) = v56;
  sub_231193CA4(0, &qword_254152EF8, (uint64_t (*)(uint64_t))sub_2311889BC, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  v60 = MEMORY[0x24BDB98C8];
  sub_231172048(&qword_254152D78, (uint64_t (*)(uint64_t))sub_2311933D0, MEMORY[0x24BDB98C8]);
  sub_231193520();
  v61 = v93;
  v62 = v92;
  sub_231263E8C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v58, v62);
  sub_231171FD8(0, (unint64_t *)&qword_254155638, MEMORY[0x24BE47F58], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  v63 = MEMORY[0x24BDB9740];
  sub_231172048(&qword_254152D08, (uint64_t (*)(uint64_t))sub_231193464, MEMORY[0x24BDB9740]);
  swift_retain();
  v64 = v96;
  v65 = v95;
  sub_231263EBC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v61, v65);
  *(_QWORD *)(swift_allocObject() + 16) = v56;
  sub_231187D64();
  sub_231172048(&qword_254152D98, (uint64_t (*)(uint64_t))sub_231193580, v60);
  sub_231172048(&qword_254152F30, (uint64_t (*)(uint64_t))sub_231187D64, MEMORY[0x24BDB9AF8]);
  v66 = v97;
  v67 = v99;
  sub_231263E8C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v98 + 8))(v64, v67);
  *(_QWORD *)&v112 = MEMORY[0x24BEE4AF8];
  sub_231172048(&qword_254152D38, (uint64_t (*)(uint64_t))sub_23119362C, v63);
  v68 = v101;
  v69 = v102;
  sub_231263E5C();
  (*(void (**)(char *, uint64_t))(v100 + 8))(v66, v68);
  sub_231172048(&qword_254152C50, (uint64_t (*)(uint64_t))sub_2311936F4, MEMORY[0x24BDB95A8]);
  v70 = v104;
  v71 = sub_231263E38();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v103 + 8))(v69, v70);
  return v71;
}

uint64_t sub_231190440@<X0>(const char *a1@<X2>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v34 = a1;
  sub_23117AA1C();
  v4 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, &qword_255EB8370, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v29 - v11;
  v35 = sub_231263B5C();
  v13 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v15 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231263B20();
  v16 = sub_231263B50();
  v17 = sub_2312643D8();
  if (os_log_type_enabled(v16, v17))
  {
    v32 = v4;
    v18 = swift_slowAlloc();
    v33 = a2;
    v19 = (uint8_t *)v18;
    v20 = swift_slowAlloc();
    v31 = v9;
    v21 = v20;
    v37 = v20;
    v30 = v10;
    *(_DWORD *)v19 = 136446210;
    v29[1] = v19 + 4;
    v36 = sub_231193C90(0);
    sub_23118852C(0, &qword_254151D58, (void (*)(uint64_t))sub_231193C90);
    v22 = sub_2312640B4();
    v36 = sub_2311CBDE4(v22, v23, &v37);
    v10 = v30;
    sub_231264750();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23116F000, v16, v17, v34, v19, 0xCu);
    swift_arrayDestroy();
    v24 = v21;
    v9 = v31;
    MEMORY[0x2348D85EC](v24, -1, -1);
    v25 = v19;
    a2 = v33;
    MEMORY[0x2348D85EC](v25, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v35);
  sub_231261DB0();
  v26 = sub_231261E40();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v6, 0, 1, v26);
  sub_231263D84();
  sub_2311941DC();
  v27 = sub_231263E38();
  result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  *a2 = v27;
  return result;
}

uint64_t sub_2311906FC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  NSObject *v22;
  os_log_type_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  os_log_t v35;
  uint64_t v36;
  uint64_t v38;
  os_log_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;

  v49 = a6;
  v50 = a1;
  sub_23117AA1C();
  v44 = v10;
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v38 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v38 - v17;
  v19 = sub_231263B5C();
  v45 = *(_QWORD *)(v19 - 8);
  v46 = v19;
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231263B20();
  v47 = a2;
  sub_231178454(a2, (uint64_t)v18, (uint64_t (*)(_QWORD))sub_23117AA1C);
  v48 = a3;
  sub_231178454(a3, (uint64_t)v16, (uint64_t (*)(_QWORD))sub_23117AA1C);
  v22 = sub_231263B50();
  v23 = sub_2312643F0();
  v24 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    v25 = swift_slowAlloc();
    v43 = v6;
    v26 = v25;
    v41 = swift_slowAlloc();
    v52 = v41;
    *(_DWORD *)v26 = 136446978;
    v51 = sub_231193C90(0);
    sub_23118852C(0, &qword_254151D58, (void (*)(uint64_t))sub_231193C90);
    v42 = a5;
    v27 = sub_2312640B4();
    v40 = v24;
    v51 = sub_2311CBDE4(v27, v28, &v52);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 2082;
    if ((v50 & 1) != 0)
      v29 = 1702195828;
    else
      v29 = 0x65736C6166;
    if ((v50 & 1) != 0)
      v30 = 0xE400000000000000;
    else
      v30 = 0xE500000000000000;
    v51 = sub_2311CBDE4(v29, v30, &v52);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 22) = 2082;
    sub_231178454((uint64_t)v18, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_23117AA1C);
    v39 = v22;
    v31 = sub_2312640B4();
    v51 = sub_2311CBDE4(v31, v32, &v52);
    sub_231264750();
    swift_bridgeObjectRelease();
    sub_231178498((uint64_t)v18, (uint64_t (*)(_QWORD))sub_23117AA1C);
    *(_WORD *)(v26 + 32) = 2082;
    sub_231178454((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_23117AA1C);
    v33 = sub_2312640B4();
    v51 = sub_2311CBDE4(v33, v34, &v52);
    a5 = v42;
    sub_231264750();
    swift_bridgeObjectRelease();
    sub_231178498((uint64_t)v16, (uint64_t (*)(_QWORD))sub_23117AA1C);
    v35 = v39;
    _os_log_impl(&dword_23116F000, v39, (os_log_type_t)v40, "[%{public}s] (Health records onboarding tile state) Onboardable: %{public}s, General tile dismissal date: %{public}s, Labs tile dismissal date: %{public}s", (uint8_t *)v26, 0x2Au);
    v36 = v41;
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v36, -1, -1);
    MEMORY[0x2348D85EC](v26, -1, -1);

  }
  else
  {
    sub_231178498((uint64_t)v18, (uint64_t (*)(_QWORD))sub_23117AA1C);
    sub_231178498((uint64_t)v16, (uint64_t (*)(_QWORD))sub_23117AA1C);

  }
  (*(void (**)(char *, uint64_t))(v45 + 8))(v21, v46);
  return sub_231190AF4(v50 & 1, v47, v48, a5);
}

uint64_t sub_231190AF4(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[2];

  v8 = sub_231261E40();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
    return MEMORY[0x24BEE4AF8];
  sub_231261E34();
  v12 = sub_231191468(a2, a3, (uint64_t)v11);
  v13 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  MEMORY[0x24BDAC7A8](v13);
  v16[-2] = a4;
  v14 = sub_23118F32C((void (*)(uint64_t, uint64_t *))sub_231193DDC, (uint64_t)&v16[-4], v12);
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_231190C10@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_2311735E0(0, &qword_254153040, (uint64_t (*)(uint64_t))sub_2311889BC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v36 - v7;
  sub_231193CA4(0, &qword_254153250, (uint64_t (*)(uint64_t))sub_2311889BC, MEMORY[0x24BDBA1B0]);
  v10 = v9;
  v44 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v36 - v11;
  v13 = sub_231263B5C();
  v42 = *(_QWORD *)(v13 - 8);
  v43 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a1;
  sub_231263B08();
  v17 = v16;
  v18 = v16;
  v19 = sub_231263B50();
  v20 = sub_2312643D8();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    v38 = v10;
    v22 = v21;
    v37 = swift_slowAlloc();
    v46 = v37;
    *(_DWORD *)v22 = 136446466;
    v39 = v6;
    v45 = sub_231193C90(0);
    sub_23118852C(0, &qword_254151D58, (void (*)(uint64_t))sub_231193C90);
    v40 = v5;
    v23 = sub_2312640B4();
    v41 = a2;
    v45 = sub_2311CBDE4(v23, v24, &v46);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2082;
    v36 = v22 + 14;
    v45 = (uint64_t)v16;
    v25 = v16;
    v26 = v16;
    sub_2311889D8();
    sub_231264B88();
    v27 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_2312647B0();
    swift_unknownObjectRelease();
    v28 = sub_2312640B4();
    v30 = v29;

    v31 = v28;
    v6 = v39;
    v45 = sub_2311CBDE4(v31, v30, &v46);
    sub_231264750();
    v5 = v40;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23116F000, v19, v20, "[%{public}s] Unable to make feed items for commit: %{public}s", (uint8_t *)v22, 0x16u);
    v32 = v37;
    a2 = v41;
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v32, -1, -1);
    v33 = v22;
    v10 = v38;
    MEMORY[0x2348D85EC](v33, -1, -1);
  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v42 + 8))(v15, v43);
  v45 = MEMORY[0x24BEE4AF8];
  sub_2311889BC(0);
  sub_231263D84();
  sub_2311889D8();
  sub_231263D54();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_231193D14();
  v34 = sub_231263E38();
  result = (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v12, v10);
  *a2 = v34;
  return result;
}

uint64_t sub_231190FF8@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  _QWORD *v3;
  void *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;

  v3 = (_QWORD *)(a1 + 16);
  sub_231173410((_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 40));
  sub_231173410(v3, *(_QWORD *)(a1 + 40));
  v4 = (void *)sub_2312621D0();
  sub_2312621C4();

  v5 = sub_23126421C();
  result = swift_bridgeObjectRelease();
  if (!v8)
    *a2 = v5;
  return result;
}

uint64_t sub_2311910DC@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  _QWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  sub_2311885A8();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_231263B5C();
  v37 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  sub_231263B08();
  v13 = v12;
  v14 = v12;
  v15 = sub_231263B50();
  v16 = sub_2312643D8();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v35 = v6;
    v18 = v17;
    v33 = swift_slowAlloc();
    v39 = v33;
    *(_DWORD *)v18 = 136446466;
    v38 = sub_231193C90(0);
    sub_23118852C(0, &qword_254151D58, (void (*)(uint64_t))sub_231193C90);
    v34 = v9;
    v19 = sub_2312640B4();
    v36 = a2;
    v38 = sub_2311CBDE4(v19, v20, &v39);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2082;
    v32[1] = v18 + 14;
    v38 = (uint64_t)v12;
    v21 = v12;
    v22 = v12;
    sub_2311889D8();
    sub_231264B88();
    v23 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_2312647B0();
    swift_unknownObjectRelease();
    v24 = sub_2312640B4();
    v26 = v25;

    v27 = v24;
    a2 = v36;
    v38 = sub_2311CBDE4(v27, v26, &v39);
    sub_231264750();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23116F000, v15, v16, "[%{public}s] Unable to compute desired difference for commit: %{public}s", (uint8_t *)v18, 0x16u);
    v28 = v33;
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v28, -1, -1);
    v29 = v18;
    v6 = v35;
    MEMORY[0x2348D85EC](v29, -1, -1);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v34);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v9);
  }
  v38 = MEMORY[0x24BEE4AF8];
  sub_231171FD8(0, (unint64_t *)&qword_254155638, MEMORY[0x24BE47F58], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_231263D84();
  sub_231172048((unint64_t *)&qword_254153048, (uint64_t (*)(uint64_t))sub_2311885A8, MEMORY[0x24BDB9DF8]);
  v30 = sub_231263E38();
  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v30;
  return result;
}

unint64_t sub_231191468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  char v30;
  void (*v31)(char *, uint64_t);
  char v32;
  void (*v33)(char *, uint64_t);
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  BOOL *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unsigned int v50;
  BOOL v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  BOOL *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(BOOL *, uint64_t, uint64_t);
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  BOOL *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;

  v69 = a3;
  v75 = (char *)a2;
  v72 = sub_231262FC8();
  v74 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v70 = (BOOL *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_231263B5C();
  v67 = *(_QWORD *)(v5 - 8);
  v68 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v71 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23117AA1C();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v66 = (uint64_t)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v61 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v61 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v61 - v16;
  v18 = sub_231261E40();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v20);
  v25 = (char *)&v61 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v61 - v26;
  v73 = (char *)a1;
  sub_231178454(a1, (uint64_t)v17, (uint64_t (*)(_QWORD))sub_23117AA1C);
  v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v28(v17, 1, v18) == 1)
  {
    sub_231178498((uint64_t)v17, (uint64_t (*)(_QWORD))sub_23117AA1C);
    v29 = v75;
    sub_231178454((uint64_t)v75, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_23117AA1C);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v27, v17, v18);
    sub_231261DB0();
    v30 = sub_231261E1C();
    v31 = *(void (**)(char *, uint64_t))(v19 + 8);
    v31(v25, v18);
    v31(v27, v18);
    v29 = v75;
    sub_231178454((uint64_t)v75, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_23117AA1C);
    if ((v30 & 1) != 0)
    {
      sub_231178498((uint64_t)v15, (uint64_t (*)(_QWORD))sub_23117AA1C);
      return MEMORY[0x24BEE4AF8];
    }
  }
  sub_231178454((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(_QWORD))sub_23117AA1C);
  if (v28(v12, 1, v18) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v22, v12, v18);
    sub_231261DB0();
    v32 = sub_231261E1C();
    v33 = *(void (**)(char *, uint64_t))(v19 + 8);
    v33(v25, v18);
    v33(v22, v18);
    sub_231178498((uint64_t)v15, (uint64_t (*)(_QWORD))sub_23117AA1C);
    if ((v32 & 1) == 0)
      goto LABEL_9;
    return MEMORY[0x24BEE4AF8];
  }
  sub_231178498((uint64_t)v12, (uint64_t (*)(_QWORD))sub_23117AA1C);
  sub_231178498((uint64_t)v15, (uint64_t (*)(_QWORD))sub_23117AA1C);
LABEL_9:
  sub_2311735E0(0, &qword_254153500, (uint64_t (*)(uint64_t))MEMORY[0x24BE49778], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v35 = v74;
  v36 = *(_QWORD *)(v74 + 72);
  v37 = (*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
  v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_231265AC0;
  v65 = v37;
  v38 = (BOOL *)(v34 + v37);
  v39 = (uint64_t)v73;
  *v38 = v28(v73, 1, v18) != 1;
  v40 = *MEMORY[0x24BE49768];
  v41 = v72;
  v64 = *(void (**)(BOOL *, uint64_t, uint64_t))(v35 + 104);
  v64(v38, v40, v72);
  v42 = v71;
  sub_231263B20();
  v43 = v66;
  sub_231178454(v39, v66, (uint64_t (*)(_QWORD))sub_23117AA1C);
  v44 = sub_231263B50();
  v45 = sub_2312643F0();
  if (os_log_type_enabled(v44, v45))
  {
    v46 = swift_slowAlloc();
    v63 = v36;
    v47 = v46;
    v62 = swift_slowAlloc();
    v77 = v62;
    *(_DWORD *)v47 = 136446466;
    v76 = sub_231193C90(0);
    sub_23118852C(0, &qword_254151D58, (void (*)(uint64_t))sub_231193C90);
    v48 = sub_2312640B4();
    v76 = sub_2311CBDE4(v48, v49, &v77);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v47 + 12) = 2082;
    v50 = v28((char *)v43, 1, v18);
    v51 = v50 == 1;
    if (v50 == 1)
      v52 = 0x65736C6166;
    else
      v52 = 1702195828;
    if (v51)
      v53 = 0xE500000000000000;
    else
      v53 = 0xE400000000000000;
    v76 = sub_2311CBDE4(v52, v53, &v77);
    v29 = v75;
    sub_231264750();
    swift_bridgeObjectRelease();
    sub_231178498(v43, (uint64_t (*)(_QWORD))sub_23117AA1C);
    _os_log_impl(&dword_23116F000, v44, v45, "[%{public}s] Generating general CHR onboarding tile, hidden in Summary: %{public}s", (uint8_t *)v47, 0x16u);
    v54 = v62;
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v54, -1, -1);
    v55 = v47;
    v36 = v63;
    v41 = v72;
    MEMORY[0x2348D85EC](v55, -1, -1);

    (*(void (**)(char *, uint64_t))(v67 + 8))(v71, v68);
  }
  else
  {
    sub_231178498(v43, (uint64_t (*)(_QWORD))sub_23117AA1C);

    (*(void (**)(char *, uint64_t))(v67 + 8))(v42, v68);
  }
  v56 = sub_2311927DC((uint64_t)v73, v29, v69);
  v57 = v70;
  *v70 = v56 & 1;
  v64(v57, *MEMORY[0x24BE49760], v41);
  v59 = *(_QWORD *)(v34 + 16);
  v58 = *(_QWORD *)(v34 + 24);
  if (v59 >= v58 >> 1)
    v34 = sub_2311DCA24(v58 > 1, v59 + 1, 1, v34);
  *(_QWORD *)(v34 + 16) = v59 + 1;
  (*(void (**)(unint64_t, BOOL *, uint64_t))(v74 + 32))(v34 + v65 + v59 * v36, v57, v41);
  return v34;
}

uint64_t sub_231191AF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t (*v25)(char *, uint64_t);
  int v26;
  int v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t result;
  uint64_t v40;
  unint64_t v41;
  void *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  int v46;
  id v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t inited;
  id v55;
  unint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(unint64_t *, _QWORD);
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t (*v72)(char *, uint64_t);
  void (*v73)(char *, uint64_t, uint64_t);
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  uint64_t v90[5];

  v78 = a3;
  v85 = a2;
  v77 = a4;
  v68 = sub_23126238C();
  v65 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68);
  v66 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_2312623F8();
  v67 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v64 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_231263328();
  MEMORY[0x24BDAC7A8](v7);
  v82 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_231263358();
  v9 = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81);
  v88 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_231262FC8();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v63 - v16;
  sub_2311735E0(0, &qword_254152C00, v18, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v63 - v20;
  v87 = sub_231262CEC();
  v79 = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87);
  v23 = (char *)&v63 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v24(v21, a1, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v21, 0, 1, v11);
  sub_231262CE0();
  v73 = v24;
  v24(v17, a1, v11);
  v74 = v12;
  v25 = *(uint64_t (**)(char *, uint64_t))(v12 + 88);
  v26 = v25(v17, v11);
  v27 = *MEMORY[0x24BE49768];
  v80 = v9;
  v86 = v23;
  v76 = v11;
  v75 = v15;
  v72 = v25;
  v71 = v27;
  if (v26 == v27)
  {
    v28 = (void *)sub_231262230();
    v29 = (void *)sub_231261FF0();

    v30 = MEMORY[0x2348D651C](v29);
  }
  else
  {
    if (v26 != *MEMORY[0x24BE49760])
      goto LABEL_24;
    v32 = (void *)sub_231262230();
    v29 = (void *)sub_231261FF0();

    v30 = MEMORY[0x2348D6528](v29);
  }
  v84 = v30;
  v90[4] = v31;

  sub_231262FA4();
  sub_231262F80();
  sub_231262F74();
  sub_231262FBC();
  v70 = a1;
  sub_231262F8C();
  swift_bridgeObjectRetain();
  v33 = v88;
  sub_23126334C();
  sub_231261C78();
  swift_allocObject();
  sub_231261C6C();
  sub_231172048(&qword_254152BF8, (uint64_t (*)(uint64_t))MEMORY[0x24BE494B8], MEMORY[0x24BE494C0]);
  v35 = v86;
  v34 = v87;
  v36 = v83;
  v37 = sub_231261C60();
  if (v36)
  {
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v80 + 8))(v33, v81);
    result = (*(uint64_t (**)(char *, uint64_t))(v79 + 8))(v35, v34);
    *v78 = v36;
    return result;
  }
  v40 = v37;
  v41 = v38;
  v83 = 0;
  swift_release();
  v42 = (void *)sub_231262230();
  v43 = v70;
  v85 = sub_231262FB0();
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0)
  {
    if (sub_2312649A8())
      sub_231193DF8(MEMORY[0x24BEE4AF8]);
  }
  type metadata accessor for AddAccountFeedItemViewController();
  sub_231172048(&qword_2541533A8, (uint64_t (*)(uint64_t))type metadata accessor for AddAccountFeedItemViewController, MEMORY[0x24BE49888]);
  sub_231262068();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_2311807A0(v40, v41);
  swift_bridgeObjectRelease();
  v44 = v75;
  v45 = v76;
  v73(v75, v43, v76);
  v46 = v72(v44, v45);
  if (v46 == v71)
  {
    (*(void (**)(char *, uint64_t))(v74 + 96))(v44, v45);
    v47 = objc_msgSend((id)objc_opt_self(), sel_allTypes);
    sub_231178AD0(0, &qword_254154610);
    v48 = sub_2312641F8();

    v49 = sub_23124E408(v48);
    swift_bridgeObjectRelease();
    sub_23119242C(v49);
    swift_bridgeObjectRelease();
    sub_2312620E0();
    sub_2312620A4();
    v50 = v69;
    v51 = v68;
    v52 = v67;
    v53 = v86;
LABEL_22:
    (*(void (**)(char *, _QWORD, uint64_t))(v65 + 104))(v66, *MEMORY[0x24BE47C88], v51);
    v58 = v64;
    sub_231262404();
    sub_23126208C();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v58, v50);
    sub_231262F80();
    sub_2312620BC();
    sub_231262F74();
    sub_2312620F8();
    v59 = sub_2312622D8();
    v61 = v60;
    v62 = (void (*)(unint64_t *, _QWORD))sub_23126214C();
    sub_2312519E4(v90, v59, v61);
    swift_bridgeObjectRelease();
    v62(&v89, 0);
    (*(void (**)(char *, uint64_t))(v80 + 8))(v88, v81);
    return (*(uint64_t (**)(char *, uint64_t))(v79 + 8))(v53, v87);
  }
  v53 = v86;
  if (v46 != *MEMORY[0x24BE49760])
  {
    sub_2312620E0();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v44, v45);
LABEL_21:
    v50 = v69;
    v51 = v68;
    v52 = v67;
    goto LABEL_22;
  }
  (*(void (**)(char *, uint64_t))(v74 + 96))(v44, v45);
  sub_231171FD8(0, (unint64_t *)&qword_254154688, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_231265B60;
  v55 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD39E0]), sel_initWithIdentifier_, *MEMORY[0x24BDD2AB8]);
  if (v55)
  {
    *(_QWORD *)(inited + 32) = v55;
    v89 = inited;
    sub_231264210();
    v56 = v89;
    if (v89 >> 62)
    {
      swift_bridgeObjectRetain();
      v57 = sub_2312649A8();
      swift_bridgeObjectRelease();
      if (!v57)
        goto LABEL_20;
    }
    else if (!*(_QWORD *)((v89 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_20:
      swift_bridgeObjectRelease();
      sub_2312620E0();
      sub_2312620A4();
      goto LABEL_21;
    }
    sub_2311D422C(v56);
    goto LABEL_20;
  }
  __break(1u);
LABEL_24:
  result = sub_231264B4C();
  __break(1u);
  return result;
}

uint64_t sub_23119242C(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;

  v1 = a1;
  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (sub_23126481C())
      goto LABEL_3;
LABEL_6:
    v3 = MEMORY[0x24BEE4B08];
    if (v2)
      goto LABEL_4;
LABEL_7:
    v8 = -1 << *(_BYTE *)(v1 + 32);
    v29 = v1 + 56;
    v5 = ~v8;
    v9 = -v8;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v7 = v10 & *(_QWORD *)(v1 + 56);
    swift_bridgeObjectRetain();
    result = swift_retain();
    v6 = 0;
    goto LABEL_11;
  }
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_6;
LABEL_3:
  sub_23119414C();
  v3 = sub_2312648A0();
  if (!v2)
    goto LABEL_7;
LABEL_4:
  swift_bridgeObjectRetain();
  swift_retain();
  sub_2312647EC();
  sub_231178AD0(0, &qword_254154610);
  sub_23117E224((unint64_t *)&unk_254154618, &qword_254154610);
  result = sub_231264360();
  v1 = v31;
  v29 = v32;
  v5 = v33;
  v6 = v34;
  v7 = v35;
LABEL_11:
  v11 = (unint64_t)(v5 + 64) >> 6;
  v12 = v3 + 56;
  while (v1 < 0)
  {
    if (!sub_231264840())
      goto LABEL_45;
    sub_231178AD0(0, &qword_254154610);
    swift_dynamicCast();
    v16 = v30;
LABEL_36:
    result = sub_231264690();
    v22 = -1 << *(_BYTE *)(v3 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      v13 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v13) = v16;
    ++*(_QWORD *)(v3 + 16);
  }
  if (v7)
  {
    v14 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v15 = v14 | (v6 << 6);
LABEL_35:
    v16 = *(void **)(*(_QWORD *)(v1 + 48) + 8 * v15);
    v30 = v16;
    v21 = v16;
    goto LABEL_36;
  }
  v17 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v17 >= v11)
      goto LABEL_45;
    v18 = *(_QWORD *)(v29 + 8 * v17);
    v19 = v6 + 1;
    if (!v18)
    {
      v19 = v6 + 2;
      if (v6 + 2 >= v11)
        goto LABEL_45;
      v18 = *(_QWORD *)(v29 + 8 * v19);
      if (!v18)
      {
        v19 = v6 + 3;
        if (v6 + 3 >= v11)
          goto LABEL_45;
        v18 = *(_QWORD *)(v29 + 8 * v19);
        if (!v18)
        {
          v19 = v6 + 4;
          if (v6 + 4 >= v11)
            goto LABEL_45;
          v18 = *(_QWORD *)(v29 + 8 * v19);
          if (!v18)
          {
            v19 = v6 + 5;
            if (v6 + 5 >= v11)
              goto LABEL_45;
            v18 = *(_QWORD *)(v29 + 8 * v19);
            if (!v18)
            {
              v20 = v6 + 6;
              while (v11 != v20)
              {
                v18 = *(_QWORD *)(v29 + 8 * v20++);
                if (v18)
                {
                  v19 = v20 - 1;
                  goto LABEL_34;
                }
              }
LABEL_45:
              swift_release();
              sub_23118EEB4();
              return v3;
            }
          }
        }
      }
    }
LABEL_34:
    v7 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v19 << 6);
    v6 = v19;
    goto LABEL_35;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_2311927DC(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  uint64_t v50;
  char v51;
  void (*v52)(char *, uint64_t);
  char *v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char *v67;
  NSObject *v68;
  os_log_type_t v69;
  uint8_t *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char *v74;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  v86 = a3;
  v84 = a2;
  v4 = sub_231263B5C();
  v87 = *(_QWORD *)(v4 - 8);
  v88 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v76 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v76 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v76 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v85 = (char *)&v76 - v17;
  sub_23117AA1C();
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_231261E40();
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v76 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v76 - v25;
  v28 = v27;
  sub_231178454(a1, (uint64_t)v20, (uint64_t (*)(_QWORD))sub_23117AA1C);
  v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
  v89 = v21;
  if (v29(v20, 1, v21) == 1)
  {
    sub_231178498((uint64_t)v20, (uint64_t (*)(_QWORD))sub_23117AA1C);
    sub_231263B20();
    v30 = sub_231263B50();
    v31 = sub_2312643F0();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      v33 = swift_slowAlloc();
      v91 = v33;
      *(_DWORD *)v32 = 136446210;
      v90 = sub_231193C90(0);
      sub_23118852C(0, &qword_254151D58, (void (*)(uint64_t))sub_231193C90);
      v34 = sub_2312640B4();
      v90 = sub_2311CBDE4(v34, v35, &v91);
      sub_231264750();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23116F000, v30, v31, "[%{public}s] General CHR Onboarding tile has not been dismissed", v32, 0xCu);
      v36 = 1;
      swift_arrayDestroy();
      MEMORY[0x2348D85EC](v33, -1, -1);
      MEMORY[0x2348D85EC](v32, -1, -1);

      (*(void (**)(char *, uint64_t))(v87 + 8))(v7, v88);
      return v36;
    }

    (*(void (**)(char *, uint64_t))(v87 + 8))(v7, v88);
    return 1;
  }
  v81 = v10;
  v82 = v24;
  v78 = v13;
  v79 = v16;
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v26, v20, v89);
  v83 = v26;
  v37 = sub_2311B76AC((uint64_t)v26);
  v39 = v38;
  v40 = v85;
  sub_231263B20();
  swift_bridgeObjectRetain();
  v41 = sub_231263B50();
  v42 = sub_2312643F0();
  if (os_log_type_enabled(v41, v42))
  {
    v43 = v37;
    v44 = swift_slowAlloc();
    v77 = swift_slowAlloc();
    v91 = v77;
    *(_DWORD *)v44 = 136446466;
    v76 = v44 + 4;
    v90 = sub_231193C90(0);
    sub_23118852C(0, &qword_254151D58, (void (*)(uint64_t))sub_231193C90);
    v45 = sub_2312640B4();
    v80 = v28;
    v90 = sub_2311CBDE4(v45, v46, &v91);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v44 + 12) = 2082;
    swift_bridgeObjectRetain();
    v90 = sub_2311CBDE4(v43, v39, &v91);
    v28 = v80;
    sub_231264750();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23116F000, v41, v42, "[%{public}s] %{public}s elapsed since general tile dismissal", (uint8_t *)v44, 0x16u);
    v47 = v77;
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v47, -1, -1);
    MEMORY[0x2348D85EC](v44, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v48 = *(void (**)(char *, uint64_t))(v87 + 8);
  v48(v40, v88);
  v49 = v82;
  if (v29(v84, 1, v89) != 1)
  {
    v60 = v81;
    sub_231263B20();
    v61 = sub_231263B50();
    v62 = sub_2312643F0();
    if (os_log_type_enabled(v61, v62))
    {
      v80 = v28;
      v63 = (uint8_t *)swift_slowAlloc();
      v64 = swift_slowAlloc();
      v91 = v64;
      *(_DWORD *)v63 = 136446210;
      v90 = sub_231193C90(0);
      sub_23118852C(0, &qword_254151D58, (void (*)(uint64_t))sub_231193C90);
      v65 = sub_2312640B4();
      v90 = sub_2311CBDE4(v65, v66, &v91);
      sub_231264750();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23116F000, v61, v62, "[%{public}s] Labs CHR Onboarding tile has been dismissed", v63, 0xCu);
      v36 = 1;
      swift_arrayDestroy();
      MEMORY[0x2348D85EC](v64, -1, -1);
      MEMORY[0x2348D85EC](v63, -1, -1);

      v48(v60, v88);
      (*(void (**)(char *, uint64_t))(v80 + 8))(v83, v89);
      return v36;
    }

    v48(v60, v88);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v83, v89);
    return 1;
  }
  sub_23118F4A8();
  sub_231172048(&qword_255EB8368, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
  v50 = v89;
  v51 = sub_231264030();
  v52 = *(void (**)(char *, uint64_t))(v28 + 8);
  v52(v49, v50);
  if ((v51 & 1) != 0)
  {
    v53 = v78;
    sub_231263B20();
    v54 = sub_231263B50();
    v55 = sub_2312643F0();
    if (os_log_type_enabled(v54, v55))
    {
      v56 = (uint8_t *)swift_slowAlloc();
      v57 = swift_slowAlloc();
      v91 = v57;
      *(_DWORD *)v56 = 136446210;
      v90 = sub_231193C90(0);
      sub_23118852C(0, &qword_254151D58, (void (*)(uint64_t))sub_231193C90);
      v58 = sub_2312640B4();
      v90 = sub_2311CBDE4(v58, v59, &v91);
      sub_231264750();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23116F000, v54, v55, "[%{public}s] Not enough time elapsed to show Labs CHR Onboarding tile in Summary", v56, 0xCu);
      v36 = 1;
      swift_arrayDestroy();
      MEMORY[0x2348D85EC](v57, -1, -1);
      MEMORY[0x2348D85EC](v56, -1, -1);

      v48(v53, v88);
      v52(v83, v89);
      return v36;
    }

    v48(v53, v88);
    v52(v83, v89);
    return 1;
  }
  v67 = v79;
  sub_231263B20();
  v68 = sub_231263B50();
  v69 = sub_2312643F0();
  if (os_log_type_enabled(v68, v69))
  {
    v70 = (uint8_t *)swift_slowAlloc();
    v71 = swift_slowAlloc();
    v91 = v71;
    *(_DWORD *)v70 = 136446210;
    v90 = sub_231193C90(0);
    sub_23118852C(0, &qword_254151D58, (void (*)(uint64_t))sub_231193C90);
    v72 = sub_2312640B4();
    v90 = sub_2311CBDE4(v72, v73, &v91);
    sub_231264750();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23116F000, v68, v69, "[%{public}s] Generating Labs CHR Onboarding tile in Summary", v70, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v71, -1, -1);
    MEMORY[0x2348D85EC](v70, -1, -1);

    v74 = v79;
  }
  else
  {

    v74 = v67;
  }
  v48(v74, v88);
  v52(v83, v89);
  return 0;
}

uint64_t sub_231193194()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC13HealthRecords19AddAccountGenerator_domain;
  v2 = sub_2312621F4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_231178498(v0 + OBJC_IVAR____TtC13HealthRecords19AddAccountGenerator_context, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_231193214()
{
  return type metadata accessor for AddAccountGenerator();
}

uint64_t type metadata accessor for AddAccountGenerator()
{
  uint64_t result;

  result = qword_254154D70;
  if (!qword_254154D70)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_231193258@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC13HealthRecords19AddAccountGenerator_domain;
  v4 = sub_2312621F4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void sub_2311932A0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  if (!qword_254152C20)
  {
    sub_231173008();
    sub_23119336C();
    v0 = MEMORY[0x24BDB9AF8];
    sub_231172048((unint64_t *)&qword_2541555A8, (uint64_t (*)(uint64_t))sub_231173008, MEMORY[0x24BDB9AF8]);
    sub_231172048((unint64_t *)&qword_254152E80, (uint64_t (*)(uint64_t))sub_23119336C, v0);
    v1 = sub_231263BA4();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_254152C20);
  }
}

void sub_23119336C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254152E88)
  {
    sub_23117AA1C();
    v0 = sub_231263D0C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254152E88);
  }
}

void sub_2311933D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254152D80)
  {
    sub_2311932A0();
    sub_2311889BC(255);
    sub_231172048(&qword_254152C18, (uint64_t (*)(uint64_t))sub_2311932A0, MEMORY[0x24BDB9470]);
    v0 = sub_231263C88();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254152D80);
  }
}

void sub_231193464()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254152D10)
  {
    sub_2311933D0();
    sub_231193CA4(255, &qword_254152EF8, (uint64_t (*)(uint64_t))sub_2311889BC, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_231172048(&qword_254152D78, (uint64_t (*)(uint64_t))sub_2311933D0, MEMORY[0x24BDB98C8]);
    sub_231193520();
    v0 = sub_231263C40();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254152D10);
  }
}

unint64_t sub_231193520()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254152EF0;
  if (!qword_254152EF0)
  {
    sub_231193CA4(255, &qword_254152EF8, (uint64_t (*)(uint64_t))sub_2311889BC, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    result = MEMORY[0x2348D8544](MEMORY[0x24BDB9AF8], v1);
    atomic_store(result, (unint64_t *)&qword_254152EF0);
  }
  return result;
}

void sub_231193580()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254152DA0)
  {
    sub_231193464();
    sub_231171FD8(255, (unint64_t *)&qword_254155638, MEMORY[0x24BE47F58], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    sub_231172048(&qword_254152D08, (uint64_t (*)(uint64_t))sub_231193464, MEMORY[0x24BDB9740]);
    v0 = sub_231263C88();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254152DA0);
  }
}

void sub_23119362C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254152D40)
  {
    sub_231193580();
    sub_231187D64();
    sub_231172048(&qword_254152D98, (uint64_t (*)(uint64_t))sub_231193580, MEMORY[0x24BDB98C8]);
    sub_231172048(&qword_254152F30, (uint64_t (*)(uint64_t))sub_231187D64, MEMORY[0x24BDB9AF8]);
    v0 = sub_231263C40();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254152D40);
  }
}

void sub_2311936F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254152C58)
  {
    sub_23119362C();
    sub_231172048(&qword_254152D38, (uint64_t (*)(uint64_t))sub_23119362C, MEMORY[0x24BDB9740]);
    v0 = sub_231263BE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254152C58);
  }
}

void sub_23119376C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254152CE0)
  {
    sub_231193CA4(255, &qword_254152E78, (uint64_t (*)(uint64_t))sub_23117AA1C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_23119336C();
    sub_231193830();
    sub_231172048((unint64_t *)&qword_254152E80, (uint64_t (*)(uint64_t))sub_23119336C, MEMORY[0x24BDB9AF8]);
    v0 = sub_231263C40();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254152CE0);
  }
}

unint64_t sub_231193830()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254152E70;
  if (!qword_254152E70)
  {
    sub_231193CA4(255, &qword_254152E78, (uint64_t (*)(uint64_t))sub_23117AA1C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    result = MEMORY[0x2348D8544](MEMORY[0x24BDB9AF8], v1);
    atomic_store(result, (unint64_t *)&qword_254152E70);
  }
  return result;
}

uint64_t sub_231193890()
{
  return swift_deallocObject();
}

uint64_t sub_2311938A0@<X0>(uint64_t *a1@<X8>)
{
  return sub_231190440("[%{public}s] Unable to fetch CHR generic tile dismissed date", a1);
}

uint64_t sub_2311938C0()
{
  return swift_deallocObject();
}

uint64_t sub_2311938D0@<X0>(uint64_t *a1@<X8>)
{
  return sub_231190440("[%{public}s] Unable to fetch CHR labs tile dismissed date", a1);
}

uint64_t sub_2311938F0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23126226C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_23119395C(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;

  v7 = *(_QWORD *)(sub_23126226C() - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return sub_2311906FC(a1, a2, a3, *(_QWORD *)(v3 + 16), v3 + v8, *(_QWORD *)(v3 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_2311939D4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2311939F8@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v6)(uint64_t, unsigned __int8 *, unsigned __int8 *);
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = *(uint64_t (**)(uint64_t, unsigned __int8 *, unsigned __int8 *))(v2 + 16);
  v7 = *a1;
  sub_231193D74();
  result = v6(v7, &a1[*(int *)(v8 + 48)], &a1[*(int *)(v8 + 64)]);
  if (!v3)
    *a2 = result;
  return result;
}

uint64_t sub_231193A60()
{
  return swift_deallocObject();
}

uint64_t sub_231193A70@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_231190C10(a1, a2);
}

uint64_t sub_231193A78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_231190FF8(v1, a1);
}

uint64_t sub_231193A90()
{
  return swift_deallocObject();
}

uint64_t sub_231193AA0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2311910DC(a1, a2);
}

uint64_t sub_231193AA8(unint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t result;

  sub_231178AD0(0, &qword_254154600);
  if (a2 >> 62)
  {
    v4 = sub_2312649B4();
    objc_opt_self();
    if (swift_dynamicCastObjCClass())
      return v4;
  }
  else
  {
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
    {
      v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 8 * a1 + 0x20);
      swift_unknownObjectRetain();
      objc_opt_self();
      if (!swift_dynamicCastObjCClass())
        goto LABEL_10;
      return v4;
    }
    __break(1u);
  }
LABEL_10:
  sub_2312648C4();
  sub_231264144();
  sub_231264C84();
  sub_231264144();
  swift_bridgeObjectRelease();
  sub_231264144();
  swift_getObjectType();
  swift_unknownObjectRelease();
  sub_231264C84();
  sub_231264144();
  swift_bridgeObjectRelease();
  result = sub_231264990();
  __break(1u);
  return result;
}

uint64_t sub_231193C90(uint64_t a1)
{
  return sub_23118852C(a1, &qword_254151D50, (void (*)(uint64_t))type metadata accessor for AddAccountGenerator);
}

void sub_231193CA4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, unint64_t, _QWORD))
{
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = sub_2311889D8();
    v9 = a4(a1, v7, v8, MEMORY[0x24BEE3F20]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

unint64_t sub_231193D14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254153248;
  if (!qword_254153248)
  {
    sub_231193CA4(255, &qword_254153250, (uint64_t (*)(uint64_t))sub_2311889BC, MEMORY[0x24BDBA1B0]);
    result = MEMORY[0x2348D8544](MEMORY[0x24BDBA1D0], v1);
    atomic_store(result, (unint64_t *)&qword_254153248);
  }
  return result;
}

void sub_231193D74()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_254153158)
  {
    sub_23117AA1C();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_254153158);
  }
}

uint64_t sub_231193DDC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_231191AF8(a1, *(_QWORD *)(v3 + 16), a2, a3);
}

void sub_231193DF8(unint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_2312649A8();
    swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      sub_23119414C();
      v3 = sub_2312648A0();
      if (!v2)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v4 = sub_2312649A8();
      swift_bridgeObjectRelease();
      if (!v4)
        return;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x24BEE4B08];
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return;
LABEL_9:
  v6 = v3 + 56;
  v41 = v4;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v7 = 0;
    while (1)
    {
      v8 = sub_231193AA8(v7, a1);
      v9 = __OFADD__(v7++, 1);
      if (v9)
      {
        __break(1u);
        goto LABEL_37;
      }
      v10 = v8;
      v11 = sub_231264690();
      v12 = -1 << *(_BYTE *)(v3 + 32);
      v13 = v11 & ~v12;
      v14 = v13 >> 6;
      v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
      v16 = 1 << v13;
      if (((1 << v13) & v15) != 0)
      {
        sub_231178AD0(0, &qword_254154600);
        v17 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
        v18 = sub_23126469C();

        if ((v18 & 1) != 0)
        {
LABEL_11:
          swift_unknownObjectRelease();
          v4 = v41;
          goto LABEL_12;
        }
        v19 = ~v12;
        while (1)
        {
          v13 = (v13 + 1) & v19;
          v14 = v13 >> 6;
          v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
          v16 = 1 << v13;
          if ((v15 & (1 << v13)) == 0)
            break;
          v20 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
          v21 = sub_23126469C();

          if ((v21 & 1) != 0)
            goto LABEL_11;
        }
        v4 = v41;
      }
      *(_QWORD *)(v6 + 8 * v14) = v16 | v15;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v13) = v10;
      v22 = *(_QWORD *)(v3 + 16);
      v9 = __OFADD__(v22, 1);
      v23 = v22 + 1;
      if (v9)
        goto LABEL_38;
      *(_QWORD *)(v3 + 16) = v23;
LABEL_12:
      if (v7 == v4)
        return;
    }
  }
  v24 = 0;
  v39 = a1 + 32;
  v40 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v24 != v40)
  {
    v25 = *(id *)(v39 + 8 * v24);
    v26 = sub_231264690();
    v27 = -1 << *(_BYTE *)(v3 + 32);
    v28 = v26 & ~v27;
    v29 = v28 >> 6;
    v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
    v31 = 1 << v28;
    if (((1 << v28) & v30) != 0)
    {
      sub_231178AD0(0, &qword_254154600);
      v32 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
      v33 = sub_23126469C();

      if ((v33 & 1) != 0)
      {
LABEL_24:

        goto LABEL_25;
      }
      v34 = ~v27;
      while (1)
      {
        v28 = (v28 + 1) & v34;
        v29 = v28 >> 6;
        v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
        v31 = 1 << v28;
        if ((v30 & (1 << v28)) == 0)
          break;
        v35 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
        v36 = sub_23126469C();

        if ((v36 & 1) != 0)
          goto LABEL_24;
      }
    }
    *(_QWORD *)(v6 + 8 * v29) = v31 | v30;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v28) = v25;
    v37 = *(_QWORD *)(v3 + 16);
    v9 = __OFADD__(v37, 1);
    v38 = v37 + 1;
    if (v9)
      goto LABEL_39;
    *(_QWORD *)(v3 + 16) = v38;
LABEL_25:
    if (++v24 == v41)
      return;
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

void sub_23119414C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254154648)
  {
    sub_231178AD0(255, &qword_254154600);
    sub_23117E224(&qword_254154608, &qword_254154600);
    v0 = sub_2312648AC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254154648);
  }
}

unint64_t sub_2311941DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255EB8378;
  if (!qword_255EB8378)
  {
    sub_2311735E0(255, &qword_255EB8370, (uint64_t (*)(uint64_t))sub_23117AA1C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
    result = MEMORY[0x2348D8544](MEMORY[0x24BDB9DF8], v1);
    atomic_store(result, (unint64_t *)&qword_255EB8378);
  }
  return result;
}

uint64_t sub_23119423C(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v3 = sub_2312647E0();
    v5 = v4;
    v6 = sub_23126484C();
    v8 = MEMORY[0x2348D7BFC](v3, v5, v6, v7);
    swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
    {
LABEL_3:
      sub_23119BCF4(v3, v5, v2 != 0);
      return 0;
    }
LABEL_7:
    sub_23119B174(v3, v5, v2 != 0, a1);
    v9 = v13;
    sub_23119BCF4(v3, v5, v2 != 0);
    return v9;
  }
  result = sub_23119B3DC(a1);
  if ((v12 & 1) == 0)
  {
    v5 = v11;
    if (*(_DWORD *)(a1 + 36) == (_DWORD)v11)
    {
      v3 = result;
      if (result == 1 << *(_BYTE *)(a1 + 32))
        goto LABEL_3;
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_231194348()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;

  v1 = OBJC_IVAR____TtC13HealthRecords30HealthRecordsPluginAppDelegate____lazy_storage___notificationCenterDelegate;
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC13HealthRecords30HealthRecordsPluginAppDelegate____lazy_storage___notificationCenterDelegate))
  {
    v2 = *(id *)(v0
               + OBJC_IVAR____TtC13HealthRecords30HealthRecordsPluginAppDelegate____lazy_storage___notificationCenterDelegate);
  }
  else
  {
    v3 = v0;
    sub_2312628A8();
    v4 = (void *)sub_231262884();
    v5 = (void *)sub_231262854();

    v6 = objc_msgSend(v5, sel_healthStore);
    v7 = objc_allocWithZone((Class)sub_231262B78());
    v8 = (void *)sub_231262B6C();
    *(_QWORD *)(v3 + v1) = v8;
    v2 = v8;
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRetain();
  return v2;
}

uint64_t sub_231194448(char a1, uint64_t a2, void (*a3)(void), uint64_t a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  char *v43;
  void (*v44)(char *, _QWORD);
  uint64_t *v45;
  uint64_t *v46;
  _QWORD *v47;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  void (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(void);
  uint64_t v74;
  id v75;
  char v76[32];
  uint64_t v77[3];
  uint64_t v78;
  uint64_t v79;

  v75 = a5;
  v8 = sub_231261E94();
  v74 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_231262B60();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, (unint64_t *)&qword_254151918, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v62 - v16;
  v18 = sub_2312635F8();
  v19 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
    return ((uint64_t (*)(_QWORD, _QWORD))a3)(0, 0);
  v70 = v20;
  v71 = v19;
  v72 = a4;
  v73 = a3;
  v23 = sub_231261EAC();
  v24 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8];
  v65 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
  v66 = v23;
  v65(v17, 1, 1);
  sub_231262B54();
  sub_2312632EC();
  v25 = *(void (**)(char *, uint64_t))(v12 + 8);
  v67 = v11;
  v26 = v11;
  v27 = v25;
  v25(v14, v26);
  sub_231189628((uint64_t)v17, (unint64_t *)&qword_254151918, v24);
  sub_231261E88();
  sub_231261E58();
  v68 = *(void (**)(char *, uint64_t))(v74 + 8);
  v69 = v10;
  v74 = v8;
  v68(v10, v8);
  v64 = v22;
  sub_2312635EC();
  sub_23126382C();
  v28 = (uint64_t)v75;
  v29 = v75;
  v63 = sub_231263430();
  v31 = v30;
  v32 = (void *)sub_2312641EC();
  v33 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v33)
  {
    v34 = sub_23126409C();
    v36 = v35;

  }
  else
  {
    v34 = 0;
    v36 = 0;
  }
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v65)(v17, 1, 1, v66);
  sub_231262B54();
  v38 = sub_2312632EC();
  v40 = v39;
  v27(v14, v67);
  sub_231189628((uint64_t)v17, (unint64_t *)&qword_254151918, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8]);
  v41 = type metadata accessor for HealthRecordsPluginAppDelegate.CHRAccountsListItem();
  v78 = v41;
  v79 = sub_231197434(&qword_255EB84D8, 255, (uint64_t (*)(uint64_t))type metadata accessor for HealthRecordsPluginAppDelegate.CHRAccountsListItem, (uint64_t)&unk_231266770);
  v42 = sub_231178884(v77);
  *v42 = v63;
  v42[1] = v31;
  v42[2] = v34;
  v42[3] = v36;
  v42[4] = v38;
  v42[5] = v40;
  v42[6] = 0;
  v42[7] = 0;
  *((_BYTE *)v42 + 64) = 1;
  sub_231261E88();
  *(uint64_t *)((char *)v42 + *(int *)(v41 + 40)) = v28;
  v43 = v64;
  v44 = (void (*)(char *, _QWORD))sub_2312635E0();
  v46 = v45;
  v47 = (_QWORD *)*v45;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v46 = (uint64_t)v47;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v47 = sub_2311DCA38(0, v47[2] + 1, 1, v47);
    *v46 = (uint64_t)v47;
  }
  v50 = v47[2];
  v49 = v47[3];
  if (v50 >= v49 >> 1)
    *v46 = (uint64_t)sub_2311DCA38((_QWORD *)(v49 > 1), v50 + 1, 1, v47);
  v51 = v78;
  v52 = v79;
  v53 = sub_23119C704((uint64_t)v77, v78);
  MEMORY[0x24BDAC7A8](v53);
  v55 = (char *)&v62 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v56 + 16))(v55);
  sub_23119B464(v50, (uint64_t)v55, v46, v51, v52);
  sub_231173434((uint64_t)v77);
  v44(v76, 0);
  sub_2311735E0(0, (unint64_t *)&unk_255EB84E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v57 = v70;
  v58 = (*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
  v59 = swift_allocObject();
  *(_OWORD *)(v59 + 16) = xmmword_231265AC0;
  v60 = v71;
  (*(void (**)(unint64_t, char *, uint64_t))(v57 + 16))(v59 + v58, v43, v71);
  v77[0] = 0x3C53447961727241;
  v77[1] = 0xE800000000000000;
  v61 = v69;
  sub_231261E88();
  sub_231261E58();
  v68(v61, v74);
  sub_231264144();
  swift_bridgeObjectRelease();
  sub_231264144();
  sub_23126349C();
  swift_allocObject();
  sub_231263490();
  v73();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v43, v60);
}

uint64_t sub_231194A58(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  dispatch_semaphore_t v13;
  uint64_t v14;
  NSObject *v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  ObjectType = swift_getObjectType();
  v2 = sub_231263B5C();
  v27 = *(_QWORD *)(v2 - 8);
  v28 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_231263F70();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v25 - v10;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0;
  *(_QWORD *)(v12 + 24) = 0;
  v13 = dispatch_semaphore_create(0);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v12;
  *(_QWORD *)(v14 + 24) = v13;
  swift_retain();
  v15 = v13;
  sub_23119B674(a1, (uint64_t)sub_23119C688, v14);
  swift_release();
  sub_231263F64();
  MEMORY[0x2348D7380](v9, 5.0);
  v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16(v9, v5);
  LOBYTE(a1) = sub_23126454C();
  v16(v11, v5);
  if ((a1 & 1) != 0)
  {
    sub_231263B20();
    v18 = sub_231263B50();
    v19 = sub_2312643D8();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v30 = v21;
      *(_DWORD *)v20 = 136315138;
      v29 = ObjectType;
      swift_getMetatypeMetadata();
      v22 = sub_2312640B4();
      v29 = sub_2311CBDE4(v22, v23, &v30);
      sub_231264750();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23116F000, v18, v19, "%s timed out waiting for healthd to return whether CHR section should be shown", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348D85EC](v21, -1, -1);
      MEMORY[0x2348D85EC](v20, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v28);
    swift_release();
    return 0;
  }
  else
  {

    swift_beginAccess();
    v17 = *(_QWORD *)(v12 + 16);
    swift_unknownObjectRetain();
    swift_release();
  }
  return v17;
}

uint64_t sub_231194D70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  *(_QWORD *)(a3 + 16) = a1;
  *(_QWORD *)(a3 + 24) = a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return sub_231264558();
}

uint64_t sub_231194DE0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_231194E0C()
{
  sub_231261E58();
  sub_231264144();
  swift_bridgeObjectRelease();
  return 0xD000000000000014;
}

void sub_231194E70(uint64_t a1, void *a2)
{
  sub_23119B788(a2);
}

uint64_t sub_231194E84()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_231194EB0()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t sub_231194EBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*sub_231194EF0())()
{
  return nullsub_1;
}

id sub_231194F00()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HealthRecordsPluginAppDelegate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for HealthRecordsPluginAppDelegate()
{
  return objc_opt_self();
}

id sub_231194F60()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id sub_231194F80(uint64_t a1)
{
  if (a1 == 3)
    return sub_231194348();
  else
    return 0;
}

void sub_231194FAC(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  id v6;

  v6 = (id)sub_23126367C();
  sub_2312313D0(a1, v6, a2, a3);

}

void sub_231195014(void *a1, uint64_t a2, uint64_t a3)
{
  id v5;

  v5 = (id)sub_23126367C();
  sub_23117E264(a1, v5, a3);

}

uint64_t sub_231195070@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v2 = sub_2312625FC();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (id *)((char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v32 - v7;
  sub_231262584();
  swift_allocObject();
  sub_231262578();
  sub_23126256C();
  swift_release();
  (*(void (**)(id *, char *, uint64_t))(v3 + 32))(v6, v8, v2);
  v9 = (*(uint64_t (**)(id *, uint64_t))(v3 + 88))(v6, v2);
  if (v9 == *MEMORY[0x24BE48C80])
  {
    (*(void (**)(id *, uint64_t))(v3 + 8))(v6, v2);
LABEL_5:
    v12 = (unsigned int *)MEMORY[0x24BE42A30];
LABEL_6:
    v13 = *v12;
    v14 = sub_2312634CC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(a1, v13, v14);
  }
  v10 = v9;
  if (v9 == *MEMORY[0x24BE48C60])
  {
    (*(void (**)(id *, uint64_t))(v3 + 96))(v6, v2);
    v11 = sub_231261E94();
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v6, v11);
    goto LABEL_5;
  }
  if (v9 == *MEMORY[0x24BE48C68])
  {
    (*(void (**)(id *, uint64_t))(v3 + 96))(v6, v2);
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  if (v9 == *MEMORY[0x24BE48C90])
  {
    (*(void (**)(id *, uint64_t))(v3 + 96))(v6, v2);
    sub_2311972AC();
    swift_bridgeObjectRelease();
LABEL_12:
    v16 = *MEMORY[0x24BE42A38];
    v17 = sub_2312634CC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(a1, v16, v17);
    v18 = sub_231261E94();
    return (*(uint64_t (**)(id *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v6, v18);
  }
  if (v9 == *MEMORY[0x24BE48C98])
  {
    (*(void (**)(id *, uint64_t))(v3 + 96))(v6, v2);
LABEL_17:
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  if (v9 == *MEMORY[0x24BE48C70])
  {
    (*(void (**)(id *, uint64_t))(v3 + 96))(v6, v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  if (v9 == *MEMORY[0x24BE48CA8])
  {
    (*(void (**)(id *, uint64_t))(v3 + 96))(v6, v2);

    goto LABEL_18;
  }
  if (v9 == *MEMORY[0x24BE48CA0])
  {
    (*(void (**)(id *, uint64_t))(v3 + 96))(v6, v2);
    swift_bridgeObjectRelease();
    sub_2311973CC();
    v20 = (char *)v6 + *(int *)(v19 + 48);
    v21 = *MEMORY[0x24BE42A38];
    v22 = sub_2312634CC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(a1, v21, v22);
    v23 = sub_231261E94();
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v20, v23);
  }
  if (v9 == *MEMORY[0x24BE48C88])
  {
    (*(void (**)(id *, uint64_t))(v3 + 96))(v6, v2);

    sub_231197334();
    v25 = (uint64_t)v6 + *(int *)(v24 + 48);
    v26 = *MEMORY[0x24BE42A38];
    v27 = sub_2312634CC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(a1, v26, v27);
    return sub_231189628(v25, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
  }
  if (v9 == *MEMORY[0x24BE48CB8])
  {
    (*(void (**)(id *, uint64_t))(v3 + 96))(v6, v2);
    goto LABEL_12;
  }
  if (v9 == *MEMORY[0x24BE48CB0] || v9 == *MEMORY[0x24BE48CC0])
  {
    (*(void (**)(id *, uint64_t))(v3 + 96))(v6, v2);
    v31 = sub_231261D74();
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v6, v31);
    goto LABEL_18;
  }
  if (v9 == *MEMORY[0x24BE48C78])
  {
LABEL_18:
    v12 = (unsigned int *)MEMORY[0x24BE42A38];
    goto LABEL_6;
  }
  v28 = *MEMORY[0x24BE48CC8];
  v29 = *MEMORY[0x24BE42A30];
  v30 = sub_2312634CC();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(a1, v29, v30);
  if (v10 != v28)
    return (*(uint64_t (**)(id *, uint64_t))(v3 + 8))(v6, v2);
  return result;
}

uint64_t sub_231195544@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t v10;
  char v12;
  unsigned int *v13;
  uint64_t v14;
  uint64_t v15;

  v3 = objc_msgSend(a1, sel_activityType);
  v4 = sub_23126409C();
  v6 = v5;

  if (sub_23126409C() == v4 && v7 == v6)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v9 = sub_231264B58();
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  if (sub_23126409C() == v4 && v10 == v6)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_14;
  }
  v12 = sub_231264B58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
  {
LABEL_14:
    v13 = (unsigned int *)MEMORY[0x24BE42A38];
    goto LABEL_15;
  }
  v13 = (unsigned int *)MEMORY[0x24BE42A30];
LABEL_15:
  v14 = *v13;
  v15 = sub_2312634CC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(a2, v14, v15);
}

uint64_t sub_231195674@<X0>(uint64_t a1@<X8>)
{
  return sub_231195070(a1);
}

uint64_t sub_231195688@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_231195544(a1, a2);
}

uint64_t sub_23119569C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v19 = a2;
  swift_getObjectType();
  v18 = sub_231261FA8();
  v3 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231197434(&qword_255EB83A8, v6, (uint64_t (*)(uint64_t))type metadata accessor for HealthRecordsPluginAppDelegate, (uint64_t)&unk_2312664C0);
  v7 = sub_231263874();
  v9 = v8;
  sub_23126388C();
  v10 = objc_msgSend(a1, sel_uniqueIdentifier);
  v11 = sub_23126409C();
  v13 = v12;

  sub_23119B978(v11, v13, v7, v9, 0, 0);
  swift_bridgeObjectRelease();
  if (sub_231262500())
  {
    sub_231263A00();
    swift_release();
  }
  v14 = sub_231262554();
  sub_23119423C(v14);
  swift_bridgeObjectRelease();
  sub_23126253C();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BE47410], v18);
  v15 = v19;
  sub_2312638D4();
  v16 = sub_2312638E0();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 0, 1, v16);
}

uint64_t sub_231195894@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t ObjCClassFromMetadata;
  uint64_t v23;
  char *v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  char *v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t);
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(unint64_t, char *, uint64_t);
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t ObjectType;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v58 = a2;
  ObjectType = swift_getObjectType();
  v3 = sub_231263B5C();
  v56 = *(_QWORD *)(v3 - 8);
  v57 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v55 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v51 = (char *)&v45 - v6;
  v54 = sub_231261FA8();
  v52 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_231262B60();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, (unint64_t *)&qword_254151918, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v45 - v14;
  v16 = sub_2312639E8();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
  v20(v19, a1, v16);
  if ((*(unsigned int (**)(char *, uint64_t))(v17 + 88))(v19, v16) == *MEMORY[0x24BE45920])
  {
    v45 = v15;
    v46 = v12;
    v47 = v10;
    v48 = v9;
    v49 = (void (*)(unint64_t, char *, uint64_t))v20;
    v50 = v8;
    v55 = a1;
    (*(void (**)(char *, uint64_t))(v17 + 96))(v19, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (objc_msgSend((id)objc_opt_self(), sel_categoryWithID_, 20))
    {
      v21 = v17;
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
      sub_2312639DC();
      if (!v23)
      {
        v35 = sub_231261EAC();
        v36 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8];
        v37 = (uint64_t)v45;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v45, 1, 1, v35);
        v38 = v46;
        sub_231262B54();
        sub_2312640E4();
        (*(void (**)(char *, uint64_t))(v47 + 8))(v38, v48);
        sub_231189628(v37, (unint64_t *)&qword_254151918, v36);
      }
      v39 = v58;
      v40 = v55;
      v41 = v52;
      sub_2311735E0(0, (unint64_t *)&unk_255EB83B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE45940], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v42 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
      v43 = swift_allocObject();
      *(_OWORD *)(v43 + 16) = xmmword_231265AC0;
      v49(v43 + v42, v40, v16);
      (*(void (**)(char *, _QWORD, uint64_t))(v41 + 104))(v50, *MEMORY[0x24BE47410], v54);
      sub_2312638D4();
      v44 = sub_2312638E0();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v39, 0, 1, v44);
    }
    else
    {
      v30 = v51;
      sub_231263B20();
      v31 = sub_231263B50();
      v32 = sub_2312643D8();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v33 = 0;
        _os_log_impl(&dword_23116F000, v31, v32, "failed to create lab results category when generating data type item", v33, 2u);
        MEMORY[0x2348D85EC](v33, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v56 + 8))(v30, v57);
      v34 = sub_2312638E0();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v58, 1, 1, v34);
    }
  }
  else
  {
    v24 = v55;
    sub_231263B20();
    v25 = sub_231263B50();
    v26 = sub_2312643D8();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v27 = 0;
      _os_log_impl(&dword_23116F000, v25, v26, "auth identifier is not of health records concept type", v27, 2u);
      MEMORY[0x2348D85EC](v27, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v56 + 8))(v24, v57);
    v28 = sub_2312638E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v58, 1, 1, v28);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
}

void sub_231195E3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  id v27;
  void *v28;
  _QWORD *v29;
  void *v30;
  id v31;
  uint8_t *v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t aBlock;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t, void *);
  void *v43;
  uint64_t (*v44)(unint64_t, void *);
  _QWORD *v45;

  v5 = v4;
  v10 = sub_231263B5C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231263B20();
  swift_bridgeObjectRetain_n();
  v14 = sub_231263B50();
  v15 = sub_2312643F0();
  if (os_log_type_enabled(v14, v15))
  {
    v38 = a1;
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v35 = v17;
    v36 = v11;
    v34 = v16;
    *(_DWORD *)v16 = 136315138;
    v32 = v16 + 4;
    v39 = v17;
    aBlock = v38;
    v41 = a2;
    swift_bridgeObjectRetain_n();
    sub_231264B88();
    v18 = (id)HKSensitiveLogItem();
    v37 = v5;
    swift_unknownObjectRelease();
    sub_2312647B0();
    swift_unknownObjectRelease();
    v19 = sub_2312640B4();
    v33 = v10;
    v20 = a3;
    v21 = a4;
    v23 = v22;
    swift_bridgeObjectRelease();
    v24 = v19;
    v5 = v37;
    aBlock = sub_2311CBDE4(v24, v23, &v39);
    sub_231264750();
    swift_bridgeObjectRelease_n();
    a4 = v21;
    a3 = v20;
    swift_bridgeObjectRelease();
    v25 = v34;
    _os_log_impl(&dword_23116F000, v14, v15, "Starting attachment search for query string: %s", v34, 0xCu);
    v26 = v35;
    a1 = v38;
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v26, -1, -1);
    MEMORY[0x2348D85EC](v25, -1, -1);

    (*(void (**)(char *, uint64_t))(v36 + 8))(v13, v33);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE489A8]), sel_init);
  v28 = (void *)sub_23126406C();
  v29 = (_QWORD *)swift_allocObject();
  v29[2] = a1;
  v29[3] = a2;
  v29[4] = a3;
  v29[5] = a4;
  v29[6] = v5;
  v44 = sub_23119C054;
  v45 = v29;
  aBlock = MEMORY[0x24BDAC760];
  v41 = 1107296256;
  v42 = sub_231197020;
  v43 = &unk_25000BAF0;
  v30 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  v31 = v5;
  swift_release();
  objc_msgSend(v27, sel_fetchSpotlightSearchResultsForQueryString_completion_, v28, v30);
  _Block_release(v30);

}

uint64_t sub_231196190(unint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, void *), uint64_t a6, void *a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  unint64_t v20;
  uint64_t v21;
  id v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  _QWORD v39[3];
  uint64_t v40;
  int v41;
  void (*v42)(uint64_t, void *);
  uint64_t v43[4];
  uint64_t v44;

  v13 = sub_231263B5C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    if (a1 >> 62)
    {
      v38 = swift_bridgeObjectRetain();
      v17 = (uint64_t)sub_23119782C(v38);
      swift_bridgeObjectRelease();
    }
    else
    {
      v17 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
    }
    v43[0] = v17;
    sub_231197474(v43);
    v18 = v43[0];
    v19 = a7;
    v20 = sub_23119B4DC(v18);
    swift_release();

    v21 = sub_231196848(v20);
    swift_bridgeObjectRelease();
    a5(v21, a2);
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_231263B20();
    swift_bridgeObjectRetain();
    v23 = a2;
    swift_bridgeObjectRetain();
    v24 = a2;
    v25 = sub_231263B50();
    v26 = sub_2312643F0();
    v27 = v26;
    if (os_log_type_enabled(v25, v26))
    {
      v28 = swift_slowAlloc();
      v41 = v27;
      v29 = v28;
      v40 = swift_slowAlloc();
      v44 = v40;
      *(_DWORD *)v29 = 136315394;
      v39[1] = v29 + 4;
      v43[0] = a3;
      v43[1] = a4;
      swift_bridgeObjectRetain_n();
      sub_231264B88();
      v30 = (id)HKSensitiveLogItem();
      v42 = a5;
      swift_unknownObjectRelease();
      sub_2312647B0();
      swift_unknownObjectRelease();
      v39[2] = MEMORY[0x24BEE4AD8] + 8;
      v31 = sub_2312640B4();
      v33 = v32;
      swift_bridgeObjectRelease();
      v43[0] = sub_2311CBDE4(v31, v33, &v44);
      sub_231264750();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2080;
      v43[0] = (uint64_t)a2;
      v34 = a2;
      sub_23119C07C();
      v35 = sub_2312640B4();
      v43[0] = sub_2311CBDE4(v35, v36, &v44);
      a5 = v42;
      sub_231264750();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23116F000, v25, (os_log_type_t)v41, "No search results returned for “%s” from the spotlight indexer, error: %s", (uint8_t *)v29, 0x16u);
      v37 = v40;
      swift_arrayDestroy();
      MEMORY[0x2348D85EC](v37, -1, -1);
      MEMORY[0x2348D85EC](v29, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    return ((uint64_t (*)(_QWORD, void *))a5)(MEMORY[0x24BEE4AF8], a2);
  }
}

uint64_t sub_231196534@<X0>(id *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  id v30;
  char *v31;
  uint64_t *v32;
  uint64_t v33;

  v5 = sub_231261E94();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = *a1;
  v8 = objc_msgSend(v30, sel_previewStringMatchRanges);
  sub_231178AD0(0, &qword_255EB8408);
  v9 = sub_2312641F8();

  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_2312649A8();
    v10 = result;
  }
  else
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
  }
  v33 = v2;
  v31 = v7;
  v32 = a2;
  if (v10)
  {
    if (v10 < 1)
    {
      __break(1u);
      return result;
    }
    v12 = 0;
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      if ((v9 & 0xC000000000000001) != 0)
        v14 = (id)MEMORY[0x2348D7CE0](v12, v9);
      else
        v14 = *(id *)(v9 + 8 * v12 + 32);
      v15 = v14;
      v16 = objc_msgSend(v14, sel_rangeValue);
      v18 = v17;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v13 = sub_2311DCA54(0, v13[2] + 1, 1, v13);
      v20 = v13[2];
      v19 = v13[3];
      if (v20 >= v19 >> 1)
        v13 = sub_2311DCA54((_QWORD *)(v19 > 1), v20 + 1, 1, v13);
      ++v12;
      v13[2] = v20 + 1;
      v21 = &v13[2 * v20];
      v21[4] = v16;
      v21[5] = v18;
    }
    while (v10 != v12);
  }
  swift_bridgeObjectRelease_n();
  v22 = v30;
  v23 = objc_msgSend(v30, sel_title);
  sub_23126409C();

  v24 = objc_msgSend(v22, sel_previewString);
  if (v24)
  {
    v25 = v24;
    sub_23126409C();

  }
  v26 = objc_msgSend(v22, sel_medicalRecord);
  v27 = objc_msgSend(v22, sel_attachmentUUID);
  sub_231261E7C();

  sub_2312628A8();
  v28 = (void *)sub_231262884();
  sub_231262854();

  sub_231262C20();
  swift_allocObject();
  result = sub_231262C14();
  *v32 = result;
  return result;
}

uint64_t sub_231196848(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_2312649A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x24BEE4AF8];
  if (!v2)
    return v3;
  v18 = MEMORY[0x24BEE4AF8];
  result = sub_2311992E8(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v3 = v18;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      v6 = MEMORY[0x24BE49400];
      do
      {
        v7 = MEMORY[0x2348D7CE0](v5, a1);
        v18 = v3;
        v9 = *(_QWORD *)(v3 + 16);
        v8 = *(_QWORD *)(v3 + 24);
        if (v9 >= v8 >> 1)
        {
          sub_2311992E8(v8 > 1, v9 + 1, 1);
          v3 = v18;
        }
        ++v5;
        v16 = sub_231262C20();
        v17 = sub_231197434(&qword_255EB83F0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE49410], v6);
        *(_QWORD *)&v15 = v7;
        *(_QWORD *)(v3 + 16) = v9 + 1;
        sub_2311789AC(&v15, v3 + 40 * v9 + 32);
      }
      while (v2 != v5);
    }
    else
    {
      v10 = (uint64_t *)(a1 + 32);
      v11 = MEMORY[0x24BE49400];
      do
      {
        v12 = *v10;
        v18 = v3;
        v14 = *(_QWORD *)(v3 + 16);
        v13 = *(_QWORD *)(v3 + 24);
        swift_retain();
        if (v14 >= v13 >> 1)
        {
          sub_2311992E8(v13 > 1, v14 + 1, 1);
          v3 = v18;
        }
        v16 = sub_231262C20();
        v17 = sub_231197434(&qword_255EB83F0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE49410], v11);
        *(_QWORD *)&v15 = v12;
        *(_QWORD *)(v3 + 16) = v14 + 1;
        sub_2311789AC(&v15, v3 + 40 * v14 + 32);
        ++v10;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_231196A58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = type metadata accessor for SharedConceptCodedValue(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v17 = MEMORY[0x24BEE4AF8];
    sub_231199364(0, v6, 0);
    v7 = v17;
    v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v9 = *(_QWORD *)(v3 + 72);
    do
    {
      sub_231178454(v8, (uint64_t)v5, type metadata accessor for SharedConceptCodedValue);
      v17 = v7;
      v11 = *(_QWORD *)(v7 + 16);
      v10 = *(_QWORD *)(v7 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_231199364(v10 > 1, v11 + 1, 1);
        v7 = v17;
      }
      v15 = v2;
      v16 = sub_231197434(&qword_255EB8430, 255, type metadata accessor for SharedConceptCodedValue, (uint64_t)&unk_231268528);
      v12 = sub_231178884((uint64_t *)&v14);
      sub_231178454((uint64_t)v5, (uint64_t)v12, type metadata accessor for SharedConceptCodedValue);
      *(_QWORD *)(v7 + 16) = v11 + 1;
      sub_2311789AC(&v14, v7 + 40 * v11 + 32);
      sub_23119C208((uint64_t)v5);
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_231196BD0(uint64_t a1)
{
  return sub_231196C08(a1, (void (*)(BOOL, unint64_t, uint64_t))sub_231199398, (uint64_t (*)(void))sub_23119C39C, (void (*)(_QWORD *, unint64_t))sub_2311789AC);
}

uint64_t sub_231196BEC(uint64_t a1)
{
  return sub_231196C08(a1, (void (*)(BOOL, unint64_t, uint64_t))sub_2311993CC, (uint64_t (*)(void))sub_23119C2A8, (void (*)(_QWORD *, unint64_t))sub_2311789AC);
}

uint64_t sub_231196C08(uint64_t a1, void (*a2)(BOOL, unint64_t, uint64_t), uint64_t (*a3)(void), void (*a4)(_QWORD *, unint64_t))
{
  unint64_t v4;
  uint64_t v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[5];
  uint64_t v29;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = MEMORY[0x24BEE4AF8];
  if (v4)
  {
    v29 = MEMORY[0x24BEE4AF8];
    a2(0, v4, 0);
    v5 = v29;
    v7 = (uint64_t *)(a1 + 56);
    do
    {
      v22 = v4;
      v8 = *(v7 - 3);
      v9 = *(v7 - 1);
      v25 = *v7;
      v26 = *(v7 - 2);
      v10 = v7[1];
      v11 = v7[2];
      v12 = v7[4];
      v13 = v7[5];
      v14 = v7[7];
      v23 = v7[6];
      v24 = v7[3];
      v15 = *(_QWORD *)(v5 + 16);
      v16 = *(_QWORD *)(v5 + 24);
      v29 = v5;
      v27 = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v15 >= v16 >> 1)
      {
        a2(v16 > 1, v15 + 1, 1);
        v5 = v29;
      }
      v7 += 11;
      v28[3] = &type metadata for SharedConceptFormattedRecord;
      v28[4] = a3();
      v17 = (_QWORD *)swift_allocObject();
      v28[0] = v17;
      v17[2] = v27;
      v17[3] = v26;
      v17[4] = v9;
      v17[5] = v25;
      v17[6] = v10;
      v17[7] = v11;
      v17[8] = v24;
      v17[9] = v12;
      v17[10] = v13;
      v17[11] = v23;
      v17[12] = v14;
      *(_QWORD *)(v5 + 16) = v15 + 1;
      a4(v28, v5 + 40 * v15 + 32);
      v4 = v22 - 1;
    }
    while (v22 != 1);
  }
  return v5;
}

uint64_t sub_231196DC0(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  unint64_t v6;
  unint64_t v7;
  id *v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD v12[2];
  uint64_t v13;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_2312649A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x24BEE4AF8];
  if (!v2)
    return v3;
  v13 = MEMORY[0x24BEE4AF8];
  result = sub_23119942C(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        MEMORY[0x2348D7CE0](i, a1);
        sub_231178AD0(0, &qword_255EB8478);
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23119942C(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v7 = *(_QWORD *)(v3 + 16);
        v6 = *(_QWORD *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_23119942C(v6 > 1, v7 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v7 + 1;
        sub_23119C444(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      v8 = (id *)(a1 + 32);
      sub_231178AD0(0, &qword_255EB8478);
      do
      {
        v9 = *v8;
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23119942C(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v11 = *(_QWORD *)(v3 + 16);
        v10 = *(_QWORD *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_23119942C(v10 > 1, v11 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v11 + 1;
        sub_23119C444(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_231197020(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  id v6;

  v4 = a2;
  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_231178AD0(0, &qword_255EB83C8);
    v4 = sub_2312641F8();
  }
  swift_retain();
  v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2311970AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v0 = sub_231262B60();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8];
  sub_2311735E0(0, (unint64_t *)&qword_254151918, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v11 - v6;
  v8 = sub_231261EAC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  sub_231262B30();
  v9 = sub_2312632EC();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_231189628((uint64_t)v7, (unint64_t *)&qword_254151918, v4);
  return v9;
}

uint64_t sub_231197208()
{
  sub_231262C08();
  sub_231197434(qword_254153308, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE493F8], MEMORY[0x24BE493F0]);
  return sub_231264450();
}

void sub_231197260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_231195E3C(a1, a2, a3, a4);
}

uint64_t sub_231197280(uint64_t a1, uint64_t a2)
{
  return sub_231197434(&qword_2541547E0, a2, (uint64_t (*)(uint64_t))type metadata accessor for HealthRecordsPluginAppDelegate, (uint64_t)&unk_231266608);
}

void sub_2311972AC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255EB8388)
  {
    sub_231261E94();
    sub_231171FD8(255, &qword_2541530C0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255EB8388);
  }
}

void sub_231197334()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255EB8398)
  {
    sub_2311787A8(255, qword_254155900);
    sub_2311735E0(255, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255EB8398);
  }
}

void sub_2311973CC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255EB83A0)
  {
    sub_231261E94();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255EB83A0);
  }
}

uint64_t sub_231197434(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x2348D8544](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_231197474(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_23119A6E8();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_231197B64(v6);
  return sub_23126490C();
}

_QWORD *sub_2311974EC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_231171FD8(0, (unint64_t *)&qword_2541557B0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v3 = (_QWORD *)swift_allocObject();
  v4 = j__malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_23119A6FC((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_23118EEB4();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

size_t sub_2311975E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  sub_23119C61C(0);
  v3 = *(_QWORD *)(type metadata accessor for SharedConceptFeedItemData(0) - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = j__malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      v9 = sub_23119A8F8(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_23118EEB4();
      if (v9 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

size_t sub_2311976F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  sub_2311735E0(0, &qword_255EB84D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47D40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v3 = *(_QWORD *)(sub_2312623EC() - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = j__malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      v9 = sub_23119AEAC(&v10, (uint64_t)v6 + v5, v1, a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE47D40]);
      swift_bridgeObjectRetain();
      sub_23118EEB4();
      if (v9 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_23119782C(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_10;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v2 <= 0)
    {
      v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    else
    {
      sub_231171FD8(0, (unint64_t *)&qword_254154688, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
      v3 = (_QWORD *)swift_allocObject();
      v4 = j__malloc_size(v3);
      v5 = v4 - 32;
      if (v4 < 32)
        v5 = v4 - 25;
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_23119A074((unint64_t)(v3 + 4), v2, v1);
    v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v2 = sub_2312649A8();
    swift_bridgeObjectRelease();
    if (!v2)
      return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t sub_231197938(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;

  if ((a1 & 0xC000000000000001) != 0)
  {
    v2 = sub_23126481C();
    if (v2)
      goto LABEL_3;
    return MEMORY[0x24BEE4AF8];
  }
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return MEMORY[0x24BEE4AF8];
LABEL_3:
  if (v2 <= 0)
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  else
  {
    sub_231171FD8(0, (unint64_t *)&qword_254154688, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v3 = (_QWORD *)swift_allocObject();
    v4 = j__malloc_size(v3);
    v5 = v4 - 32;
    if (v4 < 32)
      v5 = v4 - 25;
    v3[2] = v2;
    v3[3] = (2 * (v5 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  v6 = sub_23119ABA4(&v8, v3 + 4, v2, a1);
  result = sub_23118EEB4();
  if (v6 == (_QWORD *)v2)
    return (uint64_t)v3;
  __break(1u);
  return result;
}

size_t sub_231197A48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  sub_23119C590(0);
  v3 = *(_QWORD *)(sub_2312627B8() - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = j__malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      v9 = sub_23119AEAC(&v10, (uint64_t)v6 + v5, v1, a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE48F28]);
      swift_bridgeObjectRetain();
      sub_23118EEB4();
      if (v9 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_231197B64(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  void *v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  void *v70;
  id v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  id v81;
  void *v82;
  unint64_t v83;
  unint64_t v84;
  char *v85;
  char *v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  BOOL v98;
  unint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  BOOL v108;
  uint64_t v109;
  char v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  BOOL v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  unint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  unint64_t v142;
  uint64_t *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  void **v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  void *v156;
  void *v157;
  int v158;
  void *v159;
  void *v160;
  uint64_t v161;
  uint64_t v162;

  v3 = a1[1];
  v4 = sub_231264B1C();
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      sub_231198738(0, v3, 1, a1);
    return;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_160;
  v145 = v4;
  v150 = v3;
  v143 = a1;
  if (v3 < 2)
  {
    v8 = (char *)MEMORY[0x24BEE4AF8];
    v162 = MEMORY[0x24BEE4AF8];
    v152 = (void **)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_118:
      if (v12 >= 2)
      {
        v137 = *v143;
        do
        {
          v138 = v12 - 2;
          if (v12 < 2)
            goto LABEL_147;
          if (!v137)
            goto LABEL_159;
          v139 = *(_QWORD *)&v8[16 * v138 + 32];
          v140 = *(_QWORD *)&v8[16 * v12 + 24];
          sub_2311989D4((void **)(v137 + 8 * v139), (id *)(v137 + 8 * *(_QWORD *)&v8[16 * v12 + 16]), v137 + 8 * v140, v152);
          if (v1)
            break;
          if (v140 < v139)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v8 = sub_231199234((uint64_t)v8);
          if (v138 >= *((_QWORD *)v8 + 2))
            goto LABEL_149;
          v141 = &v8[16 * v138 + 32];
          *(_QWORD *)v141 = v139;
          *((_QWORD *)v141 + 1) = v140;
          v142 = *((_QWORD *)v8 + 2);
          if (v12 > v142)
            goto LABEL_150;
          memmove(&v8[16 * v12 + 16], &v8[16 * v12 + 32], 16 * (v142 - v12));
          *((_QWORD *)v8 + 2) = v142 - 1;
          v12 = v142 - 1;
        }
        while (v142 > 2);
      }
LABEL_129:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v162 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_231264210();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v6 = v5 >> 1;
    sub_231178AD0(0, &qword_255EB83C8);
    v7 = sub_231264258();
    *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    v152 = (void **)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    v162 = v7;
  }
  v9 = 0;
  v10 = *a1;
  v144 = *a1 - 8;
  v8 = (char *)MEMORY[0x24BEE4AF8];
  v11 = v3;
  v161 = *a1;
  while (1)
  {
    v13 = v9++;
    v149 = v8;
    if (v9 >= v11)
      goto LABEL_45;
    v14 = v8;
    v153 = v9;
    v15 = *(void **)(v10 + 8 * v13);
    v16 = *(id *)(v10 + 8 * v9);
    v17 = v15;
    v18 = objc_msgSend(v16, sel_medicalRecord);
    v19 = v13;
    v20 = objc_msgSend(v18, sel_sortDate);

    v21 = objc_msgSend(v17, sel_medicalRecord);
    v22 = objc_msgSend(v21, sel_sortDate);

    sub_231178AD0(0, (unint64_t *)&qword_255EB8410);
    v147 = v19;
    if ((sub_23126469C() & 1) != 0)
    {
      v157 = v16;
      v23 = objc_msgSend(v16, sel_title);
      v24 = sub_23126409C();
      v25 = v17;
      v27 = v26;

      v28 = objc_msgSend(v25, sel_title);
      v29 = sub_23126409C();
      v31 = v30;

      if (v24 == v29 && v27 == v31)
        v32 = 0;
      else
        v32 = sub_231264B58();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v13 = v147;
      v8 = v149;
      v34 = v147 + 2;
      if (v147 + 2 < v150)
      {
LABEL_24:
        v35 = v153;
        v158 = v32;
        do
        {
          v38 = *(void **)(v161 + 8 * v35);
          v39 = *(id *)(v161 + 8 * v34);
          v40 = v38;
          v41 = objc_msgSend(v39, sel_medicalRecord);
          v42 = objc_msgSend(v41, sel_sortDate);

          v43 = objc_msgSend(v40, sel_medicalRecord);
          v44 = objc_msgSend(v43, sel_sortDate);

          if ((sub_23126469C() & 1) != 0)
          {
            v159 = v39;
            v45 = objc_msgSend(v39, sel_title);
            v46 = sub_23126409C();
            v48 = v47;

            v49 = v40;
            v50 = objc_msgSend(v40, sel_title);
            v51 = sub_23126409C();
            v53 = v52;

            if (v46 == v51 && v48 == v53)
              v54 = 0;
            else
              v54 = sub_231264B58();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            v32 = v158;
            v8 = v149;
            if (((v158 ^ v54) & 1) != 0)
              goto LABEL_35;
          }
          else
          {
            v36 = objc_msgSend(v44, sel_compare_, v42);

            v8 = v149;
            if (((v32 ^ (v36 != (id)-1)) & 1) == 0)
              goto LABEL_35;
          }
          v37 = v34 + 1;
          v35 = v34;
          v34 = v37;
        }
        while (v37 < v150);
        v34 = v37;
LABEL_35:
        v13 = v147;
      }
    }
    else
    {
      v33 = objc_msgSend(v22, sel_compare_, v20);

      v32 = v33 == (id)-1;
      v34 = v19 + 2;
      if (v19 + 2 < v150)
        goto LABEL_24;
      v13 = v19;
      v8 = v14;
    }
    if ((v32 & 1) != 0)
    {
      if (v34 < v13)
        goto LABEL_153;
      if (v13 < v34)
      {
        v55 = (uint64_t *)(v144 + 8 * v34);
        v56 = v34;
        v57 = v13;
        v58 = (uint64_t *)(v161 + 8 * v13);
        do
        {
          if (v57 != --v56)
          {
            if (!v161)
              goto LABEL_158;
            v59 = *v58;
            *v58 = *v55;
            *v55 = v59;
          }
          ++v57;
          --v55;
          ++v58;
        }
        while (v57 < v56);
      }
    }
    v9 = v34;
    v10 = v161;
LABEL_45:
    if (v9 >= v150)
      goto LABEL_68;
    if (__OFSUB__(v9, v13))
      goto LABEL_151;
    if (v9 - v13 >= v145)
      goto LABEL_68;
    if (__OFADD__(v13, v145))
      goto LABEL_154;
    v60 = v13 + v145 >= v150 ? v150 : v13 + v145;
    if (v60 < v13)
      break;
    if (v9 == v60)
      goto LABEL_68;
    sub_231178AD0(0, (unint64_t *)&qword_255EB8410);
    v61 = v144 + 8 * v9;
    v146 = v60;
    v148 = v13;
    while (2)
    {
      v62 = *(void **)(v10 + 8 * v9);
      v63 = v13;
      v151 = v61;
      v154 = v9;
      while (1)
      {
        v64 = *(void **)v61;
        v65 = v62;
        v66 = v64;
        v67 = objc_msgSend(v65, sel_medicalRecord);
        v68 = objc_msgSend(v67, sel_sortDate);

        v69 = objc_msgSend(v66, sel_medicalRecord);
        v70 = v68;
        v71 = objc_msgSend(v69, sel_sortDate);

        if ((sub_23126469C() & 1) == 0)
        {
          v81 = objc_msgSend(v71, sel_compare_, v70);

          v10 = v161;
          if (v81 != (id)-1)
            goto LABEL_56;
          goto LABEL_64;
        }
        v156 = v70;
        v72 = objc_msgSend(v65, sel_title);
        v73 = sub_23126409C();
        v75 = v74;

        v160 = v66;
        v76 = objc_msgSend(v66, sel_title);
        v77 = sub_23126409C();
        v79 = v78;

        if (v73 == v77 && v75 == v79)
          break;
        v80 = sub_231264B58();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v10 = v161;
        v9 = v154;
        if ((v80 & 1) == 0)
          goto LABEL_56;
LABEL_64:
        if (!v10)
          goto LABEL_156;
        v82 = *(void **)v61;
        v62 = *(void **)(v61 + 8);
        *(_QWORD *)v61 = v62;
        *(_QWORD *)(v61 + 8) = v82;
        v61 -= 8;
        if (v9 == ++v63)
          goto LABEL_56;
      }

      swift_bridgeObjectRelease_n();
      v10 = v161;
      v9 = v154;
LABEL_56:
      ++v9;
      v61 = v151 + 8;
      v13 = v148;
      if (v9 != v146)
        continue;
      break;
    }
    v9 = v146;
    v8 = v149;
LABEL_68:
    if (v9 < v13)
      goto LABEL_146;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v8 = sub_231198FD8(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
    v84 = *((_QWORD *)v8 + 2);
    v83 = *((_QWORD *)v8 + 3);
    v12 = v84 + 1;
    if (v84 >= v83 >> 1)
      v8 = sub_231198FD8((char *)(v83 > 1), v84 + 1, 1, v8);
    *((_QWORD *)v8 + 2) = v12;
    v85 = v8 + 32;
    v86 = &v8[16 * v84 + 32];
    *(_QWORD *)v86 = v13;
    *((_QWORD *)v86 + 1) = v9;
    if (v84)
    {
      v155 = v9;
      while (1)
      {
        v87 = v12 - 1;
        if (v12 >= 4)
        {
          v92 = &v85[16 * v12];
          v93 = *((_QWORD *)v92 - 8);
          v94 = *((_QWORD *)v92 - 7);
          v98 = __OFSUB__(v94, v93);
          v95 = v94 - v93;
          if (v98)
            goto LABEL_135;
          v97 = *((_QWORD *)v92 - 6);
          v96 = *((_QWORD *)v92 - 5);
          v98 = __OFSUB__(v96, v97);
          v90 = v96 - v97;
          v91 = v98;
          if (v98)
            goto LABEL_136;
          v99 = v12 - 2;
          v100 = &v85[16 * v12 - 32];
          v102 = *(_QWORD *)v100;
          v101 = *((_QWORD *)v100 + 1);
          v98 = __OFSUB__(v101, v102);
          v103 = v101 - v102;
          if (v98)
            goto LABEL_138;
          v98 = __OFADD__(v90, v103);
          v104 = v90 + v103;
          if (v98)
            goto LABEL_141;
          if (v104 >= v95)
          {
            v122 = &v85[16 * v87];
            v124 = *(_QWORD *)v122;
            v123 = *((_QWORD *)v122 + 1);
            v98 = __OFSUB__(v123, v124);
            v125 = v123 - v124;
            if (v98)
              goto LABEL_145;
            v115 = v90 < v125;
            goto LABEL_106;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v116 = *((_QWORD *)v8 + 4);
            v117 = *((_QWORD *)v8 + 5);
            v98 = __OFSUB__(v117, v116);
            v109 = v117 - v116;
            v110 = v98;
            goto LABEL_100;
          }
          v89 = *((_QWORD *)v8 + 4);
          v88 = *((_QWORD *)v8 + 5);
          v98 = __OFSUB__(v88, v89);
          v90 = v88 - v89;
          v91 = v98;
        }
        if ((v91 & 1) != 0)
          goto LABEL_137;
        v99 = v12 - 2;
        v105 = &v85[16 * v12 - 32];
        v107 = *(_QWORD *)v105;
        v106 = *((_QWORD *)v105 + 1);
        v108 = __OFSUB__(v106, v107);
        v109 = v106 - v107;
        v110 = v108;
        if (v108)
          goto LABEL_140;
        v111 = &v85[16 * v87];
        v113 = *(_QWORD *)v111;
        v112 = *((_QWORD *)v111 + 1);
        v98 = __OFSUB__(v112, v113);
        v114 = v112 - v113;
        if (v98)
          goto LABEL_143;
        if (__OFADD__(v109, v114))
          goto LABEL_144;
        if (v109 + v114 >= v90)
        {
          v115 = v90 < v114;
LABEL_106:
          if (v115)
            v87 = v99;
          goto LABEL_108;
        }
LABEL_100:
        if ((v110 & 1) != 0)
          goto LABEL_139;
        v118 = &v85[16 * v87];
        v120 = *(_QWORD *)v118;
        v119 = *((_QWORD *)v118 + 1);
        v98 = __OFSUB__(v119, v120);
        v121 = v119 - v120;
        if (v98)
          goto LABEL_142;
        if (v121 < v109)
          goto LABEL_14;
LABEL_108:
        v126 = v87 - 1;
        if (v87 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
          goto LABEL_155;
        }
        if (!v10)
          goto LABEL_157;
        v127 = v8;
        v128 = v10;
        v129 = &v85[16 * v126];
        v130 = *(_QWORD *)v129;
        v131 = v85;
        v132 = v87;
        v133 = &v85[16 * v87];
        v134 = *((_QWORD *)v133 + 1);
        v135 = v128;
        sub_2311989D4((void **)(v128 + 8 * *(_QWORD *)v129), (id *)(v128 + 8 * *(_QWORD *)v133), v128 + 8 * v134, v152);
        if (v1)
          goto LABEL_129;
        if (v134 < v130)
          goto LABEL_132;
        if (v132 > *((_QWORD *)v127 + 2))
          goto LABEL_133;
        *(_QWORD *)v129 = v130;
        *(_QWORD *)&v131[16 * v126 + 8] = v134;
        v136 = *((_QWORD *)v127 + 2);
        if (v132 >= v136)
          goto LABEL_134;
        v8 = v127;
        v12 = v136 - 1;
        memmove(v133, v133 + 16, 16 * (v136 - 1 - v132));
        v85 = v131;
        *((_QWORD *)v127 + 2) = v136 - 1;
        v9 = v155;
        v10 = v135;
        if (v136 <= 2)
          goto LABEL_14;
      }
    }
    v12 = 1;
LABEL_14:
    v11 = v150;
    if (v9 >= v150)
      goto LABEL_118;
  }
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  sub_231264978();
  __break(1u);
}

void sub_231198738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __objc2_prop_list **p_base_props;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  id v27;
  void *v28;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;

  if (a3 != a2)
  {
    v4 = a3;
    v5 = *a4;
    v6 = *a4 + 8 * a3 - 8;
    p_base_props = (__objc2_prop_list **)(&NewRecordsDataProvider + 64);
    v34 = *a4;
    sub_231178AD0(0, (unint64_t *)&qword_255EB8410);
LABEL_6:
    v9 = *(void **)(v5 + 8 * v4);
    v10 = a1;
    v31 = v6;
    v35 = v4;
    while (1)
    {
      v11 = *(void **)v6;
      v12 = v9;
      v13 = v11;
      v14 = objc_msgSend(v12, (SEL)p_base_props[262]);
      v15 = objc_msgSend(v14, sel_sortDate);

      v16 = objc_msgSend(v13, (SEL)p_base_props[262]);
      v17 = objc_msgSend(v16, sel_sortDate);

      if ((sub_23126469C() & 1) != 0)
      {
        v32 = v15;
        v33 = v12;
        v18 = objc_msgSend(v12, sel_title);
        v19 = sub_23126409C();
        v21 = v20;

        v22 = objc_msgSend(v13, sel_title);
        v23 = sub_23126409C();
        v25 = v24;

        if (v19 == v23 && v21 == v25)
        {

          swift_bridgeObjectRelease_n();
          v8 = v35;
          v5 = v34;
          p_base_props = &NewRecordsDataProvider.base_props;
LABEL_5:
          v4 = v8 + 1;
          v6 = v31 + 8;
          if (v4 == a2)
            return;
          goto LABEL_6;
        }
        v26 = sub_231264B58();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v8 = v35;
        v5 = v34;
        p_base_props = (__objc2_prop_list **)(&NewRecordsDataProvider + 64);
        if ((v26 & 1) == 0)
          goto LABEL_5;
      }
      else
      {
        v27 = objc_msgSend(v17, sel_compare_, v15);

        v5 = v34;
        v8 = v35;
        if (v27 != (id)-1)
          goto LABEL_5;
      }
      if (!v5)
        break;
      v28 = *(void **)v6;
      v9 = *(void **)(v6 + 8);
      *(_QWORD *)v6 = v9;
      *(_QWORD *)(v6 + 8) = v28;
      v6 -= 8;
      if (v8 == ++v10)
        goto LABEL_5;
    }
    __break(1u);
  }
}

uint64_t sub_2311989D4(void **__src, id *a2, unint64_t a3, void **__dst)
{
  void **v4;
  unint64_t v5;
  id *v6;
  id *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void **v30;
  id *v31;
  char v32;
  void **v33;
  id *v34;
  id *v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void **v52;
  id v53;
  char v54;
  uint64_t result;
  void *v56;
  id *v57;
  void **v58;
  void **v59;
  void **v60;
  id *v61;
  unint64_t v62;
  void **v63;
  id *v64;
  void **v65;
  unint64_t v66;
  id *v67;
  id *v68;
  void **v69;
  void **v70;
  id *v71;

  v4 = __dst;
  v5 = a3;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v71 = __src;
  v70 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 < -7)
      goto LABEL_54;
    if (__dst != a2 || &a2[v13] <= __dst)
      memmove(__dst, a2, 8 * v13);
    v33 = &v4[v13];
    v69 = v33;
    v71 = v6;
    if (v7 >= v6 || v11 < 8)
    {
LABEL_53:
      sub_23119918C((void **)&v71, (const void **)&v70, &v69);
      return 1;
    }
    sub_231178AD0(0, (unint64_t *)&qword_255EB8410);
    v34 = (id *)(v5 - 8);
    v35 = v6;
    v59 = v4;
    v61 = v7;
    while (1)
    {
      v66 = (unint64_t)v33;
      v68 = v6;
      v36 = *(v33 - 1);
      v63 = v33 - 1;
      v64 = v34 + 1;
      v37 = *(v35 - 1);
      v57 = v35 - 1;
      v38 = v36;
      v39 = v37;
      v40 = objc_msgSend(v38, sel_medicalRecord);
      v41 = objc_msgSend(v40, sel_sortDate);

      v42 = objc_msgSend(v39, sel_medicalRecord);
      v43 = objc_msgSend(v42, sel_sortDate);

      if ((sub_23126469C() & 1) != 0)
      {
        v44 = objc_msgSend(v38, sel_title);
        v45 = sub_23126409C();
        v47 = v46;

        v56 = v39;
        v48 = objc_msgSend(v39, sel_title);
        v49 = sub_23126409C();
        v51 = v50;

        if (v45 == v49 && v47 == v51)
        {

          swift_bridgeObjectRelease_n();
          v52 = v59;
          v7 = v61;
LABEL_41:
          v33 = v63;
          v69 = v63;
          v35 = v68;
          if ((unint64_t)v64 < v66 || (unint64_t)v34 >= v66 || v64 != (id *)v66)
            *v34 = *v63;
          if (v68 <= v7)
            goto LABEL_53;
          goto LABEL_52;
        }
        v54 = sub_231264B58();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v52 = v59;
        v7 = v61;
        if ((v54 & 1) == 0)
          goto LABEL_41;
      }
      else
      {
        v53 = objc_msgSend(v43, sel_compare_, v41);

        v52 = v59;
        if (v53 != (id)-1)
          goto LABEL_41;
      }
      v33 = (void **)v66;
      v35 = v57;
      if (v64 != v68 || v34 >= v68)
        *v34 = *v57;
      v71 = v57;
      if (v57 <= v7)
        goto LABEL_53;
LABEL_52:
      --v34;
      v6 = v35;
      if (v33 <= v52)
        goto LABEL_53;
    }
  }
  if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v65 = &v4[v10];
    v69 = v65;
    if ((unint64_t)v6 < v5 && v8 >= 8)
    {
      v62 = v5;
      sub_231178AD0(0, (unint64_t *)&qword_255EB8410);
      while (1)
      {
        v60 = v7;
        v67 = v6;
        v14 = *v4;
        v15 = *v6;
        v16 = v14;
        v17 = objc_msgSend(v15, sel_medicalRecord);
        v18 = objc_msgSend(v17, sel_sortDate);

        v19 = objc_msgSend(v16, sel_medicalRecord);
        v20 = objc_msgSend(v19, sel_sortDate);

        if ((sub_23126469C() & 1) != 0)
        {
          v58 = v4;
          v21 = objc_msgSend(v15, sel_title);
          v22 = sub_23126409C();
          v24 = v23;

          v25 = objc_msgSend(v16, sel_title);
          v26 = sub_23126409C();
          v28 = v27;

          if (v22 == v26 && v24 == v28)
          {

            swift_bridgeObjectRelease_n();
            v4 = v58;
            v5 = v62;
          }
          else
          {
            v32 = sub_231264B58();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v4 = v58;
            v5 = v62;
            if ((v32 & 1) != 0)
            {
LABEL_22:
              v31 = v67 + 1;
              v30 = v60;
              if (v60 < v67 || v60 >= v31 || v60 != v67)
                *v60 = *v67;
              goto LABEL_26;
            }
          }
        }
        else
        {
          v29 = objc_msgSend(v20, sel_compare_, v18);

          if (v29 == (id)-1)
            goto LABEL_22;
        }
        v30 = v60;
        if (v60 != v4)
          *v60 = *v4;
        v70 = ++v4;
        v31 = v67;
LABEL_26:
        v7 = v30 + 1;
        if (v4 < v65)
        {
          v6 = v31;
          if ((unint64_t)v31 < v5)
            continue;
        }
        v71 = v7;
        goto LABEL_53;
      }
    }
    goto LABEL_53;
  }
LABEL_54:
  result = sub_2312649FC();
  __break(1u);
  return result;
}

char *sub_231198FD8(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_2311735E0(0, &qword_255EB8418, (uint64_t (*)(uint64_t))sub_23119C1AC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_2311990E4(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    result = (char *)sub_2312649FC();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

char *sub_23119918C(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    result = (char *)sub_2312649FC();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

char *sub_231199234(uint64_t a1)
{
  return sub_231198FD8(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_231199248(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_231199474(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_231199264(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2311995F0(a1, a2, a3, (_QWORD *)*v3, sub_23119C61C, type metadata accessor for SharedConceptFeedItemData);
  *v3 = result;
  return result;
}

uint64_t sub_231199290(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2311995F0(a1, a2, a3, (_QWORD *)*v3, sub_23119C600, (uint64_t (*)(_QWORD))MEMORY[0x24BE47758]);
  *v3 = result;
  return result;
}

uint64_t sub_2311992BC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2311995F0(a1, a2, a3, (_QWORD *)*v3, sub_23119C5E4, (uint64_t (*)(_QWORD))MEMORY[0x24BE477D0]);
  *v3 = result;
  return result;
}

uint64_t sub_2311992E8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_231199968(a1, a2, a3, (_QWORD *)*v3, (void (*)(_QWORD))sub_23119C148, &qword_255EB8400);
  *v3 = result;
  return result;
}

uint64_t sub_23119931C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2311997D0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_231199338(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2311995F0(a1, a2, a3, (_QWORD *)*v3, sub_23119C5AC, (uint64_t (*)(_QWORD))type metadata accessor for RecordKindFeedItemData);
  *v3 = result;
  return result;
}

uint64_t sub_231199364(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_231199968(a1, a2, a3, (_QWORD *)*v3, (void (*)(_QWORD))sub_23119C244, &qword_255EB8440);
  *v3 = result;
  return result;
}

uint64_t sub_231199398(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_231199968(a1, a2, a3, (_QWORD *)*v3, (void (*)(_QWORD))sub_23119C3E0, &qword_255EB8470);
  *v3 = result;
  return result;
}

uint64_t sub_2311993CC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_231199968(a1, a2, a3, (_QWORD *)*v3, (void (*)(_QWORD))sub_23119C338, &qword_255EB8458);
  *v3 = result;
  return result;
}

uint64_t sub_231199400(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2311995F0(a1, a2, a3, (_QWORD *)*v3, sub_23119C590, (uint64_t (*)(_QWORD))MEMORY[0x24BE48F28]);
  *v3 = result;
  return result;
}

uint64_t sub_23119942C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_231199B18(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_231199448(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2311995F0(a1, a2, a3, (_QWORD *)*v3, sub_23119C574, type metadata accessor for LabNameWithDate);
  *v3 = result;
  return result;
}

uint64_t sub_231199474(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_231171FD8(0, (unint64_t *)&qword_2541557B0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_2312649FC();
  __break(1u);
  return result;
}

uint64_t sub_2311995F0(char a1, int64_t a2, char a3, _QWORD *a4, void (*a5)(_QWORD), uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  a5(0);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_2312649FC();
  __break(1u);
  return result;
}

uint64_t sub_2311997D0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_2311735E0(0, &qword_254155748, (uint64_t (*)(uint64_t))sub_23119C5C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (_QWORD *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8)
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_23119C5C8(0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_2312649FC();
  __break(1u);
  return result;
}

uint64_t sub_231199968(char a1, int64_t a2, char a3, _QWORD *a4, void (*a5)(_QWORD), unint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    a5(0);
    v13 = (_QWORD *)swift_allocObject();
    v14 = j__malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v15 = (unint64_t)(v13 + 4);
  v16 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11)
      memmove(v13 + 4, a4 + 4, 40 * v11);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    sub_2311787A8(0, a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  result = sub_2312649FC();
  __break(1u);
  return result;
}

uint64_t sub_231199B18(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_231171FD8(0, &qword_255EB8480, MEMORY[0x24BEE4AD8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_2312649FC();
  __break(1u);
  return result;
}

uint64_t (*sub_231199C9C(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_231199D74(v6, a2, a3);
  return sub_231199CF0;
}

uint64_t (*sub_231199CF4(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_231199DE0(v6, a2, a3);
  return sub_231199CF0;
}

void sub_231199D48(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_231199D74(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v3)();
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x2348D7CE0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_23119CE08;
  }
  __break(1u);
  return result;
}

void (*sub_231199DE0(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x2348D7CE0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_231199E4C;
  }
  __break(1u);
  return result;
}

void sub_231199E4C(id *a1)
{

}

uint64_t sub_231199E54(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_2312649A8();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_2312649A8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_23119C72C();
        sub_231197434(qword_255EB84F8, 255, (uint64_t (*)(uint64_t))sub_23119C72C, MEMORY[0x24BEE12E0]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_231199C9C(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_231178AD0(0, &qword_255EBA000);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_2312649FC();
  __break(1u);
  return result;
}

uint64_t sub_23119A074(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_2312649A8();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_2312649A8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_23119C0E4();
        sub_231197434(&qword_255EB83E8, 255, (uint64_t (*)(uint64_t))sub_23119C0E4, MEMORY[0x24BEE12E0]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_231199C9C(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_231178AD0(0, &qword_255EB83C8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_2312649FC();
  __break(1u);
  return result;
}

uint64_t sub_23119A294(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_2312649A8();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_2312649A8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_23119C454();
        sub_231197434((unint64_t *)&unk_255EB8488, 255, (uint64_t (*)(uint64_t))sub_23119C454, MEMORY[0x24BEE12E0]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_231199C9C(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_231178AD0(0, (unint64_t *)&unk_254154628);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_2312649FC();
  __break(1u);
  return result;
}

uint64_t sub_23119A4B4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_2312649A8();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_2312649A8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_23119C510();
        sub_231197434(&qword_255EB84A0, 255, (uint64_t (*)(uint64_t))sub_23119C510, MEMORY[0x24BEE12E0]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_231199CF4(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_231178AD0(0, &qword_254155780);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_2312649FC();
  __break(1u);
  return result;
}

uint64_t sub_23119A6D4(uint64_t a1)
{
  return sub_231199474(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

void sub_23119A6E8()
{
  JUMPOUT(0x2348D7F14);
}

uint64_t sub_23119A6FC(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_23119A8F8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;

  v8 = type metadata accessor for SharedConceptFeedItemData(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v29 - v14;
  v17 = a4 + 56;
  v16 = *(_QWORD *)(a4 + 56);
  v32 = -1 << *(_BYTE *)(a4 + 32);
  if (-v32 < 64)
    v18 = ~(-1 << -(char)v32);
  else
    v18 = -1;
  v19 = v18 & v16;
  if (!a2)
  {
    v20 = 0;
    a3 = 0;
LABEL_34:
    v28 = ~v32;
    *a1 = a4;
    a1[1] = v17;
    a1[2] = v28;
    a1[3] = v20;
    a1[4] = v19;
    return a3;
  }
  if (!a3)
  {
    v20 = 0;
    goto LABEL_34;
  }
  if (a3 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v31 = a1;
  v20 = 0;
  v21 = 0;
  v33 = a4 + 56;
  v34 = (unint64_t)(63 - v32) >> 6;
  v30 = v34 - 1;
  if (!v19)
    goto LABEL_9;
LABEL_8:
  v22 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  v23 = v22 | (v20 << 6);
  while (1)
  {
    ++v21;
    v27 = *(_QWORD *)(v9 + 72);
    sub_231178454(*(_QWORD *)(a4 + 48) + v27 * v23, (uint64_t)v12, type metadata accessor for SharedConceptFeedItemData);
    sub_231188F00((uint64_t)v12, (uint64_t)v15);
    result = sub_231188F00((uint64_t)v15, a2);
    if (v21 == a3)
      goto LABEL_33;
    a2 += v27;
    if (v19)
      goto LABEL_8;
LABEL_9:
    v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v24 >= v34)
    {
      v19 = 0;
      a3 = v21;
LABEL_33:
      a1 = v31;
      v17 = v33;
      goto LABEL_34;
    }
    v17 = v33;
    v25 = *(_QWORD *)(v33 + 8 * v24);
    if (!v25)
      break;
LABEL_18:
    v19 = (v25 - 1) & v25;
    v23 = __clz(__rbit64(v25)) + (v24 << 6);
    v20 = v24;
  }
  v20 += 2;
  if (v24 + 1 >= v34)
  {
    v19 = 0;
    v20 = v24;
LABEL_39:
    a3 = v21;
    a1 = v31;
    goto LABEL_34;
  }
  v25 = *(_QWORD *)(v33 + 8 * v20);
  if (v25)
    goto LABEL_14;
  v26 = v24 + 2;
  if (v24 + 2 >= v34)
    goto LABEL_36;
  v25 = *(_QWORD *)(v33 + 8 * v26);
  if (v25)
    goto LABEL_17;
  v20 = v24 + 3;
  if (v24 + 3 >= v34)
  {
    v19 = 0;
    v20 = v24 + 2;
    goto LABEL_39;
  }
  v25 = *(_QWORD *)(v33 + 8 * v20);
  if (v25)
  {
LABEL_14:
    v24 = v20;
    goto LABEL_18;
  }
  v26 = v24 + 4;
  if (v24 + 4 >= v34)
  {
LABEL_36:
    v19 = 0;
    goto LABEL_39;
  }
  v25 = *(_QWORD *)(v33 + 8 * v26);
  if (v25)
  {
LABEL_17:
    v24 = v26;
    goto LABEL_18;
  }
  while (1)
  {
    v24 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v24 >= v34)
    {
      v19 = 0;
      v20 = v30;
      goto LABEL_39;
    }
    v25 = *(_QWORD *)(v33 + 8 * v24);
    ++v26;
    if (v25)
      goto LABEL_18;
  }
LABEL_42:
  __break(1u);
  return result;
}

_QWORD *sub_23119ABA4(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;

  v4 = a4;
  v6 = a2;
  v7 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_2312647EC();
    sub_231178AD0(0, (unint64_t *)&qword_2541556C0);
    sub_23119C4B8();
    result = (_QWORD *)sub_231264360();
    v4 = v27;
    v8 = v28;
    v9 = v29;
    v10 = v30;
    v11 = v31;
    v24 = v7;
    if (v6)
      goto LABEL_3;
LABEL_36:
    v12 = 0;
LABEL_46:
    *v24 = v4;
    v24[1] = v8;
    v24[2] = v9;
    v24[3] = v10;
    v24[4] = v11;
    return (_QWORD *)v12;
  }
  v10 = 0;
  v20 = -1 << *(_BYTE *)(a4 + 32);
  v8 = a4 + 56;
  v9 = ~v20;
  v21 = -v20;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  else
    v22 = -1;
  v11 = v22 & *(_QWORD *)(a4 + 56);
  v24 = result;
  if (!a2)
    goto LABEL_36;
LABEL_3:
  if (!a3)
  {
    v12 = 0;
    goto LABEL_46;
  }
  if (a3 < 0)
    goto LABEL_48;
  v12 = 0;
  v25 = (unint64_t)(v9 + 64) >> 6;
  v23 = v9;
  while (1)
  {
    if (v4 < 0)
    {
      if (!sub_231264840())
        goto LABEL_45;
      sub_231178AD0(0, (unint64_t *)&qword_2541556C0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v15 = v26;
      result = (_QWORD *)swift_unknownObjectRelease();
      if (!v26)
        goto LABEL_45;
      goto LABEL_8;
    }
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v10 << 6);
      goto LABEL_7;
    }
    v16 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v16 >= v25)
    {
      v11 = 0;
      goto LABEL_45;
    }
    v17 = *(_QWORD *)(v8 + 8 * v16);
    if (v17)
      goto LABEL_23;
    v18 = v10 + 2;
    if (v10 + 2 >= v25)
    {
      v11 = 0;
      ++v10;
      goto LABEL_45;
    }
    v17 = *(_QWORD *)(v8 + 8 * v18);
    if (!v17)
    {
      if (v10 + 3 >= v25)
        goto LABEL_42;
      v17 = *(_QWORD *)(v8 + 8 * (v10 + 3));
      if (v17)
      {
        v16 = v10 + 3;
        goto LABEL_23;
      }
      v18 = v10 + 4;
      if (v10 + 4 >= v25)
      {
        v11 = 0;
        v10 += 3;
        goto LABEL_45;
      }
      v17 = *(_QWORD *)(v8 + 8 * v18);
      if (!v17)
      {
        v16 = v10 + 5;
        if (v10 + 5 >= v25)
        {
LABEL_42:
          v11 = 0;
          v10 = v18;
          goto LABEL_45;
        }
        v17 = *(_QWORD *)(v8 + 8 * v16);
        if (!v17)
        {
          v19 = v10 + 6;
          while (v25 != v19)
          {
            v17 = *(_QWORD *)(v8 + 8 * v19++);
            if (v17)
            {
              v16 = v19 - 1;
              goto LABEL_23;
            }
          }
          v11 = 0;
          v10 = v25 - 1;
          goto LABEL_45;
        }
        goto LABEL_23;
      }
    }
    v16 = v18;
LABEL_23:
    v11 = (v17 - 1) & v17;
    v14 = __clz(__rbit64(v17)) + (v16 << 6);
    v10 = v16;
LABEL_7:
    result = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    v15 = result;
    if (!result)
      goto LABEL_45;
LABEL_8:
    ++v12;
    *v6++ = v15;
    if (v12 == a3)
    {
      v12 = a3;
LABEL_45:
      v9 = v23;
      goto LABEL_46;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_23119AEAC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  _QWORD *v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v9 = a5(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v33 - v15;
  v40 = a4;
  v19 = *(_QWORD *)(a4 + 56);
  v18 = a4 + 56;
  v17 = v19;
  v38 = v18;
  v20 = -1 << *(_BYTE *)(v18 - 24);
  if (-v20 < 64)
    v21 = ~(-1 << -(char)v20);
  else
    v21 = -1;
  v22 = v21 & v17;
  if (!a2)
  {
    v23 = 0;
    a3 = 0;
LABEL_38:
    v32 = v38;
    *a1 = v40;
    a1[1] = v32;
    a1[2] = ~v20;
    a1[3] = v23;
    a1[4] = v22;
    return a3;
  }
  if (!a3)
  {
    v23 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v35 = -1 << *(_BYTE *)(v18 - 24);
  v36 = a1;
  v23 = 0;
  v24 = 0;
  v37 = (unint64_t)(63 - v20) >> 6;
  v34 = v37 - 1;
  v39 = a3;
  if (!v22)
    goto LABEL_9;
LABEL_8:
  v25 = __clz(__rbit64(v22));
  v22 &= v22 - 1;
  v26 = v25 | (v23 << 6);
  while (1)
  {
    ++v24;
    v30 = *(_QWORD *)(v10 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v13, *(_QWORD *)(v40 + 48) + v30 * v26, v9);
    v31 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v31(v16, v13, v9);
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v31)(a2, v16, v9);
    a3 = v39;
    if (v24 == v39)
      goto LABEL_37;
    a2 += v30;
    if (v22)
      goto LABEL_8;
LABEL_9:
    v27 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v27 >= v37)
      goto LABEL_32;
    v28 = *(_QWORD *)(v38 + 8 * v27);
    if (!v28)
      break;
LABEL_18:
    v22 = (v28 - 1) & v28;
    v26 = __clz(__rbit64(v28)) + (v27 << 6);
    v23 = v27;
  }
  v23 += 2;
  if (v27 + 1 >= v37)
  {
    v22 = 0;
    v23 = v27;
    goto LABEL_36;
  }
  v28 = *(_QWORD *)(v38 + 8 * v23);
  if (v28)
    goto LABEL_14;
  v29 = v27 + 2;
  if (v27 + 2 >= v37)
    goto LABEL_32;
  v28 = *(_QWORD *)(v38 + 8 * v29);
  if (v28)
    goto LABEL_17;
  v23 = v27 + 3;
  if (v27 + 3 >= v37)
  {
    v22 = 0;
    v23 = v27 + 2;
    goto LABEL_36;
  }
  v28 = *(_QWORD *)(v38 + 8 * v23);
  if (v28)
  {
LABEL_14:
    v27 = v23;
    goto LABEL_18;
  }
  v29 = v27 + 4;
  if (v27 + 4 >= v37)
  {
LABEL_32:
    v22 = 0;
LABEL_36:
    a3 = v24;
LABEL_37:
    v20 = v35;
    a1 = v36;
    goto LABEL_38;
  }
  v28 = *(_QWORD *)(v38 + 8 * v29);
  if (v28)
  {
LABEL_17:
    v27 = v29;
    goto LABEL_18;
  }
  while (1)
  {
    v27 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v27 >= v37)
    {
      v22 = 0;
      v23 = v34;
      goto LABEL_36;
    }
    v28 = *(_QWORD *)(v38 + 8 * v27);
    ++v29;
    if (v28)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

void sub_23119B174(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  void *v4;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  id v13;
  char v14;
  id v15;
  void *v16;

  v6 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (sub_231264804() == *(_DWORD *)(a4 + 36))
      {
        sub_231264810();
        sub_231178AD0(0, &qword_254154600);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v4 = v16;
        swift_unknownObjectRelease();
        v8 = sub_231264690();
        v9 = -1 << *(_BYTE *)(a4 + 32);
        v6 = v8 & ~v9;
        if (((*(_QWORD *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
        {
          v10 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
          v11 = sub_23126469C();

          if ((v11 & 1) == 0)
          {
            v12 = ~v9;
            do
            {
              v6 = (v6 + 1) & v12;
              if (((*(_QWORD *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
                goto LABEL_24;
              v13 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
              v14 = sub_23126469C();

            }
            while ((v14 & 1) == 0);
          }

LABEL_20:
          v15 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v7 = a4;
  else
    v7 = a4 & 0xFFFFFFFFFFFFFF8;
  MEMORY[0x2348D7C38](a1, a2, v7);
  sub_231178AD0(0, &qword_254154600);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
}

uint64_t sub_23119B3DC(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 72);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_23119B464(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  v9 = sub_231178884((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v9, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_2311789AC(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_23119B4DC(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t i;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v9;
  id v10;
  uint64_t v11;

  v11 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_17;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; v3 = sub_2312649A8())
  {
    for (i = 4; ; ++i)
    {
      v5 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2348D7CE0](i - 4, a1) : *(id *)(a1 + 8 * i);
      v6 = v5;
      v7 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v10 = v5;
      sub_231196534(&v10, &v9);
      if (v1)
      {
        swift_bridgeObjectRelease();

        return swift_bridgeObjectRelease();
      }

      if (v9)
      {
        MEMORY[0x2348D75E4]();
        if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23126424C();
        sub_231264264();
        sub_231264210();
      }
      if (v7 == v3)
      {
        swift_bridgeObjectRelease();
        return v11;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

void sub_23119B674(void *a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  _QWORD *v9;
  void *v10;
  id v11;
  _QWORD v12[6];

  sub_2312628A8();
  v6 = (void *)sub_231262884();
  v7 = (void *)sub_231262854();

  v8 = objc_msgSend(v7, sel_clinicalAccountStore);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a2;
  v9[3] = a3;
  v9[4] = a1;
  v12[4] = sub_23119C6BC;
  v12[5] = v9;
  v12[0] = MEMORY[0x24BDAC760];
  v12[1] = 1107296256;
  v12[2] = sub_2311C7D94;
  v12[3] = &unk_25000BBB8;
  v10 = _Block_copy(v12);
  v11 = a1;
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_shouldShowHealthRecordsSectionWithCompletion_, v10);
  _Block_release(v10);

}

void sub_23119B788(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  id v18;

  v3 = sub_231263B5C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231262CC8();
  v7 = (void *)sub_231262CBC();
  v8 = *(void **)(v1 + *(int *)(type metadata accessor for HealthRecordsPluginAppDelegate.CHRAccountsListItem() + 40));
  sub_2312628A8();
  if (v8)
  {
    v9 = v8;
    v10 = (void *)sub_231262884();
    v11 = (void *)sub_23126289C();

  }
  else
  {
    v10 = (void *)sub_231262884();
    v11 = (void *)sub_231262860();
  }

  v18 = (id)sub_231262C50();
  v12 = objc_msgSend(a1, sel_navigationController);
  if (v12)
  {
    v13 = v12;
    objc_msgSend(v12, sel_pushViewController_animated_, v18, 1);

  }
  else
  {
    sub_231263B20();
    v14 = sub_231263B50();
    v15 = sub_2312643E4();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_23116F000, v14, v15, "CHRAccountsListItem was given a view controller without a navigation controller, unable to present settings view controller", v16, 2u);
      MEMORY[0x2348D85EC](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

unint64_t sub_23119B978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v16;
  unint64_t v17;
  char v18;
  char v19;
  char v20;
  char v21;
  unint64_t result;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v48 = a6;
  v49 = a4;
  v43 = a3;
  v44 = a5;
  v8 = sub_2312639E8();
  v46 = *(_QWORD *)(v8 - 8);
  v47 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v45 = (uint64_t *)((char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8];
  sub_2311735E0(0, (unint64_t *)&qword_254151918, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v42 - v12;
  v52 = a1;
  v53 = a2;
  v50 = 0x676E69726168535BLL;
  v51 = 0xEB000000003A4449;
  v14 = sub_231261EAC();
  v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v15(v13, 1, 1, v14);
  sub_231188564();
  sub_231264798();
  v17 = v16;
  v19 = v18;
  sub_231189628((uint64_t)v13, (unint64_t *)&qword_254151918, v10);
  swift_bridgeObjectRelease();
  if ((v19 & 1) != 0)
    return MEMORY[0x24BEE4AF8];
  v52 = a1;
  v53 = a2;
  v50 = 0xD000000000000010;
  v51 = 0x800000023126C190;
  v15(v13, 1, 1, v14);
  sub_231264798();
  v21 = v20;
  sub_231189628((uint64_t)v13, (unint64_t *)&qword_254151918, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8]);
  swift_bridgeObjectRelease();
  if ((v21 & 1) != 0)
    return MEMORY[0x24BEE4AF8];
  result = sub_231264138();
  if (result >> 14 >= v17 >> 14)
  {
    v23 = sub_2312641BC();
    v24 = MEMORY[0x2348D74DC](v23);
    v26 = v25;
    swift_bridgeObjectRelease();
    v27 = HIBYTE(v26) & 0xF;
    if ((v26 & 0x2000000000000000) == 0)
      v27 = v24 & 0xFFFFFFFFFFFFLL;
    if (v27)
    {
      v28 = sub_2311DDBBC(v24, v26);
      if (v28)
      {
        v31 = v28;
        v32 = sub_2311DBA50(v28, v29, v30);
        v34 = v33;
        sub_2311884EC(v31);
        v35 = v45;
        *v45 = v32;
        v35[1] = v34;
        v37 = v48;
        v36 = v49;
        v35[2] = v43;
        v35[3] = v36;
        v35[4] = v44;
        v35[5] = v37;
        v39 = v46;
        v38 = v47;
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v46 + 104))(v35, *MEMORY[0x24BE45920], v47);
        sub_2311735E0(0, (unint64_t *)&unk_255EB83B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE45940], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
        v40 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
        v41 = swift_allocObject();
        *(_OWORD *)(v41 + 16) = xmmword_231265AC0;
        (*(void (**)(unint64_t, uint64_t *, uint64_t))(v39 + 32))(v41 + v40, v35, v38);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        return v41;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    return MEMORY[0x24BEE4AF8];
  }
  __break(1u);
  return result;
}

uint64_t sub_23119BCF4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_23119BD00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;

  v30 = sub_2312626E0();
  v2 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, &qword_254151850, (uint64_t (*)(uint64_t))MEMORY[0x24BE490F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v29 - v6;
  v8 = sub_23126292C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2312639E8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (uint64_t *)((char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v13 + 88))(v15, v12) == *MEMORY[0x24BE45920])
  {
    (*(void (**)(uint64_t *, uint64_t))(v13 + 96))(v15, v12);
    v16 = *v15;
    v17 = v15[1];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v18 = sub_2311DDBBC(v16, v17);
    if (v18)
    {
      v21 = v18;
      v22 = v19;
      v23 = v20;
      if (*(_QWORD *)(swift_bridgeObjectRetain() + 16))
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v7, v21 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), v8);
        v24 = 0;
      }
      else
      {
        v24 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, v24, 1, v8);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
        sub_2311DBA50(v21, v22, v23);
        sub_2311884EC(v21);
        v27 = v30;
        (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BE48DE0], v30);
        v28 = (void *)sub_231262014();
        v25 = sub_2312630A0();
        swift_bridgeObjectRelease();

        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v27);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        return v25;
      }
      sub_2311884EC(v21);
      sub_231189628((uint64_t)v7, &qword_254151850, (uint64_t (*)(uint64_t))MEMORY[0x24BE490F8]);
    }
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t))(v13 + 8))(v15, v12);
  }
  return 0;
}

uint64_t sub_23119C020()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23119C054(unint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_231196190(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void (**)(uint64_t, void *))(v2 + 32), *(_QWORD *)(v2 + 40), *(void **)(v2 + 48));
}

uint64_t sub_23119C064(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23119C074()
{
  return swift_release();
}

void sub_23119C07C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255EB83D0)
  {
    sub_2311787A8(255, qword_254155900);
    v0 = sub_231264738();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255EB83D0);
  }
}

void sub_23119C0E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255EB83E0)
  {
    sub_231178AD0(255, &qword_255EB83C8);
    v0 = sub_231264270();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255EB83E0);
  }
}

void sub_23119C148()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255EB83F8)
  {
    sub_2311787A8(255, &qword_255EB8400);
    v0 = sub_231264B34();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255EB83F8);
  }
}

void sub_23119C1AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255EB8420)
  {
    v0 = sub_23126436C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255EB8420);
  }
}

uint64_t sub_23119C208(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SharedConceptCodedValue(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_23119C244()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255EB8438)
  {
    sub_2311787A8(255, &qword_255EB8440);
    v0 = sub_231264B34();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255EB8438);
  }
}

unint64_t sub_23119C2A8()
{
  unint64_t result;

  result = qword_255EB8448;
  if (!qword_255EB8448)
  {
    result = MEMORY[0x2348D8544](&unk_2312684A8, &type metadata for SharedConceptFormattedRecord);
    atomic_store(result, (unint64_t *)&qword_255EB8448);
  }
  return result;
}

uint64_t sub_23119C2EC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23119C338()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255EB8450)
  {
    sub_2311787A8(255, &qword_255EB8458);
    v0 = sub_231264B34();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255EB8450);
  }
}

unint64_t sub_23119C39C()
{
  unint64_t result;

  result = qword_255EB8460;
  if (!qword_255EB8460)
  {
    result = MEMORY[0x2348D8544](&unk_231267CDC, &type metadata for SharedConceptFormattedRecord);
    atomic_store(result, (unint64_t *)&qword_255EB8460);
  }
  return result;
}

void sub_23119C3E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255EB8468)
  {
    sub_2311787A8(255, &qword_255EB8470);
    v0 = sub_231264B34();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255EB8468);
  }
}

_OWORD *sub_23119C444(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void sub_23119C454()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541546A0)
  {
    sub_231178AD0(255, (unint64_t *)&unk_254154628);
    v0 = sub_231264270();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541546A0);
  }
}

unint64_t sub_23119C4B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541556C8;
  if (!qword_2541556C8)
  {
    v1 = sub_231178AD0(255, (unint64_t *)&qword_2541556C0);
    result = MEMORY[0x2348D8544](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_2541556C8);
  }
  return result;
}

void sub_23119C510()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255EB8498)
  {
    sub_231178AD0(255, &qword_254155780);
    v0 = sub_231264270();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255EB8498);
  }
}

void sub_23119C574(uint64_t a1)
{
  sub_2311735E0(a1, &qword_255EB84A8, type metadata accessor for LabNameWithDate, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
}

void sub_23119C590(uint64_t a1)
{
  sub_2311735E0(a1, &qword_254155738, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
}

void sub_23119C5AC(uint64_t a1)
{
  sub_2311735E0(a1, (unint64_t *)&unk_255EB84B0, (uint64_t (*)(uint64_t))type metadata accessor for RecordKindFeedItemData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
}

void sub_23119C5C8(uint64_t a1)
{
  sub_2311735E0(a1, &qword_254155630, (uint64_t (*)(uint64_t))type metadata accessor for RecordKindFeedItemData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
}

void sub_23119C5E4(uint64_t a1)
{
  sub_2311735E0(a1, &qword_254155720, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
}

void sub_23119C600(uint64_t a1)
{
  sub_2311735E0(a1, &qword_255EB84C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47758], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
}

void sub_23119C61C(uint64_t a1)
{
  sub_2311735E0(a1, &qword_255EB84C8, type metadata accessor for SharedConceptFeedItemData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
}

uint64_t sub_23119C638()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23119C65C()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23119C688(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_231194D70(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_23119C690()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23119C6BC(char a1, uint64_t a2)
{
  uint64_t v2;

  return sub_231194448(a1, a2, *(void (**)(void))(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t type metadata accessor for HealthRecordsPluginAppDelegate.CHRAccountsListItem()
{
  uint64_t result;

  result = qword_255EB8558;
  if (!qword_255EB8558)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23119C704(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

void sub_23119C72C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255EB84F0)
  {
    sub_231178AD0(255, &qword_255EBA000);
    v0 = sub_231264270();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255EB84F0);
  }
}

_QWORD *sub_23119C790(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v21;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v9;
    v10 = a2[6];
    v11 = a2[7];
    *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
    v12 = *(int *)(a3 + 36);
    v21 = a1 + v12;
    v13 = (uint64_t)a2 + v12;
    *(_QWORD *)(a1 + 48) = v10;
    *(_QWORD *)(a1 + 56) = v11;
    v14 = sub_231261E94();
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15(v21, v13, v14);
    v16 = *(int *)(a3 + 40);
    v17 = *(void **)((char *)a2 + v16);
    *(_QWORD *)((char *)v4 + v16) = v17;
    v18 = v17;
  }
  return v4;
}

void sub_23119C898(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = sub_231261E94();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

}

uint64_t sub_23119C90C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  void *v16;
  id v17;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v10 = *(int *)(a3 + 36);
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  v13 = sub_231261E94();
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14(v11, v12, v13);
  v15 = *(int *)(a3 + 40);
  v16 = *(void **)(a2 + v15);
  *(_QWORD *)(a1 + v15) = v16;
  v17 = v16;
  return a1;
}

uint64_t sub_23119C9E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v6 = *(int *)(a3 + 36);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_231261E94();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 40);
  v11 = *(void **)(a1 + v10);
  v12 = *(void **)(a2 + v10);
  *(_QWORD *)(a1 + v10) = v12;
  v13 = v12;

  return a1;
}

uint64_t sub_23119CAEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v8 = *(int *)(a3 + 36);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_231261E94();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  *(_QWORD *)(a1 + *(int *)(a3 + 40)) = *(_QWORD *)(a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t sub_23119CB74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v10 = *(int *)(a3 + 36);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_231261E94();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = *(int *)(a3 + 40);
  v15 = *(void **)(a1 + v14);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);

  return a1;
}

uint64_t sub_23119CC34()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23119CC40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_231261E94();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t sub_23119CCBC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23119CCC8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_231261E94();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

uint64_t sub_23119CD3C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_231261E94();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23119CDD0()
{
  return sub_231197434(&qword_255EB84D8, 255, (uint64_t (*)(uint64_t))type metadata accessor for HealthRecordsPluginAppDelegate.CHRAccountsListItem, (uint64_t)&unk_231266770);
}

id sub_23119CE0C(uint64_t a1, uint64_t a2)
{
  return sub_23119CE24(a1, a2, (SEL *)&selRef_clinicalAccountStore);
}

id sub_23119CE18(uint64_t a1, uint64_t a2)
{
  return sub_23119CE24(a1, a2, (SEL *)&selRef_healthRecordsStore);
}

id sub_23119CE24(uint64_t a1, uint64_t a2, SEL *a3)
{
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v4 = (void *)sub_231262194();
  v5 = objc_msgSend(v4, sel_profileIdentifier);

  sub_2312628A8();
  v6 = (void *)sub_231262884();
  v7 = (void *)sub_23126289C();

  v8 = objc_msgSend(v7, *a3);
  return v8;
}

uint64_t sub_23119CEB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  v3 = v2;
  v59 = a2;
  v80 = a1;
  v4 = type metadata accessor for HealthRecordsGeneratorContext();
  v58 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v79 = v5;
  v75 = (uint64_t)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311A15E4();
  v64 = v6;
  v62 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v60 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311A1944();
  v65 = v8;
  v63 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v61 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311A1B04();
  v67 = *(_QWORD *)(v10 - 8);
  v68 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v66 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311A1B7C();
  v70 = *(_QWORD *)(v12 - 8);
  v71 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v69 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311A1C28();
  v77 = v14;
  v74 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v72 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311A1CD4();
  v78 = v16;
  v76 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v73 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_231263B5C();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231263B38();
  v22 = sub_231263B50();
  v23 = sub_2312643F0();
  if (os_log_type_enabled(v22, v23))
  {
    v55 = v18;
    v24 = swift_slowAlloc();
    v57 = v4;
    v25 = (uint8_t *)v24;
    v26 = swift_slowAlloc();
    v82 = v26;
    *(_DWORD *)v25 = 136315138;
    v27 = sub_231264C84();
    v81 = sub_2311CBDE4(v27, v28, &v82);
    sub_231264750();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23116F000, v22, v23, "%s Account status generator - make publisher ", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v26, -1, -1);
    MEMORY[0x2348D85EC](v25, -1, -1);

    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v55);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  }
  v56 = v3;
  v29 = v80;
  v82 = sub_2311C7DDC();
  sub_231263CF4();
  sub_2311A18C0();
  sub_2311A1750();
  sub_231172048(&qword_254153488, (uint64_t (*)(uint64_t))sub_2311A18C0, MEMORY[0x24BDB9AF8]);
  sub_231172048(&qword_254153478, (uint64_t (*)(uint64_t))sub_2311A1750, MEMORY[0x24BDB9970]);
  v30 = v60;
  sub_231263ED4();
  swift_release();
  v31 = v75;
  sub_2311733CC(v29, v75);
  v32 = *(unsigned __int8 *)(v58 + 80);
  v33 = (v32 + 24) & ~v32;
  v58 = v33 + v79;
  v57 = v32 | 7;
  v34 = (v33 + v79 + 7) & 0xFFFFFFFFFFFFFFF8;
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = v59;
  sub_23117353C(v31, v35 + v33);
  *(_QWORD *)(v35 + v34) = v3;
  v36 = swift_allocObject();
  *(_QWORD *)(v36 + 16) = sub_2311A1E38;
  *(_QWORD *)(v36 + 24) = v35;
  swift_retain();
  sub_231263CF4();
  sub_23126217C();
  sub_2311A1A0C();
  sub_231172048(&qword_254153468, (uint64_t (*)(uint64_t))sub_2311A15E4, MEMORY[0x24BDB98F0]);
  sub_231172048(&qword_254153FC0, (uint64_t (*)(uint64_t))sub_2311A1A0C, MEMORY[0x24BDB94C8]);
  v37 = v61;
  v38 = v64;
  sub_231263EE0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v30, v38);
  sub_231172048(&qword_254153458, (uint64_t (*)(uint64_t))sub_2311A1944, MEMORY[0x24BDB98F0]);
  v39 = v65;
  v40 = v66;
  sub_231263EC8();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v37, v39);
  v41 = v80;
  sub_2311733CC(v80, v31);
  v42 = swift_allocObject();
  v43 = v56;
  *(_QWORD *)(v42 + 16) = v56;
  sub_23117353C(v31, v42 + v33);
  sub_2311735E0(0, &qword_254151870, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_231172048(&qword_254153448, (uint64_t (*)(uint64_t))sub_2311A1B04, MEMORY[0x24BDB98D8]);
  v45 = v68;
  v44 = v69;
  sub_231263E80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v40, v45);
  sub_2311733CC(v41, v31);
  v46 = swift_allocObject();
  sub_23117353C(v31, v46 + ((v32 + 16) & ~v32));
  sub_231171FD8(0, (unint64_t *)&qword_254155638, MEMORY[0x24BE47F58], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  v47 = v71;
  v48 = v72;
  sub_231263C10();
  swift_release();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v44, v47);
  *(_QWORD *)(swift_allocObject() + 16) = v43;
  sub_231187D64();
  sub_231172048(&qword_254153438, (uint64_t (*)(uint64_t))sub_2311A1C28, MEMORY[0x24BDB98C8]);
  sub_231172048(&qword_254152F30, (uint64_t (*)(uint64_t))sub_231187D64, MEMORY[0x24BDB9AF8]);
  v49 = v73;
  v50 = v77;
  sub_231263E8C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v48, v50);
  sub_231172048(&qword_254153428, (uint64_t (*)(uint64_t))sub_2311A1CD4, MEMORY[0x24BDB9740]);
  v51 = v78;
  v52 = sub_231263E38();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v49, v51);
  return v52;
}

uint64_t sub_23119D71C()
{
  sub_2311735E0(0, &qword_2541534D8, (uint64_t (*)(uint64_t))sub_2311A17E4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_2311A1860();
  return sub_2312641C8();
}

uint64_t sub_23119D78C@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v20 = a3;
  v21 = a4;
  v19[1] = a2;
  v22 = a5;
  v6 = type metadata accessor for HealthRecordsGeneratorContext();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = sub_231261E94();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(a1, sel_identifier);
  sub_231261E7C();

  sub_231261E58();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v14 = sub_2312631CC();
  swift_bridgeObjectRelease();
  v23 = v14;
  sub_2311733CC(v20, (uint64_t)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  sub_23117353C((uint64_t)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15);
  *(_QWORD *)(v16 + ((v8 + v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = v21;
  sub_2311A1AA0();
  sub_23126217C();
  sub_231172048(&qword_254152FE0, (uint64_t (*)(uint64_t))sub_2311A1AA0, MEMORY[0x24BDB9AF8]);
  v17 = a1;
  sub_231263E44();
  swift_release();
  return swift_release();
}

void sub_23119D97C(_BYTE *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  _QWORD v48[2];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v56 = a5;
  v9 = sub_231261E94();
  v54 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_231263B5C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v48 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)v48 - v19;
  if (*a1 == 1)
  {
    v50 = a4;
    v51 = a3;
    v52 = v18;
    sub_231263B20();
    v21 = a2;
    v22 = sub_231263B50();
    v23 = sub_2312643C0();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc();
      v53 = v13;
      v25 = v24;
      v49 = swift_slowAlloc();
      v58 = v49;
      *(_DWORD *)v25 = 136315394;
      v57 = v50;
      swift_getMetatypeMetadata();
      v55 = v12;
      v26 = sub_2312640B4();
      v57 = sub_2311CBDE4(v26, v27, &v58);
      sub_231264750();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2080;
      v48[1] = v25 + 14;
      v28 = objc_msgSend(v21, sel_identifier);
      sub_231261E7C();

      sub_231172048(&qword_255EB78D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v29 = sub_231264B28();
      v31 = v30;
      (*(void (**)(char *, uint64_t))(v54 + 8))(v11, v9);
      v57 = sub_2311CBDE4(v29, v31, &v58);
      v32 = v55;
      sub_231264750();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23116F000, v22, v23, "%s: generating feed item for account %s", (uint8_t *)v25, 0x16u);
      v33 = v49;
      swift_arrayDestroy();
      MEMORY[0x2348D85EC](v33, -1, -1);
      MEMORY[0x2348D85EC](v25, -1, -1);

      (*(void (**)(char *, uint64_t))(v53 + 8))(v20, v32);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
    }
    v46 = (void *)sub_231262230();
    sub_23119E0F8(v21, v46, v56);

  }
  else
  {
    v53 = v13;
    v55 = v12;
    sub_231263B20();
    v34 = a2;
    v35 = sub_231263B50();
    v36 = sub_2312643CC();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = a4;
      v38 = swift_slowAlloc();
      v52 = swift_slowAlloc();
      v58 = v52;
      *(_DWORD *)v38 = 136315394;
      v57 = v37;
      swift_getMetatypeMetadata();
      v39 = sub_2312640B4();
      v57 = sub_2311CBDE4(v39, v40, &v58);
      sub_231264750();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 12) = 2080;
      v51 = v38 + 14;
      v41 = objc_msgSend(v34, sel_identifier);
      sub_231261E7C();

      sub_231172048(&qword_255EB78D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v42 = sub_231264B28();
      v44 = v43;
      (*(void (**)(char *, uint64_t))(v54 + 8))(v11, v9);
      v57 = sub_2311CBDE4(v42, v44, &v58);
      sub_231264750();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23116F000, v35, v36, "%s: should not generate feed item for account %s", (uint8_t *)v38, 0x16u);
      v45 = v52;
      swift_arrayDestroy();
      MEMORY[0x2348D85EC](v45, -1, -1);
      MEMORY[0x2348D85EC](v38, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v53 + 8))(v17, v55);
    v47 = sub_23126217C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v56, 1, 1, v47);
  }
}

uint64_t sub_23119E0F8@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  id v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  char *v68;
  id v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  char *v75;
  void (*v76)(char *, uint64_t, uint64_t);
  uint64_t v77;
  void (*v78)(_QWORD, _QWORD, _QWORD);
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v84)(_QWORD, _QWORD);
  void (*v85)(char *, char *, _QWORD);
  char *v86;
  char *v87;
  uint64_t v88;
  char v89;
  void (*v90)(_QWORD, _QWORD, _QWORD);
  char *v91;
  char v92;
  uint64_t v93;
  id v94;
  id v95;
  void *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  char *v102;
  char *v103;
  char *v104;
  char *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  char *v109;
  uint64_t v110;
  char *v111;
  char v112;
  char *v113;
  void (*v114)(_QWORD, _QWORD);
  uint64_t v115;
  id v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void *v123;
  id v124;
  _QWORD v125[2];
  char *v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  char *v131;
  char *v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  char *v143;
  id v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  void (*v151)(char *, _QWORD, _QWORD);
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  void (*v156)(_QWORD, _QWORD, _QWORD);
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;
  unint64_t v160;
  char *v161;
  uint64_t v162;
  char *v163;

  v155 = a3;
  v144 = a2;
  v4 = sub_231261E94();
  v146 = *(_QWORD *)(v4 - 8);
  v147 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v145 = (char *)v125 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_231263B5C();
  v150 = *(_QWORD *)(v6 - 8);
  v151 = (void (*)(char *, _QWORD, _QWORD))v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v163 = (char *)v125 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v148 = (char *)v125 - v9;
  v10 = sub_231261CCC();
  MEMORY[0x24BDAC7A8](v10);
  v133 = (char *)v125 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2311735E0(0, &qword_255EB8138, (uint64_t (*)(uint64_t))MEMORY[0x24BE47DF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v13);
  v128 = (char *)v125 - v14;
  sub_2311735E0(0, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], v12);
  MEMORY[0x24BDAC7A8](v15);
  v138 = (char *)v125 - v16;
  v140 = sub_231261E40();
  v139 = *(_QWORD *)(v140 - 8);
  v17 = MEMORY[0x24BDAC7A8](v140);
  v131 = (char *)v125 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v132 = (char *)v125 - v19;
  v136 = sub_231261FA8();
  v135 = *(_QWORD *)(v136 - 8);
  MEMORY[0x24BDAC7A8](v136);
  v137 = (char *)v125 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_23126217C();
  v153 = *(_QWORD *)(v21 - 8);
  v154 = v21;
  MEMORY[0x24BDAC7A8](v21);
  v141 = (char *)v125 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, &qword_2541533D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE48800], v12);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)v125 - v24;
  v26 = sub_231263A30();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v134 = (char *)v125 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v129 = (char *)v125 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v149 = (char *)v125 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v142 = (char *)v125 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v143 = (char *)v125 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v40 = (char *)v125 - v39;
  MEMORY[0x24BDAC7A8](v38);
  v152 = (char *)v125 - v41;
  sub_2311735E0(0, &qword_255EB85D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE498E0], v12);
  MEMORY[0x24BDAC7A8](v42);
  v44 = (char *)v125 - v43;
  v45 = sub_231263190();
  v46 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v48 = (char *)v125 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = a1;
  sub_23126319C();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45) == 1)
  {
    sub_231189628((uint64_t)v44, &qword_255EB85D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE498E0]);
    sub_231263B20();
    v50 = v49;
    v51 = sub_231263B50();
    v52 = sub_2312643F0();
    if (os_log_type_enabled(v51, v52))
    {
      v53 = (uint8_t *)swift_slowAlloc();
      v152 = (char *)swift_slowAlloc();
      v161 = v152;
      *(_DWORD *)v53 = 136315138;
      v149 = (char *)(v53 + 4);
      v54 = objc_msgSend(v50, sel_identifier);
      v55 = v145;
      sub_231261E7C();

      sub_231172048(&qword_255EB78D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v56 = v147;
      v57 = sub_231264B28();
      v59 = v58;
      (*(void (**)(char *, uint64_t))(v146 + 8))(v55, v56);
      v159 = sub_2311CBDE4(v57, v59, (uint64_t *)&v161);
      sub_231264750();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23116F000, v51, v52, "AccountStatusSummaryTileGenerator not generating feed item data for account %s", v53, 0xCu);
      v60 = 1;
      v61 = v152;
      swift_arrayDestroy();
      MEMORY[0x2348D85EC](v61, -1, -1);
      MEMORY[0x2348D85EC](v53, -1, -1);

      (*(void (**)(char *, void (*)(char *, _QWORD, _QWORD)))(v150 + 8))(v163, v151);
LABEL_14:
      v80 = v155;
      v82 = v153;
      v81 = v154;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v82 + 56))(v80, v60, 1, v81);
    }

    (*(void (**)(char *, void (*)(char *, _QWORD, _QWORD)))(v150 + 8))(v163, v151);
    goto LABEL_13;
  }
  v163 = v49;
  v130 = v46;
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v48, v44, v45);
  sub_231263160();
  v62 = v48;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
  {
    sub_231189628((uint64_t)v25, &qword_2541533D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE48800]);
LABEL_6:
    v63 = v148;
    sub_231263B20();
    v64 = v163;
    v65 = sub_231263B50();
    v66 = sub_2312643F0();
    if (os_log_type_enabled(v65, v66))
    {
      v67 = (uint8_t *)swift_slowAlloc();
      v68 = (char *)swift_slowAlloc();
      v127 = v45;
      v163 = v68;
      v161 = v68;
      *(_DWORD *)v67 = 136315138;
      v126 = v62;
      v152 = (char *)(v67 + 4);
      v69 = objc_msgSend(v64, sel_identifier);
      v70 = v145;
      sub_231261E7C();

      sub_231172048(&qword_255EB78D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v71 = v147;
      v72 = sub_231264B28();
      v74 = v73;
      (*(void (**)(char *, uint64_t))(v146 + 8))(v70, v71);
      v159 = sub_2311CBDE4(v72, v74, (uint64_t *)&v161);
      sub_231264750();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23116F000, v65, v66, "AccountStatusSummaryTileGenerator generating unsupported type for account %s", v67, 0xCu);
      v60 = 1;
      v75 = v163;
      swift_arrayDestroy();
      MEMORY[0x2348D85EC](v75, -1, -1);
      MEMORY[0x2348D85EC](v67, -1, -1);

      (*(void (**)(char *, void (*)(char *, _QWORD, _QWORD)))(v150 + 8))(v148, v151);
      (*(void (**)(char *, uint64_t))(v130 + 8))(v126, v127);
      goto LABEL_14;
    }

    (*(void (**)(char *, void (*)(char *, _QWORD, _QWORD)))(v150 + 8))(v63, v151);
    (*(void (**)(char *, uint64_t))(v130 + 8))(v62, v45);
LABEL_13:
    v60 = 1;
    goto LABEL_14;
  }
  v127 = v45;
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v152, v25, v26);
  v76 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 104);
  v76(v40, *MEMORY[0x24BE487E0], v26);
  v77 = sub_231172048(&qword_255EB85C8, (uint64_t (*)(uint64_t))MEMORY[0x24BE48800], MEMORY[0x24BE48818]);
  sub_2312641D4();
  v125[1] = v77;
  sub_2312641D4();
  v78 = (void (*)(_QWORD, _QWORD, _QWORD))v26;
  if (v161 == (char *)v159 && v162 == v160)
    v79 = 1;
  else
    v79 = sub_231264B58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v84 = *(void (**)(_QWORD, _QWORD))(v27 + 8);
  v84(v40, v78);
  v85 = *(void (**)(char *, char *, _QWORD))(v27 + 16);
  v86 = v143;
  v87 = v152;
  v85(v143, v152, v78);
  v126 = v62;
  if ((v79 & 1) != 0)
  {
    v84(v86, v78);
    v88 = *MEMORY[0x24BE487E8];
  }
  else
  {
    v88 = *MEMORY[0x24BE487E8];
    v76(v142, v88, (uint64_t)v78);
    sub_2312641D4();
    sub_2312641D4();
    if (v161 == (char *)v159 && v162 == v160)
    {
      swift_bridgeObjectRelease_n();
      v84(v142, v78);
      v84(v86, v78);
    }
    else
    {
      v89 = sub_231264B58();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v84(v142, v78);
      v84(v86, v78);
      if ((v89 & 1) == 0)
      {
        v84(v87, v78);
        v45 = v127;
        v62 = v126;
        goto LABEL_6;
      }
    }
  }
  v148 = (char *)sub_231263274();
  LODWORD(v150) = v88;
  v151 = v76;
  v76(v149, v88, (uint64_t)v78);
  sub_2312641D4();
  sub_2312641D4();
  v125[0] = v84;
  if (v161 == (char *)v159 && v162 == v160)
  {
    swift_bridgeObjectRelease_n();
    v84(v149, v78);
    v90 = v156;
    v91 = v126;
LABEL_27:
    type metadata accessor for AccountStatusUpgradeSummaryTileFeedItemViewController(0);
    goto LABEL_29;
  }
  v92 = sub_231264B58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v84(v149, v78);
  v90 = v156;
  v91 = v126;
  if ((v92 & 1) != 0)
    goto LABEL_27;
  type metadata accessor for AccountStatusReloginSummaryTileFeedItemViewController();
LABEL_29:
  sub_231261C78();
  swift_allocObject();
  sub_231261C6C();
  sub_231172048(&qword_255EB85C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE498E0], MEMORY[0x24BE498F0]);
  v93 = v127;
  sub_231261C60();
  if (!v90)
  {
    swift_release();
    (*(void (**)(char *, _QWORD, uint64_t))(v135 + 104))(v137, *MEMORY[0x24BE474A0], v136);
    sub_231178AD0(0, &qword_255EB85D8);
    v94 = v144;
    sub_231262038();
    v95 = objc_msgSend(v163, sel_lastFailedFetchDate);
    if (v95)
    {
      v96 = v95;
      v97 = v131;
      sub_231261E28();

      v98 = v139;
      v99 = (uint64_t)v138;
      v100 = v140;
      v156 = *(void (**)(_QWORD, _QWORD, _QWORD))(v139 + 32);
      v156(v138, v97, v140);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v98 + 56))(v99, 0, 1, v100);
      v101 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v98 + 48))(v99, 1, v100);
      v82 = v153;
      v81 = v154;
      v102 = v152;
      if (v101 != 1)
      {
        v103 = v132;
        v156(v132, v99, v100);
        (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v97, v103, v100);
        sub_231261CC0();
        v104 = v129;
        v151(v129, v150, v78);
        v105 = v152;
        sub_2312641D4();
        sub_2312641D4();
        if (v161 == (char *)v159 && v162 == v160)
        {
          swift_bridgeObjectRelease_n();
          ((void (*)(char *, void (*)(_QWORD, _QWORD, _QWORD)))v125[0])(v104, v78);
          v106 = v130;
          v107 = v128;
          v108 = v134;
          v109 = v141;
        }
        else
        {
          sub_231264B58();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          ((void (*)(char *, void (*)(_QWORD, _QWORD, _QWORD)))v125[0])(v104, v78);
          v109 = v141;
          v106 = v130;
          v107 = v128;
          v108 = v134;
        }
        sub_2312642E8();
        sub_231262410();
        v110 = sub_231262428();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 56))(v107, 0, 1, v110);
        sub_231262104();
        (*(void (**)(char *, uint64_t))(v139 + 8))(v132, v140);
        v102 = v105;
LABEL_41:
        v151(v108, v150, v78);
        sub_231172048(qword_255EB85E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE48800], MEMORY[0x24BE48810]);
        v111 = v102;
        v112 = sub_231264060();
        v113 = v108;
        v114 = (void (*)(_QWORD, _QWORD))v125[0];
        ((void (*)(char *, void (*)(_QWORD, _QWORD, _QWORD)))v125[0])(v113, v78);
        if ((v112 & 1) == 0)
        {
          v156 = v78;
          sub_231171FD8(0, (unint64_t *)&qword_2541557B0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
          v115 = swift_allocObject();
          *(_OWORD *)(v115 + 16) = xmmword_231265570;
          *(_QWORD *)(v115 + 32) = 0xD000000000000012;
          *(_QWORD *)(v115 + 40) = 0x800000023126C470;
          v116 = objc_msgSend(v163, sel_title);
          v117 = sub_23126409C();
          v119 = v118;

          v161 = (char *)v117;
          v162 = v119;
          v159 = 32;
          v160 = 0xE100000000000000;
          v157 = 0;
          v158 = 0xE000000000000000;
          sub_231188564();
          v120 = sub_23126478C();
          v122 = v121;
          swift_bridgeObjectRelease();
          *(_QWORD *)(v115 + 48) = v120;
          *(_QWORD *)(v115 + 56) = v122;
          v123 = (void *)sub_2312641EC();
          swift_bridgeObjectRelease();
          v124 = (id)HKUIJoinStringsForAutomationIdentifier();

          if (v124)
          {
            sub_23126409C();

          }
          v109 = v141;
          sub_231262134();
          v106 = v130;
          v78 = v156;
          v111 = v152;
          v114 = (void (*)(_QWORD, _QWORD))v125[0];
        }
        v114(v111, v78);
        (*(void (**)(char *, uint64_t))(v106 + 8))(v126, v127);
        v80 = v155;
        (*(void (**)(uint64_t, char *, uint64_t))(v82 + 32))(v155, v109, v81);
        v60 = 0;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v82 + 56))(v80, v60, 1, v81);
      }
    }
    else
    {
      v99 = (uint64_t)v138;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v139 + 56))(v138, 1, 1, v140);
      v82 = v153;
      v81 = v154;
      v102 = v152;
    }
    sub_231189628(v99, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    v106 = v130;
    v108 = v134;
    v109 = v141;
    goto LABEL_41;
  }
  swift_bridgeObjectRelease();
  swift_release();
  ((void (*)(char *, void (*)(_QWORD, _QWORD, _QWORD)))v125[0])(v152, v78);
  return (*(uint64_t (**)(char *, uint64_t))(v130 + 8))(v91, v93);
}

unint64_t sub_23119F374(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, unint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 v43;
  unsigned __int8 v44;
  char v45;
  void (*v46)(char *, char *, uint64_t);
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned __int8 v60;
  unsigned __int8 v61;
  uint64_t v62;
  char v63;
  void (*v64)(unint64_t, uint64_t, uint64_t);
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  void (*v91)(char *, uint64_t, uint64_t);
  char *v92;
  char *v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  _QWORD v98[2];
  char *v99;
  char *v100;
  unint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  __int128 v118;
  char *v119;
  char *v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  char *v127;
  uint64_t v128;
  unint64_t v129;

  v105 = a2;
  v115 = sub_231263B5C();
  v114 = *(_QWORD *)(v115 - 8);
  v3 = MEMORY[0x24BDAC7A8](v115);
  v107 = (char *)v98 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v98 - v5;
  v106 = sub_231263A30();
  v104 = *(_QWORD *)(v106 - 8);
  MEMORY[0x24BDAC7A8](v106);
  v8 = (char *)v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, &qword_2541554F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v9);
  v102 = (uint64_t)v98 - v10;
  v112 = sub_231261E94();
  v111 = *(_QWORD *)(v112 - 8);
  MEMORY[0x24BDAC7A8](v112);
  v116 = (char *)v98 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = sub_231263190();
  v110 = *(_QWORD *)(v121 - 8);
  MEMORY[0x24BDAC7A8](v121);
  v13 = (char *)v98 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23126217C();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v113 = (char *)v98 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v100 = (char *)v98 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v99 = (char *)v98 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)v98 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22);
  v123 = (unint64_t)v98 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  *(_QWORD *)&v118 = (char *)v98 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v127 = (char *)v98 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v32 = (char *)v98 - v31;
  v33 = MEMORY[0x24BEE4AF8];
  v129 = MEMORY[0x24BEE4AF8];
  v34 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v124 = v14;
  v128 = v15;
  v119 = v6;
  v120 = v13;
  v109 = a1;
  v103 = v8;
  v117 = v24;
  if (v34)
  {
    v35 = *(_QWORD *)(v15 + 72);
    v122 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v36 = a1 + v122;
    v37 = *(void (**)(char *, unint64_t, uint64_t))(v15 + 16);
    v125 = 0x800000023126C3A0;
    v126 = (unint64_t)v37;
    v38 = v34;
    v37(v32, a1 + v122, v14);
    while (1)
    {
      v39 = sub_231262098();
      v41 = v40;
      v42 = v14;
      v44 = v43;
      v45 = MEMORY[0x2348D5430]();
      sub_2311A20F4(v39, v41, v44);
      if ((v45 & 1) != 0)
      {
        v46 = *(void (**)(char *, char *, uint64_t))(v128 + 32);
        v46(v127, v32, v42);
        v47 = v129;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2311992BC(0, *(_QWORD *)(v47 + 16) + 1, 1);
          v47 = v129;
        }
        v49 = *(_QWORD *)(v47 + 16);
        v48 = *(_QWORD *)(v47 + 24);
        if (v49 >= v48 >> 1)
        {
          sub_2311992BC(v48 > 1, v49 + 1, 1);
          v47 = v129;
        }
        *(_QWORD *)(v47 + 16) = v49 + 1;
        v50 = v47 + v122 + v49 * v35;
        v14 = v124;
        v46((char *)v50, v127, v124);
        v129 = v47;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v128 + 8))(v32, v42);
        v14 = v42;
      }
      v36 += v35;
      if (!--v38)
        break;
      ((void (*)(char *, uint64_t, uint64_t))v126)(v32, v36, v14);
    }
    v51 = v128;
    v33 = v129;
    a1 = v109;
    v24 = v117;
  }
  else
  {
    v51 = v15;
  }
  swift_bridgeObjectRelease();
  if (v34 - *(_QWORD *)(v33 + 16) <= 1)
  {
    swift_bridgeObjectRetain();
    swift_release();
  }
  else
  {
    v101 = v33;
    v52 = MEMORY[0x24BEE4AF8];
    v129 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    if (v34)
    {
      v53 = *(_QWORD *)(v51 + 72);
      v54 = a1 + ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80));
      v55 = *(char **)(v51 + 16);
      v126 = (*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
      v127 = v55;
      v56 = v118;
      ((void (*)(_QWORD, uint64_t, uint64_t))v55)(v118, v54, v14);
      while (1)
      {
        v57 = sub_231262098();
        v59 = v58;
        v61 = v60;
        v62 = v14;
        v63 = MEMORY[0x2348D5430]();
        sub_2311A20F4(v57, v59, v61);
        if ((v63 & 1) != 0)
        {
          v64 = *(void (**)(unint64_t, uint64_t, uint64_t))(v128 + 32);
          v64(v123, v56, v62);
          v65 = v129;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_2311992BC(0, *(_QWORD *)(v65 + 16) + 1, 1);
            v65 = v129;
          }
          v67 = *(_QWORD *)(v65 + 16);
          v66 = *(_QWORD *)(v65 + 24);
          if (v67 >= v66 >> 1)
          {
            sub_2311992BC(v66 > 1, v67 + 1, 1);
            v65 = v129;
          }
          *(_QWORD *)(v65 + 16) = v67 + 1;
          v68 = v65 + v126 + v67 * v53;
          v14 = v124;
          v64(v68, v123, v124);
          v129 = v65;
          v56 = v118;
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v56, v62);
          v14 = v62;
        }
        v54 += v53;
        if (!--v34)
          break;
        ((void (*)(uint64_t, uint64_t, uint64_t))v127)(v56, v54, v14);
      }
      v69 = v128;
      v52 = v129;
      v24 = v117;
    }
    else
    {
      v69 = v51;
    }
    swift_bridgeObjectRelease();
    v71 = *(_QWORD *)(v52 + 16);
    if (v71)
    {
      v72 = (*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
      v98[1] = v52;
      v73 = v52 + v72;
      v74 = *(char **)(v69 + 16);
      v126 = *(_QWORD *)(v69 + 72);
      v127 = v74;
      v123 = MEMORY[0x24BEE4AF8];
      *(_QWORD *)&v70 = 136315394;
      v118 = v70;
      v108 = MEMORY[0x24BEE4AD8] + 8;
      ((void (*)(char *, unint64_t, uint64_t))v74)(v24, v73, v14);
      while (1)
      {
        v76 = sub_231262170();
        if (v77 >> 60 == 15)
        {
          v75 = v128;
          (*(void (**)(char *, uint64_t))(v128 + 8))(v24, v14);
        }
        else
        {
          v78 = v77;
          v79 = v76;
          sub_231261C54();
          swift_allocObject();
          sub_231261C48();
          sub_231172048(&qword_255EB85B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE498E0], MEMORY[0x24BE498F8]);
          v125 = v79;
          sub_231261C3C();
          swift_release();
          sub_231263178();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            v80 = v123;
          else
            v80 = sub_2311DCB74(0, *(_QWORD *)(v123 + 16) + 1, 1, v123);
          v82 = *(_QWORD *)(v80 + 16);
          v81 = *(_QWORD *)(v80 + 24);
          if (v82 >= v81 >> 1)
            v80 = sub_2311DCB74(v81 > 1, v82 + 1, 1, v80);
          *(_QWORD *)(v80 + 16) = v82 + 1;
          v83 = (*(unsigned __int8 *)(v111 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v111 + 80);
          v123 = v80;
          (*(void (**)(unint64_t, char *, uint64_t))(v111 + 32))(v80 + v83 + *(_QWORD *)(v111 + 72) * v82, v116, v112);
          sub_23118078C(v125, v78);
          (*(void (**)(char *, uint64_t))(v110 + 8))(v120, v121);
          v75 = v128;
          (*(void (**)(char *, uint64_t))(v128 + 8))(v24, v14);
        }
        v73 += v126;
        if (!--v71)
          break;
        ((void (*)(char *, unint64_t, uint64_t))v127)(v24, v73, v14);
      }
      v84 = v75;
      swift_release();
      v85 = v123;
    }
    else
    {
      v84 = v69;
      swift_release();
      v85 = MEMORY[0x24BEE4AF8];
    }
    v86 = v104;
    v87 = (uint64_t)v103;
    v88 = v106;
    (*(void (**)(char *, _QWORD, uint64_t))(v104 + 104))(v103, *MEMORY[0x24BE487F0], v106);
    v89 = (void *)sub_231262230();
    v90 = v102;
    sub_2311A0804(v85, v87, v89, v102);
    (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v87, v88);
    swift_bridgeObjectRelease();

    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v90, 1, v14) == 1)
    {
      sub_231189628(v90, &qword_2541554F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0]);
      return v101;
    }
    else
    {
      v91 = *(void (**)(char *, uint64_t, uint64_t))(v84 + 32);
      v92 = v99;
      v91(v99, v90, v14);
      v93 = v100;
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v100, v92, v14);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v101 = sub_2311DCA10(0, *(_QWORD *)(v101 + 16) + 1, 1, v101);
      v95 = *(_QWORD *)(v101 + 16);
      v94 = *(_QWORD *)(v101 + 24);
      if (v95 >= v94 >> 1)
        v101 = sub_2311DCA10(v94 > 1, v95 + 1, 1, v101);
      v96 = v101;
      *(_QWORD *)(v101 + 16) = v95 + 1;
      v91((char *)(v96+ ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80))+ *(_QWORD *)(v84 + 72) * v95), (uint64_t)v93, v14);
      (*(void (**)(char *, uint64_t))(v84 + 8))(v92, v14);
      return v96;
    }
  }
  return a1;
}

uint64_t sub_2311A0248@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = sub_231263268();
  v6 = v5;
  v7 = sub_231262230();
  sub_231171FD8(0, &qword_254153220, MEMORY[0x24BE47F58], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_231265AC0;
  *(_QWORD *)(v8 + 32) = v3;
  *(_QWORD *)(v8 + 40) = v4;
  *(_QWORD *)(v8 + 48) = v6;
  *(_QWORD *)(v8 + 56) = v7;
  *(_BYTE *)(v8 + 64) = -127;
  *a2 = v8;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2311A02EC@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  _QWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;

  sub_2311885A8();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_231263B5C();
  v37 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  sub_231263B08();
  v13 = v12;
  v14 = v12;
  v15 = sub_231263B50();
  v16 = sub_2312643D8();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v35 = v6;
    v18 = v17;
    v33 = swift_slowAlloc();
    v39 = v33;
    *(_DWORD *)v18 = 136446466;
    v38 = sub_23118ED74();
    sub_23118852C(0, &qword_255EB85B0, (void (*)(uint64_t))sub_23118ED74);
    v34 = v9;
    v19 = sub_2312640B4();
    v36 = a2;
    v38 = sub_2311CBDE4(v19, v20, &v39);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2082;
    v32[1] = v18 + 14;
    v38 = (unint64_t)v12;
    v21 = v12;
    v22 = v12;
    sub_2311889D8();
    sub_231264B88();
    v23 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_2312647B0();
    swift_unknownObjectRelease();
    v24 = sub_2312640B4();
    v26 = v25;

    v27 = v24;
    a2 = v36;
    v38 = sub_2311CBDE4(v27, v26, &v39);
    sub_231264750();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23116F000, v15, v16, "[%{public}s] Unable to compute desired difference for commit: %{public}s", (uint8_t *)v18, 0x16u);
    v28 = v33;
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v28, -1, -1);
    v29 = v18;
    v6 = v35;
    MEMORY[0x2348D85EC](v29, -1, -1);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v34);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v9);
  }
  v38 = MEMORY[0x24BEE4AF8];
  sub_231171FD8(0, (unint64_t *)&qword_254155638, MEMORY[0x24BE47F58], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_231263D84();
  sub_231172048((unint64_t *)&qword_254153048, (uint64_t (*)(uint64_t))sub_2311885A8, MEMORY[0x24BDB9DF8]);
  v30 = sub_231263E38();
  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v30;
  return result;
}

uint64_t sub_2311A0678()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC13HealthRecords33AccountStatusSummaryTileGenerator_domain;
  v2 = sub_2312621F4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_231173638(v0 + OBJC_IVAR____TtC13HealthRecords33AccountStatusSummaryTileGenerator_context);
  return swift_deallocClassInstance();
}

uint64_t sub_2311A06E0()
{
  return type metadata accessor for AccountStatusSummaryTileGenerator();
}

uint64_t type metadata accessor for AccountStatusSummaryTileGenerator()
{
  uint64_t result;

  result = qword_2541539B8;
  if (!qword_2541539B8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2311A0724()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2312621F4();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for HealthRecordsGeneratorContext();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_2311A07BC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC13HealthRecords33AccountStatusSummaryTileGenerator_domain;
  v4 = sub_2312621F4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_2311A0804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  char *v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97[3];
  uint64_t v98;

  v83 = a1;
  v84 = a3;
  v90 = a4;
  v5 = sub_231263B5C();
  v85 = *(_QWORD *)(v5 - 8);
  v86 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v91 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_231261E40();
  MEMORY[0x24BDAC7A8](v7);
  v77 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_231261CCC();
  MEMORY[0x24BDAC7A8](v9);
  v80 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2311735E0(0, &qword_255EB8138, (uint64_t (*)(uint64_t))MEMORY[0x24BE47DF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v12);
  v79 = (char *)&v70 - v13;
  v74 = sub_231261FA8();
  v73 = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74);
  v75 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23126217C();
  v88 = *(_QWORD *)(v15 - 8);
  v89 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v78 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_231263A30();
  v92 = *(_QWORD *)(v17 - 8);
  v93 = v17;
  v18 = MEMORY[0x24BDAC7A8](v17);
  v82 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v76 = (char *)&v70 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v81 = (char *)&v70 - v22;
  v87 = sub_231263190();
  v23 = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87);
  v25 = (char *)&v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], v11);
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v70 - v27;
  v29 = sub_231261E94();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)&v70 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v35 = (char *)&v70 - v34;
  v36 = v98;
  result = sub_2311A10C4(a2, (uint64_t)v28);
  if (!v36)
  {
    v94 = v33;
    v71 = v35;
    v72 = v25;
    v70 = v23;
    v98 = a2;
    v39 = v92;
    v38 = v93;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29) == 1)
    {
      v94 = 0;
      sub_231189628((uint64_t)v28, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
      v40 = v91;
      sub_231263B20();
      v41 = v39;
      v42 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 16);
      v43 = v82;
      v44 = v38;
      v42(v82, v98, v38);
      v45 = sub_231263B50();
      v46 = sub_2312643F0();
      if (os_log_type_enabled(v45, v46))
      {
        v47 = (uint8_t *)swift_slowAlloc();
        v48 = swift_slowAlloc();
        v97[0] = v48;
        *(_DWORD *)v47 = 136315138;
        v49 = sub_231263A24();
        v95 = sub_2311CBDE4(v49, v50, v97);
        sub_231264750();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v41 + 8))(v43, v93);
        _os_log_impl(&dword_23116F000, v45, v46, "AccountStatusSummaryTileGenerator could not create valid id for type %s", v47, 0xCu);
        v51 = 1;
        swift_arrayDestroy();
        MEMORY[0x2348D85EC](v48, -1, -1);
        MEMORY[0x2348D85EC](v47, -1, -1);

        (*(void (**)(char *, uint64_t))(v85 + 8))(v91, v86);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v41 + 8))(v43, v44);

        (*(void (**)(char *, uint64_t))(v85 + 8))(v40, v86);
        v51 = 1;
      }
      v58 = v89;
      v57 = v90;
      v59 = v88;
    }
    else
    {
      v52 = (char *)v29;
      v53 = v71;
      (*(void (**)(char *, char *, char *))(v30 + 32))(v71, v28, v52);
      (*(void (**)(char *, char *, char *))(v30 + 16))(v94, v53, v52);
      v54 = v98;
      (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v81, v98, v38);
      swift_bridgeObjectRetain();
      v91 = v52;
      sub_231263184();
      v55 = v84;
      v85 = MEMORY[0x2348D6684](v53, v54, v84);
      v86 = v56;
      sub_231261C78();
      swift_allocObject();
      sub_231261C6C();
      sub_231172048(&qword_255EB85C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE498E0], MEMORY[0x24BE498F0]);
      sub_231261C60();
      v94 = 0;
      v83 = v30;
      swift_release();
      type metadata accessor for AccountStatusUpgradeSummaryTileFeedItemViewController(0);
      (*(void (**)(char *, _QWORD, uint64_t))(v73 + 104))(v75, *MEMORY[0x24BE474A0], v74);
      v60 = v55;
      v61 = v78;
      sub_231262038();
      sub_231261E34();
      sub_231261CC0();
      v63 = v92;
      v62 = v93;
      v64 = v76;
      (*(void (**)(char *, _QWORD, uint64_t))(v92 + 104))(v76, *MEMORY[0x24BE487E8], v93);
      sub_231172048(&qword_255EB85C8, (uint64_t (*)(uint64_t))MEMORY[0x24BE48800], MEMORY[0x24BE48818]);
      sub_2312641D4();
      sub_2312641D4();
      if (v97[0] == v95 && v97[1] == v96)
      {
        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v62);
      }
      else
      {
        sub_231264B58();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v62);
      }
      v59 = v88;
      v58 = v89;
      v65 = v79;
      v66 = v87;
      v67 = v70;
      v68 = v72;
      sub_2312642E8();
      sub_231262410();
      v69 = sub_231262428();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v65, 0, 1, v69);
      sub_231262104();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v68, v66);
      (*(void (**)(char *, char *))(v83 + 8))(v71, v91);
      v57 = v90;
      (*(void (**)(uint64_t, char *, uint64_t))(v59 + 32))(v90, v61, v58);
      v51 = 0;
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 56))(v57, v51, 1, v58);
  }
  return result;
}

uint64_t sub_2311A10C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char v14;
  void (*v15)(char *, uint64_t);
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31[2];

  v28 = a2;
  v3 = sub_231263B5C();
  v27 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_231263A30();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BE48800];
  v8 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v24 - v12;
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))((char *)v24 - v12, *MEMORY[0x24BE487F0], v6);
  sub_231172048(&qword_255EB85C8, v7, MEMORY[0x24BE48818]);
  sub_2312641D4();
  sub_2312641D4();
  if (v31[0] == v29 && v31[1] == v30)
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v6);
    return sub_231261E4C();
  }
  v26 = v3;
  v14 = sub_231264B58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = *(void (**)(char *, uint64_t))(v8 + 8);
  v15(v13, v6);
  if ((v14 & 1) != 0)
    return sub_231261E4C();
  sub_231263B20();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v6);
  v17 = sub_231263B50();
  v18 = sub_2312643D8();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    v31[0] = v25;
    *(_DWORD *)v19 = 136315138;
    v24[1] = v19 + 4;
    v20 = sub_231263A24();
    v29 = sub_2311CBDE4(v20, v21, v31);
    sub_231264750();
    swift_bridgeObjectRelease();
    v15(v11, v6);
    _os_log_impl(&dword_23116F000, v17, v18, "MultiTileAccountId not currently supported for type %s", v19, 0xCu);
    v22 = v25;
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v22, -1, -1);
    MEMORY[0x2348D85EC](v19, -1, -1);
  }
  else
  {
    v15(v11, v6);
  }

  (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v26);
  v23 = sub_231261E94();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v28, 1, 1, v23);
}

_QWORD *sub_2311A1410(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = v2;
  v20 = *v2;
  v21 = a2;
  v18 = sub_2312621DC();
  v5 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_2312621F4();
  v8 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311733CC(a1, (uint64_t)v2 + OBJC_IVAR____TtC13HealthRecords33AccountStatusSummaryTileGenerator_context);
  v17[1] = sub_231262230();
  sub_2311735E0(0, &qword_254155718, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v11 = sub_231261FA8();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_231265AC0;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v12 + 104))(v14 + v13, *MEMORY[0x24BE474A0], v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BE47910], v18);
  sub_2312621E8();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))((uint64_t)v3 + OBJC_IVAR____TtC13HealthRecords33AccountStatusSummaryTileGenerator_domain, v10, v19);
  v15 = sub_23119CEB4(a1, v21);
  sub_231173638(a1);
  v3[2] = v15;
  return v3;
}

void sub_2311A15E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254153470)
  {
    sub_2311A16AC();
    sub_2311A18C0();
    sub_231172048(&qword_2541533F0, (uint64_t (*)(uint64_t))sub_2311A16AC, MEMORY[0x24BDB95F8]);
    sub_231172048(&qword_254153488, (uint64_t (*)(uint64_t))sub_2311A18C0, MEMORY[0x24BDB9AF8]);
    v0 = sub_231263CA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254153470);
  }
}

void sub_2311A16AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541533F8)
  {
    sub_2311A1750();
    sub_2311889D8();
    sub_231172048(&qword_254153478, (uint64_t (*)(uint64_t))sub_2311A1750, MEMORY[0x24BDB9970]);
    v0 = sub_231263C04();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541533F8);
  }
}

void sub_2311A1750()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254153480)
  {
    sub_2311735E0(255, &qword_2541534D8, (uint64_t (*)(uint64_t))sub_2311A17E4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_2311A1860();
    v0 = sub_231263CC4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254153480);
  }
}

void sub_2311A17E4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_254153290)
  {
    sub_231178AD0(255, (unint64_t *)&qword_2541556E0);
    sub_231263A30();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_254153290);
  }
}

unint64_t sub_2311A1860()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541534E0;
  if (!qword_2541534E0)
  {
    sub_2311735E0(255, &qword_2541534D8, (uint64_t (*)(uint64_t))sub_2311A17E4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2348D8544](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2541534E0);
  }
  return result;
}

void sub_2311A18C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254153490)
  {
    sub_2311735E0(255, &qword_2541534D8, (uint64_t (*)(uint64_t))sub_2311A17E4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_2311889D8();
    v0 = sub_231263D0C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254153490);
  }
}

void sub_2311A1944()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254153460)
  {
    sub_2311A1A0C();
    sub_2311A15E4();
    sub_231172048(&qword_254153FC0, (uint64_t (*)(uint64_t))sub_2311A1A0C, MEMORY[0x24BDB94C8]);
    sub_231172048(&qword_254153468, (uint64_t (*)(uint64_t))sub_2311A15E4, MEMORY[0x24BDB98F0]);
    v0 = sub_231263CA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254153460);
  }
}

void sub_2311A1A0C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254153FC8)
  {
    sub_2311A1AA0();
    sub_23126217C();
    sub_231172048(&qword_254152FE0, (uint64_t (*)(uint64_t))sub_2311A1AA0, MEMORY[0x24BDB9AF8]);
    v0 = sub_231263BBC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254153FC8);
  }
}

void sub_2311A1AA0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254152FE8)
  {
    sub_2311889D8();
    v0 = sub_231263D0C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254152FE8);
  }
}

void sub_2311A1B04()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254153450)
  {
    sub_2311A1944();
    sub_231172048(&qword_254153458, (uint64_t (*)(uint64_t))sub_2311A1944, MEMORY[0x24BDB98F0]);
    v0 = sub_231263C94();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254153450);
  }
}

void sub_2311A1B7C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254153420)
  {
    sub_2311A1B04();
    sub_2311735E0(255, &qword_254151870, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_231172048(&qword_254153448, (uint64_t (*)(uint64_t))sub_2311A1B04, MEMORY[0x24BDB98D8]);
    v0 = sub_231263C1C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254153420);
  }
}

void sub_2311A1C28()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254153440)
  {
    sub_2311A1B04();
    sub_231171FD8(255, (unint64_t *)&qword_254155638, MEMORY[0x24BE47F58], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    sub_231172048(&qword_254153448, (uint64_t (*)(uint64_t))sub_2311A1B04, MEMORY[0x24BDB98D8]);
    v0 = sub_231263C88();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254153440);
  }
}

void sub_2311A1CD4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254153430)
  {
    sub_2311A1C28();
    sub_231187D64();
    sub_231172048(&qword_254153438, (uint64_t (*)(uint64_t))sub_2311A1C28, MEMORY[0x24BDB98C8]);
    sub_231172048(&qword_254152F30, (uint64_t (*)(uint64_t))sub_231187D64, MEMORY[0x24BDB9AF8]);
    v0 = sub_231263C40();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254153430);
  }
}

uint64_t sub_2311A1D9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for HealthRecordsGeneratorContext();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 24) & ~v2;
  swift_release();
  v4 = v0 + v3;
  v5 = sub_23126226C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

  return swift_deallocObject();
}

uint64_t sub_2311A1E38@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_23119D78C(a1, *(_QWORD *)(v2 + 16), v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)), a2);
}

uint64_t sub_2311A1EA4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2311A1EC8(char *a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, char *);
  uint64_t v4;
  uint64_t v5;

  v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 16);
  v4 = *(_QWORD *)a1;
  sub_2311A17E4();
  return v3(v4, &a1[*(int *)(v5 + 48)]);
}

uint64_t sub_2311A1F1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for HealthRecordsGeneratorContext();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 24) & ~v2);
  v4 = sub_23126226C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocObject();
}

unint64_t sub_2311A1FA4@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t result;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for HealthRecordsGeneratorContext() - 8) + 80);
  result = sub_23119F374(*a1, v2 + ((v5 + 24) & ~v5));
  *a2 = result;
  return result;
}

uint64_t sub_2311A1FFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for HealthRecordsGeneratorContext();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_23126226C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocObject();
}

uint64_t sub_2311A2084@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for HealthRecordsGeneratorContext();
  return sub_2311A0248(a1, a2);
}

uint64_t sub_2311A20DC()
{
  return swift_deallocObject();
}

uint64_t sub_2311A20EC@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2311A02EC(a1, a2);
}

uint64_t sub_2311A20F4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 5u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_2311A210C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for HealthRecordsGeneratorContext();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 24) & ~v2;

  v4 = v0 + v3;
  v5 = sub_23126226C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

  return swift_deallocObject();
}

void sub_2311A21A8(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  sub_23119D97C(a1, *(void **)(v2 + 16), v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)), a2);
}

uint64_t *sub_2311A220C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_231261E94();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_231261E40();
    v20 = *(_QWORD *)(v19 - 8);
    v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v21(v18, 1, v19))
    {
      sub_2311735E0(0, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
  }
  return a1;
}

uint64_t sub_2311A237C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v4 = sub_231261E94();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 32);
  v6 = sub_231261E40();
  v7 = *(_QWORD *)(v6 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  return result;
}

uint64_t sub_2311A2438(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(const void *, uint64_t, uint64_t);
  uint64_t v21;

  v6 = sub_231261E94();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  v18 = sub_231261E40();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v20(v17, 1, v18))
  {
    sub_2311735E0(0, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  return a1;
}

uint64_t sub_2311A257C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;

  v6 = sub_231261E94();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[8];
  v14 = (void *)(a1 + v13);
  v15 = (void *)(a2 + v13);
  v16 = sub_231261E40();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 24))(v14, v15, v16);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    sub_2311735E0(0, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v17 + 16))(v14, v15, v16);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  return a1;
}

uint64_t sub_2311A272C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_231261E94();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_231261E40();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    sub_2311735E0(0, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_2311A2838(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;

  v6 = sub_231261E94();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  v17 = a3[8];
  v18 = (void *)(a1 + v17);
  v19 = (void *)(a2 + v17);
  v20 = sub_231261E40();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 40))(v18, v19, v20);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
    goto LABEL_6;
  }
  if (v24)
  {
LABEL_6:
    sub_2311735E0(0, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 32))(v18, v19, v20);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  return a1;
}

uint64_t sub_2311A29C0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2311A29CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_231261E94();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    sub_2311735E0(0, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v8 = v13;
    v14 = *(_QWORD *)(v13 - 8);
    v10 = a1 + *(int *)(a3 + 32);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_2311A2A90()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2311A2A9C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = sub_231261E94();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      return result;
    }
    sub_2311735E0(0, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v10 = v13;
    v14 = *(_QWORD *)(v13 - 8);
    v12 = a1 + *(int *)(a4 + 32);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for NewRecordsFeedItemData(uint64_t a1)
{
  return sub_231187940(a1, qword_255EB8640);
}

void sub_2311A2B70()
{
  unint64_t v0;
  unint64_t v1;

  sub_231261E94();
  if (v0 <= 0x3F)
  {
    sub_2311735E0(319, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *sub_2311A2C2C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_231261E40();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      sub_2311735E0(0, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_2311A2D48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_231261E40();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return swift_bridgeObjectRelease();
}

_QWORD *sub_2311A2DC0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_231261E40();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_2311735E0(0, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_2311A2EB0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_231261E40();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_2311735E0(0, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_2311A2FF8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_231261E40();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_2311735E0(0, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_2311A30E4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_231261E40();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_2311735E0(0, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2311A3224()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2311A3230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  sub_2311735E0(0, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_2311A32C8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2311A32D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  sub_2311735E0(0, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, v8);
  else
    *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
}

uint64_t type metadata accessor for NewLabsFeedItemData(uint64_t a1)
{
  return sub_231187940(a1, qword_254151D60);
}

void sub_2311A337C()
{
  unint64_t v0;

  sub_2311735E0(319, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_2311A3418()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;

  v1 = v0;
  v2 = sub_231261E40();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v20 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, (unint64_t *)&qword_254154938, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v17 - v7;
  sub_231261E94();
  sub_231172048(&qword_254151860, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23126400C();
  v9 = (int *)type metadata accessor for NewRecordsFeedItemData(0);
  swift_bridgeObjectRetain();
  sub_231264114();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + v9[6] + 8))
  {
    sub_231264C18();
    swift_bridgeObjectRetain();
    sub_231264114();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_231264C18();
  }
  v10 = *(_QWORD *)(v0 + v9[7]);
  v11 = *(_QWORD *)(v10 + 16);
  sub_231264C0C();
  if (v11)
  {
    v18 = v3;
    v19 = v2;
    v12 = *(_QWORD *)(sub_231262710() - 8);
    v13 = v10 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v14 = *(_QWORD *)(v12 + 72);
    sub_231172048(&qword_255EB86E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE48E48], MEMORY[0x24BE48E60]);
    swift_bridgeObjectRetain();
    do
    {
      sub_23126400C();
      v13 += v14;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    v3 = v18;
    v2 = v19;
  }
  sub_2311A4BBC(v1 + v9[8], (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
    return sub_231264C18();
  v16 = v20;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v20, v8, v2);
  sub_231264C18();
  sub_231172048(&qword_255EB86E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23126400C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v16, v2);
}

BOOL sub_2311A36D8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_2311A36F0()
{
  return sub_231264C0C();
}

uint64_t sub_2311A371C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2311A3750 + 4 * byte_231266810[*v0]))(0x49746E756F636361, 0xE900000000000064);
}

uint64_t sub_2311A3750()
{
  return 0x54746E756F636361;
}

uint64_t sub_2311A3770()
{
  return 0x53746E756F636361;
}

uint64_t sub_2311A3794()
{
  return 0x79726F6765746163;
}

uint64_t sub_2311A37B8()
{
  return 0x65676E497473616CLL;
}

uint64_t sub_2311A37D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2311A5918(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2311A37F8()
{
  return 0;
}

void sub_2311A3804(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_2311A3810()
{
  sub_2311A4A84();
  return sub_231264C6C();
}

uint64_t sub_2311A3838()
{
  sub_2311A4A84();
  return sub_231264C78();
}

uint64_t sub_2311A3860(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD v12[2];
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;

  v3 = v1;
  sub_2311A53DC(0, &qword_255EB86C8, (uint64_t (*)(void))sub_2311A4A84, (uint64_t)&type metadata for NewRecordsFeedItemData.CodingKeys, MEMORY[0x24BEE3520]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v12 - v8;
  sub_231173410(a1, a1[3]);
  sub_2311A4A84();
  sub_231264C60();
  v17 = 0;
  sub_231261E94();
  sub_231172048(&qword_254153508, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_231264AF8();
  if (!v2)
  {
    v10 = type metadata accessor for NewRecordsFeedItemData(0);
    v16 = 1;
    sub_231264AC8();
    v15 = 2;
    sub_231264A98();
    v12[1] = *(_QWORD *)(v3 + *(int *)(v10 + 28));
    v14 = 3;
    sub_2311735E0(0, &qword_255EB86B0, (uint64_t (*)(uint64_t))MEMORY[0x24BE48E48], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_2311A4B24(&qword_255EB86D0, &qword_255EB86D8, MEMORY[0x24BE48E58], MEMORY[0x24BEE12A0]);
    sub_231264AF8();
    v13 = 4;
    sub_231261E40();
    sub_231172048(&qword_2541518F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_231264ABC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_2311A3AEC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;

  v28 = a2;
  sub_2311735E0(0, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v29 = (char *)&v27 - v4;
  v5 = sub_231261E94();
  v30 = *(_QWORD *)(v5 - 8);
  v31 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v32 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311A53DC(0, &qword_255EB8698, (uint64_t (*)(void))sub_2311A4A84, (uint64_t)&type metadata for NewRecordsFeedItemData.CodingKeys, MEMORY[0x24BEE33E0]);
  v34 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v27 - v9;
  v11 = (int *)type metadata accessor for NewRecordsFeedItemData(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231173410(a1, a1[3]);
  sub_2311A4A84();
  v33 = v10;
  v14 = v35;
  sub_231264C54();
  if (v14)
    return sub_231173434((uint64_t)a1);
  v15 = v8;
  v16 = v30;
  v41 = 0;
  sub_231172048(&qword_255EB86A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v18 = v31;
  v17 = v32;
  sub_231264A80();
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v17, v18);
  v40 = 1;
  v19 = sub_231264A50();
  v20 = (uint64_t *)&v13[v11[5]];
  *v20 = v19;
  v20[1] = v21;
  v39 = 2;
  v35 = 0;
  v22 = sub_231264A20();
  v23 = (uint64_t *)&v13[v11[6]];
  *v23 = v22;
  v23[1] = v24;
  sub_2311735E0(0, &qword_255EB86B0, (uint64_t (*)(uint64_t))MEMORY[0x24BE48E48], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  v38 = 3;
  sub_2311A4B24(&qword_255EB86B8, &qword_255EB86C0, MEMORY[0x24BE48E70], MEMORY[0x24BEE12D0]);
  sub_231264A80();
  *(_QWORD *)&v13[v11[7]] = v36;
  sub_231261E40();
  v37 = 4;
  sub_231172048(&qword_2541518F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  v25 = (uint64_t)v29;
  sub_231264A44();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v33, v34);
  sub_2311A4AC8(v25, (uint64_t)&v13[v11[8]]);
  sub_231178454((uint64_t)v13, v28, type metadata accessor for NewRecordsFeedItemData);
  sub_231173434((uint64_t)a1);
  return sub_231178498((uint64_t)v13, type metadata accessor for NewRecordsFeedItemData);
}

uint64_t sub_2311A3F68@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2311A3AEC(a1, a2);
}

uint64_t sub_2311A3F7C(_QWORD *a1)
{
  return sub_2311A3860(a1);
}

uint64_t sub_2311A3F90(uint64_t a1, uint64_t a2)
{
  return sub_2311A499C(a1, a2, (void (*)(_BYTE *))sub_2311A3418);
}

uint64_t sub_2311A3FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2311A49EC(a1, a2, a3, (void (*)(_BYTE *))sub_2311A3418);
}

uint64_t sub_2311A3FB0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v25;
  uint64_t v26;

  v25 = a2;
  v26 = a3;
  v6 = sub_231261E94();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(a1, sel_identifier);
  sub_231261E7C();

  v11 = objc_msgSend(a1, sel_provenance);
  v12 = objc_msgSend(v11, sel_title);

  v13 = sub_23126409C();
  v15 = v14;

  v16 = objc_msgSend(a1, sel_provenance);
  v17 = objc_msgSend(v16, sel_subtitle);

  if (v17)
  {
    v18 = sub_23126409C();
    v20 = v19;

  }
  else
  {

    v18 = 0;
    v20 = 0;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a4, v9, v6);
  v21 = (int *)type metadata accessor for NewRecordsFeedItemData(0);
  v22 = (uint64_t *)(a4 + v21[5]);
  *v22 = v13;
  v22[1] = v15;
  v23 = (uint64_t *)(a4 + v21[6]);
  *v23 = v18;
  v23[1] = v20;
  *(_QWORD *)(a4 + v21[7]) = v25;
  return sub_2311A4AC8(v26, a4 + v21[8]);
}

uint64_t sub_2311A4158()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = sub_231261E40();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, (unint64_t *)&qword_254154938, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - v7;
  sub_231264C0C();
  v9 = type metadata accessor for NewLabsFeedItemData(0);
  sub_2311A4BBC(v0 + *(int *)(v9 + 20), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v8, 1, v1) == 1)
  {
    sub_231264C18();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v8, v1);
    sub_231264C18();
    sub_231172048(&qword_255EB86E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
    sub_23126400C();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  v10 = *(_QWORD *)(v0 + *(int *)(v9 + 24));
  result = sub_231264C0C();
  v12 = *(_QWORD *)(v10 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    v13 = v10 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_231264114();
      swift_bridgeObjectRelease();
      v13 += 16;
      --v12;
    }
    while (v12);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2311A4328(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD v12[2];
  char v13;
  char v14;
  char v15;

  v3 = v1;
  sub_2311A53DC(0, &qword_255EB8710, (uint64_t (*)(void))sub_2311A5344, (uint64_t)&type metadata for NewLabsFeedItemData.CodingKeys, MEMORY[0x24BEE3520]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v12 - v8;
  sub_231173410(a1, a1[3]);
  sub_2311A5344();
  sub_231264C60();
  v15 = 0;
  sub_231264AEC();
  if (!v2)
  {
    v10 = type metadata accessor for NewLabsFeedItemData(0);
    v14 = 1;
    sub_231261E40();
    sub_231172048(&qword_2541518F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_231264ABC();
    v12[1] = *(_QWORD *)(v3 + *(int *)(v10 + 24));
    v13 = 2;
    sub_2311A5388();
    sub_2311A5438(&qword_255EB8718, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    sub_231264AF8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_2311A4504@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;

  v21 = a2;
  sub_2311735E0(0, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v22 = (char *)&v20 - v4;
  sub_2311A53DC(0, &qword_255EB86F8, (uint64_t (*)(void))sub_2311A5344, (uint64_t)&type metadata for NewLabsFeedItemData.CodingKeys, MEMORY[0x24BEE33E0]);
  v23 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - v7;
  v9 = type metadata accessor for NewLabsFeedItemData(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_231173410(a1, a1[3]);
  sub_2311A5344();
  v12 = v24;
  sub_231264C54();
  if (v12)
    return sub_231173434((uint64_t)a1);
  v13 = (uint64_t)a1;
  v28 = 0;
  v15 = v22;
  v14 = v23;
  v16 = sub_231264A74();
  v24 = v11;
  *v11 = v16;
  sub_231261E40();
  v27 = 1;
  sub_231172048(&qword_2541518F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  v17 = (uint64_t)v15;
  sub_231264A44();
  v18 = (uint64_t)v24;
  sub_2311A4AC8(v17, (uint64_t)v24 + *(int *)(v9 + 20));
  sub_2311A5388();
  v26 = 2;
  sub_2311A5438(&qword_255EB8708, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
  sub_231264A80();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v14);
  *(_QWORD *)(v18 + *(int *)(v9 + 24)) = v25;
  sub_231178454(v18, v21, type metadata accessor for NewLabsFeedItemData);
  sub_231173434(v13);
  return sub_231178498(v18, type metadata accessor for NewLabsFeedItemData);
}

uint64_t sub_2311A4800()
{
  sub_231264C00();
  sub_231264C0C();
  return sub_231264C3C();
}

uint64_t sub_2311A4844()
{
  sub_231264C00();
  sub_231264C0C();
  return sub_231264C3C();
}

unint64_t sub_2311A4884()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x65676E497473616CLL;
  if (*v0 != 1)
    v1 = 0x73656D614E62616CLL;
  if (*v0)
    return v1;
  else
    return 0xD000000000000010;
}

uint64_t sub_2311A48E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2311A5BAC(a1, a2);
  *a3 = result;
  return result;
}

void sub_2311A490C(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_2311A4918()
{
  sub_2311A5344();
  return sub_231264C6C();
}

uint64_t sub_2311A4940()
{
  sub_2311A5344();
  return sub_231264C78();
}

uint64_t sub_2311A4968@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2311A4504(a1, a2);
}

uint64_t sub_2311A497C(_QWORD *a1)
{
  return sub_2311A4328(a1);
}

uint64_t sub_2311A4990(uint64_t a1, uint64_t a2)
{
  return sub_2311A499C(a1, a2, (void (*)(_BYTE *))sub_2311A4158);
}

uint64_t sub_2311A499C(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *))
{
  _BYTE v5[72];

  sub_231264C00();
  a3(v5);
  return sub_231264C3C();
}

uint64_t sub_2311A49E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2311A49EC(a1, a2, a3, (void (*)(_BYTE *))sub_2311A4158);
}

uint64_t sub_2311A49EC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *))
{
  _BYTE v6[72];

  sub_231264C00();
  a4(v6);
  return sub_231264C3C();
}

uint64_t sub_2311A4A2C()
{
  return sub_231172048(&qword_255EB8688, type metadata accessor for NewLabsFeedItemData, (uint64_t)&unk_231266894);
}

uint64_t sub_2311A4A58()
{
  return sub_231172048(&qword_255EB8690, type metadata accessor for NewRecordsFeedItemData, (uint64_t)&unk_23126694C);
}

unint64_t sub_2311A4A84()
{
  unint64_t result;

  result = qword_255EB86A0;
  if (!qword_255EB86A0)
  {
    result = MEMORY[0x2348D8544](&unk_231266BD0, &type metadata for NewRecordsFeedItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB86A0);
  }
  return result;
}

uint64_t sub_2311A4AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2311735E0(0, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2311A4B24(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = *a1;
  if (!result)
  {
    v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BE48E48];
    sub_2311735E0(255, &qword_255EB86B0, (uint64_t (*)(uint64_t))MEMORY[0x24BE48E48], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v11 = v10;
    v12 = sub_231172048(a2, v9, a3);
    result = MEMORY[0x2348D8544](a4, v11, &v12);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2311A4BBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2311735E0(0, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2311A4C18(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  char v28;
  char v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;

  v4 = sub_231261E40();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311A5278();
  v10 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, (unint64_t *)&qword_254154938, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v32 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v32 - v20;
  if (*a1 != *a2)
    goto LABEL_8;
  v22 = type metadata accessor for NewLabsFeedItemData(0);
  v23 = a1;
  v24 = v22;
  v25 = *(int *)(v22 + 20);
  v33 = v23;
  sub_2311A4BBC((uint64_t)v23 + v25, (uint64_t)v21);
  v34 = v24;
  v35 = a2;
  sub_2311A4BBC((uint64_t)a2 + *(int *)(v24 + 20), (uint64_t)v19);
  v26 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2311A4BBC((uint64_t)v21, (uint64_t)v12);
  sub_2311A4BBC((uint64_t)v19, v26);
  v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v27((uint64_t)v12, 1, v4) == 1)
  {
    sub_2311A52F0((uint64_t)v19);
    sub_2311A52F0((uint64_t)v21);
    if (v27(v26, 1, v4) == 1)
    {
      sub_2311A52F0((uint64_t)v12);
LABEL_11:
      v28 = sub_2311ACB24(*(_QWORD **)((char *)v33 + *(int *)(v34 + 24)), *(_QWORD **)((char *)v35 + *(int *)(v34 + 24)));
      return v28 & 1;
    }
    goto LABEL_7;
  }
  sub_2311A4BBC((uint64_t)v12, (uint64_t)v16);
  if (v27(v26, 1, v4) == 1)
  {
    sub_2311A52F0((uint64_t)v19);
    sub_2311A52F0((uint64_t)v21);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v16, v4);
LABEL_7:
    sub_231178498((uint64_t)v12, (uint64_t (*)(_QWORD))sub_2311A5278);
    goto LABEL_8;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v26, v4);
  sub_231172048(&qword_255EB86F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
  v30 = sub_231264060();
  v31 = *(void (**)(char *, uint64_t))(v6 + 8);
  v31(v8, v4);
  sub_2311A52F0((uint64_t)v19);
  sub_2311A52F0((uint64_t)v21);
  v31(v16, v4);
  sub_2311A52F0((uint64_t)v12);
  if ((v30 & 1) != 0)
    goto LABEL_11;
LABEL_8:
  v28 = 0;
  return v28 & 1;
}

uint64_t sub_2311A4F08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  char v28;
  uint64_t result;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(uint64_t, uint64_t, uint64_t);
  char v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;

  v4 = sub_231261E40();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311A5278();
  v10 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, (unint64_t *)&qword_254154938, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v41 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v41 - v20;
  if ((sub_231261E70() & 1) == 0)
    return 0;
  v42 = v6;
  v22 = (int *)type metadata accessor for NewRecordsFeedItemData(0);
  v23 = v22[5];
  v24 = *(_QWORD *)(a1 + v23);
  v25 = *(_QWORD *)(a1 + v23 + 8);
  v26 = (_QWORD *)(a2 + v23);
  v27 = v24 == *v26 && v25 == v26[1];
  if (v27 || (v28 = sub_231264B58(), result = 0, (v28 & 1) != 0))
  {
    v30 = v22[6];
    v31 = (_QWORD *)(a1 + v30);
    v32 = *(_QWORD *)(a1 + v30 + 8);
    v33 = (_QWORD *)(a2 + v30);
    v34 = v33[1];
    if (v32)
    {
      if (!v34)
        return 0;
      if (*v31 != *v33 || v32 != v34)
      {
        v35 = sub_231264B58();
        result = 0;
        if ((v35 & 1) == 0)
          return result;
      }
    }
    else if (v34)
    {
      return 0;
    }
    if ((sub_2311ADFD8(*(_QWORD *)(a1 + v22[7]), *(_QWORD *)(a2 + v22[7])) & 1) != 0)
    {
      sub_2311A4BBC(a1 + v22[8], (uint64_t)v21);
      sub_2311A4BBC(a2 + v22[8], (uint64_t)v19);
      v36 = (uint64_t)&v12[*(int *)(v10 + 48)];
      sub_2311A4BBC((uint64_t)v21, (uint64_t)v12);
      sub_2311A4BBC((uint64_t)v19, v36);
      v37 = v42;
      v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48);
      if (v38((uint64_t)v12, 1, v4) == 1)
      {
        sub_2311A52F0((uint64_t)v19);
        sub_2311A52F0((uint64_t)v21);
        if (v38(v36, 1, v4) == 1)
        {
          sub_2311A52F0((uint64_t)v12);
          return 1;
        }
        goto LABEL_20;
      }
      sub_2311A4BBC((uint64_t)v12, (uint64_t)v16);
      if (v38(v36, 1, v4) == 1)
      {
        sub_2311A52F0((uint64_t)v19);
        sub_2311A52F0((uint64_t)v21);
        (*(void (**)(char *, uint64_t))(v37 + 8))(v16, v4);
LABEL_20:
        sub_231178498((uint64_t)v12, (uint64_t (*)(_QWORD))sub_2311A5278);
        return 0;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(v8, v36, v4);
      sub_231172048(&qword_255EB86F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
      v39 = sub_231264060();
      v40 = *(void (**)(char *, uint64_t))(v37 + 8);
      v40(v8, v4);
      sub_2311A52F0((uint64_t)v19);
      sub_2311A52F0((uint64_t)v21);
      v40(v16, v4);
      sub_2311A52F0((uint64_t)v12);
      if ((v39 & 1) != 0)
        return 1;
    }
    return 0;
  }
  return result;
}

void sub_2311A5278()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_254151900)
  {
    sub_2311735E0(255, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_254151900);
  }
}

uint64_t sub_2311A52F0(uint64_t a1)
{
  uint64_t v2;

  sub_2311735E0(0, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2311A5344()
{
  unint64_t result;

  result = qword_255EB8700;
  if (!qword_255EB8700)
  {
    result = MEMORY[0x2348D8544](&unk_231266B80, &type metadata for NewLabsFeedItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB8700);
  }
  return result;
}

void sub_2311A5388()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254155690)
  {
    v0 = sub_231264270();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254155690);
  }
}

void sub_2311A53DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    v9 = a3();
    v10 = a5(a1, a4, v9);
    if (!v11)
      atomic_store(v10, a2);
  }
}

uint64_t sub_2311A5438(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_2311A5388();
    v8 = a2;
    result = MEMORY[0x2348D8544](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

_BYTE *initializeBufferWithCopyOfBuffer for NewLabsFeedItemData.CodingKeys(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for NewLabsFeedItemData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for NewLabsFeedItemData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2311A557C + 4 * byte_23126681A[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2311A55B0 + 4 * byte_231266815[v4]))();
}

uint64_t sub_2311A55B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2311A55B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2311A55C0);
  return result;
}

uint64_t sub_2311A55CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2311A55D4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2311A55D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2311A55E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NewLabsFeedItemData.CodingKeys()
{
  return &type metadata for NewLabsFeedItemData.CodingKeys;
}

uint64_t getEnumTagSinglePayload for NewRecordsFeedItemData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for NewRecordsFeedItemData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2311A56D8 + 4 * byte_231266824[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2311A570C + 4 * byte_23126681F[v4]))();
}

uint64_t sub_2311A570C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2311A5714(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2311A571CLL);
  return result;
}

uint64_t sub_2311A5728(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2311A5730);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2311A5734(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2311A573C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2311A5748(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_2311A5750(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for NewRecordsFeedItemData.CodingKeys()
{
  return &type metadata for NewRecordsFeedItemData.CodingKeys;
}

unint64_t sub_2311A576C()
{
  unint64_t result;

  result = qword_255EB8720;
  if (!qword_255EB8720)
  {
    result = MEMORY[0x2348D8544](&unk_231266AA0, &type metadata for NewRecordsFeedItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB8720);
  }
  return result;
}

unint64_t sub_2311A57B4()
{
  unint64_t result;

  result = qword_255EB8728;
  if (!qword_255EB8728)
  {
    result = MEMORY[0x2348D8544](&unk_231266B58, &type metadata for NewLabsFeedItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB8728);
  }
  return result;
}

unint64_t sub_2311A57FC()
{
  unint64_t result;

  result = qword_255EB8730;
  if (!qword_255EB8730)
  {
    result = MEMORY[0x2348D8544](&unk_231266AC8, &type metadata for NewLabsFeedItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB8730);
  }
  return result;
}

unint64_t sub_2311A5844()
{
  unint64_t result;

  result = qword_255EB8738;
  if (!qword_255EB8738)
  {
    result = MEMORY[0x2348D8544](&unk_231266AF0, &type metadata for NewLabsFeedItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB8738);
  }
  return result;
}

unint64_t sub_2311A588C()
{
  unint64_t result;

  result = qword_255EB8740;
  if (!qword_255EB8740)
  {
    result = MEMORY[0x2348D8544](&unk_231266A10, &type metadata for NewRecordsFeedItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB8740);
  }
  return result;
}

unint64_t sub_2311A58D4()
{
  unint64_t result;

  result = qword_255EB8748;
  if (!qword_255EB8748)
  {
    result = MEMORY[0x2348D8544](&unk_231266A38, &type metadata for NewRecordsFeedItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB8748);
  }
  return result;
}

uint64_t sub_2311A5918(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x49746E756F636361 && a2 == 0xE900000000000064;
  if (v2 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x54746E756F636361 && a2 == 0xEC000000656C7469 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x53746E756F636361 && a2 == 0xEF656C7469746275 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x79726F6765746163 && a2 == 0xEE0073746E756F43 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65676E497473616CLL && a2 == 0xEA00000000007473)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_231264B58();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_2311A5BAC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x800000023126C490 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65676E497473616CLL && a2 == 0xEA00000000007473 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73656D614E62616CLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_231264B58();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

void sub_2311A5D20(uint64_t a1, void *a2, void *a3, void *aBlock)
{
  void (*v6)(id, id, uint64_t (*)(char), uint64_t);
  void *v7;
  uint64_t v8;
  id v9;
  id v10;

  v6 = *(void (**)(id, id, uint64_t (*)(char), uint64_t))(a1 + 32);
  v7 = _Block_copy(aBlock);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  swift_retain();
  v10 = a2;
  v9 = a3;
  v6(v10, v9, sub_2311A6364, v8);
  swift_release();
  swift_release();

}

id _sSo18UIContextualActionC13HealthRecordsE05unpinB07handlerAByAB_So6UIViewCySbctc_tFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  _QWORD aBlock[6];

  v4 = sub_231262B60();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311A62D4();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_231261EAC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  sub_231262B54();
  sub_2312632EC();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_23117A588((uint64_t)v10);
  swift_retain();
  v12 = (void *)sub_23126406C();
  swift_bridgeObjectRelease();
  aBlock[4] = a1;
  aBlock[5] = a2;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2311A5D20;
  aBlock[3] = &unk_25000C088;
  v13 = _Block_copy(aBlock);
  v14 = objc_msgSend((id)objc_opt_self(), sel_contextualActionWithStyle_title_handler_, 0, v12, v13);

  _Block_release(v13);
  swift_release();
  v15 = (void *)sub_23126406C();
  v16 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v15);

  objc_msgSend(v14, sel_setImage_, v16);
  v17 = objc_msgSend((id)objc_opt_self(), sel_systemYellowColor);
  objc_msgSend(v14, sel_setBackgroundColor_, v17);

  return v14;
}

id _sSo18UIContextualActionC13HealthRecordsE03pinB07handlerAByAB_So6UIViewCySbctc_tFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  _QWORD aBlock[6];

  v4 = sub_231262B60();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311A62D4();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_231261EAC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  sub_231262B54();
  sub_2312632EC();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_23117A588((uint64_t)v10);
  swift_retain();
  v12 = (void *)sub_23126406C();
  swift_bridgeObjectRelease();
  aBlock[4] = a1;
  aBlock[5] = a2;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2311A5D20;
  aBlock[3] = &unk_25000C038;
  v13 = _Block_copy(aBlock);
  v14 = objc_msgSend((id)objc_opt_self(), sel_contextualActionWithStyle_title_handler_, 0, v12, v13);

  _Block_release(v13);
  swift_release();
  v15 = (void *)sub_23126406C();
  v16 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v15);

  objc_msgSend(v14, sel_setImage_, v16);
  v17 = objc_msgSend((id)objc_opt_self(), sel_systemYellowColor);
  objc_msgSend(v14, sel_setBackgroundColor_, v17);

  return v14;
}

void sub_2311A62D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254151918)
  {
    sub_231261EAC();
    v0 = sub_231264738();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254151918);
  }
}

uint64_t sub_2311A6328(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2311A6338()
{
  return swift_release();
}

uint64_t sub_2311A6340()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_2311A6364(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 16) + 16))(*(_QWORD *)(v1 + 16), a1 & 1);
}

id sub_2311A6380@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id result;
  void *v18;
  id v19;
  _QWORD *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  int *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  char *v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  void *v67;
  _OWORD v68[5];
  uint64_t v69;

  v64 = a3;
  v66 = a5;
  v8 = sub_23126292C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_allocWithZone(MEMORY[0x24BE7AEF8]);
  v13 = (void *)sub_231261D80();
  v14 = objc_msgSend(v12, sel_initWithData_, v13);

  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A3B8]), sel_init);
  if (!v15)
  {
    sub_2311807A0(a1, a2);

    swift_bridgeObjectRelease();
LABEL_17:
    v50 = type metadata accessor for SharedConceptFeedItemData(0);
    return (id)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v66, 1, 1, v50);
  }
  v16 = v15;
  v65 = a4;
  objc_msgSend(v15, sel_readFrom_, v14);
  if ((objc_msgSend(v16, sel_hasConceptIdentifier) & 1) == 0
    || !objc_msgSend(v16, sel_hasPreferredName)
    || !objc_msgSend(v16, sel_hasLatestRecord)
    || !objc_msgSend(v16, sel_hasIsPinned))
  {
    sub_2311807A0(a1, a2);

    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  v67 = (void *)MEMORY[0x24BEE4AF8];
  if ((uint64_t)objc_msgSend(v16, sel_allRecordsCount) < 1)
    goto LABEL_9;
  result = objc_msgSend(v16, sel_allRecords);
  if (result)
  {
    v18 = result;
    v19 = v16;
    v20 = sub_2311AFC44(v18, v19);

    sub_2312109BC((uint64_t)v20);
LABEL_9:
    result = objc_msgSend(v16, sel_conceptIdentifier);
    if (result)
    {
      v21 = result;
      v22 = sub_23126409C();
      v63 = v23;

      (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BE490B8], v8);
      result = objc_msgSend(v16, sel_preferredName);
      if (result)
      {
        v24 = result;
        v25 = sub_23126409C();
        v60 = v26;
        v61 = v25;

        v59 = sub_2312645E8();
        v58 = v27;
        v28 = sub_2312645F4();
        v57 = v29;
        v56 = objc_msgSend(v16, sel_isPinned);
        result = objc_msgSend(v16, sel_latestRecord);
        v62 = result;
        if (result)
        {
          result = objc_msgSend(v16, sel_conceptIdentifier);
          if (result)
          {
            v30 = result;
            v54 = v28;
            v55 = v22;
            v53 = (char *)sub_23126409C();
            v52 = v31;

            result = objc_msgSend(v16, sel_preferredName);
            if (result)
            {
              v32 = result;
              v51 = sub_23126409C();
              v34 = v33;

              v35 = v34;
              v36 = v62;
              sub_2311ABC8C((uint64_t)v53, v52, v51, v35, v68);

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v62 = v67;
              v37 = (int *)type metadata accessor for SharedConceptFeedItemData(0);
              v38 = v66;
              v53 = &v66[v37[13]];
              sub_231178AD0(0, &qword_2541531E0);
              sub_2311B0F6C((unint64_t *)&qword_255EB8988, &qword_2541531E0, 0x24BE4A3B8, (uint64_t)&protocol conformance descriptor for HKCodableHealthRecordsSharableViewModel);
              sub_2312636B8();
              sub_2311807A0(a1, a2);

              v39 = v65;
              *(_QWORD *)v38 = v64;
              *((_QWORD *)v38 + 1) = v39;
              v40 = v63;
              *((_QWORD *)v38 + 2) = v55;
              *((_QWORD *)v38 + 3) = v40;
              (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v38[v37[6]], v11, v8);
              v41 = (uint64_t *)&v38[v37[7]];
              v42 = v60;
              *v41 = v61;
              v41[1] = v42;
              v43 = (uint64_t *)&v38[v37[8]];
              v44 = v58;
              *v43 = v59;
              v43[1] = v44;
              v45 = (uint64_t *)&v38[v37[9]];
              v46 = v57;
              *v45 = v54;
              v45[1] = v46;
              v38[v37[10]] = v56;
              v47 = &v38[v37[11]];
              v48 = v68[3];
              *((_OWORD *)v47 + 2) = v68[2];
              *((_OWORD *)v47 + 3) = v48;
              *((_OWORD *)v47 + 4) = v68[4];
              *((_QWORD *)v47 + 10) = v69;
              v49 = v68[1];
              *(_OWORD *)v47 = v68[0];
              *((_OWORD *)v47 + 1) = v49;
              *(_QWORD *)&v38[v37[12]] = v62;
              return (id)(*(uint64_t (**)(char *, _QWORD, uint64_t, int *))(*((_QWORD *)v37 - 1) + 56))(v38, 0, 1, v37);
            }
            goto LABEL_22;
          }
LABEL_21:
          __break(1u);
LABEL_22:
          __break(1u);
          goto LABEL_23;
        }
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_20;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_2311A68EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23126292C();
  sub_231172048(&qword_255EB8830, (uint64_t (*)(uint64_t))MEMORY[0x24BE490F8], MEMORY[0x24BE49110]);
  sub_23126400C();
  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SharedConceptComboFeedItemData(0) + 20));
  sub_231264C0C();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_231264114();
      swift_bridgeObjectRelease();
      v3 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  sub_231261E40();
  sub_231172048(&qword_255EB86E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  return sub_23126400C();
}

uint64_t sub_2311A6A08(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];
  char v12;
  char v13;
  char v14;

  v3 = v1;
  sub_2311A53DC(0, &qword_255EB8820, (uint64_t (*)(void))sub_2311ABBDC, (uint64_t)&type metadata for SharedConceptComboFeedItemData.CodingKeys, MEMORY[0x24BEE3520]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v11 - v8;
  sub_231173410(a1, a1[3]);
  sub_2311ABBDC();
  sub_231264C60();
  v14 = 0;
  sub_23126292C();
  sub_231172048(&qword_255EB8828, (uint64_t (*)(uint64_t))MEMORY[0x24BE490F8], MEMORY[0x24BE49108]);
  sub_231264AF8();
  if (!v2)
  {
    v11[1] = *(_QWORD *)(v3 + *(int *)(type metadata accessor for SharedConceptComboFeedItemData(0) + 20));
    v13 = 1;
    sub_2311B120C(0, (unint64_t *)&qword_254155690);
    sub_2311ABC20(&qword_255EB8718, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    sub_231264AF8();
    v12 = 2;
    sub_231261E40();
    sub_231172048(&qword_2541518F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_231264AF8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_2311A6C24@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;

  v21 = a2;
  v24 = sub_231261E40();
  v20 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v22 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_23126292C();
  v23 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v26 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311A53DC(0, &qword_255EB8808, (uint64_t (*)(void))sub_2311ABBDC, (uint64_t)&type metadata for SharedConceptComboFeedItemData.CodingKeys, MEMORY[0x24BEE33E0]);
  v27 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v19 - v7;
  v9 = type metadata accessor for SharedConceptComboFeedItemData(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231173410(a1, a1[3]);
  sub_2311ABBDC();
  v28 = v8;
  v12 = v29;
  sub_231264C54();
  if (v12)
    return sub_231173434((uint64_t)a1);
  v29 = v6;
  v19 = v9;
  v13 = v23;
  v14 = v24;
  v33 = 0;
  sub_231172048(&qword_255EB8818, (uint64_t (*)(uint64_t))MEMORY[0x24BE490F8], MEMORY[0x24BE49120]);
  v15 = v25;
  sub_231264A80();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v11, v26, v15);
  sub_2311B120C(0, (unint64_t *)&qword_254155690);
  v32 = 1;
  sub_2311ABC20(&qword_255EB8708, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
  sub_231264A80();
  v16 = v19;
  *(_QWORD *)&v11[*(int *)(v19 + 20)] = v30;
  v31 = 2;
  sub_231172048(&qword_2541518F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  v26 = v11;
  sub_231264A80();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v28, v27);
  v17 = (uint64_t)v26;
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(&v26[*(int *)(v16 + 24)], v22, v14);
  sub_231178454(v17, v21, type metadata accessor for SharedConceptComboFeedItemData);
  sub_231173434((uint64_t)a1);
  return sub_231178498(v17, type metadata accessor for SharedConceptComboFeedItemData);
}

uint64_t sub_2311A6FEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  _OWORD v18[5];
  uint64_t v19;

  v2 = v1;
  v4 = sub_231262464();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, &qword_254152BE8, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v18 - v10;
  swift_bridgeObjectRetain();
  sub_231264114();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_231264114();
  swift_bridgeObjectRelease();
  v12 = (int *)type metadata accessor for SharedConceptFeedItemData(0);
  sub_23126292C();
  sub_231172048(&qword_255EB8830, (uint64_t (*)(uint64_t))MEMORY[0x24BE490F8], MEMORY[0x24BE49110]);
  sub_23126400C();
  swift_bridgeObjectRetain();
  sub_231264114();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v1 + v12[8] + 8))
  {
    sub_231264C18();
    swift_bridgeObjectRetain();
    sub_231264114();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_231264C18();
  }
  if (*(_QWORD *)(v1 + v12[9] + 8))
  {
    sub_231264C18();
    swift_bridgeObjectRetain();
    sub_231264114();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_231264C18();
  }
  sub_231264C18();
  v13 = v1 + v12[11];
  v14 = *(_OWORD *)(v13 + 48);
  v18[2] = *(_OWORD *)(v13 + 32);
  v18[3] = v14;
  v18[4] = *(_OWORD *)(v13 + 64);
  v19 = *(_QWORD *)(v13 + 80);
  v15 = *(_OWORD *)(v13 + 16);
  v18[0] = *(_OWORD *)v13;
  v18[1] = v15;
  sub_231188CC0((uint64_t)v18);
  sub_2311A7F00(a1);
  sub_2311B1364((uint64_t)v18);
  v16 = *(_QWORD *)(v1 + v12[12]);
  swift_bridgeObjectRetain();
  sub_2311AE66C(a1, v16);
  swift_bridgeObjectRelease();
  sub_2311896A0(v2 + v12[13], (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) == 1)
    return sub_231264C18();
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v11, v4);
  sub_231264C18();
  sub_231172048(&qword_255EB8968, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], MEMORY[0x24BE47E88]);
  sub_23126400C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_2311A732C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2311A736C + 4 * byte_231266C20[a1]))(0x656C626172616873, 0xEF64496C65646F4DLL);
}

unint64_t sub_2311A736C()
{
  return 0xD000000000000011;
}

uint64_t sub_2311A73A4()
{
  return 0x656C746974;
}

unint64_t sub_2311A73B8()
{
  return 0xD000000000000010;
}

uint64_t sub_2311A73D4()
{
  return 0x7470697263736564;
}

uint64_t sub_2311A73F4()
{
  return 0x64656E6E69507369;
}

uint64_t sub_2311A740C()
{
  return 0x655274736574616CLL;
}

uint64_t sub_2311A742C()
{
  return 0x6465646465626D65;
}

uint64_t sub_2311A7450()
{
  return 0x6E6F6973726576;
}

uint64_t sub_2311A7468(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __int128 *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  v3 = v1;
  sub_2311A53DC(0, &qword_255EB8948, (uint64_t (*)(void))sub_2311B1184, (uint64_t)&type metadata for SharedConceptFeedItemData.CodingKeys, MEMORY[0x24BEE3520]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v20 - v8;
  sub_231173410(a1, a1[3]);
  sub_2311B1184();
  sub_231264C60();
  LOBYTE(v21) = 0;
  sub_231264AC8();
  if (!v2)
  {
    LOBYTE(v21) = 1;
    sub_231264AC8();
    v10 = type metadata accessor for SharedConceptFeedItemData(0);
    LOBYTE(v21) = 2;
    sub_23126292C();
    sub_231172048(&qword_255EB8828, (uint64_t (*)(uint64_t))MEMORY[0x24BE490F8], MEMORY[0x24BE49108]);
    sub_231264AF8();
    LOBYTE(v21) = 3;
    sub_231264AC8();
    LOBYTE(v21) = 4;
    sub_231264A98();
    LOBYTE(v21) = 5;
    sub_231264A98();
    LOBYTE(v21) = 6;
    sub_231264AD4();
    v11 = (__int128 *)(v3 + *(int *)(v10 + 44));
    v12 = *((_QWORD *)v11 + 2);
    v13 = *((_QWORD *)v11 + 3);
    v14 = *((_QWORD *)v11 + 6);
    v15 = *((_QWORD *)v11 + 7);
    v16 = *((_QWORD *)v11 + 8);
    v17 = *((_QWORD *)v11 + 9);
    v18 = *((_QWORD *)v11 + 10);
    v21 = *v11;
    v22 = v12;
    v23 = v13;
    v24 = v11[2];
    v25 = v14;
    v26 = v15;
    v27 = v16;
    v28 = v17;
    v29 = v18;
    v30 = 7;
    sub_2311B1320();
    sub_231264AF8();
    *(_QWORD *)&v21 = *(_QWORD *)(v3 + *(int *)(v10 + 48));
    v30 = 8;
    sub_2311B120C(0, (unint64_t *)&qword_255EB8930);
    sub_2311B1250(&qword_255EB8958, (uint64_t (*)(void))sub_2311B1320, MEMORY[0x24BEE12A0]);
    sub_231264AF8();
    LOBYTE(v21) = 9;
    sub_231262464();
    sub_231172048(&qword_255EB8960, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], MEMORY[0x24BE47E80]);
    sub_231264ABC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_2311A7808@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v43[2];
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t *v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;

  v44 = a2;
  sub_2311735E0(0, &qword_254152BE8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v43 - v5;
  v7 = sub_23126292C();
  v47 = *(_QWORD *)(v7 - 8);
  v48 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311A53DC(0, &qword_255EB8918, (uint64_t (*)(void))sub_2311B1184, (uint64_t)&type metadata for SharedConceptFeedItemData.CodingKeys, MEMORY[0x24BEE33E0]);
  v46 = v10;
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v43 - v12;
  v51 = type metadata accessor for SharedConceptFeedItemData(0);
  MEMORY[0x24BDAC7A8](v51);
  v49 = a1;
  v50 = (_QWORD *)((char *)v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_231173410(a1, a1[3]);
  sub_2311B1184();
  v45 = v13;
  sub_231264C54();
  if (v2)
    return sub_231173434((uint64_t)v49);
  v15 = (uint64_t)v6;
  v16 = v44;
  LOBYTE(v52) = 0;
  v17 = sub_231264A50();
  v18 = (char *)v50;
  *v50 = v17;
  *((_QWORD *)v18 + 1) = v19;
  LOBYTE(v52) = 1;
  *((_QWORD *)v18 + 2) = sub_231264A50();
  *((_QWORD *)v18 + 3) = v20;
  LOBYTE(v52) = 2;
  sub_231172048(&qword_255EB8818, (uint64_t (*)(uint64_t))MEMORY[0x24BE490F8], MEMORY[0x24BE49120]);
  v21 = v48;
  sub_231264A80();
  v22 = (int *)v51;
  (*(void (**)(char *, char *, uint64_t))(v47 + 32))(&v18[*(int *)(v51 + 24)], v9, v21);
  LOBYTE(v52) = 3;
  v23 = sub_231264A50();
  v24 = (uint64_t *)&v18[v22[7]];
  *v24 = v23;
  v24[1] = v25;
  LOBYTE(v52) = 4;
  v26 = sub_231264A20();
  v27 = (uint64_t *)&v18[v22[8]];
  *v27 = v26;
  v27[1] = v28;
  LOBYTE(v52) = 5;
  v29 = sub_231264A20();
  v30 = (uint64_t *)&v18[v22[9]];
  *v30 = v29;
  v30[1] = v31;
  LOBYTE(v52) = 6;
  v18[v22[10]] = sub_231264A5C() & 1;
  v61 = 7;
  sub_2311B11C8();
  sub_231264A80();
  v32 = v53;
  v33 = v54;
  v34 = v56;
  v35 = v57;
  v36 = v58;
  v37 = v59;
  v38 = v60;
  v39 = &v18[v22[11]];
  *(_OWORD *)v39 = v52;
  *((_QWORD *)v39 + 2) = v32;
  *((_QWORD *)v39 + 3) = v33;
  *((_OWORD *)v39 + 2) = v55;
  *((_QWORD *)v39 + 6) = v34;
  *((_QWORD *)v39 + 7) = v35;
  *((_QWORD *)v39 + 8) = v36;
  *((_QWORD *)v39 + 9) = v37;
  *((_QWORD *)v39 + 10) = v38;
  sub_2311B120C(0, (unint64_t *)&qword_255EB8930);
  v43[1] = v40;
  v61 = 8;
  sub_2311B1250(&qword_255EB8938, (uint64_t (*)(void))sub_2311B11C8, MEMORY[0x24BEE12D0]);
  sub_231264A80();
  *(_QWORD *)&v18[v22[12]] = v52;
  sub_231262464();
  LOBYTE(v52) = 9;
  sub_231172048(&qword_255EB8940, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], MEMORY[0x24BE47E98]);
  sub_231264A44();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v45, v46);
  v41 = (uint64_t)v50;
  sub_2311B12C4(v15, (uint64_t)v50 + *(int *)(v51 + 52));
  sub_231178454(v41, v16, type metadata accessor for SharedConceptFeedItemData);
  sub_231173434((uint64_t)v49);
  return sub_231178498(v41, type metadata accessor for SharedConceptFeedItemData);
}

uint64_t sub_2311A7F00(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  v4 = *v1;
  v12 = v4;
  v5 = *(_QWORD *)(v4 + 16);
  sub_231264C0C();
  if (v5)
  {
    sub_231178A30(0, (unint64_t *)&qword_255EB8870, &qword_255EB8878);
    v7 = *(_QWORD *)(v6 - 8);
    v8 = v4 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    sub_2311B0F44((uint64_t)&v12);
    v9 = *(_QWORD *)(v7 + 72);
    sub_2311B10DC(&qword_255EB88D0, &qword_255EB88D8, MEMORY[0x24BEE5BD8], MEMORY[0x24BDD2068]);
    do
    {
      sub_23126400C();
      v8 += v9;
      --v5;
    }
    while (v5);
    sub_2311B0FAC((uint64_t)&v12);
  }
  swift_bridgeObjectRetain();
  sub_231264114();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_231264114();
  swift_bridgeObjectRelease();
  v10 = v2[5];
  swift_bridgeObjectRetain();
  sub_2311AE248(a1, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_231264114();
  swift_bridgeObjectRelease();
  sub_231264C30();
  swift_bridgeObjectRetain();
  sub_231264114();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2311A80B4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2311A80E8 + 4 * byte_231266C2A[a1]))(0x73676E69646F63, 0xE700000000000000);
}

unint64_t sub_2311A80E8()
{
  return 0xD000000000000011;
}

unint64_t sub_2311A8104()
{
  return 0xD000000000000012;
}

uint64_t sub_2311A8124()
{
  return 0x6C61566465646F63;
}

uint64_t sub_2311A8144()
{
  return 0x74696E556D756375;
}

uint64_t sub_2311A8168()
{
  return 0x6174614465746164;
}

uint64_t sub_2311A8180()
{
  return 0x555564726F636572;
}

uint64_t sub_2311A819C(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v3 = v1;
  sub_2311A53DC(0, &qword_255EB88A8, (uint64_t (*)(void))sub_2311B0D74, (uint64_t)&type metadata for SharedConceptFormattedRecord.CodingKeys, MEMORY[0x24BEE3520]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v11 - v8;
  sub_231173410(a1, a1[3]);
  sub_2311B0D74();
  sub_231264C60();
  v13 = *v3;
  v12 = 0;
  sub_2311B1498(0, &qword_255EB8868, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_2311B0E64(&qword_255EB88B0, &qword_255EB88B8, MEMORY[0x24BDD2060], MEMORY[0x24BEE12A0]);
  sub_231264AF8();
  if (!v2)
  {
    LOBYTE(v13) = 1;
    sub_231264AC8();
    LOBYTE(v13) = 2;
    sub_231264AC8();
    v13 = v3[5];
    v12 = 3;
    sub_2311735E0(0, &qword_255EB8890, type metadata accessor for SharedConceptCodedValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_2311B0DCC(&qword_255EB88C0, &qword_255EB88C8, (uint64_t)&unk_2312674B0, MEMORY[0x24BEE12A0]);
    sub_231264AF8();
    LOBYTE(v13) = 4;
    sub_231264AC8();
    LOBYTE(v13) = 5;
    sub_231264AE0();
    LOBYTE(v13) = 6;
    sub_231264AC8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_2311A8440()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  char *v18;
  uint64_t *v19;

  v1 = v0;
  sub_231178A30(0, &qword_2541534C0, (unint64_t *)&qword_2541531A0);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v18 - v5;
  sub_2311789C4();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v0;
  v11 = *(_QWORD *)(*v0 + 16);
  sub_231264C0C();
  if (v11)
  {
    v18 = v6;
    v19 = v0;
    sub_231178A30(0, (unint64_t *)&qword_255EB8870, &qword_255EB8878);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = v10 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v15 = *(_QWORD *)(v13 + 72);
    sub_2311B10DC(&qword_255EB88D0, &qword_255EB88D8, MEMORY[0x24BEE5BD8], MEMORY[0x24BDD2068]);
    swift_bridgeObjectRetain();
    do
    {
      sub_23126400C();
      v14 += v15;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    v6 = v18;
    v1 = v19;
  }
  v16 = (int *)type metadata accessor for SharedConceptCodedValue(0);
  sub_231178454((uint64_t)v1 + v16[5], (uint64_t)v9, (uint64_t (*)(_QWORD))sub_2311789C4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
  {
    sub_231264C18();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v9, v3);
    sub_231264C18();
    sub_2311B0FD4(&qword_255EB88E0, &qword_255EB88E8, MEMORY[0x24BEE5BD8], MEMORY[0x24BDD2068]);
    sub_23126400C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  if (*(uint64_t *)((char *)v1 + v16[6] + 8))
  {
    sub_231264C18();
    swift_bridgeObjectRetain();
    sub_231264114();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_231264C18();
  }
  if (!*(uint64_t *)((char *)v1 + v16[7] + 8))
    return sub_231264C18();
  sub_231264C18();
  swift_bridgeObjectRetain();
  sub_231264114();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2311A8710(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];
  uint64_t v12;

  v3 = v1;
  sub_2311A53DC(0, &qword_255EB8AD0, (uint64_t (*)(void))sub_2311B2A4C, (uint64_t)&type metadata for SharedConceptCodedValue.CodingKeys, MEMORY[0x24BEE3520]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = &v11[-v8];
  sub_231173410(a1, a1[3]);
  sub_2311B2A4C();
  sub_231264C60();
  v12 = *v3;
  v11[15] = 0;
  sub_2311B1498(0, &qword_255EB8868, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_2311B0E64(&qword_255EB88B0, &qword_255EB88B8, MEMORY[0x24BDD2060], MEMORY[0x24BEE12A0]);
  sub_231264AF8();
  if (!v2)
  {
    type metadata accessor for SharedConceptCodedValue(0);
    v11[14] = 1;
    sub_231178A30(0, &qword_2541534C0, (unint64_t *)&qword_2541531A0);
    sub_2311B2A90(&qword_255EB8AD8, MEMORY[0x24BDD2060]);
    sub_231264ABC();
    v11[13] = 2;
    sub_231264A98();
    v11[12] = 3;
    sub_231264A98();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_2311A8948@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  char v32;
  uint64_t v33;

  v24 = a2;
  sub_2311789C4();
  MEMORY[0x24BDAC7A8](v3);
  v25 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311A53DC(0, &qword_255EB8AB8, (uint64_t (*)(void))sub_2311B2A4C, (uint64_t)&type metadata for SharedConceptCodedValue.CodingKeys, MEMORY[0x24BEE33E0]);
  v27 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v24 - v7;
  v9 = type metadata accessor for SharedConceptCodedValue(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_231173410(a1, a1[3]);
  sub_2311B2A4C();
  v26 = v8;
  v12 = v28;
  sub_231264C54();
  if (v12)
    return sub_231173434((uint64_t)a1);
  v13 = (uint64_t)v25;
  sub_2311B1498(0, &qword_255EB8868, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  v32 = 0;
  sub_2311B0E64(&qword_255EB8880, &qword_255EB8888, MEMORY[0x24BDD2078], MEMORY[0x24BEE12D0]);
  v14 = v26;
  sub_231264A80();
  *v11 = v33;
  sub_231178A30(0, &qword_2541534C0, (unint64_t *)&qword_2541531A0);
  v31 = 1;
  sub_2311B2A90(&qword_255EB8AC8, MEMORY[0x24BDD2078]);
  sub_231264A44();
  v15 = v9;
  sub_2311B1454(v13, (uint64_t)v11 + *(int *)(v9 + 20), (uint64_t (*)(_QWORD))sub_2311789C4);
  v30 = 2;
  v16 = sub_231264A20();
  v17 = (_QWORD *)((char *)v11 + *(int *)(v9 + 24));
  *v17 = v16;
  v17[1] = v18;
  v29 = 3;
  v19 = sub_231264A20();
  v21 = v20;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v27);
  v22 = (_QWORD *)((char *)v11 + *(int *)(v15 + 28));
  *v22 = v19;
  v22[1] = v21;
  sub_231178454((uint64_t)v11, v24, type metadata accessor for SharedConceptCodedValue);
  sub_231173434((uint64_t)a1);
  return sub_231178498((uint64_t)v11, type metadata accessor for SharedConceptCodedValue);
}

uint64_t sub_2311A8CF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23126292C();
  sub_231172048(&qword_255EB8830, (uint64_t (*)(uint64_t))MEMORY[0x24BE490F8], MEMORY[0x24BE49110]);
  sub_23126400C();
  v1 = type metadata accessor for SharedNewRecordsAlertData(0);
  sub_231264C0C();
  v2 = *(_QWORD *)(v0 + *(int *)(v1 + 24));
  sub_231264C0C();
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = v2 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_231264114();
      swift_bridgeObjectRelease();
      v4 += 16;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_231264114();
  swift_bridgeObjectRelease();
  sub_231261E40();
  sub_231172048(&qword_255EB86E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  return sub_23126400C();
}

uint64_t sub_2311A8E44(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD v12[2];
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;

  v3 = v1;
  sub_2311A53DC(0, &qword_255EB8850, (uint64_t (*)(void))sub_2311AEB8C, (uint64_t)&type metadata for SharedNewRecordsAlertData.CodingKeys, MEMORY[0x24BEE3520]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v12 - v8;
  sub_231173410(a1, a1[3]);
  sub_2311AEB8C();
  sub_231264C60();
  v17 = 0;
  sub_23126292C();
  sub_231172048(&qword_255EB8828, (uint64_t (*)(uint64_t))MEMORY[0x24BE490F8], MEMORY[0x24BE49108]);
  sub_231264AF8();
  if (!v2)
  {
    v10 = type metadata accessor for SharedNewRecordsAlertData(0);
    v16 = 1;
    sub_231264AEC();
    v12[1] = *(_QWORD *)(v3 + *(int *)(v10 + 24));
    v15 = 2;
    sub_2311B120C(0, (unint64_t *)&qword_254155690);
    sub_2311ABC20(&qword_255EB8718, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    sub_231264AF8();
    v14 = 3;
    sub_231264AC8();
    v13 = 4;
    sub_231261E40();
    sub_231172048(&qword_2541518F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_231264AF8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_2311A90BC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;

  v24 = a2;
  v25 = sub_231261E40();
  v23 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v26 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23126292C();
  v27 = *(_QWORD *)(v4 - 8);
  v28 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v29 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311A53DC(0, &qword_255EB8840, (uint64_t (*)(void))sub_2311AEB8C, (uint64_t)&type metadata for SharedNewRecordsAlertData.CodingKeys, MEMORY[0x24BEE33E0]);
  v31 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v22 - v8;
  v10 = (int *)type metadata accessor for SharedNewRecordsAlertData(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231173410(a1, a1[3]);
  sub_2311AEB8C();
  v30 = v9;
  v13 = v32;
  sub_231264C54();
  if (v13)
    return sub_231173434((uint64_t)a1);
  v14 = v27;
  v38 = 0;
  sub_231172048(&qword_255EB8818, (uint64_t (*)(uint64_t))MEMORY[0x24BE490F8], MEMORY[0x24BE49120]);
  v15 = v28;
  sub_231264A80();
  v16 = (uint64_t)v12;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v12, v29, v15);
  v37 = 1;
  *(_QWORD *)&v12[v10[5]] = sub_231264A74();
  sub_2311B120C(0, (unint64_t *)&qword_254155690);
  v36 = 2;
  sub_2311ABC20(&qword_255EB8708, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
  sub_231264A80();
  *(_QWORD *)&v12[v10[6]] = v33;
  v35 = 3;
  v17 = sub_231264A50();
  v18 = (uint64_t *)&v12[v10[7]];
  *v18 = v17;
  v18[1] = v19;
  v34 = 4;
  sub_231172048(&qword_2541518F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  v20 = v25;
  sub_231264A80();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v30, v31);
  (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v16 + v10[8], v26, v20);
  sub_231178454(v16, v24, type metadata accessor for SharedNewRecordsAlertData);
  sub_231173434((uint64_t)a1);
  return sub_231178498(v16, type metadata accessor for SharedNewRecordsAlertData);
}

unint64_t sub_2311A94C4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x736D657469;
  if (*v0 != 1)
    v1 = 1702125924;
  if (*v0)
    return v1;
  else
    return 0xD000000000000013;
}

uint64_t sub_2311A9518@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2311AFF68(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2311A953C()
{
  sub_2311ABBDC();
  return sub_231264C6C();
}

uint64_t sub_2311A9564()
{
  sub_2311ABBDC();
  return sub_231264C78();
}

uint64_t sub_2311A958C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2311A6C24(a1, a2);
}

uint64_t sub_2311A95A0(_QWORD *a1)
{
  return sub_2311A6A08(a1);
}

uint64_t sub_2311A95B4(uint64_t a1, uint64_t a2)
{
  return sub_2311A499C(a1, a2, (void (*)(_BYTE *))sub_2311A68EC);
}

uint64_t sub_2311A95C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2311A49EC(a1, a2, a3, (void (*)(_BYTE *))sub_2311A68EC);
}

uint64_t sub_2311A95D4()
{
  unsigned __int8 *v0;

  return sub_2311A732C(*v0);
}

uint64_t sub_2311A95DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2311B00A0(a1, a2);
  *a3 = result;
  return result;
}

void sub_2311A9600(_BYTE *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_2311A960C()
{
  sub_2311B1184();
  return sub_231264C6C();
}

uint64_t sub_2311A9634()
{
  sub_2311B1184();
  return sub_231264C78();
}

uint64_t sub_2311A965C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2311A7808(a1, a2);
}

uint64_t sub_2311A9670(_QWORD *a1)
{
  return sub_2311A7468(a1);
}

uint64_t sub_2311A9684(uint64_t a1, uint64_t a2)
{
  return sub_2311A499C(a1, a2, (void (*)(_BYTE *))sub_2311A6FEC);
}

uint64_t sub_2311A9694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2311A49EC(a1, a2, a3, (void (*)(_BYTE *))sub_2311A6FEC);
}

uint64_t sub_2311A96A4()
{
  unsigned __int8 *v0;

  return sub_2311A80B4(*v0);
}

uint64_t sub_2311A96AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2311B0504(a1, a2);
  *a3 = result;
  return result;
}

void sub_2311A96D0(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_2311A96DC()
{
  sub_2311B0D74();
  return sub_231264C6C();
}

uint64_t sub_2311A9704()
{
  sub_2311B0D74();
  return sub_231264C78();
}

double sub_2311A972C@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[5];
  uint64_t v8;

  sub_2311B0824(a1, v7);
  if (!v2)
  {
    v5 = v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_QWORD *)(a2 + 80) = v8;
    result = *(double *)v7;
    v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_2311A9784(_QWORD *a1)
{
  return sub_2311A819C(a1);
}

uint64_t sub_2311A9798()
{
  _BYTE v1[72];

  sub_231264C00();
  sub_2311A7F00((uint64_t)v1);
  return sub_231264C3C();
}

uint64_t sub_2311A97D8()
{
  _BYTE v1[72];

  sub_231264C00();
  sub_2311A7F00((uint64_t)v1);
  return sub_231264C3C();
}

uint64_t sub_2311A9810(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[5];
  uint64_t v8;
  _OWORD v9[5];
  uint64_t v10;

  v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  v7[4] = *(_OWORD *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 80);
  v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  v9[4] = *(_OWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 80);
  v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_2311A80B0(v7, v9) & 1;
}

uint64_t sub_2311A9878()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2311A98B0 + 4 * byte_231266C31[*v0]))(0x646F436465786F62, 0xEC00000073676E69);
}

unint64_t sub_2311A98B0()
{
  return 0xD000000000000011;
}

unint64_t sub_2311A98CC()
{
  return 0xD000000000000017;
}

uint64_t sub_2311A98EC()
{
  return 0x566C617574786574;
}

uint64_t sub_2311A990C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2311B25C4(a1, a2);
  *a3 = result;
  return result;
}

void sub_2311A9930(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_2311A993C()
{
  sub_2311B2A4C();
  return sub_231264C6C();
}

uint64_t sub_2311A9964()
{
  sub_2311B2A4C();
  return sub_231264C78();
}

uint64_t sub_2311A998C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2311A8948(a1, a2);
}

uint64_t sub_2311A99A0(_QWORD *a1)
{
  return sub_2311A8710(a1);
}

uint64_t sub_2311A99B4(uint64_t a1, uint64_t a2)
{
  return sub_2311A499C(a1, a2, (void (*)(_BYTE *))sub_2311A8440);
}

uint64_t sub_2311A99C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2311A49EC(a1, a2, a3, (void (*)(_BYTE *))sub_2311A8440);
}

uint64_t sub_2311A99D4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2311A9A10 + 4 * byte_231266C35[*v0]))(0x4379616C70736964, 0xEF79726F67657461);
}

uint64_t sub_2311A9A10()
{
  return 0x664F7265626D756ELL;
}

uint64_t sub_2311A9A34()
{
  return 0x614E64726F636572;
}

uint64_t sub_2311A9A54()
{
  return 0x4E7463656A627573;
}

uint64_t sub_2311A9A74()
{
  return 0x6164705565746164;
}

uint64_t sub_2311A9A94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2311B27A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2311A9AB8()
{
  sub_2311AEB8C();
  return sub_231264C6C();
}

uint64_t sub_2311A9AE0()
{
  sub_2311AEB8C();
  return sub_231264C78();
}

uint64_t sub_2311A9B08@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2311A90BC(a1, a2);
}

uint64_t sub_2311A9B1C(_QWORD *a1)
{
  return sub_2311A8E44(a1);
}

uint64_t sub_2311A9B30(uint64_t a1, uint64_t a2)
{
  return sub_2311A499C(a1, a2, (void (*)(_BYTE *))sub_2311A8CF0);
}

uint64_t sub_2311A9B40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2311A49EC(a1, a2, a3, (void (*)(_BYTE *))sub_2311A8CF0);
}

id sub_2311A9B50()
{
  void *v0;

  return objc_msgSend(v0, sel_hasLatestSupportedVersion);
}

id sub_2311A9B70(char a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setHasLatestSupportedVersion_, a1 & 1);
}

id (*sub_2311A9B84(uint64_t a1))(uint64_t a1)
{
  void *v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = objc_msgSend(v1, sel_hasLatestSupportedVersion);
  return sub_2311A9BC4;
}

id sub_2311A9BC4(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setHasLatestSupportedVersion_, *(unsigned __int8 *)(a1 + 8));
}

id sub_2311A9BDC()
{
  void *v0;

  return objc_msgSend(v0, sel_latestSupportedVersion);
}

id sub_2311A9BEC(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setLatestSupportedVersion_, a1);
}

id (*sub_2311A9C00(_QWORD *a1))(uint64_t a1)
{
  void *v1;

  a1[1] = v1;
  *a1 = objc_msgSend(v1, sel_latestSupportedVersion);
  return sub_2311A9C40;
}

id sub_2311A9C40(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 8), sel_setLatestSupportedVersion_, *(_QWORD *)a1);
}

id sub_2311A9C54()
{
  void *v0;

  return objc_msgSend(v0, sel_hasMinimumSupportedVersion);
}

id sub_2311A9C74(char a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setHasMinimumSupportedVersion_, a1 & 1);
}

id (*sub_2311A9C88(uint64_t a1))(uint64_t a1)
{
  void *v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = objc_msgSend(v1, sel_hasMinimumSupportedVersion);
  return sub_2311A9CC8;
}

id sub_2311A9CC8(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setHasMinimumSupportedVersion_, *(unsigned __int8 *)(a1 + 8));
}

id sub_2311A9CE0()
{
  void *v0;

  return objc_msgSend(v0, sel_minimumSupportedVersion);
}

id sub_2311A9CF0(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setMinimumSupportedVersion_, a1);
}

id (*sub_2311A9D04(_QWORD *a1))(uint64_t a1)
{
  void *v1;

  a1[1] = v1;
  *a1 = objc_msgSend(v1, sel_minimumSupportedVersion);
  return sub_2311A9D44;
}

id sub_2311A9D44(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 8), sel_setMinimumSupportedVersion_, *(_QWORD *)a1);
}

uint64_t *sub_2311A9D58(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23126292C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_231261E40();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_2311A9E1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_23126292C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 24);
  v6 = sub_231261E40();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_2311A9E84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23126292C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_231261E40();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  return a1;
}

uint64_t sub_2311A9F1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23126292C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_231261E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_2311A9FB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23126292C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_231261E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_2311AA038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23126292C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_231261E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_2311AA0C8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2311AA0D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_23126292C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_231261E40();
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_2311AA17C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2311AA188(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_23126292C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
      return result;
    }
    v10 = sub_231261E40();
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for SharedConceptComboFeedItemData(uint64_t a1)
{
  return sub_231187940(a1, qword_255EB87A8);
}

uint64_t sub_2311AA240()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23126292C();
  if (v1 <= 0x3F)
  {
    result = sub_231261E40();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_2311AA2D0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23126292C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    v9 = a3[7];
    v10 = a3[8];
    v11 = (uint64_t *)((char *)a1 + v9);
    v12 = (uint64_t *)((char *)a2 + v9);
    v13 = v12[1];
    *v11 = *v12;
    v11[1] = v13;
    v14 = (char *)a1 + v10;
    v15 = (char *)a2 + v10;
    v16 = sub_231261E40();
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17(v14, v15, v16);
  }
  return a1;
}

uint64_t sub_2311AA3C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_23126292C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 32);
  v6 = sub_231261E40();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_2311AA438(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23126292C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a3[8];
  v10 = (_QWORD *)(a1 + v8);
  v11 = (_QWORD *)(a2 + v8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = a1 + v9;
  v14 = a2 + v9;
  v15 = sub_231261E40();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16(v13, v14, v15);
  return a1;
}

uint64_t sub_2311AA4FC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_23126292C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = a3[7];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[8];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_231261E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t sub_2311AA5CC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_23126292C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_231261E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t sub_2311AA664(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_23126292C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_bridgeObjectRelease();
  v8 = a3[7];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v13 = a3[8];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_231261E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  return a1;
}

uint64_t sub_2311AA718()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2311AA724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_23126292C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_231261E40();
    v10 = a1 + *(int *)(a3 + 32);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_2311AA7CC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2311AA7D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_23126292C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return result;
    }
    v10 = sub_231261E40();
    v12 = a1 + *(int *)(a4 + 32);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for SharedNewRecordsAlertData(uint64_t a1)
{
  return sub_231187940(a1, qword_254151AA8);
}

uint64_t sub_2311AA890()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23126292C();
  if (v1 <= 0x3F)
  {
    result = sub_231261E40();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t destroy for SharedConceptFormattedRecord()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SharedConceptFormattedRecord(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SharedConceptFormattedRecord(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for SharedConceptFormattedRecord(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for SharedConceptFormattedRecord(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SharedConceptFormattedRecord(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SharedConceptFormattedRecord(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SharedConceptFormattedRecord()
{
  return &type metadata for SharedConceptFormattedRecord;
}

_QWORD *sub_2311AAC4C(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  char *v39;
  unsigned int (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  char *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v36 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_23126292C();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = a3[7];
    v15 = a3[8];
    v16 = (_QWORD *)((char *)v4 + v14);
    v17 = (_QWORD *)((char *)a2 + v14);
    v42 = v17[1];
    *v16 = *v17;
    v16[1] = v42;
    v18 = (_QWORD *)((char *)v4 + v15);
    v19 = (_QWORD *)((char *)a2 + v15);
    v41 = v19[1];
    *v18 = *v19;
    v18[1] = v41;
    v20 = a3[9];
    v21 = a3[10];
    v22 = (_QWORD *)((char *)v4 + v20);
    v23 = (_QWORD *)((char *)a2 + v20);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    *((_BYTE *)v4 + v21) = *((_BYTE *)a2 + v21);
    v25 = a3[11];
    v26 = a3[12];
    v27 = (char *)v4 + v25;
    v28 = (char *)a2 + v25;
    v29 = *((_QWORD *)v28 + 1);
    *(_QWORD *)v27 = *(_QWORD *)v28;
    *((_QWORD *)v27 + 1) = v29;
    v30 = *((_QWORD *)v28 + 3);
    *((_QWORD *)v27 + 2) = *((_QWORD *)v28 + 2);
    *((_QWORD *)v27 + 3) = v30;
    v31 = *((_QWORD *)v28 + 5);
    *((_QWORD *)v27 + 4) = *((_QWORD *)v28 + 4);
    *((_QWORD *)v27 + 5) = v31;
    v32 = *((_QWORD *)v28 + 7);
    *((_QWORD *)v27 + 6) = *((_QWORD *)v28 + 6);
    *((_QWORD *)v27 + 7) = v32;
    *((_OWORD *)v27 + 4) = *((_OWORD *)v28 + 4);
    *((_QWORD *)v27 + 10) = *((_QWORD *)v28 + 10);
    v33 = a3[13];
    __dst = (char *)v4 + v33;
    v39 = (char *)a2 + v33;
    *(_QWORD *)((char *)v4 + v26) = *(_QWORD *)((char *)a2 + v26);
    v34 = sub_231262464();
    v38 = *(_QWORD *)(v34 - 8);
    v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v40(v39, 1, v34))
    {
      sub_2311735E0(0, &qword_254152BE8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(__dst, v39, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(__dst, v39, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(__dst, 0, 1, v34);
    }
  }
  return v4;
}

uint64_t sub_2311AAEAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_23126292C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(a2 + 52);
  v7 = sub_231262464();
  v8 = *(_QWORD *)(v7 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  return result;
}

_QWORD *sub_2311AAFC8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  char *v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  char *__dst;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_23126292C();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v13 = a3[7];
  v14 = a3[8];
  v15 = (_QWORD *)((char *)a1 + v13);
  v16 = (_QWORD *)((char *)a2 + v13);
  v40 = v16[1];
  *v15 = *v16;
  v15[1] = v40;
  v17 = (_QWORD *)((char *)a1 + v14);
  v18 = (_QWORD *)((char *)a2 + v14);
  v39 = v18[1];
  *v17 = *v18;
  v17[1] = v39;
  v19 = a3[9];
  v20 = a3[10];
  v21 = (_QWORD *)((char *)a1 + v19);
  v22 = (_QWORD *)((char *)a2 + v19);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  *((_BYTE *)a1 + v20) = *((_BYTE *)a2 + v20);
  v24 = a3[11];
  v25 = a3[12];
  v26 = (char *)a1 + v24;
  v27 = (char *)a2 + v24;
  v28 = *((_QWORD *)v27 + 1);
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *((_QWORD *)v26 + 1) = v28;
  v29 = *((_QWORD *)v27 + 3);
  *((_QWORD *)v26 + 2) = *((_QWORD *)v27 + 2);
  *((_QWORD *)v26 + 3) = v29;
  v30 = *((_QWORD *)v27 + 5);
  *((_QWORD *)v26 + 4) = *((_QWORD *)v27 + 4);
  *((_QWORD *)v26 + 5) = v30;
  v31 = *((_QWORD *)v27 + 7);
  *((_QWORD *)v26 + 6) = *((_QWORD *)v27 + 6);
  *((_QWORD *)v26 + 7) = v31;
  *((_OWORD *)v26 + 4) = *((_OWORD *)v27 + 4);
  *((_QWORD *)v26 + 10) = *((_QWORD *)v27 + 10);
  v32 = a3[13];
  __dst = (char *)a1 + v32;
  v37 = (char *)a2 + v32;
  *(_QWORD *)((char *)a1 + v25) = *(_QWORD *)((char *)a2 + v25);
  v33 = sub_231262464();
  v36 = *(_QWORD *)(v33 - 8);
  v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v38(v37, 1, v33))
  {
    sub_2311735E0(0, &qword_254152BE8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(__dst, v37, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(__dst, v37, v33);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(__dst, 0, 1, v33);
  }
  return a1;
}

_QWORD *sub_2311AB1FC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  uint64_t v29;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23126292C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[7];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[8];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[9];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  v19 = a3[11];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  *(_QWORD *)((char *)a1 + v19) = *(_QWORD *)((char *)a2 + v19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20[1] = v21[1];
  v20[2] = v21[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20[3] = v21[3];
  v20[4] = v21[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20[5] = v21[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20[6] = v21[6];
  v20[7] = v21[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20[8] = v21[8];
  v20[9] = v21[9];
  v20[10] = v21[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = a3[13];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = sub_231262464();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  LODWORD(v20) = v27(v23, 1, v25);
  v28 = v27(v24, 1, v25);
  if (!(_DWORD)v20)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v25);
    goto LABEL_6;
  }
  if (v28)
  {
LABEL_6:
    sub_2311735E0(0, &qword_254152BE8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  return a1;
}

_OWORD *sub_2311AB4F4(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23126292C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v11) = *(_OWORD *)((char *)a2 + v11);
  v12 = a3[10];
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
  v13 = a3[11];
  v14 = a3[12];
  v15 = (char *)a1 + v13;
  v16 = (char *)a2 + v13;
  *((_QWORD *)v15 + 10) = *((_QWORD *)v16 + 10);
  v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  v18 = *((_OWORD *)v16 + 4);
  v20 = *((_OWORD *)v16 + 2);
  v19 = *((_OWORD *)v16 + 3);
  v21 = a3[13];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  *((_OWORD *)v15 + 3) = v19;
  *((_OWORD *)v15 + 4) = v18;
  *((_OWORD *)v15 + 2) = v20;
  *(_QWORD *)((char *)a1 + v14) = *(_QWORD *)((char *)a2 + v14);
  v24 = sub_231262464();
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    sub_2311735E0(0, &qword_254152BE8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  return a1;
}

_QWORD *sub_2311AB654(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(char *, uint64_t, uint64_t);
  int v40;
  uint64_t v41;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_23126292C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[7];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v22 = a3[9];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  v26 = *v24;
  v25 = v24[1];
  *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  v27 = a3[11];
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  v28 = (_QWORD *)((char *)a1 + v27);
  v29 = (_QWORD *)((char *)a2 + v27);
  *(_QWORD *)((char *)a1 + v27) = *(_QWORD *)((char *)a2 + v27);
  swift_bridgeObjectRelease();
  v30 = v29[2];
  v28[1] = v29[1];
  v28[2] = v30;
  swift_bridgeObjectRelease();
  v31 = v29[4];
  v28[3] = v29[3];
  v28[4] = v31;
  swift_bridgeObjectRelease();
  v28[5] = v29[5];
  swift_bridgeObjectRelease();
  v32 = v29[7];
  v28[6] = v29[6];
  v28[7] = v32;
  swift_bridgeObjectRelease();
  v28[8] = v29[8];
  v33 = v29[10];
  v28[9] = v29[9];
  v28[10] = v33;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
  swift_bridgeObjectRelease();
  v34 = a3[13];
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  v37 = sub_231262464();
  v38 = *(_QWORD *)(v37 - 8);
  v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
  LODWORD(v29) = v39(v35, 1, v37);
  v40 = v39(v36, 1, v37);
  if (!(_DWORD)v29)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 40))(v35, v36, v37);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v38 + 8))(v35, v37);
    goto LABEL_6;
  }
  if (v40)
  {
LABEL_6:
    sub_2311735E0(0, &qword_254152BE8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v35, v36, v37);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  return a1;
}

uint64_t sub_2311AB8A0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2311AB8AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23126292C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      sub_2311735E0(0, &qword_254152BE8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a3 + 52);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_2311AB964()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2311AB970(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_23126292C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      sub_2311735E0(0, &qword_254152BE8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a4 + 52);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for SharedConceptFeedItemData(uint64_t a1)
{
  return sub_231187940(a1, qword_254152198);
}

void sub_2311ABA38()
{
  unint64_t v0;
  unint64_t v1;

  sub_23126292C();
  if (v0 <= 0x3F)
  {
    sub_2311735E0(319, &qword_254152BE8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_2311ABB10()
{
  return sub_231172048(&qword_255EB87E8, type metadata accessor for SharedConceptFeedItemData, (uint64_t)&unk_231266E08);
}

unint64_t sub_2311ABB40()
{
  unint64_t result;

  result = qword_255EB87F0;
  if (!qword_255EB87F0)
  {
    result = MEMORY[0x2348D8544](&unk_231266EC0, &type metadata for SharedConceptFormattedRecord);
    atomic_store(result, (unint64_t *)&qword_255EB87F0);
  }
  return result;
}

uint64_t sub_2311ABB84()
{
  return sub_231172048(&qword_255EB87F8, type metadata accessor for SharedNewRecordsAlertData, (uint64_t)&unk_231266F78);
}

uint64_t sub_2311ABBB0()
{
  return sub_231172048(&qword_255EB8800, type metadata accessor for SharedConceptComboFeedItemData, (uint64_t)&unk_231267030);
}

unint64_t sub_2311ABBDC()
{
  unint64_t result;

  result = qword_255EB8810;
  if (!qword_255EB8810)
  {
    result = MEMORY[0x2348D8544](&unk_2312675A0, &type metadata for SharedConceptComboFeedItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB8810);
  }
  return result;
}

uint64_t sub_2311ABC20(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_2311B120C(255, (unint64_t *)&qword_254155690);
    v8 = a2;
    result = MEMORY[0x2348D8544](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

id sub_2311ABC8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  void *v5;
  void *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id result;
  void *v15;
  void *v16;
  unint64_t v17;
  void *v18;
  unint64_t v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = v5;
  v36 = a3;
  v37 = a4;
  v35 = a1;
  v9 = sub_231261E94();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BEE4AF8];
  v39 = MEMORY[0x24BEE4AF8];
  if ((uint64_t)objc_msgSend(v5, sel_valueWithRangesCount) >= 1)
  {
    result = objc_msgSend(v5, sel_valueWithRanges);
    if (!result)
    {
      __break(1u);
      goto LABEL_16;
    }
    v15 = result;
    v16 = (void *)MEMORY[0x24BDAC7A8](result);
    *(&v35 - 2) = (uint64_t)v6;
    v17 = sub_2311AF660(v16, (void (*)(_OWORD *))sub_2311B144C, (uint64_t)(&v35 - 4));

    sub_2312109A8(v17);
  }
  v38 = v13;
  if ((uint64_t)objc_msgSend(v6, sel_codesCount, v35, v36) < 1)
    goto LABEL_7;
  result = objc_msgSend(v6, sel_codes);
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18 = result;
  v19 = sub_2311AF94C(result);

  sub_231210820(v19);
LABEL_7:
  if (!objc_msgSend(v6, sel_hasUcumUnitString))
  {
    v21 = 0;
    v23 = 0xE000000000000000;
    goto LABEL_11;
  }
  result = objc_msgSend(v6, sel_ucumUnitString);
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v20 = result;
  v21 = sub_23126409C();
  v23 = v22;

LABEL_11:
  sub_231261E88();
  v24 = sub_231261E58();
  v26 = v25;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (!objc_msgSend(v6, sel_hasRecordUUID))
  {
LABEL_14:
    v29 = v38;
    v30 = v39;
    swift_bridgeObjectRetain();
    v31 = v37;
    swift_bridgeObjectRetain();
    result = objc_msgSend(v6, sel_dateData);
    v32 = v35;
    *a5 = v29;
    a5[1] = v32;
    v33 = v36;
    a5[2] = a2;
    a5[3] = v33;
    a5[4] = v31;
    a5[5] = v30;
    a5[6] = v21;
    a5[7] = v23;
    a5[8] = v34;
    a5[9] = v24;
    a5[10] = v26;
    return result;
  }
  swift_bridgeObjectRelease();
  result = objc_msgSend(v6, sel_recordUUID);
  if (result)
  {
    v27 = result;
    v24 = sub_23126409C();
    v26 = v28;

    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

id sub_2311ABF18@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  id result;
  void *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t v36;
  id v37;
  uint64_t v38[4];

  sub_2311789C4();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v36 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v36 - v11;
  sub_23117EC64(a1, (uint64_t)v38);
  sub_231178AD0(0, &qword_255EB89A0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v26 = type metadata accessor for SharedConceptCodedValue(0);
    return (id)(*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(a2, 1, 1, v26);
  }
  v13 = v37;
  v38[0] = MEMORY[0x24BEE4AF8];
  if ((uint64_t)objc_msgSend(v37, sel_codesCount) >= 1)
  {
    result = objc_msgSend(v13, sel_codes);
    if (!result)
    {
      __break(1u);
      return result;
    }
    v15 = result;
    v16 = sub_2311AF94C(result);

    sub_231210820(v16);
  }
  sub_231178A30(0, &qword_2541534C0, (unint64_t *)&qword_2541531A0);
  v18 = v17;
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v19(v12, 1, 1, v17);
  sub_2311AC264();
  if (v20)
  {
    sub_231178AD0(0, (unint64_t *)&qword_2541531A0);
    sub_231263FAC();
    sub_231178498((uint64_t)v12, (uint64_t (*)(_QWORD))sub_2311789C4);
    v19(v10, 0, 1, v18);
    sub_2311B1454((uint64_t)v10, (uint64_t)v12, (uint64_t (*)(_QWORD))sub_2311789C4);
  }
  if (objc_msgSend(v13, sel_hasValueTitle)
    && (v21 = objc_msgSend(v13, sel_valueTitle)) != 0)
  {
    v22 = v21;
    v23 = sub_23126409C();
    v25 = v24;

  }
  else
  {
    v23 = 0;
    v25 = 0;
  }
  v27 = v38[0];
  sub_231178454((uint64_t)v12, (uint64_t)v7, (uint64_t (*)(_QWORD))sub_2311789C4);
  v28 = objc_msgSend(v13, sel_textualValue);
  if (v28)
  {
    v29 = v28;
    v30 = sub_23126409C();
    v32 = v31;

  }
  else
  {

    v30 = 0;
    v32 = 0;
  }
  sub_231178498((uint64_t)v12, (uint64_t (*)(_QWORD))sub_2311789C4);
  *a2 = v27;
  v33 = (int *)type metadata accessor for SharedConceptCodedValue(0);
  sub_2311B1454((uint64_t)v7, (uint64_t)a2 + v33[5], (uint64_t (*)(_QWORD))sub_2311789C4);
  v34 = (_QWORD *)((char *)a2 + v33[6]);
  *v34 = v23;
  v34[1] = v25;
  v35 = (_QWORD *)((char *)a2 + v33[7]);
  *v35 = v30;
  v35[1] = v32;
  return (id)(*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, int *))(*((_QWORD *)v33 - 1) + 56))(a2, 0, 1, v33);
}

void sub_2311AC264()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  __objc2_prop_list **p_base_props;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  __objc2_prop_list **v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  id v40;

  if (!objc_msgSend(v0, sel_hasQuantityValue))
    return;
  v3 = objc_msgSend((id)objc_opt_self(), sel_UCUMSystem);
  v4 = objc_msgSend(v0, sel_quantityValue);
  if (!v4)
  {
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v5 = v4;
  p_base_props = &NewRecordsDataProvider.base_props;
  v1 = objc_msgSend(v4, sel_unitString);

  if (v1)
  {
    sub_23126409C();
    v8 = v7;

  }
  else
  {
    v8 = 0;
  }
  v9 = objc_msgSend(v0, sel_quantityValue);
  if (!v9)
    goto LABEL_31;
  v10 = v9;
  v11 = objc_msgSend(v9, sel_unitString);

  if (v11)
  {
    sub_23126409C();
    v13 = v12;

  }
  else
  {
    v13 = 0;
  }
  v1 = (id)sub_23126406C();
  if (v8)
  {
    v14 = (void *)sub_23126406C();
    swift_bridgeObjectRelease();
    if (v13)
    {
LABEL_13:
      v2 = (id)sub_23126406C();
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
  }
  else
  {
    v14 = 0;
    if (v13)
      goto LABEL_13;
  }
  v2 = 0;
LABEL_16:
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3CC8]), sel_initWithCodingSystem_codingVersion_code_displayString_, v3, v1, v14, v2);

  v16 = objc_msgSend(v0, sel_quantityValue);
  if (!v16)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v17 = v16;
  objc_msgSend(v16, sel_value);

  sub_2312642F4();
  v18 = v15;
  v19 = (void *)sub_23126406C();
  swift_bridgeObjectRelease();
  v20 = (void *)objc_opt_self();
  v21 = objc_msgSend(v20, sel_codedQuantityWithValue_unitCoding_, v19, v18);

  v22 = (void *)objc_opt_self();
  v23 = objc_msgSend(v22, sel_inspectableValueWithCodedQuantity_, v21);

  v24 = objc_msgSend((id)objc_opt_self(), sel_inspectableValueCollectionSingleWithValue_, v23);
  if (objc_msgSend(v0, sel_hasReferenceRangeMin))
  {
    v25 = objc_msgSend(v0, sel_referenceRangeMin);
    if (!v25)
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    v26 = v25;
    objc_msgSend(v25, sel_value);

    sub_2312642F4();
    v27 = v18;
    v28 = (void *)sub_23126406C();
    swift_bridgeObjectRelease();
    v29 = objc_msgSend(v20, sel_codedQuantityWithValue_unitCoding_, v28, v27);

    v2 = objc_msgSend(v22, sel_inspectableValueWithCodedQuantity_, v29);
    p_base_props = (__objc2_prop_list **)(&NewRecordsDataProvider + 64);
  }
  else
  {
    v2 = 0;
  }
  if (objc_msgSend(v0, sel_hasReferenceRangeMax))
  {
    v40 = v23;
    v30 = p_base_props;
    v31 = objc_msgSend(v0, sel_referenceRangeMax);
    if (!v31)
    {
LABEL_35:

      __break(1u);
      return;
    }
    v32 = v31;
    objc_msgSend(v31, sel_value);

    sub_2312642F4();
    v33 = v18;
    v34 = (void *)sub_23126406C();
    swift_bridgeObjectRelease();
    v35 = objc_msgSend(v20, sel_codedQuantityWithValue_unitCoding_, v34, v33);

    v1 = objc_msgSend(v22, sel_inspectableValueWithCodedQuantity_, v35);
    p_base_props = v30;
    v23 = v40;
  }
  else
  {
    v1 = 0;
  }
  v36 = objc_msgSend(v0, sel_quantityValue);
  if (!v36)
  {
LABEL_33:

    __break(1u);
    goto LABEL_34;
  }
  v37 = v36;
  v38 = objc_msgSend(v36, (SEL)p_base_props[303]);

  if (v38)
  {
    sub_23126409C();

    v39 = (void *)sub_23126406C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v39 = 0;
  }
  objc_msgSend((id)objc_opt_self(), sel_valueInRangeWithLow_high_currentValue_unit_, v2, v1, v24, v39);

}

id sub_2311AC804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  id result;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[32];
  id v36;

  sub_23117EC64(a1, (uint64_t)v35);
  sub_231178AD0(0, qword_255EB89B0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_231178A30(0, (unint64_t *)&qword_255EB8870, &qword_255EB8878);
    return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a2, 1, 1, v12);
  }
  v3 = v36;
  if (objc_msgSend(v36, sel_hasSystem))
  {
    result = objc_msgSend(v3, sel_system);
    if (!result)
    {
      __break(1u);
      goto LABEL_25;
    }
    v5 = result;
    v6 = sub_23126409C();
    v8 = v7;

    swift_bridgeObjectRelease();
    v9 = HIBYTE(v8) & 0xF;
    if ((v8 & 0x2000000000000000) == 0)
      v9 = v6 & 0xFFFFFFFFFFFFLL;
    if (v9)
    {
      result = objc_msgSend(v3, sel_system);
      if (result)
      {
        v10 = result;
        v11 = objc_msgSend((id)objc_opt_self(), sel_codeSystemWithIdentifier_, result);

        goto LABEL_11;
      }
LABEL_25:
      __break(1u);
      return result;
    }
  }
  v11 = 0;
LABEL_11:
  if (objc_msgSend(v3, sel_hasVersion)
    && (v13 = objc_msgSend(v3, sel_version)) != 0)
  {
    v14 = v13;
    v15 = sub_23126409C();
    v30 = v16;
    v32 = v15;

  }
  else
  {
    v30 = 0;
    v32 = 0;
  }
  v34 = a2;
  if (objc_msgSend(v3, sel_hasCode, v30, v32)
    && (v17 = objc_msgSend(v3, sel_code)) != 0)
  {
    v18 = v17;
    v19 = sub_23126409C();
    v21 = v20;

  }
  else
  {
    v19 = 0;
    v21 = 0;
  }
  if (objc_msgSend(v3, sel_hasDisplayName)
    && (v22 = objc_msgSend(v3, sel_displayName)) != 0)
  {
    v23 = v22;
    v24 = sub_23126409C();
    v26 = v25;

  }
  else
  {
    v24 = 0;
    v26 = 0;
  }
  v27 = objc_allocWithZone(MEMORY[0x24BDD3CC8]);
  v28 = v11;
  sub_2311AE15C(v11, v33, v31, v19, v21, v24, v26);
  sub_231178AD0(0, &qword_255EB8878);
  sub_231263FAC();

  sub_231178A30(0, (unint64_t *)&qword_255EB8870, &qword_255EB8878);
  return (id)(*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v34, 0, 1, v29);
}

uint64_t sub_2311ACB24(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_231264B58(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_231264B58() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_2311ACBE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void (*v19)(char *, uint64_t);
  BOOL v21;
  uint64_t v23;
  uint64_t v24;

  sub_231178A30(0, (unint64_t *)&qword_255EB8870, &qword_255EB8878);
  v5 = v4;
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v23 - v10;
  v12 = *(_QWORD *)(a1 + 16);
  if (v12 == *(_QWORD *)(a2 + 16))
  {
    if (!v12 || a1 == a2)
    {
      v18 = 1;
    }
    else
    {
      v13 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      v23 = *(_QWORD *)(v9 + 72);
      v24 = v9;
      v14 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
      v15 = v12 - 1;
      do
      {
        v16 = a1;
        v14(v11, a1 + v13, v5);
        v17 = a2;
        v14(v8, a2 + v13, v5);
        sub_2311B10DC(&qword_255EB88F8, &qword_255EB8900, MEMORY[0x24BEE5BE0], MEMORY[0x24BDD2070]);
        v18 = sub_231264060();
        v19 = *(void (**)(char *, uint64_t))(v24 + 8);
        v19(v8, v5);
        v19(v11, v5);
        v21 = v15-- != 0;
        if ((v18 & 1) == 0)
          break;
        v13 += v23;
        a2 = v17;
        a1 = v16;
      }
      while (v21);
    }
  }
  else
  {
    v18 = 0;
  }
  return v18 & 1;
}

uint64_t sub_2311ACD8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  void (*v43)(char *, unint64_t, uint64_t);
  char *v44;
  char v45;
  void (*v46)(char *, uint64_t);
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  char *v56;
  char v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;

  v80 = a2;
  v81 = a1;
  sub_231178A30(0, &qword_2541534C0, (unint64_t *)&qword_2541531A0);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v69 - v5;
  sub_2311789C4();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311B107C();
  v11 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231178A30(0, (unint64_t *)&qword_255EB8870, &qword_255EB8878);
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v69 - v20;
  v22 = type metadata accessor for SharedConceptCodedValue(0);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v29 = *(_QWORD *)(v81 + 16);
  if (v29 == *(_QWORD *)(v28 + 16))
  {
    v84 = v19;
    v85 = v21;
    v82 = (uint64_t)&v69 - v26;
    v83 = v27;
    v86 = v16;
    if (!v29 || v81 == v28)
      return 1;
    v73 = v11;
    v74 = v13;
    v70 = v6;
    v71 = v9;
    v75 = v4;
    v76 = v3;
    v30 = 0;
    v31 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    v78 = v81 + v31;
    v79 = (int *)v24;
    v80 = v28 + v31;
    v77 = *(_QWORD *)(v25 + 72);
    v32 = v85;
    v33 = v86;
    v35 = v82;
    v34 = v83;
    v72 = v29;
    while (1)
    {
      v81 = v30;
      v37 = v77 * v30;
      sub_231178454(v78 + v37, v35, type metadata accessor for SharedConceptCodedValue);
      sub_231178454(v80 + v37, v34, type metadata accessor for SharedConceptCodedValue);
      v38 = *(_QWORD *)v35;
      v39 = *(_QWORD *)v34;
      v40 = *(_QWORD *)(*(_QWORD *)v35 + 16);
      if (v40 != *(_QWORD *)(*(_QWORD *)v34 + 16))
        break;
      if (v40 && v38 != v39)
      {
        v41 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
        v42 = *(_QWORD *)(v33 + 72);
        v43 = *(void (**)(char *, unint64_t, uint64_t))(v33 + 16);
        do
        {
          v43(v32, v38 + v41, v15);
          v44 = v84;
          v43(v84, v39 + v41, v15);
          sub_2311B10DC(&qword_255EB88F8, &qword_255EB8900, MEMORY[0x24BEE5BE0], MEMORY[0x24BDD2070]);
          v45 = sub_231264060();
          v46 = *(void (**)(char *, uint64_t))(v86 + 8);
          v47 = v44;
          v32 = v85;
          v46(v47, v15);
          v46(v32, v15);
          v33 = v86;
          if ((v45 & 1) == 0)
            goto LABEL_34;
          v41 += v42;
        }
        while (--v40);
      }
      v48 = v79[5];
      v49 = v83 + v48;
      v50 = (uint64_t)v74;
      v51 = (uint64_t)&v74[*(int *)(v73 + 48)];
      sub_231178454(v82 + v48, (uint64_t)v74, (uint64_t (*)(_QWORD))sub_2311789C4);
      sub_231178454(v49, v51, (uint64_t (*)(_QWORD))sub_2311789C4);
      v53 = v75;
      v52 = v76;
      v54 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48);
      if (v54(v50, 1, v76) == 1)
      {
        if (v54(v51, 1, v52) != 1)
          goto LABEL_33;
        sub_231178498(v50, (uint64_t (*)(_QWORD))sub_2311789C4);
      }
      else
      {
        v55 = (uint64_t)v71;
        sub_231178454(v50, (uint64_t)v71, (uint64_t (*)(_QWORD))sub_2311789C4);
        if (v54(v51, 1, v52) == 1)
        {
          (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v55, v52);
LABEL_33:
          sub_231178498(v50, (uint64_t (*)(_QWORD))sub_2311B107C);
          break;
        }
        v56 = v70;
        (*(void (**)(char *, uint64_t, uint64_t))(v53 + 32))(v70, v51, v52);
        sub_2311B0FD4((unint64_t *)&qword_255EB8908, &qword_255EB8910, MEMORY[0x24BEE5BE0], MEMORY[0x24BDD2070]);
        v57 = sub_231264060();
        v58 = *(void (**)(char *, uint64_t))(v53 + 8);
        v58(v56, v52);
        v58((char *)v55, v52);
        sub_231178498(v50, (uint64_t (*)(_QWORD))sub_2311789C4);
        v33 = v86;
        if ((v57 & 1) == 0)
          break;
      }
      v59 = v79[6];
      v60 = (_QWORD *)(v82 + v59);
      v61 = *(_QWORD *)(v82 + v59 + 8);
      v62 = (_QWORD *)(v83 + v59);
      v63 = v62[1];
      if (v61)
      {
        if (!v63 || (*v60 != *v62 || v61 != v63) && (sub_231264B58() & 1) == 0)
          break;
      }
      else if (v63)
      {
        break;
      }
      v64 = v79[7];
      v65 = (_QWORD *)(v82 + v64);
      v66 = *(_QWORD *)(v82 + v64 + 8);
      v67 = (_QWORD *)(v83 + v64);
      v68 = v67[1];
      if (v66)
      {
        if (!v68 || (*v65 != *v67 || v66 != v68) && (sub_231264B58() & 1) == 0)
          break;
      }
      else if (v68)
      {
        break;
      }
      v30 = v81 + 1;
      v34 = v83;
      sub_231178498(v83, type metadata accessor for SharedConceptCodedValue);
      v35 = v82;
      sub_231178498(v82, type metadata accessor for SharedConceptCodedValue);
      result = 1;
      if (v30 == v72)
        return result;
    }
LABEL_34:
    sub_231178498(v83, type metadata accessor for SharedConceptCodedValue);
    sub_231178498(v82, type metadata accessor for SharedConceptCodedValue);
  }
  return 0;
}

uint64_t sub_2311AD338(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double *v29;
  double *v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  double v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(char *, uint64_t, uint64_t);
  char *v50;
  uint64_t result;
  char *v52;
  char *v53;
  char v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t (*v68)(char *, unint64_t, uint64_t);
  char *v69;
  char *v70;
  char v71;
  void (*v72)(char *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int (*v78)(uint64_t, uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char v82;
  void (*v83)(char *, uint64_t);
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int *v126;
  uint64_t v127;
  uint64_t *v128;
  uint64_t v129;
  uint64_t *v130;
  double v131;
  double v132;
  char *v133;
  char *v134;
  uint64_t v135;

  sub_231178A30(0, &qword_2541534C0, (unint64_t *)&qword_2541531A0);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v95 - v7;
  sub_2311789C4();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311B107C();
  v13 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = (int *)type metadata accessor for SharedConceptCodedValue(0);
  v16 = *((_QWORD *)v126 - 1);
  v17 = MEMORY[0x24BDAC7A8](v126);
  v130 = (uint64_t *)((char *)&v95 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v17);
  v128 = (uint64_t *)((char *)&v95 - v19);
  sub_231178A30(0, (unint64_t *)&qword_255EB8870, &qword_255EB8878);
  v21 = v20;
  v135 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v133 = (char *)&v95 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v134 = (char *)&v95 - v24;
  v25 = *(_QWORD *)(a1 + 16);
  if (v25 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v25 && a1 != a2)
  {
    v97 = v16;
    v26 = 0;
    v27 = a1 + 32;
    v28 = a2 + 32;
    v108 = v5;
    v107 = v6;
    v98 = v8;
    v99 = v11;
    v106 = v15;
    v105 = v13;
    v102 = v25;
    v101 = a1 + 32;
    v100 = a2 + 32;
    while (1)
    {
      v29 = (double *)(v27 + 88 * v26);
      v30 = (double *)(v28 + 88 * v26);
      v31 = *v30;
      v132 = *v29;
      v32 = *(_QWORD *)(*(_QWORD *)&v132 + 16);
      if (v32 != *(_QWORD *)(*(_QWORD *)&v31 + 16))
        return 0;
      v109 = v26;
      v33 = *((_QWORD *)v29 + 2);
      v129 = *((_QWORD *)v29 + 1);
      v34 = *((_QWORD *)v29 + 4);
      v115 = *((_QWORD *)v29 + 3);
      v35 = *((_QWORD *)v29 + 5);
      v113 = *((_QWORD *)v29 + 6);
      v36 = *((_QWORD *)v29 + 7);
      v37 = v29[8];
      v38 = *((_QWORD *)v29 + 10);
      v111 = *((_QWORD *)v29 + 9);
      v127 = *((_QWORD *)v30 + 1);
      v125 = *((_QWORD *)v30 + 2);
      v39 = *((_QWORD *)v30 + 4);
      v114 = *((_QWORD *)v30 + 3);
      v40 = *((_QWORD *)v30 + 5);
      v112 = *((_QWORD *)v30 + 6);
      v124 = *((_QWORD *)v30 + 7);
      v41 = v30[8];
      v43 = *((_QWORD *)v30 + 9);
      v42 = *((_QWORD *)v30 + 10);
      v110 = v43;
      v121 = v34;
      v122 = v42;
      v118 = v40;
      v119 = v39;
      v120 = v33;
      v131 = v31;
      v123 = v35;
      v117 = v36;
      v116 = v38;
      if (v32)
      {
        v104 = *(unsigned __int8 *)(v135 + 80);
        v44 = v132;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v45 = v131;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (*(_QWORD *)&v44 != *(_QWORD *)&v45)
        {
          v46 = (v104 + 32) & ~v104;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v47 = 0;
          v48 = *(_QWORD *)(v135 + 72);
          v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v135 + 16);
          while (1)
          {
            v50 = v134;
            result = v49(v134, *(_QWORD *)&v132 + v46, v21);
            if (v47 >= *(_QWORD *)(*(_QWORD *)&v45 + 16))
              break;
            v52 = v133;
            v49(v133, *(_QWORD *)&v45 + v46, v21);
            sub_2311B10DC(&qword_255EB88F8, &qword_255EB8900, MEMORY[0x24BEE5BE0], MEMORY[0x24BDD2070]);
            v53 = v50;
            v54 = sub_231264060();
            v55 = *(void (**)(char *, uint64_t))(v135 + 8);
            v55(v52, v21);
            v55(v53, v21);
            if ((v54 & 1) == 0)
              goto LABEL_69;
            ++v47;
            v46 += v48;
            v45 = v131;
            if (v32 == v47)
              goto LABEL_15;
          }
          __break(1u);
LABEL_72:
          __break(1u);
          goto LABEL_73;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_15:
      if ((v129 != v127 || v120 != v125) && (sub_231264B58() & 1) == 0
        || ((v56 = v118, v115 != v114) || v121 != v119) && (sub_231264B58() & 1) == 0
        || (v57 = *(_QWORD *)(v123 + 16), v57 != *(_QWORD *)(v56 + 16)))
      {
LABEL_69:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 0;
      }
      v58 = v128;
      if (v57 && v123 != v56)
      {
        v59 = 0;
        v60 = (*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80);
        v114 = v123 + v60;
        v103 = v56 + v60;
        v104 = *(_QWORD *)(v97 + 72);
        v96 = v57;
        while (1)
        {
          v61 = v104 * v59;
          result = sub_231178454(v114 + v104 * v59, (uint64_t)v58, type metadata accessor for SharedConceptCodedValue);
          if (v59 >= *(_QWORD *)(v56 + 16))
            break;
          v115 = v59;
          v62 = v103 + v61;
          v63 = v130;
          sub_231178454(v62, (uint64_t)v130, type metadata accessor for SharedConceptCodedValue);
          v64 = *v63;
          v129 = *v58;
          v65 = *(_QWORD *)(v129 + 16);
          if (v65 != *(_QWORD *)(v64 + 16))
            goto LABEL_68;
          if (v65 && v129 != v64)
          {
            v66 = 0;
            v67 = (*(unsigned __int8 *)(v135 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v135 + 80);
            v127 = *(_QWORD *)(v135 + 72);
            v68 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v135 + 16);
            do
            {
              v69 = v134;
              result = v68(v134, v129 + v67, v21);
              if (v66 >= *(_QWORD *)(v64 + 16))
                goto LABEL_72;
              v70 = v133;
              v68(v133, v64 + v67, v21);
              sub_2311B10DC(&qword_255EB88F8, &qword_255EB8900, MEMORY[0x24BEE5BE0], MEMORY[0x24BDD2070]);
              v71 = sub_231264060();
              v72 = *(void (**)(char *, uint64_t))(v135 + 8);
              v72(v70, v21);
              v72(v69, v21);
              if ((v71 & 1) == 0)
                goto LABEL_68;
              ++v66;
              v67 += v127;
            }
            while (v65 != v66);
          }
          v73 = v126[5];
          v74 = (uint64_t)v130 + v73;
          v75 = (uint64_t)v106;
          v76 = (uint64_t)&v106[*(int *)(v105 + 48)];
          sub_231178454((uint64_t)v128 + v73, (uint64_t)v106, (uint64_t (*)(_QWORD))sub_2311789C4);
          sub_231178454(v74, v76, (uint64_t (*)(_QWORD))sub_2311789C4);
          v77 = v107;
          v78 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v107 + 48);
          v79 = v108;
          if (v78(v75, 1, v108) == 1)
          {
            if (v78(v76, 1, v79) != 1)
              goto LABEL_67;
            sub_231178498(v75, (uint64_t (*)(_QWORD))sub_2311789C4);
          }
          else
          {
            v80 = (uint64_t)v99;
            sub_231178454(v75, (uint64_t)v99, (uint64_t (*)(_QWORD))sub_2311789C4);
            if (v78(v76, 1, v79) == 1)
            {
              (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v80, v79);
LABEL_67:
              sub_231178498(v75, (uint64_t (*)(_QWORD))sub_2311B107C);
LABEL_68:
              sub_231178498((uint64_t)v130, type metadata accessor for SharedConceptCodedValue);
              sub_231178498((uint64_t)v128, type metadata accessor for SharedConceptCodedValue);
              goto LABEL_69;
            }
            v81 = v98;
            (*(void (**)(char *, uint64_t, uint64_t))(v77 + 32))(v98, v76, v79);
            sub_2311B0FD4((unint64_t *)&qword_255EB8908, &qword_255EB8910, MEMORY[0x24BEE5BE0], MEMORY[0x24BDD2070]);
            v82 = sub_231264060();
            v83 = *(void (**)(char *, uint64_t))(v77 + 8);
            v83(v81, v79);
            v83((char *)v80, v79);
            sub_231178498(v75, (uint64_t (*)(_QWORD))sub_2311789C4);
            if ((v82 & 1) == 0)
              goto LABEL_68;
          }
          v84 = v126[6];
          v85 = (uint64_t *)((char *)v128 + v84);
          v86 = *(uint64_t *)((char *)v128 + v84 + 8);
          v87 = (uint64_t *)((char *)v130 + v84);
          v88 = v87[1];
          if (v86)
          {
            if (!v88 || (*v85 != *v87 || v86 != v88) && (sub_231264B58() & 1) == 0)
              goto LABEL_68;
          }
          else if (v88)
          {
            goto LABEL_68;
          }
          v89 = v126[7];
          v90 = (uint64_t *)((char *)v128 + v89);
          v91 = *(uint64_t *)((char *)v128 + v89 + 8);
          v92 = (uint64_t *)((char *)v130 + v89);
          v93 = v92[1];
          if (v91)
          {
            if (!v93 || (*v90 != *v92 || v91 != v93) && (sub_231264B58() & 1) == 0)
              goto LABEL_68;
          }
          else if (v93)
          {
            goto LABEL_68;
          }
          v59 = v115 + 1;
          sub_231178498((uint64_t)v130, type metadata accessor for SharedConceptCodedValue);
          v58 = v128;
          sub_231178498((uint64_t)v128, type metadata accessor for SharedConceptCodedValue);
          v56 = v118;
          if (v59 == v96)
            goto LABEL_53;
        }
LABEL_73:
        __break(1u);
        return result;
      }
LABEL_53:
      if ((v113 != v112 || v117 != v124) && (sub_231264B58() & 1) == 0 || v37 != v41)
        goto LABEL_69;
      if (v111 == v110 && v116 == v122)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v94 = sub_231264B58();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v94 & 1) == 0)
          return 0;
      }
      v26 = v109 + 1;
      result = 1;
      v27 = v101;
      v28 = v100;
      if (v109 + 1 == v102)
        return result;
    }
  }
  return 1;
}

uint64_t sub_2311ADFD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(char *, uint64_t);
  BOOL v20;
  uint64_t v22;
  uint64_t v23;

  v4 = sub_231262710();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v22 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v17 = 1;
    }
    else
    {
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v22 = *(_QWORD *)(v8 + 72);
      v23 = v8;
      v13 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      v14 = v11 - 1;
      do
      {
        v15 = a1;
        v13(v10, a1 + v12, v4);
        v16 = a2;
        v13(v7, a2 + v12, v4);
        sub_231172048(&qword_255EB8980, (uint64_t (*)(uint64_t))MEMORY[0x24BE48E48], MEMORY[0x24BE48E68]);
        v17 = sub_231264060();
        v18 = *(void (**)(char *, uint64_t))(v23 + 8);
        v18(v7, v4);
        v18(v10, v4);
        v20 = v14-- != 0;
        if ((v17 & 1) == 0)
          break;
        v12 += v22;
        a2 = v16;
        a1 = v15;
      }
      while (v20);
    }
  }
  else
  {
    v17 = 0;
  }
  return v17 & 1;
}

id sub_2311AE15C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v7;
  void *v11;
  void *v12;
  void *v13;
  id v14;

  if (a3)
  {
    v11 = (void *)sub_23126406C();
    swift_bridgeObjectRelease();
    if (a5)
      goto LABEL_3;
LABEL_6:
    v12 = 0;
    if (a7)
      goto LABEL_4;
LABEL_7:
    v13 = 0;
    goto LABEL_8;
  }
  v11 = 0;
  if (!a5)
    goto LABEL_6;
LABEL_3:
  v12 = (void *)sub_23126406C();
  swift_bridgeObjectRelease();
  if (!a7)
    goto LABEL_7;
LABEL_4:
  v13 = (void *)sub_23126406C();
  swift_bridgeObjectRelease();
LABEL_8:
  v14 = objc_msgSend(v7, sel_initWithCodingSystem_codingVersion_code_displayString_, a1, v11, v12, v13);

  return v14;
}

uint64_t sub_2311AE248(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_231178A30(0, &qword_2541534C0, (unint64_t *)&qword_2541531A0);
  v5 = v4;
  v40 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v34 = (char *)&v33 - v6;
  sub_2311789C4();
  MEMORY[0x24BDAC7A8](v7);
  v39 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231178A30(0, (unint64_t *)&qword_255EB8870, &qword_255EB8878);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v33 - v12;
  v42 = type metadata accessor for SharedConceptCodedValue(0);
  v14 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v16 = (uint64_t *)((char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = *(_QWORD *)(a2 + 16);
  result = sub_231264C0C();
  v38 = v17;
  if (v17)
  {
    v19 = 0;
    v37 = a2 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v20 = *(_QWORD *)(v14 + 72);
    v35 = v5;
    v36 = v20;
    v43 = v16;
    v46 = a1;
    do
    {
      v44 = v19;
      sub_231178454(v37 + v36 * v19, (uint64_t)v16, type metadata accessor for SharedConceptCodedValue);
      v21 = *v16;
      sub_231264C0C();
      v22 = *(_QWORD *)(v21 + 16);
      if (v22)
      {
        v23 = v21 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
        v41 = v21;
        swift_bridgeObjectRetain();
        v45 = *(_QWORD *)(v11 + 72);
        v24 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
        v25 = MEMORY[0x24BEE5BD8];
        v26 = v11;
        v27 = MEMORY[0x24BDD2068];
        do
        {
          v24(v13, v23, v10);
          sub_2311B10DC(&qword_255EB88D0, &qword_255EB88D8, v25, v27);
          sub_23126400C();
          (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v10);
          v23 += v45;
          --v22;
        }
        while (v22);
        swift_bridgeObjectRelease();
        v5 = v35;
        v16 = v43;
        v11 = v26;
      }
      v28 = v42;
      v29 = v39;
      sub_231178454((uint64_t)v16 + *(int *)(v42 + 20), v39, (uint64_t (*)(_QWORD))sub_2311789C4);
      v30 = v40;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v29, 1, v5) == 1)
      {
        sub_231264C18();
      }
      else
      {
        v31 = v34;
        (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v34, v29, v5);
        sub_231264C18();
        sub_2311B0FD4(&qword_255EB88E0, &qword_255EB88E8, MEMORY[0x24BEE5BD8], MEMORY[0x24BDD2068]);
        sub_23126400C();
        v32 = v31;
        v28 = v42;
        (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v5);
      }
      if (*(_QWORD *)((char *)v16 + *(int *)(v28 + 24) + 8))
      {
        sub_231264C18();
        swift_bridgeObjectRetain();
        v16 = v43;
        sub_231264114();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_231264C18();
      }
      if (*(_QWORD *)((char *)v16 + *(int *)(v28 + 28) + 8))
      {
        sub_231264C18();
        swift_bridgeObjectRetain();
        v16 = v43;
        sub_231264114();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_231264C18();
      }
      v19 = v44 + 1;
      result = sub_231178498((uint64_t)v16, type metadata accessor for SharedConceptCodedValue);
    }
    while (v19 != v38);
  }
  return result;
}

uint64_t sub_2311AE66C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  sub_231178A30(0, (unint64_t *)&qword_255EB8870, &qword_255EB8878);
  v30 = v4;
  v28 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v29 = (char *)&v28 - v5;
  v6 = *(_QWORD *)(a2 + 16);
  result = sub_231264C0C();
  v32 = v6;
  if (v6)
  {
    v8 = 0;
    v31 = a2 + 32;
    v45 = a1;
    do
    {
      v10 = (uint64_t *)(v31 + 88 * v8);
      v11 = *v10;
      v13 = v10[2];
      v12 = v10[3];
      v41 = v10[1];
      v42 = v12;
      v14 = v10[4];
      v15 = v10[5];
      v16 = v10[7];
      v17 = v10[8];
      v43 = v10[6];
      v44 = v17;
      v18 = v10[10];
      v40 = v10[9];
      sub_231264C0C();
      v19 = *(_QWORD *)(v11 + 16);
      if (v19)
      {
        v38 = v11;
        v39 = v8;
        v20 = v14;
        v21 = v28;
        v22 = v11 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
        swift_bridgeObjectRetain_n();
        v37 = v13;
        swift_bridgeObjectRetain();
        v35 = v20;
        swift_bridgeObjectRetain();
        v34 = v15;
        swift_bridgeObjectRetain();
        v33 = v16;
        swift_bridgeObjectRetain();
        v36 = v18;
        swift_bridgeObjectRetain();
        v23 = *(_QWORD *)(v21 + 72);
        v24 = MEMORY[0x24BEE5BD8];
        v26 = v29;
        v25 = v30;
        v27 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
        do
        {
          v27(v26, v22, v25);
          sub_2311B10DC(&qword_255EB88D0, &qword_255EB88D8, v24, MEMORY[0x24BDD2068]);
          sub_23126400C();
          (*(void (**)(char *, uint64_t))(v21 + 8))(v26, v25);
          v22 += v23;
          --v19;
        }
        while (v19);
        swift_bridgeObjectRelease();
        v8 = v39;
        a1 = v45;
        v9 = v34;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v9 = v15;
      }
      ++v8;
      swift_bridgeObjectRetain();
      sub_231264114();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_231264114();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2311AE248(a1, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_231264114();
      swift_bridgeObjectRelease();
      sub_231264C30();
      swift_bridgeObjectRetain();
      sub_231264114();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease_n();
    }
    while (v8 != v32);
  }
  return result;
}

uint64_t sub_2311AE99C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  BOOL v10;
  char v11;
  char v12;
  uint64_t v14;
  uint64_t v15;

  sub_23126292C();
  sub_231172048(&qword_255EB8838, (uint64_t (*)(uint64_t))MEMORY[0x24BE490F8], MEMORY[0x24BE49118]);
  sub_2312641D4();
  sub_2312641D4();
  if (v15 == v14
    && (v4 = type metadata accessor for SharedNewRecordsAlertData(0),
        *(_QWORD *)(a1 + *(int *)(v4 + 20)) == *(_QWORD *)(a2 + *(int *)(v4 + 20)))
    && (v5 = v4, (sub_2311ACB24(*(_QWORD **)(a1 + *(int *)(v4 + 24)), *(_QWORD **)(a2 + *(int *)(v4 + 24))) & 1) != 0))
  {
    v6 = *(int *)(v5 + 28);
    v7 = *(_QWORD *)(a1 + v6);
    v8 = *(_QWORD *)(a1 + v6 + 8);
    v9 = (_QWORD *)(a2 + v6);
    v10 = v7 == *v9 && v8 == v9[1];
    if (v10 || (v11 = sub_231264B58(), v12 = 0, (v11 & 1) != 0))
      v12 = sub_231261E1C();
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_2311AEAB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;

  sub_23126292C();
  sub_231172048(&qword_255EB8838, (uint64_t (*)(uint64_t))MEMORY[0x24BE490F8], MEMORY[0x24BE49118]);
  sub_2312641D4();
  sub_2312641D4();
  if (v8 == v7
    && (v4 = type metadata accessor for SharedConceptComboFeedItemData(0),
        (sub_2311ACB24(*(_QWORD **)(a1 + *(int *)(v4 + 20)), *(_QWORD **)(a2 + *(int *)(v4 + 20))) & 1) != 0))
  {
    v5 = sub_231261E1C();
  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

unint64_t sub_2311AEB8C()
{
  unint64_t result;

  result = qword_255EB8848;
  if (!qword_255EB8848)
  {
    result = MEMORY[0x2348D8544](&unk_231267550, &type metadata for SharedNewRecordsAlertData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB8848);
  }
  return result;
}

uint64_t sub_2311AEBD0(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  char v5;
  uint64_t result;
  BOOL v7;
  char v8;
  char v9;

  if ((sub_2311ACBE8(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0)
    return 0;
  v4 = *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8) && *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16);
  if (v4 || (v5 = sub_231264B58(), result = 0, (v5 & 1) != 0))
  {
    v7 = *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24) && *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32);
    if (v7 || (v8 = sub_231264B58(), result = 0, (v8 & 1) != 0))
    {
      if ((sub_2311ACD8C(*(_QWORD *)(a1 + 40), *(_QWORD *)(a2 + 40)) & 1) == 0)
        return 0;
      if (*(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48) && *(_QWORD *)(a1 + 56) == *(_QWORD *)(a2 + 56)
        || (v9 = sub_231264B58(), result = 0, (v9 & 1) != 0))
      {
        if (*(double *)(a1 + 64) == *(double *)(a2 + 64))
        {
          if (*(_QWORD *)(a1 + 72) == *(_QWORD *)(a2 + 72) && *(_QWORD *)(a1 + 80) == *(_QWORD *)(a2 + 80))
            return 1;
          else
            return sub_231264B58();
        }
        return 0;
      }
    }
  }
  return result;
}

BOOL sub_2311AECD0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _BOOL8 result;
  char v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  char v44;
  char *v45;
  __int128 v46;
  __int128 v47;
  char *v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int (*v57)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v58)(uint64_t);
  uint64_t (*v59)(uint64_t);
  uint64_t (*v60)(uint64_t);
  char v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _OWORD v69[5];
  uint64_t v70;
  _OWORD v71[5];
  uint64_t v72;

  v4 = sub_231262464();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311B13D4();
  v66 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, &qword_254152BE8, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v67 = (uint64_t)&v63 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v68 = (uint64_t)&v63 - v18;
  if (*a1 == *a2 && a1[1] == a2[1] || (v19 = sub_231264B58(), result = 0, (v19 & 1) != 0))
  {
    if (a1[2] == a2[2] && a1[3] == a2[3] || (v21 = sub_231264B58(), result = 0, (v21 & 1) != 0))
    {
      v65 = v15;
      v64 = v8;
      v22 = (int *)type metadata accessor for SharedConceptFeedItemData(0);
      sub_23126292C();
      sub_231172048(&qword_255EB8838, (uint64_t (*)(uint64_t))MEMORY[0x24BE490F8], MEMORY[0x24BE49118]);
      sub_2312641D4();
      sub_2312641D4();
      if (*(_QWORD *)&v71[0] != *(_QWORD *)&v69[0])
        return 0;
      v23 = v22[7];
      v24 = *(_QWORD *)((char *)a1 + v23);
      v25 = *(_QWORD *)((char *)a1 + v23 + 8);
      v26 = (_QWORD *)((char *)a2 + v23);
      v27 = v4;
      v28 = (uint64_t)v11;
      v29 = v6;
      v30 = v64;
      v31 = (uint64_t)v65;
      if (v24 == *v26 && v25 == v26[1] || (v32 = sub_231264B58(), result = 0, (v32 & 1) != 0))
      {
        v33 = v22[8];
        v34 = (_QWORD *)((char *)a1 + v33);
        v35 = *(_QWORD *)((char *)a1 + v33 + 8);
        v36 = (_QWORD *)((char *)a2 + v33);
        v37 = v36[1];
        if (v35)
        {
          if (!v37)
            return 0;
          if (*v34 != *v36 || v35 != v37)
          {
            v38 = sub_231264B58();
            result = 0;
            if ((v38 & 1) == 0)
              return result;
          }
        }
        else if (v37)
        {
          return 0;
        }
        v39 = v22[9];
        v40 = (_QWORD *)((char *)a1 + v39);
        v41 = *(_QWORD *)((char *)a1 + v39 + 8);
        v42 = (_QWORD *)((char *)a2 + v39);
        v43 = v42[1];
        if (v41)
        {
          if (!v43)
            return 0;
          if (*v40 != *v42 || v41 != v43)
          {
            v44 = sub_231264B58();
            result = 0;
            if ((v44 & 1) == 0)
              return result;
          }
        }
        else if (v43)
        {
          return 0;
        }
        if (*((unsigned __int8 *)a1 + v22[10]) != *((unsigned __int8 *)a2 + v22[10]))
          return 0;
        v45 = (char *)a1 + v22[11];
        v46 = *((_OWORD *)v45 + 3);
        v69[2] = *((_OWORD *)v45 + 2);
        v69[3] = v46;
        v69[4] = *((_OWORD *)v45 + 4);
        v70 = *((_QWORD *)v45 + 10);
        v47 = *((_OWORD *)v45 + 1);
        v69[0] = *(_OWORD *)v45;
        v69[1] = v47;
        v48 = (char *)a2 + v22[11];
        v49 = *((_OWORD *)v48 + 1);
        v71[0] = *(_OWORD *)v48;
        v71[1] = v49;
        v72 = *((_QWORD *)v48 + 10);
        v50 = *((_OWORD *)v48 + 4);
        v51 = *((_OWORD *)v48 + 2);
        v71[3] = *((_OWORD *)v48 + 3);
        v71[4] = v50;
        v71[2] = v51;
        if ((sub_2311AEBD0((uint64_t)v69, (uint64_t)v71) & 1) == 0
          || (sub_2311AD338(*(_QWORD *)((char *)a1 + v22[12]), *(_QWORD *)((char *)a2 + v22[12])) & 1) == 0)
        {
          return 0;
        }
        v52 = (uint64_t)a1 + v22[13];
        v53 = v68;
        sub_2311896A0(v52, v68);
        v54 = (uint64_t)a2 + v22[13];
        v55 = v67;
        sub_2311896A0(v54, v67);
        v56 = v28 + *(int *)(v66 + 48);
        sub_2311896A0(v53, v28);
        sub_2311896A0(v55, v56);
        v57 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
        if (v57(v28, 1, v27) == 1)
        {
          v58 = (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70];
          sub_231189628(v55, &qword_254152BE8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70]);
          sub_231189628(v53, &qword_254152BE8, v58);
          if (v57(v56, 1, v27) == 1)
          {
            sub_231189628(v28, &qword_254152BE8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70]);
            return 1;
          }
          goto LABEL_33;
        }
        sub_2311896A0(v28, v31);
        if (v57(v56, 1, v27) == 1)
        {
          v59 = (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70];
          sub_231189628(v55, &qword_254152BE8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70]);
          sub_231189628(v53, &qword_254152BE8, v59);
          (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v31, v27);
LABEL_33:
          sub_231178498(v28, (uint64_t (*)(_QWORD))sub_2311B13D4);
          return 0;
        }
        (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v30, v56, v27);
        v60 = (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70];
        sub_231172048(&qword_255EB8978, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], MEMORY[0x24BE47E90]);
        v61 = sub_231264060();
        v62 = *(void (**)(char *, uint64_t))(v29 + 8);
        v62(v30, v27);
        sub_231189628(v55, &qword_254152BE8, v60);
        sub_231189628(v53, &qword_254152BE8, v60);
        v62((char *)v31, v27);
        sub_231189628(v28, &qword_254152BE8, v60);
        return (v61 & 1) != 0;
      }
    }
  }
  return result;
}

uint64_t sub_2311AF28C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  char *v28;
  char v29;
  void (*v30)(char *, uint64_t);
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t *v36;
  _QWORD *v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t *v48;

  sub_231178A30(0, &qword_2541534C0, (unint64_t *)&qword_2541531A0);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v45 - v7;
  sub_2311B107C();
  v10 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311789C4();
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v45 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v45 - v20;
  if ((sub_2311ACBE8(*a1, *a2) & 1) == 0)
    return 0;
  v45 = v8;
  v22 = type metadata accessor for SharedConceptCodedValue(0);
  v23 = *(int *)(v22 + 20);
  v47 = a1;
  sub_231178454((uint64_t)a1 + v23, (uint64_t)v21, (uint64_t (*)(_QWORD))sub_2311789C4);
  v46 = v22;
  v24 = *(int *)(v22 + 20);
  v48 = a2;
  sub_231178454((uint64_t)a2 + v24, (uint64_t)v19, (uint64_t (*)(_QWORD))sub_2311789C4);
  v25 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_231178454((uint64_t)v21, (uint64_t)v12, (uint64_t (*)(_QWORD))sub_2311789C4);
  sub_231178454((uint64_t)v19, v25, (uint64_t (*)(_QWORD))sub_2311789C4);
  v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v26((uint64_t)v12, 1, v5) == 1)
  {
    sub_231178498((uint64_t)v19, (uint64_t (*)(_QWORD))sub_2311789C4);
    sub_231178498((uint64_t)v21, (uint64_t (*)(_QWORD))sub_2311789C4);
    if (v26(v25, 1, v5) == 1)
    {
      sub_231178498((uint64_t)v12, (uint64_t (*)(_QWORD))sub_2311789C4);
      goto LABEL_11;
    }
LABEL_7:
    sub_231178498((uint64_t)v12, (uint64_t (*)(_QWORD))sub_2311B107C);
    return 0;
  }
  sub_231178454((uint64_t)v12, (uint64_t)v16, (uint64_t (*)(_QWORD))sub_2311789C4);
  if (v26(v25, 1, v5) == 1)
  {
    sub_231178498((uint64_t)v19, (uint64_t (*)(_QWORD))sub_2311789C4);
    sub_231178498((uint64_t)v21, (uint64_t (*)(_QWORD))sub_2311789C4);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v16, v5);
    goto LABEL_7;
  }
  v28 = v45;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v45, v25, v5);
  sub_2311B0FD4((unint64_t *)&qword_255EB8908, &qword_255EB8910, MEMORY[0x24BEE5BE0], MEMORY[0x24BDD2070]);
  v29 = sub_231264060();
  v30 = *(void (**)(char *, uint64_t))(v6 + 8);
  v30(v28, v5);
  sub_231178498((uint64_t)v19, (uint64_t (*)(_QWORD))sub_2311789C4);
  sub_231178498((uint64_t)v21, (uint64_t (*)(_QWORD))sub_2311789C4);
  v30(v16, v5);
  sub_231178498((uint64_t)v12, (uint64_t (*)(_QWORD))sub_2311789C4);
  if ((v29 & 1) == 0)
    return 0;
LABEL_11:
  v32 = v46;
  v31 = v47;
  v33 = *(int *)(v46 + 24);
  v34 = (uint64_t *)((char *)v47 + v33);
  v35 = *(uint64_t *)((char *)v47 + v33 + 8);
  v36 = v48;
  v37 = (uint64_t *)((char *)v48 + v33);
  v38 = v37[1];
  if (!v35)
  {
    if (!v38)
      goto LABEL_18;
    return 0;
  }
  if (!v38)
    return 0;
  if (*v34 == *v37 && v35 == v38 || (v39 = sub_231264B58(), result = 0, (v39 & 1) != 0))
  {
LABEL_18:
    v40 = *(int *)(v32 + 28);
    v41 = (uint64_t *)((char *)v31 + v40);
    v42 = *(uint64_t *)((char *)v31 + v40 + 8);
    v43 = (uint64_t *)((char *)v36 + v40);
    v44 = v43[1];
    if (v42)
    {
      if (v44 && (*v41 == *v43 && v42 == v44 || (sub_231264B58() & 1) != 0))
        return 1;
    }
    else if (!v44)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_2311AF660(void *a1, void (*a2)(_OWORD *), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  char *v14;
  id v15;
  unint64_t v16;
  _OWORD *v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_OWORD *);
  _OWORD v28[2];
  __int128 v29;
  uint64_t v30;
  uint64_t v31;

  v31 = a3;
  v27 = a2;
  sub_2311735E0(0, &qword_255EB8998, type metadata accessor for SharedConceptCodedValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v23 - v5;
  v26 = type metadata accessor for SharedConceptCodedValue(0);
  v7 = *(_QWORD *)(v26 - 8);
  v8 = MEMORY[0x24BDAC7A8](v26);
  v25 = (uint64_t)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v24 = (uint64_t)&v23 - v10;
  v11 = sub_231261D5C();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCD520];
  v23 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1;
  sub_231264648();

  sub_231172048(&qword_255EB8990, v12, MEMORY[0x24BDCD530]);
  sub_231264744();
  if (v30)
  {
    v16 = MEMORY[0x24BEE4AF8];
    do
    {
      v17 = sub_23119C444(&v29, v28);
      v18 = (void *)MEMORY[0x2348D810C](v17);
      v27(v28);
      objc_autoreleasePoolPop(v18);
      sub_231173434((uint64_t)v28);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, v26) == 1)
      {
        sub_231189628((uint64_t)v6, &qword_255EB8998, type metadata accessor for SharedConceptCodedValue);
      }
      else
      {
        v19 = v24;
        sub_2311B1454((uint64_t)v6, v24, type metadata accessor for SharedConceptCodedValue);
        sub_2311B1454(v19, v25, type metadata accessor for SharedConceptCodedValue);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v16 = sub_2311DC8C0(0, *(_QWORD *)(v16 + 16) + 1, 1, v16);
        v21 = *(_QWORD *)(v16 + 16);
        v20 = *(_QWORD *)(v16 + 24);
        if (v21 >= v20 >> 1)
          v16 = sub_2311DC8C0(v20 > 1, v21 + 1, 1, v16);
        *(_QWORD *)(v16 + 16) = v21 + 1;
        sub_2311B1454(v25, v16+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v21, type metadata accessor for SharedConceptCodedValue);
      }
      sub_231264744();
    }
    while (v30);
  }
  else
  {
    v16 = MEMORY[0x24BEE4AF8];
  }
  (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v11);
  return v16;
}

unint64_t sub_2311AF94C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  char *v14;
  id v15;
  unint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  char *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  _OWORD v27[2];
  __int128 v28;
  uint64_t v29;

  sub_2311B1498(0, &qword_255EB89A8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v22 - v3;
  sub_231178A30(0, (unint64_t *)&qword_255EB8870, &qword_255EB8878);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v26 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v25 = (char *)&v22 - v10;
  v11 = sub_231261D5C();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCD520];
  v23 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1;
  sub_231264648();

  sub_231172048(&qword_255EB8990, v12, MEMORY[0x24BDCD530]);
  sub_231264744();
  if (v29)
  {
    v16 = MEMORY[0x24BEE4AF8];
    v24 = v11;
    do
    {
      sub_23119C444(&v28, v27);
      sub_2311AC804((uint64_t)v27, (uint64_t)v4);
      sub_231173434((uint64_t)v27);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
      {
        sub_2311B1508((uint64_t)v4);
      }
      else
      {
        v17 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
        v18 = v25;
        v17(v25, v4, v6);
        v17(v26, v18, v6);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v16 = sub_2311DC8AC(0, *(_QWORD *)(v16 + 16) + 1, 1, v16);
        v20 = *(_QWORD *)(v16 + 16);
        v19 = *(_QWORD *)(v16 + 24);
        if (v20 >= v19 >> 1)
          v16 = sub_2311DC8AC(v19 > 1, v20 + 1, 1, v16);
        *(_QWORD *)(v16 + 16) = v20 + 1;
        v17((char *)(v16+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v20), v26, v6);
        v11 = v24;
      }
      sub_231264744();
    }
    while (v29);
  }
  else
  {
    v16 = MEMORY[0x24BEE4AF8];
  }
  (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v11);
  return v16;
}

_QWORD *sub_2311AFC44(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  char *v12;
  void *v13;
  _QWORD *result;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  char v36[32];
  _OWORD v37[2];
  __int128 v38;
  uint64_t v39;
  _OWORD v40[5];
  uint64_t v41;
  void *v42;

  v4 = sub_231261D5C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCD520];
  v32 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1;
  sub_231264648();

  v9 = sub_231172048(&qword_255EB8990, v5, MEMORY[0x24BDCD530]);
  sub_231264744();
  if (!v39)
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_14:
    (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v4);
    return v10;
  }
  v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v42 = a2;
  v34 = v9;
  v33 = MEMORY[0x24BEE4AD8] + 8;
  while (1)
  {
    sub_23119C444(&v38, v37);
    sub_23117EC64((uint64_t)v37, (uint64_t)v36);
    sub_231178AD0(0, &qword_255EB8478);
    if (!swift_dynamicCast())
    {
      sub_231173434((uint64_t)v37);
      goto LABEL_4;
    }
    v11 = v10;
    v12 = v7;
    v13 = v35;
    result = objc_msgSend(a2, sel_conceptIdentifier);
    if (!result)
      break;
    v15 = result;
    v16 = v4;
    v17 = sub_23126409C();
    v19 = v18;

    result = objc_msgSend(a2, sel_preferredName);
    if (!result)
      goto LABEL_16;
    v20 = result;
    v21 = sub_23126409C();
    v23 = v22;

    sub_2311ABC8C(v17, v19, v21, v23, v40);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_231173434((uint64_t)v37);
    v10 = v11;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_2311DC8D4(0, v11[2] + 1, 1, v11);
    v4 = v16;
    v7 = v12;
    v25 = v10[2];
    v24 = v10[3];
    if (v25 >= v24 >> 1)
      v10 = sub_2311DC8D4((_QWORD *)(v24 > 1), v25 + 1, 1, v10);
    v10[2] = v25 + 1;
    v26 = &v10[11 * v25];
    v27 = v40[1];
    *((_OWORD *)v26 + 2) = v40[0];
    *((_OWORD *)v26 + 3) = v27;
    v28 = v40[2];
    v29 = v40[3];
    v30 = v40[4];
    v26[14] = v41;
    *((_OWORD *)v26 + 5) = v29;
    *((_OWORD *)v26 + 6) = v30;
    *((_OWORD *)v26 + 4) = v28;
    a2 = v42;
LABEL_4:
    sub_231264744();
    if (!v39)
      goto LABEL_14;
  }
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_2311AFF68(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000013 && a2 == 0x800000023126C530 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736D657469 && a2 == 0xE500000000000000 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_231264B58();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_2311B00A0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C626172616873 && a2 == 0xEF64496C65646F4DLL;
  if (v2 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023126C550 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023126C530 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023126C590 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x64656E6E69507369 && a2 == 0xE800000000000000 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x655274736574616CLL && a2 == 0xEC00000064726F63 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6465646465626D65 && a2 == 0xEF7364726F636552 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_231264B58();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t sub_2311B0504(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73676E69646F63 && a2 == 0xE700000000000000;
  if (v2 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023126C550 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023126C570 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C61566465646F63 && a2 == 0xEB00000000736575 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74696E556D756375 && a2 == 0xEE00676E69727453 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6174614465746164 && a2 == 0xE800000000000000 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x555564726F636572 && a2 == 0xEA00000000004449)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_231264B58();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_2311B0824@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  char v47;
  uint64_t v48;

  sub_2311A53DC(0, &qword_255EB8858, (uint64_t (*)(void))sub_2311B0D74, (uint64_t)&type metadata for SharedConceptFormattedRecord.CodingKeys, MEMORY[0x24BEE33E0]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v39 - v8;
  v10 = a1[3];
  v46 = a1;
  sub_231173410(a1, v10);
  sub_2311B0D74();
  sub_231264C54();
  if (v2)
    return sub_231173434((uint64_t)v46);
  v11 = v7;
  v45 = a2;
  sub_2311B1498(0, &qword_255EB8868, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  v47 = 0;
  sub_2311B0E64(&qword_255EB8880, &qword_255EB8888, MEMORY[0x24BDD2078], MEMORY[0x24BEE12D0]);
  v12 = v6;
  sub_231264A80();
  v13 = v48;
  LOBYTE(v48) = 1;
  swift_bridgeObjectRetain();
  v14 = sub_231264A50();
  v16 = v15;
  v17 = v14;
  LOBYTE(v48) = 2;
  swift_bridgeObjectRetain();
  v19 = v16;
  v18 = sub_231264A50();
  v21 = v20;
  v44 = v18;
  v22 = v19;
  sub_2311735E0(0, &qword_255EB8890, type metadata accessor for SharedConceptCodedValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  v47 = 3;
  sub_2311B0DCC(&qword_255EB8898, &qword_255EB88A0, (uint64_t)&unk_2312674D8, MEMORY[0x24BEE12D0]);
  swift_bridgeObjectRetain();
  sub_231264A80();
  v41 = v17;
  v43 = v21;
  v23 = v48;
  LOBYTE(v48) = 4;
  swift_bridgeObjectRetain();
  v42 = 0;
  v24 = sub_231264A50();
  v26 = v25;
  v40 = v24;
  LOBYTE(v48) = 5;
  swift_bridgeObjectRetain();
  sub_231264A68();
  v28 = v27;
  LOBYTE(v48) = 6;
  v29 = sub_231264A50();
  v31 = v30;
  v32 = *(void (**)(char *, uint64_t))(v11 + 8);
  v33 = v29;
  v32(v9, v12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v34 = v43;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_231173434((uint64_t)v46);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v36 = v45;
  v37 = v41;
  *v45 = v13;
  v36[1] = v37;
  v38 = v44;
  v36[2] = v22;
  v36[3] = v38;
  v36[4] = v34;
  v36[5] = v23;
  v36[6] = v40;
  v36[7] = v26;
  v36[8] = v28;
  v36[9] = v33;
  v36[10] = v31;
  return result;
}

unint64_t sub_2311B0D74()
{
  unint64_t result;

  result = qword_255EB8860;
  if (!qword_255EB8860)
  {
    result = MEMORY[0x2348D8544](&unk_231267500, &type metadata for SharedConceptFormattedRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB8860);
  }
  return result;
}

uint64_t type metadata accessor for SharedConceptCodedValue(uint64_t a1)
{
  return sub_231187940(a1, qword_255EB8A10);
}

uint64_t sub_2311B0DCC(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    sub_2311735E0(255, &qword_255EB8890, type metadata accessor for SharedConceptCodedValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v10 = v9;
    v11 = sub_231172048(a2, type metadata accessor for SharedConceptCodedValue, a3);
    result = MEMORY[0x2348D8544](a4, v10, &v11);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2311B0E64(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    sub_2311B1498(255, &qword_255EB8868, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v10 = v9;
    v11 = sub_2311B0EEC(a2, a3);
    result = MEMORY[0x2348D8544](a4, v10, &v11);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2311B0EEC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_231178A30(255, (unint64_t *)&qword_255EB8870, &qword_255EB8878);
    result = MEMORY[0x2348D8544](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2311B0F44(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2311B0F6C(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_231178AD0(255, a2);
    result = MEMORY[0x2348D8544](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2311B0FAC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2311B0FD4(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    sub_231178A30(255, &qword_2541534C0, (unint64_t *)&qword_2541531A0);
    v10 = v9;
    v11 = sub_2311B0F6C(a2, (unint64_t *)&qword_2541531A0, 0x24BDD3C88, a3);
    result = MEMORY[0x2348D8544](a4, v10, &v11);
    atomic_store(result, a1);
  }
  return result;
}

void sub_2311B107C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255EB88F0)
  {
    sub_2311789C4();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255EB88F0);
  }
}

uint64_t sub_2311B10DC(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    sub_231178A30(255, (unint64_t *)&qword_255EB8870, &qword_255EB8878);
    v10 = v9;
    v11 = sub_2311B0F6C(a2, &qword_255EB8878, 0x24BDD3CC8, a3);
    result = MEMORY[0x2348D8544](a4, v10, &v11);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2311B1184()
{
  unint64_t result;

  result = qword_255EB8920;
  if (!qword_255EB8920)
  {
    result = MEMORY[0x2348D8544](&unk_231267460, &type metadata for SharedConceptFeedItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB8920);
  }
  return result;
}

unint64_t sub_2311B11C8()
{
  unint64_t result;

  result = qword_255EB8928;
  if (!qword_255EB8928)
  {
    result = MEMORY[0x2348D8544](&unk_231266F50, &type metadata for SharedConceptFormattedRecord);
    atomic_store(result, (unint64_t *)&qword_255EB8928);
  }
  return result;
}

void sub_2311B120C(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_231264270();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_2311B1250(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_2311B120C(255, (unint64_t *)&qword_255EB8930);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x2348D8544](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2311B12C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2311735E0(0, &qword_254152BE8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2311B1320()
{
  unint64_t result;

  result = qword_255EB8950;
  if (!qword_255EB8950)
  {
    result = MEMORY[0x2348D8544](&unk_231266F28, &type metadata for SharedConceptFormattedRecord);
    atomic_store(result, (unint64_t *)&qword_255EB8950);
  }
  return result;
}

uint64_t sub_2311B1364(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_2311B13D4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255EB8970)
  {
    sub_2311735E0(255, &qword_254152BE8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47E70], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255EB8970);
  }
}

id sub_2311B144C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_2311ABF18(a1, a2);
}

uint64_t sub_2311B1454(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_2311B1498(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_231178A30(255, (unint64_t *)&qword_255EB8870, &qword_255EB8878);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_2311B1508(uint64_t a1)
{
  uint64_t v2;

  sub_2311B1498(0, &qword_255EB89A8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t getEnumTagSinglePayload for SharedConceptFeedItemData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SharedConceptFeedItemData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_2311B1630 + 4 * byte_231266C3F[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_2311B1664 + 4 * byte_231266C3A[v4]))();
}

uint64_t sub_2311B1664(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2311B166C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2311B1674);
  return result;
}

uint64_t sub_2311B1680(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2311B1688);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_2311B168C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2311B1694(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SharedConceptFeedItemData.CodingKeys()
{
  return &type metadata for SharedConceptFeedItemData.CodingKeys;
}

uint64_t getEnumTagSinglePayload for SharedConceptFormattedRecord.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SharedConceptFormattedRecord.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_2311B178C + 4 * byte_231266C49[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_2311B17C0 + 4 * byte_231266C44[v4]))();
}

uint64_t sub_2311B17C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2311B17C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2311B17D0);
  return result;
}

uint64_t sub_2311B17DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2311B17E4);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_2311B17E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2311B17F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SharedConceptFormattedRecord.CodingKeys()
{
  return &type metadata for SharedConceptFormattedRecord.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for SharedNewRecordsAlertData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2311B1858 + 4 * byte_231266C53[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2311B188C + 4 * byte_231266C4E[v4]))();
}

uint64_t sub_2311B188C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2311B1894(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2311B189CLL);
  return result;
}

uint64_t sub_2311B18A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2311B18B0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2311B18B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2311B18BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SharedNewRecordsAlertData.CodingKeys()
{
  return &type metadata for SharedNewRecordsAlertData.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for SharedConceptComboFeedItemData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2311B1924 + 4 * byte_231266C5D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2311B1958 + 4 * byte_231266C58[v4]))();
}

uint64_t sub_2311B1958(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2311B1960(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2311B1968);
  return result;
}

uint64_t sub_2311B1974(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2311B197CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2311B1980(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2311B1988(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SharedConceptComboFeedItemData.CodingKeys()
{
  return &type metadata for SharedConceptComboFeedItemData.CodingKeys;
}

uint64_t *sub_2311B19A4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_231178A30(0, &qword_2541534C0, (unint64_t *)&qword_2541531A0);
    v12 = v11;
    v13 = *(_QWORD *)(v11 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    if (v14(v10, 1, v12))
    {
      sub_2311789C4();
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v9, v10, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
    }
    v16 = a3[6];
    v17 = a3[7];
    v18 = (uint64_t *)((char *)v7 + v16);
    v19 = (uint64_t *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = (uint64_t *)((char *)v7 + v17);
    v22 = (uint64_t *)((char *)a2 + v17);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_2311B1AEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  sub_231178A30(0, &qword_2541534C0, (unint64_t *)&qword_2541531A0);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_2311B1B98(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  sub_231178A30(0, &qword_2541534C0, (unint64_t *)&qword_2541531A0);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v8, 1, v10))
  {
    sub_2311789C4();
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v7, v8, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
  }
  v14 = a3[6];
  v15 = a3[7];
  v16 = (_QWORD *)((char *)a1 + v14);
  v17 = (_QWORD *)((char *)a2 + v14);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = (_QWORD *)((char *)a1 + v15);
  v20 = (_QWORD *)((char *)a2 + v15);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_2311B1CB8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  sub_231178A30(0, &qword_2541534C0, (unint64_t *)&qword_2541531A0);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v7, 1, v9);
  v14 = v12(v8, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v7, v8, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_2311789C4();
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v7, v8, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
LABEL_7:
  v16 = a3[6];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a3[7];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_2311B1E4C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  sub_231178A30(0, &qword_2541534C0, (unint64_t *)&qword_2541531A0);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v9))
  {
    sub_2311789C4();
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v7, v8, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
  }
  v13 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  return a1;
}

_QWORD *sub_2311B1F40(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  sub_231178A30(0, &qword_2541534C0, (unint64_t *)&qword_2541531A0);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v7, 1, v9);
  v14 = v12(v8, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v7, v8, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_2311789C4();
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v7, v8, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
LABEL_7:
  v16 = a3[6];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v21 = a3[7];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2311B20AC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2311B20B8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_2311789C4();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_2311B2134()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2311B2140(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    sub_2311789C4();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_2311B21B4()
{
  unint64_t v0;

  sub_2311789C4();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_2311B2238()
{
  return sub_231172048(&qword_255EB8A50, type metadata accessor for SharedConceptCodedValue, (uint64_t)&unk_231267118);
}

unint64_t sub_2311B2268()
{
  unint64_t result;

  result = qword_255EB8A58;
  if (!qword_255EB8A58)
  {
    result = MEMORY[0x2348D8544](&unk_231267210, &type metadata for SharedConceptComboFeedItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB8A58);
  }
  return result;
}

unint64_t sub_2311B22B0()
{
  unint64_t result;

  result = qword_255EB8A60;
  if (!qword_255EB8A60)
  {
    result = MEMORY[0x2348D8544](&unk_2312672C8, &type metadata for SharedNewRecordsAlertData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB8A60);
  }
  return result;
}

unint64_t sub_2311B22F8()
{
  unint64_t result;

  result = qword_255EB8A68;
  if (!qword_255EB8A68)
  {
    result = MEMORY[0x2348D8544](&unk_231267380, &type metadata for SharedConceptFormattedRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB8A68);
  }
  return result;
}

unint64_t sub_2311B2340()
{
  unint64_t result;

  result = qword_255EB8A70;
  if (!qword_255EB8A70)
  {
    result = MEMORY[0x2348D8544](&unk_231267438, &type metadata for SharedConceptFeedItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB8A70);
  }
  return result;
}

unint64_t sub_2311B2388()
{
  unint64_t result;

  result = qword_255EB8A78;
  if (!qword_255EB8A78)
  {
    result = MEMORY[0x2348D8544](&unk_2312673A8, &type metadata for SharedConceptFeedItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB8A78);
  }
  return result;
}

unint64_t sub_2311B23D0()
{
  unint64_t result;

  result = qword_255EB8A80;
  if (!qword_255EB8A80)
  {
    result = MEMORY[0x2348D8544](&unk_2312673D0, &type metadata for SharedConceptFeedItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB8A80);
  }
  return result;
}

unint64_t sub_2311B2418()
{
  unint64_t result;

  result = qword_255EB8A88;
  if (!qword_255EB8A88)
  {
    result = MEMORY[0x2348D8544](&unk_2312672F0, &type metadata for SharedConceptFormattedRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB8A88);
  }
  return result;
}

unint64_t sub_2311B2460()
{
  unint64_t result;

  result = qword_255EB8A90;
  if (!qword_255EB8A90)
  {
    result = MEMORY[0x2348D8544](&unk_231267318, &type metadata for SharedConceptFormattedRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB8A90);
  }
  return result;
}

unint64_t sub_2311B24A8()
{
  unint64_t result;

  result = qword_255EB8A98;
  if (!qword_255EB8A98)
  {
    result = MEMORY[0x2348D8544](&unk_231267238, &type metadata for SharedNewRecordsAlertData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB8A98);
  }
  return result;
}

unint64_t sub_2311B24F0()
{
  unint64_t result;

  result = qword_255EB8AA0;
  if (!qword_255EB8AA0)
  {
    result = MEMORY[0x2348D8544](&unk_231267260, &type metadata for SharedNewRecordsAlertData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB8AA0);
  }
  return result;
}

unint64_t sub_2311B2538()
{
  unint64_t result;

  result = qword_255EB8AA8;
  if (!qword_255EB8AA8)
  {
    result = MEMORY[0x2348D8544](&unk_231267180, &type metadata for SharedConceptComboFeedItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB8AA8);
  }
  return result;
}

unint64_t sub_2311B2580()
{
  unint64_t result;

  result = qword_255EB8AB0;
  if (!qword_255EB8AB0)
  {
    result = MEMORY[0x2348D8544](&unk_2312671A8, &type metadata for SharedConceptComboFeedItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB8AB0);
  }
  return result;
}

uint64_t sub_2311B25C4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x646F436465786F62 && a2 == 0xEC00000073676E69;
  if (v2 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023126C5B0 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000023126C5D0 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x566C617574786574 && a2 == 0xEC00000065756C61)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_231264B58();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_2311B27A0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4379616C70736964 && a2 == 0xEF79726F67657461;
  if (v2 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x664F7265626D756ELL && a2 == 0xEF7364726F636552 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x614E64726F636572 && a2 == 0xEB0000000073656DLL || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4E7463656A627573 && a2 == 0xEB00000000656D61 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6164705565746164 && a2 == 0xEB00000000646574)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_231264B58();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

unint64_t sub_2311B2A4C()
{
  unint64_t result;

  result = qword_255EB8AC0;
  if (!qword_255EB8AC0)
  {
    result = MEMORY[0x2348D8544](&unk_2312676A8, &type metadata for SharedConceptCodedValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB8AC0);
  }
  return result;
}

uint64_t sub_2311B2A90(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_231178A30(255, &qword_2541534C0, (unint64_t *)&qword_2541531A0);
    result = MEMORY[0x2348D8544](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SharedConceptCodedValue.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SharedConceptCodedValue.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2311B2BC4 + 4 * byte_231266C67[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2311B2BF8 + 4 * byte_231266C62[v4]))();
}

uint64_t sub_2311B2BF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2311B2C00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2311B2C08);
  return result;
}

uint64_t sub_2311B2C14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2311B2C1CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2311B2C20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2311B2C28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SharedConceptCodedValue.CodingKeys()
{
  return &type metadata for SharedConceptCodedValue.CodingKeys;
}

unint64_t sub_2311B2C48()
{
  unint64_t result;

  result = qword_255EB8AE0;
  if (!qword_255EB8AE0)
  {
    result = MEMORY[0x2348D8544](&unk_231267680, &type metadata for SharedConceptCodedValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB8AE0);
  }
  return result;
}

unint64_t sub_2311B2C90()
{
  unint64_t result;

  result = qword_255EB8AE8;
  if (!qword_255EB8AE8)
  {
    result = MEMORY[0x2348D8544](&unk_2312675F0, &type metadata for SharedConceptCodedValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB8AE8);
  }
  return result;
}

unint64_t sub_2311B2CD8()
{
  unint64_t result;

  result = qword_255EB8AF0;
  if (!qword_255EB8AF0)
  {
    result = MEMORY[0x2348D8544](&unk_231267618, &type metadata for SharedConceptCodedValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB8AF0);
  }
  return result;
}

uint64_t sub_2311B2D1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  BOOL v14;
  BOOL v15;
  int v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v1 = sub_231261E94();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2312627B8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v0, v5);
  v9 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v8, v5);
  if (v9 == *MEMORY[0x24BE48E88])
  {
    (*(void (**)(char *, uint64_t))(v6 + 96))(v8, v5);
    v20 = sub_2312627AC();
    v21 = v10;
    v11 = sub_2312641B0();
    v12 = sub_23126292C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v8, v12);
  }
  else
  {
    v13 = v9;
    if (v9 == *MEMORY[0x24BE48F10])
    {
      (*(void (**)(char *, uint64_t))(v6 + 96))(v8, v5);
      sub_2311B3310();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v8, v1);
      v20 = 0x2D746E756F636361;
      v21 = 0xE800000000000000;
      sub_231261E58();
      sub_231264144();
      swift_bridgeObjectRelease();
      sub_231264144();
      v11 = v20;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      return v11;
    }
    v14 = v9 == *MEMORY[0x24BE48F00] || v9 == *MEMORY[0x24BE48ED8];
    if (v14
      || v9 == *MEMORY[0x24BE48E78]
      || v9 == *MEMORY[0x24BE48E98]
      || (v9 != *MEMORY[0x24BE48E80] ? (v15 = v9 == *MEMORY[0x24BE48EC8]) : (v15 = 1), v15))
    {
      v18 = sub_2312627AC();
    }
    else
    {
      v17 = *MEMORY[0x24BE48ED0];
      v18 = sub_2312627AC();
      if (v13 != v17)
      {
        v20 = v18;
        v21 = v19;
        v11 = sub_2312641B0();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        return v11;
      }
    }
    v20 = v18;
    v21 = v19;
    return sub_2312641B0();
  }
  return v11;
}

uint64_t sub_2311B3000(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v19[2];
  unint64_t v20;
  unint64_t v21;

  v19[1] = a1;
  v1 = sub_231261E94();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2312626E0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311B32C8(0, (unint64_t *)&qword_2541557B0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE3598]);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_231265570;
  v10 = (void *)sub_231261FF0();
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BE48E10], v5);
  v19[0] = sub_2312626C8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v10)
  {
    v20 = 0x656C69666F72505BLL;
    v21 = 0xE90000000000003ALL;
    v11 = v10;
    v12 = objc_msgSend(v11, sel_identifier);
    sub_231261E7C();

    sub_231261E58();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    sub_231264144();
    swift_bridgeObjectRelease();
    sub_231264144();

    v13 = v20;
    v14 = v21;
  }
  else
  {
    v13 = 0xD000000000000013;
    v14 = 0x800000023126B610;
  }
  v20 = v13;
  v21 = v14;
  sub_231264144();
  swift_bridgeObjectRelease();

  v15 = v21;
  *(_QWORD *)(v9 + 32) = v20;
  *(_QWORD *)(v9 + 40) = v15;
  v20 = 0;
  v21 = 0xE000000000000000;
  sub_2312648C4();
  swift_bridgeObjectRelease();
  v20 = 0xD000000000000010;
  v21 = 0x800000023126C5F0;
  sub_2311B2D1C();
  sub_231264144();
  swift_bridgeObjectRelease();
  sub_231264144();
  v16 = v21;
  *(_QWORD *)(v9 + 48) = v20;
  *(_QWORD *)(v9 + 56) = v16;
  v20 = v9;
  sub_2311B32C8(0, (unint64_t *)&qword_254155690, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE1250]);
  sub_231171E78();
  v17 = sub_231264024();
  swift_bridgeObjectRelease();
  return v17;
}

void sub_2311B32C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, _QWORD))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, MEMORY[0x24BEE0D00]);
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_2311B3310()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255EB8AF8)
  {
    sub_231261E94();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255EB8AF8);
  }
}

uint64_t sub_2311B3378()
{
  uint64_t v0;

  sub_231173434(v0 + 16);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FeedItemContextChangeGenerator()
{
  return objc_opt_self();
}

uint64_t sub_2311B33C4()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AddAccountDataProvider()
{
  return objc_opt_self();
}

uint64_t *sub_2311B3408(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_231261E94();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_2311B34DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_231261E94();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

_QWORD *sub_2311B3540(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_231261E94();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_2311B35E8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_231261E94();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_2311B36A8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_231261E94();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

_QWORD *sub_2311B3720(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_231261E94();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2311B37B8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2311B37C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_231261E94();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_2311B3840()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2311B384C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_231261E94();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for NewRecordsFeedItemViewData()
{
  uint64_t result;

  result = qword_255EB8B58;
  if (!qword_255EB8B58)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2311B38FC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_231261E94();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2311B3984(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_2311B730C(0, &qword_255EB8BB0, MEMORY[0x24BEE3520]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = &v9[-v6];
  sub_231173410(a1, a1[3]);
  sub_2311B7270();
  sub_231264C60();
  v9[15] = 0;
  sub_2311735E0(0, &qword_2541534B8, (uint64_t (*)(uint64_t))sub_2311B6CDC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  sub_2311B72B4(&qword_2541534A8, MEMORY[0x24BDD2060]);
  sub_231264AF8();
  if (!v1)
  {
    type metadata accessor for RecordKindGeneratorData(0);
    v9[14] = 1;
    sub_231261E40();
    sub_231172048(&qword_2541518F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_231264AF8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_2311B3B20@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;

  v24 = a2;
  v27 = sub_231261E40();
  v23 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v26 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, &qword_2541534B8, (uint64_t (*)(uint64_t))sub_2311B6CDC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  v29 = v5;
  v25 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v28 = (char *)&v19 - v6;
  sub_2311B730C(0, &qword_255EB8BC0, MEMORY[0x24BEE33E0]);
  v30 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v19 - v9;
  v11 = type metadata accessor for RecordKindGeneratorData(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231173410(a1, a1[3]);
  sub_2311B7270();
  sub_231264C54();
  if (v2)
    return sub_231173434((uint64_t)a1);
  v20 = v11;
  v21 = a1;
  v22 = v8;
  v15 = v25;
  v14 = v26;
  v16 = v27;
  v32 = 0;
  sub_2311B72B4(&qword_2541534B0, MEMORY[0x24BDD2078]);
  v17 = v28;
  sub_231264A80();
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v13, v17, v29);
  v31 = 1;
  sub_231172048(&qword_2541518F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  sub_231264A80();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v30);
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(&v13[*(int *)(v20 + 20)], v14, v16);
  sub_231178454((uint64_t)v13, v24, type metadata accessor for RecordKindGeneratorData);
  sub_231173434((uint64_t)v21);
  return sub_231178498((uint64_t)v13, type metadata accessor for RecordKindGeneratorData);
}

BOOL sub_2311B3E38(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_2311B3E50()
{
  _BYTE *v0;

  if (*v0)
    return 0x446E75527473616CLL;
  else
    return 0xD000000000000015;
}

uint64_t sub_2311B3E98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2311B75A8(a1, a2);
  *a3 = result;
  return result;
}

void sub_2311B3EBC(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_2311B3EC8()
{
  sub_2311B7270();
  return sub_231264C6C();
}

uint64_t sub_2311B3EF0()
{
  sub_2311B7270();
  return sub_231264C78();
}

uint64_t sub_2311B3F18@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2311B3B20(a1, a2);
}

uint64_t sub_2311B3F2C(_QWORD *a1)
{
  return sub_2311B3984(a1);
}

_QWORD *sub_2311B3F40(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  v19 = *v1;
  v17 = sub_2312621DC();
  v4 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_2312621F4();
  v7 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231178454(a1, (uint64_t)v1 + OBJC_IVAR____TtC13HealthRecords19RecordKindGenerator_context, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
  v16 = sub_231262230();
  sub_2311735E0(0, &qword_254155718, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v10 = sub_231261FA8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_231265AC0;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v11 + 104))(v13 + v12, *MEMORY[0x24BE47460], v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BE47910], v17);
  sub_2312621E8();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))((uint64_t)v2 + OBJC_IVAR____TtC13HealthRecords19RecordKindGenerator_domain, v9, v18);
  v14 = sub_2311B4124(a1);
  sub_231178498(a1, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
  v2[2] = v14;
  return v2;
}

uint64_t sub_2311B4124(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  void *v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v42[2];
  void *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  __int128 v59;
  uint64_t v60;

  v2 = sub_23126226C();
  v51 = *(_QWORD *)(v2 - 8);
  v52 = v2;
  v3 = *(_QWORD *)(v51 + 64);
  MEMORY[0x24BDAC7A8](v2);
  v50 = (char *)v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311B6688();
  v48 = v4;
  v55 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v54 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_231261E94();
  v46 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v45 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2312626E0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23126220C();
  sub_231173410(&v59, v60);
  sub_231262194();
  sub_231262D58();
  swift_allocObject();
  v49 = sub_231262D4C();
  sub_231173434((uint64_t)&v59);
  sub_231261C78();
  swift_allocObject();
  v56 = sub_231261C6C();
  sub_23126220C();
  v12 = *MEMORY[0x24BE48DC0];
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v47 = v8;
  v13(v11, v12, v8);
  v14 = (void *)sub_231262230();
  v15 = (void *)sub_231261FF0();
  v16 = sub_2312626C8();
  if (v15)
  {
    v57 = 0x656C69666F72505BLL;
    v58 = 0xE90000000000003ALL;
    v42[1] = v16;
    v17 = v15;
    v44 = v11;
    v18 = v6;
    v19 = v17;
    v20 = objc_msgSend(v17, sel_identifier);
    v43 = v14;
    v21 = v20;
    v22 = v45;
    sub_231261E7C();

    sub_231261E58();
    v23 = v18;
    v11 = v44;
    (*(void (**)(char *, uint64_t))(v46 + 8))(v22, v23);
    sub_231264144();
    v14 = v43;
    swift_bridgeObjectRelease();
    sub_231264144();

    v24 = v57;
    v25 = v58;
  }
  else
  {
    v25 = 0x800000023126B610;
    v24 = 0xD000000000000013;
  }
  v57 = v24;
  v58 = v25;
  sub_231264144();

  swift_bridgeObjectRelease();
  v26 = v57;
  v27 = v58;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v47);
  type metadata accessor for FeedItemContextChangeGenerator();
  v28 = swift_allocObject();
  sub_2311789AC(&v59, v28 + 16);
  *(_QWORD *)(v28 + 56) = v26;
  *(_QWORD *)(v28 + 64) = v27;
  v30 = v50;
  v29 = v51;
  v31 = v52;
  (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v50, a1, v52);
  v32 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v33 = (v3 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
  v34 = (v33 + 15) & 0xFFFFFFFFFFFFFFF8;
  v35 = swift_allocObject();
  v36 = v56;
  *(_QWORD *)(v35 + 16) = v49;
  *(_QWORD *)(v35 + 24) = v36;
  (*(void (**)(unint64_t, char *, uint64_t))(v29 + 32))(v35 + v32, v30, v31);
  *(_QWORD *)(v35 + v33) = v28;
  v37 = v53;
  *(_QWORD *)(v35 + v34) = v53;
  *(_QWORD *)(v35 + ((v34 + 15) & 0xFFFFFFFFFFFFFFF8)) = v37;
  sub_2311B6700();
  sub_231172048(&qword_2541555C8, (uint64_t (*)(uint64_t))sub_2311B6700, MEMORY[0x24BDB9E58]);
  swift_retain();
  swift_retain();
  swift_retain();
  v38 = v54;
  sub_231263DD8();
  sub_231172048(&qword_2541555D8, (uint64_t (*)(uint64_t))sub_2311B6688, MEMORY[0x24BDB9E90]);
  v39 = v48;
  v40 = sub_231263E38();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v38, v39);
  return v40;
}

uint64_t sub_2311B45D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;

  v21 = a5;
  v22 = a6;
  v20 = a4;
  v23 = a7;
  v10 = sub_23126226C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, v10);
  v14 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v15 = (v12 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = (v15 + 15) & 0xFFFFFFFFFFFFFFF8;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a1;
  *(_QWORD *)(v17 + 24) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v17 + v14, v13, v10);
  v18 = v21;
  *(_QWORD *)(v17 + v15) = v20;
  *(_QWORD *)(v17 + v16) = v18;
  *(_QWORD *)(v17 + ((v16 + 15) & 0xFFFFFFFFFFFFFFF8)) = v22;
  sub_2311B6700();
  swift_allocObject();
  swift_retain();
  swift_retain();
  swift_retain();
  result = sub_231263DB4();
  *v23 = result;
  return result;
}

uint64_t sub_2311B472C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (**v23)(uint64_t, char);
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v27 = a7;
  v28 = a8;
  v25[1] = a2;
  v26 = a6;
  v29 = a3;
  v12 = sub_23126226C();
  v13 = *(_QWORD *)(v12 - 8);
  v25[0] = v12;
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a5, v12);
  v17 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v18 = (v14 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = a4;
  (*(void (**)(unint64_t, char *, _QWORD))(v13 + 32))(v21 + v17, v15, v25[0]);
  v22 = v27;
  *(_QWORD *)(v21 + v18) = v26;
  *(_QWORD *)(v21 + v19) = v22;
  v23 = (uint64_t (**)(uint64_t, char))(v21 + v20);
  *v23 = sub_2311B6974;
  v23[1] = (uint64_t (*)(uint64_t, char))v16;
  *(_QWORD *)(v21 + ((v20 + 23) & 0xFFFFFFFFFFFFFFF8)) = v28;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_231262D40();
  swift_release();
  return swift_release();
}

void sub_2311B48B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(unint64_t, _QWORD), uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void **v39;
  uint64_t (*v40)(_QWORD);
  void *v41;
  id v42;
  id v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  id v48;
  id v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  int64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  uint64_t v60;
  int64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t, uint64_t);
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t);
  char *v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  void (*v86)(char *, char *, uint64_t);
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  void (*v95)(char *, uint64_t);
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  char *v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int isUniquelyReferenced_nonNull_native;
  int64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v118;
  BOOL v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  _QWORD *v124;
  void *v125;
  char *v126;
  void *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  int v132;
  char *v133;
  unint64_t v134;
  unint64_t v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  void (*v152)(unint64_t, _QWORD);
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  int64_t v160;
  unint64_t v161;
  unint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  char *v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  uint64_t v174;
  char *v175;
  char *v176;
  char *v177;
  uint64_t v178;
  void (*v179)(char *, char *, uint64_t);
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;

  v148 = a8;
  v151 = a7;
  v152 = a6;
  v150 = a4;
  v149 = a3;
  v147 = a2;
  sub_2311735E0(0, &qword_254152BD8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47570], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v9);
  v146 = (uint64_t)&v141 - v10;
  v144 = sub_231261FE4();
  v145 = *(_QWORD *)(v144 - 8);
  MEMORY[0x24BDAC7A8](v144);
  v143 = (char *)&v141 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = sub_231263B5C();
  v154 = *(_QWORD *)(v155 - 8);
  v12 = MEMORY[0x24BDAC7A8](v155);
  v153 = (char *)&v141 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v141 - v14;
  v178 = sub_231262ADC();
  v183 = *(_QWORD *)(v178 - 8);
  v16 = MEMORY[0x24BDAC7A8](v178);
  v176 = (char *)&v141 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v177 = (char *)&v141 - v18;
  v19 = type metadata accessor for RecordKindFeedItemData();
  v181 = *(_QWORD *)(v19 - 8);
  v182 = v19;
  v20 = MEMORY[0x24BDAC7A8](v19);
  v175 = (char *)&v141 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v158 = (char *)&v141 - v22;
  sub_2311B6ADC();
  v167 = v23;
  v24 = MEMORY[0x24BDAC7A8](v23);
  v166 = (char *)&v141 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v141 - v27;
  v29 = MEMORY[0x24BDAC7A8](v26);
  v165 = (char *)&v141 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v164 = (char *)&v141 - v31;
  v32 = sub_231262E60();
  v33 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v35 = (char *)&v141 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311B6B64();
  v37 = v36;
  MEMORY[0x24BDAC7A8](v36);
  v39 = (void **)((char *)&v141 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_231178454(a1, (uint64_t)v39, v40);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v41 = *v39;
    sub_231263B08();
    v42 = v41;
    v43 = v41;
    v44 = sub_231263B50();
    v45 = sub_2312643D8();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc();
      v47 = swift_slowAlloc();
      v187 = v47;
      *(_DWORD *)v46 = 136446210;
      v186 = (uint64_t)v41;
      v48 = v41;
      sub_2311889D8();
      sub_231264B88();
      v49 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_2312647B0();
      swift_unknownObjectRelease();
      v50 = sub_2312640CC();
      v186 = sub_2311CBDE4(v50, v51, &v187);
      sub_231264750();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23116F000, v44, v45, "Error fetching record kinds: %{public}s", v46, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348D85EC](v47, -1, -1);
      MEMORY[0x2348D85EC](v46, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v154 + 8))(v15, v155);
    v185 = 0;
    goto LABEL_63;
  }
  (*(void (**)(char *, void **, uint64_t))(v33 + 32))(v35, v39, v32);
  v52 = sub_231262E48();
  v53 = *(_QWORD *)(v52 + 16);
  v142 = v35;
  if (v53)
  {
    v186 = MEMORY[0x24BEE4AF8];
    v54 = &v186;
    sub_23119931C(0, v53, 0);
    v56 = sub_2311B6C24(v52);
    v57 = 0;
    v58 = v52 + 64;
    v59 = *(_BYTE *)(v52 + 32);
    v159 = v55;
    v168 = v52 + 80;
    v60 = 1;
    v163 = v32;
    v157 = v33;
    v156 = v28;
    v162 = v52;
    v160 = v53;
    v161 = v52 + 64;
    do
    {
      if (v56 < 0 || v56 >= 1 << v59)
      {
        __break(1u);
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
LABEL_79:
        __break(1u);
LABEL_80:
        __break(1u);
LABEL_81:
        __break(1u);
LABEL_82:
        __break(1u);
LABEL_83:
        __break(1u);
LABEL_84:
        __break(1u);
        goto LABEL_85;
      }
      if ((*(_QWORD *)(v58 + 8 * ((unint64_t)v56 >> 6)) & (1 << v56)) == 0)
        goto LABEL_76;
      if (*(_DWORD *)(v52 + 36) != (_DWORD)v55)
        goto LABEL_77;
      v172 = 1 << v56;
      v173 = (unint64_t)v56 >> 6;
      v171 = v55;
      v170 = v57;
      v62 = v167;
      v63 = *(int *)(v167 + 48);
      v64 = *(_QWORD *)(v52 + 48);
      v65 = sub_23126292C();
      v37 = *(char **)(v65 - 8);
      v66 = v64 + *((_QWORD *)v37 + 9) * v56;
      v67 = v56;
      v68 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v37 + 2);
      v69 = (uint64_t)v28;
      v70 = v164;
      v68(v164, v66, v65);
      v71 = *(_QWORD *)(v52 + 56);
      v174 = v67;
      v72 = *(_QWORD *)(v71 + 8 * v67);
      *(_QWORD *)&v70[v63] = v72;
      v73 = (uint64_t)v165;
      v68(v165, (uint64_t)v70, v65);
      *(_QWORD *)(v73 + *(int *)(v62 + 48)) = v72;
      sub_2311B1454(v73, v69, (uint64_t (*)(_QWORD))sub_2311B6ADC);
      swift_bridgeObjectRetain_n();
      v74 = (uint64_t)v70;
      v28 = (char *)v69;
      sub_231178498(v74, (uint64_t (*)(_QWORD))sub_2311B6ADC);
      v75 = *(int *)(v62 + 48);
      v76 = v166;
      v68(v166, v69, v65);
      v77 = *(_QWORD *)(v69 + v75);
      *(_QWORD *)&v76[v75] = v77;
      v78 = (void (*)(char *, uint64_t))*((_QWORD *)v37 + 1);
      swift_bridgeObjectRetain();
      v78(v76, v65);
      v79 = *(char **)(v77 + 16);
      if (v79)
      {
        v187 = MEMORY[0x24BEE4AF8];
        sub_231199338(0, (int64_t)v79, 0);
        v80 = (*(unsigned __int8 *)(v183 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v183 + 80);
        v169 = v77;
        v81 = v77 + v80;
        v82 = *(_QWORD *)(v183 + 72);
        v179 = *(void (**)(char *, char *, uint64_t))(v183 + 16);
        v180 = v82;
        v83 = (uint64_t)v158;
        do
        {
          v184 = v81;
          v185 = v79;
          v84 = v177;
          v85 = v178;
          v86 = v179;
          ((void (*)(char *))v179)(v177);
          v87 = v176;
          v86(v176, v84, v85);
          v88 = (uint64_t)v175;
          sub_231262AAC();
          v89 = sub_231262AD0();
          v90 = sub_231262AC4();
          v92 = v91;
          v93 = v182;
          sub_231262AB8();
          *(_QWORD *)(v88 + *(int *)(v93 + 20)) = v89;
          v94 = (uint64_t *)(v88 + *(int *)(v93 + 24));
          *v94 = v90;
          v94[1] = v92;
          v95 = *(void (**)(char *, uint64_t))(v183 + 8);
          v95(v87, v85);
          sub_2311B1454(v88, v83, (uint64_t (*)(_QWORD))type metadata accessor for RecordKindFeedItemData);
          v95(v84, v85);
          v96 = v187;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_231199338(0, *(_QWORD *)(v96 + 16) + 1, 1);
            v96 = v187;
          }
          v98 = *(_QWORD *)(v96 + 16);
          v97 = *(_QWORD *)(v96 + 24);
          v37 = (char *)(v98 + 1);
          v99 = v185;
          if (v98 >= v97 >> 1)
          {
            sub_231199338(v97 > 1, v98 + 1, 1);
            v96 = v187;
          }
          *(_QWORD *)(v96 + 16) = v37;
          sub_2311B1454(v83, v96+ ((*(unsigned __int8 *)(v181 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v181 + 80))+ *(_QWORD *)(v181 + 72) * v98, (uint64_t (*)(_QWORD))type metadata accessor for RecordKindFeedItemData);
          v81 = v184 + v180;
          v79 = v99 - 1;
        }
        while (v79);
        swift_bridgeObjectRelease();
        v32 = v163;
        v33 = v157;
        v28 = v156;
      }
      else
      {
        swift_bridgeObjectRelease();
        v96 = MEMORY[0x24BEE4AF8];
        v32 = v163;
      }
      v60 = 1;
      sub_231178498((uint64_t)v28, (uint64_t (*)(_QWORD))sub_2311B6ADC);
      v54 = (uint64_t *)v186;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23119931C(0, v54[2] + 1, 1);
        v54 = (uint64_t *)v186;
      }
      v101 = v54[2];
      v100 = v54[3];
      if (v101 >= v100 >> 1)
      {
        sub_23119931C(v100 > 1, v101 + 1, 1);
        v54 = (uint64_t *)v186;
      }
      v54[2] = v101 + 1;
      v54[v101 + 4] = v96;
      v52 = v162;
      v59 = *(_BYTE *)(v162 + 32);
      v56 = 1 << v59;
      if (v174 >= 1 << v59)
        goto LABEL_78;
      v58 = v161;
      v102 = v173;
      v103 = *(_QWORD *)(v161 + 8 * v173);
      if ((v103 & v172) == 0)
        goto LABEL_79;
      if (*(_DWORD *)(v162 + 36) != (_DWORD)v171)
        goto LABEL_80;
      v104 = v103 & (-2 << (v174 & 0x3F));
      if (v104)
      {
        v56 = __clz(__rbit64(v104)) | v174 & 0xFFFFFFFFFFFFFFC0;
        v61 = v160;
      }
      else
      {
        v105 = v173 + 1;
        v106 = (unint64_t)(v56 + 63) >> 6;
        v61 = v160;
        if (v173 + 1 < v106)
        {
          v107 = *(_QWORD *)(v161 + 8 * v105);
          if (v107)
          {
LABEL_34:
            v56 = __clz(__rbit64(v107)) + (v105 << 6);
          }
          else
          {
            while (v106 - 2 != v102)
            {
              v107 = *(_QWORD *)(v168 + 8 * v102++);
              if (v107)
              {
                v105 = v102 + 1;
                goto LABEL_34;
              }
            }
          }
        }
      }
      v57 = v170 + 1;
      v55 = v159;
    }
    while (v170 + 1 != v61);
    swift_bridgeObjectRelease();
    v60 = v54[2];
    if (v60)
      goto LABEL_36;
    goto LABEL_61;
  }
  swift_bridgeObjectRelease();
  v54 = (uint64_t *)MEMORY[0x24BEE4AF8];
  v60 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
  if (v60)
  {
LABEL_36:
    swift_bridgeObjectRetain();
    v37 = 0;
    v52 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v108 = v54[(_QWORD)v37 + 4];
      v109 = *(_QWORD *)(v108 + 16);
      v56 = *(_QWORD *)(v52 + 16);
      v110 = v56 + v109;
      if (__OFADD__(v56, v109))
        goto LABEL_81;
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (isUniquelyReferenced_nonNull_native && v110 <= *(_QWORD *)(v52 + 24) >> 1)
      {
        if (*(_QWORD *)(v108 + 16))
          goto LABEL_48;
      }
      else
      {
        if (v56 <= v110)
          v112 = v56 + v109;
        else
          v112 = v56;
        v52 = sub_2311DCCB8(isUniquelyReferenced_nonNull_native, v112, 1, v52);
        if (*(_QWORD *)(v108 + 16))
        {
LABEL_48:
          v113 = *(_QWORD *)(v52 + 16);
          if ((*(_QWORD *)(v52 + 24) >> 1) - v113 < v109)
            goto LABEL_83;
          v114 = (*(unsigned __int8 *)(v181 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v181 + 80);
          v115 = *(_QWORD *)(v181 + 72);
          v116 = v52 + v114 + v115 * v113;
          if (v108 + v114 < v116 + v115 * v109 && v116 < v108 + v114 + v115 * v109)
          {
            LODWORD(v140) = 0;
            v139 = 1092;
            LOBYTE(v138) = 2;
            sub_2312649FC();
            __break(1u);
            return;
          }
          swift_arrayInitWithCopy();
          if (v109)
          {
            v118 = *(_QWORD *)(v52 + 16);
            v119 = __OFADD__(v118, v109);
            v120 = v118 + v109;
            if (v119)
              goto LABEL_84;
            *(_QWORD *)(v52 + 16) = v120;
          }
          goto LABEL_38;
        }
      }
      if (v109)
        goto LABEL_82;
LABEL_38:
      ++v37;
      swift_bridgeObjectRelease();
      if ((char *)v60 == v37)
      {
        swift_bridgeObjectRelease();
        goto LABEL_62;
      }
    }
  }
LABEL_61:
  v52 = MEMORY[0x24BEE4AF8];
LABEL_62:
  v121 = swift_bridgeObjectRelease();
  MEMORY[0x24BDAC7A8](v121);
  v138 = v147;
  v139 = v149;
  v140 = v148;
  sub_2312458D8((void (*)(_QWORD))sub_2311B6CAC, (uint64_t)(&v141 - 6), v52);
  swift_bridgeObjectRelease();
  v122 = v142;
  v185 = (char *)sub_231262E54();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v122, v32);
LABEL_63:
  v123 = v150;
  v124 = (_QWORD *)(v150 + 16);
  sub_231173410((_QWORD *)(v150 + 16), *(_QWORD *)(v150 + 40));
  sub_231173410(v124, *(_QWORD *)(v123 + 40));
  v125 = (void *)sub_2312621D0();
  sub_2312621C4();

  v52 = sub_23126421C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v126 = v185;
  if (v185)
  {
    v37 = v185;
    v127 = (void *)sub_231262230();
    v128 = v146;
    sub_2311B6280(v126, v127, v146);

    v129 = v145;
    v130 = v128;
    v131 = v128;
    v56 = v144;
    v132 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v145 + 48))(v130, 1, v144);
    v60 = (uint64_t)v152;
    if (v132 == 1)
    {

      sub_2311B6BD0(v131);
    }
    else
    {
      v133 = v143;
      (*(void (**)(char *, uint64_t, uint64_t))(v129 + 32))(v143, v131, v56);
      sub_2311735E0(0, &qword_254153218, (uint64_t (*)(uint64_t))MEMORY[0x24BE47570], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v134 = (*(unsigned __int8 *)(v129 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80);
      v54 = (uint64_t *)swift_allocObject();
      *((_OWORD *)v54 + 1) = xmmword_231265AC0;
      (*(void (**)(char *, char *, uint64_t))(v129 + 16))((char *)v54 + v134, v133, v56);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_85:
        v52 = (unint64_t)sub_2311DCB88(0, *(_QWORD *)(v52 + 16) + 1, 1, (_QWORD *)v52);
      v136 = *(_QWORD *)(v52 + 16);
      v135 = *(_QWORD *)(v52 + 24);
      if (v136 >= v135 >> 1)
        v52 = (unint64_t)sub_2311DCB88((_QWORD *)(v135 > 1), v136 + 1, 1, (_QWORD *)v52);
      *(_QWORD *)(v52 + 16) = v136 + 1;
      v137 = v52 + 40 * v136;
      *(_QWORD *)(v137 + 32) = v54;
      *(_QWORD *)(v137 + 40) = 0;
      *(_QWORD *)(v137 + 48) = 0;
      *(_QWORD *)(v137 + 56) = 0;
      *(_BYTE *)(v137 + 64) = 64;

      (*(void (**)(char *, uint64_t))(v145 + 8))(v143, v56);
    }
    v126 = v185;
    ((void (*)(unint64_t, _QWORD))v60)(v52, 0);
  }
  else
  {
    v152(v52, 0);
  }
  swift_bridgeObjectRelease();

}

uint64_t sub_2311B5A7C@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  id v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v7 = sub_231263B5C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (void *)sub_231262230();
  sub_2311B5D5C(a1, a2, v11, a3);
  if (v3)
  {

    sub_231263B08();
    v12 = v3;
    v13 = v3;
    v14 = sub_231263B50();
    v15 = sub_2312643D8();
    if (os_log_type_enabled(v14, v15))
    {
      v28 = a3;
      v16 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      v30 = v26;
      *(_DWORD *)v16 = 136446210;
      v25 = v16 + 4;
      v29 = (uint64_t)v3;
      v17 = v3;
      sub_2311889D8();
      sub_231264B88();
      v27 = v7;
      v18 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_2312647B0();
      swift_unknownObjectRelease();
      v19 = sub_2312640CC();
      v29 = sub_2311CBDE4(v19, v20, &v30);
      sub_231264750();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23116F000, v14, v15, "Error making feed item for record, hiding from UI: %{public}s", v16, 0xCu);
      v21 = v26;
      a3 = v28;
      swift_arrayDestroy();
      MEMORY[0x2348D85EC](v21, -1, -1);
      MEMORY[0x2348D85EC](v16, -1, -1);

      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v27);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    v24 = sub_23126217C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(a3, 1, 1, v24);
  }
  else
  {

    v22 = sub_23126217C();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a3, 0, 1, v22);
  }
}

uint64_t sub_2311B5D5C@<X0>(uint64_t a1@<X0>, char *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t *, _QWORD);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v62 = a2;
  v61 = a4;
  v59 = sub_23126292C();
  v56 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v55 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_231261CCC();
  MEMORY[0x24BDAC7A8](v7);
  v51 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_231261E40();
  v57 = *(_QWORD *)(v9 - 8);
  v58 = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v50 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v48 - v12;
  v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2311735E0(0, (unint64_t *)&qword_254154938, v15, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v16);
  v60 = (uint64_t)&v48 - v17;
  sub_2311735E0(0, &qword_255EB8138, (uint64_t (*)(uint64_t))MEMORY[0x24BE47DF8], v14);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v48 - v19;
  v21 = sub_231261FA8();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for RecordKindFeedItemData();
  v54 = a3;
  v52 = sub_231263154();
  sub_231172048(&qword_255EB8BA0, (uint64_t (*)(uint64_t))type metadata accessor for RecordKindFeedItemData, (uint64_t)&unk_23126A938);
  v53 = a1;
  v26 = v63;
  sub_231261C60();
  if (v26)
    return swift_bridgeObjectRelease();
  v62 = v20;
  v63 = 0;
  v49 = v13;
  type metadata accessor for RecordKindFeedItemViewController();
  (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v24, *MEMORY[0x24BE47460], v21);
  v28 = v54;
  sub_231262038();
  v29 = v60;
  sub_2311A4BBC(v53 + *(int *)(v25 + 28), v60);
  v30 = v57;
  v31 = v29;
  v32 = v58;
  v33 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v31, 1, v58);
  v35 = v55;
  v34 = v56;
  if (v33 == 1)
  {
    v36 = sub_231262428();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v62, 1, 1, v36);
  }
  else
  {
    v37 = v49;
    (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v49, v60, v32);
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v50, v37, v32);
    sub_231261CC0();
    v38 = v62;
    sub_231262410();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v37, v32);
    v39 = sub_231262428();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v38, 0, 1, v39);
  }
  sub_231262104();
  swift_bridgeObjectRetain();
  sub_2312620BC();
  sub_2312620F8();
  v65 = MEMORY[0x24BEE4B08];
  v40 = sub_2312228E0();
  sub_2311BAB64(v40);
  v41 = sub_23126232C();
  sub_2312519E4(&v64, v41, v42);
  swift_bridgeObjectRelease();
  v43 = v65;
  v44 = (void (*)(uint64_t *, _QWORD))sub_23126214C();
  sub_2311BAB64(v43);
  v44(&v64, 0);
  v45 = v59;
  (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v35, *MEMORY[0x24BE490B8], v59);
  sub_231172048(&qword_255EB8838, (uint64_t (*)(uint64_t))MEMORY[0x24BE490F8], MEMORY[0x24BE49118]);
  sub_2312641D4();
  sub_2312641D4();
  v46 = v64;
  v47 = v65;
  result = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v35, v45);
  if (v46 == v47)
    return sub_2312620B0();
  return result;
}

void sub_2311B6280(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v32 = type metadata accessor for RecordKindGeneratorData(0);
  MEMORY[0x24BDAC7A8](v32);
  v33 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2312626E0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_231261E94();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    goto LABEL_6;
  v31 = a3;
  v15 = a1;
  v16 = (void *)sub_231261FF0();
  if (!v16)
  {

    a3 = v31;
LABEL_6:
    v26 = sub_231261FE4();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(a3, 1, 1, v26);
    return;
  }
  v17 = v16;
  v30 = a2;
  v18 = v15;
  v19 = objc_msgSend(v16, sel_identifier);

  sub_231261E7C();
  v20 = sub_231261E58();
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v34 = v20;
  v35 = v22;
  sub_231264144();
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BE48DC0], v7);
  sub_2312626D4();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_231264144();
  swift_bridgeObjectRelease();
  sub_2311B6CDC();
  v23 = v18;
  v24 = (uint64_t)v33;
  sub_231263FAC();
  sub_231261E34();
  sub_231261C78();
  swift_allocObject();
  sub_231261C6C();
  sub_231172048(&qword_255EB8BA8, type metadata accessor for RecordKindGeneratorData, (uint64_t)&unk_231267860);
  v25 = v36;
  sub_231261C60();
  if (v25)
  {
    sub_231178498(v24, type metadata accessor for RecordKindGeneratorData);
    swift_bridgeObjectRelease();
    swift_release();

  }
  else
  {
    swift_release();
    v27 = v30;
    v28 = v31;
    sub_231261FCC();

    sub_231178498(v24, type metadata accessor for RecordKindGeneratorData);
    v29 = sub_231261FE4();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 0, 1, v29);
  }
}

uint64_t sub_2311B65B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC13HealthRecords19RecordKindGenerator_domain;
  v2 = sub_2312621F4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_231178498(v0 + OBJC_IVAR____TtC13HealthRecords19RecordKindGenerator_context, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
  return swift_deallocClassInstance();
}

uint64_t sub_2311B6624()
{
  return type metadata accessor for RecordKindGenerator(0);
}

uint64_t type metadata accessor for RecordKindGenerator(uint64_t a1)
{
  return sub_231187940(a1, (uint64_t *)&unk_254154E40);
}

uint64_t sub_2311B6640@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC13HealthRecords19RecordKindGenerator_domain;
  v4 = sub_2312621F4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void sub_2311B6688()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541555E0)
  {
    sub_2311B6700();
    sub_231172048(&qword_2541555C8, (uint64_t (*)(uint64_t))sub_2311B6700, MEMORY[0x24BDB9E58]);
    v0 = sub_231263DE4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541555E0);
  }
}

void sub_2311B6700()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541555D0)
  {
    sub_2311B6764();
    v0 = sub_231263DA8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541555D0);
  }
}

void sub_2311B6764()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254155638)
  {
    v0 = sub_231264270();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254155638);
  }
}

uint64_t sub_2311B67BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(sub_23126226C() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_2311B45D0(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)), a1);
}

uint64_t sub_2311B682C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23126226C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2311B68D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(sub_23126226C() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_2311B472C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), v2 + v6, *(_QWORD *)(v2 + v7), *(_QWORD *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_2311B6950()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2311B6974(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t *);
  uint64_t v5;
  char v6;

  v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  v5 = a1;
  v6 = a2 & 1;
  return v3(&v5);
}

uint64_t sub_2311B69AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23126226C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_2311B6A60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(sub_23126226C() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_2311B48B8(a1, *(_QWORD *)(v1 + 16), v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void (**)(unint64_t, _QWORD))(v1+ ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v1 + ((((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8)));
}

void sub_2311B6ADC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_254153F08)
  {
    sub_23126292C();
    sub_2311735E0(255, &qword_254155650, (uint64_t (*)(uint64_t))MEMORY[0x24BE492D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_254153F08);
  }
}

void sub_2311B6B64()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254154690)
  {
    sub_231262E60();
    sub_2311889D8();
    v0 = sub_231264C48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254154690);
  }
}

uint64_t sub_2311B6BD0(uint64_t a1)
{
  uint64_t v2;

  sub_2311735E0(0, &qword_254152BD8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47570], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2311B6C24(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_2311B6CAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2311B5A7C(a1, *(char **)(v2 + 16), a2);
}

uint64_t type metadata accessor for RecordKindGeneratorData(uint64_t a1)
{
  return sub_231187940(a1, qword_254154748);
}

unint64_t sub_2311B6CDC()
{
  unint64_t result;

  result = qword_2541556D0;
  if (!qword_2541556D0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2541556D0);
  }
  return result;
}

uint64_t *sub_2311B6D18(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_2311735E0(0, &qword_2541534B8, (uint64_t (*)(uint64_t))sub_2311B6CDC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_231261E40();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_2311B6DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_2311735E0(0, &qword_2541534B8, (uint64_t (*)(uint64_t))sub_2311B6CDC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_231261E40();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_2311B6E4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_2311735E0(0, &qword_2541534B8, (uint64_t (*)(uint64_t))sub_2311B6CDC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_231261E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_2311B6EE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_2311735E0(0, &qword_2541534B8, (uint64_t (*)(uint64_t))sub_2311B6CDC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_231261E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_2311B6F74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_2311735E0(0, &qword_2541534B8, (uint64_t (*)(uint64_t))sub_2311B6CDC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_231261E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_2311B7008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_2311735E0(0, &qword_2541534B8, (uint64_t (*)(uint64_t))sub_2311B6CDC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_231261E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_2311B709C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2311B70A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  sub_2311735E0(0, &qword_2541534B8, (uint64_t (*)(uint64_t))sub_2311B6CDC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_231261E40();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_2311B7134()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2311B7140(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  sub_2311735E0(0, &qword_2541534B8, (uint64_t (*)(uint64_t))sub_2311B6CDC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_231261E40();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_2311B71D4()
{
  unint64_t v0;
  unint64_t v1;

  sub_2311735E0(319, &qword_2541534B8, (uint64_t (*)(uint64_t))sub_2311B6CDC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  if (v0 <= 0x3F)
  {
    sub_231261E40();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

unint64_t sub_2311B7270()
{
  unint64_t result;

  result = qword_255EB8BB8;
  if (!qword_255EB8BB8)
  {
    result = MEMORY[0x2348D8544](&unk_23126794C, &type metadata for RecordKindGeneratorData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB8BB8);
  }
  return result;
}

uint64_t sub_2311B72B4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_2311735E0(255, &qword_2541534B8, (uint64_t (*)(uint64_t))sub_2311B6CDC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
    result = MEMORY[0x2348D8544](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_2311B730C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_2311B7270();
    v7 = a3(a1, &type metadata for RecordKindGeneratorData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t getEnumTagSinglePayload for RecordKindGeneratorData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for RecordKindGeneratorData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2311B7444 + 4 * byte_2312677B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2311B7478 + 4 * byte_2312677B0[v4]))();
}

uint64_t sub_2311B7478(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2311B7480(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2311B7488);
  return result;
}

uint64_t sub_2311B7494(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2311B749CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2311B74A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2311B74A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_2311B74B4(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for RecordKindGeneratorData.CodingKeys()
{
  return &type metadata for RecordKindGeneratorData.CodingKeys;
}

unint64_t sub_2311B74D4()
{
  unint64_t result;

  result = qword_255EB8BC8;
  if (!qword_255EB8BC8)
  {
    result = MEMORY[0x2348D8544](&unk_231267924, &type metadata for RecordKindGeneratorData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB8BC8);
  }
  return result;
}

unint64_t sub_2311B751C()
{
  unint64_t result;

  result = qword_255EB8BD0;
  if (!qword_255EB8BD0)
  {
    result = MEMORY[0x2348D8544](&unk_231267894, &type metadata for RecordKindGeneratorData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB8BD0);
  }
  return result;
}

unint64_t sub_2311B7564()
{
  unint64_t result;

  result = qword_255EB8BD8;
  if (!qword_255EB8BD8)
  {
    result = MEMORY[0x2348D8544](&unk_2312678BC, &type metadata for RecordKindGeneratorData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB8BD8);
  }
  return result;
}

uint64_t sub_2311B75A8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000015 && a2 == 0x800000023126C720 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x446E75527473616CLL && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_231264B58();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2311B76AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void (*v14)(unint64_t, _QWORD, uint64_t);
  id v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;

  v44 = a1;
  v1 = sub_231261F18();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_231261D38();
  v42 = *(_QWORD *)(v5 - 8);
  v43 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311B7BF8();
  v8 = sub_231261F0C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 72);
  v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_2312679A0;
  v13 = v12 + v11;
  v14 = *(void (**)(unint64_t, _QWORD, uint64_t))(v9 + 104);
  v14(v13, *MEMORY[0x24BDCF220], v8);
  v14(v13 + v10, *MEMORY[0x24BDCF230], v8);
  v14(v13 + 2 * v10, *MEMORY[0x24BDCF258], v8);
  v14(v13 + 3 * v10, *MEMORY[0x24BDCF260], v8);
  sub_2311D3FC8(v12);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v15 = objc_msgSend((id)objc_opt_self(), sel_currentCalendar);
  sub_231261EE8();

  sub_231261ED0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v47 = 0;
  v48 = 0xE000000000000000;
  v16 = sub_231261D20();
  if ((v17 & 1) != 0)
    v18 = 0;
  else
    v18 = v16;
  v46 = v18;
  sub_231264B28();
  sub_231264144();
  swift_bridgeObjectRelease();
  sub_231264144();
  v19 = v47;
  v47 = 0;
  v48 = 0xE000000000000000;
  v20 = sub_231261D14();
  if ((v21 & 1) != 0)
    v22 = 0;
  else
    v22 = v20;
  v46 = v22;
  sub_231264B28();
  sub_231264144();
  swift_bridgeObjectRelease();
  sub_231264144();
  swift_bridgeObjectRetain();
  sub_231264144();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v45 = v19;
  sub_231264144();
  swift_bridgeObjectRelease();
  v23 = v47;
  v47 = 0;
  v48 = 0xE000000000000000;
  v24 = sub_231261D08();
  if ((v25 & 1) != 0)
    v26 = 0;
  else
    v26 = v24;
  v46 = v26;
  sub_231264B28();
  sub_231264144();
  swift_bridgeObjectRelease();
  sub_231264144();
  swift_bridgeObjectRetain();
  sub_231264144();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_231264144();
  swift_bridgeObjectRelease();
  v27 = v47;
  v47 = 0;
  v48 = 0xE000000000000000;
  v28 = sub_231261CFC();
  if ((v29 & 1) != 0)
    v30 = 0;
  else
    v30 = v28;
  v46 = v30;
  sub_231264B28();
  sub_231264144();
  swift_bridgeObjectRelease();
  sub_231264144();
  swift_bridgeObjectRetain();
  sub_231264144();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_231264144();
  swift_bridgeObjectRelease();
  v31 = v47;
  v32 = sub_231261CFC();
  if ((v33 & 1) != 0 || v32 < 1)
  {
    swift_bridgeObjectRelease();
    v34 = sub_231261D08();
    if ((v35 & 1) != 0 || v34 < 1)
    {
      swift_bridgeObjectRelease();
      v36 = sub_231261D14();
      if ((v37 & 1) != 0 || v36 < 1)
      {
        swift_bridgeObjectRelease();
        v38 = sub_231261D20();
        if ((v39 & 1) != 0 || v38 < 1)
        {
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v43);
          return 7549244;
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v43);
          return v45;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v43);
        swift_bridgeObjectRelease();
        return v23;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v43);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v27;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v43);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v31;
}

void sub_2311B7BF8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254153210)
  {
    sub_231261F0C();
    v0 = sub_231264B34();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254153210);
  }
}

uint64_t type metadata accessor for CategoryFeedItemViewController()
{
  uint64_t result;

  result = qword_2541558C8;
  if (!qword_2541558C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2311B7C88()
{
  return swift_initClassMetadata2();
}

id sub_2311B7CDC(char a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  objc_class *v10;
  id result;
  uint64_t v12;
  void *v13;
  objc_super v14;

  v3 = sub_2312627B8();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v14 - v8;
  v10 = (objc_class *)type metadata accessor for CategoryFeedItemViewController();
  v14.receiver = v1;
  v14.super_class = v10;
  result = objc_msgSendSuper2(&v14, sel_viewDidAppear_, a1 & 1);
  v12 = *(_QWORD *)&v1[qword_2541558B8];
  if (v12)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v12 + *(_QWORD *)(*(_QWORD *)v12 + 88), v3);
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v7, v3);
    sub_2312629EC();
    v13 = (void *)sub_2312629E0();
    sub_2312629C8();

    return (id)(*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
  return result;
}

void sub_2311B7DF8(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_2311B7CDC(a3);

}

id sub_2311B7E38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  id result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t (*)(uint64_t), _QWORD *);
  _QWORD *v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  __int128 v24;
  __int128 v25;
  unint64_t v26;

  sub_2311735E0(0, (unint64_t *)&unk_2541557A0, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  v4 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v24 - v6;
  result = objc_msgSend((id)objc_opt_self(), sel_isMainThread);
  if ((_DWORD)result)
  {
    v9 = qword_2541558B8;
    v10 = *(_QWORD *)(v0 + qword_2541558B8);
    if (v10)
    {
      sub_2311735E0(0, &qword_254154878, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for BrowseItem);
      *((_QWORD *)&v25 + 1) = v11;
      v26 = sub_2311BA290();
      *(_QWORD *)&v24 = v10;
    }
    else
    {
      v26 = 0;
      v24 = 0u;
      v25 = 0u;
    }
    swift_retain();
    sub_231263658();
    v12 = *(_QWORD *)(v0 + v9);
    if (v12)
    {
      v13 = v12 + *(_QWORD *)(*(_QWORD *)v12 + 88);
      v14 = sub_2312627B8();
      v15 = (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28];
      v16 = *(_QWORD *)(v14 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v7, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v7, 0, 1, v14);
      v17 = swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_2311BA688((uint64_t)v7, (uint64_t)v5, (unint64_t *)&unk_2541557A0, v15);
      v18 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
      v19 = swift_allocObject();
      *(_QWORD *)(v19 + 16) = v17;
      sub_2311BA4EC((uint64_t)v5, v19 + v18, (unint64_t *)&unk_2541557A0, v15);
      v20 = *(void (**)(uint64_t (*)(uint64_t), _QWORD *))(v12 + *(_QWORD *)(*(_QWORD *)v12 + 104));
      if (v20)
      {
        v21 = (_QWORD *)swift_allocObject();
        v21[2] = v12;
        v21[3] = sub_2311BA544;
        v21[4] = v19;
        swift_retain_n();
        swift_retain_n();
        sub_2311BA5D4((uint64_t)v20);
        swift_retain();
        v20(sub_2311BA5C8, v21);
        swift_release();
        sub_2311BA5E4((uint64_t)v20);
      }
      else
      {
        swift_retain_n();
        swift_retain();
      }
      swift_release();
      swift_release();
      swift_release();
      sub_231189628((uint64_t)v7, (unint64_t *)&unk_2541557A0, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28]);
      return (id)swift_release();
    }
    else
    {
      v22 = sub_2312627B8();
      v23 = (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28];
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v7, 1, 1, v22);
      return (id)sub_231189628((uint64_t)v7, (unint64_t *)&unk_2541557A0, v23);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2311B8158(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  char *v17;
  uint64_t (*v18)(uint64_t);
  unint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t (*v22)(uint64_t);
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[6];

  v6 = sub_231263F40();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_231263F58();
  v26 = *(_QWORD *)(v10 - 8);
  v27 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, (unint64_t *)&unk_2541557A0, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v14 = *(_QWORD *)(v13 - 8);
  result = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v24 - v16;
  if ((a1 & 1) != 0)
  {
    sub_231178AD0(0, (unint64_t *)&qword_2541558F0);
    v24 = sub_2312644E0();
    v25 = v7;
    v18 = (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28];
    sub_2311BA688(a3, (uint64_t)v17, (unint64_t *)&unk_2541557A0, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28]);
    v19 = (*(unsigned __int8 *)(v14 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = a2;
    sub_2311BA4EC((uint64_t)v17, v20 + v19, (unint64_t *)&unk_2541557A0, v18);
    aBlock[4] = sub_2311BA830;
    aBlock[5] = v20;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23117415C;
    aBlock[3] = &unk_25000C7F0;
    v21 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    sub_231263F4C();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    v22 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
    sub_231172048(&qword_254155620, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_2311735E0(0, (unint64_t *)&qword_254155670, v22, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_2311BA890();
    sub_2312647BC();
    v23 = (void *)v24;
    MEMORY[0x2348D78F0](0, v12, v9, v21);
    _Block_release(v21);

    (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v12, v27);
  }
  return result;
}

void sub_2311B8404(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  char *v28;
  uint64_t (*v29)(uint64_t);
  char v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  __int128 v39;
  __int128 v40;
  unint64_t v41;

  v4 = sub_2312627B8();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311BA8F0(0, &qword_255EB8C08, (unint64_t *)&unk_2541557A0, v5);
  v10 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v38 - v11;
  sub_2311735E0(0, (unint64_t *)&unk_2541557A0, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v38 - v17;
  v19 = a1 + 16;
  swift_beginAccess();
  v20 = MEMORY[0x2348D8688](v19);
  v38 = v8;
  if (v20)
  {
    v21 = (void *)v20;
    v22 = a2;
    v23 = *(_QWORD *)(v20 + qword_2541558B8);
    swift_retain();

    if (v23)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v18, v23 + *(_QWORD *)(*(_QWORD *)v23 + 88), v4);
      swift_release();
      v24 = 0;
      goto LABEL_6;
    }
  }
  else
  {
    v22 = a2;
  }
  v24 = 1;
LABEL_6:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v18, v24, 1, v4);
  v25 = (uint64_t)&v12[*(int *)(v10 + 48)];
  v26 = (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28];
  sub_2311BA688((uint64_t)v18, (uint64_t)v12, (unint64_t *)&unk_2541557A0, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28]);
  sub_2311BA688(v22, v25, (unint64_t *)&unk_2541557A0, v26);
  v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v27((uint64_t)v12, 1, v4) != 1)
  {
    sub_2311BA688((uint64_t)v12, (uint64_t)v16, (unint64_t *)&unk_2541557A0, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28]);
    if (v27(v25, 1, v4) != 1)
    {
      v28 = v38;
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v38, v25, v4);
      v29 = (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28];
      sub_231172048(&qword_254155528, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28], MEMORY[0x24BE48F48]);
      v30 = sub_231264060();
      v31 = *(void (**)(char *, uint64_t))(v6 + 8);
      v31(v28, v4);
      sub_231189628((uint64_t)v18, (unint64_t *)&unk_2541557A0, v29);
      v31(v16, v4);
      sub_231189628((uint64_t)v12, (unint64_t *)&unk_2541557A0, v29);
      if ((v30 & 1) == 0)
        return;
      goto LABEL_13;
    }
    sub_231189628((uint64_t)v18, (unint64_t *)&unk_2541557A0, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28]);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v16, v4);
LABEL_11:
    sub_2311BA6E0((uint64_t)v12, &qword_255EB8C08, (unint64_t *)&unk_2541557A0, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28]);
    return;
  }
  sub_231189628((uint64_t)v18, (unint64_t *)&unk_2541557A0, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28]);
  if (v27(v25, 1, v4) != 1)
    goto LABEL_11;
  sub_231189628((uint64_t)v12, (unint64_t *)&unk_2541557A0, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28]);
LABEL_13:
  swift_beginAccess();
  v32 = MEMORY[0x2348D8688](v19);
  if (v32)
  {
    v33 = (void *)v32;
    swift_beginAccess();
    v34 = MEMORY[0x2348D8688](v19);
    if (v34 && (v35 = (void *)v34, v36 = *(_QWORD *)(v34 + qword_2541558B8), swift_retain(), v35, v36))
    {
      sub_2311735E0(0, &qword_254154878, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for BrowseItem);
      *((_QWORD *)&v40 + 1) = v37;
      v41 = sub_2311BA290();
      *(_QWORD *)&v39 = v36;
    }
    else
    {
      v41 = 0;
      v39 = 0u;
      v40 = 0u;
    }
    sub_231263658();

  }
}

id sub_2311B883C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(uint64_t);
  uint64_t *v57;
  uint64_t v58;
  void (**v59)();
  uint64_t v61;
  uint64_t v62;
  void (*v63)(unint64_t, char *, uint64_t);
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD v79[3];
  uint64_t v80;

  v1 = v0;
  v2 = sub_231263B5C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v76 = (uint64_t)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, &qword_254154880, (uint64_t (*)(uint64_t))MEMORY[0x24BE48D18], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v72 = (char *)&v61 - v6;
  v7 = sub_231262674();
  v70 = *(_QWORD *)(v7 - 8);
  v71 = v7;
  v8 = *(_QWORD *)(v70 + 64);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v69 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v73 = (char *)&v61 - v10;
  v78 = sub_2312627B8();
  v11 = *(_QWORD *)(v78 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = MEMORY[0x24BDAC7A8](v78);
  v68 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v74 = (char *)&v61 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v61 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v61 - v19;
  sub_231263670();
  v21 = v80;
  if (v80)
  {
    v66 = v2;
    v67 = v11;
    v65 = v3;
    v22 = sub_231173410(v79, v80);
    v77 = v0;
    v23 = *(_QWORD *)(v21 - 8);
    MEMORY[0x24BDAC7A8](v22);
    v25 = (char *)&v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v23 + 16))(v25);
    sub_231178498((uint64_t)v79, (uint64_t (*)(_QWORD))sub_2311BA2F0);
    v26 = sub_231263784();
    v28 = v27;
    v29 = *(void (**)(char *, uint64_t))(v23 + 8);
    v1 = v77;
    v29(v25, v21);
    v75 = v28;
    if (v28 >> 60 != 15)
    {
      sub_231172048((unint64_t *)&unk_254154890, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28], MEMORY[0x24BE48F58]);
      v30 = v20;
      v31 = v78;
      sub_231261C3C();
      v32 = v30;
      v64 = v30;
      v33 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
      v33(v18, v32, v31);
      v34 = *MEMORY[0x24BE48D50];
      v76 = v26;
      v35 = v31;
      v37 = v70;
      v36 = v71;
      v38 = v73;
      (*(void (**)(char *, uint64_t, uint64_t))(v70 + 104))(v73, v34, v71);
      sub_231262AA0();
      v62 = sub_231262A94();
      v33(v74, v18, v35);
      v39 = sub_231262728();
      v65 = v40;
      v66 = v39;
      v41 = v68;
      v33(v68, v18, v35);
      v42 = v69;
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v69, v38, v36);
      v43 = v67;
      v44 = (*(unsigned __int8 *)(v67 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
      v45 = (v12 + *(unsigned __int8 *)(v37 + 80) + v44) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
      v46 = swift_allocObject();
      *(_QWORD *)(v46 + 16) = v62;
      v63 = *(void (**)(unint64_t, char *, uint64_t))(v43 + 32);
      v47 = v41;
      v48 = v78;
      v63(v46 + v44, v47, v78);
      (*(void (**)(unint64_t, char *, uint64_t))(v37 + 32))(v46 + v45, v42, v36);
      swift_retain();
      v50 = (uint64_t)v72;
      v49 = v73;
      sub_231262A88();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v49, v36);
      v51 = *(void (**)(char *, uint64_t))(v43 + 8);
      v52 = v48;
      v51(v18, v48);
      sub_2311735E0(0, &qword_254154878, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for BrowseItem);
      v53 = swift_allocObject();
      v54 = v53 + *(_QWORD *)(*(_QWORD *)v53 + 112);
      v55 = sub_231262644();
      v56 = (uint64_t (*)(uint64_t))MEMORY[0x24BE48D18];
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v54, 1, 1, v55);
      v63(v53 + *(_QWORD *)(*(_QWORD *)v53 + 88), v74, v52);
      v57 = (uint64_t *)(v53 + *(_QWORD *)(*(_QWORD *)v53 + 96));
      v58 = v65;
      *v57 = v66;
      v57[1] = v58;
      v59 = (void (**)())(v53 + *(_QWORD *)(*(_QWORD *)v53 + 104));
      *v59 = sub_2311BA448;
      v59[1] = (void (*)())v46;
      sub_2311BA4EC(v50, v53 + *(_QWORD *)(*(_QWORD *)v53 + 120), &qword_254154880, v56);
      swift_release();
      sub_23118078C(v76, v75);
      v51(v64, v52);
      *(_QWORD *)(v77 + qword_2541558B8) = v53;
      swift_retain_n();
      swift_release();
      sub_2311B7E38();
      return (id)swift_release_n();
    }
  }
  else
  {
    sub_231178498((uint64_t)v79, (uint64_t (*)(_QWORD))sub_2311BA2F0);
  }
  *(_QWORD *)(v1 + qword_2541558B8) = 0;
  swift_release();
  return sub_2311B7E38();
}

uint64_t sub_2311B902C(uint64_t a1)
{
  char *v1;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for CategoryFeedItemViewController();
  objc_msgSendSuper2(&v4, sel_traitCollectionDidChange_, a1);
  if (*(_QWORD *)&v1[qword_2541558B8])
  {
    sub_2311735E0(0, &qword_254154878, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for BrowseItem);
    sub_2311BA290();
  }
  swift_retain();
  return sub_231263658();
}

void sub_2311B90D0(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;

  v5 = a3;
  v6 = a1;
  sub_2311B902C((uint64_t)a3);

}

uint64_t sub_2311B9128(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  char *v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t result;
  char v33;
  void *v34;
  id v35;
  id v36;
  void *v37;
  void *v38;
  void *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint8_t *v62;
  _QWORD v63[5];
  uint64_t v64;
  _QWORD v65[3];
  uint64_t v66;

  v2 = v1;
  v62 = (uint8_t *)a1;
  v3 = sub_231263B5C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v58 - v8;
  v10 = sub_2312627B8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v58 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v58 - v18;
  v20 = *(_QWORD *)&v2[qword_2541558B8];
  if (v20)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v17, v20 + *(_QWORD *)(*(_QWORD *)v20 + 88), v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v19, v17, v10);
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v14, *MEMORY[0x24BE48ED8], v10);
    sub_231172048(&qword_254153F00, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28], MEMORY[0x24BE48F50]);
    sub_2312641D4();
    sub_2312641D4();
    if (v65[0] == v63[0] && v65[1] == v63[1])
    {
      swift_bridgeObjectRelease_n();
      v21 = *(void (**)(char *, uint64_t))(v11 + 8);
      v21(v14, v10);
LABEL_8:
      if (qword_254155788 != -1)
        swift_once();
      v34 = (void *)static NSNotificationName.showAllHealthRecordsCategories;
      v35 = objc_allocWithZone((Class)sub_231263370());
      v36 = v34;
      v37 = (void *)sub_231263364();
      sub_231178AD0(0, qword_255EB8C10);
      v38 = (void *)sub_231264444();
      objc_msgSend(v38, sel_addOperation_, v37);

      return ((uint64_t (*)(char *, uint64_t))v21)(v19, v10);
    }
    v61 = v4;
    v33 = sub_231264B58();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v21 = *(void (**)(char *, uint64_t))(v11 + 8);
    v21(v14, v10);
    if ((v33 & 1) != 0)
      goto LABEL_8;
    v60 = v3;
    sub_231262CC8();
    v59 = sub_231262CBC();
    sub_2312628A8();
    v39 = (void *)sub_231262884();
    result = sub_231263670();
    v40 = v66;
    if (v66)
    {
      v41 = sub_231173410(v65, v66);
      v58 = (uint64_t)&v58;
      v42 = *(_QWORD *)(v40 - 8);
      MEMORY[0x24BDAC7A8](v41);
      v44 = (char *)&v58 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v42 + 16))(v44);
      v45 = (void *)sub_23126376C();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v40);
      v46 = (void *)sub_231262890();

      sub_231173434((uint64_t)v65);
      v47 = (void *)v59;
      v48 = (void *)sub_231262CA4();

      if (v48)
      {
        sub_231178454((uint64_t)v62, (uint64_t)v65, (uint64_t (*)(_QWORD))sub_23117DD88);
        v49 = v66;
        if (v66)
        {
          v50 = sub_231173410(v65, v66);
          v51 = *(_QWORD *)(v49 - 8);
          MEMORY[0x24BDAC7A8](v50);
          v53 = (char *)&v58 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v51 + 16))(v53);
          v54 = sub_231264B40();
          (*(void (**)(char *, uint64_t))(v51 + 8))(v53, v49);
          sub_231173434((uint64_t)v65);
        }
        else
        {
          v54 = 0;
        }
        objc_msgSend(v2, sel_showViewController_sender_, v48, v54);

        swift_unknownObjectRelease();
      }
      else
      {
        sub_231263B2C();
        v55 = sub_231263B50();
        v56 = sub_2312643D8();
        if (os_log_type_enabled(v55, v56))
        {
          v57 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v57 = 0;
          _os_log_impl(&dword_23116F000, v55, v56, "Unable to create category view controller.", v57, 2u);
          MEMORY[0x2348D85EC](v57, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v61 + 8))(v9, v60);
      }
      return ((uint64_t (*)(char *, uint64_t))v21)(v19, v10);
    }
    __break(1u);
  }
  else
  {
    sub_231263B2C();
    v22 = v2;
    v23 = sub_231263B50();
    v24 = sub_2312643D8();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      v60 = v3;
      v27 = v26;
      v64 = v26;
      *(_DWORD *)v25 = 136446210;
      v62 = v25 + 4;
      sub_231263670();
      sub_231178454((uint64_t)v65, (uint64_t)v63, (uint64_t (*)(_QWORD))sub_2311BA2F0);
      sub_2311BA2F0();
      sub_231264B88();
      v28 = (id)HKSensitiveLogItem();
      v61 = v4;
      swift_unknownObjectRelease();
      sub_2312647B0();
      swift_unknownObjectRelease();
      v29 = sub_2312640CC();
      v31 = v30;
      sub_231178498((uint64_t)v65, (uint64_t (*)(_QWORD))sub_2311BA2F0);
      v65[0] = sub_2311CBDE4(v29, v31, &v64);
      sub_231264750();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23116F000, v23, v24, "Unable to present category room: %{public}s", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348D85EC](v27, -1, -1);
      MEMORY[0x2348D85EC](v25, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v7, v60);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    }
  }
  return result;
}

uint64_t sub_2311B9818(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;
  id v5;
  _OWORD v7[2];

  if (a3)
  {
    v4 = a1;
    swift_unknownObjectRetain();
    sub_2312647B0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v7, 0, sizeof(v7));
    v5 = a1;
  }
  sub_2311B9128((uint64_t)v7);

  return sub_231178498((uint64_t)v7, (uint64_t (*)(_QWORD))sub_23117DD88);
}

id sub_2311B988C(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  objc_super v11;

  *(_QWORD *)&v3[qword_2541558B8] = 0;
  v6 = qword_2541558C0;
  sub_231261C54();
  swift_allocObject();
  v7 = v3;
  *(_QWORD *)&v3[v6] = sub_231261C48();

  if (a2)
  {
    v8 = (void *)sub_23126406C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  v11.receiver = v7;
  v11.super_class = (Class)type metadata accessor for CategoryFeedItemViewController();
  v9 = objc_msgSendSuper2(&v11, sel_initWithNibName_bundle_, v8, a3);

  return v9;
}

id sub_2311B996C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  if (a3)
  {
    v5 = sub_23126409C();
    v7 = v6;
  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  v8 = a4;
  return sub_2311B988C(v5, v7, a4);
}

id sub_2311B99C8(char *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  id v6;
  char *v7;
  id v8;
  objc_super v10;

  *(_QWORD *)&a1[qword_2541558B8] = 0;
  v5 = qword_2541558C0;
  sub_231261C54();
  swift_allocObject();
  v6 = a3;
  v7 = a1;
  *(_QWORD *)&a1[v5] = sub_231261C48();

  v10.receiver = v7;
  v10.super_class = (Class)type metadata accessor for CategoryFeedItemViewController();
  v8 = objc_msgSendSuper2(&v10, sel_initWithCoder_, v6);

  return v8;
}

uint64_t sub_2311B9A74()
{
  swift_release();
  return swift_release();
}

id sub_2311B9AA0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CategoryFeedItemViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2311B9AD4()
{
  swift_release();
  return swift_release();
}

uint64_t sub_2311B9B0C()
{
  return type metadata accessor for CategoryFeedItemViewController();
}

uint64_t sub_2311B9B14(void *a1)
{
  return sub_2311BA158(a1);
}

uint64_t sub_2311B9B34@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = 1;
  v2 = *MEMORY[0x24BE435F8];
  v3 = sub_23126364C();
  return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_2311B9B80(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  void *v24;
  id v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t (*v41)(uint64_t);
  char v42;
  void (*v43)(char *, uint64_t);
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t);
  uint64_t v52[3];
  uint64_t v53;

  v50 = a4;
  v51 = a3;
  v46 = a2;
  v5 = sub_231262644();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BE48D18];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v45 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_231263B5C();
  v47 = *(_QWORD *)(v9 - 8);
  v48 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v49 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311BA8F0(0, &qword_254154888, &qword_254154880, v6);
  v12 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v45 - v13;
  sub_2311BA5F4();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (uint64_t *)((char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2311735E0(0, &qword_254154880, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v45 - v22;
  sub_231178454(a1, (uint64_t)v17, (uint64_t (*)(_QWORD))sub_2311BA5F4);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v35 = (uint64_t (*)(uint64_t))MEMORY[0x24BE48D18];
    sub_2311BA4EC((uint64_t)v17, (uint64_t)v23, &qword_254154880, (uint64_t (*)(uint64_t))MEMORY[0x24BE48D18]);
    v36 = v46 + *(_QWORD *)(*(_QWORD *)v46 + 112);
    swift_beginAccess();
    v37 = (uint64_t)&v14[*(int *)(v12 + 48)];
    sub_2311BA688(v36, (uint64_t)v14, &qword_254154880, v35);
    sub_2311BA688((uint64_t)v23, v37, &qword_254154880, v35);
    v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    if (v38((uint64_t)v14, 1, v5) == 1)
    {
      if (v38(v37, 1, v5) == 1)
      {
        sub_231189628((uint64_t)v14, &qword_254154880, (uint64_t (*)(uint64_t))MEMORY[0x24BE48D18]);
        v39 = 0;
LABEL_15:
        sub_231189628((uint64_t)v23, &qword_254154880, (uint64_t (*)(uint64_t))MEMORY[0x24BE48D18]);
        return v51(v39);
      }
    }
    else
    {
      sub_2311BA688((uint64_t)v14, (uint64_t)v21, &qword_254154880, (uint64_t (*)(uint64_t))MEMORY[0x24BE48D18]);
      if (v38(v37, 1, v5) != 1)
      {
        v40 = v45;
        (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v45, v37, v5);
        v41 = (uint64_t (*)(uint64_t))MEMORY[0x24BE48D18];
        sub_231172048(&qword_255EB8C00, (uint64_t (*)(uint64_t))MEMORY[0x24BE48D18], MEMORY[0x24BE48D28]);
        v42 = sub_231264060();
        v43 = *(void (**)(char *, uint64_t))(v7 + 8);
        v43(v40, v5);
        v43(v21, v5);
        sub_231189628((uint64_t)v14, &qword_254154880, v41);
        if ((v42 & 1) != 0)
        {
          v39 = 0;
          goto LABEL_15;
        }
LABEL_14:
        swift_beginAccess();
        sub_2311BA71C((uint64_t)v23, v36);
        swift_endAccess();
        v39 = 1;
        goto LABEL_15;
      }
      (*(void (**)(char *, uint64_t))(v7 + 8))(v21, v5);
    }
    sub_2311BA6E0((uint64_t)v14, &qword_254154888, &qword_254154880, (uint64_t (*)(uint64_t))MEMORY[0x24BE48D18]);
    goto LABEL_14;
  }
  v53 = *v17;
  v24 = (void *)v53;
  sub_2311787A8(0, qword_254155900);
  swift_willThrowTypedImpl();
  sub_231263AFC();
  v25 = v24;
  v26 = v24;
  v27 = sub_231263B50();
  v28 = sub_2312643D8();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = (uint8_t *)swift_slowAlloc();
    v30 = swift_slowAlloc();
    v52[0] = v30;
    *(_DWORD *)v29 = 136446210;
    v53 = (uint64_t)v24;
    v31 = v24;
    sub_231264B88();
    v32 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_2312647B0();
    swift_unknownObjectRelease();
    v33 = sub_2312640CC();
    v53 = sub_2311CBDE4(v33, v34, v52);
    sub_231264750();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23116F000, v27, v28, "Error fetching icon for BrowseItem: %{public}s", v29, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v30, -1, -1);
    MEMORY[0x2348D85EC](v29, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v47 + 8))(v49, v48);
  v39 = 0;
  return v51(v39);
}

uint64_t sub_2311BA158(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t result;
  uint64_t v12;
  void *v13;
  _QWORD v14[4];

  v3 = sub_2312627B8();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v14 - v8;
  v14[3] = sub_231178AD0(0, (unint64_t *)&qword_255EB8338);
  v14[0] = a1;
  v10 = a1;
  sub_2311B9128((uint64_t)v14);
  result = sub_231178498((uint64_t)v14, (uint64_t (*)(_QWORD))sub_23117DD88);
  v12 = *(_QWORD *)(v1 + qword_2541558B8);
  if (v12)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v12 + *(_QWORD *)(*(_QWORD *)v12 + 88), v3);
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v7, v3);
    sub_2312629EC();
    v13 = (void *)sub_2312629E0();
    sub_2312629C8();

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
  return result;
}

unint64_t sub_2311BA290()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254154870;
  if (!qword_254154870)
  {
    sub_2311735E0(255, &qword_254154878, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for BrowseItem);
    result = MEMORY[0x2348D8544](&unk_231269348, v1);
    atomic_store(result, (unint64_t *)&qword_254154870);
  }
  return result;
}

void sub_2311BA2F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541548B0)
  {
    sub_2311787A8(255, (unint64_t *)&qword_2541548A0);
    v0 = sub_231264738();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541548B0);
  }
}

unint64_t sub_2311BA354()
{
  unint64_t result;

  result = qword_255EB8BF8;
  if (!qword_255EB8BF8)
  {
    sub_2312627B8();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255EB8BF8);
  }
  return result;
}

uint64_t sub_2311BA38C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_2312627B8();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_231262674();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

void sub_2311BA448()
{
  sub_2312627B8();
  sub_231262674();
  sub_2311F1220();
}

uint64_t sub_2311BA4C4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2311BA4EC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;

  sub_2311735E0(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_2311BA544(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_2311735E0(0, (unint64_t *)&unk_2541557A0, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  return sub_2311B8158(a1, *(_QWORD *)(v1 + 16), v1 + ((v4 + 24) & ~v4));
}

uint64_t sub_2311BA59C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2311BA5C8(uint64_t a1)
{
  uint64_t v1;

  return sub_2311B9B80(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_2311BA5D4(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_2311BA5E4(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

void sub_2311BA5F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541548C8)
  {
    sub_2311735E0(255, &qword_254154880, (uint64_t (*)(uint64_t))MEMORY[0x24BE48D18], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    sub_2311787A8(255, qword_254155900);
    v0 = sub_231264C48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541548C8);
  }
}

uint64_t sub_2311BA688(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;

  sub_2311735E0(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_2311BA6E0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v5;

  sub_2311BA8F0(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_2311BA71C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2311735E0(0, &qword_254154880, (uint64_t (*)(uint64_t))MEMORY[0x24BE48D18], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_2311BA77C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_2311735E0(0, (unint64_t *)&unk_2541557A0, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 24) & ~v2;
  swift_release();
  v4 = sub_2312627B8();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v3, v4);
  return swift_deallocObject();
}

void sub_2311BA830()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_2311735E0(0, (unint64_t *)&unk_2541557A0, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  sub_2311B8404(*(_QWORD *)(v0 + 16), v0 + ((v2 + 24) & ~v2));
}

uint64_t sub_2311BA878(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2311BA888()
{
  return swift_release();
}

unint64_t sub_2311BA890()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254155680;
  if (!qword_254155680)
  {
    sub_2311735E0(255, (unint64_t *)&qword_254155670, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2348D8544](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_254155680);
  }
  return result;
}

void sub_2311BA8F0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v6;

  if (!*a2)
  {
    sub_2311735E0(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t sub_2311BA95C(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  _OWORD v19[5];
  uint64_t v20;

  v1 = result;
  v2 = 0;
  v16 = result + 56;
  v3 = 1 << *(_BYTE *)(result + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(result + 56);
  v17 = (unint64_t)(v3 + 63) >> 6;
  while (1)
  {
    if (v5)
    {
      v6 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v7 = v6 | (v2 << 6);
      goto LABEL_5;
    }
    v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v17)
      return swift_release();
    v14 = *(_QWORD *)(v16 + 8 * v13);
    ++v2;
    if (!v14)
    {
      v2 = v13 + 1;
      if (v13 + 1 >= v17)
        return swift_release();
      v14 = *(_QWORD *)(v16 + 8 * v2);
      if (!v14)
      {
        v2 = v13 + 2;
        if (v13 + 2 >= v17)
          return swift_release();
        v14 = *(_QWORD *)(v16 + 8 * v2);
        if (!v14)
        {
          v2 = v13 + 3;
          if (v13 + 3 >= v17)
            return swift_release();
          v14 = *(_QWORD *)(v16 + 8 * v2);
          if (!v14)
            break;
        }
      }
    }
LABEL_22:
    v5 = (v14 - 1) & v14;
    v7 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    v8 = *(_QWORD *)(v1 + 48) + 88 * v7;
    v9 = *(_OWORD *)(v8 + 16);
    v19[0] = *(_OWORD *)v8;
    v19[1] = v9;
    v11 = *(_OWORD *)(v8 + 48);
    v10 = *(_OWORD *)(v8 + 64);
    v12 = *(_QWORD *)(v8 + 80);
    v19[2] = *(_OWORD *)(v8 + 32);
    v20 = v12;
    v19[3] = v11;
    v19[4] = v10;
    sub_231188CC0((uint64_t)v19);
    sub_231251DD4(&v18, (uint64_t)v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v15 = v13 + 4;
  if (v15 >= v17)
    return swift_release();
  v14 = *(_QWORD *)(v16 + 8 * v15);
  if (v14)
  {
    v2 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v2 >= v17)
      return swift_release();
    v14 = *(_QWORD *)(v16 + 8 * v2);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_2311BAB64(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;

  v1 = result;
  v2 = 0;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v7)
      return swift_release();
    v14 = *(_QWORD *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      v2 = v13 + 1;
      if (v13 + 1 >= v7)
        return swift_release();
      v14 = *(_QWORD *)(v3 + 8 * v2);
      if (!v14)
      {
        v2 = v13 + 2;
        if (v13 + 2 >= v7)
          return swift_release();
        v14 = *(_QWORD *)(v3 + 8 * v2);
        if (!v14)
        {
          v2 = v13 + 3;
          if (v13 + 3 >= v7)
            return swift_release();
          v14 = *(_QWORD *)(v3 + 8 * v2);
          if (!v14)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v14 - 1) & v14;
    v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    v10 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v9);
    v11 = *v10;
    v12 = v10[1];
    swift_bridgeObjectRetain();
    sub_2312519E4(&v16, v11, v12);
    result = swift_bridgeObjectRelease();
  }
  v15 = v13 + 4;
  if (v15 >= v7)
    return swift_release();
  v14 = *(_QWORD *)(v3 + 8 * v15);
  if (v14)
  {
    v2 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v2 >= v7)
      return swift_release();
    v14 = *(_QWORD *)(v3 + 8 * v2);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_2311BACD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_2311C079C();
  v5 = v4;
  v22 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311C09D8(0, &qword_2541541B0, v8, sub_2311C0828, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB96B0]);
  v10 = v9;
  v23 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v22 - v11;
  v13 = sub_2311BAF60(a1, a2);
  v14 = (void *)objc_opt_self();
  swift_retain();
  v15 = objc_msgSend(v14, sel_sharedBehavior);
  if (!v15)
  {
    swift_release();
    __break(1u);
    goto LABEL_8;
  }
  v16 = v15;
  v17 = objc_msgSend(v15, sel_features);

  if (!v17)
  {
LABEL_8:
    result = swift_release();
    __break(1u);
    return result;
  }
  v18 = objc_msgSend(v17, sel_stanley);

  if ((v18 & 1) != 0)
  {
    v24 = sub_2311BB68C(a1, a2);
    v25 = v13;
    v19 = MEMORY[0x24BE47F58];
    sub_2311C094C(0, (unint64_t *)&qword_254152F38, (uint64_t)&qword_254155638, MEMORY[0x24BE47F58], (void (*)(uint64_t, uint64_t, uint64_t, uint64_t (*)(void)))sub_231171FD8);
    sub_231187E54();
    sub_231263E74();
    sub_231171FD8(0, (unint64_t *)&qword_254155638, v19, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    sub_2311C0828();
    sub_231263E80();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v5);
    sub_2311C0844();
    v20 = sub_231263E38();
    swift_release();
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v10);
    return v20;
  }
  else
  {
    swift_release();
  }
  return v13;
}

uint64_t sub_2311BAF60(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  char *v29;
  void *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t (*v43)(void);
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  void *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  __int128 v81;

  v64 = a2;
  v3 = type metadata accessor for HealthRecordsGeneratorContext();
  v65 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v66 = v4;
  v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_231261FA8();
  v62 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v61 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB98B8];
  sub_2311C08AC(0, &qword_254152D60, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB98B8]);
  v9 = v8;
  v68 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v67 = (char *)&v53 - v10;
  sub_2311C0D34();
  v71 = *(_QWORD *)(v11 - 8);
  v72 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v69 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311C09D8(0, &qword_254152D90, v13, sub_2311C0E5C, v7);
  v76 = v14;
  v74 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v73 = (char *)&v53 - v15;
  sub_2311C0E78();
  v77 = *(_QWORD *)(v16 - 8);
  v78 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v75 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_231261E94();
  v58 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_2312626E0();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23126220C();
  (*(void (**)(char *, _QWORD, uint64_t))(v21 + 104))(v23, *MEMORY[0x24BE48E10], v20);
  v24 = (void *)sub_231262230();
  v25 = (void *)sub_231261FF0();
  v26 = sub_2312626C8();
  v60 = v27;
  if (v25)
  {
    v79 = 0x656C69666F72505BLL;
    v80 = 0xE90000000000003ALL;
    v54 = v25;
    v56 = v26;
    v55 = v25;
    v28 = objc_msgSend(v55, sel_identifier);
    sub_231261E7C();

    sub_231261E58();
    v57 = v9;
    v29 = v19;
    v30 = v54;
    (*(void (**)(char *, uint64_t))(v58 + 8))(v29, v59);
    sub_231264144();
    v9 = v57;
    swift_bridgeObjectRelease();
    sub_231264144();

    v31 = v79;
    v32 = v80;
  }
  else
  {
    v32 = 0x800000023126B610;
    v31 = 0xD000000000000013;
    v30 = 0;
  }
  v79 = v31;
  v80 = v32;
  sub_231264144();

  swift_bridgeObjectRelease();
  v33 = v79;
  v34 = v80;
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  type metadata accessor for FeedItemContextChangeGenerator();
  v35 = swift_allocObject();
  sub_2311789AC(&v81, v35 + 16);
  *(_QWORD *)(v35 + 56) = v33;
  *(_QWORD *)(v35 + 64) = v34;
  v36 = v62;
  v37 = (uint64_t)v61;
  v38 = v63;
  (*(void (**)(char *, _QWORD, uint64_t))(v62 + 104))(v61, *MEMORY[0x24BE474C0], v63);
  v39 = sub_2311FC5D8(v37);
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v37, v38);
  *(_QWORD *)&v81 = v39;
  sub_231178454(a1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
  v40 = (*(unsigned __int8 *)(v65 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
  v41 = swift_allocObject();
  sub_2311B1454((uint64_t)v5, v41 + v40, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
  sub_2311C0928(0);
  sub_2311889BC(0);
  sub_2311C09BC();
  v42 = v67;
  sub_231263EBC();
  swift_release();
  swift_release();
  v43 = MEMORY[0x24BDB9AE0];
  sub_231188FDC(0, &qword_254152EF8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_2311C0E04();
  sub_231189178((unint64_t *)&qword_254152EF0, &qword_254152EF8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v43, MEMORY[0x24BDB9AF8]);
  v44 = v69;
  sub_231263E8C();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v42, v9);
  v45 = MEMORY[0x24BE47F58];
  sub_231171FD8(0, (unint64_t *)&qword_254155638, MEMORY[0x24BE47F58], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_2311C0E5C();
  swift_retain();
  v47 = v72;
  v46 = v73;
  sub_231263EBC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v44, v47);
  *(_QWORD *)(swift_allocObject() + 16) = v70;
  sub_2311C094C(0, (unint64_t *)&qword_254152F38, (uint64_t)&qword_254155638, v45, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t (*)(void)))sub_231171FD8);
  sub_2311C0F40();
  sub_231187E54();
  v49 = v75;
  v48 = v76;
  sub_231263E8C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v46, v48);
  sub_231172048(&qword_254152D28, (uint64_t (*)(uint64_t))sub_2311C0E78, MEMORY[0x24BDB9740]);
  v50 = v78;
  v51 = sub_231263E38();
  swift_release();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v49, v50);
  return v51;
}

uint64_t sub_2311BB68C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  _QWORD v50[2];
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62[2];
  uint64_t v63;

  v50[1] = a2;
  sub_2311885A8();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_231263B5C();
  v60 = *(_QWORD *)(v8 - 8);
  v61 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_231261FA8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311C08AC(0, &qword_254154170, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB96B0]);
  v52 = *(_QWORD *)(v15 - 8);
  v53 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v51 = (char *)v50 - v16;
  sub_2311C09D8(0, &qword_2541542F8, (uint64_t (*)(uint64_t))sub_2311C0928, sub_2311C09BC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB98B8]);
  v55 = *(_QWORD *)(v17 - 8);
  v56 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v54 = (char *)v50 - v18;
  sub_2311C0A70();
  v58 = *(_QWORD *)(v19 - 8);
  v59 = v19;
  MEMORY[0x24BDAC7A8](v19);
  v57 = (char *)v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (void *)sub_231262230();
  v22 = v21;
  if (v21)
  {
    v50[0] = v2;
    v23 = v21;
    if (objc_msgSend(v23, sel_type) == (id)1)
    {
      sub_23126220C();
      v24 = sub_2312640F0();
      v26 = v25;
      type metadata accessor for FeedItemContextChangeGenerator();
      v27 = swift_allocObject();
      sub_2311789AC(v62, v27 + 16);
      *(_QWORD *)(v27 + 56) = v24;
      *(_QWORD *)(v27 + 64) = v26;
      (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BE474B8], v11);
      v28 = sub_2311FC5D8((uint64_t)v14);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      *(_QWORD *)&v62[0] = v28;
      v29 = swift_allocObject();
      v30 = v50[0];
      *(_QWORD *)(v29 + 16) = v22;
      *(_QWORD *)(v29 + 24) = v30;
      sub_2311C0928(0);
      sub_2311889BC(0);
      sub_2311C09BC();
      v31 = v23;
      v32 = v51;
      sub_231263E80();
      swift_release();
      swift_release();
      v33 = MEMORY[0x24BE47F58];
      sub_231171FD8(0, (unint64_t *)&qword_254155638, MEMORY[0x24BE47F58], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
      swift_retain();
      v34 = v53;
      v35 = v54;
      sub_231263C10();
      swift_release();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v32, v34);
      *(_QWORD *)(swift_allocObject() + 16) = v30;
      sub_2311C094C(0, (unint64_t *)&qword_254152F38, (uint64_t)&qword_254155638, v33, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t (*)(void)))sub_231171FD8);
      sub_2311C0B38();
      sub_231187E54();
      v37 = v56;
      v36 = v57;
      sub_231263E8C();
      swift_release();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v35, v37);
      sub_231172048(&qword_254154210, (uint64_t (*)(uint64_t))sub_2311C0A70, MEMORY[0x24BDB9740]);
      v38 = v59;
      v39 = sub_231263E38();
      swift_release();

      (*(void (**)(char *, uint64_t))(v58 + 8))(v36, v38);
      return v39;
    }

  }
  sub_231263B08();
  v40 = v22;
  v41 = sub_231263B50();
  v42 = sub_2312643D8();
  if (os_log_type_enabled(v41, v42))
  {
    v43 = swift_slowAlloc();
    v58 = swift_slowAlloc();
    *(_QWORD *)&v62[0] = v58;
    *(_DWORD *)v43 = 136446466;
    v57 = (char *)(v43 + 4);
    v63 = sub_2311C0BA0(0);
    sub_23118852C(0, &qword_255EB8C30, (void (*)(uint64_t))sub_2311C0BA0);
    v59 = v4;
    v44 = sub_2312640B4();
    v63 = sub_2311CBDE4(v44, v45, (uint64_t *)v62);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v43 + 12) = 2082;
    v46 = sub_231261FFC();
    v63 = sub_2311CBDE4(v46, v47, (uint64_t *)v62);
    v4 = v59;
    sub_231264750();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23116F000, v41, v42, "[%{public}s] Sidebar feed item is not supported for non-primary profile: %{public}s", (uint8_t *)v43, 0x16u);
    v48 = v58;
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v48, -1, -1);
    MEMORY[0x2348D85EC](v43, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v60 + 8))(v10, v61);
  *(_QWORD *)&v62[0] = MEMORY[0x24BEE4AF8];
  sub_231171FD8(0, (unint64_t *)&qword_254155638, MEMORY[0x24BE47F58], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_231263D84();
  sub_231172048((unint64_t *)&qword_254153048, (uint64_t (*)(uint64_t))sub_2311885A8, MEMORY[0x24BDB9DF8]);
  v39 = sub_231263E38();

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v39;
}

uint64_t sub_2311BBD28(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = sub_231263B5C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231263B38();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v6 = sub_231263B50();
  v7 = sub_2312643CC();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v25 = v3;
    v9 = v8;
    v23 = swift_slowAlloc();
    v27 = v23;
    *(_DWORD *)v9 = 136446466;
    v10 = swift_bridgeObjectRetain();
    v11 = MEMORY[0x24BE47F58];
    v12 = MEMORY[0x2348D7608](v10, MEMORY[0x24BE47F58]);
    v24 = v2;
    v14 = v13;
    swift_bridgeObjectRelease();
    v26 = sub_2311CBDE4(v12, v14, &v27);
    sub_231264750();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2082;
    v15 = swift_bridgeObjectRetain();
    v16 = MEMORY[0x2348D7608](v15, v11);
    v18 = v17;
    swift_bridgeObjectRelease();
    v26 = sub_2311CBDE4(v16, v18, &v27);
    sub_231264750();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23116F000, v6, v7, "Categories: %{public}s, Sidebars: %{public}s", (uint8_t *)v9, 0x16u);
    v19 = v23;
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v19, -1, -1);
    MEMORY[0x2348D85EC](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v24);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  v27 = a1;
  swift_bridgeObjectRetain();
  v20 = swift_bridgeObjectRetain();
  sub_231210C9C(v20);
  return v27;
}

uint64_t sub_2311BBFB8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_2311BBD28(*a1);
  *a2 = result;
  return result;
}

void sub_2311BBFE4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v5;
  uint64_t v6;

  v5 = (void *)sub_231262230();
  sub_2311BC06C(a1, v5, a2);

  if (!v2)
  {
    v6 = sub_23126217C();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a2, 0, 1, v6);
  }
}

uint64_t sub_2311BC06C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v17;
  uint64_t v18;
  void (*v19)(char *, _QWORD);
  uint64_t v20;
  char *v21;
  int v22;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void (*v31)(char *, uint64_t, uint64_t);
  id v32;
  char *v33;
  char v34[32];
  uint64_t v35;

  v7 = sub_231261FA8();
  v28 = *(_QWORD *)(v7 - 8);
  v29 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v30 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2312627B8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v33 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v25 - v13;
  sub_231261C78();
  swift_allocObject();
  v15 = sub_231261C6C();
  v31 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v31(v14, a1, v9);
  v32 = a2;
  v27 = sub_2311B3000(a1);
  sub_231172048(&qword_254155518, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28], MEMORY[0x24BE48F38]);
  sub_231261C60();
  if (v3)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    v25[0] = 0;
    v25[1] = v15;
    type metadata accessor for CategoryFeedItemViewController();
    v26 = v10;
    v35 = a3;
    (*(void (**)(char *, _QWORD, uint64_t))(v28 + 104))(v30, *MEMORY[0x24BE474C0], v29);
    v17 = v32;
    sub_231262038();
    v18 = sub_2311BFBB0(a1);
    v19 = (void (*)(char *, _QWORD))sub_23126214C();
    sub_2311BAB64(v18);
    v19(v34, 0);
    v20 = v26;
    sub_231262728();
    sub_2312620BC();
    sub_2311C10EC(a1);
    sub_231262164();
    sub_2311C135C(a1);
    sub_2312620EC();
    v21 = v33;
    v31(v33, a1, v9);
    v22 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v21, v9);
    if (v22 != *MEMORY[0x24BE48F00] && v22 != *MEMORY[0x24BE48E80] && v22 != *MEMORY[0x24BE48EC8])
      (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v9);
    sub_2312620B0();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v14, v9);
  }
}

uint64_t sub_2311BC36C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint8_t *v22;
  id v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t result;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_2311735E0(0, &qword_254153040, (uint64_t (*)(uint64_t))sub_2311889BC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v5 = v4;
  v39 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v31 - v6;
  sub_231188FDC(0, &qword_254153250, MEMORY[0x24BDBA1B0]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v31 - v11;
  v13 = sub_231263B5C();
  v37 = *(_QWORD *)(v13 - 8);
  v38 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a1;
  sub_231263B08();
  v17 = v16;
  v18 = v16;
  v19 = sub_231263B50();
  v20 = sub_2312643D8();
  if (os_log_type_enabled(v19, v20))
  {
    v36 = a2;
    v21 = swift_slowAlloc();
    v35 = v9;
    v22 = (uint8_t *)v21;
    v32 = swift_slowAlloc();
    v41 = v32;
    v33 = v10;
    *(_DWORD *)v22 = 136446210;
    v31 = v22 + 4;
    v40 = (uint64_t)v16;
    v23 = v16;
    sub_2311889D8();
    sub_231264B88();
    v34 = v5;
    v24 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_2312647B0();
    swift_unknownObjectRelease();
    v25 = sub_2312640CC();
    v40 = sub_2311CBDE4(v25, v26, &v41);
    v10 = v33;
    sub_231264750();
    v5 = v34;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23116F000, v19, v20, "Error making feed item for category, hiding from UI: %{public}s", v22, 0xCu);
    v27 = v32;
    a2 = v36;
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v27, -1, -1);
    v28 = v22;
    v9 = v35;
    MEMORY[0x2348D85EC](v28, -1, -1);
  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v38);
  v40 = MEMORY[0x24BEE4AF8];
  sub_2311889BC(0);
  sub_231263D84();
  sub_2311889D8();
  sub_231263D54();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v7, v5);
  sub_231189178((unint64_t *)&qword_254153248, &qword_254153250, MEMORY[0x24BDBA1B0], MEMORY[0x24BDBA1D0]);
  v29 = sub_231263E38();
  result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  *a2 = v29;
  return result;
}

uint64_t sub_2311BC6EC@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  char v14;
  id v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v8 = sub_2312627B8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BE48E98], v8);
  sub_231232DEC((uint64_t)v11, v12);
  v14 = (v13 & 1) == 0;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v19 = MEMORY[0x24BEE4B08];
  v15 = a2;
  v16 = sub_2311C01FC(v12, v14, a2, (uint64_t)&v19, a3);

  *a4 = v16;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2311BC7F4@<X0>(uint64_t a1@<X0>, int a2@<W1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char *v27;
  NSObject *v28;
  os_log_type_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  os_log_t v41;
  uint64_t v43;
  os_log_t v44;
  int v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51[4];
  uint64_t v52;

  v49 = a4;
  v50 = a5;
  v9 = sub_231263B5C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, &qword_2541554F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v43 - v17;
  sub_2311BCC38(a1, a2, a3, (char *)&v43 - v17);
  sub_2311C0C10((uint64_t)v18, (uint64_t)v16);
  v19 = sub_23126217C();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v16, 1, v19) == 1)
  {
    sub_231189628((uint64_t)v16, &qword_2541554F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0]);
    return sub_2311C0C6C((uint64_t)v18, v50);
  }
  v47 = v9;
  v48 = v5;
  v21 = v20;
  v22 = sub_2312620D4();
  v24 = v23;
  (*(void (**)(char *, uint64_t))(v21 + 8))(v16, v19);
  v25 = *(_QWORD *)v49;
  swift_bridgeObjectRetain();
  v26 = sub_2311BDF0C(v22, v24, v25);
  swift_bridgeObjectRelease();
  if ((v26 & 1) == 0)
  {
    sub_2312519E4(v51, v22, v24);
    swift_bridgeObjectRelease();
    return sub_2311C0C6C((uint64_t)v18, v50);
  }
  v49 = v21;
  v27 = v12;
  sub_231263B08();
  swift_bridgeObjectRetain();
  v28 = sub_231263B50();
  v29 = sub_2312643D8();
  v30 = v29;
  v31 = v10;
  if (os_log_type_enabled(v28, v29))
  {
    v32 = swift_slowAlloc();
    v45 = v30;
    v33 = v32;
    v34 = swift_slowAlloc();
    v52 = v34;
    *(_DWORD *)v33 = 136446466;
    v46 = v27;
    v44 = v28;
    v51[0] = sub_2311C0BA0(0);
    sub_23118852C(0, &qword_255EB8C30, (void (*)(uint64_t))sub_2311C0BA0);
    v35 = sub_2312640B4();
    v51[0] = sub_2311CBDE4(v35, v36, &v52);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2082;
    v43 = v33 + 14;
    v51[0] = v22;
    v51[1] = v24;
    swift_bridgeObjectRetain_n();
    sub_231264B88();
    v37 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_2312647B0();
    swift_unknownObjectRelease();
    v38 = sub_2312640B4();
    v40 = v39;
    swift_bridgeObjectRelease();
    v51[0] = sub_2311CBDE4(v38, v40, &v52);
    sub_231264750();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v41 = v44;
    _os_log_impl(&dword_23116F000, v44, (os_log_type_t)v45, "[%{public}s] Duplicated unique identifier for sidebar item found: %{public}s", (uint8_t *)v33, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v34, -1, -1);
    MEMORY[0x2348D85EC](v33, -1, -1);

    (*(void (**)(char *, uint64_t))(v31 + 8))(v46, v47);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    (*(void (**)(char *, uint64_t))(v10 + 8))(v27, v47);
  }
  sub_231189628((uint64_t)v18, &qword_2541554F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0]);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 56))(v50, 1, 1, v19);
}

uint64_t sub_2311BCC38@<X0>(uint64_t a1@<X0>, int a2@<W1>, void *a3@<X2>, char *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  void (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  id v56;
  NSObject *v57;
  os_log_type_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(char *, uint64_t);
  int v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  char *v72;
  void *v73;
  char *v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t, char *);
  char v79;
  void (*v80)(char *, char *);
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  unint64_t v87;
  char *v88;
  void (*v89)(uint64_t, uint64_t, char *);
  int v90;
  uint64_t v91;
  uint64_t v92;
  char **v93;
  uint64_t v94;
  void (*v95)(char *, char *, uint64_t);
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(uint64_t *, _QWORD);
  uint64_t (*v114)(char *, uint64_t);
  unint64_t v115;
  void (*v116)(uint64_t, uint64_t, uint64_t);
  uint64_t v117;
  char *v118;
  id v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  int v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char **v128;
  char *v129;
  void *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  char *v135;
  char *v136;
  char *v137;
  char *v138;
  char *v139;
  _QWORD *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154[2];

  v123 = a2;
  v144 = a1;
  v150 = a4;
  v5 = sub_231263B5C();
  v147 = *(_QWORD *)(v5 - 8);
  v148 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v145 = (char *)&v114 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v114 - v8;
  v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2311735E0(0, &qword_254153C10, type metadata accessor for AccountSidebarContentConfigurationModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v11);
  v126 = (uint64_t)&v114 - v12;
  v122 = type metadata accessor for AccountSidebarContentConfigurationModel(0);
  v125 = *(_QWORD *)(v122 - 8);
  MEMORY[0x24BDAC7A8](v122);
  v128 = (char **)((char *)&v114 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2311735E0(0, &qword_254153F10, (uint64_t (*)(uint64_t))MEMORY[0x24BE41368], v10);
  MEMORY[0x24BDAC7A8](v14);
  v135 = (char *)&v114 - v15;
  v16 = sub_231263328();
  MEMORY[0x24BDAC7A8](v16);
  v134 = (char *)&v114 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = sub_2312636AC();
  v131 = *(_QWORD *)(v132 - 8);
  MEMORY[0x24BDAC7A8](v132);
  v137 = (char *)&v114 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_231263460();
  v20 = *(_QWORD *)(v19 - 8);
  v141 = v19;
  v142 = v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v114 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v21);
  v136 = (char *)&v114 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v127 = (char *)&v114 - v26;
  v27 = sub_2312627B8();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v143 = (char *)&v114 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v121 = (char *)&v114 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v138 = (char *)&v114 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v139 = (char *)&v114 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v38 = (char *)&v114 - v37;
  v140 = (_QWORD *)sub_23126292C();
  v39 = *(v140 - 1);
  MEMORY[0x24BDAC7A8](v140);
  v41 = (char *)&v114 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = sub_23126217C();
  v151 = *(_QWORD *)(v149 - 8);
  v42 = MEMORY[0x24BDAC7A8](v149);
  v124 = (char *)&v114 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = MEMORY[0x24BDAC7A8](v42);
  v133 = (char *)&v114 - v45;
  v46 = MEMORY[0x24BDAC7A8](v44);
  v48 = (char *)&v114 - v47;
  MEMORY[0x24BDAC7A8](v46);
  v129 = (char *)&v114 - v49;
  v50 = type metadata accessor for HealthRecordsSidebarActionHandlerData(0);
  MEMORY[0x24BDAC7A8](v50);
  v146 = (uint64_t)&v114 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    v130 = a3;
    v52 = a3;
    if (objc_msgSend(v52, sel_type) == (id)1)
    {
      v118 = v23;
      v119 = v52;
      v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16);
      v120 = v28;
      v54 = v27;
      v55 = v144;
      v53(v146, v144, v54);
      sub_231261C78();
      swift_allocObject();
      sub_231261C6C();
      sub_231172048(&qword_254153578, type metadata accessor for HealthRecordsSidebarActionHandlerData, (uint64_t)&unk_231267BA0);
      v117 = sub_231261C60();
      v115 = v65;
      swift_release();
      v116 = v53;
      v53((uint64_t)v38, v55, v54);
      v66 = v120;
      v67 = *(uint64_t (**)(char *, uint64_t))(v120 + 88);
      v68 = v67(v38, v54);
      v69 = v55;
      if (v68 == *MEMORY[0x24BE48E88])
      {
        v114 = v67;
        (*(void (**)(char *, uint64_t))(v66 + 96))(v38, v54);
        v70 = v140;
        (*(void (**)(char *, char *, _QWORD *))(v39 + 32))(v41, v38, v140);
        v71 = sub_2312628F0();
        v72 = (char *)v54;
        if (v71)
        {
          v73 = (void *)v71;
          type metadata accessor for HealthRecordsSidebarActionHandler(0);
          v74 = v127;
          (*(void (**)(char *, _QWORD, uint64_t))(v142 + 104))(v127, *MEMORY[0x24BE42830], v141);
          v75 = v115;
          sub_2311C0CF0(v117, v115);
          sub_231172048(&qword_254153520, type metadata accessor for HealthRecordsSidebarActionHandler, (uint64_t)&unk_231267AB0);
          sub_231262044();
          v94 = v117;
          sub_2311807A0(v117, v75);

          (*(void (**)(char *, uint64_t))(v142 + 8))(v74, v141);
          (*(void (**)(char *, _QWORD *))(v39 + 8))(v41, v140);
          v95 = *(void (**)(char *, char *, uint64_t))(v151 + 32);
          v96 = v129;
          v97 = v129;
          v98 = v48;
          v99 = v94;
LABEL_31:
          v108 = v149;
          v95(v97, v98, v149);
          v87 = v75;
          v107 = v150;
          goto LABEL_32;
        }
        (*(void (**)(char *, _QWORD *))(v39 + 8))(v41, v70);
        v66 = v120;
        v67 = v114;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v66 + 8))(v38, v54);
        v72 = (char *)v54;
      }
      v76 = v139;
      (*(void (**)(char *, _QWORD, char *))(v66 + 104))(v139, *MEMORY[0x24BE48E98], v72);
      sub_231172048(&qword_254153F00, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28], MEMORY[0x24BE48F50]);
      v77 = v66;
      sub_2312641D4();
      sub_2312641D4();
      if (v154[0] == v152 && v154[1] == v153)
      {
        swift_bridgeObjectRelease_n();
        v140 = *(_QWORD **)(v66 + 8);
        ((void (*)(char *, char *))v140)(v76, v72);
        v78 = (void (*)(char *, uint64_t, char *))v116;
LABEL_19:
        v81 = v138;
        v78(v138, v69, v72);
        sub_231262728();
        sub_2311DF2CC();
        v82 = sub_2312632F8();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56))(v135, 1, 1, v82);
        v83 = v137;
        sub_2312636A0();
        ((void (*)(char *, char *))v140)(v81, v72);
        sub_23126277C();
        v84 = v141;
        v85 = v136;
        (*(void (**)(char *, _QWORD, uint64_t))(v142 + 104))(v136, *MEMORY[0x24BE42830], v141);
        v86 = v133;
        sub_23126205C();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v142 + 8))(v85, v84);
        (*(void (**)(char *, uint64_t))(v131 + 8))(v83, v132);
        v95 = *(void (**)(char *, char *, uint64_t))(v151 + 32);
        v96 = v129;
        v108 = v149;
        v95(v129, v86, v149);
        v107 = v150;
        v87 = v115;
        v99 = v117;
LABEL_32:
        v111 = v144;
        v112 = sub_2311BFBB0(v144);
        v113 = (void (*)(uint64_t *, _QWORD))sub_23126214C();
        sub_2311BAB64(v112);
        v113(v154, 0);
        sub_231262728();
        sub_2312620BC();
        sub_2311BFF70(v111);
        sub_231262164();

        sub_2311807A0(v99, v87);
        sub_231178498(v146, type metadata accessor for HealthRecordsSidebarActionHandlerData);
        v95(v107, v96, v108);
        v106 = 0;
        return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v151 + 56))(v107, v106, 1, v108);
      }
      v79 = sub_231264B58();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v80 = *(void (**)(char *, char *))(v66 + 8);
      v80(v76, v72);
      if ((v79 & 1) != 0)
      {
        v78 = (void (*)(char *, uint64_t, char *))v116;
        v140 = v80;
        goto LABEL_19;
      }
      if ((v123 & 1) != 0)
      {
        v88 = v121;
        v89 = (void (*)(uint64_t, uint64_t, char *))v116;
        v116((uint64_t)v121, v69, (uint64_t)v72);
        v90 = v67(v88, (uint64_t)v72);
        if (v90 != *MEMORY[0x24BE48F10])
        {
          v93 = v128;
          v101 = (uint64_t)v138;
          if (v90 == *MEMORY[0x24BE48EC8])
          {
            v92 = 2;
          }
          else
          {
            v80(v88, v72);
            v92 = 0;
          }
          v100 = v122;
          goto LABEL_29;
        }
        (*(void (**)(char *, char *))(v77 + 96))(v88, v72);
        sub_2311B3310();
        swift_bridgeObjectRelease();
        v91 = sub_231261E94();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v91 - 8) + 8))(v88, v91);
        v92 = 2;
        v93 = v128;
      }
      else
      {
        v92 = 0;
        v93 = v128;
        v89 = (void (*)(uint64_t, uint64_t, char *))v116;
      }
      v100 = v122;
      v101 = (uint64_t)v138;
LABEL_29:
      v138 = v72;
      v89(v101, v69, v72);
      AccountSidebarContentConfigurationModel.init(browseCategory:indentationLevel:)(v101, v92, (uint64_t)v93);
      v140 = (_QWORD *)type metadata accessor for AccountSidebarContentConfigurationProvider(0);
      v102 = v126;
      sub_231178454((uint64_t)v93, v126, type metadata accessor for AccountSidebarContentConfigurationModel);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v125 + 56))(v102, 0, 1, v100);
      v139 = *v93;
      type metadata accessor for HealthRecordsSidebarActionHandler(0);
      v103 = v117;
      v75 = v115;
      sub_2311C0CF0(v117, v115);
      swift_bridgeObjectRetain();
      sub_23126277C();
      v104 = v118;
      (*(void (**)(char *, _QWORD, uint64_t))(v142 + 104))(v118, *MEMORY[0x24BE42830], v141);
      sub_231172048(&qword_254153D98, type metadata accessor for AccountSidebarContentConfigurationProvider, (uint64_t)&protocol conformance descriptor for AccountSidebarContentConfigurationProvider);
      sub_231172048(&qword_254153520, type metadata accessor for HealthRecordsSidebarActionHandler, (uint64_t)&unk_231267AB0);
      v105 = v124;
      sub_231262050();
      swift_bridgeObjectRelease();
      sub_2311807A0(v103, v75);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v142 + 8))(v104, v141);
      v110 = v102;
      v99 = v103;
      sub_231189628(v110, &qword_254153C10, type metadata accessor for AccountSidebarContentConfigurationModel);
      sub_231178498((uint64_t)v128, type metadata accessor for AccountSidebarContentConfigurationModel);
      v95 = *(void (**)(char *, char *, uint64_t))(v151 + 32);
      v96 = v129;
      v97 = v129;
      v98 = v105;
      goto LABEL_31;
    }

    a3 = v130;
  }
  sub_231263B08();
  v56 = a3;
  v57 = sub_231263B50();
  v58 = sub_2312643D8();
  if (os_log_type_enabled(v57, v58))
  {
    v59 = swift_slowAlloc();
    v60 = swift_slowAlloc();
    v154[0] = v60;
    *(_DWORD *)v59 = 136446466;
    v152 = sub_2311C0CDC(0);
    sub_23118852C(0, &qword_255EB8C40, (void (*)(uint64_t))sub_2311C0CDC);
    v61 = sub_2312640B4();
    v152 = sub_2311CBDE4(v61, v62, v154);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v59 + 12) = 2082;
    v63 = sub_231261FFC();
    v152 = sub_2311CBDE4(v63, v64, v154);
    sub_231264750();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23116F000, v57, v58, "[%{public}s] Sidebar feed item is not supported for non-primary profile: %{public}s", (uint8_t *)v59, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v60, -1, -1);
    MEMORY[0x2348D85EC](v59, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v147 + 8))(v9, v148);
  v106 = 1;
  v108 = v149;
  v107 = v150;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v151 + 56))(v107, v106, 1, v108);
}

uint64_t sub_2311BDF0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_231264C00();
    sub_231264114();
    v6 = sub_231264C3C();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_231264B58() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_231264B58() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_2311BE040@<X0>(void **a1@<X0>, const char *a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v37 = a2;
  sub_2311885A8();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_231263B5C();
  v38 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  sub_231263B08();
  v14 = v13;
  v15 = v13;
  v16 = sub_231263B50();
  v17 = sub_2312643D8();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v34 = v10;
    v19 = v18;
    v33 = swift_slowAlloc();
    v40 = v33;
    *(_DWORD *)v19 = 136446466;
    v35 = v7;
    v39 = sub_2311C0BA0(0);
    sub_23118852C(0, &qword_255EB8C30, (void (*)(uint64_t))sub_2311C0BA0);
    v20 = sub_2312640B4();
    v36 = a3;
    v39 = sub_2311CBDE4(v20, v21, &v40);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2082;
    v32 = v19 + 14;
    v39 = (uint64_t)v13;
    v22 = v13;
    v23 = v13;
    sub_2311889D8();
    sub_231264B88();
    v24 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_2312647B0();
    swift_unknownObjectRelease();
    v25 = sub_2312640B4();
    v27 = v26;

    v28 = v25;
    v7 = v35;
    v39 = sub_2311CBDE4(v28, v27, &v40);
    sub_231264750();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23116F000, v16, v17, v37, (uint8_t *)v19, 0x16u);
    v29 = v33;
    a3 = v36;
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v29, -1, -1);
    MEMORY[0x2348D85EC](v19, -1, -1);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v34);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v10);
  }
  v39 = MEMORY[0x24BEE4AF8];
  sub_231171FD8(0, (unint64_t *)&qword_254155638, MEMORY[0x24BE47F58], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_231263D84();
  sub_231172048((unint64_t *)&qword_254153048, (uint64_t (*)(uint64_t))sub_2311885A8, MEMORY[0x24BDB9DF8]);
  v30 = sub_231263E38();
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *a3 = v30;
  return result;
}

uint64_t sub_2311BE3CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC13HealthRecords17CategoryGenerator_domain;
  v2 = sub_2312621F4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_231178498(v0 + OBJC_IVAR____TtC13HealthRecords17CategoryGenerator_context, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
  return swift_deallocClassInstance();
}

uint64_t sub_2311BE43C()
{
  return type metadata accessor for CategoryGenerator(0);
}

uint64_t type metadata accessor for CategoryGenerator(uint64_t a1)
{
  return sub_231187940(a1, (uint64_t *)&unk_254154C90);
}

uint64_t type metadata accessor for HealthRecordsSidebarActionHandler(uint64_t a1)
{
  return sub_231187940(a1, qword_254153528);
}

uint64_t sub_2311BE46C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2311BE4A8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC13HealthRecords17CategoryGenerator_domain;
  v4 = sub_2312621F4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_2311BE4F0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;

  v18 = a2;
  v20 = sub_2312627B8();
  v4 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v21 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311C186C(0, &qword_255EB8C80, MEMORY[0x24BEE33E0]);
  v19 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v17 - v8;
  v10 = type metadata accessor for HealthRecordsSidebarActionHandlerData(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231173410(a1, a1[3]);
  sub_2311C1828();
  sub_231264C54();
  if (!v2)
  {
    v13 = (uint64_t)v12;
    sub_231172048((unint64_t *)&unk_254154890, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28], MEMORY[0x24BE48F58]);
    v15 = v19;
    v14 = v20;
    sub_231264A80();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v15);
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v13, v21, v14);
    sub_2311B1454(v13, v18, type metadata accessor for HealthRecordsSidebarActionHandlerData);
  }
  return sub_231173434((uint64_t)a1);
}

uint64_t sub_2311BE6D8()
{
  sub_231264C00();
  sub_231264C0C();
  return sub_231264C3C();
}

uint64_t sub_2311BE718()
{
  return sub_231264C0C();
}

uint64_t sub_2311BE73C()
{
  sub_231264C00();
  sub_231264C0C();
  return sub_231264C3C();
}

uint64_t sub_2311BE778()
{
  return 0x79726F6765746163;
}

uint64_t sub_2311BE790@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x79726F6765746163 && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_231264B58();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2311BE824()
{
  sub_2311C1828();
  return sub_231264C6C();
}

uint64_t sub_2311BE84C()
{
  sub_2311C1828();
  return sub_231264C78();
}

uint64_t sub_2311BE874@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2311BE4F0(a1, a2);
}

uint64_t sub_2311BE888(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_2311C186C(0, &qword_254154650, MEMORY[0x24BEE3520]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v8 - v5;
  sub_231173410(a1, a1[3]);
  sub_2311C1828();
  sub_231264C60();
  sub_2312627B8();
  sub_231172048(&qword_254155518, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28], MEMORY[0x24BE48F38]);
  sub_231264AF8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_2311BE9A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  unint64_t v32;
  unint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void *v41;
  void *v42;
  char *v43;
  void *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, _QWORD, uint64_t);
  uint64_t v49;
  char v50;
  char *v51;
  NSObject *v52;
  uint64_t v53;
  uint8_t *v54;
  void (*v55)(char *, uint64_t);
  char *v56;
  char *v57;
  void (*v58)(char *, char *, uint64_t);
  char *v59;
  void (*v60)(char *, _QWORD, uint64_t);
  void *v61;
  unint64_t v62;
  char *v63;
  void *v64;
  char v65;
  char *v66;
  char v67;
  uint64_t v68;
  char *v69;
  void *v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t, uint64_t);
  unint64_t v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;

  v1 = sub_231263B5C();
  v87 = *(_QWORD *)(v1 - 8);
  v88 = (void *)v1;
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v77 = (char *)&v71 - v5;
  v81 = sub_2312627B8();
  v84 = *(_QWORD *)(v81 - 8);
  v6 = MEMORY[0x24BDAC7A8](v81);
  v76 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v79 = (char *)&v71 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v78 = (char *)&v71 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v80 = (char *)&v71 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v71 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v86 = (char *)&v71 - v17;
  sub_2311735E0(0, &qword_255EB8C48, type metadata accessor for HealthRecordsSidebarActionHandlerData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v71 - v19;
  v21 = type metadata accessor for HealthRecordsSidebarActionHandlerData(0);
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v85 = (uint64_t)&v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_231263868();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v82 = (char *)&v71 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)&v71 - v28;
  v83 = v0;
  sub_231263724();
  v30 = sub_231263850();
  v31 = *(void (**)(char *, uint64_t))(v25 + 8);
  v33 = v32;
  v31(v29, v24);
  if (v33 >> 60 != 15)
  {
    v75 = v31;
    sub_231261C54();
    swift_allocObject();
    sub_231261C48();
    sub_231172048(qword_255EB8C50, type metadata accessor for HealthRecordsSidebarActionHandlerData, (uint64_t)&unk_231267B78);
    sub_231261C3C();
    v73 = v33;
    v74 = v30;
    swift_release();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v21);
    v38 = v85;
    sub_2311B1454((uint64_t)v20, v85, type metadata accessor for HealthRecordsSidebarActionHandlerData);
    v39 = v86;
    v40 = v81;
    v72 = *(void (**)(char *, uint64_t, uint64_t))(v84 + 16);
    v72(v86, v38, v81);
    sub_231262CC8();
    v41 = (void *)sub_231262CBC();
    sub_2312628A8();
    v42 = (void *)sub_231262884();
    v43 = v82;
    sub_231263724();
    sub_231263844();
    v75(v43, v24);
    v44 = (void *)sub_231263520();
    swift_release();
    v45 = (void *)sub_231262890();

    v46 = sub_231262CA4();
    if (!v46)
    {
      v51 = v77;
      sub_231263B2C();
      v52 = sub_231263B50();
      v53 = sub_2312643D8();
      if (os_log_type_enabled(v52, (os_log_type_t)v53))
      {
        v54 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v54 = 0;
        _os_log_impl(&dword_23116F000, v52, (os_log_type_t)v53, "Unable to create category view controller.", v54, 2u);
        MEMORY[0x2348D85EC](v54, -1, -1);
      }
      sub_23118078C(v74, v73);

      (*(void (**)(char *, void *))(v87 + 8))(v51, v88);
      (*(void (**)(char *, uint64_t))(v84 + 8))(v39, v81);
      return sub_231178498(v85, type metadata accessor for HealthRecordsSidebarActionHandlerData);
    }
    v88 = (void *)v46;
    v47 = v84;
    v48 = *(void (**)(char *, _QWORD, uint64_t))(v84 + 104);
    v48(v16, *MEMORY[0x24BE48E80], v40);
    sub_231172048(&qword_254153F00, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28], MEMORY[0x24BE48F50]);
    sub_2312641D4();
    sub_2312641D4();
    v49 = v40;
    if (v91 == v89 && v92 == v90)
      v50 = 1;
    else
      v50 = sub_231264B58();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v55 = *(void (**)(char *, uint64_t))(v47 + 8);
    v55(v16, v49);
    v56 = v80;
    v57 = v86;
    v58 = (void (*)(char *, char *, uint64_t))v72;
    v72(v80, (uint64_t)v86, v49);
    v59 = v79;
    if ((v50 & 1) == 0)
    {
      v60 = v48;
      v48(v78, *MEMORY[0x24BE48EC8], v49);
      sub_2312641D4();
      sub_2312641D4();
      if (v91 != v89 || v92 != v90)
      {
        v65 = sub_231264B58();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v55(v78, v49);
        v55(v80, v49);
        v72(v59, (uint64_t)v86, v49);
        v61 = v88;
        if ((v65 & 1) == 0)
        {
          v66 = v76;
          v60(v76, *MEMORY[0x24BE48F00], v49);
          sub_2312641D4();
          sub_2312641D4();
          if (v91 != v89 || v92 != v90)
          {
            v67 = sub_231264B58();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v55(v66, v49);
            v55(v59, v49);
            v62 = v73;
            if ((v67 & 1) == 0)
            {
              v69 = v82;
              v68 = v83;
              sub_231263724();
              v70 = (void *)sub_23126385C();
              v75(v69, v24);
              objc_msgSend(v70, sel_showDetailViewController_sender_, v61, v68);
              sub_23118078C(v74, v62);

              goto LABEL_22;
            }
LABEL_21:
            v63 = v82;
            sub_231263724();
            v64 = (void *)sub_23126385C();
            v75(v63, v24);
            objc_msgSend(v64, sel_presentViewController_animated_completion_, v61, 1, 0);
            sub_23118078C(v74, v62);

LABEL_22:
            v55(v86, v49);
            return sub_231178498(v85, type metadata accessor for HealthRecordsSidebarActionHandlerData);
          }
          swift_bridgeObjectRelease_n();
          v55(v66, v49);
        }
LABEL_20:
        v55(v59, v49);
        v62 = v73;
        goto LABEL_21;
      }
      swift_bridgeObjectRelease_n();
      v55(v78, v49);
      v57 = v86;
      v56 = v80;
      v58 = (void (*)(char *, char *, uint64_t))v72;
    }
    v55(v56, v49);
    v58(v59, v57, v49);
    v61 = v88;
    goto LABEL_20;
  }
  sub_231263B2C();
  v34 = sub_231263B50();
  v35 = sub_2312643D8();
  if (os_log_type_enabled(v34, v35))
  {
    v36 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v36 = 0;
    _os_log_impl(&dword_23116F000, v34, v35, "Unable to decode and find the correct health records category for sidebar item", v36, 2u);
    MEMORY[0x2348D85EC](v36, -1, -1);
  }

  return (*(uint64_t (**)(char *, void *))(v87 + 8))(v4, v88);
}

BOOL sub_2311BF29C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  unint64_t v27;
  unint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  char v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  void (*v38)(char *, _QWORD, uint64_t);
  void (*v39)(char *, uint64_t);
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  char v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v0 = sub_231263B5C();
  v54 = *(_QWORD *)(v0 - 8);
  v55 = v0;
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v45 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_2312627B8();
  v52 = *(_QWORD *)(v50 - 8);
  v3 = MEMORY[0x24BDAC7A8](v50);
  v46 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v49 = (char *)&v45 - v6;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v47 = (char *)&v45 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v48 = (char *)&v45 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v45 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v53 = (char *)&v45 - v14;
  sub_2311735E0(0, &qword_255EB8C48, type metadata accessor for HealthRecordsSidebarActionHandlerData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v45 - v16;
  v18 = type metadata accessor for HealthRecordsSidebarActionHandlerData(0);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v51 = (uint64_t)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_231263868();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v45 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231263724();
  v25 = sub_231263850();
  v26 = *(void (**)(char *, uint64_t))(v22 + 8);
  v28 = v27;
  v26(v24, v21);
  if (v28 >> 60 == 15)
  {
    sub_231263B2C();
    v29 = sub_231263B50();
    v30 = sub_2312643D8();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v31 = 0;
      _os_log_impl(&dword_23116F000, v29, v30, "Unable to decode and find the correct health records category for sidebar item", v31, 2u);
      MEMORY[0x2348D85EC](v31, -1, -1);
    }

    (*(void (**)(char *, unint64_t))(v54 + 8))(v2, v55);
    return 1;
  }
  else
  {
    sub_231261C54();
    swift_allocObject();
    sub_231261C48();
    sub_231172048(qword_255EB8C50, type metadata accessor for HealthRecordsSidebarActionHandlerData, (uint64_t)&unk_231267B78);
    sub_231261C3C();
    v54 = v25;
    v55 = v28;
    swift_release();
    v33 = 1;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v18);
    v34 = v51;
    sub_2311B1454((uint64_t)v17, v51, type metadata accessor for HealthRecordsSidebarActionHandlerData);
    v35 = v52;
    v36 = *(void (**)(char *, uint64_t, uint64_t))(v52 + 16);
    v37 = v50;
    v36(v53, v34, v50);
    v38 = *(void (**)(char *, _QWORD, uint64_t))(v35 + 104);
    v38(v13, *MEMORY[0x24BE48E80], v37);
    sub_231172048(&qword_254153F00, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28], MEMORY[0x24BE48F50]);
    sub_2312641D4();
    sub_2312641D4();
    if (v58 != v56 || v59 != v57)
      v33 = sub_231264B58();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v39 = *(void (**)(char *, uint64_t))(v52 + 8);
    v39(v13, v37);
    v40 = v48;
    v41 = v53;
    v36(v48, (uint64_t)v53, v37);
    v42 = v49;
    if ((v33 & 1) != 0)
      goto LABEL_14;
    v38(v47, *MEMORY[0x24BE48EC8], v37);
    sub_2312641D4();
    sub_2312641D4();
    if (v58 == v56 && v59 == v57)
    {
      swift_bridgeObjectRelease_n();
      v39(v47, v37);
LABEL_14:
      v39(v40, v37);
      v36(v42, (uint64_t)v41, v37);
LABEL_15:
      sub_23118078C(v54, v55);
LABEL_16:
      v39(v42, v37);
      v39(v41, v37);
      sub_231178498(v51, type metadata accessor for HealthRecordsSidebarActionHandlerData);
      return 0;
    }
    LODWORD(v52) = sub_231264B58();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v39(v47, v37);
    v39(v40, v37);
    v36(v42, (uint64_t)v41, v37);
    if ((v52 & 1) != 0)
      goto LABEL_15;
    v43 = v46;
    v38(v46, *MEMORY[0x24BE48F00], v37);
    sub_2312641D4();
    sub_2312641D4();
    if (v58 == v56 && v59 == v57)
    {
      swift_bridgeObjectRelease_n();
      sub_23118078C(v54, v55);
      v39(v43, v37);
      goto LABEL_16;
    }
    v44 = sub_231264B58();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23118078C(v54, v55);
    v39(v43, v37);
    v39(v42, v37);
    v39(v41, v37);
    sub_231178498(v51, type metadata accessor for HealthRecordsSidebarActionHandlerData);
    return (v44 & 1) == 0;
  }
}

uint64_t sub_2311BF954(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = sub_231263868();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v6 = sub_231263730();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v6;
}

uint64_t sub_2311BFA04()
{
  sub_23126373C();
  return swift_deallocClassInstance();
}

uint64_t sub_2311BFA20()
{
  return type metadata accessor for HealthRecordsSidebarActionHandler(0);
}

uint64_t sub_2311BFA28()
{
  return sub_231172048(&qword_254153520, type metadata accessor for HealthRecordsSidebarActionHandler, (uint64_t)&unk_231267AB0);
}

uint64_t sub_2311BFA58@<X0>(_BYTE *a1@<X8>)
{
  unsigned int *v2;
  uint64_t v3;
  uint64_t v4;

  if (sub_2311BF29C())
  {
    v2 = (unsigned int *)MEMORY[0x24BE43600];
  }
  else
  {
    *a1 = 1;
    v2 = (unsigned int *)MEMORY[0x24BE435F8];
  }
  v3 = *v2;
  v4 = sub_23126364C();
  return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(a1, v3, v4);
}

uint64_t sub_2311BFAC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;

  v2 = sub_2312623EC();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v14 - v8;
  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v12 = *(_QWORD *)(v3 + 72);
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v13(v6, v11, v2);
      sub_231251B90((uint64_t)v9, v6);
      result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
      v11 += v12;
      --v10;
    }
    while (v10);
  }
  return result;
}

uint64_t sub_2311BFBB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v28[48];

  v2 = sub_23126292C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v28[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_2312627B8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v28[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v10 = (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 88))(v9, v6);
  if (v10 == *MEMORY[0x24BE48E88])
  {
    (*(void (**)(_BYTE *, uint64_t))(v7 + 96))(v9, v6);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 32))(v5, v9, v2);
    v11 = sub_2312228E0();
    (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    v12 = v10;
    if (v10 == *MEMORY[0x24BE48F10])
    {
      (*(void (**)(_BYTE *, uint64_t))(v7 + 96))(v9, v6);
      sub_2311B3310();
      swift_bridgeObjectRelease();
      sub_231171FD8(0, (unint64_t *)&qword_2541557B0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
      inited = swift_initStackObject();
      *(_QWORD *)(inited + 32) = 0xD000000000000010;
      *(_OWORD *)(inited + 16) = xmmword_231265570;
      *(_QWORD *)(inited + 40) = 0x800000023126C800;
      *(_QWORD *)(inited + 48) = sub_2312622D8();
      *(_QWORD *)(inited + 56) = v14;
      v11 = sub_23124E26C(inited);
      swift_setDeallocating();
      swift_arrayDestroy();
      v15 = sub_231261E94();
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v9, v15);
    }
    else if (v10 == *MEMORY[0x24BE48F00]
           || v10 == *MEMORY[0x24BE48ED8]
           || v10 == *MEMORY[0x24BE48E78]
           || v10 == *MEMORY[0x24BE48E80]
           || v10 == *MEMORY[0x24BE48EC8])
    {
      sub_231171FD8(0, (unint64_t *)&qword_2541557B0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
      v20 = swift_initStackObject();
      *(_OWORD *)(v20 + 16) = xmmword_231265AC0;
      *(_QWORD *)(v20 + 32) = sub_2312622D8();
      *(_QWORD *)(v20 + 40) = v21;
      v11 = sub_23124E26C(v20);
      swift_setDeallocating();
      swift_arrayDestroy();
    }
    else
    {
      v22 = *MEMORY[0x24BE48ED0];
      sub_231171FD8(0, (unint64_t *)&qword_2541557B0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
      if (v12 == v22)
      {
        v23 = swift_initStackObject();
        *(_OWORD *)(v23 + 16) = xmmword_231265AC0;
        *(_QWORD *)(v23 + 32) = sub_2312622FC();
        *(_QWORD *)(v23 + 40) = v24;
        v11 = sub_23124E26C(v23);
        swift_setDeallocating();
        swift_arrayDestroy();
      }
      else
      {
        v25 = swift_initStackObject();
        *(_OWORD *)(v25 + 16) = xmmword_231265AC0;
        *(_QWORD *)(v25 + 32) = sub_231262308();
        *(_QWORD *)(v25 + 40) = v26;
        v11 = sub_23124E26C(v25);
        swift_setDeallocating();
        swift_arrayDestroy();
        (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
      }
    }
  }
  return v11;
}

uint64_t sub_2311BFF70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  int v11;
  uint64_t result;
  int v13;
  uint64_t v14;
  uint64_t v16;

  v2 = sub_23126292C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2312627B8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v10 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v10 == *MEMORY[0x24BE48E88])
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
    v11 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
    if (v11 == *MEMORY[0x24BE490C8])
      return 0x8000000000000000;
    if (v11 == *MEMORY[0x24BE490D0])
      return 0x8000000000000001;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0x7FFFFFFFFFFFFFFDLL;
  }
  else
  {
    v13 = v10;
    if (v10 == *MEMORY[0x24BE48F10])
    {
      (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
      sub_2311B3310();
      swift_bridgeObjectRelease();
      v14 = sub_231261E94();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v9, v14);
      return 0x8000000000000003;
    }
    result = 0x8000000000000002;
    if (v13 != *MEMORY[0x24BE48F00])
    {
      if (v13 == *MEMORY[0x24BE48ED8])
      {
        return 0x8000000000000003;
      }
      else if (v13 == *MEMORY[0x24BE48E78])
      {
        return 0x7FFFFFFFFFFFFFFELL;
      }
      else if (v13 == *MEMORY[0x24BE48E98])
      {
        return 0x8000000000000004;
      }
      else if (v13 != *MEMORY[0x24BE48E80] && v13 != *MEMORY[0x24BE48EC8])
      {
        if (v13 != *MEMORY[0x24BE48ED0])
        {
          (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
          return 0x8000000000000000;
        }
        return 0x8000000000000001;
      }
    }
  }
  return result;
}

unint64_t sub_2311C01FC(uint64_t a1, char a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  char *v35;
  void *v36;

  v36 = a3;
  sub_2311735E0(0, &qword_2541554F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v28 - v11;
  v13 = sub_23126217C();
  v32 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v35 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v31 = (char *)&v28 - v16;
  v17 = *(_QWORD *)(a1 + 16);
  if (!v17)
    return MEMORY[0x24BEE4AF8];
  v18 = *(_QWORD *)(sub_2312627B8() - 8);
  v19 = a1 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  v33 = *(_QWORD *)(v18 + 72);
  v28 = a1;
  swift_bridgeObjectRetain();
  v20 = MEMORY[0x24BEE4AF8];
  v34 = a2 & 1;
  v29 = a4;
  v30 = a5;
  v21 = v32;
  do
  {
    sub_2311BC7F4(v19, v34, v36, a4, (uint64_t)v12);
    if (v5)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v20;
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v12, 1, v13) == 1)
    {
      sub_231189628((uint64_t)v12, &qword_2541554F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0]);
    }
    else
    {
      v22 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
      v23 = v31;
      v22(v31, v12, v13);
      v22(v35, v23, v13);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v20 = sub_2311DCA10(0, *(_QWORD *)(v20 + 16) + 1, 1, v20);
      v25 = *(_QWORD *)(v20 + 16);
      v24 = *(_QWORD *)(v20 + 24);
      if (v25 >= v24 >> 1)
        v20 = sub_2311DCA10(v24 > 1, v25 + 1, 1, v20);
      *(_QWORD *)(v20 + 16) = v25 + 1;
      v26 = v32;
      v22((char *)(v20+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(_QWORD *)(v32 + 72) * v25), v35, v13);
      v21 = v26;
      a4 = v29;
    }
    v19 += v33;
    --v17;
  }
  while (v17);
  swift_bridgeObjectRelease();
  return v20;
}

_QWORD *sub_2311C04A8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void (*v13)(unint64_t, _QWORD, uint64_t);
  id v14;
  void *v15;
  id v16;
  unsigned int v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __int128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v3 = v2;
  v31 = a2;
  v33 = *MEMORY[0x24BDAC8D0];
  v30 = *v2;
  v28 = sub_2312621DC();
  v25 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v27 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_2312621F4();
  v26 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v24 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231178454(a1, (uint64_t)v2 + OBJC_IVAR____TtC13HealthRecords17CategoryGenerator_context, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
  sub_2311735E0(0, &qword_254155718, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v8 = v7;
  v9 = sub_231261FA8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v23 = v8;
  v12 = swift_allocObject();
  v22 = xmmword_231265AC0;
  *(_OWORD *)(v12 + 16) = xmmword_231265AC0;
  v13 = *(void (**)(unint64_t, _QWORD, uint64_t))(v10 + 104);
  v13(v12 + v11, *MEMORY[0x24BE474C0], v9);
  v32 = v12;
  v14 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (!v14)
  {
    __break(1u);
LABEL_7:
    __break(1u);
  }
  v15 = v14;
  v16 = objc_msgSend(v14, sel_features);

  if (!v16)
    goto LABEL_7;
  v17 = objc_msgSend(v16, sel_stanley);

  if (v17)
  {
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = v22;
    v13(v18 + v11, *MEMORY[0x24BE474B8], v9);
    sub_231210B28(v18);
  }
  sub_231262230();
  (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v27, *MEMORY[0x24BE47910], v28);
  v19 = v24;
  sub_2312621E8();
  (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))((uint64_t)v3 + OBJC_IVAR____TtC13HealthRecords17CategoryGenerator_domain, v19, v29);
  v20 = sub_2311BACD0(a1, v31);
  sub_231178498(a1, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
  v3[2] = v20;
  return v3;
}

void sub_2311C079C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254153F58)
  {
    sub_2311C094C(255, (unint64_t *)&qword_254152F38, (uint64_t)&qword_254155638, MEMORY[0x24BE47F58], (void (*)(uint64_t, uint64_t, uint64_t, uint64_t (*)(void)))sub_231171FD8);
    sub_231187E54();
    v0 = sub_231263B98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254153F58);
  }
}

uint64_t sub_2311C0828()
{
  return sub_231172048(&qword_254153F50, (uint64_t (*)(uint64_t))sub_2311C079C, MEMORY[0x24BDB9450]);
}

unint64_t sub_2311C0844()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541541A8;
  if (!qword_2541541A8)
  {
    sub_2311C09D8(255, &qword_2541541B0, (uint64_t (*)(uint64_t))sub_2311C079C, sub_2311C0828, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB96B0]);
    result = MEMORY[0x2348D8544](MEMORY[0x24BDB96C0], v1);
    atomic_store(result, (unint64_t *)&qword_2541541A8);
  }
  return result;
}

void sub_2311C08AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*a2)
  {
    sub_2311C0928(255);
    v7 = v6;
    sub_2311889BC(255);
    v9 = v8;
    v10 = sub_2311C09BC();
    v11 = a3(a1, v7, v9, v10);
    if (!v12)
      atomic_store(v11, a2);
  }
}

void sub_2311C0928(uint64_t a1)
{
  sub_2311C094C(a1, &qword_254152F68, (uint64_t)&unk_254151878, (uint64_t)MEMORY[0x24BE48F28], (void (*)(uint64_t, uint64_t, uint64_t, uint64_t (*)(void)))sub_2311735E0);
}

void sub_2311C094C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t (*)(void)))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a5(255, a3, a4, MEMORY[0x24BEE1250]);
    v6 = sub_231263D0C();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_2311C09BC()
{
  return sub_231172048(&qword_254152F60, (uint64_t (*)(uint64_t))sub_2311C0928, MEMORY[0x24BDB9AF8]);
}

void sub_2311C09D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  if (!*a2)
  {
    v9 = a3(255);
    sub_231171FD8(255, (unint64_t *)&qword_254155638, MEMORY[0x24BE47F58], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    v11 = v10;
    v12 = a4();
    v13 = a5(a1, v9, v11, v12);
    if (!v14)
      atomic_store(v13, a2);
  }
}

void sub_2311C0A70()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254154218)
  {
    sub_2311C09D8(255, &qword_2541542F8, (uint64_t (*)(uint64_t))sub_2311C0928, sub_2311C09BC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB98B8]);
    sub_2311C094C(255, (unint64_t *)&qword_254152F38, (uint64_t)&qword_254155638, MEMORY[0x24BE47F58], (void (*)(uint64_t, uint64_t, uint64_t, uint64_t (*)(void)))sub_231171FD8);
    sub_2311C0B38();
    sub_231187E54();
    v0 = sub_231263C40();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254154218);
  }
}

unint64_t sub_2311C0B38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541542F0;
  if (!qword_2541542F0)
  {
    sub_2311C09D8(255, &qword_2541542F8, (uint64_t (*)(uint64_t))sub_2311C0928, sub_2311C09BC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB98B8]);
    result = MEMORY[0x2348D8544](MEMORY[0x24BDB98C8], v1);
    atomic_store(result, (unint64_t *)&qword_2541542F0);
  }
  return result;
}

uint64_t sub_2311C0BA0(uint64_t a1)
{
  return sub_23118852C(a1, &qword_2541535E8, (void (*)(uint64_t))type metadata accessor for CategoryGenerator);
}

uint64_t sub_2311C0BB4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_2311C0BD8@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_2311BC6EC(a1, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_2311C0BE0()
{
  return swift_deallocObject();
}

uint64_t sub_2311C0BF0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2311BE040(a1, "[%{public}s] Unable to compute desired difference for sidebar items for commit: %{public}s", a2);
}

uint64_t sub_2311C0C10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2311735E0(0, &qword_2541554F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2311C0C6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2311735E0(0, &qword_2541554F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for HealthRecordsSidebarActionHandlerData(uint64_t a1)
{
  return sub_231187940(a1, qword_254153580);
}

uint64_t sub_2311C0CDC(uint64_t a1)
{
  return sub_23118852C(a1, &qword_255EB8C38, (void (*)(uint64_t))MEMORY[0x24BE477D0]);
}

uint64_t sub_2311C0CF0(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

void sub_2311C0D34()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_254152CF0)
  {
    sub_2311C08AC(255, &qword_254152D60, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB98B8]);
    v0 = MEMORY[0x24BDB9AE0];
    sub_231188FDC(255, &qword_254152EF8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_2311C0E04();
    sub_231189178((unint64_t *)&qword_254152EF0, &qword_254152EF8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v0, MEMORY[0x24BDB9AF8]);
    v1 = sub_231263C40();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_254152CF0);
  }
}

unint64_t sub_2311C0E04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254152D58;
  if (!qword_254152D58)
  {
    sub_2311C08AC(255, &qword_254152D60, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB98B8]);
    result = MEMORY[0x2348D8544](MEMORY[0x24BDB98C8], v1);
    atomic_store(result, (unint64_t *)&qword_254152D58);
  }
  return result;
}

uint64_t sub_2311C0E5C()
{
  return sub_231172048(&qword_254152CE8, (uint64_t (*)(uint64_t))sub_2311C0D34, MEMORY[0x24BDB9740]);
}

void sub_2311C0E78()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254152D30)
  {
    sub_2311C09D8(255, &qword_254152D90, (uint64_t (*)(uint64_t))sub_2311C0D34, sub_2311C0E5C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB98B8]);
    sub_2311C094C(255, (unint64_t *)&qword_254152F38, (uint64_t)&qword_254155638, MEMORY[0x24BE47F58], (void (*)(uint64_t, uint64_t, uint64_t, uint64_t (*)(void)))sub_231171FD8);
    sub_2311C0F40();
    sub_231187E54();
    v0 = sub_231263C40();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254152D30);
  }
}

unint64_t sub_2311C0F40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254152D88;
  if (!qword_254152D88)
  {
    sub_2311C09D8(255, &qword_254152D90, (uint64_t (*)(uint64_t))sub_2311C0D34, sub_2311C0E5C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB98B8]);
    result = MEMORY[0x2348D8544](MEMORY[0x24BDB98C8], v1);
    atomic_store(result, (unint64_t *)&qword_254152D88);
  }
  return result;
}

uint64_t sub_2311C0FA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for HealthRecordsGeneratorContext();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_23126226C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocObject();
}

uint64_t sub_2311C1030@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[4];

  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for HealthRecordsGeneratorContext() - 8) + 80);
  v7 = *a1;
  v9[2] = v2 + ((v6 + 16) & ~v6);
  result = sub_23124590C((void (*)(_QWORD))sub_2311C10D4, (uint64_t)v9, v7);
  if (!v3)
    *a2 = result;
  return result;
}

uint64_t sub_2311C10A4()
{
  return swift_deallocObject();
}

uint64_t sub_2311C10B4@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2311BE040(a1, "[%{public}s] Unable to compute desired difference for category items for commit: %{public}s", a2);
}

void sub_2311C10D4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_2311BBFE4(a1, a2);
}

uint64_t sub_2311C10EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  int v11;
  uint64_t result;
  int v13;
  uint64_t v14;
  uint64_t v16;

  v2 = sub_23126292C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2312627B8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v10 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v10 == *MEMORY[0x24BE48E88])
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
    v11 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
    if (v11 == *MEMORY[0x24BE490C8])
      return 0x8000000000000000;
    if (v11 == *MEMORY[0x24BE490D0])
      return 0x8000000000000001;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0x7FFFFFFFFFFFFFFDLL;
  }
  else
  {
    v13 = v10;
    if (v10 == *MEMORY[0x24BE48F10])
    {
      (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
      sub_2311B3310();
      swift_bridgeObjectRelease();
      v14 = sub_231261E94();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v9, v14);
      return 0x8000000000000003;
    }
    result = 0x8000000000000002;
    if (v13 != *MEMORY[0x24BE48F00])
    {
      if (v13 == *MEMORY[0x24BE48ED8])
      {
        return 0x8000000000000003;
      }
      else if (v13 == *MEMORY[0x24BE48E78])
      {
        return 0x7FFFFFFFFFFFFFFELL;
      }
      else if (v13 != *MEMORY[0x24BE48E80] && v13 != *MEMORY[0x24BE48EC8])
      {
        if (v13 != *MEMORY[0x24BE48ED0])
        {
          (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
          return 0x8000000000000000;
        }
        return 0x8000000000000001;
      }
    }
  }
  return result;
}

uint64_t sub_2311C135C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  int v11;
  uint64_t v13;
  uint64_t v18;

  v2 = sub_23126292C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2312627B8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v10 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v10 == *MEMORY[0x24BE48E88])
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
    v11 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
    if (v11 == *MEMORY[0x24BE490C8] || v11 == *MEMORY[0x24BE490D0])
    {
      return 8;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return 5;
    }
  }
  else if (v10 == *MEMORY[0x24BE48F10])
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
    sub_2311B3310();
    swift_bridgeObjectRelease();
    v13 = sub_231261E94();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v9, v13);
    return 6;
  }
  else if (v10 == *MEMORY[0x24BE48F00] || v10 == *MEMORY[0x24BE48ED8] || v10 == *MEMORY[0x24BE48E78])
  {
    return 5;
  }
  else if (v10 == *MEMORY[0x24BE48E80] || v10 == *MEMORY[0x24BE48EC8])
  {
    return 6;
  }
  else if (v10 == *MEMORY[0x24BE48ED0])
  {
    return 7;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return 13;
  }
}

uint64_t sub_2311C15AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2312627B8();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_2311C15E8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2312627B8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_2311C161C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2312627B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_2311C1660(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2312627B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_2311C16A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2312627B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_2311C16E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2312627B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_2311C172C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2311C1738(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2312627B8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_2311C1774()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2311C1780(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2312627B8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_2311C17C0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2312627B8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_2311C1828()
{
  unint64_t result;

  result = qword_254153560;
  if (!qword_254153560)
  {
    result = MEMORY[0x2348D8544](&unk_231267C8C, &type metadata for HealthRecordsSidebarActionHandlerData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254153560);
  }
  return result;
}

void sub_2311C186C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_2311C1828();
    v7 = a3(a1, &type metadata for HealthRecordsSidebarActionHandlerData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t getEnumTagSinglePayload for HealthRecordsSidebarActionHandlerData.CodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for HealthRecordsSidebarActionHandlerData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2311C195C + 4 * byte_231267A30[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2311C197C + 4 * byte_231267A35[v4]))();
}

_BYTE *sub_2311C195C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2311C197C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2311C1984(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2311C198C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2311C1994(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2311C199C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for HealthRecordsSidebarActionHandlerData.CodingKeys()
{
  return &type metadata for HealthRecordsSidebarActionHandlerData.CodingKeys;
}

unint64_t sub_2311C19BC()
{
  unint64_t result;

  result = qword_255EB8C88;
  if (!qword_255EB8C88)
  {
    result = MEMORY[0x2348D8544](&unk_231267C64, &type metadata for HealthRecordsSidebarActionHandlerData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB8C88);
  }
  return result;
}

unint64_t sub_2311C1A04()
{
  unint64_t result;

  result = qword_254153570;
  if (!qword_254153570)
  {
    result = MEMORY[0x2348D8544](&unk_231267BD4, &type metadata for HealthRecordsSidebarActionHandlerData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254153570);
  }
  return result;
}

unint64_t sub_2311C1A4C()
{
  unint64_t result;

  result = qword_254153568;
  if (!qword_254153568)
  {
    result = MEMORY[0x2348D8544](&unk_231267BFC, &type metadata for HealthRecordsSidebarActionHandlerData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254153568);
  }
  return result;
}

uint64_t sub_2311C1A90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 28));
  swift_bridgeObjectRetain();
  return v2;
}

id sub_2311C1AC4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  id v38;
  void *v39;
  void *v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  void *v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  void (*v52)(char *, unint64_t, uint64_t);
  char *v53;
  uint64_t v54;
  int64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  void *v61;
  id v62;
  id v63;
  uint64_t v65;
  uint64_t *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  _QWORD *v76;
  id v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  _QWORD v85[3];

  v72 = 0;
  v85[1] = *MEMORY[0x24BDAC8D0];
  v1 = sub_231261E40();
  v69 = *(_QWORD *)(v1 - 8);
  v70 = v1;
  v2 = MEMORY[0x24BDAC7A8](v1);
  v67 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v68 = (char *)&v65 - v4;
  sub_231178A30(0, (unint64_t *)&qword_255EB8870, &qword_255EB8878);
  v6 = v5;
  v82 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v81 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v65 - v9;
  sub_2311789C4();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for SharedConceptCodedValue(0);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (uint64_t *)((char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = v0[5];
  v85[0] = v18;
  v84 = MEMORY[0x24BEE4AF8];
  v80 = *(_QWORD *)(v18 + 16);
  if (v80)
  {
    v66 = v0;
    v19 = v18 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    v79 = *(_QWORD *)(v15 + 72);
    swift_bridgeObjectRetain_n();
    v20 = 0;
    v71 = v13;
    v73 = v14;
    v76 = v17;
    v78 = v19;
    while (1)
    {
      sub_231178454(v19 + v79 * v20, (uint64_t)v17, type metadata accessor for SharedConceptCodedValue);
      sub_231178454((uint64_t)v17 + *(int *)(v14 + 20), (uint64_t)v13, (uint64_t (*)(_QWORD))sub_2311789C4);
      sub_231178A30(0, &qword_2541534C0, (unint64_t *)&qword_2541531A0);
      v22 = v21;
      v23 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v13, 1, v21) == 1)
      {
        sub_231178498((uint64_t)v13, (uint64_t (*)(_QWORD))sub_2311789C4);
      }
      else
      {
        v24 = (void *)sub_231263F88();
        (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v22);
        v25 = objc_msgSend(v24, sel_currentValue);
        v26 = objc_msgSend(v25, sel_inspectableValue);

        if (v26)
        {
          v27 = objc_msgSend(v26, sel_codedQuantityValue);

          if (v27)
          {
            v77 = v27;
            v28 = *v17;
            v83 = MEMORY[0x24BEE4AF8];
            v29 = *(_QWORD *)(v28 + 16);
            if (v29)
            {
              v74 = v28;
              v75 = v24;
              v30 = v82;
              v31 = v28 + ((*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80));
              swift_bridgeObjectRetain();
              v32 = *(_QWORD *)(v30 + 72);
              v33 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 16);
              do
              {
                v33(v10, v31, v6);
                sub_231263F88();
                v34 = (*(uint64_t (**)(char *, uint64_t))(v82 + 8))(v10, v6);
                MEMORY[0x2348D75E4](v34);
                if (*(_QWORD *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                  sub_23126424C();
                sub_231264264();
                sub_231264210();
                v31 += v32;
                --v29;
              }
              while (v29);
              v13 = v71;
              v24 = v75;
            }
            else
            {
              swift_bridgeObjectRetain();
            }
            swift_bridgeObjectRelease();
            v35 = objc_msgSend(v24, sel_lowValue);
            v36 = objc_msgSend(v35, sel_codedQuantityValue);

            v37 = objc_msgSend(v24, sel_highValue);
            v38 = objc_msgSend(v37, sel_codedQuantityValue);

            sub_231178AD0(0, &qword_255EB8878);
            v39 = (void *)sub_2312641EC();
            swift_bridgeObjectRelease();
            v40 = (void *)objc_opt_self();
            v83 = 0;
            v41 = v77;
            v42 = objc_msgSend(v40, sel_chartableCodedQuantityWithCodings_originalCodedQuantity_originalRangeLowCodedQuantity_originalRangeHighCodedQuantity_error_, v39, v77, v36, v38, &v83);

            if (v42)
            {
              v43 = (id)v83;

              v44 = sub_231178498((uint64_t)v76, type metadata accessor for SharedConceptCodedValue);
              MEMORY[0x2348D75E4](v44);
              if (*(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                sub_23126424C();
              sub_231264264();
              sub_231264210();
              v14 = v73;
              v17 = v76;
            }
            else
            {
              v45 = v41;
              v46 = (id)v83;
              v47 = (void *)sub_231261D50();

              swift_willThrow();
              v17 = v76;
              sub_231178498((uint64_t)v76, type metadata accessor for SharedConceptCodedValue);
              v72 = 0;
              v14 = v73;
            }
            v19 = v78;
            goto LABEL_5;
          }
        }

        v19 = v78;
      }
      sub_231178498((uint64_t)v17, type metadata accessor for SharedConceptCodedValue);
LABEL_5:
      if (++v20 == v80)
      {
        sub_2311B0FAC((uint64_t)v85);
        v48 = v84;
        v0 = v66;
        goto LABEL_25;
      }
    }
  }
  swift_bridgeObjectRetain();
  v48 = MEMORY[0x24BEE4AF8];
LABEL_25:
  sub_2311B0FAC((uint64_t)v85);
  v84 = *v0;
  v83 = MEMORY[0x24BEE4AF8];
  v49 = *(_QWORD *)(v84 + 16);
  if (v49)
  {
    v50 = v84 + ((*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80));
    v51 = *(_QWORD *)(v82 + 72);
    v52 = *(void (**)(char *, unint64_t, uint64_t))(v82 + 16);
    swift_bridgeObjectRetain();
    do
    {
      v53 = v81;
      v52(v81, v50, v6);
      sub_231263F88();
      v54 = (*(uint64_t (**)(char *, uint64_t))(v82 + 8))(v53, v6);
      MEMORY[0x2348D75E4](v54);
      if (*(_QWORD *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23126424C();
      sub_231264264();
      sub_231264210();
      v50 += v51;
      --v49;
    }
    while (v49);
    v55 = v83;
  }
  else
  {
    swift_bridgeObjectRetain();
    v55 = MEMORY[0x24BEE4AF8];
  }
  sub_2311B0FAC((uint64_t)&v84);
  v56 = v68;
  sub_231261E04();
  sub_231178AD0(0, &qword_255EB8C90);
  v58 = v69;
  v57 = v70;
  v59 = v67;
  (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v67, v56, v70);
  v60 = (uint64_t)v59;
  v61 = v72;
  v62 = sub_2311C224C(v55, v48, v60);
  if (v61)
  {

    v63 = 0;
  }
  else
  {
    v63 = v62;
  }
  (*(void (**)(char *, uint64_t))(v58 + 8))(v56, v57);
  return v63;
}

id sub_2311C224C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  id v11;
  id v12;
  uint64_t v13;
  id v15[2];

  v15[1] = *(id *)MEMORY[0x24BDAC8D0];
  sub_231178AD0(0, &qword_255EB8878);
  v4 = (void *)sub_2312641EC();
  swift_bridgeObjectRelease();
  sub_231178AD0(0, &qword_255EB8C98);
  v5 = (void *)sub_2312641EC();
  swift_bridgeObjectRelease();
  v6 = (void *)sub_231261DE0();
  v15[0] = 0;
  v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_setWithMedicalCodings_quantities_date_error_, v4, v5, v6, v15);

  v8 = v15[0];
  if (v7)
  {
    v9 = sub_231261E40();
    v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
    v11 = v8;
    v10(a3, v9);
  }
  else
  {
    v12 = v15[0];
    sub_231261D50();

    swift_willThrow();
    v13 = sub_231261E40();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a3, v13);
  }
  return v7;
}

uint64_t sub_2311C23D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v0 = sub_231262C2C();
  MEMORY[0x24BDAC7A8](v0);
  (*(void (**)(char *, _QWORD))(v2 + 104))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x24BE49418]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_231262E6C();
}

uint64_t sub_2311C2494()
{
  return 2;
}

uint64_t sub_2311C24A0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t result;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  __int128 v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD v85[3];
  uint64_t v86;

  v82 = *v1;
  v3 = type metadata accessor for HealthRecordsGeneratorContext();
  v72 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v73 = v4;
  v74 = (uint64_t)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311C3D98();
  v70 = *(_QWORD *)(v5 - 8);
  v71 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v69 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311C3F40();
  v76 = *(_QWORD *)(v7 - 8);
  v77 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v75 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311C3FB8();
  v79 = *(_QWORD *)(v9 - 8);
  v80 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v78 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, &qword_2541534B8, (uint64_t (*)(uint64_t))sub_2311B6CDC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  v64 = v11;
  v63 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v62 = (char *)&v62 - v12;
  sub_2311735E0(0, qword_254152050, type metadata accessor for UDCSnippetGeneratorData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v67 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v81 = (uint64_t)&v62 - v16;
  v17 = sub_2312621DC();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_2312621F4();
  v21 = *(_QWORD *)(v66 - 8);
  MEMORY[0x24BDAC7A8](v66);
  v23 = (char *)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231178454(a1, (uint64_t)v1 + OBJC_IVAR____TtC13HealthRecords25UserDomainConceptPipeline_context, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
  v65 = sub_231262230();
  sub_2311735E0(0, &qword_254155718, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v24 = sub_231261FA8();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  v27 = swift_allocObject();
  v68 = xmmword_231265AC0;
  *(_OWORD *)(v27 + 16) = xmmword_231265AC0;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v25 + 104))(v27 + v26, *MEMORY[0x24BE47460], v24);
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, *MEMORY[0x24BE47910], v17);
  sub_2312621E8();
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v83 + OBJC_IVAR____TtC13HealthRecords25UserDomainConceptPipeline_domain, v23, v66);
  v28 = v81;
  sub_2311C2D60(a1, v81);
  sub_2312628A8();
  v29 = (void *)sub_231262884();
  sub_23126220C();
  sub_231173410(v85, v86);
  v30 = (void *)sub_231262194();
  v31 = objc_msgSend(v30, sel_profileIdentifier);

  sub_23126286C();
  v32 = (uint64_t)v67;
  sub_231173434((uint64_t)v85);
  sub_2311C405C(v28, v32);
  v33 = type metadata accessor for UDCSnippetGeneratorData(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v32, 1, v33) == 1)
  {
    sub_231189628(v32, qword_254152050, type metadata accessor for UDCSnippetGeneratorData);
    v34 = 0;
  }
  else
  {
    v35 = v63;
    v36 = v62;
    v37 = v64;
    (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v62, v32, v64);
    sub_231178498(v32, type metadata accessor for UDCSnippetGeneratorData);
    v34 = (void *)sub_231263F88();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v37);
  }
  sub_2311735E0(0, &qword_254154670, (uint64_t (*)(uint64_t))MEMORY[0x24BE490F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v38 = sub_23126292C();
  v39 = *(_QWORD *)(v38 - 8);
  v40 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = v68;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v39 + 104))(v41 + v40, *MEMORY[0x24BE490B8], v38);
  v42 = sub_231262FEC();
  swift_release();
  swift_bridgeObjectRelease();

  v43 = (void *)sub_231262884();
  v44 = a1;
  sub_23126220C();
  sub_231173410(v85, v86);
  v45 = (void *)sub_231262194();
  v46 = objc_msgSend(v45, sel_profileIdentifier);

  sub_231262848();
  sub_231173434((uint64_t)v85);
  v47 = sub_231263A78();
  swift_release();
  v84 = v42;
  v85[0] = v47;
  sub_2311C3E60();
  sub_2311C3EC4();
  v48 = MEMORY[0x24BDB9AF8];
  sub_231172048(&qword_254154518, (uint64_t (*)(uint64_t))sub_2311C3E60, MEMORY[0x24BDB9AF8]);
  sub_231172048(&qword_254152FF0, (uint64_t (*)(uint64_t))sub_2311C3EC4, v48);
  v49 = v69;
  sub_231263E74();
  swift_release();
  sub_231172048(&qword_254153F30, (uint64_t (*)(uint64_t))sub_2311C3D98, MEMORY[0x24BDB9450]);
  v50 = v71;
  v51 = v75;
  sub_231263E50();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v49, v50);
  v52 = v74;
  sub_231178454(v44, v74, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
  v53 = (*(unsigned __int8 *)(v72 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
  v54 = (v73 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
  v55 = swift_allocObject();
  sub_2311B1454(v52, v55 + v53, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
  *(_QWORD *)(v55 + v54) = v82;
  v56 = swift_allocObject();
  *(_QWORD *)(v56 + 16) = sub_2311C414C;
  *(_QWORD *)(v56 + 24) = v55;
  sub_2311787A8(0, (unint64_t *)&qword_254155508);
  sub_231172048(&qword_254154050, (uint64_t (*)(uint64_t))sub_2311C3F40, MEMORY[0x24BDB9568]);
  v58 = v77;
  v57 = v78;
  sub_231263E44();
  swift_release();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v51, v58);
  sub_231172048(&qword_254153FD0, (uint64_t (*)(uint64_t))sub_2311C3FB8, MEMORY[0x24BDB94C8]);
  v59 = v80;
  v60 = sub_231263E38();
  swift_release();
  sub_231178498(v44, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v57, v59);
  sub_231189628(v81, qword_254152050, type metadata accessor for UDCSnippetGeneratorData);
  result = v83;
  *(_QWORD *)(v83 + 16) = v60;
  return result;
}

uint64_t sub_2311C2D60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[5];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  _QWORD v35[4];

  v4 = sub_231263B5C();
  v30[3] = *(_QWORD *)(v4 - 8);
  v30[4] = v4;
  MEMORY[0x24BDAC7A8](v4);
  v30[2] = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, &qword_254152BD8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47570], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v30 - v7;
  v9 = sub_2312626E0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_231261E94();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = a1;
  v17 = (void *)sub_231262230();
  v18 = (void *)sub_231261FF0();

  if (!v18)
  {
    v23 = type metadata accessor for UDCSnippetGeneratorData(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a2, 1, 1, v23);
  }
  v31 = a2;
  v19 = objc_msgSend(v18, sel_identifier);

  sub_231261E7C();
  sub_231261E58();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  sub_23126220C();
  v33 = 0;
  v34 = 0xE000000000000000;
  sub_231264144();
  swift_bridgeObjectRelease();
  sub_231264144();
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BE48E00], v9);
  sub_23126493C();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_231173410(v35, v35[3]);
  sub_2312621A0();
  swift_bridgeObjectRelease();
  v20 = sub_231261FE4();
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v8, 1, v20) == 1)
  {
    sub_231189628((uint64_t)v8, &qword_254152BD8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47570]);
    v22 = v31;
  }
  else
  {
    v25 = sub_231261FD8();
    v27 = v26;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v20);
    v22 = v31;
    if (v27 >> 60 != 15)
    {
      sub_231261C54();
      swift_allocObject();
      sub_231261C48();
      v29 = type metadata accessor for UDCSnippetGeneratorData(0);
      sub_231172048(&qword_254152010, type metadata accessor for UDCSnippetGeneratorData, (uint64_t)&unk_231268FC8);
      sub_231261C3C();
      sub_23118078C(v25, v27);
      swift_release();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v22, 0, 1, v29);
      return sub_231173434((uint64_t)v35);
    }
  }
  v28 = type metadata accessor for UDCSnippetGeneratorData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v22, 1, 1, v28);
  return sub_231173434((uint64_t)v35);
}

uint64_t sub_2311C335C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[4];

  v2 = sub_231263B80();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_231263B5C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231263B08();
  sub_23118CE98(a1, (uint64_t)v28);
  v10 = sub_231263B50();
  v11 = sub_2312643F0();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v25 = v7;
    v13 = v12;
    v24 = swift_slowAlloc();
    v27 = v24;
    *(_DWORD *)v13 = 136446466;
    v26 = type metadata accessor for UserDomainConceptPipeline();
    sub_23118852C(0, &qword_254152330, (void (*)(uint64_t))type metadata accessor for UserDomainConceptPipeline);
    v22 = v3;
    v14 = sub_2312640B4();
    v23 = v6;
    v26 = sub_2311CBDE4(v14, v15, &v27);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2082;
    sub_231173410(v28, v28[3]);
    sub_231263B74();
    sub_231172048(&qword_254152C08, (uint64_t (*)(uint64_t))MEMORY[0x24BDB9420], MEMORY[0x24BDB9430]);
    v16 = sub_231264B28();
    v18 = v17;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v2);
    v26 = sub_2311CBDE4(v16, v18, &v27);
    sub_231264750();
    swift_bridgeObjectRelease();
    sub_231173434((uint64_t)v28);
    _os_log_impl(&dword_23116F000, v10, v11, "[%{public}s] receivedSubscription %{public}s", (uint8_t *)v13, 0x16u);
    v19 = v24;
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v19, -1, -1);
    MEMORY[0x2348D85EC](v13, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v9, v23);
  }
  else
  {
    sub_231173434((uint64_t)v28);

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_2311C3630(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  void *v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  void *v32;
  uint64_t v33;
  char *v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  os_log_t v38;
  uint64_t v39;
  uint64_t v41;
  int v42;
  os_log_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  sub_2311C4220();
  v3 = v2;
  v4 = MEMORY[0x24BDAC7A8](v2);
  v47 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v46 = (char *)&v41 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v41 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v41 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v41 - v14;
  v16 = sub_231263B5C();
  v49 = *(_QWORD *)(v16 - 8);
  v50 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231263B08();
  v19 = *(int *)(v3 + 48);
  v20 = sub_231263AB4();
  v45 = *(_QWORD *)(v20 - 8);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 16);
  v21(v15, a1, v20);
  v22 = *(void **)(a1 + v19);
  *(_QWORD *)&v15[v19] = v22;
  sub_231178454((uint64_t)v15, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_2311C4220);
  v48 = v10;
  sub_2311B1454((uint64_t)v15, (uint64_t)v10, (uint64_t (*)(_QWORD))sub_2311C4220);
  v23 = v22;
  v24 = sub_231263B50();
  v25 = sub_2312643C0();
  v26 = v25;
  if (os_log_type_enabled(v24, v25))
  {
    v27 = swift_slowAlloc();
    v44 = swift_slowAlloc();
    v52 = v44;
    *(_DWORD *)v27 = 136446466;
    v51 = type metadata accessor for UserDomainConceptPipeline();
    sub_23118852C(0, &qword_254152330, (void (*)(uint64_t))type metadata accessor for UserDomainConceptPipeline);
    v43 = v24;
    v28 = sub_2312640B4();
    v51 = sub_2311CBDE4(v28, v29, &v52);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2082;
    v41 = v27 + 14;
    v30 = *(int *)(v3 + 48);
    v42 = v26;
    v31 = v46;
    v21(v46, (uint64_t)v13, v20);
    v32 = *(void **)&v13[v30];
    v33 = *(int *)(v3 + 48);
    v34 = v47;
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v47, v31, v20);
    *(_QWORD *)&v34[v33] = v32;
    v35 = v32;
    v36 = sub_2312640B4();
    v51 = sub_2311CBDE4(v36, v37, &v52);
    sub_231264750();
    swift_bridgeObjectRelease();
    sub_231178498((uint64_t)v48, (uint64_t (*)(_QWORD))sub_2311C4220);
    sub_231178498((uint64_t)v13, (uint64_t (*)(_QWORD))sub_2311C4220);
    v38 = v43;
    _os_log_impl(&dword_23116F000, v43, (os_log_type_t)v42, "[%{public}s] receiveOutput: %{public}s", (uint8_t *)v27, 0x16u);
    v39 = v44;
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v39, -1, -1);
    MEMORY[0x2348D85EC](v27, -1, -1);

  }
  else
  {
    sub_231178498((uint64_t)v48, (uint64_t (*)(_QWORD))sub_2311C4220);
    sub_231178498((uint64_t)v13, (uint64_t (*)(_QWORD))sub_2311C4220);

  }
  return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v18, v50);
}

uint64_t sub_2311C39D4@<X0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  _QWORD *v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;

  v8 = type metadata accessor for HealthRecordsGeneratorContext();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_231263B5C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231263B08();
  v15 = sub_231263B50();
  v16 = sub_2312643CC();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v34 = a4;
    v18 = v17;
    v19 = swift_slowAlloc();
    v33 = a1;
    v20 = v19;
    v35 = v19;
    v36 = a3;
    *(_DWORD *)v18 = 136446466;
    v32 = a2;
    swift_getMetatypeMetadata();
    v21 = sub_2312640B4();
    v36 = sub_2311CBDE4(v21, v22, &v35);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2082;
    v36 = type metadata accessor for UDCSnippetGenerator(0);
    sub_23118852C(0, &qword_254151ED8, (void (*)(uint64_t))type metadata accessor for UDCSnippetGenerator);
    v23 = sub_2312640B4();
    v36 = sub_2311CBDE4(v23, v24, &v35);
    a2 = v32;
    sub_231264750();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23116F000, v15, v16, "[%{public}s]: Emitting %{public}s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    v25 = v20;
    a1 = v33;
    MEMORY[0x2348D85EC](v25, -1, -1);
    v26 = v18;
    a4 = v34;
    MEMORY[0x2348D85EC](v26, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_231178454(a2, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
  v27 = type metadata accessor for UDCSnippetGenerator(0);
  swift_allocObject();
  v28 = a1;
  v29 = sub_2311EA00C((uint64_t)v10, a1);

  a4[3] = v27;
  result = sub_231172048(&qword_254151DF8, type metadata accessor for UDCSnippetGenerator, (uint64_t)&unk_231268F74);
  a4[4] = result;
  *a4 = v29;
  return result;
}

uint64_t sub_2311C3C9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC13HealthRecords25UserDomainConceptPipeline_domain;
  v2 = sub_2312621F4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_231178498(v0 + OBJC_IVAR____TtC13HealthRecords25UserDomainConceptPipeline_context, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
  return swift_deallocClassInstance();
}

uint64_t sub_2311C3D0C()
{
  return type metadata accessor for UserDomainConceptPipeline();
}

uint64_t type metadata accessor for UserDomainConceptPipeline()
{
  uint64_t result;

  result = qword_254152258;
  if (!qword_254152258)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2311C3D50@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC13HealthRecords25UserDomainConceptPipeline_domain;
  v4 = sub_2312621F4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void sub_2311C3D98()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  if (!qword_254153F38)
  {
    sub_2311C3E60();
    sub_2311C3EC4();
    v0 = MEMORY[0x24BDB9AF8];
    sub_231172048(&qword_254154518, (uint64_t (*)(uint64_t))sub_2311C3E60, MEMORY[0x24BDB9AF8]);
    sub_231172048(&qword_254152FF0, (uint64_t (*)(uint64_t))sub_2311C3EC4, v0);
    v1 = sub_231263B98();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_254153F38);
  }
}

void sub_2311C3E60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254154520)
  {
    sub_231263AB4();
    v0 = sub_231263D0C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254154520);
  }
}

void sub_2311C3EC4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541518D0)
  {
    sub_2311735E0(255, (unint64_t *)&qword_2541556D8, (uint64_t (*)(uint64_t))sub_2311B6CDC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v0 = sub_231263D0C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541518D0);
  }
}

void sub_2311C3F40()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254154058)
  {
    sub_2311C3D98();
    sub_231172048(&qword_254153F30, (uint64_t (*)(uint64_t))sub_2311C3D98, MEMORY[0x24BDB9450]);
    v0 = sub_231263BD4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254154058);
  }
}

void sub_2311C3FB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254153FD8)
  {
    sub_2311C3F40();
    sub_2311787A8(255, (unint64_t *)&qword_254155508);
    sub_231172048(&qword_254154050, (uint64_t (*)(uint64_t))sub_2311C3F40, MEMORY[0x24BDB9568]);
    v0 = sub_231263BBC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254153FD8);
  }
}

uint64_t sub_2311C405C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2311735E0(0, qword_254152050, type metadata accessor for UDCSnippetGeneratorData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2311C40B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for HealthRecordsGeneratorContext();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_23126226C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocObject();
}

uint64_t sub_2311C414C@<X0>(void *a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_2311C39D4(a1, v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)), a2);
}

uint64_t sub_2311C41B4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2311C41D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, _QWORD);
  uint64_t v4;

  v3 = *(uint64_t (**)(uint64_t, _QWORD))(v1 + 16);
  sub_2311C4220();
  return v3(a1, *(_QWORD *)(a1 + *(int *)(v4 + 48)));
}

void sub_2311C4220()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_254153F20)
  {
    sub_231263AB4();
    sub_2311735E0(255, (unint64_t *)&qword_2541556D8, (uint64_t (*)(uint64_t))sub_2311B6CDC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_254153F20);
  }
}

uint64_t type metadata accessor for LabsOnboardingAppPluginViewController()
{
  uint64_t result;

  result = qword_255EB8CA0;
  if (!qword_255EB8CA0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2311C42E0()
{
  return swift_initClassMetadata2();
}

id sub_2311C431C(void *a1, uint64_t a2, uint64_t a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for LabsOnboardingAppPluginViewController();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_2311C4364()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LabsOnboardingAppPluginViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2311C4398()
{
  return type metadata accessor for LabsOnboardingAppPluginViewController();
}

void sub_2311C43A0(char a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  objc_class *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  void *v11;
  objc_super v12;

  v3 = sub_231263B5C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (objc_class *)type metadata accessor for NewRecordsFeedItemViewController();
  v12.receiver = v1;
  v12.super_class = v7;
  objc_msgSendSuper2(&v12, sel_viewDidAppear_, a1 & 1);
  sub_231263B20();
  v8 = sub_231263B50();
  v9 = sub_2312643F0();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_23116F000, v8, v9, "New Records tile did appear", v10, 2u);
    MEMORY[0x2348D85EC](v10, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_2312629EC();
  v11 = (void *)sub_2312629E0();
  sub_2312629BC();

}

void sub_2311C44E4(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_2311C43A0(a3);

}

uint64_t sub_2311C4524@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[40];
  __int128 v8;
  uint64_t v9;
  uint64_t v10;

  v3 = v1 + qword_255EB8CF0;
  swift_beginAccess();
  sub_23118CE48(v3, (uint64_t)&v8, &qword_255EB7C98, (unint64_t *)&unk_255EB8F80);
  if (!v9)
  {
    sub_23118CCC4((uint64_t)&v8);
    v4 = sub_231262CC8();
    v5 = sub_231262CBC();
    v9 = v4;
    v10 = MEMORY[0x24BE49490];
    *(_QWORD *)&v8 = v5;
    sub_23118CE98((uint64_t)&v8, (uint64_t)v7);
    swift_beginAccess();
    sub_23118CEDC((uint64_t)v7, v3);
    swift_endAccess();
  }
  return sub_2311789AC(&v8, a1);
}

void sub_2311C4604(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t);
  uint64_t v34;
  char *v35;
  void *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;

  v39 = a1;
  v42 = a2;
  v2 = sub_231262B60();
  v45 = *(_QWORD *)(v2 - 8);
  v46 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v44 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311787F4(0, (unint64_t *)&qword_254151918, (void (*)(uint64_t))MEMORY[0x24BDCEEA8]);
  MEMORY[0x24BDAC7A8](v4);
  v43 = (char *)&v37 - v5;
  v41 = type metadata accessor for NewRecordsFeedItemViewData();
  v6 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v8 = (uint64_t *)((char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = (int *)type metadata accessor for NewRecordsFeedItemData(0);
  v10 = *((_QWORD *)v9 - 1);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v37 - v14;
  sub_2311787F4(0, &qword_255EB8ED0, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemData);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v37 - v17;
  sub_2311787F4(0, &qword_255EB8ED8, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemViewData);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v37 - v20;
  sub_231178A84(v39, (uint64_t)v18, &qword_255EB8ED0, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemData);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(v18, 1, v9) == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v21, 1, 1, v41);
  }
  else
  {
    v38 = v15;
    sub_2311B1454((uint64_t)v18, (uint64_t)v15, type metadata accessor for NewRecordsFeedItemData);
    sub_231178454((uint64_t)v15, (uint64_t)v13, type metadata accessor for NewRecordsFeedItemData);
    v22 = v9[6];
    v23 = &v13[v9[5]];
    v25 = *(_QWORD *)v23;
    v24 = *((_QWORD *)v23 + 1);
    v27 = *(_QWORD *)&v13[v22];
    v26 = *(_QWORD *)&v13[v22 + 8];
    v39 = v6;
    v28 = v41;
    v29 = (char *)v8 + *(int *)(v41 + 24);
    v30 = sub_231261E94();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v29, v13, v30);
    v31 = *(_QWORD *)&v13[v9[7]];
    *v8 = v25;
    v8[1] = v24;
    v8[2] = v27;
    v8[3] = v26;
    *(_QWORD *)((char *)v8 + *(int *)(v28 + 28)) = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_231178498((uint64_t)v13, type metadata accessor for NewRecordsFeedItemData);
    sub_2311B1454((uint64_t)v8, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for NewRecordsFeedItemViewData);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v21, 0, 1, v28);
    sub_231178498((uint64_t)v38, type metadata accessor for NewRecordsFeedItemData);
  }
  sub_2311F1460((uint64_t)v21);
  sub_2311786C0((uint64_t)v21, &qword_255EB8ED8, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemViewData);
  v32 = sub_231261EAC();
  v33 = (void (*)(uint64_t))MEMORY[0x24BDCEEA8];
  v34 = (uint64_t)v43;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v43, 1, 1, v32);
  v35 = v44;
  sub_231262B54();
  sub_2312632EC();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v35, v46);
  sub_2311786C0(v34, (unint64_t *)&qword_254151918, v33);
  v36 = (void *)sub_23126406C();
  swift_bridgeObjectRelease();
  objc_msgSend(v40, sel_setTitle_, v36);

}

uint64_t sub_2311C4A28(void *a1)
{
  void *v2;
  id v3;
  _QWORD v5[4];

  sub_231243720(a1);
  sub_2312629EC();
  v2 = (void *)sub_2312629E0();
  sub_2312629BC();

  v5[3] = sub_23118CD18();
  v5[0] = a1;
  v3 = a1;
  sub_2311C50D8((uint64_t)v5);
  return sub_231178498((uint64_t)v5, (uint64_t (*)(_QWORD))sub_23117DD88);
}

uint64_t sub_2311C4ABC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v3 = type metadata accessor for NewRecordsFeedItemData(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311787F4(0, &qword_255EB8ED0, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemData);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v25 - v8;
  sub_2311787F4(0, (unint64_t *)&qword_254154938, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v25 - v11;
  v13 = (uint64_t)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x60);
  swift_beginAccess();
  sub_231178A84(v13, (uint64_t)v9, &qword_255EB8ED0, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemData);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3))
  {
    sub_2311786C0((uint64_t)v9, &qword_255EB8ED0, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemData);
    v14 = sub_231261E40();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v12, 1, 1, v14);
  }
  else
  {
    sub_231178454((uint64_t)v9, (uint64_t)v6, type metadata accessor for NewRecordsFeedItemData);
    sub_2311786C0((uint64_t)v9, &qword_255EB8ED0, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemData);
    sub_231178A84((uint64_t)&v6[*(int *)(v3 + 32)], (uint64_t)v12, (unint64_t *)&qword_254154938, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    sub_231178498((uint64_t)v6, type metadata accessor for NewRecordsFeedItemData);
    v15 = sub_231261E40();
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v12, 1, v15) != 1)
    {
      sub_23118CDD8();
      v19 = a1 + *(int *)(v18 + 48);
      (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(a1, v12, v15);
      v20 = *MEMORY[0x24BE43120];
      v21 = sub_231263580();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v19, v20, v21);
      v17 = (unsigned int *)MEMORY[0x24BE43130];
      goto LABEL_6;
    }
  }
  v17 = (unsigned int *)MEMORY[0x24BE43138];
LABEL_6:
  v22 = *v17;
  v23 = sub_23126358C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(a1, v22, v23);
}

void sub_2311C4D68()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  void *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[3];
  uint64_t v30;

  v1 = sub_231263B5C();
  v27 = *(_QWORD *)(v1 - 8);
  v28 = v1;
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v25 - v5;
  v7 = sub_231263424();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0x70);
  v26 = v0;
  v12 = (uint64_t)v0 + v11;
  swift_beginAccess();
  sub_23118CE48(v12, (uint64_t)v29, (unint64_t *)&qword_2541548B0, (unint64_t *)&qword_2541548A0);
  v13 = v30;
  if (v30)
  {
    v14 = sub_231173410(v29, v30);
    v15 = *(_QWORD *)(v13 - 8);
    MEMORY[0x24BDAC7A8](v14);
    v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v15 + 16))(v17);
    sub_231263778();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v13);
    if ((*(unsigned int (**)(char *, uint64_t))(v8 + 88))(v10, v7) == *MEMORY[0x24BE425F0])
    {
      sub_231173434((uint64_t)v29);
      sub_231263B2C();
      v18 = sub_231263B50();
      v19 = sub_2312643F0();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v20 = 0;
        _os_log_impl(&dword_23116F000, v18, v19, "User dismissed NewRecords tile", v20, 2u);
        MEMORY[0x2348D85EC](v20, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v28);
      v29[0] = v26;
      type metadata accessor for NewRecordsFeedItemViewController();
      sub_2311C5F24(&qword_255EB8EE0, (uint64_t)&unk_231267E48);
      sub_231262C38();
      sub_2312629EC();
      v21 = (void *)sub_2312629E0();
      sub_2312629BC();

    }
    else
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      sub_231173434((uint64_t)v29);
      sub_231263B2C();
      v22 = sub_231263B50();
      v23 = sub_2312643D8();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v24 = 0;
        _os_log_impl(&dword_23116F000, v22, v23, "didTapDismis invoked for tile without a dismiss button!", v24, 2u);
        MEMORY[0x2348D85EC](v24, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v28);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2311C50D8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  char *v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void *v37;
  void *v38;
  void *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[3];
  uint64_t v53;

  v48 = a1;
  v2 = sub_231263B5C();
  v50 = *(_QWORD *)(v2 - 8);
  v51 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v49 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for NewRecordsFeedItemData(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311787F4(0, &qword_255EB8ED0, v8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v47 - v10;
  sub_2311787F4(0, &qword_254153510, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v47 - v13;
  v15 = sub_231261E94();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (uint64_t)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x60);
  swift_beginAccess();
  sub_231178A84(v19, (uint64_t)v11, &qword_255EB8ED0, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemData);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4))
  {
    sub_2311786C0((uint64_t)v11, &qword_255EB8ED0, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemData);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
LABEL_4:
    sub_2311786C0((uint64_t)v14, &qword_254153510, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
    v22 = v49;
    sub_231263B2C();
    v23 = sub_231263B50();
    v24 = sub_2312643D8();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_23116F000, v23, v24, "Error tapping on NewRecords feed item without an accountId", v25, 2u);
      MEMORY[0x2348D85EC](v25, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v22, v51);
  }
  v20 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v47 = v18;
  v21 = v1;
  sub_231178454((uint64_t)v11, (uint64_t)v7, type metadata accessor for NewRecordsFeedItemData);
  sub_2311786C0((uint64_t)v11, &qword_255EB8ED0, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemData);
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v14, v7, v15);
  sub_231178498((uint64_t)v7, type metadata accessor for NewRecordsFeedItemData);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    goto LABEL_4;
  v27 = v15;
  v28 = v16;
  v29 = v47;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v47, v14, v15);
  sub_2312628A8();
  v30 = (void *)sub_231262884();
  v31 = (uint64_t)v1 + *(_QWORD *)((*v20 & *v1) + 0x70);
  swift_beginAccess();
  result = sub_23118CE48(v31, (uint64_t)v52, (unint64_t *)&qword_2541548B0, (unint64_t *)&qword_2541548A0);
  v32 = v53;
  if (v53)
  {
    v33 = sub_231173410(v52, v53);
    v34 = *(_QWORD *)(v32 - 8);
    MEMORY[0x24BDAC7A8](v33);
    v36 = (char *)&v47 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v34 + 16))(v36);
    v37 = (void *)sub_23126376C();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v32);
    v38 = (void *)sub_231262890();

    sub_231173434((uint64_t)v52);
    sub_2311C4524((uint64_t)v52);
    sub_231173410(v52, v53);
    v39 = (void *)sub_231262F14();
    sub_231173434((uint64_t)v52);
    sub_231178454(v48, (uint64_t)v52, (uint64_t (*)(_QWORD))sub_23117DD88);
    v40 = v53;
    if (v53)
    {
      v41 = sub_231173410(v52, v53);
      v42 = *(_QWORD *)(v40 - 8);
      MEMORY[0x24BDAC7A8](v41);
      v44 = (char *)&v47 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v42 + 16))(v44);
      v45 = sub_231264B40();
      v46 = *(void (**)(char *, uint64_t))(v42 + 8);
      v29 = v47;
      v46(v44, v40);
      sub_231173434((uint64_t)v52);
    }
    else
    {
      v45 = 0;
    }
    objc_msgSend(v21, sel_showViewController_sender_, v39, v45);

    swift_unknownObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v29, v27);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_2311C5650(_BYTE *a1, uint64_t a2, uint64_t a3, void *a4)
{
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  objc_super v19;

  if (a3)
  {
    sub_23126409C();
    v6 = &a1[qword_255EB8CF0];
    *(_OWORD *)v6 = 0u;
    *((_OWORD *)v6 + 1) = 0u;
    *((_QWORD *)v6 + 4) = 0;
    v7 = &a1[qword_255EC2058];
    v8 = *MEMORY[0x24BE42848];
    v9 = sub_23126346C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
    a1[qword_255EC2060] = 1;
    v10 = a4;
    v11 = (void *)sub_23126406C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = &a1[qword_255EB8CF0];
    *(_OWORD *)v12 = 0u;
    *((_OWORD *)v12 + 1) = 0u;
    *((_QWORD *)v12 + 4) = 0;
    v13 = &a1[qword_255EC2058];
    v14 = *MEMORY[0x24BE42848];
    v15 = sub_23126346C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v13, v14, v15);
    a1[qword_255EC2060] = 1;
    v16 = a4;
    v11 = 0;
  }
  v19.receiver = a1;
  v19.super_class = (Class)type metadata accessor for NewRecordsFeedItemViewController();
  v17 = objc_msgSendSuper2(&v19, sel_initWithNibName_bundle_, v11, a4);

  return v17;
}

id sub_2311C57B8(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  objc_super v10;

  v5 = &a1[qword_255EB8CF0];
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((_QWORD *)v5 + 4) = 0;
  v6 = &a1[qword_255EC2058];
  v7 = *MEMORY[0x24BE42848];
  v8 = sub_23126346C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v6, v7, v8);
  a1[qword_255EC2060] = 1;
  v10.receiver = a1;
  v10.super_class = (Class)type metadata accessor for NewRecordsFeedItemViewController();
  return objc_msgSendSuper2(&v10, sel_initWithCoder_, a3);
}

uint64_t sub_2311C5868()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23118CCC4(v0 + qword_255EB8CF0);
  v1 = v0 + qword_255EC2058;
  v2 = sub_23126346C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

id sub_2311C58B4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NewRecordsFeedItemViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2311C58E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_23118CCC4(a1 + qword_255EB8CF0);
  v2 = a1 + qword_255EC2058;
  v3 = sub_23126346C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t type metadata accessor for NewRecordsFeedItemViewController()
{
  uint64_t result;

  result = qword_255EB8D20;
  if (!qword_255EB8D20)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2311C5974()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23126346C();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_2311C59F4()
{
  return type metadata accessor for NewRecordsFeedItemViewController();
}

uint64_t sub_2311C5A00@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + qword_255EC2058;
  v4 = sub_23126346C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_2311C5A48@<X0>(uint64_t a1@<X8>)
{
  return sub_2311C4ABC(a1);
}

uint64_t sub_2311C5A68(uint64_t a1)
{
  MEMORY[0x2348D8544](&unk_231267F08, a1);
  MEMORY[0x2348D8544](&protocol conformance descriptor for BaseFeedItemViewController<A>, a1);
  return sub_2312637CC() & 1;
}

uint64_t sub_2311C5AC8@<X0>(char *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  char *v25;
  char *v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v33)(char *, char *, uint64_t);
  unsigned int v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;

  v39 = a1;
  v2 = sub_231263B5C();
  v37 = *(_QWORD *)(v2 - 8);
  v38 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v36 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for NewRecordsFeedItemData(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311787F4(0, &qword_255EB8ED0, v8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v35 - v10;
  sub_2311787F4(0, &qword_254153510, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v35 - v16;
  v18 = sub_231261E94();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (uint64_t)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x60);
  swift_beginAccess();
  sub_231178A84(v22, (uint64_t)v11, &qword_255EB8ED0, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemData);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4))
  {
    sub_2311786C0((uint64_t)v11, &qword_255EB8ED0, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemData);
    v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
    v23(v15, 1, 1, v18);
LABEL_4:
    v25 = v39;
    sub_2311786C0((uint64_t)v15, &qword_254153510, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
    v23(v17, 1, 1, v18);
    goto LABEL_5;
  }
  sub_231178454((uint64_t)v11, (uint64_t)v7, type metadata accessor for NewRecordsFeedItemData);
  sub_2311786C0((uint64_t)v11, &qword_255EB8ED0, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemData);
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v15, v7, v18);
  sub_231178498((uint64_t)v7, type metadata accessor for NewRecordsFeedItemData);
  v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
  v23(v15, 0, 1, v18);
  v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v24(v15, 1, v18) == 1)
    goto LABEL_4;
  v33 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
  v33(v17, v15, v18);
  v23(v17, 0, 1, v18);
  v34 = v24(v17, 1, v18);
  v25 = v39;
  if (v34 != 1)
  {
    v33(v21, v17, v18);
    v33(v25, v21, v18);
    goto LABEL_8;
  }
LABEL_5:
  sub_2311786C0((uint64_t)v17, &qword_254153510, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
  v26 = v36;
  sub_231263B14();
  v27 = sub_231263B50();
  v28 = sub_2312643D8();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v29 = 0;
    _os_log_impl(&dword_23116F000, v27, v28, "NewRecordsFeedItemViewController - Error accessing NewRecordsFeedItemData.accountId", v29, 2u);
    MEMORY[0x2348D85EC](v29, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v37 + 8))(v26, v38);
  sub_231261E88();
LABEL_8:
  v30 = *MEMORY[0x24BE49618];
  v31 = sub_231262E3C();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v25, v30, v31);
}

uint64_t sub_2311C5EE0@<X0>(char *a1@<X8>)
{
  return sub_2311C5AC8(a1);
}

uint64_t sub_2311C5F00()
{
  return sub_2311C5F24(&qword_255EB8EC8, (uint64_t)&unk_231267E88);
}

uint64_t sub_2311C5F24(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for NewRecordsFeedItemViewController();
    result = MEMORY[0x2348D8544](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2311C5F64(uint64_t a1)
{
  return sub_2311C5FB4(a1, 0xD000000000000021, 0x800000023126C980, &qword_254155B90, algn_254155B98);
}

uint64_t sub_2311C5F8C(uint64_t a1)
{
  return sub_2311C5FB4(a1, 0xD000000000000029, 0x800000023126C9B0, &qword_255EC2068, &qword_255EC2070);
}

uint64_t sub_2311C5FB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;

  v7 = sub_231262B60();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311A62D4();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_231261EAC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  sub_231262B3C();
  v15 = sub_2312632EC();
  v17 = v16;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  result = sub_23117A588((uint64_t)v13);
  *a4 = v15;
  *a5 = v17;
  return result;
}

uint64_t sub_2311C60EC()
{
  return 0x656C746974;
}

uint64_t sub_2311C6100@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_231264B58();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2311C618C()
{
  sub_2311C780C();
  return sub_231264C6C();
}

uint64_t sub_2311C61B4()
{
  sub_2311C780C();
  return sub_231264C78();
}

uint64_t sub_2311C61DC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  sub_2311C7850(0, (unint64_t *)&unk_2541532F8, MEMORY[0x24BEE33E0]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v14 - v8;
  sub_231173410(a1, a1[3]);
  sub_2311C780C();
  sub_231264C54();
  if (v2)
    return sub_231173434((uint64_t)a1);
  v10 = sub_231264A50();
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  result = sub_231173434((uint64_t)a1);
  *a2 = v10;
  a2[1] = v12;
  return result;
}

uint64_t sub_2311C6308(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_2311C7850(0, &qword_254154668, MEMORY[0x24BEE3520]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v8 - v5;
  sub_231173410(a1, a1[3]);
  sub_2311C780C();
  sub_231264C60();
  sub_231264AC8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_2311C63FC()
{
  uint64_t result;
  uint64_t v1;

  sub_23126382C();
  result = sub_231263820();
  qword_2541532D0 = v1;
  return result;
}

uint64_t sub_2311C642C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[40];
  __int128 v8;
  uint64_t v9;
  uint64_t v10;

  v3 = v1 + OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController____lazy_storage___factory;
  swift_beginAccess();
  sub_23118CE48(v3, (uint64_t)&v8, &qword_255EB7C98, (unint64_t *)&unk_255EB8F80);
  if (!v9)
  {
    sub_231178970((uint64_t)&v8, &qword_255EB7C98, (unint64_t *)&unk_255EB8F80);
    v4 = sub_231262CC8();
    v5 = sub_231262CBC();
    v9 = v4;
    v10 = MEMORY[0x24BE49490];
    *(_QWORD *)&v8 = v5;
    sub_23118CE98((uint64_t)&v8, (uint64_t)v7);
    swift_beginAccess();
    sub_23118CEDC((uint64_t)v7, v3);
    swift_endAccess();
  }
  return sub_2311789AC(&v8, a1);
}

id sub_2311C6524()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController____lazy_storage___label;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController____lazy_storage___label);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController____lazy_storage___label);
  }
  else
  {
    v4 = v0;
    sub_2312634C0();
    sub_231178AD0(0, &qword_2541548C0);
    sub_23126460C();
    v5 = objc_msgSend((id)objc_opt_self(), sel_linkColor);
    v6 = (void *)sub_23126466C();
    objc_msgSend(v6, sel_setLineBreakMode_, 0);
    objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v7 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

void sub_2311C6630()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  objc_super v13;

  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for ClinicalSharingOnboardingTileViewController();
  objc_msgSendSuper2(&v13, sel_viewDidLoad);
  v1 = objc_msgSend(v0, sel_view);
  if (!v1)
  {
    __break(1u);
    goto LABEL_8;
  }
  v2 = v1;
  v3 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemGroupedBackgroundColor);
  objc_msgSend(v2, sel_setBackgroundColor_, v3);

  v4 = objc_msgSend(v0, sel_view);
  if (!v4)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v5 = v4;
  v6 = sub_2311C6524();
  objc_msgSend(v5, sel_addSubview_, v6);

  v7 = objc_msgSend(v0, sel_view);
  if (!v7)
  {
LABEL_9:
    __break(1u);
    return;
  }
  v8 = v7;
  v9 = objc_msgSend(v7, sel_heightAnchor);

  v10 = objc_msgSend(v9, sel_constraintGreaterThanOrEqualToConstant_, 44.0);
  objc_msgSend(v10, sel_setActive_, 1);

  v11 = sub_2311C6524();
  v12 = objc_msgSend(v0, sel_view);
  if (qword_2541532E0 != -1)
    swift_once();
  sub_2312645B8();
  objc_msgSend(v11, sel_hk_alignConstraintsWithView_insets_, v12);

  sub_2311C699C();
  sub_2311C6844();
}

void sub_2311C6844()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  id v9;
  void *v10;

  sub_2311C7680();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_231265570;
  *(_QWORD *)(v1 + 32) = sub_23126409C();
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = 0xD000000000000013;
  *(_QWORD *)(v1 + 56) = 0x800000023126C9E0;
  v3 = (void *)sub_2312641EC();
  swift_bridgeObjectRelease();
  v4 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v4)
  {
    v5 = sub_23126409C();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  v8 = (uint64_t *)(v0 + OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController_baseIdentifier);
  swift_beginAccess();
  *v8 = v5;
  v8[1] = v7;
  swift_bridgeObjectRelease();
  v9 = sub_2311C6524();
  if (v8[1])
  {
    swift_bridgeObjectRetain();
    v10 = (void *)sub_23126406C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0;
  }
  objc_msgSend(v9, sel_setAccessibilityIdentifier_, v10);

}

uint64_t sub_2311C699C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  void *v13;
  _QWORD v14[2];
  uint64_t v15;
  uint64_t v16;

  v14[1] = swift_getObjectType();
  v1 = sub_231263B5C();
  MEMORY[0x24BDAC7A8](v1);
  v2 = v0 + OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController_context;
  swift_beginAccess();
  result = sub_23118CE48(v2, (uint64_t)&v15, (unint64_t *)&qword_2541548B0, (unint64_t *)&qword_2541548A0);
  v4 = v16;
  if (v16)
  {
    v5 = sub_231173410(&v15, v16);
    v6 = *(_QWORD *)(v4 - 8);
    MEMORY[0x24BDAC7A8](v5);
    v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v6 + 16))(v8);
    v9 = sub_231263784();
    v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
    result = sub_231173434((uint64_t)&v15);
    if (v11 >> 60 != 15)
    {
      sub_231261C54();
      swift_allocObject();
      sub_231261C48();
      sub_2311C763C();
      sub_231261C3C();
      swift_release();
      v12 = sub_2311C6524();
      v13 = (void *)sub_23126406C();
      swift_bridgeObjectRelease();
      objc_msgSend(v12, sel_setText_, v13);

      return sub_23118078C(v9, v11);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_2311C6CE0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  char v9;
  void *v10;
  _QWORD v12[3];
  uint64_t v13;

  v1 = v0;
  v2 = sub_231262BFC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(v0, sel_navigationController);
  if (!v6)
    goto LABEL_4;
  v7 = v6;
  v8 = objc_msgSend(v6, sel_topViewController);

  if (!v8
    || (sub_2311C642C((uint64_t)v12),
        sub_231173410(v12, v13),
        v9 = sub_231262F20(),
        v8,
        sub_231173434((uint64_t)v12),
        (v9 & 1) == 0))
  {
LABEL_4:
    sub_2311C642C((uint64_t)v12);
    sub_231173410(v12, v13);
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BE493E0], v2);
    v10 = (void *)sub_231262F08();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_231173434((uint64_t)v12);
    objc_msgSend(v1, sel_showViewController_sender_, v10, v1);

  }
}

id sub_2311C6EDC(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v4;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  objc_super v17;

  v4 = v3;
  v7 = &v3[OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController_context];
  *(_OWORD *)v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((_QWORD *)v7 + 4) = 0;
  v8 = &v3[OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController_baseIdentifier];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  v9 = &v3[OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController____lazy_storage___factory];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  v10 = OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController_profile;
  sub_2312628A8();
  v11 = v3;
  v12 = (void *)sub_231262884();
  v13 = sub_231262860();

  *(_QWORD *)&v4[v10] = v13;
  *(_QWORD *)&v11[OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController____lazy_storage___label] = 0;

  if (a2)
  {
    v14 = (void *)sub_23126406C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = 0;
  }
  v17.receiver = v11;
  v17.super_class = (Class)type metadata accessor for ClinicalSharingOnboardingTileViewController();
  v15 = objc_msgSendSuper2(&v17, sel_initWithNibName_bundle_, v14, a3);

  return v15;
}

id sub_2311C7054(void *a1)
{
  char *v1;
  char *v2;
  char *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  id v11;
  objc_super v13;

  v2 = v1;
  v4 = &v1[OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController_context];
  *(_OWORD *)v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((_QWORD *)v4 + 4) = 0;
  v5 = &v1[OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController_baseIdentifier];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v6 = &v1[OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController____lazy_storage___factory];
  *(_OWORD *)v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *((_QWORD *)v6 + 4) = 0;
  v7 = OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController_profile;
  sub_2312628A8();
  v8 = v1;
  v9 = (void *)sub_231262884();
  v10 = sub_231262860();

  *(_QWORD *)&v2[v7] = v10;
  *(_QWORD *)&v8[OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController____lazy_storage___label] = 0;

  v13.receiver = v8;
  v13.super_class = (Class)type metadata accessor for ClinicalSharingOnboardingTileViewController();
  v11 = objc_msgSendSuper2(&v13, sel_initWithCoder_, a1);

  return v11;
}

id sub_2311C7158()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClinicalSharingOnboardingTileViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ClinicalSharingOnboardingTileViewController()
{
  return objc_opt_self();
}

uint64_t sub_2311C7244@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController_context;
  swift_beginAccess();
  return sub_23118CE48(v3, a1, (unint64_t *)&qword_2541548B0, (unint64_t *)&qword_2541548A0);
}

uint64_t sub_2311C72AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController_context;
  swift_beginAccess();
  sub_231180560(a1, v3);
  swift_endAccess();
  sub_2311C699C();
  return sub_231178970(a1, (unint64_t *)&qword_2541548B0, (unint64_t *)&qword_2541548A0);
}

uint64_t (*sub_2311C7330(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_2311C7378;
}

uint64_t sub_2311C7378(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_2311C699C();
  return result;
}

void sub_2311C73A8()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE49BC0]), sel_initWithContext_onboardingOptions_sourceIdentifier_profile_existingAccount_, 6, 1, 0, *(_QWORD *)((char *)*v0 + OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController_profile), 0);
  objc_msgSend(v2, sel_setOnboardingDelegate_, v1);
  objc_msgSend(v1, sel_presentViewController_animated_completion_, v2, 1, 0);

}

uint64_t sub_2311C7438()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController_baseIdentifier);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_2311C7490(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v5;

  v5 = (_QWORD *)(*v2 + OBJC_IVAR____TtC13HealthRecords43ClinicalSharingOnboardingTileViewController_baseIdentifier);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2311C74F0())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_2311C753C(char a1)
{
  id *v1;
  id v3;
  void *v4;
  id v5;
  id v6;

  v3 = objc_msgSend(*v1, sel_view);
  if (v3)
  {
    v4 = v3;
    if ((a1 & 1) != 0)
    {
      sub_231178AD0(0, &qword_254154640);
      v5 = (id)sub_231264654();
    }
    else
    {
      v5 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemGroupedBackgroundColor);
    }
    v6 = v5;
    objc_msgSend(v4, sel_setBackgroundColor_);

  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_2311C75F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254153288;
  if (!qword_254153288)
  {
    v1 = type metadata accessor for ClinicalSharingOnboardingTileViewController();
    result = MEMORY[0x2348D8544](&unk_231267FB4, v1);
    atomic_store(result, (unint64_t *)&qword_254153288);
  }
  return result;
}

unint64_t sub_2311C763C()
{
  unint64_t result;

  result = qword_2541532F0;
  if (!qword_2541532F0)
  {
    result = MEMORY[0x2348D8544](&unk_2312680C0, &type metadata for ClinicalSharingOnboardingTileViewController.ViewModel);
    atomic_store(result, (unint64_t *)&qword_2541532F0);
  }
  return result;
}

void sub_2311C7680()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541557B0)
  {
    v0 = sub_231264B34();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541557B0);
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for ClinicalSharingOnboardingTileViewController.ViewModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ClinicalSharingOnboardingTileViewController.ViewModel()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for ClinicalSharingOnboardingTileViewController.ViewModel(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for ClinicalSharingOnboardingTileViewController.ViewModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClinicalSharingOnboardingTileViewController.ViewModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClinicalSharingOnboardingTileViewController.ViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingOnboardingTileViewController.ViewModel()
{
  return &type metadata for ClinicalSharingOnboardingTileViewController.ViewModel;
}

unint64_t sub_2311C780C()
{
  unint64_t result;

  result = qword_254154900;
  if (!qword_254154900)
  {
    result = MEMORY[0x2348D8544](&unk_2312681D4, &type metadata for ClinicalSharingOnboardingTileViewController.ViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254154900);
  }
  return result;
}

void sub_2311C7850(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_2311C780C();
    v7 = a3(a1, &type metadata for ClinicalSharingOnboardingTileViewController.ViewModel.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for ClinicalSharingOnboardingTileViewController.ViewModel.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2311C78EC + 4 * byte_231267F50[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2311C790C + 4 * byte_231267F55[v4]))();
}

_BYTE *sub_2311C78EC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2311C790C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2311C7914(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2311C791C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2311C7924(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2311C792C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingOnboardingTileViewController.ViewModel.CodingKeys()
{
  return &type metadata for ClinicalSharingOnboardingTileViewController.ViewModel.CodingKeys;
}

unint64_t sub_2311C794C()
{
  unint64_t result;

  result = qword_255EB8F90;
  if (!qword_255EB8F90)
  {
    result = MEMORY[0x2348D8544](&unk_2312681AC, &type metadata for ClinicalSharingOnboardingTileViewController.ViewModel.CodingKeys);
    atomic_store(result, &qword_255EB8F90);
  }
  return result;
}

unint64_t sub_2311C7994()
{
  unint64_t result;

  result = qword_254154928;
  if (!qword_254154928)
  {
    result = MEMORY[0x2348D8544](&unk_23126811C, &type metadata for ClinicalSharingOnboardingTileViewController.ViewModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254154928);
  }
  return result;
}

unint64_t sub_2311C79DC()
{
  unint64_t result;

  result = qword_254154910[0];
  if (!qword_254154910[0])
  {
    result = MEMORY[0x2348D8544](&unk_231268144, &type metadata for ClinicalSharingOnboardingTileViewController.ViewModel.CodingKeys);
    atomic_store(result, qword_254154910);
  }
  return result;
}

uint64_t static ConceptSharableModelVersioning.delimiter.getter()
{
  return 3815994;
}

uint64_t static ConceptSharableModelVersioning.versionPrefix.getter()
{
  swift_getMetatypeMetadata();
  return sub_2312640B4();
}

uint64_t static ConceptSharableModelVersioning.stringIdentifier(for:)()
{
  swift_getMetatypeMetadata();
  sub_2312640B4();
  sub_231264144();
  swift_bridgeObjectRelease();
  sub_231264144();
  swift_bridgeObjectRelease();
  sub_2312642F4();
  return 0;
}

uint64_t static ConceptSharableModelVersioning.version(from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  int v11;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;

  swift_getMetatypeMetadata();
  v14 = sub_2312640B4();
  v15 = v4;
  sub_231264144();
  swift_bridgeObjectRelease();
  v5 = sub_231264198();
  swift_bridgeObjectRelease();
  if ((v5 & 1) == 0)
    return 0;
  v14 = a1;
  v15 = a2;
  sub_231188564();
  v6 = (_QWORD *)sub_231264774();
  swift_bridgeObjectRelease();
  if (v6[2] != 2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v8 = v6[6];
  v7 = v6[7];
  swift_bridgeObjectRetain();
  v9 = swift_bridgeObjectRelease();
  MEMORY[0x24BDAC7A8](v9);
  if ((v7 & 0x1000000000000000) != 0 || !(v7 & 0x2000000000000000 | v8 & 0x1000000000000000))
  {
    sub_2312648B8();
    swift_bridgeObjectRelease();
    v11 = v14;
  }
  else if ((v7 & 0x2000000000000000) != 0)
  {
    v14 = v8;
    v15 = v7 & 0xFFFFFFFFFFFFFFLL;
    v11 = (v8 > 0x20u || ((0x100003E01uLL >> v8) & 1) == 0)
       && (v13 = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0
       && *v13 == 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((v8 & 0x1000000000000000) != 0)
      v10 = (_BYTE *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v10 = (_BYTE *)sub_2312648F4();
    sub_2311C7D28(v10, (BOOL *)&v14);
    v11 = v14;
    swift_bridgeObjectRelease();
  }
  if (v11)
    return 0;
  else
    return 0;
}

_BYTE *sub_2311C7D28@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v3 = *result;
  v4 = v3 > 0x20;
  v5 = (1 << v3) & 0x100003E01;
  v6 = v4 || v5 == 0;
  v7 = v6 && (result = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

uint64_t sub_2311C7D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v5)(uint64_t, uint64_t);

  v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5(a2, a3);
  return swift_release();
}

uint64_t sub_2311C7DDC()
{
  void *v0;
  void *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  id v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  uint64_t v17;
  _QWORD v19[2];

  v1 = v0;
  ObjectType = swift_getObjectType();
  sub_2311C99BC();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311C9D0C();
  v9 = v8;
  v19[0] = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v1;
  *(_QWORD *)(v12 + 24) = ObjectType;
  v13 = MEMORY[0x24BDB9E38];
  sub_2311C9DD4(0, &qword_254154588, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9E38]);
  sub_2311C9E64(&qword_254154580, &qword_254154588, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v13, MEMORY[0x24BDB9E58]);
  v14 = v1;
  sub_231263DD8();
  sub_231172048(&qword_2541545D0, (uint64_t (*)(uint64_t))sub_2311C99BC, MEMORY[0x24BDB9E90]);
  v15 = sub_231263E38();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v19[1] = v15;
  v16 = MEMORY[0x24BDB9AE0];
  sub_2311C9DD4(0, (unint64_t *)&qword_254152F88, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_2311735E0(0, &qword_2541534D8, (uint64_t (*)(uint64_t))sub_2311A17E4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_2311C9E64(&qword_254152F80, (unint64_t *)&qword_254152F88, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v16, MEMORY[0x24BDB9AF8]);
  sub_231263E80();
  swift_release();
  sub_231172048(&qword_254153400, (uint64_t (*)(uint64_t))sub_2311C9D0C, MEMORY[0x24BDB96C0]);
  v17 = sub_231263E38();
  (*(void (**)(char *, uint64_t))(v19[0] + 8))(v11, v9);
  return v17;
}

uint64_t sub_2311C8038@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4;
  uint64_t result;

  *(_QWORD *)(swift_allocObject() + 16) = a1;
  sub_2311C9DD4(0, &qword_254154588, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9E38]);
  swift_allocObject();
  v4 = a1;
  result = sub_231263DB4();
  *a2 = result;
  return result;
}

void sub_2311C80C0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v9[6];

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_2311C9998;
  *(_QWORD *)(v7 + 24) = v6;
  v9[4] = sub_2311C999C;
  v9[5] = v7;
  v9[0] = MEMORY[0x24BDAC760];
  v9[1] = 1107296256;
  v9[2] = sub_2311C8210;
  v9[3] = &unk_25000CF10;
  v8 = _Block_copy(v9);
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_fetchAllAccountsWithCompletion_, v8);
  _Block_release(v8);
}

void sub_2311C81A4(void *a1, id a2, void (*a3)(id, uint64_t))
{
  id v5;

  if (a2)
  {
    v5 = a2;
    a3(a2, 1);

  }
  else
  {
    if (!a1)
      a1 = (void *)MEMORY[0x24BEE4AF8];
    a3(a1, 0);
  }
}

uint64_t sub_2311C8210(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  id v6;

  v4 = a2;
  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_231178AD0(0, (unint64_t *)&qword_2541556E0);
    v4 = sub_2312641F8();
  }
  swift_retain();
  v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2311C829C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4;
  uint64_t result;

  *(_QWORD *)(swift_allocObject() + 16) = a1;
  sub_2311C9C24();
  swift_allocObject();
  v4 = a1;
  result = sub_231263DB4();
  *a2 = result;
  return result;
}

void sub_2311C8314(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v9[6];

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_2311C9998;
  *(_QWORD *)(v7 + 24) = v6;
  v9[4] = sub_2311C9D04;
  v9[5] = v7;
  v9[0] = MEMORY[0x24BDAC760];
  v9[1] = 1107296256;
  v9[2] = sub_2311C8210;
  v9[3] = &unk_25000D118;
  v8 = _Block_copy(v9);
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_fetchAllAccountsWithCompletion_, v8);
  _Block_release(v8);
}

void sub_2311C83F8(unint64_t a1, id a2, void (*a3)(id, uint64_t))
{
  id v5;
  uint64_t v7;
  uint64_t i;
  id v9;
  void *v10;
  void *v11;
  void *v12;

  if (a2)
  {
    v5 = a2;
    a3(a2, 1);

    return;
  }
  if (!a1)
  {
    a3((id)MEMORY[0x24BEE4AF8], 0);
    return;
  }
  v12 = (void *)MEMORY[0x24BEE4AF8];
  if (!(a1 >> 62))
  {
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7)
      goto LABEL_6;
LABEL_18:
    swift_bridgeObjectRelease();
    v11 = (void *)MEMORY[0x24BEE4AF8];
LABEL_19:
    a3(v11, 0);
    swift_release();
    return;
  }
  swift_bridgeObjectRetain();
  v7 = sub_2312649A8();
  if (!v7)
    goto LABEL_18;
LABEL_6:
  if (v7 >= 1)
  {
    for (i = 0; i != v7; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v9 = (id)MEMORY[0x2348D7CE0](i, a1);
      else
        v9 = *(id *)(a1 + 8 * i + 32);
      v10 = v9;
      if (objc_msgSend(v9, sel_isSharingToProvider))
      {
        sub_231264900();
        sub_231264924();
        sub_231264930();
        sub_23126490C();
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease();
    v11 = v12;
    goto LABEL_19;
  }
  __break(1u);
}

uint64_t sub_2311C85D0()
{
  void *v0;
  void *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  id v10;
  uint64_t v11;
  uint64_t v13;

  v1 = v0;
  ObjectType = swift_getObjectType();
  sub_2311C99BC();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v1;
  *(_QWORD *)(v8 + 24) = ObjectType;
  v9 = MEMORY[0x24BDB9E38];
  sub_2311C9DD4(0, &qword_254154588, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9E38]);
  sub_2311C9E64(&qword_254154580, &qword_254154588, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v9, MEMORY[0x24BDB9E58]);
  v10 = v1;
  sub_231263DD8();
  sub_231172048(&qword_2541545D0, (uint64_t (*)(uint64_t))sub_2311C99BC, MEMORY[0x24BDB9E90]);
  v11 = sub_231263E38();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v11;
}

uint64_t sub_2311C8718@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;

  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2311735E0(0, &qword_2541533D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE48800], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v39 - v6;
  v8 = sub_231263A30();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v41 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, &qword_2541534E8, (uint64_t (*)(uint64_t))sub_2311A17E4, v4);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (unint64_t **)((char *)&v39 - v12);
  sub_2311A17E4();
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v45 = (uint64_t)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v40 = (uint64_t)&v39 - v19;
  v20 = *a1;
  v21 = (unint64_t)*a1 >> 62;
  v42 = *a1;
  if (!v21)
  {
    v22 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    v39 = a2;
    if (v22)
      goto LABEL_3;
LABEL_22:
    result = swift_bridgeObjectRelease();
    v38 = MEMORY[0x24BEE4AF8];
LABEL_23:
    *v39 = v38;
    return result;
  }
  swift_bridgeObjectRetain();
  result = sub_2312649A8();
  v22 = result;
  v39 = a2;
  if (!result)
    goto LABEL_22;
LABEL_3:
  if (v22 >= 1)
  {
    v24 = 0;
    v25 = v42;
    v43 = v42 & 0xC000000000000001;
    v46 = MEMORY[0x24BEE4AF8];
    v44 = v22;
    do
    {
      if (v43)
        v26 = (id)MEMORY[0x2348D7CE0](v24, v25);
      else
        v26 = *(id *)(v25 + 8 * v24 + 32);
      v27 = v26;
      sub_23126448C();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
      {
        sub_231189628((uint64_t)v7, &qword_2541533D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE48800]);
        (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v13, 1, 1, v15);

      }
      else
      {
        v28 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
        v29 = v9;
        v30 = v41;
        v28(v41, v7, v8);
        v31 = (char *)v13 + *(int *)(v15 + 48);
        *v13 = v27;
        v32 = v30;
        v9 = v29;
        v25 = v42;
        v28(v31, v32, v8);
        v22 = v44;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15) == 1)
      {
        sub_231189628((uint64_t)v13, &qword_2541534E8, (uint64_t (*)(uint64_t))sub_2311A17E4);
      }
      else
      {
        v33 = v40;
        sub_2311C9EA4((uint64_t)v13, v40);
        sub_2311C9EA4(v33, v45);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v34 = v46;
        else
          v34 = sub_2311DCCE0(0, *(_QWORD *)(v46 + 16) + 1, 1, v46);
        v36 = *(_QWORD *)(v34 + 16);
        v35 = *(_QWORD *)(v34 + 24);
        if (v36 >= v35 >> 1)
          v34 = sub_2311DCCE0(v35 > 1, v36 + 1, 1, v34);
        *(_QWORD *)(v34 + 16) = v36 + 1;
        v37 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
        v46 = v34;
        sub_2311C9EA4(v45, v34 + v37 + *(_QWORD *)(v16 + 72) * v36);
        v22 = v44;
      }
      ++v24;
    }
    while (v22 != v24);
    result = swift_bridgeObjectRelease();
    v38 = v46;
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

uint64_t sub_2311C8AEC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  id v7;
  uint64_t result;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  sub_2311C9DD4(0, &qword_254154588, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9E38]);
  swift_allocObject();
  v7 = a1;
  result = sub_231263DB4();
  *a3 = result;
  return result;
}

void sub_2311C8B78(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  _QWORD v11[6];

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = sub_2311C9998;
  v9[3] = v8;
  v9[4] = a4;
  v11[4] = sub_2311C9AD0;
  v11[5] = v9;
  v11[0] = MEMORY[0x24BDAC760];
  v11[1] = 1107296256;
  v11[2] = sub_2311C8210;
  v11[3] = &unk_25000CFD8;
  v10 = _Block_copy(v11);
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_fetchAllAccountsWithCompletion_, v10);
  _Block_release(v10);
}

void sub_2311C8C6C(uint64_t a1, id a2, void (*a3)(id, uint64_t))
{
  id v5;
  uint64_t v6;

  if (a2)
  {
    v5 = a2;
    a3(a2, 1);

  }
  else if (a1)
  {
    sub_231262F68();
    swift_allocObject();
    swift_bridgeObjectRetain();
    sub_231262F5C();
    v6 = sub_231262F50();
    swift_release();
    a3((id)v6, 0);
    swift_bridgeObjectRelease();
  }
  else
  {
    a3((id)MEMORY[0x24BEE4AF8], 0);
  }
}

uint64_t sub_2311C8D44@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t result;

  *(_QWORD *)(swift_allocObject() + 16) = a1;
  sub_2311C9AE4();
  swift_allocObject();
  v4 = a1;
  sub_231263DB4();
  sub_231172048(&qword_254154590, (uint64_t (*)(uint64_t))sub_2311C9AE4, MEMORY[0x24BDB9E58]);
  v5 = sub_231263E38();
  result = swift_release();
  *a2 = v5;
  return result;
}

void sub_2311C8E14(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v9[6];

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_2311C9BA8;
  *(_QWORD *)(v7 + 24) = v6;
  v9[4] = sub_2311C9BE0;
  v9[5] = v7;
  v9[0] = MEMORY[0x24BDAC760];
  v9[1] = 1107296256;
  v9[2] = sub_2311C7D94;
  v9[3] = &unk_25000D078;
  v8 = _Block_copy(v9);
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_shouldShowHealthRecordsSectionWithCompletion_, v8);
  _Block_release(v8);
}

uint64_t sub_2311C8EF8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[20] = a1;
  v2[21] = v1;
  v2[22] = swift_getObjectType();
  v3 = sub_231263B5C();
  v2[23] = v3;
  v2[24] = *(_QWORD *)(v3 - 8);
  v2[25] = swift_task_alloc();
  v2[26] = swift_task_alloc();
  v2[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2311C8F80()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)v0[21];
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_2311C9014;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_2311C9890;
  v3[3] = &unk_25000CE80;
  v3[4] = v2;
  objc_msgSend(v1, sel_deviceConfigurationSupportsHealthRecords_, v3);
  return swift_continuation_await();
}

uint64_t sub_2311C9014()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 224) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_2311C9074()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint8_t *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 120);
  if (!v1)
  {
    sub_231263B20();
    v2 = sub_231263B50();
    v13 = sub_2312643E4();
    v14 = os_log_type_enabled(v2, v13);
    v5 = *(_QWORD *)(v0 + 216);
    v7 = *(_QWORD *)(v0 + 184);
    v6 = *(_QWORD *)(v0 + 192);
    if (v14)
    {
      v22 = *(_QWORD *)(v0 + 216);
      v21 = *(_QWORD *)(v0 + 184);
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v23 = v16;
      *(_DWORD *)v15 = 136315138;
      v17 = sub_231264C84();
      *(_QWORD *)(v0 + 152) = sub_2311CBDE4(v17, v18, &v23);
      sub_231264750();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23116F000, v2, v13, "%s got an error response from deviceConfigurationSupportsHealthRecords(), which should have thrown", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348D85EC](v16, -1, -1);
      v12 = v15;
      goto LABEL_8;
    }
LABEL_10:

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    goto LABEL_11;
  }
  if (v1 != 1)
  {
    if (v1 == 2)
    {
LABEL_11:
      v19 = 0;
      goto LABEL_12;
    }
    sub_231263B20();
    v2 = sub_231263B50();
    v3 = sub_2312643D8();
    v4 = os_log_type_enabled(v2, v3);
    v5 = *(_QWORD *)(v0 + 208);
    v7 = *(_QWORD *)(v0 + 184);
    v6 = *(_QWORD *)(v0 + 192);
    if (v4)
    {
      v22 = *(_QWORD *)(v0 + 208);
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      v23 = v9;
      v21 = v7;
      *(_DWORD *)v8 = 136315138;
      v10 = sub_231264C84();
      *(_QWORD *)(v0 + 144) = sub_2311CBDE4(v10, v11, &v23);
      sub_231264750();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23116F000, v2, v3, "%s got unknown response from deviceConfigurationSupportsHealthRecords()", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348D85EC](v9, -1, -1);
      v12 = v8;
LABEL_8:
      MEMORY[0x2348D85EC](v12, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v22, v21);
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  v19 = 1;
LABEL_12:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v19);
}

uint64_t sub_2311C9348()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = (void *)v0[28];
  swift_willThrow();
  sub_231263B20();
  v3 = v2;
  v4 = v2;
  v5 = sub_231263B50();
  v6 = sub_2312643D8();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (void *)v0[28];
    v23 = v0[24];
    v24 = v0[23];
    v25 = v0[25];
    v8 = swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    v26 = v22;
    *(_DWORD *)v8 = 136315394;
    v10 = sub_231264C84();
    v0[16] = sub_2311CBDE4(v10, v11, &v26);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2112;
    v12 = v7;
    v13 = _swift_stdlib_bridgeErrorToNSError();
    v0[17] = v13;
    sub_231264750();
    *v9 = v13;

    _os_log_impl(&dword_23116F000, v5, v6, "%s failed calling into deviceConfigurationSupportsHealthRecords(): %@", (uint8_t *)v8, 0x16u);
    sub_2311C9938(0, (unint64_t *)&qword_2541534F8, (unint64_t *)&qword_2541534F0, 0x24BEDCDF0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v22, -1, -1);
    MEMORY[0x2348D85EC](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v24);
  }
  else
  {
    v14 = (void *)v0[28];
    v16 = v1[24];
    v15 = v1[25];
    v17 = v1[23];

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  }
  v18 = (void *)v1[20];
  if (v18)
  {
    v19 = (void *)objc_opt_self();
    v20 = v18;
    if ((objc_msgSend(v19, sel_isAppleInternalInstall) & 1) != 0)
    {
      v1[29] = objc_opt_self();
      v1[30] = sub_23126406C();
      v1[31] = sub_23126406C();
      v1[32] = sub_231261D44();
      v1[33] = sub_2312642B8();
      v1[34] = sub_2312642AC();
      sub_23126427C();
      return swift_task_switch();
    }

  }
  else
  {

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(_QWORD))v1[1])(0);
}

uint64_t sub_2311C96F4()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v1 = (void *)v0[31];
  v2 = (void *)v0[32];
  v4 = (void *)v0[29];
  v3 = (void *)v0[30];
  swift_release();
  v0[35] = objc_msgSend(v4, sel_basicAlertControllerWithTitle_message_internalError_, v3, v1, v2);

  return swift_task_switch();
}

uint64_t sub_2311C9774()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 288) = sub_2312642AC();
  sub_23126427C();
  return swift_task_switch();
}

uint64_t sub_2311C97D4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(void **)(v0 + 160);
  swift_release();
  objc_msgSend(v2, sel_presentViewController_animated_completion_, v1, 1, 0);
  return swift_task_switch();
}

uint64_t sub_2311C9830()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 280);
  v2 = *(void **)(v0 + 160);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_2311C9890(uint64_t a1, uint64_t a2, void *a3)
{
  _QWORD *v4;
  id v5;

  if (a3)
  {
    sub_2311889D8();
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_2311C990C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_2311C9930(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_2311C80C0(a1, a2, *(void **)(v2 + 16));
}

void sub_2311C9938(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_231178AD0(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_2311C999C(void *a1, void *a2)
{
  uint64_t v2;

  sub_2311C81A4(a1, a2, *(void (**)(id, uint64_t))(v2 + 16));
}

uint64_t sub_2311C99A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2311C99B4()
{
  return swift_release();
}

void sub_2311C99BC()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_2541545D8)
  {
    v0 = MEMORY[0x24BDB9E38];
    sub_2311C9DD4(255, &qword_254154588, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9E38]);
    sub_2311C9E64(&qword_254154580, &qword_254154588, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v0, MEMORY[0x24BDB9E58]);
    v1 = sub_231263DE4();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_2541545D8);
  }
}

uint64_t sub_2311C9A54@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_2311C8AEC(*(void **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_2311C9A5C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_2311C9A80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_2311C8B78(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_2311C9A88()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2311C9AAC()
{
  swift_release();
  return swift_deallocObject();
}

void sub_2311C9AD0(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_2311C8C6C(a1, a2, *(void (**)(id, uint64_t))(v2 + 16));
}

void sub_2311C9ADC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_2311C8E14(a1, a2, *(void **)(v2 + 16));
}

void sub_2311C9AE4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254154598)
  {
    sub_2311C9B48();
    v0 = sub_231263DA8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254154598);
  }
}

void sub_2311C9B48()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2541545F0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2541545F0);
  }
}

uint64_t sub_2311C9BA8(int a1)
{
  uint64_t v1;
  uint64_t (*v2)(__int16 *);
  __int16 v4;
  char v5;

  v2 = *(uint64_t (**)(__int16 *))(v1 + 16);
  v4 = a1;
  v5 = BYTE2(a1) & 1;
  return v2(&v4);
}

uint64_t sub_2311C9BE0(char a1, char a2)
{
  uint64_t v2;
  int v3;

  if ((a2 & 1) != 0)
    v3 = 256;
  else
    v3 = 0;
  return (*(uint64_t (**)(_QWORD))(v2 + 16))(v3 & 0xFFFFFFFE | a1 & 1);
}

void sub_2311C9C1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_2311C8314(a1, a2, *(void **)(v2 + 16));
}

void sub_2311C9C24()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254153068)
  {
    sub_2311C9C90();
    sub_2311889D8();
    v0 = sub_231263DA8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254153068);
  }
}

void sub_2311C9C90()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254153110)
  {
    sub_2311C9938(255, (unint64_t *)&qword_254151880, (unint64_t *)&qword_2541556E0, 0x24BE489D0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v0 = sub_231264738();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254153110);
  }
}

void sub_2311C9D04(unint64_t a1, void *a2)
{
  uint64_t v2;

  sub_2311C83F8(a1, a2, *(void (**)(id, uint64_t))(v2 + 16));
}

void sub_2311C9D0C()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_254153408)
  {
    v0 = MEMORY[0x24BDB9AE0];
    sub_2311C9DD4(255, (unint64_t *)&qword_254152F88, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_2311735E0(255, &qword_2541534D8, (uint64_t (*)(uint64_t))sub_2311A17E4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_2311C9E64(&qword_254152F80, (unint64_t *)&qword_254152F88, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v0, MEMORY[0x24BDB9AF8]);
    v1 = sub_231263C1C();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_254153408);
  }
}

void sub_2311C9DD4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_2311C9938(255, (unint64_t *)&qword_254151880, (unint64_t *)&qword_2541556E0, 0x24BE489D0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v7 = v6;
    v8 = sub_2311889D8();
    v9 = a3(a1, v7, v8, MEMORY[0x24BEE3F20]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_2311C9E64(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_2311C9DD4(255, a2, a3);
    result = MEMORY[0x2348D8544](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2311C9EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2311A17E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

Swift::Void __swiftcall BaseFeedItemViewController.reloadView()()
{
  sub_2311CC3E0("reloadView: %{public}s");
}

uint64_t BaseFeedItemViewController.feedItemData.getter@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  char *v3;
  uint64_t v4;

  v3 = (char *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x60);
  swift_beginAccess();
  v4 = sub_231264738();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t BaseFeedItemViewController.feedItemData.setter(uint64_t a1)
{
  uint64_t v2;

  sub_2311CC5D4(a1);
  v2 = sub_231264738();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

void (*BaseFeedItemViewController.feedItemData.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  void *v8;
  char *v9;
  void (*v10)(void *, char *, uint64_t);

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = *MEMORY[0x24BEE4EA0] & *v1;
  v5 = sub_231264738();
  v3[4] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[5] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v3[6] = malloc(v7);
  v8 = malloc(v7);
  v3[7] = v8;
  v9 = (char *)v1 + *(_QWORD *)(v4 + 96);
  swift_beginAccess();
  v10 = *(void (**)(void *, char *, uint64_t))(v6 + 16);
  v3[8] = v10;
  v10(v8, v9, v5);
  return sub_2311CA0E0;
}

void sub_2311CA0E0(uint64_t *a1, char a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void *, uint64_t);
  uint64_t v8;
  uint64_t v9;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = *(void **)(v2 + 56);
    v5 = *(_QWORD *)(v2 + 40);
    v4 = *(void **)(v2 + 48);
    v6 = *(_QWORD *)(v2 + 32);
    (*(void (**)(void *, void *, uint64_t))(v2 + 64))(v4, v3, v6);
    sub_2311CC5D4((uint64_t)v4);
    v7 = *(void (**)(void *, uint64_t))(v5 + 8);
    v7(v4, v6);
    v7(v3, v6);
  }
  else
  {
    v4 = *(void **)(v2 + 48);
    v3 = *(void **)(v2 + 56);
    v8 = *(_QWORD *)(v2 + 32);
    v9 = *(_QWORD *)(v2 + 40);
    sub_2311CC5D4((uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v9 + 8))(v3, v8);
  }
  free(v3);
  free(v4);
  free((void *)v2);
}

uint64_t BaseFeedItemViewController.decoder.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0x68);
  if (*(_QWORD *)((char *)v0 + v1))
  {
    v2 = *(_QWORD *)((char *)v0 + v1);
  }
  else
  {
    v3 = v0;
    sub_231261C54();
    swift_allocObject();
    v2 = sub_231261C48();
    *(_QWORD *)((char *)v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t BaseFeedItemViewController.context.getter@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = (uint64_t)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x70);
  swift_beginAccess();
  return sub_231180680(v3, a1);
}

uint64_t BaseFeedItemViewController.context.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;

  sub_2311CB470();
  v3 = (uint64_t)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x70);
  swift_beginAccess();
  sub_231180560(a1, v3);
  swift_endAccess();
  sub_2311CB660();
  return sub_231180624(a1);
}

void (*BaseFeedItemViewController.context.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x70uLL);
  *a1 = v3;
  v3[13] = v1;
  v4 = (uint64_t)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x70);
  swift_beginAccess();
  sub_231180680(v4, (uint64_t)v3);
  return sub_2311CA374;
}

void sub_2311CA374(uint64_t *a1, char a2)
{
  void *v2;

  v2 = (void *)*a1;
  if ((a2 & 1) != 0)
  {
    sub_231180680(*a1, (uint64_t)v2 + 40);
    BaseFeedItemViewController.context.setter((uint64_t)v2 + 40);
    sub_231180624((uint64_t)v2);
  }
  else
  {
    BaseFeedItemViewController.context.setter(*a1);
  }
  free(v2);
}

uint64_t BaseFeedItemViewController.reloadData()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD v20[8];
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[3];
  uint64_t v25;

  v1 = *MEMORY[0x24BEE4EA0] & *v0;
  v2 = sub_231263B5C();
  v20[5] = *(_QWORD *)(v2 - 8);
  v20[6] = v2;
  MEMORY[0x24BDAC7A8](v2);
  v20[7] = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v1 + 80);
  v5 = sub_231264738();
  v22 = *(_QWORD *)(v5 - 8);
  v23 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v21 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v20 - v8;
  result = BaseFeedItemViewController.context.getter((uint64_t)v24);
  v11 = v25;
  if (v25)
  {
    v12 = sub_231173410(v24, v25);
    v13 = *(_QWORD *)(v11 - 8);
    MEMORY[0x24BDAC7A8](v12);
    v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v13 + 16))(v15);
    v16 = sub_231263784();
    v18 = v17;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v11);
    sub_231173434((uint64_t)v24);
    if (v18 >> 60 == 15)
    {
      v19 = (uint64_t)v21;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v21, 1, 1, v4);
      sub_2311CC5D4(v19);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v19, v23);
    }
    else
    {
      BaseFeedItemViewController.decoder.getter();
      sub_231261C3C();
      swift_release();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v9, 0, 1, v4);
      sub_2311CC5D4((uint64_t)v9);
      (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v23);
      return sub_23118078C(v16, v18);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall BaseFeedItemViewController.didSelectCell(_:in:)(UIView *_, UIViewController *in)
{
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  UIView *v16;
  _QWORD *v17;
  UIView *v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  UIView *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  int v33;
  uint64_t v34;
  char *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  void (*v39)(uint64_t *);
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t ObjectType;
  uint64_t v49[4];

  v4 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v5 = *MEMORY[0x24BEE4EA0] & *v2;
  v6 = *(_QWORD *)(v5 + 0x50);
  v7 = sub_231264738();
  v45 = *(_QWORD *)(v7 - 8);
  v46 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v41 - v8;
  v10 = sub_231263B5C();
  v43 = *(_QWORD *)(v10 - 8);
  v44 = v10;
  v11 = MEMORY[0x24BDAC7A8](v10);
  v42 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v41 - v13;
  sub_231263B2C();
  v15 = v2;
  v16 = _;
  v17 = v15;
  v18 = v16;
  v19 = sub_231263B50();
  v20 = sub_2312643CC();
  v21 = os_log_type_enabled(v19, v20);
  v47 = v5;
  if (v21)
  {
    v22 = swift_slowAlloc();
    v41 = swift_slowAlloc();
    v49[0] = v41;
    *(_DWORD *)v22 = 136446466;
    ObjectType = swift_getObjectType();
    type metadata accessor for BaseFeedItemViewController(255, v6, *(_QWORD *)(v5 + 88), v23);
    swift_getMetatypeMetadata();
    v24 = sub_2312640B4();
    ObjectType = sub_2311CBDE4(v24, v25, v49);
    sub_231264750();

    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2082;
    ObjectType = (uint64_t)v18;
    sub_23118CD18();
    v26 = v18;
    v27 = sub_2312640CC();
    ObjectType = sub_2311CBDE4(v27, v28, v49);
    sub_231264750();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23116F000, v19, v20, "didSelectCell: %{public}s %{public}s", (uint8_t *)v22, 0x16u);
    v29 = v41;
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v29, -1, -1);
    v30 = v22;
    v4 = (_QWORD *)MEMORY[0x24BEE4EA0];
    MEMORY[0x2348D85EC](v30, -1, -1);

  }
  else
  {

  }
  v31 = v44;
  v32 = *(void (**)(char *, uint64_t))(v43 + 8);
  v32(v14, v44);
  BaseFeedItemViewController.feedItemData.getter((uint64_t)v9);
  v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v9, 1, v6);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v9, v46);
  if (v33 == 1)
  {
    v35 = v42;
    sub_231263B2C();
    v36 = sub_231263B50();
    v37 = sub_2312643D8();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v38 = 0;
      _os_log_impl(&dword_23116F000, v36, v37, "User tapped tile before its data was available", v38, 2u);
      MEMORY[0x2348D85EC](v38, -1, -1);
    }

    v32(v35, v31);
  }
  v49[3] = type metadata accessor for BaseFeedItemViewController(0, v6, *(_QWORD *)(v47 + 88), v34);
  v49[0] = (uint64_t)v17;
  v39 = *(void (**)(uint64_t *))((*v4 & *v17) + 0xD0);
  v40 = v17;
  v39(v49);
  sub_23117EBF4((uint64_t)v49);
}

uint64_t BaseFeedItemViewController.deselectionBehavior.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BE43600];
  v3 = sub_23126364C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t BaseFeedItemViewController.didTapTile(sender:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;

  v1 = *v0;
  v2 = *MEMORY[0x24BEE4EA0];
  v3 = sub_231263B5C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231263B2C();
  v7 = v0;
  v8 = sub_231263B50();
  v9 = sub_2312643CC();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = v2 & v1;
    v18 = v3;
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v20 = v12;
    *(_DWORD *)v11 = 136446210;
    ObjectType = swift_getObjectType();
    type metadata accessor for BaseFeedItemViewController(255, *(_QWORD *)(v10 + 80), *(_QWORD *)(v10 + 88), v13);
    swift_getMetatypeMetadata();
    v14 = sub_2312640B4();
    ObjectType = sub_2311CBDE4(v14, v15, &v20);
    sub_231264750();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23116F000, v8, v9, "didTapTile: %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v12, -1, -1);
    MEMORY[0x2348D85EC](v11, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v18);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_2311CAEA0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t v22;

  v1 = *v0;
  v2 = *MEMORY[0x24BEE4EA0];
  v3 = sub_231263B5C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v2 & v1;
  (*(void (**)(uint64_t))((v2 & v1) + 0xC8))(v5);
  sub_231263B2C();
  v9 = v0;
  v10 = sub_231263B50();
  v11 = sub_2312643CC();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v20 = v3;
    v14 = v13;
    v22 = v13;
    *(_DWORD *)v12 = 136446210;
    ObjectType = swift_getObjectType();
    type metadata accessor for BaseFeedItemViewController(255, *(_QWORD *)(v8 + 80), *(_QWORD *)(v8 + 88), v15);
    swift_getMetatypeMetadata();
    v16 = sub_2312640B4();
    ObjectType = sub_2311CBDE4(v16, v17, &v22);
    sub_231264750();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23116F000, v10, v11, "dataDidUpdate: %{public}s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v14, -1, -1);
    MEMORY[0x2348D85EC](v12, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v20);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
}

Swift::Void __swiftcall BaseFeedItemViewController.viewDidLoad()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  objc_class *v8;
  id v9;
  _QWORD *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  objc_super v22;

  v1 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v2 = *MEMORY[0x24BEE4EA0] & *v0;
  v3 = sub_231263B5C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (objc_class *)type metadata accessor for BaseFeedItemViewController(0, *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88), v7);
  v22.receiver = v0;
  v22.super_class = v8;
  v9 = objc_msgSendSuper2(&v22, sel_viewDidLoad);
  (*(void (**)(id))((*v1 & *v0) + 0xC8))(v9);
  sub_231263B2C();
  v10 = v0;
  v11 = sub_231263B50();
  v12 = sub_2312643CC();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v19 = v3;
    v15 = v14;
    v21 = v14;
    *(_DWORD *)v13 = 136446210;
    ObjectType = swift_getObjectType();
    swift_getMetatypeMetadata();
    v16 = sub_2312640B4();
    ObjectType = sub_2311CBDE4(v16, v17, &v21);
    sub_231264750();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23116F000, v11, v12, "viewDidLoad: %{public}s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v15, -1, -1);
    MEMORY[0x2348D85EC](v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v19);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

void sub_2311CB2B8(void *a1)
{
  id v1;

  v1 = a1;
  BaseFeedItemViewController.viewDidLoad()();

}

Swift::Void __swiftcall BaseFeedItemViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  objc_class *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  _BYTE v15[24];
  uint64_t v16;
  objc_super v17;

  v3 = *MEMORY[0x24BEE4EA0] & *v1;
  v4 = sub_231263B5C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = (objc_class *)type metadata accessor for BaseFeedItemViewController(0, *(_QWORD *)(v3 + 80), *(_QWORD *)(v3 + 88), v8);
  v17.receiver = v1;
  v17.super_class = v9;
  objc_msgSendSuper2(&v17, sel_viewDidAppear_, a1);
  BaseFeedItemViewController.context.getter((uint64_t)v15);
  v10 = v16;
  sub_231180624((uint64_t)v15);
  if (!v10)
  {
    sub_231263B2C();
    v11 = sub_231263B50();
    v12 = sub_2312643D8();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_23116F000, v11, v12, "FeedItemViewControllerContext should be set before the tile appears", v13, 2u);
      MEMORY[0x2348D85EC](v13, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  }
}

void sub_2311CB430(void *a1, uint64_t a2, Swift::Bool a3)
{
  id v4;

  v4 = a1;
  BaseFeedItemViewController.viewDidAppear(_:)(a3);

}

uint64_t sub_2311CB470()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;

  v1 = *v0;
  v2 = *MEMORY[0x24BEE4EA0];
  v3 = sub_231263B5C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231263B2C();
  v7 = v0;
  v8 = sub_231263B50();
  v9 = sub_2312643CC();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = v2 & v1;
    v18 = v3;
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v20 = v12;
    *(_DWORD *)v11 = 136446210;
    ObjectType = swift_getObjectType();
    type metadata accessor for BaseFeedItemViewController(255, *(_QWORD *)(v10 + 80), *(_QWORD *)(v10 + 88), v13);
    swift_getMetatypeMetadata();
    v14 = sub_2312640B4();
    ObjectType = sub_2311CBDE4(v14, v15, &v20);
    sub_231264750();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23116F000, v8, v9, "contextWillUpdate: %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v12, -1, -1);
    MEMORY[0x2348D85EC](v11, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v18);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_2311CB660()
{
  _QWORD *v0;
  void *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjectType;
  uint64_t v28[5];

  v1 = v0;
  v2 = (uint64_t *)(*MEMORY[0x24BEE4EA0] & *v0);
  v3 = sub_231263B5C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v24 - v8;
  v10 = (uint64_t)v1 + v2[14];
  swift_beginAccess();
  sub_231180680(v10, (uint64_t)v28);
  v11 = v28[3];
  sub_231180624((uint64_t)v28);
  if (!v11)
  {
    sub_231263B2C();
    v12 = sub_231263B50();
    v13 = sub_2312643D8();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_23116F000, v12, v13, "FeedItemViewControllerContext should never be null", v14, 2u);
      MEMORY[0x2348D85EC](v14, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
  BaseFeedItemViewController.reloadData()();
  sub_231263B2C();
  v15 = v1;
  v16 = sub_231263B50();
  v17 = sub_2312643CC();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v28[0] = v19;
    v26 = v4;
    *(_DWORD *)v18 = 136446210;
    ObjectType = swift_getObjectType();
    type metadata accessor for BaseFeedItemViewController(255, v2[10], v2[11], v20);
    swift_getMetatypeMetadata();
    v25 = v3;
    v21 = sub_2312640B4();
    ObjectType = sub_2311CBDE4(v21, v22, v28);
    sub_231264750();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23116F000, v16, v17, "contextDidUpdate: %{public}s", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v19, -1, -1);
    MEMORY[0x2348D85EC](v18, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v7, v25);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
}

id BaseFeedItemViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_23126406C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

id BaseFeedItemViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  objc_class *v12;
  id v13;
  objc_super v15;

  v6 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v7 = (_QWORD *)(*MEMORY[0x24BEE4EA0] & *(_QWORD *)v3);
  v8 = v7[10];
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(&v3[v7[12]], 1, 1, v8);
  *(_QWORD *)&v3[*(_QWORD *)((*v6 & *(_QWORD *)v3) + 0x68)] = 0;
  v10 = &v3[*(_QWORD *)((*v6 & *(_QWORD *)v3) + 0x70)];
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((_QWORD *)v10 + 4) = 0;
  if (a2)
  {
    v11 = (void *)sub_23126406C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  v12 = (objc_class *)type metadata accessor for BaseFeedItemViewController(0, v8, v7[11], v9);
  v15.receiver = v3;
  v15.super_class = v12;
  v13 = objc_msgSendSuper2(&v15, sel_initWithNibName_bundle_, v11, a3);

  return v13;
}

id sub_2311CBABC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  if (a3)
  {
    v5 = sub_23126409C();
    v7 = v6;
  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  v8 = a4;
  return BaseFeedItemViewController.init(nibName:bundle:)(v5, v7, a4);
}

id BaseFeedItemViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id BaseFeedItemViewController.init(coder:)(void *a1)
{
  char *v1;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  objc_class *v8;
  id v9;
  objc_super v11;

  v3 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v4 = (_QWORD *)(*MEMORY[0x24BEE4EA0] & *(_QWORD *)v1);
  v5 = v4[10];
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(&v1[v4[12]], 1, 1, v5);
  *(_QWORD *)&v1[*(_QWORD *)((*v3 & *(_QWORD *)v1) + 0x68)] = 0;
  v6 = &v1[*(_QWORD *)((*v3 & *(_QWORD *)v1) + 0x70)];
  *(_OWORD *)v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *((_QWORD *)v6 + 4) = 0;
  v8 = (objc_class *)type metadata accessor for BaseFeedItemViewController(0, v5, v4[11], v7);
  v11.receiver = v1;
  v11.super_class = v8;
  v9 = objc_msgSendSuper2(&v11, sel_initWithCoder_, a1);

  return v9;
}

id sub_2311CBC2C(uint64_t a1, uint64_t a2, void *a3)
{
  return BaseFeedItemViewController.init(coder:)(a3);
}

id BaseFeedItemViewController.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for BaseFeedItemViewController(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x50), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x58), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

uint64_t sub_2311CBC9C(_QWORD *a1)
{
  _QWORD *v2;
  char *v3;
  uint64_t v4;

  v2 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v3 = (char *)a1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *a1) + 0x60);
  v4 = sub_231264738();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  return sub_231180624((uint64_t)a1 + *(_QWORD *)((*v2 & *a1) + 0x70));
}

void (*sub_2311CBD30(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = BaseFeedItemViewController.context.modify(v2);
  return sub_231199D48;
}

uint64_t sub_2311CBD74()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **v0) + 0xD8))();
}

uint64_t sub_2311CBDAC()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & **v0) + 0xE0))();
}

uint64_t sub_2311CBDE4(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_2311CBEB4(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_23117EC64((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_23117EC64((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_231173434((uint64_t)v12);
  return v7;
}

uint64_t sub_2311CBEB4(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_23126475C();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_2311CC06C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_2312648F4();
  if (!v8)
  {
    sub_231264978();
    __break(1u);
LABEL_17:
    result = sub_2312649FC();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_2311CC06C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_2311CC100(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_2311CC274(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_2311CC274(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_2311CC100(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_2311DD0D0(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_2312648D0();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_231264978();
      __break(1u);
LABEL_10:
      v2 = sub_231264150();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_2312649FC();
    __break(1u);
LABEL_14:
    result = sub_231264978();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

uint64_t sub_2311CC274(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_231171FD8(0, &qword_254154680, MEMORY[0x24BEE4260], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_2312649FC();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for BaseFeedItemViewController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2311792F8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BaseFeedItemViewController);
}

uint64_t sub_2311CC3E0(const char *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  const char *v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;

  v3 = *v1;
  v4 = *MEMORY[0x24BEE4EA0];
  v5 = sub_231263B5C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231263B2C();
  v9 = v1;
  v10 = sub_231263B50();
  v11 = sub_2312643CC();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = v4 & v3;
    v20 = a1;
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v21 = v5;
    v15 = v14;
    v23 = v14;
    *(_DWORD *)v13 = 136446210;
    ObjectType = swift_getObjectType();
    type metadata accessor for BaseFeedItemViewController(255, *(_QWORD *)(v12 + 80), *(_QWORD *)(v12 + 88), v16);
    swift_getMetatypeMetadata();
    v17 = sub_2312640B4();
    ObjectType = sub_2311CBDE4(v17, v18, &v23);
    sub_231264750();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23116F000, v10, v11, v20, v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v15, -1, -1);
    MEMORY[0x2348D85EC](v13, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v21);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_2311CC5D4(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;
  char *v4;
  uint64_t v5;

  v3 = (_QWORD *)MEMORY[0x24BEE4EA0];
  sub_2311CC3E0("dataWillUpdate: %{public}s");
  v4 = (char *)v1 + *(_QWORD *)((*v3 & *v1) + 0x60);
  swift_beginAccess();
  v5 = sub_231264738();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(v4, a1, v5);
  swift_endAccess();
  return sub_2311CAEA0();
}

void sub_2311CC678()
{
  JUMPOUT(0x2348D8544);
}

uint64_t sub_2311CC688()
{
  uint64_t result;
  unint64_t v1;

  result = sub_231264738();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for RecordKindFeedItemViewController()
{
  uint64_t result;

  result = qword_255EB9038;
  if (!qword_255EB9038)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2311CC748()
{
  unint64_t v0;

  sub_2311787F4(319, &qword_254151848, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
  if (v0 <= 0x3F)
    swift_initClassMetadata2();
}

uint64_t sub_2311CC7E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _OWORD v12[2];
  uint64_t v13;

  v3 = type metadata accessor for RecordKindFeedItemData();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311787F4(0, &qword_254151848, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v12 - v8;
  v10 = v1 + qword_255EB9020;
  swift_beginAccess();
  sub_2311CE734(a1, v10);
  swift_endAccess();
  sub_231178A84(v10, (uint64_t)v9, &qword_254151848, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
  {
    v13 = 0;
    memset(v12, 0, sizeof(v12));
  }
  else
  {
    sub_2311CE608((uint64_t)v9, (uint64_t)v6);
    sub_2311CCF30((uint64_t)v6, (uint64_t)v12);
    sub_231178498((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for RecordKindFeedItemData);
  }
  sub_231263658();
  return sub_2311786C0(a1, &qword_254151848, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
}

uint64_t sub_2311CC964@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[40];
  __int128 v8;
  uint64_t v9;
  uint64_t v10;

  v3 = v1 + qword_255EB9030;
  swift_beginAccess();
  sub_2311CE6D8(v3, (uint64_t)&v8);
  if (!v9)
  {
    sub_231178970((uint64_t)&v8, &qword_255EB7C98, (unint64_t *)&unk_255EB8F80);
    v4 = sub_231262CC8();
    v5 = sub_231262CBC();
    v9 = v4;
    v10 = MEMORY[0x24BE49490];
    *(_QWORD *)&v8 = v5;
    sub_23118CE98((uint64_t)&v8, (uint64_t)v7);
    swift_beginAccess();
    sub_23118CEDC((uint64_t)v7, v3);
    swift_endAccess();
  }
  return sub_2311789AC(&v8, a1);
}

uint64_t sub_2311CCA44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[9];
  _QWORD v20[3];
  uint64_t v21;

  v0 = sub_231263B5C();
  MEMORY[0x24BDAC7A8](v0);
  sub_2311787F4(0, &qword_254151848, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v19 - v5;
  sub_231263670();
  v7 = v21;
  if (v21)
  {
    v19[8] = v0;
    v8 = sub_231173410(v20, v21);
    v9 = *(_QWORD *)(v7 - 8);
    MEMORY[0x24BDAC7A8](v8);
    v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v9 + 16))(v11);
    sub_231178970((uint64_t)v20, (unint64_t *)&qword_2541548B0, (unint64_t *)&qword_2541548A0);
    v12 = sub_231263784();
    v13 = *(void (**)(char *, uint64_t))(v9 + 8);
    v15 = v14;
    v13(v11, v7);
    if (v15 >> 60 != 15)
    {
      v16 = type metadata accessor for RecordKindFeedItemData();
      sub_231172048(&qword_255EB9088, (uint64_t (*)(uint64_t))type metadata accessor for RecordKindFeedItemData, (uint64_t)&unk_23126A960);
      sub_231261C3C();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v6, 0, 1, v16);
      sub_2311CC7E4((uint64_t)v6);
      return sub_23118078C(v12, v15);
    }
  }
  else
  {
    sub_231178970((uint64_t)v20, (unint64_t *)&qword_2541548B0, (unint64_t *)&qword_2541548A0);
  }
  v17 = type metadata accessor for RecordKindFeedItemData();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v4, 1, 1, v17);
  return sub_2311CC7E4((uint64_t)v4);
}

uint64_t sub_2311CCF30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t result;
  _OWORD *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  uint64_t v31;
  id v32;
  char *v33;
  id v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v46 = a1;
  v52 = a2;
  v3 = sub_231263B5C();
  v49 = *(_QWORD *)(v3 - 8);
  v50 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_2312627B8();
  v48 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v47 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for RecordKindFeedItemData();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311787F4(0, &qword_254151848, v11);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v46 - v13;
  v15 = sub_23126292C();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v46 - v20;
  v22 = v2 + qword_255EB9020;
  swift_beginAccess();
  sub_231178A84(v22, (uint64_t)v14, &qword_254151848, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v14, 1, v7))
  {
    sub_2311786C0((uint64_t)v14, &qword_254151848, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
    sub_231263B2C();
    v23 = sub_231263B50();
    v24 = sub_2312643D8();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_23116F000, v23, v24, "Error tapping on RecordType FeedItem without a CategoryKind", v25, 2u);
      MEMORY[0x2348D85EC](v25, -1, -1);
    }

    result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v5, v50);
    v27 = (_OWORD *)v52;
    *(_QWORD *)(v52 + 32) = 0;
    *v27 = 0u;
    v27[1] = 0u;
  }
  else
  {
    v28 = v46;
    sub_231178454((uint64_t)v14, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for RecordKindFeedItemData);
    sub_2311786C0((uint64_t)v14, &qword_254151848, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
    v29 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    v29(v19, v10, v15);
    sub_231178498((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for RecordKindFeedItemData);
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v19, v15);
    v30 = v47;
    v29(v47, v21, v15);
    v31 = v48;
    (*(void (**)(char *, _QWORD, uint64_t))(v48 + 104))(v30, *MEMORY[0x24BE48E88], v51);
    v32 = (id)sub_23126271C();
    v33 = v30;
    if (!v32)
      v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD640]), sel_init);
    v34 = v32;
    v35 = sub_231262788();
    if (v35)
    {
      v36 = (void *)v35;
      v37 = objc_msgSend(v34, sel_imageWithTintColor_renderingMode_, v35, 1);

      v34 = v36;
    }
    else
    {
      v37 = v34;
    }

    (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v51);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
    v38 = (uint64_t *)(v28 + *(int *)(v7 + 24));
    v40 = *v38;
    v39 = v38[1];
    v41 = type metadata accessor for RecordKindFeedItemViewData();
    v42 = (uint64_t *)v52;
    *(_QWORD *)(v52 + 24) = v41;
    v42[4] = sub_231172048(&qword_255EB90A0, (uint64_t (*)(uint64_t))type metadata accessor for RecordKindFeedItemViewData, (uint64_t)&unk_231269A4C);
    v43 = sub_231178884(v42);
    *v43 = (uint64_t)v37;
    v43[1] = v40;
    v43[2] = v39;
    v44 = *MEMORY[0x24BE437D0];
    v45 = sub_231263664();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 104))(v43, v44, v45);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2311CD378(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  void *v54;
  void *v55;
  void *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD v80[3];
  uint64_t v81;
  _QWORD v82[4];

  v68 = a1;
  v2 = sub_231263B5C();
  v77 = *(_QWORD *)(v2 - 8);
  v78 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v72 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v76 = (char *)&v63 - v5;
  sub_2311787F4(0, &qword_254153510, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
  MEMORY[0x24BDAC7A8](v6);
  v75 = (uint64_t *)((char *)&v63 - v7);
  v71 = sub_23126292C();
  v73 = *(_QWORD *)(v71 - 8);
  v8 = MEMORY[0x24BDAC7A8](v71);
  v69 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v70 = (char *)&v63 - v10;
  sub_2311787F4(0, &qword_255EB9098, (void (*)(uint64_t))MEMORY[0x24BE49138]);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v63 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v79 = (uint64_t)&v63 - v18;
  v19 = type metadata accessor for RecordKindFeedItemData();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v74 = (uint64_t)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311787F4(0, &qword_254151848, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v63 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v63 - v26;
  v28 = (uint64_t)&v1[qword_255EB9020];
  swift_beginAccess();
  sub_231178A84(v28, (uint64_t)v27, &qword_254151848, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
  v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  if (v29(v27, 1, v19))
  {
    sub_2311786C0((uint64_t)v27, &qword_254151848, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
    v30 = v76;
    sub_231263B2C();
    v31 = sub_231263B50();
    v32 = sub_2312643D8();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v33 = 0;
      _os_log_impl(&dword_23116F000, v31, v32, "Error tapping on RecordType FeedItem without an identifier", v33, 2u);
      MEMORY[0x2348D85EC](v33, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v30, v78);
  }
  else
  {
    v65 = v17;
    v35 = v73;
    v67 = v14;
    v76 = v1;
    v36 = v74;
    sub_231178454((uint64_t)v27, v74, (uint64_t (*)(_QWORD))type metadata accessor for RecordKindFeedItemData);
    sub_2311786C0((uint64_t)v27, &qword_254151848, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
    v37 = *(_QWORD *)(v36 + *(int *)(v19 + 20));
    sub_231178498(v36, (uint64_t (*)(_QWORD))type metadata accessor for RecordKindFeedItemData);
    v38 = sub_231262950();
    v64 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56);
    v64(v79, 1, 1, v38);
    sub_231178A84(v28, (uint64_t)v25, &qword_254151848, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
    v39 = v29(v25, 1, v19);
    v66 = v37;
    if (v39)
    {
      sub_2311786C0((uint64_t)v25, &qword_254151848, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
      v40 = v79;
    }
    else
    {
      sub_231178454((uint64_t)v25, v36, (uint64_t (*)(_QWORD))type metadata accessor for RecordKindFeedItemData);
      sub_2311786C0((uint64_t)v25, &qword_254151848, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
      v41 = v69;
      v42 = v71;
      (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v69, v36, v71);
      sub_231178498(v36, (uint64_t (*)(_QWORD))type metadata accessor for RecordKindFeedItemData);
      v43 = v70;
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v70, v41, v42);
      sub_231262BD8();
      v44 = (uint64_t)v65;
      sub_231262BCC();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v43, v42);
      v40 = v79;
      sub_2311786C0(v79, &qword_255EB9098, (void (*)(uint64_t))MEMORY[0x24BE49138]);
      v64(v44, 0, 1, v38);
      sub_2311CE684(v44, v40);
    }
    v45 = (uint64_t)v75;
    v46 = (uint64_t)v67;
    sub_2311CC964((uint64_t)v82);
    v75 = sub_231173410(v82, v82[3]);
    sub_231178A84(v40, v46, &qword_255EB9098, (void (*)(uint64_t))MEMORY[0x24BE49138]);
    v47 = sub_231261E94();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v45, 1, 1, v47);
    sub_2312628A8();
    v48 = (void *)sub_231262884();
    result = sub_231263670();
    v49 = v81;
    if (v81)
    {
      v50 = sub_231173410(v80, v81);
      v51 = *(_QWORD *)(v49 - 8);
      MEMORY[0x24BDAC7A8](v50);
      v53 = (char *)&v63 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v51 + 16))(v53);
      v54 = (void *)sub_23126376C();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v53, v49);
      v55 = (void *)sub_231262890();

      sub_231173434((uint64_t)v80);
      v56 = (void *)sub_231262F2C();

      sub_2311786C0(v45, &qword_254153510, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
      sub_2311786C0(v46, &qword_255EB9098, (void (*)(uint64_t))MEMORY[0x24BE49138]);
      sub_231178454(v68, (uint64_t)v80, (uint64_t (*)(_QWORD))sub_23117DD88);
      v57 = v81;
      if (v81)
      {
        v58 = sub_231173410(v80, v81);
        v59 = *(_QWORD *)(v57 - 8);
        MEMORY[0x24BDAC7A8](v58);
        v61 = (char *)&v63 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v59 + 16))(v61);
        v62 = sub_231264B40();
        (*(void (**)(char *, uint64_t))(v59 + 8))(v61, v57);
        sub_231173434((uint64_t)v80);
      }
      else
      {
        v62 = 0;
      }
      objc_msgSend(v76, sel_showViewController_sender_, v56, v62);

      swift_unknownObjectRelease();
      sub_2311786C0(v79, &qword_255EB9098, (void (*)(uint64_t))MEMORY[0x24BE49138]);
      return sub_231173434((uint64_t)v82);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_2311CDD5C(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;
  id v5;
  _OWORD v7[2];

  if (a3)
  {
    v4 = a1;
    swift_unknownObjectRetain();
    sub_2312647B0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v7, 0, sizeof(v7));
    v5 = a1;
  }
  sub_2311CD378((uint64_t)v7);

  return sub_231178498((uint64_t)v7, (uint64_t (*)(_QWORD))sub_23117DD88);
}

id sub_2311CDDD0(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v4;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  void *v12;
  id v13;
  objc_super v15;

  v4 = v3;
  v7 = &v3[qword_255EB9020];
  v8 = type metadata accessor for RecordKindFeedItemData();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = qword_255EB9028;
  sub_231261C54();
  swift_allocObject();
  v10 = v4;
  *(_QWORD *)&v4[v9] = sub_231261C48();
  v11 = &v10[qword_255EB9030];
  *((_QWORD *)v11 + 4) = 0;
  *(_OWORD *)v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;

  if (a2)
  {
    v12 = (void *)sub_23126406C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = 0;
  }
  v15.receiver = v10;
  v15.super_class = (Class)type metadata accessor for RecordKindFeedItemViewController();
  v13 = objc_msgSendSuper2(&v15, sel_initWithNibName_bundle_, v12, a3);

  return v13;
}

id sub_2311CDEEC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  if (a3)
  {
    v5 = sub_23126409C();
    v7 = v6;
  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  v8 = a4;
  return sub_2311CDDD0(v5, v7, a4);
}

id sub_2311CDF48(void *a1)
{
  char *v1;
  char *v2;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  id v9;
  objc_super v11;

  v2 = v1;
  v4 = &v1[qword_255EB9020];
  v5 = type metadata accessor for RecordKindFeedItemData();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = qword_255EB9028;
  sub_231261C54();
  swift_allocObject();
  v7 = v2;
  *(_QWORD *)&v2[v6] = sub_231261C48();
  v8 = &v7[qword_255EB9030];
  *((_QWORD *)v8 + 4) = 0;
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;

  v11.receiver = v7;
  v11.super_class = (Class)type metadata accessor for RecordKindFeedItemViewController();
  v9 = objc_msgSendSuper2(&v11, sel_initWithCoder_, a1);

  return v9;
}

id sub_2311CE028(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_2311CDF48(a3);
}

uint64_t sub_2311CE04C()
{
  uint64_t v0;

  sub_2311786C0(v0 + qword_255EB9020, &qword_254151848, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
  swift_release();
  return sub_231178970(v0 + qword_255EB9030, &qword_255EB7C98, (unint64_t *)&unk_255EB8F80);
}

id sub_2311CE0B4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RecordKindFeedItemViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2311CE0E8(uint64_t a1)
{
  sub_2311786C0(a1 + qword_255EB9020, &qword_254151848, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
  swift_release();
  return sub_231178970(a1 + qword_255EB9030, &qword_255EB7C98, (unint64_t *)&unk_255EB8F80);
}

uint64_t sub_2311CE15C()
{
  return type metadata accessor for RecordKindFeedItemViewController();
}

uint64_t sub_2311CE164(void *a1)
{
  return sub_2311CE184(a1);
}

uint64_t sub_2311CE184(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  char *v43;
  unsigned int (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  id v46;
  uint64_t v47;
  _QWORD v48[3];
  unint64_t v49;

  sub_2311787F4(0, &qword_254151850, (void (*)(uint64_t))MEMORY[0x24BE490F8]);
  MEMORY[0x24BDAC7A8](v3);
  v43 = (char *)&v42 - v4;
  v5 = sub_231263424();
  v45 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v42 - v9;
  v11 = type metadata accessor for RecordKindFeedItemData();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v42 = (uint64_t)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311787F4(0, &qword_254151848, v14);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v42 - v19;
  v49 = sub_23118CD18();
  v48[0] = a1;
  v21 = a1;
  sub_2311CD378((uint64_t)v48);
  sub_231178498((uint64_t)v48, (uint64_t (*)(_QWORD))sub_23117DD88);
  v22 = v1 + qword_255EB9020;
  swift_beginAccess();
  sub_231178A84(v22, (uint64_t)v20, &qword_254151848, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v47 = v11;
  v44 = v23;
  v24 = 0;
  if (v23(v20, 1, v11) != 1)
  {
    v25 = (uint64_t)v20;
    v26 = v42;
    sub_2311CE608(v25, v42);
    v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3A30]), sel_initWithRawIdentifier_, *(_QWORD *)(v26 + *(int *)(v47 + 20)));
    sub_231178498(v26, (uint64_t (*)(_QWORD))type metadata accessor for RecordKindFeedItemData);
  }
  v46 = v24;
  result = sub_231263670();
  v28 = v49;
  if (v49)
  {
    v29 = sub_231173410(v48, v49);
    v30 = *(_QWORD *)(v28 - 8);
    MEMORY[0x24BDAC7A8](v29);
    v32 = (char *)&v42 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v30 + 16))(v32);
    sub_231263778();
    (*(void (**)(char *, unint64_t))(v30 + 8))(v32, v28);
    v33 = v45;
    (*(void (**)(char *, _QWORD, uint64_t))(v45 + 104))(v8, *MEMORY[0x24BE42650], v5);
    sub_231263418();
    v34 = *(void (**)(char *, uint64_t))(v33 + 8);
    v34(v8, v5);
    v34(v10, v5);
    sub_231173434((uint64_t)v48);
    sub_2312629EC();
    v35 = (void *)sub_2312629E0();
    sub_231178A84(v22, (uint64_t)v18, &qword_254151848, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
    if (v44(v18, 1, v47))
    {
      sub_2311786C0((uint64_t)v18, &qword_254151848, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
      v36 = sub_23126292C();
      v37 = (uint64_t)v43;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v43, 1, 1, v36);
    }
    else
    {
      v38 = v42;
      sub_231178454((uint64_t)v18, v42, (uint64_t (*)(_QWORD))type metadata accessor for RecordKindFeedItemData);
      sub_2311786C0((uint64_t)v18, &qword_254151848, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
      v39 = sub_23126292C();
      v40 = *(_QWORD *)(v39 - 8);
      v37 = (uint64_t)v43;
      (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v43, v38, v39);
      sub_231178498(v38, (uint64_t (*)(_QWORD))type metadata accessor for RecordKindFeedItemData);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
    }
    v41 = v46;
    sub_2312629B0();

    return sub_2311786C0(v37, &qword_254151850, (void (*)(uint64_t))MEMORY[0x24BE490F8]);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2311CE608(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RecordKindFeedItemData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2311CE64C()
{
  unint64_t result;

  result = qword_255EB9090;
  if (!qword_255EB9090)
  {
    type metadata accessor for RecordKindFeedItemData();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255EB9090);
  }
  return result;
}

uint64_t sub_2311CE684(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2311787F4(0, &qword_255EB9098, (void (*)(uint64_t))MEMORY[0x24BE49138]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2311CE6D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_231178754(0, &qword_255EB7C98, (unint64_t *)&unk_255EB8F80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2311CE734(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2311787F4(0, &qword_254151848, (void (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_2311CE788()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v1 = sub_231262B60();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, (unint64_t *)&qword_254151918, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v19 - v6;
  v8 = type metadata accessor for SharedConceptFeedItemData(0);
  v9 = (_QWORD *)(v0 + *(int *)(v8 + 36));
  v10 = v9[1];
  if (!v10)
    goto LABEL_11;
  v11 = *v9 & 0xFFFFFFFFFFFFLL;
  if (!((v10 & 0x2000000000000000) != 0 ? HIBYTE(v10) & 0xF : v11))
    goto LABEL_11;
  v13 = (uint64_t *)(v0 + *(int *)(v8 + 32));
  v14 = v13[1];
  if (!v14)
    goto LABEL_11;
  v15 = *v13;
  v16 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0)
    v16 = v15 & 0xFFFFFFFFFFFFLL;
  if (v16)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
LABEL_11:
    v17 = sub_231261EAC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v7, 1, 1, v17);
    sub_231262B54();
    v15 = sub_2312640E4();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    sub_23117A588((uint64_t)v7);
  }
  return v15;
}

BOOL sub_2311CE930(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  _BOOL8 result;

  v2 = (_QWORD *)(v1 + *(int *)(a1 + 36));
  v3 = v2[1];
  result = 0;
  if (v3)
  {
    v4 = *v2 & 0xFFFFFFFFFFFFLL;
    if ((v3 & 0x2000000000000000) != 0 ? HIBYTE(v3) & 0xF : v4)
      return 1;
  }
  return result;
}

uint64_t sub_2311CE968(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (uint64_t *)(v1 + *(int *)(a1 + 36));
  v3 = v2[1];
  if (!v3)
    return 0;
  v4 = *v2;
  v5 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0)
    v5 = v4 & 0xFFFFFFFFFFFFLL;
  if (!v5)
    return 0;
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t sub_2311CE9D0()
{
  return 0;
}

uint64_t sub_2311CE9DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];

  v1 = sub_231261CA8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311789C4();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SharedConceptCodedValue(0);
  v9 = (uint64_t *)(v0 + *(int *)(v8 + 28));
  if (v9[1])
  {
    v10 = *v9;
  }
  else
  {
    sub_231178454(v0 + *(int *)(v8 + 20), (uint64_t)v7, (uint64_t (*)(_QWORD))sub_2311789C4);
    sub_2311CF66C(0);
    v12 = v11;
    v13 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v7, 1, v11) == 1)
    {
      sub_231178498((uint64_t)v7, (uint64_t (*)(_QWORD))sub_2311789C4);
      v10 = 0;
    }
    else
    {
      v14 = (void *)sub_231263F88();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v12);
      v15 = objc_msgSend(v14, sel_currentValue);

      v16 = objc_msgSend(v15, sel_displayString);
      v17 = sub_23126409C();
      v19 = v18;

      v21[0] = v17;
      v21[1] = v19;
      sub_231261C90();
      sub_231188564();
      v10 = sub_231264780();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRetain();
  return v10;
}

uint64_t sub_2311CEBD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v12;

  sub_2311789C4();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for SharedConceptCodedValue(0);
  sub_231178454(v0 + *(int *)(v4 + 20), (uint64_t)v3, (uint64_t (*)(_QWORD))sub_2311789C4);
  sub_2311CF66C(0);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v3, 1, v5) == 1)
  {
    sub_231178498((uint64_t)v3, (uint64_t (*)(_QWORD))sub_2311789C4);
    return 0;
  }
  v8 = (void *)sub_231263F88();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v3, v6);
  v9 = objc_msgSend(v8, sel_unitString);

  if (!v9)
    return 0;
  v10 = sub_23126409C();

  return v10;
}

uint64_t sub_2311CECF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 24));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_2311CED2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  sub_2311789C4();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231178454(v1 + *(int *)(a1 + 20), (uint64_t)v5, v6);
  sub_2311CF66C(0);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v5, 1, v7) == 1)
  {
    sub_231178498((uint64_t)v5, (uint64_t (*)(_QWORD))sub_2311789C4);
    return 0;
  }
  else
  {
    v10 = sub_231263F88();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v8);
  }
  return v10;
}

uint64_t sub_2311CEE18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_2311789C4();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for SharedConceptCodedValue(0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v0 + 40);
  if (!*(_QWORD *)(v8 + 16))
    return 0;
  sub_231178454(v8 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), (uint64_t)v7, type metadata accessor for SharedConceptCodedValue);
  sub_231178454((uint64_t)&v7[*(int *)(v4 + 20)], (uint64_t)v3, (uint64_t (*)(_QWORD))sub_2311789C4);
  sub_2311CF66C(0);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v3, 1, v9) == 1)
  {
    sub_231178498((uint64_t)v3, (uint64_t (*)(_QWORD))sub_2311789C4);
    v12 = 0;
  }
  else
  {
    v12 = sub_231263F88();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v3, v10);
  }
  sub_231178498((uint64_t)v7, type metadata accessor for SharedConceptCodedValue);
  return v12;
}

uint64_t sub_2311CEF74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[2];

  v1 = sub_231261CA8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311789C4();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SharedConceptCodedValue(0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v0 + 40);
  if (!*(_QWORD *)(v12 + 16))
    return 0;
  v13 = v12 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  sub_231178454(v13, (uint64_t)v11, type metadata accessor for SharedConceptCodedValue);
  sub_231178454((uint64_t)&v11[*(int *)(v8 + 20)], (uint64_t)v7, (uint64_t (*)(_QWORD))sub_2311789C4);
  sub_2311CF66C(0);
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v7, 1, v14) == 1)
  {
    sub_231178498((uint64_t)v7, (uint64_t (*)(_QWORD))sub_2311789C4);
    sub_231178498((uint64_t)v11, type metadata accessor for SharedConceptCodedValue);
    v17 = *(_QWORD *)(v13 + *(int *)(v8 + 28));
    swift_bridgeObjectRetain();
  }
  else
  {
    v18 = (void *)sub_231263F88();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v15);
    sub_231178498((uint64_t)v11, type metadata accessor for SharedConceptCodedValue);
    v19 = objc_msgSend(v18, sel_currentValue);
    v20 = objc_msgSend(v19, sel_displayString);

    v21 = sub_23126409C();
    v23 = v22;

    v25[0] = v21;
    v25[1] = v23;
    sub_231261C90();
    sub_231188564();
    v17 = sub_231264780();

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    swift_bridgeObjectRelease();
  }
  return v17;
}

uint64_t sub_2311CF1E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v16;

  sub_2311789C4();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for SharedConceptCodedValue(0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v0 + 40);
  if (!*(_QWORD *)(v8 + 16))
    return 0;
  sub_231178454(v8 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), (uint64_t)v7, type metadata accessor for SharedConceptCodedValue);
  sub_231178454((uint64_t)&v7[*(int *)(v4 + 20)], (uint64_t)v3, (uint64_t (*)(_QWORD))sub_2311789C4);
  sub_2311CF66C(0);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v3, 1, v9) == 1)
  {
    sub_231178498((uint64_t)v3, (uint64_t (*)(_QWORD))sub_2311789C4);
    sub_231178498((uint64_t)v7, type metadata accessor for SharedConceptCodedValue);
    return 0;
  }
  v12 = (void *)sub_231263F88();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v3, v10);
  sub_231178498((uint64_t)v7, type metadata accessor for SharedConceptCodedValue);
  v13 = objc_msgSend(v12, sel_unitString);

  if (!v13)
    return 0;
  v14 = sub_23126409C();

  return v14;
}

uint64_t sub_2311CF388@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BE490B8];
  v3 = sub_23126292C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_2311CF3CC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2311CF3F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  sub_231261E04();
  v2 = sub_231261E40();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 0, 1, v2);
}

uint64_t sub_2311CF43C()
{
  return 0;
}

uint64_t sub_2311CF448()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2311CF474()
{
  uint64_t v0;

  return sub_231196A58(*(_QWORD *)(v0 + 40));
}

uint64_t sub_2311CF48C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_231196BD0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_2311CF4B4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_231196BEC(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_2311CF4DC()
{
  uint64_t v0;

  sub_231178498(v0 + OBJC_IVAR____TtC13HealthRecords37SharedConceptDetailDataSourceProvider_chartDefining, type metadata accessor for SharedConceptFeedItemData);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_2311CF534()
{
  return type metadata accessor for SharedConceptDetailDataSourceProvider();
}

uint64_t type metadata accessor for SharedConceptDetailDataSourceProvider()
{
  uint64_t result;

  result = qword_255EB90D0;
  if (!qword_255EB90D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2311CF578()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SharedConceptFeedItemData(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

_QWORD *sub_2311CF600()
{
  return sub_2311CF98C();
}

unint64_t sub_2311CF628()
{
  unint64_t result;

  result = qword_255EB9190;
  if (!qword_255EB9190)
  {
    result = MEMORY[0x2348D8544](&unk_231268468, &type metadata for SharedConceptFormattedRecord);
    atomic_store(result, (unint64_t *)&qword_255EB9190);
  }
  return result;
}

void sub_2311CF66C(uint64_t a1)
{
  sub_2311735E0(a1, &qword_2541534C0, (uint64_t (*)(uint64_t))sub_2311CF688, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
}

unint64_t sub_2311CF688()
{
  unint64_t result;

  result = qword_2541531A0;
  if (!qword_2541531A0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2541531A0);
  }
  return result;
}

uint64_t sub_2311CF6C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t *v14;
  id v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22[5];

  v1 = sub_2312632E0();
  v20 = *(_QWORD *)(v1 - 8);
  v21 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v19 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, &qword_255EB9198, (uint64_t (*)(uint64_t))sub_2311D006C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v19 - v6;
  sub_2311D0220(0, &qword_255EB91E8, &qword_255EB91F0, &qword_255EB8470);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v19 - v11;
  v22[0] = *(_QWORD *)(v0 + OBJC_IVAR____TtC13HealthRecords37SharedConceptDetailDataSourceProvider_chartPoints);
  sub_2311D006C();
  swift_bridgeObjectRetain();
  sub_231263D84();
  sub_2311D00C0(0, &qword_255EB91F0, &qword_255EB8470);
  sub_231263D60();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_2311D02C4();
  sub_231263E38();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v13 = v0 + OBJC_IVAR____TtC13HealthRecords37SharedConceptDetailDataSourceProvider_chartDefining;
  v22[3] = type metadata accessor for SharedConceptFeedItemData(0);
  v22[4] = sub_231172048(&qword_255EB9200, type metadata accessor for SharedConceptFeedItemData, (uint64_t)&unk_231267D1C);
  v14 = sub_231178884(v22);
  sub_231178454(v13, (uint64_t)v14, type metadata accessor for SharedConceptFeedItemData);
  (*(void (**)(char *, _QWORD, uint64_t))(v20 + 104))(v19, *MEMORY[0x24BE49A08], v21);
  v15 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC13HealthRecords37SharedConceptDetailDataSourceProvider_profile), sel_healthStore);
  sub_2312628D8();
  v16 = (uint64_t (*)(uint64_t))MEMORY[0x24BE49068];
  swift_allocObject();
  v17 = sub_2312628CC();
  sub_231172048(&qword_255EB9208, v16, MEMORY[0x24BE492D8]);
  return v17;
}

_QWORD *sub_2311CF98C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t (*v22)(uint64_t);
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63[5];
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v1 = v0;
  v2 = sub_231263B5C();
  v59 = *(_QWORD *)(v2 - 8);
  v60 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v61 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, &qword_255EB9198, (uint64_t (*)(uint64_t))sub_2311D006C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v59 - v7;
  sub_2311D0220(0, &qword_255EB91A0, &qword_255EB91A8, &qword_255EB8458);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v59 - v12;
  v64 = xmmword_2312679A0;
  v65 = sub_2311CF6C4();
  v66 = v14;
  v15 = (uint64_t)v0 + OBJC_IVAR____TtC13HealthRecords37SharedConceptDetailDataSourceProvider_chartDefining;
  v63[3] = type metadata accessor for SharedConceptFeedItemData(0);
  v63[4] = sub_231172048(&qword_255EB91B0, type metadata accessor for SharedConceptFeedItemData, (uint64_t)&unk_231268568);
  v16 = sub_231178884(v63);
  sub_231178454(v15, (uint64_t)v16, type metadata accessor for SharedConceptFeedItemData);
  sub_231262BF0();
  v17 = (uint64_t (*)(uint64_t))MEMORY[0x24BE493D8];
  swift_allocObject();
  v18 = sub_231262BE4();
  v19 = MEMORY[0x24BE492D8];
  v20 = sub_231172048(&qword_255EB91B8, v17, MEMORY[0x24BE492D8]);
  v67 = v18;
  v68 = v20;
  v63[0] = *(uint64_t *)((char *)v1 + OBJC_IVAR____TtC13HealthRecords37SharedConceptDetailDataSourceProvider_chartPoints);
  sub_2311D006C();
  swift_bridgeObjectRetain();
  sub_231263D84();
  sub_2311D00C0(0, &qword_255EB91A8, &qword_255EB8458);
  sub_231263D60();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_2311D0118();
  sub_231263E38();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v21 = *(void **)((char *)v1 + OBJC_IVAR____TtC13HealthRecords37SharedConceptDetailDataSourceProvider_profile);
  sub_231262A4C();
  v22 = (uint64_t (*)(uint64_t))MEMORY[0x24BE49200];
  swift_allocObject();
  v23 = v21;
  v24 = sub_231262A40();
  v25 = sub_231172048(&qword_255EB91C8, v22, v19);
  v69 = v24;
  v70 = v25;
  v71 = 0;
  v72 = 0;
  v26 = v65;
  if (v65)
  {
    v27 = v66;
    swift_unknownObjectRetain();
    v28 = sub_2311DCCF4(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v30 = v28[2];
    v29 = v28[3];
    if (v30 >= v29 >> 1)
      v28 = sub_2311DCCF4((_QWORD *)(v29 > 1), v30 + 1, 1, v28);
    v31 = v61;
    v28[2] = v30 + 1;
    v32 = &v28[2 * v30];
    v32[4] = v26;
    v32[5] = v27;
  }
  else
  {
    v28 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v31 = v61;
  }
  v33 = v67;
  if (v67)
  {
    v34 = v68;
    swift_unknownObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v28 = sub_2311DCCF4(0, v28[2] + 1, 1, v28);
    v36 = v28[2];
    v35 = v28[3];
    if (v36 >= v35 >> 1)
      v28 = sub_2311DCCF4((_QWORD *)(v35 > 1), v36 + 1, 1, v28);
    v28[2] = v36 + 1;
    v37 = &v28[2 * v36];
    v37[4] = v33;
    v37[5] = v34;
    v24 = v69;
  }
  if (v24)
  {
    v38 = v70;
    swift_unknownObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v28 = sub_2311DCCF4(0, v28[2] + 1, 1, v28);
    v40 = v28[2];
    v39 = v28[3];
    if (v40 >= v39 >> 1)
      v28 = sub_2311DCCF4((_QWORD *)(v39 > 1), v40 + 1, 1, v28);
    v28[2] = v40 + 1;
    v41 = &v28[2 * v40];
    v41[4] = v24;
    v41[5] = v38;
  }
  v42 = v71;
  if (v71)
  {
    v43 = v72;
    swift_unknownObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v28 = sub_2311DCCF4(0, v28[2] + 1, 1, v28);
    v45 = v28[2];
    v44 = v28[3];
    if (v45 >= v44 >> 1)
      v28 = sub_2311DCCF4((_QWORD *)(v44 > 1), v45 + 1, 1, v28);
    v28[2] = v45 + 1;
    v46 = &v28[2 * v45];
    v46[4] = v42;
    v46[5] = v43;
  }
  sub_2311D0180();
  swift_arrayDestroy();
  sub_231263B20();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v47 = sub_231263B50();
  v48 = sub_2312643F0();
  if (os_log_type_enabled(v47, v48))
  {
    v49 = swift_slowAlloc();
    v50 = swift_slowAlloc();
    *(_DWORD *)v49 = 136446466;
    v62 = *v1;
    v63[0] = v50;
    sub_2311D01E8();
    v51 = sub_2312640B4();
    v62 = sub_2311CBDE4(v51, v52, v63);
    sub_231264750();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v49 + 12) = 2082;
    v53 = sub_2311D0278(0, (unint64_t *)&qword_255EB91D8);
    v54 = swift_bridgeObjectRetain();
    v55 = MEMORY[0x2348D7608](v54, v53);
    v57 = v56;
    swift_bridgeObjectRelease();
    v62 = sub_2311CBDE4(v55, v57, v63);
    sub_231264750();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23116F000, v47, v48, "[%{public}s] Notifying data sources of hidden display types change, sources: %{public}s", (uint8_t *)v49, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v50, -1, -1);
    MEMORY[0x2348D85EC](v49, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v59 + 8))(v31, v60);
  return v28;
}

void sub_2311D006C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255EB8930)
  {
    v0 = sub_231264270();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255EB8930);
  }
}

void sub_2311D00C0(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_2311D0278(255, a3);
    v4 = sub_231264270();
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_2311D0118()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255EB91C0;
  if (!qword_255EB91C0)
  {
    sub_2311D0220(255, &qword_255EB91A0, &qword_255EB91A8, &qword_255EB8458);
    result = MEMORY[0x2348D8544](MEMORY[0x24BDB9DF8], v1);
    atomic_store(result, (unint64_t *)&qword_255EB91C0);
  }
  return result;
}

void sub_2311D0180()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255EB91D0)
  {
    sub_2311D0278(255, (unint64_t *)&qword_255EB91D8);
    v0 = sub_231264738();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255EB91D0);
  }
}

unint64_t sub_2311D01E8()
{
  unint64_t result;

  result = qword_255EB91E0;
  if (!qword_255EB91E0)
  {
    type metadata accessor for SharedConceptDetailDataSourceProvider();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255EB91E0);
  }
  return result;
}

void sub_2311D0220(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_2311D00C0(255, a3, a4);
    v5 = sub_231263D78();
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_2311D0278(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_2311D02C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255EB91F8;
  if (!qword_255EB91F8)
  {
    sub_2311D0220(255, &qword_255EB91E8, &qword_255EB91F0, &qword_255EB8470);
    result = MEMORY[0x2348D8544](MEMORY[0x24BDB9DF8], v1);
    atomic_store(result, (unint64_t *)&qword_255EB91F8);
  }
  return result;
}

uint64_t type metadata accessor for SharedConceptDetailViewController()
{
  uint64_t result;

  result = qword_255EB9210;
  if (!qword_255EB9210)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2311D0368()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SharedConceptFeedItemData(319);
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_2311D03E8()
{
  sub_231264984();
  __break(1u);
}

id sub_2311D0440()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  objc_class *v11;
  uint64_t v13;
  objc_super v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;

  v1 = type metadata accessor for SharedConceptFeedItemData(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = &v0[qword_255EC20A0];
  sub_2311D0C28((uint64_t)&v0[qword_255EC20A0], (uint64_t)v3);
  v5 = *(_QWORD *)&v4[*(int *)(v1 + 48)];
  v6 = *(void **)&v0[qword_255EC20A8];
  v7 = type metadata accessor for SharedConceptDetailDataSourceProvider();
  v8 = swift_allocObject();
  sub_231188F00((uint64_t)v3, v8 + OBJC_IVAR____TtC13HealthRecords37SharedConceptDetailDataSourceProvider_chartDefining);
  *(_QWORD *)(v8 + OBJC_IVAR____TtC13HealthRecords37SharedConceptDetailDataSourceProvider_chartPoints) = v5;
  *(_QWORD *)(v8 + OBJC_IVAR____TtC13HealthRecords37SharedConceptDetailDataSourceProvider_profile) = v6;
  v16 = v7;
  v17 = sub_2311D0C6C();
  v15 = v8;
  swift_bridgeObjectRetain();
  v9 = v6;
  sub_231263970();
  v10 = (void *)sub_23126406C();
  objc_msgSend(v0, sel_setTitle_, v10);

  v11 = (objc_class *)type metadata accessor for SharedConceptDetailViewController();
  v14.receiver = v0;
  v14.super_class = v11;
  return objc_msgSendSuper2(&v14, sel_viewDidLoad);
}

void sub_2311D059C(void *a1)
{
  id v1;

  v1 = a1;
  sub_2311D0440();

}

id sub_2311D05D0()
{
  void *v0;
  id result;

  result = objc_msgSend(v0, sel_collectionView);
  if (result)
  {
    sub_231263964();
    sub_23126394C();
    swift_allocObject();
    return (id)sub_231263940();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_2311D0650()
{
  void *v0;
  void (*v1)(void);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  void *v6;
  __int128 v7[2];
  uint64_t v8;
  __int128 v9;
  _QWORD v10[4];

  sub_23126397C();
  v1 = (void (*)(void))sub_231263988();
  v1();
  sub_231263964();
  v2 = sub_2312636D0();
  swift_release();
  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
    return (id)swift_bridgeObjectRelease();
  sub_2311D0278(0, (unint64_t *)&qword_255EB91D8);
  sub_2311D0278(0, &qword_255EB9280);
  v4 = 0;
  while (1)
  {
    v9 = *(_OWORD *)(v2 + 16 * v4 + 32);
    swift_unknownObjectRetain_n();
    if ((swift_dynamicCast() & 1) != 0)
      break;
    v8 = 0;
    memset(v7, 0, sizeof(v7));
    swift_unknownObjectRelease();
    sub_2311D0CF0((uint64_t)v7, &qword_255EB9288, &qword_255EB9280);
LABEL_4:
    if (v3 == ++v4)
      return (id)swift_bridgeObjectRelease();
  }
  sub_2311789AC(v7, (uint64_t)v10);
  sub_231173410(v10, v10[3]);
  result = objc_msgSend(v0, sel_collectionView);
  if (result)
  {
    v6 = result;
    sub_231263748();

    swift_unknownObjectRelease();
    sub_231173434((uint64_t)v10);
    goto LABEL_4;
  }
  __break(1u);
  return result;
}

void sub_2311D0820(void *a1)
{
  void *v2;
  void *v3;
  id v4;
  __int128 *v5;
  _OWORD v6[2];
  uint64_t v7;
  _OWORD v8[2];
  uint64_t v9;
  _QWORD v10[4];
  _BYTE v11[40];

  v2 = (void *)sub_231261F3C();
  objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v2, 1);

  v3 = (void *)sub_231261F3C();
  v4 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v3);

  if (v4)
  {
    sub_231263964();
    sub_2312636DC();
    sub_2312634F0();
    swift_release();
    sub_23118CE98((uint64_t)v11, (uint64_t)v8);
    sub_2311D0278(0, &qword_255EB8400);
    sub_2311D0278(0, &qword_255EB9260);
    if (swift_dynamicCast())
    {
      v5 = v6;
LABEL_6:
      sub_2311789AC(v5, (uint64_t)v10);
      sub_231173410(v10, v10[3]);
      sub_231263598();

      sub_231173434((uint64_t)v11);
      sub_231173434((uint64_t)v10);
      return;
    }
    v7 = 0;
    memset(v6, 0, sizeof(v6));
    sub_2311D0CF0((uint64_t)v6, &qword_255EB9268, &qword_255EB9260);
    *(_QWORD *)&v6[0] = v4;
    sub_2311D0BEC();
    v4 = v4;
    if ((swift_dynamicCast() & 1) != 0)
    {
      v5 = v8;
      goto LABEL_6;
    }
    v9 = 0;
    memset(v8, 0, sizeof(v8));

    sub_231173434((uint64_t)v11);
    sub_2311D0CF0((uint64_t)v8, &qword_255EB9268, &qword_255EB9260);
  }
}

uint64_t sub_2311D0A40(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v12;

  v5 = sub_231261F54();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231261F48();
  v9 = a3;
  v10 = a1;
  sub_2311D0820(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_2311D0AF0()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_2311D0B1C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_2311D0B4C()
{
  uint64_t v0;

  sub_2311D0CB4(v0 + qword_255EC20A0);

}

id sub_2311D0B78()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SharedConceptDetailViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_2311D0BAC(uint64_t a1)
{
  sub_2311D0CB4(a1 + qword_255EC20A0);

}

uint64_t sub_2311D0BE4()
{
  return type metadata accessor for SharedConceptDetailViewController();
}

unint64_t sub_2311D0BEC()
{
  unint64_t result;

  result = qword_255EB9270;
  if (!qword_255EB9270)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255EB9270);
  }
  return result;
}

uint64_t sub_2311D0C28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SharedConceptFeedItemData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_2311D0C6C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255EB9278;
  if (!qword_255EB9278)
  {
    v1 = type metadata accessor for SharedConceptDetailDataSourceProvider();
    result = MEMORY[0x2348D8544](&unk_231268438, v1);
    atomic_store(result, (unint64_t *)&qword_255EB9278);
  }
  return result;
}

uint64_t sub_2311D0CB4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SharedConceptFeedItemData(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2311D0CF0(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t v4;

  sub_2311D0D2C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_2311D0D2C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_2311D0278(255, a3);
    v4 = sub_231264738();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_2311D0D84()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_2312626E0();
  sub_2311D4F3C(v0, qword_2541559A8);
  v1 = sub_2311D3D04(v0, (uint64_t)qword_2541559A8);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, *MEMORY[0x24BE48DF8], v0);
}

_QWORD *sub_2311D0DDC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  v19 = *v1;
  v17 = sub_2312621DC();
  v4 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_2312621F4();
  v7 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311733CC(a1, (uint64_t)v1 + OBJC_IVAR____TtC13HealthRecords16LabTipsGenerator_context);
  v16 = sub_231262230();
  sub_2311735E0(0, &qword_254155718, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v10 = sub_231261FA8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_231265AC0;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v11 + 104))(v13 + v12, *MEMORY[0x24BE47460], v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BE47910], v17);
  sub_2312621E8();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))((uint64_t)v2 + OBJC_IVAR____TtC13HealthRecords16LabTipsGenerator_domain, v9, v18);
  v14 = sub_2311D0FB0(a1);
  sub_231173638(a1);
  v2[2] = v14;
  return v2;
}

uint64_t sub_2311D0FB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void *v35;
  void *v36;
  id v37;
  void *v38;
  void *v39;
  id v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  void *v45;
  void *v46;
  char *v47;
  id v48;
  id v49;
  char *v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t);
  uint64_t v70;
  char *v71;
  char *v72;
  id v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  id v119;
  char *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  __int128 v155;
  uint64_t v156;

  v2 = type metadata accessor for HealthRecordsGeneratorContext();
  v143 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v145 = v3;
  v146 = (uint64_t)&v99 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, &qword_254153F28, (uint64_t (*)(uint64_t))MEMORY[0x24BEE7758], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v116 = (uint64_t)&v99 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v115 = (char *)&v99 - v7;
  v114 = sub_231261FC0();
  v113 = *(_QWORD *)(v114 - 8);
  MEMORY[0x24BDAC7A8](v114);
  v112 = (char *)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = sub_23126292C();
  v110 = *(_QWORD *)(v111 - 8);
  MEMORY[0x24BDAC7A8](v111);
  v109 = (char *)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311D3374();
  v119 = v10;
  v118 = *((_QWORD *)v10 - 1);
  MEMORY[0x24BDAC7A8](v10);
  v117 = (char *)&v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311D34D0();
  v123 = v12;
  v121 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v120 = (char *)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311D3688();
  v127 = v14;
  v125 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v122 = (char *)&v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311D3994();
  v129 = v16;
  v128 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v126 = (char *)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311D3A0C();
  v133 = v18;
  v132 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v131 = (char *)&v99 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311D3A84();
  v136 = v20;
  v135 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v134 = (char *)&v99 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311D3B30();
  v139 = v22;
  v138 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v137 = (char *)&v99 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311D3BC4();
  v141 = *(_QWORD *)(v24 - 8);
  v142 = v24;
  MEMORY[0x24BDAC7A8](v24);
  v140 = (char *)&v99 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311D3C8C();
  v148 = *(_QWORD *)(v26 - 8);
  v149 = v26;
  MEMORY[0x24BDAC7A8](v26);
  v147 = (char *)&v99 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_231261F18();
  v107 = *(_QWORD *)(v108 - 8);
  MEMORY[0x24BDAC7A8](v108);
  v106 = (char *)&v99 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_231261E40();
  v104 = *(_QWORD *)(v105 - 8);
  MEMORY[0x24BDAC7A8](v105);
  v103 = (char *)&v99 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_231261E94();
  v100 = *(_QWORD *)(v101 - 8);
  MEMORY[0x24BDAC7A8](v101);
  v99 = (char *)&v99 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_2312626E0();
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)&v99 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312628A8();
  v35 = (void *)sub_231262884();
  sub_23126220C();
  sub_231173410(&v155, v156);
  v36 = (void *)sub_231262194();
  v37 = objc_msgSend(v36, sel_profileIdentifier);

  v130 = sub_231262848();
  sub_231173434((uint64_t)&v155);
  sub_231261C78();
  swift_allocObject();
  v124 = sub_231261C6C();
  v38 = (void *)sub_231262884();
  sub_23126220C();
  sub_231173410(&v155, v156);
  v39 = (void *)sub_231262194();
  v40 = objc_msgSend(v39, sel_profileIdentifier);

  v152 = sub_23126286C();
  sub_231173434((uint64_t)&v155);
  sub_23126220C();
  sub_231173410(&v155, v156);
  sub_231262194();
  sub_231263064();
  swift_allocObject();
  v151 = sub_231263058();
  sub_231173434((uint64_t)&v155);
  sub_23126220C();
  if (qword_254151C68 != -1)
    swift_once();
  v41 = sub_2311D3D04(v31, (uint64_t)qword_2541559A8);
  v102 = v32;
  v42 = v34;
  v43 = v34;
  v44 = v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v42, v41, v31);
  v144 = a1;
  v45 = (void *)sub_231262230();
  v46 = (void *)sub_231261FF0();
  v47 = v43;
  sub_2312626C8();
  if (v46)
  {
    v153 = 0x656C69666F72505BLL;
    v154 = 0xE90000000000003ALL;
    v48 = v46;
    v49 = objc_msgSend(v48, sel_identifier);
    v50 = v99;
    sub_231261E7C();

    sub_231261E58();
    (*(void (**)(char *, uint64_t))(v100 + 8))(v50, v101);
    sub_231264144();
    swift_bridgeObjectRelease();
    sub_231264144();

    v51 = v153;
    v52 = v154;
  }
  else
  {
    v52 = 0x800000023126B610;
    v51 = 0xD000000000000013;
  }
  v153 = v51;
  v154 = v52;
  sub_231264144();

  swift_bridgeObjectRelease();
  v53 = v153;
  v54 = v154;
  (*(void (**)(char *, uint64_t))(v102 + 8))(v47, v44);
  type metadata accessor for FeedItemContextChangeGenerator();
  v55 = swift_allocObject();
  sub_2311789AC(&v155, v55 + 16);
  v102 = v55;
  *(_QWORD *)(v55 + 56) = v53;
  *(_QWORD *)(v55 + 64) = v54;
  sub_231178AD0(0, &qword_254153160);
  v56 = sub_231264414();
  v57 = (uint64_t)v103;
  sub_231261E34();
  v58 = objc_msgSend((id)objc_opt_self(), sel_hk_gregorianCalendarWithLocalTimeZone);
  v59 = (uint64_t)v106;
  sub_231261EE8();

  v60 = (void *)sub_2311D4584(v56, v57, v59);
  (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v59, v108);
  (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v57, v105);
  v61 = v110;
  v62 = v109;
  v63 = v111;
  (*(void (**)(char *, _QWORD, uint64_t))(v110 + 104))(v109, *MEMORY[0x24BE490B8], v111);
  v64 = sub_231262FE0();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v63);
  v65 = v113;
  v66 = v112;
  v67 = v114;
  (*(void (**)(char *, _QWORD, uint64_t))(v113 + 104))(v112, *MEMORY[0x24BE47510], v114);
  sub_231261FB4();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v66, v67);
  v68 = sub_231263AF0();
  v69 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE7758];
  v70 = (uint64_t)v115;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v115, 1, 1, v68);
  *(_QWORD *)&v155 = v64;
  sub_2311BA688(v70, v116, &qword_254153F28, v69);
  sub_2311D33EC();
  sub_231172048(&qword_254152FB0, (uint64_t (*)(uint64_t))sub_2311D33EC, MEMORY[0x24BDB9AF8]);
  swift_retain();
  v71 = v117;
  sub_231263BF8();
  sub_231189628(v70, &qword_254153F28, v69);
  swift_release();
  sub_231263CF4();
  sub_231178AD0(0, &qword_2541531B0);
  sub_2311D3598();
  sub_231172048((unint64_t *)&qword_2541540E0, (uint64_t (*)(uint64_t))sub_2311D3374, MEMORY[0x24BE48538]);
  sub_231172048(&qword_254152E28, (uint64_t (*)(uint64_t))sub_2311D3598, MEMORY[0x24BDB9970]);
  v72 = v120;
  v73 = v119;
  sub_231263EE0();
  (*(void (**)(char *, id))(v118 + 8))(v71, v73);
  v74 = (_QWORD *)swift_allocObject();
  v75 = v151;
  v74[2] = v152;
  v74[3] = v60;
  v74[4] = v75;
  sub_2311D4BAC();
  sub_2311D3750();
  v76 = MEMORY[0x24BDB98F0];
  sub_231172048(&qword_254154468, (uint64_t (*)(uint64_t))sub_2311D34D0, MEMORY[0x24BDB98F0]);
  sub_231172048(&qword_254152CC8, (uint64_t (*)(uint64_t))sub_2311D3750, MEMORY[0x24BDB96E0]);
  swift_retain();
  v119 = v60;
  swift_retain();
  v77 = v122;
  v78 = v123;
  sub_231263EE0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v121 + 8))(v72, v78);
  sub_231172048(&qword_254154448, (uint64_t (*)(uint64_t))sub_2311D3688, v76);
  v79 = v126;
  v80 = v127;
  sub_231263EA4();
  (*(void (**)(char *, uint64_t))(v125 + 8))(v77, v80);
  sub_231172048(&qword_2541542D0, (uint64_t (*)(uint64_t))sub_2311D3994, MEMORY[0x24BDB97F8]);
  v81 = v131;
  v82 = v129;
  sub_231263EC8();
  (*(void (**)(char *, uint64_t))(v128 + 8))(v79, v82);
  v83 = v146;
  sub_2311733CC(v144, v146);
  v84 = (*(unsigned __int8 *)(v143 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80);
  v85 = (v145 + v84 + 7) & 0xFFFFFFFFFFFFFFF8;
  v86 = (_QWORD *)swift_allocObject();
  v87 = v150;
  v86[2] = v130;
  v86[3] = v87;
  v86[4] = v124;
  sub_23117353C(v83, (uint64_t)v86 + v84);
  *(_QWORD *)((char *)v86 + v85) = v87;
  sub_2311735E0(0, &qword_254151870, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_231172048(&qword_254154388, (uint64_t (*)(uint64_t))sub_2311D3A0C, MEMORY[0x24BDB98D8]);
  swift_retain();
  swift_retain();
  v88 = v134;
  v89 = v133;
  sub_231263EBC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v132 + 8))(v81, v89);
  sub_2311B6764();
  swift_retain();
  v90 = v137;
  v91 = v136;
  sub_231263C7C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v135 + 8))(v88, v91);
  *(_QWORD *)(swift_allocObject() + 16) = v87;
  sub_231187D64();
  sub_231172048(&qword_254154378, (uint64_t (*)(uint64_t))sub_2311D3B30, MEMORY[0x24BDB98C8]);
  sub_231172048(&qword_254152F30, (uint64_t (*)(uint64_t))sub_231187D64, MEMORY[0x24BDB9AF8]);
  v92 = v139;
  v93 = v140;
  sub_231263E8C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v138 + 8))(v90, v92);
  *(_QWORD *)&v155 = MEMORY[0x24BEE4AF8];
  sub_231172048(&qword_254154270, (uint64_t (*)(uint64_t))sub_2311D3BC4, MEMORY[0x24BDB9740]);
  v94 = v147;
  v95 = v142;
  sub_231263E5C();
  (*(void (**)(char *, uint64_t))(v141 + 8))(v93, v95);
  sub_231172048(&qword_254154090, (uint64_t (*)(uint64_t))sub_2311D3C8C, MEMORY[0x24BDB95A8]);
  v96 = v149;
  v97 = sub_231263E38();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v148 + 8))(v94, v96);
  return v97;
}

uint64_t sub_2311D2020(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD v8[2];

  sub_2311D4E38();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[1] = *a1;
  sub_2311D3468(0, &qword_254153128, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_2311D3630();
  sub_2312641C8();
  sub_2311889D8();
  sub_231263CB8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_2311D2100(void **a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  _QWORD v11[2];

  v2 = sub_231262E3C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *a1;
  v11[1] = sub_231262FD4();
  v7 = objc_msgSend(v6, sel_UUID);
  sub_231261E7C();

  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BE49610], v2);
  v8 = sub_23126304C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v11[0] = v8;
  sub_2311D38D4(0, &qword_254153000, &qword_2541531C0, (uint64_t (*)(uint64_t))sub_2311D3860);
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  sub_2311D38D4(0, &qword_254152E78, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  sub_2311D3954(&qword_254152FF8, &qword_254153000, &qword_2541531C0, (uint64_t (*)(uint64_t))sub_2311D3860);
  sub_2311D3954((unint64_t *)&qword_254152E70, &qword_254152E78, (unint64_t *)&qword_254154938, v9);
  return sub_231263C34();
}

BOOL sub_2311D22C0(_QWORD *a1)
{
  uint64_t v1;

  if (!*a1)
    return 0;
  v1 = a1[1];
  sub_231178AD0(0, &qword_254153160);
  return v1 >= sub_231264420();
}

uint64_t sub_2311D2314@<X0>(__int128 *a1@<X0>, NSObject *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  int v36;
  char *v37;
  uint64_t v38;
  id v39;
  NSObject *v40;
  os_log_type_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t (*v51)(uint64_t);
  uint64_t v52;
  unint64_t v53;
  os_log_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  char *v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  os_log_t v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;

  v83 = a5;
  v80 = a4;
  v74 = a3;
  v82 = a2;
  v6 = sub_231261E94();
  MEMORY[0x24BDAC7A8](v6);
  v79 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_231262B18();
  v75 = *(_QWORD *)(v8 - 8);
  v76 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v81 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_231263B5C();
  v72 = *(_QWORD *)(v10 - 8);
  v73 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v78 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  sub_2311735E0(0, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v71 = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v70 = (uint64_t)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v77 = (uint64_t)&v67 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v67 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v67 - v21;
  sub_2311D4BAC();
  v24 = v23;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v67 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = *(int *)(MEMORY[0x24BDAC7A8](v25) + 48);
  v30 = (char *)&v67 + v29 - v28;
  v31 = (uint64_t)a1 + v29;
  v85 = *a1;
  *(_OWORD *)((char *)&v67 - v28) = v85;
  sub_2311BA688((uint64_t)a1 + v29, (uint64_t)v30, (unint64_t *)&qword_254154938, v12);
  if (!(_QWORD)v85)
  {
    v22 = v30;
    goto LABEL_9;
  }
  v32 = (id)v85;
  sub_231189628((uint64_t)v30, (unint64_t *)&qword_254154938, v12);
  v33 = (uint64_t)&v27[*(int *)(v24 + 48)];
  sub_2311BA688(v31, v33, (unint64_t *)&qword_254154938, v12);
  sub_2311A4AC8(v33, (uint64_t)v22);
  LOBYTE(v33) = sub_231263A6C();
  sub_2311BA688((uint64_t)v22, (uint64_t)v20, (unint64_t *)&qword_254154938, v12);
  if ((v33 & 1) != 0)
  {

    sub_231189628((uint64_t)v20, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
LABEL_9:
    v56 = v83;
    sub_231189628((uint64_t)v22, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    v57 = sub_23126217C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v56, 1, 1, v57);
  }
  v34 = sub_231261E40();
  v35 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v20, 1, v34);
  sub_231189628((uint64_t)v20, (unint64_t *)&qword_254154938, v35);
  if (v36 != 1)
  {

    goto LABEL_9;
  }
  v37 = v78;
  sub_231263B20();
  v38 = v77;
  sub_2311BA688((uint64_t)v22, v77, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  v39 = v32;
  v40 = sub_231263B50();
  v41 = sub_2312643F0();
  v42 = v41;
  if (os_log_type_enabled(v40, v41))
  {
    v43 = swift_slowAlloc();
    v82 = v40;
    v44 = v43;
    v69 = swift_slowAlloc();
    v87 = v69;
    *(_DWORD *)v44 = 136446466;
    v45 = v39;
    v68 = v42;
    v46 = v45;
    v47 = (id)HKSensitiveLogItem();
    *(_QWORD *)&v85 = v39;
    sub_2312647B0();
    swift_unknownObjectRelease();
    v67 = MEMORY[0x24BEE4AD8] + 8;
    v48 = sub_2312640B4();
    v50 = v49;

    v86 = sub_2311CBDE4(v48, v50, &v87);
    sub_231264750();

    swift_bridgeObjectRelease();
    *(_WORD *)(v44 + 12) = 2082;
    v51 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
    sub_2311BA688(v38, v70, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    v52 = sub_2312640B4();
    v86 = sub_2311CBDE4(v52, v53, &v87);
    v39 = (id)v85;
    sub_231264750();
    swift_bridgeObjectRelease();
    sub_231189628(v38, (unint64_t *)&qword_254154938, v51);
    v54 = v82;
    _os_log_impl(&dword_23116F000, v82, (os_log_type_t)v68, "Generating tip for concept: %{public}s, tile dismissed date: %{public}s", (uint8_t *)v44, 0x16u);
    v55 = v69;
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v55, -1, -1);
    MEMORY[0x2348D85EC](v44, -1, -1);

  }
  else
  {

    sub_231189628(v38, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  }
  (*(void (**)(char *, uint64_t))(v72 + 8))(v37, v73);
  v59 = v83;
  v60 = v74;
  v61 = v39;
  sub_2312645D0();
  sub_231178AD0(0, &qword_254153160);
  sub_231264414();
  v62 = objc_msgSend(v61, sel_UUID);
  sub_231261E7C();

  v63 = v81;
  sub_231262B0C();
  v64 = (void *)sub_231262230();
  v65 = v84;
  sub_2311D2A20(v60, v64, 0, v59);

  (*(void (**)(char *, uint64_t))(v75 + 8))(v63, v76);
  if (v65)
    return sub_231189628((uint64_t)v22, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  sub_231189628((uint64_t)v22, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  v66 = sub_23126217C();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v59, 0, 1, v66);
}

uint64_t sub_2311D2A20@<X0>(uint64_t a1@<X1>, void *a2@<X2>, int a3@<W3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t *, _QWORD);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;

  v49 = a2;
  v45 = a3;
  v46 = a4;
  v47 = a1;
  v4 = sub_231261E40();
  MEMORY[0x24BDAC7A8](v4);
  v44 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2311735E0(0, &qword_254154930, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v43 = (char *)&v38 - v8;
  sub_2311735E0(0, &qword_255EB8138, (uint64_t (*)(uint64_t))MEMORY[0x24BE47DF8], v6);
  MEMORY[0x24BDAC7A8](v9);
  v42 = (char *)&v38 - v10;
  v11 = sub_231261FA8();
  v39 = *(_QWORD *)(v11 - 8);
  v40 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v41 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23126292C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311D3468(0, (unint64_t *)&qword_2541534D0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  v18 = v17;
  v19 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v38 - v20;
  sub_2311735E0(0, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], v6);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v38 - v23;
  sub_231262B00();
  v25 = (void *)sub_231263F88();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  v26 = objc_msgSend(v25, sel_UUID);

  sub_231261E7C();
  v27 = sub_231261E94();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v24, 0, 1, v27);
  if (qword_254151C68 != -1)
    swift_once();
  v28 = sub_2312626E0();
  sub_2311D3D04(v28, (uint64_t)qword_2541559A8);
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x24BE490B8], v13);
  sub_23126325C();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  sub_231189628((uint64_t)v24, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
  sub_231262B18();
  sub_231172048(&qword_255EB92A0, (uint64_t (*)(uint64_t))MEMORY[0x24BE49328], MEMORY[0x24BE49338]);
  v29 = v48;
  sub_231261C60();
  if (v29)
    return swift_bridgeObjectRelease();
  type metadata accessor for LabsTipViewController();
  (*(void (**)(char *, _QWORD, uint64_t))(v39 + 104))(v41, *MEMORY[0x24BE47460], v40);
  v31 = v49;
  sub_231262038();
  sub_231261E34();
  v32 = v43;
  sub_231261CC0();
  v33 = sub_231261CCC();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v32, 0, 1, v33);
  sub_23126241C();
  sub_231262104();
  sub_2312620BC();
  sub_231262164();
  sub_2312620B0();
  sub_2312620A4();
  v51 = MEMORY[0x24BEE4B08];
  v34 = sub_23126232C();
  sub_2312519E4(&v50, v34, v35);
  swift_bridgeObjectRelease();
  v36 = v51;
  v37 = (uint64_t (*)(uint64_t *, _QWORD))sub_23126214C();
  sub_2311BAB64(v36);
  return v37(&v50, 0);
}

uint64_t sub_2311D2F10@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  _QWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  sub_2311735E0(0, (unint64_t *)&qword_254153050, (uint64_t (*)(uint64_t))sub_2311B6764, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v32 - v7;
  v9 = sub_231263B5C();
  v37 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  sub_231263B08();
  v13 = v12;
  v14 = v12;
  v15 = sub_231263B50();
  v16 = sub_2312643D8();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v35 = v6;
    v18 = v17;
    v33 = swift_slowAlloc();
    v39 = v33;
    *(_DWORD *)v18 = 136446466;
    v38 = sub_2311D4E04(0);
    sub_23118852C(0, &qword_255EB9298, (void (*)(uint64_t))sub_2311D4E04);
    v34 = v9;
    v19 = sub_2312640B4();
    v36 = a2;
    v38 = sub_2311CBDE4(v19, v20, &v39);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2082;
    v32[1] = v18 + 14;
    v38 = (uint64_t)v12;
    v21 = v12;
    v22 = v12;
    sub_2311889D8();
    sub_231264B88();
    v23 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_2312647B0();
    swift_unknownObjectRelease();
    v24 = sub_2312640B4();
    v26 = v25;

    v27 = v24;
    a2 = v36;
    v38 = sub_2311CBDE4(v27, v26, &v39);
    sub_231264750();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23116F000, v15, v16, "[%{public}s] Unable to compute desired difference for commit: %{public}s", (uint8_t *)v18, 0x16u);
    v28 = v33;
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v28, -1, -1);
    v29 = v18;
    v6 = v35;
    MEMORY[0x2348D85EC](v29, -1, -1);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v34);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v9);
  }
  v38 = MEMORY[0x24BEE4AF8];
  sub_2311B6764();
  sub_231263D84();
  sub_2311D4DA4();
  v30 = sub_231263E38();
  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v30;
  return result;
}

uint64_t sub_2311D3280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC13HealthRecords16LabTipsGenerator_domain;
  v2 = sub_2312621F4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_231173638(v0 + OBJC_IVAR____TtC13HealthRecords16LabTipsGenerator_context);
  return swift_deallocClassInstance();
}

uint64_t sub_2311D32E8()
{
  return type metadata accessor for LabTipsGenerator();
}

uint64_t type metadata accessor for LabTipsGenerator()
{
  uint64_t result;

  result = qword_254151C78;
  if (!qword_254151C78)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2311D332C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC13HealthRecords16LabTipsGenerator_domain;
  v4 = sub_2312621F4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void sub_2311D3374()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541540E8)
  {
    sub_2311D33EC();
    sub_231172048(&qword_254152FB0, (uint64_t (*)(uint64_t))sub_2311D33EC, MEMORY[0x24BDB9AF8]);
    v0 = sub_231263BEC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541540E8);
  }
}

void sub_2311D33EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254152FB8)
  {
    sub_2311D3468(255, &qword_254153128, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_2311889D8();
    v0 = sub_231263D0C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254152FB8);
  }
}

void sub_2311D3468(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_231178AD0(255, &qword_2541531B0);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_2311D34D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254154470)
  {
    sub_2311D3598();
    sub_2311D3374();
    sub_231172048(&qword_254152E28, (uint64_t (*)(uint64_t))sub_2311D3598, MEMORY[0x24BDB9970]);
    sub_231172048((unint64_t *)&qword_2541540E0, (uint64_t (*)(uint64_t))sub_2311D3374, MEMORY[0x24BE48538]);
    v0 = sub_231263CA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254154470);
  }
}

void sub_2311D3598()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254152E30)
  {
    sub_2311D3468(255, &qword_254153128, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_2311889D8();
    sub_2311D3630();
    v0 = sub_231263CC4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254152E30);
  }
}

unint64_t sub_2311D3630()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254153130;
  if (!qword_254153130)
  {
    sub_2311D3468(255, &qword_254153128, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2348D8544](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_254153130);
  }
  return result;
}

void sub_2311D3688()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254154450)
  {
    sub_2311D3750();
    sub_2311D34D0();
    sub_231172048(&qword_254152CC8, (uint64_t (*)(uint64_t))sub_2311D3750, MEMORY[0x24BDB96E0]);
    sub_231172048(&qword_254154468, (uint64_t (*)(uint64_t))sub_2311D34D0, MEMORY[0x24BDB98F0]);
    v0 = sub_231263CA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254154450);
  }
}

void sub_2311D3750()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_254152CD0)
  {
    sub_2311D38D4(255, &qword_254153000, &qword_2541531C0, (uint64_t (*)(uint64_t))sub_2311D3860);
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
    sub_2311D38D4(255, &qword_254152E78, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    sub_2311D3954(&qword_254152FF8, &qword_254153000, &qword_2541531C0, (uint64_t (*)(uint64_t))sub_2311D3860);
    sub_2311D3954((unint64_t *)&qword_254152E70, &qword_254152E78, (unint64_t *)&qword_254154938, v0);
    v1 = sub_231263C28();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_254152CD0);
  }
}

void sub_2311D3860()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2541531B8)
  {
    sub_231178AD0(255, &qword_2541531B0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2541531B8);
  }
}

void sub_2311D38D4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_2311735E0(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    sub_2311889D8();
    v5 = sub_231263D0C();
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_2311D3954(unint64_t *a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_2311D38D4(255, a2, a3, a4);
    result = MEMORY[0x2348D8544](MEMORY[0x24BDB9AF8], v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_2311D3994()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541542D8)
  {
    sub_2311D3688();
    sub_231172048(&qword_254154448, (uint64_t (*)(uint64_t))sub_2311D3688, MEMORY[0x24BDB98F0]);
    v0 = sub_231263C64();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541542D8);
  }
}

void sub_2311D3A0C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254154390)
  {
    sub_2311D3994();
    sub_231172048(&qword_2541542D0, (uint64_t (*)(uint64_t))sub_2311D3994, MEMORY[0x24BDB97F8]);
    v0 = sub_231263C94();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254154390);
  }
}

void sub_2311D3A84()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254154370)
  {
    sub_2311D3A0C();
    sub_2311735E0(255, &qword_254151870, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_231172048(&qword_254154388, (uint64_t (*)(uint64_t))sub_2311D3A0C, MEMORY[0x24BDB98D8]);
    v0 = sub_231263C88();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254154370);
  }
}

void sub_2311D3B30()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254154380)
  {
    sub_2311D3A0C();
    sub_2311B6764();
    sub_231172048(&qword_254154388, (uint64_t (*)(uint64_t))sub_2311D3A0C, MEMORY[0x24BDB98D8]);
    v0 = sub_231263C88();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254154380);
  }
}

void sub_2311D3BC4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254154278)
  {
    sub_2311D3B30();
    sub_231187D64();
    sub_231172048(&qword_254154378, (uint64_t (*)(uint64_t))sub_2311D3B30, MEMORY[0x24BDB98C8]);
    sub_231172048(&qword_254152F30, (uint64_t (*)(uint64_t))sub_231187D64, MEMORY[0x24BDB9AF8]);
    v0 = sub_231263C40();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254154278);
  }
}

void sub_2311D3C8C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254154098)
  {
    sub_2311D3BC4();
    sub_231172048(&qword_254154270, (uint64_t (*)(uint64_t))sub_2311D3BC4, MEMORY[0x24BDB9740]);
    v0 = sub_231263BE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254154098);
  }
}

uint64_t sub_2311D3D04(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

unint64_t sub_2311D3D1C(uint64_t a1, void (*a2)(_QWORD), uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  char *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v28;
  void (*v29)(_QWORD);
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;

  v33 = a3;
  sub_2311735E0(0, &qword_2541554F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v28 - v7;
  v9 = sub_23126217C();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v32 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v30 = (char *)&v28 - v13;
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
    return MEMORY[0x24BEE4AF8];
  v34 = v12;
  sub_2311D4BAC();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = a1 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  v31 = *(_QWORD *)(v16 + 72);
  v28 = a1;
  v18 = swift_bridgeObjectRetain();
  v19 = MEMORY[0x24BEE4AF8];
  v29 = a2;
  do
  {
    v20 = (void *)MEMORY[0x2348D810C](v18);
    a2(v17);
    if (v3)
    {
      objc_autoreleasePoolPop(v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v19;
    }
    objc_autoreleasePoolPop(v20);
    v21 = v34;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v8, 1, v9) == 1)
    {
      v18 = sub_231189628((uint64_t)v8, &qword_2541554F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0]);
    }
    else
    {
      v22 = v9;
      v23 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
      v24 = v30;
      v23(v30, v8, v22);
      v23(v32, v24, v22);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = sub_2311DCA10(0, *(_QWORD *)(v19 + 16) + 1, 1, v19);
      v26 = *(_QWORD *)(v19 + 16);
      v25 = *(_QWORD *)(v19 + 24);
      if (v26 >= v25 >> 1)
        v19 = sub_2311DCA10(v25 > 1, v26 + 1, 1, v19);
      *(_QWORD *)(v19 + 16) = v26 + 1;
      v18 = ((uint64_t (*)(unint64_t, char *, uint64_t))v23)(v19+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(_QWORD *)(v34 + 72) * v26, v32, v22);
      v9 = v22;
      a2 = v29;
    }
    v17 += v31;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_2311D3FC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;

  v2 = sub_231261F0C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    sub_2311D4EC4();
    v10 = sub_2312648A0();
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v28 = v9;
    v29 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v32 = v10 + 56;
    while (1)
    {
      v30 = v11;
      v31(v8, v29 + v13 * v11, v2);
      sub_231172048(&qword_254151920, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF290], MEMORY[0x24BDCF2A8]);
      v14 = sub_231264000();
      v15 = ~(-1 << *(_BYTE *)(v10 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v31(v6, *(_QWORD *)(v10 + 48) + v16 * v13, v2);
          sub_231172048(&qword_254151888, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF290], MEMORY[0x24BDCF2C0]);
          v20 = sub_231264060();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v6, v2);
          if ((v20 & 1) != 0)
          {
            v22(v8, v2);
            v3 = v21;
            v9 = v28;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v9 = v28;
      }
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v16 * v13, v8, v2);
      v24 = *(_QWORD *)(v10 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        break;
      *(_QWORD *)(v10 + 16) = v26;
LABEL_4:
      v11 = v30 + 1;
      if (v30 + 1 == v9)
        return v10;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B08];
  }
  return result;
}

void sub_2311D422C(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = a1;
  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_2312649A8();
    swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      sub_23119414C();
      v3 = sub_2312648A0();
      if (!v2)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v4 = sub_2312649A8();
      swift_bridgeObjectRelease();
      if (!v4)
        return;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x24BEE4B08];
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return;
LABEL_9:
  v6 = v3 + 56;
  v42 = v4;
  if ((v1 & 0xC000000000000001) != 0)
  {
    v7 = 0;
    v40 = v1;
    while (1)
    {
      while (1)
      {
        v8 = MEMORY[0x2348D7CE0](v7, v1);
        v9 = __OFADD__(v7++, 1);
        if (v9)
        {
          __break(1u);
          goto LABEL_36;
        }
        v10 = v8;
        v11 = sub_231264690();
        v12 = -1 << *(_BYTE *)(v3 + 32);
        v13 = v11 & ~v12;
        v14 = v13 >> 6;
        v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
        v16 = 1 << v13;
        if (((1 << v13) & v15) != 0)
          break;
LABEL_20:
        *(_QWORD *)(v6 + 8 * v14) = v16 | v15;
        *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v13) = v10;
        v22 = *(_QWORD *)(v3 + 16);
        v9 = __OFADD__(v22, 1);
        v23 = v22 + 1;
        if (v9)
          goto LABEL_37;
        *(_QWORD *)(v3 + 16) = v23;
        if (v7 == v4)
          return;
      }
      sub_231178AD0(0, &qword_254154600);
      v17 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
      v18 = sub_23126469C();

      if ((v18 & 1) == 0)
      {
        v19 = ~v12;
        while (1)
        {
          v13 = (v13 + 1) & v19;
          v14 = v13 >> 6;
          v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
          v16 = 1 << v13;
          if ((v15 & (1 << v13)) == 0)
            break;
          v20 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
          v21 = sub_23126469C();

          if ((v21 & 1) != 0)
            goto LABEL_11;
        }
        v1 = v40;
        v4 = v42;
        goto LABEL_20;
      }
LABEL_11:
      swift_unknownObjectRelease();
      v1 = v40;
      v4 = v42;
      if (v7 == v42)
        return;
    }
  }
  v24 = 0;
  v39 = v1 + 32;
  v41 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v24 != v41)
  {
    v25 = *(id *)(v39 + 8 * v24);
    v26 = sub_231264690();
    v27 = -1 << *(_BYTE *)(v3 + 32);
    v28 = v26 & ~v27;
    v29 = v28 >> 6;
    v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
    v31 = 1 << v28;
    if (((1 << v28) & v30) != 0)
    {
      sub_231178AD0(0, &qword_254154600);
      v32 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
      v33 = sub_23126469C();

      if ((v33 & 1) != 0)
      {
LABEL_24:

        goto LABEL_25;
      }
      v34 = ~v27;
      while (1)
      {
        v28 = (v28 + 1) & v34;
        v29 = v28 >> 6;
        v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
        v31 = 1 << v28;
        if ((v30 & (1 << v28)) == 0)
          break;
        v35 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
        v36 = sub_23126469C();

        if ((v36 & 1) != 0)
          goto LABEL_24;
      }
    }
    *(_QWORD *)(v6 + 8 * v29) = v31 | v30;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v28) = v25;
    v37 = *(_QWORD *)(v3 + 16);
    v9 = __OFADD__(v37, 1);
    v38 = v37 + 1;
    if (v9)
      goto LABEL_38;
    *(_QWORD *)(v3 + 16) = v38;
LABEL_25:
    if (++v24 == v42)
      return;
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

uint64_t sub_2311D4584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  void *v44;
  void *v45;
  void *v46;
  uint64_t v47;
  unsigned int v48;
  unsigned int v49;
  __int128 v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v67 = a1;
  v68 = a3;
  v66 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2311735E0(0, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v59 = (char *)&v47 - v5;
  v6 = sub_231261E40();
  v63 = *(_QWORD *)(v6 - 8);
  v64 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v58 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, &qword_254151930, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], v3);
  MEMORY[0x24BDAC7A8](v8);
  v65 = (char *)&v47 - v9;
  sub_2311735E0(0, &qword_254151928, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], v3);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v47 - v11;
  v62 = sub_231261D38();
  v60 = *(_QWORD *)(v62 - 8);
  v13 = MEMORY[0x24BDAC7A8](v62);
  v57 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v47 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v47 - v18;
  sub_2311735E0(0, (unint64_t *)&qword_254153210, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF290], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v21 = v20;
  v22 = sub_231261F0C();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(_QWORD *)(v23 + 72);
  v25 = *(unsigned __int8 *)(v23 + 80);
  v26 = (v25 + 32) & ~v25;
  v55 = v21;
  v52 = v25 | 7;
  v53 = v26 + 3 * v24;
  v27 = swift_allocObject();
  v50 = xmmword_231265B40;
  *(_OWORD *)(v27 + 16) = xmmword_231265B40;
  v54 = v26;
  v28 = *(void (**)(uint64_t))(v23 + 104);
  v51 = *MEMORY[0x24BDCF240];
  v28(v27 + v26);
  v49 = *MEMORY[0x24BDCF250];
  v28(v27 + v26 + v24);
  v56 = 2 * v24;
  v48 = *MEMORY[0x24BDCF220];
  v28(v27 + v26 + 2 * v24);
  sub_2311D3FC8(v27);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v61 = v19;
  sub_231261EDC();
  v29 = v65;
  swift_bridgeObjectRelease();
  v30 = sub_231261F18();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v12, 1, 1, v30);
  v31 = sub_231261F30();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v29, 1, 1, v31);
  if (__OFSUB__(0, v67))
  {
    __break(1u);
  }
  else
  {
    sub_231261D2C();
    v33 = (uint64_t)v59;
    sub_231261EF4();
    v35 = v63;
    v34 = v64;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v33, 1, v64) == 1)
    {
      sub_231189628(v33, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
      v36 = objc_msgSend((id)objc_opt_self(), sel_predicateWithValue_, 1);
      v37 = v61;
      v38 = *(void (**)(char *, uint64_t))(v60 + 8);
      v39 = v62;
      v38(v17, v62);
    }
    else
    {
      v40 = v58;
      (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v58, v33, v34);
      v41 = swift_allocObject();
      *(_OWORD *)(v41 + 16) = v50;
      v42 = v41 + v54;
      ((void (*)(uint64_t, _QWORD, uint64_t))v28)(v41 + v54, v51, v22);
      ((void (*)(uint64_t, _QWORD, uint64_t))v28)(v42 + v24, v49, v22);
      ((void (*)(uint64_t, _QWORD, uint64_t))v28)(v42 + v56, v48, v22);
      sub_2311D3FC8(v41);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      v43 = v57;
      sub_231261EDC();
      swift_bridgeObjectRelease();
      v44 = (void *)objc_opt_self();
      v45 = (void *)sub_231261CF0();
      v37 = v61;
      v46 = (void *)sub_231261CF0();
      v36 = objc_msgSend(v44, sel_predicateForRecordsWithSortDateFromStartDateComponents_endDateComponents_, v45, v46);

      v38 = *(void (**)(char *, uint64_t))(v60 + 8);
      v39 = v62;
      v38(v43, v62);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v40, v34);
      v38(v17, v39);
    }
    v38(v37, v39);
    return (uint64_t)v36;
  }
  return result;
}

uint64_t sub_2311D4B6C()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2311D4BA0(void **a1)
{
  return sub_2311D2100(a1);
}

void sub_2311D4BAC()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  unint64_t TupleTypeMetadata2;
  uint64_t v2;

  if (!qword_2541531C8)
  {
    v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
    sub_2311735E0(255, &qword_2541531C0, (uint64_t (*)(uint64_t))sub_2311D3860, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    sub_2311735E0(255, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], v0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v2)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2541531C8);
  }
}

uint64_t sub_2311D4C50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for HealthRecordsGeneratorContext();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 40) & ~v2;
  swift_release();
  swift_release();
  v4 = v0 + v3;
  v5 = sub_23126226C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

  return swift_deallocObject();
}

unint64_t sub_2311D4CF4@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  _OWORD v12[2];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(_QWORD *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v2 + 32);
  v9 = *(_QWORD *)(v2 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = *a1;
  v12[1] = *(_OWORD *)(v2 + 16);
  v13 = v8;
  v14 = v2 + v7;
  v15 = v9;
  result = sub_2311D3D1C(v10, (void (*)(_QWORD))sub_2311D4E18, (uint64_t)v12);
  if (!v3)
    *a2 = result;
  return result;
}

uint64_t sub_2311D4D8C()
{
  return swift_deallocObject();
}

uint64_t sub_2311D4D9C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2311D2F10(a1, a2);
}

unint64_t sub_2311D4DA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254153048;
  if (!qword_254153048)
  {
    sub_2311735E0(255, (unint64_t *)&qword_254153050, (uint64_t (*)(uint64_t))sub_2311B6764, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
    result = MEMORY[0x2348D8544](MEMORY[0x24BDB9DF8], v1);
    atomic_store(result, (unint64_t *)&qword_254153048);
  }
  return result;
}

uint64_t sub_2311D4E04(uint64_t a1)
{
  return sub_23118852C(a1, &qword_255EB9290, (void (*)(uint64_t))type metadata accessor for LabTipsGenerator);
}

uint64_t sub_2311D4E18@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2311D2314(a1, *(NSObject **)(v2 + 16), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), a2);
}

void sub_2311D4E38()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254152E38)
  {
    sub_2311D3468(255, &qword_254153128, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_2311D3630();
    v0 = sub_231263CC4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254152E38);
  }
}

void sub_2311D4EC4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541531F8)
  {
    sub_231261F0C();
    sub_231172048(&qword_254151920, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF290], MEMORY[0x24BDCF2A8]);
    v0 = sub_2312648AC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541531F8);
  }
}

uint64_t *sub_2311D4F3C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_2311D4F7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_2311D5118();
    v3 = sub_2312648A0();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      sub_231264C00();
      swift_bridgeObjectRetain();
      sub_231264114();
      result = sub_231264C3C();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = sub_231264B58(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = sub_231264B58();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

void sub_2311D5118()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254155708)
  {
    v0 = sub_2312648AC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254155708);
  }
}

id sub_2311D5174()
{
  return sub_2311D51A4(&OBJC_IVAR____TtC13HealthRecords18CategoryUpdateView____lazy_storage___countLabel, MEMORY[0x24BEBE200]);
}

id sub_2311D518C()
{
  return sub_2311D51A4(&OBJC_IVAR____TtC13HealthRecords18CategoryUpdateView____lazy_storage___descriptionLabel, MEMORY[0x24BEBE220]);
}

id sub_2311D51A4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v7 = v2;
    sub_231178AD0(0, &qword_255EB9508);
    v8 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *a2);
    v9 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    v10 = (void *)sub_23126466C();
    v11 = *(void **)(v2 + v3);
    *(_QWORD *)(v7 + v3) = v10;
    v5 = v10;

    v4 = 0;
  }
  v12 = v4;
  return v5;
}

id sub_2311D5280()
{
  return sub_2311D51A4(&OBJC_IVAR____TtC13HealthRecords18CategoryUpdateView____lazy_storage___actionLabel, MEMORY[0x24BEBE220]);
}

void sub_2311D5298()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC13HealthRecords18CategoryUpdateView_viewData + 8);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC13HealthRecords18CategoryUpdateView_viewData);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v3 = sub_2311D5174();
    v4 = (void *)sub_23126406C();
    objc_msgSend(v3, sel_setText_, v4);

    v5 = sub_2311D518C();
    v6 = (void *)sub_23126406C();
    objc_msgSend(v5, sel_setText_, v6);

    v7 = sub_2311D5280();
    v10 = (id)sub_23126406C();
    sub_2311D84DC(v2, v1);
    objc_msgSend(v7, sel_setText_, v10);

  }
  else
  {
    v8 = sub_2311D5174();
    objc_msgSend(v8, sel_setText_, 0);

    v9 = sub_2311D518C();
    objc_msgSend(v9, sel_setText_, 0);

    v10 = sub_2311D5280();
    objc_msgSend(v10, sel_setText_, 0);
  }

}

id sub_2311D540C(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  objc_class *updated;
  id v11;
  id v12;
  objc_super v14;

  *(_QWORD *)&v4[OBJC_IVAR____TtC13HealthRecords18CategoryUpdateView____lazy_storage___countLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC13HealthRecords18CategoryUpdateView____lazy_storage___descriptionLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC13HealthRecords18CategoryUpdateView____lazy_storage___actionLabel] = 0;
  v9 = &v4[OBJC_IVAR____TtC13HealthRecords18CategoryUpdateView_viewData];
  updated = (objc_class *)type metadata accessor for CategoryUpdateView();
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_OWORD *)v9 + 2) = 0u;
  v14.receiver = v4;
  v14.super_class = updated;
  v11 = objc_msgSendSuper2(&v14, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_2311D5654();
  sub_2311D5760();
  v12 = v11;
  sub_2312645AC();
  objc_msgSend(v12, sel_setDirectionalLayoutMargins_);

  return v12;
}

void sub_2311D5654()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;

  v1 = sub_2311D5174();
  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  v2 = sub_2311D518C();
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  v3 = sub_2311D5280();
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  v4 = sub_2311D5280();
  v5 = objc_msgSend(v0, sel_tintColor);
  objc_msgSend(v4, sel_setTextColor_, v5);

  v6 = sub_2311D5174();
  objc_msgSend(v0, sel_addSubview_, v6);

  v7 = sub_2311D518C();
  objc_msgSend(v0, sel_addSubview_, v7);

  v8 = sub_2311D5280();
  objc_msgSend(v0, sel_addSubview_, v8);

}

void sub_2311D5760()
{
  void *v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  id v52;

  v51 = (void *)objc_opt_self();
  sub_231171FD8(0, (unint64_t *)&qword_254154688, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_231268690;
  v2 = sub_2311D5174();
  v3 = objc_msgSend(v2, sel_leadingAnchor);

  v4 = objc_msgSend(v0, sel_layoutMarginsGuide);
  v5 = objc_msgSend(v4, sel_leadingAnchor);

  v6 = objc_msgSend(v3, sel_constraintEqualToAnchor_, v5);
  *(_QWORD *)(v1 + 32) = v6;
  v7 = sub_2311D5174();
  v8 = objc_msgSend(v7, sel_trailingAnchor);

  v9 = objc_msgSend(v0, (SEL)&selRef_setAttributedText_ + 5);
  v10 = objc_msgSend(v9, sel_trailingAnchor);

  v11 = objc_msgSend(v8, (SEL)&selRef_window + 6, v10);
  *(_QWORD *)(v1 + 40) = v11;
  v12 = sub_2311D5174();
  v13 = objc_msgSend(v12, sel_topAnchor);

  v14 = objc_msgSend(v0, sel_topAnchor);
  v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_constant_, v14, 12.0);

  *(_QWORD *)(v1 + 48) = v15;
  v16 = sub_2311D5174();
  v17 = objc_msgSend(v16, sel_bottomAnchor);

  v18 = sub_2311D518C();
  v19 = objc_msgSend(v18, sel_topAnchor);

  v20 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v19, -4.0);
  *(_QWORD *)(v1 + 56) = v20;
  v21 = sub_2311D518C();
  v22 = objc_msgSend(v21, sel_leadingAnchor);

  v23 = sub_2311D5174();
  v24 = objc_msgSend(v23, sel_leadingAnchor);

  v25 = objc_msgSend(v22, sel_constraintEqualToAnchor_, v24);
  *(_QWORD *)(v1 + 64) = v25;
  v26 = sub_2311D518C();
  v27 = objc_msgSend(v26, sel_trailingAnchor);

  v28 = sub_2311D5174();
  v29 = objc_msgSend(v28, sel_trailingAnchor);

  v30 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v29);
  *(_QWORD *)(v1 + 72) = v30;
  v31 = sub_2311D518C();
  v32 = objc_msgSend(v31, sel_bottomAnchor);

  v33 = sub_2311D5280();
  v34 = objc_msgSend(v33, sel_topAnchor);

  v35 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v34, -4.0);
  *(_QWORD *)(v1 + 80) = v35;
  v36 = sub_2311D5280();
  v37 = objc_msgSend(v36, sel_leadingAnchor);

  v38 = sub_2311D5174();
  v39 = objc_msgSend(v38, sel_leadingAnchor);

  v40 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v39);
  *(_QWORD *)(v1 + 88) = v40;
  v41 = sub_2311D5280();
  v42 = objc_msgSend(v41, sel_trailingAnchor);

  v43 = sub_2311D5174();
  v44 = objc_msgSend(v43, sel_trailingAnchor);

  v45 = objc_msgSend(v42, sel_constraintEqualToAnchor_, v44);
  *(_QWORD *)(v1 + 96) = v45;
  v46 = sub_2311D5280();
  v47 = objc_msgSend(v46, sel_bottomAnchor);

  v48 = objc_msgSend(v0, sel_layoutMarginsGuide);
  v49 = objc_msgSend(v48, sel_bottomAnchor);

  v50 = objc_msgSend(v47, sel_constraintEqualToAnchor_, v49);
  *(_QWORD *)(v1 + 104) = v50;
  sub_231264210();
  sub_231178AD0(0, &qword_255EBA000);
  v52 = (id)sub_2312641EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v51, sel_activateConstraints_, v52);

}

id sub_2311D5CC0(uint64_t a1)
{
  return sub_2311D7488(a1, type metadata accessor for CategoryUpdateView);
}

uint64_t type metadata accessor for CategoryUpdateView()
{
  return objc_opt_self();
}

id sub_2311D5D50()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = qword_255EB9308;
  v2 = *(void **)(v0 + qword_255EB9308);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_255EB9308);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CategoryUpdateView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_2311D5DCC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  objc_class *updated;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  void *v14;
  objc_super v15;

  v1 = sub_231262B60();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311787F4(0, (unint64_t *)&qword_254151918, (void (*)(uint64_t))MEMORY[0x24BDCEEA8]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v15 - v6;
  updated = (objc_class *)type metadata accessor for CategoryUpdateViewController();
  v15.receiver = v0;
  v15.super_class = updated;
  objc_msgSendSuper2(&v15, sel_viewDidLoad);
  v9 = objc_msgSend(v0, sel_view);
  if (v9)
  {
    v10 = v9;
    v11 = sub_2311D5D50();
    objc_msgSend(v10, sel_addSubview_, v11);

    sub_2311D6290();
    sub_2311D658C();
    v12 = sub_231261EAC();
    v13 = (void (*)(uint64_t))MEMORY[0x24BDCEEA8];
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v7, 1, 1, v12);
    sub_231262B54();
    sub_2312632EC();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    sub_2311786C0((uint64_t)v7, (unint64_t *)&qword_254151918, v13);
    v14 = (void *)sub_23126406C();
    swift_bridgeObjectRelease();
    objc_msgSend(v0, sel_setTitle_, v14);

  }
  else
  {
    __break(1u);
  }
}

void sub_2311D5FBC(void *a1)
{
  id v1;

  v1 = a1;
  sub_2311D5DCC();

}

uint64_t sub_2311D5FF0@<X0>(char *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int *v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  sub_2311787F4(0, qword_254151AF0, (void (*)(uint64_t))type metadata accessor for SharedNewRecordsAlertData);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v24 - v4;
  sub_2311787F4(0, (unint64_t *)&qword_254154938, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v24 - v7;
  v9 = sub_231261E40();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (uint64_t)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x60);
  swift_beginAccess();
  sub_2311D7990(v13, (uint64_t)v5);
  v14 = type metadata accessor for SharedNewRecordsAlertData(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v5, 1, v14))
  {
    sub_2311786C0((uint64_t)v5, qword_254151AF0, (void (*)(uint64_t))type metadata accessor for SharedNewRecordsAlertData);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v8, &v5[*(int *)(v14 + 32)], v9);
    sub_2311786C0((uint64_t)v5, qword_254151AF0, (void (*)(uint64_t))type metadata accessor for SharedNewRecordsAlertData);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      v16 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v16(v12, v8, v9);
      sub_23118CDD8();
      v18 = &a1[*(int *)(v17 + 48)];
      v16(a1, v12, v9);
      v19 = *MEMORY[0x24BE43120];
      v20 = sub_231263580();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v18, v19, v20);
      v15 = (unsigned int *)MEMORY[0x24BE43130];
      goto LABEL_6;
    }
  }
  sub_2311786C0((uint64_t)v8, (unint64_t *)&qword_254154938, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  v15 = (unsigned int *)MEMORY[0x24BE43138];
LABEL_6:
  v21 = *v15;
  v22 = sub_23126358C();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(a1, v21, v22);
}

void sub_2311D6290()
{
  void *v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  id v27;

  sub_231171FD8(0, (unint64_t *)&qword_254154688, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_2312686A0;
  v2 = sub_2311D5D50();
  v3 = objc_msgSend(v2, sel_leadingAnchor);

  v4 = objc_msgSend(v0, sel_view);
  if (!v4)
  {
    __break(1u);
    goto LABEL_7;
  }
  v5 = v4;
  v6 = objc_msgSend(v4, sel_leadingAnchor);

  v7 = objc_msgSend(v3, sel_constraintEqualToAnchor_, v6);
  *(_QWORD *)(v1 + 32) = v7;
  v8 = sub_2311D5D50();
  v9 = objc_msgSend(v8, sel_trailingAnchor);

  v10 = objc_msgSend(v0, sel_view);
  if (!v10)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v11 = v10;
  v12 = objc_msgSend(v10, sel_trailingAnchor);

  v13 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v12);
  *(_QWORD *)(v1 + 40) = v13;
  v14 = sub_2311D5D50();
  v15 = objc_msgSend(v14, sel_topAnchor);

  v16 = objc_msgSend(v0, sel_view);
  if (!v16)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v17 = v16;
  v18 = objc_msgSend(v16, sel_topAnchor);

  v19 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v18);
  *(_QWORD *)(v1 + 48) = v19;
  v20 = sub_2311D5D50();
  v21 = objc_msgSend(v20, sel_bottomAnchor);

  v22 = objc_msgSend(v0, sel_view);
  if (v22)
  {
    v23 = v22;
    v24 = (void *)objc_opt_self();
    v25 = objc_msgSend(v23, sel_bottomAnchor);

    v26 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v25);
    *(_QWORD *)(v1 + 56) = v26;
    sub_231264210();
    sub_231178AD0(0, &qword_255EBA000);
    v27 = (id)sub_2312641EC();
    swift_bridgeObjectRelease();
    objc_msgSend(v24, sel_activateConstraints_, v27);

    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_2311D658C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t);
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  unint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  void (*v94)(uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v101;

  sub_2311787F4(0, (unint64_t *)&qword_254151918, (void (*)(uint64_t))MEMORY[0x24BDCEEA8]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v90 - v2;
  v4 = sub_231262B60();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311787F4(0, qword_254151AF0, (void (*)(uint64_t))type metadata accessor for SharedNewRecordsAlertData);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v90 - v9;
  v11 = type metadata accessor for SharedNewRecordsAlertData(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)v0 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0x60);
  swift_beginAccess();
  sub_2311D7990(v15, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    return sub_2311786C0((uint64_t)v10, qword_254151AF0, (void (*)(uint64_t))type metadata accessor for SharedNewRecordsAlertData);
  v93 = v0;
  sub_2311D79E4((uint64_t)v10, (uint64_t)v14);
  v17 = *(_QWORD *)&v14[*(int *)(v11 + 20)];
  sub_231262B48();
  v18 = sub_231261EAC();
  v19 = (uint64_t)v14;
  v20 = (void (*)(uint64_t))MEMORY[0x24BDCEEA8];
  v100 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v100(v3, 1, 1, v18);
  v98 = sub_2312640E4();
  sub_2311786C0((uint64_t)v3, (unint64_t *)&qword_254151918, v20);
  v21 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v95 = (uint64_t)v7;
  v96 = v4;
  v94 = v21;
  v21((uint64_t)v7, v4);
  sub_2311805C4(0, (unint64_t *)&qword_254155750, (unint64_t *)&qword_254155770, MEMORY[0x24BEE45D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v22 = swift_allocObject();
  v90 = xmmword_231265570;
  *(_OWORD *)(v22 + 16) = xmmword_231265570;
  v23 = *(int *)(v11 + 28);
  v99 = v19;
  v24 = (uint64_t *)(v19 + v23);
  v25 = *v24;
  v26 = v24[1];
  *(_QWORD *)(v22 + 56) = MEMORY[0x24BEE0D00];
  v27 = sub_23117A630();
  *(_QWORD *)(v22 + 32) = v25;
  *(_QWORD *)(v22 + 40) = v26;
  v28 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v22 + 96) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v22 + 104) = v28;
  v91 = v27;
  v92 = v17;
  *(_QWORD *)(v22 + 64) = v27;
  *(_QWORD *)(v22 + 72) = v17;
  swift_bridgeObjectRetain();
  v98 = sub_231264078();
  v30 = v29;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v31 = HIBYTE(v26) & 0xF;
  v32 = v25 & 0xFFFFFFFFFFFFLL;
  v33 = v100;
  if ((v26 & 0x2000000000000000) == 0)
    v31 = v32;
  v97 = v18;
  if (v31)
  {
    v92 = v30;
    v34 = v95;
    v35 = v96;
    v36 = v94;
  }
  else
  {
    swift_bridgeObjectRelease();
    v34 = v95;
    sub_231262B48();
    v33(v3, 1, 1, v18);
    sub_2312640E4();
    sub_2311786C0((uint64_t)v3, (unint64_t *)&qword_254151918, (void (*)(uint64_t))MEMORY[0x24BDCEEA8]);
    v37 = v96;
    v36 = v94;
    v94(v34, v96);
    v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_231265AC0;
    *(_QWORD *)(v38 + 56) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v38 + 64) = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v38 + 32) = v92;
    v98 = sub_231264078();
    v92 = v39;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v35 = v37;
  }
  v40 = swift_bridgeObjectRetain();
  v41 = sub_23124E26C(v40);
  swift_bridgeObjectRelease();
  v42 = sub_2311974EC(v41);
  swift_bridgeObjectRelease();
  v101 = v42;
  swift_retain();
  sub_2311D7A28((uint64_t *)&v101);
  swift_release();
  v43 = v101;
  v44 = v101[2];
  v45 = v100;
  v46 = v35;
  switch(v44)
  {
    case 0:
      v47 = v36;
      swift_release();
      v48 = 0;
      v49 = 0xE000000000000000;
      goto LABEL_20;
    case 1:
      v47 = v36;
      v48 = v101[4];
      v49 = v101[5];
      swift_bridgeObjectRetain();
      swift_release();
      goto LABEL_20;
    case 2:
      v50 = v97;
      v100(v3, 1, 1, v97);
      sub_231262B54();
      v95 = sub_2312632EC();
      v36(v34, v35);
      sub_2311786C0((uint64_t)v3, (unint64_t *)&qword_254151918, (void (*)(uint64_t))MEMORY[0x24BDCEEA8]);
      v51 = swift_allocObject();
      *(_OWORD *)(v51 + 16) = v90;
      v52 = MEMORY[0x24BEE0D00];
      v53 = v91;
      *(_QWORD *)(v51 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v51 + 64) = v53;
      v54 = v43[2];
      if (!v54)
      {
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
      v55 = (_QWORD *)v51;
      v56 = v43[5];
      v55[4] = v43[4];
      v55[5] = v56;
      v55[12] = v52;
      v55[13] = v53;
      if (v54 == 1)
      {
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
        swift_release();
        __break(1u);
        JUMPOUT(0x2311D6F68);
      }
      v47 = v36;
      v57 = v46;
      v58 = v43[6];
      v59 = v43[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
      v55[9] = v58;
      v55[10] = v59;
      v48 = sub_2312640A8();
      v49 = v60;
      swift_bridgeObjectRelease();
      v46 = v57;
      v100(v3, 1, 1, v50);
LABEL_21:
      sub_231262B54();
      v82 = sub_2312640E4();
      v84 = v83;
      v47(v34, v46);
      sub_2311786C0((uint64_t)v3, (unint64_t *)&qword_254151918, (void (*)(uint64_t))MEMORY[0x24BDCEEA8]);
      v85 = (char *)sub_2311D5D50();
      v86 = (uint64_t *)&v85[OBJC_IVAR____TtC13HealthRecords18CategoryUpdateView_viewData];
      v87 = *(_QWORD *)&v85[OBJC_IVAR____TtC13HealthRecords18CategoryUpdateView_viewData];
      v88 = *(_QWORD *)&v85[OBJC_IVAR____TtC13HealthRecords18CategoryUpdateView_viewData + 8];
      v89 = v92;
      *v86 = v98;
      v86[1] = v89;
      v86[2] = v48;
      v86[3] = v49;
      v86[4] = v82;
      v86[5] = v84;
      sub_2311D84DC(v87, v88);
      sub_2311D5298();

      return sub_2311D8518(v99);
    case 3:
      v61 = v97;
      v100(v3, 1, 1, v97);
      sub_231262B54();
      sub_2312632EC();
      v63 = v62;
      v36(v34, v46);
      sub_2311786C0((uint64_t)v3, (unint64_t *)&qword_254151918, (void (*)(uint64_t))MEMORY[0x24BDCEEA8]);
      v64 = swift_allocObject();
      *(_OWORD *)(v64 + 16) = xmmword_231265B40;
      v65 = MEMORY[0x24BEE0D00];
      v66 = v91;
      *(_QWORD *)(v64 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v64 + 64) = v66;
      v67 = v43[2];
      if (!v67)
        goto LABEL_24;
      v68 = (_QWORD *)v64;
      v95 = v63;
      v69 = v43[5];
      v68[4] = v43[4];
      v68[5] = v69;
      v68[12] = v65;
      v68[13] = v66;
      if (v67 == 1)
        goto LABEL_27;
      v47 = v36;
      v70 = v43[6];
      v71 = v43[7];
      v68[9] = v70;
      v68[10] = v71;
      v68[17] = v65;
      v68[18] = v66;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_release();
      v68[14] = v70;
      v68[15] = v71;
      v48 = sub_2312640A8();
      v49 = v72;
      swift_bridgeObjectRelease();
      v46 = v96;
      v100(v3, 1, 1, v61);
      goto LABEL_21;
    default:
      v100(v3, 1, 1, v97);
      sub_231262B54();
      v94 = (void (*)(uint64_t, uint64_t))sub_2312632EC();
      v95 = v73;
      v46 = v35;
      v36(v34, v35);
      sub_2311786C0((uint64_t)v3, (unint64_t *)&qword_254151918, (void (*)(uint64_t))MEMORY[0x24BDCEEA8]);
      v74 = swift_allocObject();
      *(_OWORD *)(v74 + 16) = xmmword_231265B40;
      v75 = MEMORY[0x24BEE0D00];
      v76 = v91;
      *(_QWORD *)(v74 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v74 + 64) = v76;
      v77 = v43[2];
      if (!v77)
        goto LABEL_25;
      v78 = (_QWORD *)v74;
      v79 = v43[5];
      v78[4] = v43[4];
      v78[5] = v79;
      v78[12] = v75;
      v78[13] = v76;
      if (v77 == 1)
        goto LABEL_28;
      v47 = v36;
      v80 = v43[7];
      v78[9] = v43[6];
      v78[10] = v80;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
      v78[17] = MEMORY[0x24BEE1768];
      v78[18] = MEMORY[0x24BEE17F0];
      v78[14] = v44 - 2;
      v48 = sub_2312640A8();
      v49 = v81;
      swift_bridgeObjectRelease();
LABEL_20:
      v45(v3, 1, 1, v97);
      goto LABEL_21;
  }
}

uint64_t sub_2311D6F78(uint64_t a1)
{
  _QWORD *v1;
  void *v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  objc_class *v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  objc_super v25;
  _QWORD v26[3];
  uint64_t v27;

  v2 = v1;
  v4 = (uint64_t)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x70);
  swift_beginAccess();
  result = sub_231180680(v4, (uint64_t)v26);
  v6 = v27;
  if (v27)
  {
    v7 = sub_231173410(v26, v27);
    v8 = *(_QWORD *)(v6 - 8);
    MEMORY[0x24BDAC7A8](v7);
    v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v8 + 16))(v10);
    v11 = (void *)sub_23126376C();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v6);
    v12 = (void *)sub_2312643A8();

    v13 = (objc_class *)type metadata accessor for LabListViewController();
    v14 = (char *)objc_allocWithZone(v13);
    *(_QWORD *)&v14[qword_255EBA6C0] = v12;
    v15 = objc_allocWithZone(MEMORY[0x24BEBD488]);
    v16 = v12;
    v17 = objc_msgSend(v15, sel_init);
    v25.receiver = v14;
    v25.super_class = v13;
    v18 = objc_msgSendSuper2(&v25, sel_initWithCollectionViewLayout_, v17);

    sub_231173434((uint64_t)v26);
    sub_2311D7930(a1, (uint64_t)v26);
    v19 = v27;
    if (v27)
    {
      v20 = sub_231173410(v26, v27);
      v21 = *(_QWORD *)(v19 - 8);
      MEMORY[0x24BDAC7A8](v20);
      v23 = (char *)&v25 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v21 + 16))(v23);
      v24 = sub_231264B40();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v19);
      sub_231173434((uint64_t)v26);
    }
    else
    {
      v24 = 0;
    }
    objc_msgSend(v2, sel_showViewController_sender_, v18, v24);

    return swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_2311D71C0(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  objc_super v12;

  *(_QWORD *)&v3[qword_255EB92F0] = 0;
  *(_QWORD *)&v3[qword_255EB92F8] = 0;
  *(_QWORD *)&v3[qword_255EB9300] = 0;
  *(_QWORD *)&v3[qword_255EB9308] = 0;
  v6 = &v3[qword_255EC20C0];
  v7 = *MEMORY[0x24BE42848];
  v8 = sub_23126346C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v6, v7, v8);
  if (a2)
  {
    v9 = (void *)sub_23126406C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = 0;
  }
  v12.receiver = v3;
  v12.super_class = (Class)type metadata accessor for CategoryUpdateViewController();
  v10 = objc_msgSendSuper2(&v12, sel_initWithNibName_bundle_, v9, a3);

  return v10;
}

id sub_2311D72BC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  if (a3)
  {
    v5 = sub_23126409C();
    v7 = v6;
  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  v8 = a4;
  return sub_2311D71C0(v5, v7, a4);
}

id sub_2311D7318(void *a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  objc_super v8;

  *(_QWORD *)&v1[qword_255EB92F0] = 0;
  *(_QWORD *)&v1[qword_255EB92F8] = 0;
  *(_QWORD *)&v1[qword_255EB9300] = 0;
  *(_QWORD *)&v1[qword_255EB9308] = 0;
  v3 = &v1[qword_255EC20C0];
  v4 = *MEMORY[0x24BE42848];
  v5 = sub_23126346C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v3, v4, v5);
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for CategoryUpdateViewController();
  v6 = objc_msgSendSuper2(&v8, sel_initWithCoder_, a1);

  return v6;
}

id sub_2311D73D8(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_2311D7318(a3);
}

uint64_t sub_2311D73FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + qword_255EC20C0;
  v2 = sub_23126346C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

id sub_2311D7478()
{
  return sub_2311D7488(0, type metadata accessor for CategoryUpdateViewController);
}

id sub_2311D7488(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_2311D74B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + qword_255EC20C0;
  v3 = sub_23126346C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t type metadata accessor for CategoryUpdateViewController()
{
  uint64_t result;

  result = qword_255EB9338;
  if (!qword_255EB9338)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2311D7574()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23126346C();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_2311D75F0()
{
  return type metadata accessor for CategoryUpdateViewController();
}

uint64_t destroy for CategoryUpdateViewData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for CategoryUpdateViewData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for CategoryUpdateViewData(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for CategoryUpdateViewData(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *assignWithTake for CategoryUpdateViewData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CategoryUpdateViewData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CategoryUpdateViewData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CategoryUpdateViewData()
{
  return &type metadata for CategoryUpdateViewData;
}

uint64_t sub_2311D781C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + qword_255EC20C0;
  v4 = sub_23126346C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_2311D7864@<X0>(char *a1@<X8>)
{
  return sub_2311D5FF0(a1);
}

uint64_t sub_2311D7884(uint64_t a1)
{
  MEMORY[0x2348D8544](&unk_2312687A8, a1);
  MEMORY[0x2348D8544](&protocol conformance descriptor for BaseFeedItemViewController<A>, a1);
  return sub_2312637CC() & 1;
}

unint64_t sub_2311D78E8()
{
  unint64_t result;
  uint64_t updated;

  result = qword_255EB9500;
  if (!qword_255EB9500)
  {
    updated = type metadata accessor for CategoryUpdateViewController();
    result = MEMORY[0x2348D8544](&unk_231268728, updated);
    atomic_store(result, (unint64_t *)&qword_255EB9500);
  }
  return result;
}

uint64_t sub_2311D7930(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_231171FD8(0, (unint64_t *)&qword_255EB9FE0, MEMORY[0x24BEE4AD8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2311D7990(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2311787F4(0, qword_254151AF0, (void (*)(uint64_t))type metadata accessor for SharedNewRecordsAlertData);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2311D79E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SharedNewRecordsAlertData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2311D7A28(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_23119A6D4(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_2311D7A90(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_2311D7A90(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  BOOL v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *__dst;

  v3 = a1[1];
  result = sub_231264B1C();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      return sub_2311D8178(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_160;
  v105 = result;
  v102 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v11 = (char *)MEMORY[0x24BEE4AF8];
LABEL_118:
      v94 = v11;
      v104 = v8;
      if (v12 >= 2)
      {
        v95 = *v102;
        do
        {
          v96 = v12 - 2;
          if (v12 < 2)
            goto LABEL_147;
          if (!v95)
            goto LABEL_159;
          v97 = v94;
          v98 = *(_QWORD *)&v94[16 * v96 + 32];
          v99 = *(_QWORD *)&v94[16 * v12 + 24];
          sub_2311D8244((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(_QWORD *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1)
            break;
          if (v99 < v98)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v97 = sub_231199234((uint64_t)v97);
          if (v96 >= *((_QWORD *)v97 + 2))
            goto LABEL_149;
          v100 = &v97[16 * v96 + 32];
          *(_QWORD *)v100 = v98;
          *((_QWORD *)v100 + 1) = v99;
          v101 = *((_QWORD *)v97 + 2);
          if (v12 > v101)
            goto LABEL_150;
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          v94 = v97;
          *((_QWORD *)v97 + 2) = v101 - 1;
          v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v104 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_231264258();
    *(_QWORD *)(v7 + 16) = v6;
    v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v103 = v10 + 8;
  v11 = (char *)MEMORY[0x24BEE4AF8];
  v106 = v3;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = (uint64_t *)(v10 + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v19 = 0;
    }
    else
    {
      v19 = sub_231264B58();
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v21 = (_QWORD *)(v103 + 16 * v20);
    do
    {
      v23 = (_QWORD *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if ((v19 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v19 ^ sub_231264B58()) & 1) != 0)
      {
        goto LABEL_36;
      }
      v21 += 2;
      v22 = v20 + 1;
      v9 = v20;
      v20 = v22;
    }
    while (v22 < v3);
    v20 = v22;
LABEL_36:
    v9 = v20;
    if ((v19 & 1) != 0)
    {
LABEL_37:
      if (v20 < v13)
        goto LABEL_155;
      if (v13 < v20)
      {
        v25 = 16 * v20;
        v26 = 16 * v13;
        v27 = v20;
        v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10)
              goto LABEL_158;
            v29 = v10 + v25;
            v30 = *(_QWORD *)(v10 + v26);
            v31 = *(_QWORD *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(_QWORD *)(v29 - 16) = v30;
            *(_QWORD *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_151;
      if (v9 - v13 < v105)
        break;
    }
LABEL_67:
    if (v9 < v13)
      goto LABEL_146;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_231198FD8(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v41 = *((_QWORD *)v11 + 2);
    v40 = *((_QWORD *)v11 + 3);
    v12 = v41 + 1;
    if (v41 >= v40 >> 1)
      v11 = sub_231198FD8((char *)(v40 > 1), v41 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v42 = v11 + 32;
    v43 = &v11[16 * v41 + 32];
    *(_QWORD *)v43 = v13;
    *((_QWORD *)v43 + 1) = v9;
    if (v41)
    {
      v107 = v9;
      while (1)
      {
        v44 = v12 - 1;
        if (v12 >= 4)
        {
          v49 = &v42[16 * v12];
          v50 = *((_QWORD *)v49 - 8);
          v51 = *((_QWORD *)v49 - 7);
          v55 = __OFSUB__(v51, v50);
          v52 = v51 - v50;
          if (v55)
            goto LABEL_135;
          v54 = *((_QWORD *)v49 - 6);
          v53 = *((_QWORD *)v49 - 5);
          v55 = __OFSUB__(v53, v54);
          v47 = v53 - v54;
          v48 = v55;
          if (v55)
            goto LABEL_136;
          v56 = v12 - 2;
          v57 = &v42[16 * v12 - 32];
          v59 = *(_QWORD *)v57;
          v58 = *((_QWORD *)v57 + 1);
          v55 = __OFSUB__(v58, v59);
          v60 = v58 - v59;
          if (v55)
            goto LABEL_138;
          v55 = __OFADD__(v47, v60);
          v61 = v47 + v60;
          if (v55)
            goto LABEL_141;
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            v81 = *(_QWORD *)v79;
            v80 = *((_QWORD *)v79 + 1);
            v55 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            if (v55)
              goto LABEL_145;
            v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v73 = *((_QWORD *)v11 + 4);
            v74 = *((_QWORD *)v11 + 5);
            v55 = __OFSUB__(v74, v73);
            v66 = v74 - v73;
            v67 = v55;
            goto LABEL_99;
          }
          v46 = *((_QWORD *)v11 + 4);
          v45 = *((_QWORD *)v11 + 5);
          v55 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          v48 = v55;
        }
        if ((v48 & 1) != 0)
          goto LABEL_137;
        v56 = v12 - 2;
        v62 = &v42[16 * v12 - 32];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v65 = __OFSUB__(v63, v64);
        v66 = v63 - v64;
        v67 = v65;
        if (v65)
          goto LABEL_140;
        v68 = &v42[16 * v44];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v55 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v55)
          goto LABEL_143;
        if (__OFADD__(v66, v71))
          goto LABEL_144;
        if (v66 + v71 >= v47)
        {
          v72 = v47 < v71;
LABEL_105:
          if (v72)
            v44 = v56;
          goto LABEL_107;
        }
LABEL_99:
        if ((v67 & 1) != 0)
          goto LABEL_139;
        v75 = &v42[16 * v44];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v55 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v55)
          goto LABEL_142;
        if (v78 < v66)
          goto LABEL_15;
LABEL_107:
        v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        v84 = v10;
        if (!v10)
          goto LABEL_157;
        v85 = v11;
        v86 = &v42[16 * v83];
        v87 = *(_QWORD *)v86;
        v88 = v42;
        v89 = v44;
        v90 = &v42[16 * v44];
        v91 = *((_QWORD *)v90 + 1);
        v92 = v84;
        sub_2311D8244((char *)(v84 + 16 * *(_QWORD *)v86), (char *)(v84 + 16 * *(_QWORD *)v90), v84 + 16 * v91, __dst);
        if (v1)
          goto LABEL_115;
        if (v91 < v87)
          goto LABEL_132;
        if (v89 > *((_QWORD *)v85 + 2))
          goto LABEL_133;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v88[16 * v83 + 8] = v91;
        v93 = *((_QWORD *)v85 + 2);
        if (v89 >= v93)
          goto LABEL_134;
        v11 = v85;
        v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        v42 = v88;
        *((_QWORD *)v85 + 2) = v93 - 1;
        v10 = v92;
        v9 = v107;
        if (v93 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v106;
    if (v9 >= v106)
    {
      v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105))
    goto LABEL_153;
  if (v13 + v105 >= v3)
    v32 = v3;
  else
    v32 = v13 + v105;
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      v33 = (_QWORD *)(v10 + 16 * v9);
      do
      {
        v34 = (uint64_t *)(v10 + 16 * v9);
        v35 = *v34;
        v36 = v34[1];
        v37 = v13;
        v38 = v33;
        do
        {
          v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_231264B58() & 1) == 0)
            break;
          if (!v10)
            goto LABEL_156;
          v35 = *v38;
          v36 = v38[1];
          *(_OWORD *)v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  result = sub_231264978();
  __break(1u);
  return result;
}

uint64_t sub_2311D8178(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  BOOL v13;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    result = *v9;
    v10 = v9[1];
    v11 = v6;
    v12 = (uint64_t *)v8;
    while (1)
    {
      v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (result = sub_231264B58(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      result = *v12;
      v10 = v12[1];
      *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2311D8244(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t result;
  char *v25;
  char *v26;
  char *v27;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v27 = __src;
  v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v17 = &v4[16 * v13];
      v25 = v17;
      v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v18 = (char *)(a3 - 16);
        v19 = v6;
        while (1)
        {
          v20 = v18 + 16;
          v21 = *((_QWORD *)v19 - 2);
          v22 = *((_QWORD *)v19 - 1);
          v19 -= 16;
          v23 = *((_QWORD *)v17 - 2) == v21 && *((_QWORD *)v17 - 1) == v22;
          if (v23 || (sub_231264B58() & 1) == 0)
          {
            v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17)
              *(_OWORD *)v18 = *((_OWORD *)v17 - 1);
            v19 = v6;
            v17 -= 16;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v20 != v6 || v18 >= v6)
              *(_OWORD *)v18 = *(_OWORD *)v19;
            v27 = v19;
            if (v19 <= v7)
              goto LABEL_50;
          }
          v18 -= 16;
          v6 = v19;
          if (v17 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        v15 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
        if (v15 || (sub_231264B58() & 1) == 0)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v26 = v4;
          v16 = v6;
        }
        else
        {
          v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      v27 = v7;
    }
LABEL_50:
    sub_2311990E4((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  result = sub_2312649FC();
  __break(1u);
  return result;
}

uint64_t sub_2311D84DC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2311D8518(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SharedNewRecordsAlertData(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2311D8554(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void (*v37)(unint64_t, _QWORD, uint64_t);
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t);
  void *v42;
  void *v43;
  void *v44;
  char *v45;
  uint64_t v46;
  void *v47;
  void *v48;
  id v49;
  uint64_t v50;
  void (*v51)(uint64_t);
  void *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t result;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD v111[6];
  _QWORD v112[4];

  v109 = *v1;
  sub_2311D9ED0(0, &qword_254152C28, (void (*)(uint64_t))sub_2311D9C74, (void (*)(void))sub_2311D9CF0);
  v80 = v3;
  v79 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v78 = (char *)&v77 - v4;
  v5 = type metadata accessor for HealthRecordsGeneratorContext();
  v106 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v107 = v6;
  v108 = (uint64_t)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, &qword_2541556F0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v87 = (char *)&v77 - v8;
  v86 = sub_2312644C8();
  v85 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86);
  v84 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2312624F4();
  v104 = *(_QWORD *)(v10 - 8);
  v105 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v103 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311D9D0C();
  v83 = v12;
  v82 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v81 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311D9DC4();
  v92 = v14;
  v90 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v88 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311D9ED0(0, &qword_254153FF8, v16, (void (*)(void))sub_2311D9F4C);
  v93 = v17;
  v91 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v89 = (char *)&v77 - v18;
  v19 = sub_2312644D4();
  v101 = *(_QWORD *)(v19 - 8);
  v102 = v19;
  MEMORY[0x24BDAC7A8](v19);
  v100 = (char *)&v77 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_231264498();
  MEMORY[0x24BDAC7A8](v99);
  v98 = (char *)&v77 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_231263F58();
  MEMORY[0x24BDAC7A8](v22);
  v97 = (char *)&v77 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_2312621DC();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v77 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_2312621F4();
  v28 = *(_QWORD *)(v96 - 8);
  MEMORY[0x24BDAC7A8](v96);
  v30 = (char *)&v77 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = a1;
  sub_2311733CC(a1, (uint64_t)v1 + OBJC_IVAR____TtC13HealthRecords29SharedConceptFeedItemPipeline_context);
  v94 = sub_231262230();
  sub_2311735E0(0, &qword_254155718, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v31 = sub_231261FA8();
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(_QWORD *)(v32 + 72);
  v34 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_231265570;
  v36 = v35 + v34;
  v37 = *(void (**)(unint64_t, _QWORD, uint64_t))(v32 + 104);
  v37(v36, *MEMORY[0x24BE47460], v31);
  v37(v36 + v33, *MEMORY[0x24BE47410], v31);
  (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v27, *MEMORY[0x24BE47918], v24);
  v38 = MEMORY[0x24BEE4AF8];
  sub_2312621E8();
  v39 = v30;
  v40 = v95;
  (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v110 + OBJC_IVAR____TtC13HealthRecords29SharedConceptFeedItemPipeline_domain, v39, v96);
  sub_231178AD0(0, (unint64_t *)&qword_2541558F0);
  sub_231263F4C();
  v112[0] = v38;
  v41 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  sub_231172048(&qword_2541556E8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
  sub_2311735E0(0, &qword_2541556B0, v41, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_2311D9F68();
  sub_2312647BC();
  (*(void (**)(char *, _QWORD, uint64_t))(v101 + 104))(v100, *MEMORY[0x24BEE5750], v102);
  v42 = (void *)sub_2312644F8();
  v43 = (void *)sub_231262230();
  v44 = (void *)sub_231262014();
  LOBYTE(v27) = sub_231262008();

  sub_231262200();
  sub_231173410(v112, v112[3]);
  v45 = v103;
  sub_2312624E8();
  v46 = sub_231262440();
  (*(void (**)(char *, uint64_t))(v104 + 8))(v45, v105);
  if ((v27 & 1) != 0)
  {
    v111[5] = v46;
    sub_2312628A8();
    v47 = (void *)sub_231262884();
    sub_23126220C();
    sub_231173410(v111, v111[3]);
    v48 = (void *)sub_231262194();
    v49 = objc_msgSend(v48, sel_profileIdentifier);

    sub_231262848();
    sub_231173434((uint64_t)v111);
    v50 = sub_231263A78();
    swift_release();
    v111[0] = v50;
    sub_2311D9C74();
    v51 = (void (*)(uint64_t))MEMORY[0x24BE48B58];
    sub_2311DA06C(0, (unint64_t *)&qword_254154520, (void (*)(uint64_t))MEMORY[0x24BE48B58]);
    sub_2311D9CF0();
    sub_2311DA0C8(&qword_254154518, (unint64_t *)&qword_254154520, v51);
    v52 = v42;
    v53 = v81;
    sub_231263E74();
    swift_release();
    swift_release();
    sub_231173434((uint64_t)v112);
    v54 = v84;
    sub_2312644BC();
    v112[0] = v52;
    v55 = sub_2312644B0();
    v56 = (uint64_t)v87;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v87, 1, 1, v55);
    sub_231172048(&qword_254153F60, (uint64_t (*)(uint64_t))sub_2311D9D0C, MEMORY[0x24BDB9450]);
    sub_2311D9E78();
    v57 = v88;
    v58 = v83;
    sub_231263F04();
    sub_231173454(v56);
    (*(void (**)(char *, uint64_t))(v85 + 8))(v54, v86);
    (*(void (**)(char *, uint64_t))(v82 + 8))(v53, v58);
    v59 = v108;
    sub_2311733CC(v40, v108);
    v60 = (*(unsigned __int8 *)(v106 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80);
    v61 = (v107 + v60 + 7) & 0xFFFFFFFFFFFFFFF8;
    v62 = swift_allocObject();
    sub_23117353C(v59, v62 + v60);
    *(_QWORD *)(v62 + v61) = v109;
    v63 = swift_allocObject();
    *(_QWORD *)(v63 + 16) = sub_2311DA1A0;
    *(_QWORD *)(v63 + 24) = v62;
    sub_23117313C();
    sub_2311D9F4C();
    v64 = v89;
    v65 = v92;
    sub_231263E44();
    swift_release();
    (*(void (**)(char *, uint64_t))(v90 + 8))(v57, v65);
    sub_2311DA02C(&qword_254153FF0, &qword_254153FF8, (void (*)(uint64_t))sub_2311D9DC4, (void (*)(void))sub_2311D9F4C);
    v66 = v93;
    v67 = sub_231263E20();
    (*(void (**)(char *, uint64_t))(v91 + 8))(v64, v66);
    v112[0] = v67;
    sub_2311DA06C(0, &qword_254152EC8, (void (*)(uint64_t))sub_23117313C);
    sub_2311DA0C8(&qword_254152EC0, &qword_254152EC8, (void (*)(uint64_t))sub_23117313C);
    v68 = sub_231263E38();

  }
  else
  {
    v111[0] = v46;
    v69 = v108;
    sub_2311733CC(v40, v108);
    v70 = (*(unsigned __int8 *)(v106 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80);
    v71 = (v107 + v70 + 7) & 0xFFFFFFFFFFFFFFF8;
    v72 = swift_allocObject();
    sub_23117353C(v69, v72 + v70);
    *(_QWORD *)(v72 + v71) = v109;
    sub_2311D9C74();
    sub_23117313C();
    sub_2311D9CF0();
    v73 = v78;
    sub_231263E44();
    swift_release();
    swift_release();
    sub_231173434((uint64_t)v112);
    sub_2311DA02C(&qword_255EB9510, &qword_254152C28, (void (*)(uint64_t))sub_2311D9C74, (void (*)(void))sub_2311D9CF0);
    v74 = v80;
    v75 = sub_231263E20();
    (*(void (**)(char *, uint64_t))(v79 + 8))(v73, v74);
    v112[0] = v75;
    sub_2311DA06C(0, &qword_254152EC8, (void (*)(uint64_t))sub_23117313C);
    sub_2311DA0C8(&qword_254152EC0, &qword_254152EC8, (void (*)(uint64_t))sub_23117313C);
    v68 = sub_231263E38();

  }
  sub_231173638(v40);
  swift_release();
  result = v110;
  *(_QWORD *)(v110 + 16) = v68;
  return result;
}

uint64_t sub_2311D9168@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t **a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t result;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t **v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[4];

  v8 = type metadata accessor for HealthRecordsGeneratorContext();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v43 - v12;
  v14 = sub_231263B5C();
  v50 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231263B08();
  sub_2311733CC(a2, (uint64_t)v13);
  swift_bridgeObjectRetain_n();
  v17 = sub_231263B50();
  v18 = sub_2312643CC();
  v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    v20 = swift_slowAlloc();
    v48 = v11;
    v21 = v20;
    v46 = swift_slowAlloc();
    v51 = v46;
    v52[0] = a3;
    *(_DWORD *)v21 = 136446978;
    v45 = v19;
    swift_getMetatypeMetadata();
    v47 = a2;
    v22 = sub_2312640B4();
    v52[0] = sub_2311CBDE4(v22, v23, &v51);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2082;
    v52[0] = type metadata accessor for SharedConceptFeedItemGenerator(0);
    sub_231188518(0);
    v24 = sub_2312640B4();
    v52[0] = sub_2311CBDE4(v24, v25, &v51);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 22) = 2082;
    v52[0] = a1;
    sub_2311735E0(0, &qword_2541530F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE48110], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    swift_bridgeObjectRetain_n();
    sub_231264B88();
    v26 = (id)HKSensitiveLogItem();
    v49 = a4;
    swift_unknownObjectRelease();
    v44 = v14;
    sub_2312647B0();
    swift_unknownObjectRelease();
    v27 = sub_2312640B4();
    v29 = v28;
    swift_bridgeObjectRelease();
    v52[0] = sub_2311CBDE4(v27, v29, &v51);
    sub_231264750();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 32) = 2082;
    v30 = (void *)sub_231262230();
    v31 = (void *)sub_231261FF0();

    v52[0] = v31;
    sub_2311DA304();
    v32 = v31;
    sub_231264B88();
    v33 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_2312647B0();
    swift_unknownObjectRelease();
    v34 = sub_2312640B4();
    v36 = v35;

    a2 = v47;
    v52[0] = sub_2311CBDE4(v34, v36, &v51);
    a4 = v49;
    sub_231264750();
    swift_bridgeObjectRelease();
    sub_231173638((uint64_t)v13);
    _os_log_impl(&dword_23116F000, v17, (os_log_type_t)v45, "[%{public}s]: Emitting %{public}s, with sharable model changes: %{public}s, for profile: %{public}s", (uint8_t *)v21, 0x2Au);
    v37 = v46;
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v37, -1, -1);
    v38 = v21;
    v11 = v48;
    MEMORY[0x2348D85EC](v38, -1, -1);

    (*(void (**)(char *, uint64_t))(v50 + 8))(v16, v44);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_231173638((uint64_t)v13);

    (*(void (**)(char *, uint64_t))(v50 + 8))(v16, v14);
  }
  sub_2311733CC(a2, (uint64_t)v11);
  swift_bridgeObjectRetain();
  sub_23126220C();
  sub_231173410(v52, v52[3]);
  v39 = (void *)sub_231262194();
  v40 = type metadata accessor for SharedConceptFeedItemGenerator(0);
  swift_allocObject();
  v41 = sub_231187A70((uint64_t)v11, a1, v39);
  swift_bridgeObjectRelease();

  sub_231173434((uint64_t)v52);
  a4[3] = (uint64_t *)v40;
  result = sub_231172048(&qword_254152878, type metadata accessor for SharedConceptFeedItemGenerator, (uint64_t)&unk_23126612C);
  a4[4] = (uint64_t *)result;
  *a4 = v41;
  return result;
}

uint64_t sub_2311D9678@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t **a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t result;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t **v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v8 = type metadata accessor for HealthRecordsGeneratorContext();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v51 = (uint64_t)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v45 - v11;
  v13 = sub_231263B5C();
  v50 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a1;
  sub_231263B08();
  sub_2311733CC(a2, (uint64_t)v12);
  swift_bridgeObjectRetain_n();
  v17 = sub_231263B50();
  v18 = sub_2312643CC();
  v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    v20 = swift_slowAlloc();
    v49 = a4;
    v21 = v20;
    v47 = swift_slowAlloc();
    v53 = v47;
    *(_DWORD *)v21 = 136446978;
    v46 = v19;
    v52 = a3;
    swift_getMetatypeMetadata();
    v48 = a2;
    v22 = sub_2312640B4();
    v52 = sub_2311CBDE4(v22, v23, &v53);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2082;
    v52 = type metadata accessor for SharedConceptFeedItemGenerator(0);
    sub_231188518(0);
    v45 = v13;
    v24 = sub_2312640B4();
    v52 = sub_2311CBDE4(v24, v25, &v53);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 22) = 2082;
    v52 = v16;
    sub_2311735E0(0, &qword_2541530F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE48110], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    swift_bridgeObjectRetain_n();
    sub_231264B88();
    v26 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_2312647B0();
    swift_unknownObjectRelease();
    v27 = sub_2312640B4();
    v29 = v28;
    swift_bridgeObjectRelease();
    v52 = sub_2311CBDE4(v27, v29, &v53);
    sub_231264750();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 32) = 2082;
    v30 = (void *)sub_231262230();
    v31 = (void *)sub_231261FF0();

    v52 = (uint64_t)v31;
    sub_2311DA304();
    v32 = v31;
    sub_231264B88();
    v33 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_2312647B0();
    swift_unknownObjectRelease();
    v34 = sub_2312640B4();
    v36 = v35;

    v52 = sub_2311CBDE4(v34, v36, &v53);
    sub_231264750();
    a2 = v48;
    swift_bridgeObjectRelease();
    sub_231173638((uint64_t)v12);
    _os_log_impl(&dword_23116F000, v17, (os_log_type_t)v46, "[%{public}s]: Emitting %{public}s, with sharable model changes: %{public}s, for profile: %{public}s", (uint8_t *)v21, 0x2Au);
    v37 = v47;
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v37, -1, -1);
    v38 = v21;
    a4 = v49;
    MEMORY[0x2348D85EC](v38, -1, -1);

    (*(void (**)(char *, uint64_t))(v50 + 8))(v15, v45);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_231173638((uint64_t)v12);

    (*(void (**)(char *, uint64_t))(v50 + 8))(v15, v13);
  }
  v39 = v51;
  sub_2311733CC(a2, v51);
  v40 = objc_allocWithZone(MEMORY[0x24BDD3C40]);
  swift_bridgeObjectRetain();
  v41 = objc_msgSend(v40, sel_init);
  v42 = type metadata accessor for SharedConceptFeedItemGenerator(0);
  swift_allocObject();
  v43 = sub_231187A70(v39, v16, v41);
  swift_bridgeObjectRelease();

  a4[3] = (uint64_t *)v42;
  result = sub_231172048(&qword_254152878, type metadata accessor for SharedConceptFeedItemGenerator, (uint64_t)&unk_23126612C);
  a4[4] = (uint64_t *)result;
  *a4 = v43;
  return result;
}

uint64_t sub_2311D9B80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC13HealthRecords29SharedConceptFeedItemPipeline_domain;
  v2 = sub_2312621F4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_231173638(v0 + OBJC_IVAR____TtC13HealthRecords29SharedConceptFeedItemPipeline_context);
  return swift_deallocClassInstance();
}

uint64_t sub_2311D9BE8()
{
  return type metadata accessor for SharedConceptFeedItemPipeline();
}

uint64_t type metadata accessor for SharedConceptFeedItemPipeline()
{
  uint64_t result;

  result = qword_2541526D0;
  if (!qword_2541526D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2311D9C2C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC13HealthRecords29SharedConceptFeedItemPipeline_domain;
  v4 = sub_2312621F4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void sub_2311D9C74()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254152F58)
  {
    sub_2311735E0(255, &qword_2541530F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE48110], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v0 = sub_231263D0C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254152F58);
  }
}

uint64_t sub_2311D9CF0()
{
  return sub_231172048(&qword_254152F50, (uint64_t (*)(uint64_t))sub_2311D9C74, MEMORY[0x24BDB9AF8]);
}

void sub_2311D9D0C()
{
  void (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_254153F68)
  {
    sub_2311D9C74();
    v0 = (void (*)(uint64_t))MEMORY[0x24BE48B58];
    sub_2311DA06C(255, (unint64_t *)&qword_254154520, (void (*)(uint64_t))MEMORY[0x24BE48B58]);
    sub_2311D9CF0();
    sub_2311DA0C8(&qword_254154518, (unint64_t *)&qword_254154520, v0);
    v1 = sub_231263B98();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_254153F68);
  }
}

void sub_2311D9DC4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541544C0)
  {
    sub_2311D9D0C();
    sub_231178AD0(255, (unint64_t *)&qword_2541558F0);
    sub_231172048(&qword_254153F60, (uint64_t (*)(uint64_t))sub_2311D9D0C, MEMORY[0x24BDB9450]);
    sub_2311D9E78();
    v0 = sub_231263CAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541544C0);
  }
}

unint64_t sub_2311D9E78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541556F8;
  if (!qword_2541556F8)
  {
    v1 = sub_231178AD0(255, (unint64_t *)&qword_2541558F0);
    result = MEMORY[0x2348D8544](MEMORY[0x24BEE5670], v1);
    atomic_store(result, (unint64_t *)&qword_2541556F8);
  }
  return result;
}

void sub_2311D9ED0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    sub_23117313C();
    a4();
    v6 = sub_231263BBC();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_2311D9F4C()
{
  return sub_231172048(&qword_2541544B8, (uint64_t (*)(uint64_t))sub_2311D9DC4, MEMORY[0x24BDB9920]);
}

unint64_t sub_2311D9F68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541556B8;
  if (!qword_2541556B8)
  {
    sub_2311735E0(255, &qword_2541556B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2348D8544](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2541556B8);
  }
  return result;
}

uint64_t sub_2311D9FCC@<X0>(uint64_t *a1@<X0>, uint64_t **a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_2311D9678(a1, v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)), a2);
}

uint64_t sub_2311DA02C(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_2311D9ED0(255, a2, a3, a4);
    result = MEMORY[0x2348D8544](MEMORY[0x24BDB94C8], v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_2311DA06C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_231263D0C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_2311DA0C8(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_2311DA06C(255, a2, a3);
    result = MEMORY[0x2348D8544](MEMORY[0x24BDB9AF8], v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2311DA10C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for HealthRecordsGeneratorContext();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_23126226C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocObject();
}

uint64_t sub_2311DA1A0@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_2311D9168(a1, v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)), a2);
}

uint64_t sub_2311DA208()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2311DA22C(char *a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, char *);
  uint64_t v4;
  uint64_t v5;

  v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 16);
  v4 = *(_QWORD *)a1;
  sub_2311DA280();
  return v3(v4, &a1[*(int *)(v5 + 48)]);
}

void sub_2311DA280()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2541545E0)
  {
    sub_2311735E0(255, &qword_2541530F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE48110], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_231263AB4();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2541545E0);
  }
}

void sub_2311DA304()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254153178)
  {
    sub_231178AD0(255, (unint64_t *)&qword_254153170);
    v0 = sub_231264738();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254153178);
  }
}

uint64_t ClinicalSharingFeedItemData.accountId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_231261E94();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t ClinicalSharingFeedItemData.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ClinicalSharingFeedItemData() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for ClinicalSharingFeedItemData()
{
  uint64_t result;

  result = qword_255EB9590;
  if (!qword_255EB9590)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ClinicalSharingFeedItemData.multiDeviceStatus.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for ClinicalSharingFeedItemData() + 24));
}

uint64_t ClinicalSharingFeedItemData.init(accountId:title:state:multiDeviceStatus:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t result;
  _QWORD *v12;

  v10 = sub_231261E94();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a5, a1, v10);
  result = type metadata accessor for ClinicalSharingFeedItemData();
  v12 = (_QWORD *)(a5 + *(int *)(result + 20));
  *v12 = a2;
  v12[1] = a3;
  *(_QWORD *)(a5 + *(int *)(result + 24)) = a4;
  return result;
}

uint64_t ClinicalSharingFeedItemData.hash(into:)()
{
  sub_231261E94();
  sub_231172048(&qword_254151860, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23126400C();
  type metadata accessor for ClinicalSharingFeedItemData();
  swift_bridgeObjectRetain();
  sub_231264114();
  swift_bridgeObjectRelease();
  return sub_231264C0C();
}

uint64_t sub_2311DA560()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x656C746974;
  if (*v0 != 1)
    v1 = 0xD000000000000011;
  if (*v0)
    return v1;
  else
    return 0x49746E756F636361;
}

uint64_t sub_2311DA5C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2311DB8FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2311DA5E4()
{
  sub_2311DB1C0();
  return sub_231264C6C();
}

uint64_t sub_2311DA60C()
{
  sub_2311DB1C0();
  return sub_231264C78();
}

uint64_t ClinicalSharingFeedItemData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_2311DB204(0, &qword_255EB9518, MEMORY[0x24BEE3520]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = &v9[-v6];
  sub_231173410(a1, a1[3]);
  sub_2311DB1C0();
  sub_231264C60();
  v9[15] = 0;
  sub_231261E94();
  sub_231172048(&qword_254153508, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_231264AF8();
  if (!v1)
  {
    type metadata accessor for ClinicalSharingFeedItemData();
    v9[14] = 1;
    sub_231264AC8();
    v9[13] = 2;
    sub_231264AEC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ClinicalSharingFeedItemData.hashValue.getter()
{
  sub_231264C00();
  sub_231261E94();
  sub_231172048(&qword_254151860, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23126400C();
  type metadata accessor for ClinicalSharingFeedItemData();
  swift_bridgeObjectRetain();
  sub_231264114();
  swift_bridgeObjectRelease();
  sub_231264C0C();
  return sub_231264C3C();
}

uint64_t ClinicalSharingFeedItemData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;

  v21 = a2;
  v22 = sub_231261E94();
  v3 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v23 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311DB204(0, &qword_255EB9528, MEMORY[0x24BEE33E0]);
  v25 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - v7;
  v9 = type metadata accessor for ClinicalSharingFeedItemData();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231173410(a1, a1[3]);
  sub_2311DB1C0();
  v24 = v8;
  v12 = v26;
  sub_231264C54();
  if (v12)
    return sub_231173434((uint64_t)a1);
  v26 = v6;
  v29 = 0;
  sub_231172048(&qword_255EB86A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v13 = v22;
  v14 = v23;
  v15 = v24;
  sub_231264A80();
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v11, v14, v13);
  v28 = 1;
  v16 = sub_231264A50();
  v17 = (uint64_t *)&v11[*(int *)(v9 + 20)];
  *v17 = v16;
  v17[1] = v18;
  v27 = 2;
  v19 = sub_231264A74();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v15, v25);
  *(_QWORD *)&v11[*(int *)(v9 + 24)] = v19;
  sub_2311DB260((uint64_t)v11, v21);
  sub_231173434((uint64_t)a1);
  return sub_2311DB2A4((uint64_t)v11);
}

uint64_t sub_2311DAB34@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ClinicalSharingFeedItemData.init(from:)(a1, a2);
}

uint64_t sub_2311DAB48(_QWORD *a1)
{
  return ClinicalSharingFeedItemData.encode(to:)(a1);
}

uint64_t sub_2311DAB5C()
{
  sub_231264C00();
  sub_231261E94();
  sub_231172048(&qword_254151860, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23126400C();
  swift_bridgeObjectRetain();
  sub_231264114();
  swift_bridgeObjectRelease();
  sub_231264C0C();
  return sub_231264C3C();
}

uint64_t sub_2311DAC10()
{
  sub_231261E94();
  sub_231172048(&qword_254151860, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23126400C();
  swift_bridgeObjectRetain();
  sub_231264114();
  swift_bridgeObjectRelease();
  return sub_231264C0C();
}

uint64_t sub_2311DACB4()
{
  sub_231264C00();
  sub_231261E94();
  sub_231172048(&qword_254151860, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23126400C();
  swift_bridgeObjectRetain();
  sub_231264114();
  swift_bridgeObjectRelease();
  sub_231264C0C();
  return sub_231264C3C();
}

uint64_t ClinicalSharingFeedItemData.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v4 = sub_231261E94();
  v38 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_231263B5C();
  v39 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231263B20();
  v10 = a1;
  v11 = sub_231263B50();
  v12 = sub_2312643F0();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v36 = v7;
    v14 = (uint8_t *)v13;
    v35 = swift_slowAlloc();
    v41 = v35;
    v37 = a2;
    *(_DWORD *)v14 = 136315138;
    v15 = objc_msgSend(v10, sel_identifier, v14 + 4);
    sub_231261E7C();

    sub_231172048(&qword_255EB78D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v16 = sub_231264B28();
    v18 = v17;
    (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v4);
    v40 = sub_2311CBDE4(v16, v18, &v41);
    a2 = v37;
    sub_231264750();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23116F000, v11, v12, "Creating clinical acount sharing information for account: %s", v14, 0xCu);
    v19 = v35;
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v19, -1, -1);
    MEMORY[0x2348D85EC](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v39 + 8))(v9, v36);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v39 + 8))(v9, v7);
  }
  v20 = objc_msgSend(v10, sel_provenance);
  v21 = objc_msgSend(v20, sel_type);

  if (v21)
  {

    v22 = type metadata accessor for ClinicalSharingFeedItemData();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a2, 1, 1, v22);
  }
  else
  {
    v24 = objc_msgSend(v10, sel_identifier);
    sub_231261E7C();

    v25 = objc_msgSend(v10, sel_provenance);
    v26 = objc_msgSend(v25, sel_title);

    v27 = sub_23126409C();
    v29 = v28;

    objc_msgSend(v10, sel_state);
    v30 = objc_msgSend(v10, sel_clinicalSharingStatus);
    v31 = objc_msgSend(v30, sel_multiDeviceStatus);

    v32 = type metadata accessor for ClinicalSharingFeedItemData();
    v33 = (uint64_t *)(a2 + *(int *)(v32 + 20));
    *v33 = v27;
    v33[1] = v29;
    *(_QWORD *)(a2 + *(int *)(v32 + 24)) = v31;
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(a2, 0, 1, v32);
  }
}

BOOL _s13HealthRecords27ClinicalSharingFeedItemDataV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char v10;
  _BOOL8 result;

  if ((sub_231261E70() & 1) == 0)
    return 0;
  v4 = type metadata accessor for ClinicalSharingFeedItemData();
  v5 = *(int *)(v4 + 20);
  v6 = *(_QWORD *)(a1 + v5);
  v7 = *(_QWORD *)(a1 + v5 + 8);
  v8 = (_QWORD *)(a2 + v5);
  if (v6 == *v8 && v7 == v8[1])
    return *(_QWORD *)(a1 + *(int *)(v4 + 24)) == *(_QWORD *)(a2 + *(int *)(v4 + 24));
  v10 = sub_231264B58();
  result = 0;
  if ((v10 & 1) != 0)
    return *(_QWORD *)(a1 + *(int *)(v4 + 24)) == *(_QWORD *)(a2 + *(int *)(v4 + 24));
  return result;
}

unint64_t sub_2311DB1C0()
{
  unint64_t result;

  result = qword_255EB9520;
  if (!qword_255EB9520)
  {
    result = MEMORY[0x2348D8544](&unk_231268A6C, &type metadata for ClinicalSharingFeedItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB9520);
  }
  return result;
}

void sub_2311DB204(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_2311DB1C0();
    v7 = a3(a1, &type metadata for ClinicalSharingFeedItemData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_2311DB260(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClinicalSharingFeedItemData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2311DB2A4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ClinicalSharingFeedItemData();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2311DB2E0()
{
  return sub_231172048(&qword_255EB9530, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingFeedItemData, (uint64_t)&protocol conformance descriptor for ClinicalSharingFeedItemData);
}

uint64_t *initializeBufferWithCopyOfBuffer for ClinicalSharingFeedItemData(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_231261E94();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ClinicalSharingFeedItemData(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_231261E94();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ClinicalSharingFeedItemData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v6 = sub_231261E94();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ClinicalSharingFeedItemData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_231261E94();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for ClinicalSharingFeedItemData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_231261E94();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for ClinicalSharingFeedItemData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_231261E94();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for ClinicalSharingFeedItemData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2311DB5D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_231261E94();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ClinicalSharingFeedItemData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2311DB65C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_231261E94();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_2311DB6D8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_231261E94();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ClinicalSharingFeedItemData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2311DB7A4 + 4 * byte_2312688A5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2311DB7D8 + 4 * asc_2312688A0[v4]))();
}

uint64_t sub_2311DB7D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2311DB7E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2311DB7E8);
  return result;
}

uint64_t sub_2311DB7F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2311DB7FCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2311DB800(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2311DB808(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingFeedItemData.CodingKeys()
{
  return &type metadata for ClinicalSharingFeedItemData.CodingKeys;
}

unint64_t sub_2311DB828()
{
  unint64_t result;

  result = qword_255EB95D0;
  if (!qword_255EB95D0)
  {
    result = MEMORY[0x2348D8544](&unk_231268A44, &type metadata for ClinicalSharingFeedItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB95D0);
  }
  return result;
}

unint64_t sub_2311DB870()
{
  unint64_t result;

  result = qword_255EB95D8;
  if (!qword_255EB95D8)
  {
    result = MEMORY[0x2348D8544](&unk_2312689B4, &type metadata for ClinicalSharingFeedItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB95D8);
  }
  return result;
}

unint64_t sub_2311DB8B8()
{
  unint64_t result;

  result = qword_255EB95E0;
  if (!qword_255EB95E0)
  {
    result = MEMORY[0x2348D8544](&unk_2312689DC, &type metadata for ClinicalSharingFeedItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB95E0);
  }
  return result;
}

uint64_t sub_2311DB8FC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x49746E756F636361 && a2 == 0xE900000000000064;
  if (v2 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023126D0E0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_231264B58();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_2311DBA50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  _QWORD v21[4];
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v21[3] = a2;
  v5 = sub_23126292C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v21[1] = a1;
    v21[2] = a3;
    v10 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v11 = *(_QWORD *)(v6 + 72);
    v22 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v23 = v11;
    swift_bridgeObjectRetain();
    v12 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v13 = v6;
    do
    {
      v22(v8, v10, v5);
      v24 = sub_231262920();
      v14 = sub_231264B28();
      v16 = v15;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v12 = sub_2311DC450(0, v12[2] + 1, 1, v12);
      v18 = v12[2];
      v17 = v12[3];
      if (v18 >= v17 >> 1)
        v12 = sub_2311DC450((_QWORD *)(v17 > 1), v18 + 1, 1, v12);
      v12[2] = v18 + 1;
      v19 = &v12[2 * v18];
      v19[4] = v14;
      v19[5] = v16;
      v10 += v23;
      --v9;
      v6 = v13;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v24 = (uint64_t)v12;
  sub_231171FD8(0, (unint64_t *)&qword_254155690, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_231171E78();
  sub_231264024();
  swift_bridgeObjectRelease();
  v24 = 0;
  v25 = 0xE000000000000000;
  sub_23126493C();
  sub_231264018();
  sub_231264144();
  sub_231264018();
  sub_231264144();
  swift_bridgeObjectRelease();
  sub_231264018();
  swift_bridgeObjectRetain();
  sub_231264144();
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_2311DBD18()
{
  sub_231264C00();
  sub_231264114();
  return sub_231264C3C();
}

uint64_t sub_2311DBD6C()
{
  return sub_231264114();
}

uint64_t sub_2311DBD88()
{
  sub_231264C00();
  sub_231264114();
  return sub_231264C3C();
}

uint64_t sub_2311DBDD8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_231264A14();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_2311DBE28(_QWORD *a1@<X8>)
{
  *a1 = 0x65636E6F43696863;
  a1[1] = 0xEA00000000007470;
}

uint64_t sub_2311DBE48(uint64_t a1, char a2, uint64_t (*a3)(_QWORD *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  unint64_t v48;
  _QWORD v50[4];

  v50[3] = a4;
  if (a1 < 0)
    goto LABEL_42;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = MEMORY[0x24BEE4AF8];
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = 15;
  v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (v12 = HIBYTE(a6) & 0xF) : (v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0)
      v11 = a5 & 0xFFFFFFFFFFFFLL;
    v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0)
      v30 = 11;
    sub_2311DC2E4(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    v13 = *(_QWORD **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  v42 = a1;
  v43 = v10;
  v48 = 4 * v12;
  v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v14 = 15;
  v15 = 15;
  v16 = 15;
  while (1)
  {
    v50[0] = sub_2312641A4();
    v50[1] = v17;
    v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
      break;
    v14 = sub_231264120();
LABEL_9:
    if (v48 == v14 >> 14)
      goto LABEL_29;
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    v14 = sub_231264120();
    *(_QWORD *)(v47 + 16) = v14;
    v15 = v14;
    v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14)
    goto LABEL_41;
  v20 = sub_2312641BC();
  v44 = v21;
  v45 = v20;
  v23 = v22;
  v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v13 = sub_2311DC78C(0, v13[2] + 1, 1, v13);
  v27 = v13[2];
  v26 = v13[3];
  if (v27 >= v26 >> 1)
    v13 = sub_2311DC78C((_QWORD *)(v26 > 1), v27 + 1, 1, v13);
  v13[2] = v27 + 1;
  v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(_QWORD *)(v43 + 16) = v13;
  v29 = sub_231264120();
  v14 = v29;
  *(_QWORD *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    v15 = v29;
    v16 = v29;
    goto LABEL_9;
  }
  v16 = v29;
  v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    v31 = sub_2312641BC();
    v33 = v32;
    v35 = v34;
    v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_2311DC78C(0, v13[2] + 1, 1, v13);
    v39 = v13[2];
    v38 = v13[3];
    if (v39 >= v38 >> 1)
      v13 = sub_2311DC78C((_QWORD *)(v38 > 1), v39 + 1, 1, v13);
    v13[2] = v39 + 1;
    v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(_QWORD *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_231264978();
  __break(1u);
LABEL_42:
  result = sub_231264978();
  __break(1u);
  return result;
}

uint64_t sub_2311DC2E4(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t result;

  v4 = *(_QWORD *)(a2 + 16) >> 14;
  v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1)
    return v5 ^ 1u;
  if (a1 >> 14 >= v4)
  {
    v7 = sub_2312641BC();
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v14 = *(_QWORD **)(a4 + 16);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v14 = sub_2311DC78C(0, v14[2] + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v17 = v14[2];
    v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      v14 = sub_2311DC78C((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v14[2] = v17 + 1;
    v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  result = sub_231264978();
  __break(1u);
  return result;
}

uint64_t sub_2311DC43C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2311DC570(a1, a2, a3, a4, &qword_255EB84C8, type metadata accessor for SharedConceptFeedItemData);
}

_QWORD *sub_2311DC450(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_231171FD8(0, (unint64_t *)&qword_2541557B0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2311DD9DC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2311DC570(char a1, int64_t a2, char a3, unint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  sub_2311735E0(0, a5, a6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = j__malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_231264978();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_2311DE5B8(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_2311DC78C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_231171FD8(0, &qword_255EB95E8, MEMORY[0x24BEE1E08], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2311DDACC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2311DC8AC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2311DC570(a1, a2, a3, a4, &qword_255EB9620, (uint64_t (*)(uint64_t))sub_2311DEE30);
}

uint64_t sub_2311DC8C0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2311DC570(a1, a2, a3, a4, &qword_255EB9618, type metadata accessor for SharedConceptCodedValue);
}

_QWORD *sub_2311DC8D4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_231171FD8(0, &qword_255EB9610, (uint64_t)&type metadata for SharedConceptFormattedRecord, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 88);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[11 * v8 + 4])
          memmove(v12, a4 + 4, 88 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2311DE6D0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2311DCA10(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2311DC570(a1, a2, a3, a4, &qword_254155720, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0]);
}

uint64_t sub_2311DCA24(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2311DC570(a1, a2, a3, a4, &qword_254153500, (uint64_t (*)(uint64_t))MEMORY[0x24BE49778]);
}

_QWORD *sub_2311DCA38(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2311DCE18(a1, a2, a3, a4, (unint64_t *)&qword_255EB83F8, &qword_255EB8400, MEMORY[0x24BE41798]);
}

_QWORD *sub_2311DCA54(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_2311735E0(0, &qword_255EB95F0, (uint64_t (*)(uint64_t))type metadata accessor for _NSRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2311DE7C0(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2311DCB74(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2311DC570(a1, a2, a3, a4, &qword_255EB9600, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
}

_QWORD *sub_2311DCB88(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_231171FD8(0, &qword_254153220, MEMORY[0x24BE47F58], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2311DE910(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2311DCCB8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2311DC570(a1, a2, a3, a4, (unint64_t *)&unk_255EB84B0, (uint64_t (*)(uint64_t))type metadata accessor for RecordKindFeedItemData);
}

uint64_t sub_2311DCCCC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2311DC570(a1, a2, a3, a4, &qword_254155718, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8]);
}

uint64_t sub_2311DCCE0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2311DC570(a1, a2, a3, a4, &qword_255EB9608, (uint64_t (*)(uint64_t))sub_2311A17E4);
}

_QWORD *sub_2311DCCF4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_2311DE8A8();
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2311DEA04(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2311DCDFC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2311DCE18(a1, a2, a3, a4, &qword_254155728, &qword_254155500, MEMORY[0x24BE47AB0]);
}

_QWORD *sub_2311DCE18(_QWORD *result, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, unint64_t *a6, uint64_t a7)
{
  char v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  size_t v15;
  _QWORD *v16;

  v9 = (char)result;
  if ((a3 & 1) == 0)
  {
    v11 = a2;
    goto LABEL_8;
  }
  v10 = a4[3];
  v11 = v10 >> 1;
  if ((uint64_t)(v10 >> 1) >= a2)
    goto LABEL_8;
  if (v11 + 0x4000000000000000 >= 0)
  {
    v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v11 = a2;
LABEL_8:
    v12 = a4[2];
    if (v11 <= v12)
      v13 = a4[2];
    else
      v13 = v11;
    if (v13)
    {
      sub_2311DEDCC(0, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v14 = (_QWORD *)swift_allocObject();
      v15 = j__malloc_size(v14);
      v14[2] = v12;
      v14[3] = 2 * ((uint64_t)(v15 - 32) / 40);
      v16 = v14 + 4;
      if ((v9 & 1) != 0)
      {
LABEL_13:
        if (v14 != a4 || v16 >= &a4[5 * v12 + 4])
          memmove(v16, a4 + 4, 40 * v12);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v14 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v16 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2311DEC44(0, v12, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v14;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2311DCF64(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_2311DED58();
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2311DEB1C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2311DD080(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2311DC570(a1, a2, a3, a4, &qword_254155738, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28]);
}

uint64_t sub_2311DD094(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2311DC570(a1, a2, a3, a4, &qword_255EB84D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47D40]);
}

uint64_t sub_2311DD0A8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2311DC570(a1, a2, a3, a4, &qword_254153230, (uint64_t (*)(uint64_t))MEMORY[0x24BE48110]);
}

uint64_t sub_2311DD0BC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2311DC570(a1, a2, a3, a4, &qword_255EB84A8, type metadata accessor for LabNameWithDate);
}

_QWORD *sub_2311DD0D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_231171FD8(0, &qword_254154680, MEMORY[0x24BEE4260], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v4 = (_QWORD *)swift_allocObject();
  v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_2311DD148(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_23126418C();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x2348D756C](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

unsigned __int8 *sub_2311DD1C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_2312641B0();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_2311DD520();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_2312648F4();
  }
LABEL_7:
  v11 = sub_2311DD2A4(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_2311DD2A4(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_2311DD520()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_2312641BC();
  v4 = sub_2311DD59C(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_2311DD59C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_2311DD6E0(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_2311DD0D0(v9, 0);
      v12 = sub_2311DD7CC((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    v13 = MEMORY[0x2348D750C](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x2348D750CLL);
LABEL_9:
      sub_2312648F4();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x2348D750C]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_2311DD6E0(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_2311DD148(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_2311DD148(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_231264174();
  }
  __break(1u);
  return result;
}

unint64_t sub_2311DD7CC(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_2311DD148(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_231264180();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_2312648F4();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_2311DD148(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_23126415C();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_2311DD9DC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2312649FC();
  __break(1u);
  return result;
}

uint64_t sub_2311DDACC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2312649FC();
  __break(1u);
  return result;
}

uint64_t sub_2311DDBBC(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned __int8 *v58;
  char v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  unsigned __int8 *v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned __int8 *v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unsigned __int8 *v74;
  unsigned int v75;
  uint64_t v76;
  char v77;
  void (*v78)(char *, char *, uint64_t);
  char *v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char v94[16];
  uint64_t *v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v4 = sub_231263B5C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, &qword_254151850, (uint64_t (*)(uint64_t))MEMORY[0x24BE490F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v86 - v9;
  v11 = sub_23126292C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v92 = (char *)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v91 = (char *)&v86 - v15;
  v98 = 10848482;
  v99 = 0xA300000000000000;
  v95 = &v98;
  swift_bridgeObjectRetain();
  v16 = (_QWORD *)sub_2311DBE48(0x7FFFFFFFFFFFFFFFLL, 0, sub_2311DE4DC, (uint64_t)v94, a1, a2);
  swift_bridgeObjectRelease();
  if (v16[2] != 4)
    goto LABEL_3;
  v90 = v4;
  v93 = v12;
  v17 = v16[4];
  v18 = v16[5];
  v19 = v16[6];
  v20 = v16[7];
  swift_bridgeObjectRetain();
  MEMORY[0x2348D74DC](v17, v18, v19, v20);
  swift_bridgeObjectRelease();
  v21 = sub_231264A14();
  result = swift_bridgeObjectRelease();
  if (v21)
  {
LABEL_3:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v16[2] < 2uLL)
    goto LABEL_84;
  v24 = v16[8];
  v25 = v16[9];
  v26 = v16[10];
  v27 = v16[11];
  swift_bridgeObjectRetain();
  MEMORY[0x2348D74DC](v24, v25, v26, v27);
  swift_bridgeObjectRelease();
  v28 = sub_231264A14();
  result = swift_bridgeObjectRelease();
  if (v28)
  {
    sub_231263B20();
    swift_bridgeObjectRetain();
    v29 = sub_231263B50();
    v30 = sub_2312643D8();
    v31 = v30;
    if (os_log_type_enabled(v29, v30))
    {
      v32 = swift_slowAlloc();
      LODWORD(v93) = v31;
      v33 = v32;
      v92 = (char *)swift_slowAlloc();
      v98 = (uint64_t)v92;
      *(_DWORD *)v33 = 136446466;
      v96 = sub_2311CBDE4(0xD00000000000001ELL, 0x8000000231268AF0, &v98);
      sub_231264750();
      *(_WORD *)(v33 + 12) = 2082;
      v91 = (char *)(v33 + 14);
      v35 = v16[8];
      v34 = v16[9];
      v37 = v16[10];
      v36 = v16[11];
      swift_bridgeObjectRetain();
      v38 = MEMORY[0x2348D74DC](v35, v34, v37, v36);
      v40 = v39;
      swift_bridgeObjectRelease();
      v96 = sub_2311CBDE4(v38, v40, &v98);
      sub_231264750();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23116F000, v29, (os_log_type_t)v93, "[%{public}s] Unsupported version found when decoding version: '%{public}s'", (uint8_t *)v33, 0x16u);
      v41 = v92;
      swift_arrayDestroy();
      MEMORY[0x2348D85EC](v41, -1, -1);
      MEMORY[0x2348D85EC](v33, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v90);
    return 0;
  }
  if (v16[2] < 3uLL)
    goto LABEL_85;
  v42 = v16[12];
  v43 = v16[13];
  v44 = v16[14];
  v45 = v16[15];
  swift_bridgeObjectRetain();
  v46 = MEMORY[0x2348D74DC](v42, v43, v44, v45);
  v48 = v47;
  swift_bridgeObjectRelease();
  v98 = v46;
  v99 = v48;
  v96 = 8431330;
  v97 = 0xA300000000000000;
  sub_231188564();
  v49 = sub_231264774();
  swift_bridgeObjectRelease();
  v50 = *(_QWORD *)(v49 + 16);
  if (!v50)
  {
    result = swift_bridgeObjectRelease();
    v23 = MEMORY[0x24BEE4AF8];
LABEL_80:
    if (v16[2] < 4uLL)
      goto LABEL_86;
    v82 = v16[16];
    v83 = v16[17];
    v84 = v16[18];
    v85 = v16[19];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    MEMORY[0x2348D74DC](v82, v83, v84, v85);
    swift_bridgeObjectRelease();
    return v23;
  }
  v89 = v49;
  v90 = v49 + 32;
  v87 = (char *)&v98 + 2;
  v88 = (char *)&v98 + 3;
  result = swift_bridgeObjectRetain();
  v51 = 0;
  v23 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    v52 = (uint64_t *)(v90 + 16 * v51);
    v53 = *v52;
    v54 = v52[1];
    v55 = HIBYTE(v54) & 0xF;
    v56 = v53 & 0xFFFFFFFFFFFFLL;
    if ((v54 & 0x2000000000000000) != 0)
      v57 = HIBYTE(v54) & 0xF;
    else
      v57 = v53 & 0xFFFFFFFFFFFFLL;
    if (!v57)
    {
      swift_bridgeObjectRetain();
LABEL_68:
      v66 = v93;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v93 + 56))(v10, 1, 1, v11);
      goto LABEL_69;
    }
    if ((v54 & 0x1000000000000000) == 0)
      break;
    swift_bridgeObjectRetain();
    sub_2311DD1C0(v53, v54, 10);
    if ((v77 & 1) != 0)
      goto LABEL_68;
LABEL_49:
    sub_231262914();
    v66 = v93;
LABEL_69:
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v10, 1, v11) == 1)
    {
      result = sub_2311DE530((uint64_t)v10);
    }
    else
    {
      v78 = *(void (**)(char *, char *, uint64_t))(v66 + 32);
      v79 = v91;
      v78(v91, v10, v11);
      v78(v92, v79, v11);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v23 = sub_2311DC570(0, *(_QWORD *)(v23 + 16) + 1, 1, v23, &qword_254154670, (uint64_t (*)(uint64_t))MEMORY[0x24BE490F8]);
      v81 = *(_QWORD *)(v23 + 16);
      v80 = *(_QWORD *)(v23 + 24);
      if (v81 >= v80 >> 1)
        v23 = sub_2311DC570(v80 > 1, v81 + 1, 1, v23, &qword_254154670, (uint64_t (*)(uint64_t))MEMORY[0x24BE490F8]);
      *(_QWORD *)(v23 + 16) = v81 + 1;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v78)(v23+ ((*(unsigned __int8 *)(v93 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80))+ *(_QWORD *)(v93 + 72) * v81, v92, v11);
    }
    if (++v51 == v50)
    {
      result = swift_bridgeObjectRelease_n();
      goto LABEL_80;
    }
  }
  if ((v54 & 0x2000000000000000) == 0)
  {
    if ((v53 & 0x1000000000000000) != 0)
      v58 = (unsigned __int8 *)((v54 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v58 = (unsigned __int8 *)sub_2312648F4();
    sub_2311DD2A4(v58, v56, 10);
    v60 = v59 & 1;
LABEL_48:
    swift_bridgeObjectRetain();
    if ((v60 & 1) != 0)
      goto LABEL_68;
    goto LABEL_49;
  }
  v98 = v53;
  v99 = v54 & 0xFFFFFFFFFFFFFFLL;
  if (v53 == 43)
  {
    if (!v55)
      goto LABEL_83;
    if (v55 == 1 || (BYTE1(v53) - 48) > 9u)
      goto LABEL_45;
    if (v55 == 2)
      goto LABEL_47;
    if ((BYTE2(v53) - 48) <= 9u)
    {
      v61 = 10 * (BYTE1(v53) - 48) + (BYTE2(v53) - 48);
      v62 = v55 - 3;
      if (v62)
      {
        v63 = (unsigned __int8 *)v88;
        while (1)
        {
          v64 = *v63 - 48;
          if (v64 > 9)
            goto LABEL_45;
          v65 = 10 * v61;
          if ((unsigned __int128)(v61 * (__int128)10) >> 64 != (10 * v61) >> 63)
            goto LABEL_45;
          v61 = v65 + v64;
          if (__OFADD__(v65, v64))
            goto LABEL_45;
          v60 = 0;
          ++v63;
          if (!--v62)
            goto LABEL_48;
        }
      }
      goto LABEL_47;
    }
    goto LABEL_45;
  }
  if (v53 != 45)
  {
    if (v55 && (v53 - 48) <= 9u)
    {
      if (v55 == 1)
        goto LABEL_47;
      if ((BYTE1(v53) - 48) <= 9u)
      {
        v67 = 10 * (v53 - 48) + (BYTE1(v53) - 48);
        v68 = v55 - 2;
        if (v68)
        {
          v69 = (unsigned __int8 *)v87;
          while (1)
          {
            v70 = *v69 - 48;
            if (v70 > 9)
              goto LABEL_45;
            v71 = 10 * v67;
            if ((unsigned __int128)(v67 * (__int128)10) >> 64 != (10 * v67) >> 63)
              goto LABEL_45;
            v67 = v71 + v70;
            if (__OFADD__(v71, v70))
              goto LABEL_45;
            v60 = 0;
            ++v69;
            if (!--v68)
              goto LABEL_48;
          }
        }
        goto LABEL_47;
      }
    }
LABEL_45:
    v60 = 1;
    goto LABEL_48;
  }
  if (v55)
  {
    if (v55 == 1 || (BYTE1(v53) - 48) > 9u)
      goto LABEL_45;
    if (v55 == 2)
    {
      v60 = 0;
      goto LABEL_48;
    }
    if ((BYTE2(v53) - 48) > 9u)
      goto LABEL_45;
    v72 = -10 * (BYTE1(v53) - 48) - (BYTE2(v53) - 48);
    v73 = v55 - 3;
    if (v73)
    {
      v74 = (unsigned __int8 *)v88;
      while (1)
      {
        v75 = *v74 - 48;
        if (v75 > 9)
          goto LABEL_45;
        v76 = 10 * v72;
        if ((unsigned __int128)(v72 * (__int128)10) >> 64 != (10 * v72) >> 63)
          goto LABEL_45;
        v72 = v76 - v75;
        if (__OFSUB__(v76, v75))
          goto LABEL_45;
        v60 = 0;
        ++v74;
        if (!--v73)
          goto LABEL_48;
      }
    }
LABEL_47:
    v60 = 0;
    goto LABEL_48;
  }
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
  return result;
}

uint64_t sub_2311DE4DC(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1])
    return 1;
  else
    return sub_231264B58() & 1;
}

uint64_t sub_2311DE530(uint64_t a1)
{
  uint64_t v2;

  sub_2311735E0(0, &qword_254151850, (uint64_t (*)(uint64_t))MEMORY[0x24BE490F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2311DE584()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2311DE5A8()
{
  return swift_deallocObject();
}

uint64_t sub_2311DE5B8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_2312649FC();
  __break(1u);
  return result;
}

uint64_t sub_2311DE6D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 88 * a1 + 32;
    v6 = a3 + 88 * v4;
    if (v5 >= v6 || v5 + 88 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2312649FC();
  __break(1u);
  return result;
}

char *sub_2311DE7C0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = 16 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_2312649FC();
  __break(1u);
  return result;
}

void sub_2311DE8A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255EB95F8)
  {
    sub_2311D0278(255, (unint64_t *)&qword_255EB91D8);
    v0 = sub_231264B34();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255EB95F8);
  }
}

uint64_t sub_2311DE910(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2312649FC();
  __break(1u);
  return result;
}

uint64_t sub_2311DEA04(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_2311D0278(0, (unint64_t *)&qword_255EB91D8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2312649FC();
  __break(1u);
  return result;
}

uint64_t sub_2311DEB1C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_2311DEDCC(0, (unint64_t *)&qword_254155778, &qword_254155500, MEMORY[0x24BE47AB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_2312649FC();
  __break(1u);
  return result;
}

uint64_t sub_2311DEC44(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 40 * a1 + 32;
    v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      sub_2311D0278(0, a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_2312649FC();
  __break(1u);
  return result;
}

void sub_2311DED58()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254155798)
  {
    sub_2311DEDCC(255, (unint64_t *)&qword_254155778, &qword_254155500, MEMORY[0x24BE47AB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v0 = sub_231264B34();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254155798);
  }
}

void sub_2311DEDCC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_2311D0278(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_2311DEE30()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255EB8870)
  {
    sub_231178AD0(255, &qword_255EB8878);
    v0 = sub_231263FA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255EB8870);
  }
}

uint64_t storeEnumTagSinglePayload for ConceptSharableModelIdentifier.Domain(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2311DEED4 + 4 * asc_231268B00[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2311DEEF4 + 4 * byte_231268B05[v4]))();
}

_BYTE *sub_2311DEED4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2311DEEF4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2311DEEFC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2311DEF04(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2311DEF0C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2311DEF14(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ConceptSharableModelIdentifier.Domain()
{
  return &type metadata for ConceptSharableModelIdentifier.Domain;
}

unint64_t sub_2311DEF34()
{
  unint64_t result;

  result = qword_255EB9628;
  if (!qword_255EB9628)
  {
    result = MEMORY[0x2348D8544](&unk_231268BBC, &type metadata for ConceptSharableModelIdentifier.Domain);
    atomic_store(result, (unint64_t *)&qword_255EB9628);
  }
  return result;
}

uint64_t AccountSidebarContentConfigurationModel.init(browseCategory:indentationLevel:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int v23;
  int v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v44;

  v41 = a2;
  v42 = a3;
  v40 = type metadata accessor for AccountSidebarContentConfigurationModel(0);
  MEMORY[0x24BDAC7A8](v40);
  v5 = (uint64_t *)((char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_231263328();
  v38 = *(_QWORD *)(v6 - 8);
  v39 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2312627B8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_231261E94();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, &qword_254153510, v17, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v36 = (uint64_t)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v35 - v21;
  v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v43((char *)&v35 - v21, 1, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  v44 = v10;
  v23 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
  v24 = *MEMORY[0x24BE48F10];
  v37 = v9;
  if (v23 == v24)
  {
    sub_231189628((uint64_t)v22, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
    (*(void (**)(char *, uint64_t))(v44 + 96))(v12, v9);
    sub_2311B3310();
    swift_bridgeObjectRelease();
    v25 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v25(v16, v12, v13);
    v25(v22, v16, v13);
    v43(v22, 0, 1, v13);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v12, v9);
  }
  v26 = sub_231262728();
  v28 = v27;
  sub_2311DF2CC();
  v29 = v36;
  sub_2311BA688((uint64_t)v22, v36, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
  v30 = v8;
  v31 = v40;
  v32 = (uint64_t)v5 + *(int *)(v40 + 24);
  v43((char *)v32, 1, 1, v13);
  *v5 = v26;
  v5[1] = v28;
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))((char *)v5 + *(int *)(v31 + 20), v30, v39);
  sub_2311DFC10(v29, v32);
  v33 = v42;
  *(uint64_t *)((char *)v5 + *(int *)(v31 + 28)) = v41;
  sub_2311B1454((uint64_t)v5, v33, type metadata accessor for AccountSidebarContentConfigurationModel);
  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(a1, v37);
  return sub_231189628((uint64_t)v22, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
}

uint64_t sub_2311DF2CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t (*v13)(char *, uint64_t);
  int v14;
  uint64_t v15;
  void *v16;
  uint64_t v18;
  void *v19;
  void *v20;
  char v22;
  void (*v23)(char *, uint64_t);
  id v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;

  v1 = v0;
  v2 = sub_2312627B8();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v32 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v32 - v10;
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v12((char *)&v32 - v10, v1, v2);
  v13 = *(uint64_t (**)(char *, uint64_t))(v3 + 88);
  v14 = v13(v11, v2);
  if (v14 == *MEMORY[0x24BE48F00])
    goto LABEL_9;
  if (v14 == *MEMORY[0x24BE48E98])
  {
    sub_2311E45B0();
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_231265B60;
    *(_QWORD *)(v15 + 32) = objc_msgSend((id)objc_opt_self(), sel_systemGray3Color);
    v33 = v15;
    sub_231264210();
    sub_231178AD0(0, &qword_254154640);
    v16 = (void *)sub_2312641EC();
    swift_bridgeObjectRelease();
    objc_msgSend((id)objc_opt_self(), sel_configurationWithPaletteColors_, v16);

    return sub_231263304();
  }
  if (v14 == *MEMORY[0x24BE48E80] || v14 == *MEMORY[0x24BE48EC8])
  {
LABEL_9:
    sub_2311E45B0();
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_231268BF0;
    v19 = (void *)objc_opt_self();
    *(_QWORD *)(v18 + 32) = objc_msgSend(v19, sel_systemWhiteColor);
    *(_QWORD *)(v18 + 40) = objc_msgSend(v19, sel_systemBlueColor);
    v33 = v18;
    sub_231264210();
    sub_231178AD0(0, &qword_254154640);
    v20 = (void *)sub_2312641EC();
    swift_bridgeObjectRelease();
    objc_msgSend((id)objc_opt_self(), sel_configurationWithPaletteColors_, v20);

    return sub_231263304();
  }
  v12(v9, (uint64_t)v11, v2);
  sub_231262734();
  sub_231172048(&qword_254155528, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28], MEMORY[0x24BE48F48]);
  v22 = sub_231264060();
  v23 = *(void (**)(char *, uint64_t))(v3 + 8);
  v23(v6, v2);
  v23(v9, v2);
  if ((v22 & 1) != 0)
  {
    v24 = objc_msgSend((id)objc_opt_self(), sel_configurationPreferringMulticolor);
    sub_231263304();
    return ((uint64_t (*)(char *, uint64_t))v23)(v11, v2);
  }
  v25 = v13(v11, v2);
  if (v25 != *MEMORY[0x24BE48F10])
  {
    if (v25 == *MEMORY[0x24BE48E78] || v25 == *MEMORY[0x24BE48ED0])
    {
      v31 = objc_msgSend((id)objc_opt_self(), sel_configurationPreferringMulticolor);
      return sub_231263304();
    }
    sub_23126274C();
    sub_231178AD0(0, &qword_255EB7DB8);
    sub_231264684();
    sub_23126331C();
    return ((uint64_t (*)(char *, uint64_t))v23)(v11, v2);
  }
  (*(void (**)(char *, uint64_t))(v3 + 96))(v11, v2);
  sub_2311B3310();
  sub_231207750(*(_QWORD *)&v11[*(int *)(v26 + 48)], *(_QWORD *)&v11[*(int *)(v26 + 48) + 8]);
  swift_bridgeObjectRelease();
  sub_2311E45B0();
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_231268BF0;
  *(_QWORD *)(v27 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithWhite_alpha_, 0.85, 1.0);
  *(_QWORD *)(v27 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithWhite_alpha_, 0.55, 1.0);
  v33 = v27;
  sub_231264210();
  sub_231178AD0(0, &qword_254154640);
  v28 = (void *)sub_2312641EC();
  swift_bridgeObjectRelease();
  v29 = objc_msgSend((id)objc_opt_self(), sel_configurationWithPaletteColors_, v28);

  sub_231263304();
  v30 = sub_231261E94();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v11, v30);
}

uint64_t AccountSidebarContentConfigurationModel.title.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AccountSidebarContentConfigurationModel.title.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AccountSidebarContentConfigurationModel.title.modify())()
{
  return nullsub_1;
}

uint64_t AccountSidebarContentConfigurationModel.imageRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AccountSidebarContentConfigurationModel(0) + 20);
  v4 = sub_231263328();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AccountSidebarContentConfigurationModel.imageRepresentation.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AccountSidebarContentConfigurationModel(0) + 20);
  v4 = sub_231263328();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AccountSidebarContentConfigurationModel.imageRepresentation.modify())()
{
  type metadata accessor for AccountSidebarContentConfigurationModel(0);
  return nullsub_1;
}

uint64_t AccountSidebarContentConfigurationModel.accountId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for AccountSidebarContentConfigurationModel(0);
  return sub_2311BA688(v1 + *(int *)(v3 + 24), a1, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
}

uint64_t AccountSidebarContentConfigurationModel.accountId.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for AccountSidebarContentConfigurationModel(0) + 24);
  return sub_2311DFC10(a1, v3);
}

uint64_t (*AccountSidebarContentConfigurationModel.accountId.modify())()
{
  type metadata accessor for AccountSidebarContentConfigurationModel(0);
  return nullsub_1;
}

uint64_t AccountSidebarContentConfigurationModel.indentationLevel.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for AccountSidebarContentConfigurationModel(0) + 28));
}

uint64_t AccountSidebarContentConfigurationModel.indentationLevel.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AccountSidebarContentConfigurationModel(0);
  *(_QWORD *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*AccountSidebarContentConfigurationModel.indentationLevel.modify())()
{
  type metadata accessor for AccountSidebarContentConfigurationModel(0);
  return nullsub_1;
}

uint64_t AccountSidebarContentConfigurationModel.init(title:imageRepresentation:accountId:indentationLevel:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  int *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;

  v12 = (int *)type metadata accessor for AccountSidebarContentConfigurationModel(0);
  v13 = (uint64_t)a6 + v12[6];
  v14 = sub_231261E94();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *a6 = a1;
  a6[1] = a2;
  v15 = (char *)a6 + v12[5];
  v16 = sub_231263328();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v15, a3, v16);
  result = sub_2311DFC10(a4, v13);
  *(_QWORD *)((char *)a6 + v12[7]) = a5;
  return result;
}

uint64_t type metadata accessor for AccountSidebarContentConfigurationModel(uint64_t a1)
{
  return sub_231187940(a1, qword_254153BD0);
}

uint64_t sub_2311DFC10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2311735E0(0, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2311DFC6C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2311DFC98 + 4 * byte_231268C10[*v0]))(0x656C746974, 0xE500000000000000);
}

unint64_t sub_2311DFC98()
{
  return 0xD000000000000013;
}

uint64_t sub_2311DFCB8()
{
  return 0x49746E756F636361;
}

unint64_t sub_2311DFCD4()
{
  return 0xD000000000000010;
}

uint64_t sub_2311DFCF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2311E2FBC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2311DFD14()
{
  sub_2311DFF50();
  return sub_231264C6C();
}

uint64_t sub_2311DFD3C()
{
  sub_2311DFF50();
  return sub_231264C78();
}

uint64_t AccountSidebarContentConfigurationModel.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_2311E03B8(0, (unint64_t *)&unk_254154658, MEMORY[0x24BEE3520]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = &v9[-v6];
  sub_231173410(a1, a1[3]);
  sub_2311DFF50();
  sub_231264C60();
  v9[15] = 0;
  sub_231264AC8();
  if (!v1)
  {
    type metadata accessor for AccountSidebarContentConfigurationModel(0);
    v9[14] = 1;
    sub_231263328();
    sub_231172048(&qword_254153F18, (uint64_t (*)(uint64_t))MEMORY[0x24BE413B0], MEMORY[0x24BE413C0]);
    sub_231264AF8();
    v9[13] = 2;
    sub_231261E94();
    sub_231172048(&qword_254153508, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_231264ABC();
    v9[12] = 3;
    sub_231264AEC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_2311DFF50()
{
  unint64_t result;

  result = qword_254153B98;
  if (!qword_254153B98)
  {
    result = MEMORY[0x2348D8544](&unk_231268EF0, &type metadata for AccountSidebarContentConfigurationModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254153B98);
  }
  return result;
}

uint64_t AccountSidebarContentConfigurationModel.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  _QWORD *v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v35 = a2;
  sub_2311735E0(0, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v36 = (char *)&v32 - v4;
  v5 = sub_231263328();
  v6 = *(_QWORD *)(v5 - 8);
  v38 = v5;
  v39 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v37 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311E03B8(0, &qword_255EB9630, MEMORY[0x24BEE33E0]);
  v40 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v32 - v10;
  v12 = type metadata accessor for AccountSidebarContentConfigurationModel(0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (uint64_t *)((char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = (uint64_t)v15 + *(int *)(v13 + 24);
  v17 = sub_231261E94();
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v42 = v16;
  v18(v16, 1, 1, v17);
  sub_231173410(a1, a1[3]);
  sub_2311DFF50();
  v41 = v11;
  v19 = (uint64_t)v43;
  sub_231264C54();
  if (v19)
  {
    sub_231173434((uint64_t)a1);
    return sub_231189628(v42, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
  }
  else
  {
    v32 = v17;
    v33 = v15;
    v34 = v9;
    v20 = v12;
    v43 = a1;
    v21 = v39;
    v23 = v37;
    v22 = v38;
    v47 = 0;
    v24 = sub_231264A50();
    v25 = v33;
    *v33 = v24;
    v25[1] = v26;
    v46 = 1;
    sub_231172048(&qword_255EB9638, (uint64_t (*)(uint64_t))MEMORY[0x24BE413B0], MEMORY[0x24BE413C8]);
    sub_231264A80();
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))((char *)v25 + *(int *)(v20 + 20), v23, v22);
    v45 = 2;
    sub_231172048(&qword_255EB86A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v27 = (uint64_t)v36;
    v28 = v41;
    sub_231264A44();
    sub_2311DFC10(v27, v42);
    v44 = 3;
    v29 = sub_231264A74();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v40);
    v30 = (uint64_t)v33;
    *(uint64_t *)((char *)v33 + *(int *)(v20 + 28)) = v29;
    sub_231178454(v30, v35, type metadata accessor for AccountSidebarContentConfigurationModel);
    sub_231173434((uint64_t)v43);
    return sub_231178498(v30, type metadata accessor for AccountSidebarContentConfigurationModel);
  }
}

void sub_2311E03B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_2311DFF50();
    v7 = a3(a1, &type metadata for AccountSidebarContentConfigurationModel.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_2311E0414()
{
  sub_231172048(&qword_254153BB8, type metadata accessor for AccountSidebarContentConfigurationModel, (uint64_t)&protocol conformance descriptor for AccountSidebarContentConfigurationModel);
  return sub_231263610();
}

uint64_t sub_2311E0488()
{
  sub_231172048(&qword_254153BB8, type metadata accessor for AccountSidebarContentConfigurationModel, (uint64_t)&protocol conformance descriptor for AccountSidebarContentConfigurationModel);
  return sub_231263604();
}

uint64_t sub_2311E04D4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AccountSidebarContentConfigurationModel.init(from:)(a1, a2);
}

uint64_t sub_2311E04E8(_QWORD *a1)
{
  return AccountSidebarContentConfigurationModel.encode(to:)(a1);
}

uint64_t sub_2311E04FC()
{
  if ((sub_231261E70() & 1) == 0)
    return 0;
  sub_231178AD0(0, (unint64_t *)&qword_2541534F0);
  return sub_23126469C() & 1;
}

uint64_t sub_2311E056C(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t (*v21)(uint64_t);
  char v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;

  v29 = a1;
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2311735E0(0, (unint64_t *)&unk_254153298, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v27 = (char *)&v27 - v4;
  v5 = sub_231261E94();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, &qword_254153510, v6, v2);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v27 - v11;
  sub_2311BA8F0(0, &qword_255EB9640, &qword_254153510, v6);
  v14 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v27 - v15;
  v28 = v1;
  v17 = v1 + OBJC_IVAR____TtC13HealthRecords42AccountSidebarContentConfigurationProvider_accountId;
  swift_beginAccess();
  v18 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_2311BA688(v17, (uint64_t)v16, &qword_254153510, v6);
  sub_2311BA688(v29, v18, &qword_254153510, v6);
  v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v19((uint64_t)v16, 1, v5) == 1)
  {
    if (v19(v18, 1, v5) == 1)
      return sub_231189628((uint64_t)v16, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
  }
  else
  {
    sub_2311BA688((uint64_t)v16, (uint64_t)v12, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
    if (v19(v18, 1, v5) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v9, v18, v5);
      v21 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
      sub_231172048(&qword_255EB9650, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v22 = sub_231264060();
      v23 = *(void (**)(char *, uint64_t))(v7 + 8);
      v23(v9, v5);
      v23(v12, v5);
      result = sub_231189628((uint64_t)v16, &qword_254153510, v21);
      if ((v22 & 1) != 0)
        return result;
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v5);
  }
  sub_2311BA6E0((uint64_t)v16, &qword_255EB9640, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
LABEL_8:
  v24 = sub_2312642D0();
  v25 = (uint64_t)v27;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v27, 1, 1, v24);
  v26 = (_QWORD *)swift_allocObject();
  v26[2] = 0;
  v26[3] = 0;
  v26[4] = v28;
  swift_retain();
  sub_231240274(v25, (uint64_t)&unk_255EB9688, (uint64_t)v26);
  return swift_release();
}

uint64_t sub_2311E08C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);

  v4[11] = a4;
  v5 = sub_231263B5C();
  v4[12] = v5;
  v4[13] = *(_QWORD *)(v5 - 8);
  v4[14] = swift_task_alloc();
  v6 = sub_231261E94();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v4[15] = v6;
  v4[16] = *(_QWORD *)(v6 - 8);
  v4[17] = swift_task_alloc();
  sub_2311735E0(0, &qword_254153510, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2311E0994()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t (*v7)(uint64_t);
  _QWORD *v9;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 88) + OBJC_IVAR____TtC13HealthRecords42AccountSidebarContentConfigurationProvider_accountId;
  swift_beginAccess();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  sub_2311BA688(v5, v2, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
  sub_2311BA688(v2, v1, &qword_254153510, v6);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) == 1)
  {
    v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
    sub_231189628(*(_QWORD *)(v0 + 144), &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
    sub_231189628(*(_QWORD *)(v0 + 152), &qword_254153510, v7);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 32))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 120));
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v9;
    *v9 = v0;
    v9[1] = sub_2311E0B08;
    return sub_2311E2550(*(_QWORD *)(v0 + 136));
  }
}

uint64_t sub_2311E0B08(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 168) = a1;
  *(_QWORD *)(v3 + 176) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2311E0B74()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 168))
  {
    sub_2312642B8();
    *(_QWORD *)(v0 + 184) = sub_2312642AC();
    sub_23126427C();
    return swift_task_switch();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
    sub_231189628(*(_QWORD *)(v0 + 152), &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2311E0C54()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (void *)v0[21];
  v2 = v0[17];
  v3 = v0[11];
  swift_release();
  sub_2311E209C(v2, v3, v1);
  return swift_task_switch();
}

uint64_t sub_2311E0CBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 128);
  v1 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_231189628(*(_QWORD *)(v0 + 152), &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2311E0D4C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  void *v7;
  uint8_t *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(void **)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 152);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
  sub_231189628(v2, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
  sub_231263B20();
  v3 = v1;
  v4 = v1;
  v5 = sub_231263B50();
  v6 = sub_2312643D8();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = *(void **)(v0 + 176);
    v21 = *(_QWORD *)(v0 + 104);
    v22 = *(_QWORD *)(v0 + 96);
    v23 = *(_QWORD *)(v0 + 112);
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    *(_DWORD *)v8 = 136446210;
    v24 = v9;
    *(_QWORD *)(v0 + 72) = v7;
    v10 = v7;
    v11 = v7;
    sub_2311889D8();
    sub_231264B88();
    v12 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_2312647B0();
    swift_unknownObjectRelease();
    v13 = sub_2312640B4();
    v15 = v14;

    *(_QWORD *)(v0 + 80) = sub_2311CBDE4(v13, v15, &v24);
    sub_231264750();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23116F000, v5, v6, "Failed to load account image for sidebars: %{public}s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v9, -1, -1);
    MEMORY[0x2348D85EC](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, v22);
  }
  else
  {
    v16 = *(void **)(v0 + 176);
    v18 = *(_QWORD *)(v0 + 104);
    v17 = *(_QWORD *)(v0 + 112);
    v19 = *(_QWORD *)(v0 + 96);

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2311E0FF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v17;
  char v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;

  v3 = type metadata accessor for FetchedAccountIcon(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v20 = (uint64_t)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, &qword_2541533A0, type metadata accessor for FetchedAccountIcon, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v20 - v7;
  sub_2311BA8F0(0, &qword_255EB9690, &qword_2541533A0, type metadata accessor for FetchedAccountIcon);
  v10 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v20 - v11;
  v21 = v1;
  v13 = v1 + OBJC_IVAR____TtC13HealthRecords42AccountSidebarContentConfigurationProvider_fetchedAccountIcon;
  swift_beginAccess();
  v14 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2311BA688(v13, (uint64_t)v12, &qword_2541533A0, type metadata accessor for FetchedAccountIcon);
  sub_2311BA688(a1, v14, &qword_2541533A0, type metadata accessor for FetchedAccountIcon);
  v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v15((uint64_t)v12, 1, v3) == 1)
  {
    if (v15(v14, 1, v3) == 1)
      return sub_231189628((uint64_t)v12, &qword_2541533A0, type metadata accessor for FetchedAccountIcon);
    goto LABEL_6;
  }
  sub_2311BA688((uint64_t)v12, (uint64_t)v8, &qword_2541533A0, type metadata accessor for FetchedAccountIcon);
  if (v15(v14, 1, v3) == 1)
  {
    sub_231178498((uint64_t)v8, type metadata accessor for FetchedAccountIcon);
LABEL_6:
    sub_2311BA6E0((uint64_t)v12, &qword_255EB9690, &qword_2541533A0, type metadata accessor for FetchedAccountIcon);
    goto LABEL_11;
  }
  v17 = v20;
  sub_2311B1454(v14, v20, type metadata accessor for FetchedAccountIcon);
  if ((sub_231261E70() & 1) != 0)
  {
    sub_231178AD0(0, (unint64_t *)&qword_2541534F0);
    v18 = sub_23126469C();
    sub_231178498(v17, type metadata accessor for FetchedAccountIcon);
    sub_231178498((uint64_t)v8, type metadata accessor for FetchedAccountIcon);
    result = sub_231189628((uint64_t)v12, &qword_2541533A0, type metadata accessor for FetchedAccountIcon);
    if ((v18 & 1) != 0)
      return result;
  }
  else
  {
    sub_231178498(v17, type metadata accessor for FetchedAccountIcon);
    sub_231178498((uint64_t)v8, type metadata accessor for FetchedAccountIcon);
    sub_231189628((uint64_t)v12, &qword_2541533A0, type metadata accessor for FetchedAccountIcon);
  }
LABEL_11:
  v19 = (_QWORD *)(v21 + OBJC_IVAR____TtC13HealthRecords42AccountSidebarContentConfigurationProvider_delegate);
  result = swift_beginAccess();
  if (*v19)
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2312638BC();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t AccountSidebarContentConfigurationProvider.delegate.getter()
{
  swift_beginAccess();
  return swift_unknownObjectRetain();
}

uint64_t AccountSidebarContentConfigurationProvider.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC13HealthRecords42AccountSidebarContentConfigurationProvider_delegate);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_unknownObjectRelease();
}

uint64_t (*AccountSidebarContentConfigurationProvider.delegate.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t AccountSidebarContentConfigurationProvider.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = v0;
  sub_231178AD0(0, (unint64_t *)&qword_255EB7868);
  sub_231264528();
  sub_231262A34();
  sub_231262A28();
  sub_231262BC0();
  swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_231262BA8();
  sub_231263718();
  swift_allocObject();
  *(_QWORD *)(v0 + 24) = sub_23126370C();
  v2 = v0 + OBJC_IVAR____TtC13HealthRecords42AccountSidebarContentConfigurationProvider_accountId;
  v3 = sub_231261E94();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = v1 + OBJC_IVAR____TtC13HealthRecords42AccountSidebarContentConfigurationProvider_fetchedAccountIcon;
  v5 = type metadata accessor for FetchedAccountIcon(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = (_QWORD *)(v1 + OBJC_IVAR____TtC13HealthRecords42AccountSidebarContentConfigurationProvider_delegate);
  *v6 = 0;
  v6[1] = 0;
  return v1;
}

uint64_t AccountSidebarContentConfigurationProvider.makeContentConfiguration(viewModelState:viewContext:cellState:actionHandlerContent:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t);
  uint64_t v53;
  uint64_t v54;
  unsigned int (*v55)(uint64_t, uint64_t, uint64_t);
  unsigned int v56;
  uint64_t v57;
  char *v58;
  uint64_t (*v59)(uint64_t);
  char v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t);
  id v65;
  uint64_t v66;
  uint64_t v67;
  void (**v68)(_QWORD, _QWORD, _QWORD);
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;

  v101 = a4;
  v99 = a2;
  v100 = a3;
  v105 = a1;
  v98 = a5;
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2311735E0(0, &qword_254153F10, (uint64_t (*)(uint64_t))MEMORY[0x24BE41368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v97 = (char *)&v78 - v7;
  v92 = sub_2312636AC();
  v91 = *(_QWORD *)(v92 - 8);
  v8 = MEMORY[0x24BDAC7A8](v92);
  v89 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v79 = (char *)&v78 - v10;
  sub_2311735E0(0, qword_2541547E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE413B0], v5);
  MEMORY[0x24BDAC7A8](v11);
  v81 = (char *)&v78 - v12;
  v102 = sub_231263328();
  v104 = *(_QWORD *)(v102 - 8);
  v13 = MEMORY[0x24BDAC7A8](v102);
  v96 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v82 = (char *)&v78 - v15;
  v16 = sub_231261E94();
  v17 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v87 = v16;
  v86 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v80 = (char *)&v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311BA8F0(0, &qword_255EB9640, &qword_254153510, v17);
  v84 = v19;
  MEMORY[0x24BDAC7A8](v19);
  v85 = (uint64_t)&v78 - v20;
  sub_2311735E0(0, &qword_2541533A0, type metadata accessor for FetchedAccountIcon, v5);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v78 - v22;
  v103 = type metadata accessor for FetchedAccountIcon(0);
  v95 = *(_QWORD *)(v103 - 8);
  MEMORY[0x24BDAC7A8](v103);
  v88 = (uint64_t)&v78 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, &qword_254153510, v17, v5);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v83 = (uint64_t)&v78 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v90 = (uint64_t)&v78 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&v78 - v31;
  MEMORY[0x24BDAC7A8](v30);
  v34 = (char *)&v78 - v33;
  v35 = type metadata accessor for AccountSidebarContentConfigurationModel(0);
  v36 = MEMORY[0x24BDAC7A8](v35);
  v78 = (char *)&v78 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v36);
  v39 = (char *)&v78 - v38;
  sub_2311735E0(0, &qword_255EB9648, type metadata accessor for AccountSidebarContentConfigurationModel, MEMORY[0x24BE42880]);
  v93 = v40;
  sub_231263478();
  v94 = v35;
  sub_2311BA688((uint64_t)&v39[*(int *)(v35 + 24)], (uint64_t)v34, &qword_254153510, v17);
  sub_231178498((uint64_t)v39, type metadata accessor for AccountSidebarContentConfigurationModel);
  v41 = v106;
  v42 = v106 + OBJC_IVAR____TtC13HealthRecords42AccountSidebarContentConfigurationProvider_accountId;
  swift_beginAccess();
  sub_2311BA688(v42, (uint64_t)v32, &qword_254153510, v17);
  swift_beginAccess();
  sub_2311E4558((uint64_t)v34, v42, &qword_254153510, v17);
  swift_endAccess();
  sub_2311E056C((uint64_t)v32);
  sub_231189628((uint64_t)v34, &qword_254153510, v17);
  sub_231189628((uint64_t)v32, &qword_254153510, v17);
  v43 = v41 + OBJC_IVAR____TtC13HealthRecords42AccountSidebarContentConfigurationProvider_fetchedAccountIcon;
  swift_beginAccess();
  v44 = v43;
  v45 = v103;
  sub_2311BA688(v44, (uint64_t)v23, &qword_2541533A0, type metadata accessor for FetchedAccountIcon);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v95 + 48))(v23, 1, v45) == 1)
  {
    sub_231189628((uint64_t)v23, &qword_2541533A0, type metadata accessor for FetchedAccountIcon);
    v46 = v102;
    goto LABEL_13;
  }
  v47 = v88;
  sub_2311B1454((uint64_t)v23, v88, type metadata accessor for FetchedAccountIcon);
  v48 = v86;
  v49 = v90;
  v50 = v87;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v86 + 16))(v90, v47, v87);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v48 + 56))(v49, 0, 1, v50);
  v51 = v85;
  v52 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v53 = v49;
  v54 = v85 + *(int *)(v84 + 48);
  sub_2311BA688(v53, v85, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
  sub_2311BA688(v42, v54, &qword_254153510, v52);
  v55 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48);
  if (v55(v51, 1, v50) != 1)
  {
    v57 = v83;
    sub_2311BA688(v51, v83, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
    if (v55(v54, 1, v50) != 1)
    {
      v58 = v80;
      (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))(v80, v54, v50);
      v59 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
      sub_231172048(&qword_255EB9650, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v60 = sub_231264060();
      v61 = v48;
      v62 = v60;
      v63 = v47;
      v64 = *(void (**)(char *, uint64_t))(v61 + 8);
      v64(v58, v50);
      sub_231189628(v90, &qword_254153510, v59);
      v64((char *)v57, v50);
      v47 = v63;
      sub_231189628(v51, &qword_254153510, v59);
      v46 = v102;
      if ((v62 & 1) != 0)
        goto LABEL_11;
LABEL_9:
      sub_231178498(v47, type metadata accessor for FetchedAccountIcon);
      goto LABEL_13;
    }
    sub_231189628(v90, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v57, v50);
    v46 = v102;
LABEL_8:
    sub_2311BA6E0(v51, &qword_255EB9640, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
    goto LABEL_9;
  }
  sub_231189628(v90, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
  v56 = v55(v54, 1, v50);
  v46 = v102;
  if (v56 != 1)
    goto LABEL_8;
  sub_231189628(v51, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
LABEL_11:
  v65 = *(id *)(v47 + *(int *)(v103 + 20));
  v66 = (uint64_t)v81;
  sub_231263310();
  v67 = v47;
  v68 = (void (**)(_QWORD, _QWORD, _QWORD))v104;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v104 + 48))(v66, 1, v46) != 1)
  {
    v73 = v82;
    ((void (**)(char *, uint64_t, uint64_t))v68)[4](v82, v66, v46);
    v74 = (uint64_t)v78;
    sub_231263478();
    v75 = v94;
    ((void (**)(uint64_t, char *, uint64_t))v68)[3](v74 + *(int *)(v94 + 20), v73, v46);
    v106 = *(_QWORD *)(v106 + 24);
    sub_231263484();
    sub_231178454(v74, (uint64_t)v39, type metadata accessor for AccountSidebarContentConfigurationModel);
    ((void (**)(char *, char *, uint64_t))v68)[2](v96, &v39[*(int *)(v75 + 20)], v46);
    v76 = sub_2312632F8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v97, 1, 1, v76);
    swift_bridgeObjectRetain();
    v77 = v79;
    sub_2312636A0();
    sub_231178498((uint64_t)v39, type metadata accessor for AccountSidebarContentConfigurationModel);
    sub_2312636E8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v91 + 8))(v77, v92);
    (*(void (**)(char *, uint64_t))(v104 + 8))(v82, v102);
    sub_231178498(v88, type metadata accessor for FetchedAccountIcon);
    return sub_231178498(v74, type metadata accessor for AccountSidebarContentConfigurationModel);
  }
  sub_231178498(v67, type metadata accessor for FetchedAccountIcon);
  sub_231189628(v66, qword_2541547E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE413B0]);
LABEL_13:
  v69 = v94;
  sub_231263484();
  sub_231263478();
  (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v96, &v39[*(int *)(v69 + 20)], v46);
  v70 = sub_2312632F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v97, 1, 1, v70);
  swift_bridgeObjectRetain();
  v71 = v89;
  sub_2312636A0();
  sub_231178498((uint64_t)v39, type metadata accessor for AccountSidebarContentConfigurationModel);
  sub_2312636E8();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v71, v92);
  return swift_bridgeObjectRelease();
}

uint64_t AccountSidebarContentConfigurationProvider.makeBackgroundConfiguration(cellState:)()
{
  return sub_2312636F4();
}

uint64_t AccountSidebarContentConfigurationProvider.makeAccessories()()
{
  return sub_231263700();
}

uint64_t AccountSidebarContentConfigurationProvider.getCellIndentationLevel(viewModel:)(uint64_t a1)
{
  return *(_QWORD *)(a1 + *(int *)(type metadata accessor for AccountSidebarContentConfigurationModel(0) + 28));
}

uint64_t sub_2311E209C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t result;
  char *v31;
  char v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t (*v36)(uint64_t);
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  char *v43;
  uint64_t v44;
  char *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v46 = a3;
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2311735E0(0, &qword_2541533A0, type metadata accessor for FetchedAccountIcon, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v47 = (uint64_t)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v45 = (char *)&v43 - v9;
  v10 = sub_231261E94();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v43 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311BA8F0(0, &qword_255EB9640, &qword_254153510, v11);
  v15 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v43 - v16;
  sub_2311735E0(0, &qword_254153510, v11, v5);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v49 = (uint64_t)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v43 - v21;
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v44 = a1;
  v24 = a1;
  v25 = v23;
  v23((char *)&v43 - v21, v24, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v22, 0, 1, v10);
  v48 = a2;
  v26 = a2 + OBJC_IVAR____TtC13HealthRecords42AccountSidebarContentConfigurationProvider_accountId;
  swift_beginAccess();
  v27 = (uint64_t)&v17[*(int *)(v15 + 48)];
  sub_2311BA688((uint64_t)v22, (uint64_t)v17, &qword_254153510, v11);
  sub_2311BA688(v26, v27, &qword_254153510, v11);
  v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v28((uint64_t)v17, 1, v10) != 1)
  {
    v29 = v49;
    sub_2311BA688((uint64_t)v17, v49, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
    if (v28(v27, 1, v10) != 1)
    {
      v31 = v43;
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v43, v27, v10);
      sub_231172048(&qword_255EB9650, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v32 = sub_231264060();
      v33 = v29;
      v34 = *(void (**)(char *, uint64_t))(v12 + 8);
      v34(v31, v10);
      v35 = (uint64_t)v22;
      v36 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
      sub_231189628(v35, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
      v34((char *)v33, v10);
      result = sub_231189628((uint64_t)v17, &qword_254153510, v36);
      if ((v32 & 1) == 0)
        return result;
      goto LABEL_8;
    }
    sub_231189628((uint64_t)v22, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v29, v10);
    return sub_2311BA6E0((uint64_t)v17, &qword_255EB9640, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
  }
  sub_231189628((uint64_t)v22, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
  if (v28(v27, 1, v10) != 1)
    return sub_2311BA6E0((uint64_t)v17, &qword_255EB9640, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
  sub_231189628((uint64_t)v17, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
LABEL_8:
  v37 = (uint64_t)v45;
  v25(v45, v44, v10);
  v38 = type metadata accessor for FetchedAccountIcon(0);
  v39 = v46;
  *(_QWORD *)(v37 + *(int *)(v38 + 20)) = v46;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v37, 0, 1, v38);
  v40 = v48 + OBJC_IVAR____TtC13HealthRecords42AccountSidebarContentConfigurationProvider_fetchedAccountIcon;
  swift_beginAccess();
  v41 = v47;
  sub_2311BA688(v40, v47, &qword_2541533A0, type metadata accessor for FetchedAccountIcon);
  swift_beginAccess();
  v42 = v39;
  sub_2311E4558(v37, v40, &qword_2541533A0, type metadata accessor for FetchedAccountIcon);
  swift_endAccess();
  sub_2311E0FF4(v41);
  sub_231189628(v37, &qword_2541533A0, type metadata accessor for FetchedAccountIcon);
  return sub_231189628(v41, &qword_2541533A0, type metadata accessor for FetchedAccountIcon);
}

uint64_t sub_2311E2550(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[3] = a1;
  v2[4] = v1;
  v3 = sub_231262668();
  v2[5] = v3;
  v2[6] = *(_QWORD *)(v3 - 8);
  v2[7] = swift_task_alloc();
  sub_2311735E0(0, &qword_255EB9668, (uint64_t (*)(uint64_t))MEMORY[0x24BE48D90], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v2[8] = v4;
  v2[9] = swift_task_alloc();
  v5 = sub_2312626A4();
  v2[10] = v5;
  v2[11] = *(_QWORD *)(v5 - 8);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2311E2650()
{
  uint64_t v0;
  int8x16_t *v1;
  _QWORD *v2;

  v1 = (int8x16_t *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v1;
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 24), *(int8x16_t *)(v0 + 24), 8uLL);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v2;
  *v2 = v0;
  v2[1] = sub_2311E2714;
  return sub_231264B70();
}

uint64_t sub_2311E2714()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2311E27CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_231189628(v3, &qword_255EB9668, (uint64_t (*)(uint64_t))MEMORY[0x24BE48D90]);
    v4 = 0;
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 48);
    v5 = *(_QWORD *)(v0 + 56);
    v7 = *(_QWORD *)(v0 + 40);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(*(_QWORD *)(v0 + 104), v3, v1);
    sub_231262680();
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 88))(v5, v7);
    LODWORD(v5) = *MEMORY[0x24BE48D40];
    v9 = (void *)sub_231262698();
    v10 = v9;
    if (v8 == (_DWORD)v5)
    {
      *(_QWORD *)(v0 + 16) = 0;
      v4 = objc_msgSend(v9, sel_hr_imageWithWhiteBackground_, v0 + 16);

      v11 = *(void **)(v0 + 16);
      v12 = *(_QWORD *)(v0 + 96);
      v13 = *(_QWORD *)(v0 + 104);
      v14 = *(_QWORD *)(v0 + 80);
      v15 = *(_QWORD *)(v0 + 88);
      if (v4)
      {
        v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
        v17 = v11;
        v16(v12, v13, v14);
      }
      else
      {
        v21 = v11;
        v22 = (void *)sub_231261D50();

        swift_willThrow();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v12, v13, v14);
        v4 = (id)sub_231262698();
      }
      v23 = *(_QWORD *)(v0 + 104);
      v24 = *(_QWORD *)(v0 + 80);
      v25 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 88) + 8);
      v25(*(_QWORD *)(v0 + 96), v24);
      v25(v23, v24);
    }
    else
    {
      v19 = *(_QWORD *)(v0 + 48);
      v18 = *(_QWORD *)(v0 + 56);
      v20 = *(_QWORD *)(v0 + 40);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 80));
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
      v4 = v10;
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(id))(v0 + 8))(v4);
}

uint64_t sub_2311E29F0()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2311E2A8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v15[2];

  v15[1] = a3;
  sub_2311E42EC();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v8 = sub_231262674();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BE48D50], v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  v12 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v13 + v12, (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  sub_231262B90();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_2311E2BE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_2311E440C();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (uint64_t *)((char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2311735E0(0, &qword_255EB9668, (uint64_t (*)(uint64_t))MEMORY[0x24BE48D90], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v12 - v6;
  sub_231178454(a1, (uint64_t)v4, (uint64_t (*)(_QWORD))sub_2311E440C);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = *v4;
    v13 = v8;
    sub_2311889D8();
    swift_willThrowTypedImpl();
    v13 = v8;
    sub_2311E42EC();
    return sub_231264288();
  }
  else
  {
    v10 = sub_2312626A4();
    v11 = *(_QWORD *)(v10 - 8);
    (*(void (**)(char *, uint64_t *, uint64_t))(v11 + 32))(v7, v4, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    sub_2311E42EC();
    return sub_231264294();
  }
}

uint64_t AccountSidebarContentConfigurationProvider.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_231189628(v0 + OBJC_IVAR____TtC13HealthRecords42AccountSidebarContentConfigurationProvider_accountId, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
  sub_231189628(v0 + OBJC_IVAR____TtC13HealthRecords42AccountSidebarContentConfigurationProvider_fetchedAccountIcon, &qword_2541533A0, type metadata accessor for FetchedAccountIcon);
  swift_unknownObjectRelease();
  return v0;
}

uint64_t AccountSidebarContentConfigurationProvider.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_231189628(v0 + OBJC_IVAR____TtC13HealthRecords42AccountSidebarContentConfigurationProvider_accountId, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
  sub_231189628(v0 + OBJC_IVAR____TtC13HealthRecords42AccountSidebarContentConfigurationProvider_fetchedAccountIcon, &qword_2541533A0, type metadata accessor for FetchedAccountIcon);
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_2311E2E50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return AccountSidebarContentConfigurationProvider.makeContentConfiguration(viewModelState:viewContext:cellState:actionHandlerContent:)(a1, a2, a3, a4, a5);
}

uint64_t sub_2311E2E64()
{
  return sub_2312636F4();
}

uint64_t sub_2311E2E84()
{
  return sub_231263700();
}

uint64_t sub_2311E2EA4(uint64_t a1)
{
  return *(_QWORD *)(a1 + *(int *)(type metadata accessor for AccountSidebarContentConfigurationModel(0) + 28));
}

uint64_t sub_2311E2ED0()
{
  swift_beginAccess();
  return swift_unknownObjectRetain();
}

uint64_t sub_2311E2F1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC13HealthRecords42AccountSidebarContentConfigurationProvider_delegate);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_unknownObjectRelease();
}

uint64_t (*sub_2311E2F78())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_2311E2FBC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023126D2D0 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x49746E756F636361 && a2 == 0xE900000000000064 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023126D2F0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_231264B58();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t _s13HealthRecords42AccountSidebarContentConfigurationProviderCACycfC_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  type metadata accessor for AccountSidebarContentConfigurationProvider(0);
  v0 = swift_allocObject();
  sub_231178AD0(0, (unint64_t *)&qword_255EB7868);
  sub_231264528();
  sub_231262A34();
  sub_231262A28();
  sub_231262BC0();
  swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_231262BA8();
  sub_231263718();
  swift_allocObject();
  *(_QWORD *)(v0 + 24) = sub_23126370C();
  v1 = v0 + OBJC_IVAR____TtC13HealthRecords42AccountSidebarContentConfigurationProvider_accountId;
  v2 = sub_231261E94();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtC13HealthRecords42AccountSidebarContentConfigurationProvider_fetchedAccountIcon;
  v4 = type metadata accessor for FetchedAccountIcon(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = (_QWORD *)(v0 + OBJC_IVAR____TtC13HealthRecords42AccountSidebarContentConfigurationProvider_delegate);
  *v5 = 0;
  v5[1] = 0;
  return v0;
}

uint64_t type metadata accessor for FetchedAccountIcon(uint64_t a1)
{
  return sub_231187940(a1, (uint64_t *)&unk_254153390);
}

uint64_t sub_2311E32B0()
{
  return sub_231172048(&qword_254153BB0, type metadata accessor for AccountSidebarContentConfigurationModel, (uint64_t)&protocol conformance descriptor for AccountSidebarContentConfigurationModel);
}

uint64_t sub_2311E32DC()
{
  return sub_231172048(&qword_254153BC8, type metadata accessor for AccountSidebarContentConfigurationModel, (uint64_t)&protocol conformance descriptor for AccountSidebarContentConfigurationModel);
}

uint64_t sub_2311E3308()
{
  return sub_231172048(&qword_254153BC0, type metadata accessor for AccountSidebarContentConfigurationModel, (uint64_t)&protocol conformance descriptor for AccountSidebarContentConfigurationModel);
}

uint64_t *initializeBufferWithCopyOfBuffer for AccountSidebarContentConfigurationModel(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_231263328();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_231261E94();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      sub_2311735E0(0, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  }
  return v4;
}

uint64_t destroy for AccountSidebarContentConfigurationModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_231263328();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = sub_231261E94();
  v8 = *(_QWORD *)(v7 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  return result;
}

_QWORD *initializeWithCopy for AccountSidebarContentConfigurationModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_231263328();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_231261E94();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    sub_2311735E0(0, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  return a1;
}

_QWORD *assignWithCopy for AccountSidebarContentConfigurationModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_231263328();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_231261E94();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    sub_2311735E0(0, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  return a1;
}

_OWORD *initializeWithTake for AccountSidebarContentConfigurationModel(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_231263328();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_231261E94();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    sub_2311735E0(0, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  return a1;
}

_QWORD *assignWithTake for AccountSidebarContentConfigurationModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_231263328();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_231261E94();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    sub_2311735E0(0, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  return a1;
}

uint64_t getEnumTagSinglePayload for AccountSidebarContentConfigurationModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2311E3A54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_231263328();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      sub_2311735E0(0, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for AccountSidebarContentConfigurationModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2311E3B18(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_231263328();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      sub_2311735E0(0, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_2311E3BCC()
{
  unint64_t v0;
  unint64_t v1;

  sub_231263328();
  if (v0 <= 0x3F)
  {
    sub_2311735E0(319, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_2311E3C80()
{
  return type metadata accessor for AccountSidebarContentConfigurationProvider(0);
}

uint64_t type metadata accessor for AccountSidebarContentConfigurationProvider(uint64_t a1)
{
  return sub_231187940(a1, (uint64_t *)&unk_2541533C0);
}

void sub_2311E3C9C()
{
  unint64_t v0;
  unint64_t v1;

  sub_2311735E0(319, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
  {
    sub_2311735E0(319, &qword_2541533A0, type metadata accessor for FetchedAccountIcon, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t *sub_2311E3D68(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_231261E94();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
    v10 = v9;
  }
  return a1;
}

void sub_2311E3DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_231261E94();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

}

uint64_t sub_2311E3E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  v6 = sub_231261E94();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v9 = v8;
  return a1;
}

uint64_t sub_2311E3E98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  v6 = sub_231261E94();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  return a1;
}

uint64_t sub_2311E3F00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_231261E94();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_2311E3F5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v6 = sub_231261E94();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  return a1;
}

uint64_t sub_2311E3FC0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2311E3FCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_231261E94();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_2311E4048()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2311E4054(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_231261E94();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_2311E40CC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_231261E94();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AccountSidebarContentConfigurationModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2311E418C + 4 * byte_231268C19[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2311E41C0 + 4 * byte_231268C14[v4]))();
}

uint64_t sub_2311E41C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2311E41C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2311E41D0);
  return result;
}

uint64_t sub_2311E41DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2311E41E4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2311E41E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2311E41F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccountSidebarContentConfigurationModel.CodingKeys()
{
  return &type metadata for AccountSidebarContentConfigurationModel.CodingKeys;
}

unint64_t sub_2311E4210()
{
  unint64_t result;

  result = qword_255EB9660;
  if (!qword_255EB9660)
  {
    result = MEMORY[0x2348D8544](&unk_231268EA0, &type metadata for AccountSidebarContentConfigurationModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB9660);
  }
  return result;
}

unint64_t sub_2311E4258()
{
  unint64_t result;

  result = qword_254153BA8;
  if (!qword_254153BA8)
  {
    result = MEMORY[0x2348D8544](&unk_231268E10, &type metadata for AccountSidebarContentConfigurationModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254153BA8);
  }
  return result;
}

unint64_t sub_2311E42A0()
{
  unint64_t result;

  result = qword_254153BA0;
  if (!qword_254153BA0)
  {
    result = MEMORY[0x2348D8544](&unk_231268E38, &type metadata for AccountSidebarContentConfigurationModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254153BA0);
  }
  return result;
}

uint64_t sub_2311E42E4(uint64_t a1)
{
  uint64_t v1;

  return sub_2311E2A8C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_2311E42EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255EB9670)
  {
    sub_2311735E0(255, &qword_255EB9668, (uint64_t (*)(uint64_t))MEMORY[0x24BE48D90], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    sub_2311889D8();
    v0 = sub_2312642A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255EB9670);
  }
}

uint64_t sub_2311E4370()
{
  uint64_t v0;
  uint64_t v1;

  sub_2311E42EC();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_2311E43D0(uint64_t a1)
{
  sub_2311E42EC();
  return sub_2311E2BE4(a1);
}

void sub_2311E440C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255EB9678)
  {
    sub_2312626A4();
    sub_2311889D8();
    v0 = sub_231264C48();
    if (!v1)
      atomic_store(v0, &qword_255EB9678);
  }
}

uint64_t sub_2311E4478()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2311E44A4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_2311E4510;
  return sub_2311E08C0(a1, v4, v5, v6);
}

uint64_t sub_2311E4510()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2311E4558(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;

  sub_2311735E0(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a2, a1, v6);
  return a2;
}

void sub_2311E45B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254154688)
  {
    v0 = sub_231264B34();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254154688);
  }
}

uint64_t sub_2311E460C(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  id v47;
  void *v48;
  void *v49;
  id v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(uint64_t);
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  id v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (*v100)(void);
  char *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  void *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;

  v144 = a2;
  v3 = type metadata accessor for HealthRecordsGeneratorContext();
  v4 = *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64);
  v136 = *(_QWORD *)(v3 - 8);
  v137 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v134 = (uint64_t)&v100 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, &qword_254153F28, (uint64_t (*)(uint64_t))MEMORY[0x24BEE7758], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v110 = (uint64_t)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v108 = (char *)&v100 - v9;
  v10 = sub_231261FC0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v100 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311EA494();
  v107 = v14;
  v105 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v104 = (char *)&v100 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v101 = (char *)&v100 - v17;
  sub_2311EA50C();
  v111 = v18;
  v113 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v106 = (char *)&v100 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311EA584();
  v114 = v20;
  v115 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v109 = (char *)&v100 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311EA638();
  v118 = v22;
  v121 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v112 = (char *)&v100 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311EA7A4();
  v120 = v24;
  v122 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v116 = (char *)&v100 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311EA934();
  v125 = v26;
  v126 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v117 = (char *)&v100 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311EA9AC();
  v128 = v28;
  v129 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v123 = (char *)&v100 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311EAB48();
  v131 = v30;
  v133 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v124 = (char *)&v100 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311EAC2C();
  v33 = *(_QWORD *)(v32 - 8);
  v138 = v32;
  v139 = v33;
  MEMORY[0x24BDAC7A8](v32);
  v130 = (char *)&v100 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311EACD8();
  v140 = v35;
  v142 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v132 = (char *)&v100 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311EADA0();
  v141 = v37;
  v143 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v135 = (char *)&v100 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_23126226C();
  v40 = *(_QWORD *)(v39 - 8);
  v147 = v39;
  v103 = *(_QWORD *)(v40 + 64);
  v148 = v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v102 = (char *)&v100 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v41);
  v151 = (char *)&v100 - v43;
  v100 = *(void (**)(void))(v44 + 16);
  v100();
  sub_2312628A8();
  v45 = (void *)sub_231262884();
  v150 = a1;
  sub_23126220C();
  sub_231173410(&v152, v153);
  v46 = (void *)sub_231262194();
  v47 = objc_msgSend(v46, sel_profileIdentifier);

  v145 = sub_23126286C();
  sub_231173434((uint64_t)&v152);
  sub_231261C78();
  swift_allocObject();
  v149 = sub_231261C6C();
  v146 = swift_allocObject();
  *(_QWORD *)(v146 + 16) = MEMORY[0x24BEE4B00];
  v48 = (void *)sub_231262884();
  sub_23126220C();
  sub_231173410(&v152, v153);
  v49 = (void *)sub_231262194();
  v50 = objc_msgSend(v49, sel_profileIdentifier);

  v119 = sub_231262848();
  sub_231173434((uint64_t)&v152);
  v152 = sub_231263A78();
  sub_2311C3E60();
  sub_231172048(&qword_254154518, (uint64_t (*)(uint64_t))sub_2311C3E60, MEMORY[0x24BDB9AF8]);
  v51 = v101;
  sub_231263E98();
  swift_release();
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BE47510], v10);
  sub_231261FB4();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v52 = sub_231263AF0();
  v53 = (uint64_t)v108;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v108, 1, 1, v52);
  v54 = v105;
  v55 = v107;
  (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v104, v51, v107);
  v56 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE7758];
  sub_2311BA688(v53, v110, &qword_254153F28, (uint64_t (*)(uint64_t))MEMORY[0x24BEE7758]);
  sub_231172048(&qword_2541542A0, (uint64_t (*)(uint64_t))sub_2311EA494, MEMORY[0x24BDB9770]);
  v57 = v106;
  sub_231263BF8();
  sub_231189628(v53, &qword_254153F28, v56);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v51, v55);
  sub_2311C9938(0, &qword_254153128, &qword_2541531B0, 0x24BDD3D10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_231172048(&qword_254154100, (uint64_t (*)(uint64_t))sub_2311EA50C, MEMORY[0x24BE48538]);
  v58 = v146;
  swift_retain();
  v59 = v109;
  v60 = v111;
  v61 = v57;
  sub_231263E80();
  v62 = v58;
  swift_release();
  (*(void (**)(char *, uint64_t))(v113 + 8))(v61, v60);
  sub_231263CF4();
  sub_2311D3598();
  sub_231172048(&qword_2541541C0, (uint64_t (*)(uint64_t))sub_2311EA584, MEMORY[0x24BDB96C0]);
  sub_231172048(&qword_254152E28, (uint64_t (*)(uint64_t))sub_2311D3598, MEMORY[0x24BDB9970]);
  v63 = v112;
  v64 = v114;
  sub_231263F28();
  (*(void (**)(char *, uint64_t))(v115 + 8))(v59, v64);
  v65 = v102;
  v66 = v147;
  ((void (*)(char *, char *, uint64_t))v100)(v102, v151, v147);
  v67 = v148;
  v68 = (*(unsigned __int8 *)(v148 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v148 + 80);
  v69 = (char *)swift_allocObject();
  v70 = v127;
  v71 = v145;
  *((_QWORD *)v69 + 2) = v127;
  *((_QWORD *)v69 + 3) = v71;
  *((_QWORD *)v69 + 4) = v62;
  (*(void (**)(char *, char *, uint64_t))(v67 + 32))(&v69[v68], v65, v66);
  sub_2311EA888(0);
  sub_2311EA86C(0);
  sub_231172048(&qword_254154478, (uint64_t (*)(uint64_t))sub_2311EA638, MEMORY[0x24BDB98F0]);
  sub_231172048(&qword_254152EA0, (uint64_t (*)(uint64_t))sub_2311EA86C, MEMORY[0x24BDB9AF8]);
  swift_retain();
  swift_retain();
  v72 = v116;
  v73 = v118;
  sub_231263EE0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v121 + 8))(v63, v73);
  sub_231172048(&qword_2541543B8, (uint64_t (*)(uint64_t))sub_2311EA7A4, MEMORY[0x24BDB98F0]);
  v74 = v117;
  v75 = v120;
  sub_231263EC8();
  (*(void (**)(char *, uint64_t))(v122 + 8))(v72, v75);
  v76 = v134;
  sub_231178454(v150, v134, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
  v77 = *(unsigned __int8 *)(v136 + 80);
  v78 = (v77 + 24) & ~v77;
  v136 = v77 | 7;
  v79 = (v137 + v78 + 7) & 0xFFFFFFFFFFFFFFF8;
  v80 = swift_allocObject();
  *(_QWORD *)(v80 + 16) = v70;
  sub_2311B1454(v76, v80 + v78, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
  *(_QWORD *)(v80 + v79) = v149;
  sub_2311EAA40();
  sub_231172048(&qword_254154398, (uint64_t (*)(uint64_t))sub_2311EA934, MEMORY[0x24BDB98D8]);
  swift_retain();
  v81 = v123;
  v82 = v125;
  sub_231263EBC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v126 + 8))(v74, v82);
  sub_2311EAC10(0);
  sub_231172048(&qword_254154350, (uint64_t (*)(uint64_t))sub_2311EA9AC, MEMORY[0x24BDB98C8]);
  sub_231172048(&qword_254152EE0, (uint64_t (*)(uint64_t))sub_2311EAC10, MEMORY[0x24BDB9AF8]);
  v83 = v124;
  v84 = v128;
  sub_231263E8C();
  (*(void (**)(char *, uint64_t))(v129 + 8))(v81, v84);
  sub_231178454(v150, v76, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
  v85 = (v77 + 32) & ~v77;
  v86 = swift_allocObject();
  v87 = v70;
  v88 = v144;
  *(_QWORD *)(v86 + 16) = v70;
  *(_QWORD *)(v86 + 24) = v88;
  sub_2311B1454(v76, v86 + v85, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
  sub_231171FD8(0, (unint64_t *)&qword_254155638, MEMORY[0x24BE47F58], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  v89 = MEMORY[0x24BDB9740];
  sub_231172048(&qword_254154250, (uint64_t (*)(uint64_t))sub_2311EAB48, MEMORY[0x24BDB9740]);
  v90 = v88;
  v91 = v130;
  v92 = v131;
  sub_231263EBC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v133 + 8))(v83, v92);
  *(_QWORD *)(swift_allocObject() + 16) = v87;
  sub_231187D64();
  sub_231172048(&qword_254154340, (uint64_t (*)(uint64_t))sub_2311EAC2C, MEMORY[0x24BDB98C8]);
  sub_231172048(&qword_254152F30, (uint64_t (*)(uint64_t))sub_231187D64, MEMORY[0x24BDB9AF8]);
  v93 = v132;
  v94 = v138;
  sub_231263E8C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v139 + 8))(v91, v94);
  v152 = MEMORY[0x24BEE4AF8];
  sub_231172048(&qword_254154290, (uint64_t (*)(uint64_t))sub_2311EACD8, v89);
  v95 = v135;
  v96 = v140;
  sub_231263E5C();
  (*(void (**)(char *, uint64_t))(v142 + 8))(v93, v96);
  sub_231172048(&qword_2541540B0, (uint64_t (*)(uint64_t))sub_2311EADA0, MEMORY[0x24BDB95A8]);
  v97 = v141;
  v98 = sub_231263E38();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v143 + 8))(v95, v97);
  (*(void (**)(char *, uint64_t))(v148 + 8))(v151, v147);
  swift_release();
  return v98;
}

uint64_t sub_2311E551C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  char v31;
  char v32;
  int v33;
  uint64_t v34;
  void (*v35)(unint64_t, uint64_t);
  uint64_t v36;
  void *v37;
  _QWORD *v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t j;
  uint64_t k;
  void *v59;
  uint64_t v60;
  uint64_t result;
  uint64_t v62;
  unint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  unint64_t i;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76[3];

  v64 = a3;
  v6 = sub_231263B5C();
  v65 = *(_QWORD *)(v6 - 8);
  v66 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v68 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_231261E94();
  v74 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  isUniquelyReferenced_nonNull_native = sub_231263AA8();
  v72 = a1;
  v67 = sub_231263A90();
  v63 = isUniquelyReferenced_nonNull_native >> 62;
  if (isUniquelyReferenced_nonNull_native >> 62)
    goto LABEL_30;
  v12 = *(_QWORD *)((isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (i = isUniquelyReferenced_nonNull_native; v12; i = isUniquelyReferenced_nonNull_native)
  {
    a2 += 2;
    v70 = v12;
    v71 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
    v3 = 4;
    v73 = v10;
    while (1)
    {
      v16 = v71
          ? (id)MEMORY[0x2348D7CE0](v3 - 4, isUniquelyReferenced_nonNull_native)
          : *(id *)(isUniquelyReferenced_nonNull_native + 8 * v3);
      v17 = v16;
      v18 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
        break;
      v19 = objc_msgSend(v16, sel_UUID);
      sub_231261E7C();

      v20 = sub_231263A9C();
      swift_beginAccess();
      if (v20)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v75 = (_QWORD *)*a2;
        v21 = (uint64_t)v75;
        *a2 = 0x8000000000000000;
        v23 = sub_231242D0C((uint64_t)v10);
        v24 = *(_QWORD *)(v21 + 16);
        v25 = (v22 & 1) == 0;
        v26 = v24 + v25;
        if (__OFADD__(v24, v25))
          goto LABEL_28;
        v27 = v22;
        if (*(_QWORD *)(v21 + 24) >= v26)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_23124BEDC();
        }
        else
        {
          sub_23124B230(v26, isUniquelyReferenced_nonNull_native);
          v28 = sub_231242D0C((uint64_t)v73);
          if ((v27 & 1) != (v29 & 1))
            goto LABEL_65;
          v23 = v28;
        }
        isUniquelyReferenced_nonNull_native = i;
        v38 = v75;
        if ((v27 & 1) != 0)
        {
          v13 = v75[7];
          v14 = 8 * v23;

          *(_QWORD *)(v13 + v14) = v20;
          v10 = v73;
        }
        else
        {
          v75[(v23 >> 6) + 8] |= 1 << v23;
          v10 = v73;
          (*(void (**)(unint64_t, char *, uint64_t))(v74 + 16))(v38[6] + *(_QWORD *)(v74 + 72) * v23, v73, v8);
          *(_QWORD *)(v38[7] + 8 * v23) = v20;
          v39 = v38[2];
          v40 = __OFADD__(v39, 1);
          v41 = v39 + 1;
          if (v40)
            goto LABEL_29;
          v38[2] = v41;
        }
        *a2 = (uint64_t)v38;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v74 + 8))(v10, v8);
      }
      else
      {
        swift_bridgeObjectRetain();
        v30 = sub_231242D0C((uint64_t)v10);
        v32 = v31;
        swift_bridgeObjectRelease();
        if ((v32 & 1) != 0)
        {
          v33 = swift_isUniquelyReferenced_nonNull_native();
          v34 = *a2;
          v75 = (_QWORD *)*a2;
          *a2 = 0x8000000000000000;
          if (!v33)
          {
            sub_23124BEDC();
            v34 = (uint64_t)v75;
          }
          v35 = *(void (**)(unint64_t, uint64_t))(v74 + 8);
          v35(*(_QWORD *)(v34 + 48) + *(_QWORD *)(v74 + 72) * v30, v8);
          v36 = (uint64_t)v75;
          v37 = *(void **)(v75[7] + 8 * v30);
          sub_2311E9D6C(v30, (uint64_t)v75);
          *a2 = v36;
          swift_bridgeObjectRelease();
        }
        else
        {
          v37 = 0;
          v35 = *(void (**)(unint64_t, uint64_t))(v74 + 8);
        }
        v42 = (uint64_t)v73;
        v35((unint64_t)v73, v8);
        v10 = (char *)v42;

      }
      v15 = v70;
      swift_endAccess();

      ++v3;
      if (v18 == v15)
        goto LABEL_31;
    }
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    swift_bridgeObjectRetain_n();
    v12 = sub_2312649A8();
    swift_bridgeObjectRelease();
  }
LABEL_31:
  swift_bridgeObjectRelease();
  v43 = v68;
  sub_231263B08();
  swift_bridgeObjectRetain_n();
  v44 = v67;
  swift_bridgeObjectRetain_n();
  v45 = sub_231263B50();
  v46 = isUniquelyReferenced_nonNull_native;
  v47 = sub_2312643F0();
  if (!os_log_type_enabled((os_log_t)v45, v47))
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    goto LABEL_39;
  }
  v48 = swift_slowAlloc();
  v3 = swift_slowAlloc();
  v76[0] = v3;
  *(_DWORD *)v48 = 136446466;
  v75 = (_QWORD *)type metadata accessor for UDCSnippetGenerator(0);
  sub_2311EA480(0);
  v49 = sub_2312640B4();
  v75 = (_QWORD *)sub_2311CBDE4(v49, v50, v76);
  sub_231264750();
  swift_bridgeObjectRelease();
  *(_WORD *)(v48 + 12) = 2082;
  if (v63)
  {
    swift_bridgeObjectRetain();
    v51 = (uint64_t *)sub_2312649A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v51 = *(uint64_t **)((i & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v44 >> 62)
    goto LABEL_62;
  v52 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFF8) + 0x10);
  v53 = (uint64_t)v51 + v52;
  if (__OFADD__(v51, v52))
  {
LABEL_64:
    __break(1u);
LABEL_65:
    result = sub_231264BA0();
    __break(1u);
  }
  else
  {
    while (1)
    {
      v75 = (_QWORD *)v53;
      v54 = sub_231264B28();
      v75 = (_QWORD *)sub_2311CBDE4(v54, v55, v76);
      sub_231264750();
      swift_bridgeObjectRelease_n();
      v56 = i;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v46 = v56;
      _os_log_impl(&dword_23116F000, (os_log_t)v45, v47, "[%{public}s] Generating FeedItems for %{public}s UDC concepts", (uint8_t *)v48, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348D85EC](v3, -1, -1);
      MEMORY[0x2348D85EC](v48, -1, -1);

LABEL_39:
      (*(void (**)(char *, uint64_t))(v65 + 8))(v43, v66);
      v76[0] = v46;
      v51 = v76;
      sub_231210DF4(v44);
      v45 = v76[0];
      v76[0] = MEMORY[0x24BEE4AF8];
      if ((unint64_t)v45 >> 62)
      {
        if (v45 < 0)
          v51 = (uint64_t *)v45;
        else
          v51 = (uint64_t *)(v45 & 0xFFFFFFFFFFFFFF8);
        swift_bridgeObjectRetain();
        v48 = sub_2312649A8();
        if (!v48)
          goto LABEL_60;
      }
      else
      {
        v48 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v48)
          goto LABEL_60;
      }
      if (v48 >= 1)
        break;
      __break(1u);
LABEL_62:
      swift_bridgeObjectRetain();
      v62 = sub_2312649A8();
      swift_bridgeObjectRelease();
      v53 = (uint64_t)v51 + v62;
      if (__OFADD__(v51, v62))
        goto LABEL_64;
    }
    if ((v45 & 0xC000000000000001) != 0)
    {
      for (j = 0; j != v48; ++j)
      {
        MEMORY[0x2348D7CE0](j, v45);
        objc_opt_self();
        if (swift_dynamicCastObjCClass())
        {
          MEMORY[0x2348D75E4]();
          if (*(_QWORD *)((v76[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v76[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_23126424C();
          sub_231264264();
          sub_231264210();
        }
        else
        {
          swift_unknownObjectRelease();
        }
      }
    }
    else
    {
      for (k = 0; k != v48; ++k)
      {
        v59 = *(void **)(v45 + 8 * k + 32);
        objc_opt_self();
        if (swift_dynamicCastObjCClass())
        {
          MEMORY[0x2348D75E4](v59);
          if (*(_QWORD *)((v76[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v76[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_23126424C();
          sub_231264264();
          sub_231264210();
        }
      }
    }
LABEL_60:
    swift_bridgeObjectRelease();
    v60 = v76[0];
    result = swift_bridgeObjectRelease();
    *v64 = v60;
  }
  return result;
}

uint64_t sub_2311E5D14(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD v8[2];

  sub_2311D4E38();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[1] = *a1;
  sub_2311C9938(0, &qword_254153128, &qword_2541531B0, 0x24BDD3D10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_2311D3630();
  sub_2312641C8();
  sub_2311889D8();
  sub_231263CB8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_2311E5E04@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  unint64_t v28;
  char *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;

  v42 = a3;
  v43 = a5;
  v45 = a2;
  v48 = a6;
  sub_2311EA888(0);
  v47 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v37 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, &qword_255EB96D8, v10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v38 = *(_QWORD *)(v11 - 8);
  v39 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v37 - v12;
  sub_2311EB3F0(0);
  v40 = *(_QWORD *)(v14 - 8);
  v41 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23126226C();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  MEMORY[0x24BDAC7A8](v17);
  sub_2311EB40C();
  v46 = v20;
  v44 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *a1;
  swift_beginAccess();
  v24 = *(_QWORD *)(a4 + 16);
  objc_opt_self();
  v25 = swift_dynamicCastObjCClass();
  if (v25)
  {
    v26 = v25;
    swift_bridgeObjectRetain();
    v27 = v23;
    v49 = sub_231262FF8();
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))((char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), v43, v17);
    v28 = (*(unsigned __int8 *)(v18 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    v29 = (char *)swift_allocObject();
    *((_QWORD *)v29 + 2) = v45;
    *((_QWORD *)v29 + 3) = v26;
    *((_QWORD *)v29 + 4) = v24;
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(&v29[v28], (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), v17);
    sub_2311EB4A0();
    sub_231172048(&qword_254152F90, (uint64_t (*)(uint64_t))sub_2311EB4A0, MEMORY[0x24BDB9AF8]);
    swift_bridgeObjectRetain();
    v30 = v27;
    sub_231263E80();
    swift_release();
    swift_release();
    sub_231172048(&qword_255EB96F8, (uint64_t (*)(uint64_t))sub_2311EB40C, MEMORY[0x24BDB96C0]);
    v31 = v46;
    v32 = sub_231263E38();

    (*(void (**)(char *, uint64_t))(v44 + 8))(v22, v31);
  }
  else
  {
    sub_2311EA8A4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v37, 1, 1, v33);
    swift_bridgeObjectRetain();
    sub_231263D84();
    sub_2311889D8();
    v34 = v39;
    sub_231263D54();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v13, v34);
    sub_231172048(&qword_255EB96F0, (uint64_t (*)(uint64_t))sub_2311EB3F0, MEMORY[0x24BDBA1D0]);
    v35 = v41;
    v32 = sub_231263E38();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v16, v35);
  }
  result = swift_bridgeObjectRelease();
  *v48 = v32;
  return result;
}

uint64_t sub_2311E61D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  char *v47;
  uint64_t v48;
  char *v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  __int16 v71;

  v68 = sub_23126292C();
  v63 = *(_QWORD *)(v68 - 8);
  v8 = MEMORY[0x24BDAC7A8](v68);
  v65 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v55 - v10;
  v12 = sub_23126283C();
  v13 = *(_QWORD *)(v12 - 8);
  v66 = v12;
  v67 = v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v64 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v61 = (char *)&v55 - v16;
  v17 = sub_23126217C();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v59 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v62 = (char *)&v55 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v71 = 0;
  v27 = MEMORY[0x24BEE4AF8];
  v69 = MEMORY[0x24BEE4AF8];
  v70 = MEMORY[0x24BEE4AF8];
  v28 = *(_QWORD *)(a1 + 16);
  v60 = v24;
  if (!v28)
    goto LABEL_9;
  v56 = v11;
  v57 = (char *)&v55 - v25;
  v55 = v26;
  v58 = v18;
  sub_2311EA888(0);
  v30 = *(_QWORD *)(v29 - 8);
  v31 = a1 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
  v32 = *(_QWORD *)(v30 + 72);
  v33 = swift_bridgeObjectRetain();
  do
  {
    v34 = (void *)MEMORY[0x2348D810C](v33);
    sub_2311E8980(v31, (_BYTE *)&v71 + 1, &v71, &v70, v3, a3, a2, &v69);
    if (v4)
    {
      objc_autoreleasePoolPop(v34);
      goto LABEL_13;
    }
    objc_autoreleasePoolPop(v34);
    v31 += v32;
    --v28;
  }
  while (v28);
  swift_bridgeObjectRelease();
  if ((v71 & 0x100) == 0)
  {
    v27 = MEMORY[0x24BEE4AF8];
    v18 = v58;
LABEL_9:
    v35 = v67;
    v41 = v68;
    goto LABEL_10;
  }
  v35 = v67;
  v36 = (uint64_t)v61;
  (*(void (**)(char *, _QWORD, uint64_t))(v67 + 104))(v61, *MEMORY[0x24BE48FC8], v66);
  v37 = v63;
  v38 = (uint64_t)v56;
  v39 = v68;
  (*(void (**)(char *, _QWORD, uint64_t))(v63 + 104))(v56, *MEMORY[0x24BE490B8], v68);
  v40 = (void *)sub_231262230();
  sub_2311E95C4(v36, v38);
  v18 = v58;

  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v38, v39);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v61, v66);
  v52 = v60;
  (*(void (**)(uint64_t, char *))(v18 + 16))(v55, v57);
  v27 = sub_2311DCA10(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v54 = *(_QWORD *)(v27 + 16);
  v53 = *(_QWORD *)(v27 + 24);
  if (v54 >= v53 >> 1)
    v27 = sub_2311DCA10(v53 > 1, v54 + 1, 1, v27);
  *(_QWORD *)(v27 + 16) = v54 + 1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v18 + 32))(v27+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(_QWORD *)(v18 + 72) * v54, v55, v52);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v57, v52);
  v41 = v68;
LABEL_10:
  v42 = (uint64_t)v64;
  v43 = (uint64_t)v65;
  if (v71 != 1)
    return v70;
  (*(void (**)(char *, _QWORD, uint64_t))(v35 + 104))(v64, *MEMORY[0x24BE48FC0], v66);
  v44 = v63;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v63 + 104))(v43, *MEMORY[0x24BE490B8], v41);
  v45 = (void *)sub_231262230();
  sub_2311E95C4(v42, v43);
  if (!v4)
  {

    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v68);
    (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v42, v66);
    v47 = v59;
    v48 = v60;
    v49 = v62;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v59, v62, v60);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v27 = sub_2311DCA10(0, *(_QWORD *)(v27 + 16) + 1, 1, v27);
    v51 = *(_QWORD *)(v27 + 16);
    v50 = *(_QWORD *)(v27 + 24);
    if (v51 >= v50 >> 1)
      v27 = sub_2311DCA10(v50 > 1, v51 + 1, 1, v27);
    *(_QWORD *)(v27 + 16) = v51 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))(v27+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(_QWORD *)(v18 + 72) * v51, v47, v48);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v49, v48);
    return v70;
  }

  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v68);
  (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v42, v66);
LABEL_13:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2311E674C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint8_t *v22;
  id v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t result;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  sub_2311735E0(0, &qword_255EB96A0, (uint64_t (*)(uint64_t))sub_2311EAA40, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v5 = v4;
  v39 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v31 - v6;
  sub_2311EB150(0);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_231263B5C();
  v37 = *(_QWORD *)(v13 - 8);
  v38 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a1;
  sub_231263B08();
  v17 = v16;
  v18 = v16;
  v19 = sub_231263B50();
  v20 = sub_2312643D8();
  if (os_log_type_enabled(v19, v20))
  {
    v36 = a2;
    v21 = swift_slowAlloc();
    v35 = v9;
    v22 = (uint8_t *)v21;
    v32 = swift_slowAlloc();
    v40 = v32;
    v41 = (uint64_t)v16;
    v33 = v10;
    *(_DWORD *)v22 = 136446210;
    v31 = v22 + 4;
    v23 = v16;
    sub_2311889D8();
    sub_231264B88();
    v34 = v5;
    v24 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_2312647B0();
    swift_unknownObjectRelease();
    v25 = sub_2312640CC();
    v41 = sub_2311CBDE4(v25, v26, &v40);
    v10 = v33;
    sub_231264750();
    v5 = v34;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23116F000, v19, v20, "Error making feed item for record, hiding from UI: %{public}s", v22, 0xCu);
    v27 = v32;
    a2 = v36;
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v27, -1, -1);
    v28 = v22;
    v9 = v35;
    MEMORY[0x2348D85EC](v28, -1, -1);
  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v38);
  v41 = MEMORY[0x24BEE4AF8];
  v42 = MEMORY[0x24BEE4AF8];
  v43 = MEMORY[0x24BEE4AF8];
  v44 = MEMORY[0x24BEE4AF8];
  sub_2311EAA40();
  sub_231263D84();
  sub_2311889D8();
  sub_231263D54();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v7, v5);
  sub_231172048(&qword_255EB96B0, (uint64_t (*)(uint64_t))sub_2311EB150, MEMORY[0x24BDBA1D0]);
  v29 = sub_231263E38();
  result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  *a2 = v29;
  return result;
}

void sub_2311E6AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  void *v11;
  uint64_t v12;

  v11 = (void *)MEMORY[0x2348D810C]();
  sub_2311E7C28(a6, a1, a3, a4, a5, &v12);
  objc_autoreleasePoolPop(v11);
}

uint64_t sub_2311E6B64@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  _QWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  sub_2311885A8();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_231263B5C();
  v37 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  sub_231263B08();
  v13 = v12;
  v14 = v12;
  v15 = sub_231263B50();
  v16 = sub_2312643D8();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v35 = v6;
    v18 = v17;
    v33 = swift_slowAlloc();
    v39 = v33;
    *(_DWORD *)v18 = 136446466;
    v38 = sub_2311EA480(0);
    sub_23118852C(0, &qword_255EB9698, (void (*)(uint64_t))sub_2311EA480);
    v34 = v9;
    v19 = sub_2312640B4();
    v36 = a2;
    v38 = sub_2311CBDE4(v19, v20, &v39);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2082;
    v32[1] = v18 + 14;
    v38 = (uint64_t)v12;
    v21 = v12;
    v22 = v12;
    sub_2311889D8();
    sub_231264B88();
    v23 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_2312647B0();
    swift_unknownObjectRelease();
    v24 = sub_2312640B4();
    v26 = v25;

    v27 = v24;
    a2 = v36;
    v38 = sub_2311CBDE4(v27, v26, &v39);
    sub_231264750();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23116F000, v15, v16, "[%{public}s] Unable to compute desired difference for commit: %{public}s", (uint8_t *)v18, 0x16u);
    v28 = v33;
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v28, -1, -1);
    v29 = v18;
    v6 = v35;
    MEMORY[0x2348D85EC](v29, -1, -1);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v34);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v9);
  }
  v38 = MEMORY[0x24BEE4AF8];
  sub_231171FD8(0, (unint64_t *)&qword_254155638, MEMORY[0x24BE47F58], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_231263D84();
  sub_231172048((unint64_t *)&qword_254153048, (uint64_t (*)(uint64_t))sub_2311885A8, MEMORY[0x24BDB9DF8]);
  v30 = sub_231263E38();
  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v30;
  return result;
}

uint64_t sub_2311E6EF0(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 1;
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return 1;
  if (v2 >= v3)
    v4 = a1;
  else
    v4 = a2;
  if (v2 >= v3)
    v5 = a2;
  else
    v5 = a1;
  v32 = v4;
  v33 = v4 + 56;
  v6 = -1 << *(_BYTE *)(v4 + 32);
  if (-v6 < 64)
    v7 = ~(-1 << -(char)v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v4 + 56);
  v31 = (unint64_t)(63 - v6) >> 6;
  v9 = v5 + 56;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
  v11 = 0;
  while (1)
  {
    while (1)
    {
      v12 = v11;
      if (!v8)
        break;
      v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v14 = v13 | (v11 << 6);
      if (*(_QWORD *)(v5 + 16))
        goto LABEL_31;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_50;
    }
    if (v15 >= v31)
      goto LABEL_48;
    v16 = *(_QWORD *)(v33 + 8 * v15);
    ++v11;
    if (!v16)
    {
      v11 = v12 + 2;
      if (v12 + 2 >= v31)
        goto LABEL_48;
      v16 = *(_QWORD *)(v33 + 8 * v11);
      if (!v16)
      {
        v11 = v12 + 3;
        if (v12 + 3 >= v31)
          goto LABEL_48;
        v16 = *(_QWORD *)(v33 + 8 * v11);
        if (!v16)
          break;
      }
    }
LABEL_30:
    v8 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
    if (*(_QWORD *)(v5 + 16))
    {
LABEL_31:
      v18 = (uint64_t *)(*(_QWORD *)(v32 + 48) + 16 * v14);
      v20 = *v18;
      v19 = v18[1];
      sub_231264C00();
      swift_bridgeObjectRetain();
      sub_231264114();
      v21 = sub_231264C3C();
      v22 = -1 << *(_BYTE *)(v5 + 32);
      v23 = v21 & ~v22;
      if (((*(_QWORD *)(v9 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) != 0)
      {
        v24 = *(_QWORD *)(v5 + 48);
        v25 = (_QWORD *)(v24 + 16 * v23);
        v26 = *v25 == v20 && v25[1] == v19;
        if (v26 || (sub_231264B58() & 1) != 0)
        {
LABEL_44:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v30 = 0;
LABEL_45:
          sub_23118EEB4();
          return v30;
        }
        v27 = ~v22;
        while (1)
        {
          v23 = (v23 + 1) & v27;
          if (((*(_QWORD *)(v9 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
            break;
          v28 = (_QWORD *)(v24 + 16 * v23);
          v29 = *v28 == v20 && v28[1] == v19;
          if (v29 || (sub_231264B58() & 1) != 0)
            goto LABEL_44;
        }
      }
      result = swift_bridgeObjectRelease();
    }
  }
  v17 = v12 + 4;
  if (v12 + 4 >= v31)
  {
LABEL_48:
    swift_bridgeObjectRelease();
    v30 = 1;
    goto LABEL_45;
  }
  v16 = *(_QWORD *)(v33 + 8 * v17);
  if (v16)
  {
    v11 = v12 + 4;
    goto LABEL_30;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v31)
      goto LABEL_48;
    v16 = *(_QWORD *)(v33 + 8 * v11);
    ++v17;
    if (v16)
      goto LABEL_30;
  }
LABEL_50:
  __break(1u);
  return result;
}

uint64_t sub_2311E71D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC13HealthRecords19UDCSnippetGenerator_domain;
  v2 = sub_2312621F4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_231178498(v0 + OBJC_IVAR____TtC13HealthRecords19UDCSnippetGenerator_context, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
  return swift_deallocClassInstance();
}

uint64_t sub_2311E7240()
{
  return type metadata accessor for UDCSnippetGenerator(0);
}

uint64_t type metadata accessor for UDCSnippetGenerator(uint64_t a1)
{
  return sub_231187940(a1, (uint64_t *)&unk_254151E00);
}

uint64_t sub_2311E725C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC13HealthRecords19UDCSnippetGenerator_domain;
  v4 = sub_2312621F4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void sub_2311E72A4(unint64_t *a1@<X0>, void *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  unint64_t v9;
  void *v10;

  v9 = *a1;
  v10 = (void *)MEMORY[0x2348D810C]();
  sub_2311E7320(v9, a2, a3, a4, a5);
  objc_autoreleasePoolPop(v10);
}

uint64_t sub_2311E7320@<X0>(unint64_t a1@<X0>, void *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t result;
  id v31;
  void *v32;
  id v33;
  unint64_t v34;
  char v35;
  void *v36;
  void (*v37)(char *, uint64_t);
  id v38;
  id v39;
  void *v40;
  id v41;
  unint64_t v42;
  id v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t (*v52)(uint64_t);
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  void *v65;
  id v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  NSObject *v81;
  os_log_type_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  id v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  uint64_t v106;
  id v107;

  v105 = a2;
  v98 = a4;
  v103 = a5;
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2311735E0(0, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v8);
  v100 = (uint64_t)&v91 - v9;
  v10 = type metadata accessor for UserDomainConceptFeedItemData();
  MEMORY[0x24BDAC7A8](v10);
  v101 = (uint64_t)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_231262B60();
  v96 = *(_QWORD *)(v12 - 8);
  v97 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v95 = (char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, (unint64_t *)&qword_254151918, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], v7);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v91 - v15;
  sub_2311789C4();
  v18 = MEMORY[0x24BDAC7A8](v17);
  v102 = (uint64_t)&v91 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v91 - v20;
  v22 = sub_231261E94();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_231263B5C();
  v26 = *(_QWORD *)(v99 - 8);
  MEMORY[0x24BDAC7A8](v99);
  v28 = (char *)&v91 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_2312649A8();
    if (result)
      goto LABEL_3;
LABEL_22:
    swift_bridgeObjectRelease();
    sub_231263B08();
    v80 = v105;
    v81 = sub_231263B50();
    v82 = sub_2312643D8();
    if (os_log_type_enabled(v81, v82))
    {
      v83 = swift_slowAlloc();
      v105 = (id)swift_slowAlloc();
      v107 = v105;
      *(_DWORD *)v83 = 136446466;
      v106 = sub_2311EA480(0);
      sub_23118852C(0, &qword_255EB9698, (void (*)(uint64_t))sub_2311EA480);
      v84 = sub_2312640B4();
      v106 = sub_2311CBDE4(v84, v85, (uint64_t *)&v107);
      sub_231264750();
      swift_bridgeObjectRelease();
      *(_WORD *)(v83 + 12) = 2082;
      v86 = sub_2312645C4();
      v106 = sub_2311CBDE4(v86, v87, (uint64_t *)&v107);
      sub_231264750();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23116F000, v81, v82, "[%{public}s] Unable to create a UDC Feed Item (No records associated) with concept: %{public}s", (uint8_t *)v83, 0x16u);
      v88 = v105;
      swift_arrayDestroy();
      MEMORY[0x2348D85EC](v88, -1, -1);
      MEMORY[0x2348D85EC](v83, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v99);
    v89 = v103;
    sub_2311EA8A4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 56))(v89, 1, 1, v90);
  }
  v29 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v29)
    goto LABEL_22;
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
    v31 = (id)MEMORY[0x2348D7CE0](0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    v31 = *(id *)(a1 + 32);
  }
  v32 = v31;
  swift_bridgeObjectRelease();
  v33 = objc_msgSend(v105, sel_UUID);
  sub_231261E7C();

  if (*(_QWORD *)(a3 + 16) && (v34 = sub_231242D0C((uint64_t)v25), (v35 & 1) != 0))
  {
    v36 = *(void **)(*(_QWORD *)(a3 + 56) + 8 * v34);
    v37 = *(void (**)(char *, uint64_t))(v23 + 8);
    v38 = v36;
    v37(v25, v22);
    v93 = objc_msgSend(v38, sel_listType);
    v94 = v38;
    v39 = objc_msgSend(v38, sel_linkCollection);
    if (v39)
    {
      v40 = v39;
      v41 = objc_msgSend(v39, sel_links);

      sub_231178AD0(0, &qword_255EB9700);
      v42 = sub_2312641F8();

      v43 = v105;
      v44 = v104;
      v92 = sub_2311EB730(v42, v43);
      v46 = v45;
      v104 = v44;
      swift_bridgeObjectRelease();

      LODWORD(v91) = 0;
      HIDWORD(v91) = v46 & 1;
    }
    else
    {
      v92 = 0;
      v91 = 0x100000000;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
    v92 = 0;
    v93 = 0;
    v94 = 0;
    v91 = 0x100000001;
  }
  v47 = v100;
  sub_2311C9938(0, &qword_2541534C0, (unint64_t *)&qword_2541531A0, 0x24BDD3C88, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  v49 = v48;
  v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56);
  v50(v21, 1, 1, v48);
  v107 = v32;
  sub_231178AD0(0, &qword_254153188);
  if ((sub_231262DA0() & 1) != 0)
  {
    sub_231178498((uint64_t)v21, (uint64_t (*)(_QWORD))sub_2311789C4);
    v50(v21, 1, 1, v49);
    v51 = sub_231261EAC();
    v52 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8];
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v16, 1, 1, v51);
    v53 = v95;
    sub_231262B54();
    v54 = sub_2312640E4();
    v99 = v55;
    v100 = v54;
    (*(void (**)(char *, uint64_t))(v96 + 8))(v53, v97);
    sub_231189628((uint64_t)v16, (unint64_t *)&qword_254151918, v52);
    v56 = 0;
    v57 = 0;
  }
  else
  {
    if (sub_2312645A0())
    {
      sub_231178AD0(0, (unint64_t *)&qword_2541531A0);
      v58 = v32;
      v59 = v102;
      sub_231263FAC();
      sub_231178498((uint64_t)v21, (uint64_t (*)(_QWORD))sub_2311789C4);
      v50((char *)v59, 0, 1, v49);
      v60 = v59;
      v32 = v58;
      sub_2311B1454(v60, (uint64_t)v21, (uint64_t (*)(_QWORD))sub_2311789C4);
    }
    v61 = sub_231264594();
    v99 = v62;
    v100 = v61;
    v63 = v32;
    v56 = sub_2311EB5FC((uint64_t)v32);
    v57 = v64;

  }
  v65 = v32;
  v66 = objc_msgSend(v32, sel_meaningfulDate, v91);
  if (v66)
  {
    v67 = v66;
    sub_231261E28();

    v68 = sub_231261E40();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v47, 0, 1, v68);
  }
  else
  {
    v69 = sub_231261E40();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v47, 1, 1, v69);
  }
  v70 = v47;
  v71 = (uint64_t)v21;
  v72 = (uint64_t)v21;
  v73 = v102;
  sub_231178454(v72, v102, (uint64_t (*)(_QWORD))sub_2311789C4);
  v74 = v105;
  v75 = v101;
  sub_231204D0C(v74, v70, v73, v100, v99, v56, v57, (uint64_t)v93, v101, v91, v92, BYTE4(v91));

  sub_231178498(v71, (uint64_t (*)(_QWORD))sub_2311789C4);
  sub_2311EA8A4();
  v77 = v76;
  v78 = *(int *)(v76 + 48);
  v79 = v103;
  sub_2311B1454(v75, v103, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptFeedItemData);
  *(_QWORD *)(v79 + v78) = a1;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56))(v79, 0, 1, v77);
  return swift_bridgeObjectRetain();
}

void sub_2311E7C28(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, void *a5@<X6>, _QWORD *a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  uint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  id v28;
  id v29;
  unint64_t v30;
  __int128 v31;
  void (*v32)(char *, uint64_t);
  uint64_t inited;
  void *v34;
  void *v35;
  _QWORD *v36;
  id v37;
  id v38;
  char *v39;
  unint64_t v40;
  _QWORD *v41;
  __int128 v42;
  uint64_t v43;
  void *v44;
  void *v45;
  uint64_t v46;
  id v47;
  id v48;
  char *v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  uint64_t *v55;
  uint64_t v56;
  _QWORD *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  void *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  _QWORD *v70;
  void *v71;
  uint64_t v72;
  _QWORD *v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  _QWORD *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  unint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t *v100;
  _QWORD *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  _QWORD *v105;
  char *v106;
  uint64_t v107;
  unint64_t v108;
  __int128 v109;
  __int128 v110;
  __int128 v111[3];
  uint64_t v112;

  v96 = a2;
  v87 = a6;
  v88 = a5;
  v90 = a4;
  v94 = a3;
  sub_2311735E0(0, &qword_254152BD8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47570], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v89 = (uint64_t)&v84 - v8;
  v9 = sub_231261FE4();
  v85 = *(_QWORD *)(v9 - 8);
  v86 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v84 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = (_QWORD *)sub_231261E94();
  v11 = *(v101 - 1);
  MEMORY[0x24BDAC7A8](v101);
  v13 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2312626E0();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v106 = (char *)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v103 = (char *)&v84 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v84 - v20;
  sub_23126220C();
  v22 = *MEMORY[0x24BE48E00];
  v23 = *(_QWORD **)(v15 + 104);
  v104 = v15;
  v105 = v23;
  ((void (*)(char *, uint64_t, uint64_t))v23)(v21, v22, v14);
  v112 = a1;
  v100 = (uint64_t *)sub_231262230();
  v24 = (void *)sub_231261FF0();
  v25 = sub_2312626C8();
  v95 = v26;
  v27 = 0x800000023126B610;
  v102 = v14;
  v98 = v13;
  v99 = v11;
  v92 = (_QWORD *)0x800000023126B610;
  v93 = (unint64_t)"testScrollAllRecordsTimeline";
  if (v24)
  {
    *(_QWORD *)&v110 = 0x656C69666F72505BLL;
    *((_QWORD *)&v110 + 1) = 0xE90000000000003ALL;
    v91 = v25;
    v28 = v24;
    v29 = objc_msgSend(v28, sel_identifier);
    sub_231261E7C();

    sub_231261E58();
    (*(void (**)(char *, _QWORD *))(v11 + 8))(v13, v101);
    sub_231264144();
    swift_bridgeObjectRelease();
    sub_231264144();

    v14 = v102;
    v27 = *((_QWORD *)&v110 + 1);
    v30 = v110;
  }
  else
  {
    v30 = 0xD000000000000013;
  }
  *(_QWORD *)&v110 = v30;
  *((_QWORD *)&v110 + 1) = v27;
  sub_231264144();

  swift_bridgeObjectRelease();
  v31 = v110;
  v32 = *(void (**)(char *, uint64_t))(v104 + 8);
  v32(v21, v14);
  v104 = type metadata accessor for FeedItemContextChangeGenerator();
  inited = swift_initStackObject();
  v95 = (_QWORD *)(inited + 16);
  sub_2311789AC(v111, inited + 16);
  *(_OWORD *)(inited + 56) = v31;
  v100 = (uint64_t *)inited;
  sub_23126220C();
  ((void (*)(char *, _QWORD, uint64_t))v105)(v103, *MEMORY[0x24BE48DD0], v14);
  v34 = (void *)sub_231262230();
  v35 = (void *)sub_231261FF0();
  v36 = (_QWORD *)sub_2312626C8();
  if (v35)
  {
    *(_QWORD *)&v109 = 0x656C69666F72505BLL;
    *((_QWORD *)&v109 + 1) = 0xE90000000000003ALL;
    v92 = v36;
    v37 = v35;
    v38 = objc_msgSend(v37, sel_identifier);
    v39 = v98;
    sub_231261E7C();

    sub_231261E58();
    (*(void (**)(char *, _QWORD *))(v99 + 8))(v39, v101);
    sub_231264144();
    swift_bridgeObjectRelease();
    sub_231264144();

    v14 = v102;
    v41 = (_QWORD *)*((_QWORD *)&v109 + 1);
    v40 = v109;
  }
  else
  {
    v40 = 0xD000000000000013;
    v41 = v92;
  }
  *(_QWORD *)&v109 = v40;
  *((_QWORD *)&v109 + 1) = v41;
  sub_231264144();

  swift_bridgeObjectRelease();
  v42 = v109;
  v32(v103, v14);
  v43 = swift_initStackObject();
  v92 = (_QWORD *)(v43 + 16);
  sub_2311789AC(&v110, v43 + 16);
  *(_OWORD *)(v43 + 56) = v42;
  v103 = (char *)v43;
  sub_23126220C();
  ((void (*)(char *, _QWORD, uint64_t))v105)(v106, *MEMORY[0x24BE48E20], v14);
  v44 = (void *)sub_231262230();
  v45 = (void *)sub_231261FF0();
  v46 = sub_2312626C8();
  if (v45)
  {
    v107 = 0x656C69666F72505BLL;
    v108 = 0xE90000000000003ALL;
    v105 = (_QWORD *)v46;
    v47 = v45;
    v48 = objc_msgSend(v47, sel_identifier);
    v49 = v98;
    sub_231261E7C();

    sub_231261E58();
    (*(void (**)(char *, _QWORD *))(v99 + 8))(v49, v101);
    sub_231264144();
    swift_bridgeObjectRelease();
    sub_231264144();

    v14 = v102;
    v50 = v107;
    v51 = v108;
  }
  else
  {
    v51 = v93 | 0x8000000000000000;
    v50 = 0xD000000000000013;
  }
  v107 = v50;
  v108 = v51;
  sub_231264144();

  swift_bridgeObjectRelease();
  v52 = v107;
  v53 = v108;
  v32(v106, v14);
  v54 = (_QWORD *)swift_initStackObject();
  v101 = v54 + 2;
  sub_2311789AC(&v109, (uint64_t)(v54 + 2));
  v104 = v52;
  v54[7] = v52;
  v54[8] = v53;
  v102 = v53;
  v55 = v100;
  v56 = v100[5];
  v106 = (char *)v100[6];
  v57 = v95;
  v105 = sub_231173410(v95, v56);
  sub_231173410(v57, v55[5]);
  v58 = (void *)sub_2312621D0();
  sub_2312621C4();

  v59 = v97;
  v60 = sub_23126421C();
  if (v59)
  {
    swift_release();
    swift_release();
LABEL_15:
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  v98 = (char *)v60;
  v106 = (char *)v54;
  swift_bridgeObjectRelease();
  v61 = v103;
  v63 = *((_QWORD *)v103 + 5);
  v62 = *((_QWORD *)v103 + 6);
  v105 = 0;
  v99 = v62;
  v64 = v92;
  sub_231173410(v92, v63);
  sub_231173410(v64, *((_QWORD *)v61 + 5));
  v65 = (void *)sub_2312621D0();
  sub_2312621C4();

  v66 = v105;
  v67 = sub_23126421C();
  if (v66)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    goto LABEL_15;
  }
  v68 = v67;
  swift_bridgeObjectRelease();
  v107 = (uint64_t)v98;
  sub_231210C9C(v68);
  v105 = (_QWORD *)v107;
  v69 = v106;
  v70 = v101;
  sub_231173410(v101, *((_QWORD *)v106 + 5));
  sub_231173410(v70, *((_QWORD *)v69 + 5));
  v71 = (void *)sub_2312621D0();
  sub_2312621C4();

  v72 = sub_23126421C();
  swift_bridgeObjectRelease();
  v107 = (uint64_t)v105;
  sub_231210C9C(v72);
  v73 = (_QWORD *)v107;
  v74 = (void *)sub_231262230();
  v75 = v89;
  sub_2311E863C(v88, v74, v89);

  v77 = v85;
  v76 = v86;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v85 + 48))(v75, 1, v86) == 1)
  {
    swift_release();
    swift_release();
    swift_release();
    sub_231189628(v75, &qword_254152BD8, (uint64_t (*)(uint64_t))MEMORY[0x24BE47570]);
  }
  else
  {
    v78 = v84;
    (*(void (**)(char *, uint64_t, uint64_t))(v77 + 32))(v84, v75, v76);
    sub_2311735E0(0, &qword_254153218, (uint64_t (*)(uint64_t))MEMORY[0x24BE47570], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v79 = (*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
    v80 = swift_allocObject();
    *(_OWORD *)(v80 + 16) = xmmword_231265AC0;
    (*(void (**)(unint64_t, char *, uint64_t))(v77 + 16))(v80 + v79, v78, v76);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v73 = sub_2311DCB88(0, v73[2] + 1, 1, v73);
    v82 = v73[2];
    v81 = v73[3];
    if (v82 >= v81 >> 1)
      v73 = sub_2311DCB88((_QWORD *)(v81 > 1), v82 + 1, 1, v73);
    v73[2] = v82 + 1;
    v83 = &v73[5 * v82];
    v83[4] = v80;
    v83[5] = 0;
    v83[6] = 0;
    v83[7] = 0;
    *((_BYTE *)v83 + 64) = 64;
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v77 + 8))(v78, v76);
  }
  *v87 = v73;
}

void sub_2311E863C(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v32 = type metadata accessor for UDCSnippetGeneratorData(0);
  MEMORY[0x24BDAC7A8](v32);
  v33 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2312626E0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_231261E94();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    goto LABEL_6;
  v31 = a3;
  v15 = a1;
  v16 = (void *)sub_231261FF0();
  if (!v16)
  {

    a3 = v31;
LABEL_6:
    v26 = sub_231261FE4();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(a3, 1, 1, v26);
    return;
  }
  v17 = v16;
  v30 = a2;
  v18 = v15;
  v19 = objc_msgSend(v16, sel_identifier);

  sub_231261E7C();
  v20 = sub_231261E58();
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v34 = v20;
  v35 = v22;
  sub_231264144();
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BE48E00], v7);
  sub_2312626D4();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_231264144();
  swift_bridgeObjectRelease();
  sub_231178AD0(0, (unint64_t *)&qword_2541556D0);
  v23 = v18;
  v24 = (uint64_t)v33;
  sub_231263FAC();
  sub_231261E34();
  sub_231261C78();
  swift_allocObject();
  sub_231261C6C();
  sub_231172048(&qword_254152008, type metadata accessor for UDCSnippetGeneratorData, (uint64_t)&unk_231268FF0);
  v25 = v36;
  sub_231261C60();
  if (v25)
  {
    sub_231178498(v24, type metadata accessor for UDCSnippetGeneratorData);
    swift_bridgeObjectRelease();
    swift_release();

  }
  else
  {
    swift_release();
    v27 = v30;
    v28 = v31;
    sub_231261FCC();

    sub_231178498(v24, type metadata accessor for UDCSnippetGeneratorData);
    v29 = sub_231261FE4();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 0, 1, v29);
  }
}

uint64_t sub_2311E8980(uint64_t a1, _BYTE *a2, _BYTE *a3, unint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t *a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  void *v41;
  void (*v42)(char *, _BYTE *);
  unsigned __int8 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  unint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  _BYTE *v66;
  void *v67;
  uint64_t v68;
  char *v69;
  void (*v70)(unint64_t, char *, uint64_t);
  unint64_t *v71;
  unint64_t v72;
  char v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, _BYTE *);
  void (*v80)(char *, char *, _BYTE *);
  char *v81;
  unint64_t *v82;
  uint64_t v83;
  char *v84;
  unint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  _BYTE *v90;
  uint64_t v91;
  _BYTE *v92;
  void (*v93)(unint64_t, uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  unint64_t v98;

  v82 = a8;
  v95 = a7;
  v96 = a6;
  v85 = a4;
  v86 = a5;
  v90 = a3;
  v92 = a2;
  v97 = (char *)a1;
  sub_2311735E0(0, &qword_2541554F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v8);
  v87 = (uint64_t)&v78 - v9;
  v91 = sub_23126217C();
  v89 = *(_QWORD *)(v91 - 8);
  v10 = MEMORY[0x24BDAC7A8](v91);
  v88 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v81 = (char *)&v78 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v93 = (void (*)(unint64_t, uint64_t, uint64_t))((char *)&v78 - v14);
  sub_2311C9938(0, (unint64_t *)&qword_2541534D0, &qword_2541531B0, 0x24BDD3D10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  v16 = v15;
  v17 = *((_QWORD *)v15 - 1);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v84 = (char *)&v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v78 - v20;
  sub_2311EA888(0);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v78 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311EA8A4();
  v26 = v25;
  v27 = *(_QWORD *)(v25 - 8);
  v28 = MEMORY[0x24BDAC7A8](v25);
  v94 = (uint64_t)&v78 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&v78 - v31;
  MEMORY[0x24BDAC7A8](v30);
  v34 = (char *)&v78 - v33;
  sub_231178454((uint64_t)v97, (uint64_t)v24, (uint64_t (*)(_QWORD))sub_2311EA888);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v24, 1, v26) == 1)
    return sub_231178498((uint64_t)v24, (uint64_t (*)(_QWORD))sub_2311EA888);
  v36 = *(int *)(v26 + 48);
  sub_2311B1454((uint64_t)v24, (uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptFeedItemData);
  v37 = *(_QWORD *)&v24[v36];
  v83 = v36;
  *(_QWORD *)&v34[v36] = v37;
  v38 = *(int *)(v26 + 48);
  v97 = v34;
  sub_231178454((uint64_t)v34, (uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptFeedItemData);
  *(_QWORD *)&v32[v38] = v37;
  v39 = type metadata accessor for UserDomainConceptFeedItemData();
  v40 = &v32[*(int *)(v39 + 20)];
  v80 = *(void (**)(char *, char *, _BYTE *))(v17 + 16);
  v80(v21, v40, v16);
  sub_231178498((uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptFeedItemData);
  v41 = (void *)sub_231263F88();
  v42 = *(void (**)(char *, _BYTE *))(v17 + 8);
  v42(v21, v16);
  v43 = objc_msgSend(v41, sel_isLowUtility);

  if ((v43 & 1) != 0 || (sub_231178AD0(0, &qword_254153160), (sub_231264408() & 1) != 0))
    *v92 = 1;
  v92 = v16;
  v44 = *(int *)(v26 + 48);
  v45 = (uint64_t)v97;
  v46 = v94;
  sub_231178454((uint64_t)v97, v94, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptFeedItemData);
  *(_QWORD *)(v46 + v44) = *(_QWORD *)(v45 + v83);
  sub_231172048(&qword_255EB96C0, (uint64_t (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData, (uint64_t)&unk_231269840);
  sub_231172048(&qword_255EB96C8, (uint64_t (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData, (uint64_t)&unk_2312697F0);
  v47 = sub_2312631C0();
  sub_231178498(v46, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptFeedItemData);
  v48 = v98;
  v49 = (uint64_t)v93;
  if ((v47 & 1) != 0)
    *v90 = 1;
  v50 = (void *)sub_231262230();
  v51 = (uint64_t)v97;
  sub_2311E9040((uint64_t)v97, v96, v50, v49);

  if (v48)
  {
    v52 = v51;
  }
  else
  {
    v53 = v85;
    v54 = *v85;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v53 = v54;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v54 = sub_2311DCA10(0, *(_QWORD *)(v54 + 16) + 1, 1, v54);
      *v53 = v54;
    }
    v57 = *(_QWORD *)(v54 + 16);
    v56 = *(_QWORD *)(v54 + 24);
    v79 = v42;
    if (v57 >= v56 >> 1)
    {
      v54 = sub_2311DCA10(v56 > 1, v57 + 1, 1, v54);
      *v53 = v54;
    }
    *(_QWORD *)(v54 + 16) = v57 + 1;
    v58 = v89;
    v98 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
    v90 = *(_BYTE **)(v89 + 72);
    v59 = v54 + v98 + (_QWORD)v90 * v57;
    v60 = v91;
    v93 = *(void (**)(unint64_t, uint64_t, uint64_t))(v89 + 32);
    v93(v59, v49, v91);
    v61 = *(int *)(v26 + 48);
    v62 = (uint64_t)v97;
    v63 = v94;
    sub_231178454((uint64_t)v97, v94, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptFeedItemData);
    v64 = v83;
    *(_QWORD *)(v63 + v61) = *(_QWORD *)(v62 + v83);
    v65 = v84;
    v66 = v92;
    v80(v84, (char *)(v63 + *(int *)(v39 + 20)), v92);
    sub_231178498(v63, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptFeedItemData);
    v67 = (void *)sub_231263F88();
    v79(v65, v66);
    v68 = v87;
    sub_2311EEAC4(v67, *(_QWORD *)(v62 + v64), v95, v96, v87);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v68, 1, v60) == 1)
    {

      sub_231189628(v68, &qword_2541554F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0]);
    }
    else
    {
      v69 = v81;
      v70 = (void (*)(unint64_t, char *, uint64_t))v93;
      v93((unint64_t)v81, v68, v60);
      (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v88, v69, v60);
      v71 = v82;
      v72 = *v82;
      v73 = swift_isUniquelyReferenced_nonNull_native();
      *v71 = v72;
      if ((v73 & 1) == 0)
      {
        v72 = sub_2311DCA10(0, *(_QWORD *)(v72 + 16) + 1, 1, v72);
        *v71 = v72;
      }
      v75 = *(_QWORD *)(v72 + 16);
      v74 = *(_QWORD *)(v72 + 24);
      if (v75 >= v74 >> 1)
      {
        v72 = sub_2311DCA10(v74 > 1, v75 + 1, 1, v72);
        *v71 = v72;
      }
      *(_QWORD *)(v72 + 16) = v75 + 1;
      v76 = v72 + v98;
      v77 = v91;
      v70(v76 + v75 * (_QWORD)v90, v88, v91);

      (*(void (**)(char *, uint64_t))(v58 + 8))(v69, v77);
    }
    v52 = (uint64_t)v97;
  }
  return sub_231178498(v52, (uint64_t (*)(_QWORD))sub_2311EA8A4);
}

uint64_t sub_2311E9040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(char *, _QWORD);
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char v58[32];
  uint64_t v59;

  v57 = a2;
  v53 = a4;
  v6 = sub_231261CCC();
  MEMORY[0x24BDAC7A8](v6);
  v46 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_231261E40();
  v54 = *(_QWORD *)(v8 - 8);
  v55 = v8;
  v9 = MEMORY[0x24BDAC7A8](v8);
  v45 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v44 = (char *)&v44 - v11;
  v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2311735E0(0, (unint64_t *)&qword_254154938, v13, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v14);
  v52 = (uint64_t)&v44 - v15;
  sub_2311735E0(0, &qword_255EB8138, (uint64_t (*)(uint64_t))MEMORY[0x24BE47DF8], v12);
  MEMORY[0x24BDAC7A8](v16);
  v56 = (char *)&v44 - v17;
  v18 = sub_231261FA8();
  v48 = *(_QWORD *)(v18 - 8);
  v49 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v50 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_2312626E0();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], v12);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v44 - v25;
  v27 = type metadata accessor for UserDomainConceptFeedItemData();
  sub_2311C9938(0, (unint64_t *)&qword_2541534D0, &qword_2541531B0, 0x24BDD3D10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  v28 = (void *)sub_231263F88();
  v29 = objc_msgSend(v28, sel_UUID);

  sub_231261E7C();
  v30 = sub_231261E94();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v26, 0, 1, v30);
  (*(void (**)(char *, _QWORD, uint64_t))(v21 + 104))(v23, *MEMORY[0x24BE48E00], v20);
  v31 = a1 + *(int *)(v27 + 48);
  v51 = a3;
  v47 = sub_23126325C();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  sub_231189628((uint64_t)v26, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
  sub_231172048(&qword_255EB96D0, (uint64_t (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData, (uint64_t)&unk_2312698A8);
  v32 = v59;
  sub_231261C60();
  if (v32)
    return swift_bridgeObjectRelease();
  v57 = 0;
  v59 = v31;
  type metadata accessor for ConceptLatestValueFeedItemViewController();
  (*(void (**)(char *, _QWORD, uint64_t))(v48 + 104))(v50, *MEMORY[0x24BE47460], v49);
  v34 = v51;
  sub_231262038();
  v35 = v52;
  sub_2311BA688(a1 + *(int *)(v27 + 28), v52, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  v37 = v54;
  v36 = v55;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v35, 1, v55) == 1)
  {
    v38 = sub_231262428();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v56, 1, 1, v38);
  }
  else
  {
    v39 = v44;
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(v44, v35, v36);
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v45, v39, v36);
    sub_231261CC0();
    v40 = v56;
    sub_231262410();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v36);
    v41 = sub_231262428();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v40, 0, 1, v41);
  }
  sub_231262104();
  swift_bridgeObjectRetain();
  sub_2312620BC();
  sub_2312620F8();
  v42 = sub_2311EB16C();
  v43 = (uint64_t (*)(char *, _QWORD))sub_23126214C();
  sub_2311BAB64(v42);
  result = v43(v58, 0);
  if ((*(_BYTE *)(v59 + 8) & 1) == 0)
    return sub_231262164();
  return result;
}

uint64_t sub_2311E95C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_BYTE *, _QWORD);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[32];
  uint64_t v25[4];

  v4 = sub_231261FA8();
  v21 = *(_QWORD *)(v4 - 8);
  v22 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for NavigationFeedItemData();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23126283C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v9, a1, v10);
  v11 = &v9[*(int *)(v7 + 20)];
  v12 = sub_23126292C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v11, a2, v12);
  v13 = (void *)sub_231262230();
  v23 = a1;
  v20 = sub_231263148();

  sub_231172048(&qword_255EB96B8, (uint64_t (*)(uint64_t))type metadata accessor for NavigationFeedItemData, (uint64_t)&protocol conformance descriptor for NavigationFeedItemData);
  v14 = v25[3];
  sub_231261C60();
  if (v14)
  {
    sub_231178498((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for NavigationFeedItemData);
    return swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for NavigationFeedItemViewController();
    (*(void (**)(char *, _QWORD, uint64_t))(v21 + 104))(v6, *MEMORY[0x24BE47408], v22);
    sub_231262230();
    sub_231262038();
    sub_2312620BC();
    sub_231262830();
    sub_231262164();
    v16 = sub_231262338();
    v18 = v17;
    v19 = (void (*)(_BYTE *, _QWORD))sub_23126214C();
    sub_2312519E4(v25, v16, v18);
    swift_bridgeObjectRelease();
    v19(v24, 0);
    return sub_231178498((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for NavigationFeedItemData);
  }
}

uint64_t sub_2311E9830(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_2311EBF54(0, &qword_254153208, MEMORY[0x24BEE3520]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = &v9[-v6];
  sub_231173410(a1, a1[3]);
  sub_2311EBEB0();
  sub_231264C60();
  v9[15] = 0;
  sub_2311C9938(0, &qword_2541534B8, (unint64_t *)&qword_2541556D0, 0x24BDD3E90, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  sub_2311EBEF4(&qword_2541534A8, MEMORY[0x24BDD2060]);
  sub_231264AF8();
  if (!v1)
  {
    type metadata accessor for UDCSnippetGeneratorData(0);
    v9[14] = 1;
    sub_231261E40();
    sub_231172048(&qword_2541518F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_231264AF8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_2311E99D4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;

  v24 = a2;
  v27 = sub_231261E40();
  v23 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v26 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311C9938(0, &qword_2541534B8, (unint64_t *)&qword_2541556D0, 0x24BDD3E90, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  v29 = v5;
  v25 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v28 = (char *)&v19 - v6;
  sub_2311EBF54(0, &qword_254153200, MEMORY[0x24BEE33E0]);
  v30 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v19 - v9;
  v11 = type metadata accessor for UDCSnippetGeneratorData(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231173410(a1, a1[3]);
  sub_2311EBEB0();
  sub_231264C54();
  if (v2)
    return sub_231173434((uint64_t)a1);
  v20 = v11;
  v21 = a1;
  v22 = v8;
  v15 = v25;
  v14 = v26;
  v16 = v27;
  v32 = 0;
  sub_2311EBEF4(&qword_2541534B0, MEMORY[0x24BDD2078]);
  v17 = v28;
  sub_231264A80();
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v13, v17, v29);
  v31 = 1;
  sub_231172048(&qword_2541518F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  sub_231264A80();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v30);
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(&v13[*(int *)(v20 + 20)], v14, v16);
  sub_231178454((uint64_t)v13, v24, type metadata accessor for UDCSnippetGeneratorData);
  sub_231173434((uint64_t)v21);
  return sub_231178498((uint64_t)v13, type metadata accessor for UDCSnippetGeneratorData);
}

uint64_t sub_2311E9CF4()
{
  sub_2311EBEB0();
  return sub_231264C6C();
}

uint64_t sub_2311E9D1C()
{
  sub_2311EBEB0();
  return sub_231264C78();
}

uint64_t sub_2311E9D44@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2311E99D4(a1, a2);
}

uint64_t sub_2311E9D58(_QWORD *a1)
{
  return sub_2311E9830(a1);
}

unint64_t sub_2311E9D6C(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  unint64_t v34;
  uint64_t v35;

  v4 = sub_231261E94();
  v35 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_2312647C8();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v34 = (result + 1) & v11;
      v12 = *(_QWORD *)(v35 + 72);
      v33 = *(void (**)(char *, unint64_t, uint64_t))(v35 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v33(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_231172048(&qword_254151860, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v18 = sub_231264000();
        result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v34)
        {
          if (v19 >= v34 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v22 = *(_QWORD *)(a2 + 48);
            result = v22 + v15 * a1;
            v8 = v14;
            if (v15 * a1 < v16 || (v12 = v15, result >= v22 + v16 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v23 = *(_QWORD *)(a2 + 56);
            v24 = (_QWORD *)(v23 + 8 * a1);
            v25 = (_QWORD *)(v23 + 8 * v10);
            if (a1 != v10 || (a1 = v10, v24 >= v25 + 1))
            {
              *v24 = *v25;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v34 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v26;
    v28 = (-1 << a1) - 1;
  }
  else
  {
    v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v28 = *v26;
    v27 = (-1 << a1) - 1;
  }
  *v26 = v28 & v27;
  v29 = *(_QWORD *)(a2 + 16);
  v30 = __OFSUB__(v29, 1);
  v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

_QWORD *sub_2311EA00C(uint64_t a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  _QWORD *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v3 = v2;
  v47 = *v2;
  v46 = sub_2312621DC();
  v43 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v44 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_2312621F4();
  v42 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v41 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for HealthRecordsGeneratorContext();
  v8 = MEMORY[0x24BDAC7A8](v40);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v34 - v11;
  v13 = sub_231263B5C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231263B08();
  sub_231178454(a1, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
  v17 = sub_231263B50();
  v18 = sub_2312643F0();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc();
    v39 = v3;
    v20 = v19;
    v35 = swift_slowAlloc();
    v49 = v35;
    *(_DWORD *)v20 = 136446466;
    v37 = v14;
    v48 = type metadata accessor for UDCSnippetGenerator(0);
    sub_2311EA480(0);
    v36 = v13;
    v21 = sub_2312640B4();
    v38 = a2;
    v48 = sub_2311CBDE4(v21, v22, &v49);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2082;
    sub_231178454((uint64_t)v12, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
    v23 = sub_2312640B4();
    v48 = sub_2311CBDE4(v23, v24, &v49);
    sub_231264750();
    swift_bridgeObjectRelease();
    a2 = v38;
    sub_231178498((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
    _os_log_impl(&dword_23116F000, v17, v18, "Init %{public}s for context %{public}s", (uint8_t *)v20, 0x16u);
    v25 = v35;
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v25, -1, -1);
    v26 = v20;
    v3 = v39;
    MEMORY[0x2348D85EC](v26, -1, -1);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v16, v36);
  }
  else
  {
    sub_231178498((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);

    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  sub_231178454(a1, (uint64_t)v3 + OBJC_IVAR____TtC13HealthRecords19UDCSnippetGenerator_context, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
  sub_231262230();
  sub_2311735E0(0, &qword_254155718, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v27 = sub_231261FA8();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_231265AC0;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v28 + 104))(v30 + v29, *MEMORY[0x24BE47460], v27);
  (*(void (**)(char *, _QWORD, uint64_t))(v43 + 104))(v44, *MEMORY[0x24BE47910], v46);
  v31 = v41;
  sub_2312621E8();
  (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))((uint64_t)v3 + OBJC_IVAR____TtC13HealthRecords19UDCSnippetGenerator_domain, v31, v45);
  v32 = sub_2311E460C(a1, a2);
  sub_231178498(a1, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
  v3[2] = v32;
  return v3;
}

uint64_t sub_2311EA480(uint64_t a1)
{
  return sub_23118852C(a1, &qword_254151ED8, (void (*)(uint64_t))type metadata accessor for UDCSnippetGenerator);
}

void sub_2311EA494()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541542A8)
  {
    sub_2311C3E60();
    sub_231172048(&qword_254154518, (uint64_t (*)(uint64_t))sub_2311C3E60, MEMORY[0x24BDB9AF8]);
    v0 = sub_231263C4C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541542A8);
  }
}

void sub_2311EA50C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254154108)
  {
    sub_2311EA494();
    sub_231172048(&qword_2541542A0, (uint64_t (*)(uint64_t))sub_2311EA494, MEMORY[0x24BDB9770]);
    v0 = sub_231263BEC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254154108);
  }
}

void sub_2311EA584()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541541C8)
  {
    sub_2311EA50C();
    sub_2311C9938(255, &qword_254153128, &qword_2541531B0, 0x24BDD3D10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_231172048(&qword_254154100, (uint64_t (*)(uint64_t))sub_2311EA50C, MEMORY[0x24BE48538]);
    v0 = sub_231263C1C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541541C8);
  }
}

void sub_2311EA638()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254154480)
  {
    sub_2311D3598();
    sub_2311EA700();
    sub_231172048(&qword_254152E28, (uint64_t (*)(uint64_t))sub_2311D3598, MEMORY[0x24BDB9970]);
    sub_231172048(&qword_254154130, (uint64_t (*)(uint64_t))sub_2311EA700, MEMORY[0x24BDB95F8]);
    v0 = sub_231263CA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254154480);
  }
}

void sub_2311EA700()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254154138)
  {
    sub_2311EA584();
    sub_2311889D8();
    sub_231172048(&qword_2541541C0, (uint64_t (*)(uint64_t))sub_2311EA584, MEMORY[0x24BDB96C0]);
    v0 = sub_231263C04();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254154138);
  }
}

void sub_2311EA7A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541543C0)
  {
    sub_2311EA86C(255);
    sub_2311EA638();
    sub_231172048(&qword_254152EA0, (uint64_t (*)(uint64_t))sub_2311EA86C, MEMORY[0x24BDB9AF8]);
    sub_231172048(&qword_254154478, (uint64_t (*)(uint64_t))sub_2311EA638, MEMORY[0x24BDB98F0]);
    v0 = sub_231263CA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541543C0);
  }
}

void sub_2311EA86C(uint64_t a1)
{
  sub_231193CA4(a1, &qword_254152EA8, (uint64_t (*)(uint64_t))sub_2311EA888, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
}

void sub_2311EA888(uint64_t a1)
{
  sub_2311735E0(a1, &qword_2541527B0, (uint64_t (*)(uint64_t))sub_2311EA8A4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

void sub_2311EA8A4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2541527A8)
  {
    type metadata accessor for UserDomainConceptFeedItemData();
    sub_2311C9938(255, &qword_254153118, &qword_254153188, 0x24BDD3B48, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2541527A8);
  }
}

void sub_2311EA934()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541543A0)
  {
    sub_2311EA7A4();
    sub_231172048(&qword_2541543B8, (uint64_t (*)(uint64_t))sub_2311EA7A4, MEMORY[0x24BDB98F0]);
    v0 = sub_231263C94();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541543A0);
  }
}

void sub_2311EA9AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254154358)
  {
    sub_2311EA934();
    sub_2311EAA40();
    sub_231172048(&qword_254154398, (uint64_t (*)(uint64_t))sub_2311EA934, MEMORY[0x24BDB98D8]);
    v0 = sub_231263C88();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254154358);
  }
}

void sub_2311EAA40()
{
  unint64_t TupleTypeMetadata;
  uint64_t v1;

  if (!qword_2541530D0)
  {
    MEMORY[0x24BDAC7A8](0);
    sub_2311735E0(255, &qword_254151870, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_2541530D0);
  }
}

void sub_2311EAB48()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254154258)
  {
    sub_2311EA9AC();
    sub_2311EAC10(255);
    sub_231172048(&qword_254154350, (uint64_t (*)(uint64_t))sub_2311EA9AC, MEMORY[0x24BDB98C8]);
    sub_231172048(&qword_254152EE0, (uint64_t (*)(uint64_t))sub_2311EAC10, MEMORY[0x24BDB9AF8]);
    v0 = sub_231263C40();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254154258);
  }
}

void sub_2311EAC10(uint64_t a1)
{
  sub_231193CA4(a1, &qword_254152EE8, (uint64_t (*)(uint64_t))sub_2311EAA40, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
}

void sub_2311EAC2C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254154348)
  {
    sub_2311EAB48();
    sub_231171FD8(255, (unint64_t *)&qword_254155638, MEMORY[0x24BE47F58], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    sub_231172048(&qword_254154250, (uint64_t (*)(uint64_t))sub_2311EAB48, MEMORY[0x24BDB9740]);
    v0 = sub_231263C88();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254154348);
  }
}

void sub_2311EACD8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254154298)
  {
    sub_2311EAC2C();
    sub_231187D64();
    sub_231172048(&qword_254154340, (uint64_t (*)(uint64_t))sub_2311EAC2C, MEMORY[0x24BDB98C8]);
    sub_231172048(&qword_254152F30, (uint64_t (*)(uint64_t))sub_231187D64, MEMORY[0x24BDB9AF8]);
    v0 = sub_231263C40();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254154298);
  }
}

void sub_2311EADA0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541540B8)
  {
    sub_2311EACD8();
    sub_231172048(&qword_254154290, (uint64_t (*)(uint64_t))sub_2311EACD8, MEMORY[0x24BDB9740]);
    v0 = sub_231263BE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541540B8);
  }
}

uint64_t sub_2311EAE18()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2311EAE3C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_2311E551C(a1, v2, a2);
}

uint64_t sub_2311EAE44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23126226C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_2311EAEC0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_23126226C() - 8) + 80);
  return sub_2311E5E04(a1, v2[2], v2[3], v2[4], (uint64_t)v2 + ((v5 + 40) & ~v5), a2);
}

uint64_t sub_2311EAF14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for HealthRecordsGeneratorContext();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 24) & ~v2);
  v4 = sub_23126226C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2311EAFB0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_QWORD *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  result = sub_2311E61D4(*a1, v2 + v7, *(_QWORD *)(v2 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFF8)));
  if (!v3)
  {
    *a2 = result;
    a2[1] = v9;
    a2[2] = v10;
    a2[3] = v11;
  }
  return result;
}

uint64_t sub_2311EB02C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for HealthRecordsGeneratorContext();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 32) & ~v2;

  v4 = v0 + v3;
  v5 = sub_23126226C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

  return swift_deallocObject();
}

void sub_2311EB0BC(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for HealthRecordsGeneratorContext() - 8) + 80);
  sub_2311E6AB8(*a1, a1[1], a1[2], a1[3], *(void **)(v2 + 24), v2 + ((v6 + 32) & ~v6));
  if (!v3)
    *a2 = v7;
}

uint64_t sub_2311EB124()
{
  return swift_deallocObject();
}

uint64_t sub_2311EB134@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2311E6B64(a1, a2);
}

uint64_t type metadata accessor for UDCSnippetGeneratorData(uint64_t a1)
{
  return sub_231187940(a1, qword_254152018);
}

void sub_2311EB150(uint64_t a1)
{
  sub_231193CA4(a1, &qword_255EB96A8, (uint64_t (*)(uint64_t))sub_2311EAA40, MEMORY[0x24BDBA1B0]);
}

uint64_t sub_2311EB16C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v20 = MEMORY[0x24BEE4B08];
  v0 = sub_23126232C();
  sub_2312519E4(&v19, v0, v1);
  swift_bridgeObjectRelease();
  v2 = sub_2312622D8();
  sub_2312519E4(&v19, v2, v3);
  swift_bridgeObjectRelease();
  type metadata accessor for UserDomainConceptFeedItemData();
  sub_2311C9938(0, (unint64_t *)&qword_2541534D0, &qword_2541531B0, 0x24BDD3D10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  v4 = (void *)sub_231263F88();
  v5 = objc_msgSend(v4, sel_isLowUtility);

  if ((v5 & 1) != 0 || (sub_231178AD0(0, &qword_254153160), (sub_231264408() & 1) != 0))
  {
    v6 = sub_231262368();
    sub_2312519E4(&v19, v6, v7);
    swift_bridgeObjectRelease();
  }
  sub_231172048(&qword_255EB96C0, (uint64_t (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData, (uint64_t)&unk_231269840);
  sub_231172048(&qword_255EB96C8, (uint64_t (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData, (uint64_t)&unk_2312697F0);
  if ((sub_2312631C0() & 1) != 0)
  {
    v8 = sub_23126235C();
    sub_2312519E4(&v19, v8, v9);
    swift_bridgeObjectRelease();
  }
  v10 = v20;
  sub_231171FD8(0, (unint64_t *)&qword_2541557B0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_231265570;
  swift_bridgeObjectRetain();
  *(_QWORD *)(inited + 32) = sub_231262368();
  *(_QWORD *)(inited + 40) = v12;
  *(_QWORD *)(inited + 48) = sub_23126235C();
  *(_QWORD *)(inited + 56) = v13;
  v14 = sub_23124E26C(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  v15 = sub_2311E6EF0(v14, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
  {
    v16 = sub_231262374();
    sub_2312519E4(&v19, v16, v17);
    swift_bridgeObjectRelease();
  }
  return v20;
}

void sub_2311EB3F0(uint64_t a1)
{
  sub_231193CA4(a1, &qword_255EB96E0, (uint64_t (*)(uint64_t))sub_2311EA888, MEMORY[0x24BDBA1B0]);
}

void sub_2311EB40C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255EB96E8)
  {
    sub_2311EB4A0();
    sub_2311EA888(255);
    sub_231172048(&qword_254152F90, (uint64_t (*)(uint64_t))sub_2311EB4A0, MEMORY[0x24BDB9AF8]);
    v0 = sub_231263C1C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255EB96E8);
  }
}

void sub_2311EB4A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254152F98)
  {
    sub_2311C9938(255, &qword_254153118, &qword_254153188, 0x24BDD3B48, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_2311889D8();
    v0 = sub_231263D0C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254152F98);
  }
}

uint64_t sub_2311EB52C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23126226C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_2311EB5A8(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_23126226C() - 8) + 80);
  sub_2311E72A4(a1, *(void **)(v2 + 24), *(_QWORD *)(v2 + 32), v2 + ((v5 + 40) & ~v5), a2);
}

uint64_t sub_2311EB5FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  _QWORD v10[4];

  if (!a1)
    return 0;
  sub_231264588();
  v2 = v1;
  if (v1)
  {
    sub_2312628A8();
    v3 = (void *)sub_231262884();
    sub_23126220C();
    sub_231173410(v10, v10[3]);
    v4 = (void *)sub_231262194();
    v5 = (void *)sub_231262890();

    sub_231173434((uint64_t)v10);
    v6 = objc_msgSend(v5, sel_ucumDisplayConverter);
    v7 = (void *)sub_23126406C();
    swift_bridgeObjectRelease();
    v8 = objc_msgSend(v6, sel_synonymForUCUMUnitString_, v7);

    v2 = sub_23126409C();
  }
  return v2;
}

uint64_t sub_2311EB730(unint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  _QWORD v20[2];
  unint64_t v21;
  uint64_t v22;
  id v23;

  v3 = v2;
  v23 = a2;
  v5 = sub_231261E94();
  v22 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v20 - v9;
  if (!(a1 >> 62))
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v11)
      goto LABEL_3;
    return 0;
  }
LABEL_13:
  swift_bridgeObjectRetain();
  v11 = sub_2312649A8();
  swift_bridgeObjectRelease();
  if (!v11)
    return 0;
LABEL_3:
  v12 = 0;
  v20[1] = v3;
  v21 = a1 & 0xC000000000000001;
  v13 = (id *)a1;
  while (1)
  {
    v14 = v21 ? (id)MEMORY[0x2348D7CE0](v12, a1) : *(id *)(a1 + 8 * v12 + 32);
    v15 = v14;
    v16 = objc_msgSend(v14, sel_targetUUID);
    sub_231261E7C();

    v17 = objc_msgSend(v23, sel_UUID);
    sub_231261E7C();

    v3 = sub_231261E70();
    a1 = *(_QWORD *)(v22 + 8);
    ((void (*)(char *, uint64_t))a1)(v8, v5);
    ((void (*)(char *, uint64_t))a1)(v10, v5);

    if ((v3 & 1) != 0)
      return v12;
    v18 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    ++v12;
    a1 = (unint64_t)v13;
    if (v18 == v11)
      return 0;
  }
}

uint64_t *sub_2311EB910(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_2311C9938(0, &qword_2541534B8, (unint64_t *)&qword_2541556D0, 0x24BDD3E90, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_231261E40();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_2311EB9D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_2311C9938(0, &qword_2541534B8, (unint64_t *)&qword_2541556D0, 0x24BDD3E90, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_231261E40();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_2311EBA54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_2311C9938(0, &qword_2541534B8, (unint64_t *)&qword_2541556D0, 0x24BDD3E90, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_231261E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_2311EBAF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_2311C9938(0, &qword_2541534B8, (unint64_t *)&qword_2541556D0, 0x24BDD3E90, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_231261E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_2311EBB8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_2311C9938(0, &qword_2541534B8, (unint64_t *)&qword_2541556D0, 0x24BDD3E90, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_231261E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_2311EBC28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_2311C9938(0, &qword_2541534B8, (unint64_t *)&qword_2541556D0, 0x24BDD3E90, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_231261E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_2311EBCC4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2311EBCD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  sub_2311C9938(0, &qword_2541534B8, (unint64_t *)&qword_2541556D0, 0x24BDD3E90, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_231261E40();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_2311EBD64()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2311EBD70(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  sub_2311C9938(0, &qword_2541534B8, (unint64_t *)&qword_2541556D0, 0x24BDD3E90, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_231261E40();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_2311EBE0C()
{
  unint64_t v0;
  unint64_t v1;

  sub_2311C9938(319, &qword_2541534B8, (unint64_t *)&qword_2541556D0, 0x24BDD3E90, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
  if (v0 <= 0x3F)
  {
    sub_231261E40();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

unint64_t sub_2311EBEB0()
{
  unint64_t result;

  result = qword_254151FF0;
  if (!qword_254151FF0)
  {
    result = MEMORY[0x2348D8544](&unk_2312690DC, &type metadata for UDCSnippetGeneratorData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254151FF0);
  }
  return result;
}

uint64_t sub_2311EBEF4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_2311C9938(255, &qword_2541534B8, (unint64_t *)&qword_2541556D0, 0x24BDD3E90, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDD2048]);
    result = MEMORY[0x2348D8544](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_2311EBF54(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_2311EBEB0();
    v7 = a3(a1, &type metadata for UDCSnippetGeneratorData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for UDCSnippetGeneratorData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2311EBFFC + 4 * byte_231268F45[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2311EC030 + 4 * byte_231268F40[v4]))();
}

uint64_t sub_2311EC030(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2311EC038(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2311EC040);
  return result;
}

uint64_t sub_2311EC04C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2311EC054);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2311EC058(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2311EC060(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UDCSnippetGeneratorData.CodingKeys()
{
  return &type metadata for UDCSnippetGeneratorData.CodingKeys;
}

unint64_t sub_2311EC080()
{
  unint64_t result;

  result = qword_255EB9708;
  if (!qword_255EB9708)
  {
    result = MEMORY[0x2348D8544](&unk_2312690B4, &type metadata for UDCSnippetGeneratorData.CodingKeys);
    atomic_store(result, &qword_255EB9708);
  }
  return result;
}

unint64_t sub_2311EC0C8()
{
  unint64_t result;

  result = qword_254152000;
  if (!qword_254152000)
  {
    result = MEMORY[0x2348D8544](&unk_231269024, &type metadata for UDCSnippetGeneratorData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254152000);
  }
  return result;
}

unint64_t sub_2311EC110()
{
  unint64_t result;

  result = qword_254151FF8;
  if (!qword_254151FF8)
  {
    result = MEMORY[0x2348D8544](&unk_23126904C, &type metadata for UDCSnippetGeneratorData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254151FF8);
  }
  return result;
}

_QWORD *sub_2311EC154(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  void *v15;
  id v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD v24[2];
  uint64_t v25;
  char *v26;
  uint64_t v27;
  _QWORD v28[4];

  sub_2311735E0(0, (unint64_t *)&unk_254153298, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v26 = (char *)v24 - v3;
  v4 = sub_23126226C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for HealthRecordsGeneratorContext();
  v25 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24[1] = v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v24 - v12;
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v14(v7, a1, v4);
  v14(v11, (uint64_t)v7, v4);
  sub_23126220C();
  sub_231173410(v28, v28[3]);
  v15 = (void *)sub_231262194();
  v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE489E0]), sel_initWithHealthStore_, v15);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_231173434((uint64_t)v28);
  *(_QWORD *)&v11[*(int *)(v8 + 20)] = v16;
  sub_23117353C((uint64_t)v11, (uint64_t)v13);
  if ((sub_23126223C() & 1) != 0)
  {
    sub_2311ED39C((uint64_t)v13);
  }
  else if ((sub_231262218() & 1) != 0)
  {
    v18 = sub_2312642D0();
    v19 = (uint64_t)v26;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v26, 1, 1, v18);
    sub_2311733CC((uint64_t)v13, (uint64_t)v11);
    v20 = (*(unsigned __int8 *)(v25 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = 0;
    v21[3] = 0;
    v21[4] = v27;
    sub_23117353C((uint64_t)v11, (uint64_t)v21 + v20);
    swift_retain();
    sub_231240274(v19, (uint64_t)&unk_255EB9720, (uint64_t)v21);
    swift_release();
    v17 = sub_2311EE0EC((uint64_t)v13);
  }
  else
  {
    v17 = sub_2311EE33C((uint64_t)v13);
  }
  v22 = v17;
  sub_231173638((uint64_t)v13);
  return v22;
}

uint64_t sub_2311EC3FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v7;
  *v7 = v5;
  v7[1] = sub_2311EEAC0;
  return sub_2311EC450(a5);
}

uint64_t sub_2311EC450(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v2[31] = a1;
  v2[32] = v3;
  type metadata accessor for HealthRecordsGeneratorContext();
  v2[33] = swift_task_alloc();
  v2[34] = swift_task_alloc();
  v2[35] = swift_task_alloc();
  v4 = sub_231263B5C();
  v2[36] = v4;
  v2[37] = *(_QWORD *)(v4 - 8);
  v2[38] = swift_task_alloc();
  v2[39] = swift_task_alloc();
  v2[40] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2311EC50C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v26;
  os_log_type_t type;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;

  v1 = v0[31];
  v2 = v0[35];
  sub_23126220C();
  sub_231173410(v0 + 10, v0[13]);
  v3 = (void *)sub_231262194();
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3DF0]), sel_initWithHealthStore_, v3);
  v0[41] = v4;

  sub_231173434((uint64_t)(v0 + 10));
  sub_231263B20();
  sub_2311733CC(v1, v2);
  v5 = sub_231263B50();
  v6 = sub_2312643F0();
  if (os_log_type_enabled(v5, v6))
  {
    v29 = v0[37];
    v30 = v0[36];
    v31 = v0[40];
    v26 = v0[35];
    v32 = v4;
    v7 = swift_slowAlloc();
    v28 = swift_slowAlloc();
    v33 = v28;
    *(_DWORD *)v7 = 136315394;
    v8 = sub_231264C84();
    v0[29] = sub_2311CBDE4(v8, v9, &v33);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    type = v6;
    v10 = (void *)sub_231262230();
    v11 = sub_231261FFC();
    v13 = v12;

    v0[30] = sub_2311CBDE4(v11, v13, &v33);
    sub_231264750();
    swift_bridgeObjectRelease();
    sub_231173638(v26);
    _os_log_impl(&dword_23116F000, v5, type, "[%s] Marking universal shard as required for first launch on profile: %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v28, -1, -1);
    v14 = v7;
    v4 = v32;
    MEMORY[0x2348D85EC](v14, -1, -1);

    v15 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
    v15(v31, v30);
  }
  else
  {
    v16 = v0[40];
    v17 = v0[36];
    v18 = v0[37];
    sub_231173638(v0[35]);

    v15 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
    v15(v16, v17);
  }
  v0[42] = v15;
  sub_2311735E0(0, &qword_254154678, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardIdentifier, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_231265AC0;
  v20 = (void *)*MEMORY[0x24BDD32B0];
  *(_QWORD *)(v19 + 32) = *MEMORY[0x24BDD32B0];
  type metadata accessor for HKOntologyShardIdentifier(0);
  v21 = v20;
  v22 = sub_2312641EC();
  v0[43] = v22;
  swift_bridgeObjectRelease();
  v0[2] = v0;
  v0[3] = sub_2311EC870;
  v23 = swift_continuation_init();
  v0[15] = MEMORY[0x24BDAC760];
  v24 = v0 + 15;
  v24[1] = 0x40000000;
  v24[2] = sub_2311ECE60;
  v24[3] = &unk_25000DD70;
  v24[4] = v23;
  objc_msgSend(v4, sel_markShardsWithIdentifiers_options_completion_, v22, 5, v24);
  return swift_continuation_await();
}

uint64_t sub_2311EC870()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 352) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_2311EC8D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 272);
  v2 = *(_QWORD *)(v0 + 248);

  sub_231263B20();
  sub_2311733CC(v2, v1);
  v3 = sub_231263B50();
  v4 = sub_2312643F0();
  if (os_log_type_enabled(v3, v4))
  {
    v21 = *(_QWORD *)(v0 + 312);
    v22 = *(void (**)(uint64_t, uint64_t))(v0 + 336);
    v19 = *(void **)(v0 + 328);
    v20 = *(_QWORD *)(v0 + 288);
    v17 = *(_QWORD *)(v0 + 272);
    v5 = swift_slowAlloc();
    v18 = swift_slowAlloc();
    v23 = v18;
    *(_DWORD *)v5 = 136315394;
    v6 = sub_231264C84();
    *(_QWORD *)(v0 + 216) = sub_2311CBDE4(v6, v7, &v23);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    v8 = (void *)sub_231262230();
    v9 = sub_231261FFC();
    v11 = v10;

    *(_QWORD *)(v0 + 224) = sub_2311CBDE4(v9, v11, &v23);
    sub_231264750();
    swift_bridgeObjectRelease();
    sub_231173638(v17);
    _os_log_impl(&dword_23116F000, v3, v4, "[%s] Marked universal shard as required for first launch on profile: %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v18, -1, -1);
    MEMORY[0x2348D85EC](v5, -1, -1);

    v22(v21, v20);
  }
  else
  {
    v13 = *(void **)(v0 + 328);
    v12 = *(void (**)(uint64_t, uint64_t))(v0 + 336);
    v14 = *(_QWORD *)(v0 + 312);
    v15 = *(_QWORD *)(v0 + 288);
    sub_231173638(*(_QWORD *)(v0 + 272));

    v12(v14, v15);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2311ECB30()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void *v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  os_log_type_t type;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32[2];

  v2 = *(void **)(v0 + 344);
  v1 = *(void **)(v0 + 352);
  v3 = *(_QWORD *)(v0 + 264);
  v4 = *(_QWORD *)(v0 + 248);
  swift_willThrow();

  sub_231263B20();
  sub_2311733CC(v4, v3);
  v5 = v1;
  v6 = v1;
  v7 = sub_231263B50();
  v8 = sub_2312643D8();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(void **)(v0 + 352);
    v30 = *(_QWORD *)(v0 + 304);
    v31 = *(void (**)(uint64_t, uint64_t))(v0 + 336);
    v28 = *(void **)(v0 + 328);
    v29 = *(_QWORD *)(v0 + 288);
    v26 = *(_QWORD *)(v0 + 264);
    type = v8;
    v10 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    v32[0] = v27;
    *(_DWORD *)v10 = 136315650;
    v11 = sub_231264C84();
    *(_QWORD *)(v0 + 192) = sub_2311CBDE4(v11, v12, v32);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    swift_getErrorValue();
    v13 = sub_231264BAC();
    *(_QWORD *)(v0 + 200) = sub_2311CBDE4(v13, v14, v32);
    sub_231264750();
    swift_bridgeObjectRelease();

    *(_WORD *)(v10 + 22) = 2080;
    v15 = (void *)sub_231262230();
    v16 = sub_231261FFC();
    v18 = v17;

    *(_QWORD *)(v0 + 208) = sub_2311CBDE4(v16, v18, v32);
    sub_231264750();
    swift_bridgeObjectRelease();
    sub_231173638(v26);
    _os_log_impl(&dword_23116F000, v7, type, "[%s] Marking universal shard as required failed with error: %s on profile: %s", (uint8_t *)v10, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v27, -1, -1);
    MEMORY[0x2348D85EC](v10, -1, -1);

    v31(v30, v29);
  }
  else
  {
    v19 = *(void **)(v0 + 352);
    v20 = *(void (**)(uint64_t, uint64_t))(v0 + 336);
    v21 = *(_QWORD *)(v0 + 304);
    v22 = *(_QWORD *)(v0 + 288);
    v23 = *(_QWORD *)(v0 + 264);

    sub_231173638(v23);
    v20(v21, v22);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2311ECE60(uint64_t a1, int a2, void *a3)
{
  uint64_t result;
  _QWORD *v5;
  id v6;

  if (a2)
    return swift_continuation_throwingResume();
  if (a3)
  {
    sub_2311787A8(0, qword_254155900);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2311ECEE8()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for HealthRecordsHealthPluginDelegate()
{
  return objc_opt_self();
}

uint64_t *sub_2311ECF18(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23126226C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
    v10 = v9;
  }
  return a1;
}

void sub_2311ECFA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23126226C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

}

uint64_t sub_2311ECFE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  v6 = sub_23126226C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v9 = v8;
  return a1;
}

uint64_t sub_2311ED048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  v6 = sub_23126226C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  return a1;
}

uint64_t sub_2311ED0B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23126226C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_2311ED10C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v6 = sub_23126226C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  return a1;
}

uint64_t sub_2311ED170()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2311ED17C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_23126226C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_2311ED1F8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2311ED204(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23126226C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for HealthRecordsGeneratorContext()
{
  uint64_t result;

  result = qword_254151890;
  if (!qword_254151890)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2311ED2B8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23126226C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2311ED32C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for HealthRecordsHealthPluginDelegate();
  result = swift_allocObject();
  *a1 = result;
  return result;
}

_QWORD *sub_2311ED35C(uint64_t a1)
{
  return sub_2311EC154(a1);
}

uint64_t sub_2311ED37C(uint64_t a1)
{
  return sub_23118EEBC(a1);
}

void sub_2311ED39C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  id v7;
  unsigned int v8;
  void *v9;
  void *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = type metadata accessor for HealthRecordsGeneratorContext();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (!v5)
  {
    __break(1u);
    goto LABEL_8;
  }
  v6 = v5;
  v7 = objc_msgSend(v5, sel_features);

  if (!v7)
  {
LABEL_8:
    __break(1u);
    return;
  }
  v8 = objc_msgSend(v7, sel_stanley);

  if (v8)
  {
    v9 = (void *)sub_231262230();
    v10 = (void *)sub_231262014();
    v11 = sub_231262008();

    if ((v11 & 1) != 0)
    {
      sub_2311EE964(0, &qword_254155728, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_231265AC0;
      sub_2311733CC(a1, (uint64_t)v4);
      v13 = type metadata accessor for CategoryGeneratorPipeline(0);
      swift_allocObject();
      v14 = sub_23124FAD0((uint64_t)v4);
      *(_QWORD *)(v12 + 56) = v13;
      *(_QWORD *)(v12 + 64) = sub_231172048(&qword_254155148, type metadata accessor for CategoryGeneratorPipeline, (uint64_t)&unk_23126B24C);
      *(_QWORD *)(v12 + 32) = v14;
    }
  }
}

_QWORD *sub_2311ED53C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t inited;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  unint64_t v36;
  __int128 v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  __int128 v42[2];
  _QWORD v43[78];

  v43[77] = *MEMORY[0x24BDAC8D0];
  v2 = type metadata accessor for HealthRecordsGeneratorContext();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311DED58();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_231269140;
  sub_2311733CC(a1, (uint64_t)v4);
  v6 = type metadata accessor for AccountStatusSummaryTileGeneratorPipeline();
  swift_allocObject();
  v7 = sub_23118CF38((uint64_t)v4);
  *(_QWORD *)(inited + 56) = v6;
  *(_QWORD *)(inited + 64) = sub_231172048(&qword_254153C70, (uint64_t (*)(uint64_t))type metadata accessor for AccountStatusSummaryTileGeneratorPipeline, (uint64_t)&unk_2312663B8);
  *(_QWORD *)(inited + 32) = v7;
  sub_2311733CC(a1, (uint64_t)v4);
  v8 = type metadata accessor for AddAccountGeneratorPipeline();
  swift_allocObject();
  v9 = sub_231220B04((uint64_t)v4);
  *(_QWORD *)(inited + 96) = v8;
  *(_QWORD *)(inited + 104) = sub_231172048(&qword_254155210, (uint64_t (*)(uint64_t))type metadata accessor for AddAccountGeneratorPipeline, (uint64_t)&unk_23126A4A8);
  *(_QWORD *)(inited + 72) = v9;
  sub_2311733CC(a1, (uint64_t)v4);
  v10 = type metadata accessor for CategoryGeneratorPipeline(0);
  swift_allocObject();
  v11 = sub_23124FAD0((uint64_t)v4);
  *(_QWORD *)(inited + 136) = v10;
  *(_QWORD *)(inited + 144) = sub_231172048(&qword_254155148, type metadata accessor for CategoryGeneratorPipeline, (uint64_t)&unk_23126B24C);
  *(_QWORD *)(inited + 112) = v11;
  sub_2311733CC(a1, (uint64_t)v4);
  v12 = type metadata accessor for ClinicalNotificationSettingsGeneratorPipeline();
  swift_allocObject();
  v13 = sub_23121F568((uint64_t)v4);
  *(_QWORD *)(inited + 176) = v12;
  *(_QWORD *)(inited + 184) = sub_231172048(&qword_254152AF8, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalNotificationSettingsGeneratorPipeline, (uint64_t)&unk_23126A430);
  *(_QWORD *)(inited + 152) = v13;
  sub_2311733CC(a1, (uint64_t)v4);
  v14 = type metadata accessor for NewRecordsGeneratorPipeline();
  swift_allocObject();
  v15 = sub_23123B398((uint64_t)v4);
  *(_QWORD *)(inited + 216) = v14;
  *(_QWORD *)(inited + 224) = sub_231172048(&qword_254154AB0, (uint64_t (*)(uint64_t))type metadata accessor for NewRecordsGeneratorPipeline, (uint64_t)&unk_23126AAEC);
  *(_QWORD *)(inited + 192) = v15;
  sub_2311733CC(a1, (uint64_t)v4);
  v16 = type metadata accessor for RecordKindGeneratorPipeline();
  swift_allocObject();
  v17 = sub_231172204((uint64_t)v4);
  *(_QWORD *)(inited + 256) = v16;
  *(_QWORD *)(inited + 264) = sub_231172048(&qword_254155360, (uint64_t (*)(uint64_t))type metadata accessor for RecordKindGeneratorPipeline, (uint64_t)&unk_231265B0C);
  *(_QWORD *)(inited + 232) = v17;
  sub_2311733CC(a1, (uint64_t)v4);
  v18 = type metadata accessor for UserDomainConceptPipeline();
  swift_allocObject();
  v19 = sub_2311C24A0((uint64_t)v4);
  *(_QWORD *)(inited + 296) = v18;
  *(_QWORD *)(inited + 304) = sub_231172048(&qword_254152250, (uint64_t (*)(uint64_t))type metadata accessor for UserDomainConceptPipeline, (uint64_t)&unk_231267D8C);
  *(_QWORD *)(inited + 272) = v19;
  sub_2311733CC(a1, (uint64_t)v4);
  v20 = type metadata accessor for OnboardingGeneratorPipeline();
  swift_allocObject();
  v21 = sub_231223A78((uint64_t)v4);
  *(_QWORD *)(inited + 336) = v20;
  *(_QWORD *)(inited + 344) = sub_231172048(&qword_254152428, (uint64_t (*)(uint64_t))type metadata accessor for OnboardingGeneratorPipeline, (uint64_t)&unk_23126A5DC);
  *(_QWORD *)(inited + 312) = v21;
  sub_2311733CC(a1, (uint64_t)v4);
  v22 = type metadata accessor for LabTipsGeneratorPipeline();
  swift_allocObject();
  v23 = sub_231222BFC((uint64_t)v4);
  *(_QWORD *)(inited + 376) = v22;
  *(_QWORD *)(inited + 384) = sub_231172048(&qword_2541520B0, (uint64_t (*)(uint64_t))type metadata accessor for LabTipsGeneratorPipeline, (uint64_t)&unk_23126A57C);
  *(_QWORD *)(inited + 352) = v23;
  sub_2311733CC(a1, (uint64_t)v4);
  v24 = type metadata accessor for RemovedCategoriesGeneratorPipeline();
  swift_allocObject();
  v25 = sub_23117ACFC((uint64_t)v4);
  *(_QWORD *)(inited + 416) = v24;
  *(_QWORD *)(inited + 424) = sub_231172048(&qword_254152968, (uint64_t (*)(uint64_t))type metadata accessor for RemovedCategoriesGeneratorPipeline, (uint64_t)&unk_231265DD4);
  *(_QWORD *)(inited + 392) = v25;
  v39 = inited;
  v26 = swift_initStackObject();
  v38 = xmmword_231265AC0;
  *(_OWORD *)(v26 + 16) = xmmword_231265AC0;
  sub_2311733CC(a1, (uint64_t)v4);
  v27 = type metadata accessor for SharedConceptFeedItemPipeline();
  swift_allocObject();
  v28 = sub_2311D8554((uint64_t)v4);
  *(_QWORD *)(v26 + 56) = v27;
  *(_QWORD *)(v26 + 64) = sub_231172048(&qword_2541526C8, (uint64_t (*)(uint64_t))type metadata accessor for SharedConceptFeedItemPipeline, (uint64_t)&unk_231268820);
  *(_QWORD *)(v26 + 32) = v28;
  sub_231210FC8(v26);
  v29 = swift_initStackObject();
  *(_OWORD *)(v29 + 16) = v38;
  sub_2311733CC(a1, (uint64_t)v4);
  v30 = type metadata accessor for ClinicalSharingGeneratorPipeline();
  swift_allocObject();
  v31 = sub_231189B10((uint64_t)v4);
  *(_QWORD *)(v29 + 56) = v30;
  *(_QWORD *)(v29 + 64) = sub_231172048(&qword_254153828, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingGeneratorPipeline, (uint64_t)&unk_2312661C8);
  *(_QWORD *)(v29 + 32) = v31;
  sub_231210FC8(v29);
  v32 = *(_QWORD *)(v39 + 16);
  if (v32)
  {
    v33 = v39 + 32;
    swift_bridgeObjectRetain();
    v34 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      sub_2311EE9CC(v33, (uint64_t)v43);
      sub_2311EEA20((uint64_t)v43, (uint64_t)&v40);
      if (v41)
      {
        sub_2311789AC(&v40, (uint64_t)v42);
        sub_2311789AC(v42, (uint64_t)&v40);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v34 = sub_2311DCDFC(0, v34[2] + 1, 1, v34);
        v36 = v34[2];
        v35 = v34[3];
        if (v36 >= v35 >> 1)
          v34 = sub_2311DCDFC((_QWORD *)(v35 > 1), v36 + 1, 1, v34);
        v34[2] = v36 + 1;
        sub_2311789AC(&v40, (uint64_t)&v34[5 * v36 + 4]);
      }
      else
      {
        sub_2311EEA74((uint64_t)&v40);
      }
      v33 += 40;
      --v32;
    }
    while (v32);
    swift_bridgeObjectRelease();
  }
  else
  {
    v34 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  return v34;
}

_QWORD *sub_2311EDBE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t inited;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33[2];
  _QWORD v34[54];

  v34[53] = *MEMORY[0x24BDAC8D0];
  v2 = type metadata accessor for HealthRecordsGeneratorContext();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311DED58();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_231269150;
  sub_2311733CC(a1, (uint64_t)v4);
  v6 = type metadata accessor for AccountStatusSummaryTileGeneratorPipeline();
  swift_allocObject();
  v7 = sub_23118CF38((uint64_t)v4);
  *(_QWORD *)(inited + 56) = v6;
  *(_QWORD *)(inited + 64) = sub_231172048(&qword_254153C70, (uint64_t (*)(uint64_t))type metadata accessor for AccountStatusSummaryTileGeneratorPipeline, (uint64_t)&unk_2312663B8);
  *(_QWORD *)(inited + 32) = v7;
  sub_2311733CC(a1, (uint64_t)v4);
  v8 = type metadata accessor for CategoryGeneratorPipeline(0);
  swift_allocObject();
  v9 = sub_23124FAD0((uint64_t)v4);
  *(_QWORD *)(inited + 96) = v8;
  *(_QWORD *)(inited + 104) = sub_231172048(&qword_254155148, type metadata accessor for CategoryGeneratorPipeline, (uint64_t)&unk_23126B24C);
  *(_QWORD *)(inited + 72) = v9;
  sub_2311733CC(a1, (uint64_t)v4);
  v10 = type metadata accessor for RecordKindGeneratorPipeline();
  swift_allocObject();
  v11 = sub_231172204((uint64_t)v4);
  *(_QWORD *)(inited + 136) = v10;
  *(_QWORD *)(inited + 144) = sub_231172048(&qword_254155360, (uint64_t (*)(uint64_t))type metadata accessor for RecordKindGeneratorPipeline, (uint64_t)&unk_231265B0C);
  *(_QWORD *)(inited + 112) = v11;
  sub_2311733CC(a1, (uint64_t)v4);
  v12 = type metadata accessor for UserDomainConceptPipeline();
  swift_allocObject();
  v13 = sub_2311C24A0((uint64_t)v4);
  *(_QWORD *)(inited + 176) = v12;
  *(_QWORD *)(inited + 184) = sub_231172048(&qword_254152250, (uint64_t (*)(uint64_t))type metadata accessor for UserDomainConceptPipeline, (uint64_t)&unk_231267D8C);
  *(_QWORD *)(inited + 152) = v13;
  sub_2311733CC(a1, (uint64_t)v4);
  v14 = type metadata accessor for OnboardingGeneratorPipeline();
  swift_allocObject();
  v15 = sub_231223A78((uint64_t)v4);
  *(_QWORD *)(inited + 216) = v14;
  *(_QWORD *)(inited + 224) = sub_231172048(&qword_254152428, (uint64_t (*)(uint64_t))type metadata accessor for OnboardingGeneratorPipeline, (uint64_t)&unk_23126A5DC);
  *(_QWORD *)(inited + 192) = v15;
  sub_2311733CC(a1, (uint64_t)v4);
  v16 = type metadata accessor for LabTipsGeneratorPipeline();
  swift_allocObject();
  v17 = sub_231222BFC((uint64_t)v4);
  *(_QWORD *)(inited + 256) = v16;
  *(_QWORD *)(inited + 264) = sub_231172048(&qword_2541520B0, (uint64_t (*)(uint64_t))type metadata accessor for LabTipsGeneratorPipeline, (uint64_t)&unk_23126A57C);
  *(_QWORD *)(inited + 232) = v17;
  sub_2311733CC(a1, (uint64_t)v4);
  v18 = type metadata accessor for RemovedCategoriesGeneratorPipeline();
  swift_allocObject();
  v19 = sub_23117ACFC((uint64_t)v4);
  *(_QWORD *)(inited + 296) = v18;
  *(_QWORD *)(inited + 304) = sub_231172048(&qword_254152968, (uint64_t (*)(uint64_t))type metadata accessor for RemovedCategoriesGeneratorPipeline, (uint64_t)&unk_231265DD4);
  *(_QWORD *)(inited + 272) = v19;
  v30 = inited;
  v20 = swift_initStackObject();
  *(_OWORD *)(v20 + 16) = xmmword_231265AC0;
  sub_2311733CC(a1, (uint64_t)v4);
  v21 = type metadata accessor for SharedConceptFeedItemPipeline();
  swift_allocObject();
  v22 = sub_2311D8554((uint64_t)v4);
  *(_QWORD *)(v20 + 56) = v21;
  *(_QWORD *)(v20 + 64) = sub_231172048(&qword_2541526C8, (uint64_t (*)(uint64_t))type metadata accessor for SharedConceptFeedItemPipeline, (uint64_t)&unk_231268820);
  *(_QWORD *)(v20 + 32) = v22;
  sub_231210FC8(v20);
  v23 = *(_QWORD *)(v30 + 16);
  if (v23)
  {
    v24 = v30 + 32;
    swift_bridgeObjectRetain();
    v25 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      sub_2311EE9CC(v24, (uint64_t)v34);
      sub_2311EEA20((uint64_t)v34, (uint64_t)&v31);
      if (v32)
      {
        sub_2311789AC(&v31, (uint64_t)v33);
        sub_2311789AC(v33, (uint64_t)&v31);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v25 = sub_2311DCDFC(0, v25[2] + 1, 1, v25);
        v27 = v25[2];
        v26 = v25[3];
        if (v27 >= v26 >> 1)
          v25 = sub_2311DCDFC((_QWORD *)(v26 > 1), v27 + 1, 1, v25);
        v25[2] = v27 + 1;
        sub_2311789AC(&v31, (uint64_t)&v25[5 * v27 + 4]);
      }
      else
      {
        sub_2311EEA74((uint64_t)&v31);
      }
      v24 += 40;
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease();
  }
  else
  {
    v25 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  return v25;
}

_QWORD *sub_2311EE0EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  void *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v14;
  uint64_t v15;
  __int128 v16[2];
  _BYTE v17[40];
  __int128 v18;
  _QWORD v19[5];

  v2 = type metadata accessor for HealthRecordsGeneratorContext();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (void *)sub_231262230();
  if (!v5)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  v6 = v5;
  switch((unint64_t)objc_msgSend(v5, sel_type))
  {
    case 1uLL:
      v7 = sub_2311ED53C(a1);
      goto LABEL_13;
    case 2uLL:
      v18 = xmmword_231265AC0;
      sub_2311733CC(a1, (uint64_t)v4);
      v9 = type metadata accessor for SharedConceptFeedItemPipeline();
      swift_allocObject();
      v10 = sub_2311D8554((uint64_t)v4);
      v19[3] = v9;
      v19[4] = sub_231172048(&qword_2541526C8, (uint64_t (*)(uint64_t))type metadata accessor for SharedConceptFeedItemPipeline, (uint64_t)&unk_231268820);
      v19[0] = v10;
      sub_2311EE9CC((uint64_t)v19, (uint64_t)v17);
      sub_2311EEA20((uint64_t)v17, (uint64_t)&v14);
      if (v15)
      {
        sub_2311789AC(&v14, (uint64_t)v16);
        sub_2311789AC(v16, (uint64_t)&v14);
        v8 = (_QWORD *)MEMORY[0x24BEE4AF8];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v8 = sub_2311DCDFC(0, v8[2] + 1, 1, v8);
        v12 = v8[2];
        v11 = v8[3];
        if (v12 >= v11 >> 1)
          v8 = sub_2311DCDFC((_QWORD *)(v11 > 1), v12 + 1, 1, v8);
        v8[2] = v12 + 1;
        sub_2311789AC(&v14, (uint64_t)&v8[5 * v12 + 4]);
      }
      else
      {
        sub_2311EEA74((uint64_t)&v14);
        v8 = (_QWORD *)MEMORY[0x24BEE4AF8];
      }

      sub_2311EE964(0, (unint64_t *)&qword_254155778, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      swift_arrayDestroy();
      return v8;
    case 4uLL:
      v7 = sub_2311EDBE8(a1);
LABEL_13:
      v8 = v7;

      break;
    default:

      return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v8;
}

_QWORD *sub_2311EE33C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31[2];
  _BYTE v32[40];
  __int128 v33;
  _QWORD v34[6];

  v34[5] = *MEMORY[0x24BDAC8D0];
  v2 = type metadata accessor for HealthRecordsGeneratorContext();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (void *)sub_231262230();
  if (!v5)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  v6 = v5;
  v7 = objc_msgSend(v5, sel_type);
  if (v7 != (id)2)
  {
    if (v7 == (id)1)
    {
      sub_2311DED58();
      inited = swift_initStackObject();
      v27 = xmmword_231265AC0;
      *(_OWORD *)(inited + 16) = xmmword_231265AC0;
      sub_2311733CC(a1, (uint64_t)v4);
      v9 = type metadata accessor for CategoryGeneratorPipeline(0);
      swift_allocObject();
      v10 = sub_23124FAD0((uint64_t)v4);
      *(_QWORD *)(inited + 56) = v9;
      *(_QWORD *)(inited + 64) = sub_231172048(&qword_254155148, type metadata accessor for CategoryGeneratorPipeline, (uint64_t)&unk_23126B24C);
      *(_QWORD *)(inited + 32) = v10;
      v28 = inited;
      v11 = swift_initStackObject();
      *(_OWORD *)(v11 + 16) = v27;
      sub_2311733CC(a1, (uint64_t)v4);
      v12 = type metadata accessor for SharedConceptFeedItemPipeline();
      swift_allocObject();
      v13 = sub_2311D8554((uint64_t)v4);
      *(_QWORD *)(v11 + 56) = v12;
      *(_QWORD *)(v11 + 64) = sub_231172048(&qword_2541526C8, (uint64_t (*)(uint64_t))type metadata accessor for SharedConceptFeedItemPipeline, (uint64_t)&unk_231268820);
      *(_QWORD *)(v11 + 32) = v13;
      sub_231210FC8(v11);
      v14 = swift_initStackObject();
      *(_OWORD *)(v14 + 16) = v27;
      sub_2311733CC(a1, (uint64_t)v4);
      v15 = type metadata accessor for ClinicalSharingGeneratorPipeline();
      swift_allocObject();
      v16 = sub_231189B10((uint64_t)v4);
      *(_QWORD *)(v14 + 56) = v15;
      *(_QWORD *)(v14 + 64) = sub_231172048(&qword_254153828, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingGeneratorPipeline, (uint64_t)&unk_2312661C8);
      *(_QWORD *)(v14 + 32) = v16;
      sub_231210FC8(v14);
      v17 = *(_QWORD *)(v28 + 16);
      if (v17)
      {
        v18 = v28 + 32;
        swift_bridgeObjectRetain();
        v19 = (_QWORD *)MEMORY[0x24BEE4AF8];
        do
        {
          sub_2311EE9CC(v18, (uint64_t)v32);
          sub_2311EEA20((uint64_t)v32, (uint64_t)&v29);
          if (v30)
          {
            sub_2311789AC(&v29, (uint64_t)v31);
            sub_2311789AC(v31, (uint64_t)&v29);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v19 = sub_2311DCDFC(0, v19[2] + 1, 1, v19);
            v21 = v19[2];
            v20 = v19[3];
            if (v21 >= v20 >> 1)
              v19 = sub_2311DCDFC((_QWORD *)(v20 > 1), v21 + 1, 1, v19);
            v19[2] = v21 + 1;
            sub_2311789AC(&v29, (uint64_t)&v19[5 * v21 + 4]);
          }
          else
          {
            sub_2311EEA74((uint64_t)&v29);
          }
          v18 += 40;
          --v17;
        }
        while (v17);
        swift_bridgeObjectRelease();

      }
      else
      {

        v19 = (_QWORD *)MEMORY[0x24BEE4AF8];
      }
      swift_bridgeObjectRelease();
      return v19;
    }

    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v33 = xmmword_231265AC0;
  sub_2311733CC(a1, (uint64_t)v4);
  v22 = type metadata accessor for SharedConceptFeedItemPipeline();
  swift_allocObject();
  v23 = sub_2311D8554((uint64_t)v4);
  v34[3] = v22;
  v34[4] = sub_231172048(&qword_2541526C8, (uint64_t (*)(uint64_t))type metadata accessor for SharedConceptFeedItemPipeline, (uint64_t)&unk_231268820);
  v34[0] = v23;
  sub_2311EE9CC((uint64_t)v34, (uint64_t)v32);
  sub_2311EEA20((uint64_t)v32, (uint64_t)&v29);
  if (v30)
  {
    sub_2311789AC(&v29, (uint64_t)v31);
    sub_2311789AC(v31, (uint64_t)&v29);
    v19 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v19 = sub_2311DCDFC(0, v19[2] + 1, 1, v19);
    v25 = v19[2];
    v24 = v19[3];
    if (v25 >= v24 >> 1)
      v19 = sub_2311DCDFC((_QWORD *)(v24 > 1), v25 + 1, 1, v19);
    v19[2] = v25 + 1;
    sub_2311789AC(&v29, (uint64_t)&v19[5 * v25 + 4]);
  }
  else
  {
    sub_2311EEA74((uint64_t)&v29);
    v19 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }

  sub_2311EE964(0, (unint64_t *)&qword_254155778, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  swift_arrayDestroy();
  return v19;
}

uint64_t sub_2311EE838()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for HealthRecordsGeneratorContext();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 40) & ~v2;
  swift_unknownObjectRelease();
  swift_release();
  v4 = v0 + v3;
  v5 = sub_23126226C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

  return swift_deallocObject();
}

uint64_t sub_2311EE8D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for HealthRecordsGeneratorContext() - 8) + 80);
  v3 = v0 + ((v2 + 40) & ~v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_2311E4510;
  v5 = (_QWORD *)swift_task_alloc();
  v4[2] = v5;
  *v5 = v4;
  v5[1] = sub_2311EEAC0;
  return sub_2311EC450(v3);
}

void sub_2311EE964(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_2311787A8(255, &qword_254155500);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_2311EE9CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2311EE964(0, (unint64_t *)&qword_254155778, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2311EEA20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2311EE964(0, (unint64_t *)&qword_254155778, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2311EEA74(uint64_t a1)
{
  uint64_t v2;

  sub_2311EE964(0, (unint64_t *)&qword_254155778, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2311EEAC4@<X0>(void *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t result;
  uint64_t v29;
  _BYTE *v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  id v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  id v45;
  char *v46;
  id v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  void (*v56)(uint64_t);
  id v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  id v61;
  _BYTE *v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  void *v67;
  void *v68;
  id v69;
  int v70;
  id v71;
  NSObject *v72;
  os_log_type_t v73;
  int v74;
  uint64_t v75;
  id v76;
  id v77;
  _BYTE *v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  id v89;
  id v90;
  _BYTE *v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  _BYTE v96[12];
  int v97;
  uint64_t v98;
  int v99;
  char *v100;
  id v101;
  uint64_t v102;
  _BYTE *v103;
  _BYTE *v104;
  id v105;
  uint64_t v106;
  _BYTE *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112[4];
  uint64_t v113;

  v102 = a4;
  v106 = a3;
  sub_2311787F4(0, &qword_2541554F8, (void (*)(uint64_t))MEMORY[0x24BE477D0]);
  MEMORY[0x24BDAC7A8](v8);
  v103 = &v96[-v9];
  v10 = type metadata accessor for ConceptDeltaHighlightFeedItemData();
  MEMORY[0x24BDAC7A8](v10);
  v104 = &v96[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = sub_231261E94();
  v108 = *(_QWORD *)(v12 - 8);
  v109 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v107 = &v96[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_231263B5C();
  v110 = *(_QWORD *)(v14 - 8);
  v111 = v14;
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = &v96[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = &v96[-v19];
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = &v96[-v22];
  MEMORY[0x24BDAC7A8](v21);
  sub_2311787F4(0, (unint64_t *)&qword_254154938, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v27 = &v96[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  result = MEMORY[0x24BDAC7A8](v25);
  v30 = &v96[-v29];
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    v42 = sub_2312649A8();
    result = swift_bridgeObjectRelease();
    if (v42 < 2)
      goto LABEL_3;
  }
  else if (*(uint64_t *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10) < 2)
  {
LABEL_3:
    sub_231263B20();
    v31 = a1;
    v32 = sub_231263B50();
    v33 = sub_2312643CC();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      v106 = swift_slowAlloc();
      v112[0] = v106;
      *(_DWORD *)v34 = 136446210;
      v105 = v34 + 4;
      v35 = objc_msgSend(v31, sel_UUID);
      v36 = v107;
      sub_231261E7C();

      v37 = sub_231261E58();
      v38 = a5;
      v40 = v39;
      (*(void (**)(_BYTE *, uint64_t))(v108 + 8))(v36, v109);
      v113 = sub_2311CBDE4(v37, v40, v112);
      sub_231264750();

      a5 = v38;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23116F000, v32, v33, "Too few records to generate delta highlight for concept: %{public}s", v34, 0xCu);
      v41 = v106;
      swift_arrayDestroy();
      MEMORY[0x2348D85EC](v41, -1, -1);
      MEMORY[0x2348D85EC](v34, -1, -1);

    }
    else
    {

    }
    (*(void (**)(_BYTE *, uint64_t))(v110 + 8))(v17, v111);
LABEL_30:
    v85 = sub_23126217C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 56))(a5, 1, 1, v85);
  }
  if ((a2 & 0xC000000000000001) != 0)
  {
    v94 = MEMORY[0x2348D7CE0](1, a2);
    v95 = a2;
    v44 = (id)v94;
    v45 = (id)MEMORY[0x2348D7CE0](0, v95);
  }
  else
  {
    if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
    {
      __break(1u);
      return result;
    }
    v43 = *(void **)(a2 + 32);
    v44 = *(id *)(a2 + 40);
    v45 = v43;
  }
  v105 = v45;
  sub_2311EFF54(v44, v45);
  v100 = v46;
  v47 = objc_msgSend(v44, sel_meaningfulDate);
  if (v47)
  {
    v48 = v47;
    sub_231261E28();

    v49 = sub_231261E40();
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v30, 0, 1, v49);
  }
  else
  {
    v50 = sub_231261E40();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v30, 1, 1, v50);
  }
  v51 = objc_msgSend(v105, sel_meaningfulDate);
  v101 = v44;
  if (v51)
  {
    v52 = v51;
    sub_231261E28();

    v53 = sub_231261E40();
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v27, 0, 1, v53);
  }
  else
  {
    v54 = sub_231261E40();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v27, 1, 1, v54);
  }
  v55 = sub_2311F048C((uint64_t)v30, (uint64_t)v27, v100);
  v56 = (void (*)(uint64_t))MEMORY[0x24BDCE900];
  sub_2311786C0((uint64_t)v27, (unint64_t *)&qword_254154938, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  sub_2311786C0((uint64_t)v30, (unint64_t *)&qword_254154938, v56);
  if ((v55 & 1) != 0)
  {
    sub_231263B20();
    v57 = a1;
    v58 = sub_231263B50();
    v59 = sub_2312643CC();
    if (os_log_type_enabled(v58, v59))
    {
      v60 = (uint8_t *)swift_slowAlloc();
      v106 = swift_slowAlloc();
      v112[0] = v106;
      *(_DWORD *)v60 = 136446210;
      v104 = v60 + 4;
      v61 = objc_msgSend(v57, sel_UUID);
      v62 = v107;
      sub_231261E7C();

      v63 = sub_231261E58();
      v65 = v64;
      (*(void (**)(_BYTE *, uint64_t))(v108 + 8))(v62, v109);
      v113 = sub_2311CBDE4(v63, v65, v112);
      sub_231264750();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23116F000, v58, v59, "Suppressing generation of delta highlight for concept: %{public}s", v60, 0xCu);
      v66 = v106;
      swift_arrayDestroy();
      MEMORY[0x2348D85EC](v66, -1, -1);
      MEMORY[0x2348D85EC](v60, -1, -1);

    }
    else
    {

    }
    (*(void (**)(_BYTE *, uint64_t))(v110 + 8))(v23, v111);
    goto LABEL_30;
  }
  sub_2312628A8();
  v67 = (void *)sub_231262884();
  sub_23126220C();
  sub_231173410(v112, v112[3]);
  v68 = (void *)sub_231262194();
  v69 = objc_msgSend(v68, sel_profileIdentifier);

  sub_231262848();
  sub_231173434((uint64_t)v112);
  v70 = sub_231263A6C();
  swift_release();
  v99 = v70 ^ 1;
  sub_231263B20();
  v71 = a1;
  v72 = sub_231263B50();
  v73 = sub_2312643CC();
  v74 = v73;
  if (os_log_type_enabled(v72, v73))
  {
    v75 = swift_slowAlloc();
    v98 = swift_slowAlloc();
    v112[0] = v98;
    *(_DWORD *)v75 = 136446466;
    v76 = objc_msgSend(v71, sel_UUID, v75 + 4);
    v97 = v74;
    v77 = v76;
    v78 = v107;
    sub_231261E7C();

    v79 = sub_231261E58();
    v81 = v80;
    (*(void (**)(_BYTE *, uint64_t))(v108 + 8))(v78, v109);
    v113 = sub_2311CBDE4(v79, v81, v112);
    sub_231264750();

    swift_bridgeObjectRelease();
    *(_WORD *)(v75 + 12) = 2082;
    if ((v70 & 1) != 0)
      v82 = 0x65736C6166;
    else
      v82 = 1702195828;
    if ((v70 & 1) != 0)
      v83 = 0xE500000000000000;
    else
      v83 = 0xE400000000000000;
    v113 = sub_2311CBDE4(v82, v83, v112);
    sub_231264750();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23116F000, v72, (os_log_type_t)v97, "Generating delta highlight for concept: %{public}s, Hide in Discover: %{public}s", (uint8_t *)v75, 0x16u);
    v84 = v98;
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v84, -1, -1);
    MEMORY[0x2348D85EC](v75, -1, -1);

  }
  else
  {

  }
  (*(void (**)(_BYTE *, uint64_t))(v110 + 8))(v20, v111);
  v87 = v102;
  v86 = (uint64_t)v103;
  v88 = v71;
  v89 = v101;
  v90 = v105;
  v91 = v104;
  sub_231216320(v88, v89, v90, (uint64_t)v100, v99 & 1, (uint64_t)v104);
  v92 = (void *)sub_231262230();
  sub_2311EF7B4((uint64_t)v91, v87, v92, v86);
  sub_2311F075C((uint64_t)v91);

  v93 = sub_23126217C();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v86, 0, 1, v93);
  return sub_2311C0C6C(v86, a5);
}

uint64_t sub_2311EF7B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  id v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t);
  void *v54;
  id v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(uint64_t *, _QWORD);
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v85 = a2;
  v83 = a4;
  v6 = sub_231261CCC();
  MEMORY[0x24BDAC7A8](v6);
  v82 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311787F4(0, &qword_255EB8138, (void (*)(uint64_t))MEMORY[0x24BE47DF8]);
  MEMORY[0x24BDAC7A8](v8);
  v69 = (char *)&v68 - v9;
  v76 = sub_231261E40();
  v84 = *(_QWORD *)(v76 - 8);
  v10 = MEMORY[0x24BDAC7A8](v76);
  v79 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v80 = (char *)&v68 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v75 = (char *)&v68 - v14;
  sub_2311787F4(0, (unint64_t *)&qword_254154938, v15);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v78 = (char *)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v81 = (char *)&v68 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v77 = (char *)&v68 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v74 = (char *)&v68 - v23;
  v24 = sub_231261FA8();
  v71 = *(_QWORD *)(v24 - 8);
  v72 = v24;
  MEMORY[0x24BDAC7A8](v24);
  v73 = (char *)&v68 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_2312626E0();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)&v68 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311787F4(0, &qword_254153510, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)&v68 - v31;
  v33 = type metadata accessor for ConceptDeltaHighlightFeedItemData();
  sub_231178A30(0, (unint64_t *)&qword_2541534D0, &qword_2541531B0);
  v34 = (void *)sub_231263F88();
  v35 = objc_msgSend(v34, sel_UUID);

  sub_231261E7C();
  v36 = sub_231261E94();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v32, 0, 1, v36);
  (*(void (**)(char *, _QWORD, uint64_t))(v27 + 104))(v29, *MEMORY[0x24BE48E20], v26);
  v70 = sub_23126325C();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
  sub_2311786C0((uint64_t)v32, &qword_254153510, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
  sub_2311F0798();
  v37 = v86;
  sub_231261C60();
  if (v37)
    return swift_bridgeObjectRelease();
  v68 = 0;
  type metadata accessor for ConceptDeltaHighlightFeedItemViewController();
  (*(void (**)(char *, _QWORD, uint64_t))(v71 + 104))(v73, *MEMORY[0x24BE474D8], v72);
  v39 = a3;
  sub_231262038();
  LODWORD(v86) = *(unsigned __int8 *)(a1 + *(int *)(v33 + 44));
  v40 = v75;
  sub_231261E34();
  v41 = v74;
  sub_231261DC8();
  v42 = v84;
  v43 = v40;
  v44 = v76;
  v73 = *(char **)(v84 + 8);
  ((void (*)(char *, uint64_t))v73)(v43, v76);
  v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56);
  v46 = 1;
  v47 = (uint64_t)v41;
  v48 = v44;
  v45(v41, 0, 1, v44);
  v75 = (char *)v33;
  v85 = a1;
  sub_231178A30(0, (unint64_t *)&qword_255EB9730, &qword_255EB9738);
  v49 = (void *)sub_231263F88();
  v50 = objc_msgSend(v49, sel_meaningfulDate);

  v51 = (uint64_t)v77;
  if (v50)
  {
    sub_231261E28();

    v46 = 0;
  }
  v52 = 1;
  v45((char *)v51, v46, 1, v44);
  sub_2312460D8(v47, v51);
  v53 = (void (*)(uint64_t))MEMORY[0x24BDCE900];
  sub_2311786C0(v51, (unint64_t *)&qword_254154938, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  sub_2311786C0(v47, (unint64_t *)&qword_254154938, v53);
  v54 = (void *)sub_231263F88();
  v55 = objc_msgSend(v54, sel_meaningfulDate);

  v56 = (uint64_t)v81;
  if (v55)
  {
    sub_231261E28();

    v52 = 0;
  }
  v57 = v79;
  v58 = v80;
  v59 = (uint64_t)v78;
  v45((char *)v56, v52, 1, v48);
  sub_2311A4BBC(v56, v59);
  v60 = v84;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v59, 1, v48) == 1)
  {
    v61 = sub_231262428();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v69, 1, 1, v61);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v60 + 32))(v58, v59, v48);
    (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v57, v58, v48);
    sub_231261CC0();
    v62 = v69;
    sub_231262410();
    ((void (*)(char *, uint64_t))v73)(v58, v48);
    v63 = sub_231262428();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v62, 0, 1, v63);
  }
  sub_2311786C0(v56, (unint64_t *)&qword_254154938, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  sub_231262104();
  swift_bridgeObjectRetain();
  sub_2312620BC();
  sub_2312620F8();
  sub_2312620A4();
  v88 = MEMORY[0x24BEE4B08];
  v64 = sub_23126232C();
  sub_2312519E4(&v87, v64, v65);
  swift_bridgeObjectRelease();
  v66 = v88;
  v67 = (uint64_t (*)(uint64_t *, _QWORD))sub_23126214C();
  sub_2311BAB64(v66);
  return v67(&v87, 0);
}

void sub_2311EFF54(void *a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  __objc2_prop_list **v17;
  __objc2_prop_list **v18;
  id v19;
  id v20;
  uint64_t v21;
  __objc2_prop_list **v22;
  __objc2_prop_list **p_base_props;
  _BYTE *v24;
  char v25;
  id v26;
  unint64_t v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  char *v34;
  char v35;
  uint64_t v36;
  uint64_t v37;

  v3 = objc_msgSend(a1, sel_chartableCodedQuantitySet);
  if (!v3)
    goto LABEL_13;
  v4 = v3;
  v5 = objc_msgSend(a2, sel_chartableCodedQuantitySet);
  if (!v5)
  {

LABEL_13:
    sub_2311F07E0();
    swift_allocError();
    *v24 = 0;
    swift_willThrow();
    return;
  }
  v6 = v5;
  v7 = objc_msgSend(v4, sel_quantities);
  v8 = sub_231178AD0(0, &qword_255EB8C98);
  v9 = sub_2312641F8();

  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_2312649A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v10 != 1)
  {
    v11 = objc_msgSend(v6, sel_quantities);
    v12 = sub_2312641F8();

    if (v12 >> 62)
    {
      swift_bridgeObjectRetain();
      v13 = sub_2312649A8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v13 != 1)
    {
      sub_2311F07E0();
      swift_allocError();
      v35 = 1;
LABEL_41:
      *v34 = v35;
      swift_willThrow();

      return;
    }
  }
  v14 = objc_msgSend(v4, sel_compatibleUnit);
  v15 = objc_msgSend(v14, sel_unitString);

  sub_23126409C();
  v16 = sub_2312640C0();
  v18 = v17;
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v6, sel_compatibleUnit);
  v20 = objc_msgSend(v19, sel_unitString);

  sub_23126409C();
  v21 = sub_2312640C0();
  p_base_props = v22;
  swift_bridgeObjectRelease();
  if (v16 == v21 && v18 == p_base_props)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_15;
  }
  v25 = sub_231264B58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v25 & 1) == 0)
  {
    sub_2311F07E0();
    swift_allocError();
    v35 = 2;
    goto LABEL_41;
  }
LABEL_15:
  v26 = objc_msgSend(v4, sel_quantities);
  v27 = sub_2312641F8();

  if (v27 >> 62)
  {
    swift_bridgeObjectRetain();
    v36 = sub_2312649A8();
    swift_bridgeObjectRelease();
    if (!v36)
      goto LABEL_39;
  }
  else if (!*(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_39;
  }
  if ((v27 & 0xC000000000000001) != 0)
  {
    v28 = (id)MEMORY[0x2348D7CE0](0, v27);
  }
  else
  {
    if (!*(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_37;
    }
    v28 = *(id *)(v27 + 32);
  }
  v29 = v28;
  swift_bridgeObjectRelease();
  p_base_props = &NewRecordsDataProvider.base_props;
  v27 = (unint64_t)objc_msgSend(v29, sel_quantity);

  if (!v27)
  {
LABEL_40:
    sub_2311F07E0();
    swift_allocError();
    v35 = 3;
    goto LABEL_41;
  }
  v30 = objc_msgSend(v6, sel_quantities);
  v8 = sub_2312641F8();

  if (!(v8 >> 62))
  {
    if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_23;
    goto LABEL_38;
  }
LABEL_37:
  swift_bridgeObjectRetain();
  v37 = sub_2312649A8();
  swift_bridgeObjectRelease();
  if (!v37)
  {
LABEL_38:

LABEL_39:
    swift_bridgeObjectRelease();
    goto LABEL_40;
  }
LABEL_23:
  if ((v8 & 0xC000000000000001) != 0)
  {
    v31 = (id)MEMORY[0x2348D7CE0](0, v8);
    goto LABEL_26;
  }
  if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v31 = *(id *)(v8 + 32);
LABEL_26:
    v32 = v31;
    swift_bridgeObjectRelease();
    v33 = objc_msgSend(v32, (SEL)p_base_props[390]);

    if (v33)
    {
      objc_msgSend((id)v27, sel_compare_, v33);

      return;
    }

    goto LABEL_40;
  }
  __break(1u);
}

uint64_t sub_2311F048C(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  void (*v24)(uint64_t);
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  void (*v31)(uint64_t, uint64_t);
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;

  v39 = a1;
  v40 = a3;
  v38 = a2;
  v3 = sub_231261EB8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_231261F18();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311787F4(0, (unint64_t *)&qword_254154938, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v33 - v15;
  v17 = sub_231261E40();
  v18 = *(_QWORD **)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  MEMORY[0x24BDAC7A8](v19);
  if (v40)
  {
    v22 = 0;
  }
  else
  {
    v33 = v21;
    v34 = v10;
    v40 = (char *)&v33 - v20;
    v35 = v6;
    v36 = v8;
    v37 = v7;
    sub_2311A4BBC(v39, (uint64_t)v16);
    v23 = (unsigned int (*)(char *, uint64_t, uint64_t))v18[6];
    if (v23(v16, 1, v17) == 1)
    {
      v24 = (void (*)(uint64_t))MEMORY[0x24BDCE900];
      v25 = (uint64_t)v16;
    }
    else
    {
      v26 = (void (*)(char *, char *, uint64_t))v18[4];
      v27 = v40;
      v26(v40, v16, v17);
      sub_2311A4BBC(v38, (uint64_t)v14);
      if (v23(v14, 1, v17) != 1)
      {
        v28 = v33;
        v26(v33, v14, v17);
        v29 = v35;
        (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v35, *MEMORY[0x24BDCEF70], v3);
        v30 = v34;
        sub_231261EC4();
        (*(void (**)(char *, uint64_t))(v4 + 8))(v29, v3);
        v22 = sub_231261F00();
        (*(void (**)(char *, uint64_t))(v36 + 8))(v30, v37);
        v31 = (void (*)(uint64_t, uint64_t))v18[1];
        v31((uint64_t)v28, v17);
        v31((uint64_t)v27, v17);
        return v22 & 1;
      }
      ((void (*)(char *, uint64_t))v18[1])(v27, v17);
      v24 = (void (*)(uint64_t))MEMORY[0x24BDCE900];
      v25 = (uint64_t)v14;
    }
    sub_2311786C0(v25, (unint64_t *)&qword_254154938, v24);
    v22 = 0;
  }
  return v22 & 1;
}

uint64_t sub_2311F075C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ConceptDeltaHighlightFeedItemData();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2311F0798()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255EB9728;
  if (!qword_255EB9728)
  {
    v1 = type metadata accessor for ConceptDeltaHighlightFeedItemData();
    result = MEMORY[0x2348D8544](&unk_231269EB0, v1);
    atomic_store(result, (unint64_t *)&qword_255EB9728);
  }
  return result;
}

unint64_t sub_2311F07E0()
{
  unint64_t result;

  result = qword_255EB9740;
  if (!qword_255EB9740)
  {
    result = MEMORY[0x2348D8544](&unk_23126929C, &type metadata for DiagnosticTestResultComparisonError);
    atomic_store(result, (unint64_t *)&qword_255EB9740);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DiagnosticTestResultComparisonError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2311F0870 + 4 * byte_231269205[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2311F08A4 + 4 * byte_231269200[v4]))();
}

uint64_t sub_2311F08A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2311F08AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2311F08B4);
  return result;
}

uint64_t sub_2311F08C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2311F08C8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2311F08CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2311F08D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DiagnosticTestResultComparisonError()
{
  return &type metadata for DiagnosticTestResultComparisonError;
}

unint64_t sub_2311F08F4()
{
  unint64_t result;

  result = qword_255EB9748;
  if (!qword_255EB9748)
  {
    result = MEMORY[0x2348D8544](&unk_231269274, &type metadata for DiagnosticTestResultComparisonError);
    atomic_store(result, (unint64_t *)&qword_255EB9748);
  }
  return result;
}

void sub_2311F0938()
{
  unint64_t v0;
  unint64_t v1;

  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_2311787F4(319, &qword_254154880, (void (*)(uint64_t))MEMORY[0x24BE48D18]);
    if (v1 <= 0x3F)
      swift_initClassMetadata2();
  }
}

uint64_t sub_2311F09E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_2311787F4(0, &qword_254154880, (void (*)(uint64_t))MEMORY[0x24BE48D18]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 112);
  swift_beginAccess();
  sub_2311F11CC(v6, (uint64_t)v5);
  v7 = sub_231262644();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) == 1)
  {
    sub_2311F11CC(v1 + *(_QWORD *)(*(_QWORD *)v1 + 120), a1);
    return sub_2311786C0((uint64_t)v5, &qword_254154880, (void (*)(uint64_t))MEMORY[0x24BE48D18]);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v5, v7);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
}

uint64_t sub_2311F0B10@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;
  char v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  void (*v31)(char *, char *, uint64_t);
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  char *v37;
  uint64_t *v38;
  char *v39;
  int v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  unsigned int *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  unsigned int *v58;
  void (*v59)(char *, uint64_t);
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;

  v2 = v1;
  v74 = a1;
  v3 = *v1;
  v4 = sub_2312626A4();
  v67 = *(_QWORD *)(v4 - 8);
  v68 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v66 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311787F4(0, &qword_254154880, (void (*)(uint64_t))MEMORY[0x24BE48D18]);
  MEMORY[0x24BDAC7A8](v6);
  v70 = (uint64_t)&v65 - v7;
  v8 = sub_231262644();
  v72 = *(_QWORD *)(v8 - 8);
  v73 = v8;
  v9 = MEMORY[0x24BDAC7A8](v8);
  v71 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v69 = (char *)&v65 - v11;
  sub_2311787F4(0, (unint64_t *)&unk_2541557A0, (void (*)(uint64_t))MEMORY[0x24BE48F28]);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v65 - v14;
  v16 = *(_QWORD *)(v3 + 80);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v19 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_2312627B8();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v65 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v65 - v25;
  v27 = *(_QWORD *)(v3 + 88);
  v28 = v2;
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v19, (char *)v2 + v27, v16);
  v29 = swift_dynamicCast();
  v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  if ((v29 & 1) != 0)
  {
    v30(v15, 0, 1, v20);
    v31 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v31(v26, v15, v20);
    v31(v24, v26, v20);
    v32 = (*(uint64_t (**)(char *, uint64_t))(v21 + 88))(v24, v20);
    if (v32 == *MEMORY[0x24BE48F00]
      || v32 == *MEMORY[0x24BE48ED8]
      || v32 == *MEMORY[0x24BE48E80]
      || v32 == *MEMORY[0x24BE48EC8])
    {
      v47 = (_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 96));
      v48 = v47[1];
      v45 = v74;
      *v74 = *v47;
      v45[1] = v48;
      v46 = (unsigned int *)MEMORY[0x24BE437C0];
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v20);
  }
  else
  {
    v30(v15, 1, 1, v20);
    sub_2311786C0((uint64_t)v15, (unint64_t *)&unk_2541557A0, (void (*)(uint64_t))MEMORY[0x24BE48F28]);
  }
  v33 = v70;
  sub_2311F09E8(v70);
  v35 = v72;
  v34 = v73;
  v36 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v33, 1, v73);
  v37 = v71;
  if (v36 == 1)
  {
    sub_2311786C0(v33, &qword_254154880, (void (*)(uint64_t))MEMORY[0x24BE48D18]);
    v38 = v74;
    goto LABEL_17;
  }
  v39 = v69;
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v69, v33, v34);
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v37, v39, v34);
  v40 = (*(uint64_t (**)(char *, uint64_t))(v35 + 88))(v37, v34);
  if (v40 != *MEMORY[0x24BE48D10])
  {
    v38 = v74;
    if (v40 == *MEMORY[0x24BE48D08])
    {
      (*(void (**)(char *, uint64_t))(v35 + 96))(v37, v34);
      v51 = v66;
      v52 = v67;
      v53 = v68;
      (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v66, v37, v68);
      sub_2311F1148();
      v55 = (uint64_t *)((char *)v38 + *(int *)(v54 + 64));
      *v38 = sub_231262698();
      sub_231262650();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v51, v53);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v39, v34);
      v56 = (_QWORD *)((char *)v28 + *(_QWORD *)(*v28 + 96));
      v57 = v56[1];
      *v55 = *v56;
      v55[1] = v57;
      v58 = (unsigned int *)MEMORY[0x24BE437D8];
LABEL_18:
      v62 = *v58;
      v63 = sub_231263664();
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 104))(v38, v62, v63);
      return swift_bridgeObjectRetain();
    }
    v59 = *(void (**)(char *, uint64_t))(v35 + 8);
    v59(v39, v34);
    v59(v37, v34);
LABEL_17:
    v60 = (_QWORD *)((char *)v28 + *(_QWORD *)(*v28 + 96));
    v61 = v60[1];
    *v38 = *v60;
    v38[1] = v61;
    v58 = (unsigned int *)MEMORY[0x24BE437C8];
    goto LABEL_18;
  }
  (*(void (**)(char *, uint64_t))(v35 + 8))(v39, v34);
  (*(void (**)(char *, uint64_t))(v35 + 96))(v37, v34);
  v41 = *(_QWORD *)v37;

  v42 = (_QWORD *)((char *)v28 + *(_QWORD *)(*v28 + 96));
  v43 = *v42;
  v44 = v42[1];
  v45 = v74;
  *v74 = v41;
  v45[1] = v43;
  v45[2] = v44;
  v46 = (unsigned int *)MEMORY[0x24BE437D0];
LABEL_13:
  v49 = *v46;
  v50 = sub_231263664();
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 104))(v45, v49, v50);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2311F1054()
{
  uint64_t v0;
  void (*v1)(uint64_t);

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88));
  swift_bridgeObjectRelease();
  sub_2311BA5E4(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 104)));
  v1 = (void (*)(uint64_t))MEMORY[0x24BE48D18];
  sub_2311786C0(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112), &qword_254154880, (void (*)(uint64_t))MEMORY[0x24BE48D18]);
  sub_2311786C0(v0 + *(_QWORD *)(*(_QWORD *)v0 + 120), &qword_254154880, v1);
  return v0;
}

uint64_t sub_2311F10F8()
{
  sub_2311F1054();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BrowseItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2311792F8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BrowseItem);
}

uint64_t sub_2311F1128@<X0>(_QWORD *a1@<X8>)
{
  return sub_2311F0B10(a1);
}

void sub_2311F1148()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_255EB9750)
  {
    sub_231178AD0(255, &qword_2541547D8);
    sub_231263400();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_255EB9750);
  }
}

uint64_t sub_2311F11CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2311787F4(0, &qword_254154880, (void (*)(uint64_t))MEMORY[0x24BE48D18]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_2311F1220()
{
  id v0;

  sub_231178AD0(0, (unint64_t *)&qword_2541558F0);
  v0 = (id)sub_2312644E0();
  sub_231262A7C();

}

uint64_t type metadata accessor for NewRecordsFeedItemView()
{
  uint64_t result;

  result = qword_255EB9778;
  if (!qword_255EB9778)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2311F12E4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2311F1320()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = sub_231264600();
  qword_255EB9758 = v1;
  unk_255EB9760 = v2;
  return result;
}

void sub_2311F1344()
{
  qword_255EB9768 = 0x4020000000000000;
}

void sub_2311F1354()
{
  qword_255EB9770 = 0x4010000000000000;
}

uint64_t sub_2311F1364()
{
  uint64_t v0;
  id v1;
  id v2;

  v0 = qword_255EB7800;
  v1 = (id)*MEMORY[0x24BEBE220];
  if (v0 != -1)
    swift_once();
  if (qword_255EB7808 != -1)
    swift_once();
  if (qword_255EB7810 != -1)
    swift_once();
  v2 = objc_allocWithZone((Class)sub_231262A1C());
  return sub_231262A10();
}

id sub_2311F1460(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  void *v55;
  void *v56;
  uint64_t v57;
  void (*v58)(uint64_t);
  void *v59;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int (*v70)(char *, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;

  v72 = a1;
  v2 = sub_231262B60();
  v68 = *(_QWORD *)(v2 - 8);
  v69 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v67 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311787F4(0, (unint64_t *)&qword_254151918, (void (*)(uint64_t))MEMORY[0x24BDCEEA8]);
  MEMORY[0x24BDAC7A8](v4);
  v66 = (char *)&v61 - v5;
  v6 = sub_231262950();
  v75 = *(_QWORD *)(v6 - 8);
  v76 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v62 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2312627B8();
  v77 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_23126292C();
  v74 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v73 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_231261E94();
  v12 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v64 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for NewRecordsFeedItemViewData();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311787F4(0, &qword_255EB8ED8, v18);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v61 - v23;
  sub_2311787F4(0, &qword_255EB97C8, (void (*)(uint64_t))MEMORY[0x24BE49058]);
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&v61 - v26;
  v78 = v1;
  v65 = sub_231262D64();
  sub_2311F1D00(v72, (uint64_t)v24);
  v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v29 = v14;
  v30 = v28(v24, 1, v14);
  v70 = v28;
  if (v30 == 1)
  {
    v31 = sub_2312628C0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v27, 1, 1, v31);
  }
  else
  {
    sub_2311F1D90((uint64_t)v24, (uint64_t)v17);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v64, &v17[*(int *)(v14 + 24)], v63);
    v63 = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v29 = v63;
    sub_2312628B4();
    v32 = sub_2312628C0();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v27, 0, 1, v32);
    sub_2311F1D54((uint64_t)v17);
  }
  v33 = v72;
  v34 = (void *)v65;
  sub_2312626B0();

  sub_2311786C0((uint64_t)v27, &qword_255EB97C8, (void (*)(uint64_t))MEMORY[0x24BE49058]);
  v35 = (void *)sub_231262D70();
  sub_231262A04();

  sub_2311F1D00(v33, (uint64_t)v22);
  if (v70(v22, 1, v29) == 1)
  {
    sub_2311786C0((uint64_t)v22, &qword_255EB8ED8, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemViewData);
  }
  else
  {
    v36 = *(_QWORD *)&v22[*(int *)(v29 + 28)];
    swift_bridgeObjectRetain();
    sub_2311F1D54((uint64_t)v22);
    v37 = *(_QWORD *)(v36 + 16);
    if (v37)
    {
      v38 = *(_QWORD *)(sub_231262710() - 8);
      v39 = v36 + ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80));
      v40 = *(_QWORD *)(v38 + 72);
      v41 = *MEMORY[0x24BE48E88];
      v70 = (unsigned int (*)(char *, uint64_t, uint64_t))v36;
      swift_bridgeObjectRetain();
      v43 = v61;
      v42 = v62;
      v44 = v77;
      v71 = v8;
      LODWORD(v72) = v41;
      do
      {
        if ((sub_2312626F8() & 1) == 0)
        {
          sub_231262704();
          if ((*(unsigned int (**)(char *, uint64_t))(v44 + 88))(v10, v8) == v41)
          {
            (*(void (**)(char *, uint64_t))(v44 + 96))(v10, v8);
            v45 = v74;
            v46 = v10;
            v47 = v73;
            v48 = v46;
            (*(void (**)(char *))(v74 + 32))(v73);
            v49 = v43;
            v50 = (void *)sub_231262D70();
            sub_231262BD8();
            sub_231262BCC();
            if (qword_255EB7800 != -1)
              swift_once();
            sub_2312629F8();

            (*(void (**)(char *, uint64_t))(v75 + 8))(v42, v76);
            (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v49);
            v43 = v49;
            v44 = v77;
            v8 = v71;
            v10 = v48;
            v41 = v72;
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v44 + 8))(v10, v8);
          }
        }
        v39 += v40;
        --v37;
      }
      while (v37);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v52 = v68;
  v51 = v69;
  v54 = (uint64_t)v66;
  v53 = v67;
  v55 = v78;
  v56 = (void *)sub_231262D7C();
  v57 = sub_231261EAC();
  v58 = (void (*)(uint64_t))MEMORY[0x24BDCEEA8];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v54, 1, 1, v57);
  sub_231262B54();
  sub_2312632EC();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v51);
  sub_2311786C0(v54, (unint64_t *)&qword_254151918, v58);
  v59 = (void *)sub_23126406C();
  swift_bridgeObjectRelease();
  objc_msgSend(v56, sel_setText_, v59);

  return objc_msgSend(v55, sel_setNeedsLayout);
}

id sub_2311F1B08(void *a1, double a2, double a3, double a4, double a5)
{
  objc_super v10;

  v10.receiver = a1;
  v10.super_class = (Class)type metadata accessor for NewRecordsFeedItemView();
  return objc_msgSendSuper2(&v10, sel_initWithFrame_, a2, a3, a4, a5);
}

id sub_2311F1B78(void *a1, uint64_t a2, uint64_t a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for NewRecordsFeedItemView();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_2311F1BC0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NewRecordsFeedItemView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2311F1BF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  sub_2311787F4(0, &qword_255EB8ED8, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemViewData);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - v3;
  sub_2311F1CBC(a1, (uint64_t)&v7 - v3);
  v5 = type metadata accessor for NewRecordsFeedItemViewData();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 0, 1, v5);
  sub_2311F1460((uint64_t)v4);
  return sub_2311786C0((uint64_t)v4, &qword_255EB8ED8, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemViewData);
}

uint64_t sub_2311F1CB4()
{
  return type metadata accessor for NewRecordsFeedItemView();
}

uint64_t sub_2311F1CBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NewRecordsFeedItemViewData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2311F1D00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2311787F4(0, &qword_255EB8ED8, (void (*)(uint64_t))type metadata accessor for NewRecordsFeedItemViewData);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2311F1D54(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NewRecordsFeedItemViewData();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2311F1D90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NewRecordsFeedItemViewData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_2311F1E90()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NullView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for NullView()
{
  return objc_opt_self();
}

uint64_t sub_2311F1EE0(void (*a1)(_QWORD, _QWORD, _QWORD), uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void (*v28)(unint64_t, _QWORD, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(_QWORD, _QWORD, _QWORD);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  void (*v63)(_QWORD, _QWORD, _QWORD);
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  _QWORD v85[4];

  v79 = a3;
  v72 = a2;
  v63 = a1;
  v66 = sub_23126226C();
  v65 = *(_QWORD *)(v66 - 8);
  v67 = *(char **)(v65 + 64);
  MEMORY[0x24BDAC7A8](v66);
  v64 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311F7EA8(0, &qword_254154158, sub_2311F6D1C, sub_2311F6D38, (void (*)(void))sub_2311F6D54);
  v68 = v6;
  v69 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v82 = (char *)&v59 - v7;
  sub_2311F6D70();
  v71 = v8;
  v73 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v83 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311F704C();
  v75 = v10;
  v77 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v70 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311F70E0();
  v76 = v12;
  v78 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v74 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2312621DC();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_2312621F4();
  v18 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_2312625F0();
  v62 = v21;
  v61 = a4;
  v59 = sub_231262230();
  sub_2311735E0(0, &qword_254155718, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v22 = sub_231261FA8();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(_QWORD *)(v23 + 72);
  v25 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_231265570;
  v27 = v26 + v25;
  v28 = *(void (**)(unint64_t, _QWORD, uint64_t))(v23 + 104);
  v28(v27, *MEMORY[0x24BE47460], v22);
  v28(v27 + v24, *MEMORY[0x24BE47410], v22);
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x24BE47920], v14);
  sub_2312621E8();
  v29 = v79;
  sub_231262254();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v60);
  sub_231261F9C();
  swift_allocObject();
  v80 = sub_231261F90();
  sub_23126220C();
  sub_231173410(v85, v85[3]);
  v84 = sub_2312621B8();
  v30 = swift_allocObject();
  v31 = v81;
  v32 = v63;
  *(_QWORD *)(v30 + 16) = v81;
  *(_QWORD *)(v30 + 24) = v32;
  sub_2311F6D1C(0);
  sub_2311F6D38(0);
  sub_2311F6D54();
  swift_bridgeObjectRetain();
  sub_231263E80();
  swift_release();
  swift_release();
  sub_231173434((uint64_t)v85);
  v33 = v65;
  v63 = *(void (**)(_QWORD, _QWORD, _QWORD))(v65 + 16);
  v34 = v64;
  v35 = v66;
  v63(v64, v29, v66);
  v36 = *(unsigned __int8 *)(v33 + 80);
  v37 = v33;
  v38 = (v36 + 24) & ~v36;
  v62 = v36 | 7;
  v39 = v67 + 7;
  v40 = (unint64_t)&v67[v38 + 7] & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject();
  *(_QWORD *)(v41 + 16) = v31;
  v67 = *(char **)(v37 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v67)(v41 + v38, v34, v35);
  *(_QWORD *)(v41 + v40) = v80;
  *(_QWORD *)(v41 + ((v40 + 15) & 0xFFFFFFFFFFFFFFF8)) = v31;
  swift_retain();
  sub_231263CF4();
  sub_2311F6F80();
  sub_2311F6E34();
  sub_2311F6FE4();
  sub_231172048(&qword_254154160, (uint64_t (*)(uint64_t))sub_2311F6E34, MEMORY[0x24BDB96C0]);
  v42 = v68;
  v43 = v82;
  sub_231263EE0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v43, v42);
  v63(v34, v79, v35);
  v44 = (v36 + 32) & ~v36;
  v45 = (unint64_t)&v39[v44] & 0xFFFFFFFFFFFFFFF8;
  v46 = swift_allocObject();
  v47 = v81;
  v48 = v72;
  *(_QWORD *)(v46 + 16) = v81;
  *(_QWORD *)(v46 + 24) = v48;
  ((void (*)(uint64_t, char *, uint64_t))v67)(v46 + v44, v34, v35);
  *(_QWORD *)(v46 + v45) = v80;
  *(_QWORD *)(v46 + ((v45 + 15) & 0xFFFFFFFFFFFFFFF8)) = v47;
  v49 = v47;
  v50 = swift_allocObject();
  *(_QWORD *)(v50 + 16) = sub_2311F736C;
  *(_QWORD *)(v50 + 24) = v46;
  sub_2311889BC(0);
  sub_231172048(&qword_254154428, (uint64_t (*)(uint64_t))sub_2311F6D70, MEMORY[0x24BDB98F0]);
  swift_retain();
  swift_retain();
  v52 = v70;
  v51 = v71;
  v53 = v83;
  sub_231263EBC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v53, v51);
  *(_QWORD *)(swift_allocObject() + 16) = v49;
  sub_2311F6EE4(0, &qword_254152EF8, (uint64_t (*)(uint64_t))sub_2311889BC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_231172048(&qword_254154300, (uint64_t (*)(uint64_t))sub_2311F704C, MEMORY[0x24BDB98C8]);
  sub_2311F78C4((unint64_t *)&qword_254152EF0, &qword_254152EF8, (uint64_t (*)(uint64_t))sub_2311889BC);
  v55 = v74;
  v54 = v75;
  sub_231263E8C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v52, v54);
  sub_231172048(&qword_254154220, (uint64_t (*)(uint64_t))sub_2311F70E0, MEMORY[0x24BDB9740]);
  v56 = v76;
  v57 = sub_231263E38();
  swift_release();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v55, v56);
  return v57;
}

void sub_2311F26C8(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  void *v6;

  v6 = (void *)MEMORY[0x2348D810C]();
  sub_2311F272C(a2, a1, a3);
  objc_autoreleasePoolPop(v6);
}

uint64_t sub_2311F272C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[16];
  char *v25;
  char *v26;
  uint64_t v27;

  v23 = a2;
  v27 = a3;
  v22 = sub_2312623A4();
  v4 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_231261E40();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v22 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v22 - v15;
  sub_231261E34();
  sub_231261DBC();
  v17 = *(void (**)(char *, uint64_t))(v8 + 8);
  v17(v14, v7);
  sub_231261DA4();
  v25 = v11;
  v26 = v16;
  swift_bridgeObjectRetain();
  v18 = sub_23120A1B0((uint64_t (*)(char *))sub_2311F82EC, (uint64_t)v24, a1);
  if (*(_QWORD *)(v18 + 16))
  {
    v19 = *(_QWORD *)(a1 + 16);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v23, v22);
    sub_2311F2B10(v18, v19, (uint64_t)v6, v27);
    v17(v16, v7);
  }
  else
  {
    swift_bridgeObjectRelease();
    v17(v16, v7);
    v20 = type metadata accessor for SharedNewRecordsAlertData(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v27, 1, 1, v20);
  }
  return ((uint64_t (*)(char *, uint64_t))v17)(v11, v7);
}

uint64_t sub_2311F2918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char v14;
  char v15;
  void (*v16)(char *, uint64_t);
  _QWORD v18[2];

  v18[1] = a3;
  sub_2311735E0(0, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v18 - v5;
  v7 = sub_231261E40();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v18 - v12;
  sub_2312632A4();
  if ((sub_231263298() & 1) != 0)
  {
    v14 = 1;
  }
  else
  {
    type metadata accessor for SharedConceptFeedItemData(0);
    sub_231261E04();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_231189628((uint64_t)v6, (unint64_t *)&qword_254154938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
      v14 = 0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a2, v7);
      v15 = sub_231261DEC();
      v16 = *(void (**)(char *, uint64_t))(v8 + 8);
      v16(v11, v7);
      if ((v15 & 1) != 0)
        (*(void (**)(uint64_t, char *, uint64_t))(v8 + 24))(a2, v13, v7);
      v14 = sub_231261DF8();
      v16(v13, v7);
    }
  }
  return v14 & 1;
}

uint64_t sub_2311F2B10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t (*v41)(uint64_t);
  char *v42;
  uint64_t v43;
  _QWORD *v44;
  int *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  int *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  void (*v75)(char *, char *, uint64_t);
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v71 = a2;
  v72 = a3;
  v73 = a4;
  v5 = type metadata accessor for SharedConceptFeedItemData(0);
  v83 = *(_QWORD *)(v5 - 8);
  v84 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v80 = (uint64_t)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v66 - v8;
  v10 = sub_231261E40();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v79 = (char *)&v66 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v66 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v66 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v74 = (char *)&v66 - v23;
  v24 = type metadata accessor for SharedNewRecordsAlertData(0);
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v66 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *(_QWORD *)(a1 + 16);
  if (v28)
  {
    v77 = v14;
    v68 = v27;
    v69 = v25;
    v70 = (int *)v24;
    sub_231261DA4();
    v78 = v11;
    v29 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    v67 = v22;
    v82 = v10;
    v75 = v29;
    v29(v19, v22, v10);
    v30 = a1 + ((*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80));
    v83 = *(_QWORD *)(v83 + 72);
    v76 = v9 + 64;
    v81 = a1;
    swift_bridgeObjectRetain();
    v31 = type metadata accessor for SharedConceptFeedItemData;
    v32 = v30;
    v66 = v28;
    v33 = v28;
    v34 = v19;
    do
    {
      v41 = v31;
      sub_231178454(v32, (uint64_t)v9, v31);
      v42 = v77;
      sub_231261E04();
      if ((sub_231261DEC() & 1) != 0)
      {
        v35 = v78;
        v37 = v79;
        v36 = v82;
        (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v79, v42, v82);
      }
      else
      {
        v35 = v78;
        v36 = v82;
        (*(void (**)(char *, uint64_t))(v78 + 8))(v42, v82);
        v37 = v79;
        v75(v79, v34, v36);
      }
      sub_231178498((uint64_t)v9, v41);
      v38 = *(void (**)(char *, uint64_t))(v35 + 8);
      v38(v34, v36);
      v39 = v36;
      v40 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
      v40(v34, v37, v39);
      v31 = v41;
      v32 += v83;
      --v33;
    }
    while (v33);
    swift_bridgeObjectRelease();
    v43 = v82;
    v40(v74, v34, v82);
    v38(v67, v43);
    swift_bridgeObjectRetain();
    v44 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v45 = v70;
    v46 = v66;
    do
    {
      v47 = v80;
      sub_231178454(v30, v80, type metadata accessor for SharedConceptFeedItemData);
      v48 = (uint64_t *)(v47 + *(int *)(v84 + 28));
      v50 = *v48;
      v49 = v48[1];
      swift_bridgeObjectRetain();
      sub_231178498(v47, type metadata accessor for SharedConceptFeedItemData);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v44 = sub_2311DC450(0, v44[2] + 1, 1, v44);
      v52 = v44[2];
      v51 = v44[3];
      if (v52 >= v51 >> 1)
        v44 = sub_2311DC450((_QWORD *)(v51 > 1), v52 + 1, 1, v44);
      v44[2] = v52 + 1;
      v53 = &v44[2 * v52];
      v53[4] = v50;
      v53[5] = v49;
      v30 += v83;
      --v46;
    }
    while (v46);
    swift_bridgeObjectRelease_n();
    v54 = *MEMORY[0x24BE490B8];
    v55 = sub_23126292C();
    v56 = (uint64_t)v68;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 104))(v68, v54, v55);
    v57 = v72;
    *(_QWORD *)(v56 + v45[5]) = v71;
    *(_QWORD *)(v56 + v45[6]) = v44;
    v58 = sub_231262398();
    v60 = v59;
    v61 = sub_2312623A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 8))(v57, v61);
    v62 = (uint64_t *)(v56 + v45[7]);
    *v62 = v58;
    v62[1] = v60;
    v40((char *)(v56 + v45[8]), v74, v82);
    v63 = v73;
    sub_2311B1454(v56, v73, type metadata accessor for SharedNewRecordsAlertData);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(v69 + 56))(v63, 0, 1, v45);
  }
  else
  {
    v65 = sub_2312623A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 8))(v72, v65);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56))(v73, 1, 1, v24);
  }
}

uint64_t sub_2311F3018@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  unint64_t v27;
  unint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;

  v39 = a4;
  v40 = a5;
  v33 = a3;
  v37 = a1;
  v36 = sub_23126226C();
  v32 = *(_QWORD *)(v36 - 8);
  v38 = *(_QWORD *)(v32 + 64);
  MEMORY[0x24BDAC7A8](v36);
  v35 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311F6D38(0);
  v34 = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(v34 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v31 = (uint64_t)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (void *)sub_231262230();
  sub_231261FFC();

  v41 = 0;
  v42 = 0xE000000000000000;
  sub_2312648C4();
  swift_bridgeObjectRelease();
  v41 = 0xD000000000000022;
  v42 = 0x800000023126D580;
  sub_231264144();
  swift_bridgeObjectRelease();
  v10 = v41;
  v29 = v42;
  v11 = (void *)sub_231262230();
  sub_231261FFC();

  sub_2312625E4();
  swift_bridgeObjectRelease();
  v12 = (void *)sub_231262224();
  v13 = objc_allocWithZone(MEMORY[0x24BDD3C98]);
  v14 = (void *)sub_23126406C();
  swift_bridgeObjectRelease();
  v30 = objc_msgSend(v13, sel_initWithCategory_domainName_healthStore_, 1, v14, v12);

  v41 = v33;
  sub_231261F9C();
  sub_231172048(&qword_2541533D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47380], MEMORY[0x24BE47378]);
  v15 = v10;
  v41 = sub_2312624DC();
  v16 = v31;
  sub_231178454(v37, v31, (uint64_t (*)(_QWORD))sub_2311F6D38);
  v17 = v32;
  v18 = v35;
  v19 = a2;
  v20 = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v35, v19, v36);
  v21 = (*(unsigned __int8 *)(v34 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  v22 = (v8 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = (*(unsigned __int8 *)(v17 + 80) + v22 + 16) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v24 = (v38 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = swift_allocObject();
  sub_2311B1454(v16, v25 + v21, (uint64_t (*)(_QWORD))sub_2311F6D38);
  v26 = (uint64_t *)(v25 + v22);
  v27 = v29;
  *v26 = v15;
  v26[1] = v27;
  (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(v25 + v23, v18, v20);
  *(_QWORD *)(v25 + v24) = v39;
  sub_2311F6EE4(0, &qword_254154510, (uint64_t (*)(uint64_t))sub_2311F6F64, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_2311F6F80();
  sub_2311F78C4(&qword_254154508, &qword_254154510, (uint64_t (*)(uint64_t))sub_2311F6F64);
  sub_231263E80();

  swift_release();
  return swift_release();
}

uint64_t sub_2311F33AC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47[4];

  v40 = a5;
  v44 = a6;
  v45 = a3;
  v43 = a2;
  v8 = sub_231263B5C();
  v41 = *(_QWORD *)(v8 - 8);
  v42 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311F6D38(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for SharedNewRecordsAlertData(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231178454(a1, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_2311F6D38);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_231178498((uint64_t)v13, (uint64_t (*)(_QWORD))sub_2311F6D38);
    v18 = 0;
  }
  else
  {
    sub_2311B1454((uint64_t)v13, (uint64_t)v17, type metadata accessor for SharedNewRecordsAlertData);
    sub_231261D98();
    v18 = sub_2312642DC();
    sub_231178498((uint64_t)v17, type metadata accessor for SharedNewRecordsAlertData);
  }
  v19 = sub_231264720();
  v20 = v45;
  if ((v19 & 1) != 0)
  {
    v38 = v18;
    v39 = a4;
    sub_231263B44();
    swift_bridgeObjectRetain_n();
    v21 = sub_231263B50();
    v22 = sub_2312643F0();
    v23 = v22;
    if (os_log_type_enabled(v21, v22))
    {
      v24 = swift_slowAlloc();
      v37 = swift_slowAlloc();
      v47[0] = v37;
      *(_DWORD *)v24 = 136446466;
      v25 = sub_231264C84();
      LODWORD(v40) = v23;
      v46 = sub_2311CBDE4(v25, v26, v47);
      sub_231264750();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2080;
      swift_bridgeObjectRetain();
      v27 = v43;
      v46 = sub_2311CBDE4(v43, v45, v47);
      sub_231264750();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23116F000, v21, (os_log_type_t)v40, "%{public}s Removing any notifications that may have been delivered: %s", (uint8_t *)v24, 0x16u);
      v28 = v37;
      swift_arrayDestroy();
      MEMORY[0x2348D85EC](v28, -1, -1);
      v29 = v24;
      v20 = v45;
      MEMORY[0x2348D85EC](v29, -1, -1);

      (*(void (**)(char *, uint64_t))(v41 + 8))(v10, v42);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v10, v42);
      v27 = v43;
    }
    sub_23126220C();
    sub_231173410(v47, v47[3]);
    sub_2312621AC();
    swift_getObjectType();
    sub_2311F82A8(0, (unint64_t *)&qword_2541557B0);
    v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_231265AC0;
    *(_QWORD *)(v30 + 32) = v27;
    *(_QWORD *)(v30 + 40) = v20;
    swift_bridgeObjectRetain();
    sub_231262488();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    sub_231173434((uint64_t)v47);
  }
  v31 = sub_23126472C();
  swift_bridgeObjectRelease();
  sub_2311F6F80();
  v33 = *(int *)(v32 + 48);
  v34 = v44;
  result = sub_231178454(a1, v44, (uint64_t (*)(_QWORD))sub_2311F6D38);
  *(_BYTE *)(v34 + v33) = v31 & 1;
  return result;
}

uint64_t sub_2311F37E0(uint64_t a1, int a2, void (*a3)(char *, char *, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  void *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  void (*v50)(unint64_t, char *, uint64_t);
  uint64_t v51;
  unint64_t v52;
  _QWORD v54[2];
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  char *v66;
  void (*v67)(char *, char *, uint64_t);
  uint64_t v68;
  uint64_t v69[6];
  uint64_t v70;

  v67 = a3;
  v54[1] = a7;
  v66 = (char *)a4;
  v65 = a2;
  v10 = sub_23126226C();
  v58 = *(_QWORD *)(v10 - 8);
  v59 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v57 = (char *)v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_231263B5C();
  v55 = *(_QWORD *)(v12 - 8);
  v56 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v61 = (char *)v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, &qword_2541554F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v54 - v15;
  v17 = sub_23126217C();
  v63 = *(_QWORD *)(v17 - 8);
  v64 = v17;
  v18 = MEMORY[0x24BDAC7A8](v17);
  v62 = (char *)v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v60 = (char *)v54 - v20;
  sub_2311F6D38(0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for SharedNewRecordsAlertData(0);
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)v54 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231178454(a1, (uint64_t)v23, (uint64_t (*)(_QWORD))sub_2311F6D38);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1)
  {
    sub_231178498((uint64_t)v23, (uint64_t (*)(_QWORD))sub_2311F6D38);
    return MEMORY[0x24BEE4AF8];
  }
  else
  {
    sub_2311B1454((uint64_t)v23, (uint64_t)v27, type metadata accessor for SharedNewRecordsAlertData);
    v69[3] = sub_231261F9C();
    v69[4] = sub_231172048(&qword_2541533D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47380], MEMORY[0x24BE47378]);
    v69[0] = a6;
    swift_retain();
    v28 = v68;
    sub_2311F3E10((uint64_t)v27, (uint64_t)v66, a5, (uint64_t)v69, v65 & 1, (uint64_t)v16);
    if (v28)
    {
      sub_231178498((uint64_t)v27, type metadata accessor for SharedNewRecordsAlertData);
      sub_231173434((uint64_t)v69);
    }
    else
    {
      sub_231173434((uint64_t)v69);
      v30 = v63;
      v29 = v64;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v16, 1, v64) == 1)
      {
        sub_231178498((uint64_t)v27, type metadata accessor for SharedNewRecordsAlertData);
        sub_231189628((uint64_t)v16, &qword_2541554F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0]);
        return MEMORY[0x24BEE4AF8];
      }
      else
      {
        v66 = v27;
        v31 = v60;
        v67 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
        v67(v60, v16, v29);
        v32 = v61;
        sub_231263B20();
        v34 = v57;
        v33 = v58;
        v35 = v59;
        (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v57, a5, v59);
        (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v62, v31, v29);
        v36 = sub_231263B50();
        v37 = sub_2312643CC();
        v65 = v37;
        if (os_log_type_enabled(v36, v37))
        {
          v38 = swift_slowAlloc();
          v54[0] = swift_slowAlloc();
          v69[0] = v54[0];
          *(_DWORD *)v38 = 136446722;
          v39 = sub_231264C84();
          v68 = 0;
          v70 = sub_2311CBDE4(v39, v40, v69);
          sub_231264750();
          swift_bridgeObjectRelease();
          *(_WORD *)(v38 + 12) = 2080;
          v41 = (void *)sub_231262230();
          v42 = sub_231261FFC();
          v44 = v43;

          v45 = v42;
          v30 = v63;
          v70 = sub_2311CBDE4(v45, v44, v69);
          sub_231264750();
          v29 = v64;
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v59);
          *(_WORD *)(v38 + 22) = 2080;
          sub_231172048(&qword_255EB97F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0], MEMORY[0x24BE477E0]);
          v46 = v62;
          v47 = sub_231264B28();
          v70 = sub_2311CBDE4(v47, v48, v69);
          v31 = v60;
          sub_231264750();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v30 + 8))(v46, v29);
          _os_log_impl(&dword_23116F000, v36, (os_log_type_t)v65, "[%{public}s] Generated notification feed item for profile %s: %s", (uint8_t *)v38, 0x20u);
          v49 = v54[0];
          swift_arrayDestroy();
          MEMORY[0x2348D85EC](v49, -1, -1);
          MEMORY[0x2348D85EC](v38, -1, -1);

          (*(void (**)(char *, uint64_t))(v55 + 8))(v61, v56);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v35);
          (*(void (**)(char *, uint64_t))(v30 + 8))(v62, v29);

          (*(void (**)(char *, uint64_t))(v55 + 8))(v32, v56);
        }
        v51 = (uint64_t)v66;
        v50 = (void (*)(unint64_t, char *, uint64_t))v67;
        sub_2311735E0(0, &qword_254155720, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
        v52 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
        a6 = swift_allocObject();
        *(_OWORD *)(a6 + 16) = xmmword_231265AC0;
        v50(a6 + v52, v31, v29);
        sub_231178498(v51, type metadata accessor for SharedNewRecordsAlertData);
      }
    }
  }
  return a6;
}

void sub_2311F3E10(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  void *v13;

  v13 = (void *)MEMORY[0x2348D810C]();
  sub_2311F4220(a3, a2, a1, a5, v6, a4, v6, a6);
  objc_autoreleasePoolPop(v13);
}

uint64_t sub_2311F3EA4@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v36 = a2;
  sub_2311735E0(0, &qword_254153040, (uint64_t (*)(uint64_t))sub_2311889BC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v33 - v8;
  sub_2311F6EE4(0, &qword_254153250, (uint64_t (*)(uint64_t))sub_2311889BC, MEMORY[0x24BDBA1B0]);
  v39 = *(_QWORD *)(v10 - 8);
  v40 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v33 - v11;
  v13 = sub_231263B5C();
  v37 = *(_QWORD *)(v13 - 8);
  v38 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a1;
  sub_231263B20();
  v17 = v16;
  v18 = v16;
  v19 = sub_231263B50();
  v20 = sub_2312643D8();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    v22 = swift_slowAlloc();
    v35 = a3;
    v23 = v22;
    v42 = v22;
    *(_DWORD *)v21 = 136446466;
    v34 = v6;
    v24 = sub_231264C84();
    v36 = v7;
    v41 = sub_2311CBDE4(v24, v25, &v42);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2082;
    v41 = (uint64_t)v16;
    v26 = v16;
    sub_2311787A8(0, qword_254155900);
    v27 = sub_2312640CC();
    v41 = sub_2311CBDE4(v27, v28, &v42);
    v6 = v34;
    sub_231264750();
    v7 = v36;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23116F000, v19, v20, "[%{public}s] Unable to generate notification feed item: %{public}s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    v29 = v23;
    a3 = v35;
    MEMORY[0x2348D85EC](v29, -1, -1);
    MEMORY[0x2348D85EC](v21, -1, -1);
  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v38);
  v42 = MEMORY[0x24BEE4AF8];
  sub_2311889BC(0);
  sub_231263D84();
  sub_2311787A8(0, qword_254155900);
  sub_231263D54();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_231193D14();
  v30 = v40;
  v31 = sub_231263E38();
  result = (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v12, v30);
  *a3 = v31;
  return result;
}

uint64_t sub_2311F4220@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  uint64_t v91;

  v69 = a7;
  v66 = a6;
  v68 = a5;
  v67 = a4;
  v91 = a3;
  v88 = a2;
  v78 = a8;
  v87 = type metadata accessor for SharedNewRecordsAlertData(0);
  v63 = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87);
  v65 = v9;
  v64 = (uint64_t)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_23126226C();
  v59 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v60 = v10;
  v61 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, &qword_255EB8138, (uint64_t (*)(uint64_t))MEMORY[0x24BE47DF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v11);
  v76 = (char *)&v58 - v12;
  v13 = sub_231261CCC();
  MEMORY[0x24BDAC7A8](v13);
  v75 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = sub_231262428();
  v84 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86);
  v83 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_231261E40();
  v82 = *(_QWORD *)(v85 - 8);
  v16 = MEMORY[0x24BDAC7A8](v85);
  v74 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v81 = (char *)&v58 - v18;
  v72 = sub_231261FA8();
  v71 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v73 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_23126217C();
  v20 = *(_QWORD *)(v77 - 8);
  MEMORY[0x24BDAC7A8](v77);
  v80 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_2312626E0();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v58 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_23126292C();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)&v58 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v27 + 104))(v29, *MEMORY[0x24BE490B8], v26);
  (*(void (**)(char *, _QWORD, uint64_t))(v23 + 104))(v25, *MEMORY[0x24BE48DE0], v22);
  v79 = a1;
  v30 = (void *)sub_231262230();
  v70 = sub_231263088();

  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
  sub_231172048(&qword_255EB9800, type metadata accessor for SharedNewRecordsAlertData, (uint64_t)&unk_231266FE0);
  v31 = v87;
  v32 = v89;
  sub_231261C60();
  if (v32)
    return swift_bridgeObjectRelease();
  v88 = 0;
  v89 = v20;
  type metadata accessor for CategoryUpdateViewController();
  (*(void (**)(char *, _QWORD, uint64_t))(v71 + 104))(v73, *MEMORY[0x24BE474A0], v72);
  sub_231262230();
  sub_231262038();
  sub_23126220C();
  sub_231262074();
  sub_231173434((uint64_t)&v90);
  v34 = v91;
  v35 = v81;
  v36 = *(void (**)(char *, uint64_t, uint64_t))(v82 + 16);
  v37 = v85;
  v36(v81, v91 + *(int *)(v31 + 32), v85);
  v36(v74, (uint64_t)v35, v37);
  sub_231261CC0();
  v38 = v83;
  sub_231262410();
  v39 = v84;
  v40 = v76;
  v41 = v38;
  v42 = v86;
  (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v76, v41, v86);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v40, 0, 1, v42);
  sub_231262104();
  v43 = (void *)sub_231262230();
  v44 = (void *)sub_231262014();
  LOBYTE(v40) = sub_231262008();

  v45 = v78;
  if ((v40 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v84 + 8))(v83, v86);
    (*(void (**)(char *, uint64_t))(v82 + 8))(v81, v85);
    v46 = v77;
    v47 = v89;
    v48 = v80;
  }
  else
  {
    v49 = v59;
    v50 = v61;
    v51 = v62;
    (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v61, v79, v62);
    v52 = v64;
    sub_231178454(v34, v64, type metadata accessor for SharedNewRecordsAlertData);
    sub_23118CE98(v66, (uint64_t)&v90);
    v53 = (*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
    v54 = (v60 + *(unsigned __int8 *)(v63 + 80) + v53) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
    v55 = (v65 + v54 + 7) & 0xFFFFFFFFFFFFFFF8;
    v56 = swift_allocObject();
    *(_BYTE *)(v56 + 16) = v67 & 1;
    *(_QWORD *)(v56 + 24) = v68;
    (*(void (**)(unint64_t, char *, uint64_t))(v49 + 32))(v56 + v53, v50, v51);
    sub_2311B1454(v52, v56 + v54, type metadata accessor for SharedNewRecordsAlertData);
    sub_2311789AC(&v90, v56 + v55);
    *(_QWORD *)(v56 + ((v55 + 47) & 0xFFFFFFFFFFFFFFF8)) = v69;
    v57 = v80;
    sub_231262080();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v83, v86);
    (*(void (**)(char *, uint64_t))(v82 + 8))(v81, v85);
    v47 = v89;
    v48 = v57;
    v46 = v77;
    v45 = v78;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v47 + 32))(v45, v48, v46);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v47 + 56))(v45, 0, 1, v46);
}

uint64_t sub_2311F4954(uint64_t a1, char a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v10 = sub_231263B5C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    sub_2311F4B88(a4, a5, a6);
    sub_231178AD0(0, &qword_255EB9808);
    sub_2311787A8(0, qword_254155900);
    sub_231263D00();
    return swift_release();
  }
  else
  {
    sub_231263B44();
    v15 = sub_231263B50();
    v16 = sub_2312643F0();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      v22 = v18;
      *(_DWORD *)v17 = 136315138;
      v19 = sub_231264C84();
      v21 = sub_2311CBDE4(v19, v20, &v22);
      sub_231264750();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23116F000, v15, v16, "%s Not generating notification for shared lab updates", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348D85EC](v18, -1, -1);
      MEMORY[0x2348D85EC](v17, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

uint64_t sub_2311F4B88(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void (*v29)(char *, uint64_t);
  void *v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  __int128 v109;
  uint64_t v110;

  v4 = v3;
  v95 = a3;
  v106 = a2;
  v104 = a1;
  v5 = (_QWORD *)type metadata accessor for SharedNewRecordsAlertData(0);
  v90 = *(v5 - 1);
  MEMORY[0x24BDAC7A8](v5);
  v88 = v6;
  v91 = (uint64_t)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_23126226C();
  v87 = *(_QWORD *)(v89 - 8);
  MEMORY[0x24BDAC7A8](v89);
  v85 = v7;
  v86 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_2312637B4();
  v83 = *(_QWORD *)(v84 - 8);
  MEMORY[0x24BDAC7A8](v84);
  v82 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311F760C();
  v93 = *(_QWORD *)(v9 - 8);
  v94 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v92 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311F776C();
  v97 = *(_QWORD *)(v11 - 8);
  v98 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v96 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311F790C();
  v101 = *(_QWORD *)(v13 - 8);
  v102 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v99 = (char *)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_231263B5C();
  v107 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v75 - v19;
  sub_231263B44();
  v21 = sub_231263B50();
  v22 = sub_2312643F0();
  v23 = os_log_type_enabled(v21, v22);
  v100 = v4;
  v81 = v18;
  if (v23)
  {
    v24 = swift_slowAlloc();
    v105 = v5;
    v25 = v24;
    v26 = swift_slowAlloc();
    *(_QWORD *)&v109 = v26;
    *(_DWORD *)v25 = 136446466;
    v27 = sub_231264C84();
    v108 = sub_2311CBDE4(v27, v28, (uint64_t *)&v109);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2080;
    v108 = sub_2311CBDE4(0xD000000000000051, 0x800000023126D5B0, (uint64_t *)&v109);
    v18 = v81;
    sub_231264750();
    _os_log_impl(&dword_23116F000, v21, v22, "[%{public}s] %s running", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v26, -1, -1);
    MEMORY[0x2348D85EC](v25, -1, -1);
  }

  v29 = *(void (**)(char *, uint64_t))(v107 + 8);
  v29(v20, v15);
  v80 = sub_231262224();
  v79 = sub_231262230();
  sub_231261FFC();
  *(_QWORD *)&v109 = 0;
  *((_QWORD *)&v109 + 1) = 0xE000000000000000;
  sub_2312648C4();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v109 = 0xD000000000000022;
  *((_QWORD *)&v109 + 1) = 0x800000023126D580;
  sub_231264144();
  swift_bridgeObjectRelease();
  v30 = (void *)*((_QWORD *)&v109 + 1);
  v103 = v109;
  sub_23126220C();
  sub_231173410(&v109, v110);
  v107 = sub_2312621AC();
  v78 = v31;
  sub_231173434((uint64_t)&v109);
  sub_231261D98();
  v77 = sub_2312642DC();
  v76 = v32;
  sub_231263B44();
  v105 = v30;
  swift_bridgeObjectRetain_n();
  v33 = sub_231263B50();
  v34 = sub_2312643F0();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = swift_slowAlloc();
    v75 = v15;
    v36 = v35;
    v37 = swift_slowAlloc();
    *(_QWORD *)&v109 = v37;
    *(_DWORD *)v36 = 136446466;
    v38 = v29;
    v39 = v100;
    v40 = sub_231264C84();
    v108 = sub_2311CBDE4(v40, v41, (uint64_t *)&v109);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 12) = 2080;
    v42 = (unint64_t)v105;
    swift_bridgeObjectRetain();
    v108 = sub_2311CBDE4(v103, v42, (uint64_t *)&v109);
    sub_231264750();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23116F000, v33, v34, "[%{public}s] Proceeding with notification generation for %s", (uint8_t *)v36, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v37, -1, -1);
    MEMORY[0x2348D85EC](v36, -1, -1);

    v38(v81, v75);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v29(v18, v15);
    v39 = v100;
  }
  v43 = v83;
  v44 = v82;
  v45 = v84;
  (*(void (**)(char *, _QWORD, uint64_t))(v83 + 104))(v82, *MEMORY[0x24BE44490], v84);
  type metadata accessor for SharedConceptFeedItemGenerator(0);
  sub_231172048(&qword_254152870, type metadata accessor for SharedConceptFeedItemGenerator, (uint64_t)&unk_2312693C8);
  v46 = (void *)v80;
  v47 = sub_231263628();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v45);
  *(_QWORD *)&v109 = v47;
  v48 = v87;
  v49 = v86;
  v50 = v89;
  (*(void (**)(char *, uint64_t, uint64_t))(v87 + 16))(v86, v104, v89);
  v51 = (*(unsigned __int8 *)(v48 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  v52 = (v85 + v51 + 7) & 0xFFFFFFFFFFFFFFF8;
  v53 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v48 + 32))(v53 + v51, v49, v50);
  *(_QWORD *)(v53 + v52) = v39;
  sub_231263CF4();
  sub_231173008();
  sub_2311F6D1C(0);
  sub_231172048((unint64_t *)&qword_2541555A8, (uint64_t (*)(uint64_t))sub_231173008, MEMORY[0x24BDB9AF8]);
  sub_2311F6D54();
  v54 = v92;
  sub_231263F28();
  swift_release();
  swift_release();
  v55 = v91;
  sub_231178454((uint64_t)v106, v91, type metadata accessor for SharedNewRecordsAlertData);
  v56 = (*(unsigned __int8 *)(v90 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
  v57 = (v88 + v56 + 7) & 0xFFFFFFFFFFFFFFF8;
  v58 = (_QWORD *)swift_allocObject();
  v59 = v105;
  v58[2] = v103;
  v58[3] = v59;
  v60 = v76;
  v58[4] = v77;
  v58[5] = v60;
  v61 = (uint64_t)v58 + v56;
  v62 = (void *)v79;
  v58[6] = v46;
  v58[7] = v62;
  sub_2311B1454(v55, v61, type metadata accessor for SharedNewRecordsAlertData);
  v63 = (_QWORD *)((char *)v58 + v57);
  v64 = v78;
  *v63 = v107;
  v63[1] = v64;
  *(_QWORD *)((char *)v58 + ((v57 + 23) & 0xFFFFFFFFFFFFFFF8)) = v39;
  v106 = v62;
  swift_unknownObjectRetain();
  v105 = v46;
  sub_231263CF4();
  sub_2311F7848();
  sub_2311F6EE4(0, &qword_255EB9830, (uint64_t (*)(uint64_t))sub_2311F7848, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_231172048(&qword_255EB9848, (uint64_t (*)(uint64_t))sub_2311F760C, MEMORY[0x24BDB98F0]);
  sub_2311F78C4(&qword_255EB9840, &qword_255EB9830, (uint64_t (*)(uint64_t))sub_2311F7848);
  v65 = v96;
  v66 = v94;
  sub_231263EE0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v93 + 8))(v54, v66);
  sub_23118CE98(v95, (uint64_t)&v109);
  v67 = swift_allocObject();
  sub_2311789AC(&v109, v67 + 16);
  *(_QWORD *)(v67 + 56) = v39;
  v68 = swift_allocObject();
  *(_QWORD *)(v68 + 16) = sub_2311F7CD8;
  *(_QWORD *)(v68 + 24) = v67;
  sub_231263CF4();
  sub_231178AD0(0, &qword_255EB9808);
  sub_2311F79B8();
  v69 = MEMORY[0x24BDB98F0];
  sub_231172048(&qword_255EB9868, (uint64_t (*)(uint64_t))sub_2311F776C, MEMORY[0x24BDB98F0]);
  sub_2311F7A44();
  v71 = v98;
  v70 = v99;
  sub_231263EE0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v65, v71);
  sub_231172048(&qword_255EB9870, (uint64_t (*)(uint64_t))sub_2311F790C, v69);
  v72 = v102;
  v73 = sub_231263E38();

  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v101 + 8))(v70, v72);
  return v73;
}

uint64_t sub_2311F5670@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint8_t *v15;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20[4];

  v4 = sub_231263B5C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231263B44();
  v8 = sub_231263B50();
  v9 = sub_2312643F0();
  if (os_log_type_enabled(v8, v9))
  {
    v17 = a1;
    v10 = swift_slowAlloc();
    v18 = a2;
    v11 = (uint8_t *)v10;
    v12 = swift_slowAlloc();
    v20[0] = v12;
    *(_DWORD *)v11 = 136446210;
    v13 = sub_231264C84();
    v19 = sub_2311CBDE4(v13, v14, v20);
    sub_231264750();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23116F000, v8, v9, "[%{public}s] Update notifications are enabled", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v12, -1, -1);
    v15 = v11;
    a2 = v18;
    MEMORY[0x2348D85EC](v15, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_23126220C();
  sub_231173410(v20, v20[3]);
  *a2 = sub_2312621B8();
  return sub_231173434((uint64_t)v20);
}

uint64_t sub_2311F584C@<X0>(uint64_t a1@<X0>, void *a2@<X5>, char *a3@<X6>, uint64_t a4@<X7>, uint64_t *a5@<X8>, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  os_log_type_t v29;
  id v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  void *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  void *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59[2];

  v45 = a3;
  v46 = a4;
  v44 = a2;
  v57 = a5;
  v50 = a7;
  v51 = a6;
  sub_2311F7EA8(0, &qword_255EB9898, (void (*)(uint64_t))sub_2311F79B8, (void (*)(uint64_t))sub_2311F7848, (void (*)(void))sub_2311F7A44);
  v55 = *(_QWORD *)(v8 - 8);
  v56 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v54 = (char *)&v44 - v9;
  v10 = sub_231263B5C();
  v47 = *(_QWORD *)(v10 - 8);
  v48 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_231261E94();
  MEMORY[0x24BDAC7A8](v13);
  v14 = sub_2312624B8();
  v52 = *(_QWORD *)(v14 - 8);
  v53 = v14;
  v15 = *(_QWORD *)(v52 + 64);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v49 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v44 - v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_231261E88();
  sub_231262494();
  v19 = (void *)sub_2311F5D34(v44, v45, a1, v46, (uint64_t)v18);
  sub_231263B44();
  v20 = v19;
  v21 = sub_231263B50();
  v22 = sub_2312643F0();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    v46 = swift_slowAlloc();
    v59[0] = v46;
    *(_DWORD *)v23 = 136446466;
    v24 = sub_231264C84();
    v58 = sub_2311CBDE4(v24, v25, v59);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2080;
    v44 = (void *)(v23 + 14);
    v26 = v20;
    v27 = (id)HKSensitiveLogItem();
    sub_2312647B0();
    swift_unknownObjectRelease();
    v28 = sub_2312640B4();
    v45 = v12;
    v29 = v22;
    v30 = v20;
    v32 = v31;

    v58 = sub_2311CBDE4(v28, v32, v59);
    sub_231264750();

    v20 = v30;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23116F000, v21, v29, "[%{public}s] Generating notification: %s", (uint8_t *)v23, 0x16u);
    v33 = v46;
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v33, -1, -1);
    MEMORY[0x2348D85EC](v23, -1, -1);

    (*(void (**)(char *, uint64_t))(v47 + 8))(v45, v48);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v47 + 8))(v12, v48);
  }
  swift_getObjectType();
  v58 = sub_23126247C();
  v35 = v52;
  v34 = v53;
  v36 = v49;
  (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v49, v18, v53);
  v37 = (*(unsigned __int8 *)(v35 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  v38 = swift_allocObject();
  v39 = v20;
  (*(void (**)(unint64_t, char *, uint64_t))(v35 + 32))(v38 + v37, v36, v34);
  sub_2311F79B8();
  sub_2311F7848();
  sub_2311F7A44();
  v40 = v54;
  sub_231263E80();
  swift_release();
  swift_release();
  sub_2311F7FD4();
  v41 = v56;
  v42 = sub_231263E38();

  (*(void (**)(char *, uint64_t))(v55 + 8))(v40, v41);
  result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v18, v34);
  *v57 = v42;
  return result;
}

uint64_t sub_2311F5D34(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  void *v11;
  uint64_t v13;

  v11 = (void *)MEMORY[0x2348D810C]();
  sub_2311F6200(a1, a3, a4, v5, a5, a2, v5, &v13);
  objc_autoreleasePoolPop(v11);
  return v13;
}

id sub_2311F5DBC@<X0>(id *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v9;

  v9 = *a1;
  sub_2311F7848();
  v6 = (char *)a3 + *(int *)(v5 + 48);
  *a3 = v9;
  v7 = sub_2312624B8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v6, a2, v7);
  return v9;
}

uint64_t sub_2311F5E30(void *a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  char *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  void *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v34 = a4;
  v36 = a3;
  v37 = a1;
  sub_2311F7D5C();
  v6 = v5;
  v39 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v38 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2312624B8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_231263B5C();
  v35 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231263B44();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  v15 = sub_231263B50();
  v16 = sub_2312643F0();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v33 = a2;
    v18 = v17;
    v31 = swift_slowAlloc();
    v41 = v31;
    *(_DWORD *)v18 = 136446466;
    v19 = sub_231264C84();
    v32 = v12;
    v40 = sub_2311CBDE4(v19, v20, &v41);
    v34 = v6;
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    v21 = sub_2312624A0();
    v40 = sub_2311CBDE4(v21, v22, &v41);
    v6 = v34;
    sub_231264750();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    _os_log_impl(&dword_23116F000, v15, v16, "[%{public}s] Saving content state: %s", (uint8_t *)v18, 0x16u);
    v23 = v31;
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v23, -1, -1);
    MEMORY[0x2348D85EC](v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v32);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);

    (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v12);
  }
  sub_231173410(v36, v36[3]);
  v41 = sub_2312623B0();
  v24 = swift_allocObject();
  v25 = v37;
  *(_QWORD *)(v24 + 16) = v37;
  sub_2311F7E00();
  sub_231178AD0(0, &qword_255EB9808);
  sub_231172048(&qword_255EB9888, (uint64_t (*)(uint64_t))sub_2311F7E00, MEMORY[0x24BDB9AF8]);
  v26 = v25;
  v27 = v38;
  sub_231263E80();
  swift_release();
  swift_release();
  sub_231172048(&qword_255EB9890, (uint64_t (*)(uint64_t))sub_2311F7D5C, MEMORY[0x24BDB96C0]);
  v28 = sub_231263E38();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v27, v6);
  return v28;
}

uint64_t sub_2311F6200@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void *v53;
  uint64_t v54;
  void *v55;
  void *v56;
  uint64_t v57;
  char *v58;
  id v59;
  id v60;
  id v61;
  id v62;
  NSObject *v63;
  os_log_type_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  id v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  void *v74;
  id v75;
  void *v76;
  id v77;
  uint64_t result;
  _QWORD v79[2];
  uint64_t v80;
  uint64_t v81;
  char *v82;
  void (*v83)(char *, uint64_t);
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  id v93;
  void *v94;
  id v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;

  v79[1] = a7;
  v94 = a6;
  v90 = a5;
  v92 = a4;
  v85 = a2;
  v86 = a3;
  v84 = a1;
  v96 = a8;
  v81 = sub_231263B5C();
  v80 = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81);
  v82 = (char *)v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2311735E0(0, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v11);
  v91 = (char *)v79 - v12;
  sub_2311F803C(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v89 = (char *)v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v98 = (uint64_t)v79 - v16;
  v17 = sub_231262B60();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, (unint64_t *)&qword_254151918, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], v10);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)v79 - v22;
  v24 = sub_231261E94();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)v79 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = objc_msgSend(a1, sel_profileIdentifier);
  v28 = objc_msgSend(v95, sel_identifier);
  sub_231261E7C();

  v100 = sub_231261E58();
  v97 = v29;
  v87 = v25;
  v88 = v24;
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  v99 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDF8800]), sel_init);
  v30 = sub_231261EAC();
  v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56);
  v31(v23, 1, 1, v30);
  sub_231262B54();
  sub_2312632EC();
  v83 = *(void (**)(char *, uint64_t))(v18 + 8);
  v83(v20, v17);
  sub_231189628((uint64_t)v23, (unint64_t *)&qword_254151918, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8]);
  sub_231264078();
  swift_bridgeObjectRelease();
  v32 = (void *)sub_23126406C();
  swift_bridgeObjectRelease();
  v33 = v99;
  objc_msgSend(v99, sel_setTitle_, v32);

  v31(v23, 1, 1, v30);
  sub_231262B48();
  sub_2312632EC();
  v83(v20, v17);
  sub_231189628((uint64_t)v23, (unint64_t *)&qword_254151918, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8]);
  sub_2311F8058();
  v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_231265570;
  v35 = sub_231262398();
  v37 = v36;
  *(_QWORD *)(v34 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v34 + 64) = sub_23117A630();
  *(_QWORD *)(v34 + 32) = v35;
  *(_QWORD *)(v34 + 40) = v37;
  v38 = *(_QWORD *)(v86 + *(int *)(type metadata accessor for SharedNewRecordsAlertData(0) + 20));
  v39 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v34 + 96) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v34 + 104) = v39;
  *(_QWORD *)(v34 + 72) = v38;
  sub_231264078();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v40 = (void *)sub_23126406C();
  swift_bridgeObjectRelease();
  objc_msgSend(v33, sel_setBody_, v40);

  v41 = (void *)sub_23126406C();
  objc_msgSend(v33, sel_setCategoryIdentifier_, v41);

  v42 = (void *)sub_23126406C();
  objc_msgSend(v33, sel_setThreadIdentifier_, v42);

  v43 = objc_msgSend(v84, sel_profileIdentifier);
  v44 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE3F820]), sel_initWithProfileIdentifier_, v43);

  v45 = objc_msgSend(v44, sel_URLForSharingOverview);
  if (v45)
  {
    v46 = v45;
    v47 = (uint64_t)v89;
    sub_231261D68();

    v48 = sub_231261D74();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v47, 0, 1, v48);
  }
  else
  {
    v49 = sub_231261D74();
    v47 = (uint64_t)v89;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v89, 1, 1, v49);
  }
  v50 = v98;
  sub_2311B1454(v47, v98, (uint64_t (*)(_QWORD))sub_2311F803C);
  v51 = (uint64_t)v91;
  sub_2312624AC();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v87 + 56))(v51, 0, 1, v88);
  type metadata accessor for SharedConceptFeedItemGenerator(0);
  sub_231172048(&qword_254152870, type metadata accessor for SharedConceptFeedItemGenerator, (uint64_t)&unk_2312693C8);
  sub_231263634();
  sub_231189628(v51, &qword_254153510, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
  v52 = (void *)sub_231263FB8();
  swift_bridgeObjectRelease();
  objc_msgSend(v33, sel_setUserInfo_, v52);

  v53 = (void *)sub_231263640();
  objc_msgSend(v33, sel_setSound_, v53);

  sub_2311F82A8(0, (unint64_t *)&qword_254154688);
  v54 = swift_allocObject();
  *(_OWORD *)(v54 + 16) = xmmword_231265B60;
  v55 = v93;
  v56 = v94;
  v57 = sub_23126361C();
  if (v55)
  {
    *(_QWORD *)(v54 + 16) = 0;
    swift_release();
    v58 = v82;
    sub_231263B44();
    v59 = v55;
    v60 = v56;
    v61 = v55;
    v62 = v60;
    v63 = sub_231263B50();
    v64 = sub_2312643D8();
    if (os_log_type_enabled(v63, v64))
    {
      v65 = swift_slowAlloc();
      v92 = swift_slowAlloc();
      v101 = v92;
      *(_DWORD *)v65 = 136315650;
      v66 = sub_231264C84();
      v93 = v44;
      v103 = sub_2311CBDE4(v66, v67, &v101);
      sub_231264750();
      swift_bridgeObjectRelease();
      *(_WORD *)(v65 + 12) = 2080;
      v68 = sub_231261FFC();
      v103 = sub_2311CBDE4(v68, v69, &v101);
      sub_231264750();

      v44 = v93;
      swift_bridgeObjectRelease();
      *(_WORD *)(v65 + 22) = 2080;
      v103 = (uint64_t)v55;
      v70 = v55;
      sub_2311787A8(0, qword_254155900);
      v71 = sub_2312640CC();
      v103 = sub_2311CBDE4(v71, v72, &v101);
      v50 = v98;
      sub_231264750();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23116F000, v63, v64, "[%s] [Contact Photo] Could not create notification attachment for %s. %s", (uint8_t *)v65, 0x20u);
      v73 = v92;
      swift_arrayDestroy();
      MEMORY[0x2348D85EC](v73, -1, -1);
      MEMORY[0x2348D85EC](v65, -1, -1);

      (*(void (**)(char *, uint64_t))(v80 + 8))(v82, v81);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v80 + 8))(v58, v81);
    }
    v33 = v99;
  }
  else
  {
    *(_QWORD *)(v54 + 32) = v57;
    v101 = v54;
    sub_231264210();
    sub_231178AD0(0, &qword_255EB98A8);
    v74 = (void *)sub_2312641EC();
    swift_bridgeObjectRelease();
    objc_msgSend(v33, sel_setAttachments_, v74);

  }
  v101 = 0;
  v102 = 0xE000000000000000;
  sub_2312648C4();
  swift_bridgeObjectRelease();
  v101 = 0xD000000000000022;
  v102 = 0x800000023126D580;
  sub_231264144();
  swift_bridgeObjectRelease();
  v75 = v33;
  v76 = (void *)sub_23126406C();
  swift_bridgeObjectRelease();
  v77 = objc_msgSend((id)objc_opt_self(), sel_requestWithIdentifier_content_trigger_, v76, v75, 0);

  result = sub_231178498(v50, (uint64_t (*)(_QWORD))sub_2311F803C);
  *v96 = v77;
  return result;
}

void sub_2311F6D1C(uint64_t a1)
{
  sub_2311F6EE4(a1, &qword_254154500, (uint64_t (*)(uint64_t))MEMORY[0x24BE47CC8], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
}

void sub_2311F6D38(uint64_t a1)
{
  sub_2311735E0(a1, qword_254151AF0, type metadata accessor for SharedNewRecordsAlertData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

uint64_t sub_2311F6D54()
{
  return sub_231172048(&qword_2541544F8, (uint64_t (*)(uint64_t))sub_2311F6D1C, MEMORY[0x24BDB9AF8]);
}

void sub_2311F6D70()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254154430)
  {
    sub_2311F6E34();
    sub_2311F7EA8(255, &qword_254154158, sub_2311F6D1C, sub_2311F6D38, (void (*)(void))sub_2311F6D54);
    sub_231172048(&qword_254154160, (uint64_t (*)(uint64_t))sub_2311F6E34, MEMORY[0x24BDB96C0]);
    sub_2311F6FE4();
    v0 = sub_231263CA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254154430);
  }
}

void sub_2311F6E34()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254154168)
  {
    sub_2311F6EE4(255, &qword_254154510, (uint64_t (*)(uint64_t))sub_2311F6F64, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_2311F6F80();
    sub_2311F78C4(&qword_254154508, &qword_254154510, (uint64_t (*)(uint64_t))sub_2311F6F64);
    v0 = sub_231263C1C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254154168);
  }
}

void sub_2311F6EE4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = sub_2311787A8(255, qword_254155900);
    v9 = a4(a1, v7, v8, MEMORY[0x24BEE3F20]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_2311F6F64(uint64_t a1)
{
  sub_2311735E0(a1, &qword_254153EF8, (uint64_t (*)(uint64_t))MEMORY[0x24BE48068], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

void sub_2311F6F80()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_254153518)
  {
    sub_2311F6D38(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_254153518);
  }
}

unint64_t sub_2311F6FE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254154150;
  if (!qword_254154150)
  {
    sub_2311F7EA8(255, &qword_254154158, sub_2311F6D1C, sub_2311F6D38, (void (*)(void))sub_2311F6D54);
    result = MEMORY[0x2348D8544](MEMORY[0x24BDB96C0], v1);
    atomic_store(result, (unint64_t *)&qword_254154150);
  }
  return result;
}

void sub_2311F704C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254154308)
  {
    sub_2311F6D70();
    sub_2311889BC(255);
    sub_231172048(&qword_254154428, (uint64_t (*)(uint64_t))sub_2311F6D70, MEMORY[0x24BDB98F0]);
    v0 = sub_231263C88();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254154308);
  }
}

void sub_2311F70E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254154228)
  {
    sub_2311F704C();
    sub_2311F6EE4(255, &qword_254152EF8, (uint64_t (*)(uint64_t))sub_2311889BC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_231172048(&qword_254154300, (uint64_t (*)(uint64_t))sub_2311F704C, MEMORY[0x24BDB98C8]);
    sub_2311F78C4((unint64_t *)&qword_254152EF0, &qword_254152EF8, (uint64_t (*)(uint64_t))sub_2311889BC);
    v0 = sub_231263C40();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254154228);
  }
}

uint64_t sub_2311F71BC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_2311F71E0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_2311F26C8(a1, *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_2311F71E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23126226C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2311F7264@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(sub_23126226C() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_2311F3018(a1, v2 + v6, *(_QWORD *)(v2 + v7), *(_QWORD *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFF8)), a2);
}

uint64_t sub_2311F72D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23126226C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2311F736C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(sub_23126226C() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_2311F37E0(a1, a2, *(void (**)(char *, char *, uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), v2 + v6, *(_QWORD *)(v2 + v7), *(_QWORD *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_2311F73E8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v6)(uint64_t, _QWORD);
  uint64_t v7;
  uint64_t result;

  v6 = *(uint64_t (**)(uint64_t, _QWORD))(v2 + 16);
  sub_2311F6F80();
  result = v6(a1, *(unsigned __int8 *)(a1 + *(int *)(v7 + 48)));
  if (!v3)
    *a2 = result;
  return result;
}

uint64_t sub_2311F7444()
{
  return swift_deallocObject();
}

uint64_t sub_2311F7454@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_2311F3EA4(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_2311F745C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v1 = sub_23126226C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for SharedNewRecordsAlertData(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v9 = sub_23126292C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v7, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = v0 + v7 + *(int *)(v5 + 32);
  v11 = sub_231261E40();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  sub_231173434(v0 + v8);
  return swift_deallocObject();
}

uint64_t sub_2311F757C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = *(_QWORD *)(sub_23126226C() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(type metadata accessor for SharedNewRecordsAlertData(0) - 8);
  v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return sub_2311F4954(a1, *(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + v4, (void *)(v1 + v7), v1 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
}

void sub_2311F760C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255EB9810)
  {
    sub_2311F6D1C(255);
    sub_2311F76B8();
    sub_2311F6D54();
    sub_231172048(&qword_255EB9820, (uint64_t (*)(uint64_t))sub_2311F76B8, MEMORY[0x24BDB95F8]);
    v0 = sub_231263CA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255EB9810);
  }
}

void sub_2311F76B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255EB9818)
  {
    sub_231173008();
    sub_2311787A8(255, qword_254155900);
    sub_231172048((unint64_t *)&qword_2541555A8, (uint64_t (*)(uint64_t))sub_231173008, MEMORY[0x24BDB9AF8]);
    v0 = sub_231263C04();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255EB9818);
  }
}

void sub_2311F776C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255EB9828)
  {
    sub_2311F6EE4(255, &qword_255EB9830, (uint64_t (*)(uint64_t))sub_2311F7848, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_2311F760C();
    sub_2311F78C4(&qword_255EB9840, &qword_255EB9830, (uint64_t (*)(uint64_t))sub_2311F7848);
    sub_231172048(&qword_255EB9848, (uint64_t (*)(uint64_t))sub_2311F760C, MEMORY[0x24BDB98F0]);
    v0 = sub_231263CA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255EB9828);
  }
}

void sub_2311F7848()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255EB9838)
  {
    sub_231178AD0(255, &qword_255EB9808);
    sub_2312624B8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255EB9838);
  }
}

uint64_t sub_2311F78C4(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_2311F6EE4(255, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    result = MEMORY[0x2348D8544](MEMORY[0x24BDB9AF8], v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_2311F790C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255EB9850)
  {
    sub_2311F79B8();
    sub_2311F776C();
    sub_2311F7A44();
    sub_231172048(&qword_255EB9868, (uint64_t (*)(uint64_t))sub_2311F776C, MEMORY[0x24BDB98F0]);
    v0 = sub_231263CA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255EB9850);
  }
}

void sub_2311F79B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255EB9858)
  {
    sub_231178AD0(255, &qword_255EB9808);
    sub_2311787A8(255, qword_254155900);
    v0 = sub_231263D0C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255EB9858);
  }
}

uint64_t sub_2311F7A44()
{
  return sub_231172048(&qword_255EB9860, (uint64_t (*)(uint64_t))sub_2311F79B8, MEMORY[0x24BDB9AF8]);
}

uint64_t sub_2311F7A60()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23126226C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_2311F7ACC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_23126226C() - 8) + 80);
  return sub_2311F5670(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_2311F7B2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for SharedNewRecordsAlertData(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 64) & ~v2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v4 = v0 + v3;
  v5 = sub_23126292C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = v4 + *(int *)(v1 + 32);
  v7 = sub_231261E40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2311F7C24@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(type metadata accessor for SharedNewRecordsAlertData(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_2311F584C(a1, *(void **)(v2 + 48), *(char **)(v2 + 56), v2 + v6, a2, *(_QWORD *)(v2 + v7), *(_QWORD *)(v2 + v7 + 8));
}

uint64_t sub_2311F7CB4()
{
  uint64_t v0;

  sub_231173434(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_2311F7CD8(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2311F5E30(a1, a2, (_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 56));
}

uint64_t sub_2311F7CE4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2311F7D08@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t (*v5)(uint64_t, char *);
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v5 = *(uint64_t (**)(uint64_t, char *))(v2 + 16);
  v6 = *(_QWORD *)a1;
  sub_2311F7848();
  result = v5(v6, &a1[*(int *)(v7 + 48)]);
  *a2 = result;
  return result;
}

void sub_2311F7D5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255EB9878)
  {
    sub_2311F7E00();
    sub_231178AD0(255, &qword_255EB9808);
    sub_231172048(&qword_255EB9888, (uint64_t (*)(uint64_t))sub_2311F7E00, MEMORY[0x24BDB9AF8]);
    v0 = sub_231263C1C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255EB9878);
  }
}

void sub_2311F7E00()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255EB9880)
  {
    sub_2311787A8(255, qword_254155900);
    v0 = sub_231263D0C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255EB9880);
  }
}

uint64_t sub_2311F7E78()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_2311F7E9C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 16);
  *a1 = v2;
  return v2;
}

void sub_2311F7EA8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t), void (*a5)(void))
{
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    a3(255);
    a4(255);
    a5();
    v8 = sub_231263C1C();
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_2311F7F28()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_2312624B8();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

id sub_2311F7F88@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_2312624B8() - 8) + 80);
  return sub_2311F5DBC(a1, v2 + ((v5 + 16) & ~v5), a2);
}

unint64_t sub_2311F7FD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255EB98A0;
  if (!qword_255EB98A0)
  {
    sub_2311F7EA8(255, &qword_255EB9898, (void (*)(uint64_t))sub_2311F79B8, (void (*)(uint64_t))sub_2311F7848, (void (*)(void))sub_2311F7A44);
    result = MEMORY[0x2348D8544](MEMORY[0x24BDB96C0], v1);
    atomic_store(result, (unint64_t *)&qword_255EB98A0);
  }
  return result;
}

void sub_2311F803C(uint64_t a1)
{
  sub_2311735E0(a1, &qword_255EB8018, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

void sub_2311F8058()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254155750)
  {
    sub_2311787A8(255, (unint64_t *)&qword_254155770);
    v0 = sub_231264B34();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254155750);
  }
}

uint64_t sub_2311F80BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  sub_2311F6D38(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_23126226C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = type metadata accessor for SharedNewRecordsAlertData(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v0 + v3, 1, v8))
  {
    v9 = sub_23126292C();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v3, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10 = v0 + v3 + *(int *)(v8 + 32);
    v11 = sub_231261E40();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + ((((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + v7 + 16) & ~v7), v5);
  return swift_deallocObject();
}

uint64_t sub_2311F8208@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;

  sub_2311F6D38(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(sub_23126226C() - 8);
  v8 = (v6 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return sub_2311F33AC(v1 + v5, *(_QWORD *)(v1 + v6), *(_QWORD *)(v1 + v6 + 8), v1 + v8, *(_QWORD *)(v1 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8)), a1);
}

void sub_2311F82A8(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_231264B34();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_2311F82EC(uint64_t a1)
{
  uint64_t v1;

  return sub_2311F2918(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24)) & 1;
}

uint64_t sub_2311F830C()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_2312626E0();
  sub_2311D4F3C(v0, qword_254155A30);
  v1 = sub_2311D3D04(v0, (uint64_t)qword_254155A30);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, *MEMORY[0x24BE48DF0], v0);
}

_QWORD *sub_2311F8364(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  v19 = *v1;
  v17 = sub_2312621DC();
  v4 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_2312621F4();
  v7 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311733CC(a1, (uint64_t)v1 + OBJC_IVAR____TtC13HealthRecords26RemovedCategoriesGenerator_context);
  v16 = sub_231262230();
  sub_2311735E0(0, &qword_254155718, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v10 = sub_231261FA8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_231265AC0;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v11 + 104))(v13 + v12, *MEMORY[0x24BE47408], v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BE47910], v17);
  sub_2312621E8();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))((uint64_t)v2 + OBJC_IVAR____TtC13HealthRecords26RemovedCategoriesGenerator_domain, v9, v18);
  v14 = sub_2311F8540(a1);
  sub_231178498(a1, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
  v2[2] = v14;
  return v2;
}

id sub_2311F8540(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, _QWORD *);
  void *v34;
  void *v35;
  uint64_t v36;
  id v37;
  id v38;
  char *v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  id v45;
  id result;
  id v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t (*v62)(void);
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  void (**v77)(_QWORD, _QWORD);
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  __int128 v111;
  uint64_t v112;

  v2 = type metadata accessor for HealthRecordsGeneratorContext();
  v88 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v78 = v3;
  v91 = (uint64_t)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, &qword_254153F28, (uint64_t (*)(uint64_t))MEMORY[0x24BEE7758], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v84 = (uint64_t)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v83 = (char *)&v75 - v7;
  v82 = sub_231261FC0();
  v81 = *(_QWORD *)(v82 - 8);
  MEMORY[0x24BDAC7A8](v82);
  v80 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231188B88(0, &qword_2541540F8, (uint64_t (*)(uint64_t))sub_2311F9CE8, sub_2311F9D6C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE48528]);
  v87 = v9;
  v86 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v85 = (char *)&v75 - v10;
  sub_2311F9D88();
  v93 = v11;
  v92 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v90 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311F9E88();
  v96 = *(_QWORD *)(v13 - 8);
  v97 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v95 = (char *)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311F9F64();
  v102 = v15;
  v100 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v98 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311FA010();
  v103 = v17;
  v101 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v99 = (char *)&v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231188B88(0, &qword_2541540A8, v19, sub_2311FA0D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB9598]);
  v94 = v20;
  v105 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v104 = (char *)&v75 - v21;
  v22 = sub_231261E94();
  v77 = *(void (***)(_QWORD, _QWORD))(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v76 = (char *)&v75 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = (_QWORD *)sub_2312626E0();
  v25 = *(v24 - 1);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v75 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231261C78();
  swift_allocObject();
  v28 = sub_231261C6C();
  sub_2312628A8();
  v29 = (void *)sub_231262884();
  sub_23126220C();
  sub_231173410(&v111, v112);
  v30 = (void *)sub_231262194();
  v31 = objc_msgSend(v30, sel_profileIdentifier);

  v107 = sub_23126286C();
  sub_231173434((uint64_t)&v111);
  sub_23126220C();
  if (qword_254152338 != -1)
    swift_once();
  v32 = sub_2311D3D04((uint64_t)v24, (uint64_t)qword_254155A30);
  v33 = *(void (**)(char *, uint64_t, _QWORD *))(v25 + 16);
  v106 = v24;
  v33(v27, v32, v24);
  v89 = a1;
  v34 = (void *)sub_231262230();
  v35 = (void *)sub_231261FF0();
  v36 = sub_2312626C8();
  v108 = v28;
  if (v35)
  {
    v109 = 0x656C69666F72505BLL;
    v110 = 0xE90000000000003ALL;
    v75 = v36;
    v37 = v35;
    v38 = objc_msgSend(v37, sel_identifier);
    v39 = v76;
    sub_231261E7C();

    sub_231261E58();
    ((void (**)(char *, uint64_t))v77)[1](v39, v22);
    sub_231264144();
    swift_bridgeObjectRelease();
    sub_231264144();

    v40 = v109;
    v41 = v110;
  }
  else
  {
    v41 = 0x800000023126B610;
    v40 = 0xD000000000000013;
  }
  v109 = v40;
  v110 = v41;
  sub_231264144();

  swift_bridgeObjectRelease();
  v42 = v109;
  v43 = v110;
  (*(void (**)(char *, id))(v25 + 8))(v27, v106);
  type metadata accessor for FeedItemContextChangeGenerator();
  v44 = swift_allocObject();
  sub_2311789AC(&v111, v44 + 16);
  *(_QWORD *)(v44 + 56) = v42;
  *(_QWORD *)(v44 + 64) = v43;
  v45 = objc_msgSend((id)objc_opt_self(), sel_predicateForMedicalRecordWithState_, 1);
  sub_2311FA0F4();
  result = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_diagnosticTestResultTypeForIdentifier_, *MEMORY[0x24BDD2BB0]);
  if (result)
  {
    v47 = result;
    v77 = (void (**)(_QWORD, _QWORD))v47;
    v106 = v45;
    v48 = sub_231263004();

    v49 = v81;
    v50 = v80;
    v51 = v82;
    (*(void (**)(char *, _QWORD, uint64_t))(v81 + 104))(v80, *MEMORY[0x24BE47510], v82);
    sub_231261FB4();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v51);
    v52 = sub_231263AF0();
    v53 = (uint64_t)v83;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v83, 1, 1, v52);
    *(_QWORD *)&v111 = v48;
    sub_2311FA130(v53, v84);
    sub_2311F9CE8();
    sub_2311F9D6C();
    swift_retain();
    v54 = v85;
    sub_231263BF8();
    sub_2311FA18C(v53);
    swift_release();
    v55 = v91;
    sub_2311733CC(v89, v91);
    v56 = (*(unsigned __int8 *)(v88 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
    v57 = (v78 + v56 + 7) & 0xFFFFFFFFFFFFFFF8;
    v58 = swift_allocObject();
    v59 = v79;
    *(_QWORD *)(v58 + 16) = v79;
    sub_23117353C(v55, v58 + v56);
    *(_QWORD *)(v58 + v57) = v108;
    sub_2311889BC(0);
    sub_2311F9E20();
    swift_retain();
    v60 = v90;
    v61 = v87;
    sub_231263EBC();
    swift_release();
    (*(void (**)(char *, uint64_t))(v86 + 8))(v54, v61);
    v62 = MEMORY[0x24BDB9AE0];
    sub_231188FDC(0, &qword_254152EF8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    v63 = MEMORY[0x24BDB98C8];
    sub_231172048(&qword_254154320, (uint64_t (*)(uint64_t))sub_2311F9D88, MEMORY[0x24BDB98C8]);
    v64 = MEMORY[0x24BDB9AF8];
    sub_231189178((unint64_t *)&qword_254152EF0, &qword_254152EF8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v62, MEMORY[0x24BDB9AF8]);
    v65 = v95;
    v66 = v93;
    sub_231263E8C();
    (*(void (**)(char *, uint64_t))(v92 + 8))(v60, v66);
    sub_231171FD8(0, (unint64_t *)&qword_254155638, MEMORY[0x24BE47F58], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    sub_231172048(&qword_254154240, (uint64_t (*)(uint64_t))sub_2311F9E88, MEMORY[0x24BDB9740]);
    swift_retain();
    v67 = v97;
    v68 = v98;
    sub_231263EBC();
    swift_release();
    (*(void (**)(char *, uint64_t))(v96 + 8))(v65, v67);
    *(_QWORD *)(swift_allocObject() + 16) = v59;
    sub_231187D64();
    sub_231172048(&qword_254154330, (uint64_t (*)(uint64_t))sub_2311F9F64, v63);
    sub_231172048(&qword_254152F30, (uint64_t (*)(uint64_t))sub_231187D64, v64);
    v69 = v99;
    v70 = v102;
    sub_231263E8C();
    swift_release();
    (*(void (**)(char *, uint64_t))(v100 + 8))(v68, v70);
    *(_QWORD *)&v111 = MEMORY[0x24BEE4AF8];
    sub_2311FA0D8();
    v71 = v103;
    v72 = v104;
    sub_231263E5C();
    (*(void (**)(char *, uint64_t))(v101 + 8))(v69, v71);
    sub_2311FA304();
    v73 = v94;
    v74 = sub_231263E38();

    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v105 + 8))(v72, v73);
    return (id)v74;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2311F9068@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, unint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  unint64_t *v20;
  void *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  unint64_t *v27;

  v26[1] = a3;
  v27 = a4;
  v7 = sub_23126292C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23126217C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)v26 - v17;
  if ((*a1 & 1) != 0)
  {
    v26[0] = result;
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BE490B8], v7);
    v21 = (void *)sub_231262230();
    sub_2311F927C((uint64_t)v10, a2, (uint64_t)v18);
    if (v4)
    {

      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);

    (*(void (**)(char *, char *, _QWORD))(v12 + 16))(v15, v18, v26[0]);
    v19 = sub_2311DCA10(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v23 = *(_QWORD *)(v19 + 16);
    v22 = *(_QWORD *)(v19 + 24);
    if (v23 >= v22 >> 1)
      v19 = sub_2311DCA10(v22 > 1, v23 + 1, 1, v19);
    v20 = v27;
    *(_QWORD *)(v19 + 16) = v23 + 1;
    v24 = v19
        + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))
        + *(_QWORD *)(v12 + 72) * v23;
    v25 = v26[0];
    (*(void (**)(unint64_t, char *, _QWORD))(v12 + 32))(v24, v15, v26[0]);
    result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v18, v25);
  }
  else
  {
    v19 = MEMORY[0x24BEE4AF8];
    v20 = v27;
  }
  *v20 = v19;
  return result;
}

uint64_t sub_2311F927C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(_BYTE *, _QWORD);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[32];
  uint64_t v27[4];

  v25 = a3;
  v23 = sub_231261FA8();
  v5 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for RemovedCategoryFeedItemData();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *MEMORY[0x24BE48FD8];
  v12 = sub_23126283C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  v13 = &v10[*(int *)(v8 + 20)];
  v14 = sub_23126292C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v13, a1, v14);
  v24 = a2;
  v15 = (void *)sub_231262230();
  sub_23126328C();

  sub_231172048(&qword_255EB98B8, (uint64_t (*)(uint64_t))type metadata accessor for RemovedCategoryFeedItemData, (uint64_t)&protocol conformance descriptor for RemovedCategoryFeedItemData);
  v16 = v27[3];
  sub_231261C60();
  if (v16)
  {
    sub_231178498((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for RemovedCategoryFeedItemData);
    return swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for NavigationFeedItemViewController();
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BE47408], v23);
    sub_231262230();
    sub_231262038();
    sub_2312620BC();
    v18 = sub_231262338();
    v20 = v19;
    v21 = (void (*)(_BYTE *, _QWORD))sub_23126214C();
    sub_2312519E4(v27, v18, v20);
    swift_bridgeObjectRelease();
    v21(v26, 0);
    return sub_231178498((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for RemovedCategoryFeedItemData);
  }
}

uint64_t sub_2311F94E0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint8_t *v22;
  id v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t result;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_2311735E0(0, &qword_254153040, (uint64_t (*)(uint64_t))sub_2311889BC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v5 = v4;
  v39 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v31 - v6;
  sub_231188FDC(0, &qword_254153250, MEMORY[0x24BDBA1B0]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v31 - v11;
  v13 = sub_231263B5C();
  v37 = *(_QWORD *)(v13 - 8);
  v38 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a1;
  sub_231263B08();
  v17 = v16;
  v18 = v16;
  v19 = sub_231263B50();
  v20 = sub_2312643D8();
  if (os_log_type_enabled(v19, v20))
  {
    v36 = a2;
    v21 = swift_slowAlloc();
    v35 = v9;
    v22 = (uint8_t *)v21;
    v32 = swift_slowAlloc();
    v41 = v32;
    v33 = v10;
    *(_DWORD *)v22 = 136446210;
    v31 = v22 + 4;
    v40 = (uint64_t)v16;
    v23 = v16;
    sub_2311889D8();
    sub_231264B88();
    v34 = v5;
    v24 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_2312647B0();
    swift_unknownObjectRelease();
    v25 = sub_2312640CC();
    v40 = sub_2311CBDE4(v25, v26, &v41);
    v10 = v33;
    sub_231264750();
    v5 = v34;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23116F000, v19, v20, "Error making feed item for record, hiding from UI: %{public}s", v22, 0xCu);
    v27 = v32;
    a2 = v36;
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v27, -1, -1);
    v28 = v22;
    v9 = v35;
    MEMORY[0x2348D85EC](v28, -1, -1);
  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v38);
  v40 = MEMORY[0x24BEE4AF8];
  sub_2311889BC(0);
  sub_231263D84();
  sub_2311889D8();
  sub_231263D54();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v7, v5);
  sub_231189178((unint64_t *)&qword_254153248, &qword_254153250, MEMORY[0x24BDBA1B0], MEMORY[0x24BDBA1D0]);
  v29 = sub_231263E38();
  result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  *a2 = v29;
  return result;
}

uint64_t sub_2311F9860@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  _QWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;

  sub_2311885A8();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_231263B5C();
  v37 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  sub_231263B08();
  v13 = v12;
  v14 = v12;
  v15 = sub_231263B50();
  v16 = sub_2312643D8();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v35 = v6;
    v18 = v17;
    v33 = swift_slowAlloc();
    v39 = v33;
    *(_DWORD *)v18 = 136446466;
    v38 = sub_23117B970();
    sub_23118852C(0, &qword_255EB98B0, (void (*)(uint64_t))sub_23117B970);
    v34 = v9;
    v19 = sub_2312640B4();
    v36 = a2;
    v38 = sub_2311CBDE4(v19, v20, &v39);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2082;
    v32[1] = v18 + 14;
    v38 = (unint64_t)v12;
    v21 = v12;
    v22 = v12;
    sub_2311889D8();
    sub_231264B88();
    v23 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_2312647B0();
    swift_unknownObjectRelease();
    v24 = sub_2312640B4();
    v26 = v25;

    v27 = v24;
    a2 = v36;
    v38 = sub_2311CBDE4(v27, v26, &v39);
    sub_231264750();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23116F000, v15, v16, "[%{public}s] Unable to compute desired difference for commit: %{public}s", (uint8_t *)v18, 0x16u);
    v28 = v33;
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v28, -1, -1);
    v29 = v18;
    v6 = v35;
    MEMORY[0x2348D85EC](v29, -1, -1);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v34);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v9);
  }
  v38 = MEMORY[0x24BEE4AF8];
  sub_231171FD8(0, (unint64_t *)&qword_254155638, MEMORY[0x24BE47F58], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_231263D84();
  sub_231172048((unint64_t *)&qword_254153048, (uint64_t (*)(uint64_t))sub_2311885A8, MEMORY[0x24BDB9DF8]);
  v30 = sub_231263E38();
  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v30;
  return result;
}

uint64_t sub_2311F9BEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC13HealthRecords26RemovedCategoriesGenerator_domain;
  v2 = sub_2312621F4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_231178498(v0 + OBJC_IVAR____TtC13HealthRecords26RemovedCategoriesGenerator_context, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
  return swift_deallocClassInstance();
}

uint64_t sub_2311F9C5C()
{
  return type metadata accessor for RemovedCategoriesGenerator();
}

uint64_t type metadata accessor for RemovedCategoriesGenerator()
{
  uint64_t result;

  result = qword_254152348;
  if (!qword_254152348)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2311F9CA0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC13HealthRecords26RemovedCategoriesGenerator_domain;
  v4 = sub_2312621F4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void sub_2311F9CE8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254152FD8)
  {
    sub_231171FD8(255, &qword_254153150, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    sub_2311889D8();
    v0 = sub_231263D0C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254152FD8);
  }
}

uint64_t sub_2311F9D6C()
{
  return sub_231172048(&qword_254152FD0, (uint64_t (*)(uint64_t))sub_2311F9CE8, MEMORY[0x24BDB9AF8]);
}

void sub_2311F9D88()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254154328)
  {
    sub_231188B88(255, &qword_2541540F8, (uint64_t (*)(uint64_t))sub_2311F9CE8, sub_2311F9D6C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE48528]);
    sub_2311889BC(255);
    sub_2311F9E20();
    v0 = sub_231263C88();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254154328);
  }
}

unint64_t sub_2311F9E20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541540F0;
  if (!qword_2541540F0)
  {
    sub_231188B88(255, &qword_2541540F8, (uint64_t (*)(uint64_t))sub_2311F9CE8, sub_2311F9D6C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE48528]);
    result = MEMORY[0x2348D8544](MEMORY[0x24BE48538], v1);
    atomic_store(result, (unint64_t *)&qword_2541540F0);
  }
  return result;
}

void sub_2311F9E88()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_254154248)
  {
    sub_2311F9D88();
    v0 = MEMORY[0x24BDB9AE0];
    sub_231188FDC(255, &qword_254152EF8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_231172048(&qword_254154320, (uint64_t (*)(uint64_t))sub_2311F9D88, MEMORY[0x24BDB98C8]);
    sub_231189178((unint64_t *)&qword_254152EF0, &qword_254152EF8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v0, MEMORY[0x24BDB9AF8]);
    v1 = sub_231263C40();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_254154248);
  }
}

void sub_2311F9F64()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254154338)
  {
    sub_2311F9E88();
    sub_231171FD8(255, (unint64_t *)&qword_254155638, MEMORY[0x24BE47F58], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    sub_231172048(&qword_254154240, (uint64_t (*)(uint64_t))sub_2311F9E88, MEMORY[0x24BDB9740]);
    v0 = sub_231263C88();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254154338);
  }
}

void sub_2311FA010()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254154288)
  {
    sub_2311F9F64();
    sub_231187D64();
    sub_231172048(&qword_254154330, (uint64_t (*)(uint64_t))sub_2311F9F64, MEMORY[0x24BDB98C8]);
    sub_231172048(&qword_254152F30, (uint64_t (*)(uint64_t))sub_231187D64, MEMORY[0x24BDB9AF8]);
    v0 = sub_231263C40();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254154288);
  }
}

uint64_t sub_2311FA0D8()
{
  return sub_231172048(&qword_254154280, (uint64_t (*)(uint64_t))sub_2311FA010, MEMORY[0x24BDB9740]);
}

unint64_t sub_2311FA0F4()
{
  unint64_t result;

  result = qword_2541531A8;
  if (!qword_2541531A8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2541531A8);
  }
  return result;
}

uint64_t sub_2311FA130(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2311735E0(0, &qword_254153F28, (uint64_t (*)(uint64_t))MEMORY[0x24BEE7758], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2311FA18C(uint64_t a1)
{
  uint64_t v2;

  sub_2311735E0(0, &qword_254153F28, (uint64_t (*)(uint64_t))MEMORY[0x24BEE7758], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2311FA1E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for HealthRecordsGeneratorContext();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 24) & ~v2);
  v4 = sub_23126226C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2311FA27C@<X0>(_BYTE *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_2311F9068(a1, v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)), a2);
}

uint64_t sub_2311FA2EC()
{
  return swift_deallocObject();
}

uint64_t sub_2311FA2FC@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2311F9860(a1, a2);
}

unint64_t sub_2311FA304()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541540A0;
  if (!qword_2541540A0)
  {
    sub_231188B88(255, &qword_2541540A8, (uint64_t (*)(uint64_t))sub_2311FA010, sub_2311FA0D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB9598]);
    result = MEMORY[0x2348D8544](MEMORY[0x24BDB95A8], v1);
    atomic_store(result, (unint64_t *)&qword_2541540A0);
  }
  return result;
}

uint64_t sub_2311FA36C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_2311FC284(0, &qword_255EB98D8, MEMORY[0x24BEE3520]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = &v9[-v6];
  sub_231173410(a1, a1[3]);
  sub_2311FC240();
  sub_231264C60();
  v9[15] = 0;
  sub_231264AC8();
  if (!v1)
  {
    type metadata accessor for LabNameWithDate(0);
    v9[14] = 1;
    sub_231261E40();
    sub_231172048(&qword_2541518F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_231264AF8();
    v9[13] = 2;
    sub_231261E94();
    sub_231172048(&qword_254153508, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_231264AF8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_2311FA52C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t *v33;
  char v34;
  char v35;
  char v36;

  v26 = a2;
  v27 = sub_231261E94();
  v25 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v28 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_231261E40();
  v29 = *(_QWORD *)(v4 - 8);
  v30 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311FC284(0, &qword_255EB98C8, MEMORY[0x24BEE33E0]);
  v32 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v24 - v9;
  v11 = type metadata accessor for LabNameWithDate(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (uint64_t *)((char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_231173410(a1, a1[3]);
  sub_2311FC240();
  v31 = v10;
  v14 = v33;
  sub_231264C54();
  if (v14)
    return sub_231173434((uint64_t)a1);
  v15 = v6;
  v16 = v8;
  v17 = v29;
  v18 = v30;
  v36 = 0;
  *v13 = sub_231264A50();
  v13[1] = v19;
  v33 = v13;
  v35 = 1;
  sub_231172048(&qword_2541518F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  sub_231264A80();
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))((char *)v33 + *(int *)(v11 + 20), v15, v18);
  v34 = 2;
  sub_231172048(&qword_255EB86A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v20 = v27;
  v24 = 0;
  sub_231264A80();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v31, v32);
  v21 = *(int *)(v11 + 24);
  v22 = (uint64_t)v33;
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))((char *)v33 + v21, v28, v20);
  sub_231178454(v22, v26, type metadata accessor for LabNameWithDate);
  sub_231173434((uint64_t)a1);
  return sub_231178498(v22, type metadata accessor for LabNameWithDate);
}

uint64_t sub_2311FA860()
{
  char *v0;

  return *(_QWORD *)&aLabname_0[8 * *v0];
}

uint64_t sub_2311FA878@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2311FC484(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2311FA89C()
{
  sub_2311FC240();
  return sub_231264C6C();
}

uint64_t sub_2311FA8C4()
{
  sub_2311FC240();
  return sub_231264C78();
}

uint64_t sub_2311FA8EC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2311FA52C(a1, a2);
}

uint64_t sub_2311FA900(_QWORD *a1)
{
  return sub_2311FA36C(a1);
}

uint64_t sub_2311FA914()
{
  sub_231264C00();
  swift_bridgeObjectRetain();
  sub_231264114();
  swift_bridgeObjectRelease();
  sub_231261E40();
  sub_231172048(&qword_255EB86E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23126400C();
  sub_231261E94();
  sub_231172048(&qword_254151860, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23126400C();
  return sub_231264C3C();
}

uint64_t sub_2311FAA00()
{
  swift_bridgeObjectRetain();
  sub_231264114();
  swift_bridgeObjectRelease();
  sub_231261E40();
  sub_231172048(&qword_255EB86E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23126400C();
  sub_231261E94();
  sub_231172048(&qword_254151860, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  return sub_23126400C();
}

uint64_t sub_2311FAADC()
{
  sub_231264C00();
  swift_bridgeObjectRetain();
  sub_231264114();
  swift_bridgeObjectRelease();
  sub_231261E40();
  sub_231172048(&qword_255EB86E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23126400C();
  sub_231261E94();
  sub_231172048(&qword_254151860, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23126400C();
  return sub_231264C3C();
}

uint64_t sub_2311FABC4(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;

  v2 = *a1 == *a2 && a1[1] == a2[1];
  if ((v2 || (sub_231264B58() & 1) != 0) && (sub_231261E1C() & 1) != 0)
    return sub_231261E70();
  else
    return 0;
}

uint64_t sub_2311FAC48@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v10 = type metadata accessor for AccountNewRecordsData(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (uint64_t *)((char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = (uint64_t)v14 + *(int *)(v12 + 24);
  v16 = sub_231261E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  if ((sub_231263FDC() & 1) != 0)
  {
    *v14 = a1;
    v14[1] = a2;
    sub_2311FADC0(a3, v15);
    *(_QWORD *)((char *)v14 + *(int *)(v10 + 28)) = a4;
    sub_231178454((uint64_t)v14, a5, type metadata accessor for AccountNewRecordsData);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(a5, 0, 1, v10);
    return sub_231178498((uint64_t)v14, type metadata accessor for AccountNewRecordsData);
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_231178498(a3, (uint64_t (*)(_QWORD))sub_23117AA1C);
    sub_231178498(v15, (uint64_t (*)(_QWORD))sub_23117AA1C);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a5, 1, 1, v10);
  }
}

uint64_t type metadata accessor for AccountNewRecordsData(uint64_t a1)
{
  return sub_231187940(a1, qword_254154940);
}

uint64_t sub_2311FADC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23117AA1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t *sub_2311FAE04(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_231261E40();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      sub_23117AA1C();
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return v4;
}

_QWORD *sub_2311FAF08(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_231261E40();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_23117AA1C();
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_2311FAFE0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_231261E40();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_23117AA1C();
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_2311FB110(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_231261E40();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_23117AA1C();
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_2311FB1E4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_231261E40();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_23117AA1C();
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2311FB30C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2311FB318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  sub_23117AA1C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_2311FB398()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2311FB3A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  sub_23117AA1C();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, v8);
  else
    *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
}

uint64_t type metadata accessor for AllAccountsLabRecordsData(uint64_t a1)
{
  return sub_231187940(a1, qword_254151938);
}

void sub_2311FB434()
{
  unint64_t v0;

  sub_23117AA1C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *sub_2311FB4B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_231261E40();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(a3 + 24);
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_231261E94();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  }
  return v4;
}

uint64_t sub_2311FB590(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_231261E40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = sub_231261E94();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

_QWORD *sub_2311FB604(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_231261E40();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_231261E94();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  return a1;
}

_QWORD *sub_2311FB6B0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_231261E40();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_231261E94();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

_OWORD *sub_2311FB760(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_231261E40();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_231261E94();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

_QWORD *sub_2311FB7F8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_231261E40();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_231261E94();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t sub_2311FB898()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2311FB8A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_231261E40();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = sub_231261E94();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_2311FB944()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2311FB950(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_231261E40();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_231261E94();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for LabNameWithDate(uint64_t a1)
{
  return sub_231187940(a1, qword_254151BD0);
}

uint64_t sub_2311FBA00()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_231261E40();
  if (v1 <= 0x3F)
  {
    result = sub_231261E94();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

char *sub_2311FBA90(char *a1, char **a2, uint64_t a3)
{
  int v3;
  char *v4;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  char *v14;
  uint64_t v15;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    *((_QWORD *)a1 + 1) = a2[1];
    v8 = *(int *)(a3 + 24);
    v9 = &a1[v8];
    v10 = (char *)a2 + v8;
    v11 = sub_231261E40();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    v14 = v4;
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      sub_23117AA1C();
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    *(_QWORD *)&v7[*(int *)(a3 + 28)] = *(char **)((char *)a2 + *(int *)(a3 + 28));
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_2311FBBAC(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  v4 = (char *)a1 + *(int *)(a2 + 24);
  v5 = sub_231261E40();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

_QWORD *sub_2311FBC34(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  id v14;
  uint64_t v15;

  v7 = *(void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (const void *)(a2 + v8);
  v11 = sub_231261E40();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v7;
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    sub_23117AA1C();
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2311FBD20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = *(int *)(a3 + 24);
  v10 = (void *)(a1 + v9);
  v11 = (void *)(a2 + v9);
  v12 = sub_231261E40();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_23117AA1C();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_2311FBE74(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_231261E40();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_23117AA1C();
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_2311FBF48(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 24);
  v8 = (void *)(a1 + v7);
  v9 = (char *)a2 + v7;
  v10 = sub_231261E40();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_23117AA1C();
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2311FC088()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2311FC094(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_23117AA1C();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_2311FC110()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2311FC11C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    sub_23117AA1C();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

void sub_2311FC190()
{
  unint64_t v0;

  sub_23117AA1C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_2311FC214()
{
  return sub_231172048(&qword_255EB98C0, type metadata accessor for LabNameWithDate, (uint64_t)&unk_2312694C8);
}

unint64_t sub_2311FC240()
{
  unint64_t result;

  result = qword_255EB98D0;
  if (!qword_255EB98D0)
  {
    result = MEMORY[0x2348D8544](&unk_231269644, &type metadata for LabNameWithDate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB98D0);
  }
  return result;
}

void sub_2311FC284(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_2311FC240();
    v7 = a3(a1, &type metadata for LabNameWithDate.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for LabNameWithDate.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2311FC32C + 4 * byte_231269455[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2311FC360 + 4 * byte_231269450[v4]))();
}

uint64_t sub_2311FC360(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2311FC368(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2311FC370);
  return result;
}

uint64_t sub_2311FC37C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2311FC384);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2311FC388(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2311FC390(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LabNameWithDate.CodingKeys()
{
  return &type metadata for LabNameWithDate.CodingKeys;
}

unint64_t sub_2311FC3B0()
{
  unint64_t result;

  result = qword_255EB98E0;
  if (!qword_255EB98E0)
  {
    result = MEMORY[0x2348D8544](&unk_23126961C, &type metadata for LabNameWithDate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB98E0);
  }
  return result;
}

unint64_t sub_2311FC3F8()
{
  unint64_t result;

  result = qword_255EB98E8;
  if (!qword_255EB98E8)
  {
    result = MEMORY[0x2348D8544](&unk_23126958C, &type metadata for LabNameWithDate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB98E8);
  }
  return result;
}

unint64_t sub_2311FC440()
{
  unint64_t result;

  result = qword_255EB98F0;
  if (!qword_255EB98F0)
  {
    result = MEMORY[0x2348D8544](&unk_2312695B4, &type metadata for LabNameWithDate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB98F0);
  }
  return result;
}

uint64_t sub_2311FC484(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656D614E62616CLL && a2 == 0xE700000000000000;
  if (v2 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574614462616CLL && a2 == 0xE700000000000000 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4449555562616CLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_231264B58();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_2311FC5D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[2];
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v28 = a1;
  v27 = sub_231261FA8();
  v2 = *(_QWORD *)(v27 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  MEMORY[0x24BDAC7A8](v27);
  v26 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231188B88(0, (unint64_t *)&qword_2541545B8, (uint64_t (*)(uint64_t))sub_2311FF978, sub_2311FF98C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB9E80]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v25 - v7;
  sub_2311FFB78(0, &qword_254154400, sub_2311FF978, (void (*)(void))sub_2311FF98C);
  v10 = *(_QWORD *)(v9 - 8);
  v29 = v9;
  v30 = v10;
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v25 - v11;
  v13 = v1 + OBJC_IVAR____TtC13HealthRecords20CategoryDataProvider_context;
  v14 = *(void **)(v13 + *(int *)(type metadata accessor for HealthRecordsGeneratorContext() + 20));
  *(_QWORD *)(swift_allocObject() + 16) = v14;
  sub_2311FF978(0);
  v25[1] = sub_2311FF98C();
  v15 = v14;
  sub_231263DD8();
  sub_2311FF9D4();
  v16 = sub_231263E38();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v31 = v16;
  v18 = v26;
  v17 = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v26, v28, v27);
  v19 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v25[0];
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v20 + v19, v18, v17);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = sub_2311FFA40;
  *(_QWORD *)(v21 + 24) = v20;
  swift_retain();
  sub_231263CF4();
  sub_2311DA06C(0, &qword_254152F68, sub_2311FE7B4);
  sub_2311C09BC();
  sub_231263F34();
  swift_release();
  swift_release();
  sub_2311FFAC4();
  v22 = v29;
  v23 = sub_231263E38();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v22);
  return v23;
}

uint64_t sub_2311FC8B8(char a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  int v56;
  char v57;
  uint64_t v58;

  v48 = a4;
  v46 = a3;
  v55 = a2;
  sub_2311735E0(0, &qword_254153058, (uint64_t (*)(uint64_t))sub_2311FE7B4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v49 = *(_QWORD *)(v5 - 8);
  v50 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v44 - v6;
  v47 = sub_231261FA8();
  v8 = *(_QWORD *)(v47 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v47);
  v45 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311FFB24();
  v54 = v10;
  v52 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311FFB78(0, &qword_2541543F0, v13, (void (*)(void))sub_2311FFC18);
  v53 = v14;
  v51 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v44 - v15;
  v17 = sub_231263B5C();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v44 - v22;
  if ((a1 & 1) != 0)
  {
    sub_231263B20();
    v24 = sub_231263B50();
    v25 = sub_2312643C0();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v26 = 67109120;
      v56 = v55 & 1;
      sub_231264750();
      _os_log_impl(&dword_23116F000, v24, v25, "CategoryDataProvider chrCategoriesPublisher() should show CHR section, supports CHR: %{BOOL}d", v26, 8u);
      MEMORY[0x2348D85EC](v26, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v18 + 8))(v23, v17);
    v57 = v55 & 1;
    sub_231263D84();
    v27 = swift_allocObject();
    swift_weakInit();
    v28 = v45;
    v29 = v47;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v45, v48, v47);
    v30 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v31 = swift_allocObject();
    *(_QWORD *)(v31 + 16) = v27;
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v31 + v30, v28, v29);
    sub_231263CF4();
    sub_2311DA06C(0, &qword_254152F68, sub_2311FE7B4);
    sub_2311FFC18();
    sub_2311C09BC();
    v32 = v54;
    sub_231263F34();
    swift_release();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v12, v32);
    sub_2311FFD5C();
    v33 = v53;
    v34 = sub_231263E38();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v16, v33);
  }
  else
  {
    sub_231263B20();
    v35 = sub_231263B50();
    v36 = sub_2312643C0();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v37 = 0;
      _os_log_impl(&dword_23116F000, v35, v36, "CategoryDataProvider chrCategoriesPublisher() should not show CHR section, returning just CDA category", v37, 2u);
      MEMORY[0x2348D85EC](v37, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
    sub_2311735E0(0, &qword_254155738, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v38 = sub_2312627B8();
    v39 = *(_QWORD *)(v38 - 8);
    v40 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
    v41 = swift_allocObject();
    *(_OWORD *)(v41 + 16) = xmmword_231265AC0;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v39 + 104))(v41 + v40, *MEMORY[0x24BE48ED0], v38);
    v58 = v41;
    sub_2311FE7B4(0);
    sub_231263D84();
    sub_2311FFC34();
    v42 = v50;
    v34 = sub_231263E38();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v7, v42);
  }
  return v34;
}

uint64_t sub_2311FCDC0@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  uint64_t v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;

  v4 = sub_231261FA8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, &qword_254153058, (uint64_t (*)(uint64_t))sub_2311FE7B4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v18 - v11;
  v13 = *a1;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BE474B8], v4);
    sub_231172048(&qword_254153EF0, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], MEMORY[0x24BE47508]);
    sub_2312641D4();
    sub_2312641D4();
    if (v19 == v18[1] && v20 == v18[2])
    {
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    else
    {
      v16 = sub_231264B58();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      if ((v16 & 1) == 0)
      {
        v17 = sub_2311FD9DC(v13);
        goto LABEL_9;
      }
    }
    v17 = sub_2311FD008(v13);
LABEL_9:
    v14 = v17;
    result = swift_release();
    goto LABEL_10;
  }
  v19 = MEMORY[0x24BEE4AF8];
  sub_2311FE7B4(0);
  sub_231263D84();
  sub_2311FFC34();
  v14 = sub_231263E38();
  result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
LABEL_10:
  *a2 = v14;
  return result;
}

uint64_t sub_2311FD008(int a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v23 = a1;
  sub_2311FE41C();
  v25 = v1;
  v27 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311FE720();
  v26 = v4;
  v28 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231188B88(0, &qword_254154078, (uint64_t (*)(uint64_t))sub_2311FE5DC, sub_2311FE69C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB9598]);
  v22 = v7;
  v24 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v21 - v8;
  type metadata accessor for HealthRecordsGeneratorContext();
  v30 = sub_2311C85D0();
  v29 = MEMORY[0x24BEE4AF8];
  sub_2311FE5DC();
  sub_2311FE69C();
  sub_231263E5C();
  swift_release();
  v21 = sub_231262740();
  sub_231262770();
  v10 = sub_231262764();
  v11 = sub_231262E84();
  swift_bridgeObjectRelease();
  v30 = v11;
  sub_2311FE4E0();
  sub_231172048((unint64_t *)&qword_254152ED0, (uint64_t (*)(uint64_t))sub_2311FE4E0, MEMORY[0x24BDB9AF8]);
  sub_2311FE6B8();
  v12 = v22;
  sub_231263E74();
  swift_release();
  v13 = swift_allocObject();
  swift_weakInit();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v13;
  *(_BYTE *)(v14 + 24) = v23;
  v15 = v21;
  *(_QWORD *)(v14 + 32) = v10;
  *(_QWORD *)(v14 + 40) = v15;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_2311FF914;
  *(_QWORD *)(v16 + 24) = v14;
  sub_2311FE7B4(0);
  sub_231172048(&qword_254153F40, (uint64_t (*)(uint64_t))sub_2311FE41C, MEMORY[0x24BDB9450]);
  v17 = v25;
  sub_231263E80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v3, v17);
  sub_231172048(&qword_254154198, (uint64_t (*)(uint64_t))sub_2311FE720, MEMORY[0x24BDB96C0]);
  v18 = v26;
  v19 = sub_231263E38();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v18);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v12);
  return v19;
}

uint64_t sub_2311FD360(uint64_t a1, unint64_t a2, uint64_t a3, int a4, unint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t Strong;
  uint64_t v18;
  _BYTE *v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  char v24;
  _BYTE *v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  void (*v31)(_BYTE *, uint64_t, uint64_t);
  uint64_t v32;
  char v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE v52[4];
  unsigned int v53;
  void (*v54)(_BYTE *, uint64_t, uint64_t);
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  void (*v62)(_BYTE *, unint64_t, uint64_t);
  unint64_t v63;
  uint64_t v64;

  LOBYTE(v6) = a6;
  LODWORD(v62) = a4;
  v64 = *MEMORY[0x24BDAC8D0];
  v10 = sub_2312627B8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = &v52[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v12);
  v16 = &v52[-v15];
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return MEMORY[0x24BEE4AF8];
  v18 = Strong;
  if (a1)
  {
    v59 = a2;
    v61 = v16;
    v19 = *(_BYTE **)(a5 + 16);
    if (v19)
    {
      v58 = Strong;
      v20 = a5 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
      v18 = *(_QWORD *)(v11 + 72);
      swift_bridgeObjectRetain();
      v21 = 0;
      do
      {
        v22 = sub_231263FD0();
        v23 = __OFADD__(v21, v22 & 1);
        v21 += v22 & 1;
        if (v23)
        {
          __break(1u);
          goto LABEL_32;
        }
        v20 += v18;
        --v19;
      }
      while (v19);
      swift_bridgeObjectRelease();
      v18 = v58;
    }
    else
    {
      v21 = 0;
    }
    swift_bridgeObjectRetain();
    v28 = swift_bridgeObjectRetain();
    sub_2311FE80C(v28, a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_231262770();
    v60 = sub_231172048(&qword_254155528, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28], MEMORY[0x24BE48F48]);
    v29 = (_BYTE *)sub_231264228();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    LOBYTE(v6) = (_BYTE)v62;
    v21 = sub_2311FE9D4(v29, v62 & 1, v21, 0, 0);
    swift_bridgeObjectRelease();
    a5 = v59;
    v19 = v61;
    if (v59 >> 62)
      goto LABEL_33;
    if (!*(_QWORD *)((v59 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      while (1)
      {
        if ((v6 & 1) == 0)
          goto LABEL_34;
        v30 = *MEMORY[0x24BE48ED0];
        v31 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 104);
        v31(v19, v30, v10);
        a5 = *(_QWORD *)(v21 + 16);
        if (!a5)
        {
          (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v19, v10);
          goto LABEL_27;
        }
        v32 = *(unsigned __int8 *)(v11 + 80);
        v56 = v32;
        v57 = (v32 + 32) & ~v32;
        v62 = *(void (**)(_BYTE *, unint64_t, uint64_t))(v11 + 16);
        v62(v14, v21 + v57, v10);
        swift_bridgeObjectRetain();
        v33 = sub_231264060();
        v34 = v21;
        v21 = *(_QWORD *)(v11 + 8);
        ((void (*)(_BYTE *, uint64_t))v21)(v14, v10);
        if ((v33 & 1) != 0)
          break;
        v55 = v34;
        if (a5 == 1)
        {
          swift_bridgeObjectRelease();
          v19 = v61;
LABEL_26:
          ((void (*)(_BYTE *, uint64_t))v21)(v19, v10);
LABEL_27:
          swift_bridgeObjectRelease();
          sub_2311735E0(0, &qword_254155738, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
          v38 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
          v39 = swift_allocObject();
          *(_OWORD *)(v39 + 16) = xmmword_231265AC0;
          v40 = v39 + v38;
          v41 = *MEMORY[0x24BE48F00];
LABEL_30:
          v31((_BYTE *)v40, v41, v10);
          swift_release();
          return v39;
        }
        v53 = v30;
        v54 = v31;
        v35 = *(_QWORD *)(v11 + 72);
        v58 = v18;
        v59 = v35;
        v36 = v55 + v35 + v57;
        v6 = 1;
        v19 = v61;
        while (1)
        {
          v62(v14, v36, v10);
          v18 = v6 + 1;
          if (__OFADD__(v6, 1))
            break;
          v37 = sub_231264060();
          ((void (*)(_BYTE *, uint64_t))v21)(v14, v10);
          if ((v37 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            v31 = v54;
            v30 = v53;
            goto LABEL_29;
          }
          ++v6;
          v36 += v59;
          v19 = v61;
          if (v18 == a5)
          {
            swift_bridgeObjectRelease();
            v31 = v54;
            goto LABEL_26;
          }
        }
LABEL_32:
        __break(1u);
LABEL_33:
        swift_bridgeObjectRetain();
        v45 = sub_2312649A8();
        swift_bridgeObjectRelease();
        if (v45)
          goto LABEL_34;
      }
      swift_bridgeObjectRelease();
LABEL_29:
      ((void (*)(_BYTE *, uint64_t))v21)(v61, v10);
      swift_bridgeObjectRelease();
      sub_2311735E0(0, &qword_254155738, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v42 = *(_QWORD *)(v11 + 72);
      v43 = v57;
      v39 = swift_allocObject();
      *(_OWORD *)(v39 + 16) = xmmword_231265570;
      v44 = v39 + v43;
      v31((_BYTE *)v44, *MEMORY[0x24BE48F00], v10);
      v40 = v44 + v42;
      v41 = v30;
      goto LABEL_30;
    }
LABEL_34:
    v46 = sub_2311FF53C(a5, v6 & 1);
    v63 = v21;
    sub_231211138((uint64_t)v46);
    v47 = v63;
    sub_2311735E0(0, &qword_254155738, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v48 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = xmmword_231265AC0;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v11 + 104))(v49 + v48, *MEMORY[0x24BE48E98], v10);
    v63 = v47;
    v27 = (_QWORD *)v49;
    goto LABEL_35;
  }
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    v50 = sub_2312649A8();
    swift_bridgeObjectRelease();
    v24 = (char)v62;
    if (v50)
      goto LABEL_10;
    goto LABEL_37;
  }
  v24 = (char)v62;
  if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_37:
    swift_release();
    return MEMORY[0x24BEE4AF8];
  }
LABEL_10:
  sub_231262770();
  sub_231262740();
  sub_231172048(&qword_254155528, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28], MEMORY[0x24BE48F48]);
  v25 = (_BYTE *)sub_231264228();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v26 = sub_2311FE9D4(v25, v24 & 1, 0, 0, 0);
  swift_bridgeObjectRelease();
  v27 = sub_2311FF53C(a2, v24 & 1);
  v63 = v26;
LABEL_35:
  sub_231211138((uint64_t)v27);
  swift_release();
  return v63;
}

uint64_t sub_2311FD9DC(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v25 = a1;
  sub_2311FE41C();
  v29 = v2;
  v27 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311FE720();
  v30 = v5;
  v28 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231188B88(0, &qword_254154078, (uint64_t (*)(uint64_t))sub_2311FE5DC, sub_2311FE69C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB9598]);
  v9 = v8;
  v26 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v23 - v10;
  type metadata accessor for HealthRecordsGeneratorContext();
  v32 = sub_2311C85D0();
  v31 = MEMORY[0x24BEE4AF8];
  sub_2311FE5DC();
  sub_2311FE69C();
  sub_231263E5C();
  swift_release();
  sub_231262770();
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC13HealthRecords20CategoryDataProvider_collapseCategories) == 1)
    v12 = sub_231262770();
  else
    v12 = sub_231262740();
  v24 = v12;
  v13 = sub_231262764();
  v14 = sub_231262E84();
  swift_bridgeObjectRelease();
  v32 = v14;
  sub_2311FE4E0();
  sub_231172048((unint64_t *)&qword_254152ED0, (uint64_t (*)(uint64_t))sub_2311FE4E0, MEMORY[0x24BDB9AF8]);
  sub_2311FE6B8();
  sub_231263E74();
  swift_release();
  v15 = swift_allocObject();
  swift_weakInit();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v15;
  *(_BYTE *)(v16 + 24) = v25 & 1;
  v17 = v24;
  *(_QWORD *)(v16 + 32) = v13;
  *(_QWORD *)(v16 + 40) = v17;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = sub_2311FE7F8;
  *(_QWORD *)(v18 + 24) = v16;
  sub_2311FE7B4(0);
  sub_231172048(&qword_254153F40, (uint64_t (*)(uint64_t))sub_2311FE41C, MEMORY[0x24BDB9450]);
  v19 = v29;
  sub_231263E80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v19);
  sub_231172048(&qword_254154198, (uint64_t (*)(uint64_t))sub_2311FE720, MEMORY[0x24BDB96C0]);
  v20 = v30;
  v21 = sub_231263E38();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v20);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
  return v21;
}

uint64_t sub_2311FDD50(uint64_t a1, unint64_t a2, uint64_t a3, int a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t Strong;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  char v24;
  _BYTE *v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _BYTE *v29;
  unsigned int v30;
  void (*v31)(char *, uint64_t, uint64_t);
  unint64_t v32;
  char v33;
  void (*v34)(char *, uint64_t);
  char v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v46)(char *, uint64_t, uint64_t);
  unint64_t v47;
  uint64_t v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, unint64_t, uint64_t);
  unint64_t v55;

  LOBYTE(v6) = a6;
  LODWORD(v54) = a4;
  v10 = sub_2312627B8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v46 - v15;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return MEMORY[0x24BEE4AF8];
  v18 = Strong;
  if (a1)
  {
    v51 = a2;
    v53 = v11;
    v19 = *(_QWORD *)(a5 + 16);
    if (v19)
    {
      v50 = Strong;
      v20 = a5 + ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80));
      v18 = *(_QWORD *)(v53 + 72);
      swift_bridgeObjectRetain();
      v21 = 0;
      do
      {
        v22 = sub_231263FD0();
        v23 = __OFADD__(v21, v22 & 1);
        v21 += v22 & 1;
        if (v23)
        {
          __break(1u);
          goto LABEL_32;
        }
        v20 += v18;
        --v19;
      }
      while (v19);
      swift_bridgeObjectRelease();
      v18 = v50;
    }
    else
    {
      v21 = 0;
    }
    swift_bridgeObjectRetain();
    v28 = swift_bridgeObjectRetain();
    sub_2311FE80C(v28, a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_231262770();
    v52 = sub_231172048(&qword_254155528, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28], MEMORY[0x24BE48F48]);
    v29 = (_BYTE *)sub_231264228();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    LOBYTE(v6) = (_BYTE)v54;
    v21 = sub_2311FE9D4(v29, v54 & 1, v21, 0, 1u);
    swift_bridgeObjectRelease();
    v19 = v51;
    a5 = v53;
    if (v51 >> 62)
      goto LABEL_33;
    if (!*(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      while (1)
      {
        if ((v6 & 1) == 0)
          goto LABEL_34;
        v30 = *MEMORY[0x24BE48ED0];
        v31 = *(void (**)(char *, uint64_t, uint64_t))(a5 + 104);
        v31(v16, *MEMORY[0x24BE48ED0], v10);
        v32 = v21;
        v21 = *(_QWORD *)(v21 + 16);
        if (!v21)
        {
          (*(void (**)(char *, uint64_t))(a5 + 8))(v16, v10);
          goto LABEL_27;
        }
        v49 = v30;
        v48 = *(unsigned __int8 *)(a5 + 80);
        v51 = (v48 + 32) & ~v48;
        v54 = *(void (**)(char *, unint64_t, uint64_t))(a5 + 16);
        v54(v14, v32 + v51, v10);
        swift_bridgeObjectRetain();
        v33 = sub_231264060();
        v34 = *(void (**)(char *, uint64_t))(a5 + 8);
        v34(v14, v10);
        if ((v33 & 1) != 0)
          break;
        v47 = v32;
        if (v21 == 1)
        {
          swift_bridgeObjectRelease();
LABEL_26:
          v34(v16, v10);
LABEL_27:
          swift_bridgeObjectRelease();
          sub_2311735E0(0, &qword_254155738, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
          v36 = (*(unsigned __int8 *)(a5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(a5 + 80);
          v37 = swift_allocObject();
          *(_OWORD *)(v37 + 16) = xmmword_231265AC0;
          v38 = v37 + v36;
          v39 = *MEMORY[0x24BE48F00];
LABEL_30:
          v31((char *)v38, v39, v10);
          swift_release();
          return v37;
        }
        v46 = v31;
        v50 = v18;
        a5 = *(_QWORD *)(a5 + 72);
        v19 = v47 + a5 + v51;
        v6 = 1;
        while (1)
        {
          v54(v14, v19, v10);
          v18 = v6 + 1;
          if (__OFADD__(v6, 1))
            break;
          v35 = sub_231264060();
          v34(v14, v10);
          if ((v35 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            a5 = v53;
            v31 = v46;
            goto LABEL_29;
          }
          ++v6;
          v19 += a5;
          if (v18 == v21)
          {
            swift_bridgeObjectRelease();
            a5 = v53;
            v31 = v46;
            goto LABEL_26;
          }
        }
LABEL_32:
        __break(1u);
LABEL_33:
        swift_bridgeObjectRetain();
        v43 = sub_2312649A8();
        swift_bridgeObjectRelease();
        if (v43)
          goto LABEL_34;
      }
      swift_bridgeObjectRelease();
LABEL_29:
      v34(v16, v10);
      swift_bridgeObjectRelease();
      sub_2311735E0(0, &qword_254155738, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v40 = *(_QWORD *)(a5 + 72);
      v41 = v51;
      v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = xmmword_231265570;
      v42 = v37 + v41;
      v31((char *)v42, *MEMORY[0x24BE48F00], v10);
      v38 = v42 + v40;
      v39 = v49;
      goto LABEL_30;
    }
LABEL_34:
    v27 = sub_2311FF53C(v19, v6 & 1);
    v55 = v21;
    goto LABEL_35;
  }
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    v44 = sub_2312649A8();
    swift_bridgeObjectRelease();
    v24 = (char)v54;
    if (v44)
      goto LABEL_10;
    goto LABEL_37;
  }
  v24 = (char)v54;
  if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_37:
    swift_release();
    return MEMORY[0x24BEE4AF8];
  }
LABEL_10:
  sub_231262770();
  sub_231262740();
  sub_231172048(&qword_254155528, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28], MEMORY[0x24BE48F48]);
  v25 = (_BYTE *)sub_231264228();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v26 = sub_2311FE9D4(v25, v24 & 1, 0, 0, 1u);
  swift_bridgeObjectRelease();
  v27 = sub_2311FF53C(a2, v24 & 1);
  v55 = v26;
LABEL_35:
  sub_231211138((uint64_t)v27);
  swift_release();
  return v55;
}

uint64_t sub_2311FE314()
{
  uint64_t v0;

  sub_231173638(v0 + OBJC_IVAR____TtC13HealthRecords20CategoryDataProvider_context);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2311FE354()
{
  return type metadata accessor for CategoryDataProvider();
}

uint64_t type metadata accessor for CategoryDataProvider()
{
  uint64_t result;

  result = qword_254151EF8;
  if (!qword_254151EF8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2311FE398()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for HealthRecordsGeneratorContext();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_2311FE41C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254153F48)
  {
    sub_2311FE4E0();
    sub_231188B88(255, &qword_254154078, (uint64_t (*)(uint64_t))sub_2311FE5DC, sub_2311FE69C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB9598]);
    sub_231172048((unint64_t *)&qword_254152ED0, (uint64_t (*)(uint64_t))sub_2311FE4E0, MEMORY[0x24BDB9AF8]);
    sub_2311FE6B8();
    v0 = sub_231263B98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254153F48);
  }
}

void sub_2311FE4E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254152ED8)
  {
    sub_2311735E0(255, &qword_2541530B8, (uint64_t (*)(uint64_t))sub_2311FE55C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v0 = sub_231263D0C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254152ED8);
  }
}

void sub_2311FE55C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254151858)
  {
    sub_2312627B8();
    sub_231172048(&qword_254155520, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28], MEMORY[0x24BE48F40]);
    v0 = sub_231263FF4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254151858);
  }
}

void sub_2311FE5DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254152F88)
  {
    sub_2311735E0(255, (unint64_t *)&qword_254151880, (uint64_t (*)(uint64_t))sub_2311FE660, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_2311889D8();
    v0 = sub_231263D0C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254152F88);
  }
}

unint64_t sub_2311FE660()
{
  unint64_t result;

  result = qword_2541556E0;
  if (!qword_2541556E0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2541556E0);
  }
  return result;
}

uint64_t sub_2311FE69C()
{
  return sub_231172048(&qword_254152F80, (uint64_t (*)(uint64_t))sub_2311FE5DC, MEMORY[0x24BDB9AF8]);
}

unint64_t sub_2311FE6B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254154070;
  if (!qword_254154070)
  {
    sub_231188B88(255, &qword_254154078, (uint64_t (*)(uint64_t))sub_2311FE5DC, sub_2311FE69C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB9598]);
    result = MEMORY[0x2348D8544](MEMORY[0x24BDB95A8], v1);
    atomic_store(result, (unint64_t *)&qword_254154070);
  }
  return result;
}

void sub_2311FE720()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2541541A0)
  {
    sub_2311FE41C();
    sub_2311FE7B4(255);
    sub_231172048(&qword_254153F40, (uint64_t (*)(uint64_t))sub_2311FE41C, MEMORY[0x24BDB9450]);
    v0 = sub_231263C1C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2541541A0);
  }
}

void sub_2311FE7B4(uint64_t a1)
{
  sub_2311735E0(a1, &qword_254151878, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
}

uint64_t sub_2311FE7D0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2311FE7F8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_2311FDD50(a1, a2, *(_QWORD *)(v2 + 16), *(unsigned __int8 *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_2311FE80C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_QWORD, _QWORD, _QWORD);
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void (*v21)(_QWORD, _QWORD, _QWORD);
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;

  v5 = sub_2312627B8();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v25 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v20 - v9;
  result = MEMORY[0x24BEE4AF8];
  v26 = MEMORY[0x24BEE4AF8];
  v12 = *(_QWORD *)(a1 + 16);
  if (v12)
  {
    v20 = v2;
    v13 = *(_QWORD *)(v6 + 72);
    v22 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v23 = v6;
    v14 = a1 + v22;
    v15 = *(void (**)(_QWORD, _QWORD, _QWORD))(v6 + 16);
    v24 = a2;
    v21 = v15;
    v15(v10, v14, v5);
    while (1)
    {
      if ((sub_231263FD0() & 1) != 0)
      {
        (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
      }
      else
      {
        v16 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
        v16(v25, v10, v5);
        v17 = v26;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_231199400(0, *(_QWORD *)(v17 + 16) + 1, 1);
          v17 = v26;
        }
        v19 = *(_QWORD *)(v17 + 16);
        v18 = *(_QWORD *)(v17 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_231199400(v18 > 1, v19 + 1, 1);
          v17 = v26;
        }
        *(_QWORD *)(v17 + 16) = v19 + 1;
        v16((char *)(v17 + v22 + v19 * v13), v25, v5);
        v26 = v17;
        v6 = v23;
        v15 = v21;
      }
      v14 += v13;
      if (!--v12)
        break;
      v15(v10, v14, v5);
    }
    return v26;
  }
  return result;
}

unint64_t sub_2311FE9D4(_BYTE *a1, int a2, uint64_t a3, int a4, unsigned int a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  _BYTE *v32;
  unsigned int v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  _BYTE *v40;
  unint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(_BYTE *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  _BYTE *v50;
  unint64_t v51;
  char v52;
  char v53;
  void (*v54)(_BYTE *, uint64_t);
  int v55;
  unint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  void (*v68)(_BYTE *, uint64_t);
  _BYTE *v69;
  char v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  uint64_t v76;
  char v77;
  _BYTE *v78;
  uint64_t v79;
  char v80;
  char v81;
  _BYTE *v82;
  uint64_t v83;
  _BYTE *v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  _BYTE *v89;
  unint64_t v90;
  unint64_t v91;
  _BYTE v93[4];
  int v94;
  _BYTE *v95;
  _BYTE *v96;
  _BYTE *v97;
  int v98;
  _BYTE *v99;
  unsigned int v100;
  uint64_t v101;
  _BYTE *v102;
  int v103;
  void (*v104)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v105;
  unsigned int v106;
  _BYTE *v107;
  _BYTE *v108;
  unint64_t v109;
  unsigned int v110;
  unsigned int v111;
  _BYTE *v112;
  void (*v113)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v114;
  void (*v115)(_BYTE *, uint64_t);
  uint64_t v116;
  uint64_t v117;

  v100 = a5;
  v103 = a4;
  LODWORD(v104) = a2;
  v101 = a3;
  v6 = sub_2312627B8();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = &v93[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = MEMORY[0x24BDAC7A8](v7);
  v102 = &v93[-v11];
  v12 = MEMORY[0x24BDAC7A8](v10);
  v97 = &v93[-v13];
  v14 = MEMORY[0x24BDAC7A8](v12);
  v96 = &v93[-v15];
  v16 = MEMORY[0x24BDAC7A8](v14);
  v105 = &v93[-v17];
  v18 = MEMORY[0x24BDAC7A8](v16);
  v108 = &v93[-v19];
  v20 = MEMORY[0x24BDAC7A8](v18);
  v95 = &v93[-v21];
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = &v93[-v23];
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = &v93[-v26];
  v28 = MEMORY[0x24BDAC7A8](v25);
  v30 = &v93[-v29];
  MEMORY[0x24BDAC7A8](v28);
  v32 = &v93[-v31];
  v33 = *MEMORY[0x24BE48ED0];
  v114 = v34;
  v35 = *(_QWORD *)(v34 + 104);
  v110 = v33;
  ((void (*)(_BYTE *))v35)(&v93[-v31]);
  v116 = *((_QWORD *)a1 + 2);
  v117 = v6;
  v99 = v9;
  v109 = v35;
  if (v116)
  {
    v112 = v27;
    v36 = v114;
    v35 = (*(unsigned __int8 *)(v114 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80);
    v113 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v114 + 16);
    v113(v30, &a1[v35], v6);
    LOBYTE(v37) = sub_231172048(&qword_254155528, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28], MEMORY[0x24BE48F48]);
    swift_bridgeObjectRetain();
    v38 = sub_231264060();
    v6 = v117;
    v39 = v38;
    v115 = *(void (**)(_BYTE *, uint64_t))(v36 + 8);
    v115(v30, v117);
    if ((v39 & 1) != 0)
    {
LABEL_12:
      swift_bridgeObjectRelease();
      v98 = 1;
    }
    else
    {
      if (v116 != 1)
      {
        v40 = a1;
        v41 = *(_QWORD *)(v114 + 72);
        v107 = v40;
        v42 = &v40[v41 + v35];
        v43 = 1;
        while (1)
        {
          v113(v30, v42, v6);
          v44 = v43 + 1;
          if (__OFADD__(v43, 1))
            goto LABEL_71;
          v45 = sub_231264060();
          v6 = v117;
          v35 = v45;
          v115(v30, v117);
          if ((v35 & 1) != 0)
          {
            a1 = v107;
            goto LABEL_12;
          }
          ++v43;
          v42 += v41;
          if (v44 == v116)
          {
            a1 = v107;
            break;
          }
        }
      }
      swift_bridgeObjectRelease();
      v98 = 0;
    }
    v35 = v109;
    v46 = v115;
    v27 = v112;
    v115(v32, v6);
  }
  else
  {
    v98 = 0;
    v46 = *(void (**)(_BYTE *, uint64_t))(v114 + 8);
    v46(v32, v6);
  }
  v47 = *MEMORY[0x24BE490D0];
  v48 = sub_23126292C();
  v49 = *(_BYTE **)(*(_QWORD *)(v48 - 8) + 104);
  v106 = v47;
  v112 = v49;
  v113 = (void (*)(_BYTE *, _BYTE *, uint64_t))v48;
  ((void (*)(_BYTE *, uint64_t))v49)(v27, v47);
  v111 = *MEMORY[0x24BE48E88];
  ((void (*)(_BYTE *))v35)(v27);
  if (v116)
  {
    v50 = a1;
    v51 = (*(unsigned __int8 *)(v114 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80);
    v115 = *(void (**)(_BYTE *, uint64_t))(v114 + 16);
    ((void (*)(_BYTE *, _BYTE *, uint64_t))v115)(v24, &v50[v51], v6);
    sub_231172048(&qword_254155528, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28], MEMORY[0x24BE48F48]);
    v107 = v50;
    swift_bridgeObjectRetain();
    v42 = v27;
    v52 = sub_231264060();
    v6 = v117;
    v53 = v52;
    v46(v24, v117);
    v54 = v46;
    if ((v53 & 1) != 0)
    {
      v55 = 1;
    }
    else
    {
      if (v116 != 1)
      {
        v37 = *(_QWORD *)(v114 + 72);
        v35 = (unint64_t)&v107[v37 + v51];
        v41 = 1;
        while (1)
        {
          ((void (*)(_BYTE *, unint64_t, uint64_t))v115)(v24, v35, v6);
          v56 = v41 + 1;
          if (__OFADD__(v41, 1))
            break;
          v57 = v6;
          v58 = sub_231264060();
          v54(v24, v57);
          v55 = v58;
          if ((v58 & 1) != 0)
          {
            v6 = v117;
            goto LABEL_26;
          }
          ++v41;
          v35 += v37;
          v6 = v117;
          if (v56 == v116)
            goto LABEL_26;
        }
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        __break(1u);
        goto LABEL_73;
      }
      v55 = 0;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    v35 = v109;
    v46 = v54;
  }
  else
  {
    v42 = v27;
    v55 = 0;
  }
  v115 = v46;
  v46(v42, v6);
  v59 = swift_bridgeObjectRetain();
  v60 = sub_23124E580(v59);
  swift_bridgeObjectRelease();
  sub_2311735E0(0, &qword_254155738, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v61 = *(_QWORD *)(v114 + 72);
  v62 = (*(unsigned __int8 *)(v114 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80);
  v63 = swift_allocObject();
  *(_OWORD *)(v63 + 16) = xmmword_231265570;
  v107 = (_BYTE *)v62;
  ((void (*)(unint64_t, _QWORD, uint64_t))v35)(v63 + v62, v110, v6);
  v116 = v61;
  ((void (*)(unint64_t, _QWORD, _QWORD))v112)(v63 + v62 + v61, v106, v113);
  ((void (*)(unint64_t, _QWORD, uint64_t))v35)(v63 + v62 + v61, v111, v6);
  v64 = sub_23122ACB4(v63, v60);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v41 = sub_231197A48(v64);
  swift_release();
  if ((v104 & 1) == 0)
  {
    LOBYTE(v37) = v103;
    v24 = v107;
    goto LABEL_58;
  }
  v94 = v55;
  swift_retain();
  v65 = sub_231262764();
  v66 = v65;
  if ((v100 & 1) != 0)
  {
    v67 = *(_QWORD *)(v65 + 16) - *(_QWORD *)(v41 + 16);
    swift_release();
    v24 = v108;
    v68 = v115;
    if (v67 >= 3)
    {
      swift_bridgeObjectRelease();
      v69 = v95;
      ((void (*)(_BYTE *, _QWORD, uint64_t))v35)(v95, *MEMORY[0x24BE48ED8], v6);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v41 = sub_2311DD080(0, *(_QWORD *)(v41 + 16) + 1, 1, v41);
      v24 = v107;
      v70 = v94;
      v72 = *(_QWORD *)(v41 + 16);
      v71 = *(_QWORD *)(v41 + 24);
      if (v72 >= v71 >> 1)
        v41 = sub_2311DD080(v71 > 1, v72 + 1, 1, v41);
      *(_QWORD *)(v41 + 16) = v72 + 1;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v114 + 32))(&v24[v41 + v72 * v116], v69, v6);
      v66 = v41;
      if ((v70 & 1) == 0)
        goto LABEL_35;
      goto LABEL_52;
    }
  }
  else
  {
    swift_release();
    v24 = v108;
    v68 = v115;
  }
  v73 = *MEMORY[0x24BE490F0];
  ((void (*)(_BYTE *, uint64_t, _QWORD))v112)(v24, v73, v113);
  ((void (*)(_BYTE *, _QWORD, uint64_t))v35)(v24, v111, v6);
  v74 = *(_QWORD *)(v41 + 16);
  if (!v74)
    goto LABEL_48;
  v75 = v105;
  v104 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v114 + 16);
  v104(v105, &v107[v41], v6);
  v76 = sub_231172048(&qword_254155528, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28], MEMORY[0x24BE48F48]);
  swift_bridgeObjectRetain();
  v42 = (_BYTE *)v76;
  v77 = sub_231264060();
  v6 = v117;
  LOBYTE(v76) = v77;
  v68(v75, v117);
  if ((v76 & 1) == 0)
  {
    if (v74 != 1)
    {
      v100 = v73;
      v35 = (unint64_t)&v107[v116 + v41];
      v37 = 1;
      v78 = v105;
      while (1)
      {
        v104(v78, (_BYTE *)v35, v6);
        v79 = v37 + 1;
        if (__OFADD__(v37, 1))
          goto LABEL_72;
        v80 = sub_231264060();
        v6 = v117;
        v81 = v80;
        v115(v78, v117);
        if ((v81 & 1) != 0)
        {
          swift_release();
          v24 = v108;
          v68 = v115;
          goto LABEL_50;
        }
        ++v37;
        v35 += v116;
        v24 = v108;
        if (v79 == v74)
        {
          swift_release();
          v35 = v109;
          v68 = v115;
          v73 = v100;
          goto LABEL_48;
        }
      }
    }
    swift_release();
    v35 = v109;
LABEL_48:
    v68(v24, v6);
    swift_release();
    v82 = v96;
    ((void (*)(_BYTE *, uint64_t, _QWORD))v112)(v96, v73, v113);
    ((void (*)(_BYTE *, _QWORD, uint64_t))v35)(v82, v111, v6);
    sub_231172048(&qword_254155528, (uint64_t (*)(uint64_t))MEMORY[0x24BE48F28], MEMORY[0x24BE48F48]);
    v83 = sub_231264234();
    swift_bridgeObjectRelease();
    v68(v82, v6);
    v66 = v83;
    goto LABEL_51;
  }
  swift_release();
LABEL_50:
  v68(v24, v6);
  swift_release();
  v35 = v109;
LABEL_51:
  v24 = v107;
  if ((v94 & 1) == 0)
  {
LABEL_35:
    LOBYTE(v37) = v103;
    goto LABEL_57;
  }
LABEL_52:
  v84 = v97;
  ((void (*)(_BYTE *, _QWORD, _QWORD))v112)(v97, v106, v113);
  ((void (*)(_BYTE *, _QWORD, uint64_t))v35)(v84, v111, v6);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v66 = sub_2311DD080(0, *(_QWORD *)(v66 + 16) + 1, 1, v66);
  v86 = *(_QWORD *)(v66 + 16);
  v85 = *(_QWORD *)(v66 + 24);
  LOBYTE(v37) = v103;
  if (v86 >= v85 >> 1)
    v66 = sub_2311DD080(v85 > 1, v86 + 1, 1, v66);
  *(_QWORD *)(v66 + 16) = v86 + 1;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v114 + 32))(&v24[v66 + v86 * v116], v84, v6);
LABEL_57:
  v41 = v66;
  if (!v98)
    goto LABEL_62;
LABEL_58:
  v42 = v102;
  ((void (*)(_BYTE *, _QWORD, uint64_t))v35)(v102, v110, v6);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_73:
    v41 = sub_2311DD080(0, *(_QWORD *)(v41 + 16) + 1, 1, v41);
  v88 = *(_QWORD *)(v41 + 16);
  v87 = *(_QWORD *)(v41 + 24);
  if (v88 >= v87 >> 1)
    v41 = sub_2311DD080(v87 > 1, v88 + 1, 1, v41);
  *(_QWORD *)(v41 + 16) = v88 + 1;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v114 + 32))(&v24[v41 + v88 * v116], v42, v6);
  v66 = v41;
LABEL_62:
  if ((v37 & 1) == 0 && v101 >= 2)
  {
    v89 = v99;
    ((void (*)(_BYTE *, _QWORD, uint64_t))v35)(v99, *MEMORY[0x24BE48E78], v6);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v66 = sub_2311DD080(0, *(_QWORD *)(v66 + 16) + 1, 1, v66);
    v91 = *(_QWORD *)(v66 + 16);
    v90 = *(_QWORD *)(v66 + 24);
    if (v91 >= v90 >> 1)
      v66 = sub_2311DD080(v90 > 1, v91 + 1, 1, v66);
    *(_QWORD *)(v66 + 16) = v91 + 1;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v114 + 32))(&v24[v66 + v91 * v116], v89, v6);
  }
  return v66;
}

_QWORD *sub_2311FF53C(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t i;
  unint64_t v20;
  unint64_t v21;
  id *v22;
  id v23;
  unint64_t v24;
  unint64_t v25;
  void (*v26)(_BYTE *, _QWORD, uint64_t);
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  _BYTE v32[12];
  int v33;
  _BYTE *v34;
  _QWORD *v35;

  v4 = sub_2312627B8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = &v32[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = &v32[-v10];
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = &v32[-v13];
  MEMORY[0x24BDAC7A8](v12);
  v16 = &v32[-v15];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v17 = sub_2312649A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v18 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v17)
  {
    v35 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v18 = &v35;
    sub_231199400(0, v17 & ~(v17 >> 63), 0);
    if (v17 < 0)
    {
      __break(1u);
      goto LABEL_30;
    }
    v33 = a2;
    v34 = v11;
    v18 = v35;
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v17; ++i)
      {
        MEMORY[0x2348D7CE0](i, a1);
        sub_2312627A0();
        swift_unknownObjectRelease();
        v35 = v18;
        v21 = v18[2];
        v20 = v18[3];
        if (v21 >= v20 >> 1)
        {
          sub_231199400(v20 > 1, v21 + 1, 1);
          v18 = v35;
        }
        v18[2] = v21 + 1;
        (*(void (**)(unint64_t, _BYTE *, uint64_t))(v5 + 32))((unint64_t)v18+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v21, v16, v4);
      }
    }
    else
    {
      v22 = (id *)(a1 + 32);
      do
      {
        v23 = *v22;
        sub_2312627A0();

        v35 = v18;
        v25 = v18[2];
        v24 = v18[3];
        if (v25 >= v24 >> 1)
        {
          sub_231199400(v24 > 1, v25 + 1, 1);
          v18 = v35;
        }
        v18[2] = v25 + 1;
        (*(void (**)(unint64_t, _BYTE *, uint64_t))(v5 + 32))((unint64_t)v18+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v25, v8, v4);
        ++v22;
        --v17;
      }
      while (v17);
    }
    v11 = v34;
    LOBYTE(a2) = v33;
  }
  if ((a2 & 1) != 0)
  {
    a2 = v18[2];
    v26 = *(void (**)(_BYTE *, _QWORD, uint64_t))(v5 + 104);
    if (!a2)
    {
      v26(v14, *MEMORY[0x24BE48E80], v4);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v18 = (_QWORD *)sub_2311DD080(0, 1, 1, (unint64_t)v18);
      v28 = v18[2];
      v30 = v18[3];
      v29 = v28 + 1;
      if (v28 >= v30 >> 1)
        v18 = (_QWORD *)sub_2311DD080(v30 > 1, v28 + 1, 1, (unint64_t)v18);
      goto LABEL_26;
    }
    v26(v11, *MEMORY[0x24BE48EC8], v4);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
LABEL_19:
      v28 = v18[2];
      v27 = v18[3];
      v29 = v28 + 1;
      if (v28 >= v27 >> 1)
        v18 = (_QWORD *)sub_2311DD080(v27 > 1, v28 + 1, 1, (unint64_t)v18);
      v14 = v11;
LABEL_26:
      v18[2] = v29;
      (*(void (**)(unint64_t, _BYTE *, uint64_t))(v5 + 32))((unint64_t)v18+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v28, v14, v4);
      return v18;
    }
LABEL_30:
    v18 = (_QWORD *)sub_2311DD080(0, a2 + 1, 1, (unint64_t)v18);
    goto LABEL_19;
  }
  return v18;
}

uint64_t sub_2311FF8E0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2311FF914(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_2311FD360(a1, a2, *(_QWORD *)(v2 + 16), *(unsigned __int8 *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_2311FF924()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2311FF948@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 16))(*a1, a1[1]);
  *a2 = result;
  return result;
}

void sub_2311FF978(uint64_t a1)
{
  sub_2311DA06C(a1, &qword_254154530, (void (*)(uint64_t))sub_2311C9B48);
}

uint64_t sub_2311FF98C()
{
  return sub_231172048(&qword_254154528, (uint64_t (*)(uint64_t))sub_2311FF978, MEMORY[0x24BDB9AF8]);
}

uint64_t sub_2311FF9A8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_2311FF9CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_2311C8D44(*(void **)(v1 + 16), a1);
}

unint64_t sub_2311FF9D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541545B0;
  if (!qword_2541545B0)
  {
    sub_231188B88(255, (unint64_t *)&qword_2541545B8, (uint64_t (*)(uint64_t))sub_2311FF978, sub_2311FF98C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB9E80]);
    result = MEMORY[0x2348D8544](MEMORY[0x24BDB9E90], v1);
    atomic_store(result, (unint64_t *)&qword_2541545B0);
  }
  return result;
}

uint64_t sub_2311FFA40(char a1, int a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_231261FA8() - 8) + 80);
  return sub_2311FC8B8(a1, a2, *(_QWORD *)(v2 + 16), v2 + ((v5 + 24) & ~v5));
}

uint64_t sub_2311FFA90@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 16))(*a1, a1[1]);
  *a2 = result;
  return result;
}

unint64_t sub_2311FFAC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541543F8;
  if (!qword_2541543F8)
  {
    sub_2311FFB78(255, &qword_254154400, sub_2311FF978, (void (*)(void))sub_2311FF98C);
    result = MEMORY[0x2348D8544](MEMORY[0x24BDB98F0], v1);
    atomic_store(result, (unint64_t *)&qword_2541543F8);
  }
  return result;
}

void sub_2311FFB24()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254154578)
  {
    v0 = sub_231263D78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254154578);
  }
}

void sub_2311FFB78(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_2311DA06C(255, &qword_254152F68, sub_2311FE7B4);
    a3(255);
    sub_2311C09BC();
    a4();
    v7 = sub_231263CA0();
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_2311FFC18()
{
  return sub_231172048(&qword_254154570, (uint64_t (*)(uint64_t))sub_2311FFB24, MEMORY[0x24BDB9DF8]);
}

unint64_t sub_2311FFC34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255EB98F8;
  if (!qword_255EB98F8)
  {
    sub_2311735E0(255, &qword_254153058, (uint64_t (*)(uint64_t))sub_2311FE7B4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
    result = MEMORY[0x2348D8544](MEMORY[0x24BDB9DF8], v1);
    atomic_store(result, (unint64_t *)&qword_255EB98F8);
  }
  return result;
}

uint64_t sub_2311FFC98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_231261FA8();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_2311FFD0C@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_231261FA8();
  return sub_2311FCDC0(a1, a2);
}

unint64_t sub_2311FFD5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2541543E8;
  if (!qword_2541543E8)
  {
    sub_2311FFB78(255, &qword_2541543F0, (void (*)(uint64_t))sub_2311FFB24, (void (*)(void))sub_2311FFC18);
    result = MEMORY[0x2348D8544](MEMORY[0x24BDB98F0], v1);
    atomic_store(result, (unint64_t *)&qword_2541543E8);
  }
  return result;
}

_QWORD *sub_2311FFDC4(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  v19 = *v1;
  v17 = sub_2312621DC();
  v4 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_2312621F4();
  v7 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311733CC(a1, (uint64_t)v1 + OBJC_IVAR____TtC13HealthRecords24ClinicalSharingGenerator_context);
  v16 = sub_231262230();
  sub_2311735E0(0, &qword_254155718, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v10 = sub_231261FA8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_231265AC0;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v11 + 104))(v13 + v12, *MEMORY[0x24BE47418], v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BE47910], v17);
  sub_2312621E8();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))((uint64_t)v2 + OBJC_IVAR____TtC13HealthRecords24ClinicalSharingGenerator_domain, v9, v18);
  v14 = sub_2311FFFA8(a1);
  sub_231178498(a1, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC13HealthRecords24ClinicalSharingGenerator_publisher) = v14;
  return v2;
}

uint64_t sub_2311FFFA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint8_t *v36;
  uint64_t v37;
  void *v38;
  uint64_t (*v39)(void);
  id v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char *v48;
  void *v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t);
  uint64_t (*v52)(void);
  char *v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  uint64_t v99;

  v2 = v1;
  v4 = type metadata accessor for HealthRecordsGeneratorContext();
  v87 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v89 = v5;
  v96 = (uint64_t)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311735E0(0, &qword_2541556F0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v69 - v7;
  v80 = sub_2312621DC();
  v77 = *(_QWORD *)(v80 - 8);
  MEMORY[0x24BDAC7A8](v80);
  v79 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2312621F4();
  v78 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v76 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312033F8();
  v75 = v12;
  v74 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v73 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231203534();
  v83 = *(_QWORD *)(v14 - 8);
  v84 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v82 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23120368C();
  v88 = v16;
  v86 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v85 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231203738();
  v94 = v18;
  v92 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v90 = (char *)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312037DC();
  v95 = v20;
  v93 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v91 = (char *)&v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_231263B5C();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v69 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231263B38();
  v26 = sub_231263B50();
  v27 = sub_2312643F0();
  v28 = os_log_type_enabled(v26, v27);
  v97 = a1;
  v81 = v2;
  if (v28)
  {
    v70 = v4;
    v29 = swift_slowAlloc();
    v72 = v8;
    v30 = (uint8_t *)v29;
    v31 = swift_slowAlloc();
    v71 = v10;
    v32 = v31;
    v99 = v31;
    *(_DWORD *)v30 = 136315138;
    v33 = sub_231264C84();
    v98 = (id)sub_2311CBDE4(v33, v34, &v99);
    v4 = v70;
    sub_231264750();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23116F000, v26, v27, "%s Account sharing generator - make publisher", v30, 0xCu);
    swift_arrayDestroy();
    v35 = v32;
    v10 = v71;
    MEMORY[0x2348D85EC](v35, -1, -1);
    v36 = v30;
    v8 = v72;
    a1 = v97;
    MEMORY[0x2348D85EC](v36, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  v37 = a1;
  v38 = *(void **)(a1 + *(int *)(v4 + 20));
  *(_QWORD *)(swift_allocObject() + 16) = v38;
  v39 = MEMORY[0x24BDB9E38];
  sub_231203604(0, (unint64_t *)&qword_254153068, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9E38]);
  sub_2312034F4(&qword_254153060, (unint64_t *)&qword_254153068, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v39, MEMORY[0x24BDB9E58]);
  v40 = v38;
  v41 = v73;
  sub_231263DD8();
  sub_231172048(&qword_254153090, (uint64_t (*)(uint64_t))sub_2312033F8, MEMORY[0x24BDB9E90]);
  v42 = v75;
  v43 = sub_231263E38();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v41, v42);
  v99 = v43;
  sub_231262230();
  sub_2311735E0(0, &qword_254155718, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v44 = sub_231261FA8();
  v45 = *(_QWORD *)(v44 - 8);
  v46 = (*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
  v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = xmmword_231265AC0;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v45 + 104))(v47 + v46, *MEMORY[0x24BE47418], v44);
  (*(void (**)(char *, _QWORD, uint64_t))(v77 + 104))(v79, *MEMORY[0x24BE47910], v80);
  v48 = v76;
  sub_2312621E8();
  v49 = (void *)sub_231262254();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v48, v10);
  v98 = v49;
  v50 = sub_2312644B0();
  v51 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0];
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v8, 1, 1, v50);
  v52 = MEMORY[0x24BDB9AE0];
  sub_231203604(0, &qword_254152F78, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_231178AD0(0, (unint64_t *)&qword_2541558F0);
  sub_2312034F4(&qword_254152F70, &qword_254152F78, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v52, MEMORY[0x24BDB9AF8]);
  sub_2311D9E78();
  v53 = v82;
  sub_231263EF8();
  sub_231189628((uint64_t)v8, &qword_2541556F0, v51);

  swift_release();
  v54 = v96;
  sub_2311733CC(v37, v96);
  v55 = (*(unsigned __int8 *)(v87 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
  v56 = (v89 + v55 + 7) & 0xFFFFFFFFFFFFFFF8;
  v89 = v56 + 8;
  v57 = swift_allocObject();
  sub_2311B1454(v54, v57 + v55, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
  v58 = v81;
  *(_QWORD *)(v57 + v56) = v81;
  *(_QWORD *)(v57 + ((v56 + 15) & 0xFFFFFFFFFFFFFFF8)) = v58;
  sub_2311735E0(0, &qword_254151870, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_231172048(&qword_254152E60, (uint64_t (*)(uint64_t))sub_231203534, MEMORY[0x24BDB9A08]);
  v59 = v84;
  v60 = v85;
  sub_231263E80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v53, v59);
  sub_2311733CC(v97, v54);
  v61 = swift_allocObject();
  sub_2311B1454(v54, v61 + v55, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
  *(_QWORD *)(v61 + v56) = v58;
  sub_23118860C(0, (unint64_t *)&qword_254155638, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE1250]);
  v62 = v90;
  v63 = v88;
  sub_231263C10();
  swift_release();
  (*(void (**)(char *, uint64_t))(v86 + 8))(v60, v63);
  *(_QWORD *)(swift_allocObject() + 16) = v58;
  sub_231187D64();
  sub_231172048(&qword_254152DA8, (uint64_t (*)(uint64_t))sub_231203738, MEMORY[0x24BDB98C8]);
  sub_231172048(&qword_254152F30, (uint64_t (*)(uint64_t))sub_231187D64, MEMORY[0x24BDB9AF8]);
  v64 = v91;
  v65 = v94;
  sub_231263E8C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v62, v65);
  sub_231172048(&qword_254152D18, (uint64_t (*)(uint64_t))sub_2312037DC, MEMORY[0x24BDB9740]);
  v66 = v95;
  v67 = sub_231263E38();
  (*(void (**)(char *, uint64_t))(v93 + 8))(v64, v66);
  return v67;
}

void sub_231200930(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  unint64_t v32;
  unint64_t *v33;
  id v34;
  int v35;
  uint64_t v36;
  int v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  void (*v47)(char *, uint64_t);
  char *v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  unint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  char *v77;
  char *v78;
  unint64_t v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  v87 = a3;
  v88 = a4;
  sub_2311735E0(0, &qword_2541554F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v81 - v12;
  v14 = sub_23126217C();
  v85 = *(_QWORD *)(v14 - 8);
  v86 = v14;
  v15 = MEMORY[0x24BDAC7A8](v14);
  v84 = (char *)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v83 = (char *)&v81 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v81 - v19;
  v21 = sub_231263B5C();
  v89 = *(_QWORD *)(v21 - 8);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v81 - v24;
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)&v81 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v31 = (char *)&v81 - v30;
  v32 = *a1;
  if (!v32)
  {
    sub_231263B20();
    v49 = sub_231263B50();
    v50 = sub_2312643F0();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc();
      v52 = swift_slowAlloc();
      v91 = v52;
      *(_DWORD *)v51 = 136315138;
      v53 = sub_231264C84();
      v90 = sub_2311CBDE4(v53, v54, &v91);
      sub_231264750();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23116F000, v49, v50, "[%s] accounts publisher returned nil", v51, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348D85EC](v52, -1, -1);
      MEMORY[0x2348D85EC](v51, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v89 + 8))(v31, v21);
    goto LABEL_27;
  }
  v81 = v29;
  v82 = v21;
  v33 = a5;
  v34 = objc_msgSend(*(id *)(a2 + *(int *)(type metadata accessor for HealthRecordsGeneratorContext() + 20)), sel_supportsClinicalSharing);
  v35 = (int)v34;
  if (v32 >> 62)
  {
    swift_bridgeObjectRetain();
    v36 = sub_2312649A8();
    v34 = (id)swift_bridgeObjectRelease();
  }
  else
  {
    v36 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v36)
    v37 = 0;
  else
    v37 = v35;
  if (v37 == 1)
  {
    v38 = (void *)sub_231262230();
    sub_231201248(1, (uint64_t)v38, (uint64_t)v13);

    v39 = v85;
    v40 = v86;
    a5 = v33;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48))(v13, 1, v86) == 1)
    {
      sub_231189628((uint64_t)v13, &qword_2541554F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0]);
      sub_231263B20();
      v41 = sub_231263B50();
      v42 = sub_2312643F0();
      if (os_log_type_enabled(v41, v42))
      {
        v43 = (uint8_t *)swift_slowAlloc();
        v44 = swift_slowAlloc();
        v91 = v44;
        *(_DWORD *)v43 = 136315138;
        v45 = sub_231264C84();
        v90 = sub_2311CBDE4(v45, v46, &v91);
        sub_231264750();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23116F000, v41, v42, "[%s] Could not make onboarding tile feed item", v43, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2348D85EC](v44, -1, -1);
        MEMORY[0x2348D85EC](v43, -1, -1);
      }

      v47 = *(void (**)(char *, uint64_t))(v89 + 8);
      v48 = v28;
LABEL_26:
      v47(v48, v82);
LABEL_27:
      v57 = MEMORY[0x24BEE4AF8];
      goto LABEL_28;
    }
    v68 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
    v68(v20, v13, v40);
    sub_2311735E0(0, &qword_254155720, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v69 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
    v57 = swift_allocObject();
    *(_OWORD *)(v57 + 16) = xmmword_231265AC0;
    v68((char *)(v57 + v69), v20, v40);
  }
  else
  {
    MEMORY[0x24BDAC7A8](v34);
    v55 = v88;
    *(&v81 - 4) = (char *)v87;
    *(&v81 - 3) = (char *)a2;
    *(&v81 - 2) = (char *)v55;
    sub_231245940((void (*)(id *))sub_231203AF0, (uint64_t)(&v81 - 6), v32);
    v57 = v56;
    a5 = v33;
    if (!*(_QWORD *)(v56 + 16))
    {
      swift_bridgeObjectRelease();
      sub_231263B20();
      v70 = sub_231263B50();
      v71 = sub_2312643F0();
      if (os_log_type_enabled(v70, v71))
      {
        v72 = (uint8_t *)swift_slowAlloc();
        v73 = swift_slowAlloc();
        v91 = v73;
        *(_DWORD *)v72 = 136315138;
        v74 = sub_231264C84();
        v90 = sub_2311CBDE4(v74, v75, &v91);
        sub_231264750();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23116F000, v70, v71, "[%s] failed to make any sharing account feed items", v72, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2348D85EC](v73, -1, -1);
        MEMORY[0x2348D85EC](v72, -1, -1);
      }

      v47 = *(void (**)(char *, uint64_t))(v89 + 8);
      v48 = v25;
      goto LABEL_26;
    }
    if (v35)
    {
      v58 = (void *)sub_231262230();
      sub_231201248(0, (uint64_t)v58, (uint64_t)v11);

      v60 = v85;
      v59 = v86;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48))(v11, 1, v86) == 1)
      {
        swift_bridgeObjectRelease();
        sub_231189628((uint64_t)v11, &qword_2541554F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0]);
        v61 = v81;
        sub_231263B20();
        v62 = sub_231263B50();
        v63 = sub_2312643F0();
        if (os_log_type_enabled(v62, v63))
        {
          v64 = (uint8_t *)swift_slowAlloc();
          v65 = swift_slowAlloc();
          v91 = v65;
          *(_DWORD *)v64 = 136315138;
          v66 = sub_231264C84();
          v90 = sub_2311CBDE4(v66, v67, &v91);
          sub_231264750();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23116F000, v62, v63, "[%s] Could not make onboarding tile feed item", v64, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2348D85EC](v65, -1, -1);
          MEMORY[0x2348D85EC](v64, -1, -1);
        }

        v47 = *(void (**)(char *, uint64_t))(v89 + 8);
        v48 = v61;
        goto LABEL_26;
      }
      v76 = *(void (**)(char *, char *, uint64_t))(v60 + 32);
      v77 = v83;
      v76(v83, v11, v59);
      v78 = v84;
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v84, v77, v59);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v57 = sub_2311DCA10(0, *(_QWORD *)(v57 + 16) + 1, 1, v57);
      v80 = *(_QWORD *)(v57 + 16);
      v79 = *(_QWORD *)(v57 + 24);
      if (v80 >= v79 >> 1)
        v57 = sub_2311DCA10(v79 > 1, v80 + 1, 1, v57);
      *(_QWORD *)(v57 + 16) = v80 + 1;
      v76((char *)(v57+ ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80))+ *(_QWORD *)(v60 + 72) * v80), v78, v59);
      (*(void (**)(char *, uint64_t))(v60 + 8))(v77, v59);
    }
  }
LABEL_28:
  *a5 = v57;
}

uint64_t sub_231201248@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t *, _QWORD);
  uint64_t v42;
  _QWORD v44[3];
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v4 = v3;
  v44[2] = a2;
  LODWORD(v54) = a1;
  v55 = a3;
  v5 = sub_231261FA8();
  v45 = *(_QWORD *)(v5 - 8);
  v46 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v47 = (char *)v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23126217C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v48 = (char *)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_231263B5C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)v44 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v44 - v18;
  sub_231263B20();
  v20 = sub_231263B50();
  v21 = sub_2312643F0();
  v22 = os_log_type_enabled(v20, v21);
  v53 = v8;
  v49 = v17;
  v50 = v14;
  v44[1] = v4;
  if (v22)
  {
    v23 = swift_slowAlloc();
    v52 = v7;
    v24 = (uint8_t *)v23;
    v25 = swift_slowAlloc();
    v57 = v25;
    *(_DWORD *)v24 = 136315138;
    v26 = sub_231264C84();
    v56 = sub_2311CBDE4(v26, v27, &v57);
    sub_231264750();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23116F000, v20, v21, "%s Making account sharing onboarding tile feed item", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v25, -1, -1);
    v28 = v24;
    v7 = v52;
    MEMORY[0x2348D85EC](v28, -1, -1);
  }

  v51 = *(void (**)(char *, uint64_t))(v11 + 8);
  v51(v19, v10);
  sub_231261C78();
  swift_allocObject();
  sub_231261C6C();
  if ((v54 & 1) != 0)
  {
    if (qword_254153EE0 != -1)
      swift_once();
    v57 = qword_254155B90;
    v58 = *(_QWORD *)algn_254155B98;
    sub_231203B0C();
    swift_bridgeObjectRetain();
    v29 = sub_231261C60();
  }
  else
  {
    if (qword_255EB77F8 != -1)
      swift_once();
    v57 = qword_255EC2068;
    v58 = qword_255EC2070;
    sub_231203B0C();
    swift_bridgeObjectRetain();
    v29 = sub_231261C60();
  }
  v31 = v29;
  v32 = v30;
  swift_bridgeObjectRelease();
  sub_231263238();
  sub_231263250();
  v33 = (void *)sub_231261FF0();
  v34 = sub_231262E9C();
  v36 = v35;
  swift_bridgeObjectRelease();

  v57 = v34;
  v58 = v36;
  swift_bridgeObjectRetain();
  sub_231264144();
  swift_bridgeObjectRelease();
  type metadata accessor for ClinicalSharingOnboardingTileViewController();
  (*(void (**)(char *, _QWORD, uint64_t))(v45 + 104))(v47, *MEMORY[0x24BE474E0], v46);
  sub_2311C0CF0(v31, v32);
  sub_231262014();
  v37 = v48;
  sub_231262038();
  sub_231262164();
  sub_2312620A4();
  sub_2312620B0();
  v38 = sub_231262290();
  v40 = v39;
  v41 = (void (*)(uint64_t *, _QWORD))sub_23126214C();
  sub_2312519E4(&v56, v38, v40);
  swift_bridgeObjectRelease();
  v41(&v57, 0);
  sub_2311807A0(v31, v32);
  swift_release();
  v42 = v53;
  (*(void (**)(uint64_t, char *, uint64_t))(v53 + 32))(v55, v37, v7);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v42 + 56))(v55, 0, 1, v7);
}

uint64_t sub_231201BE8@<X0>(void **a1@<X0>, uint64_t a2@<X3>, _BYTE *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v34;
  NSObject *v35;
  os_log_type_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  _BYTE v48[12];
  int v49;
  void (*v50)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;

  v57 = a3;
  v53 = a2;
  v4 = sub_231263B5C();
  v55 = *(_QWORD *)(v4 - 8);
  v56 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v54 = &v48[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v5);
  v52 = &v48[-v7];
  sub_2311735E0(0, &qword_2541554F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v48[-v9];
  v11 = sub_23126217C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = &v48[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v13);
  v17 = &v48[-v16];
  v18 = *a1;
  v19 = (void *)sub_231262230();
  v20 = v18;
  v21 = v12;
  v22 = v11;
  sub_2312020CC(v20, v19, (uint64_t)v10);

  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v21 + 48))(v10, 1, v11) == 1)
  {
    sub_231189628((uint64_t)v10, &qword_2541554F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0]);
    v23 = v52;
    sub_231263B20();
    v24 = sub_231263B50();
    v25 = sub_2312643F0();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      v51 = v21;
      v28 = v27;
      v59 = v27;
      *(_DWORD *)v26 = 136315138;
      v29 = sub_231264C84();
      v58 = sub_2311CBDE4(v29, v30, &v59);
      sub_231264750();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23116F000, v24, v25, "%s Failed to make feed item", v26, 0xCu);
      v31 = 1;
      swift_arrayDestroy();
      v32 = v28;
      v21 = v51;
      MEMORY[0x2348D85EC](v32, -1, -1);
      MEMORY[0x2348D85EC](v26, -1, -1);

      (*(void (**)(_BYTE *, uint64_t))(v55 + 8))(v23, v56);
    }
    else
    {

      (*(void (**)(_BYTE *, uint64_t))(v55 + 8))(v23, v56);
      v31 = 1;
    }
    v46 = v57;
  }
  else
  {
    v33 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v21 + 32);
    v33(v17, v10, v11);
    v34 = v54;
    sub_231263B20();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v21 + 16))(v15, v17, v22);
    v35 = sub_231263B50();
    v36 = sub_2312643F0();
    v37 = v36;
    if (os_log_type_enabled(v35, v36))
    {
      v38 = swift_slowAlloc();
      v52 = v17;
      v50 = v33;
      v39 = v38;
      v40 = swift_slowAlloc();
      v59 = v40;
      *(_DWORD *)v39 = 136315394;
      v49 = v37;
      v41 = sub_231264C84();
      v58 = sub_2311CBDE4(v41, v42, &v59);
      v51 = v21;
      sub_231264750();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 2080;
      v43 = sub_2312620D4();
      v58 = sub_2311CBDE4(v43, v44, &v59);
      v21 = v51;
      sub_231264750();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v21 + 8))(v15, v22);
      _os_log_impl(&dword_23116F000, v35, (os_log_type_t)v49, "%s Successfully made feed item: %s", (uint8_t *)v39, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348D85EC](v40, -1, -1);
      v45 = v39;
      v33 = v50;
      v17 = v52;
      MEMORY[0x2348D85EC](v45, -1, -1);
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v21 + 8))(v15, v22);
    }

    (*(void (**)(_BYTE *, uint64_t))(v55 + 8))(v34, v56);
    v46 = v57;
    v33(v57, v17, v22);
    v31 = 0;
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v46, v31, 1, v22);
}

uint64_t sub_2312020CC@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  _BOOL4 v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void (*v35)(_BYTE *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  _BYTE *v40;
  id v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  unint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  void *v59;
  id v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t *, _QWORD);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE v70[12];
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  void *v76;
  _BYTE *v77;
  uint64_t v78;
  uint64_t v79;
  _BYTE *v80;
  _BYTE *v81;
  _BYTE *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _BYTE *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(_BYTE *, uint64_t);
  uint64_t v92;
  uint64_t v93[6];

  v76 = a2;
  v90 = a3;
  v74 = sub_231261FA8();
  v73 = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74);
  v75 = &v70[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_23126217C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v77 = &v70[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2311735E0(0, &qword_255EB9900, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingFeedItemData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v8);
  v86 = &v70[-v9];
  v87 = type metadata accessor for ClinicalSharingFeedItemData();
  v85 = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87);
  v81 = &v70[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_231261E94();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = &v70[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = sub_231263B5C();
  v89 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v80 = &v70[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = MEMORY[0x24BDAC7A8](v16);
  v82 = &v70[-v19];
  MEMORY[0x24BDAC7A8](v18);
  v21 = &v70[-v20];
  sub_231263B20();
  v22 = a1;
  v23 = sub_231263B50();
  v24 = sub_2312643F0();
  v25 = v24;
  v26 = os_log_type_enabled(v23, v24);
  v83 = v6;
  v84 = v5;
  v88 = v15;
  v78 = v12;
  v79 = v11;
  if (v26)
  {
    v27 = swift_slowAlloc();
    v72 = swift_slowAlloc();
    v93[0] = v72;
    *(_DWORD *)v27 = 136315394;
    v71 = v25;
    v28 = sub_231264C84();
    v92 = sub_2311CBDE4(v28, v29, v93);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2080;
    v30 = objc_msgSend(v22, sel_identifier, v27 + 14);
    sub_231261E7C();

    sub_231172048(&qword_255EB78D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v31 = sub_231264B28();
    v33 = v32;
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v11);
    v92 = sub_2311CBDE4(v31, v33, v93);
    sub_231264750();

    v15 = v88;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23116F000, v23, (os_log_type_t)v71, "%s Making feed item for account: %s", (uint8_t *)v27, 0x16u);
    v34 = v72;
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v34, -1, -1);
    MEMORY[0x2348D85EC](v27, -1, -1);

  }
  else
  {

  }
  v35 = *(void (**)(_BYTE *, uint64_t))(v89 + 8);
  v35(v21, v15);
  v36 = (uint64_t)v86;
  v37 = v87;
  v38 = v85;
  v39 = v22;
  ClinicalSharingFeedItemData.init(_:)(v39, v36);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37) == 1)
  {
    sub_231189628(v36, &qword_255EB9900, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingFeedItemData);
    v40 = v82;
    sub_231263B20();
    v41 = v39;
    v42 = sub_231263B50();
    v43 = sub_2312643D8();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = swift_slowAlloc();
      v45 = swift_slowAlloc();
      v91 = v35;
      v46 = v45;
      v93[0] = v45;
      *(_DWORD *)v44 = 136315394;
      v47 = sub_231264C84();
      v48 = v14;
      v92 = sub_2311CBDE4(v47, v49, v93);
      sub_231264750();
      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 12) = 2080;
      v89 = v44 + 14;
      v50 = objc_msgSend(v41, sel_identifier);
      sub_231261E7C();

      sub_231172048(&qword_255EB78D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v51 = v79;
      v52 = sub_231264B28();
      v54 = v53;
      (*(void (**)(_BYTE *, uint64_t))(v78 + 8))(v48, v51);
      v92 = sub_2311CBDE4(v52, v54, v93);
      sub_231264750();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23116F000, v42, v43, "%s Failed to create feed item data for account: %s", (uint8_t *)v44, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348D85EC](v46, -1, -1);
      MEMORY[0x2348D85EC](v44, -1, -1);

      v91(v82, v88);
    }
    else
    {

      v35(v40, v15);
    }
    v68 = 1;
    v67 = v83;
    v66 = v84;
  }
  else
  {
    v87 = (uint64_t)v14;
    v91 = v35;
    v55 = v81;
    sub_2311B1454(v36, (uint64_t)v81, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingFeedItemData);
    sub_231261C78();
    swift_allocObject();
    sub_231261C6C();
    sub_231172048(&qword_255EB9908, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingFeedItemData, (uint64_t)&protocol conformance descriptor for ClinicalSharingFeedItemData);
    v56 = sub_231261C60();
    v58 = v57;
    sub_2311C0CF0(v56, v57);
    v59 = v76;
    sub_231263244();
    type metadata accessor for ClinicalSharingFeedItemViewController();
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v73 + 104))(v75, *MEMORY[0x24BE47418], v74);
    v60 = v59;
    v61 = v77;
    sub_231262038();
    v62 = sub_231262290();
    v64 = v63;
    v65 = (void (*)(uint64_t *, _QWORD))sub_23126214C();
    sub_2312519E4(&v92, v62, v64);
    swift_bridgeObjectRelease();
    v65(v93, 0);
    swift_release();
    sub_2311807A0(v56, v58);
    sub_231178498((uint64_t)v55, (uint64_t (*)(_QWORD))type metadata accessor for ClinicalSharingFeedItemData);
    v67 = v83;
    v66 = v84;
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v83 + 32))(v90, v61, v84);
    v68 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56))(v90, v68, 1, v66);
}

uint64_t sub_231202C34@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v7 = sub_231263B5C();
  v34 = *(_QWORD *)(v7 - 8);
  v35 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  sub_231263B20();
  swift_bridgeObjectRetain_n();
  v11 = sub_231263B50();
  v12 = sub_2312643CC();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v31 = a2;
    v14 = v13;
    v30 = swift_slowAlloc();
    v37 = v30;
    *(_DWORD *)v14 = 136315394;
    v33 = v3;
    v15 = sub_231264C84();
    v36 = sub_2311CBDE4(v15, v16, &v37);
    v32 = a3;
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    v17 = sub_23126217C();
    v18 = swift_bridgeObjectRetain();
    v19 = MEMORY[0x2348D7608](v18, v17);
    v21 = v20;
    swift_bridgeObjectRelease();
    v36 = sub_2311CBDE4(v19, v21, &v37);
    a3 = v32;
    sub_231264750();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23116F000, v11, v12, "[%s] computing changes for: %s", (uint8_t *)v14, 0x16u);
    v22 = v30;
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v22, -1, -1);
    MEMORY[0x2348D85EC](v14, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v35);
  v23 = sub_231263238();
  v25 = v24;
  v26 = sub_231262230();
  sub_23118860C(0, &qword_254153220, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE3598]);
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_231265AC0;
  *(_QWORD *)(v27 + 32) = v10;
  *(_QWORD *)(v27 + 40) = v23;
  *(_QWORD *)(v27 + 48) = v25;
  *(_QWORD *)(v27 + 56) = v26;
  *(_BYTE *)(v27 + 64) = -127;
  *a3 = v27;
  return swift_bridgeObjectRetain();
}

uint64_t sub_231202EE8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  sub_2311885A8();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_231263B5C();
  v38 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  sub_231263B2C();
  v13 = v12;
  v14 = v12;
  v15 = sub_231263B50();
  v16 = sub_2312643D8();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v36 = v6;
    v18 = v17;
    v35 = swift_slowAlloc();
    v40 = v35;
    *(_DWORD *)v18 = 136315394;
    v37 = a2;
    v19 = sub_231264C84();
    v39 = sub_2311CBDE4(v19, v20, &v40);
    sub_231264750();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    v34 = v18 + 14;
    v39 = (uint64_t)v12;
    v21 = v12;
    v22 = v12;
    sub_2311889D8();
    sub_231264B88();
    v23 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_2312647B0();
    swift_unknownObjectRelease();
    v24 = sub_2312640B4();
    v33 = v9;
    v26 = v25;

    v27 = v24;
    a2 = v37;
    v39 = sub_2311CBDE4(v27, v26, &v40);
    sub_231264750();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23116F000, v15, v16, "%s: Unable to compute desired difference for commit: %s", (uint8_t *)v18, 0x16u);
    v28 = v35;
    swift_arrayDestroy();
    MEMORY[0x2348D85EC](v28, -1, -1);
    v29 = v18;
    v6 = v36;
    MEMORY[0x2348D85EC](v29, -1, -1);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v11, v33);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v38 + 8))(v11, v9);
  }
  v39 = MEMORY[0x24BEE4AF8];
  sub_23118860C(0, (unint64_t *)&qword_254155638, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE1250]);
  sub_231263D84();
  sub_231172048((unint64_t *)&qword_254153048, (uint64_t (*)(uint64_t))sub_2311885A8, MEMORY[0x24BDB9DF8]);
  v30 = sub_231263E38();
  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v30;
  return result;
}

uint64_t sub_23120324C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_231178498(v0 + OBJC_IVAR____TtC13HealthRecords24ClinicalSharingGenerator_context, (uint64_t (*)(_QWORD))type metadata accessor for HealthRecordsGeneratorContext);
  v1 = v0 + OBJC_IVAR____TtC13HealthRecords24ClinicalSharingGenerator_domain;
  v2 = sub_2312621F4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2312032C4()
{
  return type metadata accessor for ClinicalSharingGenerator();
}

uint64_t type metadata accessor for ClinicalSharingGenerator()
{
  uint64_t result;

  result = qword_2541535F8;
  if (!qword_2541535F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_231203308()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for HealthRecordsGeneratorContext();
  if (v1 <= 0x3F)
  {
    result = sub_2312621F4();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_23120339C()
{
  return swift_retain();
}

uint64_t sub_2312033B0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC13HealthRecords24ClinicalSharingGenerator_domain;
  v4 = sub_2312621F4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void sub_2312033F8()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_254153098)
  {
    v0 = MEMORY[0x24BDB9E38];
    sub_231203604(255, (unint64_t *)&qword_254153068, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9E38]);
    sub_2312034F4(&qword_254153060, (unint64_t *)&qword_254153068, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v0, MEMORY[0x24BDB9E58]);
    v1 = sub_231263DE4();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_254153098);
  }
}

void sub_231203490()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254151880)
  {
    sub_231178AD0(255, (unint64_t *)&qword_2541556E0);
    v0 = sub_231264270();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254151880);
  }
}

uint64_t sub_2312034F4(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_231203604(255, a2, a3);
    result = MEMORY[0x2348D8544](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_231203534()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_254152E68)
  {
    v0 = MEMORY[0x24BDB9AE0];
    sub_231203604(255, &qword_254152F78, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_231178AD0(255, (unint64_t *)&qword_2541558F0);
    sub_2312034F4(&qword_254152F70, &qword_254152F78, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v0, MEMORY[0x24BDB9AF8]);
    sub_2311D9E78();
    v1 = sub_231263CE8();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_254152E68);
  }
}

void sub_231203604(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_2311735E0(255, (unint64_t *)&qword_254153110, (uint64_t (*)(uint64_t))sub_231203490, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v7 = v6;
    v8 = sub_2311889D8();
    v9 = a3(a1, v7, v8, MEMORY[0x24BEE3F20]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_23120368C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254152CC0)
  {
    sub_231203534();
    sub_2311735E0(255, &qword_254151870, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_231172048(&qword_254152E60, (uint64_t (*)(uint64_t))sub_231203534, MEMORY[0x24BDB9A08]);
    v0 = sub_231263C1C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254152CC0);
  }
}

void sub_231203738()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254152DB0)
  {
    sub_231203534();
    sub_23118860C(255, (unint64_t *)&qword_254155638, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE1250]);
    sub_231172048(&qword_254152E60, (uint64_t (*)(uint64_t))sub_231203534, MEMORY[0x24BDB9A08]);
    v0 = sub_231263C88();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254152DB0);
  }
}

void sub_2312037DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254152D20)
  {
    sub_231203738();
    sub_231187D64();
    sub_231172048(&qword_254152DA8, (uint64_t (*)(uint64_t))sub_231203738, MEMORY[0x24BDB98C8]);
    sub_231172048(&qword_254152F30, (uint64_t (*)(uint64_t))sub_231187D64, MEMORY[0x24BDB9AF8]);
    v0 = sub_231263C40();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254152D20);
  }
}

uint64_t sub_2312038A4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_2312038C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_2311C829C(*(void **)(v1 + 16), a1);
}

uint64_t sub_2312038D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for HealthRecordsGeneratorContext();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_23126226C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocObject();
}

void sub_23120396C(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(type metadata accessor for HealthRecordsGeneratorContext() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_231200930(a1, v2 + v6, *(_QWORD *)(v2 + v7), *(_QWORD *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFF8)), a2);
}

uint64_t sub_2312039D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for HealthRecordsGeneratorContext();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_23126226C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocObject();
}

uint64_t sub_231203A6C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for HealthRecordsGeneratorContext() - 8) + 80);
  return sub_231202C34(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_231203AD8()
{
  return swift_deallocObject();
}

uint64_t sub_231203AE8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_231202EE8(a1, a2);
}

uint64_t sub_231203AF0@<X0>(void **a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_231201BE8(a1, *(_QWORD *)(v2 + 32), a2);
}

unint64_t sub_231203B0C()
{
  unint64_t result;

  result = qword_254153EE8;
  if (!qword_254153EE8)
  {
    result = MEMORY[0x2348D8544](&unk_2312680E8, &type metadata for ClinicalSharingOnboardingTileViewController.ViewModel);
    atomic_store(result, (unint64_t *)&qword_254153EE8);
  }
  return result;
}

uint64_t *sub_231203B50(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23126292C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_231178A30(0, (unint64_t *)&qword_2541534D0, &qword_2541531B0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (uint64_t *)((char *)a1 + v12);
    v15 = (uint64_t *)((char *)a2 + v12);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = (char *)a1 + v13;
    v18 = (char *)a2 + v13;
    v19 = sub_231261E40();
    v20 = *(_QWORD *)(v19 - 8);
    v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
    swift_bridgeObjectRetain();
    if (v21(v18, 1, v19))
    {
      sub_2311787F4(0, (unint64_t *)&qword_254154938, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    v24 = a3[8];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_231178A30(0, &qword_2541534C0, (unint64_t *)&qword_2541531A0);
    v28 = v27;
    v29 = *(_QWORD *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v26, 1, v27))
    {
      sub_2311789C4();
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v25, v26, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v25, 0, 1, v28);
    }
    v31 = a3[9];
    v32 = a3[10];
    v33 = (uint64_t *)((char *)a1 + v31);
    v34 = (uint64_t *)((char *)a2 + v31);
    v35 = v34[1];
    *v33 = *v34;
    v33[1] = v35;
    v36 = (uint64_t *)((char *)a1 + v32);
    v37 = (uint64_t *)((char *)a2 + v32);
    v38 = v37[1];
    *v36 = *v37;
    v36[1] = v38;
    v39 = a3[11];
    v40 = a3[12];
    v41 = (char *)a1 + v39;
    v42 = (char *)a2 + v39;
    *(_QWORD *)v41 = *(_QWORD *)v42;
    v41[8] = v42[8];
    v43 = (char *)a1 + v40;
    v44 = (char *)a2 + v40;
    v43[8] = v44[8];
    *(_QWORD *)v43 = *(_QWORD *)v44;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_231203DCC(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = sub_23126292C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_231178A30(0, (unint64_t *)&qword_2541534D0, &qword_2541531B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  v7 = a1 + a2[7];
  v8 = sub_231261E40();
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  v10 = a1 + a2[8];
  sub_231178A30(0, &qword_2541534C0, (unint64_t *)&qword_2541531A0);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v10, v12);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_231203F18(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(const void *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v6 = sub_23126292C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_231178A30(0, (unint64_t *)&qword_2541534D0, &qword_2541531B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v11);
  v14 = (_QWORD *)(a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = (void *)(a1 + v12);
  v17 = (const void *)(a2 + v12);
  v18 = sub_231261E40();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48);
  swift_bridgeObjectRetain();
  if (v20(v17, 1, v18))
  {
    sub_2311787F4(0, (unint64_t *)&qword_254154938, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  v22 = a3[8];
  v23 = (void *)(a1 + v22);
  v24 = (const void *)(a2 + v22);
  sub_231178A30(0, &qword_2541534C0, (unint64_t *)&qword_2541531A0);
  v26 = v25;
  v27 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48))(v24, 1, v25))
  {
    sub_2311789C4();
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v27 + 16))(v23, v24, v26);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v23, 0, 1, v26);
  }
  v29 = a3[9];
  v30 = a3[10];
  v31 = (_QWORD *)(a1 + v29);
  v32 = (_QWORD *)(a2 + v29);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  v34 = (_QWORD *)(a1 + v30);
  v35 = (_QWORD *)(a2 + v30);
  v36 = v35[1];
  *v34 = *v35;
  v34[1] = v36;
  v37 = a3[11];
  v38 = a3[12];
  v39 = a1 + v37;
  v40 = a2 + v37;
  *(_QWORD *)v39 = *(_QWORD *)v40;
  *(_BYTE *)(v39 + 8) = *(_BYTE *)(v40 + 8);
  v41 = a1 + v38;
  v42 = a2 + v38;
  *(_BYTE *)(v41 + 8) = *(_BYTE *)(v42 + 8);
  *(_QWORD *)v41 = *(_QWORD *)v42;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_231204168(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(void *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(void *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;

  v6 = sub_23126292C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_231178A30(0, (unint64_t *)&qword_2541534D0, &qword_2541531B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[7];
  v15 = (void *)(a1 + v14);
  v16 = (void *)(a2 + v14);
  v17 = sub_231261E40();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v15, v17);
LABEL_6:
    sub_2311787F4(0, (unint64_t *)&qword_254154938, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 24))(v15, v16, v17);
LABEL_7:
  v23 = a3[8];
  v24 = (void *)(a1 + v23);
  v25 = (void *)(a2 + v23);
  sub_231178A30(0, &qword_2541534C0, (unint64_t *)&qword_2541531A0);
  v27 = v26;
  v28 = *(_QWORD *)(v26 - 8);
  v29 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v28 + 48);
  v30 = v29(v24, 1, v26);
  v31 = v29(v25, 1, v27);
  if (!v30)
  {
    if (!v31)
    {
      (*(void (**)(void *, void *, uint64_t))(v28 + 24))(v24, v25, v27);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v28 + 8))(v24, v27);
    goto LABEL_12;
  }
  if (v31)
  {
LABEL_12:
    sub_2311789C4();
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v28 + 16))(v24, v25, v27);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v24, 0, 1, v27);
LABEL_13:
  v33 = a3[9];
  v34 = (_QWORD *)(a1 + v33);
  v35 = (_QWORD *)(a2 + v33);
  *v34 = *v35;
  v34[1] = v35[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v36 = a3[10];
  v37 = (_QWORD *)(a1 + v36);
  v38 = (_QWORD *)(a2 + v36);
  *v37 = *v38;
  v37[1] = v38[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v39 = a3[11];
  v40 = a1 + v39;
  v41 = (uint64_t *)(a2 + v39);
  v42 = *v41;
  *(_BYTE *)(v40 + 8) = *((_BYTE *)v41 + 8);
  *(_QWORD *)v40 = v42;
  v43 = a3[12];
  v44 = a1 + v43;
  v45 = (uint64_t *)(a2 + v43);
  v46 = *v45;
  *(_BYTE *)(v44 + 8) = *((_BYTE *)v45 + 8);
  *(_QWORD *)v44 = v46;
  return a1;
}

uint64_t sub_231204480(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = sub_23126292C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_231178A30(0, (unint64_t *)&qword_2541534D0, &qword_2541531B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = sub_231261E40();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    sub_2311787F4(0, (unint64_t *)&qword_254154938, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v17 = a3[8];
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  sub_231178A30(0, &qword_2541534C0, (unint64_t *)&qword_2541531A0);
  v21 = v20;
  v22 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v19, 1, v20))
  {
    sub_2311789C4();
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v22 + 32))(v18, v19, v21);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v18, 0, 1, v21);
  }
  v24 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v24) = *(_OWORD *)(a2 + v24);
  v25 = a3[11];
  v26 = a3[12];
  v27 = a1 + v25;
  v28 = a2 + v25;
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
  v29 = a1 + v26;
  v30 = a2 + v26;
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *(_BYTE *)(v29 + 8) = *(_BYTE *)(v30 + 8);
  return a1;
}

uint64_t sub_23120469C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(void *, uint64_t, uint64_t);
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v6 = sub_23126292C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_231178A30(0, (unint64_t *)&qword_2541534D0, &qword_2541531B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = (void *)(a1 + v16);
  v18 = (void *)(a2 + v16);
  v19 = sub_231261E40();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 32))(v17, v18, v19);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v23)
  {
    (*(void (**)(void *, uint64_t))(v20 + 8))(v17, v19);
LABEL_6:
    sub_2311787F4(0, (unint64_t *)&qword_254154938, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v20 + 40))(v17, v18, v19);
LABEL_7:
  v25 = a3[8];
  v26 = (void *)(a1 + v25);
  v27 = (void *)(a2 + v25);
  sub_231178A30(0, &qword_2541534C0, (unint64_t *)&qword_2541531A0);
  v29 = v28;
  v30 = *(_QWORD *)(v28 - 8);
  v31 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v30 + 48);
  v32 = v31(v26, 1, v28);
  v33 = v31(v27, 1, v29);
  if (!v32)
  {
    if (!v33)
    {
      (*(void (**)(void *, void *, uint64_t))(v30 + 40))(v26, v27, v29);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v30 + 8))(v26, v29);
    goto LABEL_12;
  }
  if (v33)
  {
LABEL_12:
    sub_2311789C4();
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v30 + 32))(v26, v27, v29);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v26, 0, 1, v29);
LABEL_13:
  v35 = a3[9];
  v36 = (_QWORD *)(a1 + v35);
  v37 = (uint64_t *)(a2 + v35);
  v39 = *v37;
  v38 = v37[1];
  *v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  v40 = a3[10];
  v41 = (_QWORD *)(a1 + v40);
  v42 = (uint64_t *)(a2 + v40);
  v44 = *v42;
  v43 = v42[1];
  *v41 = v44;
  v41[1] = v43;
  swift_bridgeObjectRelease();
  v45 = a3[11];
  v46 = a3[12];
  v47 = a1 + v45;
  v48 = a2 + v45;
  *(_QWORD *)v47 = *(_QWORD *)v48;
  *(_BYTE *)(v47 + 8) = *(_BYTE *)(v48 + 8);
  v49 = a1 + v46;
  v50 = a2 + v46;
  *(_QWORD *)v49 = *(_QWORD *)v50;
  *(_BYTE *)(v49 + 8) = *(_BYTE *)(v50 + 8);
  return a1;
}

uint64_t sub_231204980()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23120498C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_23126292C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  sub_231178A30(0, (unint64_t *)&qword_2541534D0, &qword_2541531B0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_12:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    sub_2311787F4(0, (unint64_t *)&qword_254154938, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    v12 = *(_QWORD *)(v16 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v16;
      v13 = a3[7];
    }
    else
    {
      sub_2311789C4();
      v8 = v17;
      v12 = *(_QWORD *)(v17 - 8);
      v13 = a3[8];
    }
    goto LABEL_12;
  }
  v14 = *(_QWORD *)(a1 + a3[6] + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_231204AA8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_231204AB4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v8 = sub_23126292C();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_231178A30(0, (unint64_t *)&qword_2541534D0, &qword_2541531B0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(a1 + a4[6] + 8) = (a2 - 1);
        return;
      }
      sub_2311787F4(0, (unint64_t *)&qword_254154938, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[7];
      }
      else
      {
        sub_2311789C4();
        v10 = v17;
        v14 = *(_QWORD *)(v17 - 8);
        v15 = a4[8];
      }
    }
    v12 = a1 + v15;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for UserDomainConceptFeedItemData()
{
  uint64_t result;

  result = qword_2541527B8;
  if (!qword_2541527B8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_231204C08()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_23126292C();
  if (v0 <= 0x3F)
  {
    sub_231178A30(319, (unint64_t *)&qword_2541534D0, &qword_2541531B0);
    if (v1 <= 0x3F)
    {
      sub_2311787F4(319, (unint64_t *)&qword_254154938, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
      if (v2 <= 0x3F)
      {
        sub_2311789C4();
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

void sub_231204D0C(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, unsigned __int8 a10, uint64_t a11, unsigned __int8 a12)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  unint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  uint64_t *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;

  v67 = a4;
  v69 = a3;
  sub_2311787F4(0, (unint64_t *)&qword_254154938, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  MEMORY[0x24BDAC7A8](v19);
  v66 = (uint64_t)&v58 - v20;
  sub_231178A30(0, (unint64_t *)&qword_2541534D0, &qword_2541531B0);
  v65 = v21;
  v68 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v73 = (char *)&v58 - v22;
  sub_2311787F4(0, &qword_254151850, (void (*)(uint64_t))MEMORY[0x24BE490F8]);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v58 - v24;
  v26 = sub_23126292C();
  v71 = *(_QWORD *)(v26 - 8);
  v72 = v26;
  MEMORY[0x24BDAC7A8](v26);
  v70 = (char *)&v58 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = objc_msgSend(a1, sel_categoryTypes);
  sub_231178AD0(0, &qword_255EB7FD0);
  v29 = sub_2312641F8();

  if (v29 >> 62)
  {
    swift_bridgeObjectRetain();
    v32 = sub_2312649A8();
    swift_bridgeObjectRelease();
    if (v32)
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  if (!*(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_8;
LABEL_3:
  if ((v29 & 0xC000000000000001) != 0)
  {
    v30 = (id)MEMORY[0x2348D7CE0](0, v29);
  }
  else
  {
    if (!*(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v30 = *(id *)(v29 + 32);
  }
  v31 = v30;
  swift_bridgeObjectRelease();
  objc_msgSend(v31, sel_integerValue);

LABEL_9:
  sub_231262914();
  v34 = v71;
  v33 = v72;
  v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v71 + 48))(v25, 1, v72);
  v64 = a5;
  if (v35 == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v70, *MEMORY[0x24BE490C8], v33);
    sub_2311786C0((uint64_t)v25, &qword_254151850, (void (*)(uint64_t))MEMORY[0x24BE490F8]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v70, v25, v33);
  }
  v63 = a12;
  v62 = a11;
  v61 = a10;
  sub_231178AD0(0, &qword_2541531B0);
  v36 = a1;
  sub_231263FAC();
  v37 = sub_2312645D0();
  v59 = v38;
  v60 = v37;
  v39 = sub_231261E40();
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(a2, 1, v39) == 1)
  {
    v41 = a6;
    v42 = a7;
    v43 = a8;
    v44 = a2;
    v45 = objc_msgSend(v36, sel_modificationDate);
    v46 = v66;
    sub_231261E28();

    a2 = v44;
    a8 = v43;
    a7 = v42;
    a6 = v41;

    v47 = v46;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v40 + 56))(v46, 0, 1, v39);
  }
  else
  {

    v47 = v66;
    sub_2311A4BBC(a2, v66);
  }
  v48 = v67;
  v49 = v65;
  (*(void (**)(uint64_t, char *, uint64_t))(v71 + 32))(a9, v70, v72);
  v50 = (int *)type metadata accessor for UserDomainConceptFeedItemData();
  (*(void (**)(uint64_t, char *, uint64_t))(v68 + 32))(a9 + v50[5], v73, v49);
  v51 = (uint64_t *)(a9 + v50[6]);
  v52 = v59;
  *v51 = v60;
  v51[1] = v52;
  sub_2311A4AC8(v47, a9 + v50[7]);
  sub_2312063EC(v69, a9 + v50[8]);
  v53 = (_QWORD *)(a9 + v50[9]);
  v54 = v64;
  *v53 = v48;
  v53[1] = v54;
  v55 = (_QWORD *)(a9 + v50[10]);
  *v55 = a6;
  v55[1] = a7;
  v56 = a9 + v50[11];
  *(_QWORD *)v56 = a8;
  *(_BYTE *)(v56 + 8) = v61 & 1;
  v57 = a9 + v50[12];
  *(_QWORD *)v57 = v62;
  *(_BYTE *)(v57 + 8) = v63 & 1;
  sub_2311786C0(a2, (unint64_t *)&qword_254154938, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
}

uint64_t sub_2312051D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  sub_231178A30(0, &qword_2541534C0, (unint64_t *)&qword_2541531A0);
  v21 = *(_QWORD *)(v1 - 8);
  v22 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v20 = (char *)&v19 - v2;
  sub_2311789C4();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_231261E40();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311787F4(0, (unint64_t *)&qword_254154938, v10);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v19 - v12;
  sub_23126292C();
  sub_231172048(&qword_255EB8830, (uint64_t (*)(uint64_t))MEMORY[0x24BE490F8], MEMORY[0x24BE49110]);
  sub_23126400C();
  v14 = (int *)type metadata accessor for UserDomainConceptFeedItemData();
  sub_231178A30(0, (unint64_t *)&qword_2541534D0, &qword_2541531B0);
  sub_2312064E4();
  sub_23126400C();
  swift_bridgeObjectRetain();
  sub_231264114();
  swift_bridgeObjectRelease();
  sub_2311A4BBC(v0 + v14[7], (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6) == 1)
  {
    sub_231264C18();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v13, v6);
    sub_231264C18();
    sub_231172048(&qword_255EB86E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
    sub_23126400C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  v16 = v21;
  v15 = v22;
  sub_231178454(v0 + v14[8], (uint64_t)v5, (uint64_t (*)(_QWORD))sub_2311789C4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v5, 1, v15) == 1)
  {
    sub_231264C18();
  }
  else
  {
    v17 = v20;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v20, v5, v15);
    sub_231264C18();
    sub_2311B0FD4(&qword_255EB88E0, &qword_255EB88E8, MEMORY[0x24BEE5BD8], MEMORY[0x24BDD2068]);
    sub_23126400C();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v17, v15);
  }
  if (*(_QWORD *)(v0 + v14[9] + 8))
  {
    sub_231264C18();
    swift_bridgeObjectRetain();
    sub_231264114();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_231264C18();
  }
  if (*(_QWORD *)(v0 + v14[10] + 8))
  {
    sub_231264C18();
    swift_bridgeObjectRetain();
    sub_231264114();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_231264C18();
  }
  if (*(_BYTE *)(v0 + v14[11] + 8) == 1)
  {
    sub_231264C18();
  }
  else
  {
    sub_231264C18();
    sub_231264C0C();
  }
  if (*(_BYTE *)(v0 + v14[12] + 8) == 1)
    return sub_231264C18();
  sub_231264C18();
  return sub_231264C0C();
}

uint64_t sub_23120562C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_231205664 + 4 * byte_231269740[a1]))(0xD000000000000013, 0x800000023126C530);
}

uint64_t sub_231205664()
{
  return 0x747065636E6F63;
}

uint64_t sub_23120567C()
{
  return 0x656C746974;
}

uint64_t sub_231205690()
{
  return 0x66676E696E61656DLL;
}

uint64_t sub_2312056B4()
{
  return 0x526E4965756C6176;
}

uint64_t sub_2312056D4()
{
  return 0x73694465756C6176;
}

uint64_t sub_2312056F4()
{
  return 0x7073694474696E75;
}

uint64_t sub_231205714()
{
  return 0x657079547473696CLL;
}

uint64_t sub_23120572C()
{
  return 0x6564724F7473696CLL;
}

uint64_t sub_231205748(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_231206430(0, &qword_255EB9930, MEMORY[0x24BEE3520]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = &v9[-v6];
  sub_231173410(a1, a1[3]);
  sub_2312063A8();
  sub_231264C60();
  v9[15] = 0;
  sub_23126292C();
  sub_231172048(&qword_255EB8828, (uint64_t (*)(uint64_t))MEMORY[0x24BE490F8], MEMORY[0x24BE49108]);
  sub_231264AF8();
  if (!v1)
  {
    type metadata accessor for UserDomainConceptFeedItemData();
    v9[14] = 1;
    sub_231178A30(0, (unint64_t *)&qword_2541534D0, &qword_2541531B0);
    sub_23120648C(&qword_255EB9938, MEMORY[0x24BDD2060]);
    sub_231264AF8();
    v9[13] = 2;
    sub_231264AC8();
    v9[12] = 3;
    sub_231261E40();
    sub_231172048(&qword_2541518F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_231264ABC();
    v9[11] = 4;
    sub_231178A30(0, &qword_2541534C0, (unint64_t *)&qword_2541531A0);
    sub_2311B2A90(&qword_255EB8AD8, MEMORY[0x24BDD2060]);
    sub_231264ABC();
    v9[10] = 5;
    sub_231264A98();
    v9[9] = 6;
    sub_231264A98();
    v9[8] = 7;
    sub_231264AB0();
    v9[7] = 8;
    sub_231264AA4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_231205AB0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char v40;
  uint64_t v41;
  char v42;
  char *v43;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;
  char v66;

  v46 = a2;
  sub_2311789C4();
  MEMORY[0x24BDAC7A8](v3);
  v47 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311787F4(0, (unint64_t *)&qword_254154938, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  MEMORY[0x24BDAC7A8](v5);
  v48 = (char *)&v45 - v6;
  sub_231178A30(0, (unint64_t *)&qword_2541534D0, &qword_2541531B0);
  v50 = *(_QWORD *)(v7 - 8);
  v51 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v45 - v8;
  v10 = sub_23126292C();
  v52 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231206430(0, &qword_255EB9918, MEMORY[0x24BEE33E0]);
  v54 = v13;
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v45 - v15;
  v56 = type metadata accessor for UserDomainConceptFeedItemData();
  MEMORY[0x24BDAC7A8](v56);
  v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a1[3];
  v55 = a1;
  sub_231173410(a1, v19);
  sub_2312063A8();
  v53 = v16;
  v20 = v57;
  sub_231264C54();
  v49 = v10;
  if (v20)
    return sub_231173434((uint64_t)v55);
  v21 = (uint64_t)v48;
  v22 = v14;
  v66 = 0;
  sub_231172048(&qword_255EB8818, (uint64_t (*)(uint64_t))MEMORY[0x24BE490F8], MEMORY[0x24BE49120]);
  sub_231264A80();
  (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v18, v12, v10);
  v65 = 1;
  sub_23120648C(&qword_255EB9928, MEMORY[0x24BDD2078]);
  v23 = v9;
  v24 = v51;
  sub_231264A80();
  v25 = v22;
  v26 = (int *)v56;
  (*(void (**)(char *, char *, uint64_t))(v50 + 32))(&v18[*(int *)(v56 + 20)], v23, v24);
  v64 = 2;
  v27 = sub_231264A50();
  v28 = (uint64_t *)&v18[v26[6]];
  *v28 = v27;
  v28[1] = v29;
  sub_231261E40();
  v63 = 3;
  sub_231172048(&qword_2541518F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  sub_231264A44();
  v30 = (uint64_t)v55;
  sub_2311A4AC8(v21, (uint64_t)&v18[v26[7]]);
  sub_231178A30(0, &qword_2541534C0, (unint64_t *)&qword_2541531A0);
  v62 = 4;
  sub_2311B2A90(&qword_255EB8AC8, MEMORY[0x24BDD2078]);
  v31 = (uint64_t)v47;
  sub_231264A44();
  sub_2312063EC(v31, (uint64_t)&v18[v26[8]]);
  v61 = 5;
  v32 = sub_231264A20();
  v33 = (uint64_t *)&v18[v26[9]];
  *v33 = v32;
  v33[1] = v34;
  v60 = 6;
  v35 = sub_231264A20();
  v36 = (uint64_t *)&v18[v26[10]];
  *v36 = v35;
  v36[1] = v37;
  v59 = 7;
  v38 = sub_231264A38();
  v39 = &v18[v26[11]];
  *(_QWORD *)v39 = v38;
  v39[8] = v40 & 1;
  v58 = 8;
  v41 = sub_231264A2C();
  LOBYTE(v31) = v42;
  (*(void (**)(char *, uint64_t))(v25 + 8))(v53, v54);
  v43 = &v18[v26[12]];
  *(_QWORD *)v43 = v41;
  v43[8] = v31 & 1;
  sub_231178454((uint64_t)v18, v46, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptFeedItemData);
  sub_231173434(v30);
  return sub_231178498((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for UserDomainConceptFeedItemData);
}

uint64_t sub_2312061A0()
{
  unsigned __int8 *v0;

  return sub_23120562C(*v0);
}

uint64_t sub_2312061A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_231207038(a1, a2);
  *a3 = result;
  return result;
}

void sub_2312061CC(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_2312061D8()
{
  sub_2312063A8();
  return sub_231264C6C();
}

uint64_t sub_231206200()
{
  sub_2312063A8();
  return sub_231264C78();
}

uint64_t sub_231206228@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_231205AB0(a1, a2);
}

uint64_t sub_23120623C(_QWORD *a1)
{
  return sub_231205748(a1);
}

uint64_t sub_231206250()
{
  sub_231264C00();
  sub_2312051D0();
  return sub_231264C3C();
}

uint64_t sub_231206290()
{
  sub_231264C00();
  sub_2312051D0();
  return sub_231264C3C();
}

uint64_t sub_2312062C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2311A4BBC(v2 + *(int *)(a1 + 28), a2);
}

uint64_t sub_2312062D8()
{
  sub_231172048(&qword_255EB96C0, (uint64_t (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData, (uint64_t)&unk_231269840);
  return sub_2312630DC();
}

uint64_t sub_231206328()
{
  sub_231172048(&qword_255EB96C0, (uint64_t (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData, (uint64_t)&unk_231269840);
  return sub_2312631C0();
}

uint64_t sub_23120637C()
{
  return sub_231172048(&qword_255EB9910, (uint64_t (*)(uint64_t))type metadata accessor for UserDomainConceptFeedItemData, (uint64_t)&unk_2312697C8);
}

unint64_t sub_2312063A8()
{
  unint64_t result;

  result = qword_255EB9920;
  if (!qword_255EB9920)
  {
    result = MEMORY[0x2348D8544](&unk_2312699BC, &type metadata for UserDomainConceptFeedItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB9920);
  }
  return result;
}

uint64_t sub_2312063EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2311789C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_231206430(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_2312063A8();
    v7 = a3(a1, &type metadata for UserDomainConceptFeedItemData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_23120648C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_231178A30(255, (unint64_t *)&qword_2541534D0, &qword_2541531B0);
    result = MEMORY[0x2348D8544](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2312064E4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_255EB9940;
  if (!qword_255EB9940)
  {
    sub_231178A30(255, (unint64_t *)&qword_2541534D0, &qword_2541531B0);
    v2 = v1;
    v3 = sub_2311B0F6C(&qword_255EB9948, &qword_2541531B0, 0x24BDD3D10, MEMORY[0x24BEE5BD8]);
    result = MEMORY[0x2348D8544](MEMORY[0x24BDD2068], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_255EB9940);
  }
  return result;
}

uint64_t sub_231206584(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  int *v36;
  char v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v45)(void);
  void (*v46)(uint64_t);
  int v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  void (*v51)(uint64_t);
  void (*v52)();
  char *v53;
  void (*v54)(uint64_t);
  char v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  _QWORD *v81;
  char v82;
  _QWORD *v83;
  int v84;
  uint64_t v85;
  _QWORD *v86;
  char v87;
  _QWORD *v88;
  char v89;
  int *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;

  sub_231178A30(0, &qword_2541534C0, (unint64_t *)&qword_2541531A0);
  v5 = v4;
  v101 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v96 = (char *)&v90 - v6;
  sub_2311B107C();
  v99 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311789C4();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v97 = (uint64_t)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v104 = (uint64_t)&v90 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v100 = (uint64_t)&v90 - v15;
  v16 = sub_231261E40();
  v17 = (void (*)(uint64_t))MEMORY[0x24BDCE900];
  v102 = *(_QWORD *)(v16 - 8);
  v103 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v98 = (char *)&v90 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311A5278();
  v20 = v19;
  MEMORY[0x24BDAC7A8](v19);
  v106 = (uint64_t)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311787F4(0, (unint64_t *)&qword_254154938, v17);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v90 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)&v90 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v105 = (uint64_t)&v90 - v29;
  sub_23126292C();
  sub_231172048(&qword_255EB8838, (uint64_t (*)(uint64_t))MEMORY[0x24BE490F8], MEMORY[0x24BE49118]);
  sub_2312641D4();
  sub_2312641D4();
  if (v108 != v107)
    return 0;
  v94 = v5;
  v95 = v25;
  v93 = v9;
  v30 = type metadata accessor for UserDomainConceptFeedItemData();
  sub_231178AD0(0, &qword_2541531B0);
  sub_2311B0F6C(&qword_255EB9950, &qword_2541531B0, 0x24BDD3D10, MEMORY[0x24BEE5BE0]);
  if ((sub_231263F94() & 1) == 0)
    return 0;
  v31 = *(int *)(v30 + 24);
  v32 = *(_QWORD *)(a1 + v31);
  v33 = *(_QWORD *)(a1 + v31 + 8);
  v34 = (_QWORD *)(a2 + v31);
  v35 = a1;
  v36 = (int *)v30;
  if (v32 != *v34 || v33 != v34[1])
  {
    v37 = sub_231264B58();
    result = 0;
    if ((v37 & 1) == 0)
      return result;
  }
  v39 = v105;
  sub_2311A4BBC(a1 + *(int *)(v30 + 28), v105);
  sub_2311A4BBC(a2 + *(int *)(v30 + 28), (uint64_t)v28);
  v40 = v106;
  v41 = v106 + *(int *)(v20 + 48);
  sub_2311A4BBC(v39, v106);
  sub_2311A4BBC((uint64_t)v28, v41);
  v43 = v102;
  v42 = v103;
  v44 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v102 + 48);
  if (v44(v40, 1, v103) == 1)
  {
    v91 = a2;
    v92 = v35;
    v45 = MEMORY[0x24BDCE900];
    sub_2311786C0((uint64_t)v28, (unint64_t *)&qword_254154938, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    v46 = (void (*)(uint64_t))v45;
    v40 = v106;
    sub_2311786C0(v39, (unint64_t *)&qword_254154938, v46);
    v47 = v44(v41, 1, v42);
    v48 = v104;
    if (v47 == 1)
    {
      sub_2311786C0(v40, (unint64_t *)&qword_254154938, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
      goto LABEL_13;
    }
LABEL_11:
    v52 = sub_2311A5278;
LABEL_19:
    sub_231178498(v40, (uint64_t (*)(_QWORD))v52);
    return 0;
  }
  v90 = v36;
  v49 = (uint64_t)v95;
  sub_2311A4BBC(v40, (uint64_t)v95);
  v50 = v44(v41, 1, v42);
  v48 = v104;
  if (v50 == 1)
  {
    v51 = (void (*)(uint64_t))MEMORY[0x24BDCE900];
    sub_2311786C0((uint64_t)v28, (unint64_t *)&qword_254154938, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    sub_2311786C0(v105, (unint64_t *)&qword_254154938, v51);
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v49, v42);
    goto LABEL_11;
  }
  v91 = a2;
  v92 = v35;
  v53 = v98;
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v98, v41, v42);
  v54 = (void (*)(uint64_t))MEMORY[0x24BDCE900];
  sub_231172048(&qword_255EB86F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
  v55 = sub_231264060();
  v56 = *(void (**)(char *, uint64_t))(v43 + 8);
  v56(v53, v42);
  sub_2311786C0((uint64_t)v28, (unint64_t *)&qword_254154938, v54);
  sub_2311786C0(v105, (unint64_t *)&qword_254154938, v54);
  v56((char *)v49, v42);
  sub_2311786C0(v40, (unint64_t *)&qword_254154938, v54);
  v36 = v90;
  if ((v55 & 1) == 0)
    return 0;
LABEL_13:
  v57 = v100;
  sub_231178454(v92 + v36[8], v100, (uint64_t (*)(_QWORD))sub_2311789C4);
  v58 = v91;
  sub_231178454(v91 + v36[8], v48, (uint64_t (*)(_QWORD))sub_2311789C4);
  v40 = (uint64_t)v93;
  v59 = (uint64_t)&v93[*(int *)(v99 + 48)];
  sub_231178454(v57, (uint64_t)v93, (uint64_t (*)(_QWORD))sub_2311789C4);
  sub_231178454(v48, v59, (uint64_t (*)(_QWORD))sub_2311789C4);
  v60 = v101;
  v61 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v101 + 48);
  v62 = v94;
  if (v61(v40, 1, v94) == 1)
  {
    sub_231178498(v48, (uint64_t (*)(_QWORD))sub_2311789C4);
    sub_231178498(v57, (uint64_t (*)(_QWORD))sub_2311789C4);
    if (v61(v59, 1, v62) == 1)
    {
      sub_231178498(v40, (uint64_t (*)(_QWORD))sub_2311789C4);
      goto LABEL_23;
    }
    goto LABEL_18;
  }
  v63 = v97;
  sub_231178454(v40, v97, (uint64_t (*)(_QWORD))sub_2311789C4);
  if (v61(v59, 1, v62) == 1)
  {
    sub_231178498(v104, (uint64_t (*)(_QWORD))sub_2311789C4);
    sub_231178498(v57, (uint64_t (*)(_QWORD))sub_2311789C4);
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v63, v62);
LABEL_18:
    v52 = sub_2311B107C;
    goto LABEL_19;
  }
  v64 = v57;
  v65 = v96;
  (*(void (**)(char *, uint64_t, uint64_t))(v60 + 32))(v96, v59, v62);
  sub_2311B0FD4((unint64_t *)&qword_255EB8908, &qword_255EB8910, MEMORY[0x24BEE5BE0], MEMORY[0x24BDD2070]);
  LODWORD(v106) = sub_231264060();
  v66 = *(void (**)(char *, uint64_t))(v60 + 8);
  v66(v65, v62);
  sub_231178498(v104, (uint64_t (*)(_QWORD))sub_2311789C4);
  sub_231178498(v64, (uint64_t (*)(_QWORD))sub_2311789C4);
  v66((char *)v63, v62);
  sub_231178498(v40, (uint64_t (*)(_QWORD))sub_2311789C4);
  if ((v106 & 1) == 0)
    return 0;
LABEL_23:
  v67 = v36[9];
  v68 = v92;
  v69 = (_QWORD *)(v92 + v67);
  v70 = *(_QWORD *)(v92 + v67 + 8);
  v71 = (_QWORD *)(v58 + v67);
  v72 = v71[1];
  if (v70)
  {
    if (!v72)
      return 0;
    if (*v69 != *v71 || v70 != v72)
    {
      v73 = sub_231264B58();
      result = 0;
      if ((v73 & 1) == 0)
        return result;
    }
  }
  else if (v72)
  {
    return 0;
  }
  v74 = v36[10];
  v75 = (_QWORD *)(v68 + v74);
  v76 = *(_QWORD *)(v68 + v74 + 8);
  v77 = (_QWORD *)(v58 + v74);
  v78 = v77[1];
  if (!v76)
  {
    if (v78)
      return 0;
LABEL_37:
    v80 = v36[11];
    v81 = (_QWORD *)(v68 + v80);
    v82 = *(_BYTE *)(v68 + v80 + 8);
    v83 = (_QWORD *)(v58 + v80);
    v84 = *(unsigned __int8 *)(v58 + v80 + 8);
    if ((v82 & 1) != 0)
    {
      if (v84)
        goto LABEL_43;
    }
    else
    {
      if (*v81 != *v83)
        LOBYTE(v84) = 1;
      if ((v84 & 1) == 0)
      {
LABEL_43:
        v85 = v36[12];
        v86 = (_QWORD *)(v68 + v85);
        v87 = *(_BYTE *)(v68 + v85 + 8);
        v88 = (_QWORD *)(v58 + v85);
        v89 = *(_BYTE *)(v58 + v85 + 8);
        if ((v87 & 1) != 0)
        {
          if ((v89 & 1) != 0)
            return 1;
        }
        else
        {
          if (*v86 != *v88)
            v89 = 1;
          if ((v89 & 1) == 0)
            return 1;
        }
      }
    }
    return 0;
  }
  if (!v78)
    return 0;
  if (*v75 == *v77 && v76 == v78)
    goto LABEL_37;
  v79 = sub_231264B58();
  result = 0;
  if ((v79 & 1) != 0)
    goto LABEL_37;
  return result;
}

uint64_t getEnumTagSinglePayload for UserDomainConceptFeedItemData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for UserDomainConceptFeedItemData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_231206EE0 + 4 * byte_23126974E[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_231206F14 + 4 * byte_231269749[v4]))();
}

uint64_t sub_231206F14(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_231206F1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x231206F24);
  return result;
}

uint64_t sub_231206F30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x231206F38);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_231206F3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_231206F44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UserDomainConceptFeedItemData.CodingKeys()
{
  return &type metadata for UserDomainConceptFeedItemData.CodingKeys;
}

unint64_t sub_231206F64()
{
  unint64_t result;

  result = qword_255EB9958;
  if (!qword_255EB9958)
  {
    result = MEMORY[0x2348D8544](&unk_231269994, &type metadata for UserDomainConceptFeedItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB9958);
  }
  return result;
}

unint64_t sub_231206FAC()
{
  unint64_t result;

  result = qword_255EB9960;
  if (!qword_255EB9960)
  {
    result = MEMORY[0x2348D8544](&unk_231269904, &type metadata for UserDomainConceptFeedItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB9960);
  }
  return result;
}

unint64_t sub_231206FF4()
{
  unint64_t result;

  result = qword_255EB9968;
  if (!qword_255EB9968)
  {
    result = MEMORY[0x2348D8544](&unk_23126992C, &type metadata for UserDomainConceptFeedItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255EB9968);
  }
  return result;
}

uint64_t sub_231207038(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000013 && a2 == 0x800000023126C530 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x747065636E6F63 && a2 == 0xE700000000000000 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x66676E696E61656DLL && a2 == 0xEE00657461446C75 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x526E4965756C6176 && a2 == 0xEC00000065676E61 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x73694465756C6176 && a2 == 0xEC00000079616C70 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7073694474696E75 && a2 == 0xEB0000000079616CLL || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x657079547473696CLL && a2 == 0xE800000000000000 || (sub_231264B58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6564724F7473696CLL && a2 == 0xE900000000000072)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v5 = sub_231264B58();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

ValueMetadata *type metadata accessor for NewLabRecordsFeedItemViewData()
{
  return &type metadata for NewLabRecordsFeedItemViewData;
}

uint64_t sub_231207460(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_231263664();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_23120749C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_231263664();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_2312074D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_231263664();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_231207514(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_231263664();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_231207558(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_231263664();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_23120759C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_231263664();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_2312075E0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2312075EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_231263664();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_231207628()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_231207634(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_231263664();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for RecordKindFeedItemViewData()
{
  uint64_t result;

  result = qword_255EB99C8;
  if (!qword_255EB99C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2312076B0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_231263664();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_231207718@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_231263664();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

unint64_t sub_231207750(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  __CFString *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v37;
  uint64_t v38;

  v4 = sub_231261CA8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v37 - v9;
  v37 = a1;
  v38 = a2;
  sub_231261C84();
  sub_231261C9C();
  v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v10, v4);
  sub_231188564();
  v12 = sub_231264768();
  v11(v8, v4);
  v37 = v12;
  sub_2311A5388();
  sub_231171E78();
  v13 = sub_231264024();
  v15 = v14;
  swift_bridgeObjectRelease();
  v16 = objc_allocWithZone(MEMORY[0x24BDD16A8]);
  swift_bridgeObjectRetain();
  v17 = (void *)sub_23126406C();
  swift_bridgeObjectRelease();
  v18 = (__CFString *)objc_msgSend(v16, sel_initWithString_, v17);

  CFStringTransform(v18, 0, (CFStringRef)*MEMORY[0x24BDBD670], 0);
  CFStringTransform(v18, 0, (CFStringRef)*MEMORY[0x24BDBD668], 0);
  v37 = v13;
  v38 = v15;
  sub_2312641B0();
  v19 = sub_2312640C0();
  v21 = v20;
  swift_bridgeObjectRelease();
  v22 = HIBYTE(v21) & 0xF;
  if ((v21 & 0x2000000000000000) == 0)
    v22 = v19 & 0xFFFFFFFFFFFFLL;
  if (!v22)
  {

LABEL_7:
    swift_bridgeObjectRelease();
    return 0xD000000000000012;
  }
  v23 = sub_231207A3C(1);
  v25 = v24;
  v27 = v26;
  v29 = v28;
  swift_bridgeObjectRelease();
  v30 = MEMORY[0x2348D74DC](v23, v25, v27, v29);
  v32 = v31;
  swift_bridgeObjectRelease();
  v37 = v30;
  v38 = v32;
  sub_231264144();
  v33 = v37;
  swift_bridgeObjectRetain();
  v34 = (void *)sub_23126406C();
  swift_bridgeObjectRelease();
  v35 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v34);

  if (!v35)
    goto LABEL_7;
  return v33;
}

uint64_t sub_231207A3C(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_23126412C();
    return sub_2312641BC();
  }
  return result;
}

uint64_t sub_231207AC4()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;

  sub_231263AE4();
  v1 = *(void **)(v0 + 16);
  v2 = objc_msgSend(v1, sel_healthStore);
  v3 = (void *)sub_231263AD8();
  sub_231263A84();
  v4 = objc_msgSend(v1, sel_healthStore);
  sub_231263A48();

  v5 = v1;
  swift_retain();
  v6 = objc_msgSend(v5, sel_healthStore);
  sub_231262E90();
  swift_allocObject();
  sub_231262E78();

  swift_allocObject();
  swift_weakInit();
  swift_retain();
  v7 = objc_msgSend(v5, sel_healthStore);
  v8 = objc_msgSend((id)objc_opt_self(), sel_medicalRecordTypes);
  sub_231207DD4();
  sub_2312641F8();

  v9 = sub_2312643B4();
  swift_release_n();
  swift_release();

  swift_release_n();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_231207C8C(void *a1)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    sub_231207E10(a1);
    sub_231263D30();
    return swift_release();
  }
  return result;
}

uint64_t sub_231207D20()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
  {
    swift_retain();
    sub_231262A64();
    swift_release();
  }

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NewRecordsUpdateObserver()
{
  return objc_opt_self();
}

uint64_t sub_231207DA4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_231207DC8(void *a1)
{
  return sub_231207C8C(a1);
}

unint64_t sub_231207DD4()
{
  unint64_t result;

  result = qword_2541556C0;
  if (!qword_2541556C0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2541556C0);
  }
  return result;
}

id sub_231207E10(id a1)
{
  return a1;
}

void *sub_231207E1C()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 32);
  v2 = v1;
  return v1;
}

void *sub_231207E40()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 40);
  v2 = v1;
  return v1;
}

uint64_t sub_231207E64()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t sub_231207E6C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 49);
}

double sub_231207E74()
{
  double result;

  result = 0.0;
  xmmword_255EC20E0 = xmmword_231269AC0;
  *(_OWORD *)&qword_255EC20F0 = xmmword_231269AD0;
  return result;
}

void sub_231207E94()
{
  qword_255EC2100 = 0x4032000000000000;
}

void sub_231207EA4()
{
  qword_255EC2108 = 0x4010000000000000;
}

id sub_231207EB4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = qword_255EB9A00;
  v2 = *(void **)(v0 + qword_255EB9A00);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_255EB9A00);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD978]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v4, sel_setAxis_, 1);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_231207F4C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = qword_255EB9A08;
  v2 = *(void **)(v0 + qword_255EB9A08);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_255EB9A08);
  }
  else
  {
    v4 = sub_231207FA8();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_231207FA8()
{
  id v0;
  void *v1;
  void *v2;
  id v3;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_231178AD0(0, &qword_2541548C0);
  v1 = (void *)sub_23126460C();
  objc_msgSend(v0, sel_setFont_, v1);

  v2 = (void *)sub_23126406C();
  objc_msgSend(v0, sel_setText_, v2);

  v3 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v0, sel_setTextColor_, v3);

  return v0;
}

uint64_t sub_2312080BC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  id v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  void (*v19)(char *, _QWORD, uint64_t);
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  void (*v36)(char *, _QWORD, uint64_t);
  id v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  _QWORD v42[2];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  id v47;
  uint64_t v48;

  v2 = v1;
  v4 = sub_2312627C4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = qword_255EC2118;
  result = sub_2311ACB24(a1, *(_QWORD **)(v2 + qword_255EC2118));
  if ((result & 1) != 0)
    return result;
  v10 = sub_231207EB4();
  v11 = objc_msgSend(v10, sel_arrangedSubviews);

  sub_231178AD0(0, (unint64_t *)&qword_255EB8338);
  v12 = sub_2312641F8();

  v45 = v4;
  v46 = v7;
  v44 = v8;
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_2312649A8();
    v13 = result;
    if (result)
      goto LABEL_4;
  }
  else
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v13)
    {
LABEL_4:
      if (v13 < 1)
      {
        __break(1u);
        return result;
      }
      v14 = 0;
      do
      {
        if ((v12 & 0xC000000000000001) != 0)
          v15 = (id)MEMORY[0x2348D7CE0](v14, v12);
        else
          v15 = *(id *)(v12 + 8 * v14 + 32);
        v16 = v15;
        ++v14;
        v17 = sub_231207EB4();
        objc_msgSend(v17, sel_removeArrangedSubview_, v16);

        objc_msgSend(v16, sel_removeFromSuperview);
      }
      while (v13 != v14);
    }
  }
  swift_bridgeObjectRelease_n();
  v18 = sub_231207F4C();
  v19 = *(void (**)(char *, _QWORD, uint64_t))(v5 + 104);
  v21 = v45;
  v20 = v46;
  v19(v46, *MEMORY[0x24BE48F68], v45);
  v42[1] = sub_2312627E8();
  swift_allocObject();
  sub_2312627D0();
  v22 = v44;
  sub_2312627DC();
  swift_release();
  v23 = (void *)sub_23126406C();
  swift_bridgeObjectRelease();
  objc_msgSend(v18, sel_setText_, v23);

  v24 = *(_QWORD *)(v2 + v22);
  v25 = *(_QWORD *)(v24 + 16);
  if (v25 >= 0xA)
    v26 = 10;
  else
    v26 = *(_QWORD *)(v24 + 16);
  v43 = v26;
  if (v26)
  {
    v42[0] = v19;
    v48 = sub_231178AD0(0, &qword_2541548C0);
    v47 = (id)objc_opt_self();
    swift_bridgeObjectRetain_n();
    v27 = 0;
    do
    {
      v28 = v24;
      v29 = objc_allocWithZone(MEMORY[0x24BEBD708]);
      swift_bridgeObjectRetain();
      v30 = objc_msgSend(v29, sel_init);
      objc_msgSend(v30, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
      v31 = (void *)sub_23126460C();
      objc_msgSend(v30, sel_setFont_, v31);

      v32 = (void *)sub_23126406C();
      objc_msgSend(v30, sel_setText_, v32);

      v33 = objc_msgSend(v47, sel_secondaryLabelColor);
      objc_msgSend(v30, sel_setTextColor_, v33);

      v34 = sub_231207EB4();
      objc_msgSend(v34, sel_addArrangedSubview_, v30);
      swift_bridgeObjectRelease();

      v24 = v28;
      v27 += 16;
    }
    while (16 * v26 != v27);
    swift_bridgeObjectRelease();
    v35 = v45;
    v25 = *(_QWORD *)(*(_QWORD *)(v2 + v44) + 16);
    v20 = v46;
    v36 = (void (*)(char *, _QWORD, uint64_t))v42[0];
  }
  else
  {
    swift_bridgeObjectRetain();
    v35 = v21;
    v36 = v19;
  }
  if ((uint64_t)v25 > v43)
  {
    v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
    objc_msgSend(v37, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    sub_231178AD0(0, &qword_2541548C0);
    v38 = (void *)sub_23126460C();
    objc_msgSend(v37, sel_setFont_, v38);

    v36(v20, *MEMORY[0x24BE48F60], v35);
    swift_allocObject();
    sub_2312627D0();
    sub_2312627DC();
    swift_release();
    v39 = (void *)sub_23126406C();
    swift_bridgeObjectRelease();
    objc_msgSend(v37, sel_setText_, v39);

    v40 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    objc_msgSend(v37, sel_setTextColor_, v40);

    v41 = sub_231207EB4();
    objc_msgSend(v41, sel_addArrangedSubview_, v37);

  }
  return swift_bridgeObjectRelease();
}

void sub_23120867C(void *a1)
{
  id v1;
  objc_super v2;

  v2.receiver = a1;
  v2.super_class = (Class)type metadata accessor for SharedConceptComboTileViewController();
  v1 = v2.receiver;
  objc_msgSendSuper2(&v2, sel_viewDidLoad);
  sub_2312086E0();
  sub_2312087D0();
  sub_231208E50();

}

void sub_2312086E0()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v1 = objc_msgSend(v0, sel_view);
  if (!v1)
  {
    __break(1u);
    goto LABEL_6;
  }
  v2 = v1;
  objc_msgSend(v1, sel_addSubview_, *(_QWORD *)&v0[qword_255EC2110]);

  v3 = objc_msgSend(v0, sel_view);
  if (!v3)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v4 = v3;
  v5 = sub_231207F4C();
  objc_msgSend(v4, sel_addSubview_, v5);

  v6 = objc_msgSend(v0, sel_view);
  if (v6)
  {
    v7 = v6;
    v8 = sub_231207EB4();
    objc_msgSend(v7, sel_addSubview_, v8);

    return;
  }
LABEL_7:
  __break(1u);
}

void sub_2312087D0()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  void *v54;
  void *v55;
  id v56;
  id v57;
  id v58;

  sub_231171FD8(0, (unint64_t *)&qword_254154688, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_231268690;
  v2 = *(void **)&v0[qword_255EC2110];
  v3 = objc_msgSend(v2, sel_leadingAnchor);
  v4 = objc_msgSend(v0, sel_view);
  if (!v4)
  {
    __break(1u);
    goto LABEL_17;
  }
  v5 = v4;
  v6 = objc_msgSend(v4, sel_leadingAnchor);

  v7 = objc_msgSend(v3, sel_constraintEqualToAnchor_, v6);
  *(_QWORD *)(v1 + 32) = v7;
  v8 = objc_msgSend(v2, sel_trailingAnchor);
  v9 = objc_msgSend(v0, sel_view);
  if (!v9)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v10 = v9;
  v11 = objc_msgSend(v9, sel_trailingAnchor);

  v12 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v11);
  *(_QWORD *)(v1 + 40) = v12;
  v13 = objc_msgSend(v2, sel_topAnchor);
  v14 = objc_msgSend(v0, sel_view);
  if (!v14)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v15 = v14;
  v16 = objc_msgSend(v14, sel_topAnchor);

  v17 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v16);
  *(_QWORD *)(v1 + 48) = v17;
  v18 = sub_231207F4C();
  v19 = objc_msgSend(v18, sel_leadingAnchor);

  v20 = objc_msgSend(v0, sel_view);
  if (!v20)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v21 = v20;
  v22 = objc_msgSend(v20, sel_leadingAnchor);

  if (qword_255EB7820 != -1)
    swift_once();
  v23 = objc_msgSend(v19, sel_constraintEqualToAnchor_constant_, v22, *((double *)&xmmword_255EC20E0 + 1));

  *(_QWORD *)(v1 + 56) = v23;
  v24 = sub_231207F4C();
  v25 = objc_msgSend(v24, sel_trailingAnchor);

  v26 = objc_msgSend(v0, sel_view);
  if (!v26)
    goto LABEL_20;
  v27 = v26;
  v28 = objc_msgSend(v26, sel_trailingAnchor);

  v29 = objc_msgSend(v25, sel_constraintEqualToAnchor_constant_, v28, *(double *)&qword_255EC20F8);
  *(_QWORD *)(v1 + 64) = v29;
  v30 = sub_231207F4C();
  v31 = objc_msgSend(v30, sel_topAnchor);

  v32 = objc_msgSend(v2, sel_bottomAnchor);
  if (qword_255EB7828 != -1)
    swift_once();
  v33 = objc_msgSend(v31, sel_constraintEqualToAnchor_constant_, v32, *(double *)&qword_255EC2100);

  *(_QWORD *)(v1 + 72) = v33;
  v34 = sub_231207EB4();
  v35 = objc_msgSend(v34, sel_leadingAnchor);

  v36 = objc_msgSend(v0, sel_view);
  if (!v36)
    goto LABEL_21;
  v37 = v36;
  v38 = objc_msgSend(v36, sel_leadingAnchor);

  v39 = objc_msgSend(v35, sel_constraintEqualToAnchor_constant_, v38, *((double *)&xmmword_255EC20E0 + 1));
  *(_QWORD *)(v1 + 80) = v39;
  v40 = sub_231207EB4();
  v41 = objc_msgSend(v40, sel_trailingAnchor);

  v42 = objc_msgSend(v0, sel_view);
  if (!v42)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v43 = v42;
  v44 = objc_msgSend(v42, sel_trailingAnchor);

  v45 = objc_msgSend(v41, sel_constraintEqualToAnchor_constant_, v44, *(double *)&qword_255EC20F8);
  *(_QWORD *)(v1 + 88) = v45;
  v46 = sub_231207EB4();
  v47 = objc_msgSend(v46, sel_topAnchor);

  v48 = sub_231207F4C();
  v49 = objc_msgSend(v48, sel_bottomAnchor);

  if (qword_255EB7830 != -1)
    swift_once();
  v50 = objc_msgSend(v47, sel_constraintEqualToAnchor_constant_, v49, *(double *)&qword_255EC2108);

  *(_QWORD *)(v1 + 96) = v50;
  v51 = sub_231207EB4();
  v52 = objc_msgSend(v51, sel_bottomAnchor);

  v53 = objc_msgSend(v0, sel_view);
  if (v53)
  {
    v54 = v53;
    v55 = (void *)objc_opt_self();
    v56 = objc_msgSend(v54, sel_bottomAnchor);

    v57 = objc_msgSend(v52, sel_constraintEqualToAnchor_constant_, v56, -*(double *)&qword_255EC20F0);
    *(_QWORD *)(v1 + 104) = v57;
    sub_231264210();
    sub_231178AD0(0, &qword_255EBA000);
    v58 = (id)sub_2312641EC();
    swift_bridgeObjectRelease();
    objc_msgSend(v55, sel_activateConstraints_, v58);

    return;
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_231208E50()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t result;
  void *v20;
  uint64_t v21;
  ValueMetadata *v22;
  _QWORD *v23;
  void (**Description)(char *);
  uint64_t v25;
  char *v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void (*v34)(uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  void *v44;
  void *v45;
  uint64_t v46;
  id v47;
  id v48;
  _QWORD *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[3];
  ValueMetadata *v59;
  unint64_t v60;

  v1 = v0;
  v2 = sub_231262B60();
  v52 = *(_QWORD *)(v2 - 8);
  v53 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v51 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311787F4(0, (unint64_t *)&qword_254151918, (void (*)(uint64_t))MEMORY[0x24BDCEEA8]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v50 - v5;
  v7 = sub_2312627B8();
  v56 = *(_QWORD *)(v7 - 8);
  v57 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v55 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2311787F4(0, &qword_255EB9BD8, (void (*)(uint64_t))type metadata accessor for SharedConceptComboFeedItemData);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v50 - v10;
  v12 = type metadata accessor for SharedConceptComboFeedItemData(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v17 = (uint64_t)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x60);
  swift_beginAccess();
  sub_231178A84(v17, (uint64_t)v11, &qword_255EB9BD8, (void (*)(uint64_t))type metadata accessor for SharedConceptComboFeedItemData);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v54 = v12;
  if (v18(v11, 1, v12) == 1)
    return sub_2311786C0((uint64_t)v11, &qword_255EB9BD8, (void (*)(uint64_t))type metadata accessor for SharedConceptComboFeedItemData);
  sub_2312099E8((uint64_t)v11, (uint64_t)v15);
  sub_2312628A8();
  v20 = (void *)sub_231262884();
  v21 = (uint64_t)v1 + *(_QWORD *)((*v16 & *v1) + 0x70);
  swift_beginAccess();
  result = sub_231178A84(v21, (uint64_t)v58, (unint64_t *)&qword_2541548B0, (void (*)(uint64_t))sub_23117DAE8);
  v22 = v59;
  if (v59)
  {
    v23 = sub_231173410(v58, (uint64_t)v59);
    Description = (void (**)(char *))v22[-1].Description;
    MEMORY[0x24BDAC7A8](v23);
    v26 = (char *)&v50 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
    Description[2](v26);
    v27 = (void *)sub_23126376C();
    ((void (*)(char *, ValueMetadata *))Description[1])(v26, v22);
    v28 = (void *)sub_231262890();

    sub_231173434((uint64_t)v58);
    v29 = objc_msgSend(v28, sel_dateCache);

    v30 = *MEMORY[0x24BE490B8];
    v31 = sub_23126292C();
    v32 = v55;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v55, v30, v31);
    (*(void (**)(char *, _QWORD, uint64_t))(v56 + 104))(v32, *MEMORY[0x24BE48E88], v57);
    v33 = sub_231261EAC();
    v34 = (void (*)(uint64_t))MEMORY[0x24BDCEEA8];
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v6, 1, 1, v33);
    v35 = v51;
    sub_231262B54();
    v50 = sub_2312640E4();
    v37 = v36;
    (*(void (**)(char *, uint64_t))(v52 + 8))(v35, v53);
    sub_2311786C0((uint64_t)v6, (unint64_t *)&qword_254151918, v34);
    v38 = (void *)sub_231261DE0();
    v39 = (id)HKMostRecentSampleEndDateText();

    if (v39)
    {
      v40 = sub_23126409C();
      v42 = v41;

    }
    else
    {
      v40 = 0;
      v42 = 0;
    }
    v43 = v55;
    v44 = (void *)sub_23126271C();
    v45 = (void *)sub_231262788();
    v59 = &type metadata for TitleViewData;
    v60 = sub_231209A2C();
    v46 = swift_allocObject();
    v58[0] = v46;
    *(_QWORD *)(v46 + 16) = v50;
    *(_QWORD *)(v46 + 24) = v37;
    *(_QWORD *)(v46 + 32) = v40;
    *(_QWORD *)(v46 + 40) = v42;
    *(_QWORD *)(v46 + 48) = v44;
    *(_QWORD *)(v46 + 56) = v45;
    *(_WORD *)(v46 + 64) = 0;
    v47 = v45;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v48 = v44;
    sub_231262E00();
    v49 = *(_QWORD **)((char *)v1 + qword_255EC2118);
    *(_QWORD *)((char *)v1 + qword_255EC2118) = *(_QWORD *)&v15[*(int *)(v54 + 20)];
    swift_bridgeObjectRetain();
    sub_2312080BC(v49);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v43, v57);
    return sub_231209AAC((uint64_t)v15);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2312093B4(uint64_t a1)
{
  _QWORD *v1;
  void *v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  objc_class *v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  objc_super v25;
  _QWORD v26[3];
  uint64_t v27;

  v2 = v1;
  v4 = (uint64_t)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x70);
  swift_beginAccess();
  result = sub_231178A84(v4, (uint64_t)v26, (unint64_t *)&qword_2541548B0, (void (*)(uint64_t))sub_23117DAE8);
  v6 = v27;
  if (v27)
  {
    v7 = sub_231173410(v26, v27);
    v8 = *(_QWORD *)(v6 - 8);
    MEMORY[0x24BDAC7A8](v7);
    v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v8 + 16))(v10);
    v11 = (void *)sub_23126376C();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v6);
    v12 = (void *)sub_2312643A8();

    v13 = (objc_class *)type metadata accessor for LabListViewController();
    v14 = (char *)objc_allocWithZone(v13);
    *(_QWORD *)&v14[qword_255EBA6C0] = v12;
    v15 = objc_allocWithZone(MEMORY[0x24BEBD488]);
    v16 = v12;
    v17 = objc_msgSend(v15, sel_init);
    v25.receiver = v14;
    v25.super_class = v13;
    v18 = objc_msgSendSuper2(&v25, sel_initWithCollectionViewLayout_, v17);

    sub_231173434((uint64_t)v26);
    sub_2311D7930(a1, (uint64_t)v26);
    v19 = v27;
    if (v27)
    {
      v20 = sub_231173410(v26, v27);
      v21 = *(_QWORD *)(v19 - 8);
      MEMORY[0x24BDAC7A8](v20);
      v23 = (char *)&v25 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v21 + 16))(v23);
      v24 = sub_231264B40();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v19);
      sub_231173434((uint64_t)v26);
    }
    else
    {
      v24 = 0;
    }
    objc_msgSend(v2, sel_showViewController_sender_, v18, v24);

    return swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_23120960C(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  uint64_t v6;
  id v7;
  char *v8;
  void *v9;
  id v10;
  objc_super v12;

  v6 = qword_255EC2110;
  v7 = objc_allocWithZone((Class)sub_231262E0C());
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v8[qword_255EB9A00] = 0;
  *(_QWORD *)&v8[qword_255EB9A08] = 0;
  *(_QWORD *)&v8[qword_255EC2118] = MEMORY[0x24BEE4AF8];

  if (a2)
  {
    v9 = (void *)sub_23126406C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = 0;
  }
  v12.receiver = v8;
  v12.super_class = (Class)type metadata accessor for SharedConceptComboTileViewController();
  v10 = objc_msgSendSuper2(&v12, sel_initWithNibName_bundle_, v9, a3);

  return v10;
}

id sub_23120971C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  if (a3)
  {
    v5 = sub_23126409C();
    v7 = v6;
  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  v8 = a4;
  return sub_23120960C(v5, v7, a4);
}

id sub_231209778(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  id v6;
  objc_super v8;

  v3 = qword_255EC2110;
  v4 = objc_allocWithZone((Class)sub_231262E0C());
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v5[qword_255EB9A00] = 0;
  *(_QWORD *)&v5[qword_255EB9A08] = 0;
  *(_QWORD *)&v5[qword_255EC2118] = MEMORY[0x24BEE4AF8];

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for SharedConceptComboTileViewController();
  v6 = objc_msgSendSuper2(&v8, sel_initWithCoder_, a1);

  return v6;
}

id sub_23120984C(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_231209778(a3);
}

uint64_t sub_231209870()
{
  uint64_t v0;

  return swift_bridgeObjectRelease();
}

id sub_2312098BC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SharedConceptComboTileViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2312098F0(uint64_t a1)
{

  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for SharedConceptComboTileViewController()
{
  uint64_t result;

  result = qword_255EB9A38;
  if (!qword_255EB9A38)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_231209984()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2312099E0()
{
  return type metadata accessor for SharedConceptComboTileViewController();
}

uint64_t sub_2312099E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SharedConceptComboFeedItemData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_231209A2C()
{
  unint64_t result;

  result = qword_255EB9BE0;
  if (!qword_255EB9BE0)
  {
    result = MEMORY[0x2348D8544](&unk_231269B30, &type metadata for TitleViewData);
    atomic_store(result, (unint64_t *)&qword_255EB9BE0);
  }
  return result;
}

uint64_t sub_231209A70()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_231209AAC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SharedConceptComboFeedItemData(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void destroy for TitleViewData(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

uint64_t initializeWithCopy for TitleViewData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(void **)(a2 + 32);
  v6 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = v5;
  v8 = v6;
  return a1;
}

uint64_t assignWithCopy for TitleViewData(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 32);
  v5 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v5;
  v6 = v5;

  v7 = *(void **)(a1 + 40);
  v8 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v8;
  v9 = v8;

  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  return a1;
}

__n128 initializeWithTake for TitleViewData(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for TitleViewData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  v6 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  return a1;
}

uint64_t getEnumTagSinglePayload for TitleViewData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 50))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TitleViewData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 50) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 50) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TitleViewData()
{
  return &type metadata for TitleViewData;
}

uint64_t sub_231209D58(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  void *v20;
  uint64_t v21;

  v1 = a1;
  v21 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_19;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = sub_2312649A8())
  {
    v3 = v1 & 0xC000000000000001;
    v4 = 4;
    v5 = 0x24BE4A000;
    while (1)
    {
      v6 = v3 ? (id)MEMORY[0x2348D7CE0](v4 - 4, v1) : *(id *)(v1 + 8 * v4);
      v7 = v6;
      v8 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      v9 = (void *)MEMORY[0x2348D810C]();
      v10 = objc_msgSend(objc_allocWithZone(*(Class *)(v5 + 936)), sel_init);
      if (v10)
      {
        v11 = objc_msgSend(v7, sel_code);
        objc_msgSend(v10, sel_setCode_, v11);

        v12 = objc_msgSend(v7, sel_codingSystem);
        v13 = v12;
        if (v12)
        {
          v20 = v9;
          v14 = v1;
          v15 = v2;
          v16 = objc_msgSend(v12, sel_identifier);

          sub_23126409C();
          v2 = v15;
          v1 = v14;
          v9 = v20;
          v13 = (void *)sub_23126406C();
          v5 = 0x24BE4A000uLL;
          swift_bridgeObjectRelease();
        }
        objc_msgSend(v10, sel_setSystem_, v13);

        v17 = objc_msgSend(v7, sel_codingVersion);
        objc_msgSend(v10, sel_setVersion_, v17);

        v18 = objc_msgSend(v7, sel_displayString);
        objc_msgSend(v10, sel_setDisplayName_, v18);

        v8 = v4 - 3;
      }
      objc_autoreleasePoolPop(v9);

      if (v10)
      {
        MEMORY[0x2348D75E4]();
        if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23126424C();
        sub_231264264();
        sub_231264210();
      }
      ++v4;
      if (v8 == v2)
      {
        swift_bridgeObjectRelease();
        return v21;
      }
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23120A034(unint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v12;

  v12 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_15;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = sub_2312649A8())
  {
    for (i = 4; ; ++i)
    {
      v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2348D7CE0](i - 4, a1) : *(id *)(a1 + 8 * i);
      v7 = v6;
      v8 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v9 = (void *)MEMORY[0x2348D810C]();
      v10 = a2();
      objc_autoreleasePoolPop(v9);

      if (v10)
      {
        MEMORY[0x2348D75E4]();
        if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23126424C();
        sub_231264264();
        sub_231264210();
      }
      if (v8 == v4)
      {
        swift_bridgeObjectRelease();
        return v12;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23120A1B0(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v7 = type metadata accessor for SharedConceptFeedItemData(0);
  v24 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v23 = (uint64_t)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v20 - v11;
  v13 = MEMORY[0x24BEE4AF8];
  v25 = MEMORY[0x24BEE4AF8];
  v22 = *(_QWORD *)(a3 + 16);
  if (v22)
  {
    v14 = 0;
    v15 = MEMORY[0x24BEE4AF8];
    v20[1] = a2;
    v21 = a3;
    v20[0] = a1;
    while (v14 < *(_QWORD *)(a3 + 16))
    {
      v16 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      v13 = *(_QWORD *)(v24 + 72);
      sub_231178454(a3 + v16 + v13 * v14, (uint64_t)v12, type metadata accessor for SharedConceptFeedItemData);
      v17 = a1(v12);
      if (v3)
      {
        sub_231178498((uint64_t)v12, type metadata accessor for SharedConceptFeedItemData);
        swift_release();
        swift_bridgeObjectRelease();
        return v13;
      }
      if ((v17 & 1) != 0)
      {
        sub_2311B1454((uint64_t)v12, v23, type metadata accessor for SharedConceptFeedItemData);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_231199264(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v25;
        v19 = *(_QWORD *)(v25 + 16);
        v18 = *(_QWORD *)(v25 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_231199264(v18 > 1, v19 + 1, 1);
          v15 = v25;
        }
        *(_QWORD *)(v15 + 16) = v19 + 1;
        result = sub_2311B1454(v23, v15 + v16 + v19 * v13, type metadata accessor for SharedConceptFeedItemData);
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        result = sub_231178498((uint64_t)v12, type metadata accessor for SharedConceptFeedItemData);
      }
      if (v22 == ++v14)
      {
        v13 = v25;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

