id sub_2312CB6B4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  id v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  _QWORD v26[4];
  id v27;
  _QWORD v28[4];
  id v29;
  uint64_t v30;

  v7 = a4;
  v8 = a5;
  HKHeartRateLocalizedString();
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = (void *)MEMORY[0x24BDD17C8];
  HKHeartRateLocalizedString();
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "localizedStringWithFormat:", v11, a3);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x24BEBD3B0], "alertControllerWithTitle:message:preferredStyle:", v9, v12, 1);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = (void *)MEMORY[0x24BDD17C8];
  HKHeartRateLocalizedString();
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "localizedStringWithFormat:", v15, a3);
  v16 = (void *)objc_claimAutoreleasedReturnValue();

  v17 = (void *)MEMORY[0x24BEBD3A8];
  v18 = MEMORY[0x24BDAC760];
  v28[0] = MEMORY[0x24BDAC760];
  v28[1] = 3221225472;
  v28[2] = sub_2312CB8B8;
  v28[3] = &unk_25001EDC0;
  v29 = v7;
  v30 = a3;
  v19 = v7;
  objc_msgSend(v17, "actionWithTitle:style:handler:", v16, 0, v28);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v21 = (void *)MEMORY[0x24BEBD3A8];
  HKHeartRateLocalizedString();
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v26[0] = v18;
  v26[1] = 3221225472;
  v26[2] = sub_2312CB8C8;
  v26[3] = &unk_25001EDE8;
  v27 = v8;
  v23 = v8;
  objc_msgSend(v21, "actionWithTitle:style:handler:", v22, 1, v26);
  v24 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v13, "addAction:", v20);
  objc_msgSend(v13, "addAction:", v24);

  return v13;
}

uint64_t sub_2312CB8B8(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
}

uint64_t sub_2312CB8C8(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

id HKNRDeviceCapabilityECG2UpgradeBackgroundDelivery()
{
  return (id)objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", CFSTR("253F2ED0-FFC6-4D36-A387-B6965C9E4682"));
}

id HKNRDeviceCapabilityHeartRateV2()
{
  return (id)objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", CFSTR("E17D2903-B868-4E6C-8E76-6D4939BEED44"));
}

uint64_t HKNRActivePairedDeviceSupportsECG2UpgradeBackgroundDelivery()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;

  objc_msgSend(MEMORY[0x24BE6B4E0], "sharedInstance");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "getActivePairedDevice");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", CFSTR("253F2ED0-FFC6-4D36-A387-B6965C9E4682"));
  v3 = objc_msgSend(v1, "supportsCapability:", v2);

  return v3;
}

uint64_t sub_2312CBB5C()
{
  uint64_t ObjCClassFromMetadata;
  void *v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  type metadata accessor for HeartHealthPluginDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_231411374();

  v3 = objc_msgSend(v1, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  sub_231411374();

  if (qword_25415E610 != -1)
    swift_once();
  v4 = (id)qword_254163058;
  v5 = (void *)sub_23141468C();
  v6 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_compatibleWithTraitCollection_, v5, v4, 0, 0xE000000000000000);

  return sub_231411F5C();
}

void sub_2312CBD40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  char v16;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v23;

  v1 = v0;
  v2 = sub_231411D40();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8]();
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (void *)sub_231413588();
  v7 = objc_msgSend(v6, sel_unsatisfiedRequirementIdentifiers);

  type metadata accessor for HKFeatureAvailabilityRequirementIdentifier(0);
  v8 = sub_2314147A0();

  v23 = MEMORY[0x24BEE4B08];
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BE41310], v2);
  LOBYTE(v7) = sub_231411D34();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((v7 & 1) != 0)
  {
    sub_2313F243C(&v22, (id)*MEMORY[0x24BDD2DB0]);

  }
  if (*(_BYTE *)(v1
                + OBJC_IVAR____TtC5Heart46CardioFitnessAdvertisableFeatureSourceProvider_includeFeaturesMadeAvailableByBuddy) == 1)
  {
    sub_2313F243C(&v22, (id)*MEMORY[0x24BDD2CD0]);

  }
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v10 = 0;
    v11 = v23;
    v21 = v9 - 1;
    v12 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      if (v10 <= v9)
        v13 = v9;
      else
        v13 = v10;
      v14 = v10;
      while (1)
      {
        if (v13 == v14)
        {
          __break(1u);
          return;
        }
        v10 = v14 + 1;
        v15 = *(id *)(v8 + 32 + 8 * v14);
        sub_231412A90();
        v16 = sub_23140EBD8((uint64_t)v15, v11);
        swift_bridgeObjectRelease();
        if ((v16 & 1) == 0)
          break;

        ++v14;
        if (v9 == v10)
          goto LABEL_20;
      }
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v22 = v12;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_23137D310(0, v12[2] + 1, 1);
        v12 = v22;
      }
      v19 = v12[2];
      v18 = v12[3];
      if (v19 >= v18 >> 1)
      {
        sub_23137D310(v18 > 1, v19 + 1, 1);
        v12 = v22;
      }
      v12[2] = v19 + 1;
      v12[v19 + 4] = v15;
    }
    while (v21 != v14);
  }
LABEL_20:
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
}

uint64_t sub_2312CBFF4(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[4];

  v17 = *v4;
  v18 = a3;
  sub_2312CF374(0, (unint64_t *)&qword_255ECACA0, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BE45B58]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8]();
  v11 = (char *)&v16 - v10;
  sub_231411C8C();
  sub_2312CEA5C(v19, v19[3]);
  sub_2314135DC();
  swift_getObjectType();
  sub_2314146BC();
  sub_231414A34();
  v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v13 = swift_allocObject();
  v14 = v18;
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v14;
  *(_QWORD *)(v13 + 32) = a4;
  *(_BYTE *)(v13 + 40) = a2;
  *(_QWORD *)(v13 + 48) = v17;
  swift_retain();
  swift_retain();
  sub_231414B84();
  sub_2314130CC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  swift_release();
  return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v19);
}

uint64_t sub_2312CC19C(char a1, uint64_t a2, uint64_t a3, void (*a4)(char *), uint64_t a5, int a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint8_t *v28;
  _QWORD *v29;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  void (*v36)(char *);
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;

  v35 = a6;
  v36 = a4;
  sub_2312CF374(0, (unint64_t *)&qword_255ECACA0, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BE45B58]);
  v33 = v12;
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8]();
  v15 = (char *)&v31 - v14;
  sub_2312CEB04();
  MEMORY[0x24BDAC7A8]();
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v18 = MEMORY[0x2348DE3BC](a3 + 16);
  if (v18)
  {
    v19 = (void *)v18;
    v34 = a7;
    if ((a1 & 1) != 0)
    {
      if (qword_25415DF98 != -1)
        swift_once();
      v20 = sub_231413780();
      sub_2312CE3B8(v20, (uint64_t)qword_254162FF0);
      v21 = sub_231413768();
      v22 = sub_23141498C();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = swift_slowAlloc();
        v32 = a5;
        v24 = (uint8_t *)v23;
        v25 = swift_slowAlloc();
        v38 = v25;
        *(_DWORD *)v24 = 136446210;
        v31 = v24 + 4;
        v26 = sub_2314151A8();
        v37 = sub_23133180C(v26, v27, &v38);
        sub_231414CBC();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2312C8000, v21, v22, "[%{public}s] Notification defaults written and synced", v24, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2348DE308](v25, -1, -1);
        v28 = v24;
        a5 = v32;
        MEMORY[0x2348DE308](v28, -1, -1);
      }

      if ((v35 & 1) != 0)
      {
        sub_231411C8C();
        sub_2312CEA5C(&v38, v40);
        sub_2314135DC();
        swift_getObjectType();
        sub_2314146BC();
        sub_231414A34();
        v29 = (_QWORD *)swift_allocObject();
        v29[2] = v36;
        v29[3] = a5;
        v29[4] = v34;
        swift_retain();
        sub_231414B84();

        sub_2314130CC();
        swift_release();
        (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v33);
        return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v38);
      }
      sub_231411E78();
      sub_2312CCC24(&qword_255ECACB0, (uint64_t (*)(uint64_t))MEMORY[0x24BE417D0], MEMORY[0x24BE417E0]);
      sub_231415154();
    }
    else
    {
      if (a2)
      {
        swift_getErrorValue();
        sub_2314150D0();
      }
      else
      {
        v38 = 0;
        v39 = 0xE000000000000000;
        sub_231414E18();
        sub_231414728();
        sub_2314151A8();
        sub_231414728();
        swift_bridgeObjectRelease();
        sub_231414728();
      }
      sub_231411E6C();
      swift_storeEnumTagMultiPayload();
    }
    v36(v17);

  }
  else
  {
    v38 = 0;
    v39 = 0xE000000000000000;
    sub_231414E18();
    sub_231414728();
    sub_2314151A8();
    sub_231414728();
    swift_bridgeObjectRelease();
    sub_231414728();
    sub_231411E6C();
    swift_storeEnumTagMultiPayload();
    v36(v17);
  }
  return sub_2312CEBD4((uint64_t)v17, (uint64_t (*)(_QWORD))sub_2312CEB04);
}

uint64_t sub_2312CC664(char a1, uint64_t a2, void (*a3)(char *))
{
  uint64_t v6;
  char *v7;
  _QWORD v9[6];

  sub_2312CEB04();
  MEMORY[0x24BDAC7A8]();
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    sub_231411E78();
    sub_2312CCC24(&qword_255ECACB0, (uint64_t (*)(uint64_t))MEMORY[0x24BE417D0], MEMORY[0x24BE417E0]);
    sub_231415154();
  }
  else
  {
    if (a2)
    {
      swift_getErrorValue();
      sub_2314150D0();
    }
    else
    {
      v9[4] = 0;
      v9[5] = 0xE000000000000000;
      sub_231414E18();
      sub_231414728();
      sub_2314151A8();
      sub_231414728();
      swift_bridgeObjectRelease();
      sub_231414728();
    }
    sub_231411E6C();
    swift_storeEnumTagMultiPayload();
  }
  a3(v7);
  return sub_2312CEBD4((uint64_t)v7, (uint64_t (*)(_QWORD))sub_2312CEB04);
}

uint64_t sub_2312CC7E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_2312CEBD4(v0 + OBJC_IVAR____TtC5Heart46CardioFitnessAdvertisableFeatureSourceProvider_currentCountry, (uint64_t (*)(_QWORD))sub_2312CCB14);
  v1 = v0 + OBJC_IVAR____TtC5Heart46CardioFitnessAdvertisableFeatureSourceProvider_presentationLocation;
  v2 = sub_231411D40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_2312CC84C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BE412F0];
  v3 = sub_231411D28();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

id sub_2312CC890()
{
  return (id)*MEMORY[0x24BDD2DD0];
}

uint64_t sub_2312CC8A0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_2312CE3D0(*v1 + OBJC_IVAR____TtC5Heart46CardioFitnessAdvertisableFeatureSourceProvider_currentCountry, a1);
}

uint64_t sub_2312CC8B8()
{
  return sub_2312CBB5C();
}

uint64_t sub_2312CC8CC()
{
  char v0;

  sub_2312CBD40();
  return v0 & 1;
}

uint64_t sub_2312CC8F0()
{
  uint64_t v0;

  if (qword_25415DF98 != -1)
    swift_once();
  v0 = sub_231413780();
  sub_2312CE3B8(v0, (uint64_t)qword_254162FF0);
  type metadata accessor for CardioFitnessAdvertisableFeatureSourceProvider();
  return sub_231411C80();
}

uint64_t sub_2312CC9A0(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return sub_2312CBFF4(a1, a2, a3, a4);
}

unint64_t sub_2312CC9C0(uint64_t a1, char a2)
{
  return sub_2312CE1A8(a2);
}

uint64_t variable initialization expression of ElectrocardiogramRecordingOnboardingPromotionConfiguration.prominence@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_231411AC4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t variable initialization expression of TitleSubtitleView.$__lazy_storage_$_titleLabel()
{
  return 0;
}

uint64_t variable initialization expression of TitleSubtitleView.$__lazy_storage_$_subtitleLabel()
{
  return 0;
}

double variable initialization expression of TitleSubtitleView.item@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_2312CCA40()
{
  return type metadata accessor for CardioFitnessAdvertisableFeatureSourceProvider();
}

uint64_t type metadata accessor for CardioFitnessAdvertisableFeatureSourceProvider()
{
  uint64_t result;

  result = qword_255ECAB48;
  if (!qword_255ECAB48)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2312CCA84()
{
  unint64_t v0;
  unint64_t v1;

  sub_2312CCB14();
  if (v0 <= 0x3F)
  {
    sub_231411D40();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

void sub_2312CCB14()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415BBE8)
  {
    sub_231411B48();
    sub_231411B00();
    sub_2312CCC24((unint64_t *)&qword_25415B6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47EC8], MEMORY[0x24BE47ED8]);
    v0 = sub_231415160();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415BBE8);
  }
}

void type metadata accessor for HKProfileType(uint64_t a1)
{
  sub_2312CF374(a1, &qword_255ECAC18, (uint64_t)&unk_25001F410, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for HKFeatureIdentifier(uint64_t a1)
{
  sub_2312CF374(a1, &qword_255ECAC20, (uint64_t)&unk_25001F430, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for HKHRAFibBurdenLoggingCategory(uint64_t a1)
{
  sub_2312CF374(a1, (unint64_t *)&unk_25415BBB8, (uint64_t)&unk_25001F458, MEMORY[0x24BEE4D40]);
}

uint64_t sub_2312CCBF8()
{
  return sub_2312CCC24((unint64_t *)&unk_25415BB90, (uint64_t (*)(uint64_t))type metadata accessor for HKHRAFibBurdenLoggingCategory, (uint64_t)&unk_231416B30);
}

uint64_t sub_2312CCC24(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x2348DE248](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2312CCC64(uint64_t a1, uint64_t a2)
{
  return sub_2312CD7AC(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

void sub_2312CCC90(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_2312CCC98()
{
  return sub_231414D10();
}

uint64_t sub_2312CCCB0()
{
  return sub_23141486C();
}

uint64_t sub_2312CCCB8(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  char v4;
  int v5;
  int v6;
  char v7;

  v6 = 0;
  v7 = 1;
  result = MEMORY[0x2348DD258](a1, &v6);
  v4 = v7;
  v5 = v6;
  if (v7)
    v5 = 0;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v4;
  return result;
}

uint64_t sub_2312CCD08(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;
  int v5;
  int v7;
  char v8;

  v7 = 0;
  v8 = 1;
  v3 = MEMORY[0x2348DD264](a1, &v7);
  v4 = v8;
  v5 = v7;
  if (v8)
    v5 = 0;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v4;
  return v3 & 1;
}

void sub_2312CCD5C(float *a1@<X8>)
{
  *a1 = MEMORY[0x2348DD270]();
}

BOOL sub_2312CCD80(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_2312CCDB0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_2312CCDC4(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_2312CCDD8(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

uint64_t sub_2312CCDEC()
{
  sub_2312CCC24(&qword_255ECADE8, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_2314175A8);
  return sub_2314150C4();
}

uint64_t sub_2312CCE2C()
{
  sub_2312CCC24(&qword_255ECADE8, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_2314175A8);
  return sub_2314150B8();
}

uint64_t sub_2312CCE70()
{
  sub_2312CCC24((unint64_t *)&qword_255ECAE20, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_231417B58);
  return sub_2314113A4();
}

id sub_2312CCEB0()
{
  id *v0;

  return *v0;
}

uint64_t sub_2312CCEB8@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

_QWORD *sub_2312CCEC0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_2312CCED4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

_QWORD *sub_2312CCEE8@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_2312CCF14@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_2312CCF38(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_2312CCF4C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_2312CCF60(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_2312CCF74(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_2312CCF88(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_2312CCF9C()
{
  _QWORD *v0;

  return *v0 == 0;
}

_QWORD *sub_2312CCFAC(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

uint64_t sub_2312CCFC0(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_2314146A4();
  *a2 = 0;
  return result;
}

uint64_t sub_2312CD034(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_2314146B0();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_2312CD0B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_2314146BC();
  v2 = sub_23141468C();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_2312CD0F4()
{
  return sub_2314146BC();
}

uint64_t sub_2312CD104()
{
  sub_2312CCC24((unint64_t *)&qword_255ECAE20, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_231417B58);
  return sub_2314113E0();
}

uint64_t sub_2312CD144()
{
  sub_2312CCC24((unint64_t *)&qword_255ECAE20, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_231417B58);
  return sub_2314113BC();
}

uint64_t sub_2312CD184(void *a1)
{
  id v2;

  sub_2312CCC24((unint64_t *)&qword_255ECAE20, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_231417B58);
  v2 = a1;
  return sub_2314113B0();
}

uint64_t sub_2312CD1E8()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = *v0;
  v2 = sub_231414C14();

  return v2;
}

uint64_t sub_2312CD21C()
{
  sub_2312CCC24((unint64_t *)&qword_255ECAE20, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_231417B58);
  return sub_2314113D4();
}

uint64_t sub_2312CD26C()
{
  sub_231415118();
  sub_231414650();
  return sub_231415148();
}

_QWORD *sub_2312CD2C8@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_2312CD2D8(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_2312CD2E4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_2312CF4B0(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

_QWORD *sub_2312CD320@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_2312CD32C()
{
  sub_2312CCC24((unint64_t *)&qword_255ECAE68, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureAvailabilityRequirementIdentifier, (uint64_t)&unk_231417B18);
  sub_2312CCC24(&qword_255ECAE70, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureAvailabilityRequirementIdentifier, (uint64_t)&unk_2314172F4);
  return sub_231414F68();
}

uint64_t sub_2312CD3B0()
{
  sub_2312CCC24(&qword_255ECAE78, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureAvailabilityContext, (uint64_t)&unk_23141707C);
  sub_2312CCC24(&qword_255ECAE80, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureAvailabilityContext, (uint64_t)&unk_231417024);
  return sub_231414F68();
}

uint64_t sub_2312CD434@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_2314146BC();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2312CD45C()
{
  sub_2312CCC24(&qword_255ECAC60, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureIdentifier, (uint64_t)&unk_231416C48);
  sub_2312CCC24(&qword_255ECAC68, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureIdentifier, (uint64_t)&unk_231416BF0);
  return sub_231414F68();
}

uint64_t sub_2312CD4E0()
{
  return sub_2312CCC24(&qword_255ECAC28, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureIdentifier, (uint64_t)&unk_231416BB8);
}

uint64_t sub_2312CD50C()
{
  return sub_2312CCC24(&qword_255ECAC30, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureIdentifier, (uint64_t)&unk_231416B90);
}

_DWORD *sub_2312CD538@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

float sub_2312CD548@<S0>(_DWORD *a1@<X8>)
{
  float *v1;
  float result;

  result = *v1;
  *a1 = *(_DWORD *)v1;
  return result;
}

uint64_t sub_2312CD554()
{
  sub_2312CCC24(&qword_255ECAE38, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_2314179C8);
  sub_2312CCC24(&qword_255ECAE40, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_231417968);
  return sub_231414F68();
}

uint64_t sub_2312CD5E8()
{
  sub_2312CCC24((unint64_t *)&qword_255ECAE58, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_231417C68);
  sub_2312CCC24(&qword_255ECAE60, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_231417408);
  return sub_231414F68();
}

uint64_t sub_2312CD66C()
{
  sub_2312CCC24((unint64_t *)&qword_255ECAE20, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_231417B58);
  return sub_2314113C8();
}

BOOL sub_2312CD6C4(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_2312CD6D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23141468C();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_2312CD71C()
{
  sub_2312CCC24((unint64_t *)&qword_255ECAE48, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_231417AD4);
  sub_2312CCC24(&qword_255ECAE50, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_231417698);
  return sub_231414F68();
}

uint64_t sub_2312CD7A0(uint64_t a1, uint64_t a2)
{
  return sub_2312CD7AC(a1, a2, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_2312CD7AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_2314146BC();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_2312CD7E8()
{
  sub_2314146BC();
  sub_231414710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2312CD828()
{
  uint64_t v0;

  sub_2314146BC();
  sub_231415118();
  sub_231414710();
  v0 = sub_231415148();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2312CD898()
{
  return sub_23141489C();
}

uint64_t sub_2312CD8A0()
{
  return sub_23141513C();
}

void sub_2312CD8D0()
{
  JUMPOUT(0x2348DDAECLL);
}

uint64_t sub_2312CD8E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_2314146BC();
  v2 = v1;
  if (v0 == sub_2314146BC() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_2312CD96C()
{
  return sub_2312CCC24(&qword_255ECAC38, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureIdentifier, (uint64_t)&unk_231416C20);
}

BOOL sub_2312CD998(float *a1, float *a2)
{
  return *a1 == *a2;
}

uint64_t sub_2312CD9AC()
{
  sub_231415118();
  sub_231415124();
  return sub_231415148();
}

uint64_t sub_2312CD9F0()
{
  return sub_231415124();
}

uint64_t sub_2312CDA18()
{
  sub_231415118();
  sub_231415124();
  return sub_231415148();
}

uint64_t sub_2312CDA58(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2312CDD1C(a1, a2, a3, a4, &qword_255ECAC80, (void (*)(uint64_t))MEMORY[0x24BE477D0]);
}

uint64_t sub_2312CDA6C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2312CDD1C(a1, a2, a3, a4, (unint64_t *)&qword_255ECAC78, (void (*)(uint64_t))MEMORY[0x24BE3F938]);
}

_QWORD *sub_2312CDA80(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_2312CF374(0, (unint64_t *)&qword_25415B688, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2312CE414(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2312CDBA0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2312CDD1C(a1, a2, a3, a4, (unint64_t *)&unk_255ECAEF0, (void (*)(uint64_t))type metadata accessor for AFibBurdenPDFChartPoint);
}

_QWORD *sub_2312CDBB4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2312CDF4C(a1, a2, a3, a4, (unint64_t *)&qword_255ECAC50, (unint64_t *)&qword_255ECF1F0);
}

_QWORD *sub_2312CDBD0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_2312CE504(0, (unint64_t *)&qword_255ECAC90, &qword_255ECF220);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2312CE5C8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2312CDCF4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2312CDD1C(a1, a2, a3, a4, &qword_255ECAC88, (void (*)(uint64_t))MEMORY[0x24BE438C0]);
}

uint64_t sub_2312CDD08(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2312CDD1C(a1, a2, a3, a4, &qword_255ECAE30, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
}

uint64_t sub_2312CDD1C(char a1, int64_t a2, char a3, unint64_t a4, unint64_t *a5, void (*a6)(uint64_t))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  sub_2312CE560(0, a5, a6);
  v13 = *(_QWORD *)(((uint64_t (*)(_QWORD))a6)(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = j__malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_231414ED8();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(((uint64_t (*)(_QWORD))a6)(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_2312CE6E0(0, v11, v21, a4, (uint64_t (*)(_QWORD))a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_2312CDF30(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2312CDF4C(a1, a2, a3, a4, &qword_25415DF38, &qword_25415D520);
}

_QWORD *sub_2312CDF4C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, unint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  _QWORD *v15;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      sub_2312CE504(0, a5, a6);
      v13 = (_QWORD *)swift_allocObject();
      v14 = j__malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      v15 = v13 + 4;
      if ((v8 & 1) != 0)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4])
          memmove(v15, a4 + 4, 40 * v11);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v15 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2312CE7F8(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2312CE090(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_2312CE560(0, &qword_255ECAC70, type metadata accessor for HKFeatureAvailabilityContext);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2312CE90C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_2312CE1A8(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  void (*v12)(unint64_t, _QWORD, uint64_t);
  char v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v2 = sub_231411F74();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8]();
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_231411D40();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8]();
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
    return MEMORY[0x24BEE4AF8];
  sub_2312CE560(0, (unint64_t *)&unk_255ECAC40, (void (*)(uint64_t))MEMORY[0x24BE41C88]);
  v10 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v19 = *(_QWORD *)(v3 + 72);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_231416A30;
  v12 = *(void (**)(unint64_t, _QWORD, uint64_t))(v3 + 104);
  v12(v11 + v10, *MEMORY[0x24BE41C80], v2);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BE41318], v6);
  v13 = sub_231411D34();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if ((v13 & 1) != 0)
  {
    v14 = (id)HKHRCardioFitnessEventOnboardingDeepLink();
    sub_231411494();

    v12((unint64_t)v5, *MEMORY[0x24BE41C78], v2);
    v16 = *(_QWORD *)(v11 + 16);
    v15 = *(_QWORD *)(v11 + 24);
    if (v16 >= v15 >> 1)
      v11 = sub_2312CDD1C(v15 > 1, v16 + 1, 1, v11, (unint64_t *)&unk_255ECAC40, (void (*)(uint64_t))MEMORY[0x24BE41C88]);
    *(_QWORD *)(v11 + 16) = v16 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v11 + v10 + v16 * v19, v5, v2);
  }
  return v11;
}

uint64_t sub_2312CE3B8(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_2312CE3D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312CCB14();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2312CE414(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_231414F5C();
  __break(1u);
  return result;
}

void sub_2312CE504(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_2312CEA10(255, a3);
    v4 = sub_23141504C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_2312CE560(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_23141504C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void type metadata accessor for HKFeatureAvailabilityContext(uint64_t a1)
{
  sub_2312CF374(a1, &qword_255ECAD18, (uint64_t)&unk_25001F7B8, MEMORY[0x24BEE4D40]);
}

uint64_t sub_2312CE5C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_2312CEA10(0, &qword_255ECF220);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_231414F5C();
  __break(1u);
  return result;
}

uint64_t sub_2312CE6E0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_231414F5C();
  __break(1u);
  return result;
}

uint64_t sub_2312CE7F8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 40 * a1 + 32;
    v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      sub_2312CEA10(0, a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_231414F5C();
  __break(1u);
  return result;
}

uint64_t sub_2312CE90C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      type metadata accessor for HKFeatureAvailabilityContext(0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_231414F5C();
  __break(1u);
  return result;
}

uint64_t sub_2312CEA10(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

_QWORD *sub_2312CEA5C(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_2312CEA80()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2312CEAA4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2312CEAD0(char a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2312CC19C(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(char *))(v2 + 24), *(_QWORD *)(v2 + 32), *(unsigned __int8 *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

void sub_2312CEB04()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECACA8)
  {
    sub_231411E78();
    sub_2312CCC24(&qword_255ECACB0, (uint64_t (*)(uint64_t))MEMORY[0x24BE417D0], MEMORY[0x24BE417E0]);
    v0 = sub_231415160();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECACA8);
  }
}

uint64_t sub_2312CEB88()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2312CEBAC(char a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2312CC664(a1, a2, *(void (**)(char *))(v2 + 16));
}

void type metadata accessor for HKFeatureAvailabilityRequirementIdentifier(uint64_t a1)
{
  sub_2312CF374(a1, &qword_25415BBC8, (uint64_t)&unk_25001F6C0, MEMORY[0x24BEE4D40]);
}

uint64_t sub_2312CEBD4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void type metadata accessor for UNAuthorizationStatus(uint64_t a1)
{
  sub_2312CF374(a1, &qword_255ECACB8, (uint64_t)&unk_25001F4F0, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for UILayoutPriority(uint64_t a1)
{
  sub_2312CF374(a1, &qword_255ECACC0, (uint64_t)&unk_25001F510, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for UIUserInterfaceSizeClass(uint64_t a1)
{
  sub_2312CF374(a1, &qword_255ECACC8, (uint64_t)&unk_25001F538, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for UNNotificationPresentationOptions(uint64_t a1)
{
  sub_2312CF374(a1, &qword_255ECACD0, (uint64_t)&unk_25001F558, MEMORY[0x24BEE4D40]);
}

__n128 initializeWithTake for LowHeartRateNotificationsHealthChecklistConfigurationProvider(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_2312CEC90(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_2312CECB0(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_2312CF374(a1, &qword_255ECACD8, (uint64_t)&unk_25001F5D8, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for OpenExternalURLOptionsKey(uint64_t a1)
{
  sub_2312CF374(a1, (unint64_t *)&unk_255ECACE0, (uint64_t)&unk_25001F600, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for CMVO2MaxRetrocomputeStatus(uint64_t a1)
{
  sub_2312CF374(a1, &qword_25415BB78, (uint64_t)&unk_25001F628, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for HKError(uint64_t a1)
{
  sub_2312CF374(a1, &qword_255ECACF0, (uint64_t)&unk_25001F648, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_2312CF374(a1, &qword_255ECACF8, (uint64_t)&unk_25001F670, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_2312CF374(a1, (unint64_t *)&unk_25415D0F0, (uint64_t)&unk_25001F698, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for HKFeatureAvailabilityOnboardingIneligibilityReasons(uint64_t a1)
{
  sub_2312CF374(a1, &qword_255ECAD00, (uint64_t)&unk_25001F6E8, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for SymbolWeight(uint64_t a1)
{
  sub_2312CF374(a1, &qword_255ECAD08, (uint64_t)&unk_25001F710, MEMORY[0x24BEE4D40]);
}

uint64_t initializeBufferWithCopyOfBuffer for LocalizedImageView.ImageConfiguration(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 initializeWithTake for CardioFitnessHealthChecklistSettingsState.Footer.Link(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_2312CEDF4(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_2312CEE14(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for NSDirectionalEdgeInsets(uint64_t a1)
{
  sub_2312CF374(a1, &qword_255ECAD10, (uint64_t)&unk_25001F788, MEMORY[0x24BEE4D40]);
}

uint64_t sub_2312CEE5C()
{
  return sub_2312CCC24(&qword_255ECAD20, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureAvailabilityContext, (uint64_t)&unk_231416FEC);
}

uint64_t sub_2312CEE88()
{
  return sub_2312CCC24(&qword_255ECAD28, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureAvailabilityContext, (uint64_t)&unk_231416FC4);
}

uint64_t sub_2312CEEB4()
{
  return sub_2312CCC24(&qword_255ECAD30, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureAvailabilityContext, (uint64_t)&unk_231417054);
}

uint64_t sub_2312CEEE0()
{
  return sub_2312CCC24(&qword_255ECAD38, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureAvailabilityOnboardingIneligibilityReasons, (uint64_t)&unk_231417134);
}

uint64_t sub_2312CEF0C()
{
  return sub_2312CCC24(&qword_255ECAD40, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureAvailabilityOnboardingIneligibilityReasons, (uint64_t)&unk_231417104);
}

uint64_t sub_2312CEF38()
{
  return sub_2312CCC24(&qword_255ECAD48, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureAvailabilityOnboardingIneligibilityReasons, (uint64_t)&unk_23141715C);
}

uint64_t sub_2312CEF64()
{
  return sub_2312CCC24(&qword_255ECAD50, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureAvailabilityOnboardingIneligibilityReasons, (uint64_t)&unk_231417194);
}

uint64_t sub_2312CEF90()
{
  return sub_2312CCC24(&qword_255ECAD58, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureAvailabilityRequirementIdentifier, (uint64_t)&unk_2314172BC);
}

uint64_t sub_2312CEFBC()
{
  return sub_2312CCC24(&qword_255ECAD60, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureAvailabilityRequirementIdentifier, (uint64_t)&unk_231417294);
}

uint64_t sub_2312CEFE8()
{
  return sub_2312CCC24(&qword_255ECAD68, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2314173CC);
}

uint64_t sub_2312CF014()
{
  return sub_2312CCC24(&qword_255ECAD70, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_2314173A0);
}

uint64_t sub_2312CF040()
{
  return sub_2312CCC24(&qword_255ECAD78, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_2314174C0);
}

uint64_t sub_2312CF06C()
{
  return sub_2312CCC24(&qword_255ECAD80, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_2314174EC);
}

uint64_t sub_2312CF098()
{
  return sub_2312CCC24(&qword_255ECAD88, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_23141765C);
}

uint64_t sub_2312CF0C4()
{
  return sub_2312CCC24(&qword_255ECAD90, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_231417630);
}

uint64_t sub_2312CF0F0()
{
  return sub_2312CCC24(&qword_255ECAD98, (uint64_t (*)(uint64_t))type metadata accessor for UNNotificationPresentationOptions, (uint64_t)&unk_231417774);
}

uint64_t sub_2312CF11C()
{
  return sub_2312CCC24(&qword_255ECADA0, (uint64_t (*)(uint64_t))type metadata accessor for UNNotificationPresentationOptions, (uint64_t)&unk_231417744);
}

uint64_t sub_2312CF148()
{
  return sub_2312CCC24(&qword_255ECADA8, (uint64_t (*)(uint64_t))type metadata accessor for UNNotificationPresentationOptions, (uint64_t)&unk_23141779C);
}

uint64_t sub_2312CF174()
{
  return sub_2312CCC24(&qword_255ECADB0, (uint64_t (*)(uint64_t))type metadata accessor for UNNotificationPresentationOptions, (uint64_t)&unk_2314177D4);
}

uint64_t sub_2312CF1A0()
{
  return sub_2312CCC24(&qword_255ECADB8, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_23141792C);
}

uint64_t sub_2312CF1CC()
{
  return sub_2312CCC24(&qword_255ECADC0, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_231417900);
}

uint64_t sub_2312CF1F8()
{
  return sub_2312CCC24(&qword_255ECADC8, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_23141799C);
}

uint64_t sub_2312CF224()
{
  return sub_2312CCC24(&qword_255ECADD0, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceSizeClass, (uint64_t)&unk_2314178D4);
}

uint64_t sub_2312CF250()
{
  return sub_2312CCC24(&qword_255ECADD8, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_2314176CC);
}

uint64_t sub_2312CF27C()
{
  return sub_2312CCC24(&qword_255ECADE0, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureAvailabilityRequirementIdentifier, (uint64_t)&unk_231417324);
}

uint64_t sub_2312CF2A8()
{
  return sub_2312CCC24(&qword_255ECADE8, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_2314175A8);
}

uint64_t sub_2312CF2D4()
{
  return sub_2312CCC24(&qword_255ECADF0, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_231417574);
}

uint64_t sub_2312CF300()
{
  return sub_2312CCC24(&qword_255ECADF8, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_231417530);
}

uint64_t sub_2312CF32C()
{
  return sub_2312CCC24(&qword_255ECAE00, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_231417C00);
}

void type metadata accessor for Code(uint64_t a1)
{
  sub_2312CF374(a1, &qword_255ECAE88, (uint64_t)&unk_25001F7E0, MEMORY[0x24BEE4D40]);
}

void sub_2312CF374(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = a4(0, a3);
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_2312CF3B8()
{
  return sub_2312CCC24(&qword_255ECAE08, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_231417BC4);
}

unint64_t sub_2312CF3E8()
{
  unint64_t result;

  result = qword_255ECAE10;
  if (!qword_255ECAE10)
  {
    result = MEMORY[0x2348DE248](MEMORY[0x24BEE17C8], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_255ECAE10);
  }
  return result;
}

uint64_t sub_2312CF42C()
{
  return sub_2312CCC24(&qword_255ECAE18, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_231417C3C);
}

uint64_t sub_2312CF458()
{
  return sub_2312CCC24((unint64_t *)&qword_255ECAE20, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_231417B58);
}

uint64_t sub_2312CF484()
{
  return sub_2312CCC24(&qword_255ECAE28, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_23141743C);
}

uint64_t sub_2312CF4B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t destroy for LocalizedImageView()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LocalizedImageView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  sub_231412A90();
  sub_231412A90();
  sub_231412A90();
  return a1;
}

uint64_t assignWithCopy for LocalizedImageView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_231412A90();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  sub_231412A90();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  sub_231412A90();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for LocalizedImageView(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for LocalizedImageView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalizedImageView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocalizedImageView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizedImageView()
{
  return &type metadata for LocalizedImageView;
}

_QWORD *sub_2312CF770(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    v7 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v7;
    v8 = *((_OWORD *)a2 + 5);
    v9 = *(int *)(a3 + 44);
    v10 = a1 + v9;
    v11 = (uint64_t)a2 + v9;
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 80) = v8;
    v12 = sub_231411644();
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    sub_231412A90();
    swift_retain();
    swift_retain();
    v13(v10, v11, v12);
  }
  return v3;
}

uint64_t sub_2312CF83C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 44);
  v5 = sub_231411644();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_2312CF894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  v7 = *(_OWORD *)(a2 + 80);
  v8 = *(int *)(a3 + 44);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  v11 = sub_231411644();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  sub_231412A90();
  swift_retain();
  swift_retain();
  v12(v9, v10, v11);
  return a1;
}

_QWORD *sub_2312CF934(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_231412A90();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  v6 = *(int *)(a3 + 44);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_231411644();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_2312CFA20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  v6 = *(_OWORD *)(a2 + 80);
  v7 = *(int *)(a3 + 44);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  v10 = sub_231411644();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_2312CFA94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v8 = *(_OWORD *)(a2 + 80);
  v9 = *(int *)(a3 + 44);
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_OWORD *)(a1 + 80) = v8;
  v12 = sub_231411644();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t sub_2312CFB40()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2312CFB4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_231411644();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 44), a2, v8);
  }
}

uint64_t sub_2312CFBC8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2312CFBD4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_231411644();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 44), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for LocalizedImageView.TextConfiguration()
{
  uint64_t result;

  result = qword_255ECB018;
  if (!qword_255ECB018)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2312CFC84()
{
  uint64_t result;
  unint64_t v1;

  result = sub_231411644();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2312CFD34()
{
  return sub_2312CCC24(&qword_255ECB068, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
}

uint64_t sub_2312CFD60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 44);
  v5 = sub_231411644();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_2312CFDA0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2312CFDB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t (*v14)(uint64_t);
  uint64_t (*v15)(uint64_t);
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (**v19)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  __int16 v24;
  char v25;
  char v26;

  v2 = v1;
  v22 = a1;
  v3 = sub_2314143D4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D0680(0);
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *(_BYTE *)(v2 + 16);
  v9 = qword_25415E610;
  sub_231412A90();
  if (v9 != -1)
    swift_once();
  v10 = (id)qword_254163058;
  sub_2314143EC();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BDF3FD0], v3);
  v11 = sub_2314143E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v23[0] = v11;
  v23[1] = 0;
  v24 = 1;
  v25 = v26;
  sub_2312D069C(0);
  sub_2312D0714();
  sub_23141435C();
  swift_release();
  v12 = sub_2314144B8();
  v14 = v13;
  v23[0] = *(_QWORD *)(v2 + 40);
  v15 = (uint64_t (*)(uint64_t))swift_allocObject();
  v16 = *(_OWORD *)(v2 + 16);
  *((_OWORD *)v15 + 1) = *(_OWORD *)v2;
  *((_OWORD *)v15 + 2) = v16;
  *((_OWORD *)v15 + 3) = *(_OWORD *)(v2 + 32);
  v17 = v22;
  sub_2312D0818((uint64_t)v8, v22);
  sub_2312D085C(0);
  v19 = (uint64_t (**)(uint64_t))(v17 + *(int *)(v18 + 36));
  *v19 = sub_2312D0810;
  v19[1] = v15;
  v19[2] = (uint64_t (*)(uint64_t))v12;
  v19[3] = v14;
  sub_231412A90();
  sub_231412A90();
  sub_2312D0F3C((uint64_t)v23);
  return sub_2312D0F64((uint64_t)v8);
}

uint64_t sub_2312CFFEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  v4 = sub_23141402C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8]();
  v10[1] = *(_QWORD *)(a2 + 40);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  sub_2312D0A90();
  sub_231411644();
  sub_2312D0AE4();
  sub_2312CCC24(&qword_255ECB100, (uint64_t (*)(uint64_t))sub_2312D0A90, MEMORY[0x24BEE12D8]);
  sub_2312D0D3C(&qword_255ECB110, (uint64_t (*)(uint64_t))sub_2312D0AE4, sub_2312D0DAC, (uint64_t (*)(void))sub_2312D0EDC);
  sub_2312CCC24(&qword_255ECB148, (uint64_t (*)(uint64_t))type metadata accessor for LocalizedImageView.TextConfiguration, (uint64_t)&unk_231417D68);
  sub_231412A90();
  return sub_23141447C();
}

double sub_2312D0194@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  double result;
  _OWORD v40[10];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t KeyPath;
  uint64_t v47;
  char v48;
  char v49;
  _BYTE v50[7];
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;

  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)&v51 = *(_QWORD *)a1;
  *((_QWORD *)&v51 + 1) = v4;
  sub_2312D104C();
  sub_231412A90();
  v5 = sub_2314142F0();
  v7 = v6;
  v9 = v8 & 1;
  v10 = sub_2314142CC();
  v12 = v11;
  v14 = v13 & 1;
  sub_2312D1090(v5, v7, v9);
  swift_bridgeObjectRelease();
  v15 = sub_2314142C0();
  v17 = v16;
  v19 = v18;
  v21 = v20 & 1;
  sub_2312D1090(v10, v12, v14);
  swift_bridgeObjectRelease();
  v22 = *(_QWORD *)(a1 + 64);
  v42 = v15;
  v43 = v17;
  v44 = v21;
  v45 = v19;
  KeyPath = swift_getKeyPath();
  v47 = v22;
  v48 = 0;
  sub_2312D0478(0.0, 0, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v40, 0.0, 1, 0.0, 1);
  sub_2312D1090(v15, v17, v21);
  swift_release();
  swift_bridgeObjectRelease();
  v58 = v40[7];
  v59 = v40[8];
  v60 = v40[9];
  v54 = v40[3];
  v55 = v40[4];
  v56 = v40[5];
  v57 = v40[6];
  v51 = v40[0];
  v52 = v40[1];
  v61 = v41;
  v53 = v40[2];
  sub_231414020();
  v24 = v23 * *(double *)(a1 + 32);
  sub_231414020();
  v26 = v25 * *(double *)(a1 + 40);
  sub_231414020();
  v28 = v27 * *(double *)(a1 + 48);
  sub_231414020();
  v30 = v29 * *(double *)(a1 + 56);
  LOBYTE(v22) = sub_231414278();
  v49 = 0;
  v31 = *(_QWORD *)(a1 + 72);
  v32 = swift_getKeyPath();
  *(_DWORD *)(a2 + 169) = *(_DWORD *)v50;
  *(_DWORD *)(a2 + 172) = *(_DWORD *)&v50[3];
  v33 = v49;
  v34 = v58;
  v35 = v60;
  *(_OWORD *)(a2 + 128) = v59;
  *(_OWORD *)(a2 + 144) = v35;
  *(_QWORD *)(a2 + 160) = v61;
  v36 = v54;
  v37 = v56;
  *(_OWORD *)(a2 + 64) = v55;
  *(_OWORD *)(a2 + 80) = v37;
  *(_OWORD *)(a2 + 96) = v57;
  *(_OWORD *)(a2 + 112) = v34;
  v38 = v52;
  *(_OWORD *)a2 = v51;
  *(_OWORD *)(a2 + 16) = v38;
  result = *(double *)&v53;
  *(_OWORD *)(a2 + 32) = v53;
  *(_OWORD *)(a2 + 48) = v36;
  *(_BYTE *)(a2 + 168) = v22;
  *(double *)(a2 + 176) = v24;
  *(double *)(a2 + 184) = v26;
  *(double *)(a2 + 192) = v28;
  *(double *)(a2 + 200) = v30;
  *(_BYTE *)(a2 + 208) = v33;
  *(_DWORD *)(a2 + 209) = v40[0];
  *(_DWORD *)(a2 + 212) = *(_DWORD *)((char *)v40 + 3);
  *(_QWORD *)(a2 + 216) = v32;
  *(_QWORD *)(a2 + 224) = v31;
  return result;
}

uint64_t sub_2312D0478@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  __int128 *v13;
  void *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  char v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  _BYTE v40[32];

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_231414980();
    v23 = (void *)sub_23141426C();
    sub_23141369C();

  }
  sub_2314140B0();
  v24 = v13[1];
  v37 = *v13;
  v38 = v24;
  sub_2312D1148((uint64_t)&v37, (uint64_t)v40);
  v26 = v13[1];
  v35 = v13[2];
  v25 = v35;
  *(_OWORD *)a9 = *v13;
  *(_OWORD *)(a9 + 16) = v26;
  *(_OWORD *)(a9 + 32) = v25;
  *(_OWORD *)(a9 + 152) = v34;
  *(_OWORD *)(a9 + 136) = v33;
  *(_OWORD *)(a9 + 120) = v32;
  *(_OWORD *)(a9 + 104) = v31;
  *(_OWORD *)(a9 + 56) = v28;
  v39 = *((_QWORD *)&v38 + 1);
  v36 = *((_BYTE *)v13 + 48);
  *(_BYTE *)(a9 + 48) = v36;
  *(_OWORD *)(a9 + 72) = v29;
  *(_OWORD *)(a9 + 88) = v30;
  sub_2312D1184((uint64_t)v40);
  sub_2312D0F3C((uint64_t)&v39);
  return sub_2312D11C4((uint64_t)&v35);
}

uint64_t sub_2312D0664()
{
  return sub_231414344();
}

void sub_2312D0680(uint64_t a1)
{
  sub_2312D0878(a1, &qword_255ECB070, sub_2312D069C, MEMORY[0x24BDF1088]);
}

void sub_2312D069C(uint64_t a1)
{
  sub_2312D0B7C(a1, &qword_255ECB078, (void (*)(uint64_t))sub_2312D06B8);
}

void sub_2312D06B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECB080)
  {
    v0 = sub_231414074();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECB080);
  }
}

uint64_t sub_2312D0714()
{
  return sub_2312D0D3C(&qword_255ECB088, (uint64_t (*)(uint64_t))sub_2312D069C, (uint64_t (*)(void))sub_2312D0738, (uint64_t (*)(void))sub_2312D0798);
}

unint64_t sub_2312D0738()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255ECB090;
  if (!qword_255ECB090)
  {
    sub_2312D06B8();
    v2[0] = MEMORY[0x24BDF40E8];
    v2[1] = MEMORY[0x24BDEEC40];
    result = MEMORY[0x2348DE248](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255ECB090);
  }
  return result;
}

unint64_t sub_2312D0798()
{
  unint64_t result;

  result = qword_255ECB098;
  if (!qword_255ECB098)
  {
    result = MEMORY[0x2348DE248](MEMORY[0x24BDEE7F0], MEMORY[0x24BDEE800]);
    atomic_store(result, (unint64_t *)&qword_255ECB098);
  }
  return result;
}

uint64_t sub_2312D07DC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2312D0810(uint64_t a1)
{
  uint64_t v1;

  return sub_2312CFFEC(a1, v1 + 16);
}

uint64_t sub_2312D0818(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312D0680(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_2312D085C(uint64_t a1)
{
  sub_2312D0878(a1, &qword_255ECB0A0, sub_2312D0680, (void (*)(uint64_t))sub_2312D08E0);
}

void sub_2312D0878(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4(255);
    v6 = sub_231414074();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_2312D08E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECB0A8)
  {
    sub_2312D0958();
    sub_2312CCC24(&qword_255ECB140, (uint64_t (*)(uint64_t))sub_2312D0958, MEMORY[0x24BDEC6F8]);
    v0 = sub_2314140BC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECB0A8);
  }
}

void sub_2312D0958()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECB0B0)
  {
    sub_2312D09B8();
    sub_2312D0CBC();
    v0 = sub_231414038();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECB0B0);
  }
}

void sub_2312D09B8()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_255ECB0B8)
  {
    sub_2312D0A90();
    sub_231411644();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
    sub_2312D0AE4();
    sub_2312CCC24(&qword_255ECB100, (uint64_t (*)(uint64_t))sub_2312D0A90, MEMORY[0x24BEE12D8]);
    sub_2312CCC24(&qword_255ECB068, v0, MEMORY[0x24BDCEA88]);
    v1 = sub_231414488();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_255ECB0B8);
  }
}

void sub_2312D0A90()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECB0C0)
  {
    type metadata accessor for LocalizedImageView.TextConfiguration();
    v0 = sub_2314147F4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECB0C0);
  }
}

void sub_2312D0AE4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECB0C8)
  {
    sub_2312D0B60(255);
    sub_2312CF374(255, (unint64_t *)&qword_255ECB0F8, MEMORY[0x24BEE50B0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF1008]);
    v0 = sub_231414074();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECB0C8);
  }
}

void sub_2312D0B60(uint64_t a1)
{
  sub_2312D0B7C(a1, &qword_255ECB0D0, sub_2312D0BD8);
}

void sub_2312D0B7C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_231414074();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_2312D0BD8(uint64_t a1)
{
  sub_2312D0B7C(a1, &qword_255ECB0D8, (void (*)(uint64_t))sub_2312D0BF4);
}

void sub_2312D0BF4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECB0E0)
  {
    sub_2312D0C50();
    v0 = sub_231414074();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECB0E0);
  }
}

void sub_2312D0C50()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECB0E8)
  {
    sub_2312CF374(255, &qword_255ECB0F0, MEMORY[0x24BEE1768], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    v0 = sub_231414260();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECB0E8);
  }
}

unint64_t sub_2312D0CBC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_255ECB108;
  if (!qword_255ECB108)
  {
    sub_2312D09B8();
    v2 = v1;
    v3 = sub_2312D0D3C(&qword_255ECB110, (uint64_t (*)(uint64_t))sub_2312D0AE4, sub_2312D0DAC, (uint64_t (*)(void))sub_2312D0EDC);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDF4A08], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_255ECB108);
  }
  return result;
}

uint64_t sub_2312D0D3C(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = a2(255);
    v9[0] = a3();
    v9[1] = a4();
    result = MEMORY[0x2348DE248](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2312D0DAC()
{
  return sub_2312D0DF4(&qword_255ECB118, (uint64_t (*)(uint64_t))sub_2312D0B60, sub_2312D0DD0, MEMORY[0x24BDECC60]);
}

uint64_t sub_2312D0DD0()
{
  return sub_2312D0DF4(&qword_255ECB120, (uint64_t (*)(uint64_t))sub_2312D0BD8, (uint64_t (*)(void))sub_2312D0E5C, MEMORY[0x24BDEDBB8]);
}

uint64_t sub_2312D0DF4(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = a2(255);
    v9[0] = a3();
    v9[1] = a4;
    result = MEMORY[0x2348DE248](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2312D0E5C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_255ECB128;
  if (!qword_255ECB128)
  {
    sub_2312D0BF4();
    v2 = v1;
    v3 = sub_2312CCC24(&qword_255ECB130, (uint64_t (*)(uint64_t))sub_2312D0C50, MEMORY[0x24BDF1028]);
    v4[0] = MEMORY[0x24BDF1F80];
    v4[1] = v3;
    result = MEMORY[0x2348DE248](MEMORY[0x24BDED308], v2, v4);
    atomic_store(result, (unint64_t *)&qword_255ECB128);
  }
  return result;
}

unint64_t sub_2312D0EDC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ECB138;
  if (!qword_255ECB138)
  {
    sub_2312CF374(255, (unint64_t *)&qword_255ECB0F8, MEMORY[0x24BEE50B0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF1008]);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDF1028], v1);
    atomic_store(result, (unint64_t *)&qword_255ECB138);
  }
  return result;
}

uint64_t sub_2312D0F3C(uint64_t a1)
{
  sub_231412A90();
  return a1;
}

uint64_t sub_2312D0F64(uint64_t a1)
{
  uint64_t v2;

  sub_2312D0680(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2312D0FA0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23141402C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

double sub_2312D1000@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_23141402C();
  return sub_2312D0194(a1, a2);
}

unint64_t sub_2312D104C()
{
  unint64_t result;

  result = qword_255ECB150;
  if (!qword_255ECB150)
  {
    result = MEMORY[0x2348DE248](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_255ECB150);
  }
  return result;
}

uint64_t sub_2312D1090(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release();
  else
    return swift_bridgeObjectRelease();
}

uint64_t sub_2312D10A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_231414164();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_2312D10D0()
{
  return sub_231414170();
}

uint64_t sub_2312D10FC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_231414110();
  *a1 = v3;
  return result;
}

uint64_t sub_2312D1124()
{
  return sub_23141411C();
}

uint64_t sub_2312D1148(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BDF1EB8] - 8) + 32))(a2, a1);
  return a2;
}

uint64_t sub_2312D1184(uint64_t a1)
{
  sub_2312D11B4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

uint64_t sub_2312D11B4(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain();
  else
    return sub_231412A90();
}

uint64_t sub_2312D11C4(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t destroy for LocalizedImageView.ImageConfiguration()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LocalizedImageView.ImageConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  sub_231412A90();
  sub_231412A90();
  return a1;
}

uint64_t assignWithCopy for LocalizedImageView.ImageConfiguration(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_231412A90();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  sub_231412A90();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for LocalizedImageView.ImageConfiguration(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for LocalizedImageView.ImageConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalizedImageView.ImageConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocalizedImageView.ImageConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizedImageView.ImageConfiguration()
{
  return &type metadata for LocalizedImageView.ImageConfiguration;
}

uint64_t sub_2312D13CC()
{
  return sub_2312D0D3C(&qword_255ECB158, (uint64_t (*)(uint64_t))sub_2312D085C, sub_2312D1400, sub_2312D1440);
}

uint64_t sub_2312D1400()
{
  return sub_2312D0D3C(&qword_255ECB160, (uint64_t (*)(uint64_t))sub_2312D0680, sub_2312D0714, sub_2312D1424);
}

uint64_t sub_2312D1424()
{
  return sub_2312CCC24(&qword_255ECB168, MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
}

uint64_t sub_2312D1440()
{
  return sub_2312CCC24(&qword_255ECB170, (uint64_t (*)(uint64_t))sub_2312D08E0, MEMORY[0x24BDEDC10]);
}

uint64_t sub_2312D1460()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_231412A90();
  return v1;
}

uint64_t sub_2312D148C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_231412A90();
  return v1;
}

uint64_t sub_2312D14B8()
{
  uint64_t result;
  uint64_t v1;

  type metadata accessor for CenteredLabelWithSpinnerCell();
  sub_2312D1D3C();
  result = sub_2314146E0();
  qword_255ED2B08 = result;
  unk_255ED2B10 = v1;
  return result;
}

uint64_t sub_2312D14F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  _QWORD v11[4];
  unint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[24];
  uint64_t v18;

  v3 = v1 + OBJC_IVAR____TtC5Heart28CenteredLabelWithSpinnerCell_item;
  swift_beginAccess();
  sub_2312D1E24(a1, v3);
  swift_endAccess();
  sub_2312D1C94(v3, (uint64_t)v17);
  if (v18)
  {
    sub_2312D1CE8();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v4 = v12;
      v5 = v13;
      v10 = v14;
      v6 = v15;
      v7 = v16;
      v11[3] = &type metadata for CenteredLabelWithSpinnerContentConfiguration;
      v12 = sub_2312D1DBC();
      v8 = swift_allocObject();
      v11[0] = v8;
      *(_QWORD *)(v8 + 16) = v4;
      *(_QWORD *)(v8 + 24) = v5;
      *(_OWORD *)(v8 + 32) = v10;
      *(_QWORD *)(v8 + 48) = v6;
      *(_QWORD *)(v8 + 56) = v7;
      sub_231412A90();
      MEMORY[0x2348DD510](v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_2312D1D70((uint64_t)v17);
  }
  return sub_2312D1D70(a1);
}

void (*sub_2312D1634(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC5Heart28CenteredLabelWithSpinnerCell_item;
  v3[15] = v1;
  v3[16] = v4;
  swift_beginAccess();
  return sub_2312D168C;
}

void sub_2312D168C(uint64_t *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  _QWORD v10[5];

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    sub_2312D1C94(*(_QWORD *)(v3 + 120) + *(_QWORD *)(v3 + 128), v3 + 80);
    if (*(_QWORD *)(v3 + 104))
    {
      sub_2312D1CE8();
      if ((swift_dynamicCast() & 1) != 0)
      {
        v4 = *(_QWORD *)(v3 + 32);
        v5 = *(_QWORD *)(v3 + 40);
        v9 = *(_OWORD *)(v3 + 48);
        v6 = *(_QWORD *)(v3 + 64);
        v7 = *(_QWORD *)(v3 + 72);
        v10[3] = &type metadata for CenteredLabelWithSpinnerContentConfiguration;
        v10[4] = sub_2312D1DBC();
        v8 = swift_allocObject();
        v10[0] = v8;
        *(_QWORD *)(v8 + 16) = v4;
        *(_QWORD *)(v8 + 24) = v5;
        *(_OWORD *)(v8 + 32) = v9;
        *(_QWORD *)(v8 + 48) = v6;
        *(_QWORD *)(v8 + 56) = v7;
        sub_231412A90();
        MEMORY[0x2348DD510](v10);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      sub_2312D1D70(v3 + 80);
    }
  }
  free((void *)v3);
}

id sub_2312D1B14()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CenteredLabelWithSpinnerCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for CenteredLabelWithSpinnerCell()
{
  return objc_opt_self();
}

uint64_t sub_2312D1B74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC5Heart28CenteredLabelWithSpinnerCell_item;
  swift_beginAccess();
  return sub_2312D1C94(v3, a1);
}

void (*sub_2312D1BC8(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_2312D1634(v2);
  return sub_2312D1C0C;
}

void sub_2312D1C0C(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t sub_2312D1C38()
{
  uint64_t v0;

  if (qword_255ECA960 != -1)
    swift_once();
  v0 = qword_255ED2B08;
  sub_231412A90();
  return v0;
}

uint64_t sub_2312D1C94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312D1E78(0, (unint64_t *)&qword_255ECB1A8, (void (*)(uint64_t))sub_2312D1CE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_2312D1CE8()
{
  unint64_t result;

  result = qword_255ECF1F0;
  if (!qword_255ECF1F0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255ECF1F0);
  }
  return result;
}

unint64_t sub_2312D1D3C()
{
  unint64_t result;

  result = qword_255ECB1B0;
  if (!qword_255ECB1B0)
  {
    type metadata accessor for CenteredLabelWithSpinnerCell();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255ECB1B0);
  }
  return result;
}

uint64_t sub_2312D1D70(uint64_t a1)
{
  uint64_t v2;

  sub_2312D1E78(0, (unint64_t *)&qword_255ECB1A8, (void (*)(uint64_t))sub_2312D1CE8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2312D1DBC()
{
  unint64_t result;

  result = qword_255ECB1B8;
  if (!qword_255ECB1B8)
  {
    result = MEMORY[0x2348DE248](&unk_231418448, &type metadata for CenteredLabelWithSpinnerContentConfiguration);
    atomic_store(result, (unint64_t *)&qword_255ECB1B8);
  }
  return result;
}

uint64_t sub_2312D1E00()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2312D1E24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312D1E78(0, (unint64_t *)&qword_255ECB1A8, (void (*)(uint64_t))sub_2312D1CE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_2312D1E78(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_231414CB0();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t destroy for CenteredLabelWithSpinnerItem()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CenteredLabelWithSpinnerItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  sub_231412A90();
  sub_231412A90();
  sub_231412A90();
  return a1;
}

_QWORD *assignWithCopy for CenteredLabelWithSpinnerItem(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_231412A90();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_231412A90();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_231412A90();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  return a1;
}

__n128 initializeWithTake for CenteredLabelWithSpinnerItem(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for CenteredLabelWithSpinnerItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  return a1;
}

uint64_t getEnumTagSinglePayload for CenteredLabelWithSpinnerItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CenteredLabelWithSpinnerItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CenteredLabelWithSpinnerItem()
{
  return &type metadata for CenteredLabelWithSpinnerItem;
}

id sub_2312D2120()
{
  char *v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  objc_super v9;

  *(_QWORD *)&v0[OBJC_IVAR____TtC5Heart42CardioFitnessOnboardingStartViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  type metadata accessor for HeartHealthPluginDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_231411374();

  v4 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  sub_231411374();

  v6 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for CardioFitnessOnboardingStartViewController();
  v7 = objc_msgSendSuper2(&v9, sel_initWithTitle_detailText_icon_contentLayout_, v4, v6, 0, 4, 0xE000000000000000);

  return v7;
}

void sub_2312D22DC()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  objc_super v10;

  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for CardioFitnessOnboardingStartViewController();
  objc_msgSendSuper2(&v10, sel_viewDidLoad);
  v1 = sub_2312D2688();
  v2 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v2, sel_addSubview_, v1);

  v3 = objc_msgSend(v0, sel_contentView);
  v4 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v4);

  v5 = objc_msgSend(v1, sel_centerXAnchor);
  v6 = objc_msgSend(v0, sel_contentView);
  v7 = objc_msgSend(v6, sel_centerXAnchor);

  v8 = objc_msgSend(v5, sel_constraintEqualToAnchor_, v7);
  objc_msgSend(v8, sel_setActive_, 1);

  v9 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v1, sel_hk_alignVerticalConstraintsWithView_margin_, v9, 0.0);

  objc_msgSend(v0, sel_hxui_addCancelButton);
}

id sub_2312D25E8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CardioFitnessOnboardingStartViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for CardioFitnessOnboardingStartViewController()
{
  return objc_opt_self();
}

uint64_t sub_2312D2648()
{
  return 0;
}

uint64_t sub_2312D2650(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Heart42CardioFitnessOnboardingStartViewController_delegate + 8) = a2;
  swift_unknownObjectWeakAssign();
  return sub_2314130CC();
}

id sub_2312D2688()
{
  id v0;
  id v1;
  id v2;
  void *v3;
  void *v4;
  id v5;

  v0 = objc_msgSend((id)objc_opt_self(), sel_hrui_heartRateIconImage);
  if (qword_255ECAAE0 != -1)
    swift_once();
  sub_231411374();
  sub_231411374();
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 1.0, 0.231372549, 0.188235294, 1.0, 0xE000000000000000);
  v2 = objc_allocWithZone(MEMORY[0x24BE4A868]);
  v3 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v4 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v2, sel_initWithIconImage_titleText_detailText_tintColor_, v0, v3, v4, v1);

  return v5;
}

uint64_t sub_2312D2854(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

id sub_2312D2878(uint64_t a1)
{
  id *v1;

  return objc_msgSend(*v1, sel_executeQuery_, a1);
}

uint64_t sub_2312D288C()
{
  uint64_t result;

  sub_2312D3C68(0, (unint64_t *)&qword_25415DEC8);
  result = MEMORY[0x2348DD384]((id)*MEMORY[0x24BDD36A0]);
  qword_255ED2B18 = result;
  return result;
}

uint64_t sub_2312D28DC@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  if (v3)
  {
    v4 = objc_msgSend(v3, sel_startDate);
    sub_2314115D8();

    v5 = sub_231411608();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a2;
    v8 = 0;
  }
  else
  {
    v5 = sub_231411608();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a2;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

uint64_t sub_2312D2960(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];

  sub_2312D375C();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v3);
  v7 = &v13[-v6];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v9 = result;
    v10 = sub_231411608();
    v11 = *(_QWORD *)(v10 - 8);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v7, a1, v10);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    sub_2312D38B4((uint64_t)v7, (uint64_t)v5);
    v12 = v9 + OBJC_IVAR____TtC5Heart46CardioFitnessOnboardingMostRecentValueProvider_queue_mostRecentSampleDate;
    swift_beginAccess();
    sub_2312D38F8((uint64_t)v5, v12);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t sub_2312D2A94()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OBJC_IVAR____TtC5Heart46CardioFitnessOnboardingMostRecentValueProvider____lazy_storage___lastSampleQueryPublisher;
  if (*(uint64_t *)((char *)v0
                  + OBJC_IVAR____TtC5Heart46CardioFitnessOnboardingMostRecentValueProvider____lazy_storage___lastSampleQueryPublisher))
  {
    v2 = *(uint64_t *)((char *)v0
                    + OBJC_IVAR____TtC5Heart46CardioFitnessOnboardingMostRecentValueProvider____lazy_storage___lastSampleQueryPublisher);
  }
  else
  {
    v2 = sub_2312D2AFC((uint64_t)v0, *v0);
    *(uint64_t *)((char *)v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_2312D2AFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  sub_2312D3968();
  swift_allocObject();
  swift_retain();
  sub_231413DF8();
  sub_2312D3A30();
  v5 = sub_231413E7C();
  swift_release();
  return v5;
}

void sub_2312D2BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  _QWORD *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[6];

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = qword_255ECA968;
  swift_retain();
  if (v9 != -1)
    swift_once();
  v10 = (void *)qword_255ED2B18;
  sub_2312D3AD4();
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_231417F90;
  sub_2314146BC();
  v12 = objc_allocWithZone(MEMORY[0x24BDD17C0]);
  v13 = v10;
  v14 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v12, sel_initWithKey_ascending_, v14, 0);

  *(_QWORD *)(v11 + 32) = v15;
  sub_2314147B8();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = sub_2312D3A9C;
  v16[3] = v8;
  v16[4] = a4;
  v17 = objc_allocWithZone(MEMORY[0x24BDD3F00]);
  sub_2312D3C68(0, (unint64_t *)&qword_255ECE920);
  v18 = (void *)sub_231414788();
  swift_bridgeObjectRelease();
  v24[4] = sub_2312D3B50;
  v24[5] = v16;
  v24[0] = MEMORY[0x24BDAC760];
  v24[1] = 1107296256;
  v24[2] = sub_2312D3B5C;
  v24[3] = &unk_25001FE28;
  v19 = _Block_copy(v24);
  v20 = objc_msgSend(v17, sel_initWithSampleType_predicate_limit_sortDescriptors_resultsHandler_, v13, 0, 1, v18, v19);

  _Block_release(v19);
  swift_release();
  v21 = (_QWORD *)(a3 + OBJC_IVAR____TtC5Heart46CardioFitnessOnboardingMostRecentValueProvider_queryExecutor);
  v22 = *(_QWORD *)(a3 + OBJC_IVAR____TtC5Heart46CardioFitnessOnboardingMostRecentValueProvider_queryExecutor + 24);
  v23 = v21[4];
  sub_2312CEA5C(v21, v22);
  (*(void (**)(id, uint64_t, uint64_t))(v23 + 8))(v20, v22, v23);

}

void sub_2312D2E10(int a1, unint64_t a2, id a3, void (*a4)(void *, _QWORD))
{
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  uint64_t v31;

  if (a3)
  {
    v6 = a3;
    if (qword_25415DF98 != -1)
      swift_once();
    v7 = sub_231413780();
    sub_2312CE3B8(v7, (uint64_t)qword_254162FF0);
    v8 = a3;
    v9 = a3;
    v10 = sub_231413768();
    v11 = sub_231414974();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc();
      v13 = swift_slowAlloc();
      v31 = v13;
      *(_DWORD *)v12 = 136315394;
      v14 = sub_2314151A8();
      sub_23133180C(v14, v15, &v31);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2080;
      v16 = a3;
      sub_2312D3C14();
      v17 = sub_2314146E0();
      sub_23133180C(v17, v18, &v31);
      sub_231414CBC();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_2312C8000, v10, v11, "[%s] Error encountered when retrieving cardio fitness samples: %s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v13, -1, -1);
      MEMORY[0x2348DE308](v12, -1, -1);

LABEL_20:
      a4(0, 0);
      return;
    }

LABEL_19:
    goto LABEL_20;
  }
  if (!a2 || (v19 = sub_2312D324C(a2)) == 0)
  {
    if (qword_25415DF98 != -1)
      swift_once();
    v24 = sub_231413780();
    sub_2312CE3B8(v24, (uint64_t)qword_254162FF0);
    v10 = sub_231413768();
    v25 = sub_231414980();
    if (os_log_type_enabled(v10, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      v31 = v27;
      *(_DWORD *)v26 = 136315138;
      v28 = sub_2314151A8();
      sub_23133180C(v28, v29, &v31);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v10, v25, "[%s] Samples retrieved not quantity samples", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v27, -1, -1);
      MEMORY[0x2348DE308](v26, -1, -1);
    }
    goto LABEL_19;
  }
  v20 = v19;
  v21 = v19 & 0xFFFFFFFFFFFFFF8;
  if (!(v19 >> 62))
  {
    if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_10;
LABEL_22:
    swift_bridgeObjectRelease();
    v23 = 0;
    goto LABEL_23;
  }
  if (!sub_231414F08())
    goto LABEL_22;
LABEL_10:
  if ((v20 & 0xC000000000000001) != 0)
  {
    v22 = (id)MEMORY[0x2348DD81C](0, v20);
    goto LABEL_13;
  }
  if (*(_QWORD *)(v21 + 16))
  {
    v22 = *(id *)(v20 + 32);
LABEL_13:
    v23 = v22;
    swift_bridgeObjectRelease();
LABEL_23:
    v30 = v23;
    a4(v23, 0);

    return;
  }
  __break(1u);
}

uint64_t sub_2312D324C(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v12;

  v1 = a1;
  v12 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_18;
  sub_231414EA8();
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (i = 0; ; ++i)
      {
        MEMORY[0x2348DD81C](i, v1);
        v4 = i + 1;
        if (__OFADD__(i, 1))
          break;
        objc_opt_self();
        if (!swift_dynamicCastObjCClass())
        {
          sub_2314130CC();
          goto LABEL_15;
        }
        sub_231414E90();
        sub_231414EB4();
        sub_231414EC0();
        sub_231414E9C();
        if (v4 == v2)
          return v12;
      }
      __break(1u);
    }
    else
    {
      v5 = 0;
      v6 = v1 + 32;
      while (1)
      {
        v7 = v5 + 1;
        if (__OFADD__(v5, 1))
          break;
        v8 = *(void **)(v6 + 8 * v5);
        objc_opt_self();
        v9 = swift_dynamicCastObjCClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        v1 = v9;
        v10 = v8;
        sub_231414E90();
        sub_231414EB4();
        sub_231414EC0();
        sub_231414E9C();
        ++v5;
        if (v7 == v2)
          return v12;
      }
    }
    __break(1u);
LABEL_18:
    sub_231412A90();
    sub_231414F08();
    swift_bridgeObjectRelease();
    sub_231414EA8();
    sub_231412A90();
    v2 = sub_231414F08();
    swift_bridgeObjectRelease();
  }
  return v12;
}

uint64_t sub_2312D3430(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t j;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = a1;
  v9 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_18;
  sub_231414EA8();
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (i = 0; ; ++i)
      {
        MEMORY[0x2348DD81C](i, v1);
        v4 = i + 1;
        if (__OFADD__(i, 1))
          break;
        objc_opt_self();
        if (!swift_dynamicCastObjCClass())
        {
          sub_2314130CC();
          goto LABEL_15;
        }
        sub_231414E90();
        sub_231414EB4();
        sub_231414EC0();
        sub_231414E9C();
        if (v4 == v2)
          return v9;
      }
      __break(1u);
    }
    else
    {
      for (j = 0; ; ++j)
      {
        v6 = j + 1;
        if (__OFADD__(j, 1))
          break;
        objc_opt_self();
        v7 = swift_dynamicCastObjCClass();
        if (!v7)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        v1 = v7;
        swift_unknownObjectRetain();
        sub_231414E90();
        sub_231414EB4();
        sub_231414EC0();
        sub_231414E9C();
        if (v6 == v2)
          return v9;
      }
    }
    __break(1u);
LABEL_18:
    sub_231412A90();
    sub_231414F08();
    swift_bridgeObjectRelease();
    sub_231414EA8();
    sub_231412A90();
    v2 = sub_231414F08();
    swift_bridgeObjectRelease();
  }
  return v9;
}

uint64_t sub_2312D3618()
{
  uint64_t v0;

  sub_2312D3CA0(v0 + OBJC_IVAR____TtC5Heart46CardioFitnessOnboardingMostRecentValueProvider_queue_mostRecentSampleDate);
  swift_release();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + OBJC_IVAR____TtC5Heart46CardioFitnessOnboardingMostRecentValueProvider_queryExecutor);

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2312D3688()
{
  return type metadata accessor for CardioFitnessOnboardingMostRecentValueProvider();
}

uint64_t type metadata accessor for CardioFitnessOnboardingMostRecentValueProvider()
{
  uint64_t result;

  result = qword_255ECB248;
  if (!qword_255ECB248)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2312D36CC()
{
  unint64_t v0;

  sub_2312D375C();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_2312D375C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415D500)
  {
    sub_231411608();
    v0 = sub_231414CB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415D500);
  }
}

uint64_t sub_2312D37B0()
{
  sub_2312D375C();
  return sub_231414AA0();
}

uint64_t sub_2312D3810@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC5Heart46CardioFitnessOnboardingMostRecentValueProvider_queue_mostRecentSampleDate;
  swift_beginAccess();
  return sub_2312D3870(v3, a1);
}

uint64_t sub_2312D3870(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312D375C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2312D38B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312D375C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2312D38F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312D375C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2312D393C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_2312D3960(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_2312D2BAC(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

void sub_2312D3968()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECB340)
  {
    sub_2312D39CC();
    v0 = sub_231413DEC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECB340);
  }
}

void sub_2312D39CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECFA30)
  {
    sub_2312D3C68(255, (unint64_t *)&qword_255ECB348);
    v0 = sub_231414CB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECFA30);
  }
}

unint64_t sub_2312D3A30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ECB350;
  if (!qword_255ECB350)
  {
    sub_2312D3968();
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB9E58], v1);
    atomic_store(result, (unint64_t *)&qword_255ECB350);
  }
  return result;
}

uint64_t sub_2312D3A78()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2312D3A9C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t *);
  uint64_t v5;
  char v6;

  v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  v5 = a1;
  v6 = a2 & 1;
  return v3(&v5);
}

void sub_2312D3AD4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415BD40)
  {
    v0 = sub_23141504C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415BD40);
  }
}

uint64_t sub_2312D3B2C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_2312D3B50(int a1, unint64_t a2, void *a3)
{
  uint64_t v3;

  sub_2312D2E10(a1, a2, a3, *(void (**)(void *, _QWORD))(v3 + 16));
}

uint64_t sub_2312D3B5C(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  void (*v7)(id, uint64_t, void *);
  id v8;
  id v9;

  v5 = a3;
  v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_2312D3C68(0, &qword_255ECFBE0);
    v5 = sub_2314147A0();
  }
  swift_retain();
  v8 = a2;
  v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2312D3BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2312D3C0C()
{
  return swift_release();
}

unint64_t sub_2312D3C14()
{
  unint64_t result;

  result = qword_25415DF60;
  if (!qword_25415DF60)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_25415DF60);
  }
  return result;
}

uint64_t sub_2312D3C68(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_2312D3CA0(uint64_t a1)
{
  uint64_t v2;

  sub_2312D375C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for AFibBurdenFeatureStatus()
{
  return &type metadata for AFibBurdenFeatureStatus;
}

uint64_t sub_2312D3CEC()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255ECAAD8 != -1)
    swift_once();
  result = sub_231411374();
  qword_255ECB368 = result;
  unk_255ECB370 = v1;
  return result;
}

uint64_t sub_2312D3D78()
{
  unint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  sub_2312D6CEC(0, (unint64_t *)&qword_25415BD40);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_231417F90;
  sub_2312D6D30();
  *(_QWORD *)(inited + 32) = MEMORY[0x2348DD384]((id)*MEMORY[0x24BDD3378]);
  sub_2314147B8();
  if (inited >> 62)
  {
    sub_231412A90();
    v3 = sub_231414F08();
    swift_bridgeObjectRelease();
    if (v3)
      goto LABEL_3;
LABEL_5:
    v2 = MEMORY[0x24BEE4B08];
    goto LABEL_6;
  }
  if (!*(_QWORD *)((inited & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_5;
LABEL_3:
  sub_2312FBF48(inited);
  v2 = v1;
LABEL_6:
  result = swift_bridgeObjectRelease();
  qword_255ECB378 = v2;
  return result;
}

uint64_t sub_2312D3E68()
{
  uint64_t v0;
  id v1;

  v0 = sub_231411D70();
  sub_2312D6D6C(v0, qword_255ECB380);
  sub_2312CE3B8(v0, (uint64_t)qword_255ECB380);
  if (qword_25415E610 != -1)
    swift_once();
  v1 = (id)qword_254163058;
  return sub_231411D64();
}

uint64_t sub_2312D3F04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, _QWORD *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void *v30;
  uint64_t v31;
  void *v32;
  unsigned __int8 v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *);
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  void *v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  unsigned __int8 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  void *v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  unsigned __int8 v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  id v65;
  char *v66;
  uint64_t v67;
  uint64_t inited;
  void *v69;
  id v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  void *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD v83[2];
  void (*v84)(char *, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;

  v95 = a4;
  v104 = a2;
  v105 = a5;
  v92 = _s13ActionHandlerC8UserDataV9TapActionOMa(0);
  MEMORY[0x24BDAC7A8](v92);
  v93 = (uint64_t)v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6DD8(0, &qword_25415C3D0, (uint64_t (*)(uint64_t))_s15SettingsContentVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v87 = (uint64_t)v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v88 = (uint64_t)v83 - v11;
  v96 = _s15SettingsContentVMa();
  v94 = *(_QWORD *)(v96 - 8);
  v12 = MEMORY[0x24BDAC7A8](v96);
  v85 = (uint64_t)v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v86 = (uint64_t)v83 - v14;
  v91 = sub_23141351C();
  v90 = *(_QWORD *)(v91 - 8);
  MEMORY[0x24BDAC7A8](v91);
  v89 = (char *)v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_231413558();
  v101 = *(_QWORD *)(v103 - 8);
  MEMORY[0x24BDAC7A8](v103);
  v102 = (char *)v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_231413540();
  v99 = *(_QWORD *)(v17 - 8);
  v100 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v97 = (char *)v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23141357C();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(_QWORD *)(v20 + 64);
  v22 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)v83 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)v83 - v24;
  sub_2312D4A68();
  v106 = v26;
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)v83 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = (void *)sub_2314118FC();
  v98 = a1;
  LOBYTE(a1) = sub_2314118F0();

  if ((a1 & 1) == 0)
  {
    if (qword_25415B6D8 == -1)
      goto LABEL_15;
    goto LABEL_30;
  }
  if ((a3 & 1) == 0)
  {
    if (qword_25415B6D8 == -1)
      goto LABEL_15;
    goto LABEL_30;
  }
  v31 = *MEMORY[0x24BDD2CA8];
  v32 = (void *)sub_231413588();
  v33 = objc_msgSend(v32, sel_isRequirementSatisfiedWithIdentifier_, *MEMORY[0x24BDD2D20]);

  if ((v33 & 1) == 0)
  {
    if (qword_25415B6D8 == -1)
    {
LABEL_15:
      sub_2312CE3B8(v106, (uint64_t)qword_254162EE8);
      v107 = 0;
      sub_231413594();
      goto LABEL_16;
    }
LABEL_30:
    swift_once();
    goto LABEL_15;
  }
  v83[1] = v31;
  if (qword_25415B6D8 != -1)
    swift_once();
  v34 = v106;
  v35 = sub_2312CE3B8(v106, (uint64_t)qword_254162EE8);
  v36 = *(void (**)(char *))(v27 + 16);
  v83[0] = v35;
  v36(v29);
  v84 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v37 = v104;
  v84(v25, v104, v19);
  v38 = (*(unsigned __int8 *)(v20 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v39 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v20 + 32))(v39 + v38, v25, v19);
  v107 = 0;
  sub_231413594();
  swift_release();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v34);
  v84(v23, v37, v19);
  v40 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v23, v19);
  if (v40 == *MEMORY[0x24BE45748])
  {
    (*(void (**)(char *, uint64_t))(v20 + 96))(v23, v19);
    v42 = v99;
    v41 = v100;
    v43 = v97;
    (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v97, v23, v100);
    v44 = v102;
    sub_231413510();
    v45 = (void *)sub_231413564();
    v46 = *(void (**)(char *, uint64_t))(v101 + 8);
    v47 = v103;
    v46(v44, v103);
    v48 = objc_msgSend(v45, sel_areAllRequirementsSatisfied);

    if ((v48 & 1) != 0)
    {
      v49 = v88;
      sub_231396630(v104, v95, v88);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v94 + 48))(v49, 1, v96) == 1)
      {
        sub_2312D6B98(v49, &qword_25415C3D0, (uint64_t (*)(uint64_t))_s15SettingsContentVMa);
        v107 = 0;
        sub_2314135B8();
        (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v41);
LABEL_16:
        v50 = sub_2314119B0();
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v105, 1, 1, v50);
      }
      v74 = v86;
      sub_2312D6BDC(v49, v86);
      v107 = 0;
      sub_231413594();
      v75 = v93;
      sub_2312D6C20(v74, v93, (uint64_t (*)(_QWORD))_s15SettingsContentVMa);
      swift_storeEnumTagMultiPayload();
      sub_2312D4D30(v98, v75, v105);
      sub_2312CEBD4(v75, _s13ActionHandlerC8UserDataV9TapActionOMa);
      sub_2312CEBD4(v74, (uint64_t (*)(_QWORD))_s15SettingsContentVMa);
      return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v43, v41);
    }
    else
    {
      sub_231413510();
      v64 = (void *)sub_231413564();
      v46(v44, v47);
      v65 = objc_msgSend(v64, sel_unsatisfiedRequirementIdentifiers);

      type metadata accessor for HKFeatureAvailabilityRequirementIdentifier(0);
      v66 = v44;
      v67 = sub_2314147A0();

      sub_2312D6DD8(0, (unint64_t *)&qword_255ECB398, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureAvailabilityRequirementIdentifier, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_231416A30;
      v69 = (void *)*MEMORY[0x24BDD2D10];
      *(_QWORD *)(inited + 32) = *MEMORY[0x24BDD2D10];
      v70 = v69;
      v71 = sub_2313971B8(v67, inited);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_bridgeObjectRelease();
      if ((v71 & 1) != 0)
      {
        v72 = v87;
        sub_231396630(v104, v95, v87);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v94 + 48))(v72, 1, v96) == 1)
        {
          sub_2312D6B98(v72, &qword_25415C3D0, (uint64_t (*)(uint64_t))_s15SettingsContentVMa);
          v107 = 0;
          sub_2314135B8();
          (*(void (**)(char *, uint64_t))(v99 + 8))(v43, v100);
          goto LABEL_16;
        }
        v78 = v85;
        sub_2312D6BDC(v72, v85);
        v107 = 0;
        sub_231413594();
        v79 = (char *)sub_231411DAC();
        v81 = v80;
        v82 = v93;
        sub_2312D6C20(v78, v93, (uint64_t (*)(_QWORD))_s15SettingsContentVMa);
        swift_storeEnumTagMultiPayload();
        sub_2312D4F88(v98, v79, v81, 1, v82, v105);
        swift_bridgeObjectRelease();
        sub_2312CEBD4(v82, _s13ActionHandlerC8UserDataV9TapActionOMa);
        sub_2312CEBD4(v78, (uint64_t (*)(_QWORD))_s15SettingsContentVMa);
      }
      else
      {
        sub_231413510();
        v77 = (void *)sub_231413564();
        v46(v66, v47);
        sub_2312D51EC(v77, v98, 1, v105);

      }
      return (*(uint64_t (**)(char *, uint64_t))(v99 + 8))(v43, v100);
    }
  }
  else if (v40 == *MEMORY[0x24BE45700])
  {
    (*(void (**)(char *, uint64_t))(v20 + 96))(v23, v19);
    v52 = v90;
    v53 = v89;
    v54 = v91;
    (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v89, v23, v91);
    v55 = v102;
    sub_231413510();
    v56 = (void *)sub_231413564();
    v57 = *(void (**)(char *, uint64_t))(v101 + 8);
    v58 = v103;
    v57(v55, v103);
    v59 = objc_msgSend(v56, sel_areAllRequirementsSatisfied);

    if ((v59 & 1) != 0)
    {
      v107 = 0;
      sub_231413594();
      v60 = (char *)sub_231411DA0();
      v62 = v61;
      v63 = v93;
      swift_storeEnumTagMultiPayload();
      sub_2312D4F88(v98, v60, v62, 0, v63, v105);
      swift_bridgeObjectRelease();
      sub_2312CEBD4(v63, _s13ActionHandlerC8UserDataV9TapActionOMa);
    }
    else
    {
      sub_231413510();
      v76 = (void *)sub_231413564();
      v57(v55, v58);
      sub_2312D51EC(v76, v98, 0, v105);

    }
    return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v53, v54);
  }
  else
  {
    v73 = sub_2314119B0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v105, 1, 1, v73);
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v23, v19);
  }
}

void sub_2312D4A68()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415C148)
  {
    type metadata accessor for HKHRAFibBurdenLoggingCategory(255);
    sub_2312CCC24(&qword_25415D110, (uint64_t (*)(uint64_t))type metadata accessor for HKHRAFibBurdenLoggingCategory, (uint64_t)&protocol conformance descriptor for HKHRAFibBurdenLoggingCategory);
    sub_2312CCC24(&qword_25415D118, (uint64_t (*)(uint64_t))type metadata accessor for HKHRAFibBurdenLoggingCategory, (uint64_t)&protocol conformance descriptor for HKHRAFibBurdenLoggingCategory);
    sub_2312CCC24(&qword_25415BBB0, (uint64_t (*)(uint64_t))type metadata accessor for HKHRAFibBurdenLoggingCategory, (uint64_t)&protocol conformance descriptor for HKHRAFibBurdenLoggingCategory);
    sub_2312CCC24((unint64_t *)&unk_25415BB80, (uint64_t (*)(uint64_t))type metadata accessor for HKHRAFibBurdenLoggingCategory, (uint64_t)&unk_231416AF0);
    sub_2312CCC24((unint64_t *)&unk_25415BBA0, (uint64_t (*)(uint64_t))type metadata accessor for HKHRAFibBurdenLoggingCategory, (uint64_t)&unk_231416B58);
    v0 = sub_2314135D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415C148);
  }
}

uint64_t sub_2312D4B7C()
{
  return sub_2312D5FA4();
}

uint64_t sub_2312D4B9C()
{
  return sub_2312D5FA4();
}

uint64_t sub_2312D4BBC()
{
  return sub_2312D5FA4();
}

uint64_t sub_2312D4BDC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD v7[2];

  v2 = sub_23141357C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  sub_231414E18();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  sub_2314146E0();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return v7[0];
}

uint64_t sub_2312D4CF0()
{
  return sub_2312D5FA4();
}

uint64_t sub_2312D4D10()
{
  return sub_2312D5FA4();
}

uint64_t sub_2312D4D30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v17 = a1;
  v18 = a2;
  v16 = a3;
  v3 = sub_231411D1C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BE41298], v3);
  sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_231418090;
  if (qword_255ECAAD8 != -1)
    swift_once();
  *(_QWORD *)(v7 + 32) = sub_231411374();
  *(_QWORD *)(v7 + 40) = v8;
  v9 = sub_231411374();
  v11 = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v7 + 48) = v9;
  *(_QWORD *)(v7 + 56) = v11;
  v12 = sub_231411DD0();
  sub_2312D6068(v17, (uint64_t)v6, 1, v18, 0, 0, v7, v12, v16, v13, 0, 0, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_2312D4F68()
{
  return sub_2312D5FA4();
}

uint64_t sub_2312D4F88@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;

  v22 = a5;
  v23 = a3;
  v20 = a1;
  v21 = a2;
  v8 = sub_231411D1C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BE412A0], v8);
  if ((a4 & 1) != 0)
  {
    if (qword_255ECAAD8 != -1)
      swift_once();
  }
  else if (qword_255ECAAD8 != -1)
  {
    swift_once();
  }
  v12 = sub_231411374();
  v14 = v13;
  sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_231418090;
  *(_QWORD *)(v15 + 32) = v12;
  *(_QWORD *)(v15 + 40) = v14;
  if (qword_255ECAAD8 != -1)
    swift_once();
  *(_QWORD *)(v15 + 48) = sub_231411374();
  *(_QWORD *)(v15 + 56) = v16;
  v17 = sub_231411DD0();
  sub_2312D6068(v20, (uint64_t)v11, a4 & 1, v22, v21, v23, v15, v17, a6, v18, 0, 0, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_2312D51EC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  char v22;
  id v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, _QWORD, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  id v40;
  char v41;
  id v42;
  char v43;
  id v44;
  char v45;
  id v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, _QWORD, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  v97 = a3;
  v98 = a4;
  v99 = a2;
  v100 = sub_231411D1C();
  v5 = *(_QWORD *)(v100 - 8);
  MEMORY[0x24BDAC7A8](v100);
  v7 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = _s13ActionHandlerC8UserDataV9TapActionOMa(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D4A68();
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25415B6D8 != -1)
    swift_once();
  v16 = sub_2312CE3B8(v12, (uint64_t)qword_254162EE8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  v101 = 0;
  v17 = a1;
  sub_231413594();
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v18 = objc_msgSend(v17, sel_unsatisfiedRequirementIdentifiers);
  type metadata accessor for HKFeatureAvailabilityRequirementIdentifier(0);
  v19 = sub_2314147A0();

  v20 = sub_2313F48AC(v19);
  swift_bridgeObjectRelease();
  v21 = (id)*MEMORY[0x24BDD2CF0];
  v22 = sub_23140EBD8((uint64_t)v21, v20);

  if ((v22 & 1) == 0)
  {
    v23 = (id)*MEMORY[0x24BDD2CF8];
    v24 = sub_23140EBD8((uint64_t)v23, v20);

    if ((v24 & 1) == 0)
    {
      v40 = (id)*MEMORY[0x24BDD2D08];
      v41 = sub_23140EBD8((uint64_t)v40, v20);

      if ((v41 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        if (qword_255ECAAD8 == -1)
          goto LABEL_23;
        goto LABEL_41;
      }
      v42 = (id)*MEMORY[0x24BDD2D48];
      v43 = sub_23140EBD8((uint64_t)v42, v20);

      if ((v43 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        if (qword_255ECAAD8 == -1)
          goto LABEL_23;
        goto LABEL_41;
      }
      v44 = (id)*MEMORY[0x24BDD2CE0];
      v45 = sub_23140EBD8((uint64_t)v44, v20);

      if ((v45 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v32 = v5;
        if ((sub_231411DB8() & 1) != 0)
        {
          v34 = v100;
          if (qword_255ECAAD8 != -1)
            swift_once();
        }
        else
        {
          v34 = v100;
          if (qword_255ECAAD8 != -1)
            swift_once();
        }
        v62 = sub_231411374();
        v64 = v63;
        swift_storeEnumTagMultiPayload();
        v100 = MEMORY[0x2348DA7C8](v62, v64);
        v66 = v65;
        v67 = sub_231411DC4();
        (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v7, *MEMORY[0x24BE41280], v34);
        sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
        v35 = swift_allocObject();
        *(_OWORD *)(v35 + 16) = xmmword_231416A30;
        *(_QWORD *)(v35 + 32) = v62;
        *(_QWORD *)(v35 + 40) = v64;
        sub_231412A90();
        v37 = sub_231411DC4();
        v38 = v97 & 1;
        v92 = v66;
        v93 = v67;
        v39 = v100;
        goto LABEL_9;
      }
      v46 = (id)*MEMORY[0x24BDD2DA0];
      v47 = sub_23140EBD8((uint64_t)v46, v20);

      if ((v47 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        if (qword_255ECAAD8 == -1)
        {
LABEL_23:
          v48 = sub_231411374();
          v50 = v49;
          swift_storeEnumTagMultiPayload();
          v51 = MEMORY[0x2348DA7C8](v48, v50);
          v96 = v52;
          v53 = sub_231411DC4();
          v54 = v7;
          v55 = (uint64_t)v7;
          v56 = v10;
          v57 = v100;
          (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v54, *MEMORY[0x24BE41280], v100);
          sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
          v58 = swift_allocObject();
          *(_OWORD *)(v58 + 16) = xmmword_231416A30;
          *(_QWORD *)(v58 + 32) = v48;
          *(_QWORD *)(v58 + 40) = v50;
          sub_231412A90();
          v59 = sub_231411DC4();
          v94 = v53;
          v32 = v5;
          v34 = v57;
          v10 = v56;
          v7 = (char *)v55;
          sub_2312D6068(v99, v55, v97 & 1, (uint64_t)v10, 0, 0, v58, v59, v98, v60, v51, v96, v94);
          goto LABEL_24;
        }
LABEL_41:
        swift_once();
        goto LABEL_23;
      }
      v32 = v5;
      v68 = (id)*MEMORY[0x24BDD2D28];
      v69 = sub_23140EBD8((uint64_t)v68, v20);

      if ((v69 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v70 = sub_231411DF4();
        v72 = v71;
        if (qword_255ECAAD8 == -1)
          goto LABEL_33;
      }
      else
      {
        v73 = (id)*MEMORY[0x24BDD2DB8];
        v74 = sub_23140EBD8((uint64_t)v73, v20);

        if ((v74 & 1) == 0)
        {
          v84 = (id)*MEMORY[0x24BDD2D38];
          v85 = sub_23140EBD8((uint64_t)v84, v20);

          swift_bridgeObjectRelease();
          if ((v85 & 1) != 0)
          {
            v34 = v100;
            if (qword_255ECAAD8 != -1)
              swift_once();
          }
          else
          {
            v34 = v100;
            if (qword_255ECAAD8 != -1)
              swift_once();
          }
          v86 = sub_231411374();
          v88 = v87;
          swift_storeEnumTagMultiPayload();
          v96 = MEMORY[0x2348DA7C8](v86, v88);
          v90 = v89;
          v91 = sub_231411DC4();
          (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v7, *MEMORY[0x24BE41280], v34);
          sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
          v35 = swift_allocObject();
          *(_OWORD *)(v35 + 16) = xmmword_231416A30;
          *(_QWORD *)(v35 + 32) = v86;
          *(_QWORD *)(v35 + 40) = v88;
          sub_231412A90();
          v37 = sub_231411DC4();
          v38 = v97 & 1;
          v92 = v90;
          v93 = v91;
          goto LABEL_8;
        }
        swift_bridgeObjectRelease();
        v70 = sub_231411E00();
        v72 = v75;
        if (qword_255ECAAD8 == -1)
        {
LABEL_33:
          sub_231411374();
          sub_2312D6DD8(0, (unint64_t *)&qword_25415DF58, (uint64_t (*)(uint64_t))sub_2312D6E30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
          v76 = swift_allocObject();
          v95 = xmmword_231416A30;
          *(_OWORD *)(v76 + 16) = xmmword_231416A30;
          *(_QWORD *)(v76 + 56) = MEMORY[0x24BEE0D00];
          *(_QWORD *)(v76 + 64) = sub_2312D6E84();
          *(_QWORD *)(v76 + 32) = v70;
          *(_QWORD *)(v76 + 40) = v72;
          sub_231412A90();
          v77 = sub_231414698();
          v96 = v70;
          v79 = v78;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_storeEnumTagMultiPayload();
          v32 = v5;
          v80 = *(void (**)(char *, _QWORD, uint64_t))(v5 + 104);
          v34 = v100;
          v80(v7, *MEMORY[0x24BE41288], v100);
          sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
          v81 = swift_allocObject();
          *(_OWORD *)(v81 + 16) = v95;
          *(_QWORD *)(v81 + 32) = v77;
          *(_QWORD *)(v81 + 40) = v79;
          swift_bridgeObjectRetain_n();
          v82 = sub_231411DDC();
          sub_2312D6068(v99, (uint64_t)v7, v97 & 1, (uint64_t)v10, 0, 0, v81, v82, v98, v83, v77, v79, v96);
          goto LABEL_24;
        }
      }
      swift_once();
      goto LABEL_33;
    }
  }
  swift_bridgeObjectRelease();
  if (qword_255ECAAD8 != -1)
    swift_once();
  v25 = sub_231411374();
  v27 = v26;
  swift_storeEnumTagMultiPayload();
  v96 = MEMORY[0x2348DA7C8](v25, v27);
  v29 = v28;
  v30 = v10;
  v31 = sub_231411DC4();
  v32 = v5;
  v33 = *(void (**)(char *, _QWORD, uint64_t))(v5 + 104);
  v34 = v100;
  v33(v7, *MEMORY[0x24BE41280], v100);
  sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
  v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_231416A30;
  *(_QWORD *)(v35 + 32) = v25;
  *(_QWORD *)(v35 + 40) = v27;
  sub_231412A90();
  v37 = sub_231411DC4();
  v38 = v97 & 1;
  v92 = v29;
  v93 = v31;
  v10 = v30;
LABEL_8:
  v39 = v96;
LABEL_9:
  sub_2312D6068(v99, (uint64_t)v7, v38, (uint64_t)v10, 0, 0, v35, v37, v98, v36, v39, v92, v93);
LABEL_24:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v34);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_2312CEBD4((uint64_t)v10, _s13ActionHandlerC8UserDataV9TapActionOMa);
}

uint64_t sub_2312D5F84()
{
  return sub_2312D5FA4();
}

uint64_t sub_2312D5FA4()
{
  sub_231414E18();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  return 0;
}

uint64_t sub_2312D6068@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t);
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t inited;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  _QWORD v72[7];
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;

  v86 = a8;
  v87 = a7;
  v88 = a6;
  v89 = a5;
  v85 = a3;
  v82 = a2;
  v81 = a1;
  v96 = a9;
  v14 = sub_231411E18();
  v94 = *(_QWORD *)(v14 - 8);
  v95 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v93 = (char *)v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_231411890();
  v91 = *(_QWORD *)(v16 - 8);
  v92 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v90 = (char *)v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, (unint64_t *)&unk_25415B6C8, (uint64_t (*)(uint64_t))MEMORY[0x24BE418F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v19);
  v83 = (char *)v72 - v20;
  sub_2312D6DD8(0, &qword_25415C0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], v18);
  MEMORY[0x24BDAC7A8](v21);
  v84 = (char *)v72 - v22;
  sub_2312D6DD8(0, &qword_25415C128, (uint64_t (*)(uint64_t))MEMORY[0x24BE413B0], v18);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)v72 - v24;
  v26 = sub_231411D1C();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)v72 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_231411EF0();
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)v72 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = _s13ActionHandlerC8UserDataVMa(0);
  MEMORY[0x24BDAC7A8](v34);
  v36 = (char *)v72 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6C20(a4, (uint64_t)v36, _s13ActionHandlerC8UserDataV9TapActionOMa);
  sub_2314111E8();
  swift_allocObject();
  sub_2314111DC();
  sub_2312CCC24(&qword_255ECB3A0, _s13ActionHandlerC8UserDataVMa, (uint64_t)&unk_23141FA4C);
  v37 = sub_2314111D0();
  v38 = v82;
  v74 = v25;
  v78 = v39;
  v79 = v37;
  v80 = v33;
  v76 = v31;
  v77 = v30;
  swift_release();
  if (qword_255ECA970 != -1)
    swift_once();
  v75 = v36;
  v72[6] = a13;
  v72[5] = a12;
  v72[4] = a11;
  v40 = unk_255ECB370;
  v72[3] = qword_255ECB368;
  v72[1] = *(_QWORD *)aAfibBurden;
  v73 = v27;
  v41 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
  v42 = v29;
  v82 = v26;
  v41(v29, v38, v26);
  v43 = qword_255ECA980;
  v72[2] = v40;
  sub_231412A90();
  sub_231412A90();
  v44 = v83;
  if (v43 != -1)
    swift_once();
  v45 = sub_231411D70();
  v46 = sub_2312CE3B8(v45, (uint64_t)qword_255ECB380);
  v47 = *(_QWORD *)(v45 - 8);
  v48 = v74;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v74, v46, v45);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v48, 0, 1, v45);
  v49 = sub_2314114AC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v84, 1, 1, v49);
  sub_231412A90();
  sub_231412A90();
  sub_231412A90();
  sub_231412A90();
  sub_231412A90();
  v50 = v80;
  sub_231411ECC();
  sub_2314130A8();
  _s13ActionHandlerCMa(0);
  v51 = v76;
  v52 = v77;
  (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v44, v50, v77);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v44, 0, 1, v52);
  v53 = *MEMORY[0x24BE47420];
  v54 = v91;
  v55 = *(void (**)(char *, uint64_t, uint64_t))(v91 + 104);
  v56 = (uint64_t)v44;
  v89 = v42;
  v57 = v90;
  v58 = v92;
  v55(v90, v53, v92);
  v59 = v79;
  v60 = v78;
  sub_2312D6C64(v79, v78);
  sub_2312CCC24(&qword_255ECB3A8, _s13ActionHandlerCMa, (uint64_t)&unk_23141F938);
  v61 = v96;
  sub_231411938();
  sub_2312D6CA8(v59, v60);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v57, v58);
  sub_2312D6B98(v56, (unint64_t *)&unk_25415B6C8, (uint64_t (*)(uint64_t))MEMORY[0x24BE418F8]);
  sub_231411EE4();
  sub_231411968();
  sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_231416A30;
  v63 = v89;
  sub_231411EB4();
  v64 = sub_231411E24();
  v66 = v65;
  (*(void (**)(char *, uint64_t))(v73 + 8))(v63, v82);
  *(_QWORD *)(inited + 32) = v64;
  *(_QWORD *)(inited + 40) = v66;
  if (*(_QWORD *)(inited + 16))
    sub_2312FBF6C(inited);
  v68 = v94;
  v67 = v95;
  v69 = v93;
  swift_setDeallocating();
  swift_arrayDestroy();
  sub_231411998();
  (*(void (**)(char *, _QWORD, uint64_t))(v68 + 104))(v69, *MEMORY[0x24BE41600], v67);
  sub_231411E0C();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v67);
  sub_2314119A4();
  sub_23141195C();
  if (qword_255ECA978 != -1)
    swift_once();
  sub_231403254(qword_255ECB378);
  sub_231411980();
  sub_2312D6CA8(v79, v78);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v80, v77);
  sub_2312CEBD4((uint64_t)v75, _s13ActionHandlerC8UserDataVMa);
  v70 = sub_2314119B0();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v61, 0, 1, v70);
}

uint64_t sub_2312D6940(void *a1)
{
  id v2;
  id v3;

  sub_231414E18();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  v2 = a1;
  v3 = objc_msgSend(v2, sel_description);
  sub_2314146BC();

  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return 0;
}

uint64_t sub_2312D6A74()
{
  sub_231414E18();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  return 0;
}

uint64_t sub_2312D6B0C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23141357C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_2312D6B6C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_23141357C() - 8) + 80);
  return sub_2312D4BDC(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_2312D6B98(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;

  sub_2312D6DD8(0, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_2312D6BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s15SettingsContentVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2312D6C20(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2312D6C64(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_2312D6CA8(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

void sub_2312D6CEC(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_23141504C();
    if (!v4)
      atomic_store(v3, a2);
  }
}

unint64_t sub_2312D6D30()
{
  unint64_t result;

  result = qword_25415DEC8;
  if (!qword_25415DEC8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25415DEC8);
  }
  return result;
}

uint64_t *sub_2312D6D6C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_2312D6DAC()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_2312D6DD0()
{
  uint64_t v0;

  return sub_2312D6940(*(void **)(v0 + 16));
}

void sub_2312D6DD8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

unint64_t sub_2312D6E30()
{
  unint64_t result;

  result = qword_25415DF90;
  if (!qword_25415DF90)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_25415DF90);
  }
  return result;
}

unint64_t sub_2312D6E84()
{
  unint64_t result;

  result = qword_25415DE50;
  if (!qword_25415DE50)
  {
    result = MEMORY[0x2348DE248](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_25415DE50);
  }
  return result;
}

uint64_t sub_2312D6EC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  id v19;
  char *v20;
  uint64_t v21;
  __int128 v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v1 = v0;
  sub_2312D737C();
  v42 = *(_QWORD *)(v2 - 8);
  v43 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v41 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_231414B18();
  v34 = *(_QWORD *)(v4 - 8);
  v35 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v33 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D7528();
  v39 = *(_QWORD *)(v6 - 8);
  v40 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v38 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D7468(0);
  v9 = v8;
  v32 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D9E4C(0, &qword_255ECB3B8, v12, (void (*)(void))sub_2312D750C);
  v36 = *(_QWORD *)(v13 - 8);
  v37 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v31 - v14;
  v17 = *(_QWORD *)(v0 + 8);
  v16 = *(_QWORD *)(v0 + 16);
  v44 = sub_231411B60();
  sub_2312D7484();
  sub_2312D74F0();
  sub_231413EB8();
  swift_release();
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = v17;
  v18[3] = v16;
  v18[4] = sub_2312D76A0;
  v18[5] = 0;
  sub_2312DA7DC(0, (unint64_t *)&qword_25415DDD8);
  sub_2312D750C();
  sub_2312DA820((unint64_t *)&qword_25415BAD8, (unint64_t *)&qword_25415DDD8);
  sub_231412A90();
  sub_231413ED0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v11, v9);
  v19 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  if (qword_25415BB30 != -1)
    swift_once();
  v20 = v33;
  sub_231414B24();

  v21 = swift_allocObject();
  v22 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v21 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v21 + 32) = v22;
  *(_OWORD *)(v21 + 48) = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v21 + 64) = *(_QWORD *)(v1 + 48);
  sub_2312D9D18(v1);
  sub_231413D08();
  sub_2312D75F0();
  sub_2312CCC24(&qword_25415DF08, (uint64_t (*)(uint64_t))MEMORY[0x24BDD0078], MEMORY[0x24BDD0070]);
  sub_2312CCC24(&qword_25415BAA8, (uint64_t (*)(uint64_t))sub_2312D75F0, MEMORY[0x24BDB9AF8]);
  v23 = v38;
  v24 = v35;
  sub_231413FA8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v20, v24);
  sub_2312D9F58(&qword_255ECB3D0, &qword_255ECB3B8, sub_2312D7468, (void (*)(void))sub_2312D750C);
  sub_2312CCC24(&qword_25415BA78, (uint64_t (*)(uint64_t))sub_2312D7528, MEMORY[0x24BDB98F0]);
  v26 = v40;
  v25 = v41;
  v27 = v37;
  sub_231413EE8();
  sub_2312CCC24(&qword_255ECB3D8, (uint64_t (*)(uint64_t))sub_2312D737C, MEMORY[0x24BDB9798]);
  v28 = v43;
  v29 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v25, v28);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v23, v26);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v27);
  return v29;
}

void sub_2312D737C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECB3B0)
  {
    sub_2312D9E4C(255, &qword_255ECB3B8, sub_2312D7468, (void (*)(void))sub_2312D750C);
    sub_2312D7528();
    sub_2312D9F58(&qword_255ECB3D0, &qword_255ECB3B8, sub_2312D7468, (void (*)(void))sub_2312D750C);
    sub_2312CCC24(&qword_25415BA78, (uint64_t (*)(uint64_t))sub_2312D7528, MEMORY[0x24BDB98F0]);
    v0 = sub_231413C90();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECB3B0);
  }
}

void sub_2312D7468(uint64_t a1)
{
  sub_2312DA0A0(a1, &qword_255ECB3C0, (void (*)(uint64_t))sub_2312D7484, (void (*)(void))sub_2312D74F0);
}

void sub_2312D7484()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415D050)
  {
    sub_2312D375C();
    sub_2312D3C14();
    v0 = sub_231413DEC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415D050);
  }
}

uint64_t sub_2312D74F0()
{
  return sub_2312CCC24(&qword_25415D048, (uint64_t (*)(uint64_t))sub_2312D7484, MEMORY[0x24BDB9E58]);
}

uint64_t sub_2312D750C()
{
  return sub_2312CCC24(&qword_255ECB3C8, (uint64_t (*)(uint64_t))sub_2312D7468, MEMORY[0x24BDB96C0]);
}

void sub_2312D7528()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_25415BA80)
  {
    sub_2312D75F0();
    sub_231414B18();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BDD0078];
    sub_2312CCC24(&qword_25415BAA8, (uint64_t (*)(uint64_t))sub_2312D75F0, MEMORY[0x24BDB9AF8]);
    sub_2312CCC24(&qword_25415DF08, v0, MEMORY[0x24BDD0070]);
    v1 = sub_231413CCC();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_25415BA80);
  }
}

void sub_2312D75F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415BAB0)
  {
    v0 = sub_231413D14();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415BAB0);
  }
}

uint64_t sub_2312D7654@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_231411608();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4);
  *a2 = (_DWORD)result != 1;
  return result;
}

void sub_2312D76A0(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_2312D76AC@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;

  v31 = a2;
  sub_2312D375C();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D9D6C();
  v7 = v6;
  v28 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D9E4C(0, &qword_255ECB3F8, v10, (void (*)(void))sub_2312D9F08);
  v29 = *(_QWORD *)(v11 - 8);
  v30 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v27 - v12;
  if (qword_25415DF98 != -1)
    swift_once();
  v14 = sub_231413780();
  sub_2312CE3B8(v14, (uint64_t)qword_254162FF0);
  v15 = sub_231413768();
  v16 = sub_23141498C();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    _os_log_impl(&dword_2312C8000, v15, v16, "Cardio fitness retrocompute available tile dismissed", v17, 2u);
    MEMORY[0x2348DE308](v17, -1, -1);
  }

  sub_2314115FC();
  v18 = sub_231411608();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v5, 0, 1, v18);
  v20 = *(_QWORD *)(a1 + 8);
  v19 = *(_QWORD *)(a1 + 16);
  v21 = sub_231411B6C();
  sub_2312D3CA0((uint64_t)v5);
  v32 = v21;
  v22 = MEMORY[0x24BDB9E38];
  sub_2312DA98C(0, (unint64_t *)&qword_255ECB3E8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9E38]);
  sub_2312D9E0C(&qword_255ECB3F0, (unint64_t *)&qword_255ECB3E8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v22, MEMORY[0x24BDB9E58]);
  sub_231413EB8();
  swift_release();
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = v20;
  v23[3] = v19;
  v23[4] = sub_2312D76A0;
  v23[5] = 0;
  sub_2312DA7DC(0, (unint64_t *)&qword_25415DDD8);
  sub_2312D9F08();
  sub_2312DA820((unint64_t *)&qword_25415BAD8, (unint64_t *)&qword_25415DDD8);
  sub_231412A90();
  sub_231413ED0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v7);
  sub_2312D9F58(&qword_255ECB408, &qword_255ECB3F8, (void (*)(uint64_t))sub_2312D9D6C, (void (*)(void))sub_2312D9F08);
  v24 = v30;
  v25 = sub_231413E7C();
  result = (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v13, v24);
  *v31 = v25;
  return result;
}

uint64_t sub_2312D7A30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  id v34;
  char *v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v1 = v0;
  sub_2312D9F98();
  v64 = *(_QWORD *)(v2 - 8);
  v65 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v63 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_231414B18();
  v58 = *(_QWORD *)(v4 - 8);
  v59 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v57 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D7528();
  v61 = *(_QWORD *)(v6 - 8);
  v62 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v60 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312DA184();
  v9 = v8;
  v47 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312DA10C();
  v13 = *(_QWORD *)(v12 - 8);
  v51 = v12;
  v52 = v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312DA084(0);
  v17 = *(_QWORD *)(v16 - 8);
  v53 = v16;
  v54 = v17;
  MEMORY[0x24BDAC7A8](v16);
  v49 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D9E4C(0, &qword_255ECB418, v19, (void (*)(void))sub_2312DA20C);
  v55 = *(_QWORD *)(v20 - 8);
  v56 = v20;
  MEMORY[0x24BDAC7A8](v20);
  v48 = (char *)&v46 - v21;
  v22 = *(_QWORD *)(v0 + 32);
  v46 = *(_QWORD *)(v0 + 24);
  v66 = sub_231411B60();
  v50 = *(_QWORD *)(v0 + 40);
  v68 = sub_231411B60();
  sub_2312D7484();
  sub_2312D74F0();
  sub_231413EAC();
  swift_release();
  swift_release();
  sub_231411A34();
  sub_231413BDC();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v11, v9);
  v23 = swift_allocObject();
  v24 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v23 + 16) = *(_OWORD *)v0;
  *(_OWORD *)(v23 + 32) = v24;
  *(_OWORD *)(v23 + 48) = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v23 + 64) = *(_QWORD *)(v0 + 48);
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = sub_2312DA22C;
  *(_QWORD *)(v25 + 24) = v23;
  sub_2312D9D18(v0);
  sub_2312DA1F0();
  v26 = v49;
  v27 = v51;
  sub_231413EB8();
  swift_release();
  v28 = v15;
  v29 = v48;
  (*(void (**)(char *, uint64_t))(v52 + 8))(v28, v27);
  v66 = v46;
  v67 = v22;
  sub_231412A90();
  sub_231414728();
  sub_231412A90();
  sub_231414728();
  swift_bridgeObjectRelease();
  v31 = v66;
  v30 = v67;
  v32 = (_QWORD *)swift_allocObject();
  v32[2] = v31;
  v32[3] = v30;
  v32[4] = sub_2312D76A0;
  v32[5] = 0;
  sub_2312DA7DC(0, (unint64_t *)&qword_25415DDD8);
  sub_2312DA20C();
  sub_2312DA820((unint64_t *)&qword_25415BAD8, (unint64_t *)&qword_25415DDD8);
  sub_231412A90();
  v33 = v53;
  sub_231413ED0();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v26, v33);
  v34 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  if (qword_25415BB38 != -1)
    swift_once();
  v35 = v57;
  sub_231414B24();

  v36 = swift_allocObject();
  v37 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v36 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v36 + 32) = v37;
  *(_OWORD *)(v36 + 48) = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v36 + 64) = *(_QWORD *)(v1 + 48);
  sub_2312D9D18(v1);
  sub_231413D08();
  sub_2312D75F0();
  sub_2312CCC24(&qword_25415DF08, (uint64_t (*)(uint64_t))MEMORY[0x24BDD0078], MEMORY[0x24BDD0070]);
  sub_2312CCC24(&qword_25415BAA8, (uint64_t (*)(uint64_t))sub_2312D75F0, MEMORY[0x24BDB9AF8]);
  v38 = v59;
  v39 = v60;
  sub_231413FA8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v35, v38);
  sub_2312D9F58(&qword_255ECB450, &qword_255ECB418, sub_2312DA084, (void (*)(void))sub_2312DA20C);
  sub_2312CCC24(&qword_25415BA78, (uint64_t (*)(uint64_t))sub_2312D7528, MEMORY[0x24BDB98F0]);
  v41 = v62;
  v40 = v63;
  v42 = v56;
  sub_231413EE8();
  sub_2312CCC24(&qword_255ECB458, (uint64_t (*)(uint64_t))sub_2312D9F98, MEMORY[0x24BDB9798]);
  v43 = v65;
  v44 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v40, v43);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v39, v41);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v29, v42);
  return v44;
}

uint64_t sub_2312D80A8(char *a1, void (*a2)(char *, char *, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  int v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;

  sub_2312D375C();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v24 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v24 - v11;
  v13 = sub_2312DA354(a1, a2);
  if (qword_25415DF98 != -1)
    swift_once();
  v14 = sub_231413780();
  sub_2312CE3B8(v14, (uint64_t)qword_254162FF0);
  sub_2312D3870((uint64_t)a1, (uint64_t)v12);
  sub_2312D3870((uint64_t)a2, (uint64_t)v10);
  v15 = sub_231413768();
  v16 = sub_23141498C();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v27 = v24;
    *(_DWORD *)v17 = 136446978;
    v25 = v13;
    v26 = sub_23133180C(0xD00000000000002ELL, 0x80000002314180E0, &v27);
    sub_231414CBC();
    *(_WORD *)(v17 + 12) = 1026;
    LODWORD(v26) = v25 & 1;
    sub_231414CBC();
    *(_WORD *)(v17 + 18) = 2082;
    sub_2312D3870((uint64_t)v12, (uint64_t)v7);
    v18 = sub_2314146E0();
    v26 = sub_23133180C(v18, v19, &v27);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    sub_2312D3CA0((uint64_t)v12);
    *(_WORD *)(v17 + 28) = 2082;
    sub_2312D3870((uint64_t)v10, (uint64_t)v7);
    v20 = sub_2314146E0();
    v26 = sub_23133180C(v20, v21, &v27);
    LOBYTE(v13) = v25;
    sub_231414CBC();
    swift_bridgeObjectRelease();
    sub_2312D3CA0((uint64_t)v10);
    _os_log_impl(&dword_2312C8000, v15, v16, "[%{public}s] Completed dismissal state %{BOOL,public}d, dismissalDate: %{public}s, lastSeenDate: %{public}s", (uint8_t *)v17, 0x26u);
    v22 = v24;
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v22, -1, -1);
    MEMORY[0x2348DE308](v17, -1, -1);
  }
  else
  {
    sub_2312D3CA0((uint64_t)v12);
    sub_2312D3CA0((uint64_t)v10);
  }

  return v13 & 1;
}

uint64_t sub_2312D83BC@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;

  v31 = a2;
  sub_2312D375C();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D9D6C();
  v7 = v6;
  v28 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D9E4C(0, &qword_255ECB3F8, v10, (void (*)(void))sub_2312D9F08);
  v29 = *(_QWORD *)(v11 - 8);
  v30 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v27 - v12;
  if (qword_25415DF98 != -1)
    swift_once();
  v14 = sub_231413780();
  sub_2312CE3B8(v14, (uint64_t)qword_254162FF0);
  v15 = sub_231413768();
  v16 = sub_23141498C();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    _os_log_impl(&dword_2312C8000, v15, v16, "Cardio fitness retrocompute completed tile dismissed", v17, 2u);
    MEMORY[0x2348DE308](v17, -1, -1);
  }

  sub_2314115FC();
  v18 = sub_231411608();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v5, 0, 1, v18);
  v20 = *(_QWORD *)(a1 + 24);
  v19 = *(_QWORD *)(a1 + 32);
  v21 = sub_231411B6C();
  sub_2312D3CA0((uint64_t)v5);
  v32 = v21;
  v22 = MEMORY[0x24BDB9E38];
  sub_2312DA98C(0, (unint64_t *)&qword_255ECB3E8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9E38]);
  sub_2312D9E0C(&qword_255ECB3F0, (unint64_t *)&qword_255ECB3E8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v22, MEMORY[0x24BDB9E58]);
  sub_231413EB8();
  swift_release();
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = v20;
  v23[3] = v19;
  v23[4] = sub_2312D76A0;
  v23[5] = 0;
  sub_2312DA7DC(0, (unint64_t *)&qword_25415DDD8);
  sub_2312D9F08();
  sub_2312DA820((unint64_t *)&qword_25415BAD8, (unint64_t *)&qword_25415DDD8);
  sub_231412A90();
  sub_231413ED0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v7);
  sub_2312D9F58(&qword_255ECB408, &qword_255ECB3F8, (void (*)(uint64_t))sub_2312D9D6C, (void (*)(void))sub_2312D9F08);
  v24 = v30;
  v25 = sub_231413E7C();
  result = (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v13, v24);
  *v31 = v25;
  return result;
}

uint64_t sub_2312D8740(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t (*v21)(void);
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = v1;
  sub_2312D375C();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312DA9F8();
  v25 = *(_QWORD *)(v7 - 8);
  v26 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25415DF98 != -1)
    swift_once();
  v10 = sub_231413780();
  sub_2312CE3B8(v10, (uint64_t)qword_254162FF0);
  v11 = sub_231413768();
  v12 = sub_23141498C();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v28 = v14;
    *(_DWORD *)v13 = 136446210;
    v27 = sub_23133180C(0xD00000000000002ELL, 0x80000002314180E0, &v28);
    sub_231414CBC();
    _os_log_impl(&dword_2312C8000, v11, v12, "[%{public}s] Setting available dismissal date", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v14, -1, -1);
    MEMORY[0x2348DE308](v13, -1, -1);
  }

  if ((a1 & 1) != 0)
  {
    sub_2314115FC();
    v15 = sub_231411608();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v6, 0, 1, v15);
  }
  else
  {
    v16 = sub_231411608();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v6, 1, 1, v16);
  }
  v17 = *(_QWORD *)(v2 + 8);
  v18 = *(_QWORD *)(v2 + 16);
  v19 = sub_231411B6C();
  sub_2312D3CA0((uint64_t)v6);
  v28 = v19;
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = v17;
  v20[3] = v18;
  v20[4] = nullsub_1;
  v20[5] = 0;
  v21 = MEMORY[0x24BDB9E38];
  sub_2312DA98C(0, (unint64_t *)&qword_255ECB3E8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9E38]);
  sub_2312DA7DC(0, &qword_255ECB488);
  sub_2312D9E0C(&qword_255ECB3F0, (unint64_t *)&qword_255ECB3E8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v21, MEMORY[0x24BDB9E58]);
  sub_2312DA820(&qword_255ECB498, &qword_255ECB488);
  sub_231412A90();
  sub_231413ED0();
  swift_release();
  swift_release();
  sub_2312CCC24(&qword_255ECB4C0, (uint64_t (*)(uint64_t))sub_2312DA9F8, MEMORY[0x24BDB9740]);
  v22 = v26;
  v23 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v22);
  return v23;
}

uint64_t sub_2312D8AE4(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t (*v21)(void);
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = v1;
  sub_2312D375C();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312DA9F8();
  v25 = *(_QWORD *)(v7 - 8);
  v26 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25415DF98 != -1)
    swift_once();
  v10 = sub_231413780();
  sub_2312CE3B8(v10, (uint64_t)qword_254162FF0);
  v11 = sub_231413768();
  v12 = sub_23141498C();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v28 = v14;
    *(_DWORD *)v13 = 136446210;
    v27 = sub_23133180C(0xD00000000000002ELL, 0x80000002314180E0, &v28);
    sub_231414CBC();
    _os_log_impl(&dword_2312C8000, v11, v12, "[%{public}s] Setting completed dismissal date", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v14, -1, -1);
    MEMORY[0x2348DE308](v13, -1, -1);
  }

  if ((a1 & 1) != 0)
  {
    sub_2314115FC();
    v15 = sub_231411608();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v6, 0, 1, v15);
  }
  else
  {
    v16 = sub_231411608();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v6, 1, 1, v16);
  }
  v18 = *(_QWORD *)(v2 + 24);
  v17 = *(_QWORD *)(v2 + 32);
  v19 = sub_231411B6C();
  sub_2312D3CA0((uint64_t)v6);
  v28 = v19;
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = v18;
  v20[3] = v17;
  v20[4] = nullsub_1;
  v20[5] = 0;
  v21 = MEMORY[0x24BDB9E38];
  sub_2312DA98C(0, (unint64_t *)&qword_255ECB3E8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9E38]);
  sub_2312DA7DC(0, &qword_255ECB488);
  sub_2312D9E0C(&qword_255ECB3F0, (unint64_t *)&qword_255ECB3E8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v21, MEMORY[0x24BDB9E58]);
  sub_2312DA820(&qword_255ECB498, &qword_255ECB488);
  sub_231412A90();
  sub_231413ED0();
  swift_release();
  swift_release();
  sub_2312CCC24(&qword_255ECB4C0, (uint64_t (*)(uint64_t))sub_2312DA9F8, MEMORY[0x24BDB9740]);
  v22 = v26;
  v23 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v22);
  return v23;
}

uint64_t sub_2312D8E88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v13)(void);
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = v0;
  sub_2312DA9F8();
  v17 = *(_QWORD *)(v2 - 8);
  v18 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25415DF98 != -1)
    swift_once();
  v5 = sub_231413780();
  sub_2312CE3B8(v5, (uint64_t)qword_254162FF0);
  v6 = sub_231413768();
  v7 = sub_23141498C();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v20 = v9;
    *(_DWORD *)v8 = 136446210;
    v19 = sub_23133180C(0xD00000000000002ELL, 0x80000002314180E0, &v20);
    sub_231414CBC();
    _os_log_impl(&dword_2312C8000, v6, v7, "[%{public}s] Setting last seen retrocompute complete date", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v9, -1, -1);
    MEMORY[0x2348DE308](v8, -1, -1);
  }

  v11 = *(_QWORD *)(v1 + 40);
  v10 = *(_QWORD *)(v1 + 48);
  v20 = sub_231411B6C();
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = v11;
  v12[3] = v10;
  v12[4] = nullsub_1;
  v12[5] = 0;
  v13 = MEMORY[0x24BDB9E38];
  sub_2312DA98C(0, (unint64_t *)&qword_255ECB3E8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9E38]);
  sub_2312DA7DC(0, &qword_255ECB488);
  sub_2312D9E0C(&qword_255ECB3F0, (unint64_t *)&qword_255ECB3E8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v13, MEMORY[0x24BDB9E58]);
  sub_2312DA820(&qword_255ECB498, &qword_255ECB488);
  sub_231412A90();
  sub_231413ED0();
  swift_release();
  swift_release();
  sub_2312CCC24(&qword_255ECB4C0, (uint64_t (*)(uint64_t))sub_2312DA9F8, MEMORY[0x24BDB9740]);
  v14 = v18;
  v15 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v4, v14);
  return v15;
}

uint64_t sub_2312D9198(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t (*v22)(void);
  char *v23;
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v2 = v1;
  sub_2312D375C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  sub_2312DA644();
  v35 = v7;
  v33 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v32 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312DA704();
  v36 = *(_QWORD *)(v9 - 8);
  v37 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v34 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25415DF98 != -1)
    swift_once();
  v11 = sub_231413780();
  sub_2312CE3B8(v11, (uint64_t)qword_254162FF0);
  v12 = sub_231413768();
  v13 = sub_23141498C();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v31 = a1;
    v16 = v15;
    v39 = v15;
    *(_DWORD *)v14 = 136446210;
    v38 = sub_23133180C(0xD00000000000002ELL, 0x80000002314180E0, &v39);
    sub_231414CBC();
    _os_log_impl(&dword_2312C8000, v12, v13, "[%{public}s] Setting last seen retrocompute complete date if needed", v14, 0xCu);
    swift_arrayDestroy();
    v17 = v16;
    a1 = v31;
    MEMORY[0x2348DE308](v17, -1, -1);
    MEMORY[0x2348DE308](v14, -1, -1);
  }

  v18 = *(_QWORD *)(v2 + 48);
  v31 = *(_QWORD *)(v2 + 40);
  v39 = sub_231411B60();
  sub_2312D3870(a1, (uint64_t)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = (*(unsigned __int8 *)(v5 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v20 = swift_allocObject();
  v21 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v20 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v20 + 32) = v21;
  *(_OWORD *)(v20 + 48) = *(_OWORD *)(v2 + 32);
  *(_QWORD *)(v20 + 64) = *(_QWORD *)(v2 + 48);
  sub_2312D38B4((uint64_t)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v20 + v19);
  sub_2312D9D18(v2);
  sub_231413D08();
  sub_2312D7484();
  v22 = MEMORY[0x24BDB9AE0];
  sub_2312DA98C(0, (unint64_t *)&qword_255ECB470, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_2312D74F0();
  sub_2312D9E0C(&qword_255ECB478, (unint64_t *)&qword_255ECB470, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v22, MEMORY[0x24BDB9AF8]);
  v23 = v32;
  sub_231413F30();
  swift_release();
  swift_release();
  v24 = (_QWORD *)swift_allocObject();
  v24[2] = v31;
  v24[3] = v18;
  v24[4] = nullsub_1;
  v24[5] = 0;
  sub_2312DA7DC(0, &qword_255ECB488);
  sub_2312CCC24(&qword_255ECB490, (uint64_t (*)(uint64_t))sub_2312DA644, MEMORY[0x24BDB98F0]);
  sub_2312DA820(&qword_255ECB498, &qword_255ECB488);
  sub_231412A90();
  v26 = v34;
  v25 = v35;
  sub_231413ED0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v23, v25);
  sub_2312CCC24(&qword_255ECB4A0, (uint64_t (*)(uint64_t))sub_2312DA704, MEMORY[0x24BDB9740]);
  v27 = v37;
  v28 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v26, v27);
  return v28;
}

uint64_t sub_2312D960C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  uint64_t v15;
  uint64_t result;
  _QWORD v17[2];

  v17[0] = a2;
  sub_2312DA7DC(0, &qword_255ECB488);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v17 - v6;
  sub_2312DA98C(0, &qword_255ECB4A8, MEMORY[0x24BDBA1B0]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v17 - v11;
  v13 = sub_231411608();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(a1, 1, v13) == 1)
  {
    v17[1] = sub_231411B6C();
    v14 = MEMORY[0x24BDB9E38];
    sub_2312DA98C(0, (unint64_t *)&qword_255ECB3E8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9E38]);
    sub_2312D9E0C(&qword_255ECB3F0, (unint64_t *)&qword_255ECB3E8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v14, MEMORY[0x24BDB9E58]);
    v15 = sub_231413E7C();
    result = swift_release();
  }
  else
  {
    sub_231413DD4();
    sub_2312D3C14();
    sub_231413DBC();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_2312D9E0C(&qword_255ECB4B0, &qword_255ECB4A8, MEMORY[0x24BDBA1B0], MEMORY[0x24BDBA1D0]);
    v15 = sub_231413E7C();
    result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  *(_QWORD *)v17[0] = v15;
  return result;
}

uint64_t sub_2312D9818(void *a1, uint64_t a2, unint64_t a3, void (*a4)(void))
{
  uint64_t v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;

  if (qword_25415DF98 != -1)
    swift_once();
  v8 = sub_231413780();
  sub_2312CE3B8(v8, (uint64_t)qword_254162FF0);
  sub_231412A90();
  v9 = a1;
  sub_231412A90();
  v10 = a1;
  v11 = sub_231413768();
  v12 = sub_231414974();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v14 = swift_slowAlloc();
    v19 = v14;
    *(_DWORD *)v13 = 136446466;
    sub_231412A90();
    sub_23133180C(a2, a3, &v19);
    sub_231414CBC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v13 + 12) = 2082;
    v15 = a1;
    sub_2312D3C14();
    v16 = sub_2314146E0();
    sub_23133180C(v16, v17, &v19);
    sub_231414CBC();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2312C8000, v11, v12, "[CardioFitnessRetroComputeDismissalStateManager] Failed to set value for key %{public}s: %{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v14, -1, -1);
    MEMORY[0x2348DE308](v13, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();

  }
  a4();
  return sub_231413DD4();
}

uint64_t sub_2312D9A84(void *a1, uint64_t a2, unint64_t a3, void (*a4)(uint64_t *__return_ptr), uint64_t a5, char *a6)
{
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  char *format;
  uint64_t v23;

  if (qword_25415DF98 != -1)
    swift_once();
  v11 = sub_231413780();
  sub_2312CE3B8(v11, (uint64_t)qword_254162FF0);
  sub_231412A90();
  v12 = a1;
  sub_231412A90();
  v13 = a1;
  v14 = sub_231413768();
  v15 = sub_231414974();
  if (os_log_type_enabled(v14, v15))
  {
    format = a6;
    v16 = swift_slowAlloc();
    v17 = swift_slowAlloc();
    v23 = v17;
    *(_DWORD *)v16 = 136446466;
    sub_231412A90();
    sub_23133180C(a2, a3, &v23);
    sub_231414CBC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v16 + 12) = 2082;
    v18 = a1;
    sub_2312D3C14();
    v19 = sub_2314146E0();
    sub_23133180C(v19, v20, &v23);
    sub_231414CBC();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2312C8000, v14, v15, format, (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v17, -1, -1);
    MEMORY[0x2348DE308](v16, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();

  }
  a4(&v23);
  return sub_231413DD4();
}

uint64_t sub_2312D9D00(void **a1)
{
  return sub_2312D9F34(a1, "[CardioFitnessRetroComputeDismissalStateManager] Failed to get value for key %{public}s: %{public}s");
}

uint64_t sub_2312D9D10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_2312D76AC(v1 + 16, a1);
}

uint64_t sub_2312D9D18(uint64_t a1)
{
  swift_retain();
  sub_231412A90();
  sub_231412A90();
  sub_231412A90();
  return a1;
}

void sub_2312D9D6C()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_255ECB3E0)
  {
    v0 = MEMORY[0x24BDB9E38];
    sub_2312DA98C(255, (unint64_t *)&qword_255ECB3E8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9E38]);
    sub_2312D9E0C(&qword_255ECB3F0, (unint64_t *)&qword_255ECB3E8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v0, MEMORY[0x24BDB9E58]);
    v1 = sub_231413C60();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_255ECB3E0);
  }
}

uint64_t sub_2312D9E0C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_2312DA98C(255, a2, a3);
    result = MEMORY[0x2348DE248](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_2312D9E4C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    sub_2312DA7DC(255, (unint64_t *)&qword_25415DDD8);
    a4();
    sub_2312DA820((unint64_t *)&qword_25415BAD8, (unint64_t *)&qword_25415DDD8);
    v6 = sub_231413C78();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_2312D9F08()
{
  return sub_2312CCC24(&qword_255ECB400, (uint64_t (*)(uint64_t))sub_2312D9D6C, MEMORY[0x24BDB96C0]);
}

uint64_t sub_2312D9F28(void **a1)
{
  return sub_2312D9F34(a1, "[CardioFitnessRetroComputeDismissalStateManager] Failed to set value for key %{public}s: %{public}s");
}

uint64_t sub_2312D9F34(void **a1, char *a2)
{
  uint64_t v2;

  return sub_2312D9A84(*a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void (**)(uint64_t *__return_ptr))(v2 + 32), *(_QWORD *)(v2 + 40), a2);
}

uint64_t sub_2312D9F58(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_2312D9E4C(255, a2, a3, a4);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB9740], v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_2312D9F98()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECB410)
  {
    sub_2312D9E4C(255, &qword_255ECB418, sub_2312DA084, (void (*)(void))sub_2312DA20C);
    sub_2312D7528();
    sub_2312D9F58(&qword_255ECB450, &qword_255ECB418, sub_2312DA084, (void (*)(void))sub_2312DA20C);
    sub_2312CCC24(&qword_25415BA78, (uint64_t (*)(uint64_t))sub_2312D7528, MEMORY[0x24BDB98F0]);
    v0 = sub_231413C90();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECB410);
  }
}

void sub_2312DA084(uint64_t a1)
{
  sub_2312DA0A0(a1, &qword_255ECB420, (void (*)(uint64_t))sub_2312DA10C, (void (*)(void))sub_2312DA1F0);
}

void sub_2312DA0A0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4();
    v6 = sub_231413C60();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_2312DA10C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECB428)
  {
    sub_2312DA184();
    sub_2312CCC24(&qword_255ECB438, (uint64_t (*)(uint64_t))sub_2312DA184, MEMORY[0x24BDB9450]);
    v0 = sub_231413CA8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECB428);
  }
}

void sub_2312DA184()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECB430)
  {
    sub_2312D7484();
    sub_2312D74F0();
    v0 = sub_231413BE8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECB430);
  }
}

uint64_t sub_2312DA1F0()
{
  return sub_2312CCC24(&qword_255ECB440, (uint64_t (*)(uint64_t))sub_2312DA10C, MEMORY[0x24BDB97E0]);
}

uint64_t sub_2312DA20C()
{
  return sub_2312CCC24(&qword_255ECB448, (uint64_t (*)(uint64_t))sub_2312DA084, MEMORY[0x24BDB96C0]);
}

uint64_t sub_2312DA22C(char *a1, void (*a2)(char *, char *, uint64_t))
{
  return sub_2312D80A8(a1, a2);
}

uint64_t sub_2312DA234()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2312DA258@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t result;

  v5 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 16);
  sub_2312DA2F4();
  result = v5(a1, a1 + *(int *)(v6 + 48));
  *a2 = result & 1;
  return result;
}

uint64_t sub_2312DA2AC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2312DA2E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_2312D83BC(v1 + 16, a1);
}

void sub_2312DA2F4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255ECB460)
  {
    sub_2312D375C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255ECB460);
  }
}

uint64_t sub_2312DA354(char *a1, void (*a2)(char *, char *, uint64_t))
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, uint64_t);
  char *v29;
  void (*v30)(char *, uint64_t);
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);

  v39 = a2;
  v38 = sub_231411764();
  v36 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23141177C();
  v34 = *(_QWORD *)(v5 - 8);
  v35 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D375C();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v37 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v32 - v11;
  v13 = sub_231411608();
  v14 = *(_QWORD **)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v33 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v32 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v32 - v20;
  v22 = (unsigned int (*)(char *, uint64_t, uint64_t))v14[6];
  v23 = 1;
  if (v22(a1, 1, v13) == 1)
  {
    sub_2312D3870((uint64_t)v39, (uint64_t)v12);
    if (v22(v12, 1, v13) == 1)
    {
      v24 = (uint64_t)v12;
    }
    else
    {
      v39 = (void (*)(char *, char *, uint64_t))v14[4];
      v39(v21, v12, v13);
      sub_2314115FC();
      sub_23141174C();
      v25 = v36;
      v26 = v38;
      (*(void (**)(char *, _QWORD, uint64_t))(v36 + 104))(v4, *MEMORY[0x24BDCF220], v38);
      v27 = v37;
      sub_231411728();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v4, v26);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v7, v35);
      if (v22(v27, 1, v13) != 1)
      {
        v29 = v33;
        v39(v33, v27, v13);
        v23 = sub_2314115CC();
        v30 = (void (*)(char *, uint64_t))v14[1];
        v30(v29, v13);
        v30(v19, v13);
        v30(v21, v13);
        return v23 & 1;
      }
      v28 = (void (*)(char *, uint64_t))v14[1];
      v28(v19, v13);
      v28(v21, v13);
      v24 = (uint64_t)v27;
    }
    sub_2312D3CA0(v24);
    v23 = 0;
  }
  return v23 & 1;
}

void sub_2312DA644()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_255ECB468)
  {
    v0 = MEMORY[0x24BDB9AE0];
    sub_2312DA98C(255, (unint64_t *)&qword_255ECB470, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_2312D7484();
    sub_2312D9E0C(&qword_255ECB478, (unint64_t *)&qword_255ECB470, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v0, MEMORY[0x24BDB9AF8]);
    sub_2312D74F0();
    v1 = sub_231413CCC();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_255ECB468);
  }
}

void sub_2312DA704()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECB480)
  {
    sub_2312DA644();
    sub_2312DA7DC(255, &qword_255ECB488);
    sub_2312CCC24(&qword_255ECB490, (uint64_t (*)(uint64_t))sub_2312DA644, MEMORY[0x24BDB98F0]);
    sub_2312DA820(&qword_255ECB498, &qword_255ECB488);
    v0 = sub_231413C78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECB480);
  }
}

void sub_2312DA7DC(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_231413DC8();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_2312DA820(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    sub_2312DA7DC(255, a2);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB9DF8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2312DA860()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_2312D375C();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 72) & ~v2;
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = sub_231411608();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v3, v4);
  return swift_deallocObject();
}

uint64_t sub_2312DA914@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_2312D375C();
  return sub_2312D960C(a1, a2);
}

uint64_t sub_2312DA96C(void **a1)
{
  uint64_t v1;

  return sub_2312D9818(*a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(void))(v1 + 32));
}

void sub_2312DA98C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_2312D3C14();
    v7 = a3(a1, MEMORY[0x24BEE4AE0] + 8, v6, MEMORY[0x24BEE3F20]);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_2312DA9F8()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_255ECB4B8)
  {
    v0 = MEMORY[0x24BDB9E38];
    sub_2312DA98C(255, (unint64_t *)&qword_255ECB3E8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BDB9E38]);
    sub_2312DA7DC(255, &qword_255ECB488);
    sub_2312D9E0C(&qword_255ECB3F0, (unint64_t *)&qword_255ECB3E8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v0, MEMORY[0x24BDB9E58]);
    sub_2312DA820(&qword_255ECB498, &qword_255ECB488);
    v1 = sub_231413C78();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_255ECB4B8);
  }
}

uint64_t sub_2312DAAF8()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t destroy for CardioFitnessRetroComputeDismissalStateManager()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for CardioFitnessRetroComputeDismissalStateManager(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_retain();
  sub_231412A90();
  sub_231412A90();
  sub_231412A90();
  return a1;
}

_QWORD *assignWithCopy for CardioFitnessRetroComputeDismissalStateManager(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  sub_231412A90();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  sub_231412A90();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  sub_231412A90();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for CardioFitnessRetroComputeDismissalStateManager(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *assignWithTake for CardioFitnessRetroComputeDismissalStateManager(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = *a2;
  swift_release();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[6];
  a1[5] = a2[5];
  a1[6] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CardioFitnessRetroComputeDismissalStateManager(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CardioFitnessRetroComputeDismissalStateManager(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessRetroComputeDismissalStateManager()
{
  return &type metadata for CardioFitnessRetroComputeDismissalStateManager;
}

id sub_2312DAD88()
{
  return sub_2312DADB0(&OBJC_IVAR____TtC5Heart16TitleDetailsView____lazy_storage___titleLabel);
}

id sub_2312DAD9C()
{
  return sub_2312DADB0(&OBJC_IVAR____TtC5Heart16TitleDetailsView____lazy_storage___detailLabel);
}

id sub_2312DADB0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;

  v2 = *a1;
  v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    v4 = *(id *)(v1 + *a1);
  }
  else
  {
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v6 = (void *)sub_23141468C();
    objc_msgSend(v5, sel_setText_, v6);

    v7 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    objc_msgSend(v5, sel_setTextColor_, v7);

    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    v8 = *(void **)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v5;
    v4 = v5;

    v3 = 0;
  }
  v9 = v3;
  return v4;
}

uint64_t sub_2312DAF30()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v46;

  v1 = v0;
  swift_getObjectType();
  sub_2312D3AD4();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_231418140;
  *(_QWORD *)(v2 + 32) = sub_2312DAD88();
  *(_QWORD *)(v2 + 40) = sub_2312DAD9C();
  sub_2314147B8();
  sub_231414BA8();
  swift_bridgeObjectRelease();
  v46 = (id)objc_opt_self();
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_231418150;
  v4 = sub_2312DAD88();
  v5 = objc_msgSend(v4, sel_topAnchor);

  v6 = objc_msgSend(v1, sel_topAnchor);
  v7 = objc_msgSend(v5, sel_constraintEqualToAnchor_, v6);

  *(_QWORD *)(v3 + 32) = v7;
  v8 = sub_2312DAD88();
  v9 = objc_msgSend(v8, sel_leadingAnchor);

  v10 = objc_msgSend(v1, sel_leadingAnchor);
  v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_constant_, v10, 0.0);

  *(_QWORD *)(v3 + 40) = v11;
  v12 = sub_2312DAD88();
  v13 = objc_msgSend(v12, sel_trailingAnchor);

  v14 = objc_msgSend(v1, sel_trailingAnchor);
  v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_constant_, v14, -0.0);

  *(_QWORD *)(v3 + 48) = v15;
  v16 = sub_2312DAD9C();
  v17 = objc_msgSend(v16, sel_topAnchor);

  v18 = sub_2312DAD88();
  v19 = objc_msgSend(v18, sel_bottomAnchor);

  v20 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v19, 4.0);
  *(_QWORD *)(v3 + 56) = v20;
  v21 = sub_2312DAD9C();
  v22 = objc_msgSend(v21, sel_leadingAnchor);

  v23 = sub_2312DAD88();
  v24 = objc_msgSend(v23, sel_leadingAnchor);

  v25 = objc_msgSend(v22, sel_constraintEqualToAnchor_, v24);
  *(_QWORD *)(v3 + 64) = v25;
  v26 = sub_2312DAD9C();
  v27 = objc_msgSend(v26, sel_trailingAnchor);

  v28 = sub_2312DAD88();
  v29 = objc_msgSend(v28, sel_trailingAnchor);

  v30 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v29);
  *(_QWORD *)(v3 + 72) = v30;
  v31 = sub_2312DAD9C();
  v32 = objc_msgSend(v31, sel_bottomAnchor);

  v33 = objc_msgSend(v1, sel_bottomAnchor);
  v34 = objc_msgSend(v32, sel_constraintEqualToAnchor_, v33);

  *(_QWORD *)(v3 + 80) = v34;
  sub_2314147B8();
  sub_2312D3C68(0, (unint64_t *)&qword_255ED2440);
  v35 = (void *)sub_231414788();
  swift_bridgeObjectRelease();
  objc_msgSend(v46, sel_activateConstraints_, v35);

  v36 = sub_2312DAD88();
  sub_2312D3C68(0, (unint64_t *)&qword_255ECB510);
  v37 = (void *)sub_231414B9C();
  objc_msgSend(v36, sel_setFont_, v37);

  v38 = sub_2312DAD9C();
  v39 = (void *)sub_231414B9C();
  objc_msgSend(v38, sel_setFont_, v39);

  sub_2312DB584();
  v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_231418090;
  v41 = sub_231413960();
  v42 = MEMORY[0x24BEBCB18];
  *(_QWORD *)(v40 + 32) = v41;
  *(_QWORD *)(v40 + 40) = v42;
  v43 = sub_2314137F8();
  v44 = MEMORY[0x24BEBC318];
  *(_QWORD *)(v40 + 48) = v43;
  *(_QWORD *)(v40 + 56) = v44;
  sub_231414BC0();
  sub_2314130CC();
  return swift_bridgeObjectRelease();
}

id sub_2312DB4D4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TitleDetailsView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for TitleDetailsView()
{
  return objc_opt_self();
}

void sub_2312DB584()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECB518)
  {
    sub_2312DB5D8();
    v0 = sub_23141504C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECB518);
  }
}

unint64_t sub_2312DB5D8()
{
  unint64_t result;

  result = qword_255ECB520;
  if (!qword_255ECB520)
  {
    sub_2312DB610();
    result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255ECB520);
  }
  return result;
}

unint64_t sub_2312DB610()
{
  unint64_t result;

  result = qword_255ECB528;
  if (!qword_255ECB528)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255ECB528);
  }
  return result;
}

void sub_2312DB668()
{
  id v0;
  void *v1;
  id v2;
  id v3;

  v0 = sub_2312DAD88();
  sub_2312D3C68(0, (unint64_t *)&qword_255ECB510);
  v1 = (void *)sub_231414B9C();
  objc_msgSend(v0, sel_setFont_, v1);

  v2 = sub_2312DAD9C();
  v3 = (id)sub_231414B9C();
  objc_msgSend(v2, sel_setFont_, v3);

}

uint64_t destroy for AFibBurdenPDFChartRenderable(uint64_t a1)
{
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1);
  return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + 40);
}

uint64_t initializeWithCopy for AFibBurdenPDFChartRenderable(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  return a1;
}

uint64_t *assignWithCopy for AFibBurdenPDFChartRenderable(uint64_t *a1, uint64_t *a2)
{
  sub_2312DB81C(a1, a2);
  sub_2312DB81C(a1 + 5, a2 + 5);
  return a1;
}

uint64_t *sub_2312DB81C(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for AFibBurdenPDFChartRenderable(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for AFibBurdenPDFChartRenderable(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AFibBurdenPDFChartRenderable(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenPDFChartRenderable()
{
  return &type metadata for AFibBurdenPDFChartRenderable;
}

uint64_t sub_2312DBA88()
{
  _QWORD *v0;

  sub_2312CEA5C(v0, v0[3]);
  sub_231412364();
  sub_2312CEA5C(v0 + 5, v0[8]);
  return sub_231412364();
}

double sub_2312DBB10()
{
  _QWORD *v0;
  double v1;
  double v2;
  CGRect v4;
  CGRect v5;
  CGRect v6;

  sub_2312CEA5C(v0, v0[3]);
  sub_231412358();
  CGRectGetHeight(v4);
  sub_2312CEA5C(v0 + 5, v0[8]);
  sub_231412358();
  CGRectGetHeight(v5);
  sub_23141219C();
  v2 = v1;
  sub_23141219C();
  CGRectGetWidth(v6);
  return v2;
}

uint64_t sub_2312DBBD4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  sub_2312DBCD4();
  *v1 = v0;
  v1[1] = sub_2312DBC38;
  return sub_2314127C0();
}

uint64_t sub_2312DBC38(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

unint64_t sub_2312DBC90()
{
  unint64_t result;

  result = qword_255ECB538;
  if (!qword_255ECB538)
  {
    result = MEMORY[0x2348DE248](&unk_2314181A0, &type metadata for AFibBurdenPDFChartRenderable);
    atomic_store(result, (unint64_t *)&qword_255ECB538);
  }
  return result;
}

unint64_t sub_2312DBCD4()
{
  unint64_t result;

  result = qword_255ECB540;
  if (!qword_255ECB540)
  {
    result = MEMORY[0x2348DE248](&unk_2314181C8, &type metadata for AFibBurdenPDFChartRenderable);
    atomic_store(result, (unint64_t *)&qword_255ECB540);
  }
  return result;
}

id sub_2312DBD18()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v1 = (void *)v0[5];
  if (v1)
  {
    v2 = (id)v0[5];
  }
  else
  {
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3BF8]), sel_initWithFeatureIdentifier_healthStore_, v0[2], v0[4]);
    v4 = (void *)v0[5];
    v0[5] = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

uint64_t sub_2312DBD90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  sub_2312DC3FC();
  v1 = *(_QWORD *)(v0 - 8);
  v28 = v0;
  v29 = v1;
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312DC558();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312DC4C4();
  v10 = v9;
  v27 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312DC66C();
  v14 = *(_QWORD *)(v13 - 8);
  v30 = v13;
  v31 = v14;
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_2312DBD18();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_2312DC5D0(0);
  sub_2312CCC24(&qword_25415D030, (uint64_t (*)(uint64_t))sub_2312DC5D0, MEMORY[0x24BDB9DF8]);
  sub_231413E04();
  sub_23141357C();
  sub_2312CCC24((unint64_t *)&unk_25415D060, (uint64_t (*)(uint64_t))sub_2312DC558, MEMORY[0x24BDB9E90]);
  sub_231413E88();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_2312DC718();
  v18 = v17;
  v19 = sub_231413624();

  v32 = v19;
  sub_2312DC608();
  sub_2312CCC24((unint64_t *)&qword_25415CFB0, (uint64_t (*)(uint64_t))sub_2312DC608, MEMORY[0x24BDB9AF8]);
  v20 = MEMORY[0x24BDB94C8];
  sub_2312CCC24(&qword_25415CDE0, (uint64_t (*)(uint64_t))sub_2312DC4C4, MEMORY[0x24BDB94C8]);
  sub_231413F48();
  swift_release();
  sub_2312CCC24((unint64_t *)&unk_25415CE00, (uint64_t (*)(uint64_t))sub_2312DC3FC, MEMORY[0x24BDB9530]);
  v21 = v28;
  v22 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v3, v21);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v10);

  v32 = v22;
  swift_allocObject();
  swift_weakInit();
  sub_231413E88();
  swift_release();
  swift_release();
  sub_2312CCC24(&qword_25415CDA0, (uint64_t (*)(uint64_t))sub_2312DC66C, v20);
  v23 = v30;
  v24 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v16, v23);
  return v24;
}

void sub_2312DC134(unsigned __int8 *a1@<X8>)
{
  uint64_t Strong;
  void *v3;
  id v4;
  void *v5;
  unsigned __int8 v6;
  char v7;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v3 = *(void **)(Strong + 24);
    if (v3)
    {
      v4 = v3;
      v5 = (void *)sub_231413588();
      v6 = objc_msgSend(v5, sel_areAllRequirementsSatisfied);
      swift_release();

    }
    else
    {
      v7 = sub_231413570();
      swift_release();
      v6 = v7 & 1;
    }
  }
  else
  {
    v6 = 2;
  }
  *a1 = v6;
}

uint64_t sub_2312DC1F0()
{
  id *v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FeatureStatusFeedItemRequirement()
{
  return objc_opt_self();
}

void **initializeBufferWithCopyOfBuffer for FeatureStatusFeedItemRequirement.PortionToCheck(void **a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void destroy for FeatureStatusFeedItemRequirement.PortionToCheck(id *a1)
{

}

void **assignWithCopy for FeatureStatusFeedItemRequirement.PortionToCheck(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a2;
  v4 = *a1;
  *a1 = *a2;
  v5 = v3;

  return a1;
}

_QWORD *initializeWithTake for FeatureStatusFeedItemRequirement.PortionToCheck(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

void **assignWithTake for FeatureStatusFeedItemRequirement.PortionToCheck(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for FeatureStatusFeedItemRequirement.PortionToCheck(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FeatureStatusFeedItemRequirement.PortionToCheck(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_2312DC394(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_2312DC3AC(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for FeatureStatusFeedItemRequirement.PortionToCheck()
{
  return &type metadata for FeatureStatusFeedItemRequirement.PortionToCheck;
}

uint64_t sub_2312DC3DC()
{
  return sub_2312DBD90();
}

void sub_2312DC3FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415CE10)
  {
    sub_2312DC4C4();
    sub_2312DC608();
    sub_2312CCC24(&qword_25415CDE0, (uint64_t (*)(uint64_t))sub_2312DC4C4, MEMORY[0x24BDB94C8]);
    sub_2312CCC24((unint64_t *)&qword_25415CFB0, (uint64_t (*)(uint64_t))sub_2312DC608, MEMORY[0x24BDB9AF8]);
    v0 = sub_231413C0C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415CE10);
  }
}

void sub_2312DC4C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415CDE8)
  {
    sub_2312DC558();
    sub_23141357C();
    sub_2312CCC24((unint64_t *)&unk_25415D060, (uint64_t (*)(uint64_t))sub_2312DC558, MEMORY[0x24BDB9E90]);
    v0 = sub_231413C00();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415CDE8);
  }
}

void sub_2312DC558()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415D070)
  {
    sub_2312DC5D0(255);
    sub_2312CCC24(&qword_25415D030, (uint64_t (*)(uint64_t))sub_2312DC5D0, MEMORY[0x24BDB9DF8]);
    v0 = sub_231413E10();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415D070);
  }
}

void sub_2312DC5D0(uint64_t a1)
{
  sub_2312D6DD8(a1, &qword_25415D038, (uint64_t (*)(uint64_t))sub_2312DC5EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
}

void sub_2312DC5EC(uint64_t a1)
{
  sub_2312D6DD8(a1, &qword_25415C140, (uint64_t (*)(uint64_t))MEMORY[0x24BE45750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

void sub_2312DC608()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415CFC0)
  {
    sub_23141357C();
    v0 = sub_231413D14();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415CFC0);
  }
}

void sub_2312DC66C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415CDA8)
  {
    sub_2312DC608();
    sub_2312CCC24((unint64_t *)&qword_25415CFB0, (uint64_t (*)(uint64_t))sub_2312DC608, MEMORY[0x24BDB9AF8]);
    v0 = sub_231413C00();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415CDA8);
  }
}

uint64_t sub_2312DC6EC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2312DC710()
{
  uint64_t v0;

  return sub_2313FA08C(v0);
}

unint64_t sub_2312DC718()
{
  unint64_t result;

  result = qword_25415BB50;
  if (!qword_25415BB50)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25415BB50);
  }
  return result;
}

uint64_t sub_2312DC754()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_2312DC778(unsigned __int8 *a1@<X8>)
{
  sub_2312DC134(a1);
}

uint64_t *sub_2312DC784(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  __int128 v23;
  uint64_t *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  _QWORD v31[5];
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;

  v28 = sub_231411A4C();
  v26 = *(_QWORD *)(v28 - 8);
  v2 = v26;
  MEMORY[0x24BDAC7A8](v28);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312DEE28();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231411A10();
  sub_2312CEA5C(&v32, *((uint64_t *)&v33 + 1));
  v10 = (void *)sub_2314119C8();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v32);
  v30 = v10;
  v29 = sub_2312DCB5C(v10);
  sub_2312D3C68(0, (unint64_t *)&unk_25415BB40);
  *(_QWORD *)&v32 = sub_231414AF4();
  sub_2312E0084(0, &qword_25415C0C8, (unint64_t *)&unk_25415C0E0, (unint64_t *)&unk_25415BB68);
  sub_2312DEED0();
  sub_231413E70();
  swift_release();
  sub_2312CCC24(&qword_25415C080, (uint64_t (*)(uint64_t))sub_2312DEE28, MEMORY[0x24BDB94C8]);
  v27 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_231411A10();
  sub_2312CEA5C(&v32, *((uint64_t *)&v33 + 1));
  v11 = (void *)sub_2314119C8();
  sub_231411B84();
  swift_allocObject();
  v12 = v11;
  v13 = sub_231411B54();

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v32);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  v15 = (uint64_t)v4;
  v16 = v28;
  v14(v4, a1, v28);
  v31[3] = &type metadata for CardioFitnessRetroComputeDismissalStateManager;
  v31[4] = &off_250020158;
  v17 = (_QWORD *)swift_allocObject();
  v31[0] = v17;
  v17[2] = v13;
  v17[3] = 0xD000000000000016;
  v17[4] = 0x80000002314263F0;
  v17[5] = 0xD000000000000016;
  v17[6] = 0x8000000231426410;
  v17[7] = 0xD000000000000020;
  v17[8] = 0x8000000231426430;
  type metadata accessor for CardioFitnessRetroComputeGeneratorPipeline();
  v18 = (uint64_t *)swift_allocObject();
  v19 = sub_2312DEF74((uint64_t)v31, (uint64_t)&type metadata for CardioFitnessRetroComputeDismissalStateManager);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v26 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v22 + 16))(v21);
  v23 = *((_OWORD *)v21 + 1);
  v32 = *(_OWORD *)v21;
  v33 = v23;
  v34 = *((_OWORD *)v21 + 2);
  v35 = *((_QWORD *)v21 + 6);
  swift_retain();
  sub_231412A90();
  sub_231412A90();
  sub_231412A90();
  v24 = sub_2312DF400(v15, v29, v27, (uint64_t)&v32, v18);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v31);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(a1, v16);
  return v24;
}

uint64_t sub_2312DCB5C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  char *v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v2 = v1;
  v4 = sub_231413780();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312E1C0C();
  v9 = v8;
  v37 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312E1E5C();
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend((id)objc_opt_self(), sel_isAppleInternalInstall))
  {
    sub_231411B84();
    swift_allocObject();
    v17 = a1;
    v36 = sub_231411B54();
    v39 = sub_231411B78();
    v18 = swift_allocObject();
    v34 = v9;
    *(_QWORD *)(v18 + 16) = v2;
    *(_QWORD *)(v18 + 24) = v2;
    sub_231413D08();
    sub_2312E1D8C();
    sub_2312E0084(0, (unint64_t *)&qword_25415BAD0, (unint64_t *)&qword_25415BBF8, &qword_25415BB60);
    sub_2312CCC24(&qword_25415BAE8, (uint64_t (*)(uint64_t))sub_2312E1D8C, MEMORY[0x24BDB9E58]);
    v35 = v14;
    sub_2312E0170();
    v33 = v13;
    sub_231413F24();
    swift_release();
    swift_release();
    *(_QWORD *)(swift_allocObject() + 16) = v2;
    sub_2312CCC24(&qword_25415BA88, (uint64_t (*)(uint64_t))sub_2312E1C0C, MEMORY[0x24BDB98F0]);
    v19 = v34;
    sub_231413ED0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v19);
    sub_2312CCC24(&qword_25415CF30, (uint64_t (*)(uint64_t))sub_2312E1E5C, MEMORY[0x24BDB9740]);
    v20 = v33;
    v21 = sub_231413E7C();
    swift_release();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v16, v20);
  }
  else
  {
    sub_231412148();
    v22 = sub_231413768();
    v23 = sub_23141498C();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      v39 = v25;
      *(_DWORD *)v24 = 136446210;
      v26 = sub_2314151A8();
      v38 = sub_23133180C(v26, v27, &v39);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v22, v23, "[%{public}s] Creating real state publisher for non-internal install", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v25, -1, -1);
      MEMORY[0x2348DE308](v24, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v28 = objc_allocWithZone((Class)type metadata accessor for CMVO2MaxRetrocomputeStatePublisher());
    v29 = sub_2313A1E6C(0);
    v30 = sub_2313A1C94();

    v39 = v30;
    sub_2312E0084(0, (unint64_t *)&qword_25415BAD0, (unint64_t *)&qword_25415BBF8, &qword_25415BB60);
    sub_2312E0170();
    v21 = sub_231413E7C();
    swift_release();
  }
  return v21;
}

uint64_t sub_2312DD010@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  id v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v43 = a2;
  sub_2312E1F50();
  v44 = *(_QWORD *)(v5 - 8);
  v45 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_231413780();
  v46 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v40 - v12;
  v14 = *a1;
  v15 = a1[1];
  v16 = sub_2312DD508(*a1, v15);
  if (v16)
  {
    v17 = v16;
    sub_231412148();
    swift_bridgeObjectRetain_n();
    v18 = sub_231413768();
    v19 = sub_23141498C();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = swift_slowAlloc();
      v41 = swift_slowAlloc();
      v49 = v41;
      *(_DWORD *)v20 = 136446466;
      v42 = a3;
      v21 = sub_2314151A8();
      v43 = v8;
      v47 = sub_23133180C(v21, v22, &v49);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2082;
      v47 = v14;
      v48 = v15;
      sub_2312E1E08();
      sub_231412A90();
      v23 = sub_2314146E0();
      v47 = sub_23133180C(v23, v24, &v49);
      a3 = v42;
      sub_231414CBC();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v18, v19, "[%{public}s] Created mockState from mockStateString: %{public}s", (uint8_t *)v20, 0x16u);
      v25 = v41;
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v25, -1, -1);
      MEMORY[0x2348DE308](v20, -1, -1);

      (*(void (**)(char *, uint64_t))(v46 + 8))(v11, v43);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v11, v8);
    }
    v47 = (uint64_t)v17;
    LOBYTE(v48) = 0;
    sub_2312E00EC(0, (unint64_t *)&qword_25415BBF8, &qword_25415BB60);
    v33 = v17;
    sub_231413DD4();
    sub_2312CCC24(&qword_255ECB550, (uint64_t (*)(uint64_t))sub_2312E1F50, MEMORY[0x24BDB9DF8]);
    v34 = v45;
    v35 = sub_231413E7C();

    result = (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v7, v34);
  }
  else
  {
    sub_231412148();
    v26 = sub_231413768();
    v27 = sub_23141498C();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      v29 = v8;
      v30 = swift_slowAlloc();
      v47 = v30;
      *(_DWORD *)v28 = 136446210;
      v31 = sub_2314151A8();
      v49 = sub_23133180C(v31, v32, &v47);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v26, v27, "[%{public}s] Creating real state publisher", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v30, -1, -1);
      MEMORY[0x2348DE308](v28, -1, -1);

      (*(void (**)(char *, uint64_t))(v46 + 8))(v13, v29);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v46 + 8))(v13, v8);
    }
    v37 = objc_allocWithZone((Class)type metadata accessor for CMVO2MaxRetrocomputeStatePublisher());
    v38 = sub_2313A1E6C(0);
    v39 = sub_2313A1C94();

    v47 = v39;
    sub_2312E0084(0, (unint64_t *)&qword_25415BAD0, (unint64_t *)&qword_25415BBF8, &qword_25415BB60);
    sub_2312E0170();
    v35 = sub_231413E7C();
    result = swift_release();
  }
  *a3 = v35;
  return result;
}

id sub_2312DD508(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  void *v32;
  void *v33;
  id v34;
  void *v35;
  char *v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v4 = sub_231413780();
  v48 = *(_QWORD *)(v4 - 8);
  v49 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v47 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_231411608();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v46 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v46 - v14;
  sub_2312D375C();
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v46 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v46 - v23;
  if (!a2)
    return 0;
  if (a1 == 0x6C62616C69617661 && a2 == 0xE900000000000065 || (sub_231415070() & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v24, 1, 1, v6);
    sub_2314115FC();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v24, 1, v6) == 1)
    {
      v25 = 0;
    }
    else
    {
      v25 = (void *)sub_2314115C0();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v24, v6);
    }
    v26 = objc_allocWithZone(MEMORY[0x24BDC1430]);
    v27 = (void *)sub_2314115C0();
    v28 = objc_msgSend(v26, sel_initWithStatus_startDate_endDate_meanDelta_, 1, v25, v27, 0);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
    return v28;
  }
  if (a1 == 0x616C696176616E75 && a2 == 0xEB00000000656C62 || (sub_231415070() & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v22, 1, 1, v6);
    sub_2314115FC();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v22, 1, v6) == 1)
    {
      v29 = 0;
    }
    else
    {
      v29 = (void *)sub_2314115C0();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v22, v6);
    }
    v30 = objc_allocWithZone(MEMORY[0x24BDC1430]);
    v31 = (void *)sub_2314115C0();
    v28 = objc_msgSend(v30, sel_initWithStatus_startDate_endDate_meanDelta_, 0, v29, v31, 0);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    return v28;
  }
  if ((a1 != 0x6574656C706D6F63 || a2 != 0xE800000000000000) && (sub_231415070() & 1) == 0)
  {
    v36 = v47;
    sub_231412148();
    swift_bridgeObjectRetain_n();
    v37 = sub_231413768();
    v38 = sub_231414974();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = swift_slowAlloc();
      v40 = swift_slowAlloc();
      v52 = v40;
      *(_DWORD *)v39 = 136446466;
      v41 = sub_2314151A8();
      v50 = sub_23133180C(v41, v42, &v52);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 2082;
      v50 = a1;
      v51 = a2;
      sub_2312E1E08();
      sub_231412A90();
      v43 = sub_2314146E0();
      v50 = sub_23133180C(v43, v44, &v52);
      sub_231414CBC();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v37, v38, "[%{public}s] Unrecognized mockStateString: %{public}s", (uint8_t *)v39, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v40, -1, -1);
      MEMORY[0x2348DE308](v39, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v48 + 8))(v36, v49);
    return 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v19, 1, 1, v6);
  sub_2314115FC();
  sub_2312D3C68(0, (unint64_t *)&qword_255ECFBD0);
  v32 = (void *)sub_231414BD8();
  v33 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v19, 1, v6) != 1)
  {
    v33 = (void *)sub_2314115C0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
  }
  v34 = objc_allocWithZone(MEMORY[0x24BDC1430]);
  v35 = (void *)sub_2314115C0();
  v28 = objc_msgSend(v34, sel_initWithStatus_startDate_endDate_meanDelta_, 3, v33, v35, v32);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  return v28;
}

void sub_2312DDB5C(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint8_t *v13;
  id v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;

  v2 = sub_231413780();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231412148();
  v6 = sub_231413768();
  v7 = sub_231414974();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v18 = a1;
    v9 = (uint8_t *)v8;
    v10 = swift_slowAlloc();
    v20 = v10;
    *(_DWORD *)v9 = 136446210;
    v11 = sub_2314151A8();
    v19 = sub_23133180C(v11, v12, &v20);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v6, v7, "[%{public}s] Failed to get mockStateString, return real state publisher", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v10, -1, -1);
    v13 = v9;
    a1 = v18;
    MEMORY[0x2348DE308](v13, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v14 = objc_allocWithZone((Class)type metadata accessor for CMVO2MaxRetrocomputeStatePublisher());
  v15 = sub_2313A1E6C(0);
  v16 = sub_2313A1C94();

  *a1 = v16;
}

uint64_t sub_2312DDD20@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_231414B6C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2312DDD54@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint8_t *v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;

  v45 = a6;
  v46 = (uint64_t *)a2;
  v47 = a4;
  sub_2312DFC3C();
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_231413780();
  v48 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v42 - v20;
  if (*a1 == 1)
  {
    sub_231412148();
    v22 = sub_231413768();
    v23 = sub_23141498C();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc();
      v44 = a3;
      v25 = (uint8_t *)v24;
      v26 = swift_slowAlloc();
      *(_QWORD *)&v50 = v26;
      *(_DWORD *)v25 = 136446210;
      v27 = sub_2314151A8();
      v43 = v16;
      v49 = sub_23133180C(v27, v28, (uint64_t *)&v50);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v22, v23, "[%{public}s] First restore is complete, creating generation publisher from result state publisher", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v26, -1, -1);
      v29 = v25;
      a3 = v44;
      MEMORY[0x2348DE308](v29, -1, -1);

      (*(void (**)(char *, uint64_t))(v48 + 8))(v21, v43);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v48 + 8))(v21, v16);
    }
    v37 = sub_2312CEA5C(a5, a5[3]);
    v50 = *(_OWORD *)v37;
    v51 = *((_OWORD *)v37 + 1);
    v52 = *((_OWORD *)v37 + 2);
    v53 = v37[6];
    result = sub_2312DFCDC(a3, v47, (uint64_t)&v50, (uint64_t)v46);
    v39 = result;
  }
  else
  {
    v47 = v13;
    sub_231412148();
    v30 = sub_231413768();
    v31 = sub_23141498C();
    if (os_log_type_enabled(v30, v31))
    {
      v46 = a7;
      v32 = swift_slowAlloc();
      v44 = a3;
      v33 = (uint8_t *)v32;
      v34 = swift_slowAlloc();
      *(_QWORD *)&v50 = v34;
      *(_DWORD *)v33 = 136446210;
      v43 = v16;
      v35 = sub_2314151A8();
      v49 = sub_23133180C(v35, v36, (uint64_t *)&v50);
      sub_231414CBC();
      a7 = v46;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v30, v31, "[%{public}s] First restore is not complete yet, deleting feed item", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v34, -1, -1);
      MEMORY[0x2348DE308](v33, -1, -1);

      (*(void (**)(char *, uint64_t))(v48 + 8))(v19, v43);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v48 + 8))(v19, v16);
    }
    *((_QWORD *)&v51 + 1) = sub_231411A7C();
    *(_QWORD *)&v52 = MEMORY[0x24BE47A60];
    sub_2312DFCA0((uint64_t *)&v50);
    v40 = v47;
    if (qword_25415B840 != -1)
      swift_once();
    v41 = sub_231411A04();
    sub_2312CE3B8(v41, (uint64_t)qword_254162E20);
    sub_231411A58();
    sub_2312DF79C(0, (unint64_t *)&qword_25415D530);
    sub_231413DD4();
    sub_2312CCC24((unint64_t *)&qword_25415DDB0, (uint64_t (*)(uint64_t))sub_2312DFC3C, MEMORY[0x24BDB9DF8]);
    v39 = sub_231413E7C();
    result = (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v15, v12);
  }
  *a7 = v39;
  return result;
}

uint64_t sub_2312DE208@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  void (*v15)(_BYTE *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  _BYTE v24[12];
  int v25;
  uint64_t v26;
  uint64_t *v27;

  v26 = a3;
  v27 = a4;
  v6 = sub_231411A04();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v24[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_231411A4C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v14 = &v24[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v13);
  v25 = *a1;
  v15 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16);
  v15(&v24[-v16], a2, v10);
  if (qword_25415B840 != -1)
    swift_once();
  v17 = sub_2312CE3B8(v6, (uint64_t)qword_254162E20);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, v17, v6);
  v15(v14, a2, v10);
  v18 = (*(unsigned __int8 *)(v11 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v19 = swift_allocObject();
  *(_BYTE *)(v19 + 16) = v25;
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v11 + 32))(v19 + v18, v14, v10);
  *(_QWORD *)(v19 + ((v12 + v18 + 7) & 0xFFFFFFFFFFFFFFF8)) = v26;
  v20 = sub_231411A7C();
  v21 = MEMORY[0x24BE47A60];
  v22 = v27;
  v27[3] = v20;
  v22[4] = v21;
  sub_2312DFCA0(v22);
  return sub_231411A64();
}

void sub_2312DE400(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  char v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = sub_231413780();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v31 - v11;
  if ((a1 & 1) != 0)
  {
    sub_231412148();
    v13 = sub_231413768();
    v14 = sub_23141498C();
    if (os_log_type_enabled(v13, v14))
    {
      v32 = a3;
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v31 = a2;
      v17 = v16;
      v34 = v16;
      *(_DWORD *)v15 = 136446210;
      v18 = sub_2314151A8();
      v33 = sub_23133180C(v18, v19, &v34);
      a3 = v32;
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v13, v14, "[%{public}s] Creating available(promote: false) state feed item", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v17, -1, -1);
      MEMORY[0x2348DE308](v15, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    v20 = (void *)sub_231411A28();
    v21 = v20;
    v22 = a3;
    v23 = 0;
  }
  else
  {
    sub_231412148();
    v24 = sub_231413768();
    v25 = sub_23141498C();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      v31 = a2;
      v28 = v27;
      v34 = v27;
      v32 = a3;
      *(_DWORD *)v26 = 136446210;
      v29 = sub_2314151A8();
      v33 = sub_23133180C(v29, v30, &v34);
      a3 = v32;
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v24, v25, "[%{public}s] Creating available(promote: true) state feed item", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v28, -1, -1);
      MEMORY[0x2348DE308](v26, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    v20 = (void *)sub_231411A28();
    v21 = v20;
    v22 = a3;
    v23 = 1;
  }
  sub_231370A60(v20, v23, 0, v22);

}

uint64_t sub_2312DE724@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>, double a5@<D0>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  void (*v17)(_BYTE *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  _BYTE v27[12];
  int v28;
  uint64_t v29;
  uint64_t *v30;

  v29 = a3;
  v30 = a4;
  v8 = sub_231411A04();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = &v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = sub_231411A4C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v16 = &v27[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v28 = *a1;
  v17 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16);
  v17(&v27[-v18], a2, v12);
  if (qword_25415B840 != -1)
    swift_once();
  v19 = sub_2312CE3B8(v8, (uint64_t)qword_254162E20);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v11, v19, v8);
  v17(v16, a2, v12);
  v20 = (*(unsigned __int8 *)(v13 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v21 = (v14 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = swift_allocObject();
  *(_BYTE *)(v22 + 16) = v28;
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v13 + 32))(v22 + v20, v16, v12);
  *(double *)(v22 + v21) = a5;
  *(_QWORD *)(v22 + ((v21 + 15) & 0xFFFFFFFFFFFFFFF8)) = v29;
  v23 = sub_231411A7C();
  v24 = MEMORY[0x24BE47A60];
  v25 = v30;
  v30[3] = v23;
  v25[4] = v24;
  sub_2312DFCA0(v25);
  return sub_231411A64();
}

void sub_2312DE934(char a1@<W0>, uint64_t a2@<X8>, __n128 a3@<Q0>)
{
  char v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v3 = a3.n128_u8[0];
  v6 = sub_231413780();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v29 - v11;
  if ((a1 & 1) != 0)
  {
    sub_231412148();
    v13 = sub_231413768();
    v14 = sub_23141498C();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v32 = v16;
      v30 = v6;
      *(_DWORD *)v15 = 136446210;
      v17 = sub_2314151A8();
      v31 = sub_23133180C(v17, v18, &v32);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v13, v14, "[%{public}s] Complete state feed item dismissed, deleting feed item", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v16, -1, -1);
      MEMORY[0x2348DE308](v15, -1, -1);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v30);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    }
    v27 = sub_2314119B0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(a2, 1, 1, v27);
  }
  else
  {
    sub_231412148();
    v19 = sub_231413768();
    v20 = sub_23141498C();
    if (os_log_type_enabled(v19, v20))
    {
      v30 = v6;
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      v29 = a2;
      v23 = v22;
      v32 = v22;
      *(_DWORD *)v21 = 136446210;
      v24 = sub_2314151A8();
      v31 = sub_23133180C(v24, v25, &v32);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v19, v20, "[%{public}s] Creating complete state feed item", v21, 0xCu);
      swift_arrayDestroy();
      v26 = v23;
      a2 = v29;
      MEMORY[0x2348DE308](v26, -1, -1);
      MEMORY[0x2348DE308](v21, -1, -1);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v30);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
    v28 = (void *)sub_231411A28();
    sub_231370A60(v28, v3, 0x40u, a2);

  }
}

uint64_t sub_2312DEC94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC5Heart42CardioFitnessRetroComputeGeneratorPipeline_domain;
  v2 = sub_231411A04();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + OBJC_IVAR____TtC5Heart42CardioFitnessRetroComputeGeneratorPipeline_dismissalStateManaging);
  return swift_deallocClassInstance();
}

uint64_t sub_2312DED04()
{
  return type metadata accessor for CardioFitnessRetroComputeGeneratorPipeline();
}

uint64_t type metadata accessor for CardioFitnessRetroComputeGeneratorPipeline()
{
  uint64_t result;

  result = qword_25415B850;
  if (!qword_25415B850)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2312DED48()
{
  uint64_t result;
  unint64_t v1;

  result = sub_231411A04();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_2312DEDCC()
{
  return swift_retain();
}

uint64_t sub_2312DEDE0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC5Heart42CardioFitnessRetroComputeGeneratorPipeline_domain;
  v4 = sub_231411A04();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void sub_2312DEE28()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415C088)
  {
    sub_2312E0084(255, &qword_25415C0C8, (unint64_t *)&unk_25415C0E0, (unint64_t *)&unk_25415BB68);
    sub_2312D3C68(255, (unint64_t *)&unk_25415BB68);
    sub_2312DEED0();
    v0 = sub_231413C00();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415C088);
  }
}

unint64_t sub_2312DEED0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25415C0C0;
  if (!qword_25415C0C0)
  {
    sub_2312E0084(255, &qword_25415C0C8, (unint64_t *)&unk_25415C0E0, (unint64_t *)&unk_25415BB68);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB9AF8], v1);
    atomic_store(result, (unint64_t *)&qword_25415C0C0);
  }
  return result;
}

uint64_t sub_2312DEF38()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2312DEF74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_2312DEF9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  __int128 v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54[2];
  _QWORD v55[6];

  v47 = a5;
  v48 = a2;
  v44 = a1;
  v42 = sub_231411A4C();
  v7 = *(_QWORD *)(v42 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v42);
  sub_2312DF894();
  v50 = v9;
  v52 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v45 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312E01D8(0, &qword_25415BA08, v11, (void (*)(void))sub_2312DFAB8);
  v51 = v12;
  v53 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v46 = (char *)&v41 - v13;
  sub_2312DF96C();
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312E1784(0, &qword_25415BA28, v19, (void (*)(void))sub_2312DFA5C);
  v43 = v20;
  v49 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v41 - v21;
  v55[3] = &type metadata for CardioFitnessRetroComputeDismissalStateManager;
  v55[4] = &off_250020158;
  v23 = swift_allocObject();
  v55[0] = v23;
  v24 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(v23 + 16) = *(_OWORD *)a4;
  *(_OWORD *)(v23 + 32) = v24;
  *(_OWORD *)(v23 + 48) = *(_OWORD *)(a4 + 32);
  *(_QWORD *)(v23 + 64) = *(_QWORD *)(a4 + 48);
  *(_QWORD *)&v54[0] = a3;
  sub_2312D9D18(a4);
  sub_2312DF738(0, &qword_25415BAC0, (uint64_t)&unk_25415BB68, 0x24BDD39F8, (void (*)(uint64_t, uint64_t, uint64_t))sub_2312D3C68);
  sub_2312DF9F4();
  sub_231413EB8();
  sub_2312DFA5C();
  sub_231413F6C();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  v25 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = v42;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v25, v44, v42);
  sub_2312DF850((uint64_t)v55, (uint64_t)v54);
  v27 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v28 = (v8 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = (v28 + 15) & 0xFFFFFFFFFFFFFFF8;
  v30 = swift_allocObject();
  v31 = v47;
  *(_QWORD *)(v30 + 16) = v47;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v30 + v27, v25, v26);
  *(_QWORD *)(v30 + v28) = v48;
  sub_2312DFB68(v54, v30 + v29);
  *(_QWORD *)(v30 + ((v29 + 47) & 0xFFFFFFFFFFFFFFF8)) = v31;
  sub_2312DF738(0, (unint64_t *)&qword_25415DD68, (uint64_t)&qword_25415D530, MEMORY[0x24BE48428], (void (*)(uint64_t, uint64_t, uint64_t))sub_2312DF79C);
  sub_2312DFA78(&qword_25415BA20, &qword_25415BA28, (void (*)(uint64_t))sub_2312DF96C, (void (*)(void))sub_2312DFA5C);
  swift_retain();
  v32 = v45;
  v33 = v43;
  sub_231413EB8();
  swift_release();
  v34 = sub_2312DFAB8();
  v35 = sub_2312DF7E8();
  v36 = v46;
  v37 = v50;
  MEMORY[0x2348DC958](v50, v34, v35);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v32, v37);
  sub_2312DFBFC(&qword_25415BA00, &qword_25415BA08, (void (*)(uint64_t))sub_2312DF894, (void (*)(void))sub_2312DFAB8);
  v38 = v51;
  v39 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v36, v38);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v22, v33);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v55);
  return v39;
}

uint64_t *sub_2312DF400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  __int128 v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[3];
  ValueMetadata *v30;
  _UNKNOWN **v31;
  _OWORD v32[3];
  uint64_t v33;

  v10 = *a5;
  sub_2312DF6B8();
  v12 = v11;
  v27 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = &type metadata for CardioFitnessRetroComputeDismissalStateManager;
  v31 = &off_250020158;
  v15 = swift_allocObject();
  v29[0] = v15;
  v16 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(v15 + 16) = *(_OWORD *)a4;
  *(_OWORD *)(v15 + 32) = v16;
  *(_OWORD *)(v15 + 48) = *(_OWORD *)(a4 + 32);
  *(_QWORD *)(v15 + 64) = *(_QWORD *)(a4 + 48);
  if (qword_25415B840 != -1)
    swift_once();
  v17 = sub_231411A04();
  v18 = sub_2312CE3B8(v17, (uint64_t)qword_254162E20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))((uint64_t)a5 + OBJC_IVAR____TtC5Heart42CardioFitnessRetroComputeGeneratorPipeline_domain, v18, v17);
  sub_2312DF850((uint64_t)v29, (uint64_t)a5 + OBJC_IVAR____TtC5Heart42CardioFitnessRetroComputeGeneratorPipeline_dismissalStateManaging);
  v19 = sub_2312CEA5C(v29, (uint64_t)v30);
  v20 = *((_OWORD *)v19 + 1);
  v32[0] = *(_OWORD *)v19;
  v32[1] = v20;
  v32[2] = *((_OWORD *)v19 + 2);
  v33 = v19[6];
  v28 = sub_2312DEF9C(a1, a2, a3, (uint64_t)v32, v10);
  v21 = sub_231411A1C();
  sub_2312DF738(0, (unint64_t *)&qword_25415DD68, (uint64_t)&qword_25415D530, MEMORY[0x24BE48428], (void (*)(uint64_t, uint64_t, uint64_t))sub_2312DF79C);
  sub_2312DF7E8();
  if ((v21 & 1) != 0)
  {
    v22 = sub_231413E7C();
  }
  else
  {
    sub_231413EDC();
    sub_2312CCC24(&qword_25415B680, (uint64_t (*)(uint64_t))sub_2312DF6B8, MEMORY[0x24BDB9770]);
    v22 = sub_231413E7C();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v12);
  }
  swift_release();
  v28 = v22;
  v23 = sub_231413E7C();
  swift_release();
  swift_release();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v29);
  v24 = sub_231411A4C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(a1, v24);
  swift_release();
  *(uint64_t *)((char *)a5 + OBJC_IVAR____TtC5Heart42CardioFitnessRetroComputeGeneratorPipeline_publisher) = v23;
  return a5;
}

void sub_2312DF6B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415DD08)
  {
    sub_2312DF738(255, (unint64_t *)&qword_25415DD68, (uint64_t)&qword_25415D530, MEMORY[0x24BE48428], (void (*)(uint64_t, uint64_t, uint64_t))sub_2312DF79C);
    sub_2312DF7E8();
    v0 = sub_231413C84();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415DD08);
  }
}

void sub_2312DF738(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a5(255, a3, a4);
    v6 = sub_231413D14();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_2312DF79C(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_2312DF7E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25415DD60;
  if (!qword_25415DD60)
  {
    sub_2312DF738(255, (unint64_t *)&qword_25415DD68, (uint64_t)&qword_25415D530, MEMORY[0x24BE48428], (void (*)(uint64_t, uint64_t, uint64_t))sub_2312DF79C);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB9AF8], v1);
    atomic_store(result, (unint64_t *)&qword_25415DD60);
  }
  return result;
}

uint64_t sub_2312DF850(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_2312DF894()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415BA68)
  {
    sub_2312E1784(255, &qword_25415BA28, (void (*)(uint64_t))sub_2312DF96C, (void (*)(void))sub_2312DFA5C);
    sub_2312DF738(255, (unint64_t *)&qword_25415DD68, (uint64_t)&qword_25415D530, MEMORY[0x24BE48428], (void (*)(uint64_t, uint64_t, uint64_t))sub_2312DF79C);
    sub_2312DFA78(&qword_25415BA20, &qword_25415BA28, (void (*)(uint64_t))sub_2312DF96C, (void (*)(void))sub_2312DFA5C);
    v0 = sub_231413C60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415BA68);
  }
}

void sub_2312DF96C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415BA48)
  {
    sub_2312DF738(255, &qword_25415BAC0, (uint64_t)&unk_25415BB68, 0x24BDD39F8, (void (*)(uint64_t, uint64_t, uint64_t))sub_2312D3C68);
    sub_2312DF9F4();
    v0 = sub_231413C60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415BA48);
  }
}

unint64_t sub_2312DF9F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25415BAB8;
  if (!qword_25415BAB8)
  {
    sub_2312DF738(255, &qword_25415BAC0, (uint64_t)&unk_25415BB68, 0x24BDD39F8, (void (*)(uint64_t, uint64_t, uint64_t))sub_2312D3C68);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB9AF8], v1);
    atomic_store(result, (unint64_t *)&qword_25415BAB8);
  }
  return result;
}

uint64_t sub_2312DFA5C()
{
  return sub_2312CCC24(&qword_25415BA40, (uint64_t (*)(uint64_t))sub_2312DF96C, MEMORY[0x24BDB96C0]);
}

uint64_t sub_2312DFA78(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_2312E1784(255, a2, a3, a4);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB9658], v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2312DFAB8()
{
  return sub_2312CCC24(&qword_25415BA60, (uint64_t (*)(uint64_t))sub_2312DF894, MEMORY[0x24BDB96C0]);
}

uint64_t sub_2312DFAD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_231411A4C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + v4);
  return swift_deallocObject();
}

uint64_t sub_2312DFB68(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_2312DFB80@<X0>(_BYTE *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(sub_231411A4C() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_2312DDD54(a1, *(_QWORD *)(v2 + 16), v2 + v6, *(_QWORD *)(v2 + v7), (_QWORD *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFF8)), a2);
}

uint64_t sub_2312DFBFC(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_2312E01D8(255, a2, a3, a4);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB9610], v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_2312DFC3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415DDB8)
  {
    sub_2312DF79C(255, (unint64_t *)&qword_25415D530);
    v0 = sub_231413DC8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415DDB8);
  }
}

uint64_t *sub_2312DFCA0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_2312DFCDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __int128 v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35[2];
  uint64_t v36;
  _QWORD v37[5];

  v31 = a4;
  v7 = sub_231411A4C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312DFFCC();
  v12 = *(_QWORD *)(v11 - 8);
  v32 = v11;
  v33 = v12;
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312E01D8(0, &qword_25415BA18, v15, (void (*)(void))sub_2312E0288);
  v17 = v16;
  v34 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v30 - v18;
  v37[3] = &type metadata for CardioFitnessRetroComputeDismissalStateManager;
  v37[4] = &off_250020158;
  v20 = swift_allocObject();
  v36 = a2;
  v37[0] = v20;
  v21 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v20 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(v20 + 32) = v21;
  *(_OWORD *)(v20 + 48) = *(_OWORD *)(a3 + 32);
  *(_QWORD *)(v20 + 64) = *(_QWORD *)(a3 + 48);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  sub_2312DF850((uint64_t)v37, (uint64_t)v35);
  v22 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v23 = (v9 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v31;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v24 + v22, v10, v7);
  sub_2312DFB68(v35, v24 + v23);
  sub_2312D9D18(a3);
  sub_2312E0084(0, (unint64_t *)&qword_25415BAD0, (unint64_t *)&qword_25415BBF8, &qword_25415BB60);
  sub_2312DF738(0, (unint64_t *)&qword_25415DD68, (uint64_t)&qword_25415D530, MEMORY[0x24BE48428], (void (*)(uint64_t, uint64_t, uint64_t))sub_2312DF79C);
  sub_2312E0170();
  sub_231413EB8();
  swift_release();
  v25 = sub_2312E0288();
  v26 = sub_2312DF7E8();
  v27 = v32;
  MEMORY[0x2348DC958](v32, v25, v26);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v27);
  sub_2312DFBFC(&qword_25415BA10, &qword_25415BA18, (void (*)(uint64_t))sub_2312DFFCC, (void (*)(void))sub_2312E0288);
  v28 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v19, v17);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v37);
  return v28;
}

void sub_2312DFFCC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415BA58)
  {
    sub_2312E0084(255, (unint64_t *)&qword_25415BAD0, (unint64_t *)&qword_25415BBF8, &qword_25415BB60);
    sub_2312DF738(255, (unint64_t *)&qword_25415DD68, (uint64_t)&qword_25415D530, MEMORY[0x24BE48428], (void (*)(uint64_t, uint64_t, uint64_t))sub_2312DF79C);
    sub_2312E0170();
    v0 = sub_231413C60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415BA58);
  }
}

void sub_2312E0084(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_2312E00EC(255, a3, a4);
    v5 = sub_231413D14();
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_2312E00EC(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_2312D3C68(255, a3);
    sub_2312DF79C(255, (unint64_t *)&qword_25415DF60);
    v4 = sub_231415160();
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_2312E0170()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25415BAC8;
  if (!qword_25415BAC8)
  {
    sub_2312E0084(255, (unint64_t *)&qword_25415BAD0, (unint64_t *)&qword_25415BBF8, &qword_25415BB60);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB9AF8], v1);
    atomic_store(result, (unint64_t *)&qword_25415BAC8);
  }
  return result;
}

void sub_2312E01D8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_2312DF738(255, (unint64_t *)&qword_25415DD68, (uint64_t)&qword_25415D530, MEMORY[0x24BE48428], (void (*)(uint64_t, uint64_t, uint64_t))sub_2312DF79C);
    a3(255);
    sub_2312DF7E8();
    a4();
    v7 = sub_231413C3C();
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_2312E0288()
{
  return sub_2312CCC24(&qword_25415BA50, (uint64_t (*)(uint64_t))sub_2312DFFCC, MEMORY[0x24BDB96C0]);
}

uint64_t sub_2312E02A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_231411A4C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + v4);
  return swift_deallocObject();
}

uint64_t sub_2312E0318@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  _QWORD *v11;
  __int128 v12;
  uint64_t result;
  _OWORD v14[3];
  uint64_t v15;

  v5 = *(_QWORD *)(sub_231411A4C() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v2 + 16);
  v8 = v2 + v6;
  v9 = (_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  v10 = *(void **)a1;
  LODWORD(a1) = *(unsigned __int8 *)(a1 + 8);
  v11 = sub_2312CEA5C(v9, v9[3]);
  v12 = *((_OWORD *)v11 + 1);
  v14[0] = *(_OWORD *)v11;
  v14[1] = v12;
  v14[2] = *((_OWORD *)v11 + 2);
  v15 = v11[6];
  result = sub_2312E1104(v8, v10, a1, (uint64_t)v14, v7);
  *a2 = result;
  return result;
}

uint64_t sub_2312E03C8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  __int128 v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  id v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD v106[3];
  ValueMetadata *v107;
  _UNKNOWN **v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  uint64_t v112;

  v101 = a4;
  v104 = a1;
  v92 = sub_231411A4C();
  v6 = *(_QWORD *)(v92 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v92);
  v91 = (char *)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312E1784(0, &qword_25415CE50, (void (*)(uint64_t))sub_2312D75F0, (void (*)(void))sub_2312E17E8);
  v95 = v8;
  v94 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v93 = (char *)&v91 - v9;
  sub_2312E1804();
  v98 = v10;
  v97 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v96 = (char *)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312DFC3C();
  v99 = *(_QWORD *)(v12 - 8);
  v100 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_231413780();
  v102 = *(_QWORD *)(v15 - 8);
  v103 = v15;
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v91 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v91 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)&v91 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)&v91 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v91 - v28;
  v107 = &type metadata for CardioFitnessRetroComputeDismissalStateManager;
  v108 = &off_250020158;
  v30 = swift_allocObject();
  v106[0] = v30;
  v31 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v30 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(v30 + 32) = v31;
  *(_OWORD *)(v30 + 48) = *(_OWORD *)(a3 + 32);
  *(_QWORD *)(v30 + 64) = *(_QWORD *)(a3 + 48);
  sub_2312D9D18(a3);
  switch((unint64_t)objc_msgSend(a2, sel_status))
  {
    case 0uLL:
      sub_231412148();
      v32 = sub_231413768();
      v33 = sub_23141498C();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = (uint8_t *)swift_slowAlloc();
        v35 = swift_slowAlloc();
        *(_QWORD *)&v109 = v35;
        *(_DWORD *)v34 = 136446210;
        v36 = sub_2314151A8();
        v105 = sub_23133180C(v36, v37, (uint64_t *)&v109);
        sub_231414CBC();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2312C8000, v32, v33, "[%{public}s] Creating delete generator since status is unavailable", v34, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2348DE308](v35, -1, -1);
        MEMORY[0x2348DE308](v34, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v102 + 8))(v29, v103);
      goto LABEL_17;
    case 1uLL:
      sub_231412148();
      v46 = sub_231413768();
      v47 = sub_23141498C();
      if (os_log_type_enabled(v46, v47))
      {
        v48 = (uint8_t *)swift_slowAlloc();
        v49 = swift_slowAlloc();
        *(_QWORD *)&v109 = v49;
        *(_DWORD *)v48 = 136446210;
        v50 = sub_2314151A8();
        v105 = sub_23133180C(v50, v51, (uint64_t *)&v109);
        sub_231414CBC();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2312C8000, v46, v47, "[%{public}s] Creating available status generator publisher", v48, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2348DE308](v49, -1, -1);
        MEMORY[0x2348DE308](v48, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v102 + 8))(v27, v103);
      v52 = sub_2312CEA5C(v106, (uint64_t)v107);
      v109 = *(_OWORD *)v52;
      v110 = *((_OWORD *)v52 + 1);
      v111 = *((_OWORD *)v52 + 2);
      v112 = v52[6];
      v105 = sub_2312D6EC8();
      sub_2312D75F0();
      sub_2312E17E8();
      v53 = v93;
      sub_231413F6C();
      v54 = v91;
      v55 = v92;
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v91, v104, v92);
      v56 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      v57 = (v7 + v56 + 7) & 0xFFFFFFFFFFFFFFF8;
      v58 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v58 + v56, v54, v55);
      *(_QWORD *)(v58 + v57) = v101;
      sub_2312DF79C(0, (unint64_t *)&qword_25415D530);
      sub_2312DFA78(&qword_25415CE48, &qword_25415CE50, (void (*)(uint64_t))sub_2312D75F0, (void (*)(void))sub_2312E17E8);
      v59 = v96;
      v60 = v95;
      sub_231413EB8();
      swift_release();
      (*(void (**)(char *, uint64_t))(v94 + 8))(v53, v60);
      goto LABEL_22;
    case 2uLL:
      sub_231412148();
      v61 = sub_231413768();
      v62 = sub_23141498C();
      if (os_log_type_enabled(v61, v62))
      {
        v63 = (uint8_t *)swift_slowAlloc();
        v64 = swift_slowAlloc();
        *(_QWORD *)&v109 = v64;
        *(_DWORD *)v63 = 136446210;
        v65 = sub_2314151A8();
        v105 = sub_23133180C(v65, v66, (uint64_t *)&v109);
        sub_231414CBC();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2312C8000, v61, v62, "[%{public}s] Creating delete generator since status is inProgress", v63, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2348DE308](v64, -1, -1);
        MEMORY[0x2348DE308](v63, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v102 + 8))(v24, v103);
      goto LABEL_17;
    case 3uLL:
      v67 = objc_msgSend(a2, sel_meanDelta);
      objc_msgSend(v67, sel_doubleValue);
      v69 = v68;

      sub_231412148();
      v70 = sub_231413768();
      v71 = sub_23141498C();
      if (os_log_type_enabled(v70, v71))
      {
        v72 = swift_slowAlloc();
        v100 = swift_slowAlloc();
        *(_QWORD *)&v109 = v100;
        *(_DWORD *)v72 = 136446466;
        v73 = v101;
        v74 = sub_2314151A8();
        v105 = sub_23133180C(v74, v75, (uint64_t *)&v109);
        sub_231414CBC();
        v76 = v73;
        swift_bridgeObjectRelease();
        *(_WORD *)(v72 + 12) = 2048;
        v105 = v69;
        sub_231414CBC();
        _os_log_impl(&dword_2312C8000, v70, v71, "[%{public}s] Creating complete status generator publisher with deltaVO2MaxValue: %f", (uint8_t *)v72, 0x16u);
        v77 = v100;
        swift_arrayDestroy();
        MEMORY[0x2348DE308](v77, -1, -1);
        MEMORY[0x2348DE308](v72, -1, -1);

        (*(void (**)(char *, uint64_t))(v102 + 8))(v21, v103);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v102 + 8))(v21, v103);
        v76 = v101;
      }
      v81 = sub_2312CEA5C(v106, (uint64_t)v107);
      v109 = *(_OWORD *)v81;
      v110 = *((_OWORD *)v81 + 1);
      v111 = *((_OWORD *)v81 + 2);
      v112 = v81[6];
      v105 = sub_2312D7A30();
      sub_2312D75F0();
      sub_2312E17E8();
      v82 = v93;
      sub_231413F6C();
      v83 = v91;
      v84 = v92;
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v91, v104, v92);
      v85 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      v86 = (v7 + v85 + 7) & 0xFFFFFFFFFFFFFFF8;
      v87 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v87 + v85, v83, v84);
      *(_QWORD *)(v87 + v86) = v69;
      *(_QWORD *)(v87 + ((v86 + 15) & 0xFFFFFFFFFFFFFFF8)) = v76;
      sub_2312DF79C(0, (unint64_t *)&qword_25415D530);
      sub_2312DFA78(&qword_25415CE48, &qword_25415CE50, (void (*)(uint64_t))sub_2312D75F0, (void (*)(void))sub_2312E17E8);
      v59 = v96;
      v88 = v95;
      sub_231413EB8();
      swift_release();
      (*(void (**)(char *, uint64_t))(v94 + 8))(v82, v88);
LABEL_22:
      sub_2312CCC24(&qword_255ECB548, (uint64_t (*)(uint64_t))sub_2312E1804, MEMORY[0x24BDB96C0]);
      v89 = v98;
      v80 = sub_231413E7C();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v59, v89);
      swift_release();
      break;
    default:
      sub_231412148();
      v38 = a2;
      v39 = sub_231413768();
      v40 = sub_231414974();
      if (os_log_type_enabled(v39, v40))
      {
        v41 = swift_slowAlloc();
        v98 = swift_slowAlloc();
        *(_QWORD *)&v109 = v98;
        *(_DWORD *)v41 = 136446466;
        v42 = sub_2314151A8();
        v105 = sub_23133180C(v42, v43, (uint64_t *)&v109);
        sub_231414CBC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v41 + 12) = 2048;
        v44 = objc_msgSend(v38, sel_status);

        v105 = (uint64_t)v44;
        sub_231414CBC();

        _os_log_impl(&dword_2312C8000, v39, v40, "[%{public}s] Creating delete generator due to unknown status received: %ld", (uint8_t *)v41, 0x16u);
        v45 = v98;
        swift_arrayDestroy();
        MEMORY[0x2348DE308](v45, -1, -1);
        MEMORY[0x2348DE308](v41, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v102 + 8))(v18, v103);
LABEL_17:
      *((_QWORD *)&v110 + 1) = sub_231411A7C();
      *(_QWORD *)&v111 = MEMORY[0x24BE47A60];
      sub_2312DFCA0((uint64_t *)&v109);
      if (qword_25415B840 != -1)
        swift_once();
      v78 = sub_231411A04();
      sub_2312CE3B8(v78, (uint64_t)qword_254162E20);
      sub_231411A58();
      sub_2312DF79C(0, (unint64_t *)&qword_25415D530);
      sub_231413DD4();
      sub_2312CCC24((unint64_t *)&qword_25415DDB0, (uint64_t (*)(uint64_t))sub_2312DFC3C, MEMORY[0x24BDB9DF8]);
      v79 = v100;
      v80 = sub_231413E7C();
      (*(void (**)(char *, uint64_t))(v99 + 8))(v14, v79);
      break;
  }
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v106);
  return v80;
}

uint64_t sub_2312E1104(uint64_t a1, void *a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  __int128 v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (**v53)(_QWORD, _QWORD);
  uint64_t v54;
  int v55;
  id v56;
  _QWORD v57[3];
  ValueMetadata *v58;
  _UNKNOWN **v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;

  sub_2312DFC3C();
  v11 = v10;
  v53 = *(void (***)(_QWORD, _QWORD))(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_231413780();
  v54 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v50 - v18;
  v58 = &type metadata for CardioFitnessRetroComputeDismissalStateManager;
  v59 = &off_250020158;
  v20 = swift_allocObject();
  v57[0] = v20;
  v21 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(v20 + 16) = *(_OWORD *)a4;
  *(_OWORD *)(v20 + 32) = v21;
  *(_OWORD *)(v20 + 48) = *(_OWORD *)(a4 + 32);
  *(_QWORD *)(v20 + 64) = *(_QWORD *)(a4 + 48);
  sub_2312D9D18(a4);
  v55 = a3;
  if ((a3 & 1) != 0)
  {
    sub_2312E176C(a2);
    sub_231412148();
    v22 = a2;
    v23 = a2;
    v24 = sub_231413768();
    v25 = sub_231414974();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = swift_slowAlloc();
      v51 = v14;
      v27 = v26;
      v28 = swift_slowAlloc();
      *(_QWORD *)&v60 = v28;
      *(_DWORD *)v27 = 136446466;
      v52 = a1;
      v29 = sub_2314151A8();
      v56 = (id)sub_23133180C(v29, v30, (uint64_t *)&v60);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2082;
      v56 = a2;
      v31 = a2;
      sub_2312DF79C(0, (unint64_t *)&qword_25415DF60);
      v32 = sub_2314146E0();
      v56 = (id)sub_23133180C(v32, v33, (uint64_t *)&v60);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      sub_2312E1778(a2);
      sub_2312E1778(a2);
      _os_log_impl(&dword_2312C8000, v24, v25, "[%{public}s] Creating delete generator due to get retrocompute state failure: %{public}s", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v28, -1, -1);
      MEMORY[0x2348DE308](v27, -1, -1);

      (*(void (**)(char *, uint64_t))(v54 + 8))(v17, v51);
    }
    else
    {
      sub_2312E1778(a2);
      sub_2312E1778(a2);

      (*(void (**)(char *, uint64_t))(v54 + 8))(v17, v14);
    }
    *((_QWORD *)&v61 + 1) = sub_231411A7C();
    *(_QWORD *)&v62 = MEMORY[0x24BE47A60];
    sub_2312DFCA0((uint64_t *)&v60);
    if (qword_25415B840 != -1)
      swift_once();
    v46 = sub_231411A04();
    sub_2312CE3B8(v46, (uint64_t)qword_254162E20);
    sub_231411A58();
    sub_2312DF79C(0, (unint64_t *)&qword_25415D530);
    sub_231413DD4();
    sub_2312CCC24((unint64_t *)&qword_25415DDB0, (uint64_t (*)(uint64_t))sub_2312DFC3C, MEMORY[0x24BDB9DF8]);
    v47 = sub_231413E7C();
    ((void (**)(char *, uint64_t))v53)[1](v13, v11);
  }
  else
  {
    sub_2312E176C(a2);
    sub_231412148();
    v34 = a2;
    v35 = sub_231413768();
    v36 = sub_23141498C();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = swift_slowAlloc();
      v38 = swift_slowAlloc();
      v53 = (void (**)(_QWORD, _QWORD))v34;
      v39 = v38;
      *(_QWORD *)&v60 = v38;
      *(_DWORD *)v37 = 136446466;
      v51 = v14;
      v40 = a5;
      v41 = sub_2314151A8();
      v52 = a1;
      v56 = (id)sub_23133180C(v41, v42, (uint64_t *)&v60);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 2082;
      v56 = objc_msgSend(v53, sel_status);
      type metadata accessor for CMVO2MaxRetrocomputeStatus(0);
      v43 = sub_2314146E0();
      v56 = (id)sub_23133180C(v43, v44, (uint64_t *)&v60);
      a1 = v52;
      sub_231414CBC();
      swift_bridgeObjectRelease();
      sub_2312E1778(a2);
      sub_2312E1778(a2);
      _os_log_impl(&dword_2312C8000, v35, v36, "[%{public}s] Creating generator publisher for retrocompute state status: %{public}s", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      v45 = v39;
      v34 = v53;
      MEMORY[0x2348DE308](v45, -1, -1);
      MEMORY[0x2348DE308](v37, -1, -1);

      (*(void (**)(char *, uint64_t))(v54 + 8))(v19, v51);
    }
    else
    {
      sub_2312E1778(a2);
      sub_2312E1778(a2);

      (*(void (**)(char *, uint64_t))(v54 + 8))(v19, v14);
      v40 = a5;
    }
    v48 = sub_2312CEA5C(v57, (uint64_t)v58);
    v60 = *(_OWORD *)v48;
    v61 = *((_OWORD *)v48 + 1);
    v62 = *((_OWORD *)v48 + 2);
    v63 = v48[6];
    v47 = sub_2312E03C8(a1, v34, (uint64_t)&v60, v40);
  }
  sub_2312E1778(a2);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v57);
  return v47;
}

id sub_2312E176C(id a1)
{
  return a1;
}

void sub_2312E1778(id a1)
{

}

void sub_2312E1784(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4();
    v6 = sub_231413C48();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_2312E17E8()
{
  return sub_2312CCC24(&qword_25415BAA8, (uint64_t (*)(uint64_t))sub_2312D75F0, MEMORY[0x24BDB9AF8]);
}

void sub_2312E1804()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415CEF8)
  {
    sub_2312E1784(255, &qword_25415CE50, (void (*)(uint64_t))sub_2312D75F0, (void (*)(void))sub_2312E17E8);
    sub_2312DF79C(255, (unint64_t *)&qword_25415D530);
    sub_2312DFA78(&qword_25415CE48, &qword_25415CE50, (void (*)(uint64_t))sub_2312D75F0, (void (*)(void))sub_2312E17E8);
    v0 = sub_231413C60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415CEF8);
  }
}

uint64_t sub_2312E18CC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_231411A4C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_2312E1940@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(sub_231411A4C() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_2312DE724(a1, v2 + v6, *(_QWORD *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFF8)), a2, *(double *)(v2 + v7));
}

uint64_t sub_2312E19AC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_231411A4C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_2312E1A18@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(sub_231411A4C() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_2312DE208(a1, v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)), a2);
}

uint64_t sub_2312E1A78()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_231411A4C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

void sub_2312E1AE4(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_231411A4C() - 8) + 80);
  sub_2312DE400(*(_BYTE *)(v1 + 16), v1 + ((v3 + 17) & ~v3), a1);
}

uint64_t sub_2312E1B38()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_231411A4C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

void sub_2312E1BAC(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __n128 v4;

  v3 = sub_231411A4C();
  v4.n128_u64[0] = *(_QWORD *)(v1
                             + ((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64)
                               + ((*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80))
                               + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_2312DE934(*(_BYTE *)(v1 + 16), a1, v4);
}

void sub_2312E1C0C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415BA90)
  {
    sub_2312E1CD4();
    sub_2312E1D8C();
    sub_2312CCC24(&qword_25415B9F0, (uint64_t (*)(uint64_t))sub_2312E1CD4, MEMORY[0x24BDB95F8]);
    sub_2312CCC24(&qword_25415BAE8, (uint64_t (*)(uint64_t))sub_2312E1D8C, MEMORY[0x24BDB9E58]);
    v0 = sub_231413CCC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415BA90);
  }
}

void sub_2312E1CD4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415B9F8)
  {
    sub_2312E0084(255, (unint64_t *)&qword_25415BAD0, (unint64_t *)&qword_25415BBF8, &qword_25415BB60);
    sub_2312DF79C(255, (unint64_t *)&qword_25415DF60);
    sub_2312E0170();
    v0 = sub_231413C30();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415B9F8);
  }
}

void sub_2312E1D8C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415BAF0)
  {
    sub_2312E1E08();
    sub_2312DF79C(255, (unint64_t *)&qword_25415DF60);
    v0 = sub_231413DEC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415BAF0);
  }
}

void sub_2312E1E08()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415BB00)
  {
    v0 = sub_231414CB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415BB00);
  }
}

void sub_2312E1E5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415CF38)
  {
    sub_2312E1C0C();
    sub_2312E0084(255, (unint64_t *)&qword_25415BAD0, (unint64_t *)&qword_25415BBF8, &qword_25415BB60);
    sub_2312CCC24(&qword_25415BA88, (uint64_t (*)(uint64_t))sub_2312E1C0C, MEMORY[0x24BDB98F0]);
    sub_2312E0170();
    v0 = sub_231413C78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415CF38);
  }
}

uint64_t sub_2312E1F20()
{
  return swift_deallocObject();
}

uint64_t sub_2312E1F30@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_2312DD010(a1, *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_2312E1F38()
{
  return swift_deallocObject();
}

void sub_2312E1F48(uint64_t *a1@<X8>)
{
  sub_2312DDB5C(a1);
}

void sub_2312E1F50()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415BAE0)
  {
    sub_2312E00EC(255, (unint64_t *)&qword_25415BBF8, &qword_25415BB60);
    v0 = sub_231413DC8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415BAE0);
  }
}

uint64_t sub_2312E1FBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_23141348C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231413480();
  sub_231413474();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

id sub_2312E2058()
{
  id result;

  sub_2312E2090();
  result = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_lowCardioFitnessEventType);
  if (!result)
    __break(1u);
  return result;
}

unint64_t sub_2312E2090()
{
  unint64_t result;

  result = qword_25415DEC0;
  if (!qword_25415DEC0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25415DEC0);
  }
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessNotificationsDataTypeDetailDataSourceProvider()
{
  return &type metadata for CardioFitnessNotificationsDataTypeDetailDataSourceProvider;
}

uint64_t sub_2312E20DC()
{
  uint64_t result;

  sub_2312D6D30();
  result = MEMORY[0x2348DD384]((id)*MEMORY[0x24BDD3378]);
  qword_255ECB558 = result;
  return result;
}

uint64_t sub_2312E211C()
{
  uint64_t v0;
  id v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = sub_2314146BC();
  v5 = v0;
  sub_231414728();
  if (qword_255ECA988 != -1)
    swift_once();
  v1 = objc_msgSend((id)qword_255ECB558, sel_identifier, v3, v5);
  sub_2314146BC();

  sub_231414728();
  result = swift_bridgeObjectRelease();
  qword_255ECB560 = v4;
  *(_QWORD *)algn_255ECB568 = v6;
  return result;
}

uint64_t sub_2312E21E8(__int16 a1)
{
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v4;

  v1 = a1;
  if (HIBYTE(a1))
  {
    if (HIBYTE(a1) != 1)
    {
      sub_231414E18();
      if (qword_255ECA990 != -1)
        swift_once();
      v2 = qword_255ECB560;
      sub_231412A90();
      swift_bridgeObjectRelease();
      v4 = v2;
      goto LABEL_12;
    }
    if (a1 != 5)
    {
      sub_231414E18();
      if (qword_255ECA990 != -1)
        swift_once();
      sub_231412A90();
      swift_bridgeObjectRelease();
      sub_231414728();
      __asm { BR              X10 }
    }
    if (qword_255ECA990 == -1)
    {
LABEL_5:
      v4 = qword_255ECB560;
      sub_231412A90();
LABEL_12:
      sub_231414728();
      return v4;
    }
LABEL_20:
    swift_once();
    goto LABEL_5;
  }
  if (a1 == 10)
  {
    if (qword_255ECA990 == -1)
      goto LABEL_5;
    goto LABEL_20;
  }
  if (qword_255ECA990 != -1)
    swift_once();
  v4 = qword_255ECB560;
  sub_231412A90();
  sub_231414728();
  sub_2312E253C(v1);
  sub_231414728();
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t sub_2312E253C(unsigned __int8 a1)
{
  int v1;
  unint64_t result;

  v1 = a1 - 5;
  result = 0xD000000000000017;
  switch(v1)
  {
    case 0:
      result = 0x746361466566694CLL;
      break;
    case 1:
      return result;
    case 2:
      result = 0xD000000000000019;
      break;
    case 3:
      result = 0xD000000000000010;
      break;
    case 4:
      result = 0xD000000000000013;
      break;
    default:
      JUMPOUT(0x2312E2600);
  }
  return result;
}

uint64_t sub_2312E2600()
{
  uint64_t v1;

  sub_231414728();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_2312E2668()
{
  uint64_t v1;

  ((void (*)(uint64_t, unint64_t))sub_231414728)(0x746867696557, 0xE600000000000000);
  ((void (*)(unint64_t))swift_bridgeObjectRelease)(0xE600000000000000);
  return v1;
}

uint64_t sub_2312E267C()
{
  uint64_t v0;
  uint64_t v2;

  ((void (*)(char *__return_ptr, uint64_t, unint64_t))sub_231414728)("tDetectHeartAttack", v0 + 2, 0x80000002314264B0);
  ((void (*)(unint64_t))swift_bridgeObjectRelease)(0x80000002314264B0);
  return v2;
}

void sub_2312E2694()
{
  JUMPOUT(0x2312E26B4);
}

id sub_2312E26DC()
{
  _OWORD *v0;
  __int128 v1;
  id v2;
  id v3;
  _OWORD v5[3];
  _BYTE v6[16];

  v1 = v0[1];
  v5[0] = *v0;
  v5[1] = v1;
  v5[2] = v0[2];
  v2 = objc_allocWithZone((Class)type metadata accessor for CenteredLabelWithSpinnerContentView());
  sub_2312E3A08((uint64_t)v5, (uint64_t)v6);
  sub_2312E3A64((uint64_t)v6);
  v3 = sub_2312E28E0(v5);
  sub_2312E3A8C();
  return v3;
}

uint64_t sub_2312E2744@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  v3 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  return sub_231412A90();
}

uint64_t sub_2312E2758(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[3];
  _OWORD v8[3];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = *a2;
  v4 = a2[1];
  v7[2] = a1[2];
  v8[0] = v3;
  v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return sub_2312E3B8C((uint64_t)v7, (uint64_t)v8) & 1;
}

uint64_t sub_2312E279C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  double v7;
  double v8;
  BOOL v10;
  BOOL v11;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  double v22;
  _BYTE v23[40];

  sub_2312DF850(a1, (uint64_t)v23);
  sub_2312E3C28();
  if (!swift_dynamicCast())
    return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1);
  v3 = v1 + OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__configuration;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__configuration + 8);
  v6 = *(double *)(v1 + OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__configuration + 16);
  v5 = *(double *)(v1 + OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__configuration + 24);
  v8 = *(double *)(v1 + OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__configuration + 32);
  v7 = *(double *)(v1 + OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__configuration + 40);
  if (!v4)
  {
    if (!v18)
      goto LABEL_21;
LABEL_31:
    *(_QWORD *)v3 = v17;
    *(_QWORD *)(v3 + 8) = v18;
    *(double *)(v3 + 16) = v19;
    *(double *)(v3 + 24) = v20;
    *(double *)(v3 + 32) = v21;
    *(double *)(v3 + 40) = v22;
    swift_bridgeObjectRelease();
    sub_2312E345C();
    return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1);
  }
  if (!v18)
    goto LABEL_31;
  if (*(_QWORD *)v3 == v17 && v4 == v18)
  {
LABEL_21:
    if (v6 != v19 || v5 != v20 || v8 != v21 || v7 != v22)
      goto LABEL_31;
    goto LABEL_33;
  }
  if ((sub_231415070() & 1) == 0)
    goto LABEL_31;
  v10 = v6 == v19 && v5 == v20;
  v11 = v10 && v8 == v21;
  if (!v11 || v7 != v22)
    goto LABEL_31;
LABEL_33:
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1);
  return swift_bridgeObjectRelease();
}

id sub_2312E28E0(_OWORD *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  id v5;
  char *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  char *v12;
  __int128 v13;
  id v14;
  objc_super v16;

  v2 = v1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__topConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__leadingConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__trailingConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__bottomConstraint] = 0;
  v4 = OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView_label;
  v5 = objc_allocWithZone(MEMORY[0x24BEBD708]);
  v6 = v2;
  v7 = objc_msgSend(v5, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v8 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  objc_msgSend(v7, sel_setTextColor_, v8);

  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_2312D3C68(0, (unint64_t *)&qword_255ECB510);
  v9 = (void *)sub_231414B9C();
  objc_msgSend(v7, sel_setFont_, v9);

  objc_msgSend(v7, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v7, sel_setTextAlignment_, 1);
  objc_msgSend(v7, sel_setNumberOfLines_, 2);
  *(_QWORD *)&v2[v4] = v7;
  v10 = OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView_spinner;
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD398]), sel_initWithActivityIndicatorStyle_, 100);
  objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v11, sel_setHidesWhenStopped_, 0);
  objc_msgSend(v11, sel_startAnimating);
  *(_QWORD *)&v6[v10] = v11;
  v12 = &v6[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__configuration];
  v13 = a1[1];
  *(_OWORD *)v12 = *a1;
  *((_OWORD *)v12 + 1) = v13;
  *((_OWORD *)v12 + 2) = a1[2];

  v16.receiver = v6;
  v16.super_class = (Class)type metadata accessor for CenteredLabelWithSpinnerContentView();
  v14 = objc_msgSendSuper2(&v16, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_2312E2B60();
  sub_2312E345C();

  return v14;
}

void sub_2312E2B60()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  double v24;
  double v25;
  double v26;
  double v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  id v66;
  id v67;
  id v68;
  void *v69;
  uint64_t v70;
  BOOL v71;
  unint64_t v72;
  id v73;

  v1 = v0;
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB00]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v3 = *(void **)&v0[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView_label];
  objc_msgSend(v2, sel_addSubview_, v3);
  v4 = *(void **)&v0[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView_spinner];
  objc_msgSend(v2, (SEL)&selRef_setEnabled_, v4);
  sub_2312CF374(0, (unint64_t *)&qword_25415BD40, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2314183B0;
  v6 = objc_msgSend(v3, sel_topAnchor);
  v7 = objc_msgSend(v2, (SEL)&selRef_hk_alignVerticalConstraintsWithView_margin_ + 4);
  v8 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v7);

  *(_QWORD *)(v5 + 32) = v8;
  v9 = objc_msgSend(v3, sel_bottomAnchor);
  v10 = objc_msgSend(v2, (SEL)&stru_250035378.type + 5);
  v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v10);

  *(_QWORD *)(v5 + 40) = v11;
  v12 = objc_msgSend(v3, sel_leadingAnchor);
  v13 = objc_msgSend(v2, (SEL)&AFibBurdenPDFAFibAnnotationFormatter.reserved + 2);
  v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v13);

  *(_QWORD *)(v5 + 48) = v14;
  v15 = objc_msgSend(v4, (SEL)&AFibBurdenPDFAFibAnnotationFormatter.reserved + 2);
  v16 = objc_msgSend(v3, sel_trailingAnchor);
  v17 = objc_msgSend(v15, sel_constraintEqualToSystemSpacingAfterAnchor_multiplier_, v16, 1.0);

  *(_QWORD *)(v5 + 56) = v17;
  v18 = objc_msgSend(v4, sel_centerYAnchor);
  v19 = objc_msgSend(v3, sel_centerYAnchor);
  v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v19);

  *(_QWORD *)(v5 + 64) = v20;
  v21 = objc_msgSend(v4, sel_trailingAnchor);
  v22 = objc_msgSend(v2, sel_trailingAnchor);
  v23 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v22);

  *(_QWORD *)(v5 + 72) = v23;
  sub_2314147B8();
  v72 = v5;
  objc_msgSend(v1, sel_addSubview_, v2);
  v25 = *(double *)&v1[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__configuration + 16];
  v24 = *(double *)&v1[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__configuration + 24];
  v26 = *(double *)&v1[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__configuration + 32];
  v27 = *(double *)&v1[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__configuration + 40];
  v28 = objc_msgSend(v2, sel_topAnchor);
  v29 = objc_msgSend(v1, sel_layoutMarginsGuide);
  v30 = objc_msgSend(v29, sel_topAnchor);

  v31 = objc_msgSend(v28, sel_constraintEqualToAnchor_constant_, v30, v25);
  v32 = OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__topConstraint;
  v33 = *(void **)&v1[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__topConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__topConstraint] = v31;

  v34 = objc_msgSend(v2, sel_layoutMarginsGuide);
  v35 = objc_msgSend(v34, sel_leadingAnchor);

  v36 = objc_msgSend(v1, sel_leadingAnchor);
  v37 = objc_msgSend(v35, sel_constraintGreaterThanOrEqualToAnchor_constant_, v36, v24);

  v38 = OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__leadingConstraint;
  v39 = *(void **)&v1[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__leadingConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__leadingConstraint] = v37;

  v40 = objc_msgSend(v1, sel_layoutMarginsGuide);
  v41 = objc_msgSend(v40, sel_trailingAnchor);

  v42 = objc_msgSend(v2, sel_trailingAnchor);
  v43 = objc_msgSend(v41, sel_constraintGreaterThanOrEqualToAnchor_constant_, v42, v27);

  v44 = OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__trailingConstraint;
  v45 = *(void **)&v1[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__trailingConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__trailingConstraint] = v43;

  v46 = objc_msgSend(v1, sel_layoutMarginsGuide);
  v47 = objc_msgSend(v46, sel_bottomAnchor);

  v48 = objc_msgSend(v2, sel_bottomAnchor);
  v49 = objc_msgSend(v47, sel_constraintEqualToAnchor_constant_, v48, v26);

  v50 = OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__bottomConstraint;
  v51 = *(void **)&v1[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__bottomConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__bottomConstraint] = v49;

  v52 = *(void **)&v1[v32];
  if (!v52)
  {
    __break(1u);
    goto LABEL_22;
  }
  v53 = *(void **)&v1[v38];
  if (!v53)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v54 = *(void **)&v1[v44];
  if (!v54)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v55 = *(void **)&v1[v50];
  if (!v55)
  {
LABEL_24:
    __break(1u);
    return;
  }
  v56 = v52;
  v57 = v53;
  v58 = v54;
  v59 = v55;
  v60 = objc_msgSend(v1, sel_centerXAnchor);
  v61 = objc_msgSend(v2, sel_centerXAnchor);
  v62 = objc_msgSend(v60, sel_constraintEqualToAnchor_, v61);

  if (!(v72 >> 62))
  {
    v63 = *(_QWORD *)((v72 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_231412A90();
    v64 = v63 + 5;
    if (!__OFADD__(v63, 5))
      goto LABEL_7;
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  sub_231412A90();
  v70 = sub_231414F08();
  v71 = __OFADD__(v70, 5);
  v64 = v70 + 5;
  if (v71)
    goto LABEL_19;
LABEL_7:
  sub_2312E3AD0(v64, 1);
  sub_2314147B8();
  v56 = v56;
  MEMORY[0x2348DD15C]();
  if (*(_QWORD *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
LABEL_20:
    sub_2314147DC();
  sub_2314147E8();
  sub_2314147B8();
  v65 = v57;
  MEMORY[0x2348DD15C]();
  if (*(_QWORD *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_2314147DC();
  sub_2314147E8();
  sub_2314147B8();
  v66 = v58;
  MEMORY[0x2348DD15C]();
  if (*(_QWORD *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_2314147DC();
  sub_2314147E8();
  sub_2314147B8();
  v67 = v59;
  MEMORY[0x2348DD15C]();
  if (*(_QWORD *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_2314147DC();
  sub_2314147E8();
  sub_2314147B8();
  v68 = v62;
  MEMORY[0x2348DD15C]();
  if (*(_QWORD *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_2314147DC();
  v69 = (void *)objc_opt_self();
  sub_2314147E8();
  sub_2314147B8();

  swift_bridgeObjectRelease();
  sub_2312D3C68(0, (unint64_t *)&qword_255ED2440);
  v73 = (id)sub_231414788();
  swift_bridgeObjectRelease();
  objc_msgSend(v69, sel_activateConstraints_, v73);

}

id sub_2312E345C()
{
  uint64_t v0;
  void *v1;
  double *v2;
  void *v3;
  id result;
  double v5;
  double v6;
  double v7;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView_label);
  v2 = (double *)(v0 + OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__configuration);
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__configuration + 8))
  {
    sub_231412A90();
    v3 = (void *)sub_23141468C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  objc_msgSend(v1, sel_setText_, v3);

  result = *(id *)(v0 + OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__topConstraint);
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  v5 = v2[4];
  v6 = v2[5];
  v7 = v2[3];
  objc_msgSend(result, sel_setConstant_, v2[2]);
  result = *(id *)(v0 + OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__leadingConstraint);
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  objc_msgSend(result, sel_setConstant_, v7);
  result = *(id *)(v0 + OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__trailingConstraint);
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  objc_msgSend(result, sel_setConstant_, v6);
  result = *(id *)(v0 + OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__bottomConstraint);
  if (result)
    return objc_msgSend(result, sel_setConstant_, v5);
LABEL_12:
  __break(1u);
  return result;
}

id sub_2312E35A8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CenteredLabelWithSpinnerContentView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for CenteredLabelWithSpinnerContentView()
{
  return objc_opt_self();
}

uint64_t destroy for CenteredLabelWithSpinnerContentConfiguration()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CenteredLabelWithSpinnerContentConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  sub_231412A90();
  return a1;
}

_QWORD *assignWithCopy for CenteredLabelWithSpinnerContentConfiguration(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_231412A90();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  return a1;
}

uint64_t assignWithTake for CenteredLabelWithSpinnerContentConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for CenteredLabelWithSpinnerContentConfiguration(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CenteredLabelWithSpinnerContentConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CenteredLabelWithSpinnerContentConfiguration()
{
  return &type metadata for CenteredLabelWithSpinnerContentConfiguration;
}

uint64_t sub_2312E3834@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;

  v3 = v1 + OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__configuration;
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__configuration);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__configuration + 8);
  v10 = *(_OWORD *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 32);
  v7 = *(_QWORD *)(v3 + 40);
  a1[3] = (uint64_t)&type metadata for CenteredLabelWithSpinnerContentConfiguration;
  a1[4] = sub_2312D1DBC();
  v8 = swift_allocObject();
  *a1 = v8;
  *(_QWORD *)(v8 + 16) = v5;
  *(_QWORD *)(v8 + 24) = v4;
  *(_OWORD *)(v8 + 32) = v10;
  *(_QWORD *)(v8 + 48) = v6;
  *(_QWORD *)(v8 + 56) = v7;
  return sub_231412A90();
}

void (*sub_2312E38C8(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = v1 + OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__configuration;
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__configuration);
  v5 = *(_QWORD *)(v4 + 8);
  v11 = *(_OWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 32);
  v8 = *(_QWORD *)(v4 + 40);
  v3[3] = &type metadata for CenteredLabelWithSpinnerContentConfiguration;
  v3[4] = sub_2312D1DBC();
  v9 = swift_allocObject();
  *v3 = v9;
  *(_QWORD *)(v9 + 16) = v6;
  *(_QWORD *)(v9 + 24) = v5;
  *(_OWORD *)(v9 + 32) = v11;
  *(_QWORD *)(v9 + 48) = v7;
  *(_QWORD *)(v9 + 56) = v8;
  sub_231412A90();
  return sub_2312E3980;
}

void sub_2312E3980(uint64_t *a1, char a2)
{
  void *v2;

  v2 = (void *)*a1;
  if ((a2 & 1) != 0)
  {
    sub_2312DF850(*a1, (uint64_t)v2 + 40);
    sub_2312E279C((uint64_t)v2 + 40);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v2);
  }
  else
  {
    sub_2312E279C(*a1);
  }
  free(v2);
}

uint64_t sub_2312E39E4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2312E3A08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312CF374(0, (unint64_t *)&qword_25415BB00, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2312E3A64(uint64_t a1)
{
  sub_231412A90();
  return a1;
}

unint64_t sub_2312E3A8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ECB5D0;
  if (!qword_255ECB5D0)
  {
    v1 = type metadata accessor for CenteredLabelWithSpinnerContentView();
    result = MEMORY[0x2348DE248](&unk_231418478, v1);
    atomic_store(result, (unint64_t *)&qword_255ECB5D0);
  }
  return result;
}

uint64_t sub_2312E3AD0(uint64_t a1, char a2)
{
  uint64_t *v2;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *v2;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v5;
  v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
      return result;
    v7 = 1;
  }
  if (v5 >> 62)
  {
    sub_231412A90();
    v8 = sub_231414F08();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1)
    v9 = a1;
  else
    v9 = v8;
  result = MEMORY[0x2348DD828](v7, v9, a2 & 1, v5);
  *v2 = result;
  return result;
}

uint64_t sub_2312E3B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;
  BOOL v9;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a2 + 8);
  if (!v4)
  {
    if (v5)
      return 0;
    goto LABEL_10;
  }
  if (!v5)
    return 0;
  v6 = *(_QWORD *)a1 == *(_QWORD *)a2 && v4 == v5;
  if (v6 || (v7 = sub_231415070(), result = 0, (v7 & 1) != 0))
  {
LABEL_10:
    if (*(double *)(a1 + 16) == *(double *)(a2 + 16))
    {
      v9 = *(double *)(a1 + 24) == *(double *)(a2 + 24) && *(double *)(a1 + 32) == *(double *)(a2 + 32);
      if (v9 && *(double *)(a1 + 40) == *(double *)(a2 + 40))
        return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_2312E3C28()
{
  unint64_t result;

  result = qword_255ECB5D8;
  if (!qword_255ECB5D8)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255ECB5D8);
  }
  return result;
}

void sub_2312E3C7C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;

  v1 = v0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__topConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__leadingConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__trailingConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView__bottomConstraint] = 0;
  v2 = OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView_label;
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v4 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  objc_msgSend(v3, sel_setTextColor_, v4);

  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_2312D3C68(0, (unint64_t *)&qword_255ECB510);
  v5 = (void *)sub_231414B9C();
  objc_msgSend(v3, sel_setFont_, v5);

  objc_msgSend(v3, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v3, sel_setTextAlignment_, 1);
  objc_msgSend(v3, sel_setNumberOfLines_, 2);
  *(_QWORD *)&v1[v2] = v3;
  v6 = OBJC_IVAR____TtC5Heart35CenteredLabelWithSpinnerContentView_spinner;
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD398]), sel_initWithActivityIndicatorStyle_, 100);
  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v7, sel_setHidesWhenStopped_, 0);
  objc_msgSend(v7, sel_startAnimating);
  *(_QWORD *)&v1[v6] = v7;

  sub_231414EE4();
  __break(1u);
}

uint64_t sub_2312E3E98()
{
  if (qword_25415E610 != -1)
    swift_once();
  return sub_231411374();
}

uint64_t sub_2312E3F18()
{
  return 0x7261654820776F4CLL;
}

uint64_t sub_2312E3F3C()
{
  id v0;

  if (qword_25415E610 != -1)
    swift_once();
  v0 = (id)qword_254163058;
  return sub_231411D64();
}

uint64_t sub_2312E3FB4(char a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if ((a1 & 1) != 0)
  {
    objc_msgSend((id)objc_opt_self(), sel_bradycardiaThresholdHeartRate);
    v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3C40]), sel_init);
    sub_2312E43A4();
    v2 = (void *)sub_231414BF0();
    v3 = sub_2313F699C(v2, (uint64_t)v1);
    v5 = v4;

    if (qword_25415E610 != -1)
      swift_once();
    sub_231411374();
    sub_2312E43E0();
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_231416A30;
    *(_QWORD *)(v6 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v6 + 64) = sub_2312D6E84();
    *(_QWORD *)(v6 + 32) = v3;
    *(_QWORD *)(v6 + 40) = v5;
    v7 = sub_231414698();
    v9 = v8;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_231411374();
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_231416A30;
    v11 = *MEMORY[0x24BE4C030];
    v12 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v10 + 56) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v10 + 64) = v12;
    *(_QWORD *)(v10 + 32) = v11;
    v13 = sub_231414698();
    v15 = v14;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2312E42E4();
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_231418090;
    *(_QWORD *)(v16 + 32) = v7;
    *(_QWORD *)(v16 + 40) = v9;
    *(_QWORD *)(v16 + 48) = v13;
  }
  else
  {
    sub_2312E42E4();
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_231418090;
    if (qword_25415E610 != -1)
      swift_once();
    *(_QWORD *)(v16 + 32) = sub_231411374();
    *(_QWORD *)(v16 + 40) = v17;
    v18 = sub_231411374();
    v15 = v19;
    *(_QWORD *)(v16 + 48) = v18;
  }
  *(_QWORD *)(v16 + 56) = v15;
  return v16;
}

void sub_2312E42E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415B688)
  {
    v0 = sub_23141504C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415B688);
  }
}

void sub_2312E4338()
{
  id v0;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, *MEMORY[0x24BE4C028]);
  objc_msgSend((id)objc_opt_self(), sel_setBradycardiaThresholdHeartRate_, v0);

}

unint64_t sub_2312E43A4()
{
  unint64_t result;

  result = qword_255ECFBD0;
  if (!qword_255ECFBD0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255ECFBD0);
  }
  return result;
}

void sub_2312E43E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415DF58)
  {
    sub_2312D6E30();
    v0 = sub_23141504C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415DF58);
  }
}

uint64_t sub_2312E4434@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t updated;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t Strong;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t result;
  _QWORD v47[3];
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66[5];

  v59 = a2;
  v60 = a3;
  v64 = a4;
  v65 = a1;
  sub_2312D6DD8(0, (unint64_t *)&qword_25415DDB8, (uint64_t (*)(uint64_t))sub_2312E5B54, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v62 = *(_QWORD *)(v4 - 8);
  v63 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v61 = (char *)v47 - v5;
  sub_2312E5F10();
  v57 = *(_QWORD *)(v6 - 8);
  v58 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v56 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_2314119E0();
  v52 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v9 = (char *)v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_231411A4C();
  v10 = *(_QWORD *)(v55 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = MEMORY[0x24BDAC7A8](v55);
  v54 = (char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v47 - v13;
  updated = type metadata accessor for ElectrocardiogramUpdateGenerator();
  MEMORY[0x24BDAC7A8](updated);
  v17 = (_QWORD *)((char *)v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2312E5BA8(0, &qword_25415DDE8, MEMORY[0x24BDB9E10]);
  v19 = v18;
  v20 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)v47 - v21;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v48 = v10;
    v24 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v51 = Strong;
    v25 = v55;
    v24(v14, v65, v55);
    v50 = updated;
    v26 = *(int *)(updated + 20);
    v49 = v17;
    v47[2] = (char *)v17 + v26;
    v27 = v59;
    swift_retain();
    v47[1] = sub_231411A28();
    sub_2312D6DD8(0, (unint64_t *)&qword_25415DF20, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v28 = sub_231411890();
    v29 = *(_QWORD *)(v28 - 8);
    v30 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_231416A30;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v29 + 104))(v31 + v30, *MEMORY[0x24BE474A0], v28);
    (*(void (**)(char *, _QWORD, uint64_t))(v52 + 104))(v9, *MEMORY[0x24BE47910], v53);
    sub_2314119EC();
    v32 = v54;
    v24(v54, (uint64_t)v14, v25);
    v33 = v48;
    v34 = (*(unsigned __int8 *)(v48 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
    v35 = swift_allocObject();
    *(_QWORD *)(v35 + 16) = v27;
    (*(void (**)(unint64_t, char *, uint64_t))(v33 + 32))(v35 + v34, v32, v25);
    sub_2312E5F88();
    sub_2312CCC24(&qword_25415DD90, (uint64_t (*)(uint64_t))sub_2312E5F88, MEMORY[0x24BDB9AF8]);
    swift_retain();
    v36 = v56;
    sub_231413E04();
    sub_2312CCC24((unint64_t *)&qword_25415DE20, (uint64_t (*)(uint64_t))sub_2312E5F10, MEMORY[0x24BDB9E90]);
    v37 = v58;
    v38 = sub_231413E7C();
    swift_release();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v25);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v36, v37);
    v39 = (uint64_t)v49;
    *v49 = v38;
    v66[3] = v50;
    v66[4] = sub_2312CCC24(&qword_25415D790, (uint64_t (*)(uint64_t))type metadata accessor for ElectrocardiogramUpdateGenerator, (uint64_t)&unk_231418594);
    v40 = sub_2312DFCA0(v66);
    sub_2312E60B8(v39, (uint64_t)v40);
    sub_2312E5B54();
    v41 = v61;
    sub_231413DD4();
    sub_2312E60FC();
    v42 = v63;
    v43 = sub_231413E7C();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v41, v42);
    v44 = *(_QWORD *)(v51 + OBJC_IVAR____TtC5Heart40ElectrocardiogramUpdateGeneratorPipeline_notificationPublisher);
    swift_retain();
    v45 = sub_2312E49E4(v43, v44);
    swift_release();
    swift_release();
    swift_release();
    result = sub_2312E615C(v39);
  }
  else
  {
    sub_2312E5B54();
    sub_231413DE0();
    sub_2312E5C10(&qword_25415DDE0, &qword_25415DDE8, MEMORY[0x24BDB9E10], MEMORY[0x24BDB9E20]);
    v45 = sub_231413E7C();
    result = (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  }
  *v64 = v45;
  return result;
}

uint64_t sub_2312E49E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint8_t *v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(void);
  uint64_t v37;
  uint64_t (*v38)(void);
  uint64_t v39;
  uint64_t (*v40)(void);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v3 = v2;
  v47 = a2;
  sub_2312E6198();
  v44 = *(_QWORD *)(v5 - 8);
  v45 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312E623C(0, (unint64_t *)&qword_25415DD08, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB9760]);
  v9 = v8;
  v46 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v42 - v10;
  v12 = sub_231413780();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v42 - v17;
  if ((sub_231411A1C() & 1) != 0)
  {
    sub_231412148();
    v28 = sub_231413768();
    v29 = sub_23141498C();
    if (os_log_type_enabled(v28, v29))
    {
      v43 = a1;
      v30 = swift_slowAlloc();
      v42 = v12;
      v31 = (uint8_t *)v30;
      v32 = swift_slowAlloc();
      v48 = v32;
      v49 = v2;
      *(_DWORD *)v31 = 136446210;
      swift_getMetatypeMetadata();
      v33 = sub_2314146E0();
      v49 = sub_23133180C(v33, v34, &v48);
      a1 = v43;
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v28, v29, "[%{public}s]: In foreground mode, so will continue to listen for updates", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v32, -1, -1);
      MEMORY[0x2348DE308](v31, -1, -1);

      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v42);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    }
    if (v47)
    {
      v48 = v47;
      v49 = a1;
      v38 = MEMORY[0x24BDB9AE0];
      sub_2312E5BA8(0, (unint64_t *)&qword_25415DD68, (uint64_t (*)(uint64_t, unint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
      sub_2312E5C10((unint64_t *)&qword_25415DD60, (unint64_t *)&qword_25415DD68, (uint64_t (*)(uint64_t, unint64_t, _QWORD, _QWORD))v38, MEMORY[0x24BDB9AF8]);
      swift_retain();
      swift_retain();
      sub_231413C9C();
      sub_2312CCC24(&qword_25415DD10, (uint64_t (*)(uint64_t))sub_2312E6198, MEMORY[0x24BDB9798]);
      v39 = v45;
      v37 = sub_231413E7C();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v7, v39);
    }
    else
    {
      v49 = a1;
      v40 = MEMORY[0x24BDB9AE0];
      sub_2312E5BA8(0, (unint64_t *)&qword_25415DD68, (uint64_t (*)(uint64_t, unint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
      sub_2312E5C10((unint64_t *)&qword_25415DD60, (unint64_t *)&qword_25415DD68, (uint64_t (*)(uint64_t, unint64_t, _QWORD, _QWORD))v40, MEMORY[0x24BDB9AF8]);
      return sub_231413E7C();
    }
  }
  else
  {
    sub_231412148();
    v19 = sub_231413768();
    v20 = sub_23141498C();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc();
      v43 = a1;
      v22 = (uint8_t *)v21;
      v23 = swift_slowAlloc();
      v42 = v12;
      v24 = v23;
      *(_DWORD *)v22 = 136446210;
      v47 = (uint64_t)(v22 + 4);
      v48 = v23;
      v49 = v3;
      swift_getMetatypeMetadata();
      v25 = sub_2314146E0();
      v49 = sub_23133180C(v25, v26, &v48);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v19, v20, "[%{public}s]: In background mode, so will finish after 1 update", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v24, -1, -1);
      v27 = v22;
      a1 = v43;
      MEMORY[0x2348DE308](v27, -1, -1);

      (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v42);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    }
    v35 = v46;
    v49 = a1;
    v36 = MEMORY[0x24BDB9AE0];
    sub_2312E5BA8(0, (unint64_t *)&qword_25415DD68, (uint64_t (*)(uint64_t, unint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_2312E5C10((unint64_t *)&qword_25415DD60, (unint64_t *)&qword_25415DD68, (uint64_t (*)(uint64_t, unint64_t, _QWORD, _QWORD))v36, MEMORY[0x24BDB9AF8]);
    sub_231413EDC();
    sub_2312E62D8(&qword_25415B680, (unint64_t *)&qword_25415DD08, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB9760], MEMORY[0x24BDB9770]);
    v37 = sub_231413E7C();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v9);
  }
  return v37;
}

uint64_t sub_2312E4F5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t result;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[4];

  v1 = v0;
  v2 = sub_231414B18();
  v17 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312E5D6C();
  v6 = v5;
  v18 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312E5E18();
  v10 = v9;
  v19 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231411A10();
  sub_2312CEA5C(v20, v20[3]);
  sub_2314119BC();
  v13 = sub_231411B90();
  result = _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v20);
  if ((v13 & 1) != 0)
  {
    v15 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    sub_231414B24();

    swift_allocObject();
    swift_weakInit();
    sub_2312D6DD8(0, &qword_25415D538, (uint64_t (*)(uint64_t))sub_2312E5B54, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    sub_2312CCC24(&qword_25415DF08, (uint64_t (*)(uint64_t))MEMORY[0x24BDD0078], MEMORY[0x24BDD0070]);
    sub_231413EB8();
    swift_release();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v4, v2);
    sub_2312E5B54();
    sub_2312CCC24(&qword_25415DCE8, (uint64_t (*)(uint64_t))sub_2312E5D6C, MEMORY[0x24BDB96C0]);
    sub_231413E88();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v6);
    sub_2312CCC24(&qword_25415DCC8, (uint64_t (*)(uint64_t))sub_2312E5E18, MEMORY[0x24BDB94C8]);
    v16 = sub_231413E7C();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v12, v10);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC5Heart40ElectrocardiogramUpdateGeneratorPipeline_notificationPublisher) = v16;
    return swift_release();
  }
  return result;
}

uint64_t sub_2312E5240()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC5Heart40ElectrocardiogramUpdateGeneratorPipeline_context;
  v2 = sub_231411A4C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC5Heart40ElectrocardiogramUpdateGeneratorPipeline_domain;
  v4 = sub_231411A04();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2312E52D8()
{
  return type metadata accessor for ElectrocardiogramUpdateGeneratorPipeline();
}

uint64_t type metadata accessor for ElectrocardiogramUpdateGeneratorPipeline()
{
  uint64_t result;

  result = qword_25415DBC0;
  if (!qword_25415DBC0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2312E531C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_231411A4C();
  if (v1 <= 0x3F)
  {
    result = sub_231411A04();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_2312E53BC()
{
  return swift_retain();
}

uint64_t sub_2312E53D0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC5Heart40ElectrocardiogramUpdateGeneratorPipeline_domain;
  v4 = sub_231411A04();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

double sub_2312E5418@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double result;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;

  v2 = sub_2314119E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_231411A04();
  MEMORY[0x24BDAC7A8](v6);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v7 = MEMORY[0x24BEE3598];
    sub_2312CF374(0, &qword_25415BBD8, MEMORY[0x24BE47F58], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v8 = swift_allocObject();
    v21 = v3;
    v9 = v8;
    v22 = xmmword_231416A30;
    *(_OWORD *)(v8 + 16) = xmmword_231416A30;
    sub_2312CF374(0, (unint64_t *)&qword_25415B688, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))v7);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = v22;
    *(_QWORD *)(v10 + 32) = sub_2312E79EC();
    *(_QWORD *)(v10 + 40) = v11;
    *(_QWORD *)(v9 + 32) = v10;
    *(_QWORD *)(v9 + 40) = 0;
    *(_QWORD *)(v9 + 48) = 0;
    *(_QWORD *)(v9 + 56) = 0;
    *(_BYTE *)(v9 + 64) = 32;
    v20 = sub_231411A28();
    sub_2312D6DD8(0, (unint64_t *)&qword_25415DF20, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))v7);
    v12 = sub_231411890();
    v13 = v2;
    v14 = *(_QWORD *)(v12 - 8);
    v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = v22;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v14 + 104))(v16 + v15, *MEMORY[0x24BE474A0], v12);
    (*(void (**)(char *, _QWORD, uint64_t))(v21 + 104))(v5, *MEMORY[0x24BE47910], v13);
    sub_2314119EC();
    v17 = sub_231411920();
    v18 = MEMORY[0x24BE47600];
    *(_QWORD *)(a1 + 24) = v17;
    *(_QWORD *)(a1 + 32) = v18;
    sub_2312DFCA0((uint64_t *)a1);
    sub_231411914();
    swift_release();
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_2312E56A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2312E5EB4(a1, a2);
}

uint64_t *sub_2312E56A8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(void);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v3 = v2;
  v53 = *v3;
  v54 = a2;
  v5 = sub_231411A4C();
  v6 = *(_QWORD *)(v5 - 8);
  v45 = v5;
  v51 = *(_QWORD *)(v6 + 64);
  v7 = v6;
  v47 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v50 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312E623C(0, &qword_25415DE08, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB9E80]);
  v10 = *(_QWORD *)(v9 - 8);
  v55 = v9;
  v56 = v10;
  MEMORY[0x24BDAC7A8](v9);
  v52 = (char *)&v42 - v11;
  sub_2312E5BA8(0, &qword_25415DDE8, MEMORY[0x24BDB9E10]);
  v13 = *(_QWORD *)(v12 - 8);
  v48 = v12;
  v49 = v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v42 - v14;
  v43 = sub_2314119E0();
  v16 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_231411A04();
  v19 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC5Heart40ElectrocardiogramUpdateGeneratorPipeline_notificationPublisher) = 0;
  v46 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v57 = a1;
  v46((char *)v3 + OBJC_IVAR____TtC5Heart40ElectrocardiogramUpdateGeneratorPipeline_context, a1, v5);
  v42 = sub_231411A28();
  sub_2312D6DD8(0, (unint64_t *)&qword_25415DF20, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v22 = sub_231411890();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_231416A30;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v23 + 104))(v25 + v24, *MEMORY[0x24BE474A0], v22);
  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v18, *MEMORY[0x24BE47910], v43);
  sub_2314119EC();
  (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))((uint64_t)v3 + OBJC_IVAR____TtC5Heart40ElectrocardiogramUpdateGeneratorPipeline_domain, v21, v44);
  sub_2312E5B54();
  sub_231413DE0();
  sub_2312E5C10(&qword_25415DDE0, &qword_25415DDE8, MEMORY[0x24BDB9E10], MEMORY[0x24BDB9E20]);
  v26 = v48;
  v27 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v15, v26);
  v28 = OBJC_IVAR____TtC5Heart40ElectrocardiogramUpdateGeneratorPipeline_publisher;
  *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC5Heart40ElectrocardiogramUpdateGeneratorPipeline_publisher) = v27;
  v29 = swift_allocObject();
  swift_weakInit();
  v30 = v50;
  v31 = v45;
  v46(v50, v57, v45);
  v32 = v47;
  v33 = (*(unsigned __int8 *)(v47 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  v34 = (v51 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = v29;
  (*(void (**)(unint64_t, char *, uint64_t))(v32 + 32))(v35 + v33, v30, v31);
  v36 = v53;
  *(_QWORD *)(v35 + v34) = v54;
  *(_QWORD *)(v35 + ((v34 + 15) & 0xFFFFFFFFFFFFFFF8)) = v36;
  v37 = MEMORY[0x24BDB9AE0];
  sub_2312E5BA8(0, (unint64_t *)&qword_25415DD68, (uint64_t (*)(uint64_t, unint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
  sub_2312E5C10((unint64_t *)&qword_25415DD60, (unint64_t *)&qword_25415DD68, (uint64_t (*)(uint64_t, unint64_t, _QWORD, _QWORD))v37, MEMORY[0x24BDB9AF8]);
  swift_retain();
  v38 = v52;
  sub_231413E04();
  sub_2312E62D8((unint64_t *)&qword_25415DE00, &qword_25415DE08, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB9E80], MEMORY[0x24BDB9E90]);
  v39 = v55;
  v40 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v38, v39);
  *(uint64_t *)((char *)v3 + v28) = v40;
  swift_release();
  sub_2312E4F5C();
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v57, v31);
  return v3;
}

unint64_t sub_2312E5B54()
{
  unint64_t result;

  result = qword_25415D530;
  if (!qword_25415D530)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_25415D530);
  }
  return result;
}

void sub_2312E5BA8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, unint64_t, _QWORD, _QWORD))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_2312E5B54();
    v7 = a3(a1, v6, MEMORY[0x24BEE4078], MEMORY[0x24BEE40A8]);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_2312E5C10(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, unint64_t, _QWORD, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_2312E5BA8(255, a2, a3);
    result = MEMORY[0x2348DE248](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2312E5C50()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_2312E5C74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_231411A4C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2312E5D0C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(sub_231411A4C() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_2312E4434(v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFF8)), a1);
}

void sub_2312E5D6C()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_25415DCF0)
  {
    sub_231414B18();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BDD0078];
    sub_2312D6DD8(255, &qword_25415D538, (uint64_t (*)(uint64_t))sub_2312E5B54, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    sub_2312CCC24(&qword_25415DF08, v0, MEMORY[0x24BDD0070]);
    v1 = sub_231413C60();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_25415DCF0);
  }
}

void sub_2312E5E18()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415DCD0)
  {
    sub_2312E5D6C();
    sub_2312E5B54();
    sub_2312CCC24(&qword_25415DCE8, (uint64_t (*)(uint64_t))sub_2312E5D6C, MEMORY[0x24BDB96C0]);
    v0 = sub_231413C00();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415DCD0);
  }
}

double sub_2312E5EAC@<D0>(uint64_t a1@<X8>)
{
  return sub_2312E5418(a1);
}

uint64_t sub_2312E5EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312D6DD8(0, &qword_25415D538, (uint64_t (*)(uint64_t))sub_2312E5B54, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_2312E5F10()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415DE28)
  {
    sub_2312E5F88();
    sub_2312CCC24(&qword_25415DD90, (uint64_t (*)(uint64_t))sub_2312E5F88, MEMORY[0x24BDB9AF8]);
    v0 = sub_231413E10();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415DE28);
  }
}

void sub_2312E5F88()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415DD98)
  {
    sub_2312CF374(255, (unint64_t *)&qword_25415DE58, MEMORY[0x24BE47F58], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    v0 = sub_231413D14();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415DD98);
  }
}

uint64_t sub_2312E6004()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_231411A4C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_2312E6078@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_231411A4C() - 8) + 80);
  return sub_2312E6408(*(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3), a1);
}

uint64_t sub_2312E60B8(uint64_t a1, uint64_t a2)
{
  uint64_t updated;

  updated = type metadata accessor for ElectrocardiogramUpdateGenerator();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 16))(a2, a1, updated);
  return a2;
}

unint64_t sub_2312E60FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25415DDB0;
  if (!qword_25415DDB0)
  {
    sub_2312D6DD8(255, (unint64_t *)&qword_25415DDB8, (uint64_t (*)(uint64_t))sub_2312E5B54, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB9DF8], v1);
    atomic_store(result, (unint64_t *)&qword_25415DDB0);
  }
  return result;
}

uint64_t sub_2312E615C(uint64_t a1)
{
  uint64_t updated;

  updated = type metadata accessor for ElectrocardiogramUpdateGenerator();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 8))(a1, updated);
  return a1;
}

void sub_2312E6198()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_25415DD18)
  {
    v0 = MEMORY[0x24BDB9AE0];
    sub_2312E5BA8(255, (unint64_t *)&qword_25415DD68, (uint64_t (*)(uint64_t, unint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
    sub_2312E5C10((unint64_t *)&qword_25415DD60, (unint64_t *)&qword_25415DD68, (uint64_t (*)(uint64_t, unint64_t, _QWORD, _QWORD))v0, MEMORY[0x24BDB9AF8]);
    v1 = sub_231413C90();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_25415DD18);
  }
}

void sub_2312E623C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t (*v6)(void);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    v6 = MEMORY[0x24BDB9AE0];
    sub_2312E5BA8(255, (unint64_t *)&qword_25415DD68, (uint64_t (*)(uint64_t, unint64_t, _QWORD, _QWORD))MEMORY[0x24BDB9AE0]);
    v8 = v7;
    v9 = sub_2312E5C10((unint64_t *)&qword_25415DD60, (unint64_t *)&qword_25415DD68, (uint64_t (*)(uint64_t, unint64_t, _QWORD, _QWORD))v6, MEMORY[0x24BDB9AF8]);
    v10 = a3(a1, v8, v9);
    if (!v11)
      atomic_store(v10, a2);
  }
}

uint64_t sub_2312E62D8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_2312E623C(255, a2, a3);
    result = MEMORY[0x2348DE248](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t Publisher.firstIfNecessary(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_231413C84();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v6 - v2;
  if ((sub_231411A1C() & 1) != 0)
    return sub_231413E7C();
  sub_231413EDC();
  MEMORY[0x2348DE248](MEMORY[0x24BDB9770], v0);
  v4 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_2312E6408@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;

  v37 = a3;
  v30 = sub_231411A4C();
  v5 = *(_QWORD *)(v30 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v30);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312E7B24();
  v9 = v8;
  v28 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312E7C00();
  v35 = v12;
  v33 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312E7DC0();
  v36 = v15;
  v34 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = a1;
  v38 = sub_23138A494();
  v31 = a2;
  LOBYTE(a1) = sub_231411A1C();
  sub_2312E7B9C();
  v29 = sub_2312CCC24(&qword_25415DDA0, (uint64_t (*)(uint64_t))sub_2312E7B9C, MEMORY[0x24BDB9AF8]);
  if ((a1 & 1) != 0)
  {
    v18 = sub_231413E7C();
  }
  else
  {
    sub_231413EDC();
    sub_2312CCC24(&qword_25415B690, (uint64_t (*)(uint64_t))sub_2312E7B24, MEMORY[0x24BDB9770]);
    v18 = sub_231413E7C();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v9);
  }
  swift_release();
  v38 = v18;
  v19 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v31, v30);
  v20 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v21 = (v6 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v22 + v20, v7, v19);
  *(_QWORD *)(v22 + v21) = v32;
  swift_retain();
  sub_231413D08();
  sub_2312E7B9C();
  sub_2312E5F88();
  sub_2312CCC24(&qword_25415DD90, (uint64_t (*)(uint64_t))sub_2312E5F88, MEMORY[0x24BDB9AF8]);
  sub_231413F24();
  swift_release();
  swift_release();
  sub_2312CCC24(&qword_25415DD40, (uint64_t (*)(uint64_t))sub_2312E7C00, MEMORY[0x24BDB98F0]);
  v23 = v35;
  sub_231413ED0();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v23);
  sub_2312CCC24(&qword_25415DCF8, (uint64_t (*)(uint64_t))sub_2312E7DC0, MEMORY[0x24BDB9740]);
  v24 = v36;
  v25 = sub_231413E7C();
  result = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v17, v24);
  *v37 = v25;
  return result;
}

uint64_t sub_2312E6798@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  unsigned int v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  _QWORD *inited;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;

  v33 = a2;
  sub_2312E7F5C(0);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D375C();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  v14 = sub_2312E69F8(v13);
  v15 = v14;
  v16 = *(_QWORD *)(v14 + 16);
  v34 = a3;
  if (v16)
  {
    v18 = *(_QWORD *)(v14 + 32);
    v17 = *(_QWORD *)(v14 + 40);
    v19 = *(_QWORD *)(v14 + 48);
    v20 = *(_QWORD *)(v14 + 56);
    v21 = *(unsigned __int8 *)(v14 + 64);
    v22 = v21 >> 5;
    if (v21 >> 5)
    {
      if (v22 == 1 || (v22 == 5 ? (v23 = (v17 | v18 | v19 | v20) == 0) : (v23 = 0), v23 && v21 == 160))
        sub_23138B0D8();
    }
    else
    {
      sub_231412A90();
      sub_23138ADC4();
      sub_2312E7F78(v18, (void *)v17, (void *)v19, (void *)v20, v21);
    }
  }
  else if (v13)
  {
    v24 = sub_2314146BC();
    v26 = v25;
    v27 = *(void **)(v33 + 16);
    type metadata accessor for ElectrocardiogramUpdateAvailability.FeedItemUpdateDate();
    inited = (_QWORD *)swift_initStackObject();
    inited[2] = v24;
    inited[3] = v26;
    inited[4] = v27;
    inited[5] = sub_23138A42C;
    inited[6] = 0;
    v29 = v27;
    sub_231389830((uint64_t)v12);

    swift_bridgeObjectRelease();
    v30 = sub_231411608();
    LODWORD(v29) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v12, 1, v30);
    sub_2312CEBD4((uint64_t)v12, (uint64_t (*)(_QWORD))sub_2312D375C);
    if ((_DWORD)v29 == 1)
      sub_23138AF34();
  }
  v35 = v15;
  sub_2312E7D6C();
  sub_231413DD4();
  sub_2312CCC24((unint64_t *)&qword_25415DDC8, (uint64_t (*)(uint64_t))sub_2312E7F5C, MEMORY[0x24BDB9DF8]);
  v31 = sub_231413E7C();
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *v34 = v31;
  return result;
}

uint64_t sub_2312E69F8(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, char *, uint64_t);
  unint64_t v29;
  uint64_t v30;
  void *v31;
  unint64_t v32;
  id v33;
  unint64_t v34;
  char *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  char *v42;
  NSObject *v43;
  os_log_type_t v44;
  _BOOL4 v45;
  uint64_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t);
  char *v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  char *v61;
  NSObject *v62;
  os_log_type_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  int v78;
  unsigned int (*v79)(char *, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t);
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t updated;
  unint64_t v93;
  uint64_t v94;

  v78 = a1;
  v90 = sub_231413780();
  v84 = *(void (**)(char *, uint64_t))(v90 - 8);
  v1 = MEMORY[0x24BDAC7A8](v90);
  v88 = (char *)&v73 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v75 = (char *)&v73 - v4;
  v5 = MEMORY[0x24BDAC7A8](v3);
  v77 = (char *)&v73 - v6;
  MEMORY[0x24BDAC7A8](v5);
  v76 = (char *)&v73 - v7;
  v8 = sub_2314119B0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v86 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v74 = (char *)&v73 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v73 - v14;
  sub_2312E804C(0);
  v87 = v16;
  v80 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v82 = (char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v81 = (uint64_t)&v73 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v89 = (uint64_t)&v73 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v73 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v73 - v26;
  sub_2312E79EC();
  sub_231411A10();
  sub_2312CEA5C(&updated, v94);
  sub_2314119D4();
  swift_bridgeObjectRelease();
  sub_2312E8068((uint64_t)v27, (uint64_t)v25);
  v79 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v79(v25, 1, v8) == 1)
  {
    sub_2312CEBD4((uint64_t)v27, (uint64_t (*)(_QWORD))sub_2312E804C);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&updated);
    v83 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v28 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v28(v15, v25, v8);
    sub_2312D6DD8(0, &qword_255ECAC80, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v29 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_231416A30;
    v83 = v30;
    v28((char *)(v30 + v29), v15, v8);
    sub_2312CEBD4((uint64_t)v27, (uint64_t (*)(_QWORD))sub_2312E804C);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&updated);
  }
  v31 = (void *)sub_231411A28();
  updated = type metadata accessor for ElectrocardiogramUpdateGenerator();
  sub_2312E80E8();
  updated = sub_2314146E0();
  v93 = v32;
  sub_231414728();
  v91 = (uint64_t)v31;
  v33 = v31;
  sub_2314146EC();
  sub_231414728();

  swift_bridgeObjectRelease();
  v34 = v93;
  v85 = updated;
  if ((v78 & 1) != 0)
  {
    v35 = v76;
    sub_231412148();
    swift_bridgeObjectRetain_n();
    v36 = sub_231413768();
    v37 = sub_23141498C();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      v39 = swift_slowAlloc();
      updated = v39;
      *(_DWORD *)v38 = 136446210;
      sub_231412A90();
      v91 = sub_23133180C(v85, v34, &updated);
      sub_231414CBC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2312C8000, v36, v37, "[%{public}s]: Electrocardiogram update hasn't been updated since the refresh interval; submitting the update feedItem",
        v38,
        0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v39, -1, -1);
      MEMORY[0x2348DE308](v38, -1, -1);

      v40 = (void (*)(char *, uint64_t))*((_QWORD *)v84 + 1);
      v41 = v76;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v40 = (void (*)(char *, uint64_t))*((_QWORD *)v84 + 1);
      v41 = v35;
    }
    v84 = v40;
    v40(v41, v90);
    v50 = (uint64_t)v82;
    v46 = v89;
    sub_2312E7740(v89);
    v49 = 0;
  }
  else
  {
    v42 = v77;
    sub_231412148();
    swift_bridgeObjectRetain_n();
    v43 = sub_231413768();
    v44 = sub_23141498C();
    v45 = os_log_type_enabled(v43, v44);
    v46 = v89;
    if (v45)
    {
      v47 = (uint8_t *)swift_slowAlloc();
      v48 = swift_slowAlloc();
      updated = v48;
      *(_DWORD *)v47 = 136446210;
      sub_231412A90();
      v91 = sub_23133180C(v85, v34, &updated);
      sub_231414CBC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2312C8000, v43, v44, "[%{public}s]: Electrocardiogram update is up-to-date; deleting the feedItem",
        v47,
        0xCu);
      v49 = 1;
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v48, -1, -1);
      MEMORY[0x2348DE308](v47, -1, -1);

      v84 = (void (*)(char *, uint64_t))*((_QWORD *)v84 + 1);
      v84(v77, v90);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v84 = (void (*)(char *, uint64_t))*((_QWORD *)v84 + 1);
      v84(v42, v90);
      v49 = 1;
    }
    v50 = (uint64_t)v82;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v46, v49, 1, v8);
  sub_2312D6DD8(0, (unint64_t *)&unk_25415DF28, (uint64_t (*)(uint64_t))sub_2312E804C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v51 = (*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
  v52 = swift_allocObject();
  *(_OWORD *)(v52 + 16) = xmmword_231416A30;
  v53 = v52 + v51;
  sub_2312E8068(v46, v52 + v51);
  v54 = v81;
  sub_2312E8068(v53, v81);
  sub_2312E8120(v54, v50);
  if (v79((char *)v50, 1, v8) == 1)
  {
    sub_2312CEBD4(v50, (uint64_t (*)(_QWORD))sub_2312E804C);
  }
  else
  {
    v55 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 32);
    v56 = v74;
    v55(v74, v50, v8);
    v55(v86, (uint64_t)v56, v8);
    v57 = MEMORY[0x24BEE4AF8];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v57 = sub_2312CDA58(0, *(_QWORD *)(v57 + 16) + 1, 1, v57);
    v59 = *(_QWORD *)(v57 + 16);
    v58 = *(_QWORD *)(v57 + 24);
    if (v59 >= v58 >> 1)
      v57 = sub_2312CDA58(v58 > 1, v59 + 1, 1, v57);
    *(_QWORD *)(v57 + 16) = v59 + 1;
    v55((char *)(v57+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v59), (uint64_t)v86, v8);
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v60 = sub_2314147C4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v61 = v75;
  sub_231412148();
  swift_bridgeObjectRetain_n();
  sub_231412A90();
  v62 = sub_231413768();
  v63 = sub_23141498C();
  if (os_log_type_enabled(v62, v63))
  {
    v64 = swift_slowAlloc();
    v65 = swift_slowAlloc();
    updated = v65;
    *(_DWORD *)v64 = 136446466;
    sub_231412A90();
    v91 = sub_23133180C(v85, v34, &updated);
    sub_231414CBC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v64 + 12) = 2082;
    v66 = sub_231412A90();
    v67 = v46;
    v68 = MEMORY[0x2348DD18C](v66, MEMORY[0x24BE47F58]);
    v70 = v69;
    swift_bridgeObjectRelease();
    v91 = sub_23133180C(v68, v70, &updated);
    sub_231414CBC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v62, v63, "[%{public}s]: Computed needed PluginFeedItemChanges: %{public}s", (uint8_t *)v64, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v65, -1, -1);
    MEMORY[0x2348DE308](v64, -1, -1);

    v84(v75, v90);
    v71 = v67;
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    v84(v61, v90);
    v71 = v46;
  }
  sub_2312CEBD4(v71, (uint64_t (*)(_QWORD))sub_2312E804C);
  return v60;
}

uint64_t sub_2312E7668@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  sub_2312E7F5C(0);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = MEMORY[0x24BEE4AF8];
  sub_2312E7D6C();
  sub_231413DD4();
  sub_2312CCC24((unint64_t *)&qword_25415DDC8, (uint64_t (*)(uint64_t))sub_2312E7F5C, MEMORY[0x24BDB9DF8]);
  v7 = sub_231413E7C();
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  *a1 = v7;
  return result;
}

uint64_t sub_2312E7740@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v10[1] = a1;
  v14 = sub_231411AC4();
  v12 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v10[0] = (char *)v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_231411AE8();
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_231411890();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312E79EC();
  type metadata accessor for ElectrocardiogramUpdateViewController();
  sub_231411908();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BE474A0], v4);
  sub_231411A28();
  sub_231411974();
  (*(void (**)(_QWORD, _QWORD, uint64_t))(v12 + 104))(v10[0], *MEMORY[0x24BE47C88], v14);
  sub_231411AF4();
  v8 = v11;
  sub_231411944();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v3, v8);
  if (qword_25415E610 != -1)
    swift_once();
  sub_231411374();
  sub_231411968();
  sub_23141195C();
  sub_2312E8164();
  return sub_231411950();
}

uint64_t sub_2312E79A4()
{
  return swift_retain();
}

uint64_t sub_2312E79AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = sub_231411A04();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

unint64_t sub_2312E79EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  void *v5;
  id v6;
  unint64_t v8;
  unint64_t v9;

  v0 = sub_231411644();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (void *)sub_231411A28();
  v5 = (void *)sub_2314118CC();

  if (v5)
  {
    v6 = objc_msgSend(v5, sel_identifier);

    sub_23141162C();
    sub_231411614();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  v8 = 0;
  v9 = 0xE000000000000000;
  sub_231414E18();
  swift_bridgeObjectRelease();
  v8 = 0xD000000000000020;
  v9 = 0x80000002314267D0;
  sub_231414728();
  swift_bridgeObjectRelease();
  return v8;
}

void sub_2312E7B24()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415E408)
  {
    sub_2312E7B9C();
    sub_2312CCC24(&qword_25415DDA0, (uint64_t (*)(uint64_t))sub_2312E7B9C, MEMORY[0x24BDB9AF8]);
    v0 = sub_231413C84();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415E408);
  }
}

void sub_2312E7B9C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415DDA8)
  {
    sub_2312D3C14();
    v0 = sub_231413D14();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415DDA8);
  }
}

void sub_2312E7C00()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415DD48)
  {
    sub_2312E7CC8();
    sub_2312E7B9C();
    sub_2312CCC24(&qword_25415DCD8, (uint64_t (*)(uint64_t))sub_2312E7CC8, MEMORY[0x24BDB95F8]);
    sub_2312CCC24(&qword_25415DDA0, (uint64_t (*)(uint64_t))sub_2312E7B9C, MEMORY[0x24BDB9AF8]);
    v0 = sub_231413CCC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415DD48);
  }
}

void sub_2312E7CC8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415DCE0)
  {
    sub_2312E5F88();
    sub_2312D3C14();
    sub_2312CCC24(&qword_25415DD90, (uint64_t (*)(uint64_t))sub_2312E5F88, MEMORY[0x24BDB9AF8]);
    v0 = sub_231413C30();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415DCE0);
  }
}

void sub_2312E7D6C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415DE58)
  {
    v0 = sub_2314147F4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415DE58);
  }
}

void sub_2312E7DC0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415DD00)
  {
    sub_2312E7C00();
    sub_2312E5F88();
    sub_2312CCC24(&qword_25415DD40, (uint64_t (*)(uint64_t))sub_2312E7C00, MEMORY[0x24BDB98F0]);
    sub_2312CCC24(&qword_25415DD90, (uint64_t (*)(uint64_t))sub_2312E5F88, MEMORY[0x24BDB9AF8]);
    v0 = sub_231413C78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415DD00);
  }
}

uint64_t sub_2312E7E88()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_231411A4C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2312E7EFC@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = sub_231411A4C();
  return sub_2312E6798(a1, *(_QWORD *)(v2+ ((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64)+ ((*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80))+ 7) & 0xFFFFFFFFFFFFF8)), a2);
}

void sub_2312E7F5C(uint64_t a1)
{
  sub_2312D6DD8(a1, &qword_25415DDD0, (uint64_t (*)(uint64_t))sub_2312E7D6C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
}

void sub_2312E7F78(uint64_t a1, void *a2, void *a3, void *a4, unsigned __int8 a5)
{
  char v8;

  switch(a5 >> 5)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      swift_bridgeObjectRelease();
      break;
    case 4:
      v8 = a5 & 0x1F;
      swift_bridgeObjectRelease();
      sub_2312E7FE8(a2, a3, a4, v8);
      break;
    default:
      return;
  }
}

void sub_2312E7FE8(void *a1, void *a2, void *a3, char a4)
{
  if (!a4)
  {
    a3 = a2;
LABEL_6:
    swift_bridgeObjectRelease();
    a1 = a3;
    goto LABEL_7;
  }
  if (a4 != 2)
  {
    if (a4 != 1)
      return;
    goto LABEL_6;
  }
LABEL_7:
  sub_2312E803C(a1);
}

void sub_2312E803C(id a1)
{
  if (a1 != (id)1)

}

void sub_2312E804C(uint64_t a1)
{
  sub_2312D6DD8(a1, (unint64_t *)&unk_25415D510, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

uint64_t sub_2312E8068(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312E804C(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for ElectrocardiogramUpdateGenerator()
{
  uint64_t result;

  result = qword_25415D798;
  if (!qword_25415D798)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_2312E80E8()
{
  unint64_t result;

  result = qword_25415D828;
  if (!qword_25415D828)
  {
    type metadata accessor for ElectrocardiogramUpdateGenerator();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_25415D828);
  }
  return result;
}

uint64_t sub_2312E8120(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312E804C(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2312E8164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  unint64_t v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t updated;
  unint64_t v23;

  v0 = sub_231413780();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (void *)sub_231411A28();
  updated = type metadata accessor for ElectrocardiogramUpdateGenerator();
  sub_2312E80E8();
  updated = sub_2314146E0();
  v23 = v5;
  sub_231414728();
  v21 = (uint64_t)v4;
  v6 = v4;
  sub_2314146EC();
  sub_231414728();

  swift_bridgeObjectRelease();
  v8 = updated;
  v7 = v23;
  v9 = HKNRActivePairedDeviceSupportsECG2UpgradeBackgroundDelivery();
  sub_231412148();
  sub_231412A90();
  v10 = sub_231413768();
  v11 = sub_23141498C();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    v20 = v0;
    v14 = v13;
    updated = v13;
    *(_DWORD *)v12 = 136446466;
    v19 = v1;
    sub_231412A90();
    v21 = sub_23133180C(v8, v7, &updated);
    sub_231414CBC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 12) = 2082;
    if ((_DWORD)v9)
      v15 = 1702195828;
    else
      v15 = 0x65736C6166;
    if ((_DWORD)v9)
      v16 = 0xE400000000000000;
    else
      v16 = 0xE500000000000000;
    v21 = sub_23133180C(v15, v16, &updated);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v10, v11, "[%{public}s]: Hide the feed item in Summary: %{public}s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v14, -1, -1);
    MEMORY[0x2348DE308](v12, -1, -1);

    (*(void (**)(char *, uint64_t))(v19 + 8))(v3, v20);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return v9;
}

uint64_t *sub_2312E8400(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_231411A04();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_retain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_2312E8498(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_231411A04();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_2312E84E0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_231411A04();
  v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_retain();
  v8(v5, v6, v7);
  return a1;
}

_QWORD *sub_2312E8550(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_231411A04();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_QWORD *sub_2312E85C4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_231411A04();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_2312E8620(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_release();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_231411A04();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_2312E868C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2312E8698(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_231411A04();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_2312E8714()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2312E8720(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_231411A04();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_2312E8794()
{
  uint64_t result;
  unint64_t v1;

  result = sub_231411A04();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for IrregularRhythmNotificationsFeatureStatusActionHandler()
{
  uint64_t result;

  result = qword_25415CA88;
  if (!qword_25415CA88)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2312E8848()
{
  return swift_initClassMetadata2();
}

void sub_2312E8890()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t (*v18)(uint64_t);
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  void *v21;
  char *v22;
  int v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  void *v45;
  id v46;
  uint64_t v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  void *v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t ObjectType;
  id v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85[7];

  ObjectType = swift_getObjectType();
  sub_2312E9730(0);
  MEMORY[0x24BDAC7A8](v1);
  v73 = (char *)&v72 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312DC5EC(0);
  MEMORY[0x24BDAC7A8](v3);
  v75 = (uint64_t)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23141357C();
  v76 = *(_QWORD *)(v5 - 8);
  v77 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v74 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_231411D1C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_2314120AC();
  v83 = *(_QWORD *)(v81 - 8);
  v11 = MEMORY[0x24BDAC7A8](v81);
  v80 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v82 = (char *)&v72 - v13;
  v14 = sub_231412F64();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231413210();
  sub_2314130FC();
  v18 = (uint64_t (*)(uint64_t))MEMORY[0x24BE449A8];
  sub_2312CCC24(&qword_255ECB630, (uint64_t (*)(uint64_t))MEMORY[0x24BE449A8], MEMORY[0x24BE449B8]);
  sub_2312CCC24(&qword_255ECCDA0, v18, MEMORY[0x24BE449B0]);
  sub_231412F58();
  v19 = *(void (**)(char *, uint64_t))(v15 + 8);
  v19(v17, v14);
  v20 = v85[0];
  if (v85[0])
  {
    sub_231413210();
    sub_231412F40();
    v19(v17, v14);
    v84 = v20;
    sub_2312CEA5C(v85, v85[3]);
    v21 = (void *)sub_231412EE0();
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v85);
    sub_231413210();
    v79 = (id)sub_231412F4C();
    v19(v17, v14);
    v72 = v0;
    sub_231413210();
    v22 = v82;
    sub_231411D88();
    v19(v17, v14);
    sub_2314130D8();
    v23 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v10, v7);
    if (v23 == *MEMORY[0x24BE41298])
    {
      v24 = *MEMORY[0x24BDD2E00];
      v25 = objc_allocWithZone(MEMORY[0x24BDD3BF8]);
      v26 = v21;
      v27 = objc_msgSend(v25, sel_initWithFeatureIdentifier_healthStore_currentCountryCode_, v24, v26, 0);
      type metadata accessor for AtrialFibrillationFeatureStatusAvailability();
      v28 = swift_allocObject();
      sub_2312E974C(v26, (uint64_t)v27, v28);

      v29 = v83;
      v30 = (uint64_t)v80;
      v31 = v81;
      (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v80, v22, v81);
      v32 = objc_allocWithZone((Class)type metadata accessor for AtrialFibrillationSettingsViewController(0));
      v33 = swift_retain();
      v34 = sub_231308358(v33, v30);
      v35 = v79;
      v36 = objc_msgSend(v79, sel_navigationController);
      if (v36)
      {
        v37 = v36;
        objc_msgSend(v36, sel_pushViewController_animated_, v34, 1);

        swift_release();
        swift_release();

        (*(void (**)(char *, uint64_t))(v29 + 8))(v22, v31);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v29 + 8))(v22, v31);

        swift_release();
        swift_release();
      }
    }
    else
    {
      v45 = v21;
      v46 = v79;
      if (v23 == *MEMORY[0x24BE412A0])
      {
        v47 = *MEMORY[0x24BDD2E00];
        v48 = objc_allocWithZone(MEMORY[0x24BDD3BF8]);
        v49 = v45;
        v50 = objc_msgSend(v48, sel_initWithFeatureIdentifier_healthStore_currentCountryCode_, v47, v49, 0);
        type metadata accessor for AtrialFibrillationFeatureStatusAvailability();
        v51 = swift_allocObject();
        v52 = sub_2312E974C(v49, (uint64_t)v50, v51);

        v53 = v52 + OBJC_IVAR____TtC5Heart43AtrialFibrillationFeatureStatusAvailability_status;
        swift_beginAccess();
        v54 = v75;
        sub_2312D6C20(v53, v75, (uint64_t (*)(_QWORD))sub_2312DC5EC);
        v55 = v76;
        v56 = v77;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(v54, 1, v77) == 1)
        {
          sub_2312CEBD4(v54, (uint64_t (*)(_QWORD))sub_2312DC5EC);
        }
        else
        {
          v61 = v74;
          (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v74, v54, v56);
          if ((sub_231413570() & 1) != 0)
          {
            v63 = (uint64_t)v80;
            v62 = v81;
            (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v80, v22, v81);
            v64 = objc_allocWithZone((Class)type metadata accessor for AtrialFibrillationSettingsViewController(0));
            v65 = swift_retain();
            v66 = sub_231308358(v65, v63);
            v67 = v55;
            v68 = v66;
            sub_231412F10();
            sub_23139D944(1, (uint64_t)v49, ObjectType, (uint64_t)&off_2500206B8);
            v69 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A728]), sel_initWithRootViewController_, v68);
            objc_msgSend(v46, sel_presentViewController_animated_completion_, v69, 1, 0);

            swift_release();
            swift_release();
            (*(void (**)(char *, uint64_t))(v67 + 8))(v61, v56);
            (*(void (**)(char *, uint64_t))(v83 + 8))(v22, v62);
            return;
          }
          (*(void (**)(char *, uint64_t))(v55 + 8))(v61, v56);
        }
        sub_2312E91AC(v46, v49);

        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v83 + 8))(v22, v81);
      }
      else
      {
        v57 = v81;
        v58 = v83;
        if (v23 == *MEMORY[0x24BE41288] || v23 == *MEMORY[0x24BE41280])
        {
          v70 = (uint64_t)v73;
          sub_2314130F0();
          v7 = sub_2314114AC();
          v71 = *(_QWORD *)(v7 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v70, 1, v7) == 1)
          {
            (*(void (**)(char *, uint64_t))(v58 + 8))(v22, v57);

            swift_release();
            sub_2312CEBD4(v70, (uint64_t (*)(_QWORD))sub_2312E9730);
            return;
          }
          sub_23141147C();

          swift_release();
          (*(void (**)(char *, uint64_t))(v58 + 8))(v22, v57);
          v59 = *(void (**)(char *, uint64_t))(v71 + 8);
          v60 = (char *)v70;
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v83 + 8))(v22, v81);

          swift_release();
          v59 = *(void (**)(char *, uint64_t))(v8 + 8);
          v60 = v10;
        }
        v59(v60, v7);
      }
    }
  }
  else
  {
    if (qword_25415DF98 != -1)
      swift_once();
    v38 = sub_231413780();
    sub_2312CE3B8(v38, (uint64_t)qword_254162FF0);
    v39 = sub_231413768();
    v40 = sub_231414980();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc();
      v42 = swift_slowAlloc();
      v85[0] = v42;
      *(_DWORD *)v41 = 136315138;
      v43 = sub_2314151A8();
      v85[5] = sub_23133180C(v43, v44, v85);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v39, v40, "[%s] Could not access action handler user data!", v41, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v42, -1, -1);
      MEMORY[0x2348DE308](v41, -1, -1);
    }

  }
}

void sub_2312E91AC(void *a1, void *a2)
{
  char *v2;
  uint64_t v4;
  id v5;
  void *v6;
  objc_class *v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  char *v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  char *v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  objc_super v30;

  v4 = qword_255ECAAA0;
  v5 = a2;
  if (v4 != -1)
    swift_once();
  v6 = (void *)qword_255ED2EF8;
  v7 = (objc_class *)type metadata accessor for OnboardingDelegate();
  v8 = (char *)objc_allocWithZone(v7);
  *(_QWORD *)&v8[OBJC_IVAR____TtC5HeartP33_8DCA3C15E4C4BF158196465BE488169318OnboardingDelegate_onboardingManager] = 0;
  v30.receiver = v8;
  v30.super_class = v7;
  v9 = v6;
  v10 = objc_msgSendSuper2(&v30, sel_init);
  v11 = objc_allocWithZone(MEMORY[0x24BE4C090]);
  v12 = (char *)v10;
  v13 = objc_msgSend(v11, sel_initWithOnboardingType_isFirstTimeOnboarding_healthStore_dateCache_provenance_delegate_, 0, 1, v5, v9, 4, v12);

  v14 = *(void **)&v12[OBJC_IVAR____TtC5HeartP33_8DCA3C15E4C4BF158196465BE488169318OnboardingDelegate_onboardingManager];
  *(_QWORD *)&v12[OBJC_IVAR____TtC5HeartP33_8DCA3C15E4C4BF158196465BE488169318OnboardingDelegate_onboardingManager] = v13;

  v15 = qword_25415CA70;
  v16 = *(void **)&v2[qword_25415CA70];
  *(_QWORD *)&v2[qword_25415CA70] = v10;

  v17 = *(_QWORD *)&v2[v15];
  if (v17
    && (v18 = *(void **)(v17
                       + OBJC_IVAR____TtC5HeartP33_8DCA3C15E4C4BF158196465BE488169318OnboardingDelegate_onboardingManager)) != 0
    && (v19 = objc_msgSend(v18, sel_onboardingNavigationController)) != 0)
  {
    v20 = v19;
    objc_msgSend(v19, sel_setModalInPresentation_, 1);
    objc_msgSend(a1, sel_showViewController_sender_, v20, 0);

  }
  else
  {
    if (qword_25415DF98 != -1)
      swift_once();
    v21 = sub_231413780();
    sub_2312CE3B8(v21, (uint64_t)qword_254162FF0);
    v22 = v2;
    v23 = sub_231413768();
    v24 = sub_231414980();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = swift_slowAlloc();
      v26 = swift_slowAlloc();
      v29 = v26;
      *(_DWORD *)v25 = 136446466;
      swift_getObjectType();
      sub_2312E96F8();
      v27 = sub_2314146E0();
      sub_23133180C(v27, v28, &v29);
      sub_231414CBC();

      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2082;
      sub_23133180C(0xD000000000000035, 0x8000000231426920, &v29);
      sub_231414CBC();
      _os_log_impl(&dword_2312C8000, v23, v24, "[%{public}s.%{public}s] Onboarding navigation controller not initialized", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v26, -1, -1);
      MEMORY[0x2348DE308](v25, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t sub_2312E94E8(uint64_t a1)
{
  objc_class *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v3 = sub_231412F64();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v7[qword_25415CA70] = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  v8 = sub_23141321C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v8;
}

void sub_2312E959C()
{
  uint64_t v0;

}

id sub_2312E95AC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IrregularRhythmNotificationsFeatureStatusActionHandler();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_2312E95E0(uint64_t a1)
{

}

uint64_t sub_2312E95F0()
{
  return type metadata accessor for IrregularRhythmNotificationsFeatureStatusActionHandler();
}

id sub_2312E963C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for OnboardingDelegate()
{
  return objc_opt_self();
}

uint64_t sub_2312E96A0()
{
  return sub_2312CCC24((unint64_t *)&unk_25415C130, (uint64_t (*)(uint64_t))MEMORY[0x24BE448E0], MEMORY[0x24BE448D8]);
}

uint64_t sub_2312E96CC()
{
  return sub_2312CCC24(&qword_25415CA80, (uint64_t (*)(uint64_t))type metadata accessor for IrregularRhythmNotificationsFeatureStatusActionHandler, (uint64_t)&unk_231418634);
}

unint64_t sub_2312E96F8()
{
  unint64_t result;

  result = qword_255ECB628;
  if (!qword_255ECB628)
  {
    type metadata accessor for IrregularRhythmNotificationsFeatureStatusActionHandler();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255ECB628);
  }
  return result;
}

void sub_2312E9730(uint64_t a1)
{
  sub_2312D6DD8(a1, &qword_25415C0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

uint64_t sub_2312E974C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  _QWORD v25[5];

  sub_2312D6DD8(0, &qword_25415DE40, (uint64_t (*)(uint64_t))sub_2312E9964, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v25[-1] - v9;
  sub_2312E9964(0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v25[-1] - v15;
  v25[3] = sub_2312DC718();
  v25[4] = MEMORY[0x24BE45B80];
  v25[0] = a2;
  v17 = a3 + OBJC_IVAR____TtC5Heart43AtrialFibrillationFeatureStatusAvailability__featureStatus;
  v18 = sub_231411D1C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v16, 1, 1, v18);
  sub_2312D6C20((uint64_t)v16, (uint64_t)v14, (uint64_t (*)(_QWORD))sub_2312E9964);
  sub_231413E1C();
  sub_2312CEBD4((uint64_t)v16, (uint64_t (*)(_QWORD))sub_2312E9964);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v17, v10, v7);
  v19 = a3 + OBJC_IVAR____TtC5Heart43AtrialFibrillationFeatureStatusAvailability_status;
  v20 = sub_23141357C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_231414F08())
    v21 = sub_2312FC388(MEMORY[0x24BEE4AF8]);
  else
    v21 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a3 + OBJC_IVAR____TtC5Heart43AtrialFibrillationFeatureStatusAvailability_subscriptions) = v21;
  *(_QWORD *)(a3 + 16) = a1;
  sub_2312DF850((uint64_t)v25, a3 + 24);
  v22 = a1;
  sub_23130C944();
  sub_23130CFB0();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v25);
  return a3;
}

void sub_2312E9964(uint64_t a1)
{
  sub_2312D6DD8(a1, &qword_25415D548, (uint64_t (*)(uint64_t))MEMORY[0x24BE412A8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

id sub_2312E9984()
{
  return sub_2312E99BC(&OBJC_IVAR____TtC5Heart27ConfirmDetailsLearnMoreView____lazy_storage___titleLabel, (void (*)(id))MEMORY[0x24BEBC510], MEMORY[0x24BEBC5B8]);
}

id sub_2312E99A0()
{
  return sub_2312E99BC(&OBJC_IVAR____TtC5Heart27ConfirmDetailsLearnMoreView____lazy_storage___detailLabel, (void (*)(id))MEMORY[0x24BEBC568], MEMORY[0x24BEBC470]);
}

id sub_2312E99BC(uint64_t *a1, void (*a2)(id), void (*a3)(void))
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  v4 = *a1;
  v5 = *(void **)(v3 + *a1);
  if (v5)
  {
    v6 = *(id *)(v3 + *a1);
  }
  else
  {
    v7 = sub_2312E9A18(v3, a2, a3);
    v8 = *(void **)(v3 + v4);
    *(_QWORD *)(v3 + v4) = v7;
    v6 = v7;

    v5 = 0;
  }
  v9 = v5;
  return v6;
}

id sub_2312E9A18(uint64_t a1, void (*a2)(id), void (*a3)(void))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v14;

  v5 = sub_2314138AC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  a2(objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0));
  v10 = (void *)sub_231413888();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  objc_msgSend(v9, sel_setFont_, v10);

  a3();
  if (v11)
  {
    v12 = (void *)sub_23141468C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = 0;
  }
  objc_msgSend(v9, sel_setText_, v12);

  objc_msgSend(v9, sel_setNumberOfLines_, 0);
  return v9;
}

id sub_2312E9B60()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Heart27ConfirmDetailsLearnMoreView____lazy_storage___learnMoreLabel;
  v2 = *(void **)&v0[OBJC_IVAR____TtC5Heart27ConfirmDetailsLearnMoreView____lazy_storage___learnMoreLabel];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC5Heart27ConfirmDetailsLearnMoreView____lazy_storage___learnMoreLabel];
  }
  else
  {
    v4 = sub_2312E9BC0(v0);
    v5 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_2312E9BC0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v13;

  v2 = sub_2314138AC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_2314138DC();
  v7 = (void *)sub_231413888();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  objc_msgSend(v6, sel_setFont_, v7);

  if (qword_255ECAAF8 != -1)
    swift_once();
  v8 = (id)static LocalizationSource.heart;
  sub_231412A90();
  sub_231411374();
  swift_bridgeObjectRelease();

  v9 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setText_, v9);

  v10 = objc_msgSend(a1, sel_tintColor);
  objc_msgSend(v6, sel_setTextColor_, v10);

  objc_msgSend(v6, sel_setUserInteractionEnabled_, 1);
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDA20]), sel_initWithTarget_action_, a1, sel_learnMoreTapped);
  objc_msgSend(v6, sel_addGestureRecognizer_, v11);

  objc_msgSend(v6, sel_setNumberOfLines_, 0);
  return v6;
}

id sub_2312E9E0C(uint64_t a1, double a2)
{
  char *v2;
  char *v5;
  id v6;
  id v7;
  double v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  void *v55;
  id v57;
  uint64_t v58;
  uint64_t v60;
  objc_super v61;

  *(_QWORD *)&v2[OBJC_IVAR____TtC5Heart27ConfirmDetailsLearnMoreView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Heart27ConfirmDetailsLearnMoreView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Heart27ConfirmDetailsLearnMoreView____lazy_storage___detailLabel] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Heart27ConfirmDetailsLearnMoreView____lazy_storage___learnMoreLabel] = 0;
  v5 = &v2[OBJC_IVAR____TtC5Heart27ConfirmDetailsLearnMoreView_configuration];
  v58 = sub_231413930();
  v60 = *(_QWORD *)(v58 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v5, a1, v58);
  v61.receiver = v2;
  v61.super_class = (Class)type metadata accessor for ConfirmDetailsLearnMoreView();
  v6 = objc_msgSendSuper2(&v61, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v7 = sub_2312E9984();
  v8 = a2 + -16.0;
  objc_msgSend(v7, sel_setPreferredMaxLayoutWidth_, v8);

  v9 = sub_2312E99A0();
  objc_msgSend(v9, sel_setPreferredMaxLayoutWidth_, v8);

  sub_2312D3AD4();
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_2314186B0;
  v11 = v6;
  *(_QWORD *)(v10 + 32) = sub_2312E9984();
  *(_QWORD *)(v10 + 40) = sub_2312E99A0();
  *(_QWORD *)(v10 + 48) = sub_2312E9B60();
  sub_2314147B8();
  sub_231414BA8();

  swift_bridgeObjectRelease();
  v57 = (id)objc_opt_self();
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_2314186C0;
  v13 = sub_2312E9984();
  v14 = objc_msgSend(v13, sel_topAnchor);

  v15 = objc_msgSend(v11, (SEL)&selRef_hk_alignVerticalConstraintsWithView_margin_ + 4);
  v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

  *(_QWORD *)(v12 + 32) = v16;
  v17 = sub_2312E9984();
  v18 = objc_msgSend(v17, sel_leadingAnchor);

  v19 = objc_msgSend(v11, sel_leadingAnchor);
  v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v19, 8.0);

  *(_QWORD *)(v12 + 40) = v20;
  v21 = sub_2312E9984();
  v22 = objc_msgSend(v21, sel_trailingAnchor);

  v23 = objc_msgSend(v11, sel_trailingAnchor);
  v24 = objc_msgSend(v22, sel_constraintLessThanOrEqualToAnchor_constant_, v23, -8.0);

  *(_QWORD *)(v12 + 48) = v24;
  v25 = sub_2312E99A0();
  v26 = objc_msgSend(v25, (SEL)&selRef_hk_alignVerticalConstraintsWithView_margin_ + 4);

  v27 = sub_2312E9984();
  v28 = objc_msgSend(v27, sel_bottomAnchor);

  v29 = objc_msgSend(v26, sel_constraintEqualToAnchor_constant_, v28, 4.0);
  *(_QWORD *)(v12 + 56) = v29;
  v30 = sub_2312E99A0();
  v31 = objc_msgSend(v30, sel_leadingAnchor);

  v32 = objc_msgSend(v11, sel_leadingAnchor);
  v33 = objc_msgSend(v31, sel_constraintEqualToAnchor_constant_, v32, 8.0);

  *(_QWORD *)(v12 + 64) = v33;
  v34 = sub_2312E99A0();
  v35 = objc_msgSend(v34, sel_trailingAnchor);

  v36 = objc_msgSend(v11, sel_trailingAnchor);
  v37 = objc_msgSend(v35, sel_constraintLessThanOrEqualToAnchor_constant_, v36, -8.0);

  *(_QWORD *)(v12 + 72) = v37;
  v38 = sub_2312E9B60();
  v39 = objc_msgSend(v38, sel_topAnchor);

  v40 = sub_2312E99A0();
  v41 = objc_msgSend(v40, sel_bottomAnchor);

  v42 = objc_msgSend(v39, sel_constraintEqualToAnchor_constant_, v41, 2.0);
  *(_QWORD *)(v12 + 80) = v42;
  v43 = sub_2312E9B60();
  v44 = objc_msgSend(v43, sel_leadingAnchor);

  v45 = objc_msgSend(v11, sel_leadingAnchor);
  v46 = objc_msgSend(v44, sel_constraintEqualToAnchor_constant_, v45, 8.0);

  *(_QWORD *)(v12 + 88) = v46;
  v47 = sub_2312E9B60();
  v48 = objc_msgSend(v47, sel_trailingAnchor);

  v49 = objc_msgSend(v11, sel_trailingAnchor);
  v50 = objc_msgSend(v48, sel_constraintLessThanOrEqualToAnchor_constant_, v49, -8.0);

  *(_QWORD *)(v12 + 96) = v50;
  v51 = sub_2312E9B60();
  v52 = objc_msgSend(v51, sel_bottomAnchor);

  v53 = objc_msgSend(v11, sel_bottomAnchor);
  v54 = objc_msgSend(v52, sel_constraintEqualToAnchor_constant_, v53, -18.0);

  *(_QWORD *)(v12 + 104) = v54;
  sub_2314147B8();
  sub_2312EA780();
  v55 = (void *)sub_231414788();
  swift_bridgeObjectRelease();
  objc_msgSend(v57, sel_activateConstraints_, v55);

  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(a1, v58);
  return v11;
}

uint64_t sub_2312EA538()
{
  uint64_t v0;
  uint64_t result;

  result = MEMORY[0x2348DE3BC](v0 + OBJC_IVAR____TtC5Heart27ConfirmDetailsLearnMoreView_delegate);
  if (result)
  {
    if (MEMORY[0x2348DE3BC](result + qword_255ECF860))
    {
      sub_2313185F0();
      sub_2314130CC();
    }
    return sub_2314130CC();
  }
  return result;
}

id sub_2312EA604()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConfirmDetailsLearnMoreView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2312EA6B8()
{
  return type metadata accessor for ConfirmDetailsLearnMoreView();
}

uint64_t type metadata accessor for ConfirmDetailsLearnMoreView()
{
  uint64_t result;

  result = qword_255ECB688;
  if (!qword_255ECB688)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2312EA6FC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_231413930();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

unint64_t sub_2312EA780()
{
  unint64_t result;

  result = qword_255ED2440;
  if (!qword_255ED2440)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255ED2440);
  }
  return result;
}

_QWORD *sub_2312EA7BC(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void *v23;
  char v24;
  void *v25;
  char *v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v35 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v35 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v7 = a3[6];
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    v10 = sub_231411248();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = (int *)type metadata accessor for AFibBurdenPDFChartViewModel();
    *(_QWORD *)(v8 + v11[5]) = *(_QWORD *)(v9 + v11[5]);
    v12 = v11[6];
    v13 = *(void **)(v9 + v12);
    *(_QWORD *)(v8 + v12) = v13;
    v14 = v11[7];
    v15 = *(void **)(v9 + v14);
    *(_QWORD *)(v8 + v14) = v15;
    v16 = v11[8];
    v17 = v8 + v16;
    v18 = v9 + v16;
    *(_OWORD *)v17 = *(_OWORD *)v18;
    *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
    v19 = a3[7];
    v20 = a3[8];
    v21 = (char *)v4 + v19;
    v22 = (uint64_t)a2 + v19;
    v23 = *(void **)v22;
    v24 = *(_BYTE *)(v22 + 8);
    *(_QWORD *)v21 = *(_QWORD *)v22;
    v21[8] = v24;
    v25 = *(void **)(v22 + 16);
    *((_QWORD *)v21 + 2) = v25;
    v26 = (char *)v4 + v20;
    v27 = (uint64_t)a2 + v20;
    v28 = *(_OWORD *)(v27 + 24);
    *(_OWORD *)((char *)v4 + v20 + 24) = v28;
    v29 = v28;
    v30 = **(void (***)(char *, uint64_t, uint64_t))(v28 - 8);
    sub_231412A90();
    v31 = v13;
    v32 = v15;
    v33 = v23;
    v34 = v25;
    v30(v26, v27, v29);
  }
  return v4;
}

uint64_t sub_2312EA92C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id *v7;

  v4 = a1 + a2[6];
  v5 = sub_231411248();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = type metadata accessor for AFibBurdenPDFChartViewModel();
  swift_bridgeObjectRelease();

  v7 = (id *)(a1 + a2[7]);
  return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + a2[8]);
}

uint64_t sub_2312EA9C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  char v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  id v30;
  id v31;
  id v32;
  id v33;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_231411248();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = (int *)type metadata accessor for AFibBurdenPDFChartViewModel();
  *(_QWORD *)(v7 + v10[5]) = *(_QWORD *)(v8 + v10[5]);
  v11 = v10[6];
  v12 = *(void **)(v8 + v11);
  *(_QWORD *)(v7 + v11) = v12;
  v13 = v10[7];
  v14 = *(void **)(v8 + v13);
  *(_QWORD *)(v7 + v13) = v14;
  v15 = v10[8];
  v16 = v7 + v15;
  v17 = v8 + v15;
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
  v18 = a3[7];
  v19 = a3[8];
  v20 = a1 + v18;
  v21 = a2 + v18;
  v22 = *(void **)v21;
  v23 = *(_BYTE *)(v21 + 8);
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *(_BYTE *)(v20 + 8) = v23;
  v24 = *(void **)(v21 + 16);
  *(_QWORD *)(v20 + 16) = v24;
  v25 = a1 + v19;
  v26 = a2 + v19;
  v27 = *(_OWORD *)(v26 + 24);
  *(_OWORD *)(a1 + v19 + 24) = v27;
  v28 = v27;
  v29 = **(void (***)(uint64_t, uint64_t, uint64_t))(v27 - 8);
  sub_231412A90();
  v30 = v12;
  v31 = v14;
  v32 = v22;
  v33 = v24;
  v29(v25, v26, v28);
  return a1;
}

uint64_t sub_2312EAB0C(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  void *v31;
  void *v32;
  id v33;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  v7 = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = (uint64_t)a2 + v8;
  v11 = sub_231411248();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  v12 = (int *)type metadata accessor for AFibBurdenPDFChartViewModel();
  *(_QWORD *)(v9 + v12[5]) = *(_QWORD *)(v10 + v12[5]);
  sub_231412A90();
  swift_bridgeObjectRelease();
  v13 = v12[6];
  v14 = *(void **)(v10 + v13);
  v15 = *(void **)(v9 + v13);
  *(_QWORD *)(v9 + v13) = v14;
  v16 = v14;

  v17 = v12[7];
  v18 = *(void **)(v10 + v17);
  v19 = *(void **)(v9 + v17);
  *(_QWORD *)(v9 + v17) = v18;
  v20 = v18;

  v21 = v12[8];
  v22 = v9 + v21;
  v23 = v10 + v21;
  v24 = *(_QWORD *)(v23 + 16);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_QWORD *)(v22 + 16) = v24;
  v25 = a3[7];
  v26 = a1 + v25;
  v27 = (uint64_t)a2 + v25;
  v28 = *(void **)((char *)a2 + v25);
  LOBYTE(v22) = *(_BYTE *)(v27 + 8);
  v29 = *(void **)v26;
  *(_QWORD *)v26 = v28;
  *(_BYTE *)(v26 + 8) = v22;
  v30 = v28;

  v31 = *(void **)(v27 + 16);
  v32 = *(void **)(v26 + 16);
  *(_QWORD *)(v26 + 16) = v31;
  v33 = v31;

  sub_2312DB81C((uint64_t *)(a1 + a3[8]), (uint64_t *)((char *)a2 + a3[8]));
  return a1;
}

uint64_t sub_2312EAC58(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_231411248();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = (int *)type metadata accessor for AFibBurdenPDFChartViewModel();
  *(_QWORD *)(v7 + v10[5]) = *(_QWORD *)(v8 + v10[5]);
  *(_QWORD *)(v7 + v10[6]) = *(_QWORD *)(v8 + v10[6]);
  *(_QWORD *)(v7 + v10[7]) = *(_QWORD *)(v8 + v10[7]);
  v11 = v10[8];
  v12 = v7 + v11;
  v13 = v8 + v11;
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  v14 = a3[7];
  v15 = a3[8];
  v16 = a1 + v14;
  v17 = a2 + v14;
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
  v18 = a1 + v15;
  v19 = a2 + v15;
  *(_QWORD *)(v18 + 32) = *(_QWORD *)(v19 + 32);
  v20 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v20;
  return a1;
}

uint64_t sub_2312EAD58(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_231411248();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = (int *)type metadata accessor for AFibBurdenPDFChartViewModel();
  *(_QWORD *)(v7 + v10[5]) = *(_QWORD *)(v8 + v10[5]);
  swift_bridgeObjectRelease();
  v11 = v10[6];
  v12 = *(void **)(v7 + v11);
  *(_QWORD *)(v7 + v11) = *(_QWORD *)(v8 + v11);

  v13 = v10[7];
  v14 = *(void **)(v7 + v13);
  *(_QWORD *)(v7 + v13) = *(_QWORD *)(v8 + v13);

  v15 = v10[8];
  v16 = v7 + v15;
  v17 = v8 + v15;
  *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  v18 = a3[7];
  v19 = a1 + v18;
  v20 = a2 + v18;
  LOBYTE(v16) = *(_BYTE *)(a2 + v18 + 8);
  v21 = *(void **)(a1 + v18);
  *(_QWORD *)v19 = *(_QWORD *)(a2 + v18);
  *(_BYTE *)(v19 + 8) = v16;

  v22 = *(void **)(v19 + 16);
  *(_QWORD *)(v19 + 16) = *(_QWORD *)(v20 + 16);

  v23 = a3[8];
  v24 = a1 + v23;
  v25 = a2 + v23;
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + v23);
  v26 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 16) = v26;
  *(_QWORD *)(v24 + 32) = *(_QWORD *)(v25 + 32);
  return a1;
}

uint64_t sub_2312EAE98()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2312EAEA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for AFibBurdenPDFChartViewModel();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 24), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 16);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_2312EAF28()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2312EAF34(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for AFibBurdenPDFChartViewModel();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 24), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 16) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for AFibBurdenPDFBarChart()
{
  uint64_t result;

  result = qword_255ECB6F0;
  if (!qword_255ECB6F0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2312EAFF0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for AFibBurdenPDFChartViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2312EB078@<X0>(void (*a1)(char *, uint64_t, uint64_t, uint64_t)@<X0>, char *a2@<X1>, char a3@<W2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  uint64_t v46;
  double *v47;
  BOOL v48;
  char *v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  void (*v70)(char *, char *, uint64_t);
  char *v71;
  void (*v72)(char *, char *, uint64_t);
  uint64_t v73;
  void (*v74)(char *, uint64_t);
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t OpaqueTypeConformance2;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  __int128 v105;
  uint64_t KeyPath;
  id v107;
  id v108;
  unsigned int *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  char *v147;
  uint64_t v148;
  void (*v149)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v150;
  uint64_t v151;
  char *v152;
  __int128 v153;
  __int128 v154;
  uint64_t v155[5];
  __int128 v156;
  __int128 v157;
  __int128 v158;

  v132 = a5;
  v147 = a2;
  v140 = a6;
  v144 = sub_231414068();
  v9 = *(_QWORD *)(v144 - 8);
  MEMORY[0x24BDAC7A8](v144);
  v142 = (char *)&v117 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6DD8(0, &qword_255ECB758, (uint64_t (*)(uint64_t))MEMORY[0x24BDB8338], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v11);
  v139 = (char *)&v117 - v12;
  sub_2312EDFDC(0, &qword_255ECB760, (uint64_t (*)(uint64_t))sub_2312ECF40, (uint64_t (*)(void))sub_2312ED284, MEMORY[0x24BDB8128]);
  v126 = v13;
  v125 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v124 = (char *)&v117 - v14;
  sub_2312ED454(0);
  v129 = v15;
  v128 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v127 = (char *)&v117 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312ED608(0);
  v134 = v17;
  v131 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v130 = (char *)&v117 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312ED6FC(0);
  v137 = v19;
  v136 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v135 = (char *)&v117 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312ED8BC(0);
  v141 = v21;
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v138 = (char *)&v117 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312EE4B8(0, &qword_255ECB810, v24, MEMORY[0x24BDEBEF8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  v133 = v25;
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&v117 - v26;
  sub_2312EDA34();
  v122 = v28;
  v29 = MEMORY[0x24BDAC7A8](v28);
  v118 = (char *)&v117 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29);
  v121 = (char *)&v117 - v31;
  v32 = sub_231411608();
  v119 = *(_QWORD *)(v32 - 8);
  v33 = MEMORY[0x24BDAC7A8](v32);
  v146 = (char *)&v117 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33);
  v145 = (char *)&v117 - v35;
  sub_2312ED508(0);
  v123 = v36;
  v37 = MEMORY[0x24BDAC7A8](v36);
  v120 = (char *)&v117 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v37);
  v148 = (uint64_t)&v117 - v39;
  v40 = sub_231411248();
  v150 = *(_QWORD *)(v40 - 8);
  v151 = v40;
  MEMORY[0x24BDAC7A8](v40);
  v152 = (char *)&v117 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_231413A68();
  MEMORY[0x24BDAC7A8](v42);
  v43 = sub_2314139F0();
  MEMORY[0x24BDAC7A8](v43);
  v44 = sub_231413A20();
  MEMORY[0x24BDAC7A8](v44);
  result = type metadata accessor for AFibBurdenPDFChartViewModel();
  v46 = *(int *)(result + 32);
  v149 = a1;
  v47 = (double *)((char *)a1 + v46);
  v48 = *(_BYTE *)v47 == 2;
  v143 = v9;
  if (v48)
  {
    v49 = v147;
    sub_2313E4A5C(v147, a3, (uint64_t)a4);
  }
  else
  {
    v49 = v147;
    if (v47[2] < 0.0)
    {
LABEL_13:
      __break(1u);
      return result;
    }
  }
  v117 = v22;
  v147 = v27;
  v50 = sub_2313E4ED0(3, v49, a3, a4);
  if (v50)
  {
    v51 = v50;
    sub_2313E5DF0(v50);
    v53 = v52;
    sub_2312EDFDC(0, &qword_255ECB850, (uint64_t (*)(uint64_t))sub_2312EDDD0, (uint64_t (*)(void))sub_2312EE268, MEMORY[0x24BDB82E0]);
    *((_QWORD *)&v157 + 1) = v54;
    *(_QWORD *)&v158 = sub_2312EE38C();
    sub_2312DFCA0((uint64_t *)&v156);
    *(_QWORD *)&v153 = v53;
    sub_2312EE3F4();
    sub_2314139FC();
    v55 = swift_allocObject();
    *(_QWORD *)(v55 + 16) = v49;
    *(_BYTE *)(v55 + 24) = a3;
    *(_QWORD *)(v55 + 32) = a4;
    *(_QWORD *)(v55 + 40) = v51;
    v56 = v49;
    v57 = a4;
    sub_231412A90();
    sub_2314139E4();
    sub_231413A5C();
    sub_2312EDDD0();
    sub_2312EE268();
    sub_231413B88();
    sub_2312DFB68(&v156, (uint64_t)v155);
    sub_2313E6120(v51);
    v59 = v58;
    v61 = v60;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2314139E4();
    sub_231413A5C();
    sub_231413A14();
    sub_2312EDFDC(0, &qword_255ECB820, (uint64_t (*)(uint64_t))sub_2312EDA98, (uint64_t (*)(void))sub_2312EDB08, MEMORY[0x24BDB82E0]);
    v155[3] = v62;
    v155[4] = sub_2312EDB70();
    sub_2312DFCA0(v155);
    sub_2312EDA98();
    sub_2312EDB08();
    sub_231413B94();
    v59 = 0;
    v61 = 0;
  }
  *(_QWORD *)&v154 = v59;
  *((_QWORD *)&v154 + 1) = v61;
  (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t))(v150 + 16))(v152, v149, v151);
  v63 = v145;
  sub_231411230();
  v64 = v146;
  sub_23141120C();
  sub_2312ED52C();
  result = sub_231414674();
  if ((result & 1) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  v65 = v122;
  v66 = v121;
  v67 = &v121[*(int *)(v122 + 48)];
  v68 = v118;
  v69 = v119;
  v70 = *(void (**)(char *, char *, uint64_t))(v119 + 32);
  v70(v121, v63, v32);
  v70(v67, v64, v32);
  v71 = &v68[*(int *)(v65 + 48)];
  v72 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
  v72(v68, v66, v32);
  v72(v71, v67, v32);
  v73 = (uint64_t)v120;
  v70(v120, v68, v32);
  v74 = *(void (**)(char *, uint64_t))(v69 + 8);
  v74(v71, v32);
  v75 = &v68[*(int *)(v65 + 48)];
  v70(v68, v66, v32);
  v70(v75, v67, v32);
  v76 = v123;
  v70((char *)(v73 + *(int *)(v123 + 36)), v75, v32);
  v74(v68, v32);
  v77 = sub_2312EE5FC(v73, v148, (uint64_t (*)(_QWORD))sub_2312ED508);
  v146 = (char *)&v117;
  MEMORY[0x24BDAC7A8](v77);
  v78 = v152;
  *(&v117 - 2) = (uint64_t)v149;
  *(&v117 - 1) = (uint64_t)v78;
  sub_2312ECF40();
  sub_2312ED284();
  v79 = v124;
  sub_231413AE0();
  v80 = sub_231413BD0();
  v149 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56);
  v81 = (uint64_t)v139;
  v149(v139, 1, 1, v80);
  v82 = sub_2312ED548();
  v83 = sub_2312ED5B0();
  v84 = v127;
  v85 = v126;
  sub_231414314();
  sub_2312D6B98(v81, &qword_255ECB758, (uint64_t (*)(uint64_t))MEMORY[0x24BDB8338]);
  v86 = (*(uint64_t (**)(char *, uint64_t))(v125 + 8))(v79, v85);
  MEMORY[0x24BDAC7A8](v86);
  *(&v117 - 2) = v132;
  *(_QWORD *)&v156 = v85;
  *((_QWORD *)&v156 + 1) = v76;
  *(_QWORD *)&v157 = v82;
  *((_QWORD *)&v157 + 1) = v83;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v88 = MEMORY[0x24BDB7DC8];
  v89 = MEMORY[0x24BDB7DB8];
  v90 = v130;
  v91 = v129;
  sub_2314142FC();
  (*(void (**)(char *, uint64_t))(v128 + 8))(v84, v91);
  v153 = v154;
  v149((char *)v81, 1, 1, v80);
  sub_2312EE6B4(0, &qword_255ECB7F8, MEMORY[0x24BEE13F0], MEMORY[0x24BEE08B8]);
  v93 = v92;
  *(_QWORD *)&v156 = v91;
  *((_QWORD *)&v156 + 1) = v88;
  *(_QWORD *)&v157 = OpaqueTypeConformance2;
  *((_QWORD *)&v157 + 1) = v89;
  v94 = swift_getOpaqueTypeConformance2();
  v95 = sub_2312ED84C();
  v96 = v135;
  v97 = v134;
  sub_231414320();
  sub_2312D6B98(v81, &qword_255ECB758, (uint64_t (*)(uint64_t))MEMORY[0x24BDB8338]);
  v98 = (*(uint64_t (**)(char *, uint64_t))(v131 + 8))(v90, v97);
  MEMORY[0x24BDAC7A8](v98);
  *(&v117 - 2) = (uint64_t)&v154;
  *(_QWORD *)&v156 = v97;
  *((_QWORD *)&v156 + 1) = v93;
  *(_QWORD *)&v157 = v94;
  *((_QWORD *)&v157 + 1) = v95;
  swift_getOpaqueTypeConformance2();
  v99 = v138;
  v100 = v137;
  sub_231414308();
  (*(void (**)(char *, uint64_t))(v136 + 8))(v96, v100);
  sub_2314144C4();
  sub_231413FFC();
  v101 = v117;
  v102 = v147;
  v103 = v141;
  (*(void (**)(char *, char *, uint64_t))(v117 + 16))(v147, v99, v141);
  v104 = &v102[*(int *)(v133 + 36)];
  v105 = v157;
  *(_OWORD *)v104 = v156;
  *((_OWORD *)v104 + 1) = v105;
  *((_OWORD *)v104 + 2) = v158;
  (*(void (**)(char *, uint64_t))(v101 + 8))(v99, v103);
  KeyPath = swift_getKeyPath();
  v107 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v108 = objc_msgSend(v107, sel_userInterfaceLayoutDirection);

  v109 = (unsigned int *)MEMORY[0x24BDED118];
  v110 = v143;
  if (v108 != (id)1)
    v109 = (unsigned int *)MEMORY[0x24BDED100];
  v111 = v142;
  v112 = v144;
  (*(void (**)(char *, _QWORD, uint64_t))(v143 + 104))(v142, *v109, v144);
  sub_2312EDC04();
  v114 = v140;
  v115 = (uint64_t *)(v140 + *(int *)(v113 + 36));
  sub_2312D6DD8(0, &qword_255ECB848, (uint64_t (*)(uint64_t))MEMORY[0x24BDED130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
  (*(void (**)(char *, char *, uint64_t))(v110 + 16))((char *)v115 + *(int *)(v116 + 28), v111, v112);
  *v115 = KeyPath;
  sub_2312EDCA0((uint64_t)v102, v114);
  (*(void (**)(char *, uint64_t))(v110 + 8))(v111, v112);
  sub_2312EDD04((uint64_t)v102);
  sub_2312EDD60(v148);
  (*(void (**)(char *, uint64_t))(v150 + 8))(v152, v151);
  return sub_2312EDD9C((uint64_t)&v154);
}

uint64_t sub_2312EBDFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t OpaqueTypeConformance2;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  char *v58;
  char *v59;
  void (*v60)(char *, uint64_t);
  void (*v61)(char *, uint64_t);
  void (*v63)(char *, char *, uint64_t);
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD v87[3];
  uint64_t v88[5];
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;

  v83 = a2;
  v78 = a3;
  v86 = sub_231411608();
  v67 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86);
  v66 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312EE4B8(0, &qword_255ECB8B0, v5, MEMORY[0x24BDB7A98], MEMORY[0x24BDB7E88]);
  MEMORY[0x24BDAC7A8](v6);
  v80 = (char *)&v63 - v7;
  v74 = sub_231413B7C();
  v68 = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74);
  v65 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDB7C28];
  sub_2312EE1E4(0, &qword_255ECB7A8, v10, MEMORY[0x24BDB8280], MEMORY[0x24BDB7C28]);
  v84 = v11;
  v69 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v73 = (char *)&v63 - v12;
  sub_2312ED1B4(0);
  v75 = v13;
  v85 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v77 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v76 = (char *)&v63 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v82 = (char *)&v63 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v81 = (char *)&v63 - v20;
  v21 = type metadata accessor for AFibBurdenPDFChartViewModel();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(_QWORD *)(v22 + 64);
  MEMORY[0x24BDAC7A8](v21);
  sub_2312ECFB0();
  v72 = v24;
  v79 = *(_QWORD *)(v24 - 8);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v71 = (char *)&v63 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v63 - v27;
  v88[0] = *(_QWORD *)(a1 + *(int *)(v21 + 20));
  sub_2312EE518(a1, (uint64_t)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v29 = (*(unsigned __int8 *)(v22 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v30 = swift_allocObject();
  sub_2312EE5FC((uint64_t)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), v30 + v29, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartViewModel);
  sub_2312D6DD8(0, &qword_255ECB778, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenPDFChartPoint, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  v64 = v31;
  sub_231411248();
  sub_2312ED084(0);
  sub_2312ED154();
  v32 = MEMORY[0x24BDB8168];
  sub_2312EE1E4(255, &qword_255ECB788, (uint64_t (*)(uint64_t))MEMORY[0x24BDB8170], MEMORY[0x24BDB8168], v9);
  v34 = v33;
  v35 = sub_231413AF8();
  sub_231412A90();
  v36 = MEMORY[0x24BDF3E48];
  v89 = v35;
  v90 = MEMORY[0x24BDF3E48];
  v91 = v32;
  v92 = MEMORY[0x24BDF3E18];
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v89 = v34;
  v90 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_2312CCC24(&qword_255ECB8B8, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenPDFChartPoint, (uint64_t)&unk_231421D28);
  v70 = v28;
  sub_231414470();
  sub_2314141C4();
  v38 = v66;
  sub_231411230();
  v39 = v65;
  v40 = v86;
  sub_231413A50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v41 = v38;
  v67 = *(_QWORD *)(v67 + 8);
  ((void (*)(char *, uint64_t))v67)(v38, v40);
  sub_231413B64();
  if (qword_255ECAA38 != -1)
    swift_once();
  v89 = qword_255ED2E30;
  v42 = v73;
  v43 = v74;
  v44 = MEMORY[0x24BDB8280];
  v45 = MEMORY[0x24BDF3E18];
  sub_2314139B4();
  v68 = *(_QWORD *)(v68 + 8);
  ((void (*)(char *, uint64_t))v68)(v39, v43);
  sub_231413FD8();
  v89 = v43;
  v90 = v36;
  v91 = v44;
  v92 = v45;
  v64 = swift_getOpaqueTypeConformance2();
  v46 = v82;
  v47 = v84;
  sub_2314139D8();
  sub_2312EE68C((uint64_t)v88);
  v69 = *(_QWORD *)(v69 + 8);
  ((void (*)(char *, uint64_t))v69)(v42, v47);
  v63 = *(void (**)(char *, char *, uint64_t))(v85 + 32);
  v48 = v75;
  v63(v81, v46, v75);
  sub_2314141C4();
  sub_23141120C();
  v49 = v86;
  sub_231413A50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  ((void (*)(char *, uint64_t))v67)(v41, v49);
  sub_231413B64();
  v89 = qword_255ED2E30;
  sub_2314139B4();
  ((void (*)(char *, uint64_t))v68)(v39, v43);
  sub_231413FD8();
  v50 = v76;
  v51 = v84;
  sub_2314139D8();
  sub_2312EE68C((uint64_t)&v89);
  ((void (*)(char *, uint64_t))v69)(v42, v51);
  v52 = v82;
  v63(v82, v50, v48);
  v53 = v71;
  v54 = v70;
  v55 = v72;
  (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v71, v70, v72);
  v87[0] = v53;
  v56 = v85;
  v57 = *(void (**)(char *, char *, uint64_t))(v85 + 16);
  v58 = v81;
  v57(v50, v81, v48);
  v87[1] = v50;
  v59 = v77;
  v57(v77, v52, v48);
  v87[2] = v59;
  sub_2313FC1F4(v87, v78);
  v60 = *(void (**)(char *, uint64_t))(v56 + 8);
  v60(v52, v48);
  v60(v58, v48);
  v61 = *(void (**)(char *, uint64_t))(v79 + 8);
  v61(v54, v55);
  v60(v59, v48);
  v60(v50, v48);
  return ((uint64_t (*)(char *, uint64_t))v61)(v53, v55);
}

uint64_t sub_2312EC6CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  void *v30;
  void (*v31)(char *, uint64_t);
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _DWORD v51[2];
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v65 = a2;
  v69 = a3;
  v4 = sub_2314141DC();
  v67 = *(_QWORD *)(v4 - 8);
  v68 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v66 = (char *)v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB7E88];
  sub_2312EE6B4(0, &qword_255ECB8C0, MEMORY[0x24BDB84C8], MEMORY[0x24BDB7E88]);
  MEMORY[0x24BDAC7A8](v7);
  v64 = (char *)v51 - v8;
  sub_2312D6DD8(0, &qword_255ECB8C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v9);
  v57 = (char *)v51 - v10;
  v11 = sub_231411764();
  v55 = *(_QWORD *)(v11 - 8);
  v56 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_231411608();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)v51 - v19;
  sub_2312EE4B8(0, &qword_255ECB8B0, v21, MEMORY[0x24BDB7A98], v6);
  MEMORY[0x24BDAC7A8](v22);
  v54 = (char *)v51 - v23;
  v60 = sub_231413AF8();
  v61 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v59 = (char *)v51 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312EE1E4(0, &qword_255ECB788, v25, MEMORY[0x24BDB8168], MEMORY[0x24BDB7C28]);
  v27 = *(_QWORD *)(v26 - 8);
  v62 = v26;
  v63 = v27;
  MEMORY[0x24BDAC7A8](v26);
  v58 = (char *)v51 - v28;
  v52 = sub_2314141C4();
  v51[1] = v29;
  v53 = a1;
  sub_231411230();
  v30 = (void *)sub_2314115C0();
  v31 = *(void (**)(char *, uint64_t))(v15 + 8);
  v31(v18, v14);
  sub_23141120C();
  v32 = (void *)sub_2314115C0();
  v31(v18, v14);
  v33 = (id)HKDateMid();

  sub_2314115D8();
  v35 = v55;
  v34 = v56;
  (*(void (**)(char *, _QWORD, uint64_t))(v55 + 104))(v13, *MEMORY[0x24BDCF1E8], v56);
  v36 = sub_23141177C();
  v37 = (uint64_t)v57;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v57, 1, 1, v36);
  sub_231413A44();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2312D6B98(v37, &qword_255ECB8C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8]);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v34);
  v31(v20, v14);
  sub_2314141C4();
  v70 = *(_QWORD *)(v53 + *(int *)(type metadata accessor for AFibBurdenPDFChartPoint() + 20));
  sub_231413A50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v38 = v59;
  sub_231413AEC();
  v70 = sub_2313FB10C();
  v39 = MEMORY[0x24BDF3E48];
  v40 = MEMORY[0x24BDF3E18];
  v41 = v58;
  v42 = v60;
  v43 = MEMORY[0x24BDB8168];
  sub_2314139B4();
  swift_release();
  v44 = v38;
  v45 = v42;
  (*(void (**)(char *, uint64_t))(v61 + 8))(v44, v42);
  v46 = v66;
  v47 = v67;
  v48 = v68;
  (*(void (**)(char *, _QWORD, uint64_t))(v67 + 104))(v66, *MEMORY[0x24BDEEB68], v68);
  v70 = v45;
  v71 = v39;
  v72 = v43;
  v73 = v40;
  swift_getOpaqueTypeConformance2();
  v49 = v62;
  sub_2314139A8();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v46, v48);
  return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v41, v49);
}

uint64_t sub_2312ECC94@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2312EB078((void (*)(char *, uint64_t, uint64_t, uint64_t))(v2 + a1[6]), *(char **)(v2 + a1[7]), *(_BYTE *)(v2 + a1[7] + 8), *(void **)(v2 + a1[7] + 16), v2 + a1[8], a2);
}

uint64_t sub_2312ECCBC()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_2312ECCC8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_2312ECCD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  if (qword_255ECAA38 != -1)
    swift_once();
  swift_retain();
  sub_2314125F8();
  v2 = sub_231412604();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 0, 1, v2);
}

uint64_t sub_2312ECD50()
{
  sub_2312CCC24(&qword_255ECB750, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenPDFBarChart, (uint64_t)&unk_231418818);
  return sub_2314134B0();
}

uint64_t sub_2312ECDA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2312ECDC0(a1, a2, a3, MEMORY[0x24BE452B8]);
}

uint64_t sub_2312ECDB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2312ECDC0(a1, a2, a3, MEMORY[0x24BE452C0]);
}

uint64_t sub_2312ECDC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;

  v6 = sub_2312CCC24(&qword_255ECB750, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenPDFBarChart, (uint64_t)&unk_231418818);
  return a4(a1, a2, v6);
}

uint64_t sub_2312ECE20()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  sub_2312CCC24(&qword_255ECB748, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenPDFBarChart, (uint64_t)&unk_2314187D8);
  *v1 = v0;
  v1[1] = sub_2312DBC38;
  return sub_2314127C0();
}

uint64_t sub_2312ECE9C()
{
  return sub_2312CCC24(&qword_255ECB740, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenPDFBarChart, (uint64_t)&unk_2314187B0);
}

uint64_t sub_2312ECEC8()
{
  return sub_2312CCC24(&qword_255ECB748, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenPDFBarChart, (uint64_t)&unk_2314187D8);
}

uint64_t sub_2312ECEF4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2312ECF04(uint64_t a1)
{
  uint64_t result;

  result = sub_2312CCC24(&qword_255ECB750, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenPDFBarChart, (uint64_t)&unk_231418818);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_2312ECF40()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECB768)
  {
    sub_2312ECFB0();
    sub_2312ED1B4(255);
    v0 = sub_231413984();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECB768);
  }
}

void sub_2312ECFB0()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_255ECB770)
  {
    sub_2312D6DD8(255, &qword_255ECB778, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenPDFChartPoint, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_231411248();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878];
    sub_2312ED084(255);
    sub_2312ED154();
    sub_2312CCC24((unint64_t *)&qword_255ECB798, v0, MEMORY[0x24BDCB890]);
    v1 = sub_231414488();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_255ECB770);
  }
}

void sub_2312ED084(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  if (!qword_255ECB780)
  {
    v2 = MEMORY[0x24BDB8168];
    sub_2312EE1E4(255, &qword_255ECB788, (uint64_t (*)(uint64_t))MEMORY[0x24BDB8170], MEMORY[0x24BDB8168], MEMORY[0x24BDB7C28]);
    v4 = v3;
    sub_231413AF8();
    v7[2] = v2;
    v7[3] = MEMORY[0x24BDF3E18];
    v7[0] = v4;
    v7[1] = swift_getOpaqueTypeConformance2();
    v5 = MEMORY[0x2348DE200](a1, v7, MEMORY[0x24BDB7C08], 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_255ECB780);
  }
}

unint64_t sub_2312ED154()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ECB790;
  if (!qword_255ECB790)
  {
    sub_2312D6DD8(255, &qword_255ECB778, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenPDFChartPoint, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2348DE248](MEMORY[0x24BEE12D8], v1);
    atomic_store(result, (unint64_t *)&qword_255ECB790);
  }
  return result;
}

void sub_2312ED1B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  if (!qword_255ECB7A0)
  {
    v2 = MEMORY[0x24BDB8280];
    sub_2312EE1E4(255, &qword_255ECB7A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDB8288], MEMORY[0x24BDB8280], MEMORY[0x24BDB7C28]);
    v4 = v3;
    sub_231413B7C();
    v7[2] = v2;
    v7[3] = MEMORY[0x24BDF3E18];
    v7[0] = v4;
    v7[1] = swift_getOpaqueTypeConformance2();
    v5 = MEMORY[0x2348DE200](a1, v7, MEMORY[0x24BDB7D68], 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_255ECB7A0);
  }
}

unint64_t sub_2312ED284()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[5];
  unint64_t v7;
  uint64_t OpaqueTypeConformance2;
  uint64_t v9;

  result = qword_255ECB7B0;
  if (!qword_255ECB7B0)
  {
    sub_2312ECF40();
    v2 = v1;
    v7 = sub_2312ED374();
    v3 = MEMORY[0x24BDB8280];
    sub_2312EE1E4(255, &qword_255ECB7A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDB8288], MEMORY[0x24BDB8280], MEMORY[0x24BDB7C28]);
    v5 = v4;
    sub_231413B7C();
    v6[3] = v3;
    v6[4] = MEMORY[0x24BDF3E18];
    v6[1] = v5;
    v6[2] = swift_getOpaqueTypeConformance2();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v9 = OpaqueTypeConformance2;
    v6[0] = &v7;
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB7B80], v2, v6);
    atomic_store(result, (unint64_t *)&qword_255ECB7B0);
  }
  return result;
}

unint64_t sub_2312ED374()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[5];

  result = qword_255ECB7B8;
  if (!qword_255ECB7B8)
  {
    sub_2312ECFB0();
    v2 = v1;
    v3 = MEMORY[0x24BDB8168];
    sub_2312EE1E4(255, &qword_255ECB788, (uint64_t (*)(uint64_t))MEMORY[0x24BDB8170], MEMORY[0x24BDB8168], MEMORY[0x24BDB7C28]);
    v5 = v4;
    sub_231413AF8();
    v6[3] = v3;
    v6[4] = MEMORY[0x24BDF3E18];
    v6[1] = v5;
    v6[2] = swift_getOpaqueTypeConformance2();
    v6[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB8490], v2, v6);
    atomic_store(result, (unint64_t *)&qword_255ECB7B8);
  }
  return result;
}

void sub_2312ED454(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  if (!qword_255ECB7C0)
  {
    sub_2312EDFDC(255, &qword_255ECB760, (uint64_t (*)(uint64_t))sub_2312ECF40, (uint64_t (*)(void))sub_2312ED284, MEMORY[0x24BDB8128]);
    v3 = v2;
    sub_2312ED508(255);
    v7[0] = v3;
    v7[1] = v4;
    v7[2] = sub_2312ED548();
    v7[3] = sub_2312ED5B0();
    v5 = MEMORY[0x2348DE200](a1, v7, MEMORY[0x24BDB83B0], 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_255ECB7C0);
  }
}

void sub_2312ED508(uint64_t a1)
{
  sub_2312EDFDC(a1, &qword_255ECB7C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], sub_2312ED52C, MEMORY[0x24BEE08B8]);
}

uint64_t sub_2312ED52C()
{
  return sub_2312CCC24(&qword_255ECB7D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
}

unint64_t sub_2312ED548()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ECB7D8;
  if (!qword_255ECB7D8)
  {
    sub_2312EDFDC(255, &qword_255ECB760, (uint64_t (*)(uint64_t))sub_2312ECF40, (uint64_t (*)(void))sub_2312ED284, MEMORY[0x24BDB8128]);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB8148], v1);
    atomic_store(result, (unint64_t *)&qword_255ECB7D8);
  }
  return result;
}

unint64_t sub_2312ED5B0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_255ECB7E0;
  if (!qword_255ECB7E0)
  {
    sub_2312ED508(255);
    v2 = MEMORY[0x24BDB7A98];
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB8498], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255ECB7E0);
  }
  return result;
}

void sub_2312ED608(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  if (!qword_255ECB7E8)
  {
    sub_2312ED454(255);
    v3 = v2;
    sub_2312EDFDC(255, &qword_255ECB760, (uint64_t (*)(uint64_t))sub_2312ECF40, (uint64_t (*)(void))sub_2312ED284, MEMORY[0x24BDB8128]);
    sub_2312ED508(255);
    sub_2312ED548();
    sub_2312ED5B0();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v7[0] = v3;
    v7[1] = MEMORY[0x24BDB7DC8];
    v7[2] = OpaqueTypeConformance2;
    v7[3] = MEMORY[0x24BDB7DB8];
    v5 = MEMORY[0x2348DE200](a1, v7, MEMORY[0x24BDB8360], 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_255ECB7E8);
  }
}

void sub_2312ED6FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!qword_255ECB7F0)
  {
    sub_2312ED608(255);
    v3 = v2;
    sub_2312EE6B4(255, &qword_255ECB7F8, MEMORY[0x24BEE13F0], MEMORY[0x24BEE08B8]);
    v5 = v4;
    sub_2312ED454(255);
    sub_2312EDFDC(255, &qword_255ECB760, (uint64_t (*)(uint64_t))sub_2312ECF40, (uint64_t (*)(void))sub_2312ED284, MEMORY[0x24BDB8128]);
    sub_2312ED508(255);
    sub_2312ED548();
    sub_2312ED5B0();
    swift_getOpaqueTypeConformance2();
    v8[0] = v3;
    v8[1] = v5;
    v8[2] = swift_getOpaqueTypeConformance2();
    v8[3] = sub_2312ED84C();
    v6 = MEMORY[0x2348DE200](a1, v8, MEMORY[0x24BDB83E0], 0);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_255ECB7F0);
  }
}

unint64_t sub_2312ED84C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_255ECB800;
  if (!qword_255ECB800)
  {
    sub_2312EE6B4(255, &qword_255ECB7F8, MEMORY[0x24BEE13F0], MEMORY[0x24BEE08B8]);
    v2 = MEMORY[0x24BDB84C8];
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB8498], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255ECB800);
  }
  return result;
}

void sub_2312ED8BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!qword_255ECB808)
  {
    sub_2312ED6FC(255);
    v3 = v2;
    sub_2312ED608(255);
    sub_2312EE6B4(255, &qword_255ECB7F8, MEMORY[0x24BEE13F0], MEMORY[0x24BEE08B8]);
    sub_2312ED454(255);
    sub_2312EDFDC(255, &qword_255ECB760, (uint64_t (*)(uint64_t))sub_2312ECF40, (uint64_t (*)(void))sub_2312ED284, MEMORY[0x24BDB8128]);
    sub_2312ED508(255);
    sub_2312ED548();
    sub_2312ED5B0();
    swift_getOpaqueTypeConformance2();
    v4 = MEMORY[0x24BDB7DC8];
    v5 = MEMORY[0x24BDB7DB8];
    swift_getOpaqueTypeConformance2();
    sub_2312ED84C();
    v8[0] = v3;
    v8[1] = v4;
    v8[2] = swift_getOpaqueTypeConformance2();
    v8[3] = v5;
    v6 = MEMORY[0x2348DE200](a1, v8, MEMORY[0x24BDB8380], 0);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_255ECB808);
  }
}

void sub_2312EDA34()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255ECB818)
  {
    sub_231411608();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255ECB818);
  }
}

void sub_2312EDA98()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECB828)
  {
    sub_231413978();
    sub_231413B40();
    v0 = sub_231413984();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECB828);
  }
}

unint64_t sub_2312EDB08()
{
  unint64_t result;
  uint64_t v1;
  _QWORD *v2;
  _QWORD v3[2];

  result = qword_255ECB830;
  if (!qword_255ECB830)
  {
    sub_2312EDA98();
    v3[0] = MEMORY[0x24BDB7B30];
    v3[1] = MEMORY[0x24BDB8208];
    v2 = v3;
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB7B88], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255ECB830);
  }
  return result;
}

unint64_t sub_2312EDB70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ECB838;
  if (!qword_255ECB838)
  {
    sub_2312EDFDC(255, &qword_255ECB820, (uint64_t (*)(uint64_t))sub_2312EDA98, (uint64_t (*)(void))sub_2312EDB08, MEMORY[0x24BDB82E0]);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB82F0], v1);
    atomic_store(result, (unint64_t *)&qword_255ECB838);
  }
  return result;
}

uint64_t sub_2312EDBD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2312EBDFC(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_2312EDBE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2312EE47C(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_2312EDBEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2312EE47C(*(_QWORD *)(v1 + 16) + 16, a1);
}

void sub_2312EDC04()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECB840)
  {
    sub_2312EE4B8(255, &qword_255ECB810, (uint64_t (*)(uint64_t))sub_2312ED8BC, MEMORY[0x24BDEBEF8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    sub_2312D6DD8(255, &qword_255ECB848, (uint64_t (*)(uint64_t))MEMORY[0x24BDED130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
    v0 = sub_231414074();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECB840);
  }
}

uint64_t sub_2312EDCA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312EE4B8(0, &qword_255ECB810, (uint64_t (*)(uint64_t))sub_2312ED8BC, MEMORY[0x24BDEBEF8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2312EDD04(uint64_t a1)
{
  uint64_t v2;

  sub_2312EE4B8(0, &qword_255ECB810, (uint64_t (*)(uint64_t))sub_2312ED8BC, MEMORY[0x24BDEBEF8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2312EDD60(uint64_t a1)
{
  uint64_t v2;

  sub_2312ED508(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2312EDD9C(uint64_t a1)
{
  destroy for AFibBurdenPDFChartVerticalAxisProvider.AxisResult(a1);
  return a1;
}

void sub_2312EDDD0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECB858)
  {
    sub_2312EDE60(255);
    sub_2312EE1E4(255, (unint64_t *)&qword_255ECB890, (uint64_t (*)(uint64_t))MEMORY[0x24BDB7B38], MEMORY[0x24BDB7B30], MEMORY[0x24BDB81B8]);
    v0 = sub_231413984();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECB858);
  }
}

void sub_2312EDE60(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v6[4];

  if (!qword_255ECB860)
  {
    sub_2312EDF34(255);
    v3 = v2;
    sub_2312EDFDC(255, (unint64_t *)&qword_255ECB870, (uint64_t (*)(uint64_t))sub_2312EE04C, (uint64_t (*)(void))sub_2312EE0FC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB7E28]);
    v6[2] = sub_2312EE17C();
    v6[3] = MEMORY[0x24BDF3E18];
    v6[0] = v3;
    v6[1] = swift_getOpaqueTypeConformance2();
    v4 = MEMORY[0x2348DE200](a1, v6, MEMORY[0x24BDB81C8], 0);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_255ECB860);
  }
}

void sub_2312EDF34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  if (!qword_255ECB868)
  {
    sub_2312EDFDC(255, (unint64_t *)&qword_255ECB870, (uint64_t (*)(uint64_t))sub_2312EE04C, (uint64_t (*)(void))sub_2312EE0FC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB7E28]);
    v3 = v2;
    v4 = sub_2312EE17C();
    v7[0] = v3;
    v7[1] = MEMORY[0x24BDF3E48];
    v7[2] = v4;
    v7[3] = MEMORY[0x24BDF3E18];
    v5 = MEMORY[0x2348DE200](a1, v7, MEMORY[0x24BDB81B8], 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_255ECB868);
  }
}

void sub_2312EDFDC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*a2)
  {
    v9 = a3(255);
    v10 = a4();
    v11 = a5(a1, v9, v10);
    if (!v12)
      atomic_store(v11, a2);
  }
}

void sub_2312EE04C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECB878)
  {
    sub_2312EE0A8();
    v0 = sub_231414074();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECB878);
  }
}

void sub_2312EE0A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECB0F8)
  {
    v0 = sub_231414260();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECB0F8);
  }
}

unint64_t sub_2312EE0FC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_255ECB880;
  if (!qword_255ECB880)
  {
    sub_2312EE04C();
    v2 = v1;
    v3 = sub_2312CCC24((unint64_t *)&qword_255ECB138, (uint64_t (*)(uint64_t))sub_2312EE0A8, MEMORY[0x24BDF1028]);
    v4[0] = MEMORY[0x24BDF1F80];
    v4[1] = v3;
    result = MEMORY[0x2348DE248](MEMORY[0x24BDED308], v2, v4);
    atomic_store(result, (unint64_t *)&qword_255ECB880);
  }
  return result;
}

unint64_t sub_2312EE17C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ECB888;
  if (!qword_255ECB888)
  {
    sub_2312EDFDC(255, (unint64_t *)&qword_255ECB870, (uint64_t (*)(uint64_t))sub_2312EE04C, (uint64_t (*)(void))sub_2312EE0FC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB7E28]);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB7E40], v1);
    atomic_store(result, (unint64_t *)&qword_255ECB888);
  }
  return result;
}

void sub_2312EE1E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD v11[4];

  if (!*a2)
  {
    v11[0] = a3(255);
    v11[1] = MEMORY[0x24BDF3E48];
    v11[2] = a4;
    v11[3] = MEMORY[0x24BDF3E18];
    v9 = MEMORY[0x2348DE200](a1, v11, a5, 0);
    if (!v10)
      atomic_store(v9, a2);
  }
}

unint64_t sub_2312EE268()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[5];
  _QWORD v6[2];

  result = qword_255ECB898;
  if (!qword_255ECB898)
  {
    sub_2312EDDD0();
    v2 = v1;
    sub_2312EDF34(255);
    sub_2312EDFDC(255, (unint64_t *)&qword_255ECB870, (uint64_t (*)(uint64_t))sub_2312EE04C, (uint64_t (*)(void))sub_2312EE0FC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB7E28]);
    sub_2312EE17C();
    v3 = MEMORY[0x24BDF3E48];
    v4 = MEMORY[0x24BDF3E18];
    swift_getOpaqueTypeConformance2();
    v6[0] = swift_getOpaqueTypeConformance2();
    v5[1] = sub_231413978();
    v5[2] = v3;
    v5[3] = MEMORY[0x24BDB7B30];
    v5[4] = v4;
    v6[1] = swift_getOpaqueTypeConformance2();
    v5[0] = v6;
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB7B88], v2, v5);
    atomic_store(result, (unint64_t *)&qword_255ECB898);
  }
  return result;
}

unint64_t sub_2312EE38C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ECB8A0;
  if (!qword_255ECB8A0)
  {
    sub_2312EDFDC(255, &qword_255ECB850, (uint64_t (*)(uint64_t))sub_2312EDDD0, (uint64_t (*)(void))sub_2312EE268, MEMORY[0x24BDB82E0]);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB82F0], v1);
    atomic_store(result, (unint64_t *)&qword_255ECB8A0);
  }
  return result;
}

unint64_t sub_2312EE3F4()
{
  unint64_t result;

  result = qword_255ECB8A8;
  if (!qword_255ECB8A8)
  {
    result = MEMORY[0x2348DE248](MEMORY[0x24BEE13D0], MEMORY[0x24BEE13C8]);
    atomic_store(result, (unint64_t *)&qword_255ECB8A8);
  }
  return result;
}

uint64_t sub_2312EE438()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2312EE46C@<X0>(void (*a1)(char *, char *, uint64_t)@<X0>, char *a2@<X8>)
{
  uint64_t v2;

  return sub_2313E51A4(a1, *(_QWORD *)(v2 + 16), *(unsigned __int8 *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), a2);
}

uint64_t sub_2312EE47C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BDB7DC8] - 8) + 16))(a2, a1);
  return a2;
}

void sub_2312EE4B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    v9 = a3(255);
    v10 = a5(a1, v9, a4);
    if (!v11)
      atomic_store(v10, a2);
  }
}

uint64_t sub_2312EE518(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AFibBurdenPDFChartViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2312EE55C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for AFibBurdenPDFChartViewModel();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_231411248();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_2312EE5FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2312EE640@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AFibBurdenPDFChartViewModel() - 8) + 80);
  return sub_2312EC6CC(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_2312EE68C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

void sub_2312EE6B4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = a4(0, MEMORY[0x24BEE13C8]);
    if (!v6)
      atomic_store(v5, a2);
  }
}

unint64_t sub_2312EE700()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255ECB8D0;
  if (!qword_255ECB8D0)
  {
    sub_2312EDC04();
    v2 = v1;
    v3[0] = sub_2312EE768();
    v3[1] = sub_2312EE918();
    result = MEMORY[0x2348DE248](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_255ECB8D0);
  }
  return result;
}

unint64_t sub_2312EE768()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[6];

  result = qword_255ECB8D8;
  if (!qword_255ECB8D8)
  {
    sub_2312EE4B8(255, &qword_255ECB810, (uint64_t (*)(uint64_t))sub_2312ED8BC, MEMORY[0x24BDEBEF8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    v2 = v1;
    sub_2312ED6FC(255);
    v4 = v3;
    sub_2312ED608(255);
    sub_2312EE6B4(255, &qword_255ECB7F8, MEMORY[0x24BEE13F0], MEMORY[0x24BEE08B8]);
    sub_2312ED454(255);
    sub_2312EDFDC(255, &qword_255ECB760, (uint64_t (*)(uint64_t))sub_2312ECF40, (uint64_t (*)(void))sub_2312ED284, MEMORY[0x24BDB8128]);
    sub_2312ED508(255);
    sub_2312ED548();
    sub_2312ED5B0();
    swift_getOpaqueTypeConformance2();
    v5 = MEMORY[0x24BDB7DC8];
    v6 = MEMORY[0x24BDB7DB8];
    swift_getOpaqueTypeConformance2();
    sub_2312ED84C();
    v7[2] = v4;
    v7[3] = v5;
    v7[4] = swift_getOpaqueTypeConformance2();
    v7[5] = v6;
    v7[0] = swift_getOpaqueTypeConformance2();
    v7[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x2348DE248](MEMORY[0x24BDED308], v2, v7);
    atomic_store(result, (unint64_t *)&qword_255ECB8D8);
  }
  return result;
}

unint64_t sub_2312EE918()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ECB8E0;
  if (!qword_255ECB8E0)
  {
    sub_2312D6DD8(255, &qword_255ECB848, (uint64_t (*)(uint64_t))MEMORY[0x24BDED130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDF1028], v1);
    atomic_store(result, (unint64_t *)&qword_255ECB8E0);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for LowHeartRateNotificationsHealthChecklistConfigurationProvider(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_231412A90();
  return a1;
}

_QWORD *assignWithCopy for LowHeartRateNotificationsHealthChecklistConfigurationProvider(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_231412A90();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for LowHeartRateNotificationsHealthChecklistConfigurationProvider(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LowHeartRateNotificationsHealthChecklistConfigurationProvider(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LowHeartRateNotificationsHealthChecklistConfigurationProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LowHeartRateNotificationsHealthChecklistConfigurationProvider()
{
  return &type metadata for LowHeartRateNotificationsHealthChecklistConfigurationProvider;
}

unint64_t sub_2312EEAAC()
{
  unint64_t result;

  result = qword_25415C198;
  if (!qword_25415C198)
  {
    result = MEMORY[0x2348DE248](&unk_2314189D8, &type metadata for LowHeartRateNotificationsHealthChecklistConfigurationProvider);
    atomic_store(result, (unint64_t *)&qword_25415C198);
  }
  return result;
}

uint64_t sub_2312EEAF0()
{
  return sub_2312CCC24(&qword_25415C178, (uint64_t (*)(uint64_t))type metadata accessor for LowHeartRateNotificationsFeatureStatusActionHandler, (uint64_t)&unk_23141D434);
}

uint64_t sub_2312EEB1C()
{
  return sub_2312CCC24(&qword_255ECB8E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE41620], MEMORY[0x24BE41618]);
}

uint64_t sub_2312EEB48(char a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if ((a1 & 1) != 0)
  {
    objc_msgSend((id)objc_opt_self(), sel_bradycardiaThresholdHeartRate);
    v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3C40]), sel_init);
    sub_2312D3C68(0, (unint64_t *)&qword_255ECFBD0);
    v2 = (void *)sub_231414BF0();
    v3 = sub_2313F699C(v2, (uint64_t)v1);
    v5 = v4;

    if (qword_25415E610 != -1)
      swift_once();
    sub_231411374();
    sub_2312D6DD8(0, (unint64_t *)&qword_25415DF58, (uint64_t (*)(uint64_t))sub_2312D6E30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_231416A30;
    *(_QWORD *)(v6 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v6 + 64) = sub_2312D6E84();
    *(_QWORD *)(v6 + 32) = v3;
    *(_QWORD *)(v6 + 40) = v5;
    v7 = sub_231414698();
    v9 = v8;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_231411374();
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_231416A30;
    v11 = *MEMORY[0x24BE4C030];
    v12 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v10 + 56) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v10 + 64) = v12;
    *(_QWORD *)(v10 + 32) = v11;
    v13 = sub_231414698();
    v15 = v14;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_231418090;
    *(_QWORD *)(v16 + 32) = v7;
    *(_QWORD *)(v16 + 40) = v9;
    *(_QWORD *)(v16 + 48) = v13;
  }
  else
  {
    sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_231418090;
    if (qword_25415E610 != -1)
      swift_once();
    *(_QWORD *)(v16 + 32) = sub_231411374();
    *(_QWORD *)(v16 + 40) = v17;
    v18 = sub_231411374();
    v15 = v19;
    *(_QWORD *)(v16 + 48) = v18;
  }
  *(_QWORD *)(v16 + 56) = v15;
  return v16;
}

uint64_t sub_2312EEEC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, &qword_25415C118, (uint64_t (*)(uint64_t))MEMORY[0x24BE47FD0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v19 - v4;
  sub_2312D6DD8(0, &qword_25415C128, (uint64_t (*)(uint64_t))MEMORY[0x24BE413B0], v2);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v19 - v7;
  v9 = sub_231411D1C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25415E610 != -1)
    swift_once();
  v13 = (void *)qword_254163058;
  sub_231411374();
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BE41298], v9);
  v14 = v13;
  sub_231411D64();
  v15 = sub_231411D70();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v8, 0, 1, v15);
  sub_2312EEB48(1);
  sub_231411DD0();
  v16 = sub_231411B48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v5, 1, 1, v16);
  sub_231411ED8();
  v17 = sub_231411EF0();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a1, 0, 1, v17);
}

uint64_t sub_2312EF174@<X0>(uint64_t a1@<X8>)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v23 = a1;
  v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, &qword_25415C118, (uint64_t (*)(uint64_t))MEMORY[0x24BE47FD0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v22 - v3;
  sub_2312D6DD8(0, &qword_25415C128, (uint64_t (*)(uint64_t))MEMORY[0x24BE413B0], v1);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v22 - v6;
  v8 = sub_231411D1C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25415E610 != -1)
    swift_once();
  v12 = (void *)qword_254163058;
  v22 = sub_231411374();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BE412A0], v8);
  v13 = v12;
  sub_231411D64();
  v14 = sub_231411D70();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v7, 0, 1, v14);
  sub_231411DAC();
  sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_231418090;
  *(_QWORD *)(v15 + 32) = sub_231411374();
  *(_QWORD *)(v15 + 40) = v16;
  *(_QWORD *)(v15 + 48) = sub_231411374();
  *(_QWORD *)(v15 + 56) = v17;
  sub_231411DD0();
  v18 = sub_231411B48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v4, 1, 1, v18);
  v19 = v23;
  sub_231411ED8();
  v20 = sub_231411EF0();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 0, 1, v20);
}

void sub_2312EF4E0(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  id v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  id v99;

  v98 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, &qword_25415C128, (uint64_t (*)(uint64_t))MEMORY[0x24BE413B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v97 = (char *)&v90 - v5;
  v6 = sub_231411CF8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6DD8(0, &qword_25415C0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], v3);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v96 = (uint64_t)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v90 - v13;
  v15 = sub_231411D1C();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v95 = (char *)&v90 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v90 - v19;
  v99 = objc_msgSend(a1, sel_highestPriorityUnsatisfiedRequirement);
  if (!v99)
  {
    __break(1u);
    goto LABEL_40;
  }
  v21 = sub_2314146BC();
  v23 = v22;
  if (v21 == sub_2314146BC() && v23 == v24)
  {
    swift_bridgeObjectRelease_n();
LABEL_6:
    v26 = sub_231411EF0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v98, 1, 1, v26);

    return;
  }
  v25 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v25 & 1) != 0)
    goto LABEL_6;
  v27 = sub_2314146BC();
  v29 = v28;
  if (v27 == sub_2314146BC() && v29 == v30)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_11;
  }
  v31 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v31 & 1) == 0)
  {
    v48 = sub_2314146BC();
    v50 = v49;
    if (v48 == sub_2314146BC() && v50 == v51)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_20;
    }
    v52 = sub_231415070();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v52 & 1) != 0)
    {
LABEL_20:

      if (qword_25415E610 == -1)
        goto LABEL_12;
      goto LABEL_42;
    }
    v53 = sub_2314146BC();
    v55 = v54;
    if (v53 == sub_2314146BC() && v55 == v56)
    {
      swift_bridgeObjectRelease_n();
LABEL_26:

      v99 = (id)sub_231411DF4();
      v59 = v58;
      if (qword_25415E610 != -1)
        swift_once();
      v94 = sub_231411374();
      sub_2312D6DD8(0, (unint64_t *)&qword_25415DF58, (uint64_t (*)(uint64_t))sub_2312D6E30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v60 = swift_allocObject();
      v92 = xmmword_231416A30;
      *(_OWORD *)(v60 + 16) = xmmword_231416A30;
      *(_QWORD *)(v60 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v60 + 64) = sub_2312D6E84();
      *(_QWORD *)(v60 + 32) = v99;
      *(_QWORD *)(v60 + 40) = v59;
      v93 = v59;
      sub_231412A90();
      v94 = sub_231414698();
      v62 = v61;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v20, *MEMORY[0x24BE41288], v15);
      sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
      v63 = swift_allocObject();
      *(_OWORD *)(v63 + 16) = v92;
      *(_QWORD *)(v63 + 32) = v94;
      *(_QWORD *)(v63 + 40) = v62;
      *(_QWORD *)&v92 = v62;
      sub_231412A90();
      v64 = sub_231411DDC();
      v90 = v65;
      v91 = v64;
      (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BE411F8], v6);
      sub_231411CE0();
      v66 = v6;
      v32 = qword_254162FF0 + 16;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v66);
      goto LABEL_13;
    }
    v57 = sub_231415070();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v57 & 1) != 0)
      goto LABEL_26;
    v67 = sub_2314146BC();
    v69 = v68;
    if (v67 == sub_2314146BC() && v69 == v70)
    {

      swift_bridgeObjectRelease_n();
LABEL_33:
      v99 = (id)sub_231411E00();
      v73 = v72;
      if (qword_25415E610 != -1)
        swift_once();
      v94 = sub_231411374();
      sub_2312D6DD8(0, (unint64_t *)&qword_25415DF58, (uint64_t (*)(uint64_t))sub_2312D6E30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v74 = swift_allocObject();
      v92 = xmmword_231416A30;
      *(_OWORD *)(v74 + 16) = xmmword_231416A30;
      *(_QWORD *)(v74 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v74 + 64) = sub_2312D6E84();
      *(_QWORD *)(v74 + 32) = v99;
      *(_QWORD *)(v74 + 40) = v73;
      v93 = v73;
      sub_231412A90();
      v94 = sub_231414698();
      v76 = v75;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v20, *MEMORY[0x24BE41288], v15);
      sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
      v77 = swift_allocObject();
      *(_OWORD *)(v77 + 16) = v92;
      *(_QWORD *)(v77 + 32) = v94;
      *(_QWORD *)(v77 + 40) = v76;
      *(_QWORD *)&v92 = v76;
      sub_231412A90();
      v78 = sub_231411DDC();
      v90 = v79;
      v91 = v78;
      (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BE41200], v6);
      sub_231411CE0();
      v80 = v6;
      v32 = qword_254162FF0 + 16;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v80);
      goto LABEL_13;
    }
    v71 = sub_231415070();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v71 & 1) != 0)
      goto LABEL_33;
    if ((sub_231411DB8() & 1) != 0)
    {
      if (qword_25415E610 == -1)
        goto LABEL_41;
    }
    else if (qword_25415E610 == -1)
    {
LABEL_41:
      v81 = sub_231411374();
      v83 = v82;
      (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v20, *MEMORY[0x24BE41280], v15);
      sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
      v84 = swift_allocObject();
      *(_OWORD *)(v84 + 16) = xmmword_231416A30;
      *(_QWORD *)(v84 + 32) = v81;
      *(_QWORD *)(v84 + 40) = v83;
      sub_231412A90();
      v85 = sub_231411DC4();
      v90 = v86;
      v91 = v85;
      v94 = MEMORY[0x2348DA7C8](v81, v83);
      *(_QWORD *)&v92 = v87;
      swift_bridgeObjectRelease();
      v99 = (id)sub_231411DC4();
      v93 = v88;
      v89 = objc_msgSend((id)objc_opt_self(), sel_bradycardiaLearnMoreLink);
      sub_2314146BC();

      sub_2314114A0();
      swift_bridgeObjectRelease();
      v32 = qword_254162FF0 + 16;
      goto LABEL_13;
    }
LABEL_40:
    swift_once();
    goto LABEL_41;
  }
LABEL_11:

  if (qword_25415E610 != -1)
LABEL_42:
    swift_once();
LABEL_12:
  v32 = &qword_254162FF0[2];
  v33 = sub_231411374();
  v35 = v34;
  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v20, *MEMORY[0x24BE41280], v15);
  sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_231416A30;
  *(_QWORD *)(v36 + 32) = v33;
  *(_QWORD *)(v36 + 40) = v35;
  sub_231412A90();
  v37 = sub_231411DC4();
  v90 = v38;
  v91 = v37;
  v94 = MEMORY[0x2348DA7C8](v33, v35);
  *(_QWORD *)&v92 = v39;
  swift_bridgeObjectRelease();
  v99 = (id)sub_231411DC4();
  v93 = v40;
  v41 = objc_msgSend((id)objc_opt_self(), sel_bradycardiaLearnMoreLink);
  sub_2314146BC();

  sub_2314114A0();
  swift_bridgeObjectRelease();
LABEL_13:
  if (qword_25415E610 != -1)
    swift_once();
  v42 = (void *)v32[11];
  sub_231411374();
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v95, v20, v15);
  v43 = v42;
  v44 = v97;
  sub_231411D64();
  v45 = sub_231411D70();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v44, 0, 1, v45);
  sub_2312F05B8((uint64_t)v14, v96);
  v46 = v98;
  sub_231411ECC();
  sub_2312F0614((uint64_t)v14);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v15);
  v47 = sub_231411EF0();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v46, 0, 1, v47);
}

uint64_t sub_2312F02D0@<X0>(uint64_t a1@<X8>)
{
  return sub_2312EF174(a1);
}

void sub_2312F02D8(void *a1@<X1>, uint64_t a2@<X8>)
{
  sub_2312EF4E0(a1, a2);
}

uint64_t sub_2312F02E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BE415E0];
  v3 = sub_231411E18();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_2312F0324()
{
  sub_2312F0668();
  return sub_2314120DC();
}

uint64_t sub_2312F0364()
{
  sub_2312F0668();
  return sub_2314120B8();
}

unint64_t sub_2312F03AC()
{
  unint64_t result;

  result = qword_25415BFB8;
  if (!qword_25415BFB8)
  {
    result = MEMORY[0x2348DE248](&unk_231418900, &type metadata for LowHeartRateNotificationsHealthChecklistConfigurationProvider);
    atomic_store(result, (unint64_t *)&qword_25415BFB8);
  }
  return result;
}

uint64_t sub_2312F03F4()
{
  sub_2312F03AC();
  return sub_231412118();
}

uint64_t sub_2312F042C()
{
  sub_2312F03AC();
  return sub_23141210C();
}

unint64_t sub_2312F046C()
{
  return 0xD000000000000019;
}

uint64_t sub_2312F0488()
{
  unint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2312D6CEC(0, (unint64_t *)&qword_25415BD40);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_231418140;
  sub_2312D3C68(0, (unint64_t *)&qword_25415DEC0);
  *(_QWORD *)(inited + 32) = MEMORY[0x2348DD378]((id)*MEMORY[0x24BDD2980]);
  sub_2312D3C68(0, (unint64_t *)&qword_25415DEC8);
  *(_QWORD *)(inited + 40) = MEMORY[0x2348DD384]((id)*MEMORY[0x24BDD35B8]);
  sub_2314147B8();
  if (inited >> 62)
  {
    sub_231412A90();
    v3 = sub_231414F08();
    swift_bridgeObjectRelease();
    if (v3)
      goto LABEL_3;
LABEL_5:
    v2 = MEMORY[0x24BEE4B08];
    goto LABEL_6;
  }
  if (!*(_QWORD *)((inited & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_5;
LABEL_3:
  sub_2312FC638(inited);
  v2 = v1;
LABEL_6:
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_2312F05B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312D6DD8(0, &qword_25415C0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2312F0614(uint64_t a1)
{
  uint64_t v2;

  sub_2312D6DD8(0, &qword_25415C0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2312F0668()
{
  unint64_t result;

  result = qword_25415C190;
  if (!qword_25415C190)
  {
    result = MEMORY[0x2348DE248](&unk_231418978, &type metadata for LowHeartRateNotificationsHealthChecklistConfigurationProvider);
    atomic_store(result, (unint64_t *)&qword_25415C190);
  }
  return result;
}

uint64_t type metadata accessor for BloodPressureManualDataEntryFieldCell(uint64_t a1)
{
  return sub_2312F19EC(a1, qword_255ECB908);
}

uint64_t sub_2312F06C4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2312F0724(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 24));
  sub_231412A90();
  return v2;
}

uint64_t sub_2312F0758()
{
  return 4;
}

uint64_t sub_2312F0760(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 32));
}

uint64_t sub_2312F076C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 28));
  sub_231412A90();
  return v2;
}

uint64_t sub_2312F07A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t);

  v2 = *(uint64_t (**)(uint64_t))(v1 + *(int *)(a1 + 36));
  if (v2)
    return v2(v1);
  else
    return 0;
}

id sub_2312F07E4()
{
  return objc_msgSend((id)objc_opt_self(), sel_systemGrayColor);
}

uint64_t sub_2312F0810(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + *(int *)(a3 + 40));
  if (v4)
    return v4(v3, result, a2);
  return result;
}

unint64_t sub_2312F0854()
{
  sub_231411614();
  sub_231414728();
  swift_bridgeObjectRelease();
  return 0xD000000000000026;
}

id sub_2312F08B4(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  uint64_t v10;
  void *v11;
  char *v12;
  id v13;
  void *v14;
  objc_super v16;

  swift_unknownObjectWeakInit();
  v9 = &v4[qword_255ECB900];
  type metadata accessor for BloodPressureNumericValidationImplementer();
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = 0;
  v11 = (void *)objc_opt_self();
  v12 = v4;
  *(_QWORD *)(v10 + 24) = objc_msgSend(v11, sel_millimeterOfMercuryUnit);
  *(_QWORD *)&v12[qword_255ECB8F8] = v10;

  v16.receiver = v12;
  v16.super_class = (Class)type metadata accessor for BloodPressureManualDataEntryFieldCell(0);
  v13 = objc_msgSendSuper2(&v16, sel_initWithFrame_, a1, a2, a3, a4);
  v14 = (void *)sub_231412E08();
  objc_msgSend(v14, sel_addTarget_action_forControlEvents_, v13, sel_textFieldDidChangeWithSender_, 0x20000);

  return v13;
}

id sub_2312F09E0(double a1, double a2, double a3, double a4)
{
  return sub_2312F08B4(a1, a2, a3, a4);
}

void sub_2312F0A00(char *a1, uint64_t a2, void *a3)
{
  char *v5;
  id v6;

  swift_unknownObjectWeakInit();
  v5 = &a1[qword_255ECB900];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v6 = a3;

  sub_231414EE4();
  __break(1u);
}

uint64_t sub_2312F0A90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(void);
  int v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  _BYTE v19[24];
  uint64_t v20;

  sub_2312D1E78(0, &qword_255ECBA50, (void (*)(uint64_t))type metadata accessor for BloodPressureManualDataEntryFieldItem);
  MEMORY[0x24BDAC7A8](v1);
  v3 = &v19[-v2 - 8];
  v4 = type metadata accessor for BloodPressureManualDataEntryFieldItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_231412E38();
  v8 = (void (*)(void))sub_231412E44();
  v8();
  sub_231412E14();
  if (!v20)
  {
    sub_2312F1A20((uint64_t)v19, (unint64_t *)&qword_255ECB1A8, (void (*)(uint64_t))sub_2312D1CE8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    return sub_2312F1A20((uint64_t)v3, &qword_255ECBA50, (void (*)(uint64_t))type metadata accessor for BloodPressureManualDataEntryFieldItem);
  }
  sub_2312D1CE8();
  v9 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v3, v9 ^ 1u, 1, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    return sub_2312F1A20((uint64_t)v3, &qword_255ECBA50, (void (*)(uint64_t))type metadata accessor for BloodPressureManualDataEntryFieldItem);
  sub_2312F1A5C((uint64_t)v3, (uint64_t)v7);
  v10 = &v7[*(int *)(v4 + 44)];
  v12 = *(_QWORD *)v10;
  v11 = *((_QWORD *)v10 + 1);
  v13 = (_QWORD *)(v0 + qword_255ECB900);
  swift_beginAccess();
  *v13 = v12;
  v13[1] = v11;
  sub_231412A90();
  swift_bridgeObjectRelease();
  v14 = v13[1];
  sub_231412A90();
  v15 = (void *)sub_231412E08();
  if (v14)
    v16 = (void *)sub_23141468C();
  else
    v16 = 0;
  objc_msgSend(v15, sel_setAccessibilityIdentifier_, v16);
  swift_bridgeObjectRelease();

  return sub_2312F1AA0((uint64_t)v7);
}

uint64_t sub_2312F0CAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _QWORD v17[5];

  v1 = v0;
  v2 = sub_231411F14();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v17[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D1E78(0, &qword_255ECBA50, (void (*)(uint64_t))type metadata accessor for BloodPressureManualDataEntryFieldItem);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v17[-1] - v7;
  sub_231412E14();
  if (!v17[3])
  {
    sub_2312F1A20((uint64_t)v17, (unint64_t *)&qword_255ECB1A8, (void (*)(uint64_t))sub_2312D1CE8);
    v15 = type metadata accessor for BloodPressureManualDataEntryFieldItem(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v8, 1, 1, v15);
    return sub_2312F1A20((uint64_t)v8, &qword_255ECBA50, (void (*)(uint64_t))type metadata accessor for BloodPressureManualDataEntryFieldItem);
  }
  sub_2312D1CE8();
  v9 = type metadata accessor for BloodPressureManualDataEntryFieldItem(0);
  v10 = swift_dynamicCast();
  v11 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, v10 ^ 1u, 1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v9) == 1)
    return sub_2312F1A20((uint64_t)v8, &qword_255ECBA50, (void (*)(uint64_t))type metadata accessor for BloodPressureManualDataEntryFieldItem);
  sub_2312F1A20((uint64_t)v8, &qword_255ECBA50, (void (*)(uint64_t))type metadata accessor for BloodPressureManualDataEntryFieldItem);
  sub_231412E20();
  if (v12)
  {
    v17[0] = *(_QWORD *)(v1 + qword_255ECB8F8);
    type metadata accessor for BloodPressureNumericValidationImplementer();
    sub_2312F23F0(qword_255ECBA58, v13, (uint64_t (*)(uint64_t))type metadata accessor for BloodPressureNumericValidationImplementer, (uint64_t)&unk_231418ABC);
    swift_retain();
    sub_231411E9C();
    swift_release();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t))(v3 + 88))(v5, v2) == *MEMORY[0x24BE41A28])
    {
      (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);

      sub_231412E2C();
      return swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_231412E2C();
}

uint64_t sub_2312F0F54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  _QWORD v21[5];

  v6 = sub_231411F14();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v21[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D1E78(0, &qword_255ECBA50, (void (*)(uint64_t))type metadata accessor for BloodPressureManualDataEntryFieldItem);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v21[-1] - v11;
  if (!a4)
    return 1;
  sub_231412E14();
  if (!v21[3])
  {
    sub_2312F1A20((uint64_t)v21, (unint64_t *)&qword_255ECB1A8, (void (*)(uint64_t))sub_2312D1CE8);
    v18 = type metadata accessor for BloodPressureManualDataEntryFieldItem(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v12, 1, 1, v18);
    goto LABEL_6;
  }
  sub_2312D1CE8();
  v13 = type metadata accessor for BloodPressureManualDataEntryFieldItem(0);
  v14 = swift_dynamicCast();
  v15 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, v14 ^ 1u, 1, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v13) == 1)
  {
LABEL_6:
    sub_2312F1A20((uint64_t)v12, &qword_255ECBA50, (void (*)(uint64_t))type metadata accessor for BloodPressureManualDataEntryFieldItem);
    return 1;
  }
  sub_2312F1A20((uint64_t)v12, &qword_255ECBA50, (void (*)(uint64_t))type metadata accessor for BloodPressureManualDataEntryFieldItem);
  v21[0] = *(_QWORD *)(v4 + qword_255ECB8F8);
  type metadata accessor for BloodPressureNumericValidationImplementer();
  sub_2312F23F0(qword_255ECBA58, v16, (uint64_t (*)(uint64_t))type metadata accessor for BloodPressureNumericValidationImplementer, (uint64_t)&unk_231418ABC);
  swift_retain();
  sub_231411E9C();
  swift_release();
  v17 = (*(unsigned int (**)(char *, uint64_t))(v7 + 88))(v9, v6) != *MEMORY[0x24BE41A18];
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v17;
}

uint64_t sub_2312F11A0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD v20[5];

  v2 = v1;
  v4 = sub_231411F14();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D1E78(0, &qword_255ECBA50, (void (*)(uint64_t))type metadata accessor for BloodPressureManualDataEntryFieldItem);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v20[-1] - v9;
  sub_231412E14();
  if (!v20[3])
  {
    sub_2312F1A20((uint64_t)v20, (unint64_t *)&qword_255ECB1A8, (void (*)(uint64_t))sub_2312D1CE8);
    v16 = type metadata accessor for BloodPressureManualDataEntryFieldItem(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v10, 1, 1, v16);
    return sub_2312F1A20((uint64_t)v10, &qword_255ECBA50, (void (*)(uint64_t))type metadata accessor for BloodPressureManualDataEntryFieldItem);
  }
  sub_2312D1CE8();
  v11 = type metadata accessor for BloodPressureManualDataEntryFieldItem(0);
  v12 = swift_dynamicCast();
  v13 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, v12 ^ 1u, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v11) == 1)
    return sub_2312F1A20((uint64_t)v10, &qword_255ECBA50, (void (*)(uint64_t))type metadata accessor for BloodPressureManualDataEntryFieldItem);
  sub_2312F1A20((uint64_t)v10, &qword_255ECBA50, (void (*)(uint64_t))type metadata accessor for BloodPressureManualDataEntryFieldItem);
  v14 = objc_msgSend(a1, sel_text);
  if (v14)
  {
    v15 = v14;
    sub_2314146BC();

  }
  v20[0] = *(_QWORD *)(v2 + qword_255ECB8F8);
  type metadata accessor for BloodPressureNumericValidationImplementer();
  sub_2312F23F0(qword_255ECBA58, v18, (uint64_t (*)(uint64_t))type metadata accessor for BloodPressureNumericValidationImplementer, (uint64_t)&unk_231418ABC);
  swift_retain();
  sub_231411E9C();
  swift_release();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t))(v5 + 88))(v7, v4) != *MEMORY[0x24BE41A28])
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);

  sub_231412E2C();
  return swift_bridgeObjectRelease();
}

void sub_2312F145C(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_2312F11A0(v4);

}

uint64_t sub_2312F14B0()
{
  swift_unknownObjectWeakDestroy();
  swift_release();
  return swift_bridgeObjectRelease();
}

id sub_2312F14F0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BloodPressureManualDataEntryFieldCell(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2312F1524()
{
  swift_unknownObjectWeakDestroy();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2312F1570()
{
  return type metadata accessor for BloodPressureManualDataEntryFieldCell(0);
}

uint64_t sub_2312F1578()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + qword_255ECB8F0;
  swift_beginAccess();
  return MEMORY[0x2348DE3BC](v1);
}

void sub_2312F15C0(void *a1)
{
  swift_beginAccess();
  swift_unknownObjectWeakAssign();

}

void (*sub_2312F1614(_QWORD *a1))(id **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = qword_255ECB8F0;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x2348DE3BC](v5);
  return sub_2312F1684;
}

void sub_2312F1684(id **a1, char a2)
{
  id *v3;
  id v4;

  v3 = *a1;
  v4 = (*a1)[3];
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();

  }
  free(v3);
}

uint64_t sub_2312F16EC()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(*v0 + qword_255ECB900);
  swift_beginAccess();
  v2 = *v1;
  sub_231412A90();
  return v2;
}

uint64_t sub_2312F1744(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v5;

  v5 = (_QWORD *)(*v2 + qword_255ECB900);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2312F17A4())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_2312F17F0(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = (void *)sub_231412E08();
  if (a2)
    v4 = sub_23141468C();
  else
    v4 = 0;
  v5 = (id)v4;
  objc_msgSend(v3, sel_setAccessibilityIdentifier_);

}

id sub_2312F1864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v13;

  v1 = v0;
  v2 = sub_231411674();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)(v1 + 16);
  if (v6)
  {
    v7 = *(id *)(v1 + 16);
  }
  else
  {
    v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16F0]), sel_init);
    sub_231411668();
    v9 = (void *)sub_231411650();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    objc_msgSend(v8, sel_setLocale_, v9);

    objc_msgSend(v8, sel_setNumberStyle_, 0);
    v10 = *(void **)(v1 + 16);
    *(_QWORD *)(v1 + 16) = v8;
    v7 = v8;

    v6 = 0;
  }
  v11 = v6;
  return v7;
}

uint64_t sub_2312F1964()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BloodPressureNumericValidationImplementer()
{
  return objc_opt_self();
}

id sub_2312F19B4()
{
  return sub_2312F1864();
}

uint64_t type metadata accessor for BloodPressureManualDataEntryFieldItem(uint64_t a1)
{
  return sub_2312F19EC(a1, qword_255ECBAB8);
}

uint64_t sub_2312F19EC(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2312F1A20(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  sub_2312D1E78(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_2312F1A5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BloodPressureManualDataEntryFieldItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2312F1AA0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for BloodPressureManualDataEntryFieldItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_2312F1ADC(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v29 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_231411644();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    sub_231412A90();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = (_QWORD *)((char *)v4 + v13);
    v16 = (_QWORD *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = (_QWORD *)((char *)v4 + v14);
    v19 = (_QWORD *)((char *)a2 + v14);
    v20 = *v19;
    v21 = v19[1];
    v22 = a3[8];
    v23 = a3[9];
    v24 = *((_BYTE *)a2 + v22);
    *v18 = v20;
    v18[1] = v21;
    *((_BYTE *)v4 + v22) = v24;
    v25 = (_QWORD *)((char *)v4 + v23);
    v26 = (char *)a2 + v23;
    v27 = *(_QWORD *)((char *)a2 + v23);
    sub_231412A90();
    sub_231412A90();
    if (v27)
    {
      v28 = *((_QWORD *)v26 + 1);
      *v25 = v27;
      v25[1] = v28;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v25 = *(_OWORD *)v26;
    }
    v30 = a3[10];
    v31 = (_QWORD *)((char *)v4 + v30);
    v32 = (_QWORD *)((char *)a2 + v30);
    if (*v32)
    {
      v33 = v32[1];
      *v31 = *v32;
      v31[1] = v33;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v31 = *(_OWORD *)v32;
    }
    v34 = a3[11];
    v35 = (_QWORD *)((char *)v4 + v34);
    v36 = (_QWORD *)((char *)a2 + v34);
    v37 = v36[1];
    *v35 = *v36;
    v35[1] = v37;
    sub_231412A90();
  }
  return v4;
}

uint64_t sub_2312F1C30(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_231411644();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[9]))
    swift_release();
  if (*(_QWORD *)(a1 + a2[10]))
    swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_2312F1CE0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_231411644();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  sub_231412A90();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v12);
  v15 = (_QWORD *)((char *)a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (_QWORD *)((char *)a1 + v13);
  v18 = (_QWORD *)((char *)a2 + v13);
  v19 = *v18;
  v20 = v18[1];
  v21 = a3[8];
  v22 = a3[9];
  v23 = *((_BYTE *)a2 + v21);
  *v17 = v19;
  v17[1] = v20;
  *((_BYTE *)a1 + v21) = v23;
  v24 = (_QWORD *)((char *)a1 + v22);
  v25 = (char *)a2 + v22;
  v26 = *(_QWORD *)((char *)a2 + v22);
  sub_231412A90();
  sub_231412A90();
  if (v26)
  {
    v27 = *((_QWORD *)v25 + 1);
    *v24 = v26;
    v24[1] = v27;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v24 = *(_OWORD *)v25;
  }
  v28 = a3[10];
  v29 = (_QWORD *)((char *)a1 + v28);
  v30 = (_QWORD *)((char *)a2 + v28);
  if (*v30)
  {
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v29 = *(_OWORD *)v30;
  }
  v32 = a3[11];
  v33 = (_QWORD *)((char *)a1 + v32);
  v34 = (_QWORD *)((char *)a2 + v32);
  v35 = v34[1];
  *v33 = *v34;
  v33[1] = v35;
  sub_231412A90();
  return a1;
}

_QWORD *sub_2312F1E08(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_231412A90();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_231411644();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  sub_231412A90();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  sub_231412A90();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v16 = a3[9];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (char *)a2 + v16;
  v19 = *(_QWORD *)((char *)a1 + v16);
  v20 = *(_QWORD *)((char *)a2 + v16);
  if (v19)
  {
    if (v20)
    {
      v21 = *((_QWORD *)v18 + 1);
      *v17 = v20;
      v17[1] = v21;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v20)
  {
    v22 = *((_QWORD *)v18 + 1);
    *v17 = v20;
    v17[1] = v22;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)v17 = *(_OWORD *)v18;
LABEL_8:
  v23 = a3[10];
  v24 = (_QWORD *)((char *)a1 + v23);
  v25 = (char *)a2 + v23;
  v26 = *(_QWORD *)((char *)a1 + v23);
  v27 = *(_QWORD *)((char *)a2 + v23);
  if (!v26)
  {
    if (v27)
    {
      v29 = *((_QWORD *)v25 + 1);
      *v24 = v27;
      v24[1] = v29;
      swift_retain();
      goto LABEL_15;
    }
LABEL_14:
    *(_OWORD *)v24 = *(_OWORD *)v25;
    goto LABEL_15;
  }
  if (!v27)
  {
    swift_release();
    goto LABEL_14;
  }
  v28 = *((_QWORD *)v25 + 1);
  *v24 = v27;
  v24[1] = v28;
  swift_retain();
  swift_release();
LABEL_15:
  v30 = a3[11];
  v31 = (_QWORD *)((char *)a1 + v30);
  v32 = (_QWORD *)((char *)a2 + v30);
  *v31 = *v32;
  v31[1] = v32[1];
  sub_231412A90();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_2312F1FD4(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_231411644();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  v11 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (uint64_t *)((char *)a2 + v11);
  v14 = *v13;
  if (*v13)
  {
    v15 = v13[1];
    *v12 = v14;
    v12[1] = v15;
  }
  else
  {
    *(_OWORD *)v12 = *(_OWORD *)v13;
  }
  v16 = a3[10];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (uint64_t *)((char *)a2 + v16);
  v19 = *v18;
  if (*v18)
  {
    v20 = v18[1];
    *v17 = v19;
    v17[1] = v20;
  }
  else
  {
    *(_OWORD *)v17 = *(_OWORD *)v18;
  }
  *(_OWORD *)((char *)a1 + a3[11]) = *(_OWORD *)((char *)a2 + a3[11]);
  return a1;
}

_QWORD *sub_2312F20B8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_231411644();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v21 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (char *)a2 + v21;
  v24 = *(_QWORD *)((char *)a2 + v21);
  if (*(_QWORD *)((char *)a1 + v21))
  {
    if (v24)
    {
      v25 = *((_QWORD *)v23 + 1);
      *v22 = v24;
      v22[1] = v25;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v24)
  {
    v26 = *((_QWORD *)v23 + 1);
    *v22 = v24;
    v22[1] = v26;
    goto LABEL_8;
  }
  *(_OWORD *)v22 = *(_OWORD *)v23;
LABEL_8:
  v27 = a3[10];
  v28 = (_QWORD *)((char *)a1 + v27);
  v29 = (char *)a2 + v27;
  v30 = *(_QWORD *)((char *)a1 + v27);
  v31 = *(_QWORD *)((char *)a2 + v27);
  if (!v30)
  {
    if (v31)
    {
      v33 = *((_QWORD *)v29 + 1);
      *v28 = v31;
      v28[1] = v33;
      goto LABEL_15;
    }
LABEL_14:
    *(_OWORD *)v28 = *(_OWORD *)v29;
    goto LABEL_15;
  }
  if (!v31)
  {
    swift_release();
    goto LABEL_14;
  }
  v32 = *((_QWORD *)v29 + 1);
  *v28 = v31;
  v28[1] = v32;
  swift_release();
LABEL_15:
  v34 = a3[11];
  v35 = (_QWORD *)((char *)a1 + v34);
  v36 = (_QWORD *)((char *)a2 + v34);
  v38 = *v36;
  v37 = v36[1];
  *v35 = v38;
  v35[1] = v37;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2312F2228()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2312F2234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_231411644();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_2312F22B0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2312F22BC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_231411644();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_2312F2330()
{
  uint64_t result;
  unint64_t v1;

  result = sub_231411644();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2312F23C0()
{
  return sub_2312F23F0(&qword_255ECBB08, 255, type metadata accessor for BloodPressureManualDataEntryFieldItem, (uint64_t)&unk_231418BE8);
}

uint64_t sub_2312F23F0(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x2348DE248](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2312F2430@<X0>(uint64_t a1@<X8>)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t ObjCClassFromMetadata;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[3];
  char *v26;
  char *v27;
  uint64_t v28;

  v28 = a1;
  v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, &qword_25415C0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v27 = (char *)v25 - v3;
  sub_2312D6DD8(0, &qword_25415C128, (uint64_t (*)(uint64_t))MEMORY[0x24BE413B0], v1);
  MEMORY[0x24BDAC7A8](v4);
  v26 = (char *)v25 - v5;
  v6 = sub_231411D1C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HeartHealthPluginDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v11 = (void *)objc_opt_self();
  v12 = objc_msgSend(v11, sel_bundleForClass_, ObjCClassFromMetadata);
  v25[0] = sub_231411374();
  v14 = v13;

  v15 = objc_msgSend(v11, sel_bundleForClass_, ObjCClassFromMetadata);
  v16 = sub_231411374();
  v25[1] = v17;
  v25[2] = v16;

  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BE41280], v6);
  if (qword_25415E610 != -1)
    swift_once();
  v18 = (id)qword_254163058;
  v19 = v26;
  sub_231411D64();
  v20 = sub_231411D70();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 0, 1, v20);
  sub_2312E42E4();
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_231416A30;
  v22 = v25[0];
  *(_QWORD *)(v21 + 32) = v25[0];
  *(_QWORD *)(v21 + 40) = v14;
  sub_231412A90();
  sub_231411DC4();
  MEMORY[0x2348DA7C8](v22, v14);
  swift_bridgeObjectRelease();
  sub_231411DC4();
  v23 = sub_2314114AC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v27, 1, 1, v23);
  return sub_231411ECC();
}

uint64_t sub_2312F27D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t ObjCClassFromMetadata;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[3];
  char *v26;
  char *v27;
  uint64_t v28;

  v28 = a1;
  v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, &qword_25415C0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v27 = (char *)v25 - v3;
  sub_2312D6DD8(0, &qword_25415C128, (uint64_t (*)(uint64_t))MEMORY[0x24BE413B0], v1);
  MEMORY[0x24BDAC7A8](v4);
  v26 = (char *)v25 - v5;
  v6 = sub_231411D1C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HeartHealthPluginDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v11 = (void *)objc_opt_self();
  v12 = objc_msgSend(v11, sel_bundleForClass_, ObjCClassFromMetadata);
  v25[0] = sub_231411374();
  v14 = v13;

  v15 = objc_msgSend(v11, sel_bundleForClass_, ObjCClassFromMetadata);
  v16 = sub_231411374();
  v25[1] = v17;
  v25[2] = v16;

  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BE41280], v6);
  if (qword_25415E610 != -1)
    swift_once();
  v18 = (id)qword_254163058;
  v19 = v26;
  sub_231411D64();
  v20 = sub_231411D70();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 0, 1, v20);
  sub_2312E42E4();
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_231416A30;
  v22 = v25[0];
  *(_QWORD *)(v21 + 32) = v25[0];
  *(_QWORD *)(v21 + 40) = v14;
  sub_231412A90();
  sub_231411DC4();
  MEMORY[0x2348DA7C8](v22, v14);
  swift_bridgeObjectRelease();
  sub_231411DC4();
  v23 = sub_2314114AC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v27, 1, 1, v23);
  return sub_231411ECC();
}

uint64_t sub_2312F2B78@<X0>(uint64_t a1@<X8>)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t ObjCClassFromMetadata;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[3];
  char *v26;
  char *v27;
  uint64_t v28;

  v28 = a1;
  v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, &qword_25415C0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v27 = (char *)v25 - v3;
  sub_2312D6DD8(0, &qword_25415C128, (uint64_t (*)(uint64_t))MEMORY[0x24BE413B0], v1);
  MEMORY[0x24BDAC7A8](v4);
  v26 = (char *)v25 - v5;
  v6 = sub_231411D1C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HeartHealthPluginDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v11 = (void *)objc_opt_self();
  v12 = objc_msgSend(v11, sel_bundleForClass_, ObjCClassFromMetadata);
  v25[0] = sub_231411374();
  v14 = v13;

  v15 = objc_msgSend(v11, sel_bundleForClass_, ObjCClassFromMetadata);
  v16 = sub_231411374();
  v25[1] = v17;
  v25[2] = v16;

  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BE41280], v6);
  if (qword_25415E610 != -1)
    swift_once();
  v18 = (id)qword_254163058;
  v19 = v26;
  sub_231411D64();
  v20 = sub_231411D70();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 0, 1, v20);
  sub_2312E42E4();
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_231416A30;
  v22 = v25[0];
  *(_QWORD *)(v21 + 32) = v25[0];
  *(_QWORD *)(v21 + 40) = v14;
  sub_231412A90();
  sub_231411DC4();
  MEMORY[0x2348DA7C8](v22, v14);
  swift_bridgeObjectRelease();
  sub_231411DC4();
  v23 = sub_2314114AC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v27, 1, 1, v23);
  return sub_231411ECC();
}

uint64_t sub_2312F2F1C@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjCClassFromMetadata;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;

  v31 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, &qword_25415C0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v30 = (char *)&v26 - v5;
  sub_2312D6DD8(0, &qword_25415C128, (uint64_t (*)(uint64_t))MEMORY[0x24BE413B0], v3);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v26 - v7;
  v9 = sub_231411D1C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v27 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(v11);
  type metadata accessor for HeartHealthPluginDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v14 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v15 = sub_231411374();
  v17 = v16;

  v18 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v19 = sub_231411374();
  v28 = v20;
  v29 = v19;

  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v27, *MEMORY[0x24BE41280], v9);
  if (qword_25415E610 != -1)
    swift_once();
  v21 = (id)qword_254163058;
  sub_231411D64();
  v22 = sub_231411D70();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v8, 0, 1, v22);
  sub_2312E42E4();
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_231416A30;
  *(_QWORD *)(v23 + 32) = v15;
  *(_QWORD *)(v23 + 40) = v17;
  sub_231412A90();
  sub_231411DC4();
  MEMORY[0x2348DA7C8](v15, v17);
  swift_bridgeObjectRelease();
  sub_231411DC4();
  v24 = sub_2314114AC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v30, 1, 1, v24);
  return sub_231411ECC();
}

uint64_t sub_2312F32F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t ObjCClassFromMetadata;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;

  v37 = a1;
  v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, &qword_25415C0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v36 = (char *)&v29 - v3;
  sub_2312D6DD8(0, &qword_25415C128, (uint64_t (*)(uint64_t))MEMORY[0x24BE413B0], v1);
  MEMORY[0x24BDAC7A8](v4);
  v35 = (char *)&v29 - v5;
  v6 = sub_231411D1C();
  v31 = *(_QWORD *)(v6 - 8);
  v32 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HeartHealthPluginDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v10 = (void *)objc_opt_self();
  v11 = objc_msgSend(v10, sel_bundleForClass_, ObjCClassFromMetadata);
  v12 = sub_231411374();
  v14 = v13;

  v15 = objc_msgSend(v10, (SEL)&selRef_hxui_addCancelButton + 1, ObjCClassFromMetadata);
  sub_231411374();

  sub_2312D6DD8(0, (unint64_t *)&qword_25415DF58, (uint64_t (*)(uint64_t))sub_2312D6E30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v16 = swift_allocObject();
  v29 = xmmword_231416A30;
  *(_OWORD *)(v16 + 16) = xmmword_231416A30;
  *(_QWORD *)(v16 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v16 + 64) = sub_2312D6E84();
  v33 = v14;
  v34 = v12;
  *(_QWORD *)(v16 + 32) = v12;
  *(_QWORD *)(v16 + 40) = v14;
  sub_231412A90();
  v17 = sub_231414698();
  v19 = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v20 = objc_msgSend(v10, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_231411374();
  v30 = v21;

  (*(void (**)(char *, _QWORD, uint64_t))(v31 + 104))(v8, *MEMORY[0x24BE41288], v32);
  if (qword_25415E610 != -1)
    swift_once();
  v22 = (id)qword_254163058;
  v23 = v35;
  sub_231411D64();
  v24 = sub_231411D70();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 0, 1, v24);
  sub_2312E42E4();
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = v29;
  *(_QWORD *)(v25 + 32) = v17;
  *(_QWORD *)(v25 + 40) = v19;
  sub_231412A90();
  v26 = objc_msgSend(v10, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_231411374();

  v27 = sub_2314114AC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v36, 1, 1, v27);
  return sub_231411ECC();
}

uint64_t sub_2312F37E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjCClassFromMetadata;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v27[2];
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;

  v35 = a1;
  v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, &qword_25415C0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v34 = (char *)v27 - v3;
  sub_2312D6DD8(0, &qword_25415C128, (uint64_t (*)(uint64_t))MEMORY[0x24BE413B0], v1);
  MEMORY[0x24BDAC7A8](v4);
  v31 = (char *)v27 - v5;
  v6 = sub_231411D1C();
  v29 = *(_QWORD *)(v6 - 8);
  v30 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_231411DF4();
  v11 = v10;
  type metadata accessor for HeartHealthPluginDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v13 = (void *)objc_opt_self();
  v14 = objc_msgSend(v13, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_231411374();

  sub_2312D6DD8(0, (unint64_t *)&qword_25415DF58, (uint64_t (*)(uint64_t))sub_2312D6E30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v15 = swift_allocObject();
  v28 = xmmword_231416A30;
  *(_OWORD *)(v15 + 16) = xmmword_231416A30;
  *(_QWORD *)(v15 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v15 + 64) = sub_2312D6E84();
  v32 = v11;
  v33 = v9;
  *(_QWORD *)(v15 + 32) = v9;
  *(_QWORD *)(v15 + 40) = v11;
  sub_231412A90();
  v16 = sub_231414698();
  v18 = v17;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v13, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_231411374();
  v27[1] = v20;

  (*(void (**)(char *, _QWORD, uint64_t))(v29 + 104))(v8, *MEMORY[0x24BE41288], v30);
  if (qword_25415E610 != -1)
    swift_once();
  v21 = (id)qword_254163058;
  v22 = v31;
  sub_231411D64();
  v23 = sub_231411D70();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 0, 1, v23);
  sub_2312E42E4();
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = v28;
  *(_QWORD *)(v24 + 32) = v16;
  *(_QWORD *)(v24 + 40) = v18;
  sub_231412A90();
  sub_231411DDC();
  v25 = sub_2314114AC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v34, 1, 1, v25);
  return sub_231411ECC();
}

uint64_t sub_2312F3C14@<X0>(uint64_t a1@<X8>)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t ObjCClassFromMetadata;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v33[6];
  char *v34;
  uint64_t v35;

  v35 = a1;
  v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, &qword_25415C118, (uint64_t (*)(uint64_t))MEMORY[0x24BE47FD0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v34 = (char *)v33 - v3;
  sub_2312D6DD8(0, &qword_25415C128, (uint64_t (*)(uint64_t))MEMORY[0x24BE413B0], v1);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v33 - v5;
  v7 = sub_231411D1C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HeartHealthPluginDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v12 = (void *)objc_opt_self();
  v13 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
  v14 = sub_231411374();
  v33[4] = v15;
  v33[5] = v14;

  v16 = *MEMORY[0x24BE412A0];
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 104);
  v33[3] = v10;
  v17(v10, v16, v7);
  if (qword_25415E610 != -1)
    swift_once();
  v18 = (id)qword_254163058;
  sub_231411D64();
  v19 = sub_231411D70();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v6, 0, 1, v19);
  v20 = sub_231411DA0();
  v33[1] = v21;
  v33[2] = v20;
  sub_2312E42E4();
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_231418090;
  v23 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
  v33[0] = v6;
  v24 = sub_231411374();
  v26 = v25;

  *(_QWORD *)(v22 + 32) = v24;
  *(_QWORD *)(v22 + 40) = v26;
  v27 = objc_msgSend(v12, (SEL)&selRef_hxui_addCancelButton + 1, ObjCClassFromMetadata);
  v28 = sub_231411374();
  v30 = v29;

  *(_QWORD *)(v22 + 48) = v28;
  *(_QWORD *)(v22 + 56) = v30;
  sub_231411DD0();
  v31 = sub_231411B48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v34, 1, 1, v31);
  return sub_231411ED8();
}

uint64_t sub_2312F3FF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t ObjCClassFromMetadata;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v33[6];
  char *v34;
  uint64_t v35;

  v35 = a1;
  v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, &qword_25415C118, (uint64_t (*)(uint64_t))MEMORY[0x24BE47FD0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v34 = (char *)v33 - v3;
  sub_2312D6DD8(0, &qword_25415C128, (uint64_t (*)(uint64_t))MEMORY[0x24BE413B0], v1);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v33 - v5;
  v7 = sub_231411D1C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HeartHealthPluginDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v12 = (void *)objc_opt_self();
  v13 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
  v14 = sub_231411374();
  v33[4] = v15;
  v33[5] = v14;

  v16 = *MEMORY[0x24BE412A0];
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 104);
  v33[3] = v10;
  v17(v10, v16, v7);
  if (qword_25415E610 != -1)
    swift_once();
  v18 = (id)qword_254163058;
  sub_231411D64();
  v19 = sub_231411D70();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v6, 0, 1, v19);
  v20 = sub_231411DAC();
  v33[1] = v21;
  v33[2] = v20;
  sub_2312E42E4();
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_231418090;
  v23 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
  v33[0] = v6;
  v24 = sub_231411374();
  v26 = v25;

  *(_QWORD *)(v22 + 32) = v24;
  *(_QWORD *)(v22 + 40) = v26;
  v27 = objc_msgSend(v12, (SEL)&selRef_hxui_addCancelButton + 1, ObjCClassFromMetadata);
  v28 = sub_231411374();
  v30 = v29;

  *(_QWORD *)(v22 + 48) = v28;
  *(_QWORD *)(v22 + 56) = v30;
  sub_231411DD0();
  v31 = sub_231411B48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v34, 1, 1, v31);
  return sub_231411ED8();
}

uint64_t sub_2312F43DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t ObjCClassFromMetadata;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v31[4];
  char *v32;
  uint64_t v33;

  v33 = a1;
  v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, &qword_25415C118, (uint64_t (*)(uint64_t))MEMORY[0x24BE47FD0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v32 = (char *)v31 - v3;
  sub_2312D6DD8(0, &qword_25415C128, (uint64_t (*)(uint64_t))MEMORY[0x24BE413B0], v1);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v31 - v5;
  v7 = sub_231411D1C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HeartHealthPluginDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v12 = (void *)objc_opt_self();
  v13 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
  v14 = sub_231411374();
  v31[2] = v15;
  v31[3] = v14;

  v16 = *MEMORY[0x24BE41298];
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 104);
  v31[1] = v10;
  v17(v10, v16, v7);
  if (qword_25415E610 != -1)
    swift_once();
  v18 = (id)qword_254163058;
  sub_231411D64();
  v19 = sub_231411D70();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v6, 0, 1, v19);
  sub_2312E42E4();
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_231418090;
  v21 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
  v31[0] = v6;
  v22 = sub_231411374();
  v24 = v23;

  *(_QWORD *)(v20 + 32) = v22;
  *(_QWORD *)(v20 + 40) = v24;
  v25 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
  v26 = sub_231411374();
  v28 = v27;

  *(_QWORD *)(v20 + 48) = v26;
  *(_QWORD *)(v20 + 56) = v28;
  sub_231411DD0();
  v29 = sub_231411B48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v32, 1, 1, v29);
  return sub_231411ED8();
}

uint64_t sub_2312F47B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t ObjCClassFromMetadata;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v28[4];
  char *v29;
  uint64_t v30;

  v30 = a1;
  v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, &qword_25415C118, (uint64_t (*)(uint64_t))MEMORY[0x24BE47FD0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v29 = (char *)v28 - v3;
  sub_2312D6DD8(0, &qword_25415C128, (uint64_t (*)(uint64_t))MEMORY[0x24BE413B0], v1);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v28 - v5;
  v7 = sub_231411D1C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HeartHealthPluginDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v12 = (void *)objc_opt_self();
  v13 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
  v14 = sub_231411374();
  v28[1] = v15;
  v28[2] = v14;

  v16 = *MEMORY[0x24BE412A0];
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 104);
  v28[3] = v10;
  v17(v10, v16, v7);
  if (qword_25415E610 != -1)
    swift_once();
  v18 = (id)qword_254163058;
  sub_231411D64();
  v19 = sub_231411D70();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v6, 0, 1, v19);
  if (qword_255ECAB08 != -1)
    swift_once();
  sub_231411374();
  sub_2312E42E4();
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_231418090;
  v21 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
  v22 = sub_231411374();
  v24 = v23;

  *(_QWORD *)(v20 + 32) = v22;
  *(_QWORD *)(v20 + 40) = v24;
  *(_QWORD *)(v20 + 48) = sub_231411374();
  *(_QWORD *)(v20 + 56) = v25;
  v26 = sub_231411B48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v29, 1, 1, v26);
  return sub_231411ED8();
}

uint64_t sub_2312F4BB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t ObjCClassFromMetadata;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v28[4];
  char *v29;
  uint64_t v30;

  v30 = a1;
  v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, &qword_25415C118, (uint64_t (*)(uint64_t))MEMORY[0x24BE47FD0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v29 = (char *)v28 - v3;
  sub_2312D6DD8(0, &qword_25415C128, (uint64_t (*)(uint64_t))MEMORY[0x24BE413B0], v1);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v28 - v5;
  v7 = sub_231411D1C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HeartHealthPluginDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v12 = (void *)objc_opt_self();
  v13 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
  v14 = sub_231411374();
  v28[1] = v15;
  v28[2] = v14;

  v16 = *MEMORY[0x24BE412A0];
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 104);
  v28[3] = v10;
  v17(v10, v16, v7);
  if (qword_25415E610 != -1)
    swift_once();
  v18 = (id)qword_254163058;
  sub_231411D64();
  v19 = sub_231411D70();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v6, 0, 1, v19);
  if (qword_255ECAB08 != -1)
    swift_once();
  sub_231411374();
  sub_2312E42E4();
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_231418090;
  v21 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
  v22 = sub_231411374();
  v24 = v23;

  *(_QWORD *)(v20 + 32) = v22;
  *(_QWORD *)(v20 + 40) = v24;
  *(_QWORD *)(v20 + 48) = sub_231411374();
  *(_QWORD *)(v20 + 56) = v25;
  v26 = sub_231411B48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v29, 1, 1, v26);
  return sub_231411ED8();
}

uint64_t sub_2312F4FB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t ObjCClassFromMetadata;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v28[4];
  char *v29;
  uint64_t v30;

  v30 = a1;
  v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, &qword_25415C118, (uint64_t (*)(uint64_t))MEMORY[0x24BE47FD0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v29 = (char *)v28 - v3;
  sub_2312D6DD8(0, &qword_25415C128, (uint64_t (*)(uint64_t))MEMORY[0x24BE413B0], v1);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v28 - v5;
  v7 = sub_231411D1C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HeartHealthPluginDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v12 = (void *)objc_opt_self();
  v13 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
  v14 = sub_231411374();
  v28[2] = v15;
  v28[3] = v14;

  v16 = *MEMORY[0x24BE41298];
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 104);
  v28[1] = v10;
  v17(v10, v16, v7);
  if (qword_25415E610 != -1)
    swift_once();
  v18 = (id)qword_254163058;
  sub_231411D64();
  v19 = sub_231411D70();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v6, 0, 1, v19);
  if (qword_255ECAB08 != -1)
    swift_once();
  sub_231411374();
  sub_2312E42E4();
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_231418090;
  v21 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
  v22 = sub_231411374();
  v24 = v23;

  *(_QWORD *)(v20 + 32) = v22;
  *(_QWORD *)(v20 + 40) = v24;
  *(_QWORD *)(v20 + 48) = sub_231411374();
  *(_QWORD *)(v20 + 56) = v25;
  v26 = sub_231411B48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v29, 1, 1, v26);
  return sub_231411ED8();
}

void sub_2312F53C8(void *a1@<X0>, uint64_t (*a2)(uint64_t)@<X2>, void (*a3)(uint64_t)@<X4>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  id v37;
  unsigned int v38;
  void *v39;
  unsigned __int8 v40;
  NSObject *v41;
  os_log_type_t v42;
  _BOOL4 v43;
  uint64_t v44;
  uint8_t *v45;
  uint64_t v46;
  const char *v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  NSObject *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  NSObject *v85;
  os_log_type_t v86;
  uint8_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  NSObject *v94;
  os_log_type_t v95;
  uint8_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  NSObject *v105;
  os_log_type_t v106;
  uint8_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  NSObject *v114;
  os_log_type_t v115;
  uint8_t *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  NSObject *v123;
  os_log_type_t v124;
  uint8_t *v125;
  uint64_t v126;
  id v127;
  void *v128;
  id v129;
  unsigned int v130;
  void *v131;
  unsigned __int8 v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char v137;
  NSObject *v138;
  os_log_type_t v139;
  uint8_t *v140;
  uint64_t v141;
  id v142;
  void *v143;
  id v144;
  unsigned int v145;
  void *v146;
  unsigned __int8 v147;
  uint64_t v148;
  NSObject *v149;
  uint64_t v150;
  id v151;
  void *v152;
  uint64_t v153;
  unint64_t v154;
  unint64_t v155;
  NSObject *v156;
  uint64_t v157;
  uint64_t v158;
  int v159;
  uint64_t v160;
  NSObject *v161;
  uint64_t v162;
  uint64_t v163;

  v8 = sub_231413780();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v158 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2(v10) & 1) == 0)
  {
    if (qword_25415DF98 != -1)
      swift_once();
    sub_2312CE3B8(v8, (uint64_t)qword_254162FF0);
    v25 = sub_231413768();
    v26 = sub_23141498C();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v163 = v28;
      *(_DWORD *)v27 = 136446210;
      v162 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v163);
      sub_231414CBC();
      _os_log_impl(&dword_2312C8000, v25, v26, "[%{public}s:FeatureStatusConfiguration] Cardio fitness not visible, hiding", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v28, -1, -1);
      MEMORY[0x2348DE308](v27, -1, -1);
    }

    v29 = sub_231411EF0();
    v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56);
    v31 = a4;
    goto LABEL_32;
  }
  v13 = objc_msgSend(a1, sel_highestPriorityUnsatisfiedRequirement);
  if (v13)
  {
    v14 = v13;
    v160 = a4;
    v15 = sub_2314146BC();
    v17 = v16;
    v161 = v14;
    if (v15 == sub_2314146BC() && v17 == v18)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v20 = sub_231415070();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v20 & 1) == 0)
      {
        v21 = sub_2314146BC();
        v23 = v22;
        if (v21 == sub_2314146BC() && v23 == v24)
        {
          swift_bridgeObjectRelease_n();
LABEL_36:
          v44 = v160;
          if (qword_25415DF98 != -1)
            swift_once();
          sub_2312CE3B8(v8, (uint64_t)qword_254162FF0);
          v41 = sub_231413768();
          v42 = sub_23141498C();
          if (!os_log_type_enabled(v41, v42))
            goto LABEL_31;
          v45 = (uint8_t *)swift_slowAlloc();
          v46 = swift_slowAlloc();
          v163 = v46;
          *(_DWORD *)v45 = 136446210;
          v162 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v163);
          sub_231414CBC();
          v47 = "[%{public}s:FeatureStatusConfiguration] Not background delivered, meaning we do not have a supported device yet";
LABEL_30:
          _os_log_impl(&dword_2312C8000, v41, v42, v47, v45, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2348DE308](v46, -1, -1);
          MEMORY[0x2348DE308](v45, -1, -1);
LABEL_31:

          v29 = sub_231411EF0();
          v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56);
          v31 = v44;
LABEL_32:
          v30(v31, 1, 1, v29);
          return;
        }
        v49 = sub_231415070();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v49 & 1) != 0)
          goto LABEL_36;
        v50 = sub_2314146BC();
        v52 = v51;
        if (v50 == sub_2314146BC() && v52 == v53)
        {
          swift_bridgeObjectRelease_n();
LABEL_44:
          v55 = v160;
          if (qword_25415DF98 != -1)
            swift_once();
          sub_2312CE3B8(v8, (uint64_t)qword_254162FF0);
          v56 = sub_231413768();
          v57 = sub_23141498C();
          if (os_log_type_enabled(v56, v57))
          {
            v58 = (uint8_t *)swift_slowAlloc();
            v59 = swift_slowAlloc();
            v163 = v59;
            *(_DWORD *)v58 = 136446210;
            v162 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v163);
            sub_231414CBC();
            _os_log_impl(&dword_2312C8000, v56, v57, "[%{public}s:FeatureStatusConfiguration] Heart rate app not installed, treating as unavailable", v58, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x2348DE308](v59, -1, -1);
            MEMORY[0x2348DE308](v58, -1, -1);
          }

          v60 = v161;
          sub_2312F2430(v55);
LABEL_49:

LABEL_50:
          v61 = sub_231411EF0();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v55, 0, 1, v61);
          return;
        }
        v54 = sub_231415070();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v54 & 1) != 0)
          goto LABEL_44;
        v62 = sub_2314146BC();
        v64 = v63;
        if (v62 == sub_2314146BC() && v64 == v65)
        {
          swift_bridgeObjectRelease_n();
LABEL_55:
          v55 = v160;
          if (qword_25415DF98 != -1)
            swift_once();
          sub_2312CE3B8(v8, (uint64_t)qword_254162FF0);
          v67 = sub_231413768();
          v68 = sub_23141498C();
          if (os_log_type_enabled(v67, v68))
          {
            v69 = (uint8_t *)swift_slowAlloc();
            v70 = swift_slowAlloc();
            v163 = v70;
            *(_DWORD *)v69 = 136446210;
            v162 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v163);
            sub_231414CBC();
            _os_log_impl(&dword_2312C8000, v67, v68, "[%{public}s:FeatureStatusConfiguration] Age gated, treating as unavailable", v69, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x2348DE308](v70, -1, -1);
            MEMORY[0x2348DE308](v69, -1, -1);
          }

          v60 = v161;
          sub_2312F27D4(v55);
          goto LABEL_49;
        }
        v66 = sub_231415070();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v66 & 1) != 0)
          goto LABEL_55;
        v71 = sub_2314146BC();
        v73 = v72;
        if (v71 == sub_2314146BC() && v73 == v74)
        {
          swift_bridgeObjectRelease_n();
LABEL_64:
          v55 = v160;
          if (qword_25415DF98 != -1)
            swift_once();
          sub_2312CE3B8(v8, (uint64_t)qword_254162FF0);
          v76 = sub_231413768();
          v77 = sub_23141498C();
          if (os_log_type_enabled(v76, v77))
          {
            v78 = (uint8_t *)swift_slowAlloc();
            v79 = swift_slowAlloc();
            v163 = v79;
            *(_DWORD *)v78 = 136446210;
            v162 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v163);
            sub_231414CBC();
            _os_log_impl(&dword_2312C8000, v76, v77, "[%{public}s:FeatureStatusConfiguration] Country not supported on local device, treating as unavailable", v78, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x2348DE308](v79, -1, -1);
            MEMORY[0x2348DE308](v78, -1, -1);
          }

          v60 = v161;
          sub_2312F2B78(v55);
          goto LABEL_49;
        }
        v75 = sub_231415070();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v75 & 1) != 0)
          goto LABEL_64;
        v80 = sub_2314146BC();
        v82 = v81;
        if (v80 == sub_2314146BC() && v82 == v83)
        {
          swift_bridgeObjectRelease_n();
LABEL_73:
          v55 = v160;
          if (qword_25415DF98 != -1)
            swift_once();
          sub_2312CE3B8(v8, (uint64_t)qword_254162FF0);
          v85 = sub_231413768();
          v86 = sub_23141498C();
          if (os_log_type_enabled(v85, v86))
          {
            v87 = (uint8_t *)swift_slowAlloc();
            v88 = swift_slowAlloc();
            v163 = v88;
            *(_DWORD *)v87 = 136446210;
            v162 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v163);
            sub_231414CBC();
            _os_log_impl(&dword_2312C8000, v85, v86, "[%{public}s:FeatureStatusConfiguration] Country not supported on active remote device, treating as unavailable", v87, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x2348DE308](v88, -1, -1);
            MEMORY[0x2348DE308](v87, -1, -1);
          }

          sub_2312F2B78(v55);
          goto LABEL_50;
        }
        v84 = sub_231415070();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v84 & 1) != 0)
          goto LABEL_73;
        v89 = sub_2314146BC();
        v91 = v90;
        if (v89 == sub_2314146BC() && v91 == v92)
        {
          swift_bridgeObjectRelease_n();
LABEL_82:
          if (qword_25415DF98 != -1)
            swift_once();
          sub_2312CE3B8(v8, (uint64_t)qword_254162FF0);
          v94 = sub_231413768();
          v95 = sub_23141498C();
          if (os_log_type_enabled(v94, v95))
          {
            v96 = (uint8_t *)swift_slowAlloc();
            v97 = swift_slowAlloc();
            v163 = v97;
            *(_DWORD *)v96 = 136446210;
            v162 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v163);
            sub_231414CBC();
            _os_log_impl(&dword_2312C8000, v94, v95, "[%{public}s:FeatureStatusConfiguration] Capability not supported on active watch, treating as unavailable", v96, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x2348DE308](v97, -1, -1);
            MEMORY[0x2348DE308](v96, -1, -1);
          }

          v98 = v160;
          sub_2312F2F1C(a3, v160);
          goto LABEL_87;
        }
        v93 = sub_231415070();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v93 & 1) != 0)
          goto LABEL_82;
        v100 = sub_2314146BC();
        v102 = v101;
        if (v100 == sub_2314146BC() && v102 == v103)
        {
          swift_bridgeObjectRelease_n();
LABEL_92:
          if (qword_25415DF98 != -1)
            swift_once();
          sub_2312CE3B8(v8, (uint64_t)qword_254162FF0);
          v105 = sub_231413768();
          v106 = sub_23141498C();
          if (os_log_type_enabled(v105, v106))
          {
            v107 = (uint8_t *)swift_slowAlloc();
            v108 = swift_slowAlloc();
            v163 = v108;
            *(_DWORD *)v107 = 136446210;
            v162 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v163);
            sub_231414CBC();
            _os_log_impl(&dword_2312C8000, v105, v106, "[%{public}s:FeatureStatusConfiguration] Age is not present, treating as unavailable", v107, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x2348DE308](v108, -1, -1);
            MEMORY[0x2348DE308](v107, -1, -1);
          }

          v98 = v160;
          sub_2312F32F8(v160);
          goto LABEL_87;
        }
        v104 = sub_231415070();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v104 & 1) != 0)
          goto LABEL_92;
        v109 = sub_2314146BC();
        v111 = v110;
        if (v109 == sub_2314146BC() && v111 == v112)
        {
          swift_bridgeObjectRelease_n();
LABEL_101:
          if (qword_25415DF98 != -1)
            swift_once();
          sub_2312CE3B8(v8, (uint64_t)qword_254162FF0);
          v114 = sub_231413768();
          v115 = sub_23141498C();
          if (os_log_type_enabled(v114, v115))
          {
            v116 = (uint8_t *)swift_slowAlloc();
            v117 = swift_slowAlloc();
            v163 = v117;
            *(_DWORD *)v116 = 136446210;
            v162 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v163);
            sub_231414CBC();
            _os_log_impl(&dword_2312C8000, v114, v115, "[%{public}s:FeatureStatusConfiguration] Heart rate is not enabled, treating as unavailable", v116, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x2348DE308](v117, -1, -1);
            MEMORY[0x2348DE308](v116, -1, -1);
          }

          v98 = v160;
          sub_2312F37E8(v160);
          goto LABEL_87;
        }
        v113 = sub_231415070();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v113 & 1) != 0)
          goto LABEL_101;
        v118 = sub_2314146BC();
        v120 = v119;
        if (v118 == sub_2314146BC() && v120 == v121)
        {
          swift_bridgeObjectRelease_n();
LABEL_110:
          if (qword_25415DF98 != -1)
            swift_once();
          sub_2312CE3B8(v8, (uint64_t)qword_254162FF0);
          v123 = sub_231413768();
          v124 = sub_23141498C();
          if (os_log_type_enabled(v123, v124))
          {
            v125 = (uint8_t *)swift_slowAlloc();
            v126 = swift_slowAlloc();
            v163 = v126;
            *(_DWORD *)v125 = 136446210;
            v162 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v163);
            sub_231414CBC();
            _os_log_impl(&dword_2312C8000, v123, v124, "[%{public}s:FeatureStatusConfiguration] Notification details not entered, treating as not onboarded", v125, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x2348DE308](v126, -1, -1);
            MEMORY[0x2348DE308](v125, -1, -1);
          }

          v127 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
          if (v127)
          {
            v128 = v127;
            v129 = objc_msgSend(v127, sel_features);

            if (v129)
            {
              v130 = objc_msgSend(v129, sel_seahorse);

              if (v130
                && (v131 = (void *)sub_231413588(),
                    v132 = objc_msgSend(v131, sel_areAllRequirementsSatisfied),
                    v131,
                    (v132 & 1) == 0))
              {
                v98 = v160;
                sub_2312F4BB4(v160);
              }
              else
              {
                v98 = v160;
                sub_2312F3C14(v160);
              }
LABEL_87:

              v99 = sub_231411EF0();
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 56))(v98, 0, 1, v99);
              return;
            }
          }
          else
          {
            __break(1u);
          }
          __break(1u);
          goto LABEL_145;
        }
        v122 = sub_231415070();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v122 & 1) != 0)
          goto LABEL_110;
        v133 = sub_2314146BC();
        v135 = v134;
        if (v133 == sub_2314146BC() && v135 == v136)
        {
          swift_bridgeObjectRelease_n();
          goto LABEL_126;
        }
LABEL_125:
        v137 = sub_231415070();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v137 & 1) == 0)
        {

          if (qword_25415DF98 != -1)
            swift_once();
          v148 = sub_2312CE3B8(v8, (uint64_t)qword_254162FF0);
          (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v148, v8);
          a3 = a1;
          v149 = sub_231413768();
          v159 = sub_231414980();
          v161 = v149;
          if (os_log_type_enabled(v149, (os_log_type_t)v159))
          {
            v150 = swift_slowAlloc();
            v158 = swift_slowAlloc();
            v163 = v158;
            *(_DWORD *)v150 = 136446466;
            v162 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v163);
            sub_231414CBC();
            *(_WORD *)(v150 + 12) = 2082;
            v151 = objc_msgSend(a3, sel_highestPriorityUnsatisfiedRequirement);
            if (!v151)
            {
LABEL_147:

              __break(1u);
              return;
            }
            v152 = v151;
            v153 = sub_2314146BC();
            v155 = v154;

            v162 = sub_23133180C(v153, v155, &v163);
            sub_231414CBC();

            swift_bridgeObjectRelease();
            v156 = v161;
            _os_log_impl(&dword_2312C8000, v161, (os_log_type_t)v159, "[%{public}s:FeatureStatusConfiguration] Unhandled, unsatisfied requirement encountered: %{public}s", (uint8_t *)v150, 0x16u);
            v157 = v158;
            swift_arrayDestroy();
            MEMORY[0x2348DE308](v157, -1, -1);
            MEMORY[0x2348DE308](v150, -1, -1);

          }
          else
          {

          }
          (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
          v29 = sub_231411EF0();
          v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56);
          v31 = v160;
          goto LABEL_32;
        }
LABEL_126:
        if (qword_25415DF98 != -1)
          swift_once();
        sub_2312CE3B8(v8, (uint64_t)qword_254162FF0);
        v138 = sub_231413768();
        v139 = sub_23141498C();
        if (os_log_type_enabled(v138, v139))
        {
          v140 = (uint8_t *)swift_slowAlloc();
          v141 = swift_slowAlloc();
          v163 = v141;
          *(_DWORD *)v140 = 136446210;
          v162 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v163);
          sub_231414CBC();
          _os_log_impl(&dword_2312C8000, v138, v139, "[%{public}s:FeatureStatusConfiguration] Onboarded and available but feature disabled", v140, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2348DE308](v141, -1, -1);
          MEMORY[0x2348DE308](v140, -1, -1);
        }

        v142 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
        if (v142)
        {
          v143 = v142;
          v144 = objc_msgSend(v142, sel_features);

          if (v144)
          {
            v145 = objc_msgSend(v144, sel_seahorse);

            if (v145
              && (v146 = (void *)sub_231413588(),
                  v147 = objc_msgSend(v146, sel_areAllRequirementsSatisfied),
                  v146,
                  (v147 & 1) == 0))
            {
              v98 = v160;
              sub_2312F47B0(v160);
            }
            else
            {
              v98 = v160;
              sub_2312F3FF8(v160);
            }
            goto LABEL_87;
          }
          goto LABEL_146;
        }
LABEL_145:
        __break(1u);
LABEL_146:
        __break(1u);
        goto LABEL_147;
      }
    }
    if (qword_25415DF98 != -1)
      swift_once();
    sub_2312CE3B8(v8, (uint64_t)qword_254162FF0);
    v41 = sub_231413768();
    v42 = sub_23141498C();
    v43 = os_log_type_enabled(v41, v42);
    v44 = v160;
    if (!v43)
      goto LABEL_31;
    v45 = (uint8_t *)swift_slowAlloc();
    v46 = swift_slowAlloc();
    v163 = v46;
    *(_DWORD *)v45 = 136446210;
    v162 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v163);
    sub_231414CBC();
    v47 = "[%{public}s:FeatureStatusConfiguration] Health app hidden, hiding";
    goto LABEL_30;
  }
  if (qword_25415DF98 != -1)
    swift_once();
  sub_2312CE3B8(v8, (uint64_t)qword_254162FF0);
  v32 = sub_231413768();
  v33 = sub_23141498C();
  v8 = v33;
  if (os_log_type_enabled(v32, v33))
  {
    v9 = swift_slowAlloc();
    v34 = swift_slowAlloc();
    v163 = v34;
    *(_DWORD *)v9 = 136446210;
    v12 = (char *)(v9 + 12);
    a1 = (void *)(v9 + 4);
    v162 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v163);
    sub_231414CBC();
    _os_log_impl(&dword_2312C8000, v32, (os_log_type_t)v8, "[%{public}s:FeatureStatusConfiguration] Onboarded, available, and enabled", (uint8_t *)v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v34, -1, -1);
    MEMORY[0x2348DE308](v9, -1, -1);
  }

  v35 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (!v35)
  {
    __break(1u);
    goto LABEL_124;
  }
  v36 = v35;
  v37 = objc_msgSend(v35, sel_features);

  if (!v37)
  {
LABEL_124:
    __break(1u);
    goto LABEL_125;
  }
  v38 = objc_msgSend(v37, sel_seahorse);

  if (v38
    && (v39 = (void *)sub_231413588(),
        v40 = objc_msgSend(v39, sel_areAllRequirementsSatisfied),
        v39,
        (v40 & 1) == 0))
  {
    sub_2312F4FB8(a4);
  }
  else
  {
    sub_2312F43DC(a4);
  }
  v48 = sub_231411EF0();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(a4, 0, 1, v48);
}

void sub_2312F6E68(void *a1@<X0>, uint8_t *a2@<X2>, void (*a3)(uint64_t)@<X4>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  unsigned int v36;
  void *v37;
  unsigned __int8 v38;
  NSObject *v39;
  os_log_type_t v40;
  _BOOL4 v41;
  uint64_t v42;
  uint8_t *v43;
  uint64_t v44;
  const char *v45;
  uint64_t v46;
  char v47;
  _BOOL4 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  NSObject *v54;
  os_log_type_t v55;
  _BOOL4 v56;
  uint64_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  NSObject *v66;
  os_log_type_t v67;
  _BOOL4 v68;
  uint8_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  NSObject *v76;
  os_log_type_t v77;
  _BOOL4 v78;
  uint8_t *v79;
  uint64_t v80;
  const char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  _BOOL4 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  NSObject *v93;
  os_log_type_t v94;
  uint8_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  NSObject *v104;
  os_log_type_t v105;
  uint8_t *v106;
  uint64_t v107;
  uint64_t v108;
  id v109;
  NSObject *v110;
  uint64_t v111;
  id v112;
  void *v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  NSObject *v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  NSObject *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;

  v8 = sub_231413780();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v119 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((((uint64_t (*)(uint64_t))a2)(v10) & 1) == 0)
  {
    if (qword_25415DF98 != -1)
      swift_once();
    sub_2312CE3B8(v8, (uint64_t)qword_254162FF0);
    v24 = sub_231413768();
    v25 = sub_23141498C();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      v124 = v27;
      *(_DWORD *)v26 = 136446210;
      v123 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v124);
      sub_231414CBC();
      _os_log_impl(&dword_2312C8000, v24, v25, "[%{public}s:FeatureStatusConfiguration] Cardio fitness not visible, hiding", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v27, -1, -1);
      MEMORY[0x2348DE308](v26, -1, -1);
    }

    v28 = sub_231411EF0();
    v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56);
    v30 = a4;
    goto LABEL_32;
  }
  v13 = (uint8_t *)objc_msgSend(a1, sel_highestPriorityUnsatisfiedRequirement);
  if (!v13)
  {
    if (qword_25415DF98 != -1)
      swift_once();
    sub_2312CE3B8(v8, (uint64_t)qword_254162FF0);
    v31 = sub_231413768();
    v32 = sub_23141498C();
    v8 = v32;
    if (os_log_type_enabled(v31, v32))
    {
      a2 = (uint8_t *)swift_slowAlloc();
      v33 = swift_slowAlloc();
      v124 = v33;
      *(_DWORD *)a2 = 136446210;
      v123 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v124);
      sub_231414CBC();
      _os_log_impl(&dword_2312C8000, v31, (os_log_type_t)v8, "[%{public}s:FeatureStatusConfiguration] Background delivered and available but onboarding not acknowledged, showing onboarding promotion", a2, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v33, -1, -1);
      MEMORY[0x2348DE308](a2, -1, -1);
    }

    v34 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
    if (v34)
    {
      v35 = v34;
      a2 = (uint8_t *)objc_msgSend(v34, sel_features);

      if (a2)
      {
        v36 = -[uint8_t seahorse](a2, sel_seahorse);

        if (v36
          && (v37 = (void *)sub_231413588(),
              v38 = objc_msgSend(v37, sel_areAllRequirementsSatisfied),
              v37,
              (v38 & 1) == 0))
        {
          sub_2312F4BB4(a4);
        }
        else
        {
          sub_2312F3C14(a4);
        }
        v46 = sub_231411EF0();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(a4, 0, 1, v46);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_104;
  }
  a2 = v13;
  v122 = a4;
  v14 = sub_2314146BC();
  v16 = v15;
  if (v14 == sub_2314146BC() && v16 == v17)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  v19 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v19 & 1) != 0)
  {
LABEL_26:
    if (qword_25415DF98 != -1)
      swift_once();
    sub_2312CE3B8(v8, (uint64_t)qword_254162FF0);
    v39 = sub_231413768();
    v40 = sub_23141498C();
    v41 = os_log_type_enabled(v39, v40);
    v42 = v122;
    if (!v41)
      goto LABEL_31;
    v43 = (uint8_t *)swift_slowAlloc();
    v44 = swift_slowAlloc();
    v124 = v44;
    *(_DWORD *)v43 = 136446210;
    v123 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v124);
    sub_231414CBC();
    v45 = "[%{public}s:FeatureStatusConfiguration] Health app hidden, hiding";
    goto LABEL_30;
  }
  v20 = sub_2314146BC();
  v22 = v21;
  if (v20 == sub_2314146BC() && v22 == v23)
  {
    swift_bridgeObjectRelease_n();
LABEL_36:
    if (qword_25415DF98 != -1)
      swift_once();
    sub_2312CE3B8(v8, (uint64_t)qword_254162FF0);
    v39 = sub_231413768();
    v40 = sub_23141498C();
    v48 = os_log_type_enabled(v39, v40);
    v42 = v122;
    if (!v48)
      goto LABEL_31;
    v43 = (uint8_t *)swift_slowAlloc();
    v44 = swift_slowAlloc();
    v124 = v44;
    *(_DWORD *)v43 = 136446210;
    v123 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v124);
    sub_231414CBC();
    v45 = "[%{public}s:FeatureStatusConfiguration] Not background delivered, meaning we do not have a supported device yet";
LABEL_30:
    _os_log_impl(&dword_2312C8000, v39, v40, v45, v43, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v44, -1, -1);
    MEMORY[0x2348DE308](v43, -1, -1);
LABEL_31:

    v28 = sub_231411EF0();
    v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56);
    v30 = v42;
LABEL_32:
    v29(v30, 1, 1, v28);
    return;
  }
  v47 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v47 & 1) != 0)
    goto LABEL_36;
  v49 = sub_2314146BC();
  v51 = v50;
  if (v49 == sub_2314146BC() && v51 == v52)
  {
    swift_bridgeObjectRelease_n();
LABEL_44:
    if (qword_25415DF98 != -1)
      swift_once();
    sub_2312CE3B8(v8, (uint64_t)qword_254162FF0);
    v54 = sub_231413768();
    v55 = sub_23141498C();
    v56 = os_log_type_enabled(v54, v55);
    v57 = v122;
    if (v56)
    {
      v58 = (uint8_t *)swift_slowAlloc();
      v59 = swift_slowAlloc();
      v124 = v59;
      *(_DWORD *)v58 = 136446210;
      v123 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v124);
      sub_231414CBC();
      _os_log_impl(&dword_2312C8000, v54, v55, "[%{public}s:FeatureStatusConfiguration] Heart rate app not installed, treating as unavailable", v58, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v59, -1, -1);
      MEMORY[0x2348DE308](v58, -1, -1);
    }

    sub_2312F2430(v57);
    goto LABEL_49;
  }
  v53 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v53 & 1) != 0)
    goto LABEL_44;
  v61 = sub_2314146BC();
  v63 = v62;
  if (v61 == sub_2314146BC() && v63 == v64)
  {
    swift_bridgeObjectRelease_n();
LABEL_54:
    if (qword_25415DF98 != -1)
      swift_once();
    sub_2312CE3B8(v8, (uint64_t)qword_254162FF0);
    v66 = sub_231413768();
    v67 = sub_23141498C();
    v68 = os_log_type_enabled(v66, v67);
    v57 = v122;
    if (v68)
    {
      v69 = (uint8_t *)swift_slowAlloc();
      v70 = swift_slowAlloc();
      v124 = v70;
      *(_DWORD *)v69 = 136446210;
      v123 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v124);
      sub_231414CBC();
      _os_log_impl(&dword_2312C8000, v66, v67, "[%{public}s:FeatureStatusConfiguration] Age gated, treating as unavailable", v69, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v70, -1, -1);
      MEMORY[0x2348DE308](v69, -1, -1);
    }

    sub_2312F27D4(v57);
    goto LABEL_49;
  }
  v65 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v65 & 1) != 0)
    goto LABEL_54;
  v71 = sub_2314146BC();
  v73 = v72;
  if (v71 == sub_2314146BC() && v73 == v74)
  {
    swift_bridgeObjectRelease_n();
LABEL_63:
    if (qword_25415DF98 != -1)
      swift_once();
    sub_2312CE3B8(v8, (uint64_t)qword_254162FF0);
    v76 = sub_231413768();
    v77 = sub_23141498C();
    v78 = os_log_type_enabled(v76, v77);
    v57 = v122;
    if (!v78)
      goto LABEL_68;
    v79 = (uint8_t *)swift_slowAlloc();
    v80 = swift_slowAlloc();
    v124 = v80;
    *(_DWORD *)v79 = 136446210;
    v123 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v124);
    sub_231414CBC();
    v81 = "[%{public}s:FeatureStatusConfiguration] Country not supported on local device, treating as unavailable";
    goto LABEL_67;
  }
  v75 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v75 & 1) != 0)
    goto LABEL_63;
  v82 = sub_2314146BC();
  v84 = v83;
  if (v82 == sub_2314146BC() && v84 == v85)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_73;
  }
  v86 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v86 & 1) != 0)
  {
LABEL_73:
    if (qword_25415DF98 == -1)
    {
LABEL_74:
      sub_2312CE3B8(v8, (uint64_t)qword_254162FF0);
      v76 = sub_231413768();
      v77 = sub_23141498C();
      v87 = os_log_type_enabled(v76, v77);
      v57 = v122;
      if (!v87)
        goto LABEL_68;
      v79 = (uint8_t *)swift_slowAlloc();
      v80 = swift_slowAlloc();
      v124 = v80;
      *(_DWORD *)v79 = 136446210;
      v123 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v124);
      sub_231414CBC();
      v81 = "[%{public}s:FeatureStatusConfiguration] Country not supported on active remote device, treating as unavailable";
LABEL_67:
      _os_log_impl(&dword_2312C8000, v76, v77, v81, v79, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v80, -1, -1);
      MEMORY[0x2348DE308](v79, -1, -1);
LABEL_68:

      sub_2312F2B78(v57);
LABEL_49:

      v60 = sub_231411EF0();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v57, 0, 1, v60);
      return;
    }
LABEL_104:
    swift_once();
    goto LABEL_74;
  }
  v88 = sub_2314146BC();
  v90 = v89;
  if (v88 == sub_2314146BC() && v90 == v91)
  {
    swift_bridgeObjectRelease_n();
LABEL_80:
    if (qword_25415DF98 != -1)
      swift_once();
    sub_2312CE3B8(v8, (uint64_t)qword_254162FF0);
    v93 = sub_231413768();
    v94 = sub_23141498C();
    if (os_log_type_enabled(v93, v94))
    {
      v95 = (uint8_t *)swift_slowAlloc();
      v96 = swift_slowAlloc();
      v124 = v96;
      *(_DWORD *)v95 = 136446210;
      v123 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v124);
      sub_231414CBC();
      _os_log_impl(&dword_2312C8000, v93, v94, "[%{public}s:FeatureStatusConfiguration] Capability not supported on active watch, treating as unavailable", v95, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v96, -1, -1);
      MEMORY[0x2348DE308](v95, -1, -1);
    }

    v97 = v122;
    sub_2312F2F1C(a3, v122);
LABEL_85:

    v98 = sub_231411EF0();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 56))(v97, 0, 1, v98);
    return;
  }
  v92 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v92 & 1) != 0)
    goto LABEL_80;
  v99 = sub_2314146BC();
  v101 = v100;
  if (v99 == sub_2314146BC() && v101 == v102)
  {
    swift_bridgeObjectRelease_n();
LABEL_90:
    if (qword_25415DF98 != -1)
      swift_once();
    sub_2312CE3B8(v8, (uint64_t)qword_254162FF0);
    v104 = sub_231413768();
    v105 = sub_23141498C();
    if (os_log_type_enabled(v104, v105))
    {
      v106 = (uint8_t *)swift_slowAlloc();
      v107 = swift_slowAlloc();
      v124 = v107;
      *(_DWORD *)v106 = 136446210;
      v123 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v124);
      sub_231414CBC();
      _os_log_impl(&dword_2312C8000, v104, v105, "[%{public}s:FeatureStatusConfiguration] Heart rate is not enabled, treating as unavailable", v106, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v107, -1, -1);
      MEMORY[0x2348DE308](v106, -1, -1);
    }

    v97 = v122;
    sub_2312F37E8(v122);
    goto LABEL_85;
  }
  v103 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v103 & 1) != 0)
    goto LABEL_90;

  if (qword_25415DF98 != -1)
    swift_once();
  v108 = sub_2312CE3B8(v8, (uint64_t)qword_254162FF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v108, v8);
  v109 = a1;
  v110 = sub_231413768();
  v120 = sub_231414980();
  v121 = v110;
  if (!os_log_type_enabled(v110, (os_log_type_t)v120))
  {

    goto LABEL_101;
  }
  v111 = swift_slowAlloc();
  v119 = swift_slowAlloc();
  v124 = v119;
  *(_DWORD *)v111 = 136446466;
  v123 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v124);
  sub_231414CBC();
  *(_WORD *)(v111 + 12) = 2082;
  v112 = objc_msgSend(v109, sel_highestPriorityUnsatisfiedRequirement);
  if (v112)
  {
    v113 = v112;
    v114 = sub_2314146BC();
    v116 = v115;

    v123 = sub_23133180C(v114, v116, &v124);
    sub_231414CBC();

    swift_bridgeObjectRelease();
    v117 = v121;
    _os_log_impl(&dword_2312C8000, v121, (os_log_type_t)v120, "[%{public}s:FeatureStatusConfiguration] Unhandled, unsatisfied requirement encountered: %{public}s", (uint8_t *)v111, 0x16u);
    v118 = v119;
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v118, -1, -1);
    MEMORY[0x2348DE308](v111, -1, -1);

LABEL_101:
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    v28 = sub_231411EF0();
    v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56);
    v30 = v122;
    goto LABEL_32;
  }

  __break(1u);
}

void sub_2312F8208(void *a1@<X0>, NSObject *a2@<X2>, char *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  NSObject *v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  NSObject *v69;
  os_log_type_t v70;
  uint8_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  os_log_type_t v78;
  uint8_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  os_log_type_t v86;
  uint8_t *v87;
  uint64_t v88;
  const char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  id v100;
  void *v101;
  id v102;
  unsigned int v103;
  void *v104;
  unsigned __int8 v105;
  NSObject *v106;
  os_log_type_t v107;
  uint8_t *v108;
  uint64_t v109;
  uint64_t v110;
  NSObject *v111;
  uint64_t v112;
  id v113;
  void *v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  NSObject *v119;
  os_log_type_t v120;
  uint8_t *v121;
  uint64_t v122;
  uint64_t *v123;
  uint64_t v124;
  int v125;
  NSObject *v126;
  uint64_t v127;
  uint64_t v128;

  v6 = sub_231413780();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v123 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_231411D94() & 1) == 0)
  {
    if (qword_25415DF98 != -1)
      swift_once();
    sub_2312CE3B8(v6, (uint64_t)qword_254162FF0);
    v22 = sub_231413768();
    v23 = sub_23141498C();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      v128 = v25;
      *(_DWORD *)v24 = 136446210;
      v127 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v128);
      sub_231414CBC();
      _os_log_impl(&dword_2312C8000, v22, v23, "[%{public}s] Cardio fitness not visible, hiding", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v25, -1, -1);
      MEMORY[0x2348DE308](v24, -1, -1);
    }
    goto LABEL_27;
  }
  v10 = objc_msgSend(a1, sel_highestPriorityUnsatisfiedRequirement);
  if (!v10)
  {
    if (qword_25415DF98 != -1)
      swift_once();
    sub_2312CE3B8(v6, (uint64_t)qword_254162FF0);
    v26 = sub_231413768();
    v27 = sub_23141498C();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      v29 = swift_slowAlloc();
      v128 = v29;
      *(_DWORD *)v28 = 136446210;
      v127 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v128);
      sub_231414CBC();
      _os_log_impl(&dword_2312C8000, v26, v27, "[%{public}s:ActionHandler] Onboarded, available, and enabled, push feature settings", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v29, -1, -1);
      MEMORY[0x2348DE308](v28, -1, -1);
    }

    sub_2312F9B30((uint64_t)a2, a3);
LABEL_20:
    v30 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(0);
LABEL_36:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(a3, 0, 1, v30);
    v43 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(a3, 0, 1, v43);
    return;
  }
  v11 = v10;
  v12 = sub_2314146BC();
  v14 = v13;
  v126 = v11;
  if (v12 == sub_2314146BC() && v14 == v15)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_22;
  }
  v17 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v17 & 1) != 0)
  {
LABEL_22:
    v31 = v126;
    if (qword_25415DF98 != -1)
      swift_once();
    sub_2312CE3B8(v6, (uint64_t)qword_254162FF0);
    v22 = sub_231413768();
    v32 = sub_23141498C();
    if (os_log_type_enabled(v22, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      v128 = v34;
      *(_DWORD *)v33 = 136446210;
      v127 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v128);
      sub_231414CBC();
      _os_log_impl(&dword_2312C8000, v22, v32, "[%{public}s:ActionHandler] Health app hidden, no action", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v34, -1, -1);
      MEMORY[0x2348DE308](v33, -1, -1);
    }

LABEL_27:
    goto LABEL_28;
  }
  v18 = sub_2314146BC();
  v20 = v19;
  if (v18 == sub_2314146BC() && v20 == v21)
  {
    swift_bridgeObjectRelease_n();
LABEL_30:
    v37 = v126;
    if (qword_25415DF98 != -1)
      swift_once();
    sub_2312CE3B8(v6, (uint64_t)qword_254162FF0);
    v38 = sub_231413768();
    v39 = sub_23141498C();
    if (!os_log_type_enabled(v38, v39))
      goto LABEL_35;
    v40 = (uint8_t *)swift_slowAlloc();
    v41 = swift_slowAlloc();
    v128 = v41;
    *(_DWORD *)v40 = 136446210;
    v127 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v128);
    sub_231414CBC();
    v42 = "[%{public}s:ActionHandler] Heart rate app not installed, open knowledge base article";
LABEL_34:
    _os_log_impl(&dword_2312C8000, v38, v39, v42, v40, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v41, -1, -1);
    MEMORY[0x2348DE308](v40, -1, -1);
LABEL_35:

    v30 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(0);
    goto LABEL_36;
  }
  v36 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v36 & 1) != 0)
    goto LABEL_30;
  v44 = sub_2314146BC();
  v46 = v45;
  if (v44 == sub_2314146BC() && v46 == v47)
  {
    swift_bridgeObjectRelease_n();
LABEL_41:
    v37 = v126;
    if (qword_25415DF98 != -1)
      swift_once();
    sub_2312CE3B8(v6, (uint64_t)qword_254162FF0);
    v38 = sub_231413768();
    v39 = sub_23141498C();
    if (!os_log_type_enabled(v38, v39))
      goto LABEL_35;
    v40 = (uint8_t *)swift_slowAlloc();
    v41 = swift_slowAlloc();
    v128 = v41;
    *(_DWORD *)v40 = 136446210;
    v127 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v128);
    sub_231414CBC();
    v42 = "[%{public}s:ActionHandler] Age gated, open knowledge base article";
    goto LABEL_34;
  }
  v48 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v48 & 1) != 0)
    goto LABEL_41;
  v49 = sub_2314146BC();
  v51 = v50;
  if (v49 == sub_2314146BC() && v51 == v52)
  {
    swift_bridgeObjectRelease_n();
LABEL_49:
    v37 = v126;
    if (qword_25415DF98 != -1)
      swift_once();
    sub_2312CE3B8(v6, (uint64_t)qword_254162FF0);
    v38 = sub_231413768();
    v39 = sub_23141498C();
    if (!os_log_type_enabled(v38, v39))
      goto LABEL_35;
    v40 = (uint8_t *)swift_slowAlloc();
    v41 = swift_slowAlloc();
    v128 = v41;
    *(_DWORD *)v40 = 136446210;
    v127 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v128);
    sub_231414CBC();
    v42 = "[%{public}s:ActionHandler] Country not supported on local device, open knowledge base article";
    goto LABEL_34;
  }
  v53 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v53 & 1) != 0)
    goto LABEL_49;
  v54 = sub_2314146BC();
  v56 = v55;
  if (v54 == sub_2314146BC() && v56 == v57)
  {
    swift_bridgeObjectRelease_n();
LABEL_57:
    v37 = v126;
    if (qword_25415DF98 != -1)
      swift_once();
    sub_2312CE3B8(v6, (uint64_t)qword_254162FF0);
    v38 = sub_231413768();
    v39 = sub_23141498C();
    if (!os_log_type_enabled(v38, v39))
      goto LABEL_35;
    v40 = (uint8_t *)swift_slowAlloc();
    v41 = swift_slowAlloc();
    v128 = v41;
    *(_DWORD *)v40 = 136446210;
    v127 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v128);
    sub_231414CBC();
    v42 = "[%{public}s:ActionHandler] Country not supported on active remote device, open knowledge base article";
    goto LABEL_34;
  }
  v58 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v58 & 1) != 0)
    goto LABEL_57;
  v59 = sub_2314146BC();
  v61 = v60;
  if (v59 == sub_2314146BC() && v61 == v62)
  {
    swift_bridgeObjectRelease_n();
LABEL_65:
    v37 = v126;
    if (qword_25415DF98 != -1)
      swift_once();
    sub_2312CE3B8(v6, (uint64_t)qword_254162FF0);
    v38 = sub_231413768();
    v39 = sub_23141498C();
    if (!os_log_type_enabled(v38, v39))
      goto LABEL_35;
    v40 = (uint8_t *)swift_slowAlloc();
    v41 = swift_slowAlloc();
    v128 = v41;
    *(_DWORD *)v40 = 136446210;
    v127 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v128);
    sub_231414CBC();
    v42 = "[%{public}s:ActionHandler] Capability not supported on active watch, open knowledge base article";
    goto LABEL_34;
  }
  v63 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v63 & 1) != 0)
    goto LABEL_65;
  v64 = sub_2314146BC();
  v66 = v65;
  if (v64 == sub_2314146BC() && v66 == v67)
  {
    swift_bridgeObjectRelease_n();
LABEL_73:
    if (qword_25415DF98 != -1)
      swift_once();
    sub_2312CE3B8(v6, (uint64_t)qword_254162FF0);
    v69 = sub_231413768();
    v70 = sub_23141498C();
    if (os_log_type_enabled(v69, v70))
    {
      v71 = (uint8_t *)swift_slowAlloc();
      v72 = swift_slowAlloc();
      v128 = v72;
      *(_DWORD *)v71 = 136446210;
      v127 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v128);
      sub_231414CBC();
      _os_log_impl(&dword_2312C8000, v69, v70, "[%{public}s:ActionHandler] Age is not present, present health details", v71, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v72, -1, -1);
      MEMORY[0x2348DE308](v71, -1, -1);
    }
    goto LABEL_77;
  }
  v68 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v68 & 1) != 0)
    goto LABEL_73;
  v73 = sub_2314146BC();
  v75 = v74;
  if (v73 == sub_2314146BC() && v75 == v76)
  {
    swift_bridgeObjectRelease_n();
LABEL_82:
    if (qword_25415DF98 != -1)
      swift_once();
    sub_2312CE3B8(v6, (uint64_t)qword_254162FF0);
    v69 = sub_231413768();
    v78 = sub_23141498C();
    if (os_log_type_enabled(v69, v78))
    {
      v79 = (uint8_t *)swift_slowAlloc();
      v80 = swift_slowAlloc();
      v128 = v80;
      *(_DWORD *)v79 = 136446210;
      v127 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v128);
      sub_231414CBC();
      _os_log_impl(&dword_2312C8000, v69, v78, "[%{public}s:ActionHandler] Heart rate is not enabled, deep link to heart rate settings", v79, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v80, -1, -1);
      MEMORY[0x2348DE308](v79, -1, -1);
    }
    goto LABEL_77;
  }
  v77 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v77 & 1) != 0)
    goto LABEL_82;
  v81 = sub_2314146BC();
  v83 = v82;
  if (v81 == sub_2314146BC() && v83 == v84)
  {
    swift_bridgeObjectRelease_n();
LABEL_91:
    if (qword_25415DF98 != -1)
      swift_once();
    sub_2312CE3B8(v6, (uint64_t)qword_254162FF0);
    v69 = sub_231413768();
    v86 = sub_23141498C();
    if (!os_log_type_enabled(v69, v86))
      goto LABEL_77;
    v87 = (uint8_t *)swift_slowAlloc();
    v88 = swift_slowAlloc();
    v128 = v88;
    *(_DWORD *)v87 = 136446210;
    v127 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v128);
    sub_231414CBC();
    v89 = "[%{public}s:ActionHandler] Not background delivered, present onboarding";
    goto LABEL_95;
  }
  v85 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v85 & 1) != 0)
    goto LABEL_91;
  v90 = sub_2314146BC();
  v92 = v91;
  if (v90 == sub_2314146BC() && v92 == v93)
  {
    swift_bridgeObjectRelease_n();
LABEL_101:
    if (qword_25415DF98 != -1)
      swift_once();
    sub_2312CE3B8(v6, (uint64_t)qword_254162FF0);
    v69 = sub_231413768();
    v86 = sub_23141498C();
    if (!os_log_type_enabled(v69, v86))
      goto LABEL_77;
    v87 = (uint8_t *)swift_slowAlloc();
    v88 = swift_slowAlloc();
    v128 = v88;
    *(_DWORD *)v87 = 136446210;
    v127 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v128);
    sub_231414CBC();
    v89 = "[%{public}s:ActionHandler] Notification details not entered, present onboarding";
LABEL_95:
    _os_log_impl(&dword_2312C8000, v69, v86, v89, v87, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v88, -1, -1);
    MEMORY[0x2348DE308](v87, -1, -1);
LABEL_77:

    v30 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(0);
    goto LABEL_36;
  }
  v94 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v94 & 1) != 0)
    goto LABEL_101;
  v95 = sub_2314146BC();
  v97 = v96;
  if (v95 != sub_2314146BC() || v97 != v98)
  {
    v99 = sub_231415070();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v99 & 1) != 0)
      goto LABEL_109;

    if (qword_25415DF98 != -1)
      swift_once();
    v110 = sub_2312CE3B8(v6, (uint64_t)qword_254162FF0);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v110, v6);
    a2 = a1;
    v111 = sub_231413768();
    v125 = sub_231414980();
    v126 = v111;
    if (os_log_type_enabled(v111, (os_log_type_t)v125))
    {
      v112 = swift_slowAlloc();
      v124 = swift_slowAlloc();
      v128 = v124;
      *(_DWORD *)v112 = 136446466;
      v127 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v128);
      v123 = &v128;
      sub_231414CBC();
      *(_WORD *)(v112 + 12) = 2082;
      v113 = -[NSObject highestPriorityUnsatisfiedRequirement](a2, sel_highestPriorityUnsatisfiedRequirement);
      if (!v113)
        goto LABEL_132;
      v114 = v113;
      v115 = sub_2314146BC();
      v117 = v116;

      v127 = sub_23133180C(v115, v117, &v128);
      sub_231414CBC();

      swift_bridgeObjectRelease();
      a2 = v126;
      _os_log_impl(&dword_2312C8000, v126, (os_log_type_t)v125, "[%{public}s:ActionHandler] Unhandled, unsatisfied requirement encountered: %{public}s", (uint8_t *)v112, 0x16u);
      v118 = v124;
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v118, -1, -1);
      MEMORY[0x2348DE308](v112, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
LABEL_28:
    v35 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(a3, 1, 1, v35);
    return;
  }
  swift_bridgeObjectRelease_n();
LABEL_109:
  v100 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (v100)
  {
    v101 = v100;
    v102 = objc_msgSend(v100, sel_features);

    if (v102)
    {
      v103 = objc_msgSend(v102, sel_seahorse);

      if (!v103
        || (v104 = (void *)sub_231413588(),
            v105 = objc_msgSend(v104, sel_areAllRequirementsSatisfied),
            v104,
            (v105 & 1) != 0))
      {
        if (qword_25415DF98 != -1)
          swift_once();
        sub_2312CE3B8(v6, (uint64_t)qword_254162FF0);
        v106 = sub_231413768();
        v107 = sub_23141498C();
        if (os_log_type_enabled(v106, v107))
        {
          v108 = (uint8_t *)swift_slowAlloc();
          v109 = swift_slowAlloc();
          v128 = v109;
          *(_DWORD *)v108 = 136446210;
          v127 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v128);
          sub_231414CBC();
          _os_log_impl(&dword_2312C8000, v106, v107, "[%{public}s:ActionHandler] Onboarded and available but feature disabled, present feature settings and enable", v108, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2348DE308](v109, -1, -1);
          MEMORY[0x2348DE308](v108, -1, -1);
        }

        sub_2312F9B30((uint64_t)a2, a3);
        v30 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(0);
        goto LABEL_36;
      }
      if (qword_25415DF98 != -1)
        swift_once();
      sub_2312CE3B8(v6, (uint64_t)qword_254162FF0);
      v119 = sub_231413768();
      v120 = sub_23141498C();
      if (os_log_type_enabled(v119, v120))
      {
        v121 = (uint8_t *)swift_slowAlloc();
        v122 = swift_slowAlloc();
        v128 = v122;
        *(_DWORD *)v121 = 136446210;
        v127 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v128);
        sub_231414CBC();
        _os_log_impl(&dword_2312C8000, v119, v120, "[%{public}s:ActionHandler] Onboarded and available but feature inactive, push feature settings but do not enable", v121, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2348DE308](v122, -1, -1);
        MEMORY[0x2348DE308](v121, -1, -1);
      }

      sub_2312F9B30((uint64_t)a2, a3);
      goto LABEL_20;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_132:

  __break(1u);
}

double sub_2312F9B30@<D0>(uint64_t a1@<X1>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint8_t *v18;
  uint64_t v19;
  int v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  char *v25;
  __int128 v26;
  double result;
  _QWORD v28[2];
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD v33[2];
  __int128 v34;

  v31 = a1;
  v3 = sub_231411D1C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)v28 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v28 - v11;
  v13 = sub_231411EC0();
  swift_bridgeObjectRelease();
  if (!v13)
  {
    if (qword_25415DF98 != -1)
      swift_once();
    v14 = sub_231413780();
    sub_2312CE3B8(v14, (uint64_t)qword_254162FF0);
    v15 = sub_231413768();
    v16 = sub_231414980();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v30 = swift_slowAlloc();
      *(_QWORD *)&v33[0] = v30;
      v29 = v17;
      *(_DWORD *)v17 = 136446210;
      v28[1] = v17 + 4;
      v32 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, (uint64_t *)v33);
      sub_231414CBC();
      v18 = v29;
      _os_log_impl(&dword_2312C8000, v15, v16, "[%{public}s] Expected to have primary description content but it's not present", v29, 0xCu);
      v19 = v30;
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v19, -1, -1);
      MEMORY[0x2348DE308](v18, -1, -1);
    }

  }
  sub_231411EB4();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v10, v12, v3);
  v20 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v10, v3);
  if (v20 == *MEMORY[0x24BE41298])
  {
    v21 = 1;
  }
  else if (v20 == *MEMORY[0x24BE412A0])
  {
    v21 = 2;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
    v21 = 0;
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v12, v3);
  sub_231411EB4();
  v22 = sub_231411EC0();
  if (v22)
    v23 = v22;
  else
    v23 = MEMORY[0x24BEE4AF8];
  sub_2312FAFD4((uint64_t *)v33);
  *a2 = v21;
  v24 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(&a2[v24[5]], v7, v3);
  *(_QWORD *)&a2[v24[6]] = v23;
  v25 = &a2[v24[7]];
  v26 = v33[1];
  *(_OWORD *)v25 = v33[0];
  *((_OWORD *)v25 + 1) = v26;
  result = *(double *)&v34;
  *((_OWORD *)v25 + 2) = v34;
  return result;
}

void sub_2312F9E48(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  char v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  os_log_type_t v66;
  uint8_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  id v75;
  NSObject *v76;
  uint64_t v77;
  id v78;
  void *v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  NSObject *v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  int v87;
  NSObject *v88;
  uint64_t v89;
  uint64_t v90;

  v4 = sub_231413780();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_231411D94() & 1) == 0)
  {
    if (qword_25415DF98 != -1)
      swift_once();
    sub_2312CE3B8(v4, (uint64_t)qword_254162FF0);
    v20 = sub_231413768();
    v21 = sub_23141498C();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      v90 = v23;
      *(_DWORD *)v22 = 136446210;
      v89 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v90);
      sub_231414CBC();
      _os_log_impl(&dword_2312C8000, v20, v21, "[%{public}s] Cardio fitness not visible, hiding", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v23, -1, -1);
      MEMORY[0x2348DE308](v22, -1, -1);
    }
    goto LABEL_27;
  }
  v8 = objc_msgSend(a1, sel_highestPriorityUnsatisfiedRequirement);
  if (!v8)
  {
    if (qword_25415DF98 != -1)
      swift_once();
    sub_2312CE3B8(v4, (uint64_t)qword_254162FF0);
    v24 = sub_231413768();
    v25 = sub_23141498C();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      v90 = v27;
      *(_DWORD *)v26 = 136446210;
      v89 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v90);
      sub_231414CBC();
      _os_log_impl(&dword_2312C8000, v24, v25, "[%{public}s:ActionHandler] Not onboarded but no reason why we can't, present onboarding", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v27, -1, -1);
      MEMORY[0x2348DE308](v26, -1, -1);
    }

    v28 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(0);
    goto LABEL_36;
  }
  v9 = v8;
  v10 = sub_2314146BC();
  v12 = v11;
  if (v10 == sub_2314146BC() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_21;
  }
  v15 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
  {
LABEL_21:
    if (qword_25415DF98 != -1)
      swift_once();
    sub_2312CE3B8(v4, (uint64_t)qword_254162FF0);
    v20 = sub_231413768();
    v29 = sub_23141498C();
    if (!os_log_type_enabled(v20, v29))
      goto LABEL_26;
    v30 = (uint8_t *)swift_slowAlloc();
    v31 = swift_slowAlloc();
    v90 = v31;
    *(_DWORD *)v30 = 136446210;
    v89 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v90);
    sub_231414CBC();
    v32 = "[%{public}s:ActionHandler] Health app hidden, no action";
    goto LABEL_25;
  }
  v16 = sub_2314146BC();
  v18 = v17;
  if (v16 == sub_2314146BC() && v18 == v19)
  {
    swift_bridgeObjectRelease_n();
LABEL_30:
    if (qword_25415DF98 != -1)
      swift_once();
    sub_2312CE3B8(v4, (uint64_t)qword_254162FF0);
    v35 = sub_231413768();
    v36 = sub_23141498C();
    if (!os_log_type_enabled(v35, v36))
      goto LABEL_35;
    v37 = (uint8_t *)swift_slowAlloc();
    v38 = swift_slowAlloc();
    v90 = v38;
    *(_DWORD *)v37 = 136446210;
    v89 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v90);
    sub_231414CBC();
    v39 = "[%{public}s:ActionHandler] Heart rate app not installed, open knowledge base article";
LABEL_34:
    _os_log_impl(&dword_2312C8000, v35, v36, v39, v37, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v38, -1, -1);
    MEMORY[0x2348DE308](v37, -1, -1);
LABEL_35:

    v28 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(0);
LABEL_36:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(a2, 0, 1, v28);
    v40 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(a2, 0, 1, v40);
    return;
  }
  v34 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v34 & 1) != 0)
    goto LABEL_30;
  v41 = sub_2314146BC();
  v43 = v42;
  if (v41 == sub_2314146BC() && v43 == v44)
  {
    swift_bridgeObjectRelease_n();
LABEL_41:
    if (qword_25415DF98 != -1)
      swift_once();
    sub_2312CE3B8(v4, (uint64_t)qword_254162FF0);
    v35 = sub_231413768();
    v36 = sub_23141498C();
    if (!os_log_type_enabled(v35, v36))
      goto LABEL_35;
    v37 = (uint8_t *)swift_slowAlloc();
    v38 = swift_slowAlloc();
    v90 = v38;
    *(_DWORD *)v37 = 136446210;
    v89 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v90);
    sub_231414CBC();
    v39 = "[%{public}s:ActionHandler] Age gated, open knowledge base article";
    goto LABEL_34;
  }
  v45 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v45 & 1) != 0)
    goto LABEL_41;
  v46 = sub_2314146BC();
  v48 = v47;
  if (v46 == sub_2314146BC() && v48 == v49)
  {
    swift_bridgeObjectRelease_n();
LABEL_49:
    if (qword_25415DF98 != -1)
      swift_once();
    sub_2312CE3B8(v4, (uint64_t)qword_254162FF0);
    v35 = sub_231413768();
    v36 = sub_23141498C();
    if (!os_log_type_enabled(v35, v36))
      goto LABEL_35;
    v37 = (uint8_t *)swift_slowAlloc();
    v38 = swift_slowAlloc();
    v90 = v38;
    *(_DWORD *)v37 = 136446210;
    v89 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v90);
    sub_231414CBC();
    v39 = "[%{public}s:ActionHandler] Country not supported on local device, open knowledge base article";
    goto LABEL_34;
  }
  v50 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v50 & 1) != 0)
    goto LABEL_49;
  v51 = sub_2314146BC();
  v53 = v52;
  if (v51 == sub_2314146BC() && v53 == v54)
  {
    swift_bridgeObjectRelease_n();
LABEL_57:
    if (qword_25415DF98 != -1)
      swift_once();
    sub_2312CE3B8(v4, (uint64_t)qword_254162FF0);
    v35 = sub_231413768();
    v36 = sub_23141498C();
    if (!os_log_type_enabled(v35, v36))
      goto LABEL_35;
    v37 = (uint8_t *)swift_slowAlloc();
    v38 = swift_slowAlloc();
    v90 = v38;
    *(_DWORD *)v37 = 136446210;
    v89 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v90);
    sub_231414CBC();
    v39 = "[%{public}s:ActionHandler] Country not supported on active remote device, open knowledge base article";
    goto LABEL_34;
  }
  v55 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v55 & 1) != 0)
    goto LABEL_57;
  v56 = sub_2314146BC();
  v58 = v57;
  if (v56 == sub_2314146BC() && v58 == v59)
  {
    swift_bridgeObjectRelease_n();
LABEL_65:
    if (qword_25415DF98 != -1)
      swift_once();
    sub_2312CE3B8(v4, (uint64_t)qword_254162FF0);
    v35 = sub_231413768();
    v36 = sub_23141498C();
    if (!os_log_type_enabled(v35, v36))
      goto LABEL_35;
    v37 = (uint8_t *)swift_slowAlloc();
    v38 = swift_slowAlloc();
    v90 = v38;
    *(_DWORD *)v37 = 136446210;
    v89 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v90);
    sub_231414CBC();
    v39 = "[%{public}s:ActionHandler] Capability not supported on active watch, open knowledge base article";
    goto LABEL_34;
  }
  v60 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v60 & 1) != 0)
    goto LABEL_65;
  v61 = sub_2314146BC();
  v63 = v62;
  if (v61 == sub_2314146BC() && v63 == v64)
  {
    swift_bridgeObjectRelease_n();
LABEL_73:
    if (qword_25415DF98 != -1)
      swift_once();
    sub_2312CE3B8(v4, (uint64_t)qword_254162FF0);
    v35 = sub_231413768();
    v66 = sub_23141498C();
    if (os_log_type_enabled(v35, v66))
    {
      v67 = (uint8_t *)swift_slowAlloc();
      v68 = swift_slowAlloc();
      v90 = v68;
      *(_DWORD *)v67 = 136446210;
      v89 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v90);
      sub_231414CBC();
      _os_log_impl(&dword_2312C8000, v35, v66, "[%{public}s:ActionHandler] Heart rate is not enabled, deep link to heart rate settings", v67, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v68, -1, -1);
      MEMORY[0x2348DE308](v67, -1, -1);
    }
    goto LABEL_35;
  }
  v65 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v65 & 1) != 0)
    goto LABEL_73;
  v69 = sub_2314146BC();
  v71 = v70;
  if (v69 == sub_2314146BC() && v71 == v72)
  {
    swift_bridgeObjectRelease_n();
LABEL_82:
    if (qword_25415DF98 != -1)
      swift_once();
    sub_2312CE3B8(v4, (uint64_t)qword_254162FF0);
    v20 = sub_231413768();
    v29 = sub_23141498C();
    if (!os_log_type_enabled(v20, v29))
      goto LABEL_26;
    v30 = (uint8_t *)swift_slowAlloc();
    v31 = swift_slowAlloc();
    v90 = v31;
    *(_DWORD *)v30 = 136446210;
    v89 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v90);
    sub_231414CBC();
    v32 = "[%{public}s:ActionHandler] Background delivered onboarding record not present, no action";
LABEL_25:
    _os_log_impl(&dword_2312C8000, v20, v29, v32, v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v31, -1, -1);
    MEMORY[0x2348DE308](v30, -1, -1);
LABEL_26:

LABEL_27:
LABEL_28:
    v33 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(a2, 1, 1, v33);
    return;
  }
  v73 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v73 & 1) != 0)
    goto LABEL_82;

  if (qword_25415DF98 != -1)
    swift_once();
  v74 = sub_2312CE3B8(v4, (uint64_t)qword_254162FF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v74, v4);
  v75 = a1;
  v76 = sub_231413768();
  v87 = sub_231414980();
  v88 = v76;
  if (!os_log_type_enabled(v76, (os_log_type_t)v87))
  {

    goto LABEL_92;
  }
  v77 = swift_slowAlloc();
  v86 = swift_slowAlloc();
  v90 = v86;
  *(_DWORD *)v77 = 136446466;
  v89 = sub_23133180C(0xD00000000000002DLL, 0x8000000231426D20, &v90);
  v85 = &v90;
  sub_231414CBC();
  *(_WORD *)(v77 + 12) = 2082;
  v78 = objc_msgSend(v75, sel_highestPriorityUnsatisfiedRequirement);
  if (v78)
  {
    v79 = v78;
    v80 = sub_2314146BC();
    v82 = v81;

    v89 = sub_23133180C(v80, v82, &v90);
    sub_231414CBC();

    swift_bridgeObjectRelease();
    v83 = v88;
    _os_log_impl(&dword_2312C8000, v88, (os_log_type_t)v87, "[%{public}s:ActionHandler] Unhandled, unsatisfied requirement encountered: %{public}s", (uint8_t *)v77, 0x16u);
    v84 = v86;
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v84, -1, -1);
    MEMORY[0x2348DE308](v77, -1, -1);

LABEL_92:
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    goto LABEL_28;
  }

  __break(1u);
}

void sub_2312FAFD4(uint64_t *a1@<X8>)
{
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  unsigned int v23;
  void *v24;
  unsigned __int8 v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  void *v48;
  id v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  id v53;
  id v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  void *v62;
  id v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  id v67;
  void *v68;
  id v69;
  unsigned int v70;
  void *v71;
  unsigned __int8 v72;

  v2 = (void *)sub_231413588();
  v3 = objc_msgSend(v2, sel_highestPriorityUnsatisfiedRequirement);

  if (!v3)
  {
    v20 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
    if (v20)
    {
      v21 = v20;
      v22 = objc_msgSend(v20, sel_features);

      if (v22)
      {
        v23 = objc_msgSend(v22, sel_seahorse);

        if (!v23)
          goto LABEL_19;
        v24 = (void *)sub_231413588();
        v25 = objc_msgSend(v24, sel_areAllRequirementsSatisfied);

        if ((v25 & 1) != 0)
          goto LABEL_19;
        goto LABEL_23;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_44;
  }
  v4 = sub_2314146BC();
  v6 = v5;
  if (v4 == sub_2314146BC() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_21;
  }
  v9 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
  {
LABEL_21:
    v36 = objc_msgSend((id)objc_opt_self(), sel_cardioFitnessAgeRestrictedFooterDescription);
LABEL_22:
    v37 = v36;
    v28 = sub_2314146BC();
    v30 = v38;

    v32 = 0;
    v34 = 0;
    v39 = 0;
    v40 = 0;
LABEL_28:
    *a1 = v28;
    a1[1] = v30;
    a1[2] = v32;
    a1[3] = v34;
    a1[4] = v39;
    a1[5] = v40;
    return;
  }
  v10 = sub_2314146BC();
  v12 = v11;
  if (v10 == sub_2314146BC() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  v15 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
  {
LABEL_26:
    v48 = (void *)objc_opt_self();
    v49 = objc_msgSend(v48, sel_cardioFitnessAgeDeletedFooterDescriptionWithLink);
    v28 = sub_2314146BC();
    v30 = v50;

    v51 = objc_msgSend(v48, sel_cardioFitnessAgeDeletedFooterLinkTitle);
    v32 = sub_2314146BC();
    v34 = v52;

    v53 = objc_msgSend(v48, sel_cardioFitnessAgeDeletedFooterLinkURL);
LABEL_27:
    v54 = v53;
    v39 = sub_2314146BC();
    v40 = v55;

    goto LABEL_28;
  }
  v16 = sub_2314146BC();
  v18 = v17;
  if (v16 == sub_2314146BC() && v18 == v19)
  {
    swift_bridgeObjectRelease_n();
LABEL_30:
    v36 = objc_msgSend((id)objc_opt_self(), sel_cardioFitnessPairedDeviceRegionGatedFooterDescription);
    goto LABEL_22;
  }
  v56 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v56 & 1) != 0)
    goto LABEL_30;
  v57 = sub_2314146BC();
  v59 = v58;
  if (v57 == sub_2314146BC() && v59 == v60)
  {
    swift_bridgeObjectRelease_n();
LABEL_35:
    v62 = (void *)objc_opt_self();
    v63 = objc_msgSend(v62, sel_cardioFitnessWristDetectFooterDescriptionWithLink);
    v28 = sub_2314146BC();
    v30 = v64;

    v65 = objc_msgSend(v62, sel_cardioFitnessWristDetectFooterLinkTitle);
    v32 = sub_2314146BC();
    v34 = v66;

    v53 = objc_msgSend(v62, sel_cardioFitnessWristDetectFooterLinkURL);
    goto LABEL_27;
  }
  v61 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v61 & 1) != 0)
    goto LABEL_35;

  v67 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (!v67)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  v68 = v67;
  v69 = objc_msgSend(v67, sel_features);

  if (v69)
  {
    v70 = objc_msgSend(v69, sel_seahorse);

    if (!v70
      || (v71 = (void *)sub_231413588(),
          v72 = objc_msgSend(v71, sel_areAllRequirementsSatisfied),
          v71,
          (v72 & 1) != 0))
    {
LABEL_19:
      v26 = (void *)objc_opt_self();
      v27 = objc_msgSend(v26, sel_cardioFitnessFooterDescriptionWithLink);
      v28 = sub_2314146BC();
      v30 = v29;

      v31 = objc_msgSend(v26, sel_cardioFitnessFooterLinkTitle);
      v32 = sub_2314146BC();
      v34 = v33;

      v35 = objc_msgSend(v26, sel_cardioFitnessFooterLinkURL);
LABEL_24:
      v46 = v35;
      v39 = sub_2314146BC();
      v40 = v47;

      goto LABEL_28;
    }
LABEL_23:
    v41 = (void *)objc_opt_self();
    v42 = objc_msgSend(v41, sel_cardioFitnessPregnantFooterDescriptionWithLink);
    v28 = sub_2314146BC();
    v30 = v43;

    v44 = objc_msgSend(v41, sel_cardioFitnessFooterLinkTitle);
    v32 = sub_2314146BC();
    v34 = v45;

    v35 = objc_msgSend(v41, sel_cardioFitnessFooterLinkURL);
    goto LABEL_24;
  }
LABEL_45:
  __break(1u);
}

uint64_t _s27CardioFitnessChartComponentVwxx(id *a1)
{

  return swift_bridgeObjectRelease();
}

_QWORD *_s27CardioFitnessChartComponentVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  a1[2] = *(_QWORD *)(a2 + 16);
  v5 = v3;
  sub_231412A90();
  return a1;
}

uint64_t _s27CardioFitnessChartComponentVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_231412A90();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeBufferWithCopyOfBuffer for AFibBurdenPDFChartViewModel.DataRange(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t _s27CardioFitnessChartComponentVwta(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v5 = a2[2];
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s27CardioFitnessChartComponentVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s27CardioFitnessChartComponentVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s27CardioFitnessChartComponentVMa()
{
  return &_s27CardioFitnessChartComponentVN;
}

uint64_t sub_2312FB884()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_231412A90();
  return v1;
}

uint64_t sub_2312FB8B0(uint64_t a1)
{
  void **v1;

  return sub_2312FB8B8(a1, *v1);
}

uint64_t sub_2312FB8B8(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v15;

  v4 = sub_231412DA8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_231412C10();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_231412D9C() & 0xFE) == 2)
  {
    v12 = a2;
    sub_231412C04();
    v13 = sub_231412BF8();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    type metadata accessor for HKHRCardioFitnessChartDataSource();
    swift_allocObject();
    v13 = sub_2313BC638(a2, (uint64_t)v7);
    sub_2312FB9F8();
  }
  return v13;
}

unint64_t sub_2312FB9F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ECBB10;
  if (!qword_255ECBB10)
  {
    v1 = type metadata accessor for HKHRCardioFitnessChartDataSource();
    result = MEMORY[0x2348DE248](MEMORY[0x24BE43BF8], v1);
    atomic_store(result, (unint64_t *)&qword_255ECBB10);
  }
  return result;
}

uint64_t type metadata accessor for AFibBurdenNotificationSettingsDisclosureCellViewController()
{
  uint64_t result;

  result = qword_255ECBB18;
  if (!qword_255ECBB18)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2312FBA7C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2312FBAB8()
{
  uint64_t v1;

  v1 = sub_2314146BC();
  sub_231412A90();
  sub_231414728();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_2312FBB24()
{
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2312FBB2C(uint64_t *a1))()
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = sub_2314146BC();
  v5 = v2;
  sub_231412A90();
  sub_231414728();
  swift_bridgeObjectRelease();
  *a1 = v4;
  a1[1] = v5;
  return destroy for CenteredLabelWithSpinnerContentConfiguration;
}

uint64_t sub_2312FBBB4()
{
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return 0;
}

uint64_t sub_2312FBC48()
{
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  return 0;
}

uint64_t sub_2312FBD0C(void *a1)
{
  id v2;

  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  v2 = a1;
  sub_2312D3C14();
  sub_2314146E0();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return 0;
}

id sub_2312FBDF0(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6;
  void *v7;
  id v8;
  id v9;
  objc_super v11;

  if (a3)
  {
    sub_2314146BC();
    v6 = a4;
    v7 = (void *)sub_23141468C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = a4;
    v7 = 0;
  }
  v11.receiver = a1;
  v11.super_class = (Class)type metadata accessor for AFibBurdenNotificationSettingsDisclosureCellViewController();
  v9 = objc_msgSendSuper2(&v11, sel_initWithNibName_bundle_, v7, a4);

  return v9;
}

id sub_2312FBE90(void *a1, uint64_t a2, uint64_t a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for AFibBurdenNotificationSettingsDisclosureCellViewController();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_2312FBED8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AFibBurdenNotificationSettingsDisclosureCellViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2312FBF0C()
{
  return type metadata accessor for AFibBurdenNotificationSettingsDisclosureCellViewController();
}

uint64_t sub_2312FBF18(uint64_t a1, void *a2)
{
  return sub_2312FCFCC(a2);
}

void sub_2312FBF48(unint64_t a1)
{
  sub_2312FC65C(a1, &qword_25415DF18, (unint64_t *)&qword_25415DEB0, 0x24BDD3F08, (unint64_t *)&qword_25415DEB8);
}

uint64_t sub_2312FBF6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_2312FDCEC();
    v3 = sub_231414E00();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      sub_231415118();
      sub_231412A90();
      sub_231414710();
      result = sub_231415148();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = sub_231415070(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = sub_231415070();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_2312FC108(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  uint64_t result;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;

  v2 = sub_231411890();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v33 = (char *)&v28 - v7;
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    sub_2312FDC6C(0, &qword_25415DF10, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], &qword_25415D508, MEMORY[0x24BE474F8]);
    v9 = sub_231414E00();
    v10 = 0;
    v32 = v9 + 56;
    v11 = *(unsigned __int8 *)(v3 + 80);
    v29 = v8;
    v30 = a1 + ((v11 + 32) & ~v11);
    v12 = *(_QWORD *)(v3 + 72);
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    while (1)
    {
      v31 = v10;
      v13(v33, v30 + v12 * v10, v2);
      sub_2312CCC24(&qword_25415D508, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], MEMORY[0x24BE474F8]);
      v14 = sub_231414644();
      v15 = ~(-1 << *(_BYTE *)(v9 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v13(v6, *(_QWORD *)(v9 + 48) + v16 * v12, v2);
          sub_2312CCC24(&qword_25415D4D8, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], MEMORY[0x24BE47500]);
          v20 = sub_231414680();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v6, v2);
          if ((v20 & 1) != 0)
          {
            v22(v33, v2);
            v3 = v21;
            v8 = v29;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v8 = v29;
      }
      v23 = v33;
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v9 + 48) + v16 * v12, v23, v2);
      v25 = *(_QWORD *)(v9 + 16);
      v26 = __OFADD__(v25, 1);
      v27 = v25 + 1;
      if (v26)
        break;
      *(_QWORD *)(v9 + 16) = v27;
LABEL_4:
      v10 = v31 + 1;
      if (v31 + 1 == v8)
        return v9;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B08];
  }
  return result;
}

unint64_t sub_2312FC388(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t (*v8)(uint64_t);
  BOOL v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;

  v1 = result;
  v2 = result >> 62;
  if (result >> 62)
  {
    sub_231412A90();
    v5 = sub_231414F08();
    result = swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      sub_2312FDC6C(0, &qword_255ECBB78, (uint64_t (*)(uint64_t))MEMORY[0x24BDB9B60], &qword_255ECBB80, MEMORY[0x24BDB9B70]);
      result = sub_231414E00();
      v3 = result;
      v19 = v1;
      if (!v2)
        goto LABEL_4;
LABEL_8:
      sub_231412A90();
      v4 = sub_231414F08();
      result = swift_bridgeObjectRelease();
      if (!v4)
        return v3;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x24BEE4B08];
  v19 = v1;
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return v3;
LABEL_9:
  v6 = 0;
  v7 = v3 + 56;
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BDB9B60];
  v18 = v4;
  while ((v19 & 0xC000000000000001) != 0)
  {
    result = MEMORY[0x2348DD81C](v6, v19);
    v9 = __OFADD__(v6++, 1);
    if (v9)
      goto LABEL_26;
LABEL_18:
    v20 = result;
    sub_231413D44();
    sub_2312CCC24(&qword_255ECBB80, v8, MEMORY[0x24BDB9B70]);
    result = sub_231414644();
    v10 = -1 << *(_BYTE *)(v3 + 32);
    v11 = result & ~v10;
    v12 = v11 >> 6;
    v13 = *(_QWORD *)(v7 + 8 * (v11 >> 6));
    v14 = 1 << v11;
    if (((1 << v11) & v13) != 0)
    {
      v15 = ~v10;
      sub_2312CCC24(&qword_255ECBB88, v8, MEMORY[0x24BDB9B78]);
      do
      {
        result = sub_231414680();
        if ((result & 1) != 0)
        {
          result = swift_release();
          v4 = v18;
          goto LABEL_11;
        }
        v11 = (v11 + 1) & v15;
        v12 = v11 >> 6;
        v13 = *(_QWORD *)(v7 + 8 * (v11 >> 6));
        v14 = 1 << v11;
      }
      while ((v13 & (1 << v11)) != 0);
      v4 = v18;
    }
    *(_QWORD *)(v7 + 8 * v12) = v14 | v13;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11) = v20;
    v16 = *(_QWORD *)(v3 + 16);
    v9 = __OFADD__(v16, 1);
    v17 = v16 + 1;
    if (v9)
      goto LABEL_27;
    *(_QWORD *)(v3 + 16) = v17;
LABEL_11:
    v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BDB9B60];
    if (v6 == v4)
      return v3;
  }
  if (v6 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_28;
  result = swift_retain();
  v9 = __OFADD__(v6++, 1);
  if (!v9)
    goto LABEL_18;
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

void sub_2312FC638(unint64_t a1)
{
  sub_2312FC65C(a1, (unint64_t *)&qword_25415E450, (unint64_t *)&qword_25415DE98, 0x24BDD3DC0, (unint64_t *)&unk_25415DEA0);
}

void sub_2312FC65C(unint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char v24;
  uint64_t v25;
  id v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  char v39;
  uint64_t v40;
  id v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v49;

  v7 = a1;
  v8 = a1 >> 62;
  if (a1 >> 62)
  {
    sub_231412A90();
    v11 = sub_231414F08();
    swift_bridgeObjectRelease();
    if (v11)
    {
LABEL_3:
      sub_2312FDBA4(0, a2, a3, a4, a5);
      v9 = sub_231414E00();
      if (!v8)
        goto LABEL_4;
LABEL_8:
      sub_231412A90();
      v10 = sub_231414F08();
      swift_bridgeObjectRelease();
      if (!v10)
        return;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v9 = MEMORY[0x24BEE4B08];
  if (v8)
    goto LABEL_8;
LABEL_4:
  v10 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v10)
    return;
LABEL_9:
  v12 = v9 + 56;
  v49 = v10;
  if ((v7 & 0xC000000000000001) != 0)
  {
    v13 = 0;
    v45 = v7;
    while (1)
    {
      v14 = MEMORY[0x2348DD81C](v13, v7);
      v15 = __OFADD__(v13++, 1);
      if (v15)
      {
        __break(1u);
        goto LABEL_37;
      }
      v16 = v14;
      v17 = sub_231414BFC();
      v18 = -1 << *(_BYTE *)(v9 + 32);
      v19 = v17 & ~v18;
      v20 = v19 >> 6;
      v21 = *(_QWORD *)(v12 + 8 * (v19 >> 6));
      v22 = 1 << v19;
      if (((1 << v19) & v21) != 0)
      {
        sub_2312D3C68(0, a3);
        v23 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * v19);
        v24 = sub_231414C08();

        if ((v24 & 1) != 0)
        {
LABEL_11:
          sub_2314130CC();
          v7 = v45;
          goto LABEL_12;
        }
        v25 = ~v18;
        while (1)
        {
          v19 = (v19 + 1) & v25;
          v20 = v19 >> 6;
          v21 = *(_QWORD *)(v12 + 8 * (v19 >> 6));
          v22 = 1 << v19;
          if ((v21 & (1 << v19)) == 0)
            break;
          v26 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * v19);
          v27 = sub_231414C08();

          if ((v27 & 1) != 0)
            goto LABEL_11;
        }
        v7 = v45;
      }
      *(_QWORD *)(v12 + 8 * v20) = v22 | v21;
      *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v19) = v16;
      v28 = *(_QWORD *)(v9 + 16);
      v15 = __OFADD__(v28, 1);
      v29 = v28 + 1;
      if (v15)
        goto LABEL_38;
      *(_QWORD *)(v9 + 16) = v29;
LABEL_12:
      if (v13 == v49)
        return;
    }
  }
  v30 = 0;
  v46 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v30 != v46)
  {
    v31 = *(id *)(v7 + 32 + 8 * v30);
    v32 = sub_231414BFC();
    v33 = -1 << *(_BYTE *)(v9 + 32);
    v34 = v32 & ~v33;
    v35 = v34 >> 6;
    v36 = *(_QWORD *)(v12 + 8 * (v34 >> 6));
    v37 = 1 << v34;
    if (((1 << v34) & v36) != 0)
    {
      sub_2312D3C68(0, a3);
      v38 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * v34);
      v39 = sub_231414C08();

      if ((v39 & 1) != 0)
        goto LABEL_24;
      v40 = ~v33;
      v34 = (v34 + 1) & v40;
      v35 = v34 >> 6;
      v36 = *(_QWORD *)(v12 + 8 * (v34 >> 6));
      v37 = 1 << v34;
      if ((v36 & (1 << v34)) != 0)
      {
        while (1)
        {
          v41 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * v34);
          v42 = sub_231414C08();

          if ((v42 & 1) != 0)
            break;
          v34 = (v34 + 1) & v40;
          v35 = v34 >> 6;
          v36 = *(_QWORD *)(v12 + 8 * (v34 >> 6));
          v37 = 1 << v34;
          if ((v36 & (1 << v34)) == 0)
            goto LABEL_32;
        }
LABEL_24:

        v10 = v49;
        goto LABEL_25;
      }
LABEL_32:
      v10 = v49;
    }
    *(_QWORD *)(v12 + 8 * v35) = v37 | v36;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v34) = v31;
    v43 = *(_QWORD *)(v9 + 16);
    v15 = __OFADD__(v43, 1);
    v44 = v43 + 1;
    if (v15)
      goto LABEL_39;
    *(_QWORD *)(v9 + 16) = v44;
LABEL_25:
    if (++v30 == v10)
      return;
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

id sub_2312FC9D0(__int16 a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v37;
  _QWORD v38[5];
  _QWORD v39[5];

  sub_2312D1E78(0, (unint64_t *)&qword_255ECBB70, (void (*)(uint64_t))MEMORY[0x24BE42170]);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v38 - v17 + 16;
  sub_2312D1E78(0, &qword_25415C3D0, (void (*)(uint64_t))_s15SettingsContentVMa);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)v38 - v20 + 16;
  v39[3] = sub_2312D3C68(0, (unint64_t *)&qword_25415BB50);
  v39[4] = MEMORY[0x24BE45B80];
  v39[0] = a4;
  v38[3] = sub_23141186C();
  v38[4] = &off_25002A428;
  v38[0] = a7;
  v22 = a8;
  v37 = a6;
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_231414F08())
  {
    v23 = a2;
    v24 = sub_2312FC388(MEMORY[0x24BEE4AF8]);
  }
  else
  {
    v23 = a2;
    v24 = MEMORY[0x24BEE4B08];
  }
  *(_QWORD *)&v22[qword_255ED1820] = v24;
  v25 = &v22[qword_255ED1828];
  *(_QWORD *)v25 = 0;
  *((_QWORD *)v25 + 1) = 0;
  v26 = (uint64_t)&v22[qword_255ED1838];
  v27 = _s15SettingsContentVMa();
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
  v28(v26, 1, 1, v27);
  *(_QWORD *)&v22[qword_255ED2F38 + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v22[qword_255ED2F40 + 8] = 0;
  swift_unknownObjectWeakInit();
  v29 = &v22[qword_255ED1808];
  *v29 = a1 & 1;
  v29[1] = HIBYTE(a1) & 1;
  *(_QWORD *)&v22[qword_255ED1810] = a3;
  sub_2312DF850((uint64_t)v39, (uint64_t)&v22[qword_255ED1818]);
  *(_QWORD *)&v22[qword_255ED1830] = a5;
  sub_2312FD80C(v23, (uint64_t)v21);
  v28((uint64_t)v21, 0, 1, v27);
  swift_beginAccess();
  v30 = a3;
  v31 = a5;
  sub_2312FD8D0((uint64_t)v21, v26);
  swift_endAccess();
  sub_2312DF850((uint64_t)v38, (uint64_t)&v22[qword_255ED1840]);

  v32 = sub_2314120AC();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v18, v37, v32);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v18, 0, 1, v32);
  sub_231412A90();
  HKImproveHealthAndActivityAnalyticsAllowed();
  v35 = (id)sub_2314120A0();
  sub_2313E7CB4();

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v38);
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v34, v32);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v39);
  sub_2312FD894(v23);
  return v35;
}

id sub_2312FCD20(__int16 a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6, int a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  __int16 v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  uint64_t v39;
  id v40;
  void *v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[3];
  uint64_t v47;
  _UNKNOWN **v48;

  v43 = a8;
  v42 = a7;
  v40 = a4;
  v41 = a5;
  v12 = sub_2314120AC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = _s15SettingsContentVMa();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = a2;
  sub_2312FD80C(a2, (uint64_t)v18);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v44 = a6;
  v19(v15, a6, v12);
  v20 = sub_23141186C();
  v21 = sub_231411860();
  v47 = v20;
  v48 = &off_25002A428;
  v46[0] = v21;
  v22 = objc_allocWithZone((Class)type metadata accessor for AFibBurdenSpecifierDataSource(0));
  v23 = sub_2312DEF74((uint64_t)v46, v47);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (uint64_t *)((char *)&v39 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v26 + 16))(v25);
  v27 = *v25;
  LOWORD(v25) = a1 & 0x101;
  v28 = a3;
  v29 = v40;
  swift_retain();
  v30 = (__int16)v25;
  v31 = v41;
  v32 = sub_2312FC9D0(v30, (uint64_t)v18, v28, (uint64_t)v29, v41, (uint64_t)v15, v27, v22);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v46);
  swift_release();
  sub_2312CCC24(&qword_255ECBB68, type metadata accessor for AFibBurdenSpecifierDataSource, (uint64_t)&unk_231423900);
  v33 = v32;
  v34 = (void *)sub_231412F1C();
  v35 = (void *)objc_opt_self();
  v36 = v34;
  v37 = objc_msgSend(v35, sel_aFibBurdenSectionTitle);
  if (!v37)
  {
    sub_2314146BC();
    v37 = (id)sub_23141468C();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v36, sel_setTitle_, v37);

  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v44, v12);
  sub_2312FD894(v45);
  return v36;
}

uint64_t sub_2312FCFCC(void *a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  int v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  _QWORD v60[7];

  ObjectType = swift_getObjectType();
  sub_2312D4A68();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2314120AC();
  v49 = *(_QWORD *)(v8 - 8);
  v50 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v51 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D1E78(0, &qword_25415C3D0, (void (*)(uint64_t))_s15SettingsContentVMa);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v47 - v11;
  v13 = _s15SettingsContentVMa();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v52 = (uint64_t)&v47 - v18;
  v19 = sub_23141357C();
  v54 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v59 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = a1;
  v21 = objc_msgSend(a1, sel_resolvedHealthStore);
  if (!v21)
  {
    if (qword_25415B6D8 != -1)
      swift_once();
    v30 = sub_2312CE3B8(v4, (uint64_t)qword_254162EE8);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v30, v4);
    *(_QWORD *)(swift_allocObject() + 16) = ObjectType;
    v60[0] = 0;
    sub_2314135AC();
    goto LABEL_11;
  }
  v22 = v21;
  v48 = v19;
  v56 = ObjectType;
  v57 = v5;
  v58 = v7;
  v23 = *MEMORY[0x24BDD2DC8];
  v55 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3BE0]), sel_initWithFeatureIdentifier_healthStore_, *MEMORY[0x24BDD2DC8], v21);
  v24 = objc_msgSend(v22, sel_profileIdentifier);
  v25 = objc_msgSend(v24, sel_type);

  if (v25 != (id)1
    || (v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3BF8]), sel_initWithFeatureIdentifier_healthStore_, v23, v22)) == 0)
  {
    if (qword_25415B6D8 != -1)
      swift_once();
    v29 = sub_2312CE3B8(v4, (uint64_t)qword_254162EE8);
    v5 = v57;
    v7 = v58;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v58, v29, v4);
    *(_QWORD *)(swift_allocObject() + 16) = v56;
    v60[0] = 0;
    sub_2314135B8();

LABEL_11:
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v27 = v26;
  sub_2312D3C68(0, (unint64_t *)&qword_25415BB50);
  v28 = (uint64_t)v59;
  v47 = v27;
  sub_231413618();
  v32 = sub_23141186C();
  v33 = sub_231411860();
  v60[3] = v32;
  v60[4] = &off_250025F88;
  v60[0] = v33;
  sub_231396630(v28, v60, (uint64_t)v12);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v60);
  v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v35 = v58;
  if (v34 == 1)
  {
    sub_2312FD77C((uint64_t)v12);
    if (qword_25415B6D8 != -1)
      swift_once();
    v36 = sub_2312CE3B8(v4, (uint64_t)qword_254162EE8);
    v37 = v57;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v35, v36, v4);
    *(_QWORD *)(swift_allocObject() + 16) = v56;
    v60[0] = 0;
    sub_2314135B8();

    swift_release();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v35, v4);
  }
  else
  {
    v38 = v52;
    sub_2312D6BDC((uint64_t)v12, v52);
    sub_2312FD80C(v38, (uint64_t)v17);
    v39 = (uint64_t)v51;
    (*(void (**)(char *, _QWORD, uint64_t))(v49 + 104))(v51, *MEMORY[0x24BE42158], v50);
    v40 = objc_allocWithZone((Class)type metadata accessor for AFibBurdenSettingsViewController(0));
    v41 = v55;
    v42 = v47;
    v43 = v22;
    v44 = sub_2312FCD20(256, (uint64_t)v17, v41, v42, v43, v39, 0, (uint64_t)v40);

    if (qword_25415B6D8 != -1)
      swift_once();
    v45 = sub_2312CE3B8(v4, (uint64_t)qword_254162EE8);
    v46 = v57;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v35, v45, v4);
    *(_QWORD *)(swift_allocObject() + 16) = v56;
    v60[0] = 0;
    sub_231413594();
    swift_release();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v35, v4);
    objc_msgSend(v53, sel_showViewController_sender_, v44, 0);

    sub_2312FD894(v38);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v59, v48);
}

uint64_t sub_2312FD6F4()
{
  return swift_deallocObject();
}

uint64_t sub_2312FD704()
{
  return sub_2312FBC48();
}

uint64_t sub_2312FD738()
{
  return swift_deallocObject();
}

uint64_t sub_2312FD748()
{
  return sub_2312FBBB4();
}

uint64_t sub_2312FD750()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_2312FD774()
{
  uint64_t v0;

  return sub_2312FBD0C(*(void **)(v0 + 16));
}

uint64_t sub_2312FD77C(uint64_t a1)
{
  uint64_t v2;

  sub_2312D1E78(0, &qword_25415C3D0, (void (*)(uint64_t))_s15SettingsContentVMa);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2312FD7C8()
{
  return swift_deallocObject();
}

uint64_t sub_2312FD7D8()
{
  return sub_2312FBC48();
}

uint64_t sub_2312FD80C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s15SettingsContentVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2312FD850()
{
  return swift_deallocObject();
}

uint64_t sub_2312FD860()
{
  return sub_2312FBC48();
}

uint64_t sub_2312FD894(uint64_t a1)
{
  uint64_t v2;

  v2 = _s15SettingsContentVMa();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2312FD8D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312D1E78(0, &qword_25415C3D0, (void (*)(uint64_t))_s15SettingsContentVMa);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2312FD924(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  uint64_t result;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;

  v2 = sub_2314126C4();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v33 = (char *)&v28 - v7;
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    sub_2312FDC6C(0, &qword_255ECBB90, (uint64_t (*)(uint64_t))MEMORY[0x24BE43080], &qword_255ECBB98, MEMORY[0x24BE43088]);
    v9 = sub_231414E00();
    v10 = 0;
    v32 = v9 + 56;
    v11 = *(unsigned __int8 *)(v3 + 80);
    v29 = v8;
    v30 = a1 + ((v11 + 32) & ~v11);
    v12 = *(_QWORD *)(v3 + 72);
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    while (1)
    {
      v31 = v10;
      v13(v33, v30 + v12 * v10, v2);
      sub_2312CCC24(&qword_255ECBB98, (uint64_t (*)(uint64_t))MEMORY[0x24BE43080], MEMORY[0x24BE43088]);
      v14 = sub_231414644();
      v15 = ~(-1 << *(_BYTE *)(v9 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v13(v6, *(_QWORD *)(v9 + 48) + v16 * v12, v2);
          sub_2312CCC24(&qword_255ECBBA0, (uint64_t (*)(uint64_t))MEMORY[0x24BE43080], MEMORY[0x24BE43090]);
          v20 = sub_231414680();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v6, v2);
          if ((v20 & 1) != 0)
          {
            v22(v33, v2);
            v3 = v21;
            v8 = v29;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v8 = v29;
      }
      v23 = v33;
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v9 + 48) + v16 * v12, v23, v2);
      v25 = *(_QWORD *)(v9 + 16);
      v26 = __OFADD__(v25, 1);
      v27 = v25 + 1;
      if (v26)
        break;
      *(_QWORD *)(v9 + 16) = v27;
LABEL_4:
      v10 = v31 + 1;
      if (v31 + 1 == v8)
        return v9;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B08];
  }
  return result;
}

void sub_2312FDBA4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    sub_2312D3C68(255, a3);
    sub_2312FDC2C(a5, a3);
    v8 = sub_231414E0C();
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_2312FDC2C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_2312D3C68(255, a2);
    result = MEMORY[0x2348DE248](MEMORY[0x24BEE5BD8], v4);
    atomic_store(result, a1);
  }
  return result;
}

void sub_2312FDC6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    a3(255);
    sub_2312CCC24(a4, a3, a5);
    v9 = sub_231414E0C();
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_2312FDCEC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECBBA8)
  {
    v0 = sub_231414E0C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECBBA8);
  }
}

uint64_t sub_2312FDD48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_2312FDE1C();
    v2 = sub_231414E00();
    v3 = v2 + 56;
    while (1)
    {
      sub_231415118();
      sub_231415124();
      result = sub_231415148();
      v5 = result & ~(-1 << *(_BYTE *)(v2 + 32));
      v6 = v5 >> 6;
      v7 = *(_QWORD *)(v3 + 8 * (v5 >> 6));
      v8 = 1 << v5;
      if ((v8 & v7) == 0)
      {
        *(_QWORD *)(v3 + 8 * v6) = v8 | v7;
        v9 = *(_QWORD *)(v2 + 16);
        v10 = __OFADD__(v9, 1);
        v11 = v9 + 1;
        if (v10)
        {
          __break(1u);
          return result;
        }
        *(_QWORD *)(v2 + 16) = v11;
      }
      if (!--v1)
        return v2;
    }
  }
  return MEMORY[0x24BEE4B08];
}

void sub_2312FDE1C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECBBB0)
  {
    sub_2312FDE74();
    v0 = sub_231414E0C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECBBB0);
  }
}

unint64_t sub_2312FDE74()
{
  unint64_t result;

  result = qword_255ECBBB8;
  if (!qword_255ECBBB8)
  {
    result = MEMORY[0x2348DE248](&unk_231421D64, &type metadata for AFibBurdenPDFChartPoint.Tag);
    atomic_store(result, (unint64_t *)&qword_255ECBBB8);
  }
  return result;
}

uint64_t sub_2312FDEB8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2312FDEE8 + 4 * byte_231418D60[a1]))(0x7472617473, 0xE500000000000000);
}

uint64_t sub_2312FDEE8()
{
  return 0x7472617453746567;
}

uint64_t sub_2312FDF04()
{
  return 0x726F577449776F68;
}

unint64_t sub_2312FDF24()
{
  return 0xD000000000000010;
}

uint64_t sub_2312FDF40()
{
  return 0x746361466566696CLL;
}

unint64_t sub_2312FDF60()
{
  return 0xD000000000000013;
}

uint64_t sub_2312FDF80()
{
  return 0x6974656C706D6F63;
}

BOOL sub_2312FDFA4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_2312FDFB8()
{
  sub_231415118();
  sub_231415124();
  return sub_231415148();
}

uint64_t sub_2312FDFFC()
{
  return sub_231415124();
}

uint64_t sub_2312FE024()
{
  sub_231415118();
  sub_231415124();
  return sub_231415148();
}

void sub_2312FE064(_QWORD *a1@<X8>)
{
  *a1 = &unk_25001EE38;
}

uint64_t sub_2312FE074()
{
  unsigned __int8 *v0;

  return sub_2312FDEB8(*v0);
}

uint64_t sub_2312FE07C(uint64_t a1, uint64_t a2)
{
  return sub_2312FFF54(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)a2, *(_BYTE *)(a2 + 8));
}

BOOL sub_2312FE094(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_2312FE0AC(uint64_t a1, uint64_t a2)
{
  return sub_2312FFDFC(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)a2, *(_BYTE *)(a2 + 8));
}

uint64_t sub_2312FE0C4(char a1, void *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v19;

  v4 = v3;
  v8 = *v4;
  sub_231300050();
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = swift_allocObject();
  swift_weakInit();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v14;
  *(_BYTE *)(v15 + 24) = a1;
  *(_QWORD *)(v15 + 32) = a2;
  *(_QWORD *)(v15 + 40) = a3;
  *(_QWORD *)(v15 + 48) = v8;
  sub_2313000C8();
  swift_allocObject();
  v16 = a2;
  sub_231413DF8();
  sub_2312CCC24(&qword_255ECBCB8, (uint64_t (*)(uint64_t))sub_2313000C8, MEMORY[0x24BDB9E58]);
  swift_retain();
  sub_231413E04();
  sub_2312CCC24(&qword_255ECBCC0, (uint64_t (*)(uint64_t))sub_231300050, MEMORY[0x24BDB9E90]);
  v17 = sub_231413E7C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v17;
}

uint64_t sub_2312FE268(void (*a1)(__int128 *), uint64_t a2, uint64_t a3, char a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t Strong;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  void *v35;
  id v36;
  unsigned __int8 *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t *v40;
  void (*v41)(uint64_t);
  uint64_t v42;
  char *v44;
  int v45;
  void *v46;
  void *v47;
  id v48;
  __int16 v49;
  uint64_t v50;
  uint64_t v51;
  os_unfair_lock_s *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  unsigned __int8 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  unsigned __int8 *v65;
  uint64_t v66;
  void *v67;
  void (*v68)(__int128 *);
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;

  v69 = a7;
  v66 = a6;
  v67 = a5;
  sub_2312D1E78(0, &qword_25415C140, (void (*)(uint64_t))MEMORY[0x24BE45750]);
  MEMORY[0x24BDAC7A8](v10);
  v59 = (uint64_t)&v58 - v11;
  v61 = sub_231411608();
  v60 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D1E78(0, (unint64_t *)&qword_255ECBCC8, (void (*)(uint64_t))MEMORY[0x24BDCBDE0]);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v58 - v15;
  v17 = sub_2314112F0();
  v63 = *(_QWORD *)(v17 - 8);
  v64 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v62 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D1E78(0, &qword_255ECBCD0, (void (*)(uint64_t))type metadata accessor for AFibBurdenOnboardingDetails);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v58 - v20;
  v22 = type metadata accessor for AFibBurdenOnboardingDetails(0);
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v65 = (unsigned __int8 *)&v58 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = swift_allocObject();
  v68 = a1;
  *(_QWORD *)(v25 + 16) = a1;
  *(_QWORD *)(v25 + 24) = a2;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v27 = Strong;
    v70 = a2;
    if (a4)
    {
      if (a4 != 1)
      {
        if (a4 == 6)
        {
          sub_2312CEA5C((_QWORD *)(Strong + 56), *(_QWORD *)(Strong + 80));
          v28 = (_QWORD *)swift_allocObject();
          v28[2] = sub_23130019C;
          v28[3] = v25;
          v28[4] = v69;
          v29 = swift_allocObject();
          *(_QWORD *)(v29 + 16) = sub_2313001FC;
          *(_QWORD *)(v29 + 24) = v28;
          swift_retain();
          swift_retain();
          sub_231411848();
          swift_release();
          swift_release();
        }
        else
        {
          swift_retain();
          swift_release();
          *(_QWORD *)&v73 = 0;
          WORD4(v73) = 128;
          v68(&v73);
        }
        return swift_release();
      }
      swift_retain();
      swift_release();
      v35 = v67;
      v71 = v67;
      v72 = v66;
      sub_2312CEA10(0, &qword_255ECBCD8);
      sub_2312CEA10(0, &qword_255ECBCE0);
      v36 = v35;
      if ((swift_dynamicCast() & 1) != 0)
      {
        sub_2312CEA5C(&v73, *((uint64_t *)&v74 + 1));
        sub_231337618(v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v21, 0, 1, v22);
        _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v73);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) != 1)
        {
          v37 = v65;
          sub_2313002C0((uint64_t)v21, (uint64_t)v65);
          sub_231300304((uint64_t)&v37[*(int *)(v22 + 20)], (uint64_t)v16);
          v39 = v63;
          v38 = v64;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v16, 1, v64) == 1)
          {
            sub_2312CEBD4((uint64_t)v37, type metadata accessor for AFibBurdenOnboardingDetails);
            v40 = (unint64_t *)&qword_255ECBCC8;
            v41 = (void (*)(uint64_t))MEMORY[0x24BDCBDE0];
            v42 = (uint64_t)v16;
LABEL_15:
            sub_2312F1A20(v42, v40, v41);
LABEL_16:
            *(_QWORD *)&v73 = 0;
            WORD4(v73) = 128;
            v68(&v73);
            return swift_release();
          }
          v44 = v62;
          (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v62, v16, v38);
          v45 = *v37;
          if (v45 == 2)
          {
            (*(void (**)(char *, uint64_t))(v39 + 8))(v44, v38);
            sub_2312CEBD4((uint64_t)v37, type metadata accessor for AFibBurdenOnboardingDetails);
            goto LABEL_16;
          }
          v46 = (void *)sub_2314112CC();
          sub_2314115FC();
          v47 = (void *)sub_2314115C0();
          (*(void (**)(char *, uint64_t))(v60 + 8))(v13, v61);
          v48 = objc_msgSend(v46, sel_hk_ageWithCurrentDate_, v47);

          if ((uint64_t)v48 < *MEMORY[0x24BDD4548])
          {
            *(_QWORD *)&v73 = 0;
            WORD4(v73) = 2;
LABEL_31:
            v68(&v73);
            swift_release();
            (*(void (**)(char *, uint64_t))(v39 + 8))(v44, v38);
            return sub_2312CEBD4((uint64_t)v65, type metadata accessor for AFibBurdenOnboardingDetails);
          }
          if ((v45 & 1) != 0)
          {
            v50 = *(_QWORD *)(*sub_2312CEA5C((_QWORD *)(v27 + 16), *(_QWORD *)(v27 + 40)) + 104);
            v51 = v50 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v50 + 16);
            v52 = (os_unfair_lock_s *)(v50 + ((*(unsigned int *)(*(_QWORD *)v50 + 48) + 3) & 0x1FFFFFFFCLL));
            swift_retain();
            os_unfair_lock_lock(v52);
            v53 = v59;
            sub_2313F72B8(v51, v59);
            os_unfair_lock_unlock(v52);
            swift_release();
            v54 = sub_23141357C();
            v55 = *(_QWORD *)(v54 - 8);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54) == 1)
            {
              sub_2312F1A20(v53, &qword_25415C140, (void (*)(uint64_t))MEMORY[0x24BE45750]);
            }
            else
            {
              v56 = (void *)sub_231413588();
              (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v53, v54);
              v57 = objc_msgSend(v56, sel_isRequirementSatisfiedWithIdentifier_, *MEMORY[0x24BDD2D38]);

              if ((v57 & 1) == 0)
              {
                *(_QWORD *)&v73 = 0;
                v49 = 64;
                goto LABEL_30;
              }
            }
            *(_QWORD *)&v73 = 0;
            v49 = 128;
          }
          else
          {
            *(_QWORD *)&v73 = 3;
            v49 = 2;
          }
LABEL_30:
          WORD4(v73) = v49;
          goto LABEL_31;
        }
      }
      else
      {
        v75 = 0;
        v73 = 0u;
        v74 = 0u;
        sub_2312CEBD4((uint64_t)&v73, (uint64_t (*)(_QWORD))sub_231300258);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v21, 1, 1, v22);
      }
      v40 = &qword_255ECBCD0;
      v41 = (void (*)(uint64_t))type metadata accessor for AFibBurdenOnboardingDetails;
      v42 = (uint64_t)v21;
      goto LABEL_15;
    }
    v30 = swift_allocObject();
    *(_QWORD *)(v30 + 16) = 0;
    sub_2312CEA5C((_QWORD *)(v27 + 16), *(_QWORD *)(v27 + 40));
    swift_retain();
    *(_QWORD *)&v73 = sub_2313F7BF4();
    v31 = (_QWORD *)swift_allocObject();
    v31[2] = sub_23130019C;
    v31[3] = v25;
    v32 = v69;
    v31[4] = v30;
    v31[5] = v32;
    v33 = (_QWORD *)swift_allocObject();
    v33[2] = v27;
    v33[3] = sub_23130019C;
    v33[4] = v25;
    v33[5] = v32;
    sub_2313003EC();
    sub_2312CCC24(&qword_255ECBD00, (uint64_t (*)(uint64_t))sub_2313003EC, MEMORY[0x24BDB9AF8]);
    swift_retain();
    swift_retain();
    swift_retain();
    v34 = sub_231413EC4();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_beginAccess();
    *(_QWORD *)(v30 + 16) = v34;
    swift_release();
  }
  else
  {
    swift_retain();
  }
  return swift_release();
}

uint64_t sub_2312FEACC(void **a1, void (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  void *v5;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26[3];

  v5 = *a1;
  if (*a1)
  {
    v7 = v5;
    v8 = (void *)sub_231411404();
    v9 = objc_msgSend(v8, sel_code);

    if (v9 == (id)109)
    {
      if (qword_25415C170 != -1)
        swift_once();
      v10 = sub_231413780();
      sub_2312CE3B8(v10, (uint64_t)qword_254162F00);
      v11 = sub_231413768();
      v12 = sub_23141498C();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (uint8_t *)swift_slowAlloc();
        v14 = swift_slowAlloc();
        v26[0] = v14;
        *(_DWORD *)v13 = 136315138;
        v15 = sub_2314151A8();
        sub_23133180C(v15, v16, v26);
        sub_231414CBC();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2312C8000, v11, v12, "[%s] Location unavailable error encountered, returning cannot proceed with location unavailable", v13, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2348DE308](v14, -1, -1);
        MEMORY[0x2348DE308](v13, -1, -1);
      }

      v17 = 2;
    }
    else
    {
      if (qword_25415C170 != -1)
        swift_once();
      v18 = sub_231413780();
      sub_2312CE3B8(v18, (uint64_t)qword_254162F00);
      v19 = sub_231413768();
      v20 = sub_23141498C();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc();
        v22 = swift_slowAlloc();
        v26[0] = v22;
        *(_DWORD *)v21 = 136315138;
        v23 = sub_2314151A8();
        sub_23133180C(v23, v24, v26);
        sub_231414CBC();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2312C8000, v19, v20, "[%s] Location unavailable error encountered, returning cannot proceed with location unavailable", v21, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2348DE308](v22, -1, -1);
        MEMORY[0x2348DE308](v21, -1, -1);
      }

      v17 = 5;
    }
    a2(v17, 2);

  }
  swift_beginAccess();
  *(_QWORD *)(a4 + 16) = 0;
  return swift_release();
}

uint64_t sub_2312FEE14(void **a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  os_unfair_lock_s *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  SEL *v23;
  uint64_t v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void *v37;
  unsigned __int8 v38;
  uint64_t v39;
  uint64_t v40;
  os_unfair_lock_s *v41;
  uint64_t v42;
  id v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t, uint64_t);
  unint64_t v52;
  unint64_t v53;
  uint64_t (*v54)(uint64_t, uint64_t);
  uint64_t v55;
  void *v56;
  unsigned __int8 v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  id v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  uint8_t *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t (*v75)(uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  uint8_t *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  _QWORD v84[2];
  uint64_t (*v85)(uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88[2];

  sub_2312D1E78(0, &qword_25415C140, (void (*)(uint64_t))MEMORY[0x24BE45750]);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v84 - v14;
  v16 = *a1;
  if (objc_msgSend(v16, sel_isEligible))
  {
    v84[1] = a5;
    v85 = a3;
    v86 = a4;
    v17 = *(_QWORD *)(*sub_2312CEA5C((_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 40)) + 104);
    v18 = v17 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v17 + 16);
    v19 = (os_unfair_lock_s *)(v17 + ((*(unsigned int *)(*(_QWORD *)v17 + 48) + 3) & 0x1FFFFFFFCLL));
    swift_retain();
    os_unfair_lock_lock(v19);
    sub_2313F72B8(v18, (uint64_t)v15);
    os_unfair_lock_unlock(v19);
    swift_release();
    v20 = sub_23141357C();
    v21 = *(_QWORD *)(v20 - 8);
    v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    if (v22(v15, 1, v20) == 1)
    {
      sub_2312F1A20((uint64_t)v15, &qword_25415C140, (void (*)(uint64_t))MEMORY[0x24BE45750]);
    }
    else
    {
      v37 = (void *)sub_231413588();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v15, v20);
      v38 = objc_msgSend(v37, sel_isRequirementSatisfiedWithIdentifier_, *MEMORY[0x24BDD2D28]);

      if ((v38 & 1) == 0)
      {
        if (qword_25415C170 != -1)
          swift_once();
        v68 = sub_231413780();
        sub_2312CE3B8(v68, (uint64_t)qword_254162F00);
        v69 = sub_231413768();
        v70 = sub_23141498C();
        if (os_log_type_enabled(v69, v70))
        {
          v71 = (uint8_t *)swift_slowAlloc();
          v72 = swift_slowAlloc();
          v88[0] = v72;
          *(_DWORD *)v71 = 136315138;
          v73 = sub_2314151A8();
          v87 = sub_23133180C(v73, v74, v88);
          sub_231414CBC();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_2312C8000, v69, v70, "[%s] Heart rate disabled, returning cannot proceed", v71, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2348DE308](v72, -1, -1);
          MEMORY[0x2348DE308](v71, -1, -1);
        }

        v75 = v85;
        v76 = 1;
        return v75(v76, 2);
      }
    }
    v39 = *(_QWORD *)(*sub_2312CEA5C((_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 40)) + 104);
    v40 = v39 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v39 + 16);
    v41 = (os_unfair_lock_s *)(v39 + ((*(unsigned int *)(*(_QWORD *)v39 + 48) + 3) & 0x1FFFFFFFCLL));
    swift_retain();
    os_unfair_lock_lock(v41);
    sub_2313F72B8(v40, (uint64_t)v13);
    os_unfair_lock_unlock(v41);
    swift_release();
    if (v22(v13, 1, v20) == 1)
    {
      sub_2312F1A20((uint64_t)v13, &qword_25415C140, (void (*)(uint64_t))MEMORY[0x24BE45750]);
LABEL_17:
      if (qword_25415C170 != -1)
        swift_once();
      v58 = sub_231413780();
      sub_2312CE3B8(v58, (uint64_t)qword_254162F00);
      v59 = sub_231413768();
      v60 = sub_23141498C();
      if (os_log_type_enabled(v59, v60))
      {
        v61 = (uint8_t *)swift_slowAlloc();
        v62 = swift_slowAlloc();
        v88[0] = v62;
        *(_DWORD *)v61 = 136315138;
        v63 = sub_2314151A8();
        v87 = sub_23133180C(v63, v64, v88);
        sub_231414CBC();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2312C8000, v59, v60, "[%s] Determined can proceed", v61, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2348DE308](v62, -1, -1);
        MEMORY[0x2348DE308](v61, -1, -1);
      }

      return v85(0, 128);
    }
    v56 = (void *)sub_231413588();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v13, v20);
    v57 = objc_msgSend(v56, sel_isRequirementSatisfiedWithIdentifier_, *MEMORY[0x24BDD2DB8]);

    if ((v57 & 1) != 0)
      goto LABEL_17;
    if (qword_25415C170 != -1)
      swift_once();
    v77 = sub_231413780();
    sub_2312CE3B8(v77, (uint64_t)qword_254162F00);
    v78 = sub_231413768();
    v79 = sub_23141498C();
    if (os_log_type_enabled(v78, v79))
    {
      v80 = (uint8_t *)swift_slowAlloc();
      v81 = swift_slowAlloc();
      v88[0] = v81;
      *(_DWORD *)v80 = 136315138;
      v82 = sub_2314151A8();
      v87 = sub_23133180C(v82, v83, v88);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v78, v79, "[%s] Wrist detect disabled, returning cannot proceed", v80, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v81, -1, -1);
      MEMORY[0x2348DE308](v80, -1, -1);
    }

    v75 = v85;
    v76 = 6;
    return v75(v76, 2);
  }
  v23 = (SEL *)&unk_250035000;
  if (((unint64_t)objc_msgSend(v16, sel_ineligibilityReasons) & 0x39) != 0)
  {
    if (qword_25415C170 != -1)
      swift_once();
    v24 = sub_231413780();
    sub_2312CE3B8(v24, (uint64_t)qword_254162F00);
    v25 = v16;
    v26 = sub_231413768();
    v27 = sub_23141498C();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v29 = swift_slowAlloc();
      v88[0] = v29;
      *(_DWORD *)v28 = 136315394;
      v30 = sub_2314151A8();
      v85 = a3;
      v87 = sub_23133180C(v30, v31, v88);
      v86 = a4;
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2080;
      v32 = objc_msgSend(v25, sel_ineligibilityReasonsDescription);
      v33 = sub_2314146BC();
      v35 = v34;

      a3 = v85;
      v87 = sub_23133180C(v33, v35, v88);
      sub_231414CBC();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v26, v27, "[%s] Cannot proceed due to location based onboarding ineligibility (%s", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v29, -1, -1);
      v36 = v28;
      v23 = (SEL *)&unk_250035000;
      MEMORY[0x2348DE308](v36, -1, -1);

    }
    else
    {

    }
    v66 = objc_msgSend(v25, v23[320]);
    v67 = 1;
  }
  else
  {
    if (qword_25415C170 != -1)
      swift_once();
    v42 = sub_231413780();
    sub_2312CE3B8(v42, (uint64_t)qword_254162F00);
    v43 = v16;
    v44 = sub_231413768();
    v45 = sub_23141498C();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = swift_slowAlloc();
      v85 = (uint64_t (*)(uint64_t, uint64_t))swift_slowAlloc();
      v88[0] = (uint64_t)v85;
      *(_DWORD *)v46 = 136315394;
      v47 = sub_2314151A8();
      v86 = a4;
      v87 = sub_23133180C(v47, v48, v88);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v46 + 12) = 2080;
      v49 = objc_msgSend(v43, sel_ineligibilityReasonsDescription);
      v50 = sub_2314146BC();
      v51 = a3;
      v53 = v52;

      v87 = sub_23133180C(v50, v53, v88);
      sub_231414CBC();

      a3 = v51;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v44, v45, "[%s] Cannot proceed due to generic onboarding ineligibility (%s", (uint8_t *)v46, 0x16u);
      v54 = v85;
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v54, -1, -1);
      v55 = v46;
      v23 = (SEL *)&unk_250035000;
      MEMORY[0x2348DE308](v55, -1, -1);

    }
    else
    {

    }
    v66 = objc_msgSend(v43, v23[320]);
    v67 = 0;
  }
  return a3((uint64_t)v66, v67);
}

uint64_t sub_2312FF8C4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  if (a1 == 1)
  {
    v10 = 64;
  }
  else
  {
    if (a1 != 2)
    {
      if (qword_25415C170 != -1)
        swift_once();
      v3 = sub_231413780();
      sub_2312CE3B8(v3, (uint64_t)qword_254162F00);
      v4 = sub_231413768();
      v5 = sub_231414980();
      if (os_log_type_enabled(v4, v5))
      {
        v6 = swift_slowAlloc();
        v7 = swift_slowAlloc();
        v12 = v7;
        *(_DWORD *)v6 = 136315394;
        v8 = sub_2314151A8();
        sub_23133180C(v8, v9, &v12);
        sub_231414CBC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v6 + 12) = 2048;
        sub_231414CBC();
        _os_log_impl(&dword_2312C8000, v4, v5, "[%s] User encountered notification authorization status other than authorized or denied (%ld), proceeding", (uint8_t *)v6, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2348DE308](v7, -1, -1);
        MEMORY[0x2348DE308](v6, -1, -1);
      }

    }
    a1 = 0;
    v10 = 128;
  }
  return a2(a1, v10);
}

uint64_t sub_2312FFA90()
{
  uint64_t v0;

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 16);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 56);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AFibBurdenOnboardingModel()
{
  return objc_opt_self();
}

_BYTE *initializeBufferWithCopyOfBuffer for AFibBurdenOnboardingStage(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for AFibBurdenOnboardingStage(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AFibBurdenOnboardingStage(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_2312FFBC4 + 4 * byte_231418D6C[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_2312FFBF8 + 4 * byte_231418D67[v4]))();
}

uint64_t sub_2312FFBF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2312FFC00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2312FFC08);
  return result;
}

uint64_t sub_2312FFC14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2312FFC1CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_2312FFC20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2312FFC28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2312FFC34(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_2312FFC3C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenOnboardingStage()
{
  return &type metadata for AFibBurdenOnboardingStage;
}

uint64_t initializeWithTake for AFibBurdenPDFChartVerticalAxisProvider.AxisStyle(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for AFibBurdenPDFChartVerticalAxisProvider.AxisStyle(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AFibBurdenPDFChartVerticalAxisProvider.AxisStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_2312FFCF4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_2312FFD0C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenOnboardingCannotProgressReason()
{
  return &type metadata for AFibBurdenOnboardingCannotProgressReason;
}

uint64_t sub_2312FFD34()
{
  return sub_2312CCC24(&qword_255ECBC90, (uint64_t (*)(uint64_t))sub_2312FFD60, MEMORY[0x24BEE12E0]);
}

void sub_2312FFD60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECBC98)
  {
    v0 = sub_2314147F4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECBC98);
  }
}

unint64_t sub_2312FFDB8()
{
  unint64_t result;

  result = qword_255ECBCA0;
  if (!qword_255ECBCA0)
  {
    result = MEMORY[0x2348DE248](&unk_231418F44, &type metadata for AFibBurdenOnboardingStage);
    atomic_store(result, (unint64_t *)&qword_255ECBCA0);
  }
  return result;
}

uint64_t sub_2312FFDFC(uint64_t a1, unsigned __int8 a2, uint64_t a3, unsigned __int8 a4)
{
  if (a2 >> 6)
  {
    if (a2 >> 6 == 1)
    {
      if ((a4 & 0xC0) == 0x40)
        return ((a3 ^ a1) & 1) == 0;
    }
    else if ((a4 & 0xC0) == 0x80 && !a3 && a4 == 128)
    {
      return 1;
    }
  }
  else if (a4 <= 0x3Fu)
  {
    if (a2)
    {
      if (a2 != 1)
        return ((uint64_t (*)(void))((char *)&loc_2312FFEA8 + 4 * byte_231418D71[a1]))();
      if (a4 == 1 && a1 == a3)
        return 1;
    }
    else if (!a4 && a1 == a3)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_2312FFF54(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if (!a2)
  {
    if (!a4)
      return a1 == a3;
    return 0;
  }
  if (a2 != 1)
    return ((uint64_t (*)(void))((char *)&loc_2312FFF9C + 4 * byte_231418D78[a1]))();
  if (a4 != 1)
    return 0;
  return a1 == a3;
}

void sub_231300050()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECBCA8)
  {
    sub_2313000C8();
    sub_2312CCC24(&qword_255ECBCB8, (uint64_t (*)(uint64_t))sub_2313000C8, MEMORY[0x24BDB9E58]);
    v0 = sub_231413E10();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECBCA8);
  }
}

void sub_2313000C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECBCB0)
  {
    v0 = sub_231413DEC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECBCB0);
  }
}

uint64_t sub_23130012C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_231300150()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23130017C(void (*a1)(__int128 *), uint64_t a2)
{
  uint64_t v2;

  return sub_2312FE268(a1, a2, *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24), *(void **)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_231300190@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
  return swift_retain();
}

uint64_t sub_23130019C(uint64_t a1, __int16 a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t *);
  uint64_t v5;
  __int16 v6;

  v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  v5 = a1;
  v6 = a2 & 0x1FF;
  return v3(&v5);
}

uint64_t sub_2313001D8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2313001FC(uint64_t a1)
{
  uint64_t v1;

  return sub_2312FF8C4(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 16));
}

uint64_t sub_231300208()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23130022C(void *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(id))(v1 + 16))(objc_msgSend(a1, sel_authorizationStatus));
}

void sub_231300258()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECBCE8)
  {
    sub_2312CEA10(255, &qword_255ECBCE0);
    v0 = sub_231414CB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECBCE8);
  }
}

uint64_t sub_2313002C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AFibBurdenOnboardingDetails(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_231300304(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312D1E78(0, (unint64_t *)&qword_255ECBCC8, (void (*)(uint64_t))MEMORY[0x24BDCBDE0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_231300358()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23130037C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2313003A8(void **a1)
{
  uint64_t v1;

  return sub_2312FEACC(a1, *(void (**)(uint64_t, uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_2313003B4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2313003E0(void **a1)
{
  uint64_t v1;

  return sub_2312FEE14(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(uint64_t, uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

void sub_2313003EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECBCF0)
  {
    sub_23130046C();
    sub_2312CEA10(255, (unint64_t *)&qword_25415DF60);
    v0 = sub_231413D14();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECBCF0);
  }
}

unint64_t sub_23130046C()
{
  unint64_t result;

  result = qword_255ECBCF8;
  if (!qword_255ECBCF8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255ECBCF8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AFibBurdenOnboardingProgressionState(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3E && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 62);
  v3 = (*(_BYTE *)(a1 + 8) & 0x3C | (*(unsigned __int8 *)(a1 + 8) >> 6)) ^ 0x3F;
  if (v3 >= 0x3D)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for AFibBurdenOnboardingProgressionState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3D)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 62;
    if (a3 >= 0x3E)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0x3E)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_BYTE *)(result + 8) = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_23130054C(uint64_t a1)
{
  unsigned int v1;
  int v2;
  unsigned int v3;

  v1 = *(unsigned __int8 *)(a1 + 8);
  v2 = (char)v1;
  v3 = v1 >> 6;
  if (v2 >= 0)
    return v3;
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_23130056C(uint64_t result)
{
  *(_BYTE *)(result + 8) &= 0x3Fu;
  return result;
}

uint64_t sub_23130057C(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    *(_BYTE *)(result + 8) = *(_BYTE *)(result + 8) & 3 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(_QWORD *)result = a2 - 2;
    *(_BYTE *)(result + 8) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenOnboardingProgressionState()
{
  return &type metadata for AFibBurdenOnboardingProgressionState;
}

uint64_t getEnumTagSinglePayload for AFibBurdenOnboardingWarningReason(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AFibBurdenOnboardingWarningReason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_231300694 + 4 * byte_231418D84[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2313006C8 + 4 * byte_231418D7F[v4]))();
}

uint64_t sub_2313006C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2313006D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2313006D8);
  return result;
}

uint64_t sub_2313006E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2313006ECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2313006F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2313006F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_231300704(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenOnboardingWarningReason()
{
  return &type metadata for AFibBurdenOnboardingWarningReason;
}

unint64_t sub_231300724()
{
  unint64_t result;

  result = qword_255ECBD08;
  if (!qword_255ECBD08)
  {
    result = MEMORY[0x2348DE248](&unk_231418FF4, &type metadata for AFibBurdenOnboardingWarningReason);
    atomic_store(result, (unint64_t *)&qword_255ECBD08);
  }
  return result;
}

id sub_23130076C(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  id v5;
  id v6;

  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedInstanceForHealthStore_, a1);
  if (!v2)
    return 0;
  v3 = v2;
  v4 = (void *)sub_2314148E4();
  v5 = objc_msgSend(v3, sel_displayTypeWithIdentifier_, v4);

  if (!v5)
  {

    return 0;
  }
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A7D8]), sel_initWithDisplayType_healthStore_shouldEmbedInScrollView_, v5, a1, 0);

  return v6;
}

id sub_231300830@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  id v4;
  uint64_t v5;
  void (**v6)(void *);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = objc_msgSend(a1, sel_profileIdentifier);
  v4 = objc_msgSend(v3, sel_type);

  if (v4 == (id)1)
  {
    sub_231301B4C();
    v6 = (void (**)(void *))((char *)a2 + *(int *)(v5 + 64));
    if (qword_25415E610 != -1)
      swift_once();
    *a2 = sub_231411374();
    a2[1] = v7;
    a2[2] = sub_231411374();
    a2[3] = v8;
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = a1;
    *v6 = sub_231301CA0;
    v6[1] = (void (*)(void *))v9;
    v10 = *MEMORY[0x24BE3F8B0];
    v11 = sub_231411BFC();
    (*(void (**)(void (**)(void *), uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v6, v10, v11);
    v12 = *MEMORY[0x24BE3F8E8];
    v13 = sub_231411C08();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(a2, v12, v13);
    return a1;
  }
  else
  {
    if (qword_25415E610 != -1)
      swift_once();
    *a2 = sub_231411374();
    a2[1] = v15;
    *((_BYTE *)a2 + 16) = 0;
    v16 = *MEMORY[0x24BE3F930];
    v17 = sub_231411C08();
    return (id)(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(a2, v16, v17);
  }
}

void sub_231300AB0(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v3 = a2;
  sub_2314149F8();
  v4 = objc_allocWithZone((Class)sub_231413468());
  v7 = (id)sub_23141345C();
  objc_msgSend(v7, sel_setAccessType_, 1);
  v5 = objc_msgSend(a1, sel_navigationController);
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, sel_pushViewController_animated_, v7, 1);

  }
}

void sub_231300B5C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  id v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  void *v25;
  id v26;
  unint64_t v27;
  void (*v28)(unint64_t, uint64_t, uint64_t);
  void (*v29)(unint64_t, uint64_t, uint64_t);
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(unint64_t, uint64_t, uint64_t);
  void (*v51)(unint64_t, uint64_t, uint64_t);
  void (*v52)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(unint64_t, uint64_t, uint64_t);
  unint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  void (*v66)(unint64_t, uint64_t, uint64_t);
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v74;
  uint64_t v75;
  void (*v76)(unint64_t, uint64_t, uint64_t);
  void (*v77)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  void (*v82)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(uint64_t, uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(char *, char *, uint64_t);
  char *v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  unsigned int v105;
  unint64_t v106;
  unint64_t v107;
  void (*v108)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v109;
  unint64_t v110;
  void (*v111)(unint64_t, uint64_t, uint64_t);
  char *v112;
  uint64_t v113;
  char *v114;

  v2 = sub_231411C08();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v114 = (char *)&v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v112 = (char *)&v99 - v6;
  sub_2312D6DD8(0, &qword_25415C0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v99 - v8;
  sub_231301870(0);
  v101 = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v113 = (uint64_t)&v99 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v99 - v17;
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v19((char *)&v99 - v17, 1, 1, v2);
  v100 = a1;
  v20 = sub_23130076C((uint64_t)a1);
  if (v20)
  {
    v21 = v20;
    sub_231301C40((uint64_t)v18);
    *(_QWORD *)v18 = v21;
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v18, *MEMORY[0x24BE3F898], v2);
    v19(v18, 0, 1, v2);
  }
  v108 = v19;
  sub_2312D6DD8(0, &qword_255ECBD18, (uint64_t (*)(uint64_t))sub_231301870, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v22 = *(_QWORD *)(v11 + 72);
  v23 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v103 = swift_allocObject();
  *(_OWORD *)(v103 + 16) = xmmword_231419060;
  if (qword_25415E610 != -1)
    swift_once();
  v104 = v9;
  v102 = v18;
  v24 = (id)qword_254163058;
  v25 = (void *)sub_23141468C();
  v26 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v25, v24);

  if (!v26)
  {
    __break(1u);
    goto LABEL_18;
  }
  v27 = v103 + v23;
  *(_QWORD *)v27 = v26;
  *(_BYTE *)(v27 + 8) = 0;
  v28 = *(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 104);
  v28(v27, *MEMORY[0x24BE3F908], v2);
  v29 = v28;
  v30 = v108;
  v108((char *)v27, 0, 1, v2);
  v31 = (uint64_t *)(v27 + v22);
  v110 = 0x8000000231427400;
  *v31 = sub_231411374();
  v31[1] = v32;
  v28(v27 + v22, *MEMORY[0x24BE3F910], v2);
  v111 = v28;
  v30((char *)(v27 + v22), 0, 1, v2);
  v99 = 2 * v22;
  v109 = v22;
  v33 = v27 + 2 * v22;
  *(_QWORD *)v33 = sub_231411374();
  *(_QWORD *)(v33 + 8) = v34;
  *(_BYTE *)(v33 + 16) = 0;
  v35 = *MEMORY[0x24BE3F930];
  v29(v33, v35, v2);
  v30((char *)v33, 0, 1, v2);
  v36 = v27 + v99 + v22;
  *(_QWORD *)v36 = sub_231411374();
  *(_QWORD *)(v36 + 8) = v37;
  *(_BYTE *)(v36 + 16) = 0;
  v105 = v35;
  v111(v36, v35, v2);
  v30((char *)v36, 0, 1, v2);
  v107 = v27;
  v38 = v109;
  v39 = (uint64_t *)(v27 + 4 * v109);
  v106 = 0xD000000000000013;
  *v39 = sub_231411374();
  v39[1] = v40;
  v39[2] = sub_231411374();
  v39[3] = v41;
  v42 = v104;
  sub_2314114A0();
  v43 = sub_2314114AC();
  v44 = v38;
  v45 = *(_QWORD *)(v43 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v42, 1, v43) == 1)
  {
LABEL_18:
    __break(1u);
    return;
  }
  sub_231301B4C();
  v47 = (char *)v39 + *(int *)(v46 + 64);
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v47, v42, v43);
  v48 = *MEMORY[0x24BE3F8B8];
  v49 = sub_231411BFC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 104))(v47, v48, v49);
  v50 = v111;
  v111((unint64_t)v39, *MEMORY[0x24BE3F8E8], v2);
  v51 = v50;
  v52 = v108;
  v108((char *)v39, 0, 1, v2);
  v53 = v107;
  v54 = (uint64_t *)(v107 + 5 * v44);
  *v54 = sub_231411374();
  v54[1] = v55;
  v54[2] = 0;
  LODWORD(v104) = *MEMORY[0x24BE3F8D0];
  v56 = v104;
  v51(v53 + 5 * v44, v104, v2);
  v52((char *)(v53 + 5 * v44), 0, 1, v2);
  v57 = (void (*)(uint64_t *, _QWORD, uint64_t, uint64_t))v52;
  sub_231301BB8((uint64_t)v102, v53 + 6 * v44);
  v58 = (uint64_t *)(v53 + 7 * v44);
  *v58 = sub_231411374();
  v58[1] = v59;
  v58[2] = 0;
  v60 = v56;
  v61 = v111;
  v111((unint64_t)v58, v60, v2);
  v52((char *)v58, 0, 1, v2);
  v62 = v53 + 8 * v44;
  *(_QWORD *)v62 = sub_231411374();
  *(_QWORD *)(v62 + 8) = v63;
  *(_BYTE *)(v62 + 16) = 0;
  v61(v62, v105, v2);
  v52((char *)v62, 0, 1, v2);
  sub_231300830(v100, (uint64_t *)(v53 + 9 * v44));
  v52((char *)(v53 + 9 * v44), 0, 1, v2);
  v64 = (uint64_t *)(v53 + 10 * v44);
  *v64 = sub_231411374();
  v64[1] = v65;
  v64[2] = 0;
  v66 = v111;
  v111((unint64_t)v64, v104, v2);
  v57(v64, 0, 1, v2);
  v67 = v53 + 11 * v44;
  *(_QWORD *)v67 = sub_231411374();
  *(_QWORD *)(v67 + 8) = v68;
  *(_BYTE *)(v67 + 16) = 0;
  v69 = v105;
  v66(v67, v105, v2);
  v57((uint64_t *)v67, 0, 1, v2);
  v70 = v109;
  v71 = (uint64_t *)(v53 + 12 * v109);
  *v71 = sub_231411374();
  v71[1] = v72;
  v71[2] = 0;
  v66(v53 + 12 * v70, v104, v2);
  v73 = v108;
  v108((char *)(v53 + 12 * v70), 0, 1, v2);
  v74 = v53 + 13 * v70;
  *(_QWORD *)v74 = sub_231411374();
  *(_QWORD *)(v74 + 8) = v75;
  *(_BYTE *)(v74 + 16) = 0;
  v76 = v111;
  v111(v74, v69, v2);
  v73((char *)v74, 0, 1, v2);
  v77 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v73;
  v78 = v107;
  v79 = v109;
  v80 = (uint64_t *)(v107 + 14 * v109);
  *v80 = sub_231411374();
  v80[1] = v81;
  v80[2] = 0;
  v76(v78 + 14 * v79, v104, v2);
  v77(v78 + 14 * v79, 0, 1, v2);
  v82 = v77;
  v83 = v79;
  v79 *= 16;
  v84 = v78 + v79 - v83;
  *(_QWORD *)v84 = sub_231411374();
  *(_QWORD *)(v84 + 8) = v85;
  *(_BYTE *)(v84 + 16) = 0;
  v86 = v105;
  v87 = (void (*)(uint64_t, uint64_t, uint64_t))v111;
  v111(v84, v105, v2);
  v82(v84, 0, 1, v2);
  v88 = v78 + v79;
  *(_QWORD *)v88 = sub_231411374();
  *(_QWORD *)(v88 + 8) = v89;
  *(_BYTE *)(v88 + 16) = 0;
  v87(v78 + v79, v86, v2);
  v82(v78 + v79, 0, 1, v2);
  v90 = MEMORY[0x24BEE4AF8];
  v91 = 17;
  v92 = v78;
  v93 = v109;
  do
  {
    v94 = v113;
    sub_231301BB8(v92, v113);
    sub_231301BFC(v94, (uint64_t)v14);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v14, 1, v2) == 1)
    {
      sub_231301C40((uint64_t)v14);
    }
    else
    {
      v95 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
      v96 = v112;
      v95(v112, v14, v2);
      v95(v114, v96, v2);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v90 = sub_2312CDA6C(0, *(_QWORD *)(v90 + 16) + 1, 1, v90);
      v98 = *(_QWORD *)(v90 + 16);
      v97 = *(_QWORD *)(v90 + 24);
      if (v98 >= v97 >> 1)
        v90 = sub_2312CDA6C(v97 > 1, v98 + 1, 1, v90);
      *(_QWORD *)(v90 + 16) = v98 + 1;
      v95((char *)(v90+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v98), v114, v2);
    }
    v92 += v93;
    --v91;
  }
  while (v91);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_231301C40((uint64_t)v102);
}

void sub_231301870(uint64_t a1)
{
  sub_2312D6DD8(a1, &qword_255ECBD10, (uint64_t (*)(uint64_t))MEMORY[0x24BE3F938], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

void sub_23130188C()
{
  void **v0;

  sub_231300B5C(*v0);
}

unint64_t sub_231301894()
{
  return 0xD000000000000030;
}

uint64_t sub_2313018B0()
{
  if (qword_25415E610 != -1)
    swift_once();
  return sub_231411374();
}

uint64_t sub_231301940()
{
  if (qword_25415E610 != -1)
    swift_once();
  return sub_231411374();
}

uint64_t sub_2313019D8()
{
  if (qword_25415E610 != -1)
    swift_once();
  return sub_231411374();
}

void sub_231301A6C()
{
  id v0;
  void *v1;
  id v2;

  if (qword_25415E610 != -1)
    swift_once();
  v0 = (id)qword_254163058;
  v1 = (void *)sub_23141468C();
  v2 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v1, v0);

  if (!v2)
    __break(1u);
}

unint64_t sub_231301B28()
{
  return 0xD000000000000014;
}

void sub_231301B4C()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_255ECBD20)
  {
    sub_231411BFC();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_255ECBD20);
  }
}

uint64_t sub_231301BB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_231301870(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_231301BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_231301870(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_231301C40(uint64_t a1)
{
  uint64_t v2;

  sub_231301870(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_231301C7C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_231301CA0(void *a1)
{
  uint64_t v1;

  sub_231300AB0(a1, *(void **)(v1 + 16));
}

ValueMetadata *type metadata accessor for CardioFitnessOverviewArticleDataProvider()
{
  return &type metadata for CardioFitnessOverviewArticleDataProvider;
}

uint64_t sub_231301CB8()
{
  unint64_t inited;
  uint64_t v1;

  sub_2312D3AD4();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2314186B0;
  sub_2312D3C68(0, (unint64_t *)&qword_25415DEC8);
  *(_QWORD *)(inited + 32) = MEMORY[0x2348DD384]((id)*MEMORY[0x24BDD36A0]);
  *(_QWORD *)(inited + 40) = MEMORY[0x2348DD384]((id)*MEMORY[0x24BDD35B8]);
  sub_2312D3C68(0, (unint64_t *)&qword_25415DEC0);
  *(_QWORD *)(inited + 48) = MEMORY[0x2348DD378]((id)*MEMORY[0x24BDD2978]);
  sub_2314147B8();
  v1 = sub_2313F4934(inited);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t type metadata accessor for HighHeartRateNotificationsFeatureStatusActionHandler()
{
  uint64_t result;

  result = qword_25415C1A8;
  if (!qword_25415C1A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_231301DDC()
{
  return swift_initClassMetadata2();
}

void sub_231301E18()
{
  uint64_t ObjectType;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t (*v15)(uint64_t);
  void (*v16)(char *, uint64_t);
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  NSObject *v27;
  id v28;
  id v29;
  void *v30;
  uint64_t v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[2];
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56[6];

  ObjectType = swift_getObjectType();
  sub_2312E9730(0);
  MEMORY[0x24BDAC7A8](v1);
  v50 = (char *)v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_231411D1C();
  v54 = *(_QWORD *)(v3 - 8);
  v55 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2314120AC();
  v52 = *(_QWORD *)(v6 - 8);
  v53 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v51 = (char *)v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v49 - v9;
  v11 = sub_231412F64();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231413210();
  sub_2314130FC();
  v15 = (uint64_t (*)(uint64_t))MEMORY[0x24BE449A8];
  sub_2312CCC24(&qword_255ECB630, (uint64_t (*)(uint64_t))MEMORY[0x24BE449A8], MEMORY[0x24BE449B8]);
  sub_2312CCC24(&qword_255ECCDA0, v15, MEMORY[0x24BE449B0]);
  sub_231412F58();
  v16 = *(void (**)(char *, uint64_t))(v12 + 8);
  v16(v14, v11);
  if (!v56[0])
  {
    if (qword_25415DF98 != -1)
      swift_once();
    v31 = sub_231413780();
    sub_2312CE3B8(v31, (uint64_t)qword_254162FF0);
    v27 = sub_231413768();
    v32 = sub_231414980();
    if (os_log_type_enabled(v27, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      v56[0] = v34;
      *(_DWORD *)v33 = 136315138;
      v35 = sub_2314151A8();
      v56[5] = sub_23133180C(v35, v36, v56);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v27, v32, "[%s] Could not access action handler user data!", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v34, -1, -1);
      MEMORY[0x2348DE308](v33, -1, -1);
    }
LABEL_15:

    return;
  }
  v49[1] = ObjectType;
  sub_231413210();
  sub_231412F40();
  v16(v14, v11);
  sub_2312CEA5C(v56, v56[3]);
  v17 = (void *)sub_231412EE0();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v56);
  sub_231413210();
  v18 = (void *)sub_231412F4C();
  v16(v14, v11);
  sub_231413210();
  sub_231411D88();
  v16(v14, v11);
  sub_2314130D8();
  v20 = v54;
  v19 = v55;
  v21 = (*(uint64_t (**)(char *, uint64_t))(v54 + 88))(v5, v55);
  if (v21 == *MEMORY[0x24BE41298])
  {
    v23 = (uint64_t)v51;
    v22 = v52;
    v24 = v17;
    v25 = v53;
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v51, v10, v53);
    v26 = objc_allocWithZone((Class)type metadata accessor for TachycardiaSettingsViewController(0));
    v27 = v24;
    v28 = sub_231320514(v27, v23);

    v29 = objc_msgSend(v18, sel_navigationController);
    if (v29)
    {
      v30 = v29;
      objc_msgSend(v29, sel_pushViewController_animated_, v28, 1);

      swift_release();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v25);
      return;
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v25);

    swift_release();
    goto LABEL_15;
  }
  v37 = v17;
  if (v21 == *MEMORY[0x24BE412A0])
  {
    v38 = (uint64_t)v51;
    v39 = v52;
    v40 = v53;
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v51, v10, v53);
    v41 = objc_allocWithZone((Class)type metadata accessor for TachycardiaSettingsViewController(0));
    v42 = v37;
    v43 = sub_231320514(v42, v38);

    sub_23136863C();
    v44 = v43;
    sub_231412F10();

    v45 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A728]), sel_initWithRootViewController_, v44);
    objc_msgSend(v18, sel_presentViewController_animated_completion_, v45, 1, 0);

    swift_release();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v10, v40);
  }
  else if (v21 == *MEMORY[0x24BE41288] || v21 == *MEMORY[0x24BE41280])
  {
    v46 = (uint64_t)v50;
    sub_2314130F0();
    v47 = sub_2314114AC();
    v48 = *(_QWORD *)(v47 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47) == 1)
    {
      (*(void (**)(char *, uint64_t))(v52 + 8))(v10, v53);
      swift_release();

      sub_2312F0614(v46);
    }
    else
    {
      sub_23141147C();

      swift_release();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v10, v53);
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v46, v47);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v52 + 8))(v10, v53);
    swift_release();

    (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v19);
  }
}

uint64_t sub_2313024BC(uint64_t a1)
{
  objc_class *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v10;

  v3 = sub_231412F64();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_allocWithZone(v1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  v8 = sub_23141321C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v8;
}

id sub_231302564()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HighHeartRateNotificationsFeatureStatusActionHandler();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_231302598()
{
  return type metadata accessor for HighHeartRateNotificationsFeatureStatusActionHandler();
}

uint64_t sub_2313025A0()
{
  return sub_2312CCC24(&qword_25415C1A0, (uint64_t (*)(uint64_t))type metadata accessor for HighHeartRateNotificationsFeatureStatusActionHandler, (uint64_t)&unk_231419168);
}

uint64_t type metadata accessor for AFibBurdenOnboardingGetStartedViewController()
{
  uint64_t result;

  result = qword_255ECBD58;
  if (!qword_255ECBD58)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23130260C()
{
  return swift_initClassMetadata2();
}

id sub_23130266C()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;

  *(_QWORD *)&v0[qword_255ECBD40 + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v0[qword_255ECBD50] = 0;
  type metadata accessor for AFibBurdenGetStartedDataSource(0);
  swift_allocObject();
  v1 = v0;
  *(_QWORD *)&v1[qword_255ECBD48] = sub_231337820();

  if (qword_255ECAAD8 != -1)
    swift_once();
  sub_231411374();
  sub_231411374();
  swift_retain();
  v2 = (void *)sub_231412F34();
  sub_231303024();
  v3 = v2;
  swift_retain();
  sub_23141318C();
  swift_release();

  return v3;
}

void sub_231302854()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  objc_class *StartedViewController;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  int v21;
  _BOOL8 v22;
  uint64_t v23;
  _BYTE v24[32];
  char v25[16];
  objc_super v26;

  sub_231302F8C();
  MEMORY[0x24BDAC7A8](v1);
  v3 = &v24[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for AFibBurdenOnboardingDetails(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v5);
  v9 = &v24[-v8];
  StartedViewController = (objc_class *)type metadata accessor for AFibBurdenOnboardingGetStartedViewController();
  v26.receiver = v0;
  v26.super_class = StartedViewController;
  objc_msgSendSuper2(&v26, sel_viewDidLoad);
  objc_msgSend(v0, sel_hxui_addCancelButton);
  strcpy(v25, "ContinueButton");
  v25[15] = -18;
  sub_2312E42E4();
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_231418090;
  *(_QWORD *)(v11 + 32) = 0xD000000000000014;
  *(_QWORD *)(v11 + 40) = 0x8000000231427740;
  *(_QWORD *)(v11 + 48) = 0x7472617453746547;
  *(_QWORD *)(v11 + 56) = 0xEA00000000006465;
  v12 = (char *)sub_2312CDA80((_QWORD *)1, 3, 1, (_QWORD *)v11);
  *((_QWORD *)v12 + 2) = 3;
  strcpy(v12 + 64, "ContinueButton");
  v12[79] = -18;
  v13 = (void *)sub_231414788();
  swift_bridgeObjectRelease();
  v14 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v14)
  {
    sub_2314146BC();

    swift_arrayDestroy();
    v15 = (void *)sub_23141468C();
    swift_bridgeObjectRelease();
    v16 = objc_msgSend(v0, sel_hxui_addContinueButtonWithAccessibilityIdentifier_, v15);

    v17 = qword_255ECBD50;
    v18 = *(void **)&v0[qword_255ECBD50];
    *(_QWORD *)&v0[qword_255ECBD50] = v16;

    v19 = *(void **)&v0[v17];
    if (v19)
    {
      v20 = v19;
      sub_231337618(v9);
      v21 = *v9;
      sub_2312CEBD4((uint64_t)v9, type metadata accessor for AFibBurdenOnboardingDetails);
      if (v21 == 2)
      {
        v22 = 0;
      }
      else
      {
        sub_231337618(v7);
        sub_231302FE0((uint64_t)&v7[*(int *)(v4 + 20)], (uint64_t)v3);
        v23 = sub_2314112F0();
        v22 = (*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v3, 1, v23) != 1;
        sub_2312CEBD4((uint64_t)v3, (uint64_t (*)(_QWORD))sub_231302F8C);
      }
      objc_msgSend(v20, sel_setEnabled_, v22);

    }
  }
  else
  {
    swift_arrayDestroy();
    __break(1u);
  }
}

void sub_231302B64(void *a1)
{
  id v1;

  v1 = a1;
  sub_231302854();

}

uint64_t sub_231302B98(char *a1)
{
  char *v2;
  uint64_t result;
  uint64_t v4;
  void (*v5)(void);
  char *v6;

  v2 = &a1[qword_255ECBD40];
  result = MEMORY[0x2348DE3BC](&a1[qword_255ECBD40]);
  if (result)
  {
    v4 = *((_QWORD *)v2 + 1);
    swift_getObjectType();
    v5 = *(void (**)(void))(v4 + 8);
    v6 = a1;
    v5();

    return sub_2314130CC();
  }
  return result;
}

uint64_t sub_231302C28(char *a1)
{
  char *v2;
  uint64_t result;
  uint64_t v4;
  void (*v5)(void);
  char *v6;

  v2 = &a1[qword_255ECBD40];
  result = MEMORY[0x2348DE3BC](&a1[qword_255ECBD40]);
  if (result)
  {
    v4 = *((_QWORD *)v2 + 1);
    swift_getObjectType();
    v5 = *(void (**)(void))(v4 + 16);
    v6 = a1;
    v5();

    return sub_2314130CC();
  }
  return result;
}

void sub_231302CB8()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_231302CE4()
{
  uint64_t v0;

  sub_2312D2854(v0 + qword_255ECBD40);
  swift_release();

}

id sub_231302D20()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AFibBurdenOnboardingGetStartedViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_231302D54(uint64_t a1)
{
  sub_2312D2854(a1 + qword_255ECBD40);
  swift_release();

}

uint64_t sub_231302D9C()
{
  return type metadata accessor for AFibBurdenOnboardingGetStartedViewController();
}

uint64_t sub_231302DA4()
{
  return 1;
}

uint64_t sub_231302DAC()
{
  uint64_t v0;

  return MEMORY[0x2348DE3BC](v0 + qword_255ECBD40);
}

uint64_t sub_231302DDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + qword_255ECBD40 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return sub_2314130CC();
}

void sub_231302E18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  int v12;
  _BOOL8 v13;
  uint64_t v14;
  uint64_t v15;

  sub_231302F8C();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for AFibBurdenOnboardingDetails(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v15 - v8;
  v10 = *(void **)(v0 + qword_255ECBD50);
  if (v10)
  {
    v11 = v10;
    sub_231337618(v9);
    v12 = *v9;
    sub_2312CEBD4((uint64_t)v9, type metadata accessor for AFibBurdenOnboardingDetails);
    if (v12 == 2)
    {
      v13 = 0;
    }
    else
    {
      sub_231337618(v7);
      sub_231302FE0((uint64_t)&v7[*(int *)(v4 + 20)], (uint64_t)v3);
      v14 = sub_2314112F0();
      v13 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v3, 1, v14) != 1;
      sub_2312CEBD4((uint64_t)v3, (uint64_t (*)(_QWORD))sub_231302F8C);
    }
    objc_msgSend(v11, sel_setEnabled_, v13);

  }
}

void sub_231302F8C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECBCC8)
  {
    sub_2314112F0();
    v0 = sub_231414CB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECBCC8);
  }
}

uint64_t sub_231302FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_231302F8C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_231303024()
{
  unint64_t result;
  uint64_t StartedViewController;

  result = qword_255ECBDA8;
  if (!qword_255ECBDA8)
  {
    StartedViewController = type metadata accessor for AFibBurdenOnboardingGetStartedViewController();
    result = MEMORY[0x2348DE248](&unk_231419240, StartedViewController);
    atomic_store(result, (unint64_t *)&qword_255ECBDA8);
  }
  return result;
}

uint64_t sub_23130306C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t inited;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v15;

  v0 = sub_2314119E0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_231411A04();
  sub_2312D6D6C(v4, qword_254162EB8);
  sub_2312CE3B8(v4, (uint64_t)qword_254162EB8);
  sub_2314118FC();
  sub_2313036F8();
  v5 = sub_231411890();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_231416A30;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v6 + 104))(v8 + v7, *MEMORY[0x24BE474E0], v5);
  sub_2312FC108(v8);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_2312D3AD4();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_231417F90;
  sub_2312D6D30();
  *(_QWORD *)(inited + 32) = MEMORY[0x2348DD384]((id)*MEMORY[0x24BDD3378]);
  v15 = inited;
  sub_2314147B8();
  v10 = v15;
  if (v15 >> 62)
  {
    sub_231412A90();
    v13 = sub_231414F08();
    swift_bridgeObjectRelease();
    if (v13)
      goto LABEL_3;
LABEL_5:
    v12 = MEMORY[0x24BEE4B08];
    goto LABEL_6;
  }
  if (!*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_5;
LABEL_3:
  sub_2312FBF48(v10);
  v12 = v11;
LABEL_6:
  swift_bridgeObjectRelease();
  sub_231403254(v12);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BE47910], v0);
  return sub_2314119F8();
}

unint64_t sub_2313032B4()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_2313032D0()
{
  unint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2312D3AD4();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_231417F90;
  sub_2312D6D30();
  *(_QWORD *)(inited + 32) = MEMORY[0x2348DD384]((id)*MEMORY[0x24BDD3378]);
  sub_2314147B8();
  if (inited >> 62)
  {
    sub_231412A90();
    v3 = sub_231414F08();
    swift_bridgeObjectRelease();
    if (v3)
      goto LABEL_3;
LABEL_5:
    v2 = MEMORY[0x24BEE4B08];
    goto LABEL_6;
  }
  if (!*(_QWORD *)((inited & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_5;
LABEL_3:
  sub_2312FBF48(inited);
  v2 = v1;
LABEL_6:
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_2313033A8()
{
  return 0x6946417055746553;
}

uint64_t sub_2313033CC()
{
  uint64_t v0;

  v0 = type metadata accessor for AFibBurdenPromotionTileActionHandler();
  sub_23130374C();
  return v0;
}

uint64_t sub_2313033FC()
{
  uint64_t v0;
  id v1;

  v0 = sub_231411D70();
  MEMORY[0x24BDAC7A8](v0);
  if (qword_25415E610 != -1)
    swift_once();
  v1 = (id)qword_254163058;
  sub_231411D64();
  if (qword_255ECAAD8 != -1)
    swift_once();
  sub_231411374();
  sub_231411374();
  sub_231411374();
  return sub_231411F2C();
}

uint64_t sub_231303618()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC5Heart30HeartFeaturePromotionGenerator_domain;
  v2 = sub_231411A04();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_231303680()
{
  return type metadata accessor for AFibBurdenPromotionGenerator();
}

uint64_t type metadata accessor for AFibBurdenPromotionGenerator()
{
  uint64_t result;

  result = qword_25415C5D0;
  if (!qword_25415C5D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2313036C4()
{
  return swift_updateClassMetadata2();
}

void sub_2313036F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415DF20)
  {
    sub_231411890();
    v0 = sub_23141504C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415DF20);
  }
}

unint64_t sub_23130374C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ECBDB0;
  if (!qword_255ECBDB0)
  {
    v1 = type metadata accessor for AFibBurdenPromotionTileActionHandler();
    result = MEMORY[0x2348DE248](&unk_23141E840, v1);
    atomic_store(result, (unint64_t *)&qword_255ECBDB0);
  }
  return result;
}

uint64_t type metadata accessor for ElectrocardiogramPromotionTileActionHandler()
{
  uint64_t result;

  result = qword_255ECBDD8;
  if (!qword_255ECBDD8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2313037D0()
{
  return swift_initClassMetadata2();
}

_OWORD *sub_231303830@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;

  v3 = sub_231412F64();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1 + qword_255ECBDD0;
  swift_beginAccess();
  sub_231304648(v7, (uint64_t)&v13);
  if (v14)
    return sub_231304744(&v13, a1);
  sub_2313045B8((uint64_t)&v13);
  sub_231413210();
  sub_231412F40();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_2312CEA5C(&v13, v14);
  v9 = (void *)sub_231412EE0();
  v10 = objc_msgSend(v9, sel_viewControllerFactory);

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v13);
  v11 = objc_msgSend(v10, sel_createElectrocardiogramListDataProvider);

  sub_231414D04();
  sub_2314130CC();
  sub_2313046A8((uint64_t)a1, (uint64_t)&v13);
  swift_beginAccess();
  sub_2313046E4((uint64_t)&v13, v7);
  return (_OWORD *)swift_endAccess();
}

void sub_2313039BC()
{
  void *v0;
  uint64_t v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (qword_25415DF98 != -1)
    swift_once();
  v1 = sub_231413780();
  sub_2312CE3B8(v1, (uint64_t)qword_254162FF0);
  v2 = v0;
  v3 = sub_231413768();
  v4 = sub_23141498C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v9 = v6;
    *(_DWORD *)v5 = 136446466;
    swift_getObjectType();
    sub_231304610();
    v7 = sub_2314146E0();
    sub_23133180C(v7, v8, &v9);
    sub_231414CBC();

    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2082;
    sub_23133180C(0x2928706154646964, 0xE800000000000000, &v9);
    sub_231414CBC();
    _os_log_impl(&dword_2312C8000, v3, v4, "[%{public}s.%{public}s] On-boarding button tapped", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v6, -1, -1);
    MEMORY[0x2348DE308](v5, -1, -1);

  }
  else
  {

  }
  sub_231303E98();
}

void sub_231303BAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  void (*v12)(char *, uint64_t);
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;

  v3 = sub_231412F64();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v22 - v8;
  objc_msgSend(*(id *)(v1 + qword_255ECBDC8), sel_dismissOnboarding);
  type metadata accessor for ElectrocardiogramPromotionTileActionHandler();
  sub_2312CCC24((unint64_t *)&unk_255ECBE38, (uint64_t (*)(uint64_t))type metadata accessor for ElectrocardiogramPromotionTileActionHandler, (uint64_t)&unk_231419360);
  v10 = sub_2314131B0();
  if (v10)
  {
    v11 = (void *)v10;
    sub_231413210();
    sub_231412F40();
    v12 = *(void (**)(char *, uint64_t))(v4 + 8);
    v12(v9, v3);
    sub_2312CEA5C(&v23, v24);
    v13 = (void *)sub_231412EE0();
    v14 = objc_msgSend(v13, sel_viewControllerFactory);

    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v23);
    sub_231303830(&v23);
    sub_2312CEA5C(&v23, v24);
    v15 = sub_231415064();
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v23);
    v16 = objc_msgSend(v14, sel_createElectrocardiogramDataMetadataViewControllerWithElectrocardiogram_dataProvider_, a1, v15);

    sub_2314130CC();
    sub_231413210();
    v17 = (void *)sub_231412F4C();
    v12(v7, v3);
    v18 = objc_msgSend(v17, sel_tabBarController);

    if (v18)
    {
      sub_2312CF374(0, (unint64_t *)&qword_25415BD40, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
      v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_231417F90;
      *(_QWORD *)(v19 + 32) = v16;
      *(_QWORD *)&v23 = v19;
      sub_2314147B8();
      v20 = v23;
      v21 = v16;
      sub_23132764C(v11, v20, 0);

      swift_bridgeObjectRelease();
    }

  }
}

void sub_231303E44(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_231303BAC((uint64_t)v4);

}

void sub_231303E98()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *, uint64_t);
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  char *v12;
  char *v13;
  void *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  uint64_t v24[4];

  v1 = v0;
  v2 = sub_231412F64();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231413210();
  sub_231412F40();
  v6 = *(void (**)(char *, uint64_t))(v3 + 8);
  v6(v5, v2);
  sub_2312CEA5C(v24, v24[3]);
  v7 = (void *)sub_231412EE0();
  if (qword_255ECAAA0 != -1)
    swift_once();
  LOBYTE(v22) = 1;
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4C0A0]), sel_initWithOnboardingType_isFirstTimeOnboarding_healthStore_dateCache_provenance_delegate_isSampleInteractive_, 0, 1, v7, qword_255ED2EF8, 3, v1, v22);

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v24);
  v9 = qword_255ECBDC8;
  v10 = *(void **)&v1[qword_255ECBDC8];
  *(_QWORD *)&v1[qword_255ECBDC8] = v8;

  v11 = *(void **)&v1[v9];
  if (v11
    && (v12 = (char *)objc_msgSend(v11, sel_onboardingNavigationController)) != 0)
  {
    v13 = v12;
    objc_msgSend(v12, sel_setModalInPresentation_, 1);
    sub_231413210();
    v14 = (void *)sub_231412F4C();
    v6(v5, v2);
    objc_msgSend(v14, sel_showViewController_sender_, v13, 0);

  }
  else
  {
    if (qword_25415DF98 != -1)
      swift_once();
    v15 = sub_231413780();
    sub_2312CE3B8(v15, (uint64_t)qword_254162FF0);
    v13 = v1;
    v16 = sub_231413768();
    v17 = sub_231414980();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      v24[0] = v19;
      *(_DWORD *)v18 = 136446466;
      ObjectType = swift_getObjectType();
      sub_231304610();
      v20 = sub_2314146E0();
      ObjectType = sub_23133180C(v20, v21, v24);
      sub_231414CBC();

      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2082;
      ObjectType = sub_23133180C(0xD000000000000013, 0x8000000231427950, v24);
      sub_231414CBC();
      _os_log_impl(&dword_2312C8000, v16, v17, "[%{public}s.%{public}s] On-boarding navigation controller not initialized", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v19, -1, -1);
      MEMORY[0x2348DE308](v18, -1, -1);

      return;
    }

  }
}

uint64_t sub_23130420C(uint64_t a1)
{
  objc_class *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;

  v3 = sub_231412F64();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (char *)objc_allocWithZone(v1);
  v8 = qword_255ECBDC0;
  v9 = (void *)objc_opt_self();
  v10 = v7;
  *(_QWORD *)&v7[v8] = objc_msgSend(v9, sel_electrocardiogramType);
  *(_QWORD *)&v10[qword_255ECBDC8] = 0;
  v11 = &v10[qword_255ECBDD0];
  *(_OWORD *)v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;

  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  v12 = sub_23141321C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v12;
}

uint64_t sub_231304320()
{
  uint64_t v0;

  return sub_2313045B8(v0 + qword_255ECBDD0);
}

id sub_23130435C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ElectrocardiogramPromotionTileActionHandler();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_231304390(uint64_t a1)
{

  return sub_2313045B8(a1 + qword_255ECBDD0);
}

uint64_t sub_2313043D8()
{
  return type metadata accessor for ElectrocardiogramPromotionTileActionHandler();
}

void sub_2313043EC(uint64_t a1)
{
  void *v1;

  v1 = *(void **)(a1 + qword_255ECBDC8);
  *(_QWORD *)(a1 + qword_255ECBDC8) = 0;

}

void sub_231304400()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;

  v1 = sub_231412F64();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void **)(v0 + qword_255ECBDC8);
  *(_QWORD *)(v0 + qword_255ECBDC8) = 0;

  sub_231413210();
  v6 = (void *)sub_231412F4C();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v7 = objc_msgSend(v6, sel_tabBarController);

  if (v7)
  {
    type metadata accessor for ElectrocardiogramPromotionTileActionHandler();
    sub_2312CCC24((unint64_t *)&unk_255ECBE38, (uint64_t (*)(uint64_t))type metadata accessor for ElectrocardiogramPromotionTileActionHandler, (uint64_t)&unk_231419360);
    v8 = (void *)sub_2314131B0();
    if (v8)
    {
      v9 = v8;
      sub_231328348(v8, 0);

      v7 = v9;
    }

  }
}

void sub_23130452C(void *a1)
{
  id v1;

  v1 = a1;
  sub_231304400();

}

uint64_t sub_231304560()
{
  return sub_2312CCC24(&qword_25415BFA8, MEMORY[0x24BE42BF8], MEMORY[0x24BE42BE8]);
}

uint64_t sub_23130458C()
{
  return sub_2312CCC24(&qword_255ECBE30, (uint64_t (*)(uint64_t))type metadata accessor for ElectrocardiogramPromotionTileActionHandler, (uint64_t)&unk_231419330);
}

uint64_t sub_2313045B8(uint64_t a1)
{
  uint64_t v2;

  sub_2312CF374(0, (unint64_t *)&qword_25415E460, MEMORY[0x24BEE4AD8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_231304610()
{
  unint64_t result;

  result = qword_255ECBE48;
  if (!qword_255ECBE48)
  {
    type metadata accessor for ElectrocardiogramPromotionTileActionHandler();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255ECBE48);
  }
  return result;
}

uint64_t sub_231304648(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312CF374(0, (unint64_t *)&qword_25415E460, MEMORY[0x24BEE4AD8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2313046A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_2313046E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312CF374(0, (unint64_t *)&qword_25415E460, MEMORY[0x24BEE4AD8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

_OWORD *sub_231304744(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t getEnumTagSinglePayload for CardioFitnessRetroComputeFeedItemState(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 126);
  v3 = ((*(unsigned __int8 *)(a1 + 8) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 8) >> 1) & 0x1F))) ^ 0x7F;
  if (v3 >= 0x7D)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for CardioFitnessRetroComputeFeedItemState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_BYTE *)(result + 8) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_2313047FC(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    *(_BYTE *)(result + 8) = *(_BYTE *)(result + 8) & 1 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(_QWORD *)result = a2 - 2;
    *(_BYTE *)(result + 8) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessRetroComputeFeedItemState()
{
  return &type metadata for CardioFitnessRetroComputeFeedItemState;
}

uint64_t sub_23130483C()
{
  return sub_231415124();
}

uint64_t sub_231304864()
{
  return 0x65746F6D6F7270;
}

uint64_t sub_23130487C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x65746F6D6F7270 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_231415070();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_231304910()
{
  return 0;
}

uint64_t sub_23130491C()
{
  sub_23130576C();
  return sub_231415190();
}

uint64_t sub_231304944()
{
  sub_23130576C();
  return sub_23141519C();
}

uint64_t sub_23130496C(_QWORD *a1, uint64_t a2, int a3)
{
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  char v32;
  char v33;
  char v34;

  v31 = a3;
  v29 = a2;
  v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520];
  sub_23130589C(0, &qword_255ECBEA0, (uint64_t (*)(void))sub_2313056E4, (uint64_t)&type metadata for CardioFitnessRetroComputeFeedItemState.CompletedCodingKeys, MEMORY[0x24BEE3520]);
  v27 = *(_QWORD *)(v5 - 8);
  v28 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v26 = (char *)&v22 - v6;
  sub_23130589C(0, &qword_255ECBEA8, (uint64_t (*)(void))sub_231305728, (uint64_t)&type metadata for CardioFitnessRetroComputeFeedItemState.InProgressCodingKeys, v4);
  v24 = *(_QWORD *)(v7 - 8);
  v25 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v22 - v8;
  sub_23130589C(0, &qword_255ECBEB0, (uint64_t (*)(void))sub_23130576C, (uint64_t)&type metadata for CardioFitnessRetroComputeFeedItemState.AvailableCodingKeys, v4);
  v23 = v10;
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v22 - v12;
  sub_23130589C(0, &qword_255ECBEB8, (uint64_t (*)(void))sub_2313057B0, (uint64_t)&type metadata for CardioFitnessRetroComputeFeedItemState.CodingKeys, v4);
  v15 = v14;
  v30 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v22 - v16;
  sub_2312CEA5C(a1, a1[3]);
  sub_2313057B0();
  sub_231415178();
  if (!(v31 >> 6))
  {
    v32 = 0;
    sub_23130576C();
    sub_231414FEC();
    v20 = v23;
    sub_231415028();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v20);
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v17, v15);
  }
  if (v31 >> 6 == 1)
  {
    v34 = 2;
    sub_2313056E4();
    v18 = v26;
    sub_231414FEC();
    v19 = v28;
    sub_231415004();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v18, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v17, v15);
  }
  v33 = 1;
  sub_231305728();
  sub_231414FEC();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v25);
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v17, v15);
}

uint64_t sub_231304C94()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6572676F72506E69;
  if (*v0 != 1)
    v1 = 0x6574656C706D6F63;
  if (*v0)
    return v1;
  else
    return 0x6C62616C69617661;
}

uint64_t sub_231304CF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_231304FFC(a1, a2);
  *a3 = result;
  return result;
}

void sub_231304D1C(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_231304D28()
{
  sub_2313057B0();
  return sub_231415190();
}

uint64_t sub_231304D50()
{
  sub_2313057B0();
  return sub_23141519C();
}

uint64_t sub_231304D78()
{
  sub_231415118();
  sub_231415124();
  return sub_231415148();
}

uint64_t sub_231304DB8()
{
  sub_231415118();
  sub_231415124();
  return sub_231415148();
}

unint64_t sub_231304DF4()
{
  return 0xD000000000000010;
}

uint64_t sub_231304E10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_231305174(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_231304E38()
{
  sub_2313056E4();
  return sub_231415190();
}

uint64_t sub_231304E60()
{
  sub_2313056E4();
  return sub_23141519C();
}

uint64_t sub_231304E88()
{
  return 0;
}

uint64_t sub_231304E94@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_231304EC0()
{
  sub_231305728();
  return sub_231415190();
}

uint64_t sub_231304EE8()
{
  sub_231305728();
  return sub_23141519C();
}

uint64_t sub_231304F10(uint64_t a1, uint64_t a2)
{
  return sub_231304F70(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)a2, *(_BYTE *)(a2 + 8));
}

uint64_t sub_231304F28@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v5;

  result = sub_2313051F8(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_BYTE *)(a2 + 8) = v5;
  }
  return result;
}

uint64_t sub_231304F54(_QWORD *a1)
{
  uint64_t v1;

  return sub_23130496C(a1, *(_QWORD *)v1, *(unsigned __int8 *)(v1 + 8));
}

uint64_t sub_231304F70(uint64_t a1, unsigned __int8 a2, uint64_t a3, unsigned __int8 a4)
{
  if (!(a2 >> 6))
  {
    if (a4 < 0x40u)
      return (((a1 & 1) == 0) ^ a3) & 1;
    return 0;
  }
  if (a2 >> 6 != 1)
    return (a4 & 0xC0) == 0x80 && *(double *)&a3 == 0.0 && a4 == 128;
  if ((a4 & 0xC0) == 0x40)
  {
    if ((a2 & 1) == 0)
      return (a4 & 1) == 0 && *(double *)&a1 == *(double *)&a3;
    if ((a4 & 1) != 0)
      return 1;
  }
  return 0;
}

uint64_t sub_231304FFC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0x6C62616C69617661 && a2 == 0xE900000000000065 || (sub_231415070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6572676F72506E69 && a2 == 0xEA00000000007373 || (sub_231415070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574656C706D6F63 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_231415070();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_231305174(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000010 && a2 == 0x80000002314279A0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_231415070();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_2313051F8(_QWORD *a1)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  _QWORD *v23;
  char *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  _QWORD *v42;
  char v43;
  char v44;
  char v45;

  v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE33E0];
  sub_23130589C(0, &qword_255ECBE50, (uint64_t (*)(void))sub_2313056E4, (uint64_t)&type metadata for CardioFitnessRetroComputeFeedItemState.CompletedCodingKeys, MEMORY[0x24BEE33E0]);
  v37 = v3;
  v39 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v41 = (char *)&v33 - v4;
  sub_23130589C(0, &qword_255ECBE60, (uint64_t (*)(void))sub_231305728, (uint64_t)&type metadata for CardioFitnessRetroComputeFeedItemState.InProgressCodingKeys, v2);
  v38 = v5;
  v36 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v40 = (char *)&v33 - v6;
  sub_23130589C(0, &qword_255ECBE70, (uint64_t (*)(void))sub_23130576C, (uint64_t)&type metadata for CardioFitnessRetroComputeFeedItemState.AvailableCodingKeys, v2);
  v34 = *(_QWORD *)(v7 - 8);
  v35 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v33 - v8;
  v10 = (uint64_t)&type metadata for CardioFitnessRetroComputeFeedItemState.CodingKeys;
  sub_23130589C(0, &qword_255ECBE80, (uint64_t (*)(void))sub_2313057B0, (uint64_t)&type metadata for CardioFitnessRetroComputeFeedItemState.CodingKeys, v2);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v33 - v14;
  sub_2312CEA5C(a1, a1[3]);
  sub_2313057B0();
  v16 = (uint64_t)v42;
  sub_23141516C();
  if (v16)
    goto LABEL_9;
  v17 = v40;
  v18 = v41;
  v33 = v13;
  v42 = a1;
  v19 = sub_231414FE0();
  v20 = v12;
  v21 = v15;
  if (*(_QWORD *)(v19 + 16) != 1)
  {
    v10 = sub_231414E6C();
    swift_allocError();
    v23 = v22;
    sub_2313057F4();
    *v23 = &type metadata for CardioFitnessRetroComputeFeedItemState;
    sub_231414F8C();
    sub_231414E54();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v23, *MEMORY[0x24BEE26D0], v10);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v21, v20);
    a1 = v42;
LABEL_9:
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
    return v10;
  }
  if (*(_BYTE *)(v19 + 32))
  {
    if (*(_BYTE *)(v19 + 32) == 1)
    {
      v44 = 1;
      sub_231305728();
      sub_231414F80();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v17, v38);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v15, v20);
      v10 = 0;
    }
    else
    {
      v45 = 2;
      sub_2313056E4();
      sub_231414F80();
      v29 = v37;
      v30 = sub_231414FA4();
      v31 = v33;
      v10 = v30;
      (*(void (**)(char *, uint64_t))(v39 + 8))(v18, v29);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v20);
    }
  }
  else
  {
    v43 = 0;
    sub_23130576C();
    v25 = v9;
    sub_231414F80();
    v26 = v35;
    v27 = sub_231414FC8();
    v28 = v33;
    v32 = v27;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v25, v26);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v21, v20);
    v10 = v32 & 1;
  }
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v42);
  return v10;
}

unint64_t sub_2313056E4()
{
  unint64_t result;

  result = qword_255ECBE58;
  if (!qword_255ECBE58)
  {
    result = MEMORY[0x2348DE248](&unk_23141982C, &type metadata for CardioFitnessRetroComputeFeedItemState.CompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECBE58);
  }
  return result;
}

unint64_t sub_231305728()
{
  unint64_t result;

  result = qword_255ECBE68;
  if (!qword_255ECBE68)
  {
    result = MEMORY[0x2348DE248](&unk_2314197DC, &type metadata for CardioFitnessRetroComputeFeedItemState.InProgressCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECBE68);
  }
  return result;
}

unint64_t sub_23130576C()
{
  unint64_t result;

  result = qword_255ECBE78;
  if (!qword_255ECBE78)
  {
    result = MEMORY[0x2348DE248](&unk_23141978C, &type metadata for CardioFitnessRetroComputeFeedItemState.AvailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECBE78);
  }
  return result;
}

unint64_t sub_2313057B0()
{
  unint64_t result;

  result = qword_255ECBE88;
  if (!qword_255ECBE88)
  {
    result = MEMORY[0x2348DE248](&unk_23141973C, &type metadata for CardioFitnessRetroComputeFeedItemState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECBE88);
  }
  return result;
}

void sub_2313057F4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255ECBE90)
  {
    sub_231305860();
    sub_231414E60();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255ECBE90);
  }
}

unint64_t sub_231305860()
{
  unint64_t result;

  result = qword_255ECBE98;
  if (!qword_255ECBE98)
  {
    result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255ECBE98);
  }
  return result;
}

void sub_23130589C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    v9 = a3();
    v10 = a5(a1, a4, v9);
    if (!v11)
      atomic_store(v10, a2);
  }
}

uint64_t getEnumTagSinglePayload for CardioFitnessRetroComputeFeedItemState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CardioFitnessRetroComputeFeedItemState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2313059D4 + 4 * byte_2314193A5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_231305A08 + 4 * byte_2314193A0[v4]))();
}

uint64_t sub_231305A08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_231305A10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x231305A18);
  return result;
}

uint64_t sub_231305A24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x231305A2CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_231305A30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_231305A38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessRetroComputeFeedItemState.CodingKeys()
{
  return &type metadata for CardioFitnessRetroComputeFeedItemState.CodingKeys;
}

ValueMetadata *type metadata accessor for CardioFitnessRetroComputeFeedItemState.AvailableCodingKeys()
{
  return &type metadata for CardioFitnessRetroComputeFeedItemState.AvailableCodingKeys;
}

ValueMetadata *type metadata accessor for CardioFitnessRetroComputeFeedItemState.InProgressCodingKeys()
{
  return &type metadata for CardioFitnessRetroComputeFeedItemState.InProgressCodingKeys;
}

uint64_t getEnumTagSinglePayload for AFibBurdenPDFChartPoint.Tag(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s5Heart38CardioFitnessRetroComputeFeedItemStateO19AvailableCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_231305B10 + 4 * byte_2314193AA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_231305B30 + 4 * byte_2314193AF[v4]))();
}

_BYTE *sub_231305B10(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_231305B30(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_231305B38(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_231305B40(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_231305B48(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_231305B50(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessRetroComputeFeedItemState.CompletedCodingKeys()
{
  return &type metadata for CardioFitnessRetroComputeFeedItemState.CompletedCodingKeys;
}

unint64_t sub_231305B70()
{
  unint64_t result;

  result = qword_255ECBEC0;
  if (!qword_255ECBEC0)
  {
    result = MEMORY[0x2348DE248](&unk_231419554, &type metadata for CardioFitnessRetroComputeFeedItemState.CompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECBEC0);
  }
  return result;
}

unint64_t sub_231305BB8()
{
  unint64_t result;

  result = qword_255ECBEC8;
  if (!qword_255ECBEC8)
  {
    result = MEMORY[0x2348DE248](&unk_23141965C, &type metadata for CardioFitnessRetroComputeFeedItemState.AvailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECBEC8);
  }
  return result;
}

unint64_t sub_231305C00()
{
  unint64_t result;

  result = qword_255ECBED0;
  if (!qword_255ECBED0)
  {
    result = MEMORY[0x2348DE248](&unk_231419714, &type metadata for CardioFitnessRetroComputeFeedItemState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECBED0);
  }
  return result;
}

unint64_t sub_231305C48()
{
  unint64_t result;

  result = qword_255ECBED8;
  if (!qword_255ECBED8)
  {
    result = MEMORY[0x2348DE248](&unk_231419684, &type metadata for CardioFitnessRetroComputeFeedItemState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECBED8);
  }
  return result;
}

unint64_t sub_231305C90()
{
  unint64_t result;

  result = qword_255ECBEE0;
  if (!qword_255ECBEE0)
  {
    result = MEMORY[0x2348DE248](&unk_2314196AC, &type metadata for CardioFitnessRetroComputeFeedItemState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECBEE0);
  }
  return result;
}

unint64_t sub_231305CD8()
{
  unint64_t result;

  result = qword_255ECBEE8;
  if (!qword_255ECBEE8)
  {
    result = MEMORY[0x2348DE248](&unk_2314195CC, &type metadata for CardioFitnessRetroComputeFeedItemState.AvailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECBEE8);
  }
  return result;
}

unint64_t sub_231305D20()
{
  unint64_t result;

  result = qword_255ECBEF0;
  if (!qword_255ECBEF0)
  {
    result = MEMORY[0x2348DE248](&unk_2314195F4, &type metadata for CardioFitnessRetroComputeFeedItemState.AvailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECBEF0);
  }
  return result;
}

unint64_t sub_231305D68()
{
  unint64_t result;

  result = qword_255ECBEF8;
  if (!qword_255ECBEF8)
  {
    result = MEMORY[0x2348DE248](&unk_23141957C, &type metadata for CardioFitnessRetroComputeFeedItemState.InProgressCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECBEF8);
  }
  return result;
}

unint64_t sub_231305DB0()
{
  unint64_t result;

  result = qword_255ECBF00;
  if (!qword_255ECBF00)
  {
    result = MEMORY[0x2348DE248](&unk_2314195A4, &type metadata for CardioFitnessRetroComputeFeedItemState.InProgressCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECBF00);
  }
  return result;
}

unint64_t sub_231305DF8()
{
  unint64_t result;

  result = qword_255ECBF08;
  if (!qword_255ECBF08)
  {
    result = MEMORY[0x2348DE248](&unk_2314194C4, &type metadata for CardioFitnessRetroComputeFeedItemState.CompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECBF08);
  }
  return result;
}

unint64_t sub_231305E40()
{
  unint64_t result;

  result = qword_255ECBF10;
  if (!qword_255ECBF10)
  {
    result = MEMORY[0x2348DE248](&unk_2314194EC, &type metadata for CardioFitnessRetroComputeFeedItemState.CompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECBF10);
  }
  return result;
}

uint64_t sub_231305E88()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_231413E40();
  swift_release();
  return swift_release();
}

uint64_t sub_231305EEC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 48);
  objc_msgSend(v1, sel_removeHeartRhythmAvailabilityObserver_, v0);
  v2 = *(void **)(v0 + 56);
  objc_msgSend(v2, sel_unregisterObserver_, v0);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v3 = v0 + OBJC_IVAR____TtC5Heart36TachycardiaFeatureStatusAvailability__featureStatus;
  sub_2312D6DD8(0, &qword_25415DE40, (uint64_t (*)(uint64_t))sub_2312E9964, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t sub_231305FAC()
{
  sub_231305EEC();
  return swift_deallocClassInstance();
}

uint64_t sub_231305FD0()
{
  return type metadata accessor for TachycardiaFeatureStatusAvailability();
}

uint64_t type metadata accessor for TachycardiaFeatureStatusAvailability()
{
  uint64_t result;

  result = qword_25415E388;
  if (!qword_25415E388)
    return swift_getSingletonMetadata();
  return result;
}

void sub_231306014()
{
  unint64_t v0;

  sub_2312D6DD8(319, &qword_25415DE40, (uint64_t (*)(uint64_t))sub_2312E9964, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_2313060CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  void *v8;
  unsigned int v9;
  unsigned int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  void *v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  uint64_t v21;

  v3 = sub_231411608();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_231411D94() & 1) == 0)
  {
    v15 = sub_231411D1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a1, 1, 1, v15);
  }
  if (!objc_msgSend((id)objc_opt_self(), sel_activePairedWatchSupportsHeartRateMotionContexts)
    || (v7 = *(void **)(v1 + 48),
        sub_2314115FC(),
        v8 = (void *)sub_2314115C0(),
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3),
        v9 = objc_msgSend(v7, sel_isHeartAgeGatingEnabledOnActiveWatchWithCurrentDate_, v8),
        v8,
        v9))
  {
    v10 = (unsigned int *)MEMORY[0x24BE41280];
LABEL_5:
    v11 = *v10;
    v12 = sub_231411D1C();
    v13 = *(_QWORD *)(v12 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 104))(a1, v11, v12);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
  }
  v16 = (void *)objc_opt_self();
  if ((objc_msgSend(v16, sel_isBackgroundHeartRateEnabled) & 1) == 0)
  {
    v10 = (unsigned int *)MEMORY[0x24BE41288];
    goto LABEL_5;
  }
  v17 = objc_msgSend(v16, sel_isTachycardiaDetectionEnabled);
  v18 = sub_231411D1C();
  v19 = *(_QWORD *)(v18 - 8);
  if ((v17 & 1) != 0)
    v20 = (unsigned int *)MEMORY[0x24BE41298];
  else
    v20 = (unsigned int *)MEMORY[0x24BE412A0];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v19 + 104))(a1, *v20, v18);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56))(a1, 0, 1, v18);
}

void sub_2313062B4()
{
  uint64_t v0;
  _QWORD *v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = (_QWORD *)v0;
  objc_msgSend(*(id *)(v0 + 48), sel_addHeartRhythmAvailabilityObserver_, v0);
  objc_msgSend(*(id *)(v0 + 56), sel_registerObserver_, v0);
  v2 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  sub_231412A90();
  v3 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_initWithSuiteName_, v3);

  if (v4)
  {
    v5 = v1[4];
    v6 = v1[5];
    v7 = v4;
    v8 = sub_231410240(v4, v5, v6);

    v1[8] = v8;
    swift_bridgeObjectRelease();
    v9 = sub_231412A90();
    sub_231410244(v9);
    swift_bridgeObjectRelease();
    v10 = swift_allocObject();
    swift_weakInit();
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = sub_231306934;
    *(_QWORD *)(v11 + 24) = v10;
    sub_231306968();
    sub_2313069D0();
    v12 = sub_231413F90();

    swift_release();
    swift_release();
    v1[9] = v12;
    swift_release();
  }
}

uint64_t sub_231306450()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;

  sub_2312E9964(0);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v7 - v4;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_2313060CC((uint64_t)v5);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_231306890((uint64_t)v5, (uint64_t)v3);
    swift_retain();
    sub_231413E4C();
    sub_2313068D4((uint64_t)v5);
    return swift_release();
  }
  return result;
}

uint64_t sub_23130673C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_231413E40();
  swift_release();
  return swift_release();
}

uint64_t sub_2313067A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  sub_2312E9964(0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v9 - v6;
  sub_231306890(a1, (uint64_t)&v9 - v6);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_231306890((uint64_t)v7, (uint64_t)v5);
  swift_retain();
  sub_231413E4C();
  return sub_2313068D4((uint64_t)v7);
}

uint64_t sub_231306890(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312E9964(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2313068D4(uint64_t a1)
{
  uint64_t v2;

  sub_2312E9964(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_231306910()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_231306934()
{
  return sub_231306450();
}

uint64_t sub_23130693C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_231306960(uint64_t a1)
{
  uint64_t v1;

  return sub_23140F7D4(a1, *(uint64_t (**)(void))(v1 + 16));
}

void sub_231306968()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415E428)
  {
    v0 = sub_231413D14();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415E428);
  }
}

unint64_t sub_2313069D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25415E420;
  if (!qword_25415E420)
  {
    sub_231306968();
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB9AF8], v1);
    atomic_store(result, (unint64_t *)&qword_25415E420);
  }
  return result;
}

_QWORD *sub_231306A18(void *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id v20;
  uint64_t v22;

  sub_2312D6DD8(0, &qword_25415DE40, (uint64_t (*)(uint64_t))sub_2312E9964, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v22 - v6;
  sub_2312E9964(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v22 - v12;
  v1[2] = sub_2314146BC();
  v1[3] = v14;
  v1[4] = sub_2314146BC();
  v1[5] = v15;
  v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD4170]), sel_init);
  v17 = MEMORY[0x24BEE4AF8];
  v1[7] = v16;
  v1[8] = v17;
  v1[9] = 0;
  v18 = (char *)v1 + OBJC_IVAR____TtC5Heart36TachycardiaFeatureStatusAvailability__featureStatus;
  v19 = sub_231411D1C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v13, 1, 1, v19);
  sub_231306890((uint64_t)v13, (uint64_t)v11);
  sub_231413E1C();
  sub_2313068D4((uint64_t)v13);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v18, v7, v4);
  v1[6] = a1;
  v20 = a1;
  sub_2313060CC((uint64_t)v13);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_231306890((uint64_t)v13, (uint64_t)v11);
  swift_retain();
  sub_231413E4C();
  sub_2313068D4((uint64_t)v13);
  sub_2313062B4();
  return v1;
}

uint64_t type metadata accessor for AtrialFibrillationSpecifierDataSource(uint64_t a1)
{
  return sub_2312F19EC(a1, qword_255ECC018);
}

uint64_t sub_231306C2C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_231306CA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  uint64_t v23;
  unsigned int *v24;
  _QWORD v25[2];
  uint64_t v26;

  v2 = v1;
  swift_getObjectType();
  sub_2312DC5EC(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23141357C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v2 + qword_255ECBFE8) + OBJC_IVAR____TtC5Heart43AtrialFibrillationFeatureStatusAvailability_status;
  swift_beginAccess();
  sub_2313085A0(v11, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_2312CEBD4((uint64_t)v6, (uint64_t (*)(_QWORD))sub_2312DC5EC);
    if (qword_25415DF98 != -1)
      swift_once();
    v12 = sub_231413780();
    sub_2312CE3B8(v12, (uint64_t)qword_254162FF0);
    v13 = sub_231413768();
    v14 = sub_231414974();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v26 = v16;
      *(_DWORD *)v15 = 136446210;
      v17 = sub_2314151A8();
      v25[1] = sub_23133180C(v17, v18, &v26);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v13, v14, "[%{public}s]: No status available for IRN; reporting 'inactive'",
        v15,
        0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v16, -1, -1);
      MEMORY[0x2348DE308](v15, -1, -1);
    }

    v19 = *MEMORY[0x24BE412A0];
    v20 = sub_231411D1C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(a1, v19, v20);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    v22 = sub_23130D700((uint64_t)v10);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v23 = sub_231411D1C();
    if ((v22 & 1) != 0)
      v24 = (unsigned int *)MEMORY[0x24BE41298];
    else
      v24 = (unsigned int *)MEMORY[0x24BE412A0];
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(a1, *v24, v23);
  }
}

uint64_t sub_231306F8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v20 = a1;
  swift_getObjectType();
  v1 = sub_231411D1C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v19 - v6;
  v8 = sub_231411D70();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23139DA88();
  v12 = sub_231411D58();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (v12)
  {
    sub_231306CA0((uint64_t)v7);
    (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v5, *MEMORY[0x24BE41298], v1);
    v13 = sub_231411D10();
    v14 = *(void (**)(char *, uint64_t))(v2 + 8);
    v14(v5, v1);
    v14(v7, v1);
    sub_23139DAF8(v13 & 1, 1);
    sub_231306CA0((uint64_t)v7);
    sub_231411D94();
    sub_231411D7C();
    v14(v7, v1);
    v15 = v20;
    sub_231413060();
    v16 = sub_23141306C();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 0, 1, v16);
  }
  else
  {
    v18 = sub_23141306C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v20, 1, 1, v18);
  }
}

uint64_t sub_2313071B0()
{
  unint64_t v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;

  v0 = MEMORY[0x24BEE4AF8];
  v15 = MEMORY[0x24BEE4AF8];
  v1 = sub_23130742C();
  if (v1)
  {
    v2 = v1;
    v3 = sub_231307724();
    if (v3)
    {
      v4 = v3;
      v5 = v2;
      MEMORY[0x2348DD15C]();
      if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_2314147DC();
      sub_2314147E8();
      sub_2314147B8();
      v6 = v4;
      MEMORY[0x2348DD15C]();
      if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_2314147DC();
      sub_2314147E8();
      sub_2314147B8();
      v7 = v15;
      if (!(v15 >> 62))
      {
        v8 = v15 & 0xFFFFFFFFFFFFFF8;
        sub_231412A90();
        sub_23141507C();
        if (swift_dynamicCastMetatype() || (v12 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
        {
LABEL_9:

          swift_bridgeObjectRelease();
        }
        else
        {
          v13 = (_QWORD *)(v8 + 32);
          while (*v13)
          {
            ++v13;
            if (!--v12)
              goto LABEL_9;
          }

          swift_bridgeObjectRelease();
          return v8 | 1;
        }
        return v7;
      }
      sub_231412A90();
      v14 = sub_231414EFC();

      goto LABEL_29;
    }

  }
  if (!(v0 >> 62))
  {
    sub_231412A90();
    sub_23141507C();
    if (swift_dynamicCastMetatype() || (v10 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_13:
      v7 = MEMORY[0x24BEE4AF8];
      swift_bridgeObjectRelease();
    }
    else
    {
      v11 = (_QWORD *)((v0 & 0xFFFFFFFFFFFFFF8) + 32);
      while (*v11)
      {
        ++v11;
        if (!--v10)
          goto LABEL_13;
      }
      swift_bridgeObjectRelease();
      return v0 & 0xFFFFFFFFFFFFFF8 | 1;
    }
    return v7;
  }
  sub_231412A90();
  v14 = sub_231414EFC();
LABEL_29:
  swift_bridgeObjectRelease_n();
  return v14;
}

id sub_23130742C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  NSUInteger v11;
  NSUInteger v12;
  objc_class *ObjCClassFromMetadata;
  NSString *v14;
  NSString *v15;
  id v16;
  void *v17;
  NSRange v19;

  v1 = (void *)objc_opt_self();
  v2 = (void *)sub_23141468C();
  v3 = objc_msgSend(v1, sel_groupSpecifierWithID_, v2);

  if (v3)
  {
    v4 = (void *)objc_opt_self();
    v5 = objc_msgSend(v4, sel_irregularHeartRhythmFooterDescription);
    if (!v5)
    {
      sub_2314146BC();
      v5 = (id)sub_23141468C();
      swift_bridgeObjectRelease();
    }
    sub_2314146BC();
    v6 = objc_msgSend(v4, sel_irregularHeartRhythmFooterLinkTitle);
    if (!v6)
    {
      sub_2314146BC();
      v6 = (id)sub_23141468C();
      swift_bridgeObjectRelease();
    }
    v7 = objc_allocWithZone(MEMORY[0x24BDD17C8]);
    v8 = (void *)sub_23141468C();
    swift_bridgeObjectRelease();
    v9 = objc_msgSend(v7, sel_initWithString_, v8);

    v10 = objc_msgSend(v9, sel_localizedStandardRangeOfString_, v6);
    v12 = v11;

    sub_231411800();
    sub_2312D3C68(0, &qword_255ECC0E8);
    ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
    v14 = NSStringFromClass(ObjCClassFromMetadata);
    if (!v14)
    {
      sub_2314146BC();
      v14 = (NSString *)sub_23141468C();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v3, sel_setProperty_forKey_, v14, *MEMORY[0x24BE75A30]);

    objc_msgSend(v3, sel_setProperty_forKey_, v5, *MEMORY[0x24BE75A58]);
    v19.location = (NSUInteger)v10;
    v19.length = v12;
    v15 = NSStringFromRange(v19);
    if (!v15)
    {
      sub_2314146BC();
      v15 = (NSString *)sub_23141468C();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v3, sel_setProperty_forKey_, v15, *MEMORY[0x24BE75A40]);

    v16 = objc_msgSend((id)objc_opt_self(), sel_valueWithNonretainedObject_, v0);
    objc_msgSend(v3, sel_setProperty_forKey_, v16, *MEMORY[0x24BE75A50]);
    v17 = (void *)sub_23141468C();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setProperty_forKey_, v17, *MEMORY[0x24BE75A38]);

  }
  return v3;
}

id sub_231307724()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  void *v4;

  v1 = objc_msgSend((id)objc_opt_self(), sel_irregularHeartRhythmTitleDescription);
  if (!v1)
  {
    sub_2314146BC();
    v1 = (id)sub_23141468C();
    swift_bridgeObjectRelease();
  }
  v2 = objc_msgSend((id)objc_opt_self(), sel_preferenceSpecifierNamed_target_set_get_detail_cell_edit_, v1, v0, sel_setAtrialFibrillationEnabledWithValue_, sel_isAtrialFibrillationEnabled, 0, 6, 0);

  if (v2)
  {
    v3 = (void *)sub_23141468C();
    objc_msgSend(v2, sel_setIdentifier_, v3);

    v4 = (void *)sub_231414800();
    objc_msgSend(v2, sel_setProperty_forKey_, v4, *MEMORY[0x24BE75868]);

  }
  return v2;
}

uint64_t sub_231307840()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;

  sub_2313085E4(0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231308600(0);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23130861C();
  v9 = *(_QWORD *)(v8 - 8);
  v28 = v8;
  v29 = v9;
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231308694();
  v13 = *(_QWORD *)(v12 - 8);
  v30 = v12;
  v31 = v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313087A0();
  v17 = *(_QWORD *)(v16 - 8);
  v32 = v16;
  v33 = v17;
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_2312D6DD8(0, &qword_25415DE40, (uint64_t (*)(uint64_t))sub_2312E9964, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  swift_retain();
  sub_231413E28();
  swift_endAccess();
  swift_release();
  sub_2312CCC24(&qword_25415DE30, (uint64_t (*)(uint64_t))sub_231308600, MEMORY[0x24BDB9EE8]);
  sub_231413F60();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_2312D3C68(0, (unint64_t *)&qword_25415DF00);
  v34 = (id)sub_231414A94();
  v20 = sub_231414A7C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v2, 1, 1, v20);
  sub_2312CCC24(&qword_255ECC0C8, (uint64_t (*)(uint64_t))sub_23130861C, MEMORY[0x24BDB96F8]);
  sub_231308748();
  v21 = v28;
  sub_231413F54();
  sub_2312CEBD4((uint64_t)v2, (uint64_t (*)(_QWORD))sub_2313085E4);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v21);
  swift_allocObject();
  v22 = v27;
  swift_unknownObjectWeakInit();
  sub_2312CCC24(&qword_255ECC0D8, (uint64_t (*)(uint64_t))sub_231308694, MEMORY[0x24BDB9A08]);
  v23 = v30;
  sub_231413EF4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v23);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_2312CCC24(&qword_255ECC0E0, (uint64_t (*)(uint64_t))sub_2313087A0, MEMORY[0x24BDB97F8]);
  v24 = v32;
  v25 = sub_231413F90();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v19, v24);
  *(_QWORD *)(v22 + qword_255ECBFF0) = v25;
  return swift_release();
}

uint64_t sub_231307C28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  char v6;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x2348DE3BC](v2);
  if (v3)
  {
    v4 = (_BYTE *)v3;
    v5 = v3 + qword_255ECC000;
    swift_beginAccess();
    if (MEMORY[0x2348DE3BC](v5))
    {
      swift_getObjectType();
      sub_231412FE8();
      sub_2314130CC();
    }
    v6 = v4[qword_255ECBFF8] ^ 1;
    v4[qword_255ECBFF8] = 0;

  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

void sub_231307CEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x2348DE3BC](v2);
  if (v3)
  {
    v4 = (void *)v3;
    v5 = v3 + qword_255ECC000;
    swift_beginAccess();
    v6 = MEMORY[0x2348DE3BC](v5);

    if (v6)
    {
      swift_getObjectType();
      sub_231412FF4();
      sub_2314130CC();
    }
  }
}

id sub_231307D8C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  id v9;
  void (*v10)(char *, uint64_t);
  void *v11;
  uint64_t v13;

  v2 = sub_231411D1C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v13 - v7;
  v9 = a1;
  sub_231306CA0((uint64_t)v8);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, *MEMORY[0x24BE41298], v2);
  sub_231411D10();
  v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v6, v2);
  v10(v8, v2);
  v11 = (void *)sub_231414800();

  return v11;
}

void sub_231307E7C(_BYTE *a1, uint64_t a2, void *a3)
{
  uint64_t ObjectType;
  id v6;
  char *v7;
  id v8;
  id v9;

  ObjectType = swift_getObjectType();
  a1[qword_255ECBFF8] = 1;
  v6 = a3;
  v7 = a1;
  v8 = objc_msgSend(v6, sel_BOOLValue);
  v9 = *(id *)(*(_QWORD *)&v7[qword_255ECBFE8] + 16);
  sub_23139D944((uint64_t)v8, (uint64_t)v9, ObjectType, (uint64_t)&off_2500215A0);

}

void sub_231307F28(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  swift_getObjectType();
  v2 = sub_2314114AC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a1;
  v7 = swift_retain();
  sub_23139DCD8(v7, (uint64_t)v5);
  swift_release();
  sub_23141147C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);

}

void sub_231307FEC()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_231308018()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return sub_2312D2854(v0 + qword_255ECC000);
}

id sub_23130807C()
{
  return sub_231308560(type metadata accessor for AtrialFibrillationSpecifierDataSource);
}

uint64_t sub_231308088(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return sub_2312D2854(a1 + qword_255ECC000);
}

uint64_t sub_2313080F8()
{
  return type metadata accessor for AtrialFibrillationSpecifierDataSource(0);
}

uint64_t type metadata accessor for AtrialFibrillationSettingsViewController(uint64_t a1)
{
  return sub_2312F19EC(a1, qword_255ECC068);
}

uint64_t sub_231308114()
{
  return swift_initClassMetadata2();
}

uint64_t sub_231308150()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + qword_255ECC000;
  swift_beginAccess();
  return MEMORY[0x2348DE3BC](v1);
}

uint64_t sub_23130819C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + qword_255ECC000;
  swift_beginAccess();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return sub_2314130CC();
}

void (*sub_231308204(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = qword_255ECC000;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x2348DE3BC](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_231308278;
}

void sub_231308278(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48) + 8) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    sub_2314130CC();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    sub_2314130CC();
  }
  free(v3);
}

void (*sub_2313082F4(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_2314130B4();
  return sub_2312D1C0C;
}

id sub_231308358(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v14;

  swift_getObjectType();
  v4 = sub_2314120AC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  v8 = objc_allocWithZone((Class)type metadata accessor for AtrialFibrillationSpecifierDataSource(0));
  v9 = sub_23130884C(a1, (uint64_t)v7);
  sub_2312CCC24(&qword_255ECC0F0, type metadata accessor for AtrialFibrillationSpecifierDataSource, (uint64_t)&unk_231419A7C);
  v10 = v9;
  v11 = (id)sub_231412F1C();
  sub_23139E020();
  v12 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setTitle_, v12);

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  return v11;
}

void sub_2313084D0()
{
  sub_231414EE4();
  __break(1u);
}

void sub_231308528()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_231308554()
{
  return sub_231308560(type metadata accessor for AtrialFibrillationSettingsViewController);
}

id sub_231308560(uint64_t (*a1)(_QWORD))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_231308598()
{
  return type metadata accessor for AtrialFibrillationSettingsViewController(0);
}

uint64_t sub_2313085A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312DC5EC(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_2313085E4(uint64_t a1)
{
  sub_2312D6DD8(a1, (unint64_t *)&unk_25415DEE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

void sub_231308600(uint64_t a1)
{
  sub_2312D6DD8(a1, &qword_25415DE38, (uint64_t (*)(uint64_t))sub_2312E9964, MEMORY[0x24BDB9ED8]);
}

void sub_23130861C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECC0B8)
  {
    sub_231308600(255);
    sub_2312CCC24(&qword_25415DE30, (uint64_t (*)(uint64_t))sub_231308600, MEMORY[0x24BDB9EE8]);
    v0 = sub_231413C6C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECC0B8);
  }
}

void sub_231308694()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECC0C0)
  {
    sub_23130861C();
    sub_2312D3C68(255, (unint64_t *)&qword_25415DF00);
    sub_2312CCC24(&qword_255ECC0C8, (uint64_t (*)(uint64_t))sub_23130861C, MEMORY[0x24BDB96F8]);
    sub_231308748();
    v0 = sub_231413CFC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECC0C0);
  }
}

unint64_t sub_231308748()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25415DEF0;
  if (!qword_25415DEF0)
  {
    v1 = sub_2312D3C68(255, (unint64_t *)&qword_25415DF00);
    result = MEMORY[0x2348DE248](MEMORY[0x24BEE5670], v1);
    atomic_store(result, (unint64_t *)&qword_25415DEF0);
  }
  return result;
}

void sub_2313087A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECC0D0)
  {
    sub_231308694();
    sub_2312CCC24(&qword_255ECC0D8, (uint64_t (*)(uint64_t))sub_231308694, MEMORY[0x24BDB9A08]);
    v0 = sub_231413CB4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECC0D0);
  }
}

uint64_t sub_231308818()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23130883C(uint64_t a1)
{
  uint64_t v1;

  return sub_231307C28(a1, v1);
}

void sub_231308844(uint64_t a1)
{
  uint64_t v1;

  sub_231307CEC(a1, v1);
}

id sub_23130884C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v14;

  swift_getObjectType();
  sub_2312D6DD8(0, (unint64_t *)&qword_255ECBB70, (uint64_t (*)(uint64_t))MEMORY[0x24BE42170], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v14 - v6;
  v8 = (_QWORD *)(v2 + qword_255ECBFD8);
  *v8 = 0xD00000000000001CLL;
  v8[1] = 0x8000000231427CD0;
  v9 = (_QWORD *)(v2 + qword_255ECBFE0);
  *v9 = 0xD00000000000001ALL;
  v9[1] = 0x8000000231427CF0;
  *(_QWORD *)(v2 + qword_255ECBFF0) = 0;
  *(_BYTE *)(v2 + qword_255ECBFF8) = 0;
  *(_QWORD *)(v2 + qword_255ECC000 + 8) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v2 + qword_255ECBFE8) = a1;
  sub_23139DA6C();
  v10 = sub_2314120AC();
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v7, a2, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
  swift_retain();
  v12 = (id)sub_2314120A0();
  sub_231307840();

  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a2, v10);
  return v12;
}

void sub_231308A00(void *a1, uint64_t a2, char a3)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void *v11;
  char *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  void (*v28)(uint64_t);
  char v29;
  uint64_t v30;
  id v31;
  id v32;
  objc_class *v33;
  char *v34;
  void *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char *v42;
  void *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[3];
  objc_class *v56;
  objc_super v57;

  v54 = a2;
  sub_2312D1E78(0, (unint64_t *)&qword_255ECF270, (void (*)(uint64_t))MEMORY[0x24BE42678]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v53 - v7;
  v9 = &v3[OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_consumedHealthExperienceStore];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  v10 = OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_objectType;
  v11 = (void *)objc_opt_self();
  v12 = v3;
  *(_QWORD *)&v3[v10] = objc_msgSend(v11, sel_electrocardiogramType);
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_cancellables] = MEMORY[0x24BEE4B08];
  v13 = (void *)objc_opt_self();
  v14 = objc_msgSend(a1, sel_profile);
  v15 = objc_msgSend(v14, sel_healthStore);

  v16 = objc_msgSend(v13, sel_sharedInstanceForHealthStore_, v15);
  if (!v16)
  {
    __break(1u);
    goto LABEL_21;
  }
  v17 = objc_msgSend(v16, sel_displayTypeForObjectType_, *(_QWORD *)&v3[v10]);

  if (!v17)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v18 = OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_displayType;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_displayType] = v17;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_viewControllerFactory] = a1;
  sub_2312DF850(v54, (uint64_t)&v12[OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_pinnedContentManager]);
  v19 = a1;
  v20 = objc_msgSend(v19, sel_profile);
  v21 = objc_msgSend(v20, sel_healthStore);

  if (!v21)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v22 = objc_msgSend(v21, sel_profileIdentifier);

  v23 = objc_msgSend(v22, sel_type);
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_profileType] = v23;
  if (a3 != 4)
  {
    v12[OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_dataTypeDetailMode] = a3;

    v30 = qword_231419C38[a3];
LABEL_8:
    v31 = *(id *)&v12[v18];
    v32 = objc_msgSend(v19, sel_profile);
    v33 = (objc_class *)type metadata accessor for ElectrocardiogramDataTypeDetailViewController();
    v57.receiver = v12;
    v57.super_class = v33;
    v34 = (char *)objc_msgSendSuper2(&v57, sel_initWithDisplayType_profile_mode_, v31, v32, v30);

    v35 = *(void **)&v34[OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_displayType];
    v36 = v34;
    if (objc_msgSend(v35, sel_allowsManualEntry))
    {
      v37 = sub_231412514();
      v39 = v38;
      if (v37 == sub_231412514() && v39 == v40)
      {
        swift_bridgeObjectRelease_n();
LABEL_13:
        if (qword_25415E610 != -1)
          swift_once();
        sub_231411374();
        v56 = v33;
        v55[0] = v36;
        v42 = v36;
        v43 = (void *)sub_23141468C();
        swift_bridgeObjectRelease();
        v44 = (uint64_t)v56;
        if (v56)
        {
          v45 = sub_2312CEA5C(v55, (uint64_t)v56);
          v46 = *(_QWORD *)(v44 - 8);
          MEMORY[0x24BDAC7A8](v45);
          v48 = (char *)&v53 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v46 + 16))(v48);
          v49 = sub_231415064();
          (*(void (**)(char *, uint64_t))(v46 + 8))(v48, v44);
          _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v55);
        }
        else
        {
          v49 = 0;
        }
        v50 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD410]), sel_initWithTitle_style_target_action_, v43, 0, v49, sel_showAddDataVC);

        sub_2314130CC();
        v51 = objc_msgSend(v42, sel_navigationItem);
        v52 = v50;
        objc_msgSend(v51, sel_setRightBarButtonItem_, v52);

        v19 = v52;
        goto LABEL_19;
      }
      v41 = sub_231415070();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v41 & 1) != 0)
        goto LABEL_13;
    }
LABEL_19:

    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v54);
    return;
  }
  v24 = objc_msgSend(v19, sel_profile);
  v25 = objc_msgSend(v24, sel_healthStore);

  if (v25)
  {
    v26 = objc_msgSend(v25, sel_profileIdentifier);

    v27 = sub_23141231C();
    v28 = (void (*)(uint64_t))MEMORY[0x24BE42678];
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v8, 1, 1, v27);
    v29 = sub_231412508();

    sub_2312F1A20((uint64_t)v8, (unint64_t *)&qword_255ECF270, v28);
    v12[OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_dataTypeDetailMode] = v29;

    v30 = 0;
    goto LABEL_8;
  }
LABEL_23:
  __break(1u);
}

id sub_2313090B8(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  void *v5;
  id v6;
  id v7;
  objc_class *v8;
  char *v9;
  char *v10;
  id result;
  id v12;
  objc_super v15;
  _BYTE v16[40];
  objc_super v17;

  if (a3 == 2)
  {
    v5 = *(void **)&v3[OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_viewControllerFactory];
    v6 = a1;
    v7 = objc_msgSend(v5, sel_profile);
    sub_2314149F8();
    v8 = (objc_class *)type metadata accessor for SummariesElectrocardiogramListDataProvider();
    v9 = (char *)objc_allocWithZone(v8);
    *(_QWORD *)&v9[OBJC_IVAR____TtC5Heart42SummariesElectrocardiogramListDataProvider____lazy_storage___dataFetcher] = 0;
    v10 = v9;
    result = objc_msgSend(v7, sel_healthStore);
    if (result)
    {
      *(_QWORD *)&v10[OBJC_IVAR____TtC5Heart42SummariesElectrocardiogramListDataProvider_store] = result;
      sub_2312DF850((uint64_t)v16, (uint64_t)&v10[OBJC_IVAR____TtC5Heart42SummariesElectrocardiogramListDataProvider_healthExperienceStore]);

      v15.receiver = v10;
      v15.super_class = v8;
      v12 = objc_msgSendSuper2(&v15, sel_initWithDisplayType_profile_mode_, v6, v7, 2);

      _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v16);
      return v12;
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    v17.receiver = v3;
    v17.super_class = (Class)type metadata accessor for ElectrocardiogramDataTypeDetailViewController();
    return objc_msgSendSuper2(&v17, sel_createDataProviderWithDisplayType_profile_mode_, a1, a2, a3);
  }
  return result;
}

void sub_231309280()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v6;
  id v7;
  id v8;
  objc_super v9;

  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for ElectrocardiogramDataTypeDetailViewController();
  objc_msgSendSuper2(&v9, sel_viewDidLoad);
  v1 = sub_231412514();
  v3 = v2;
  if (v1 == sub_231412514() && v3 == v4)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v6 = sub_231415070();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0)
      sub_231309A1C();
  }
  v7 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_viewControllerFactory], sel_profile);
  v8 = objc_msgSend(v7, sel_healthStore);

  if (v8)
  {
    sub_23130ACF0(&qword_255ECC230, (uint64_t)&unk_231419B70);
    sub_2314133FC();

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_23130943C()
{
  uint64_t v0;
  id v1;
  char v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;

  swift_getObjectType();
  sub_2312CEA5C((_QWORD *)(v0 + OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_pinnedContentManager), *(_QWORD *)(v0 + OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_pinnedContentManager + 24));
  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_objectType), sel_identifier);
  sub_2314146BC();

  v2 = sub_231411B18();
  swift_bridgeObjectRelease();
  if (v2 != 2)
    return v2 & 1;
  if (qword_25415BD10 != -1)
    swift_once();
  v3 = sub_231413780();
  sub_2312CE3B8(v3, (uint64_t)qword_254162E78);
  v4 = sub_231413768();
  v5 = sub_23141498C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v11 = v7;
    *(_DWORD *)v6 = 136446210;
    v8 = sub_2314151A8();
    sub_23133180C(v8, v9, &v11);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v4, v5, "[%{public}s] Unable to fetch pinned status", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v7, -1, -1);
    MEMORY[0x2348DE308](v6, -1, -1);
  }

  return 0;
}

uint64_t sub_231309684(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v2 = v1;
  swift_getObjectType();
  if (qword_25415BD10 != -1)
    swift_once();
  v4 = sub_231413780();
  sub_2312CE3B8(v4, (uint64_t)qword_254162E78);
  v5 = sub_231413768();
  v6 = sub_23141498C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v12 = v8;
    *(_DWORD *)v7 = 136446466;
    v9 = sub_2314151A8();
    sub_23133180C(v9, v10, &v12);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 1024;
    sub_231414CBC();
    _os_log_impl(&dword_2312C8000, v5, v6, "[%{public}s] Setting favorite: %{BOOL}d", (uint8_t *)v7, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v8, -1, -1);
    MEMORY[0x2348DE308](v7, -1, -1);
  }

  sub_2312CEA5C((_QWORD *)(v2 + OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_pinnedContentManager), *(_QWORD *)(v2 + OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_pinnedContentManager + 24));
  if ((a1 & 1) != 0)
    return sub_231411B24();
  else
    return sub_231411B30();
}

void sub_231309870()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;

  v1 = v0;
  v2 = sub_231411608();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)&v1[OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_displayType];
  v7 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_viewControllerFactory], sel_profile);
  v8 = objc_msgSend(v7, sel_healthStore);

  if (v8)
  {
    v9 = objc_msgSend(v1, sel_resolvedHealthToolbox);
    sub_2314115FC();
    v10 = (void *)sub_2314115C0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v11 = objc_msgSend(v6, sel_wd_addDataViewControllerWithHealthStore_healthToolBox_initialStartDate_, v8, v9, v10);

    v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A728]), sel_initWithRootViewController_, v11);
    objc_msgSend(v1, sel_presentViewController_animated_completion_, v12, 1, 0);

  }
  else
  {
    __break(1u);
  }
}

void sub_231309A1C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  _BYTE v18[24];
  _QWORD v19[3];
  uint64_t v20;

  v1 = v0;
  v2 = (uint64_t)&v0[OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_consumedHealthExperienceStore];
  swift_beginAccess();
  sub_23130AC10(v2, (uint64_t)v19);
  v3 = v20;
  if (!v20)
    goto LABEL_11;
  v4 = sub_2312CEA5C(v19, v20);
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *))(v5 + 16))(v7);
  sub_2312F1A20((uint64_t)v19, &qword_255ECC210, (void (*)(uint64_t))sub_23130ABBC);
  v8 = (void *)sub_23141183C();
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v3);
  v9 = *(void **)&v1[OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_viewControllerFactory];
  v10 = objc_msgSend(v9, sel_profile);
  v11 = objc_msgSend(v10, sel_healthStore);

  if (!v11)
  {
    __break(1u);
    goto LABEL_10;
  }
  v12 = objc_msgSend(v11, sel_profileIdentifier);

  v13 = objc_msgSend(v9, sel_profile);
  v14 = objc_msgSend(v13, sel_healthStore);

  if (!v14)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    sub_2312F1A20((uint64_t)v19, &qword_255ECC210, (void (*)(uint64_t))sub_23130ABBC);
    sub_231414EE4();
    __break(1u);
    return;
  }
  v15 = objc_msgSend(v1, sel_title);
  if (v15)
  {
    v16 = v15;
    sub_2314146BC();

  }
  type metadata accessor for ElectrocardiogramDataTypeDetailViewController();
  sub_23130ACF0(&qword_255ECC220, (uint64_t)&unk_231419B8C);
  v17 = sub_2314132A0();

  swift_bridgeObjectRelease();
  if (v17)
  {
    swift_beginAccess();
    sub_231413D2C();
    swift_endAccess();

    swift_release();
  }
  else
  {

  }
}

void sub_231309D18()
{
  char *v0;
  char *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  _QWORD v33[3];
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  id v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = sub_231413780();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D1E78(0, &qword_25415C0F0, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
  MEMORY[0x24BDAC7A8](v7);
  v41 = (char *)v33 - v8;
  sub_2312D1E78(0, &qword_255ECC228, (void (*)(uint64_t))MEMORY[0x24BE49D28]);
  MEMORY[0x24BDAC7A8](v9);
  v42 = (char *)v33 - v10;
  v11 = sub_231414590();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v43 = (char *)v33 - v16;
  v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v17;
  *(_QWORD *)(v18 + 24) = ObjectType;
  v19 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_viewControllerFactory], sel_profile);
  v20 = objc_msgSend(v19, sel_healthStore);

  if (v20)
  {
    v33[2] = v20;
    v34 = v15;
    v35 = v12;
    v36 = v11;
    v37 = v4;
    v38 = v3;
    v39 = v6;
    v40 = v1;
    v21 = (void *)*MEMORY[0x24BDD2DE0];
    v22 = type metadata accessor for ECGFeatureRegulatoryInfoTransformProvider();
    swift_allocObject();
    v33[1] = v21;
    v23 = sub_23141459C();
    v45 = v22;
    v46 = MEMORY[0x24BE49EF8];
    v44 = v23;
    if (qword_255ECAAF0 != -1)
      swift_once();
    sub_231411374();
    sub_231411374();
    swift_retain();
    sub_231411374();
    sub_2314114A0();
    swift_bridgeObjectRelease();
    v24 = v42;
    sub_23141456C();
    v25 = sub_231414578();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 0, 1, v25);
    if (qword_25415BD10 != -1)
      swift_once();
    v26 = v38;
    v27 = sub_2312CE3B8(v38, (uint64_t)qword_254162E78);
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v39, v27, v26);
    v28 = v43;
    sub_231414584();
    v29 = objc_allocWithZone((Class)type metadata accessor for ElectroCardiogramFeatureRegulatoryDetailViewController());
    v30 = v35;
    v31 = v36;
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v34, v28, v36);
    v32 = (void *)sub_23141420C();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v28, v31);
    objc_msgSend(v40, sel_showAdaptively_sender_, v32, 0);
    swift_release();

  }
  else
  {
    __break(1u);
  }
}

void sub_23130A1B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14[3];

  v1 = a1 + 16;
  if (qword_25415BD10 != -1)
    swift_once();
  v2 = sub_231413780();
  sub_2312CE3B8(v2, (uint64_t)qword_254162E78);
  v3 = sub_231413768();
  v4 = sub_23141498C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v14[0] = v6;
    *(_DWORD *)v5 = 136446210;
    v7 = sub_2314151A8();
    v13 = sub_23133180C(v7, v8, v14);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v3, v4, "[%{public}s] Reenable ECG button action selected", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v6, -1, -1);
    MEMORY[0x2348DE308](v5, -1, -1);
  }

  swift_beginAccess();
  v9 = (void *)MEMORY[0x2348DE3BC](v1);
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(v9, sel_navigationController);
    if (v11)
    {
      v12 = v11;

    }
    objc_msgSend(v10, sel_didSelectReenableFeature, v13, v14[0]);

  }
}

uint64_t sub_23130A3A0(uint64_t a1)
{
  objc_class *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v10;

  v3 = sub_231414590();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_allocWithZone(v1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  v8 = sub_23141420C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v8;
}

id sub_23130A540(uint64_t a1)
{
  return sub_23130AAB8(a1, type metadata accessor for ElectrocardiogramDataTypeDetailViewController);
}

uint64_t type metadata accessor for ElectrocardiogramDataTypeDetailViewController()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ElectroCardiogramFeatureRegulatoryDetailViewController()
{
  uint64_t result;

  result = qword_255ECC160;
  if (!qword_255ECC160)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23130A630()
{
  return swift_initClassMetadata2();
}

void sub_23130A66C()
{
  _QWORD *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(*(id *)(*v0 + OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_viewControllerFactory), sel_profile);
  v2 = objc_msgSend(v1, sel_healthStore);

  if (!v2)
    __break(1u);
}

uint64_t sub_23130A6D4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_2312DF850(*v1 + OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_pinnedContentManager, a1);
}

uint64_t sub_23130A6FC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = *v1 + OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_consumedHealthExperienceStore;
  swift_beginAccess();
  return sub_23130AC10(v3, a1);
}

uint64_t sub_23130A750(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = *v1 + OBJC_IVAR____TtC5Heart45ElectrocardiogramDataTypeDetailViewController_consumedHealthExperienceStore;
  swift_beginAccess();
  sub_23130AB68(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_23130A7AC())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_23130A7F4(char a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;

  v3 = objc_msgSend(v1, sel_navigationItem);
  if ((a1 & 1) != 0)
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD410]), sel_initWithBarButtonSystemItem_target_action_, 0, v1, sel_didTapDone_);
    v7 = MEMORY[0x24BEE4AF8];
    if (v4)
    {
      v5 = v4;
      MEMORY[0x2348DD15C]();
      if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_2314147DC();
      sub_2314147E8();
      sub_2314147B8();
    }
    else
    {
      v5 = 0;
    }
  }
  else
  {
    v5 = 0;
  }

  sub_23130AC64();
  v6 = (id)sub_231414788();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setRightBarButtonItems_, v6);

}

uint64_t sub_23130A930(void *a1)
{
  id v2;
  uint64_t v4;

  swift_unknownObjectRetain();
  v2 = a1;
  sub_231414D04();
  sub_2314130CC();
  objc_msgSend(v2, sel_dismissViewControllerAnimated_completion_, 1, 0);

  return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v4);
}

void *sub_23130A9A0(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  void (*v10)(uint64_t, uint64_t);
  id v11;
  uint64_t v13;

  v4 = sub_231414590();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_allocWithZone(v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  v9 = (void *)sub_231414200();
  v10 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v11 = v9;
  v10(a2, v4);
  if (v9)

  return v9;
}

id sub_23130AA60(void *a1, uint64_t a2, uint64_t a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for ElectroCardiogramFeatureRegulatoryDetailViewController();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_23130AAA8()
{
  return sub_23130AAB8(0, type metadata accessor for ElectroCardiogramFeatureRegulatoryDetailViewController);
}

id sub_23130AAB8(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_23130AAE8()
{
  return type metadata accessor for ElectroCardiogramFeatureRegulatoryDetailViewController();
}

void sub_23130AAF0(void *a1)
{
  id v1;

  v1 = a1;
  sub_23130A7F4(1);

}

void sub_23130AB2C(void *a1)
{
  id v1;

  v1 = a1;
  sub_23130A7F4(0);

}

uint64_t sub_23130AB68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312D1E78(0, &qword_255ECC210, (void (*)(uint64_t))sub_23130ABBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_23130ABBC()
{
  unint64_t result;

  result = qword_255ECE930;
  if (!qword_255ECE930)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255ECE930);
  }
  return result;
}

uint64_t sub_23130AC10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312D1E78(0, &qword_255ECC210, (void (*)(uint64_t))sub_23130ABBC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23130AC64()
{
  unint64_t result;

  result = qword_255ECC218;
  if (!qword_255ECC218)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255ECC218);
  }
  return result;
}

uint64_t sub_23130ACA0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23130ACC4()
{
  swift_release();
  return swift_deallocObject();
}

void sub_23130ACE8()
{
  uint64_t v0;

  sub_23130A1B0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23130ACF0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for ElectrocardiogramDataTypeDetailViewController();
    result = MEMORY[0x2348DE248](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_23130AD2C()
{
  id v0;
  void *v1;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
  v1 = (void *)sub_23141468C();
  objc_msgSend(v0, sel_setLocalizedDateFormatFromTemplate_, v1);

  qword_255ED2B80 = (uint64_t)v0;
}

uint64_t sub_23130AD9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18[2];

  v18[1] = a1;
  v1 = sub_231413A68();
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_2314139F0();
  MEMORY[0x24BDAC7A8](v2);
  v3 = type metadata accessor for AFibBurdenPDFChartHorizontalAxisProvider();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  sub_2312D1E78(0, &qword_255ECB8C8, (void (*)(uint64_t))MEMORY[0x24BDCF2D8]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v18 - v7;
  v9 = sub_231411764();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_231413A20();
  MEMORY[0x24BDAC7A8](v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BDCF250], v9);
  v14 = sub_23141177C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v8, 1, 1, v14);
  sub_231413A08();
  sub_2312F1A20((uint64_t)v8, &qword_255ECB8C8, (void (*)(uint64_t))MEMORY[0x24BDCF2D8]);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_23130B904(v18[0], (uint64_t)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v16 = swift_allocObject();
  sub_23130B9B8((uint64_t)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15);
  sub_2314139E4();
  sub_231413A5C();
  sub_23130BA48();
  sub_23130BBD8();
  return sub_231413B88();
}

uint64_t type metadata accessor for AFibBurdenPDFChartHorizontalAxisProvider()
{
  uint64_t result;

  result = qword_255ECC2B0;
  if (!qword_255ECC2B0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23130B06C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  void (*v63)(char *, uint64_t);
  void (*v64)(char *, uint64_t);
  _QWORD v66[4];
  __int128 v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  v71 = a2;
  v86 = a3;
  v4 = sub_231413AB0();
  MEMORY[0x24BDAC7A8](v4);
  v74 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_231413AD4();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23130BB78();
  v79 = v9;
  v77 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v76 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312EDF34(0);
  v81 = v11;
  v80 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v78 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312EDE60(0);
  v85 = v13;
  v83 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v84 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v82 = (char *)&v67 - v16;
  v17 = sub_231413B28();
  MEMORY[0x24BDAC7A8](v17);
  v70 = sub_231413B40();
  v69 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v19 = (char *)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23130BAF4(0, &qword_255ECC240, v20, MEMORY[0x24BDB8208]);
  v89 = *(_QWORD *)(v21 - 8);
  v90 = v21;
  v22 = MEMORY[0x24BDAC7A8](v21);
  v68 = (char *)&v67 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v88 = (char *)&v67 - v24;
  v25 = sub_231413978();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v67 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23130BAF4(0, (unint64_t *)&qword_255ECB890, v29, MEMORY[0x24BDB7B30]);
  v87 = v30;
  v92 = *(_QWORD *)(v30 - 8);
  v31 = MEMORY[0x24BDAC7A8](v30);
  v75 = (char *)&v67 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x24BDAC7A8](v31);
  v35 = (char *)&v67 - v34;
  MEMORY[0x24BDAC7A8](v33);
  v91 = (char *)&v67 - v36;
  v72 = a1;
  v37 = sub_231413BB8();
  v73 = v8;
  if (v37)
  {
    if (qword_255ECAA48 != -1)
      swift_once();
    v67 = xmmword_255ED2E60;
    v38 = qword_255ED2E70;
    v39 = qword_255ED2E80;
    v37 = sub_231412A90();
    v40 = v67;
  }
  else
  {
    v38 = 0;
    v39 = 0;
    v40 = 0uLL;
  }
  v101 = v40;
  v102 = v38;
  v103 = v37;
  v104 = v39;
  sub_23141396C();
  if (qword_255ECAA38 != -1)
    swift_once();
  *(_QWORD *)&v97 = qword_255ED2E30;
  sub_231413B04();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v91, v35, v87);
  if (qword_255ECAA48 != -1)
    swift_once();
  v97 = xmmword_255ED2E60;
  v98 = qword_255ED2E70;
  v99 = qword_255ED2E78;
  v100 = qword_255ED2E80;
  sub_231412A90();
  sub_231413B1C();
  sub_231413B34();
  v93 = qword_255ED2E30;
  v41 = v68;
  v42 = v70;
  sub_231413B04();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v19, v42);
  (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v88, v41, v90);
  v43 = sub_231413ABC();
  v44 = v78;
  if (qword_255ECAA68 != -1)
    v43 = swift_once();
  MEMORY[0x24BDAC7A8](v43);
  sub_231413AA4();
  sub_2312EE04C();
  v66[2] = v45;
  v66[3] = sub_2312EE0FC();
  v66[0] = sub_23130C32C;
  v66[1] = v66;
  v46 = v76;
  sub_231413A2C();
  if (qword_255ECAA50 != -1)
    swift_once();
  v47 = v41;
  v93 = qword_255ED2E88;
  v48 = sub_2312CCC24((unint64_t *)&qword_255ECB888, (uint64_t (*)(uint64_t))sub_23130BB78, MEMORY[0x24BDB7E40]);
  v49 = (char *)MEMORY[0x24BDF3E48];
  v50 = MEMORY[0x24BDF3E18];
  v51 = v79;
  sub_231413B04();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v46, v51);
  if (qword_255ECAA58 != -1)
    swift_once();
  v93 = v51;
  v94 = v49;
  v95 = v48;
  v96 = v50;
  swift_getOpaqueTypeConformance2();
  v52 = v84;
  v53 = v81;
  sub_231413B10();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v44, v53);
  v54 = v83;
  v55 = v82;
  v56 = v85;
  (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v82, v52, v85);
  v57 = v75;
  v58 = v87;
  (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v75, v91, v87);
  v93 = (uint64_t)v57;
  v59 = v88;
  v60 = v89;
  v61 = v90;
  (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v47, v88, v90);
  v94 = v47;
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v52, v55, v56);
  v95 = (uint64_t)v52;
  sub_23130C17C(&v93, v86);
  v62 = *(void (**)(char *, uint64_t))(v54 + 8);
  v62(v55, v56);
  v63 = *(void (**)(char *, uint64_t))(v60 + 8);
  v63(v59, v61);
  v64 = *(void (**)(char *, uint64_t))(v92 + 8);
  v64(v91, v58);
  v62(v52, v56);
  v63(v47, v61);
  return ((uint64_t (*)(char *, uint64_t))v64)(v57, v58);
}

uint64_t sub_23130B904(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AFibBurdenPDFChartHorizontalAxisProvider();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23130B948()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AFibBurdenPDFChartHorizontalAxisProvider() - 8) + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  v3 = sub_23141177C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return swift_deallocObject();
}

uint64_t sub_23130B9B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AFibBurdenPDFChartHorizontalAxisProvider();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23130B9FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AFibBurdenPDFChartHorizontalAxisProvider() - 8) + 80);
  return sub_23130B06C(a1, v2 + ((v5 + 16) & ~v5), a2);
}

void sub_23130BA48()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECC238)
  {
    sub_23130BAF4(255, (unint64_t *)&qword_255ECB890, (uint64_t (*)(uint64_t))MEMORY[0x24BDB7B38], MEMORY[0x24BDB7B30]);
    sub_23130BAF4(255, &qword_255ECC240, (uint64_t (*)(uint64_t))MEMORY[0x24BDB8210], MEMORY[0x24BDB8208]);
    sub_2312EDE60(255);
    v0 = sub_231413984();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECC238);
  }
}

void sub_23130BAF4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  _QWORD v9[4];

  if (!*a2)
  {
    v9[0] = a3(255);
    v9[1] = MEMORY[0x24BDF3E48];
    v9[2] = a4;
    v9[3] = MEMORY[0x24BDF3E18];
    v7 = MEMORY[0x2348DE200](a1, v9, MEMORY[0x24BDB81B8], 0);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_23130BB78()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECB870)
  {
    sub_2312EE04C();
    sub_2312EE0FC();
    v0 = sub_231413A38();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECB870);
  }
}

unint64_t sub_23130BBD8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[5];
  _QWORD v7[3];

  result = qword_255ECC248;
  if (!qword_255ECC248)
  {
    sub_23130BA48();
    v2 = v1;
    sub_231413978();
    v3 = MEMORY[0x24BDF3E18];
    v7[0] = swift_getOpaqueTypeConformance2();
    sub_231413B40();
    v7[1] = swift_getOpaqueTypeConformance2();
    sub_2312EDF34(255);
    v5 = v4;
    sub_23130BB78();
    v6[3] = sub_2312CCC24((unint64_t *)&qword_255ECB888, (uint64_t (*)(uint64_t))sub_23130BB78, MEMORY[0x24BDB7E40]);
    v6[4] = v3;
    v6[1] = v5;
    v6[2] = swift_getOpaqueTypeConformance2();
    v7[2] = swift_getOpaqueTypeConformance2();
    v6[0] = v7;
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB7B88], v2, v6);
    atomic_store(result, (unint64_t *)&qword_255ECC248);
  }
  return result;
}

uint64_t sub_23130BD20@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  sub_23130BDE4(a1);
  sub_2312D104C();
  v3 = sub_2314142F0();
  v5 = v4;
  v7 = v6;
  v9 = v8;
  if (qword_255ECAA60 != -1)
    swift_once();
  v10 = qword_255ED2E98;
  result = swift_getKeyPath();
  *(_QWORD *)a2 = v3;
  *(_QWORD *)(a2 + 8) = v5;
  *(_BYTE *)(a2 + 16) = v7 & 1;
  *(_QWORD *)(a2 + 24) = v9;
  *(_QWORD *)(a2 + 32) = result;
  *(_QWORD *)(a2 + 40) = v10;
  return result;
}

uint64_t sub_23130BDE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  void (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v2 = sub_231413BC4();
  v38 = *(_QWORD *)(v2 - 8);
  v39 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_231411764();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_231411608();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D1E78(0, (unint64_t *)&qword_25415D500, v13);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v35 - v18;
  v37 = a1;
  sub_231413BA0();
  sub_2312D3870((uint64_t)v19, (uint64_t)v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v17, 1, v9) == 1)
  {
    v20 = (void (*)(uint64_t))MEMORY[0x24BDCE900];
    sub_2312F1A20((uint64_t)v17, (unint64_t *)&qword_25415D500, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    sub_2312F1A20((uint64_t)v19, (unint64_t *)&qword_25415D500, v20);
    return 0;
  }
  v36 = v10;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v17, v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BDCF250], v5);
  v22 = sub_231411770();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v23 = v22 - 1;
  if (__OFSUB__(v22, 1))
  {
    __break(1u);
    goto LABEL_15;
  }
  v24 = v38;
  v25 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v4, v37, v39);
  if (v22 == 1)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v4, v25);
LABEL_10:
    if (qword_255ECA9A0 == -1)
    {
LABEL_11:
      v31 = (void *)qword_255ED2B80;
      v32 = (void *)sub_2314115C0();
      v33 = objc_msgSend(v31, sel_stringFromDate_, v32);

      v29 = sub_2314146BC();
      v30 = v34;

      goto LABEL_12;
    }
LABEL_15:
    swift_once();
    goto LABEL_11;
  }
  v26 = sub_231413BB8();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v4, v25);
  if (!v26)
    goto LABEL_10;
  result = sub_2314116E0();
  if ((v23 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v23 < *(_QWORD *)(result + 16))
  {
    v28 = result + 16 * v23;
    v29 = *(_QWORD *)(v28 + 32);
    v30 = *(_QWORD *)(v28 + 40);
    sub_231412A90();
    swift_bridgeObjectRelease();
LABEL_12:
    v40 = v29;
    v41 = v30;
    sub_2312D104C();
    v21 = sub_231414CD4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v12, v9);
    sub_2312F1A20((uint64_t)v19, (unint64_t *)&qword_25415D500, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    return v21;
  }
  __break(1u);
  return result;
}

uint64_t sub_23130C17C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, char *, uint64_t);
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v23 = a2;
  sub_23130C334();
  v4 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23130BAF4(0, (unint64_t *)&qword_255ECB890, (uint64_t (*)(uint64_t))MEMORY[0x24BDB7B38], MEMORY[0x24BDB7B30]);
  v8 = v7;
  sub_231413978();
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 16))(v6, *a1, v8);
  sub_23130BAF4(0, &qword_255ECC240, (uint64_t (*)(uint64_t))MEMORY[0x24BDB8210], MEMORY[0x24BDB8208]);
  v11 = v10;
  sub_231413B40();
  v12 = &v6[*(int *)(v4 + 48)];
  v13 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 16))(v12, a1[1], v11);
  sub_2312EDE60(0);
  v15 = v14;
  sub_2312EDF34(255);
  sub_23130BB78();
  sub_2312CCC24((unint64_t *)&qword_255ECB888, (uint64_t (*)(uint64_t))sub_23130BB78, MEMORY[0x24BDB7E40]);
  v16 = &v6[*(int *)(v4 + 64)];
  v17 = a1[2];
  v18 = *(_QWORD *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v16, v17, v15);
  v19 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 32);
  v20 = v23;
  v19(v23, v6, v8);
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v20 + *(int *)(v4 + 48), v12, v11);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v18 + 32))(v20 + *(int *)(v4 + 64), v16, v15);
}

uint64_t sub_23130C32C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23130BD20(*(_QWORD *)(v1 + 24), a1);
}

void sub_23130C334()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_255ECC250)
  {
    sub_23130BAF4(255, (unint64_t *)&qword_255ECB890, (uint64_t (*)(uint64_t))MEMORY[0x24BDB7B38], MEMORY[0x24BDB7B30]);
    sub_23130BAF4(255, &qword_255ECC240, (uint64_t (*)(uint64_t))MEMORY[0x24BDB8210], MEMORY[0x24BDB8208]);
    sub_2312EDE60(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_255ECC250);
  }
}

uint64_t sub_23130C3E8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_2314140E0();
  *a1 = v3;
  return result;
}

uint64_t sub_23130C410@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_2314140E0();
  *a1 = v3;
  return result;
}

uint64_t sub_23130C438()
{
  return sub_2314140EC();
}

uint64_t sub_23130C45C()
{
  return sub_2314140EC();
}

uint64_t sub_23130C480(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23141177C();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_23130C4BC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23141177C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_23130C4F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23141177C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_23130C534(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23141177C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_23130C578(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23141177C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_23130C5BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23141177C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_23130C600()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23130C60C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23141177C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_23130C648()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23130C654(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23141177C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_23130C694()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23141177C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23130C6FC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_231413E40();
  swift_release();
  return swift_release();
}

uint64_t sub_23130C760()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC5Heart43AtrialFibrillationFeatureStatusAvailability_subscriptions);
  swift_beginAccess();
  *v1 = MEMORY[0x24BEE4B08];
  swift_bridgeObjectRelease();

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 24);
  v2 = v0 + OBJC_IVAR____TtC5Heart43AtrialFibrillationFeatureStatusAvailability__featureStatus;
  sub_2312D6DD8(0, &qword_25415DE40, (uint64_t (*)(uint64_t))sub_2312E9964, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  sub_2312CEBD4(v0 + OBJC_IVAR____TtC5Heart43AtrialFibrillationFeatureStatusAvailability_status, (uint64_t (*)(_QWORD))sub_2312DC5EC);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_23130C840()
{
  return type metadata accessor for AtrialFibrillationFeatureStatusAvailability();
}

uint64_t type metadata accessor for AtrialFibrillationFeatureStatusAvailability()
{
  uint64_t result;

  result = qword_25415E3C8;
  if (!qword_25415E3C8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23130C884()
{
  unint64_t v0;
  unint64_t v1;

  sub_2312D6DD8(319, &qword_25415DE40, (uint64_t (*)(uint64_t))sub_2312E9964, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  if (v0 <= 0x3F)
  {
    sub_2312DC5EC(319);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t sub_23130C944()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[4];
  char *v23;
  uint64_t v24;
  char *v25;

  v22[3] = *v0;
  v1 = sub_23141357C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v23 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312E9964(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v24 = (uint64_t)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v25 = (char *)v22 - v7;
  sub_2312DC5EC(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)v22 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v22 - v15;
  sub_2312CEA5C(v0 + 3, v0[6]);
  sub_2314135E8();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2 + 56))(v14, 0, 1, v1);
  sub_23130D308((uint64_t)v14, (uint64_t)v16);
  v17 = (uint64_t)v25;
  v18 = (uint64_t)v0 + OBJC_IVAR____TtC5Heart43AtrialFibrillationFeatureStatusAvailability_status;
  swift_beginAccess();
  sub_23130D9E4((uint64_t)v16, v18);
  swift_endAccess();
  sub_2312D6C20((uint64_t)v16, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_2312DC5EC);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v11, 1, v1) == 1)
  {
    v19 = sub_231411D1C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v17, 1, 1, v19);
  }
  else
  {
    v20 = (uint64_t)v23;
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v23, v11, v1);
    swift_retain();
    sub_23130CE24(v20, v17);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v20, v1);
    swift_release();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2312D6C20(v17, v24, (uint64_t (*)(_QWORD))sub_2312E9964);
  swift_retain();
  sub_231413E4C();
  sub_2312CEBD4(v17, (uint64_t (*)(_QWORD))sub_2312E9964);
  return sub_2312CEBD4((uint64_t)v16, (uint64_t (*)(_QWORD))sub_2312DC5EC);
}

uint64_t sub_23130CE24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v4;
  char v5;
  void *v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  unsigned int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = (void *)sub_231413588();
  v5 = sub_231414B90();

  if ((v5 & 1) == 0)
  {
    v13 = sub_231411D1C();
    v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
    v15 = a2;
    v16 = 1;
    return v14(v15, v16, 1, v13);
  }
  if ((sub_23130D4F8(a1) & 1) == 0)
  {
    v17 = (unsigned int *)MEMORY[0x24BE41280];
LABEL_10:
    v18 = *v17;
    v19 = sub_231411D1C();
    v20 = *(_QWORD *)(v19 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 104))(a2, v18, v19);
    v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    v15 = a2;
    v16 = 0;
    v13 = v19;
    return v14(v15, v16, 1, v13);
  }
  v6 = (void *)sub_231413588();
  v7 = sub_231414B90();
  v8 = sub_231414B90();

  if ((v7 & 1) == 0 || (v8 & 1) == 0)
  {
    v17 = (unsigned int *)MEMORY[0x24BE41288];
    goto LABEL_10;
  }
  v9 = sub_23130D700(a1);
  v10 = sub_231411D1C();
  v11 = *(_QWORD *)(v10 - 8);
  if ((v9 & 1) != 0)
    v12 = (unsigned int *)MEMORY[0x24BE41298];
  else
    v12 = (unsigned int *)MEMORY[0x24BE412A0];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v11 + 104))(a2, *v12, v10);
  v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v15 = a2;
  v16 = 0;
  v13 = v10;
  return v14(v15, v16, 1, v13);
}

uint64_t sub_23130CFB0()
{
  uint64_t v0;

  sub_2312CEA5C((_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 48));
  sub_231413600();
  swift_allocObject();
  swift_weakInit();
  sub_2312DC608();
  sub_23130D2C0();
  sub_231413F90();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_231413D2C();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_23130D09C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23130D0C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[24];

  sub_2312E9964(0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v3);
  v7 = &v19[-v6];
  sub_2312DC5EC(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = &v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v13 = &v19[-v12];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v15 = result;
    v16 = sub_23141357C();
    v17 = *(_QWORD *)(v16 - 8);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v17 + 16))(v13, a1, v16);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
    sub_23130D308((uint64_t)v13, (uint64_t)v11);
    v18 = v15 + OBJC_IVAR____TtC5Heart43AtrialFibrillationFeatureStatusAvailability_status;
    swift_beginAccess();
    sub_23130D34C((uint64_t)v11, v18);
    swift_endAccess();
    sub_23130CE24(a1, (uint64_t)v7);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2312D6C20((uint64_t)v7, (uint64_t)v5, (uint64_t (*)(_QWORD))sub_2312E9964);
    swift_retain();
    sub_231413E4C();
    sub_2312CEBD4((uint64_t)v7, (uint64_t (*)(_QWORD))sub_2312E9964);
    return swift_release();
  }
  return result;
}

uint64_t sub_23130D2B8(uint64_t a1)
{
  return sub_23130D0C0(a1);
}

unint64_t sub_23130D2C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25415CFB0;
  if (!qword_25415CFB0)
  {
    sub_2312DC608();
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB9AF8], v1);
    atomic_store(result, (unint64_t *)&qword_25415CFB0);
  }
  return result;
}

uint64_t sub_23130D308(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312DC5EC(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23130D34C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312DC5EC(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23130D390()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_231413E40();
  swift_release();
  return swift_release();
}

uint64_t sub_23130D3FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  sub_2312E9964(0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v9 - v6;
  sub_2312D6C20(a1, (uint64_t)&v9 - v6, (uint64_t (*)(_QWORD))sub_2312E9964);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2312D6C20((uint64_t)v7, (uint64_t)v5, (uint64_t (*)(_QWORD))sub_2312E9964);
  swift_retain();
  sub_231413E4C();
  return sub_2312CEBD4((uint64_t)v7, (uint64_t (*)(_QWORD))sub_2312E9964);
}

uint64_t sub_23130D4F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  void *v7;
  char v8;
  uint64_t v9;
  char v10;
  char v11;
  void *v12;
  char v13;
  void *v14;
  char v15;
  void *v16;
  char v17;
  char v18;
  uint64_t v20;
  int v21;
  int v22;

  v2 = sub_23141357C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (void *)sub_231413588();
  v22 = sub_231414B90();

  v7 = (void *)sub_231413588();
  v21 = sub_231414B90();
  v8 = sub_231414B90();

  v9 = sub_231413588();
  v10 = sub_231414B90();
  v11 = sub_231414B90();

  LOBYTE(v9) = sub_231413570();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  if ((v9 & 1) != 0)
  {
    v12 = (void *)sub_231413588();
    v13 = sub_231414B90();

  }
  else
  {
    v13 = 1;
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v14 = (void *)sub_231413588();
  v15 = sub_231414B90();

  v16 = (void *)sub_231413588();
  v17 = sub_231414B90();

  if ((v17 & 1) != 0)
    v18 = v21 & v8 & v22 & v10 & v11 & v13 & v15;
  else
    v18 = 0;
  return v18 & 1;
}

uint64_t sub_23130D700(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  int v17;
  void *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  sub_23130D990();
  v22 = *(_QWORD *)(v2 - 8);
  v23 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_231413540();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23141357C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v20 - v14;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v21 = a1;
  v16((char *)&v20 - v14, a1, v9);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v15, v9);
  if (v17 == *MEMORY[0x24BE45748])
  {
    (*(void (**)(char *, uint64_t))(v10 + 96))(v15, v9);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v15, v5);
    v18 = (void *)sub_231413534();
    sub_231414A40();
    sub_231414A58();

    (*(void (**)(char *, uint64_t))(v22 + 8))(v4, v23);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return v24 & 1;
  }
  else if (v17 == *MEMORY[0x24BE45700])
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    return 0;
  }
  else
  {
    v16(v13, v21, v9);
    v24 = 0;
    v25 = 0xE000000000000000;
    sub_231414E18();
    sub_231414728();
    sub_231414ECC();
    result = sub_231414EE4();
    __break(1u);
  }
  return result;
}

void sub_23130D990()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECACA0)
  {
    v0 = sub_231414A4C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECACA0);
  }
}

uint64_t sub_23130D9E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312DC5EC(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_23130DA28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t result;
  uint64_t aBlock;
  unint64_t v10;
  uint64_t (*v11)(uint64_t);
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[6];

  v1 = v0 + OBJC_IVAR____TtC5Heart35AFibBurdenLifeFactorDescriptionCell_item;
  swift_beginAccess();
  sub_2312D1C94(v1, (uint64_t)v17);
  if (v17[3])
  {
    sub_2312D1CE8();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v2 = v15;
      v3 = sub_23130DCF8();
      v4 = (void *)sub_23141468C();
      v5 = (void *)sub_23141468C();
      if (v14)
      {
        sub_231412A90();
        v6 = (void *)sub_23141468C();
        swift_bridgeObjectRelease();
        if (v15)
        {
LABEL_5:
          v13 = v15;
          v14 = v16;
          aBlock = MEMORY[0x24BDAC760];
          v10 = 1107296256;
          v11 = sub_23130DCCC;
          v12 = &unk_250021788;
          v7 = _Block_copy(&aBlock);
          swift_retain();
          swift_release();
LABEL_8:
          objc_msgSend(v3, sel_populateWithTitle_detail_buttonText_buttonAction_, v4, v5, v6, v7);
          _Block_release(v7);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          return sub_23130E320(v2);
        }
      }
      else
      {
        v6 = 0;
        if (v15)
          goto LABEL_5;
      }
      v7 = 0;
      goto LABEL_8;
    }
  }
  else
  {
    sub_2312D1D70((uint64_t)v17);
  }
  aBlock = 0;
  v10 = 0xE000000000000000;
  sub_231414E18();
  swift_bridgeObjectRelease();
  v17[0] = 0xD000000000000026;
  v17[1] = 0x8000000231428170;
  sub_2312D1C94(v1, (uint64_t)&aBlock);
  sub_23130E2CC();
  sub_2314146EC();
  sub_231414728();
  swift_bridgeObjectRelease();
  result = sub_231414EE4();
  __break(1u);
  return result;
}

uint64_t sub_23130DCCC(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

id sub_23130DCF8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Heart35AFibBurdenLifeFactorDescriptionCell____lazy_storage___titleDetailOptionalButtonView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC5Heart35AFibBurdenLifeFactorDescriptionCell____lazy_storage___titleDetailOptionalButtonView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC5Heart35AFibBurdenLifeFactorDescriptionCell____lazy_storage___titleDetailOptionalButtonView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A8D0]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_23130DD7C(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t ObjectType;
  char *v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v27;
  objc_super v28;
  uint64_t v29;

  ObjectType = swift_getObjectType();
  v10 = &v4[OBJC_IVAR____TtC5Heart35AFibBurdenLifeFactorDescriptionCell_item];
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((_QWORD *)v10 + 4) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Heart35AFibBurdenLifeFactorDescriptionCell____lazy_storage___titleDetailOptionalButtonView] = 0;
  v28.receiver = v4;
  v28.super_class = (Class)type metadata accessor for AFibBurdenLifeFactorDescriptionCell();
  v11 = objc_msgSendSuper2(&v28, sel_initWithFrame_, a1, a2, a3, a4);
  v12 = qword_25415C170;
  v13 = v11;
  if (v12 != -1)
    swift_once();
  v14 = sub_231413780();
  sub_2312CE3B8(v14, (uint64_t)qword_254162F00);
  v15 = sub_231413768();
  v16 = sub_23141498C();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v27 = v18;
    *(_DWORD *)v17 = 136315138;
    v29 = ObjectType;
    swift_getMetatypeMetadata();
    v19 = sub_2314146E0();
    v29 = sub_23133180C(v19, v20, &v27);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v15, v16, "[%s] Initializing", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v18, -1, -1);
    MEMORY[0x2348DE308](v17, -1, -1);
  }

  v21 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemGroupedBackgroundColor);
  objc_msgSend(v13, sel_setBackgroundColor_, v21);

  v22 = objc_msgSend(v13, sel_contentView);
  v23 = sub_23130DCF8();
  objc_msgSend(v22, sel_addSubview_, v23);

  v24 = sub_23130DCF8();
  v25 = objc_msgSend(v13, sel_contentView);
  objc_msgSend(v24, sel_hk_alignConstraintsWithView_, v25);

  return v13;
}

id sub_23130E0F4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AFibBurdenLifeFactorDescriptionCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AFibBurdenLifeFactorDescriptionCell()
{
  return objc_opt_self();
}

uint64_t sub_23130E17C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC5Heart35AFibBurdenLifeFactorDescriptionCell_item;
  swift_beginAccess();
  return sub_2312D1C94(v3, a1);
}

uint64_t sub_23130E1CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC5Heart35AFibBurdenLifeFactorDescriptionCell_item;
  swift_beginAccess();
  sub_2312D1E24(a1, v3);
  swift_endAccess();
  sub_23130DA28();
  return sub_2312D1D70(a1);
}

uint64_t (*sub_23130E238(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_23130E280;
}

uint64_t sub_23130E280(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_23130DA28();
  return result;
}

unint64_t sub_23130E2B0()
{
  return 0xD000000000000023;
}

void sub_23130E2CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECB1A8)
  {
    sub_2312D1CE8();
    v0 = sub_231414CB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECB1A8);
  }
}

uint64_t sub_23130E320(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_23130E330(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23130E340()
{
  return swift_release();
}

void sub_23130E348()
{
  __asm { BR              X9 }
}

uint64_t sub_23130E38C()
{
  uint64_t v0;

  sub_231414E18();
  sub_231414728();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  if (qword_255ECAAD8 != -1)
    swift_once();
  v0 = sub_231411374();
  swift_bridgeObjectRelease();
  return v0;
}

void sub_23130E4D4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_23130E7F0(*(_BYTE *)(v0 + 16), (uint64_t)sub_23130EFBC, v0, *(void **)(v0 + 24));
  __asm { BR              X9 }
}

void sub_23130E548()
{
  uint64_t *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  swift_release();
  sub_231414E18();
  sub_231412A90();
  swift_bridgeObjectRelease();
  sub_231414728();
  v1 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v2 = (id)HKUIAFibBurdenLocalizedString();

  if (!v2)
  {
    sub_23130E320(0);
    __break(1u);
    goto LABEL_8;
  }
  v3 = sub_2314146BC();
  v5 = v4;

  sub_231414E18();
  sub_231412A90();
  swift_bridgeObjectRelease();
  sub_231414728();
  v6 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v7 = (id)HKUIAFibBurdenLocalizedString();

  if (!v7)
  {
LABEL_8:
    sub_23130E320(0);
    __break(1u);
    JUMPOUT(0x23130E7DCLL);
  }
  v8 = sub_2314146BC();
  v10 = v9;

  sub_231414E18();
  swift_bridgeObjectRelease();
  sub_231414728();
  v11 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v12 = (id)HKUIAFibBurdenLocalizedString();

  if (v12)
  {
    v13 = sub_2314146BC();
    v15 = v14;

  }
  else
  {
    v13 = 0;
    v15 = 0;
  }
  *v0 = v3;
  v0[1] = v5;
  v0[2] = v8;
  v0[3] = v10;
  v0[4] = v13;
  v0[5] = v15;
  v0[6] = 0;
  v0[7] = 0;
}

void (*sub_23130E7F0(char a1, uint64_t a2, uint64_t a3, void *a4))()
{
  uint64_t v4;
  uint64_t v9;
  id v10;

  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a4;
  *(_BYTE *)(v9 + 24) = a1;
  *(_QWORD *)(v9 + 32) = a2;
  *(_QWORD *)(v9 + 40) = a3;
  *(_QWORD *)(v9 + 48) = v4;
  v10 = a4;
  swift_retain();
  return sub_23130EFF0;
}

void sub_23130E86C(void *a1, char a2, uint64_t (*a3)(void), NSObject *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  void *v25;
  uint64_t (*v26)(void);
  id v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  void *v42;
  void *v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  NSObject *v48;
  _QWORD aBlock[6];
  uint64_t v50;

  v48 = a4;
  v9 = sub_231411608();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&aBlock[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(a1, sel_displayTypeController, v48);
  if (v13)
  {
    v14 = v13;
    sub_231318848(a2);
    v16 = v15;
    v17 = objc_msgSend(v14, sel_displayTypeForObjectType_, v15);

    if (v17)
    {
      v18 = (id)HKHRAFibBurdenLogForCategory();
      v19 = a5;
      v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3918]), sel_initWithLoggingCategory_healthDataSource_, v18, a1);

      sub_231318848(a2);
      v22 = v21;
      v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A2A8]), sel_initWithSampleType_context_, v21, 1);

      v24 = swift_allocObject();
      *(_QWORD *)(v24 + 16) = v19;
      aBlock[4] = sub_23130F014;
      aBlock[5] = v24;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_231330294;
      aBlock[3] = &unk_250021830;
      v25 = _Block_copy(aBlock);
      v26 = a3;
      v27 = v23;
      v28 = v20;
      v29 = v27;
      swift_release();
      objc_msgSend(v28, sel_submitEvent_completion_, v29, v25);
      _Block_release(v25);

      v30 = objc_msgSend((id)objc_opt_self(), sel_sharedInstanceForHealthStore_, a1);
      sub_2314115FC();
      v31 = (void *)sub_2314115C0();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v32 = objc_msgSend(v17, sel_wd_addDataViewControllerWithHealthStore_healthToolBox_initialStartDate_, a1, v30, v31);

      v33 = v26();
      if (v33)
      {
        v34 = (void *)v33;
        v35 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A728]), sel_initWithRootViewController_, v32);
        objc_msgSend(v34, sel_presentViewController_animated_completion_, v35, 1, 0);

      }
    }
    else
    {
      if (qword_25415C170 != -1)
        swift_once();
      v36 = sub_231413780();
      sub_2312CE3B8(v36, (uint64_t)qword_254162F00);
      v48 = sub_231413768();
      v37 = sub_231414980();
      if (os_log_type_enabled(v48, v37))
      {
        v38 = swift_slowAlloc();
        v39 = swift_slowAlloc();
        v50 = v39;
        *(_DWORD *)v38 = 136315394;
        aBlock[0] = a5;
        swift_getMetatypeMetadata();
        v40 = sub_2314146E0();
        aBlock[0] = sub_23133180C(v40, v41, &v50);
        sub_231414CBC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v38 + 12) = 2080;
        sub_231318848(a2);
        v43 = v42;
        v44 = objc_msgSend(v42, sel_identifier);

        v45 = sub_2314146BC();
        v47 = v46;

        aBlock[0] = sub_23133180C(v45, v47, &v50);
        sub_231414CBC();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2312C8000, v48, v37, "[%s] Unable to find display type for sample type with identifier %s", (uint8_t *)v38, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2348DE308](v39, -1, -1);
        MEMORY[0x2348DE308](v38, -1, -1);
      }

    }
  }
  else
  {
    __break(1u);
  }
}

void sub_23130ED24(int a1, id a2, uint64_t a3)
{
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  NSObject *oslog;
  uint64_t v18;
  uint64_t v19;

  if (a2)
  {
    v5 = a2;
    if (qword_25415C170 != -1)
      swift_once();
    v6 = sub_231413780();
    sub_2312CE3B8(v6, (uint64_t)qword_254162F00);
    v7 = a2;
    v8 = a2;
    oslog = sub_231413768();
    v9 = sub_231414974();
    if (os_log_type_enabled(oslog, v9))
    {
      v10 = swift_slowAlloc();
      v11 = swift_slowAlloc();
      v18 = v11;
      v19 = a3;
      *(_DWORD *)v10 = 136315394;
      swift_getMetatypeMetadata();
      v12 = sub_2314146E0();
      v19 = sub_23133180C(v12, v13, &v18);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 2082;
      v19 = (uint64_t)a2;
      v14 = a2;
      sub_2312D3C14();
      v15 = sub_2314146E0();
      v19 = sub_23133180C(v15, v16, &v18);
      sub_231414CBC();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_2312C8000, oslog, v9, "[%s] Error when sending life factor logging initiated analytics event: %{public}s", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v11, -1, -1);
      MEMORY[0x2348DE308](v10, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t sub_23130EF68()
{
  uint64_t v0;

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 32);
  swift_unknownObjectWeakDestroy();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AFibBurdenLifeFactorDetailViewModel()
{
  return objc_opt_self();
}

void sub_23130EFBC()
{
  JUMPOUT(0x2348DE3BCLL);
}

uint64_t sub_23130EFC4()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_23130EFF0()
{
  uint64_t v0;

  sub_23130E86C(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24), *(uint64_t (**)(void))(v0 + 32), *(NSObject **)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_23130F004()
{
  return swift_deallocObject();
}

void sub_23130F014(int a1, void *a2)
{
  uint64_t v2;

  sub_23130ED24(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_23130F01C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23130F02C()
{
  return swift_release();
}

uint64_t sub_23130F034(_QWORD *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];

  sub_231311390(0, &qword_25415BBD0, MEMORY[0x24BEE3520]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = &v10[-v7];
  sub_2312CEA5C(a1, a1[3]);
  sub_2313111D0();
  sub_231415178();
  v10[15] = a2;
  sub_231311214();
  sub_231415034();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_23130F134()
{
  return 0x6574617473;
}

uint64_t sub_23130F148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6574617473 && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_231415070();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23130F1D4()
{
  sub_2313111D0();
  return sub_231415190();
}

uint64_t sub_23130F1FC()
{
  sub_2313111D0();
  return sub_23141519C();
}

_QWORD *sub_23130F224@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_231311258(a1);
  if (!v2)
    *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_23130F24C(_QWORD *a1)
{
  char *v1;

  return sub_23130F034(a1, *v1);
}

id sub_23130F264()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtC5Heart37AFibBurdenRescindedTileViewController____lazy_storage___tileView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Heart37AFibBurdenRescindedTileViewController____lazy_storage___tileView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Heart37AFibBurdenRescindedTileViewController____lazy_storage___tileView);
  }
  else
  {
    sub_23141315C();
    v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    v5 = (void *)objc_opt_self();
    v6 = v4;
    v7 = objc_msgSend(v5, sel_clearColor);
    objc_msgSend(v6, sel_setBackgroundColor_, v7);

    objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v8 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

uint64_t sub_23130F340()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  objc_class *v9;
  id v10;
  objc_super v12;

  v1 = v0;
  v2 = sub_231413780();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231413750();
  v6 = sub_231413768();
  v7 = sub_23141498C();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_2312C8000, v6, v7, "AFibBurdenRescindedTileViewController loaded", v8, 2u);
    MEMORY[0x2348DE308](v8, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v9 = (objc_class *)type metadata accessor for AFibBurdenRescindedTileViewController();
  v12.receiver = v1;
  v12.super_class = v9;
  objc_msgSendSuper2(&v12, sel_viewDidLoad);
  sub_23130F530();
  v10 = sub_23130F264();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_23141312C();

  return swift_release();
}

void sub_23130F4AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x2348DE3BC](v1);
  if (v2)
  {
    v3 = (void *)v2;
    sub_23130FEE4();

  }
}

void sub_23130F530()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  char v32;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  v3 = v2;
  v4 = sub_23130F264();
  objc_msgSend(v3, sel_addSubview_, v4);

  sub_2312CF374(0, (unint64_t *)&qword_25415BD40, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_231419E70;
  v6 = sub_23130F264();
  v7 = objc_msgSend(v6, sel_topAnchor);

  v8 = objc_msgSend(v1, sel_view);
  if (!v8)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v9 = v8;
  v10 = objc_msgSend(v8, sel_topAnchor);

  v11 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v10);
  *(_QWORD *)(v5 + 32) = v11;
  v12 = sub_23130F264();
  v13 = objc_msgSend(v12, sel_bottomAnchor);

  v14 = objc_msgSend(v1, sel_view);
  if (!v14)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v15 = v14;
  v16 = objc_msgSend(v14, sel_bottomAnchor);

  v17 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v16);
  *(_QWORD *)(v5 + 40) = v17;
  v18 = sub_23130F264();
  v19 = objc_msgSend(v18, sel_leadingAnchor);

  v20 = objc_msgSend(v1, sel_view);
  if (!v20)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v21 = v20;
  v22 = objc_msgSend(v20, sel_leadingAnchor);

  v23 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v22);
  *(_QWORD *)(v5 + 48) = v23;
  v24 = sub_23130F264();
  v25 = objc_msgSend(v24, sel_trailingAnchor);

  v26 = objc_msgSend(v1, sel_view);
  if (v26)
  {
    v27 = v26;
    v28 = (void *)objc_opt_self();
    v29 = objc_msgSend(v27, sel_trailingAnchor);

    v30 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v29);
    *(_QWORD *)(v5 + 56) = v30;
    sub_2314147B8();
    sub_2312EA780();
    v31 = (void *)sub_231414788();
    swift_bridgeObjectRelease();
    objc_msgSend(v28, sel_activateConstraints_, v31);

    v32 = sub_23130F880();
    sub_23130FA28(v32);
    return;
  }
LABEL_11:
  __break(1u);
}

uint64_t sub_23130F880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD v12[3];
  uint64_t v13;

  v1 = v0 + OBJC_IVAR____TtC5Heart37AFibBurdenRescindedTileViewController_context;
  swift_beginAccess();
  sub_231310E3C(v1, (uint64_t)v12);
  v2 = v13;
  if (v13)
  {
    v3 = sub_2312CEA5C(v12, v13);
    v4 = *(_QWORD *)(v2 - 8);
    MEMORY[0x24BDAC7A8](v3);
    v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0) + 24;
    (*(void (**)(char *))(v4 + 16))(v6);
    sub_2312F1A20((uint64_t)v12, (unint64_t *)&qword_255ED2420, (void (*)(uint64_t))sub_231310DE8);
    v7 = sub_231412F04();
    v9 = v8;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
    if (v9 >> 60 != 15)
    {
      sub_2314111C4();
      swift_allocObject();
      sub_2314111B8();
      sub_231310FF0();
      sub_2314111AC();
      sub_231311034(v7, v9);
      swift_release();
      return LOBYTE(v12[0]);
    }
  }
  else
  {
    sub_2312F1A20((uint64_t)v12, (unint64_t *)&qword_255ED2420, (void (*)(uint64_t))sub_231310DE8);
  }
  return 5;
}

void sub_23130FA28(char a1)
{
  uint64_t v2;

  swift_getObjectType();
  sub_2312D4A68();
  MEMORY[0x24BDAC7A8](v2);
  __asm { BR              X10 }
}

uint64_t sub_23130FAA8()
{
  void *v0;
  void *v1;
  id v2;

  if (qword_255ECAAD8 != -1)
    swift_once();
  sub_231411374();
  v1 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setTitle_, v1);

  v2 = sub_23130F264();
  sub_231411374();
  sub_231411374();
  sub_231413138();

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23130FE20()
{
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  return 0;
}

uint64_t sub_23130FEE4()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  id v7;
  uint64_t v8;
  id v9;
  id v11;
  _QWORD v12[2];

  sub_2312D4A68();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = 1 << sub_23130F880();
  if ((v6 & 0x1A) != 0)
  {
    v7 = objc_msgSend((id)objc_opt_self(), sel_remoteDisabledLinkURL);
LABEL_8:
    v11 = v7;
    sub_2314146BC();

    sub_231310154();
    return swift_bridgeObjectRelease();
  }
  if ((v6 & 0x21) == 0)
  {
    v7 = objc_msgSend((id)objc_opt_self(), sel_seedExpiredLinkURL);
    goto LABEL_8;
  }
  if (qword_25415B6D8 != -1)
    swift_once();
  v8 = sub_2312CE3B8(v2, (uint64_t)qword_254162EE8);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v8, v2);
  *(_QWORD *)(swift_allocObject() + 16) = v0;
  v12[1] = 0;
  v9 = v0;
  sub_2314135B8();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_231310094()
{
  __int128 v1;

  BYTE8(v1) = 0;
  sub_231414E18();
  sub_231414728();
  *(_QWORD *)&v1 = sub_23130F880();
  sub_2312CF374(0, &qword_255ECC478, (uint64_t)&type metadata for AFibBurdenRescindedState, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
  sub_2314146E0();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return *(_QWORD *)((char *)&v1 + 1);
}

uint64_t sub_231310154()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  char *v32;
  uint64_t ObjectType;
  uint64_t v34;

  ObjectType = swift_getObjectType();
  sub_2312D4A68();
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D1E78(0, &qword_25415C0F0, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v27 - v6;
  v8 = sub_2314114AC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v32 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v27 - v12;
  sub_2314114A0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2312F1A20((uint64_t)v7, &qword_25415C0F0, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
  v30 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v30(v13, v7, v8);
  v15 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  v31 = v13;
  if (v15)
  {
    v16 = v15;
    v17 = (void *)sub_231411488();
    sub_231336D90(MEMORY[0x24BEE4AF8]);
    v18 = sub_23141462C();
    v28 = v2;
    v19 = (void *)v18;
    swift_bridgeObjectRelease();
    v29 = objc_msgSend(v16, sel_openSensitiveURL_withOptions_, v17, v19);

    v2 = v28;
  }
  else
  {
    v29 = 2;
  }
  if (qword_25415B6D8 != -1)
    swift_once();
  v20 = sub_2312CE3B8(v1, (uint64_t)qword_254162EE8);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v20, v1);
  v21 = v32;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v32, v31, v8);
  v22 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v23 = v22 + v10;
  v24 = v4;
  v25 = v2;
  v26 = swift_allocObject();
  v30((char *)(v26 + v22), v21, v8);
  *(_BYTE *)(v26 + v23) = v29;
  *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFFF8) + v26 + 8) = ObjectType;
  v34 = 0;
  sub_231413594();
  swift_release();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v24, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v31, v8);
}

uint64_t sub_23131048C(uint64_t a1, unsigned __int8 a2)
{
  int v2;

  v2 = a2;
  sub_231414E18();
  sub_231414728();
  sub_2314151A8();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_2314114AC();
  sub_2312CCC24(&qword_255ECC470, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
  sub_231415040();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  if (v2 != 2)
    sub_2314146E0();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return 0;
}

id sub_231310608(uint64_t a1, uint64_t a2, void *a3)
{
  _BYTE *v3;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  objc_super v16;

  v6 = &v3[OBJC_IVAR____TtC5Heart37AFibBurdenRescindedTileViewController_context];
  *(_OWORD *)v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *((_QWORD *)v6 + 4) = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Heart37AFibBurdenRescindedTileViewController____lazy_storage___tileView] = 0;
  v7 = &v3[OBJC_IVAR____TtC5Heart37AFibBurdenRescindedTileViewController_detail];
  v8 = *MEMORY[0x24BE43138];
  v9 = sub_231412718();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  v3[OBJC_IVAR____TtC5Heart37AFibBurdenRescindedTileViewController_showsSeparator] = 0;
  v10 = &v3[OBJC_IVAR____TtC5Heart37AFibBurdenRescindedTileViewController_deselectionBehavior];
  v3[OBJC_IVAR____TtC5Heart37AFibBurdenRescindedTileViewController_deselectionBehavior] = 1;
  v11 = *MEMORY[0x24BE435F8];
  v12 = sub_231412970();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  if (a2)
  {
    v13 = (void *)sub_23141468C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = 0;
  }
  v16.receiver = v3;
  v16.super_class = (Class)type metadata accessor for AFibBurdenRescindedTileViewController();
  v14 = objc_msgSendSuper2(&v16, sel_initWithNibName_bundle_, v13, a3);

  return v14;
}

id sub_2313107A0(void *a1)
{
  _BYTE *v1;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  objc_super v12;

  v3 = &v1[OBJC_IVAR____TtC5Heart37AFibBurdenRescindedTileViewController_context];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_QWORD *)v3 + 4) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Heart37AFibBurdenRescindedTileViewController____lazy_storage___tileView] = 0;
  v4 = &v1[OBJC_IVAR____TtC5Heart37AFibBurdenRescindedTileViewController_detail];
  v5 = *MEMORY[0x24BE43138];
  v6 = sub_231412718();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v4, v5, v6);
  v1[OBJC_IVAR____TtC5Heart37AFibBurdenRescindedTileViewController_showsSeparator] = 0;
  v7 = &v1[OBJC_IVAR____TtC5Heart37AFibBurdenRescindedTileViewController_deselectionBehavior];
  v1[OBJC_IVAR____TtC5Heart37AFibBurdenRescindedTileViewController_deselectionBehavior] = 1;
  v8 = *MEMORY[0x24BE435F8];
  v9 = sub_231412970();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  v12.receiver = v1;
  v12.super_class = (Class)type metadata accessor for AFibBurdenRescindedTileViewController();
  v10 = objc_msgSendSuper2(&v12, sel_initWithCoder_, a1);

  return v10;
}

id sub_2313108C4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AFibBurdenRescindedTileViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_231310990()
{
  return type metadata accessor for AFibBurdenRescindedTileViewController();
}

uint64_t type metadata accessor for AFibBurdenRescindedTileViewController()
{
  uint64_t result;

  result = qword_255ECC448;
  if (!qword_255ECC448)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2313109D4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_231412718();
  if (v1 <= 0x3F)
  {
    result = sub_231412970();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_231310A78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC5Heart37AFibBurdenRescindedTileViewController_context;
  swift_beginAccess();
  return sub_231310E3C(v3, a1);
}

uint64_t sub_231310AC8(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  char v4;

  v3 = (uint64_t)v1 + OBJC_IVAR____TtC5Heart37AFibBurdenRescindedTileViewController_context;
  swift_beginAccess();
  sub_231310D94(a1, v3);
  swift_endAccess();
  if (objc_msgSend(v1, sel_isViewLoaded))
  {
    v4 = sub_23130F880();
    sub_23130FA28(v4);
  }
  return sub_2312F1A20(a1, (unint64_t *)&qword_255ED2420, (void (*)(uint64_t))sub_231310DE8);
}

void (*sub_231310B5C(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_231310BA4;
}

void sub_231310BA4(uint64_t a1, char a2)
{
  char v4;

  swift_endAccess();
  if ((a2 & 1) == 0 && (objc_msgSend(*(id *)(a1 + 24), sel_isViewLoaded) & 1) != 0)
  {
    v4 = sub_23130F880();
    sub_23130FA28(v4);
  }
}

uint64_t sub_231310BF0()
{
  return sub_23130FEE4();
}

uint64_t sub_231310C10@<X0>(uint64_t a1@<X8>)
{
  return sub_231310CF8(&OBJC_IVAR____TtC5Heart37AFibBurdenRescindedTileViewController_deselectionBehavior, (uint64_t (*)(_QWORD))MEMORY[0x24BE43608], a1);
}

uint64_t sub_231310C34(uint64_t a1)
{
  MEMORY[0x2348DE248](&unk_23141A018, a1);
  return sub_23141324C();
}

uint64_t sub_231310C80()
{
  id *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*v0, sel_title);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_2314146BC();

  return v3;
}

uint64_t sub_231310CE4@<X0>(uint64_t a1@<X8>)
{
  return sub_231310CF8(&OBJC_IVAR____TtC5Heart37AFibBurdenRescindedTileViewController_detail, (uint64_t (*)(_QWORD))MEMORY[0x24BE43140], a1);
}

uint64_t sub_231310CF8@<X0>(_QWORD *a1@<X2>, uint64_t (*a2)(_QWORD)@<X3>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;

  v5 = *v3 + *a1;
  v6 = a2(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a3, v5, v6);
}

uint64_t sub_231310D3C()
{
  return sub_2312CCC24(&qword_255ECC458, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenRescindedTileViewController, (uint64_t)&unk_231419F10);
}

uint64_t sub_231310D68()
{
  return sub_2312CCC24(&qword_255ECC460, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenRescindedTileViewController, (uint64_t)&unk_231419F60);
}

uint64_t sub_231310D94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312D1E78(0, (unint64_t *)&qword_255ED2420, (void (*)(uint64_t))sub_231310DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_231310DE8()
{
  unint64_t result;

  result = qword_255ECC468;
  if (!qword_255ECC468)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255ECC468);
  }
  return result;
}

uint64_t sub_231310E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312D1E78(0, (unint64_t *)&qword_255ED2420, (void (*)(uint64_t))sub_231310DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_231310E90()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_2314114AC();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_231310EF8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_2314114AC() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_23131048C(v0 + v2, *(_BYTE *)(v0 + v2 + *(_QWORD *)(v1 + 64)));
}

uint64_t sub_231310F3C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_231310F60()
{
  return sub_231310094();
}

uint64_t sub_231310F68()
{
  return swift_deallocObject();
}

uint64_t sub_231310F78()
{
  return sub_23130FE20();
}

uint64_t sub_231310FAC()
{
  return swift_deallocObject();
}

uint64_t sub_231310FBC()
{
  return sub_23130FE20();
}

unint64_t sub_231310FF0()
{
  unint64_t result;

  result = qword_255ECC480;
  if (!qword_255ECC480)
  {
    result = MEMORY[0x2348DE248](&unk_23141A0AC, &type metadata for AFibBurdenRescindedFeedItemConfiguration);
    atomic_store(result, (unint64_t *)&qword_255ECC480);
  }
  return result;
}

uint64_t sub_231311034(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_2312D6CA8(a1, a2);
  return a1;
}

uint64_t sub_231311048()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_23131106C()
{
  uint64_t v0;

  sub_23130F4AC(v0);
}

uint64_t getEnumTagSinglePayload for AFibBurdenLifeFactor(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AFibBurdenRescindedFeedItemConfiguration(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_231311150 + 4 * byte_231419E8B[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_231311184 + 4 * byte_231419E86[v4]))();
}

uint64_t sub_231311184(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23131118C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x231311194);
  return result;
}

uint64_t sub_2313111A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2313111A8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2313111AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2313111B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenRescindedFeedItemConfiguration()
{
  return &type metadata for AFibBurdenRescindedFeedItemConfiguration;
}

unint64_t sub_2313111D0()
{
  unint64_t result;

  result = qword_25415B7F0;
  if (!qword_25415B7F0)
  {
    result = MEMORY[0x2348DE248](&unk_23141A1C0, &type metadata for AFibBurdenRescindedFeedItemConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25415B7F0);
  }
  return result;
}

unint64_t sub_231311214()
{
  unint64_t result;

  result = qword_25415B6F8;
  if (!qword_25415B6F8)
  {
    result = MEMORY[0x2348DE248](&unk_23141D65C, &type metadata for AFibBurdenRescindedState);
    atomic_store(result, (unint64_t *)&qword_25415B6F8);
  }
  return result;
}

_QWORD *sub_231311258(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _QWORD *v8;
  _BYTE v10[16];

  sub_231311390(0, &qword_255ECC488, MEMORY[0x24BEE33E0]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = &v10[-v6];
  v8 = sub_2312CEA5C(a1, a1[3]);
  sub_2313111D0();
  sub_23141516C();
  if (!v1)
  {
    sub_2313113EC();
    sub_231414FD4();
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
    v8 = (_QWORD *)v10[15];
  }
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  return v8;
}

void sub_231311390(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_2313111D0();
    v7 = a3(a1, &type metadata for AFibBurdenRescindedFeedItemConfiguration.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_2313113EC()
{
  unint64_t result;

  result = qword_255ECC490;
  if (!qword_255ECC490)
  {
    result = MEMORY[0x2348DE248](&unk_23141D684, &type metadata for AFibBurdenRescindedState);
    atomic_store(result, (unint64_t *)&qword_255ECC490);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AFibBurdenRescindedFeedItemConfiguration.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_231311470 + 4 * byte_231419E90[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_231311490 + 4 * byte_231419E95[v4]))();
}

_BYTE *sub_231311470(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_231311490(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_231311498(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2313114A0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2313114A8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2313114B0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenRescindedFeedItemConfiguration.CodingKeys()
{
  return &type metadata for AFibBurdenRescindedFeedItemConfiguration.CodingKeys;
}

unint64_t sub_2313114D0()
{
  unint64_t result;

  result = qword_255ECC498;
  if (!qword_255ECC498)
  {
    result = MEMORY[0x2348DE248](&unk_23141A198, &type metadata for AFibBurdenRescindedFeedItemConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECC498);
  }
  return result;
}

unint64_t sub_231311518()
{
  unint64_t result;

  result = qword_25415B800;
  if (!qword_25415B800)
  {
    result = MEMORY[0x2348DE248](&unk_23141A108, &type metadata for AFibBurdenRescindedFeedItemConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25415B800);
  }
  return result;
}

unint64_t sub_231311560()
{
  unint64_t result;

  result = qword_25415B7F8;
  if (!qword_25415B7F8)
  {
    result = MEMORY[0x2348DE248](&unk_23141A130, &type metadata for AFibBurdenRescindedFeedItemConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25415B7F8);
  }
  return result;
}

id sub_2313115A4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  double v7;
  double v8;
  void *v9;
  void *v10;
  id v11;

  v1 = OBJC_IVAR____TtC5Heart17BulletedLabelView____lazy_storage___bulletLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Heart17BulletedLabelView____lazy_storage___bulletLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Heart17BulletedLabelView____lazy_storage___bulletLabel);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
    objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);
    sub_231311B80();
    v6 = (void *)sub_231414B9C();
    objc_msgSend(v5, sel_setFont_, v6);

    LODWORD(v7) = 1148846080;
    objc_msgSend(v5, sel_setContentHuggingPriority_forAxis_, 0, v7);
    LODWORD(v8) = 1148846080;
    objc_msgSend(v5, sel_setContentCompressionResistancePriority_forAxis_, 0, v8);
    v9 = (void *)sub_23141468C();
    objc_msgSend(v5, sel_setText_, v9);

    v10 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v11 = v2;
  return v3;
}

id sub_2313116E8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  double v6;
  double v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  id v12;

  v1 = OBJC_IVAR____TtC5Heart17BulletedLabelView____lazy_storage___textLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Heart17BulletedLabelView____lazy_storage___textLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Heart17BulletedLabelView____lazy_storage___textLabel);
  }
  else
  {
    v4 = v0;
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
    objc_msgSend(v3, sel_setAdjustsFontForContentSizeCategory_, 1);
    sub_231311B80();
    v5 = (void *)sub_231414B9C();
    objc_msgSend(v3, sel_setFont_, v5);

    objc_msgSend(v3, sel_setNumberOfLines_, 0);
    LODWORD(v6) = 1132068864;
    objc_msgSend(v3, sel_setContentHuggingPriority_forAxis_, 0, v6);
    LODWORD(v7) = 1132068864;
    objc_msgSend(v3, sel_setContentCompressionResistancePriority_forAxis_, 0, v7);
    v8 = (void *)sub_23141468C();
    objc_msgSend(v3, sel_setText_, v8);

    v9 = *(void **)(v4 + OBJC_IVAR____TtC5Heart17BulletedLabelView_textAccessibilityIdentifier + 8);
    v10 = v3;
    if (v9)
      v9 = (void *)sub_23141468C();
    objc_msgSend(v3, sel_setAccessibilityIdentifier_, v9);

    v11 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v3;

    v2 = 0;
  }
  v12 = v2;
  return v3;
}

id sub_231311890()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Heart17BulletedLabelView____lazy_storage___stackView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Heart17BulletedLabelView____lazy_storage___stackView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Heart17BulletedLabelView____lazy_storage___stackView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD978]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v4, sel_setAlignment_, 1);
    objc_msgSend(v4, sel_setAxis_, 0);
    objc_msgSend(v4, sel_setSpacing_, 5.0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_2313119DC()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;

  v1 = sub_231311890();
  v2 = sub_2313115A4();
  objc_msgSend(v1, sel_addArrangedSubview_, v2);

  v3 = sub_231311890();
  v4 = sub_2313116E8();
  objc_msgSend(v3, sel_addArrangedSubview_, v4);

  v5 = sub_231311890();
  objc_msgSend(v0, sel_addSubview_, v5);

  v6 = sub_231311890();
  objc_msgSend(v6, sel_hk_alignConstraintsWithView_, v0);

}

id sub_231311AC0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BulletedLabelView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for BulletedLabelView()
{
  return objc_opt_self();
}

unint64_t sub_231311B80()
{
  unint64_t result;

  result = qword_255ECB510;
  if (!qword_255ECB510)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255ECB510);
  }
  return result;
}

unint64_t sub_231311BC0()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_231311BDC()
{
  if (qword_25415E610 != -1)
    swift_once();
  return sub_231411374();
}

uint64_t sub_231311C74()
{
  if (qword_25415E610 != -1)
    swift_once();
  return sub_231411374();
}

uint64_t sub_231311D08()
{
  if (qword_25415E610 != -1)
    swift_once();
  return sub_231411374();
}

id sub_231311DA8()
{
  id v0;
  void *v1;
  id v2;

  if (qword_25415E610 != -1)
    swift_once();
  v0 = (id)qword_254163058;
  v1 = (void *)sub_23141468C();
  v2 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v1, v0);

  if (v2)
    return v2;
  else
    return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD640]), sel_init);
}

uint64_t sub_231311E7C()
{
  unint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2312D6CEC(0, (unint64_t *)&qword_25415BD40);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_231417F90;
  sub_2312D6D30();
  *(_QWORD *)(inited + 32) = MEMORY[0x2348DD384]((id)*MEMORY[0x24BDD3378]);
  sub_2314147B8();
  if (inited >> 62)
  {
    sub_231412A90();
    v3 = sub_231414F08();
    swift_bridgeObjectRelease();
    if (v3)
      goto LABEL_3;
LABEL_5:
    v2 = MEMORY[0x24BEE4B08];
    goto LABEL_6;
  }
  if (!*(_QWORD *)((inited & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_5;
LABEL_3:
  sub_2312FC638(inited);
  v2 = v1;
LABEL_6:
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_231311F68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  unint64_t v8;
  void (*v9)(_QWORD);
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  unsigned int v57;

  sub_231312950();
  v0 = sub_231411C08();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = *(_QWORD *)(v1 + 72);
  v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_23141A230;
  if (qword_25415E610 != -1)
    swift_once();
  v5 = (id)qword_254163058;
  v6 = (void *)sub_23141468C();
  v7 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v6, v5);

  if (!v7)
    v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD640]), sel_init);
  v8 = v4 + v3;
  *(_QWORD *)v8 = v7;
  *(_BYTE *)(v8 + 8) = 0;
  v9 = *(void (**)(_QWORD))(v1 + 104);
  ((void (*)(unint64_t, _QWORD, uint64_t))v9)(v4 + v3, *MEMORY[0x24BE3F908], v0);
  v10 = (uint64_t *)(v4 + v3 + v2);
  *v10 = sub_231411374();
  v10[1] = v11;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v9)(v10, *MEMORY[0x24BE3F910], v0);
  v12 = (uint64_t *)(v4 + v3 + 2 * v2);
  *v12 = sub_231411374();
  v12[1] = v13;
  v12[2] = 0;
  v57 = *MEMORY[0x24BE3F8D0];
  v9(v12);
  v56 = v4;
  v14 = v4 + v3 + 3 * v2;
  *(_QWORD *)v14 = sub_231411374();
  *(_QWORD *)(v14 + 8) = v15;
  *(_BYTE *)(v14 + 16) = 0;
  v16 = *MEMORY[0x24BE3F930];
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v8 + 3 * v2, v16, v0);
  v17 = v8 + 4 * v2;
  *(_QWORD *)v17 = sub_231411374();
  *(_QWORD *)(v17 + 8) = v18;
  *(_BYTE *)(v17 + 16) = 0;
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v17, v16, v0);
  v19 = v8 + 5 * v2;
  *(_QWORD *)v19 = sub_231411374();
  *(_QWORD *)(v19 + 8) = v20;
  *(_BYTE *)(v19 + 16) = 0;
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v19, v16, v0);
  v21 = v8 + 6 * v2;
  *(_QWORD *)v21 = sub_231411374();
  *(_QWORD *)(v21 + 8) = v22;
  *(_BYTE *)(v21 + 16) = 0;
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v21, v16, v0);
  v23 = (uint64_t *)(v8 + 7 * v2);
  *v23 = sub_231411374();
  v23[1] = v24;
  v23[2] = 0;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v9)(v23, v57, v0);
  v25 = v8 + 8 * v2;
  *(_QWORD *)v25 = sub_231411374();
  *(_QWORD *)(v25 + 8) = v26;
  *(_BYTE *)(v25 + 16) = 0;
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v25, v16, v0);
  v27 = v8 + 9 * v2;
  *(_QWORD *)v27 = sub_231411374();
  *(_QWORD *)(v27 + 8) = v28;
  *(_BYTE *)(v27 + 16) = 0;
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v27, v16, v0);
  v29 = (uint64_t *)(v8 + 10 * v2);
  *v29 = sub_231411374();
  v29[1] = v30;
  v29[2] = 0;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v9)(v29, v57, v0);
  v31 = v8 + 11 * v2;
  *(_QWORD *)v31 = sub_231411374();
  *(_QWORD *)(v31 + 8) = v32;
  *(_BYTE *)(v31 + 16) = 0;
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v31, v16, v0);
  v33 = (uint64_t *)(v8 + 12 * v2);
  *v33 = sub_231411374();
  v33[1] = v34;
  v33[2] = 0;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v9)(v33, v57, v0);
  v35 = v8 + 13 * v2;
  *(_QWORD *)v35 = sub_231411374();
  *(_QWORD *)(v35 + 8) = v36;
  *(_BYTE *)(v35 + 16) = 0;
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v35, v16, v0);
  v37 = v8 + 14 * v2;
  *(_QWORD *)v37 = sub_231411374();
  *(_QWORD *)(v37 + 8) = v38;
  *(_BYTE *)(v37 + 16) = 0;
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v37, v16, v0);
  v39 = v8 + 15 * v2;
  *(_QWORD *)v39 = sub_231411374();
  *(_QWORD *)(v39 + 8) = v40;
  *(_BYTE *)(v39 + 16) = 0;
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v39, v16, v0);
  v41 = v8 + 16 * v2;
  *(_QWORD *)v41 = sub_231411374();
  *(_QWORD *)(v41 + 8) = v42;
  *(_BYTE *)(v41 + 16) = 0;
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v41, v16, v0);
  v43 = (uint64_t *)(v8 + 17 * v2);
  v44 = sub_231411374();
  v46 = v45;
  sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
  v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = xmmword_23141A240;
  *(_QWORD *)(v47 + 32) = sub_231411374();
  *(_QWORD *)(v47 + 40) = v48;
  *(_QWORD *)(v47 + 48) = sub_231411374();
  *(_QWORD *)(v47 + 56) = v49;
  *(_QWORD *)(v47 + 64) = sub_231411374();
  *(_QWORD *)(v47 + 72) = v50;
  *(_QWORD *)(v47 + 80) = sub_231411374();
  *(_QWORD *)(v47 + 88) = v51;
  *(_QWORD *)(v47 + 96) = sub_231411374();
  *(_QWORD *)(v47 + 104) = v52;
  *(_QWORD *)(v47 + 112) = sub_231411374();
  *(_QWORD *)(v47 + 120) = v53;
  *(_QWORD *)(v47 + 128) = sub_231411374();
  *(_QWORD *)(v47 + 136) = v54;
  *v43 = v44;
  v43[1] = v46;
  v43[2] = v47;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v9)(v43, *MEMORY[0x24BE3F8F0], v0);
  return v56;
}

void sub_231312950()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECAC78)
  {
    sub_231411C08();
    v0 = sub_23141504C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECAC78);
  }
}

ValueMetadata *type metadata accessor for AFibBurdenArticleProviderLearnAboutAFib()
{
  return &type metadata for AFibBurdenArticleProviderLearnAboutAFib;
}

uint64_t sub_2313129B4@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  sub_23141336C();
  *a3 = sub_231412328();
  a3[1] = v6;
  a3[2] = 0xD000000000000013;
  a3[3] = 0x800000023141A440;
  if (qword_255ECAAD8 != -1)
    swift_once();
  a3[4] = sub_231411374();
  a3[5] = v7;
  a3[6] = a1;
  return sub_2312DFB68(a2, (uint64_t)(a3 + 7));
}

uint64_t sub_231312A9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_231413930();
  v3 = MEMORY[0x24BEBC5F0];
  a1[3] = v2;
  a1[4] = v3;
  sub_2312DFCA0(a1);
  sub_231413918();
  sub_231412A90();
  return sub_231413924();
}

uint64_t sub_231312B08()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  sub_231412A90();
  return v1;
}

uint64_t sub_231312B3C()
{
  sub_231415118();
  sub_231412A90();
  sub_231414710();
  swift_bridgeObjectRelease();
  sub_231412A90();
  sub_231414710();
  swift_bridgeObjectRelease();
  return sub_231415148();
}

uint64_t sub_231312BC0()
{
  sub_231412A90();
  sub_231414710();
  swift_bridgeObjectRelease();
  sub_231412A90();
  sub_231414710();
  return swift_bridgeObjectRelease();
}

uint64_t sub_231312C28()
{
  sub_231415118();
  sub_231412A90();
  sub_231414710();
  swift_bridgeObjectRelease();
  sub_231412A90();
  sub_231414710();
  swift_bridgeObjectRelease();
  return sub_231415148();
}

uint64_t sub_231312CA8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_2312D6DD8(0, (unint64_t *)&unk_255ECF240, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC088], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v14 - v1;
  v3 = sub_2314137D4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2314137A4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6DD8(0, &qword_255ECC500, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC0E0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_2314137E0();
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_231416A30;
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BEBC058], v7);
  v12 = sub_2314137B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v2, 1, 1, v12);
  sub_2314137C8();
  sub_2314137BC();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v11;
}

uint64_t sub_231312E88@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  a2[3] = a1;
  a2[4] = sub_23131355C();
  v4 = swift_allocObject();
  *a2 = v4;
  return sub_2313134FC(v2, v4 + 16);
}

uint64_t sub_231312ED0(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void (*v22)(unint64_t, _QWORD, uint64_t);
  unint64_t v23;
  unint64_t v24;
  void (*v25)(char *, uint64_t);
  char v26;
  char v27;
  id v28;
  char *v29;
  void (*v31)(char *, unint64_t, uint64_t);
  id v32;
  char *v33;
  id v34;
  _BYTE v35[40];
  uint64_t v36[5];

  v4 = type metadata accessor for AFibBurdenOnboardingPresentationContext();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23141231C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v31 - v12;
  sub_231414A10();
  if (qword_25415B6D8 != -1)
    swift_once();
  sub_2312D4A68();
  sub_2312CE3B8(v14, (uint64_t)qword_254162EE8);
  v36[0] = 0;
  sub_231413594();
  v32 = *(id *)(a2 + 48);
  v34 = a1;
  sub_2314149F8();
  sub_2312DF850(a2 + 56, (uint64_t)v35);
  v15 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v15(v6, v13, v7);
  v33 = v6;
  swift_storeEnumTagMultiPayload();
  sub_2312D6DD8(0, &qword_255ECC520, (uint64_t (*)(uint64_t))MEMORY[0x24BE42678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v16 = *(_QWORD *)(v8 + 72);
  v17 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v18 = v13;
  v19 = 2 * v16;
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_23141A310;
  v21 = v20 + v17;
  v22 = *(void (**)(unint64_t, _QWORD, uint64_t))(v8 + 104);
  v22(v21, *MEMORY[0x24BE425F0], v7);
  v23 = v21 + v16;
  v22(v23, *MEMORY[0x24BE42650], v7);
  v24 = v21 + v19;
  v22(v24, *MEMORY[0x24BE42668], v7);
  v31 = (void (*)(char *, unint64_t, uint64_t))v15;
  v15(v11, (char *)v21, v7);
  sub_2312CCC24(&qword_255ECC528, (uint64_t (*)(uint64_t))MEMORY[0x24BE42678], MEMORY[0x24BE42688]);
  LOBYTE(v15) = sub_231414680();
  v25 = *(void (**)(char *, uint64_t))(v8 + 8);
  sub_231412A90();
  v25(v11, v7);
  if ((v15 & 1) != 0 || (v31(v11, v23, v7), v26 = sub_231414680(), v25(v11, v7), (v26 & 1) != 0))
  {
    v27 = 1;
  }
  else
  {
    v31(v11, v24, v7);
    v27 = sub_231414680();
    v25(v11, v7);
  }
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v28 = objc_allocWithZone((Class)type metadata accessor for AFibBurdenOnboardingController());
  v29 = sub_2313B5464(v32, (uint64_t)v36, (uint64_t)v35, (uint64_t)v33, v27 & 1, 2);
  objc_msgSend(v34, sel_presentViewController_animated_completion_, v29, 1, 0);

  return ((uint64_t (*)(char *, uint64_t))v25)(v18, v7);
}

uint64_t sub_231313288()
{
  sub_231414E18();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  return 0;
}

void sub_231313348(uint64_t a1, void *a2)
{
  sub_2313135E4(a2);
}

uint64_t sub_231313350@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = 1;
  v2 = *MEMORY[0x24BE435F8];
  v3 = sub_231412970();
  return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

unint64_t sub_2313133A0()
{
  unint64_t result;

  result = qword_255ECC4F0;
  if (!qword_255ECC4F0)
  {
    result = MEMORY[0x2348DE248](&unk_23141A3C0, &type metadata for AFibBurdenAboutItem);
    atomic_store(result, (unint64_t *)&qword_255ECC4F0);
  }
  return result;
}

unint64_t sub_2313133E8()
{
  unint64_t result;

  result = qword_255ECC4F8;
  if (!qword_255ECC4F8)
  {
    result = MEMORY[0x2348DE248](&unk_23141A430, &type metadata for AFibBurdenAboutItem);
    atomic_store(result, (unint64_t *)&qword_255ECC4F8);
  }
  return result;
}

uint64_t sub_23131342C(uint64_t a1, uint64_t a2)
{
  char v5;
  char v6;
  _QWORD v8[12];
  _BYTE v9[32];
  uint64_t v10;
  uint64_t v11;

  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24))
  {
    sub_2313134FC(a1, (uint64_t)v9);
    sub_2313134FC(a2, (uint64_t)v8);
  }
  else
  {
    v5 = sub_231415070();
    sub_2313134FC(a1, (uint64_t)v9);
    sub_2313134FC(a2, (uint64_t)v8);
    v6 = 0;
    if ((v5 & 1) == 0)
      goto LABEL_12;
  }
  if (v10 == v8[4] && v11 == v8[5])
    v6 = 1;
  else
    v6 = sub_231415070();
LABEL_12:
  sub_231313530((uint64_t)v9);
  sub_231313530((uint64_t)v8);
  return v6 & 1;
}

uint64_t sub_2313134FC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AFibBurdenAboutItem(a2, a1);
  return a2;
}

uint64_t sub_231313530(uint64_t a1)
{
  destroy for AFibBurdenAboutItem(a1);
  return a1;
}

unint64_t sub_23131355C()
{
  unint64_t result;

  result = qword_255ECC508;
  if (!qword_255ECC508)
  {
    result = MEMORY[0x2348DE248](&unk_23141A320, &type metadata for AFibBurdenAboutItem);
    atomic_store(result, (unint64_t *)&qword_255ECC508);
  }
  return result;
}

uint64_t sub_2313135A0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 72);
  return swift_deallocObject();
}

void sub_2313135E4(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Class v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  unsigned int v33;
  id v34;
  id v35;
  void *v36;
  char *v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  id v51;
  id v52;
  id v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;

  v3 = sub_231413780();
  v56 = *(_QWORD *)(v3 - 8);
  v57 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v49 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v55 = (char *)&v48 - v6;
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, &qword_25415C0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v8);
  sub_2312D6DD8(0, &qword_255ECC228, (uint64_t (*)(uint64_t))MEMORY[0x24BE49D28], v7);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v48 - v10;
  v12 = sub_231414590();
  MEMORY[0x24BDAC7A8](v12);
  v54 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313134FC(v1, (uint64_t)&v59);
  v14 = swift_allocObject();
  v15 = v62;
  *(_OWORD *)(v14 + 56) = v61;
  *(_OWORD *)(v14 + 72) = v15;
  v16 = v64;
  *(_OWORD *)(v14 + 88) = v63;
  *(_OWORD *)(v14 + 104) = v16;
  v17 = v60;
  *(_OWORD *)(v14 + 24) = v59;
  *(_QWORD *)(v14 + 16) = a1;
  *(_OWORD *)(v14 + 40) = v17;
  v50 = v1;
  v18 = *(void **)(v1 + 48);
  v19 = (void *)*MEMORY[0x24BDD2DC8];
  v20 = type metadata accessor for AFibBurdenFeatureRegulatoryInfoTransformProvider();
  swift_allocObject();
  v51 = a1;
  v53 = v18;
  v52 = v19;
  v21 = sub_23141459C();
  *((_QWORD *)&v60 + 1) = v20;
  *(_QWORD *)&v61 = MEMORY[0x24BE49EF8];
  *(_QWORD *)&v59 = v21;
  if (qword_255ECAAD8 != -1)
    swift_once();
  sub_231411374();
  sub_231411374();
  v22 = (void *)objc_opt_self();
  swift_retain();
  v23 = objc_msgSend(v22, sel_remoteDisabledLinkURL);
  sub_2314146BC();

  sub_2314114A0();
  swift_bridgeObjectRelease();
  sub_23141456C();
  v24 = sub_231414578();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v11, 0, 1, v24);
  if (qword_25415DF98 != -1)
    swift_once();
  v25 = v57;
  v26 = sub_2312CE3B8(v57, (uint64_t)qword_254162FF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v55, v26, v25);
  sub_231414584();
  sub_231313D3C();
  v28 = objc_allocWithZone(v27);
  v29 = (void *)sub_231414554();
  v30 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (!v30)
  {
    __break(1u);
    goto LABEL_16;
  }
  v31 = v30;
  v32 = objc_msgSend(v30, sel_features);

  if (!v32)
  {
LABEL_16:
    __break(1u);
    return;
  }
  v33 = objc_msgSend(v32, sel_stanley);

  if (v33)
  {
    sub_2313134FC(v50, (uint64_t)&v59);
    v34 = v29;
    objc_msgSend(v51, sel_showAdaptively_sender_, v34, sub_231415094());
    sub_2314130CC();

LABEL_11:
    swift_release();
    return;
  }
  v35 = objc_msgSend(v51, sel_navigationController);
  if (v35)
  {
    v36 = v35;
    objc_msgSend(v35, sel_pushViewController_animated_, v29, 1);

    goto LABEL_11;
  }
  v37 = v49;
  sub_231413750();
  v38 = v29;
  v39 = sub_231413768();
  v40 = sub_231414974();
  if (os_log_type_enabled(v39, v40))
  {
    v41 = swift_slowAlloc();
    v42 = swift_slowAlloc();
    *(_QWORD *)&v59 = v42;
    *(_DWORD *)v41 = 136315394;
    v58 = sub_23133180C(0xD000000000000013, 0x800000023141A440, (uint64_t *)&v59);
    sub_231414CBC();
    *(_WORD *)(v41 + 12) = 2080;
    v55 = (char *)(v41 + 14);
    v43 = v38;
    v44 = objc_msgSend(v43, sel_description);
    v45 = sub_2314146BC();
    v47 = v46;

    v58 = sub_23133180C(v45, v47, (uint64_t *)&v59);
    sub_231414CBC();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v39, v40, "[%s]: Unable to handle tap of detail item: %s", (uint8_t *)v41, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v42, -1, -1);
    MEMORY[0x2348DE308](v41, -1, -1);
    swift_release();

    (*(void (**)(char *, uint64_t))(v56 + 8))(v49, v57);
  }
  else
  {

    swift_release();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v37, v57);
  }
}

uint64_t sub_231313CE4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 80);
  return swift_deallocObject();
}

uint64_t sub_231313D30()
{
  uint64_t v0;

  return sub_231312ED0(*(void **)(v0 + 16), v0 + 24);
}

void sub_231313D3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECC510)
  {
    sub_231414590();
    sub_2312CCC24(&qword_255ECC518, (uint64_t (*)(uint64_t))MEMORY[0x24BE49E08], MEMORY[0x24BE49DF8]);
    v0 = sub_231414560();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECC510);
  }
}

uint64_t destroy for AFibBurdenAboutItem(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + 56);
}

uint64_t initializeWithCopy for AFibBurdenAboutItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  id v11;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v6;
  v7 = a2 + 56;
  v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v8;
  v9 = v8;
  v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  sub_231412A90();
  sub_231412A90();
  sub_231412A90();
  v11 = v6;
  v10(a1 + 56, v7, v9);
  return a1;
}

_QWORD *assignWithCopy for AFibBurdenAboutItem(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_231412A90();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_231412A90();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_231412A90();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[6];
  v5 = (void *)a1[6];
  a1[6] = v4;
  v6 = v4;

  sub_2312DB81C(a1 + 7, a2 + 7);
  return a1;
}

__n128 initializeWithTake for AFibBurdenAboutItem(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for AFibBurdenAboutItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for AFibBurdenAboutItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AFibBurdenAboutItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenAboutItem()
{
  return &type metadata for AFibBurdenAboutItem;
}

id sub_231314098@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  id result;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  sub_231314334();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231314388();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_23141A310;
  v8 = (void *)objc_opt_self();
  result = objc_msgSend(v8, sel__quantityTypeWithCode_, 248);
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v10 = result;
  v17 = a1;
  *(_QWORD *)(v7 + 56) = &_s39AFibBurdenSharableSummaryChartComponentVN;
  *(_QWORD *)(v7 + 64) = sub_231314430();
  *(_QWORD *)(v7 + 32) = v10;
  *(_QWORD *)(v7 + 40) = 0xD00000000000001ELL;
  *(_QWORD *)(v7 + 48) = 0x8000000231428B10;
  result = objc_msgSend(v8, sel__quantityTypeWithCode_, 248);
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v11 = result;
  type metadata accessor for NotOnboardedIsOnboardedProvider();
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = 0;
  v18 = 0;
  sub_231413DD4();
  sub_231314474();
  v13 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  *(_QWORD *)(v12 + 24) = v13;
  *(_QWORD *)(v7 + 96) = &_s28AFibBurdenEducationComponentVN;
  *(_QWORD *)(v7 + 104) = sub_2313144BC();
  v14 = swift_allocObject();
  *(_QWORD *)(v7 + 72) = v14;
  *(_QWORD *)(v14 + 16) = v11;
  *(_QWORD *)(v14 + 24) = 0xD000000000000013;
  *(_QWORD *)(v14 + 32) = 0x8000000231428B30;
  *(_QWORD *)(v14 + 40) = v12;
  *(_QWORD *)(v14 + 48) = &off_2500258F8;
  *(_BYTE *)(v14 + 56) = 1;
  result = objc_msgSend(v8, sel__quantityTypeWithCode_, 248);
  if (result)
  {
    v15 = sub_231412CD0();
    v16 = MEMORY[0x24BE43FB8];
    *(_QWORD *)(v7 + 136) = v15;
    *(_QWORD *)(v7 + 144) = v16;
    sub_2312DFCA0((uint64_t *)(v7 + 112));
    sub_231412CC4();
    return (id)sub_231412C1C();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_2313142E0()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AFibBurdenSharingDataTypeDetailConfigurationProvider()
{
  return objc_opt_self();
}

id sub_231314310@<X0>(uint64_t a1@<X8>)
{
  return sub_231314098(a1);
}

void sub_231314334()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415DDD8)
  {
    v0 = sub_231413DC8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415DDD8);
  }
}

void sub_231314388()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECC5D8)
  {
    sub_2313143DC();
    v0 = sub_23141504C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECC5D8);
  }
}

unint64_t sub_2313143DC()
{
  unint64_t result;

  result = qword_255ECC5E0;
  if (!qword_255ECC5E0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255ECC5E0);
  }
  return result;
}

unint64_t sub_231314430()
{
  unint64_t result;

  result = qword_255ECC5E8;
  if (!qword_255ECC5E8)
  {
    result = MEMORY[0x2348DE248](&unk_23141B8D8, &_s39AFibBurdenSharableSummaryChartComponentVN);
    atomic_store(result, (unint64_t *)&qword_255ECC5E8);
  }
  return result;
}

unint64_t sub_231314474()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25415BAD8;
  if (!qword_25415BAD8)
  {
    sub_231314334();
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB9DF8], v1);
    atomic_store(result, (unint64_t *)&qword_25415BAD8);
  }
  return result;
}

unint64_t sub_2313144BC()
{
  unint64_t result;

  result = qword_255ECC5F0;
  if (!qword_255ECC5F0)
  {
    result = MEMORY[0x2348DE248](&unk_231423980, &_s28AFibBurdenEducationComponentVN);
    atomic_store(result, (unint64_t *)&qword_255ECC5F0);
  }
  return result;
}

uint64_t sub_231314500()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_2314130CC();
  return swift_deallocObject();
}

uint64_t *sub_231314534(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23141177C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v10;
    v11 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = (uint64_t)v11;
    v12 = v10;
    v13 = v11;
  }
  return a1;
}

void sub_2313145CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23141177C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

}

uint64_t sub_23131461C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  id v12;

  v6 = sub_23141177C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = *(void **)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v10;
  v11 = v9;
  v12 = v10;
  return a1;
}

uint64_t sub_231314688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;

  v6 = sub_23141177C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  v11 = *(int *)(a3 + 24);
  v12 = *(void **)(a2 + v11);
  v13 = *(void **)(a1 + v11);
  *(_QWORD *)(a1 + v11) = v12;
  v14 = v12;

  return a1;
}

uint64_t sub_231314708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23141177C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_23131476C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;

  v6 = sub_23141177C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  v9 = *(int *)(a3 + 24);
  v10 = *(void **)(a1 + v9);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);

  return a1;
}

uint64_t sub_2313147E4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2313147F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_23141177C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23131486C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_231314878(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23141177C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for AFibBurdenPDFChartAverageQuery()
{
  uint64_t result;

  result = qword_255ECC650;
  if (!qword_255ECC650)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23131492C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23141177C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2313149A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;

  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, qword_255ECDEB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v3[14] = swift_task_alloc();
  sub_2312D6DD8(0, &qword_255ECB8C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], v4);
  v3[15] = swift_task_alloc();
  sub_2314112F0();
  v3[16] = swift_task_alloc();
  v5 = sub_231411608();
  v3[17] = v5;
  v3[18] = *(_QWORD *)(v5 - 8);
  v3[19] = swift_task_alloc();
  sub_2312D6DD8(0, &qword_255ECC6A0, (uint64_t (*)(uint64_t))sub_2313153E4, MEMORY[0x24BDD2120]);
  v3[20] = swift_task_alloc();
  v6 = sub_2314145F0();
  v3[21] = v6;
  v3[22] = *(_QWORD *)(v6 - 8);
  v3[23] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_231314AF8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void (*v7)(uint64_t, uint64_t);
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;

  v1 = v0[19];
  v3 = v0[17];
  v2 = v0[18];
  v4 = v0[15];
  v16 = v0[14];
  v15 = v0[13];
  type metadata accessor for AFibBurdenPDFChartAverageQuery();
  v5 = (void *)objc_opt_self();
  sub_231411230();
  v6 = (void *)sub_2314115C0();
  v7 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v0[24] = v7;
  v7(v1, v3);
  sub_23141120C();
  v8 = (void *)sub_2314115C0();
  v7(v1, v3);
  v9 = objc_msgSend(v5, sel_predicateForSamplesWithStartDate_endDate_options_, v6, v8, 0);

  sub_2313153E4();
  sub_2314145B4();

  sub_23141120C();
  v10 = sub_23141177C();
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v4, v15, v10);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v4, 0, 1, v10);
  v12 = sub_2314117A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v16, 1, 1, v12);
  sub_2314112E4();
  sub_2314145E4();
  v13 = (_QWORD *)swift_task_alloc();
  v0[25] = v13;
  *v13 = v0;
  v13[1] = sub_231314D74;
  return sub_2314145D8();
}

uint64_t sub_231314D74(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 208) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 216) = a1;
  return swift_task_switch();
}

uint64_t sub_231314DE8()
{
  _QWORD *v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = (void (*)(uint64_t, uint64_t))v0[24];
  v16 = v0[23];
  v13 = (id)v0[27];
  v14 = v0[22];
  v15 = v0[21];
  v2 = v0[19];
  v3 = v0[17];
  v4 = (void *)v0[12];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = MEMORY[0x24BEE4AF8];
  sub_231411230();
  v6 = (void *)sub_2314115C0();
  v1(v2, v3);
  sub_23141120C();
  v7 = (void *)sub_2314115C0();
  v1(v2, v3);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v4;
  *(_QWORD *)(v8 + 24) = v5;
  v0[6] = sub_231315470;
  v0[7] = v8;
  v0[2] = MEMORY[0x24BDAC760];
  v0[3] = 1107296256;
  v0[4] = sub_23131532C;
  v0[5] = &unk_250021E98;
  v9 = _Block_copy(v0 + 2);
  v10 = v4;
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_enumerateStatisticsFromDate_toDate_withBlock_, v6, v7, v9);
  _Block_release(v9);

  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v16, v15);
  swift_beginAccess();
  v11 = *(_QWORD *)(v5 + 16);
  sub_231412A90();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(uint64_t))v0[1])(v11);
}

uint64_t sub_231314FF8()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 176) + 8))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 168));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_231315084(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id result;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  unint64_t *v21;
  unint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v24;
  unint64_t v25;
  unint64_t *v26;
  uint64_t v27;
  uint64_t v28;

  v27 = a3;
  v6 = type metadata accessor for AFibBurdenPDFChartPoint();
  v28 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_231411608();
  v10 = MEMORY[0x24BDAC7A8](v9);
  MEMORY[0x24BDAC7A8](v10);
  v11 = sub_231411248();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(a1, sel_averageQuantity);
  if (result)
  {
    v16 = result;
    v26 = (unint64_t *)(a4 + 16);
    objc_msgSend(result, sel_doubleValueForUnit_, v27);
    v18 = v17;

    v19 = objc_msgSend(a1, sel_startDate);
    sub_2314115D8();

    v20 = objc_msgSend(a1, sel_endDate);
    sub_2314115D8();

    v21 = v26;
    sub_231411218();
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v8, v14, v11);
    *(_QWORD *)&v8[*(int *)(v6 + 20)] = v18;
    *(_QWORD *)&v8[*(int *)(v6 + 24)] = MEMORY[0x24BEE4B08];
    swift_beginAccess();
    v22 = *v21;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v21 = v22;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v22 = sub_2312CDBA0(0, *(_QWORD *)(v22 + 16) + 1, 1, v22);
      *v21 = v22;
    }
    v25 = *(_QWORD *)(v22 + 16);
    v24 = *(_QWORD *)(v22 + 24);
    if (v25 >= v24 >> 1)
    {
      v22 = sub_2312CDBA0(v24 > 1, v25 + 1, 1, v22);
      *v21 = v22;
    }
    *(_QWORD *)(v22 + 16) = v25 + 1;
    sub_231315490((uint64_t)v8, v22+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(_QWORD *)(v28 + 72) * v25);
    swift_endAccess();
    return (id)(*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  return result;
}

void sub_23131532C(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_231315388(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2312DBC38;
  return sub_2313149A4(a1, a2);
}

unint64_t sub_2313153E4()
{
  unint64_t result;

  result = qword_255ECB348;
  if (!qword_255ECB348)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255ECB348);
  }
  return result;
}

uint64_t sub_231315420()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_231315444()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

id sub_231315470(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_231315084(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_231315478(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_231315488()
{
  return swift_release();
}

uint64_t sub_231315490(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AFibBurdenPDFChartPoint();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2313154D8(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;

  v7 = v6;
  v14 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v6 + 16) = a1;
  sub_2313155E4(a2, a1, (uint64_t)v16);
  sub_231317058((uint64_t)v16, v6 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorViewModel_state);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorViewModel_healthStore) = a3;
  v17 = v6 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorViewModel_calendar;
  v18 = sub_23141177C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17, a4, v18);
  v19 = (_QWORD *)(v7 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorViewModel_dateGenerator);
  *v19 = a5;
  v19[1] = a6;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_2313155E4@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;

  sub_2312D1E78(0, &qword_255ECC7F0, (void (*)(uint64_t))type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v22 - v7;
  sub_231318848(a2);
  v10 = v9;
  v11 = objc_msgSend(v9, sel_identifier);

  v12 = sub_2314146BC();
  v14 = v13;

  if (*(_QWORD *)(a1 + 16) && (v15 = sub_231338800(v12, v14), (v16 & 1) != 0))
  {
    v17 = v15;
    v18 = *(_QWORD *)(a1 + 56);
    v19 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
    v20 = *(_QWORD *)(v19 - 8);
    sub_23131709C(v18 + *(_QWORD *)(v20 + 72) * v17, (uint64_t)v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v8, 0, 1, v19);
  }
  else
  {
    v19 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 1, 1, v19);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v8, 1, v19) != 1)
    return sub_231317058((uint64_t)v8, a3);
  sub_2312F1A20((uint64_t)v8, &qword_255ECC7F0, (void (*)(uint64_t))type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
  result = sub_231414EE4();
  __break(1u);
  return result;
}

void sub_2313157C0()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorViewModel_healthStore), sel_displayTypeController);
  if (v1)
  {
    v2 = v1;
    v3 = *(unsigned __int8 *)(v0 + 16);
    sub_231318848(*(_BYTE *)(v0 + 16));
    v5 = v4;
    v6 = objc_msgSend(v2, sel_displayTypeForObjectType_, v4);

    if (v6)
    {
      v7 = objc_msgSend(v6, sel_displayCategory);
      v8 = objc_msgSend(v7, sel_color);

      if (v8)
      {
        sub_2312D3AD4();
        v9 = swift_allocObject();
        *(_OWORD *)(v9 + 16) = xmmword_231417F90;
        *(_QWORD *)(v9 + 32) = v8;
        sub_2314147B8();
        sub_23131716C();
        v10 = v8;
        v11 = (void *)sub_231414788();
        swift_bridgeObjectRelease();
        v12 = (void *)objc_opt_self();
        v13 = objc_msgSend(v12, sel_configurationWithPaletteColors_, v11);

        v14 = v13;
        v15 = objc_msgSend(v12, sel_configurationWithPointSize_weight_, 6, 22.0);
        v16 = objc_msgSend(v14, sel_configurationByApplyingConfiguration_, v15);

        __asm { BR              X9 }
      }
LABEL_7:
      __break(1u);
      JUMPOUT(0x231315BA0);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  goto LABEL_7;
}

void sub_231315BB8()
{
  uint64_t v0;
  id v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorViewModel_healthStore), sel_displayTypeController);
  if (v1)
  {
    v2 = v1;
    sub_231318848(*(_BYTE *)(v0 + 16));
    v4 = v3;
    v5 = objc_msgSend(v2, sel_displayTypeForObjectType_, v3);

    if (v5)
    {
      v6 = objc_msgSend(v5, sel_localization);

      v7 = objc_msgSend(v6, sel_displayName);
      sub_2314146BC();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_231315C9C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  unsigned int (*v49)(char *, uint64_t, uint64_t);
  uint64_t *v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  void *v58;
  void *v59;
  id v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t (*v64)(char *, char *, uint64_t);
  uint64_t v65;
  char *v66;
  uint64_t v67;
  int v68;
  char *v69;
  uint64_t v70;
  void (*v71)(_QWORD, _QWORD);
  char *v72;
  char *v73;
  char *v74;
  char v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t result;
  char v92;
  void (*v93)(char *, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  void (*v104)(char *, uint64_t);
  uint64_t v105;
  char *v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  void (*v113)(char *, uint64_t);
  uint64_t v114;
  char *v115;
  uint64_t v116;
  char *v117;
  char *v118;
  char *v119;
  void (*v120)(char *, uint64_t);
  uint64_t v121;
  char *v122;
  char *v123;
  char *v124;
  char *v125;
  char *v126;
  char *v127;
  uint64_t v128;
  char *v129;
  char *v130;
  char *v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  char *v144;
  char *v145;
  char *v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  char *v157;
  char *v158;
  void (*v159)(_QWORD, _QWORD);
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t v169;

  v152 = *v0;
  v141 = sub_231411554();
  v140 = *(_QWORD *)(v141 - 8);
  MEMORY[0x24BDAC7A8](v141);
  v139 = (char *)&v128 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = sub_231411584();
  v137 = *(_QWORD *)(v138 - 8);
  MEMORY[0x24BDAC7A8](v138);
  v136 = (char *)&v128 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = sub_23141156C();
  v134 = *(_QWORD *)(v135 - 8);
  MEMORY[0x24BDAC7A8](v135);
  v133 = (char *)&v128 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = sub_231411764();
  v149 = *(_QWORD *)(v150 - 8);
  MEMORY[0x24BDAC7A8](v150);
  v148 = (char *)&v128 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_231411458();
  MEMORY[0x24BDAC7A8](v5);
  v151 = (char *)&v128 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23141177C();
  v158 = *(char **)(v7 - 8);
  v159 = (void (*)(_QWORD, _QWORD))v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v157 = (char *)&v128 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v147 = (char *)&v128 - v10;
  v11 = sub_2314117A0();
  MEMORY[0x24BDAC7A8](v11);
  v146 = (char *)&v128 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D1E78(0, &qword_255ECC7F8, (void (*)(uint64_t))MEMORY[0x24BDCDEE8]);
  MEMORY[0x24BDAC7A8](v13);
  v145 = (char *)&v128 - v14;
  sub_2312D1E78(0, &qword_255ECC800, (void (*)(uint64_t))MEMORY[0x24BDCDF30]);
  MEMORY[0x24BDAC7A8](v15);
  v144 = (char *)&v128 - v16;
  v156 = sub_23141159C();
  v154 = *(_QWORD *)(v156 - 8);
  v17 = MEMORY[0x24BDAC7A8](v156);
  v129 = (char *)&v128 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v130 = (char *)&v128 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v131 = (char *)&v128 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v132 = (char *)&v128 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v155 = (char *)&v128 - v25;
  sub_2312D1E78(0, &qword_255ECC808, (void (*)(uint64_t))MEMORY[0x24BDCEEA8]);
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v128 - v27;
  v160 = sub_231411674();
  v29 = *(_QWORD *)(v160 - 8);
  v30 = MEMORY[0x24BDAC7A8](v160);
  v143 = (char *)&v128 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v161 = (char *)&v128 - v32;
  sub_2312D1E78(0, (unint64_t *)&qword_25415D500, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  v34 = MEMORY[0x24BDAC7A8](v33);
  v142 = (char *)&v128 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v34);
  v37 = (char *)&v128 - v36;
  v38 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
  MEMORY[0x24BDAC7A8](v38);
  v40 = (char *)&v128 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_231411608();
  v42 = *(char **)(v41 - 8);
  v43 = MEMORY[0x24BDAC7A8](v41);
  v45 = (char *)&v128 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v43);
  v47 = (char *)&v128 - v46;
  v48 = (uint64_t)v0 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorViewModel_state;
  swift_beginAccess();
  sub_23131709C(v48, (uint64_t)v40);
  sub_2312D38B4((uint64_t)v40, (uint64_t)v37);
  v49 = (unsigned int (*)(char *, uint64_t, uint64_t))*((_QWORD *)v42 + 6);
  if (v49(v37, 1, v41) == 1)
  {
    v50 = v0;
    sub_2312F1A20((uint64_t)v37, (unint64_t *)&qword_25415D500, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    if (qword_25415C170 != -1)
      swift_once();
    v51 = sub_231413780();
    sub_2312CE3B8(v51, (uint64_t)qword_254162F00);
    swift_retain_n();
    v52 = sub_231413768();
    v53 = sub_231414968();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = swift_slowAlloc();
      v55 = swift_slowAlloc();
      v166 = v55;
      *(_DWORD *)v54 = 136446467;
      v168 = v152;
      swift_getMetatypeMetadata();
      v56 = sub_2314146E0();
      v168 = sub_23133180C(v56, v57, &v166);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v54 + 12) = 2081;
      sub_231318848(*((_BYTE *)v50 + 16));
      v59 = v58;
      v60 = objc_msgSend(v58, sel_identifier);

      v61 = sub_2314146BC();
      v63 = v62;

      v168 = sub_23133180C(v61, v63, &v166);
      sub_231414CBC();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v52, v53, "[%{public}s] No last updated date for identifier %{private}s", (uint8_t *)v54, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v55, -1, -1);
      MEMORY[0x2348DE308](v54, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    return 0;
  }
  v64 = (uint64_t (*)(char *, char *, uint64_t))*((_QWORD *)v42 + 4);
  v152 = v41;
  v153 = v47;
  v65 = v64(v47, v37, v41);
  (*(void (**)(uint64_t))((char *)v0 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorViewModel_dateGenerator))(v65);
  v66 = (char *)v0 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorViewModel_calendar;
  sub_231411740();
  v67 = v160;
  v68 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48))(v28, 1, v160);
  v69 = v45;
  v128 = v29;
  if (v68 == 1)
  {
    sub_23141165C();
    sub_2312F1A20((uint64_t)v28, &qword_255ECC808, (void (*)(uint64_t))MEMORY[0x24BDCEEA8]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v161, v28, v67);
  }
  v72 = v158;
  v71 = v159;
  v73 = v157;
  v158 = v42;
  v74 = v153;
  v75 = sub_231411734();
  v76 = v152;
  if ((v75 & 1) != 0)
  {
    v77 = v144;
    sub_231411500();
    v78 = sub_23141150C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v77, 0, 1, v78);
    v79 = v145;
    sub_2314114E8();
    v80 = sub_2314114F4();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56))(v79, 0, 1, v80);
    sub_231411758();
    sub_23141165C();
    sub_231411704();
    sub_23141144C();
    v81 = v155;
    sub_231411524();
    if (qword_255ECAAD8 != -1)
      swift_once();
    v168 = sub_231411374();
    v169 = v82;
    v166 = 0xD000000000000010;
    v167 = 0x8000000231428D00;
    sub_231317124();
    v83 = v156;
    sub_2314115F0();
    v162 = v164;
    v163 = v165;
    sub_2312D104C();
    v70 = sub_231414CE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v154 + 8))(v81, v83);
    (*(void (**)(char *, uint64_t))(v128 + 8))(v161, v160);
    v84 = (void (*)(char *, uint64_t))*((_QWORD *)v158 + 1);
    v84(v69, v76);
LABEL_23:
    v84(v74, v76);
    return v70;
  }
  (*((void (**)(char *, char *, void (*)(_QWORD, _QWORD)))v72 + 2))(v73, v66, v71);
  v85 = v149;
  v86 = v76;
  v87 = v148;
  v88 = v150;
  (*(void (**)(char *, _QWORD, uint64_t))(v149 + 104))(v148, *MEMORY[0x24BDCF220], v150);
  v89 = v142;
  sub_231411728();
  v90 = v87;
  v76 = v86;
  (*(void (**)(char *, uint64_t))(v85 + 8))(v90, v88);
  result = ((uint64_t (*)(char *, uint64_t, uint64_t))v49)(v89, 1, v86);
  if ((_DWORD)result != 1)
  {
    v74 = v153;
    v92 = sub_231411734();
    (*((void (**)(char *, _QWORD))v72 + 1))(v73, v159);
    v93 = (void (*)(char *, uint64_t))*((_QWORD *)v158 + 1);
    v93(v89, v76);
    v159 = (void (*)(_QWORD, _QWORD))v93;
    if ((v92 & 1) != 0)
    {
      v158 = v69;
      v94 = v128;
      if (qword_255ECAAD8 != -1)
        swift_once();
      v168 = sub_231411374();
      v169 = v95;
      v166 = 0x4452455453455940;
      v167 = 0xEB00000000405941;
      v164 = sub_231411374();
      v165 = v96;
      sub_2312D104C();
      v97 = sub_231414CE0();
      v99 = v98;
      swift_bridgeObjectRelease();
      v100 = swift_bridgeObjectRelease();
      v168 = v97;
      v169 = v99;
      v166 = 0xD000000000000010;
      v167 = 0x8000000231428C50;
      v101 = v129;
      MEMORY[0x2348D9B80](v100);
      v102 = v133;
      sub_231411560();
      v103 = v130;
      sub_231411530();
      (*(void (**)(char *, uint64_t))(v134 + 8))(v102, v135);
      v104 = *(void (**)(char *, uint64_t))(v154 + 8);
      v105 = v156;
      v104(v101, v156);
      v106 = v136;
      sub_231411578();
      v107 = v131;
      sub_23141153C();
      (*(void (**)(char *, uint64_t))(v137 + 8))(v106, v138);
      v104(v103, v105);
      v108 = v139;
      sub_231411548();
      v109 = v132;
      sub_231411518();
      (*(void (**)(char *, uint64_t))(v140 + 8))(v108, v141);
      v104(v107, v105);
      v110 = v155;
      v111 = v161;
      sub_231411590();
      v104(v109, v105);
      sub_231317124();
      v112 = v153;
      sub_2314115F0();
      v104(v110, v105);
      v162 = v164;
      v163 = v165;
      v70 = sub_231414CE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v94 + 8))(v111, v160);
      v113 = (void (*)(char *, uint64_t))v159;
      v114 = v152;
      v159(v158, v152);
      v113(v112, v114);
      return v70;
    }
    v115 = v69;
    if (qword_255ECAAD8 != -1)
      swift_once();
    v168 = sub_231411374();
    v169 = v116;
    v166 = 0xD000000000000010;
    v167 = 0x8000000231428C50;
    v117 = v129;
    MEMORY[0x2348D9B80]();
    v118 = v133;
    sub_231411560();
    v119 = v130;
    sub_231411530();
    (*(void (**)(char *, uint64_t))(v134 + 8))(v118, v135);
    v120 = *(void (**)(char *, uint64_t))(v154 + 8);
    v121 = v156;
    v120(v117, v156);
    v122 = v136;
    sub_231411578();
    v123 = v131;
    sub_23141153C();
    (*(void (**)(char *, uint64_t))(v137 + 8))(v122, v138);
    v120(v119, v121);
    v124 = v139;
    sub_231411548();
    v125 = v132;
    sub_231411518();
    (*(void (**)(char *, uint64_t))(v140 + 8))(v124, v141);
    v120(v123, v121);
    v126 = v155;
    v127 = v161;
    sub_231411590();
    v120(v125, v121);
    sub_231317124();
    sub_2314115F0();
    v120(v126, v121);
    v162 = v164;
    v163 = v165;
    sub_2312D104C();
    v70 = sub_231414CE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v128 + 8))(v127, v160);
    v84 = (void (*)(char *, uint64_t))v159;
    v159(v115, v76);
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

uint64_t sub_231316DD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v3 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313155E4(a1, *(_BYTE *)(v1 + 16), (uint64_t)v5);
  v6 = v1 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorViewModel_state;
  swift_beginAccess();
  sub_2313170E0((uint64_t)v5, v6);
  return swift_endAccess();
}

uint64_t sub_231316E84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_2313171A8(v0 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorViewModel_state);

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC5Heart29AFibBurdenLifeFactorViewModel_calendar;
  v2 = sub_23141177C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_231316F08()
{
  return type metadata accessor for AFibBurdenLifeFactorViewModel();
}

uint64_t type metadata accessor for AFibBurdenLifeFactorViewModel()
{
  uint64_t result;

  result = qword_255ECC6F0;
  if (!qword_255ECC6F0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_231316F4C()
{
  unint64_t v0;
  unint64_t v1;

  sub_2312D1E78(319, (unint64_t *)&qword_25415D500, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  if (v0 <= 0x3F)
  {
    sub_23141177C();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t sub_23131700C()
{
  uint64_t v0;

  return sub_2312E21E8(*(unsigned __int8 *)(*(_QWORD *)v0 + 16) | 0x100u);
}

uint64_t (*sub_23131701C(uint64_t *a1))()
{
  uint64_t v1;
  uint64_t v3;

  *a1 = sub_2312E21E8(*(unsigned __int8 *)(*(_QWORD *)v1 + 16) | 0x100u);
  a1[1] = v3;
  return destroy for CenteredLabelWithSpinnerContentConfiguration;
}

uint64_t sub_231317058(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23131709C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2313170E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_231317124()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ECC810;
  if (!qword_255ECC810)
  {
    v1 = sub_23141159C();
    result = MEMORY[0x2348DE248](MEMORY[0x24BDCE290], v1);
    atomic_store(result, (unint64_t *)&qword_255ECC810);
  }
  return result;
}

unint64_t sub_23131716C()
{
  unint64_t result;

  result = qword_255ECC818;
  if (!qword_255ECC818)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255ECC818);
  }
  return result;
}

uint64_t sub_2313171A8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_23131725C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IRNInternalSettingsViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for IRNInternalSettingsViewController()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for HeartRateArticleDataProvider()
{
  return &type metadata for HeartRateArticleDataProvider;
}

void sub_2313172BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  unint64_t v8;
  void (*v9)(_QWORD);
  uint64_t *v10;
  uint64_t v11;
  void (*v12)(unint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  void (*v36)(unint64_t);
  uint64_t *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int v49;
  unsigned int v50;

  sub_2312D6DD8(0, (unint64_t *)&qword_255ECAC78, (uint64_t (*)(uint64_t))MEMORY[0x24BE3F938], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v0 = sub_231411C08();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = *(_QWORD *)(v1 + 72);
  v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_23141A660;
  if (qword_25415E610 != -1)
    swift_once();
  v5 = (id)qword_254163058;
  v6 = (void *)sub_23141468C();
  v7 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v6, v5);

  if (v7)
  {
    v8 = v4 + v3;
    *(_QWORD *)v8 = v7;
    *(_BYTE *)(v8 + 8) = 0;
    v9 = *(void (**)(_QWORD))(v1 + 104);
    ((void (*)(unint64_t, _QWORD, uint64_t))v9)(v4 + v3, *MEMORY[0x24BE3F908], v0);
    v10 = (uint64_t *)(v4 + v3 + v2);
    *v10 = sub_231411374();
    v10[1] = v11;
    v12 = v9;
    ((void (*)(unint64_t, _QWORD, uint64_t))v9)(v4 + v3 + v2, *MEMORY[0x24BE3F910], v0);
    v13 = 2 * v2;
    v14 = v4 + v3 + 2 * v2;
    *(_QWORD *)v14 = sub_231411374();
    *(_QWORD *)(v14 + 8) = v15;
    *(_BYTE *)(v14 + 16) = 0;
    v16 = v8 + 2 * v2;
    v17 = v0;
    v18 = *MEMORY[0x24BE3F930];
    v49 = *MEMORY[0x24BE3F930];
    v19 = v2;
    v20 = v17;
    v12(v16);
    v21 = (uint64_t *)(v8 + v13 + v19);
    *v21 = sub_231411374();
    v21[1] = v22;
    v21[2] = 0;
    v23 = *MEMORY[0x24BE3F8D0];
    v50 = *MEMORY[0x24BE3F8D0];
    ((void (*)(uint64_t *, uint64_t, uint64_t))v12)(v21, v23, v20);
    v24 = v8 + 4 * v19;
    *(_QWORD *)v24 = sub_231411374();
    *(_QWORD *)(v24 + 8) = v25;
    *(_BYTE *)(v24 + 16) = 0;
    ((void (*)(unint64_t, uint64_t, uint64_t))v12)(v24, v18, v20);
    v26 = (uint64_t *)(v8 + 5 * v19);
    *v26 = sub_231411374();
    v26[1] = v27;
    v26[2] = 0;
    ((void (*)(uint64_t *, uint64_t, uint64_t))v12)(v26, v23, v20);
    v28 = v8 + 6 * v19;
    *(_QWORD *)v28 = sub_231411374();
    *(_QWORD *)(v28 + 8) = v29;
    *(_BYTE *)(v28 + 16) = 0;
    ((void (*)(unint64_t, _QWORD, uint64_t))v12)(v28, v49, v20);
    v30 = v8 + 7 * v19;
    *(_QWORD *)v30 = sub_231411374();
    *(_QWORD *)(v30 + 8) = v31;
    *(_BYTE *)(v30 + 16) = 0;
    ((void (*)(unint64_t, _QWORD, uint64_t))v12)(v30, v49, v20);
    v32 = (uint64_t *)(v8 + 8 * v19);
    *v32 = sub_231411374();
    v32[1] = v33;
    v32[2] = 0;
    ((void (*)(uint64_t *, _QWORD, uint64_t))v12)(v32, v50, v20);
    v34 = v8 + 9 * v19;
    *(_QWORD *)v34 = sub_231411374();
    *(_QWORD *)(v34 + 8) = v35;
    *(_BYTE *)(v34 + 16) = 0;
    v36 = v12;
    ((void (*)(unint64_t, _QWORD, uint64_t))v12)(v34, v49, v20);
    sub_231317A9C((uint64_t *)(v8 + 10 * v19));
    v37 = (uint64_t *)(v8 + 11 * v19);
    *v37 = sub_231411374();
    v37[1] = v38;
    v37[2] = 0;
    ((void (*)(uint64_t *, _QWORD, uint64_t))v12)(v37, v50, v20);
    v39 = v8 + 12 * v19;
    *(_QWORD *)v39 = sub_231411374();
    *(_QWORD *)(v39 + 8) = v40;
    *(_BYTE *)(v39 + 16) = 0;
    ((void (*)(unint64_t, _QWORD, uint64_t))v12)(v39, v49, v20);
    v41 = (uint64_t *)(v8 + 13 * v19);
    sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
    v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_23141A670;
    *(_QWORD *)(v42 + 32) = sub_231411374();
    *(_QWORD *)(v42 + 40) = v43;
    *(_QWORD *)(v42 + 48) = sub_231411374();
    *(_QWORD *)(v42 + 56) = v44;
    *(_QWORD *)(v42 + 64) = sub_231411374();
    *(_QWORD *)(v42 + 72) = v45;
    *(_QWORD *)(v42 + 80) = sub_231411374();
    *(_QWORD *)(v42 + 88) = v46;
    *(_QWORD *)(v42 + 96) = sub_231411374();
    *(_QWORD *)(v42 + 104) = v47;
    *(_QWORD *)(v42 + 112) = sub_231411374();
    *(_QWORD *)(v42 + 120) = v48;
    *v41 = v42;
    ((void (*)(uint64_t *, _QWORD, uint64_t))v36)(v41, *MEMORY[0x24BE3F8D8], v20);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_231317A9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_2312D6DD8(0, &qword_25415C0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v22 - v3;
  if (qword_25415E610 != -1)
    swift_once();
  v5 = sub_231411374();
  v7 = v6;
  v8 = sub_231318094();
  v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0)
    v10 = v8 & 0xFFFFFFFFFFFFLL;
  if (v10)
  {
    *a1 = v5;
    a1[1] = v7;
    a1[2] = v8;
    a1[3] = v9;
    sub_2314114A0();
    v11 = sub_2314114AC();
    v12 = *(_QWORD *)(v11 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v4, 1, v11);
    if ((_DWORD)result == 1)
    {
      __break(1u);
    }
    else
    {
      sub_231301B4C();
      v15 = (char *)a1 + *(int *)(v14 + 64);
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v4, v11);
      v16 = *MEMORY[0x24BE3F8B8];
      v17 = sub_231411BFC();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v15, v16, v17);
      v18 = *MEMORY[0x24BE3F8E8];
      v19 = sub_231411C08();
      return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(a1, v18, v19);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    *a1 = v5;
    a1[1] = v7;
    *((_BYTE *)a1 + 16) = 0;
    v20 = *MEMORY[0x24BE3F930];
    v21 = sub_231411C08();
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(a1, v20, v21);
  }
  return result;
}

unint64_t sub_231317CF8()
{
  return 0xD000000000000024;
}

uint64_t sub_231317D14()
{
  if (qword_25415E610 != -1)
    swift_once();
  return sub_231411374();
}

uint64_t sub_231317DA4()
{
  if (qword_25415E610 != -1)
    swift_once();
  return sub_231411374();
}

uint64_t sub_231317E3C()
{
  if (qword_25415E610 != -1)
    swift_once();
  return sub_231411374();
}

void sub_231317ED0()
{
  id v0;
  void *v1;
  id v2;

  if (qword_25415E610 != -1)
    swift_once();
  v0 = (id)qword_254163058;
  v1 = (void *)sub_23141468C();
  v2 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v1, v0);

  if (!v2)
    __break(1u);
}

uint64_t sub_231317F8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  unint64_t v6;

  sub_2312D3C68(0, (unint64_t *)&qword_25415DEC8);
  v0 = MEMORY[0x2348DD384]((id)*MEMORY[0x24BDD35B8]);
  sub_2312D3C68(0, (unint64_t *)&qword_25415DEC0);
  v1 = MEMORY[0x2348DD378]((id)*MEMORY[0x24BDD2980]);
  v2 = MEMORY[0x2348DD378]((id)*MEMORY[0x24BDD2930]);
  sub_2312D6CEC(0, (unint64_t *)&qword_25415BD40);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2314186B0;
  *(_QWORD *)(inited + 32) = v0;
  *(_QWORD *)(inited + 40) = v1;
  *(_QWORD *)(inited + 48) = v2;
  v6 = inited;
  sub_2314147B8();
  v4 = sub_2313F4934(v6);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_231318094()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;

  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_23141468C();
  v2 = objc_msgSend(v0, sel_modelSpecificLocalizedStringKeyForKey_, v1);

  if (v2)
  {
    sub_2314146BC();

    if (qword_25415E610 != -1)
      swift_once();
    v3 = sub_231411374();
    swift_bridgeObjectRelease();
    return v3;
  }
  else
  {
    if (qword_25415E610 != -1)
      swift_once();
    return sub_231411374();
  }
}

uint64_t type metadata accessor for CardioFitnessOnboardingConfirmDetailsViewController()
{
  uint64_t result;

  result = qword_255ECC860;
  if (!qword_255ECC860)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_231318250()
{
  return swift_initClassMetadata2();
}

id sub_2313182B0()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  objc_super v8;

  v1 = v0;
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for CardioFitnessOnboardingConfirmDetailsViewController();
  objc_msgSendSuper2(&v8, sel_viewDidLoad);
  v2 = objc_msgSend(v0, sel_hxui_addNextButtonWithAccessibilityIdentifier_, 0);
  v3 = qword_255ECC850;
  v4 = *(void **)&v1[qword_255ECC850];
  *(_QWORD *)&v1[qword_255ECC850] = v2;

  v5 = *(void **)&v1[v3];
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v6, sel_setEnabled_, sub_23136D370() & 1);

  }
  return objc_msgSend(v1, sel_hxui_addCancelButton);
}

void sub_23131837C(void *a1)
{
  id v1;

  v1 = a1;
  sub_2313182B0();

}

uint64_t sub_2313183B0(char *a1)
{
  uint64_t result;
  void *v3;
  char *v4;

  result = MEMORY[0x2348DE3BC](&a1[qword_255ECC848]);
  if (result)
  {
    v3 = (void *)result;
    v4 = a1;
    sub_2313CBF84(v4, v3);

    return sub_2314130CC();
  }
  return result;
}

uint64_t sub_231318408(char *a1)
{
  uint64_t result;
  uint64_t v3;
  char *v4;

  result = MEMORY[0x2348DE3BC](&a1[qword_255ECC848]);
  if (result)
  {
    v3 = result;
    v4 = a1;
    sub_231341F2C(v3);

    return sub_2314130CC();
  }
  return result;
}

void sub_231318460(void *a1)
{
  id v1;
  id v2;
  void *v3;
  id v4;

  v4 = a1;
  v1 = objc_msgSend(v4, sel_presentedViewController);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 1, 0);

    v3 = v2;
  }
  else
  {
    v3 = v4;
  }

}

void sub_2313184CC()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_2313184F8()
{
  uint64_t v0;

  sub_2312D2854(v0 + qword_255ECC848);

  return swift_release();
}

id sub_231318534()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CardioFitnessOnboardingConfirmDetailsViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_231318568(uint64_t a1)
{
  sub_2312D2854(a1 + qword_255ECC848);

  return swift_release();
}

uint64_t sub_2313185B0()
{
  return type metadata accessor for CardioFitnessOnboardingConfirmDetailsViewController();
}

uint64_t sub_2313185B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + qword_255ECC848 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return sub_2314130CC();
}

void sub_2313185F0()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;

  v1 = v0;
  v2 = objc_allocWithZone((Class)type metadata accessor for CardioFitnessOnboardingAboutHealthDetailsViewController());
  v3 = sub_23135ADE4();
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A728]), sel_initWithRootViewController_, v3);
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD410]), sel_initWithBarButtonSystemItem_target_action_, 0, v1, sel_dismissPresentedViewController);
  v5 = objc_msgSend(v3, sel_navigationItem);
  objc_msgSend(v5, sel_setRightBarButtonItem_, v6);

  objc_msgSend(v1, sel_presentViewController_animated_completion_, v4, 1, 0);
}

uint64_t storeEnumTagSinglePayload for AFibBurdenLifeFactor(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_231318728 + 4 * byte_23141A815[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23131875C + 4 * byte_23141A810[v4]))();
}

uint64_t sub_23131875C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_231318764(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23131876CLL);
  return result;
}

uint64_t sub_231318778(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x231318780);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_231318784(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23131878C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenLifeFactor()
{
  return &type metadata for AFibBurdenLifeFactor;
}

unint64_t sub_2313187AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ECC8B0;
  if (!qword_255ECC8B0)
  {
    sub_2313187F4();
    result = MEMORY[0x2348DE248](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_255ECC8B0);
  }
  return result;
}

void sub_2313187F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECC8B8)
  {
    v0 = sub_2314147F4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECC8B8);
  }
}

void sub_231318848(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_231318870()
{
  sub_2312D3C68(0, (unint64_t *)&qword_25415DEC8);
  return MEMORY[0x2348DD384]((id)*MEMORY[0x24BDD3348]);
}

void sub_231318958(_QWORD *a1@<X8>)
{
  *a1 = &unk_25001EE60;
}

unint64_t sub_23131896C()
{
  unint64_t result;

  result = qword_255ECC8C0;
  if (!qword_255ECC8C0)
  {
    result = MEMORY[0x2348DE248](&unk_23141A8B0, &type metadata for AFibBurdenLifeFactor);
    atomic_store(result, (unint64_t *)&qword_255ECC8C0);
  }
  return result;
}

uint64_t sub_2313189B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v24 = a1;
  v2 = sub_2314140A4();
  v23 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23131BE4C();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23131BF60(0);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = v1;
  sub_23131BEE0(0);
  sub_2312CCC24(&qword_255ECC950, (uint64_t (*)(uint64_t))sub_23131BEE0, MEMORY[0x24BDF5428]);
  sub_2314142A8();
  sub_231414098();
  sub_2312CCC24(&qword_255ECC960, (uint64_t (*)(uint64_t))sub_23131BE4C, MEMORY[0x24BDF1A30]);
  sub_231414398();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v15 = *(void **)(v22[1] + 8);
  type metadata accessor for FeatureStatusObservable();
  sub_2312CCC24(&qword_255ECC920, (uint64_t (*)(uint64_t))type metadata accessor for FeatureStatusObservable, (uint64_t)&unk_23141A928);
  v16 = v15;
  v17 = sub_231413D50();
  v18 = v24;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 16))(v24, v14, v11);
  sub_23131C018();
  v20 = (uint64_t *)(v18 + *(int *)(v19 + 36));
  *v20 = v17;
  v20[1] = (uint64_t)v16;
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

id *sub_231318BE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v10[8];
  id v11[3];
  uint64_t v12;

  v4 = *(void **)(a1 + 24);
  sub_2312DF850(a1 + 32, (uint64_t)&v12);
  type metadata accessor for FeatureStatusObservable();
  sub_2312CCC24(&qword_255ECC920, (uint64_t (*)(uint64_t))type metadata accessor for FeatureStatusObservable, (uint64_t)&unk_23141A928);
  v5 = v4;
  v11[0] = (id)sub_2314140D4();
  v11[1] = v6;
  v11[2] = v5;
  v7 = *(void **)(a1 + 16);
  sub_23131C0B4((uint64_t)v11, (uint64_t)v10);
  sub_23131C0B4((uint64_t)v10, a2);
  *(_QWORD *)(a2 + 64) = v7;
  v8 = v7;
  sub_23131C0E8(v11);

  return sub_23131C0E8(v10);
}

uint64_t sub_231318CB4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  char *v24;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t result;
  void *v29;
  void *v30;

  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3D70]), sel_init);
  v7 = objc_msgSend(v6, sel_currentEstimate);
  v8 = v7;
  if (v7)
  {
    v9 = objc_msgSend(v7, sel_ISOCode);
    sub_2314146BC();
    v11 = v10;

  }
  else
  {
    v11 = 0;
  }
  v12 = objc_msgSend(a1, sel_profileIdentifier);
  v13 = objc_msgSend(v12, sel_type);

  if (v13 == (id)1)
  {
    v30 = v8;
    v14 = (void *)*MEMORY[0x24BDD2DC8];
    v15 = objc_allocWithZone(MEMORY[0x24BDD3BF8]);
    v16 = v15;
    if (v11)
    {
      v17 = v14;
      v29 = v14;
      v18 = v6;
      v19 = a2;
      v20 = v17;
      v21 = a1;
      sub_231412A90();
      v22 = (void *)sub_23141468C();
      swift_bridgeObjectRelease();
      v23 = objc_msgSend(v16, sel_initWithFeatureIdentifier_healthStore_currentCountryCode_, v20, v21, v22);
      swift_bridgeObjectRelease();

      a2 = v19;
      v6 = v18;
      v14 = v29;

      if (!v23)
        goto LABEL_11;
LABEL_9:
      v24 = (char *)objc_allocWithZone((Class)type metadata accessor for FeatureStatusObservable());
      v25 = v23;
      sub_23131B420((uint64_t)v25, v24);
      sub_2312CCC24(&qword_255ECC920, (uint64_t (*)(uint64_t))type metadata accessor for FeatureStatusObservable, (uint64_t)&unk_23141A928);
      *a3 = sub_23141405C();
      a3[1] = v26;
      a3[2] = (uint64_t)a1;
      sub_2312DF850(a2, (uint64_t)(a3 + 4));
      v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3BE0]), sel_initWithFeatureIdentifier_healthStore_, v14, a1);

      result = _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a2);
      a3[3] = (uint64_t)v27;
      return result;
    }
    v23 = objc_msgSend(v15, sel_initWithFeatureIdentifier_healthStore_, v14, a1);
    if (v23)
      goto LABEL_9;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
LABEL_11:
  result = sub_231414EE4();
  __break(1u);
  return result;
}

uint64_t sub_231318F74()
{
  sub_2314141C4();
  sub_2314142D8();
  sub_23131907C();
  sub_2312D104C();
  sub_2314142F0();
  sub_23131C4E8();
  sub_2312CCC24((unint64_t *)&qword_255ECC9B0, (uint64_t (*)(uint64_t))sub_23131C4E8, MEMORY[0x24BDF43B0]);
  return sub_2314144A0();
}

uint64_t sub_23131907C()
{
  void **v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  unint64_t v10;
  uint64_t result;
  void *v12;
  unsigned int v13;
  void *v14;
  unsigned int v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t inited;
  void *v20;
  id v21;
  char v22;
  void *v23;
  unsigned int v24;
  void *v25;
  id v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  uint64_t v51;
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;

  sub_2312DC5EC(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v60 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23141357C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v0;
  if (*v0)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    v9 = v8;
    sub_231413E40();

    swift_release();
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    {
      v10 = 0xD00000000000001BLL;
      sub_2312CEBD4((uint64_t)v3, (uint64_t (*)(_QWORD))sub_2312DC5EC);
      return v10;
    }
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
    if ((sub_231413570() & 1) != 0)
    {
      v12 = (void *)sub_231413588();
      v13 = objc_msgSend(v12, sel_areAllRequirementsSatisfied);

      if (v13)
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        return 0xD000000000000026;
      }
      else
      {
        v61 = v5;
        v16 = (void *)sub_231413588();
        v17 = objc_msgSend(v16, sel_unsatisfiedRequirementIdentifiers);

        type metadata accessor for HKFeatureAvailabilityRequirementIdentifier(0);
        v18 = sub_2314147A0();

        sub_2312D6DD8(0, (unint64_t *)&qword_255ECB398, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureAvailabilityRequirementIdentifier, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_231416A30;
        v20 = (void *)*MEMORY[0x24BDD2D10];
        *(_QWORD *)(inited + 32) = *MEMORY[0x24BDD2D10];
        v21 = v20;
        v22 = sub_2313971B8(v18, inited);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_bridgeObjectRelease();
        if ((v22 & 1) != 0)
        {
          (*(void (**)(char *, uint64_t))(v61 + 8))(v7, v4);
          return 0xD000000000000027;
        }
        else
        {
          v63 = 0;
          v64 = 0xE000000000000000;
          sub_231414E18();
          sub_231414728();
          v37 = (void *)sub_231413588();
          v38 = objc_msgSend(v37, sel_unsatisfiedRequirementIdentifiers);

          v39 = sub_2314147A0();
          v40 = *(_QWORD *)(v39 + 16);
          if (v40)
          {
            v60 = v4;
            v62 = MEMORY[0x24BEE4AF8];
            sub_23137D374(0, v40, 0);
            v41 = 0;
            v42 = v62;
            do
            {
              v43 = sub_2314146BC();
              v45 = v44;
              v62 = v42;
              v47 = *(_QWORD *)(v42 + 16);
              v46 = *(_QWORD *)(v42 + 24);
              if (v47 >= v46 >> 1)
              {
                sub_23137D374(v46 > 1, v47 + 1, 1);
                v42 = v62;
              }
              ++v41;
              *(_QWORD *)(v42 + 16) = v47 + 1;
              v48 = v42 + 16 * v47;
              *(_QWORD *)(v48 + 32) = v43;
              *(_QWORD *)(v48 + 40) = v45;
            }
            while (v40 != v41);
            swift_bridgeObjectRelease();
            v4 = v60;
          }
          else
          {
            swift_bridgeObjectRelease();
            v42 = MEMORY[0x24BEE4AF8];
          }
          v62 = v42;
          sub_2312CF374(0, &qword_255ECC9C0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
          sub_23131C5FC();
          sub_231414668();
          swift_bridgeObjectRelease();
          sub_231414728();
          swift_bridgeObjectRelease();
          v10 = v63;
          (*(void (**)(char *, uint64_t))(v61 + 8))(v7, v4);
        }
      }
      return v10;
    }
    v14 = (void *)sub_231413588();
    v15 = objc_msgSend(v14, sel_areAllRequirementsSatisfied);

    if (v15)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      return 0xD00000000000002BLL;
    }
    v23 = (void *)sub_231413588();
    v24 = objc_msgSend(v23, sel_areAllRequirementsSatisfied);

    if (v24)
    {
      v63 = 0;
      v64 = 0xE000000000000000;
      sub_231414E18();
      sub_231414728();
      v25 = (void *)sub_231413588();
      v26 = objc_msgSend(v25, sel_unsatisfiedRequirementIdentifiers);

      type metadata accessor for HKFeatureAvailabilityRequirementIdentifier(0);
      v27 = sub_2314147A0();

      v28 = *(_QWORD *)(v27 + 16);
      if (v28)
      {
        v60 = v4;
        v61 = v5;
        v62 = MEMORY[0x24BEE4AF8];
        sub_23137D374(0, v28, 0);
        v29 = 0;
        v30 = v62;
        do
        {
          v31 = sub_2314146BC();
          v33 = v32;
          v62 = v30;
          v35 = *(_QWORD *)(v30 + 16);
          v34 = *(_QWORD *)(v30 + 24);
          if (v35 >= v34 >> 1)
          {
            sub_23137D374(v34 > 1, v35 + 1, 1);
            v30 = v62;
          }
          ++v29;
          *(_QWORD *)(v30 + 16) = v35 + 1;
          v36 = v30 + 16 * v35;
          *(_QWORD *)(v36 + 32) = v31;
          *(_QWORD *)(v36 + 40) = v33;
        }
        while (v28 != v29);
LABEL_30:
        swift_bridgeObjectRelease();
        v4 = v60;
        v5 = v61;
LABEL_32:
        v62 = v30;
        sub_2312CF374(0, &qword_255ECC9C0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
        sub_23131C5FC();
        sub_231414668();
        swift_bridgeObjectRelease();
        sub_231414728();
        swift_bridgeObjectRelease();
        v10 = v63;
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        return v10;
      }
    }
    else
    {
      v63 = 0;
      v64 = 0xE000000000000000;
      sub_231414E18();
      sub_231414728();
      v49 = (void *)sub_231413588();
      v50 = objc_msgSend(v49, sel_unsatisfiedRequirementIdentifiers);

      type metadata accessor for HKFeatureAvailabilityRequirementIdentifier(0);
      v51 = sub_2314147A0();

      v52 = *(_QWORD *)(v51 + 16);
      if (v52)
      {
        v60 = v4;
        v61 = v5;
        v62 = MEMORY[0x24BEE4AF8];
        sub_23137D374(0, v52, 0);
        v53 = 0;
        v30 = v62;
        do
        {
          v54 = sub_2314146BC();
          v56 = v55;
          v62 = v30;
          v58 = *(_QWORD *)(v30 + 16);
          v57 = *(_QWORD *)(v30 + 24);
          if (v58 >= v57 >> 1)
          {
            sub_23137D374(v57 > 1, v58 + 1, 1);
            v30 = v62;
          }
          ++v53;
          *(_QWORD *)(v30 + 16) = v58 + 1;
          v59 = v30 + 16 * v58;
          *(_QWORD *)(v59 + 32) = v54;
          *(_QWORD *)(v59 + 40) = v56;
        }
        while (v52 != v53);
        goto LABEL_30;
      }
    }
    swift_bridgeObjectRelease();
    v30 = MEMORY[0x24BEE4AF8];
    goto LABEL_32;
  }
  type metadata accessor for FeatureStatusObservable();
  sub_2312CCC24(&qword_255ECC920, (uint64_t (*)(uint64_t))type metadata accessor for FeatureStatusObservable, (uint64_t)&unk_23141A928);
  result = sub_2314140C8();
  __break(1u);
  return result;
}

uint64_t sub_23131988C(uint64_t a1)
{
  _OWORD *v2;
  __int128 v3;
  __int128 v4;
  _OWORD v6[4];

  sub_2314141C4();
  sub_23131C0B4(a1, (uint64_t)v6);
  v2 = (_OWORD *)swift_allocObject();
  v3 = v6[1];
  v2[1] = v6[0];
  v2[2] = v3;
  v4 = v6[3];
  v2[3] = v6[2];
  v2[4] = v4;
  return sub_231414434();
}

uint64_t sub_231319944(_QWORD *a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t aBlock[6];

  if (qword_25415B6D8 != -1)
    swift_once();
  sub_2312D4A68();
  sub_2312CE3B8(v2, (uint64_t)qword_254162EE8);
  aBlock[0] = 0;
  sub_231413594();
  v3 = (void *)a1[2];
  aBlock[4] = (uint64_t)sub_231319CDC;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_231330294;
  aBlock[3] = (uint64_t)&unk_250022270;
  v4 = _Block_copy(aBlock);
  objc_msgSend(v3, sel_resetOnboardingWithCompletion_, v4);
  _Block_release(v4);
  if (qword_25415DF98 != -1)
    swift_once();
  v5 = sub_231413780();
  sub_2312CE3B8(v5, (uint64_t)qword_254162FF0);
  v6 = sub_231413768();
  v7 = sub_23141498C();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    aBlock[0] = v9;
    *(_DWORD *)v8 = 136446466;
    sub_23133180C(0xD000000000000011, 0x800000023141AA10, aBlock);
    sub_231414CBC();
    *(_WORD *)(v8 + 12) = 2082;
    sub_23133180C(2036625250, 0xE400000000000000, aBlock);
    sub_231414CBC();
    _os_log_impl(&dword_2312C8000, v6, v7, "[%{public}s.%{public}s] Un-favoriting AFib History data type", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v9, -1, -1);
    MEMORY[0x2348DE308](v8, -1, -1);
  }

  sub_2312D3C68(0, (unint64_t *)&qword_25415DEC8);
  v10 = (void *)MEMORY[0x2348DD384]((id)*MEMORY[0x24BDD3378]);
  sub_2312CEA5C(a1 + 3, a1[6]);
  sub_231414908();
  sub_231411B0C();

  return swift_bridgeObjectRelease();
}

uint64_t sub_231319C24()
{
  sub_231414E18();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  return 0;
}

uint64_t sub_231319CDC(char a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  _QWORD v12[2];

  sub_2312D4A68();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    if (qword_25415B6D8 != -1)
      swift_once();
    v10 = sub_2312CE3B8(v5, (uint64_t)qword_254162EE8);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v10, v5);
    *(_QWORD *)(swift_allocObject() + 16) = a2;
    v12[1] = 0;
    v11 = a2;
    sub_2314135AC();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return result;
}

uint64_t sub_231319DF4(void *a1)
{
  id v2;

  sub_231414E18();
  sub_231414728();
  sub_23131C5C4();
  sub_2314146E0();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  v2 = a1;
  sub_2312D6DD8(0, (unint64_t *)&unk_255ED1EC0, (uint64_t (*)(uint64_t))sub_2312D3C14, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  sub_2314146E0();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return 0;
}

uint64_t sub_231319F04(uint64_t a1)
{
  sub_2314141C4();
  sub_2314142D8();
  sub_23131A008(a1);
  sub_2312D104C();
  sub_2314142F0();
  sub_23131C45C(0);
  sub_2312CCC24(&qword_255ECC9A0, (uint64_t (*)(uint64_t))sub_23131C45C, MEMORY[0x24BDF5428]);
  return sub_2314144A0();
}

unint64_t sub_23131A008(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  id v17;
  char *v18;
  id v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  unint64_t v22;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;

  v2 = sub_231411608();
  v25 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v24 - v6;
  sub_2312D375C();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v24 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v24 - v15;
  v17 = objc_msgSend((id)objc_opt_self(), sel_hkhr_aFibBurdenSyncedDefaultsDomainWithHealthStore_, a1);
  sub_2314146BC();
  sub_2314149C8();
  v18 = v5;
  swift_bridgeObjectRelease();
  v26 = 0;
  v27 = 0xE000000000000000;
  sub_231414E18();
  swift_bridgeObjectRelease();
  v26 = 0xD00000000000001ELL;
  v27 = 0x8000000231429120;
  sub_2312D6C20((uint64_t)v16, (uint64_t)v14, (uint64_t (*)(_QWORD))sub_2312D375C);
  sub_2312D6C20((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_2312D375C);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v11, 1, v2) != 1)
  {
    v19 = v17;
    v20 = v25;
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v7, v11, v2);
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v18, v7, v2);
    sub_2314146E0();
    v21 = *(void (**)(char *, uint64_t))(v20 + 8);
    v17 = v19;
    v21(v7, v2);
  }
  sub_2312CEBD4((uint64_t)v14, (uint64_t (*)(_QWORD))sub_2312D375C);
  sub_231414728();

  swift_bridgeObjectRelease();
  v22 = v26;
  sub_2312CEBD4((uint64_t)v16, (uint64_t (*)(_QWORD))sub_2312D375C);
  return v22;
}

uint64_t sub_23131A328@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t result;
  char v11;
  uint64_t v12;

  sub_2312D3C68(0, (unint64_t *)&qword_25415DEC8);
  v4 = (void *)*MEMORY[0x24BDD3378];
  v5 = a1;
  v6 = MEMORY[0x2348DD384](v4);
  v7 = v5;
  sub_2314143F8();
  v8 = objc_msgSend((id)objc_opt_self(), sel_heartbeatSeriesType);
  v9 = v7;
  result = sub_2314143F8();
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v6;
  *(_QWORD *)(a2 + 16) = 0x7275422062694641;
  *(_QWORD *)(a2 + 24) = 0xEB000000006E6564;
  *(_QWORD *)(a2 + 32) = v9;
  *(_BYTE *)(a2 + 40) = v11;
  *(_QWORD *)(a2 + 48) = v12;
  *(_QWORD *)(a2 + 56) = v8;
  *(_QWORD *)(a2 + 64) = 0x6172676F68636154;
  *(_QWORD *)(a2 + 72) = 0xE90000000000006DLL;
  *(_QWORD *)(a2 + 80) = v9;
  *(_BYTE *)(a2 + 88) = v11;
  *(_QWORD *)(a2 + 96) = v12;
  return result;
}

uint64_t sub_23131A474()
{
  uint64_t *v0;

  return sub_231319F04(*v0);
}

uint64_t sub_23131A47C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  _OWORD *v7;
  __int128 v8;
  id v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;

  v18 = a1;
  v2 = sub_2314141B8();
  MEMORY[0x24BDAC7A8](v2);
  sub_23131C4E8();
  v17 = v3;
  v19 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v15 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2314141AC();
  sub_2314141A0();
  v16 = *(_QWORD *)(v1 + 8);
  sub_231414194();
  sub_2314141A0();
  sub_2314141D0();
  v5 = *(void **)v1;
  v6 = *(void **)(v1 + 24);
  v22 = *(_OWORD *)(v1 + 32);
  v7 = (_OWORD *)swift_allocObject();
  v8 = *(_OWORD *)(v1 + 16);
  v7[1] = *(_OWORD *)v1;
  v7[2] = v8;
  v7[3] = *(_OWORD *)(v1 + 32);
  v9 = v5;
  sub_231412A90();
  v10 = v6;
  sub_23131CAB4((uint64_t)&v22);
  v11 = v15;
  sub_231414434();
  sub_2314141AC();
  sub_2314141A0();
  sub_231414194();
  sub_2314141A0();
  sub_2314141D0();
  v21 = v22;
  sub_2312CF374(0, &qword_255ECC9F0, MEMORY[0x24BEE1328], MEMORY[0x24BDF42C0]);
  sub_23141441C();
  v20 = v1;
  sub_2312CCC24((unint64_t *)&qword_255ECC9B0, (uint64_t (*)(uint64_t))sub_23131C4E8, MEMORY[0x24BDF43B0]);
  v12 = v17;
  sub_231414374();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v11, v12);
}

uint64_t sub_23131A76C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  __int128 v7;
  void *v8;
  _OWORD *v9;
  __int128 v10;
  id v11;
  id v12;
  __int128 v14;
  __int128 v15;

  sub_2312D6DD8(0, &qword_255ECC9F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEAFA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v14 - v3;
  sub_2314141C4();
  sub_231413FB4();
  v5 = sub_231413FC0();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 0, 1, v5);
  v6 = *(void **)a1;
  v7 = *(_OWORD *)(a1 + 8);
  v8 = *(void **)(a1 + 24);
  v14 = *(_OWORD *)(a1 + 32);
  v15 = v7;
  v9 = (_OWORD *)swift_allocObject();
  v10 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v10;
  v9[3] = *(_OWORD *)(a1 + 32);
  v11 = v6;
  sub_2312E3A64((uint64_t)&v15);
  v12 = v8;
  sub_23131CAB4((uint64_t)&v14);
  return sub_231414428();
}

void sub_23131A8C0(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  __int128 v7;
  _OWORD *v8;
  __int128 v9;
  void *v10;
  id v11;
  id v12;
  _QWORD v13[6];
  __int128 v14;
  __int128 v15;

  v2 = *(void **)(a1 + 24);
  sub_2312CF374(0, (unint64_t *)&qword_25415BD40, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_231417F90;
  v4 = *(void **)a1;
  *(_QWORD *)(v3 + 32) = *(_QWORD *)a1;
  v13[0] = v3;
  sub_2314147B8();
  sub_2312D3C68(0, (unint64_t *)&qword_25415DEB0);
  v5 = v4;
  v6 = (void *)sub_231414788();
  swift_bridgeObjectRelease();
  v7 = *(_OWORD *)(a1 + 8);
  v14 = *(_OWORD *)(a1 + 32);
  v15 = v7;
  v8 = (_OWORD *)swift_allocObject();
  v9 = *(_OWORD *)(a1 + 16);
  v8[1] = *(_OWORD *)a1;
  v8[2] = v9;
  v8[3] = *(_OWORD *)(a1 + 32);
  v13[4] = sub_23131CB30;
  v13[5] = v8;
  v13[0] = MEMORY[0x24BDAC760];
  v13[1] = 1107296256;
  v13[2] = sub_231330294;
  v13[3] = &unk_2500223E8;
  v10 = _Block_copy(v13);
  v11 = v5;
  sub_2312E3A64((uint64_t)&v15);
  v12 = v2;
  sub_23131CAB4((uint64_t)&v14);
  swift_release();
  objc_msgSend(v12, sel_deleteAllSamplesWithTypes_sourceBundleIdentifier_options_completion_, v6, 0, 2, v10);
  _Block_release(v10);

}

uint64_t sub_23131AA50(char a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  __int128 v14;
  void *v15;
  uint64_t v16;
  __int128 v17;
  id v18;
  id v19;
  id v20;
  _QWORD v21[2];
  __int128 v22;
  __int128 v23;

  sub_2312D4A68();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  result = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    if (qword_25415B6D8 != -1)
      swift_once();
    v12 = sub_2312CE3B8(v7, (uint64_t)qword_254162EE8);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v12, v7);
    v13 = *(void **)a3;
    v14 = *(_OWORD *)(a3 + 8);
    v15 = *(void **)(a3 + 24);
    v22 = *(_OWORD *)(a3 + 32);
    v23 = v14;
    v16 = swift_allocObject();
    v17 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)(v16 + 16) = *(_OWORD *)a3;
    *(_OWORD *)(v16 + 32) = v17;
    *(_OWORD *)(v16 + 48) = *(_OWORD *)(a3 + 32);
    *(_QWORD *)(v16 + 64) = a2;
    v21[1] = 0;
    v18 = v13;
    sub_2312E3A64((uint64_t)&v23);
    v19 = v15;
    sub_23131CAB4((uint64_t)&v22);
    v20 = a2;
    sub_2314135AC();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  return result;
}

uint64_t sub_23131ABB0(uint64_t a1, void *a2)
{
  id v3;

  sub_231414E18();
  sub_231414728();
  sub_23131CB88();
  sub_2314146E0();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  v3 = a2;
  sub_2312D6DD8(0, (unint64_t *)&unk_255ED1EC0, (uint64_t (*)(uint64_t))sub_2312D3C14, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  sub_2314146E0();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return 0;
}

uint64_t sub_23131ACEC@<X0>(uint64_t a1@<X8>)
{
  return sub_23131A47C(a1);
}

void sub_23131AD24(uint64_t a1)
{
  id v1;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4BFF8]), sel_initWithHealthStore_, a1);
  objc_msgSend(v1, sel_triggerAnalysis);

}

uint64_t sub_23131AD78()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_231413E40();
  swift_release();
  return swift_release();
}

uint64_t sub_23131ADDC()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_2314141C4();
  *(_QWORD *)(swift_allocObject() + 16) = v1;
  v2 = v1;
  return sub_231414434();
}

uint64_t sub_23131AE88(void *a1)
{
  id v2;

  sub_231414E18();
  sub_231414728();
  swift_getMetatypeMetadata();
  sub_2314146E0();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  v2 = a1;
  sub_2312D3C14();
  sub_2314146E0();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return 0;
}

void sub_23131AF78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;

  sub_2312DC5EC(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v15 - v8;
  swift_beginAccess();
  v10 = MEMORY[0x2348DE3BC](a2 + 16);
  if (v10)
  {
    v11 = (void *)v10;
    v12 = sub_23141357C();
    v13 = *(_QWORD *)(v12 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v9, a1, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2312D6C20((uint64_t)v9, (uint64_t)v7, (uint64_t (*)(_QWORD))sub_2312DC5EC);
    v14 = v11;
    sub_231413E4C();
    sub_2312CEBD4((uint64_t)v9, (uint64_t (*)(_QWORD))sub_2312DC5EC);

  }
}

id sub_23131B0F4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FeatureStatusObservable();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23131B1A0()
{
  return type metadata accessor for FeatureStatusObservable();
}

uint64_t type metadata accessor for FeatureStatusObservable()
{
  uint64_t result;

  result = qword_255ECC908;
  if (!qword_255ECC908)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23131B1E4()
{
  unint64_t v0;

  sub_2312D6DD8(319, &qword_255ECC918, (uint64_t (*)(uint64_t))sub_2312DC5EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_23131B27C()
{
  return MEMORY[0x24BDB9D70];
}

uint64_t sub_23131B288@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for FeatureStatusObservable();
  result = sub_231413D5C();
  *a1 = result;
  return result;
}

uint64_t sub_23131B2C4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_231413E40();
  swift_release();
  return swift_release();
}

uint64_t sub_23131B32C(uint64_t a1, void **a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  uint64_t v13;

  sub_2312DC5EC(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v13 - v8;
  sub_2312D6C20(a1, (uint64_t)&v13 - v8, (uint64_t (*)(_QWORD))sub_2312DC5EC);
  v10 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2312D6C20((uint64_t)v9, (uint64_t)v7, (uint64_t (*)(_QWORD))sub_2312DC5EC);
  v11 = v10;
  sub_231413E4C();
  return sub_2312CEBD4((uint64_t)v9, (uint64_t (*)(_QWORD))sub_2312DC5EC);
}

char *sub_23131B420(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, char *);
  uint64_t v28;
  uint64_t v29;
  objc_class *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v38[7];
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  id v49;
  objc_super v50;
  uint64_t v51;
  _QWORD v52[6];

  v38[6] = swift_getObjectType();
  sub_2313085E4(0);
  MEMORY[0x24BDAC7A8](v4);
  v42 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23131BABC();
  v44 = *(_QWORD *)(v6 - 8);
  v45 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v43 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D4A68();
  v38[5] = v8;
  v38[4] = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v38[3] = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6DD8(0, &qword_255ECC918, (uint64_t (*)(uint64_t))sub_2312DC5EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  v40 = v10;
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v38 - v12;
  sub_2312DC5EC(0);
  v15 = v14;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v39 = (char *)v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)v38 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)v38 - v21;
  v23 = sub_2312D3C68(0, (unint64_t *)&qword_25415BB50);
  v52[3] = v23;
  v52[4] = MEMORY[0x24BE45B80];
  v52[0] = a1;
  v24 = &a2[OBJC_IVAR____TtC5HeartP33_54C08C4D7764374DD7023E6C2D378D7623FeatureStatusObservable__featureStatus];
  v25 = sub_23141357C();
  v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56);
  v46(v22, 1, 1, v25);
  sub_2312D6C20((uint64_t)v22, (uint64_t)v20, (uint64_t (*)(_QWORD))sub_2312DC5EC);
  v26 = a2;
  v38[2] = v20;
  v48 = v15;
  sub_231413E1C();
  sub_2312CEBD4((uint64_t)v22, (uint64_t (*)(_QWORD))sub_2312DC5EC);
  v47 = v11;
  v27 = *(void (**)(char *, char *))(v11 + 32);
  v28 = (uint64_t)v39;
  v29 = v40;
  v27(v24, v13);
  *(_QWORD *)&v26[OBJC_IVAR____TtC5HeartP33_54C08C4D7764374DD7023E6C2D378D7623FeatureStatusObservable_subscription] = 0;
  sub_2312DF850((uint64_t)v52, (uint64_t)&v26[OBJC_IVAR____TtC5HeartP33_54C08C4D7764374DD7023E6C2D378D7623FeatureStatusObservable_featureStatusManager]);
  v41 = v23;
  sub_231413618();
  v46((char *)v28, 0, 1, v25);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v24, v29);
  sub_2312D6C20(v28, (uint64_t)v22, (uint64_t (*)(_QWORD))sub_2312DC5EC);
  sub_231413E1C();
  sub_2312CEBD4(v28, (uint64_t (*)(_QWORD))sub_2312DC5EC);
  swift_endAccess();

  v30 = (objc_class *)type metadata accessor for FeatureStatusObservable();
  v50.receiver = v26;
  v50.super_class = v30;
  v31 = (char *)objc_msgSendSuper2(&v50, sel_init);
  v51 = sub_231413624();
  sub_2312D3C68(0, (unint64_t *)&qword_25415DF00);
  v49 = (id)sub_231414A94();
  v32 = sub_231414A7C();
  v33 = (uint64_t)v42;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v42, 1, 1, v32);
  sub_2312DC608();
  sub_2312CCC24((unint64_t *)&qword_25415CFB0, (uint64_t (*)(uint64_t))sub_2312DC608, MEMORY[0x24BDB9AF8]);
  sub_231308748();
  v34 = v43;
  sub_231413F54();
  sub_2312CEBD4(v33, (uint64_t (*)(_QWORD))sub_2313085E4);

  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_2312CCC24(&qword_255ECC930, (uint64_t (*)(uint64_t))sub_23131BABC, MEMORY[0x24BDB9A08]);
  v35 = v45;
  v36 = sub_231413F90();
  swift_release();

  (*(void (**)(char *, uint64_t))(v44 + 8))(v34, v35);
  *(_QWORD *)&v31[OBJC_IVAR____TtC5HeartP33_54C08C4D7764374DD7023E6C2D378D7623FeatureStatusObservable_subscription] = v36;
  swift_release();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v52);
  return v31;
}

void sub_23131BABC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECC928)
  {
    sub_2312DC608();
    sub_2312D3C68(255, (unint64_t *)&qword_25415DF00);
    sub_2312CCC24((unint64_t *)&qword_25415CFB0, (uint64_t (*)(uint64_t))sub_2312DC608, MEMORY[0x24BDB9AF8]);
    sub_231308748();
    v0 = sub_231413CFC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECC928);
  }
}

uint64_t sub_23131BB70()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23131BB94()
{
  uint64_t v0;

  return sub_23131AE88(*(void **)(v0 + 16));
}

uint64_t sub_23131BB9C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_23131BBC0(uint64_t a1)
{
  uint64_t v1;

  sub_23131AF78(a1, v1);
}

uint64_t destroy for AFibBurdenInternalSettingsView(id *a1)
{

  return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)(a1 + 4));
}

uint64_t initializeWithCopy for AFibBurdenInternalSettingsView(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  id v11;
  id v12;
  id v13;

  v3 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(void **)(a2 + 16);
  v5 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  v6 = a1 + 32;
  v7 = a2 + 32;
  v8 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v8;
  v9 = v8;
  v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  v11 = v3;
  v12 = v4;
  v13 = v5;
  v10(v6, v7, v9);
  return a1;
}

_QWORD *assignWithCopy for AFibBurdenInternalSettingsView(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  *a1 = *a2;
  v4 = (void *)a2[1];
  v5 = (void *)a1[1];
  a1[1] = v4;
  v6 = v4;

  v7 = (void *)a2[2];
  v8 = (void *)a1[2];
  a1[2] = v7;
  v9 = v7;

  v10 = (void *)a2[3];
  v11 = (void *)a1[3];
  a1[3] = v10;
  v12 = v10;

  sub_2312DB81C(a1 + 4, a2 + 4);
  return a1;
}

__n128 initializeWithTake for AFibBurdenInternalSettingsView(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for AFibBurdenInternalSettingsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  __int128 v8;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;

  v6 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  v7 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + 32);
  v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for AFibBurdenInternalSettingsView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AFibBurdenInternalSettingsView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenInternalSettingsView()
{
  return &type metadata for AFibBurdenInternalSettingsView;
}

uint64_t sub_23131BE3C()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_23131BE4C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECC938)
  {
    sub_23131BEE0(255);
    sub_2312CCC24(&qword_255ECC950, (uint64_t (*)(uint64_t))sub_23131BEE0, MEMORY[0x24BDF5428]);
    v0 = sub_2314142B4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECC938);
  }
}

void sub_23131BEE0(uint64_t a1)
{
  sub_2312D6DD8(a1, &qword_255ECC940, (uint64_t (*)(uint64_t))sub_23131BEFC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_23131BEFC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255ECC948)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255ECC948);
  }
}

void sub_23131BF60(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[4];

  if (!qword_255ECC958)
  {
    sub_23131BE4C();
    v5[0] = v2;
    v5[1] = sub_2314140A4();
    v5[2] = sub_2312CCC24(&qword_255ECC960, (uint64_t (*)(uint64_t))sub_23131BE4C, MEMORY[0x24BDF1A30]);
    v5[3] = MEMORY[0x24BDED688];
    v3 = MEMORY[0x2348DE200](a1, v5, MEMORY[0x24BDF3A80], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_255ECC958);
  }
}

id *sub_23131C010@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_231318BE0(*(_QWORD *)(v1 + 16), a1);
}

void sub_23131C018()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECC968)
  {
    sub_23131BF60(255);
    sub_23131C07C(255);
    v0 = sub_231414074();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECC968);
  }
}

void sub_23131C07C(uint64_t a1)
{
  sub_2312D6DD8(a1, &qword_255ECC970, (uint64_t (*)(uint64_t))sub_23131C098, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
}

void sub_23131C098(uint64_t a1)
{
  sub_2312D6DD8(a1, &qword_255ECC978, (uint64_t (*)(uint64_t))type metadata accessor for FeatureStatusObservable, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

uint64_t sub_23131C0B4(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for OnboardingSection(a2, a1);
  return a2;
}

id *sub_23131C0E8(id *a1)
{
  destroy for OnboardingSection(a1);
  return a1;
}

ValueMetadata *type metadata accessor for DataSection()
{
  return &type metadata for DataSection;
}

uint64_t destroy for OnboardingSection(id *a1)
{

  return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)(a1 + 3));
}

uint64_t initializeWithCopy for OnboardingSection(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  id v11;
  id v12;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  v6 = a1 + 24;
  v7 = a2 + 24;
  v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v8;
  v9 = v8;
  v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  v11 = v3;
  v12 = v5;
  v10(v6, v7, v9);
  return a1;
}

uint64_t assignWithCopy for OnboardingSection(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(void **)(a2 + 16);
  v8 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  v9 = v7;

  sub_2312DB81C((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
  return a1;
}

__n128 initializeWithTake for OnboardingSection(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for OnboardingSection(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v5;

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for OnboardingSection(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OnboardingSection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for OnboardingSection()
{
  return &type metadata for OnboardingSection;
}

unint64_t sub_23131C354()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[6];

  result = qword_255ECC980;
  if (!qword_255ECC980)
  {
    sub_23131C018();
    v2 = v1;
    sub_23131BE4C();
    v4[2] = v3;
    v4[3] = sub_2314140A4();
    v4[4] = sub_2312CCC24(&qword_255ECC960, (uint64_t (*)(uint64_t))sub_23131BE4C, MEMORY[0x24BDF1A30]);
    v4[5] = MEMORY[0x24BDED688];
    v4[0] = swift_getOpaqueTypeConformance2();
    v4[1] = sub_2312CCC24(&qword_255ECC988, (uint64_t (*)(uint64_t))sub_23131C07C, MEMORY[0x24BDF1028]);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDED308], v2, v4);
    atomic_store(result, (unint64_t *)&qword_255ECC980);
  }
  return result;
}

uint64_t sub_23131C434()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23131C444()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23131C454@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23131A328(*(void **)(v1 + 16), a1);
}

void sub_23131C45C(uint64_t a1)
{
  sub_2312D6DD8(a1, &qword_255ECC990, (uint64_t (*)(uint64_t))sub_23131C478, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_23131C478()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_255ECC998)
  {
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_255ECC998);
  }
}

uint64_t sub_23131C4E0()
{
  uint64_t v0;

  return sub_23131988C(*(_QWORD *)(v0 + 16));
}

void sub_23131C4E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECC9A8)
  {
    v0 = sub_23141444C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECC9A8);
  }
}

uint64_t sub_23131C544()
{
  uint64_t v0;

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 40);
  return swift_deallocObject();
}

uint64_t sub_23131C578()
{
  uint64_t v0;

  return sub_231319944((_QWORD *)(v0 + 16));
}

uint64_t sub_23131C580(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23131C590()
{
  return swift_release();
}

uint64_t sub_23131C598()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23131C5BC()
{
  uint64_t v0;

  return sub_231319DF4(*(void **)(v0 + 16));
}

unint64_t sub_23131C5C4()
{
  unint64_t result;

  result = qword_255ECC9B8;
  if (!qword_255ECC9B8)
  {
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255ECC9B8);
  }
  return result;
}

unint64_t sub_23131C5FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ECC9C8;
  if (!qword_255ECC9C8)
  {
    sub_2312CF374(255, &qword_255ECC9C0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2348DE248](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_255ECC9C8);
  }
  return result;
}

uint64_t destroy for DeleteAllSamplesRow(id *a1)
{

  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for DeleteAllSamplesRow(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = v3;
  sub_231412A90();
  v7 = v5;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for DeleteAllSamplesRow(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_231412A90();
  swift_bridgeObjectRelease();
  v7 = *(void **)(a2 + 24);
  v8 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  v9 = v7;

  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for DeleteAllSamplesRow(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DeleteAllSamplesRow(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DeleteAllSamplesRow(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DeleteAllSamplesRow()
{
  return &type metadata for DeleteAllSamplesRow;
}

ValueMetadata *type metadata accessor for ForceAnalysisRow()
{
  return &type metadata for ForceAnalysisRow;
}

unint64_t sub_23131C8AC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[3];

  result = qword_255ECC9D0;
  if (!qword_255ECC9D0)
  {
    sub_23131C9D8(255, &qword_255ECC9D8, sub_23131C45C);
    v2 = v1;
    v3 = sub_2312CCC24(&qword_255ECC9A0, (uint64_t (*)(uint64_t))sub_23131C45C, MEMORY[0x24BDF5428]);
    v4[0] = MEMORY[0x24BDF1F80];
    v4[1] = v3;
    v4[2] = MEMORY[0x24BDF1F80];
    result = MEMORY[0x2348DE248](MEMORY[0x24BDF4AF8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_255ECC9D0);
  }
  return result;
}

unint64_t sub_23131C944()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[3];

  result = qword_255ECC9E0;
  if (!qword_255ECC9E0)
  {
    sub_23131C9D8(255, &qword_255ECC9E8, (void (*)(uint64_t))sub_23131C4E8);
    v2 = v1;
    v3 = sub_2312CCC24((unint64_t *)&qword_255ECC9B0, (uint64_t (*)(uint64_t))sub_23131C4E8, MEMORY[0x24BDF43B0]);
    v4[0] = MEMORY[0x24BDF1F80];
    v4[1] = v3;
    v4[2] = MEMORY[0x24BDF1F80];
    result = MEMORY[0x2348DE248](MEMORY[0x24BDF4AF8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_255ECC9E0);
  }
  return result;
}

void sub_23131C9D8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_2314144AC();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_23131CA30()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23131CA40()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23131CA54()
{
  sub_2312CF374(0, &qword_255ECC9F0, MEMORY[0x24BEE1328], MEMORY[0x24BDF42C0]);
  return sub_231414410();
}

uint64_t sub_23131CAB4(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_23131CADC()
{
  uint64_t v0;

  return sub_23131A76C(*(_QWORD *)(v0 + 16));
}

void sub_23131CAE8()
{
  uint64_t v0;

  sub_23131A8C0(v0 + 16);
}

uint64_t sub_23131CAF4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23131CB30(char a1, void *a2)
{
  uint64_t v2;

  return sub_23131AA50(a1, a2, v2 + 16);
}

uint64_t sub_23131CB38()
{
  id *v0;

  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23131CB7C()
{
  uint64_t v0;

  return sub_23131ABB0(v0 + 16, *(void **)(v0 + 64));
}

unint64_t sub_23131CB88()
{
  unint64_t result;

  result = qword_255ECCA00;
  if (!qword_255ECCA00)
  {
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255ECCA00);
  }
  return result;
}

uint64_t sub_23131CBC0()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_23131CBE4()
{
  uint64_t v0;

  sub_23131AD24(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23131CBEC()
{
  sub_23131C4E8();
  sub_2312CCC24((unint64_t *)&qword_255ECC9B0, (uint64_t (*)(uint64_t))sub_23131C4E8, MEMORY[0x24BDF43B0]);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23131CC50()
{
  return sub_2312CCC24((unint64_t *)&qword_255ECC9B0, (uint64_t (*)(uint64_t))sub_23131C4E8, MEMORY[0x24BDF43B0]);
}

id sub_23131CC88(char a1)
{
  _BYTE *v1;
  void *v3;
  void *v4;
  id v5;
  objc_super v7;

  *(_QWORD *)&v1[OBJC_IVAR____TtC5Heart45AFibBurdenOnboardingLifeFactorsViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v1[OBJC_IVAR____TtC5Heart45AFibBurdenOnboardingLifeFactorsViewController_isInOnboardingModalFlow] = a1;
  if (qword_255ECAAD8 != -1)
    swift_once();
  sub_231411374();
  v3 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  sub_231411374();
  v4 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for AFibBurdenOnboardingLifeFactorsViewController();
  v5 = objc_msgSendSuper2(&v7, sel_initWithTitle_detailText_icon_contentLayout_, v3, v4, 0, 2, 0xE000000000000000);

  return v5;
}

void sub_23131CDE0()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  __int128 v35;
  __int128 v36;
  objc_class *v37;
  char *v38;
  id v39;
  id v40;
  id v41;
  objc_super v42;
  _WORD v43[8];
  _OWORD v44[5];
  uint64_t v45;
  _OWORD v46[5];
  uint64_t v47;
  _OWORD v48[5];
  uint64_t v49;
  _OWORD v50[5];
  uint64_t v51;
  _OWORD v52[5];
  uint64_t v53;

  v1 = v0;

  if (*((_BYTE *)v0 + OBJC_IVAR____TtC5Heart45AFibBurdenOnboardingLifeFactorsViewController_isInOnboardingModalFlow) == 1)
    objc_msgSend(v0, sel_hxui_addCancelButton);
  v2 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v2, sel_setBackButtonDisplayMode_, 1);

  v3 = objc_msgSend(v1, sel_headerView);
  if (qword_255ECA990 != -1)
    swift_once();
  v52[0] = xmmword_255ECB560;
  sub_231412A90();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  v4 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v4);

  sub_23131DBA4();
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23141ABD0;
  if (qword_255ECAAD8 != -1)
    swift_once();
  v6 = sub_231411374();
  v8 = v7;
  v9 = (void *)objc_opt_self();
  v10 = objc_msgSend(v9, sel_hk_activityKeyColor, 0xE000000000000000);
  v52[0] = xmmword_255ECB560;
  sub_231412A90();
  sub_231414728();
  strcpy((char *)v50, "LifeFactors.");
  BYTE13(v50[0]) = 0;
  HIWORD(v50[0]) = -5120;
  sub_231414728();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231334BF8(v6, v8, v10, 3, *(uint64_t *)&v52[0], *((uint64_t *)&v52[0] + 1), (uint64_t)v44, 29.0);
  v11 = v44[3];
  *(_OWORD *)(v5 + 64) = v44[2];
  *(_OWORD *)(v5 + 80) = v11;
  *(_OWORD *)(v5 + 96) = v44[4];
  *(_QWORD *)(v5 + 112) = v45;
  v12 = v44[1];
  *(_OWORD *)(v5 + 32) = v44[0];
  *(_OWORD *)(v5 + 48) = v12;
  v13 = sub_231411374();
  v15 = v14;
  v16 = objc_msgSend(v9, sel_hk_sleepKeyColor, 0xE000000000000000);
  v52[0] = xmmword_255ECB560;
  sub_231412A90();
  sub_231414728();
  strcpy((char *)v50, "LifeFactors.");
  BYTE13(v50[0]) = 0;
  HIWORD(v50[0]) = -5120;
  sub_231414728();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231334BF8(v13, v15, v16, 6, *(uint64_t *)&v52[0], *((uint64_t *)&v52[0] + 1), (uint64_t)v46, 25.0);
  v17 = v46[1];
  *(_OWORD *)(v5 + 152) = v46[2];
  v18 = v46[4];
  *(_OWORD *)(v5 + 168) = v46[3];
  *(_OWORD *)(v5 + 184) = v18;
  *(_OWORD *)(v5 + 120) = v46[0];
  *(_QWORD *)(v5 + 200) = v47;
  *(_OWORD *)(v5 + 136) = v17;
  v19 = sub_231411374();
  v21 = v20;
  v22 = objc_msgSend(v9, sel_hk_bodyMeasurementsKeyColor, 0xE000000000000000);
  v52[0] = xmmword_255ECB560;
  sub_231412A90();
  sub_231414728();
  strcpy((char *)v50, "LifeFactors.");
  BYTE13(v50[0]) = 0;
  HIWORD(v50[0]) = -5120;
  sub_231414728();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231334BF8(v19, v21, v22, 4, *(uint64_t *)&v52[0], *((uint64_t *)&v52[0] + 1), (uint64_t)v48, 29.0);
  v23 = v48[3];
  *(_OWORD *)(v5 + 240) = v48[2];
  *(_OWORD *)(v5 + 256) = v23;
  *(_OWORD *)(v5 + 272) = v48[4];
  *(_QWORD *)(v5 + 288) = v49;
  v24 = v48[1];
  *(_OWORD *)(v5 + 208) = v48[0];
  *(_OWORD *)(v5 + 224) = v24;
  v25 = sub_231411374();
  v27 = v26;
  v28 = objc_msgSend(v9, sel_hk_otherKeyColor, 0xE000000000000000);
  v52[0] = xmmword_255ECB560;
  sub_231412A90();
  sub_231414728();
  strcpy((char *)v50, "LifeFactors.");
  BYTE13(v50[0]) = 0;
  HIWORD(v50[0]) = -5120;
  sub_231414728();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231334BF8(v25, v27, v28, 6, *(uint64_t *)&v52[0], *((uint64_t *)&v52[0] + 1), (uint64_t)v50, 25.0);
  v29 = v50[3];
  *(_OWORD *)(v5 + 328) = v50[2];
  *(_OWORD *)(v5 + 344) = v29;
  *(_OWORD *)(v5 + 360) = v50[4];
  *(_QWORD *)(v5 + 376) = v51;
  v30 = v50[1];
  *(_OWORD *)(v5 + 296) = v50[0];
  *(_OWORD *)(v5 + 312) = v30;
  v31 = sub_231411374();
  v33 = v32;
  v34 = objc_msgSend(v9, sel_hk_mindfulnessKeyColor, 0xE000000000000000);
  v52[0] = xmmword_255ECB560;
  sub_231412A90();
  sub_231414728();
  strcpy((char *)v43, "LifeFactors.");
  HIBYTE(v43[6]) = 0;
  v43[7] = -5120;
  sub_231414728();
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231334BF8(v31, v33, v34, 7, *(uint64_t *)&v52[0], *((uint64_t *)&v52[0] + 1), (uint64_t)v52, 26.0);
  v35 = v52[3];
  *(_OWORD *)(v5 + 416) = v52[2];
  *(_OWORD *)(v5 + 432) = v35;
  *(_OWORD *)(v5 + 448) = v52[4];
  *(_QWORD *)(v5 + 464) = v53;
  v36 = v52[1];
  *(_OWORD *)(v5 + 384) = v52[0];
  *(_OWORD *)(v5 + 400) = v36;
  v37 = (objc_class *)type metadata accessor for BulletedIconListView();
  v38 = (char *)objc_allocWithZone(v37);
  *(_QWORD *)&v38[OBJC_IVAR____TtC5Heart20BulletedIconListView____lazy_storage___stackView] = 0;
  *(_QWORD *)&v38[OBJC_IVAR____TtC5Heart20BulletedIconListView_bulletedItems] = v5;
  v42.receiver = v38;
  v42.super_class = v37;
  v39 = objc_msgSendSuper2(&v42, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_23133393C();
  v40 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v40, sel_addSubview_, v39);

  v41 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v39, sel_hk_alignConstraintsWithView_, v41);

}

id sub_23131D8AC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AFibBurdenOnboardingLifeFactorsViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AFibBurdenOnboardingLifeFactorsViewController()
{
  return objc_opt_self();
}

uint64_t sub_23131D90C()
{
  uint64_t v0;

  return MEMORY[0x2348DE3BC](v0 + OBJC_IVAR____TtC5Heart45AFibBurdenOnboardingLifeFactorsViewController_delegate);
}

uint64_t sub_23131D93C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Heart45AFibBurdenOnboardingLifeFactorsViewController_delegate + 8) = a2;
  swift_unknownObjectWeakAssign();
  return sub_2314130CC();
}

void sub_23131D974()
{
  void *v0;
  id v1;
  uint64_t v2;
  id v3;

  v1 = objc_msgSend(v0, sel_navigationItem);
  sub_2312D3C68(0, (unint64_t *)&qword_255ECC218);
  sub_2312D3C68(0, &qword_255ECCA40);
  v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_231414C20();
  v3 = (id)sub_2314149BC();
  objc_msgSend(v1, sel_setRightBarButtonItem_, v3, 0, 0, 0, sub_23131DB9C, v2);

}

void sub_23131DA8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = (void *)MEMORY[0x2348DE3BC](v2);
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, sel_dismissViewControllerAnimated_completion_, 1, 0);

  }
}

uint64_t sub_23131DB78()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_23131DB9C(uint64_t a1)
{
  uint64_t v1;

  sub_23131DA8C(a1, v1);
}

void sub_23131DBA4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECCA48)
  {
    v0 = sub_23141504C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECCA48);
  }
}

uint64_t CardioFitnessClassificationStatus.isClassificationAvailable.getter(char a1)
{
  return a1 & 1;
}

Heart::CardioFitnessClassificationStatus __swiftcall CardioFitnessClassificationStatus.init(isClassificationAvailable:)(Swift::Bool isClassificationAvailable)
{
  return (Heart::CardioFitnessClassificationStatus)isClassificationAvailable;
}

uint64_t CardioFitnessClassificationStatus.hash(into:)()
{
  return sub_231415130();
}

BOOL static CardioFitnessClassificationStatus.__derived_struct_equals(_:_:)(int a1, int a2)
{
  return ((a1 ^ a2) & 1) == 0;
}

unint64_t sub_23131DC3C()
{
  return 0xD000000000000019;
}

uint64_t sub_23131DC58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23131E5A8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23131DC80()
{
  sub_23131DDB8();
  return sub_231415190();
}

uint64_t sub_23131DCA8()
{
  sub_23131DDB8();
  return sub_23141519C();
}

uint64_t CardioFitnessClassificationStatus.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_23131E224(0, (unint64_t *)&unk_25415D498, MEMORY[0x24BEE3520]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v8 - v5;
  sub_2312CEA5C(a1, a1[3]);
  sub_23131DDB8();
  sub_231415178();
  sub_231415028();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_23131DDB8()
{
  unint64_t result;

  result = qword_25415D470;
  if (!qword_25415D470)
  {
    result = MEMORY[0x2348DE248](&unk_23141ADF8, &type metadata for CardioFitnessClassificationStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25415D470);
  }
  return result;
}

uint64_t CardioFitnessClassificationStatus.hashValue.getter()
{
  sub_231415118();
  sub_231415130();
  return sub_231415148();
}

uint64_t CardioFitnessClassificationStatus.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unsigned __int8 v8;
  uint64_t v10;

  sub_23131E224(0, &qword_255ECCA50, MEMORY[0x24BEE33E0]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v10 - v6;
  v8 = sub_2312CEA5C(a1, a1[3]);
  sub_23131DDB8();
  sub_23141516C();
  if (!v1)
  {
    v8 = sub_231414FC8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  return v8 & 1;
}

uint64_t sub_23131DF5C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t result;
  uint64_t v12;

  sub_23131E224(0, &qword_255ECCA50, MEMORY[0x24BEE33E0]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v12 - v8;
  sub_2312CEA5C(a1, a1[3]);
  sub_23131DDB8();
  sub_23141516C();
  if (v2)
    return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  v10 = sub_231414FC8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  result = _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  *a2 = v10 & 1;
  return result;
}

uint64_t sub_23131E088(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_23131E224(0, (unint64_t *)&unk_25415D498, MEMORY[0x24BEE3520]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v8 - v5;
  sub_2312CEA5C(a1, a1[3]);
  sub_23131DDB8();
  sub_231415178();
  sub_231415028();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_23131E178()
{
  sub_231415118();
  sub_231415130();
  return sub_231415148();
}

uint64_t sub_23131E1BC()
{
  return sub_231415130();
}

uint64_t sub_23131E1E4()
{
  sub_231415118();
  sub_231415130();
  return sub_231415148();
}

void sub_23131E224(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_23131DDB8();
    v7 = a3(a1, &type metadata for CardioFitnessClassificationStatus.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_23131E284()
{
  unint64_t result;

  result = qword_255ECCA58;
  if (!qword_255ECCA58)
  {
    result = MEMORY[0x2348DE248](&protocol conformance descriptor for CardioFitnessClassificationStatus, &type metadata for CardioFitnessClassificationStatus);
    atomic_store(result, (unint64_t *)&qword_255ECCA58);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CardioFitnessClassificationStatus(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CardioFitnessClassificationStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23131E3B4 + 4 * byte_23141AC45[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23131E3E8 + 4 * byte_23141AC40[v4]))();
}

uint64_t sub_23131E3E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23131E3F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23131E3F8);
  return result;
}

uint64_t sub_23131E404(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23131E40CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23131E410(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23131E418(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessClassificationStatus()
{
  return &type metadata for CardioFitnessClassificationStatus;
}

uint64_t storeEnumTagSinglePayload for CardioFitnessClassificationStatus.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23131E474 + 4 * byte_23141AC4A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23131E494 + 4 * byte_23141AC4F[v4]))();
}

_BYTE *sub_23131E474(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23131E494(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23131E49C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23131E4A4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23131E4AC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23131E4B4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessClassificationStatus.CodingKeys()
{
  return &type metadata for CardioFitnessClassificationStatus.CodingKeys;
}

unint64_t sub_23131E4D4()
{
  unint64_t result;

  result = qword_255ECCA60;
  if (!qword_255ECCA60)
  {
    result = MEMORY[0x2348DE248](&unk_23141ADD0, &type metadata for CardioFitnessClassificationStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECCA60);
  }
  return result;
}

unint64_t sub_23131E51C()
{
  unint64_t result;

  result = qword_25415D480;
  if (!qword_25415D480)
  {
    result = MEMORY[0x2348DE248](&unk_23141AD40, &type metadata for CardioFitnessClassificationStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25415D480);
  }
  return result;
}

unint64_t sub_23131E564()
{
  unint64_t result;

  result = qword_25415D478;
  if (!qword_25415D478)
  {
    result = MEMORY[0x2348DE248](&unk_23141AD68, &type metadata for CardioFitnessClassificationStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25415D478);
  }
  return result;
}

uint64_t sub_23131E5A8(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000019 && a2 == 0x80000002314295B0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_231415070();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_23131E62C(uint64_t a1)
{
  return sub_23131E8CC(a1, qword_254162FF0);
}

uint64_t sub_23131E650()
{
  uint64_t v0;

  v0 = sub_231413780();
  sub_2312D6D6C(v0, qword_254162E78);
  sub_2312CE3B8(v0, (uint64_t)qword_254162E78);
  return sub_231413774();
}

uint64_t sub_23131E6C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_231413780();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D4A68();
  v5 = v4;
  sub_2312D6D6C(v4, qword_254162EE8);
  sub_2312CE3B8(v5, (uint64_t)qword_254162EE8);
  if (qword_25415DF98 != -1)
    swift_once();
  v6 = sub_2312CE3B8(v0, (uint64_t)qword_254162FF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v6, v0);
  type metadata accessor for HKHRAFibBurdenLoggingCategory(0);
  sub_23131E868(&qword_25415D110, (uint64_t)&protocol conformance descriptor for HKHRAFibBurdenLoggingCategory);
  sub_23131E868(&qword_25415D118, (uint64_t)&protocol conformance descriptor for HKHRAFibBurdenLoggingCategory);
  sub_23131E868(&qword_25415BBB0, (uint64_t)&protocol conformance descriptor for HKHRAFibBurdenLoggingCategory);
  sub_23131E868((unint64_t *)&unk_25415BB80, (uint64_t)&unk_231416AF0);
  sub_23131E868((unint64_t *)&unk_25415BBA0, (uint64_t)&unk_231416B58);
  return sub_2314135C4();
}

uint64_t sub_23131E868(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for HKHRAFibBurdenLoggingCategory(255);
    result = MEMORY[0x2348DE248](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23131E8A8(uint64_t a1)
{
  return sub_23131E8CC(a1, qword_254162F00);
}

uint64_t sub_23131E8CC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v3 = sub_2314118A8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_231413780();
  sub_2312D6D6C(v7, a2);
  sub_2312CE3B8(v7, (uint64_t)a2);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BE47520], v3);
  sub_23141189C();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return sub_231413774();
}

id sub_23131EB74()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProfileCharacteristicsViewControllerWithDoneButton();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ProfileCharacteristicsViewControllerWithDoneButton()
{
  return objc_opt_self();
}

uint64_t sub_23131EBC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  NSObject *v44;
  os_log_type_t v45;
  _BOOL4 v46;
  uint64_t v47;
  uint64_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v2 = sub_231413780();
  v67 = *(_QWORD *)(v2 - 8);
  v68 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v65 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v60 = (char *)&v59 - v5;
  v6 = sub_231411B00();
  v62 = *(_QWORD *)(v6 - 8);
  v63 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v59 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v66 = (char *)&v59 - v9;
  v61 = sub_231411B48();
  v10 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23131F1D4();
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v64 = (uint64_t)&v59 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v59 - v19;
  sub_2312CCB14();
  v22 = v21;
  v23 = *(_QWORD *)(v21 - 8);
  v24 = MEMORY[0x24BDAC7A8](v21);
  v26 = (char *)&v59 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v59 - v27;
  sub_2312D6C20(a1, (uint64_t)v20, (uint64_t (*)(_QWORD))sub_23131F1D4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v20, 1, v22) == 1)
  {
    sub_2312CEBD4((uint64_t)v20, (uint64_t (*)(_QWORD))sub_23131F1D4);
    v29 = v65;
    sub_231412148();
    v30 = v64;
    sub_2312D6C20(a1, v64, (uint64_t (*)(_QWORD))sub_23131F1D4);
    v31 = sub_231413768();
    v32 = sub_231414974();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      v70 = v34;
      *(_DWORD *)v33 = 136446210;
      sub_2312D6C20(v30, (uint64_t)v16, (uint64_t (*)(_QWORD))sub_23131F1D4);
      v35 = sub_2314146EC();
      v69 = sub_23133180C(v35, v36, &v70);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      sub_2312CEBD4(v30, (uint64_t (*)(_QWORD))sub_23131F1D4);
      _os_log_impl(&dword_2312C8000, v31, v32, "GeneratorContext.country is empty: %{public}s", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v34, -1, -1);
      MEMORY[0x2348DE308](v33, -1, -1);
    }
    else
    {
      sub_2312CEBD4(v30, (uint64_t (*)(_QWORD))sub_23131F1D4);
    }

    (*(void (**)(char *, uint64_t))(v67 + 8))(v29, v68);
    return 0;
  }
  v37 = v12;
  v38 = v61;
  v39 = v62;
  v40 = v66;
  v41 = v63;
  sub_23131F270((uint64_t)v20, (uint64_t)v28);
  sub_2312D6C20((uint64_t)v28, (uint64_t)v26, (uint64_t (*)(_QWORD))sub_2312CCB14);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v40, v26, v41);
    v42 = v60;
    sub_231412148();
    v43 = v59;
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v59, v40, v41);
    v44 = sub_231413768();
    v45 = sub_231414974();
    v46 = os_log_type_enabled(v44, v45);
    v48 = v67;
    v47 = v68;
    if (v46)
    {
      v49 = (uint8_t *)swift_slowAlloc();
      v50 = swift_slowAlloc();
      v65 = v28;
      v51 = v50;
      v70 = v50;
      *(_DWORD *)v49 = 136446210;
      sub_23131F228();
      v52 = sub_2314150D0();
      v69 = sub_23133180C(v52, v53, &v70);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      v54 = *(void (**)(char *, uint64_t))(v39 + 8);
      v54(v43, v41);
      _os_log_impl(&dword_2312C8000, v44, v45, "Could not reference Mobile Country Code from GeneratorContext with error: %{public}s", v49, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v51, -1, -1);
      MEMORY[0x2348DE308](v49, -1, -1);

      (*(void (**)(char *, uint64_t))(v67 + 8))(v60, v68);
      v54(v66, v41);
      v55 = (uint64_t)v65;
    }
    else
    {

      v57 = *(void (**)(char *, uint64_t))(v39 + 8);
      v57(v43, v41);
      (*(void (**)(char *, uint64_t))(v48 + 8))(v42, v47);
      v57(v40, v41);
      v55 = (uint64_t)v28;
    }
    sub_2312CEBD4(v55, (uint64_t (*)(_QWORD))sub_2312CCB14);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v37, v26, v38);
  v56 = sub_231411B3C();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v37, v38);
  sub_2312CEBD4((uint64_t)v28, (uint64_t (*)(_QWORD))sub_2312CCB14);
  return v56;
}

void sub_23131F1D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415BBF0)
  {
    sub_2312CCB14();
    v0 = sub_231414CB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415BBF0);
  }
}

unint64_t sub_23131F228()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25415B6C0;
  if (!qword_25415B6C0)
  {
    v1 = sub_231411B00();
    result = MEMORY[0x2348DE248](MEMORY[0x24BE47ED8], v1);
    atomic_store(result, (unint64_t *)&qword_25415B6C0);
  }
  return result;
}

uint64_t sub_23131F270(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312CCB14();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double CGPoint.rounded(_:toScaleOf:)(uint64_t a1, id a2, double a3, double a4)
{
  id v8;
  double v9;
  double v10;
  id v11;
  double v12;

  v8 = objc_msgSend(a2, sel_traitCollection);
  objc_msgSend(v8, sel_displayScale);
  v10 = CGFloat.rounded(_:toScale:)(a1, v9, a3);

  v11 = objc_msgSend(a2, sel_traitCollection);
  objc_msgSend(v11, sel_displayScale);
  CGFloat.rounded(_:toScale:)(a1, v12, a4);

  return v10;
}

{
  double v8;
  double v9;
  double v10;

  objc_msgSend(a2, sel_displayScale);
  v9 = CGFloat.rounded(_:toScale:)(a1, v8, a3);
  objc_msgSend(a2, sel_displayScale);
  CGFloat.rounded(_:toScale:)(a1, v10, a4);
  return v9;
}

double CGPoint.rounded(_:toScale:)(uint64_t a1, double a2, double a3, double a4)
{
  double v7;

  v7 = CGFloat.rounded(_:toScale:)(a1, a2, a3);
  CGFloat.rounded(_:toScale:)(a1, a2, a4);
  return v7;
}

_QWORD *sub_23131F438(uint64_t a1)
{
  _QWORD *v1;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1[2] = 0xD00000000000001DLL;
  v1[3] = 0x80000002314298C0;
  v1[4] = 0x5F4D50425F4449;
  v1[5] = 0xE700000000000000;
  v3 = (void *)objc_opt_self();
  v4 = objc_msgSend(v3, sel_heartRateSectionDescription);
  v5 = sub_2314146BC();
  v7 = v6;

  v1[7] = v5;
  v1[8] = v7;
  v8 = objc_msgSend(v3, sel_heartRateThresholdOffDescription);
  v9 = sub_2314146BC();
  v11 = v10;

  v1[9] = v9;
  v1[10] = v11;
  v1[6] = a1;
  return v1;
}

uint64_t sub_23131F50C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  unsigned int v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a1;
  v1 = sub_231411D1C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v27 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v27 - v9;
  v11 = sub_231411D70();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313686A8();
  v15 = sub_231411D58();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (v15)
  {
    v16 = (void *)objc_opt_self();
    v17 = objc_msgSend(v16, sel_isTachycardiaDetectionEnabled);
    v18 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
    v27 = v15;
    if (v17)
    {
      v19 = *MEMORY[0x24BE41298];
      v18(v10, v19, v1);
    }
    else
    {
      v18(v10, *MEMORY[0x24BE412A0], v1);
      v19 = *MEMORY[0x24BE41298];
    }
    v18(v8, v19, v1);
    v22 = sub_231411D10();
    v23 = *(void (**)(char *, uint64_t))(v2 + 8);
    v23(v8, v1);
    v23(v10, v1);
    sub_231368720(v22 & 1);
    if (objc_msgSend(v16, sel_isTachycardiaDetectionEnabled, v27))
      v24 = v19;
    else
      v24 = *MEMORY[0x24BE412A0];
    v18(v5, v24, v1);
    sub_231411D94();
    sub_231411D7C();
    v23(v5, v1);
    v25 = v28;
    sub_231413060();
    v26 = sub_23141306C();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 0, 1, v26);
  }
  else
  {
    v20 = sub_23141306C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v28, 1, 1, v20);
  }
}

uint64_t sub_23131F7B0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  double v8;
  double v9;
  id v10;
  id v11;
  uint64_t v12;

  sub_2312D6DD8(0, (unint64_t *)&qword_25415DF58, (uint64_t (*)(uint64_t))sub_2312D6E30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_231418090;
  v5 = *(_QWORD *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v3 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v3 + 64) = sub_2312D6E84();
  *(_QWORD *)(v3 + 32) = v5;
  *(_QWORD *)(v3 + 40) = v4;
  v6 = (void *)objc_opt_self();
  sub_231412A90();
  v7 = objc_msgSend(v6, sel__countPerMinuteUnit);
  objc_msgSend(a1, sel_doubleValueForUnit_, v7);
  v9 = v8;

  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, v9);
  v11 = objc_msgSend(v10, sel_integerValue);

  v12 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v3 + 96) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v3 + 104) = v12;
  *(_QWORD *)(v3 + 72) = v11;
  return sub_2314146D4();
}

uint64_t sub_23131F8E4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TachycardiaThresholdSpecifierConfiguration()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for TachycardiaSettingsDataSource(uint64_t a1)
{
  return sub_2312F19EC(a1, qword_255ECCBF0);
}

uint64_t sub_23131F95C()
{
  return sub_2313203D8();
}

uint64_t sub_23131F97C@<X0>(uint64_t a1@<X8>)
{
  unsigned int v2;
  uint64_t v3;
  unsigned int *v4;

  v2 = objc_msgSend((id)objc_opt_self(), sel_isTachycardiaDetectionEnabled);
  v3 = sub_231411D1C();
  v4 = (unsigned int *)MEMORY[0x24BE41298];
  if (!v2)
    v4 = (unsigned int *)MEMORY[0x24BE412A0];
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, *v4, v3);
}

uint64_t sub_23131F9E8@<X0>(uint64_t a1@<X8>)
{
  return sub_23131F50C(a1);
}

uint64_t sub_23131FA08()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  sub_231412A90();
  return v1;
}

uint64_t sub_23131FA38()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 72);
  sub_231412A90();
  return v1;
}

uint64_t sub_23131FA6C()
{
  id v0;
  unint64_t v1;
  uint64_t v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_tachycardiaHeartRateOptions);
  sub_2312D3C68(0, (unint64_t *)&qword_255ECFBD0);
  v1 = sub_2314147A0();

  swift_retain();
  v2 = sub_2313206DC(v1);
  swift_bridgeObjectRelease();
  swift_release();
  return v2;
}

id sub_23131FB18()
{
  void *v0;
  double v1;
  id v2;
  id v3;

  v0 = (void *)objc_opt_self();
  if (!objc_msgSend(v0, sel_isTachycardiaDetectionEnabled))
    return 0;
  v1 = (double)(uint64_t)objc_msgSend(v0, sel_tachycardiaThresholdHeartRate);
  v2 = objc_msgSend((id)objc_opt_self(), sel__countPerMinuteUnit);
  v3 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v2, v1);

  return v3;
}

uint64_t sub_23131FBCC(void *a1)
{
  return sub_23131F7B0(a1);
}

uint64_t sub_23131FBEC(void *a1)
{
  double v1;
  id v2;
  id v3;
  uint64_t v4;

  objc_msgSend(a1, sel__beatsPerMinute);
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, v1);
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3C40]), sel_init);
  v4 = sub_2313F699C(v2, (uint64_t)v3);

  return v4;
}

uint64_t sub_23131FC84()
{
  return 0;
}

void sub_23131FC90(void *a1)
{
  double v1;
  id v2;

  objc_msgSend(a1, sel__beatsPerMinute);
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, v1);
  objc_msgSend((id)objc_opt_self(), sel_setTachycardiaThresholdHeartRate_, v2);

}

id sub_23131FD00()
{
  return objc_msgSend((id)objc_opt_self(), sel_setTachycardiaThresholdHeartRate_, 0);
}

id sub_23131FD28(void *a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  char *v9;
  id v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v18[6];

  v18[0] = a1;
  swift_getObjectType();
  sub_2312D6DD8(0, (unint64_t *)&qword_255ECBB70, (uint64_t (*)(uint64_t))MEMORY[0x24BE42170], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v18 - v6;
  *(_QWORD *)&v2[qword_255ECCBD8] = 0;
  v8 = objc_allocWithZone(MEMORY[0x24BDD3C70]);
  v9 = v2;
  v10 = objc_msgSend(v8, sel_initWithHealthStore_, a1);
  type metadata accessor for TachycardiaFeatureStatusAvailability();
  swift_allocObject();
  *(_QWORD *)&v9[qword_255ECCBD0] = sub_231306A18(v10);
  v11 = (void *)type metadata accessor for TachycardiaThresholdSpecifierConfiguration();
  swift_allocObject();
  v12 = swift_retain();
  v13 = sub_23131F438(v12);

  sub_231368A50();
  v14 = sub_2314120AC();
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v7, a2, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
  v18[4] = v11;
  v18[5] = (id)sub_2312CCC24(&qword_255ECCCA0, (uint64_t (*)(uint64_t))type metadata accessor for TachycardiaThresholdSpecifierConfiguration, (uint64_t)&unk_23141AFB4);
  v18[1] = v13;
  swift_retain();
  v16 = (id)sub_2314133CC();
  sub_23131FF40();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a2, v14);
  return v16;
}

uint64_t sub_23131FF40()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;

  sub_2312D6DD8(0, (unint64_t *)&unk_25415DEE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v21 - v1;
  sub_231308600(0);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23130861C();
  v9 = v8;
  v22 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231308694();
  v13 = *(_QWORD *)(v12 - 8);
  v23 = v12;
  v24 = v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_2312D6DD8(0, &qword_25415DE40, (uint64_t (*)(uint64_t))sub_2312E9964, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  swift_retain();
  sub_231413E28();
  swift_endAccess();
  swift_release();
  sub_2312CCC24(&qword_25415DE30, (uint64_t (*)(uint64_t))sub_231308600, MEMORY[0x24BDB9EE8]);
  sub_231413F60();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_2312D3C68(0, (unint64_t *)&qword_25415DF00);
  v25 = (id)sub_231414A94();
  v16 = sub_231414A7C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v2, 1, 1, v16);
  sub_2312CCC24(&qword_255ECC0C8, (uint64_t (*)(uint64_t))sub_23130861C, MEMORY[0x24BDB96F8]);
  sub_231308748();
  sub_231413F54();
  sub_231320A54((uint64_t)v2);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v9);
  swift_allocObject();
  v17 = v21[1];
  swift_unknownObjectWeakInit();
  sub_2312CCC24(&qword_255ECC0D8, (uint64_t (*)(uint64_t))sub_231308694, MEMORY[0x24BDB9A08]);
  v18 = v23;
  v19 = sub_231413F90();
  swift_release();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v15, v18);
  *(_QWORD *)(v17 + qword_255ECCBD8) = v19;
  return swift_release();
}

void sub_23132027C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x2348DE3BC](v2);
  if (v3)
  {
    v4 = (void *)v3;
    v5 = sub_2314133D8();

    if (v5)
    {
      swift_getObjectType();
      sub_231412FF4();
      sub_2314130CC();
    }
  }
}

void sub_2313202FC()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_231320328()
{
  swift_release();
  return swift_release();
}

id sub_231320354()
{
  return sub_231308560(type metadata accessor for TachycardiaSettingsDataSource);
}

uint64_t sub_231320360()
{
  swift_release();
  return swift_release();
}

uint64_t sub_231320398()
{
  return type metadata accessor for TachycardiaSettingsDataSource(0);
}

uint64_t type metadata accessor for TachycardiaSettingsViewController(uint64_t a1)
{
  return sub_2312F19EC(a1, qword_255ECCC50);
}

uint64_t sub_2313203B4()
{
  return sub_2313203D8();
}

uint64_t sub_2313203D8()
{
  return swift_initClassMetadata2();
}

void sub_231320418()
{
  sub_231414EE4();
  __break(1u);
}

void sub_231320470()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_23132049C()
{
  uint64_t v0;

  return swift_release();
}

id sub_2313204C8()
{
  return sub_231308560(type metadata accessor for TachycardiaSettingsViewController);
}

uint64_t sub_2313204D4(uint64_t a1)
{

  return swift_release();
}

uint64_t sub_23132050C()
{
  return type metadata accessor for TachycardiaSettingsViewController(0);
}

id sub_231320514(void *a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v16;

  swift_getObjectType();
  v5 = sub_2314120AC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  objc_allocWithZone((Class)type metadata accessor for TachycardiaSettingsDataSource(0));
  v9 = v2;
  v10 = sub_23131FD28(a1, (uint64_t)v8);
  v11 = qword_255ECCC40;
  *(_QWORD *)&v9[qword_255ECCC40] = v10;
  sub_2314133F0();
  sub_2314132DC();
  swift_allocObject();
  *(_QWORD *)&v9[qword_255ECCC48] = sub_2314132D0();

  v12 = *(id *)&v9[v11];
  swift_retain();
  v13 = (id)sub_231412F1C();
  sub_231368A74();
  v14 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_setTitle_, v14);

  sub_2314133D8();
  sub_2314133E4();

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a2, v5);
  return v13;
}

uint64_t sub_2313206DC(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t result;
  void *v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  double v11;
  double v12;
  id v13;
  id v14;
  unint64_t v15;
  uint64_t v16;

  v2 = v1;
  if (a1 >> 62)
    goto LABEL_14;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x24BEE4AF8];
    if (!v4)
      break;
    v16 = MEMORY[0x24BEE4AF8];
    result = sub_231414EA8();
    if (v4 < 0)
    {
      __break(1u);
      return result;
    }
    v15 = v2;
    v2 = a1 & 0xC000000000000001;
    v6 = (void *)objc_opt_self();
    v7 = (void *)objc_opt_self();
    v8 = 0;
    while (v4 != v8)
    {
      if (v2)
        v9 = (id)MEMORY[0x2348DD81C](v8, a1);
      else
        v9 = *(id *)(a1 + 8 * v8 + 32);
      v10 = v9;
      ++v8;
      objc_msgSend(v9, sel_doubleValue, v15);
      v12 = v11;
      v13 = objc_msgSend(v6, sel__countPerMinuteUnit);
      v14 = objc_msgSend(v7, sel_quantityWithUnit_doubleValue_, v13, v12);

      sub_231414E90();
      sub_231414EB4();
      sub_231414EC0();
      sub_231414E9C();
      if (v4 == v8)
        return v16;
    }
    __break(1u);
LABEL_14:
    sub_231412A90();
    v4 = sub_231414F08();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23132088C()
{
  void *v0;
  double v1;
  id v2;
  id v3;
  double v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;

  v0 = (void *)objc_opt_self();
  if (objc_msgSend(v0, sel_isTachycardiaDetectionEnabled))
  {
    v1 = (double)(uint64_t)objc_msgSend(v0, sel_tachycardiaThresholdHeartRate);
    v2 = objc_msgSend((id)objc_opt_self(), sel__countPerMinuteUnit);
    v3 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v2, v1);

    objc_msgSend(v3, sel__beatsPerMinute);
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, v4);
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3C40]), sel_init);
    sub_2313F699C(v5, (uint64_t)v6);

    v7 = (void *)sub_23141468C();
    swift_bridgeObjectRelease();
    v8 = objc_msgSend(v0, sel_tachycardiaHeartThresholdFooterDescriptionWithThresholdValue_, v7);

    v9 = sub_2314146BC();
  }
  else
  {
    v10 = (void *)sub_23141468C();
    v8 = objc_msgSend(v0, sel_tachycardiaHeartThresholdFooterDescriptionWithThresholdValue_, v10);

    v9 = sub_2314146BC();
  }

  return v9;
}

uint64_t sub_231320A54(uint64_t a1)
{
  uint64_t v2;

  sub_2312D6DD8(0, (unint64_t *)&unk_25415DEE0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE56F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_231320AA8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_231320ACC(uint64_t a1)
{
  uint64_t v1;

  sub_23132027C(a1, v1);
}

uint64_t sub_231320AD4()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CardioFitnessSettingsManager()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ECGFeatureRegulatoryInfoTransformProvider()
{
  uint64_t result;

  result = qword_255ECCCA8;
  if (!qword_255ECCCA8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_231320B54()
{
  return swift_initClassMetadata2();
}

uint64_t sub_231320B90()
{
  swift_allocObject();
  return sub_23141459C();
}

uint64_t sub_231320BC0()
{
  if (qword_255ECAAF0 != -1)
    swift_once();
  return sub_231411374();
}

uint64_t sub_231320C40()
{
  return 6775653;
}

uint64_t sub_231320C50()
{
  if (qword_255ECAAF0 != -1)
    swift_once();
  sub_231411374();
  sub_2314114A0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_231320CF4()
{
  sub_2314145A8();
  return swift_deallocClassInstance();
}

uint64_t sub_231320D10()
{
  return type metadata accessor for ECGFeatureRegulatoryInfoTransformProvider();
}

uint64_t type metadata accessor for ElectrocardiogramFeatureStatusActionHandler()
{
  uint64_t result;

  result = qword_25415CA60;
  if (!qword_25415CA60)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_231320D54()
{
  return swift_initClassMetadata2();
}

id sub_231320D9C(void *a1)
{
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  v2 = objc_msgSend(a1, sel_onboardingNavigationController);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, sel_setModalInPresentation_, 1);
  }
  else
  {
    if (qword_25415DF98 != -1)
      swift_once();
    v4 = sub_231413780();
    sub_2312CE3B8(v4, (uint64_t)qword_254162FF0);
    v5 = v1;
    v6 = sub_231413768();
    v7 = sub_231414980();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = swift_slowAlloc();
      v9 = swift_slowAlloc();
      v13 = v9;
      *(_DWORD *)v8 = 136446466;
      swift_getObjectType();
      sub_231321C98();
      v10 = sub_2314146E0();
      sub_23133180C(v10, v11, &v13);
      sub_231414CBC();

      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2082;
      sub_23133180C(0xD00000000000002FLL, 0x8000000231429AA0, &v13);
      sub_231414CBC();
      _os_log_impl(&dword_2312C8000, v6, v7, "[%{public}s.%{public}s] Onboarding navigation controller not initialized", (uint8_t *)v8, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v9, -1, -1);
      MEMORY[0x2348DE308](v8, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  return v3;
}

void sub_231320FC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t (*v21)(uint64_t);
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  void *v44;
  void (*v45)(char *, uint64_t);
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  id v52;
  id v53;
  id v54;
  void *v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  char *v68;
  char *v69;
  void (*ObjectType)(char *, uint64_t);
  void (*v71)(char *, char *, uint64_t);
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  ObjectType = (void (*)(char *, uint64_t))swift_getObjectType();
  sub_2312E9730(0);
  MEMORY[0x24BDAC7A8](v1);
  v64 = (char *)&v62 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_2314120AC();
  v3 = *(_QWORD *)(v75 - 8);
  v4 = MEMORY[0x24BDAC7A8](v75);
  v69 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v74 = (char *)&v62 - v6;
  v7 = sub_231411D1C();
  v76 = *(_QWORD *)(v7 - 8);
  v77 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v72 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v68 = (char *)&v62 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v62 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v62 - v15;
  v17 = sub_231412F64();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = v0;
  sub_231413210();
  sub_2314130FC();
  v21 = (uint64_t (*)(uint64_t))MEMORY[0x24BE449A8];
  sub_2312CCC24(&qword_255ECB630, (uint64_t (*)(uint64_t))MEMORY[0x24BE449A8], MEMORY[0x24BE449B8]);
  sub_2312CCC24(&qword_255ECCDA0, v21, MEMORY[0x24BE449B0]);
  sub_231412F58();
  v22 = *(void (**)(char *, uint64_t))(v18 + 8);
  v22(v20, v17);
  if (v79)
  {
    v66 = v22;
    v67 = v3;
    v65 = v79;
    sub_2314130D8();
    v23 = (uint64_t)v16;
    if (qword_25415BD10 != -1)
      swift_once();
    v24 = sub_231413780();
    sub_2312CE3B8(v24, (uint64_t)qword_254162E78);
    v25 = v76;
    v71 = *(void (**)(char *, char *, uint64_t))(v76 + 16);
    v71(v14, v16, v77);
    v26 = sub_231413768();
    v27 = sub_23141498C();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v62 = swift_slowAlloc();
      v79 = v62;
      *(_DWORD *)v28 = 136315394;
      v29 = sub_2314151A8();
      v30 = v77;
      v78 = sub_23133180C(v29, v31, &v79);
      v63 = v23;
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2080;
      v71(v68, v14, v30);
      v32 = sub_2314146E0();
      v78 = sub_23133180C(v32, v33, &v79);
      v23 = v63;
      sub_231414CBC();
      swift_bridgeObjectRelease();
      v34 = v76;
      ObjectType = *(void (**)(char *, uint64_t))(v76 + 8);
      ObjectType(v14, v30);
      _os_log_impl(&dword_2312C8000, v26, v27, "[%s] Did select cell with featureStatusKind %s", (uint8_t *)v28, 0x16u);
      v35 = v62;
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v35, -1, -1);
      MEMORY[0x2348DE308](v28, -1, -1);
    }
    else
    {
      v34 = v25;
      ObjectType = *(void (**)(char *, uint64_t))(v25 + 8);
      ObjectType(v14, v77);
    }

    v43 = v67;
    sub_231413210();
    v44 = (void *)sub_231412F4C();
    v45 = v66;
    v66(v20, v17);
    sub_231413210();
    v46 = v74;
    sub_231411D88();
    v45(v20, v17);
    v47 = v72;
    v48 = v23;
    v49 = v77;
    v71(v72, (char *)v23, v77);
    v50 = (*(uint64_t (**)(char *, uint64_t))(v34 + 88))(v47, v49);
    if (v50 == *MEMORY[0x24BE41298])
    {
      v51 = (uint64_t)v69;
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v69, v46, v75);
      v52 = objc_allocWithZone((Class)type metadata accessor for ElectrocardiogramSettingsViewController(0));
      v53 = sub_2313EDDA4(v51);
      v54 = objc_msgSend(v44, sel_navigationController);
      if (v54)
      {
        v55 = v54;
        objc_msgSend(v54, sel_pushViewController_animated_, v53, 1);

        swift_release();
LABEL_23:
        (*(void (**)(char *, uint64_t))(v43 + 8))(v46, v75);
        ObjectType((char *)v23, v77);
        return;
      }

LABEL_22:
      swift_release();

      goto LABEL_23;
    }
    if (v50 == *MEMORY[0x24BE412A0])
    {
LABEL_16:
      sub_2313217DC(v23, v44);
      goto LABEL_22;
    }
    if (v50 != *MEMORY[0x24BE41288] && v50 != *MEMORY[0x24BE41280])
    {
      if (v50 != *MEMORY[0x24BE41278])
      {
        swift_release();

        (*(void (**)(char *, uint64_t))(v43 + 8))(v46, v75);
        v56 = v77;
        v57 = ObjectType;
        ObjectType((char *)v23, v77);
        v57(v47, v56);
        return;
      }
      goto LABEL_16;
    }
    v58 = v64;
    sub_2314130F0();
    v59 = (uint64_t)v58;
    v60 = sub_2314114AC();
    v61 = *(_QWORD *)(v60 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60) == 1)
    {
      swift_release();

      (*(void (**)(char *, uint64_t))(v43 + 8))(v46, v75);
      ObjectType((char *)v48, v77);
      sub_2312F0614(v59);
    }
    else
    {
      sub_23141147C();
      swift_release();

      (*(void (**)(char *, uint64_t))(v43 + 8))(v46, v75);
      ObjectType((char *)v48, v77);
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v59, v60);
    }
  }
  else
  {
    if (qword_25415BD10 != -1)
      swift_once();
    v36 = sub_231413780();
    sub_2312CE3B8(v36, (uint64_t)qword_254162E78);
    v37 = sub_231413768();
    v38 = sub_231414980();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      v40 = swift_slowAlloc();
      v79 = v40;
      *(_DWORD *)v39 = 136315138;
      v41 = sub_2314151A8();
      v78 = sub_23133180C(v41, v42, &v79);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v37, v38, "[%s] Could not access action handler user data!", v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v40, -1, -1);
      MEMORY[0x2348DE308](v39, -1, -1);
    }

  }
}

void sub_2313217DC(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t v14;
  char v15;
  objc_class *v16;
  char *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  uint64_t v27;
  _QWORD v29[4];
  objc_super v30;

  v3 = v2;
  v5 = sub_231412F64();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v29[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_231411D1C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v29[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BE41278], v9);
  v13 = sub_231411D10();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v14 = v13 & 1;
  v15 = v13 ^ 1;
  v16 = (objc_class *)type metadata accessor for ElectrocardiogramFeatureStatusOnboardingManagerDelegate();
  v17 = (char *)objc_allocWithZone(v16);
  *(_QWORD *)&v17[OBJC_IVAR____TtC5HeartP33_83D08B8D42E0F7375EF54A8E4D22046B55ElectrocardiogramFeatureStatusOnboardingManagerDelegate_delegate
                + 8] = 0;
  *(_QWORD *)(swift_unknownObjectWeakInit() + 8) = &off_2500227F8;
  swift_unknownObjectWeakAssign();
  v30.receiver = v17;
  v30.super_class = v16;
  v18 = objc_msgSendSuper2(&v30, sel_init);
  sub_231413210();
  sub_231412F40();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_2312CEA5C(v29, v29[3]);
  v19 = (void *)sub_231412EE0();
  if (qword_255ECAAA0 != -1)
    swift_once();
  LOBYTE(v27) = 0;
  v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4C0A0]), sel_initWithOnboardingType_isFirstTimeOnboarding_healthStore_dateCache_provenance_delegate_isSampleInteractive_, v14, v15 & 1, v19, qword_255ED2EF8, 4, v18, v27);

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v29);
  v21 = *(void **)(v3 + qword_25415CA40);
  *(_QWORD *)(v3 + qword_25415CA40) = v20;
  v22 = v20;

  v23 = *(void **)(v3 + qword_25415CA48);
  *(_QWORD *)(v3 + qword_25415CA48) = v18;
  v24 = v18;

  v25 = sub_231320D9C(v22);
  if (v25)
  {
    v26 = v25;
    objc_msgSend(a2, sel_presentViewController_animated_completion_, v25, 1, 0);

  }
}

uint64_t sub_231321A6C(uint64_t a1)
{
  objc_class *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v3 = sub_231412F64();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v7[qword_25415CA40] = 0;
  *(_QWORD *)&v7[qword_25415CA48] = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  v8 = sub_23141321C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v8;
}

void sub_231321B2C()
{
  uint64_t v0;

}

id sub_231321B58()
{
  return sub_231308560((uint64_t (*)(_QWORD))type metadata accessor for ElectrocardiogramFeatureStatusActionHandler);
}

void sub_231321B64(uint64_t a1)
{

}

uint64_t sub_231321B9C()
{
  return type metadata accessor for ElectrocardiogramFeatureStatusActionHandler();
}

id sub_231321C30()
{
  return sub_231308560((uint64_t (*)(_QWORD))type metadata accessor for ElectrocardiogramFeatureStatusOnboardingManagerDelegate);
}

uint64_t type metadata accessor for ElectrocardiogramFeatureStatusOnboardingManagerDelegate()
{
  return objc_opt_self();
}

uint64_t sub_231321C6C()
{
  return sub_2312CCC24(&qword_25415CA58, (uint64_t (*)(uint64_t))type metadata accessor for ElectrocardiogramFeatureStatusActionHandler, (uint64_t)&unk_23141B1B8);
}

unint64_t sub_231321C98()
{
  unint64_t result;

  result = qword_255ECCDA8;
  if (!qword_255ECCDA8)
  {
    type metadata accessor for ElectrocardiogramFeatureStatusActionHandler();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255ECCDA8);
  }
  return result;
}

uint64_t sub_231321CD0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  int *v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v29 = a1;
  v28 = sub_231411680();
  v3 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23141177C();
  v30 = *(_QWORD *)(v6 - 8);
  v31 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_231411608();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v27 - v14;
  *a2 = swift_getKeyPath();
  sub_2313255CC(0);
  swift_storeEnumTagMultiPayload();
  v16 = (int *)type metadata accessor for AFibBurdenAddDataView();
  v17 = (uint64_t *)((char *)a2 + v16[7]);
  v32 = 0x3FE0000000000000;
  sub_2314143F8();
  v18 = v34;
  *v17 = v33;
  v17[1] = v18;
  sub_2314115FC();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  sub_2314143F8();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  v19 = (char *)a2 + v16[9];
  LOBYTE(v32) = 0;
  sub_2314143F8();
  v20 = v34;
  *v19 = v33;
  *((_QWORD *)v19 + 1) = v20;
  v21 = (char *)a2 + v16[10];
  LOBYTE(v32) = 0;
  sub_2314143F8();
  v22 = v34;
  *v21 = v33;
  *((_QWORD *)v21 + 1) = v22;
  v23 = v28;
  v24 = v29;
  *(uint64_t *)((char *)a2 + v16[5]) = (uint64_t)v29;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDCEF70], v23);
  v25 = v24;
  sub_23141168C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v23);
  sub_2314116B0();

  return (*(uint64_t (**)(char *, char *, uint64_t))(v30 + 32))((char *)a2 + v16[6], v8, v31);
}

uint64_t sub_231321F5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t OpaqueTypeConformance2;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;

  v30 = a1;
  sub_2313262B8();
  v3 = v2;
  v27 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231326CE4(0);
  v31 = v6;
  v29 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = v1;
  v32 = v1;
  sub_2313263F4(0);
  sub_231326500(255);
  v10 = v9;
  sub_2313265D4();
  v12 = v11;
  sub_231326914();
  v14 = v13;
  v15 = sub_2312CCC24(&qword_255ECCF30, (uint64_t (*)(uint64_t))sub_2313265D4, MEMORY[0x24BDF1A30]);
  v16 = sub_2312CCC24(&qword_255ECCF38, (uint64_t (*)(uint64_t))sub_231326914, MEMORY[0x24BDEF170]);
  v37 = v12;
  v38 = v14;
  v39 = v15;
  v40 = v16;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v18 = sub_2312D104C();
  v37 = v10;
  v38 = MEMORY[0x24BEE0D00];
  v39 = OpaqueTypeConformance2;
  v40 = v18;
  swift_getOpaqueTypeConformance2();
  sub_231414080();
  v19 = sub_2312CCC24(&qword_255ECCF48, (uint64_t (*)(uint64_t))sub_2313262B8, MEMORY[0x24BDED358]);
  sub_231414368();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v3);
  if (qword_255ECAAD8 != -1)
    swift_once();
  v35 = sub_231411374();
  v36 = v20;
  v21 = (char *)(v28 + *(int *)(type metadata accessor for AFibBurdenAddDataView() + 36));
  v22 = *v21;
  v23 = *((_QWORD *)v21 + 1);
  v33 = v22;
  v34 = v23;
  sub_2312CF374(0, &qword_255ECC9F0, MEMORY[0x24BEE1328], MEMORY[0x24BDF42C0]);
  sub_23141441C();
  v37 = v3;
  v38 = v19;
  swift_getOpaqueTypeConformance2();
  v24 = v31;
  sub_231414380();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v8, v24);
}

id sub_2313222AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id result;
  void *v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  unint64_t v38;

  v30 = a2;
  sub_2313265D4();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231326500(0);
  v9 = v8;
  v29 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313263F4(0);
  v27 = *(_QWORD *)(v12 - 8);
  v28 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = a1;
  sub_231326668();
  sub_2312CCC24(&qword_255ECCEE8, (uint64_t (*)(uint64_t))sub_231326668, MEMORY[0x24BDF5428]);
  sub_2314142A8();
  v31 = a1;
  sub_231326914();
  v16 = v15;
  v17 = sub_2312CCC24(&qword_255ECCF30, (uint64_t (*)(uint64_t))sub_2313265D4, MEMORY[0x24BDF1A30]);
  v18 = sub_2312CCC24(&qword_255ECCF38, (uint64_t (*)(uint64_t))sub_231326914, MEMORY[0x24BDEF170]);
  sub_23141438C();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  result = objc_msgSend(*(id *)(a1 + *(int *)(type metadata accessor for AFibBurdenAddDataView() + 20)), sel_displayTypeController);
  if (result)
  {
    v20 = result;
    sub_2312D3C68(0, (unint64_t *)&qword_25415DEC8);
    v21 = (void *)MEMORY[0x2348DD384]((id)*MEMORY[0x24BDD3378]);
    v22 = objc_msgSend(v20, sel_displayTypeForObjectType_, v21);

    if (v22)
    {
      v23 = objc_msgSend(v22, sel_localization);

      v24 = objc_msgSend(v23, sel_displayName);
      v22 = (id)sub_2314146BC();
      v26 = v25;

    }
    else
    {
      v26 = 0xE000000000000000;
    }
    v37 = v22;
    v38 = v26;
    v33 = v4;
    v34 = v16;
    v35 = v17;
    v36 = v18;
    swift_getOpaqueTypeConformance2();
    sub_2312D104C();
    sub_231414350();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v9);
    return (id)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v30, v14, v28);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2313225DC@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;

  v36 = a1;
  sub_2313267EC(0);
  v32 = v1;
  v35 = *(_QWORD *)(v1 - 8);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v37 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v34 = (char *)&v28 - v4;
  sub_2313266D4(0);
  v31 = v5;
  v33 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v30 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v28 - v8;
  if (qword_255ECAAD8 != -1)
    swift_once();
  v38 = sub_231411374();
  v39 = v10;
  MEMORY[0x24BDAC7A8](v38);
  sub_2313266E8(0);
  v11 = MEMORY[0x24BDF5428];
  sub_2312CCC24(&qword_255ECCF80, (uint64_t (*)(uint64_t))sub_2313266E8, MEMORY[0x24BDF5428]);
  sub_2312D104C();
  sub_231414494();
  v38 = sub_231411374();
  v39 = v12;
  MEMORY[0x24BDAC7A8](v38);
  sub_23132685C(0);
  sub_2312CCC24(&qword_255ECCF88, (uint64_t (*)(uint64_t))sub_23132685C, v11);
  v13 = v34;
  sub_231414494();
  v14 = v9;
  v29 = v9;
  v15 = v33;
  v16 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
  v17 = v30;
  v18 = v31;
  v16(v30, v14, v31);
  v19 = v35;
  v20 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
  v21 = v37;
  v22 = v32;
  v20(v37, v13, v32);
  v23 = v36;
  v16(v36, v17, v18);
  sub_231326980(0, &qword_255ECCE98, sub_2313266D4, sub_2313267EC);
  v20(&v23[*(int *)(v24 + 48)], v21, v22);
  v25 = *(void (**)(char *, uint64_t))(v19 + 8);
  v25(v13, v22);
  v26 = *(void (**)(char *, uint64_t))(v15 + 8);
  v26(v29, v18);
  v25(v21, v22);
  return ((uint64_t (*)(char *, uint64_t))v26)(v17, v18);
}

uint64_t sub_23132295C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  void (*v29)(char *, uint64_t);
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;

  v33 = a2;
  sub_231326788();
  v4 = v3;
  v32 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v31 - v8;
  sub_231326A74(0, &qword_255ECCEB8, MEMORY[0x24BDF1FA8], MEMORY[0x24BDEC760]);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v31 - v16;
  if (qword_255ECAAD8 != -1)
    swift_once();
  v36 = sub_231411374();
  v37 = v18;
  MEMORY[0x24BDAC7A8](v36);
  sub_2312D104C();
  sub_231414044();
  v19 = (uint64_t *)(a1 + *(int *)(type metadata accessor for AFibBurdenAddDataView() + 28));
  v20 = *v19;
  v21 = v19[1];
  *(_QWORD *)&v35 = v20;
  *((_QWORD *)&v35 + 1) = v21;
  sub_2312CF374(0, &qword_255ECCF78, MEMORY[0x24BEE13C8], MEMORY[0x24BDF42C0]);
  sub_23141441C();
  v35 = xmmword_23141B220;
  v34 = 0x3F847AE147AE147BLL;
  sub_2312EE3F4();
  sub_231414458();
  v22 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v22(v15, v17, v11);
  v31 = v17;
  v23 = v12;
  v24 = v32;
  v25 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
  v25(v7, v9, v4);
  v26 = v33;
  v22(v33, v15, v11);
  sub_231326704();
  v25(&v26[*(int *)(v27 + 48)], v7, v4);
  v28 = *(void (**)(char *, uint64_t))(v24 + 8);
  v28(v9, v4);
  v29 = *(void (**)(char *, uint64_t))(v23 + 8);
  v29(v31, v11);
  v28(v7, v4);
  return ((uint64_t (*)(char *, uint64_t))v29)(v15, v11);
}

uint64_t sub_231322C88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;
  uint64_t result;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v2 = sub_231322CE8();
  sub_231322DAC(v2, v3 & 1);
  sub_2312D104C();
  result = sub_2314142F0();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6 & 1;
  *(_QWORD *)(a1 + 24) = v7;
  return result;
}

uint64_t sub_231322CE8()
{
  uint64_t result;
  double v1;

  type metadata accessor for AFibBurdenAddDataView();
  sub_2312CF374(0, &qword_255ECCF78, MEMORY[0x24BEE13C8], MEMORY[0x24BDF42C0]);
  sub_231414404();
  result = 0;
  if (v1 > 0.02)
  {
    sub_231414404();
    return *(_QWORD *)&v1;
  }
  return result;
}

uint64_t sub_231322DAC(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  id v12;
  _QWORD v14[3];

  v4 = sub_231411674();
  MEMORY[0x24BDAC7A8](v4);
  sub_231327548();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, 2.0);
    v12 = (id)HKAFibBurdenClampedLowerBoundLocalizedString();

    v10 = sub_2314146BC();
  }
  else
  {
    v14[1] = a1;
    sub_23141165C();
    sub_2312EE3F4();
    sub_23141141C();
    sub_2312CCC24(&qword_255ECCFA8, (uint64_t (*)(uint64_t))sub_231327548, MEMORY[0x24BDCD480]);
    sub_231414620();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return v14[2];
  }
  return v10;
}

uint64_t sub_231322F30@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  void (*v29)(char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;

  v40 = a1;
  v1 = sub_231414230();
  MEMORY[0x24BDAC7A8](v1);
  v39 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6DD8(0, &qword_255ECCF90, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDF4870]);
  MEMORY[0x24BDAC7A8](v3);
  v36 = (char *)&v31 - v4;
  sub_231326A74(0, &qword_255ECCEE0, MEMORY[0x24BDF1F80], MEMORY[0x24BDEB018]);
  v34 = v5;
  v38 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v37 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v31 - v8;
  sub_231326A74(0, &qword_255ECCEB8, MEMORY[0x24BDF1FA8], MEMORY[0x24BDEC760]);
  v33 = v10;
  v35 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v31 - v14;
  if (qword_255ECAAD8 != -1)
    swift_once();
  v41 = sub_231411374();
  v42 = v16;
  MEMORY[0x24BDAC7A8](v41);
  sub_2312D104C();
  sub_231414044();
  v41 = sub_231411374();
  v42 = v17;
  type metadata accessor for AFibBurdenAddDataView();
  sub_2312D6DD8(0, &qword_255ECCDB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDF42C0]);
  sub_23141441C();
  sub_231414224();
  sub_231413FCC();
  v18 = v15;
  v32 = v15;
  v19 = v35;
  v20 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
  v21 = v33;
  v20(v13, v18, v33);
  v22 = v37;
  v23 = v38;
  v24 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
  v25 = v34;
  v24(v37, v9, v34);
  v26 = v40;
  v20(v40, v13, v21);
  sub_231326878();
  v24(&v26[*(int *)(v27 + 48)], v22, v25);
  v28 = *(void (**)(char *, uint64_t))(v23 + 8);
  v28(v9, v25);
  v29 = *(void (**)(char *, uint64_t))(v19 + 8);
  v29(v32, v21);
  v28(v22, v25);
  return ((uint64_t (*)(char *, uint64_t))v29)(v13, v21);
}

uint64_t sub_231323308@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_231323360();
  sub_2312D104C();
  result = sub_2314142F0();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  *(_QWORD *)(a1 + 24) = v5;
  return result;
}

id sub_231323360()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  id result;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(_QWORD);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  void (*v40)(char *, uint64_t);
  uint64_t (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  void *v43;
  void *v44;
  void (*v45)(char *, uint64_t);
  void *v46;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  void (*v57)(char *, uint64_t);
  id v58;
  uint64_t v59;
  void *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t *v65;
  char *v66;
  void *v67;
  id v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  NSObject *v72;
  int v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  _QWORD v83[2];
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t *v94;
  void (*v95)(char *, uint64_t);
  void (*v96)(uint64_t, uint64_t);
  uint64_t v97;
  unsigned int v98;
  void (*v99)(char *, _QWORD, uint64_t);
  uint64_t v100;
  char *v101;
  char *v102;
  void (*v103)(char *, uint64_t);
  uint64_t v104;
  uint64_t v105;
  id v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112[2];

  v1 = type metadata accessor for AFibBurdenAddDataView();
  MEMORY[0x24BDAC7A8](v1);
  v88 = (uint64_t)v83 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_231413780();
  v86 = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87);
  v89 = (char *)v83 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_231411608();
  v108 = *(char **)(v4 - 8);
  v109 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_231411764();
  v107 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_231411248();
  v10 = *(_QWORD *)(v104 - 8);
  v11 = MEMORY[0x24BDAC7A8](v104);
  v84 = (char *)v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v93 = (char *)v83 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v102 = (char *)v83 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v83 - v17;
  sub_2313272F8(0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v85 = (char *)v83 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v94 = (_QWORD *)((char *)v83 - v23);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v103 = (void (*)(char *, uint64_t))((char *)v83 - v25);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v101 = (char *)v83 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)v83 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v110 = (uint64_t)v83 - v31;
  result = objc_msgSend((id)objc_opt_self(), sel_hk_mediumDateStyleIntervalFormatter);
  v106 = result;
  if (!result)
  {
    __break(1u);
    goto LABEL_23;
  }
  v33 = v0 + *(int *)(v1 + 24);
  v34 = v107;
  v35 = *(void (**)(_QWORD))(v107 + 104);
  v98 = *MEMORY[0x24BDCF1E8];
  v99 = (void (*)(char *, _QWORD, uint64_t))v35;
  v35(v9);
  v83[1] = v1;
  v36 = *(int *)(v1 + 32);
  v91 = v0;
  v37 = v0 + v36;
  sub_2312D6DD8(0, &qword_255ECCDB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDF42C0]);
  v97 = v38;
  v92 = v37;
  sub_231414404();
  sub_231411698();
  v39 = (void (*)(uint64_t, uint64_t))*((_QWORD *)v108 + 1);
  v100 = (uint64_t)v6;
  v96 = v39;
  v39((uint64_t)v6, v109);
  v40 = *(void (**)(char *, uint64_t))(v34 + 8);
  v108 = v9;
  v105 = v7;
  v95 = v40;
  v40(v9, v7);
  v41 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v42 = v104;
  result = (id)v41(v30, 1, v104);
  if ((_DWORD)result == 1)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v43 = (void *)objc_opt_self();
  v107 = *(_QWORD *)(v10 + 32);
  ((void (*)(char *, char *, uint64_t))v107)(v18, v30, v42);
  v44 = (void *)sub_2314111F4();
  v45 = *(void (**)(char *, uint64_t))(v10 + 8);
  v45(v18, v42);
  v46 = (void *)sub_2314116F8();
  v90 = v33;
  v47 = (void *)sub_2314116F8();
  v48 = objc_msgSend(v43, sel_hk_julianDayDateIntervalFromOpenUpperBoundDateInterval_sourceCalendar_localCalendar_, v44, v46, v47);

  if (v48)
  {
    v49 = (uint64_t)v101;
    sub_231411200();

    v50 = 0;
    v51 = v105;
    v52 = v108;
  }
  else
  {
    v50 = 1;
    v51 = v105;
    v52 = v108;
    v49 = (uint64_t)v101;
  }
  v53 = v102;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v49, v50, 1, v42);
  v54 = v110;
  sub_2312EE5FC(v49, v110, (uint64_t (*)(_QWORD))sub_2313272F8);
  v55 = v54;
  v56 = (char *)v103;
  sub_2312D6C20(v55, (uint64_t)v103, (uint64_t (*)(_QWORD))sub_2313272F8);
  v102 = (char *)v41;
  if (v41(v56, 1, v42) == 1)
  {
    v57 = v45;
    sub_2312CEBD4((uint64_t)v56, (uint64_t (*)(_QWORD))sub_2313272F8);
    v58 = v106;
    v59 = v100;
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v107)(v53, v56, v42);
    v60 = (void *)sub_2314111F4();
    v58 = v106;
    v61 = objc_msgSend(v106, sel_stringFromDateInterval_, v60);

    v59 = v100;
    if (v61)
    {
      v62 = sub_2314146BC();

      v45(v53, v42);
      v63 = v110;
LABEL_21:
      sub_2312CEBD4(v63, (uint64_t (*)(_QWORD))sub_2313272F8);
      return (id)v62;
    }
    v64 = v53;
    v57 = v45;
    v45(v64, v42);
    v52 = v108;
  }
  v99(v52, v98, v51);
  sub_231414404();
  v65 = v94;
  sub_231411698();
  v96(v59, v109);
  v95(v52, v51);
  result = (id)((uint64_t (*)(uint64_t *, uint64_t, uint64_t))v102)(v65, 1, v42);
  if ((_DWORD)result == 1)
    goto LABEL_24;
  v66 = v93;
  ((void (*)(char *, uint64_t *, uint64_t))v107)(v93, v65, v42);
  v67 = (void *)sub_2314111F4();
  v57(v66, v42);
  v68 = objc_msgSend(v58, sel_stringFromDateInterval_, v67);

  v69 = v91;
  if (v68)
  {
    v62 = sub_2314146BC();

    v63 = v110;
    goto LABEL_21;
  }
  v103 = v57;
  v70 = v89;
  sub_231413750();
  v71 = v88;
  sub_2312D6C20(v69, v88, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenAddDataView);
  v72 = sub_231413768();
  v73 = sub_231414980();
  if (!os_log_type_enabled(v72, (os_log_type_t)v73))
  {
    sub_2312CEBD4(v71, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenAddDataView);

    (*(void (**)(char *, uint64_t))(v86 + 8))(v70, v87);
    v63 = v110;
    goto LABEL_18;
  }
  LODWORD(v101) = v73;
  v74 = swift_slowAlloc();
  v100 = swift_slowAlloc();
  v112[0] = v100;
  *(_DWORD *)v74 = 136446466;
  v111 = sub_23133180C(0xD000000000000015, 0x800000023141B250, v112);
  v94 = v112;
  sub_231414CBC();
  *(_WORD *)(v74 + 12) = 2080;
  v75 = v108;
  v76 = v105;
  v99(v108, v98, v105);
  sub_231414404();
  v77 = v85;
  sub_231411698();
  v96(v59, v109);
  v95(v75, v76);
  result = (id)((uint64_t (*)(char *, uint64_t, uint64_t))v102)(v77, 1, v42);
  if ((_DWORD)result != 1)
  {
    v78 = v84;
    ((void (*)(char *, char *, uint64_t))v107)(v84, v77, v42);
    sub_2312CCC24((unint64_t *)&qword_255ECCF98, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], MEMORY[0x24BDCB8B8]);
    v79 = sub_231415040();
    v81 = v80;
    v103(v78, v42);
    v111 = sub_23133180C(v79, v81, v112);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    sub_2312CEBD4(v71, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenAddDataView);
    _os_log_impl(&dword_2312C8000, v72, (os_log_type_t)v101, "[%{public}s] Unable to format date interval of %s", (uint8_t *)v74, 0x16u);
    v82 = v100;
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v82, -1, -1);
    MEMORY[0x2348DE308](v74, -1, -1);

    (*(void (**)(char *, uint64_t))(v86 + 8))(v89, v87);
    v63 = v110;
    v58 = v106;
LABEL_18:
    if (qword_255ECAAD8 != -1)
      swift_once();
    v62 = sub_231411374();

    goto LABEL_21;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_231323D70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  _QWORD v19[10];

  v19[1] = a2;
  sub_231326980(0, &qword_255ECCEF8, (void (*)(uint64_t))sub_2313269F0, (void (*)(uint64_t))sub_231326B1C);
  v19[0] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v19 - v4;
  sub_231326B1C();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_231414254();
  MEMORY[0x24BDAC7A8](v11);
  sub_2313269F0();
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23141423C();
  v19[8] = a1;
  sub_231326A74(0, (unint64_t *)&qword_255ECC9A8, MEMORY[0x24BDF1F80], (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BDF4398]);
  sub_231326ABC();
  sub_231413FE4();
  sub_231414248();
  v19[4] = a1;
  sub_231326B88();
  sub_231326C1C();
  sub_231413FE4();
  v17 = &v5[*(int *)(v19[0] + 48)];
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v5, v16, v13);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v10, v7);
  sub_2314141F4();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_231323F9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD v9[2];

  v2 = type metadata accessor for AFibBurdenAddDataView();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2);
  if (qword_255ECAAD8 != -1)
    swift_once();
  v9[0] = sub_231411374();
  v9[1] = v5;
  sub_2312D6C20(a1, (uint64_t)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenAddDataView);
  v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v7 = swift_allocObject();
  sub_2312EE5FC((uint64_t)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenAddDataView);
  sub_2312D104C();
  return sub_231414440();
}

uint64_t sub_2313240EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_231414014();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231326DA8((uint64_t)v3);
  sub_231414008();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_23132416C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t KeyPath;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  _BYTE v24[16];
  uint64_t v25;
  uint64_t v26;

  v4 = type metadata accessor for AFibBurdenAddDataView();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  sub_231326A74(0, (unint64_t *)&qword_255ECC9A8, MEMORY[0x24BDF1F80], (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BDF4398]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v11 = &v24[-v10];
  if (qword_255ECAAD8 != -1)
    swift_once();
  v25 = sub_231411374();
  v26 = v12;
  sub_2312D6C20(a1, (uint64_t)&v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenAddDataView);
  v13 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v14 = swift_allocObject();
  sub_2312EE5FC((uint64_t)&v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], v14 + v13, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenAddDataView);
  sub_2312D104C();
  sub_231414440();
  v15 = a1 + *(int *)(v4 + 40);
  v16 = *(_BYTE *)v15;
  v17 = *(_QWORD *)(v15 + 8);
  LOBYTE(v25) = v16;
  v26 = v17;
  sub_2312CF374(0, &qword_255ECC9F0, MEMORY[0x24BEE1328], MEMORY[0x24BDF42C0]);
  sub_231414404();
  v18 = v24[15];
  KeyPath = swift_getKeyPath();
  v20 = swift_allocObject();
  *(_BYTE *)(v20 + 16) = v18;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v9 + 16))(a2, v11, v8);
  sub_231326B88();
  v22 = (uint64_t *)(a2 + *(int *)(v21 + 36));
  *v22 = KeyPath;
  v22[1] = (uint64_t)sub_231327048;
  v22[2] = v20;
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_2313243D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[24];
  uint64_t v19;

  v2 = type metadata accessor for AFibBurdenAddDataView();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2312D6DD8(0, (unint64_t *)&qword_255ED1210, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v18[-v7];
  v9 = a1 + *(int *)(v2 + 40);
  v10 = *(_BYTE *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v18[16] = v10;
  v19 = v11;
  v18[15] = 1;
  sub_2312CF374(0, &qword_255ECC9F0, MEMORY[0x24BEE1328], MEMORY[0x24BDF42C0]);
  sub_231414410();
  v12 = sub_23141483C();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 1, 1, v12);
  sub_2312D6C20(a1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenAddDataView);
  sub_231414824();
  v13 = sub_231414818();
  v14 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v15 = swift_allocObject();
  v16 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v15 + 16) = v13;
  *(_QWORD *)(v15 + 24) = v16;
  sub_2312EE5FC((uint64_t)v5, v15 + v14, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenAddDataView);
  sub_231385C60((uint64_t)v8, (uint64_t)&unk_255ECCF58, v15);
  return swift_release();
}

uint64_t sub_231324588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4[9] = a4;
  v5 = sub_231414014();
  v4[10] = v5;
  v4[11] = *(_QWORD *)(v5 - 8);
  v4[12] = swift_task_alloc();
  v6 = sub_231413780();
  v4[13] = v6;
  v4[14] = *(_QWORD *)(v6 - 8);
  v4[15] = swift_task_alloc();
  v4[16] = swift_task_alloc();
  v4[17] = sub_231414824();
  v4[18] = sub_231414818();
  v7 = (_QWORD *)swift_task_alloc();
  v4[19] = v7;
  *v7 = v4;
  v7[1] = sub_231324650;
  return sub_231324D50();
}

uint64_t sub_231324650()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 160) = v0;
  swift_task_dealloc();
  *(_QWORD *)(v2 + 168) = sub_23141480C();
  *(_QWORD *)(v2 + 176) = v3;
  return swift_task_switch();
}

uint64_t sub_2313246DC()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  sub_231413750();
  v1 = sub_231413768();
  v2 = sub_23141498C();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = v0[16];
    v4 = v0[13];
    v5 = v0[14];
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v12 = v7;
    *(_DWORD *)v6 = 136446210;
    v0[6] = sub_23133180C(0xD000000000000015, 0x800000023141B250, &v12);
    sub_231414CBC();
    _os_log_impl(&dword_2312C8000, v1, v2, "[%{public}s] Successfully saved sample", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v7, -1, -1);
    MEMORY[0x2348DE308](v6, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  else
  {
    v8 = v0[16];
    v9 = v0[13];
    v10 = v0[14];

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  return swift_task_switch();
}

uint64_t sub_231324860()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 184) = sub_231414818();
  sub_23141480C();
  return swift_task_switch();
}

uint64_t sub_2313248C0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[11];
  v1 = v0[12];
  v3 = v0[10];
  swift_release();
  sub_231326DA8(v1);
  sub_231414008();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_231324928()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_231324974()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 192) = sub_231414818();
  sub_23141480C();
  return swift_task_switch();
}

uint64_t sub_2313249D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 72);
  swift_release();
  v2 = type metadata accessor for AFibBurdenAddDataView();
  v3 = (char *)(v1 + *(int *)(v2 + 36));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  *(_BYTE *)(v0 + 16) = v4;
  *(_QWORD *)(v0 + 24) = v5;
  *(_BYTE *)(v0 + 200) = 1;
  sub_2312CF374(0, &qword_255ECC9F0, MEMORY[0x24BEE1328], MEMORY[0x24BDF42C0]);
  sub_231414410();
  v6 = (char *)(v1 + *(int *)(v2 + 40));
  v7 = *v6;
  v8 = *((_QWORD *)v6 + 1);
  *(_BYTE *)(v0 + 32) = v7;
  *(_QWORD *)(v0 + 40) = v8;
  *(_BYTE *)(v0 + 201) = 0;
  sub_231414410();
  return swift_task_switch();
}

uint64_t sub_231324AB0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 160);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_231324B08()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = (void *)v0[20];
  sub_231413750();
  v2 = v1;
  v3 = v1;
  v4 = sub_231413768();
  v5 = sub_231414974();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (void *)v0[20];
    v17 = v0[14];
    v18 = v0[13];
    v19 = v0[15];
    v7 = swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v20 = v16;
    *(_DWORD *)v7 = 136446466;
    v0[7] = sub_23133180C(0xD000000000000015, 0x800000023141B250, &v20);
    sub_231414CBC();
    *(_WORD *)(v7 + 12) = 2112;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[8] = v10;
    sub_231414CBC();
    *v8 = v10;

    _os_log_impl(&dword_2312C8000, v4, v5, "[%{public}s] Error when saving sample: %@", (uint8_t *)v7, 0x16u);
    sub_231327294();
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v16, -1, -1);
    MEMORY[0x2348DE308](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v19, v18);
  }
  else
  {
    v11 = (void *)v0[20];
    v13 = v0[14];
    v12 = v0[15];
    v14 = v0[13];

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  return swift_task_switch();
}

uint64_t sub_231324D50()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1[33] = v0;
  v2 = sub_2314117A0();
  v1[34] = v2;
  v1[35] = *(_QWORD *)(v2 - 8);
  v1[36] = swift_task_alloc();
  v3 = sub_231411608();
  v1[37] = v3;
  v1[38] = *(_QWORD *)(v3 - 8);
  v1[39] = swift_task_alloc();
  v1[40] = swift_task_alloc();
  v4 = sub_231411764();
  v1[41] = v4;
  v1[42] = *(_QWORD *)(v4 - 8);
  v1[43] = swift_task_alloc();
  sub_2313272F8(0);
  v1[44] = swift_task_alloc();
  v5 = sub_231411248();
  v1[45] = v5;
  v1[46] = *(_QWORD *)(v5 - 8);
  v1[47] = swift_task_alloc();
  sub_231414824();
  v1[48] = sub_231414818();
  v1[49] = sub_23141480C();
  v1[50] = v6;
  return swift_task_switch();
}

uint64_t sub_231324E8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  double v31;
  char v32;
  double v33;
  id v34;
  void *v35;
  void *v36;
  void *v37;
  id v38;
  void *v39;
  uint64_t v40;
  _QWORD *v41;
  void (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v1 = *(_QWORD *)(v0 + 352);
  v46 = *(_QWORD *)(v0 + 368);
  v48 = *(_QWORD *)(v0 + 360);
  v2 = *(_QWORD *)(v0 + 336);
  v3 = *(_QWORD *)(v0 + 344);
  v5 = *(_QWORD *)(v0 + 320);
  v4 = *(_QWORD *)(v0 + 328);
  v6 = *(_QWORD *)(v0 + 304);
  v44 = *(_QWORD *)(v0 + 296);
  v7 = type metadata accessor for AFibBurdenAddDataView();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v3, *MEMORY[0x24BDCF1E8], v4);
  v43 = v7;
  sub_2312D6DD8(0, &qword_255ECCDB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDF42C0]);
  sub_231414404();
  sub_231411698();
  v8 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v8(v5, v44);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v4);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v1, 1, v48);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 280);
    v11 = *(_QWORD *)(v0 + 288);
    v12 = *(_QWORD *)(v0 + 272);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 368) + 32))(*(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 360));
    sub_2312D6DD8(0, &qword_255ECCF70, (uint64_t (*)(uint64_t))sub_231327314, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_231416A30;
    *(_QWORD *)(inited + 32) = sub_2314146BC();
    *(_QWORD *)(inited + 40) = v14;
    sub_231411758();
    v15 = (void *)sub_231411794();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v12);
    v16 = objc_msgSend(v15, sel_name);

    v17 = sub_2314146BC();
    v19 = v18;

    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 48) = v17;
    *(_QWORD *)(inited + 56) = v19;
    sub_231336D90(inited);
    sub_231322CE8();
    v42 = v8;
    if ((v20 & 1) != 0)
    {
      v21 = sub_2314146BC();
      v23 = v22;
      v24 = sub_2312D3C68(0, (unint64_t *)&qword_255ECFBD0);
      v25 = sub_231414BE4();
      *(_QWORD *)(v0 + 224) = v24;
      *(_QWORD *)(v0 + 200) = v25;
      sub_231304744((_OWORD *)(v0 + 200), (_OWORD *)(v0 + 232));
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_2313D47BC((_OWORD *)(v0 + 232), v21, v23, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v28 = *(_QWORD *)(v0 + 312);
    v27 = *(_QWORD *)(v0 + 320);
    v47 = *(_QWORD *)(v0 + 296);
    v45 = *(_QWORD *)(v0 + 264);
    sub_2312D3C68(0, (unint64_t *)&qword_25415DEC8);
    v29 = (void *)MEMORY[0x2348DD384]((id)*MEMORY[0x24BDD3378]);
    v30 = objc_msgSend((id)objc_opt_self(), sel_percentUnit);
    v31 = COERCE_DOUBLE(sub_231322CE8());
    if ((v32 & 1) != 0)
      v33 = 0.02;
    else
      v33 = v31;
    v34 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v30, v33);

    sub_231411230();
    sub_23141120C();
    v35 = (void *)sub_2314115C0();
    v36 = (void *)sub_2314115C0();
    v37 = (void *)sub_23141462C();
    swift_bridgeObjectRelease();
    v38 = objc_msgSend((id)objc_opt_self(), sel_quantitySampleWithType_quantity_startDate_endDate_metadata_, v29, v34, v35, v36, v37);
    *(_QWORD *)(v0 + 408) = v38;

    v42(v28, v47);
    v42(v27, v47);
    v39 = *(void **)(v45 + *(int *)(v43 + 20));
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_231325334;
    v40 = swift_continuation_init();
    *(_QWORD *)(v0 + 160) = MEMORY[0x24BDAC760];
    v41 = (_QWORD *)(v0 + 160);
    v41[1] = 0x40000000;
    v41[2] = sub_231385DA4;
    v41[3] = &unk_250022900;
    v41[4] = v40;
    objc_msgSend(v39, sel_saveObject_withCompletion_, v38, v41);
    return swift_continuation_await();
  }
  return result;
}

uint64_t sub_231325334()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 416) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_231325390()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 408);
  v2 = *(_QWORD *)(v0 + 376);
  v3 = *(_QWORD *)(v0 + 360);
  v4 = *(_QWORD *)(v0 + 368);
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23132543C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 408);
  v2 = *(_QWORD *)(v0 + 376);
  v3 = *(_QWORD *)(v0 + 360);
  v4 = *(_QWORD *)(v0 + 368);
  swift_release();
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2313254F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;

  if (qword_255ECAAD8 != -1)
    swift_once();
  sub_231411374();
  sub_2312D104C();
  result = sub_2314142F0();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  *(_QWORD *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_2313255AC()
{
  return sub_231414140();
}

void sub_2313255CC(uint64_t a1)
{
  sub_2312D6DD8(a1, &qword_255ECCDB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], MEMORY[0x24BDEB560]);
}

uint64_t type metadata accessor for AFibBurdenAddDataView()
{
  uint64_t result;

  result = qword_255ECCE20;
  if (!qword_255ECCE20)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t *sub_231325624(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  id v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_2313255CC(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_231414014();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    }
    else
    {
      *v4 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = a3[5];
    v10 = a3[6];
    v11 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)v4 + v9) = (uint64_t)v11;
    v12 = (char *)v4 + v10;
    v13 = (char *)a2 + v10;
    v14 = sub_23141177C();
    v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    v16 = v11;
    v15(v12, v13, v14);
    v17 = a3[7];
    v18 = a3[8];
    v19 = (uint64_t *)((char *)v4 + v17);
    v20 = (uint64_t *)((char *)a2 + v17);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = (char *)v4 + v18;
    v23 = (char *)a2 + v18;
    v24 = sub_231411608();
    v25 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
    v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
    swift_retain();
    v26(v22, v23, v24);
    sub_2312D6DD8(0, &qword_255ECCDB8, v25, MEMORY[0x24BDF42C0]);
    *(_QWORD *)&v22[*(int *)(v27 + 28)] = *(_QWORD *)&v23[*(int *)(v27 + 28)];
    v28 = a3[9];
    v29 = a3[10];
    v30 = (char *)v4 + v28;
    v31 = (char *)a2 + v28;
    *v30 = *v31;
    *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
    v32 = (char *)v4 + v29;
    v33 = (char *)a2 + v29;
    *v32 = *v33;
    *((_QWORD *)v32 + 1) = *((_QWORD *)v33 + 1);
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_2313257FC(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);

  sub_2313255CC(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_231414014();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }

  v5 = a1 + a2[6];
  v6 = sub_23141177C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_release();
  v7 = a1 + a2[8];
  v8 = sub_231411608();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  sub_2312D6DD8(0, &qword_255ECCDB8, v9, MEMORY[0x24BDF42C0]);
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *sub_231325918(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  id v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;

  sub_2313255CC(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_231414014();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = a3[5];
  v8 = a3[6];
  v9 = *(void **)((char *)a2 + v7);
  *(_QWORD *)((char *)a1 + v7) = v9;
  v10 = (char *)a1 + v8;
  v11 = (char *)a2 + v8;
  v12 = sub_23141177C();
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v14 = v9;
  v13(v10, v11, v12);
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_QWORD *)((char *)a1 + v15);
  v18 = (_QWORD *)((char *)a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = (char *)a1 + v16;
  v21 = (char *)a2 + v16;
  v22 = sub_231411608();
  v23 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
  swift_retain();
  v24(v20, v21, v22);
  sub_2312D6DD8(0, &qword_255ECCDB8, v23, MEMORY[0x24BDF42C0]);
  *(_QWORD *)&v20[*(int *)(v25 + 28)] = *(_QWORD *)&v21[*(int *)(v25 + 28)];
  v26 = a3[9];
  v27 = a3[10];
  v28 = (char *)a1 + v26;
  v29 = (char *)a2 + v26;
  *v28 = *v29;
  *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
  v30 = (char *)a1 + v27;
  v31 = (char *)a2 + v27;
  *v30 = *v31;
  *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_231325AC8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;

  if (a1 != a2)
  {
    sub_2312CEBD4((uint64_t)a1, (uint64_t (*)(_QWORD))sub_2313255CC);
    sub_2313255CC(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_231414014();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v7 = a3[5];
  v8 = *(void **)((char *)a2 + v7);
  v9 = *(void **)((char *)a1 + v7);
  *(_QWORD *)((char *)a1 + v7) = v8;
  v10 = v8;

  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_23141177C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_retain();
  swift_release();
  v18 = a3[8];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_231411608();
  v22 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  sub_2312D6DD8(0, &qword_255ECCDB8, v22, MEMORY[0x24BDF42C0]);
  *(_QWORD *)&v19[*(int *)(v23 + 28)] = *(_QWORD *)&v20[*(int *)(v23 + 28)];
  swift_retain();
  swift_release();
  v24 = a3[9];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  *v25 = *v26;
  *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
  swift_retain();
  swift_release();
  v27 = a3[10];
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  *v28 = *v29;
  *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
  swift_retain();
  swift_release();
  return a1;
}

char *sub_231325CB8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;

  sub_2313255CC(0);
  v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_231414014();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  v9 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_23141177C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  v13 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_231411608();
  v17 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  sub_2312D6DD8(0, &qword_255ECCDB8, v17, MEMORY[0x24BDF42C0]);
  *(_QWORD *)&v14[*(int *)(v18 + 28)] = *(_QWORD *)&v15[*(int *)(v18 + 28)];
  v19 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  *(_OWORD *)&a1[v19] = *(_OWORD *)&a2[v19];
  return a1;
}

char *sub_231325E04(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;

  if (a1 != a2)
  {
    sub_2312CEBD4((uint64_t)a1, (uint64_t (*)(_QWORD))sub_2313255CC);
    sub_2313255CC(0);
    v7 = v6;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = sub_231414014();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
  }
  v9 = a3[5];
  v10 = *(void **)&a1[v9];
  *(_QWORD *)&a1[v9] = *(_QWORD *)&a2[v9];

  v11 = a3[6];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = sub_23141177C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = &a1[v15];
  v17 = &a2[v15];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
  swift_release();
  v18 = a3[8];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = sub_231411608();
  v22 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
  sub_2312D6DD8(0, &qword_255ECCDB8, v22, MEMORY[0x24BDF42C0]);
  *(_QWORD *)&v19[*(int *)(v23 + 28)] = *(_QWORD *)&v20[*(int *)(v23 + 28)];
  swift_release();
  v24 = a3[9];
  v25 = &a1[v24];
  v26 = &a2[v24];
  *v25 = *v26;
  *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
  swift_release();
  v27 = a3[10];
  v28 = &a1[v27];
  v29 = &a2[v27];
  *v28 = *v29;
  *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
  swift_release();
  return a1;
}

uint64_t sub_231325FCC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_231325FD8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_2312D6DD8(0, qword_255ECCDC0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], MEMORY[0x24BDEB580]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = sub_23141177C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[6];
    }
    else
    {
      sub_2312D6DD8(0, &qword_255ECCDB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDF42C0]);
      v8 = v16;
      v14 = *(_QWORD *)(v16 - 8);
      v15 = a3[8];
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[5]);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_2313260D4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2313260E0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_2312D6DD8(0, qword_255ECCDC0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC038], MEMORY[0x24BDEB580]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5]) = (a2 - 1);
      return;
    }
    v13 = sub_23141177C();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[6];
    }
    else
    {
      sub_2312D6DD8(0, &qword_255ECCDB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDF42C0]);
      v10 = v16;
      v14 = *(_QWORD *)(v16 - 8);
      v15 = a4[8];
    }
    v12 = a1 + v15;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  v11(v12, a2, a2, v10);
}

void sub_2313261D8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_2313255CC(319);
  if (v0 <= 0x3F)
  {
    sub_23141177C();
    if (v1 <= 0x3F)
    {
      sub_2312D6DD8(319, &qword_255ECCDB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDF42C0]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_2313262A8()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_2313262B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECCE70)
  {
    sub_231414050();
    sub_2313263F4(255);
    sub_231326500(255);
    sub_2313265D4();
    sub_231326914();
    sub_2312CCC24(&qword_255ECCF30, (uint64_t (*)(uint64_t))sub_2313265D4, MEMORY[0x24BDF1A30]);
    sub_2312CCC24(&qword_255ECCF38, (uint64_t (*)(uint64_t))sub_231326914, MEMORY[0x24BDEF170]);
    swift_getOpaqueTypeConformance2();
    sub_2312D104C();
    swift_getOpaqueTypeConformance2();
    v0 = sub_23141408C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECCE70);
  }
}

void sub_2313263F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!qword_255ECCE78)
  {
    sub_231326500(255);
    v3 = v2;
    sub_2313265D4();
    sub_231326914();
    sub_2312CCC24(&qword_255ECCF30, (uint64_t (*)(uint64_t))sub_2313265D4, MEMORY[0x24BDF1A30]);
    sub_2312CCC24(&qword_255ECCF38, (uint64_t (*)(uint64_t))sub_231326914, MEMORY[0x24BDEF170]);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v5 = sub_2312D104C();
    v8[0] = v3;
    v8[1] = MEMORY[0x24BEE0D00];
    v8[2] = OpaqueTypeConformance2;
    v8[3] = v5;
    v6 = MEMORY[0x2348DE200](a1, v8, MEMORY[0x24BDF28C0], 0);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_255ECCE78);
  }
}

void sub_231326500(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  if (!qword_255ECCE80)
  {
    sub_2313265D4();
    v3 = v2;
    sub_231326914();
    v7[0] = v3;
    v7[1] = v4;
    v7[2] = sub_2312CCC24(&qword_255ECCF30, (uint64_t (*)(uint64_t))sub_2313265D4, MEMORY[0x24BDF1A30]);
    v7[3] = sub_2312CCC24(&qword_255ECCF38, (uint64_t (*)(uint64_t))sub_231326914, MEMORY[0x24BDEF170]);
    v5 = MEMORY[0x2348DE200](a1, v7, MEMORY[0x24BDF3858], 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_255ECCE80);
  }
}

void sub_2313265D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECCE88)
  {
    sub_231326668();
    sub_2312CCC24(&qword_255ECCEE8, (uint64_t (*)(uint64_t))sub_231326668, MEMORY[0x24BDF5428]);
    v0 = sub_2314142B4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECCE88);
  }
}

void sub_231326668()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECCE90)
  {
    sub_231326980(255, &qword_255ECCE98, sub_2313266D4, sub_2313267EC);
    v0 = sub_2314144D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECCE90);
  }
}

void sub_2313266D4(uint64_t a1)
{
  sub_231326800(a1, &qword_255ECCEA0, sub_2313266E8);
}

void sub_2313266E8(uint64_t a1)
{
  sub_2312D6DD8(a1, &qword_255ECCEA8, (uint64_t (*)(uint64_t))sub_231326704, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_231326704()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255ECCEB0)
  {
    sub_231326A74(255, &qword_255ECCEB8, MEMORY[0x24BDF1FA8], MEMORY[0x24BDEC760]);
    sub_231326788();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255ECCEB0);
  }
}

void sub_231326788()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECCEC0)
  {
    v0 = sub_231414464();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECCEC0);
  }
}

void sub_2313267EC(uint64_t a1)
{
  sub_231326800(a1, &qword_255ECCEC8, sub_23132685C);
}

void sub_231326800(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_2314144AC();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_23132685C(uint64_t a1)
{
  sub_2312D6DD8(a1, &qword_255ECCED0, (uint64_t (*)(uint64_t))sub_231326878, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_231326878()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255ECCED8)
  {
    sub_231326A74(255, &qword_255ECCEB8, MEMORY[0x24BDF1FA8], MEMORY[0x24BDEC760]);
    sub_231326A74(255, &qword_255ECCEE0, MEMORY[0x24BDF1F80], MEMORY[0x24BDEB018]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255ECCED8);
  }
}

void sub_231326914()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECCEF0)
  {
    sub_231326980(255, &qword_255ECCEF8, (void (*)(uint64_t))sub_2313269F0, (void (*)(uint64_t))sub_231326B1C);
    v0 = sub_2314141E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECCEF0);
  }
}

void sub_231326980(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_2313269F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECCF00)
  {
    sub_231326A74(255, (unint64_t *)&qword_255ECC9A8, MEMORY[0x24BDF1F80], (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BDF4398]);
    sub_231326ABC();
    v0 = sub_231413FF0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECCF00);
  }
}

void sub_231326A74(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = a4(0, MEMORY[0x24BDF1FA8]);
    if (!v6)
      atomic_store(v5, a2);
  }
}

unint64_t sub_231326ABC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ECC9B0;
  if (!qword_255ECC9B0)
  {
    sub_231326A74(255, (unint64_t *)&qword_255ECC9A8, MEMORY[0x24BDF1F80], (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BDF4398]);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDF43B0], v1);
    atomic_store(result, (unint64_t *)&qword_255ECC9B0);
  }
  return result;
}

void sub_231326B1C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECCF08)
  {
    sub_231326B88();
    sub_231326C1C();
    v0 = sub_231413FF0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECCF08);
  }
}

void sub_231326B88()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECCF10)
  {
    sub_231326A74(255, (unint64_t *)&qword_255ECC9A8, MEMORY[0x24BDF1F80], (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BDF4398]);
    sub_2312CF374(255, &qword_255ECCF18, MEMORY[0x24BEE1328], MEMORY[0x24BDF1230]);
    v0 = sub_231414074();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECCF10);
  }
}

unint64_t sub_231326C1C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255ECCF20;
  if (!qword_255ECCF20)
  {
    sub_231326B88();
    v2 = v1;
    v3[0] = sub_231326ABC();
    v3[1] = sub_231326C84();
    result = MEMORY[0x2348DE248](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_255ECCF20);
  }
  return result;
}

unint64_t sub_231326C84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ECCF28;
  if (!qword_255ECCF28)
  {
    sub_2312CF374(255, &qword_255ECCF18, MEMORY[0x24BEE1328], MEMORY[0x24BDF1230]);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDF1248], v1);
    atomic_store(result, (unint64_t *)&qword_255ECCF28);
  }
  return result;
}

void sub_231326CE4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  if (!qword_255ECCF40)
  {
    sub_2313262B8();
    v5[0] = v2;
    v5[1] = sub_2312CCC24(&qword_255ECCF48, (uint64_t (*)(uint64_t))sub_2313262B8, MEMORY[0x24BDED358]);
    v3 = MEMORY[0x2348DE200](a1, v5, MEMORY[0x24BDF32F0], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_255ECCF40);
  }
}

id sub_231326D70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2313222AC(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_231326D78@<X0>(char *a1@<X8>)
{
  return sub_2313225DC(a1);
}

uint64_t sub_231326D80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_231323D70(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_231326D88()
{
  uint64_t v0;

  return sub_231323F9C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_231326D90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23132416C(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_231326D9C()
{
  return sub_2313274EC(sub_2313243D4);
}

uint64_t sub_231326DA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  os_log_type_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;

  v2 = v1;
  v4 = sub_231414188();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313255CC(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6C20(v2, (uint64_t)v10, v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_231414014();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, v10, v12);
  }
  else
  {
    v14 = sub_231414980();
    v15 = sub_23141426C();
    v16 = v14;
    if (os_log_type_enabled(v15, v14))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      v20[1] = a1;
      v19 = v18;
      v21 = v18;
      *(_DWORD *)v17 = 136315138;
      v20[2] = sub_23133180C(0x417373696D736944, 0xED00006E6F697463, &v21);
      sub_231414CBC();
      _os_log_impl(&dword_2312C8000, v15, v16, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v19, -1, -1);
      MEMORY[0x2348DE308](v17, -1, -1);
    }

    sub_23141417C();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_231326FE8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23141414C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_231327014()
{
  return sub_231414158();
}

uint64_t sub_231327038()
{
  return swift_deallocObject();
}

_BYTE *sub_231327048(_BYTE *result)
{
  uint64_t v1;

  *result &= ~*(_BYTE *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_231327060()
{
  uint64_t v0;
  int *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);

  v1 = (int *)type metadata accessor for AFibBurdenAddDataView();
  v2 = (*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  sub_2314130CC();
  v3 = v0 + v2;
  sub_2313255CC(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_231414014();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v2, v4);
  }
  else
  {
    swift_release();
  }

  v5 = v3 + v1[6];
  v6 = sub_23141177C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_release();
  v7 = v3 + v1[8];
  v8 = sub_231411608();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  sub_2312D6DD8(0, &qword_255ECCDB8, v9, MEMORY[0x24BDF42C0]);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2313271C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AFibBurdenAddDataView() - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23132724C;
  return sub_231324588(a1, v5, v6, v7);
}

uint64_t sub_23132724C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_231327294()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415BD20)
  {
    sub_2312D3C68(255, (unint64_t *)&qword_25415BD30);
    v0 = sub_231414CB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415BD20);
  }
}

void sub_2313272F8(uint64_t a1)
{
  sub_2312D6DD8(a1, &qword_255ECCF68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

void sub_231327314()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255ED1ED0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255ED1ED0);
  }
}

uint64_t sub_231327380()
{
  uint64_t v0;
  int *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);

  v1 = (int *)type metadata accessor for AFibBurdenAddDataView();
  v2 = (*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + v2;
  sub_2313255CC(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_231414014();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v2, v4);
  }
  else
  {
    swift_release();
  }

  v5 = v3 + v1[6];
  v6 = sub_23141177C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_release();
  v7 = v3 + v1[8];
  v8 = sub_231411608();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  sub_2312D6DD8(0, &qword_255ECCDB8, v9, MEMORY[0x24BDF42C0]);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2313274E0()
{
  return sub_2313274EC((uint64_t (*)(uint64_t))sub_2313240EC);
}

uint64_t sub_2313274EC(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AFibBurdenAddDataView() - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_231327528@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_23132295C(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_231327530@<X0>(char *a1@<X8>)
{
  return sub_231322F30(a1);
}

uint64_t sub_231327538@<X0>(uint64_t a1@<X8>)
{
  return sub_231323308(a1);
}

uint64_t sub_231327540@<X0>(uint64_t a1@<X8>)
{
  return sub_231322C88(a1);
}

void sub_231327548()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECCFA0)
  {
    sub_2312EE3F4();
    v0 = sub_231411428();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECCFA0);
  }
}

uint64_t sub_2313275A0()
{
  sub_231326CE4(255);
  sub_2313262B8();
  sub_2312CCC24(&qword_255ECCF48, (uint64_t (*)(uint64_t))sub_2313262B8, MEMORY[0x24BDED358]);
  swift_getOpaqueTypeConformance2();
  sub_2312D104C();
  return swift_getOpaqueTypeConformance2();
}

void sub_23132764C(void *a1, unint64_t a2, char a3)
{
  void *v3;
  void *v4;
  id v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  void *v38;
  uint64_t inited;
  id v40;
  id v41;
  unint64_t v42;
  id v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  id v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  id v64;
  id v65;
  id v66;
  id v67;
  NSObject *v68;
  os_log_type_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  NSObject *v76;
  uint64_t v77;
  void *v78;
  NSObject *v79;
  id v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v86;

  v4 = v3;
  v7 = sub_231328B78();
  if ((v8 & 1) != 0)
  {
    if (qword_25415DF98 != -1)
      swift_once();
    v22 = sub_231413780();
    sub_2312CE3B8(v22, (uint64_t)qword_254162FF0);
    v23 = v3;
    v24 = a1;
    v25 = v23;
    v26 = v24;
    v27 = sub_231413768();
    v28 = sub_23141498C();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc();
      v30 = swift_slowAlloc();
      v86 = v30;
      *(_DWORD *)v29 = 136446722;
      swift_getObjectType();
      sub_2313290C8(0, &qword_255ECCFB0, &qword_255ECCFB8);
      v31 = sub_2314146E0();
      sub_23133180C(v31, v32, (uint64_t *)&v86);
      sub_231414CBC();

      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2082;
      sub_23133180C(0xD000000000000026, 0x8000000231429D00, (uint64_t *)&v86);
      sub_231414CBC();
      *(_WORD *)(v29 + 22) = 2082;
      swift_getObjectType();
      sub_2313290C8(0, &qword_255ECCFC0, (unint64_t *)&unk_255ECF280);
      v33 = sub_2314146E0();
      sub_23133180C(v33, v34, (uint64_t *)&v86);
      sub_231414CBC();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v27, v28, "[%{public}s.%{public}s] %{public}s not already presented. Presenting now.", (uint8_t *)v29, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v30, -1, -1);
      MEMORY[0x2348DE308](v29, -1, -1);

    }
    else
    {

    }
    v35 = objc_msgSend(v25, sel_selectedViewController);
    if (v35)
    {
      v36 = v35;
      objc_opt_self();
      v37 = swift_dynamicCastObjCClass();
      if (v37)
      {
        v38 = (void *)v37;
        sub_2312D3AD4();
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_231417F90;
        *(_QWORD *)(inited + 32) = v26;
        v86 = inited;
        sub_2314147B8();
        v40 = v26;
        sub_231412A90();
        v41 = v36;
        sub_2313EBCC8(a2);
        v42 = v86;
        v43 = objc_msgSend(v38, sel_viewControllers);
        sub_2312D3C68(0, (unint64_t *)&unk_255ECF280);
        v44 = sub_2314147A0();

        v86 = v44;
        sub_231412A90();
        sub_2313EBCC8(v42);
        v45 = (void *)sub_231414788();
        swift_bridgeObjectRelease();
        objc_msgSend(v38, sel_setViewControllers_animated_, v45, a3 & 1);
        swift_bridgeObjectRelease();

      }
      else
      {

      }
    }
  }
  else
  {
    v9 = (uint64_t)v7;
    if (objc_msgSend(v3, sel_selectedIndex) != v7)
    {
      if (qword_25415DF98 != -1)
        swift_once();
      v10 = sub_231413780();
      sub_2312CE3B8(v10, (uint64_t)qword_254162FF0);
      v11 = v3;
      v12 = a1;
      v13 = v11;
      v14 = v12;
      v15 = sub_231413768();
      v16 = sub_23141498C();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = swift_slowAlloc();
        v83 = swift_slowAlloc();
        v86 = v83;
        *(_DWORD *)v17 = 136446722;
        swift_getObjectType();
        sub_2313290C8(0, &qword_255ECCFB0, &qword_255ECCFB8);
        v18 = sub_2314146E0();
        sub_23133180C(v18, v19, (uint64_t *)&v86);
        sub_231414CBC();

        swift_bridgeObjectRelease();
        *(_WORD *)(v17 + 12) = 2082;
        sub_23133180C(0xD000000000000026, 0x8000000231429D00, (uint64_t *)&v86);
        sub_231414CBC();
        *(_WORD *)(v17 + 22) = 2082;
        swift_getObjectType();
        sub_2313290C8(0, &qword_255ECCFC0, (unint64_t *)&unk_255ECF280);
        v20 = sub_2314146E0();
        sub_23133180C(v20, v21, (uint64_t *)&v86);
        sub_231414CBC();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2312C8000, v15, v16, "[%{public}s.%{public}s] %{public}s already presented in a different tab. Switching to that tab.", (uint8_t *)v17, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x2348DE308](v83, -1, -1);
        MEMORY[0x2348DE308](v17, -1, -1);

      }
      else
      {

      }
      objc_msgSend(v13, sel_setSelectedIndex_, v9);
    }
    if ((sub_231328E8C((uint64_t)a1, v9) & 1) != 0)
    {
      if (qword_25415DF98 != -1)
        swift_once();
      v46 = sub_231413780();
      sub_2312CE3B8(v46, (uint64_t)qword_254162FF0);
      v47 = v4;
      v48 = a1;
      swift_bridgeObjectRetain_n();
      v49 = v47;
      v50 = v48;
      v51 = sub_231413768();
      v52 = sub_23141498C();
      if (os_log_type_enabled(v51, v52))
      {
        v53 = swift_slowAlloc();
        v84 = swift_slowAlloc();
        v86 = v84;
        *(_DWORD *)v53 = 136446978;
        swift_getObjectType();
        sub_2313290C8(0, &qword_255ECCFB0, &qword_255ECCFB8);
        v54 = sub_2314146E0();
        sub_23133180C(v54, v55, (uint64_t *)&v86);
        sub_231414CBC();

        swift_bridgeObjectRelease();
        *(_WORD *)(v53 + 12) = 2082;
        sub_23133180C(0xD000000000000026, 0x8000000231429D00, (uint64_t *)&v86);
        sub_231414CBC();
        *(_WORD *)(v53 + 22) = 2082;
        swift_getObjectType();
        sub_2313290C8(0, &qword_255ECCFC0, (unint64_t *)&unk_255ECF280);
        v56 = sub_2314146E0();
        sub_23133180C(v56, v57, (uint64_t *)&v86);
        sub_231414CBC();

        swift_bridgeObjectRelease();
        *(_WORD *)(v53 + 32) = 2082;
        v58 = sub_2312D3C68(0, (unint64_t *)&unk_255ECF280);
        v59 = sub_231412A90();
        v60 = MEMORY[0x2348DD18C](v59, v58);
        v62 = v61;
        swift_bridgeObjectRelease();
        sub_23133180C(v60, v62, (uint64_t *)&v86);
        sub_231414CBC();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2312C8000, v51, v52, "[%{public}s.%{public}s] %{public}s is the topmost VC. Presenting %{public}s ontop.", (uint8_t *)v53, 0x2Au);
        swift_arrayDestroy();
        MEMORY[0x2348DE308](v84, -1, -1);
        MEMORY[0x2348DE308](v53, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v76 = objc_msgSend(v49, sel_selectedViewController);
      if (v76)
      {
        v68 = v76;
        objc_opt_self();
        v77 = swift_dynamicCastObjCClass();
        if (v77)
        {
          v78 = (void *)v77;
          v79 = v68;
          v80 = objc_msgSend(v78, sel_viewControllers);
          sub_2312D3C68(0, (unint64_t *)&unk_255ECF280);
          v81 = sub_2314147A0();

          v86 = v81;
          sub_231412A90();
          sub_2313EBCC8(a2);
          v82 = (void *)sub_231414788();
          swift_bridgeObjectRelease();
          objc_msgSend(v78, sel_setViewControllers_animated_, v82, a3 & 1);

          return;
        }
        goto LABEL_30;
      }
    }
    else
    {
      if (qword_25415DF98 != -1)
        swift_once();
      v63 = sub_231413780();
      sub_2312CE3B8(v63, (uint64_t)qword_254162FF0);
      v64 = v4;
      v65 = a1;
      v66 = v64;
      v67 = v65;
      v68 = sub_231413768();
      v69 = sub_23141498C();
      if (os_log_type_enabled(v68, v69))
      {
        v70 = swift_slowAlloc();
        v71 = swift_slowAlloc();
        v86 = v71;
        *(_DWORD *)v70 = 136446722;
        swift_getObjectType();
        sub_2313290C8(0, &qword_255ECCFB0, &qword_255ECCFB8);
        v72 = sub_2314146E0();
        sub_23133180C(v72, v73, (uint64_t *)&v86);
        sub_231414CBC();

        swift_bridgeObjectRelease();
        *(_WORD *)(v70 + 12) = 2082;
        sub_23133180C(0xD000000000000026, 0x8000000231429D00, (uint64_t *)&v86);
        sub_231414CBC();
        *(_WORD *)(v70 + 22) = 2082;
        swift_getObjectType();
        sub_2313290C8(0, &qword_255ECCFC0, (unint64_t *)&unk_255ECF280);
        v74 = sub_2314146E0();
        sub_23133180C(v74, v75, (uint64_t *)&v86);
        sub_231414CBC();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2312C8000, v68, v69, "[%{public}s.%{public}s] %{public}s is not the topmost VC. We will not mess with the view hierarchy.", (uint8_t *)v70, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x2348DE308](v71, -1, -1);
        MEMORY[0x2348DE308](v70, -1, -1);
LABEL_30:

        return;
      }

    }
  }
}

void sub_231328348(void *a1, char a2)
{
  void *v2;
  id v5;
  char v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  id v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  id v46;
  void *v47;
  void *v48;
  id v49;
  uint64_t v50;

  v5 = sub_231328B78();
  if ((v6 & 1) != 0)
  {
    if (qword_25415DF98 != -1)
      swift_once();
    v20 = sub_231413780();
    sub_2312CE3B8(v20, (uint64_t)qword_254162FF0);
    v21 = v2;
    v22 = a1;
    v23 = v21;
    v24 = v22;
    v25 = sub_231413768();
    v26 = sub_23141498C();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = swift_slowAlloc();
      v28 = swift_slowAlloc();
      v50 = v28;
      *(_DWORD *)v27 = 136446722;
      swift_getObjectType();
      sub_2313290C8(0, &qword_255ECCFB0, &qword_255ECCFB8);
      v29 = sub_2314146E0();
      sub_23133180C(v29, v30, &v50);
      sub_231414CBC();

      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2082;
      sub_23133180C(0xD00000000000001CLL, 0x8000000231429CE0, &v50);
      sub_231414CBC();
      *(_WORD *)(v27 + 22) = 2082;
      swift_getObjectType();
      sub_2313290C8(0, &qword_255ECCFC0, (unint64_t *)&unk_255ECF280);
      v31 = sub_2314146E0();
      sub_23133180C(v31, v32, &v50);
      sub_231414CBC();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v25, v26, "[%{public}s.%{public}s] %{public}s not already presented. Presenting now.", (uint8_t *)v27, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v28, -1, -1);
      MEMORY[0x2348DE308](v27, -1, -1);

    }
    else
    {

    }
    v46 = objc_msgSend(v23, sel_selectedViewController);
    if (v46)
    {
      v47 = v46;
      objc_opt_self();
      v48 = (void *)swift_dynamicCastObjCClass();
      if (!v48)

    }
    else
    {
      v48 = 0;
    }
    objc_msgSend(v48, sel_pushViewController_animated_, v24, a2 & 1);

  }
  else
  {
    v7 = v5;
    if (objc_msgSend(v2, sel_selectedIndex) == v5)
    {
      if (qword_25415DF98 != -1)
        swift_once();
      v8 = sub_231413780();
      sub_2312CE3B8(v8, (uint64_t)qword_254162FF0);
      v9 = v2;
      v10 = a1;
      v49 = v9;
      v11 = v10;
      v12 = sub_231413768();
      v13 = sub_23141498C();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = swift_slowAlloc();
        v15 = swift_slowAlloc();
        v50 = v15;
        *(_DWORD *)v14 = 136446722;
        swift_getObjectType();
        sub_2313290C8(0, &qword_255ECCFB0, &qword_255ECCFB8);
        v16 = sub_2314146E0();
        sub_23133180C(v16, v17, &v50);
        sub_231414CBC();

        swift_bridgeObjectRelease();
        *(_WORD *)(v14 + 12) = 2082;
        sub_23133180C(0xD00000000000001CLL, 0x8000000231429CE0, &v50);
        sub_231414CBC();
        *(_WORD *)(v14 + 22) = 2082;
        swift_getObjectType();
        sub_2313290C8(0, &qword_255ECCFC0, (unint64_t *)&unk_255ECF280);
        v18 = sub_2314146E0();
        sub_23133180C(v18, v19, &v50);
        sub_231414CBC();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2312C8000, v12, v13, "[%{public}s.%{public}s] %{public}s already presented.", (uint8_t *)v14, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x2348DE308](v15, -1, -1);
        MEMORY[0x2348DE308](v14, -1, -1);

      }
      else
      {

      }
    }
    else
    {
      if (qword_25415DF98 != -1)
        swift_once();
      v33 = sub_231413780();
      sub_2312CE3B8(v33, (uint64_t)qword_254162FF0);
      v34 = v2;
      v35 = a1;
      v36 = v34;
      v37 = v35;
      v38 = sub_231413768();
      v39 = sub_23141498C();
      if (os_log_type_enabled(v38, v39))
      {
        v40 = swift_slowAlloc();
        v41 = swift_slowAlloc();
        v50 = v41;
        *(_DWORD *)v40 = 136446722;
        swift_getObjectType();
        sub_2313290C8(0, &qword_255ECCFB0, &qword_255ECCFB8);
        v42 = sub_2314146E0();
        sub_23133180C(v42, v43, &v50);
        sub_231414CBC();

        swift_bridgeObjectRelease();
        *(_WORD *)(v40 + 12) = 2082;
        sub_23133180C(0xD00000000000001CLL, 0x8000000231429CE0, &v50);
        sub_231414CBC();
        *(_WORD *)(v40 + 22) = 2082;
        swift_getObjectType();
        sub_2313290C8(0, &qword_255ECCFC0, (unint64_t *)&unk_255ECF280);
        v44 = sub_2314146E0();
        sub_23133180C(v44, v45, &v50);
        sub_231414CBC();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2312C8000, v38, v39, "[%{public}s.%{public}s] %{public}s already presented in a different tab. Switching to that tab.", (uint8_t *)v40, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x2348DE308](v41, -1, -1);
        MEMORY[0x2348DE308](v40, -1, -1);

      }
      else
      {

      }
      objc_msgSend(v36, sel_setSelectedIndex_, v7);
    }
  }
}

id sub_231328B78()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  id v5;
  char *v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  void *v21;

  v1 = objc_msgSend(v0, sel_viewControllers);
  if (v1)
  {
    sub_2312D3C68(0, (unint64_t *)&unk_255ECF280);
    v2 = sub_2314147A0();

    if (v2 >> 62)
      goto LABEL_39;
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
    {
LABEL_4:
      v4 = 0;
      v19 = v2;
      v20 = v2 & 0xC000000000000001;
      v16 = v2 + 32;
      v17 = v2 & 0xFFFFFFFFFFFFFF8;
      v18 = v3;
      do
      {
        if (v20)
        {
          v5 = (id)MEMORY[0x2348DD81C](v4, v2);
        }
        else
        {
          if (v4 >= *(_QWORD *)(v17 + 16))
            goto LABEL_38;
          v5 = *(id *)(v16 + 8 * v4);
        }
        v2 = (unint64_t)v5;
        v6 = (char *)(v4 + 1);
        if (__OFADD__(v4, 1))
          goto LABEL_36;
        v7 = objc_msgSend(v5, sel_childViewControllers);
        v8 = sub_2314147A0();

        v21 = (void *)v2;
        if (v8 >> 62)
        {
          sub_231412A90();
          v9 = sub_231414F08();
          swift_bridgeObjectRelease();
          if (!v9)
            goto LABEL_5;
        }
        else
        {
          v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (!v9)
            goto LABEL_5;
        }
        v2 = v8 & 0xC000000000000001;
        if ((v8 & 0xC000000000000001) != 0)
        {
          MEMORY[0x2348DD81C](0, v8);
          ObjectType = swift_getObjectType();
          v14 = swift_getObjectType();
          sub_2314130CC();
          if (ObjectType == v14)
            goto LABEL_31;
        }
        else
        {
          if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_37;
          ObjectType = swift_getObjectType();
          if (ObjectType == swift_getObjectType())
          {
LABEL_31:
            swift_bridgeObjectRelease();
            v1 = (id)v4;

            goto LABEL_41;
          }
        }
        if (v9 != 1)
        {
          v11 = 1;
          do
          {
            if (v2)
            {
              MEMORY[0x2348DD81C](v11, v8);
              if (__OFADD__(v11++, 1))
              {
                __break(1u);
LABEL_34:
                __break(1u);
LABEL_35:
                __break(1u);
LABEL_36:
                __break(1u);
LABEL_37:
                __break(1u);
LABEL_38:
                __break(1u);
LABEL_39:
                sub_231412A90();
                v3 = sub_231414F08();
                swift_bridgeObjectRelease();
                if (!v3)
                  goto LABEL_40;
                goto LABEL_4;
              }
              v13 = swift_getObjectType();
              sub_2314130CC();
              if (ObjectType == v13)
                goto LABEL_31;
            }
            else
            {
              if ((v11 & 0x8000000000000000) != 0)
                goto LABEL_34;
              if (v11 >= *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_35;
              if (ObjectType == swift_getObjectType())
                goto LABEL_31;
              ++v11;
            }
          }
          while (v11 != v9);
        }
LABEL_5:

        swift_bridgeObjectRelease();
        ++v4;
        v2 = v19;
      }
      while (v6 != (char *)v18);
    }
LABEL_40:
    v1 = 0;
LABEL_41:
    swift_bridgeObjectRelease();
  }
  return v1;
}

unint64_t sub_231328E8C(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  unint64_t result;
  void *v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t ObjectType;
  uint64_t v14;

  v3 = v2;
  result = (unint64_t)objc_msgSend(v3, sel_viewControllers);
  if (!result)
    return result;
  v6 = (void *)result;
  v7 = sub_2312D3C68(0, (unint64_t *)&unk_255ECF280);
  v8 = sub_2314147A0();

  if (a2 < 0)
    goto LABEL_17;
  if (!(v8 >> 62))
  {
    if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
      goto LABEL_5;
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_231412A90();
  v14 = sub_231414F08();
  swift_bridgeObjectRelease();
  if (v14 <= a2)
    goto LABEL_17;
LABEL_5:
  if ((v8 & 0xC000000000000001) != 0)
  {
    v9 = (id)MEMORY[0x2348DD81C](a2, v8);
  }
  else
  {
    if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10) <= (unint64_t)a2)
    {
      __break(1u);
      goto LABEL_22;
    }
    v9 = *(id *)(v8 + 8 * a2 + 32);
  }
  a2 = (uint64_t)v9;
  swift_bridgeObjectRelease();
  v10 = objc_msgSend((id)a2, sel_childViewControllers);
  v7 = sub_2314147A0();

  if (!(v7 >> 62))
  {
    v11 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v11)
      goto LABEL_10;
    goto LABEL_23;
  }
LABEL_22:
  sub_231412A90();
  v11 = sub_231414F08();
  swift_bridgeObjectRelease();
  if (!v11)
  {
LABEL_23:
    swift_bridgeObjectRelease();

    return 0;
  }
LABEL_10:
  result = v11 - 1;
  if (__OFSUB__(v11, 1))
  {
    __break(1u);
    goto LABEL_25;
  }
  if ((v7 & 0xC000000000000001) != 0)
  {
LABEL_25:
    MEMORY[0x2348DD81C](result, v7);
    swift_bridgeObjectRelease();

    ObjectType = swift_getObjectType();
    sub_2314130CC();
    return ObjectType == swift_getObjectType();
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(id *)(v7 + 8 * result + 32);
    swift_bridgeObjectRelease();

    ObjectType = swift_getObjectType();
    return ObjectType == swift_getObjectType();
  }
  __break(1u);
  return result;
}

uint64_t sub_2313290C8(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    sub_2312D3C68(255, a3);
    result = swift_getMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

id sub_231329108()
{
  char *v0;
  objc_super v2;

  objc_msgSend(*(id *)(*sub_2312CEA5C(&v0[OBJC_IVAR____TtC5Heart36BradycardiaAdvertisableFeatureSource_heartSettingsUtilityProvider], *(_QWORD *)&v0[OBJC_IVAR____TtC5Heart36BradycardiaAdvertisableFeatureSource_heartSettingsUtilityProvider+ 24])+ 16), sel_removeHeartRhythmAvailabilityObserver_, v0);
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BradycardiaAdvertisableFeatureSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_231329260()
{
  return type metadata accessor for BradycardiaAdvertisableFeatureSource();
}

uint64_t type metadata accessor for BradycardiaAdvertisableFeatureSource()
{
  uint64_t result;

  result = qword_255ECD008;
  if (!qword_255ECD008)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2313292A4()
{
  void *v0;
  id v1;
  void *v2;
  id v3;

  if (qword_25415E610 != -1)
    swift_once();
  v0 = (void *)qword_254163058;
  sub_231411374();
  sub_231411374();
  v1 = v0;
  v2 = (void *)sub_23141468C();
  v3 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v2, v1, 0xE000000000000000);

  return sub_231411F5C();
}

uint64_t sub_231329414(uint64_t a1, uint64_t a2)
{
  return sub_2313294B8(a1, a2, (uint64_t)&unk_250022A90, (uint64_t)sub_23132ACDC, (uint64_t)&unk_250022AA8);
}

void sub_231329430(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v5 = a1 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x2348DE3BC](v5);
  if (v6)
  {
    v7 = (void *)v6;
    sub_231329B7C(a2, a3);

  }
}

uint64_t sub_23132949C(uint64_t a1, uint64_t a2)
{
  return sub_2313294B8(a1, a2, (uint64_t)&unk_250022A40, (uint64_t)sub_23132ACA0, (uint64_t)&unk_250022A58);
}

uint64_t sub_2313294B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v20 = a5;
  v9 = sub_231414500();
  v23 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_231414524();
  v12 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)(v5 + OBJC_IVAR____TtC5Heart36BradycardiaAdvertisableFeatureSource_queue);
  v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v15;
  v16[3] = a1;
  v16[4] = a2;
  aBlock[4] = a4;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23130DCCC;
  aBlock[3] = v20;
  v17 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_231414518();
  v24 = MEMORY[0x24BEE4AF8];
  sub_2312CCC24((unint64_t *)&qword_25415DE48, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_23132AAF4();
  sub_2312CCC24((unint64_t *)&qword_25415DE78, (uint64_t (*)(uint64_t))sub_23132AAF4, MEMORY[0x24BEE12C8]);
  sub_231414D1C();
  MEMORY[0x2348DD48C](0, v14, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v22);
  swift_release();
  return swift_release();
}

void sub_2313296E8(uint64_t a1, void (*a2)(char *))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  sub_23132ABE0(0, (unint64_t *)&qword_255ECACA8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - v5;
  swift_beginAccess();
  v7 = MEMORY[0x2348DE3BC](a1 + 16);
  if (v7)
  {
    v8 = (void *)v7;
    sub_231411E78();
    sub_2312CCC24(&qword_255ECACB0, (uint64_t (*)(uint64_t))MEMORY[0x24BE417D0], MEMORY[0x24BE417E0]);
    sub_231415154();
    a2(v6);
    sub_23132AC60((uint64_t)v6, (unint64_t *)&qword_255ECACA8);

  }
}

uint64_t sub_2313297EC(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v7 = sub_231414500();
  v19 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_231414524();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Heart36BradycardiaAdvertisableFeatureSource_queue);
  v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v14;
  *(_BYTE *)(v15 + 24) = a1;
  *(_QWORD *)(v15 + 32) = a2;
  *(_QWORD *)(v15 + 40) = a3;
  aBlock[4] = sub_23132ABD0;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23130DCCC;
  aBlock[3] = &unk_250022A08;
  v16 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_231414518();
  v20 = MEMORY[0x24BEE4AF8];
  sub_2312CCC24((unint64_t *)&qword_25415DE48, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_23132AAF4();
  sub_2312CCC24((unint64_t *)&qword_25415DE78, (uint64_t (*)(uint64_t))sub_23132AAF4, MEMORY[0x24BEE12C8]);
  sub_231414D1C();
  MEMORY[0x2348DD48C](0, v13, v9, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  swift_release();
  return swift_release();
}

void sub_231329A28(uint64_t a1, char a2, void (*a3)(char *))
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;

  sub_23132ABE0(0, (unint64_t *)&qword_255ECACA8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v12 - v7;
  swift_beginAccess();
  v9 = MEMORY[0x2348DE3BC](a1 + 16);
  if (v9)
  {
    v10 = (void *)v9;
    if ((a2 & 1) != 0)
    {
      objc_msgSend((id)objc_opt_self(), sel_bradycardiaThresholdHeartRate);
      v11 = (void *)sub_2314148E4();
    }
    else
    {
      v11 = 0;
    }
    objc_msgSend((id)objc_opt_self(), sel_setBradycardiaThresholdHeartRate_, v11);
    sub_231411E78();
    sub_2312CCC24(&qword_255ECACB0, (uint64_t (*)(uint64_t))MEMORY[0x24BE417D0], MEMORY[0x24BE417E0]);
    sub_231415154();
    a3(v8);

    sub_23132AC60((uint64_t)v8, (unint64_t *)&qword_255ECACA8);
  }
}

uint64_t sub_231329B7C(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  void *v24;
  void *v25;
  id v26;
  void *v27;
  unsigned int v28;
  void *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  unsigned __int8 v35;
  char *v36;
  NSObject *v37;
  os_log_type_t v38;
  _BOOL4 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  const char *v59;
  uint64_t v60;
  unint64_t v61;
  void (*v62)(uint64_t);
  char *v64;
  char *v65;
  char *v66;
  uint64_t ObjectType;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  uint64_t v72;
  void (*v73)(uint64_t);
  uint64_t v74;
  uint64_t v75;

  v72 = a2;
  v73 = a1;
  ObjectType = swift_getObjectType();
  v3 = sub_231413780();
  v4 = *(_QWORD *)(v3 - 8);
  v68 = v3;
  v69 = v4;
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v66 = (char *)&v64 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v64 = (char *)&v64 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v65 = (char *)&v64 - v12;
  sub_23132ABE0(0, &qword_255ECD018);
  v70 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v71 = (char *)&v64 - v14;
  v15 = sub_231411608();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_231411644();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = (_QWORD *)(v2 + OBJC_IVAR____TtC5Heart36BradycardiaAdvertisableFeatureSource_heartSettingsUtilityProvider);
  sub_2312CEA5C((_QWORD *)(v2 + OBJC_IVAR____TtC5Heart36BradycardiaAdvertisableFeatureSource_heartSettingsUtilityProvider), *(_QWORD *)(v2 + OBJC_IVAR____TtC5Heart36BradycardiaAdvertisableFeatureSource_heartSettingsUtilityProvider + 24));
  sub_2313AD4F4();
  if (!v24)
    goto LABEL_9;
  v25 = v24;
  v26 = HKNRDeviceCapabilityHeartRateV2();
  sub_23141162C();

  v27 = (void *)sub_231411620();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  v28 = objc_msgSend(v25, sel_supportsCapability_, v27);

  if (!v28)
  {
LABEL_9:
    sub_231413744();
    v46 = sub_231413768();
    v47 = sub_23141498C();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = swift_slowAlloc();
      v49 = swift_slowAlloc();
      v75 = v49;
      *(_DWORD *)v48 = 136315394;
      v50 = sub_2314151A8();
      v74 = sub_23133180C(v50, v51, &v75);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v48 + 12) = 2080;
      v74 = sub_23133180C(0xD00000000000002BLL, 0x8000000231429D90, &v75);
      sub_231414CBC();
      _os_log_impl(&dword_2312C8000, v46, v47, "[%s] %s -> false: heart rate motion context not supported on active watch", (uint8_t *)v48, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v49, -1, -1);
      MEMORY[0x2348DE308](v48, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v69 + 8))(v7, v68);
    goto LABEL_19;
  }
  v29 = (void *)objc_opt_self();
  if (objc_msgSend(v29, sel_isBackgroundHeartRateEnabled))
  {
    v30 = *sub_2312CEA5C(v23, v23[3]);
    sub_2313AD4F4();
    if (v31)
    {
      v32 = v31;
      v33 = *(void **)(v30 + 16);
      sub_2314115FC();
      v34 = (void *)sub_2314115C0();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      v35 = objc_msgSend(v33, sel_isHeartAgeGatingEnabledOnWatch_currentDate_, v32, v34);

      if ((v35 & 1) != 0)
      {
        v36 = v64;
        sub_231413744();
        v37 = sub_231413768();
        v38 = sub_23141498C();
        v39 = os_log_type_enabled(v37, v38);
        v40 = v68;
        if (v39)
        {
          v41 = swift_slowAlloc();
          v42 = swift_slowAlloc();
          v75 = v42;
          *(_DWORD *)v41 = 136315394;
          v43 = sub_2314151A8();
          v74 = sub_23133180C(v43, v44, &v75);
          sub_231414CBC();
          swift_bridgeObjectRelease();
          *(_WORD *)(v41 + 12) = 2080;
          v74 = sub_23133180C(0xD00000000000002BLL, 0x8000000231429D90, &v75);
          sub_231414CBC();
          _os_log_impl(&dword_2312C8000, v37, v38, "[%s] %s -> false: heart age gating enabled on active watch", (uint8_t *)v41, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x2348DE308](v42, -1, -1);
          MEMORY[0x2348DE308](v41, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v69 + 8))(v36, v40);
        v45 = (uint64_t)v71;
        *v71 = 0;
        goto LABEL_22;
      }
    }
    if ((objc_msgSend(v29, sel_isBradycardiaDetectionEnabled) & 1) == 0)
    {
      v45 = (uint64_t)v71;
      *v71 = 1;
LABEL_22:
      v62 = v73;
      goto LABEL_20;
    }
    v52 = v65;
    sub_231413744();
    v53 = sub_231413768();
    v54 = sub_23141498C();
    if (!os_log_type_enabled(v53, v54))
      goto LABEL_18;
    v55 = swift_slowAlloc();
    v56 = swift_slowAlloc();
    v75 = v56;
    *(_DWORD *)v55 = 136315394;
    v60 = sub_2314151A8();
    v74 = sub_23133180C(v60, v61, &v75);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v55 + 12) = 2080;
    v74 = sub_23133180C(0xD00000000000002BLL, 0x8000000231429D90, &v75);
    sub_231414CBC();
    v59 = "[%s] %s -> false: detection already enabled";
    goto LABEL_17;
  }
  v52 = v66;
  sub_231413744();
  v53 = sub_231413768();
  v54 = sub_23141498C();
  if (os_log_type_enabled(v53, v54))
  {
    v55 = swift_slowAlloc();
    v56 = swift_slowAlloc();
    v75 = v56;
    *(_DWORD *)v55 = 136315394;
    v57 = sub_2314151A8();
    v74 = sub_23133180C(v57, v58, &v75);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v55 + 12) = 2080;
    v74 = sub_23133180C(0xD00000000000002BLL, 0x8000000231429D90, &v75);
    sub_231414CBC();
    v59 = "[%s] %s -> false: background heart rate not enabled";
LABEL_17:
    _os_log_impl(&dword_2312C8000, v53, v54, v59, (uint8_t *)v55, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v56, -1, -1);
    MEMORY[0x2348DE308](v55, -1, -1);
  }
LABEL_18:

  (*(void (**)(char *, uint64_t))(v69 + 8))(v52, v68);
LABEL_19:
  v62 = v73;
  v45 = (uint64_t)v71;
  *v71 = 0;
LABEL_20:
  swift_storeEnumTagMultiPayload();
  v62(v45);
  return sub_23132AC60(v45, &qword_255ECD018);
}

uint64_t sub_23132A3F4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_231411D28();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23132A484@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC5Heart36BradycardiaAdvertisableFeatureSource_identifier;
  v4 = sub_231411D28();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23132A4C8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC5Heart36BradycardiaAdvertisableFeatureSource_delegate;
  swift_beginAccess();
  return MEMORY[0x2348DE3BC](v1);
}

uint64_t sub_23132A514(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC5Heart36BradycardiaAdvertisableFeatureSource_delegate;
  swift_beginAccess();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return sub_2314130CC();
}

void (*sub_23132A57C(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC5Heart36BradycardiaAdvertisableFeatureSource_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x2348DE3BC](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_231308278;
}

uint64_t sub_23132A5F0()
{
  return sub_2313292A4();
}

uint64_t sub_23132A610()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23132A61C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  _QWORD v14[2];
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_231414500();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_231414524();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Heart36BradycardiaAdvertisableFeatureSource_queue);
  v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_23132AAD4;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23130DCCC;
  aBlock[3] = &unk_2500229B8;
  v12 = _Block_copy(aBlock);
  swift_retain();
  sub_231414518();
  v14[1] = MEMORY[0x24BEE4AF8];
  sub_2312CCC24((unint64_t *)&qword_25415DE48, v3, MEMORY[0x24BEE5468]);
  sub_23132AAF4();
  sub_2312CCC24((unint64_t *)&qword_25415DE78, (uint64_t (*)(uint64_t))sub_23132AAF4, MEMORY[0x24BEE12C8]);
  sub_231414D1C();
  MEMORY[0x2348DD48C](0, v10, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  return swift_release();
}

uint64_t sub_23132A824(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  void *v4;

  v2 = a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x2348DE3BC](v2);
  if (result)
  {
    v4 = (void *)result;
    swift_retain();
    sub_231329B7C(sub_23132AB48, a1);

    return swift_release();
  }
  return result;
}

void sub_23132A894(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  char *v10;
  _BYTE v11[24];

  sub_23132ABE0(0, &qword_255ECD018);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v11[-v5];
  swift_beginAccess();
  v7 = MEMORY[0x2348DE3BC](a2 + 16);
  if (v7)
  {
    v8 = (char *)v7;
    sub_23132AB50(a1, (uint64_t)v6);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23132AC60((uint64_t)v6, &qword_255ECD018);
      v9 = &v8[OBJC_IVAR____TtC5Heart36BradycardiaAdvertisableFeatureSource_delegate];
      swift_beginAccess();
      if (MEMORY[0x2348DE3BC](v9))
      {
LABEL_4:
        swift_getObjectType();
        sub_2312CCC24(&qword_255ECD020, (uint64_t (*)(uint64_t))type metadata accessor for BradycardiaAdvertisableFeatureSource, (uint64_t)&unk_23141B3A8);
        sub_231411F68();

        sub_2314130CC();
        return;
      }
    }
    else
    {
      v10 = &v8[OBJC_IVAR____TtC5Heart36BradycardiaAdvertisableFeatureSource_delegate];
      swift_beginAccess();
      if (MEMORY[0x2348DE3BC](v10))
        goto LABEL_4;
    }

  }
}

uint64_t sub_23132AAB0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23132AAD4()
{
  uint64_t v0;

  return sub_23132A824(v0);
}

uint64_t sub_23132AADC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23132AAEC()
{
  return swift_release();
}

void sub_23132AAF4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415DE70)
  {
    sub_231414500();
    v0 = sub_2314147F4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415DE70);
  }
}

void sub_23132AB48(uint64_t a1)
{
  uint64_t v1;

  sub_23132A894(a1, v1);
}

uint64_t sub_23132AB50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23132ABE0(0, &qword_255ECD018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23132ABA4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23132ABD0()
{
  uint64_t v0;

  sub_231329A28(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(void (**)(char *))(v0 + 32));
}

void sub_23132ABE0(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    sub_231411E78();
    sub_2312CCC24(&qword_255ECACB0, (uint64_t (*)(uint64_t))MEMORY[0x24BE417D0], MEMORY[0x24BE417E0]);
    v3 = sub_231415160();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_23132AC60(uint64_t a1, unint64_t *a2)
{
  uint64_t v3;

  sub_23132ABE0(0, a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_23132ACA0()
{
  uint64_t v0;

  sub_2313296E8(*(_QWORD *)(v0 + 16), *(void (**)(char *))(v0 + 24));
}

uint64_t sub_23132ACB0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23132ACDC()
{
  uint64_t v0;

  sub_231329430(*(_QWORD *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t HKHRAFibBurdenLoggingCategory.rawString.getter(uint64_t a1)
{
  uint64_t result;

  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      result = sub_231414734();
      break;
    default:
      result = 0;
      break;
  }
  return result;
}

void *static HKHRAFibBurdenLoggingCategory.allCases.getter()
{
  return &unk_25001EE88;
}

unint64_t sub_23132AD8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25415BB10;
  if (!qword_25415BB10)
  {
    sub_23132ADD4();
    result = MEMORY[0x2348DE248](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_25415BB10);
  }
  return result;
}

void sub_23132ADD4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415BB08)
  {
    type metadata accessor for HKHRAFibBurdenLoggingCategory(255);
    v0 = sub_2314147F4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415BB08);
  }
}

void sub_23132AE28(_QWORD *a1@<X8>)
{
  *a1 = &unk_25001EED0;
}

uint64_t sub_23132AE38()
{
  _QWORD *v0;
  uint64_t result;

  switch(*v0)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      result = sub_231414734();
      break;
    default:
      result = 0;
      break;
  }
  return result;
}

void sub_23132AEBC()
{
  id v0;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16F0]), sel_init);
  objc_msgSend(v0, sel_setNumberStyle_, 0);
  objc_msgSend(v0, sel_setRoundingMode_, 6);
  objc_msgSend(v0, sel_setMaximumFractionDigits_, 0);

  qword_255ED2BE0 = (uint64_t)v0;
}

uint64_t sub_23132AF38()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;

  v1 = (void *)sub_231414848();
  v2 = objc_msgSend(v0, sel_stringFromNumber_, v1);

  if (v2)
  {
    v3 = sub_2314146BC();

    return v3;
  }
  else
  {
    if (qword_25415DF98 != -1)
      swift_once();
    v5 = sub_231413780();
    sub_2312CE3B8(v5, (uint64_t)qword_254162FF0);
    v6 = v0;
    v7 = sub_231413768();
    v8 = sub_231414980();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = swift_slowAlloc();
      v10 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v9 = 134218242;
      sub_231414CBC();
      *(_WORD *)(v9 + 12) = 2112;
      v11 = v6;
      sub_231414CBC();
      *v10 = v6;

      _os_log_impl(&dword_2312C8000, v7, v8, "Unable to format double %f using %@.", (uint8_t *)v9, 0x16u);
      sub_231327294();
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v10, -1, -1);
      MEMORY[0x2348DE308](v9, -1, -1);

    }
    else
    {

    }
    return sub_231414854();
  }
}

uint64_t sub_23132B144()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;

  v1 = (void *)sub_2314148E4();
  v2 = objc_msgSend(v0, sel_stringFromNumber_, v1);

  if (v2)
  {
    v3 = sub_2314146BC();

    return v3;
  }
  else
  {
    if (qword_25415DF98 != -1)
      swift_once();
    v5 = sub_231413780();
    sub_2312CE3B8(v5, (uint64_t)qword_254162FF0);
    v6 = v0;
    v7 = sub_231413768();
    v8 = sub_231414980();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = swift_slowAlloc();
      v10 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v9 = 134218242;
      sub_231414CBC();
      *(_WORD *)(v9 + 12) = 2112;
      v11 = v6;
      sub_231414CBC();
      *v10 = v6;

      _os_log_impl(&dword_2312C8000, v7, v8, "Unable to format int %ld using %@.", (uint8_t *)v9, 0x16u);
      sub_231327294();
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v10, -1, -1);
      MEMORY[0x2348DE308](v9, -1, -1);

    }
    else
    {

    }
    return sub_231415040();
  }
}

unint64_t sub_23132B35C()
{
  unint64_t result;

  result = qword_25415BD30;
  if (!qword_25415BD30)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25415BD30);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ConfirmDetailsModel.Row.HealthDetail(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CardioFitnessOnboardingStage(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23132B474 + 4 * byte_23141B4C5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23132B4A8 + 4 * byte_23141B4C0[v4]))();
}

uint64_t sub_23132B4A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23132B4B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23132B4B8);
  return result;
}

uint64_t sub_23132B4C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23132B4CCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23132B4D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23132B4D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessOnboardingStage()
{
  return &type metadata for CardioFitnessOnboardingStage;
}

unint64_t sub_23132B4F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ECD028;
  if (!qword_255ECD028)
  {
    sub_23132B540();
    result = MEMORY[0x2348DE248](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_255ECD028);
  }
  return result;
}

void sub_23132B540()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECD030)
  {
    v0 = sub_2314147F4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECD030);
  }
}

void sub_23132B594(_QWORD *a1@<X8>)
{
  *a1 = &unk_25001EF18;
}

unint64_t sub_23132B5A8()
{
  unint64_t result;

  result = qword_255ECD038;
  if (!qword_255ECD038)
  {
    result = MEMORY[0x2348DE248](&unk_23141B568, &type metadata for CardioFitnessOnboardingStage);
    atomic_store(result, (unint64_t *)&qword_255ECD038);
  }
  return result;
}

uint64_t sub_23132B5EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 24);
  v1 = v0 + OBJC_IVAR____TtCC5Heart27RelatedSampleTypesGenerator11Environment_logger;
  v2 = sub_231413780();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_23132B64C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(void);
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  void *v13;
  unint64_t v14;
  id v15;
  unint64_t v16;
  _QWORD v18[2];
  unint64_t v19;

  v18[1] = a1;
  v2 = sub_2314119E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = sub_2314118FC();
  v6 = MEMORY[0x24BEE3598];
  sub_2312D6DD8(0, (unint64_t *)&qword_25415DF20, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v7 = sub_231411890();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_231416A30;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v8 + 104))(v10 + v9, *MEMORY[0x24BE47488], v7);
  sub_2312FC108(v10);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v11 = *(_QWORD *)(v1 + 8);
  sub_2312CF374(0, (unint64_t *)&qword_25415BD40, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))v6);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_231417F90;
  v13 = *(void **)v1;
  *(_QWORD *)(inited + 32) = *(_QWORD *)v1;
  v19 = inited;
  sub_2314147B8();
  v14 = v19;
  sub_231412A90();
  v15 = v13;
  v16 = sub_2313715B8(v14, v11);
  swift_bridgeObjectRelease();
  sub_231403254(v16);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BE47910], v2);
  return sub_2314119F8();
}

uint64_t sub_23132B844(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  char v37;
  void *v38;
  void *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t result;
  void (*v55)(__int128 *, _QWORD);
  _QWORD *v56;
  uint64_t (*v57)(void);
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  id v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  __int128 v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  _QWORD *v108;
  __int128 v109;

  v103 = a2;
  v3 = sub_231414920();
  v100 = *(_QWORD *)(v3 - 8);
  v101 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v99 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23132DB58(0, &qword_255ECD108, (void (*)(uint64_t))sub_23132DAF4);
  v97 = *(_QWORD *)(v5 - 8);
  v98 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v96 = (char *)&v74 - v6;
  sub_23132DB58(0, &qword_255ECD120, (void (*)(uint64_t))type metadata accessor for RelatedSampleTypesGenerator.SampleTypeDetails);
  v94 = *(_QWORD *)(v7 - 8);
  v95 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v74 - v8;
  sub_23132DC04(0);
  v76 = v10;
  v75 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v74 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312EDFDC(0, &qword_255ECD140, v12, sub_23132DCB0, MEMORY[0x24BDB98D0]);
  v84 = v13;
  v81 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v78 = (char *)&v74 - v14;
  sub_23132DCCC();
  v85 = v15;
  v83 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v80 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312EDFDC(0, &qword_255ECD160, v17, sub_23132DDE4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB9598]);
  v82 = v18;
  v79 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v77 = (char *)&v74 - v19;
  v20 = *(_QWORD *)(a1 + 8);
  v21 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v93 = v20 & 0xC000000000000001;
  v86 = a1;
  if ((v20 & 0xC000000000000001) != 0)
  {
    v22 = v20 & 0xFFFFFFFFFFFFFF8;
    sub_231412A90();
    v23 = sub_231414D7C();
    if (!v23)
      goto LABEL_18;
    v24 = v23;
    v108 = v21;
    v21 = &v108;
    sub_231414EA8();
    v105 = sub_231414D40();
    v106 = v25;
    v107 = 1;
    if ((v24 & 0x8000000000000000) == 0)
      goto LABEL_7;
    __break(1u);
  }
  v24 = *(_QWORD *)(v20 + 16);
  sub_231412A90();
  if (!v24)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    v56 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_19:
    *(_QWORD *)&v104 = v56;
    sub_23132DC28();
    v57 = MEMORY[0x24BEE1250];
    sub_2312D6DD8(0, &qword_255ECD180, (uint64_t (*)(uint64_t))sub_23132DC28, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_23132DC94();
    sub_23132DF80();
    v58 = v74;
    sub_231413CF0();
    sub_23132DCB0();
    v59 = v78;
    v60 = v76;
    sub_231413F18();
    (*(void (**)(char *, uint64_t))(v75 + 8))(v58, v60);
    v61 = v86;
    v62 = *(void **)v86;
    v104 = *(_OWORD *)(v86 + 16);
    v63 = swift_allocObject();
    *(_QWORD *)(v63 + 16) = v102;
    v64 = *(_OWORD *)(v61 + 16);
    *(_OWORD *)(v63 + 24) = *(_OWORD *)v61;
    *(_OWORD *)(v63 + 40) = v64;
    v65 = *(_QWORD *)(v61 + 32);
    v66 = v103;
    *(_QWORD *)(v63 + 56) = v65;
    *(_QWORD *)(v63 + 64) = v66;
    sub_231412A90();
    v67 = v62;
    sub_2312E3A64((uint64_t)&v104);
    sub_2312CF374(0, (unint64_t *)&qword_25415DE58, MEMORY[0x24BE47F58], (uint64_t (*)(_QWORD, uint64_t))v57);
    sub_23132DD7C();
    swift_retain();
    v68 = v80;
    v69 = v84;
    sub_231413F00();
    swift_release();
    (*(void (**)(char *, uint64_t))(v81 + 8))(v59, v69);
    v105 = MEMORY[0x24BEE4AF8];
    sub_23132DDE4();
    v70 = v77;
    v71 = v85;
    sub_231413EA0();
    (*(void (**)(char *, uint64_t))(v83 + 8))(v68, v71);
    sub_23132E03C();
    v72 = v82;
    v73 = sub_231413E7C();
    (*(void (**)(char *, uint64_t))(v79 + 8))(v70, v72);
    return v73;
  }
  v108 = v21;
  sub_231414EA8();
  v105 = sub_23132D788(v20);
  v106 = v26;
  v107 = v27 & 1;
  v22 = v20 & 0xFFFFFFFFFFFFFF8;
LABEL_7:
  v92 = (id)objc_opt_self();
  if (v20 < 0)
    v28 = v20;
  else
    v28 = v22;
  v87 = v28;
  v91 = *(id *)a1;
  v109 = *(_OWORD *)(a1 + 16);
  v90 = *(_QWORD *)(v103 + 16);
  v89 = MEMORY[0x24BEE4AD0] + 8;
  v88 = xmmword_231417F90;
  while (1)
  {
    while (1)
    {
      sub_23132D520(v105, v106, v107, v20);
      v39 = v38;
      sub_2312CF374(0, (unint64_t *)&qword_25415BD40, v89, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
      v40 = swift_allocObject();
      *(_OWORD *)(v40 + 16) = v88;
      *(_QWORD *)(v40 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3E98]), sel_initWithSampleType_predicate_, v39, 0);
      *(_QWORD *)&v104 = v40;
      sub_2314147B8();
      v41 = objc_msgSend(v92, sel_sortDescriptorsForMostRecentSamples);
      sub_2312D3C68(0, (unint64_t *)&qword_255ECE920);
      sub_2314147A0();

      v42 = v20;
      v43 = v99;
      sub_23141492C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23132DAF4();
      sub_2312CCC24(&qword_255ECD118, (uint64_t (*)(uint64_t))MEMORY[0x24BE459E0], MEMORY[0x24BE459D8]);
      v44 = v96;
      v45 = v101;
      sub_231413EB8();
      v46 = v43;
      v20 = v42;
      (*(void (**)(char *, uint64_t))(v100 + 8))(v46, v45);
      v47 = swift_allocObject();
      v48 = v102;
      *(_QWORD *)(v47 + 16) = v103;
      *(_QWORD *)(v47 + 24) = v48;
      v49 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)(v47 + 32) = *(_OWORD *)a1;
      *(_OWORD *)(v47 + 48) = v49;
      *(_QWORD *)(v47 + 64) = *(_QWORD *)(a1 + 32);
      *(_QWORD *)(v47 + 72) = v39;
      sub_231412A90();
      swift_retain();
      v50 = v91;
      sub_2312E3A64((uint64_t)&v109);
      type metadata accessor for RelatedSampleTypesGenerator.SampleTypeDetails(0);
      v51 = v39;
      v52 = v98;
      sub_231413C54();
      swift_release();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v44, v52);
      sub_23132DE54();
      v53 = v95;
      sub_231413E7C();
      (*(void (**)(char *, uint64_t))(v94 + 8))(v9, v53);

      sub_231414E90();
      sub_231414EB4();
      sub_231414EC0();
      result = sub_231414E9C();
      if (v93)
        break;
      v29 = v105;
      v30 = v106;
      v31 = v107;
      v32 = sub_23132D43C(v105, v106, v107, v42);
      v34 = v33;
      v36 = v35;
      sub_23132DF74(v29, v30, v31);
      v105 = v32;
      v106 = v34;
      v37 = v36 & 1;
      v20 = v42;
      a1 = v86;
      v107 = v37;
      if (!--v24)
        goto LABEL_17;
    }
    if ((v107 & 1) == 0)
      break;
    if (sub_231414D58())
      swift_isUniquelyReferenced_nonNull_native();
    sub_23132DEAC();
    v55 = (void (*)(__int128 *, _QWORD))sub_2314148C0();
    sub_231414DAC();
    v55(&v104, 0);
    if (!--v24)
    {
LABEL_17:
      sub_23132DF74(v105, v106, v107);
      v56 = v108;
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_23132C16C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  void *v32;
  id v33;
  unint64_t v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char *v43;
  void *v44;
  id v45;
  id v46;
  NSObject *v47;
  os_log_type_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t);
  void (*v64)(char *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  __int128 v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD v84[2];
  uint64_t v85;

  v78 = a5;
  v79 = a4;
  sub_2312D6DD8(0, (unint64_t *)&unk_25415D510, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v9);
  v80 = (uint64_t)&v65 - v10;
  v11 = sub_2314119B0();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v65 - v16;
  v18 = sub_23132E0A4(*a1);
  v81 = a3;
  sub_23132C8B8(a3, v18, (uint64_t)v17);
  result = swift_bridgeObjectRelease();
  if (!v5)
  {
    v70 = a2;
    v73 = v15;
    v75 = 0;
    sub_2312D6DD8(0, &qword_255ECAC80, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v20 = *(_QWORD *)(v12 + 72);
    v21 = *(unsigned __int8 *)(v12 + 80);
    v22 = (v21 + 32) & ~v21;
    v72 = v23;
    v68 = v21 | 7;
    v69 = v22 + v20;
    v24 = swift_allocObject();
    v77 = xmmword_231416A30;
    *(_OWORD *)(v24 + 16) = xmmword_231416A30;
    v74 = v24;
    v71 = v22;
    v67 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 16);
    v67(v24 + v22, v17, v11);
    v25 = sub_2312CEA5C((_QWORD *)(v79 + 24), *(_QWORD *)(v79 + 48));
    v27 = *(_QWORD *)(v81 + 16);
    v26 = *(_QWORD *)(v81 + 24);
    sub_2312CEA5C(v25, v25[3]);
    v28 = v80;
    v66 = v27;
    v29 = v26;
    sub_2314119D4();
    v30 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v28, 1, v11);
    v31 = v11;
    v76 = v17;
    if (v30 == 1)
    {
      sub_23132E378(v80);
      v32 = *(void **)v81;
      v85 = *(_QWORD *)(v81 + 8);
      v33 = v32;
      sub_2312D0F3C((uint64_t)&v85);
      v34 = v29;
      sub_231412A90();
      v35 = v33;
      sub_2312D0F3C((uint64_t)&v85);
      sub_231412A90();
      v36 = sub_231413768();
      v37 = sub_23141495C();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = swift_slowAlloc();
        v39 = swift_slowAlloc();
        v80 = v39;
        *(_DWORD *)v38 = 136446466;
        v81 = v11;
        v82 = v70;
        v83 = v39;
        sub_23132E3F4();
        v40 = sub_2314146E0();
        v82 = sub_23133180C(v40, v41, &v83);
        sub_231414CBC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v38 + 12) = 2082;
        sub_231412A90();
        v82 = sub_23133180C(v66, v34, &v83);
        v31 = v81;
        sub_231414CBC();

        swift_bridgeObjectRelease();
        sub_23132E3CC((uint64_t)&v85);

        swift_bridgeObjectRelease();
        sub_23132E3CC((uint64_t)&v85);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2312C8000, v36, v37, "[%{public}s(%{public}s)]: No previous feed item found, adding new feed item.", (uint8_t *)v38, 0x16u);
        v42 = v80;
        swift_arrayDestroy();
        MEMORY[0x2348DE308](v42, -1, -1);
        MEMORY[0x2348DE308](v38, -1, -1);

      }
      else
      {

        sub_23132E3CC((uint64_t)&v85);
        swift_bridgeObjectRelease();
        sub_23132E3CC((uint64_t)&v85);
        swift_bridgeObjectRelease();
      }
      v56 = v78;
      v57 = v74;
      sub_2312CF374(0, &qword_25415BBD8, MEMORY[0x24BE47F58], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
      v58 = swift_allocObject();
      *(_OWORD *)(v58 + 16) = v77;
      *(_QWORD *)(v58 + 32) = v57;
      *(_QWORD *)(v58 + 40) = 0;
      *(_QWORD *)(v58 + 48) = 0;
      *(_QWORD *)(v58 + 56) = 0;
      *(_BYTE *)(v58 + 64) = 0;
      result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v76, v31);
    }
    else
    {
      v43 = v73;
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v73, v80, v31);
      v44 = *(void **)v81;
      v84[0] = *(_QWORD *)(v81 + 8);
      sub_231412A90();
      v45 = v44;
      sub_2312D0F3C((uint64_t)v84);
      sub_231412A90();
      v46 = v45;
      sub_2312D0F3C((uint64_t)v84);
      v47 = sub_231413768();
      v48 = sub_23141495C();
      v49 = v48;
      if (os_log_type_enabled(v47, v48))
      {
        v50 = swift_slowAlloc();
        LODWORD(v79) = v49;
        v51 = v50;
        v52 = swift_slowAlloc();
        v80 = v52;
        *(_DWORD *)v51 = 136446466;
        v81 = v31;
        v82 = v70;
        v83 = v52;
        sub_23132E3F4();
        v53 = sub_2314146E0();
        v82 = sub_23133180C(v53, v54, &v83);
        sub_231414CBC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v51 + 12) = 2082;
        sub_231412A90();
        v82 = sub_23133180C(v66, v29, &v83);
        v31 = v81;
        v43 = v73;
        sub_231414CBC();

        swift_bridgeObjectRelease();
        sub_23132E3CC((uint64_t)v84);

        swift_bridgeObjectRelease();
        sub_23132E3CC((uint64_t)v84);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2312C8000, v47, (os_log_type_t)v79, "[%{public}s(%{public}s)]: Previous feed item found, returning changes", (uint8_t *)v51, 0x16u);
        v55 = v80;
        swift_arrayDestroy();
        MEMORY[0x2348DE308](v55, -1, -1);
        MEMORY[0x2348DE308](v51, -1, -1);

      }
      else
      {

        sub_23132E3CC((uint64_t)v84);
        swift_bridgeObjectRelease();
        sub_23132E3CC((uint64_t)v84);
        swift_bridgeObjectRelease();
      }
      v59 = v75;
      v60 = v67;
      v61 = swift_allocObject();
      *(_OWORD *)(v61 + 16) = v77;
      v60(v61 + v71, v43, v31);
      v62 = sub_2314147C4();
      if (v59)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v63 = *(void (**)(char *, uint64_t))(v12 + 8);
        v63(v43, v31);
        return ((uint64_t (*)(char *, uint64_t))v63)(v76, v31);
      }
      v58 = v62;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v64 = *(void (**)(char *, uint64_t))(v12 + 8);
      v64(v43, v31);
      v56 = v78;
      result = ((uint64_t (*)(char *, uint64_t))v64)(v76, v31);
    }
    *v56 = v58;
  }
  return result;
}

uint64_t sub_23132C8B8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t v15;
  objc_class *ObjCClassFromMetadata;
  NSString *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t inited;
  void *v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  _QWORD v28[5];
  unint64_t v29;

  v7 = sub_231411890();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2314111E8();
  swift_allocObject();
  sub_2314111DC();
  v29 = a2;
  sub_23132E42C();
  v11 = sub_2314111D0();
  v13 = v12;
  result = swift_release();
  if (!v3)
  {
    v15 = *(_QWORD *)(a1 + 16);
    v28[3] = a3;
    v28[4] = v15;
    ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
    sub_231412A90();
    v17 = NSStringFromClass(ObjCClassFromMetadata);
    v18 = sub_2314146BC();
    v28[1] = v19;
    v28[2] = v18;

    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BE47488], v7);
    sub_2312D6C64(v11, v13);
    sub_2314118FC();
    v20 = v13;
    sub_231411974();
    sub_2312CF374(0, (unint64_t *)&qword_25415BD40, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_231417F90;
    v22 = *(void **)a1;
    *(_QWORD *)(inited + 32) = *(_QWORD *)a1;
    v29 = inited;
    sub_2314147B8();
    v23 = v29;
    if (v29 >> 62)
    {
      v26 = v22;
      sub_231412A90();
      v27 = sub_231414F08();
      swift_bridgeObjectRelease();
      if (!v27)
        goto LABEL_6;
    }
    else
    {
      v24 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
      v25 = v22;
      if (!v24)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        sub_231411980();
        sub_23141195C();
        sub_231411950();
        return sub_2312D6CA8(v11, v20);
      }
    }
    sub_2312FC638(v23);
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_23132CB14@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  id v6;

  v3 = *a1;
  if ((unint64_t)*a1 >> 62)
  {
    sub_231412A90();
    result = sub_231414F08();
    v4 = result;
    if (!result)
      goto LABEL_7;
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = sub_231412A90();
    if (!v4)
    {
LABEL_7:
      result = swift_bridgeObjectRelease();
      *a2 = v4;
      return result;
    }
  }
  if ((v3 & 0xC000000000000001) != 0)
  {
    v6 = (id)MEMORY[0x2348DD81C](0, v3);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v6 = *(id *)(v3 + 32);
LABEL_6:
    v4 = (uint64_t)v6;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

id sub_23132CBC0@<X0>(void **a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, void *a4@<X4>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  void *v14;
  unint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  _QWORD *v40;
  void *v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_2312D6DD8(0, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v39 - v11;
  v13 = *a1;
  v14 = *(void **)a3;
  v46 = *(_QWORD *)(a3 + 8);
  v15 = *(_QWORD *)(a3 + 24);
  v42 = *(_QWORD *)(a3 + 16);
  v16 = v14;
  sub_2312D0F3C((uint64_t)&v46);
  v17 = v13;
  v18 = a4;
  v19 = v16;
  sub_231412A90();
  sub_2312D0F3C((uint64_t)&v46);
  sub_231412A90();
  v20 = v17;
  v43 = v18;
  v21 = sub_231413768();
  v22 = sub_231414968();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    v39 = swift_slowAlloc();
    v44 = a2;
    v45 = v39;
    *(_DWORD *)v23 = 136446978;
    v40 = a5;
    sub_23132E3F4();
    v24 = sub_2314146E0();
    v41 = v13;
    v44 = sub_23133180C(v24, v25, &v45);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2082;
    sub_231412A90();
    v44 = sub_23133180C(v42, v15, &v45);
    sub_231414CBC();

    swift_bridgeObjectRelease();
    sub_23132E3CC((uint64_t)&v46);

    swift_bridgeObjectRelease();
    sub_23132E3CC((uint64_t)&v46);
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 22) = 2080;
    if (v41)
      v26 = 0x646E756F66;
    else
      v26 = 0x6E756F6620746F6ELL;
    if (v41)
      v27 = 0xE500000000000000;
    else
      v27 = 0xE900000000000064;
    v44 = sub_23133180C(v26, v27, &v45);
    sub_231414CBC();

    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 32) = 2080;
    v28 = objc_msgSend(v43, sel_identifier);
    v29 = sub_2314146BC();
    v31 = v30;

    a5 = v40;
    v44 = sub_23133180C(v29, v31, &v45);
    sub_231414CBC();

    v32 = v41;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v21, v22, "[%{public}s(%{public}s)]: Recent sample %s for %s", (uint8_t *)v23, 0x2Au);
    v33 = v39;
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v33, -1, -1);
    MEMORY[0x2348DE308](v23, -1, -1);

    if (v32)
      goto LABEL_9;
LABEL_11:
    v36 = sub_231411608();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v12, 1, 1, v36);
    goto LABEL_12;
  }

  sub_23132E3CC((uint64_t)&v46);
  swift_bridgeObjectRelease();
  sub_23132E3CC((uint64_t)&v46);

  swift_bridgeObjectRelease();
  if (!v13)
    goto LABEL_11;
LABEL_9:
  v34 = objc_msgSend(v20, sel_endDate);
  sub_2314115D8();

  v35 = sub_231411608();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v12, 0, 1, v35);
LABEL_12:
  *a5 = v43;
  v37 = type metadata accessor for RelatedSampleTypesGenerator.SampleTypeDetails(0);
  sub_2312D38B4((uint64_t)v12, (uint64_t)a5 + *(int *)(v37 + 20));
  return v43;
}

uint64_t sub_23132D014()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = v0 + OBJC_IVAR____TtC5Heart27RelatedSampleTypesGenerator_domain;
  v2 = sub_231411A04();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  v3 = *(void **)(v0 + OBJC_IVAR____TtC5Heart27RelatedSampleTypesGenerator_configuration);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_23132D0A0()
{
  return type metadata accessor for RelatedSampleTypesGenerator(0);
}

uint64_t type metadata accessor for RelatedSampleTypesGenerator(uint64_t a1)
{
  return sub_2312F19EC(a1, qword_255ECD070);
}

uint64_t sub_23132D0BC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_231411A04();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23132D140()
{
  return type metadata accessor for RelatedSampleTypesGenerator.Environment(0);
}

uint64_t type metadata accessor for RelatedSampleTypesGenerator.Environment(uint64_t a1)
{
  return sub_2312F19EC(a1, (uint64_t *)&unk_25415C508);
}

uint64_t sub_23132D15C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_231413780();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t destroy for RelatedSampleTypesGenerator.Configuration(id *a1)
{

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RelatedSampleTypesGenerator.Configuration(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v5 = v3;
  sub_231412A90();
  sub_231412A90();
  return a1;
}

uint64_t assignWithCopy for RelatedSampleTypesGenerator.Configuration(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_231412A90();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_231412A90();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for RelatedSampleTypesGenerator.Configuration(uint64_t a1, uint64_t a2)
{

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for RelatedSampleTypesGenerator.Configuration(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RelatedSampleTypesGenerator.Configuration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RelatedSampleTypesGenerator.Configuration()
{
  return &type metadata for RelatedSampleTypesGenerator.Configuration;
}

uint64_t sub_23132D3E0()
{
  return swift_retain();
}

uint64_t sub_23132D3F4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC5Heart27RelatedSampleTypesGenerator_domain;
  v4 = sub_231411A04();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

int64_t sub_23132D43C(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void sub_23132D520(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  void *v4;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  id v13;
  char v14;
  id v15;
  void *v16;

  v6 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (sub_231414D64() == *(_DWORD *)(a4 + 36))
      {
        sub_231414D70();
        sub_2312D3C68(0, (unint64_t *)&qword_25415DEB0);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v4 = v16;
        sub_2314130CC();
        v8 = sub_231414BFC();
        v9 = -1 << *(_BYTE *)(a4 + 32);
        v6 = v8 & ~v9;
        if (((*(_QWORD *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
        {
          v10 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
          v11 = sub_231414C08();

          if ((v11 & 1) == 0)
          {
            v12 = ~v9;
            do
            {
              v6 = (v6 + 1) & v12;
              if (((*(_QWORD *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
                goto LABEL_24;
              v13 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
              v14 = sub_231414C08();

            }
            while ((v14 & 1) == 0);
          }

LABEL_20:
          v15 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v7 = a4;
  else
    v7 = a4 & 0xFFFFFFFFFFFFFF8;
  MEMORY[0x2348DD774](a1, a2, v7);
  sub_2312D3C68(0, (unint64_t *)&qword_25415DEB0);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  sub_2314130CC();
}

uint64_t sub_23132D788(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 72);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t *sub_23132D810(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;
  void *v17;
  id v18;
  uint64_t v19;
  __int128 v20;
  id v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;

  v3 = v2;
  v25 = *v3;
  sub_2312EDFDC(0, (unint64_t *)&qword_25415DE28, (uint64_t (*)(uint64_t))sub_2312E5F88, sub_23132DA08, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB9E80]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v24 - v9;
  v11 = sub_231411A04();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (char *)v3 + OBJC_IVAR____TtC5Heart27RelatedSampleTypesGenerator_configuration;
  v16 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v15 = *(_OWORD *)a1;
  *((_OWORD *)v15 + 1) = v16;
  *((_QWORD *)v15 + 4) = *(_QWORD *)(a1 + 32);
  v17 = *(void **)a1;
  v27 = *(_QWORD *)(a1 + 8);
  v26 = v16;
  v18 = v17;
  sub_2312D0F3C((uint64_t)&v27);
  sub_2312E3A64((uint64_t)&v26);
  sub_23132B64C((uint64_t)v14);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))((uint64_t)v3 + OBJC_IVAR____TtC5Heart27RelatedSampleTypesGenerator_domain, v14, v11);
  v19 = swift_allocObject();
  v20 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v19 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v19 + 32) = v20;
  *(_QWORD *)(v19 + 48) = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(v19 + 56) = a2;
  *(_QWORD *)(v19 + 64) = v25;
  v21 = v18;
  sub_2312D0F3C((uint64_t)&v27);
  sub_2312E3A64((uint64_t)&v26);
  sub_2312E5F88();
  sub_23132DA08();
  swift_retain();
  sub_231413E04();
  sub_23132DA8C();
  v22 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC5Heart27RelatedSampleTypesGenerator_publisher) = v22;
  return v3;
}

uint64_t sub_23132DA08()
{
  return sub_2312CCC24(&qword_25415DD90, (uint64_t (*)(uint64_t))sub_2312E5F88, MEMORY[0x24BDB9AF8]);
}

uint64_t sub_23132DA24()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23132DA60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_23132B844(v1 + 16, *(_QWORD *)(v1 + 56));
  *a1 = result;
  return result;
}

unint64_t sub_23132DA8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25415DE20;
  if (!qword_25415DE20)
  {
    sub_2312EDFDC(255, (unint64_t *)&qword_25415DE28, (uint64_t (*)(uint64_t))sub_2312E5F88, sub_23132DA08, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB9E80]);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB9E90], v1);
    atomic_store(result, (unint64_t *)&qword_25415DE20);
  }
  return result;
}

void sub_23132DAF4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECD110)
  {
    sub_2312D3C68(255, &qword_255ECFBE0);
    v0 = sub_231414CB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECD110);
  }
}

void sub_23132DB58(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t (*v5)(uint64_t);
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    sub_231414920();
    v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BE459E0];
    a3(255);
    sub_2312CCC24(&qword_255ECD118, v5, MEMORY[0x24BE459D8]);
    v6 = sub_231413C60();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t type metadata accessor for RelatedSampleTypesGenerator.SampleTypeDetails(uint64_t a1)
{
  return sub_2312F19EC(a1, qword_255ECD200);
}

void sub_23132DC04(uint64_t a1)
{
  sub_2312EDFDC(a1, &qword_255ECD128, (uint64_t (*)(uint64_t))sub_23132DC28, sub_23132DC94, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB99B8]);
}

void sub_23132DC28()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECD130)
  {
    type metadata accessor for RelatedSampleTypesGenerator.SampleTypeDetails(255);
    sub_2312D3C14();
    v0 = sub_231413D14();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECD130);
  }
}

uint64_t sub_23132DC94()
{
  return sub_2312CCC24(&qword_255ECD138, (uint64_t (*)(uint64_t))sub_23132DC28, MEMORY[0x24BDB9AF8]);
}

uint64_t sub_23132DCB0()
{
  return sub_2312CCC24(&qword_255ECD148, (uint64_t (*)(uint64_t))sub_23132DC04, MEMORY[0x24BDB99D8]);
}

void sub_23132DCCC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECD150)
  {
    sub_2312EDFDC(255, &qword_255ECD140, (uint64_t (*)(uint64_t))sub_23132DC04, sub_23132DCB0, MEMORY[0x24BDB98D0]);
    sub_2312CF374(255, (unint64_t *)&qword_25415DE58, MEMORY[0x24BE47F58], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    sub_23132DD7C();
    v0 = sub_231413CC0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECD150);
  }
}

unint64_t sub_23132DD7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ECD158;
  if (!qword_255ECD158)
  {
    sub_2312EDFDC(255, &qword_255ECD140, (uint64_t (*)(uint64_t))sub_23132DC04, sub_23132DCB0, MEMORY[0x24BDB98D0]);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB98D8], v1);
    atomic_store(result, (unint64_t *)&qword_255ECD158);
  }
  return result;
}

uint64_t sub_23132DDE4()
{
  return sub_2312CCC24(&qword_255ECD168, (uint64_t (*)(uint64_t))sub_23132DCCC, MEMORY[0x24BDB98C8]);
}

uint64_t sub_23132DE00()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

id sub_23132DE44@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_23132CBC0(a1, *(_QWORD *)(v2 + 24), v2 + 32, *(void **)(v2 + 72), a2);
}

unint64_t sub_23132DE54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ECD170;
  if (!qword_255ECD170)
  {
    sub_23132DB58(255, &qword_255ECD120, (void (*)(uint64_t))type metadata accessor for RelatedSampleTypesGenerator.SampleTypeDetails);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB96C0], v1);
    atomic_store(result, (unint64_t *)&qword_255ECD170);
  }
  return result;
}

void sub_23132DEAC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECD178)
  {
    sub_2312D3C68(255, (unint64_t *)&qword_25415DEB0);
    sub_23132DF1C();
    v0 = sub_2314148CC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECD178);
  }
}

unint64_t sub_23132DF1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25415DEB8;
  if (!qword_25415DEB8)
  {
    v1 = sub_2312D3C68(255, (unint64_t *)&qword_25415DEB0);
    result = MEMORY[0x2348DE248](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_25415DEB8);
  }
  return result;
}

uint64_t sub_23132DF74(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_23132DF80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ECD188;
  if (!qword_255ECD188)
  {
    sub_2312D6DD8(255, &qword_255ECD180, (uint64_t (*)(uint64_t))sub_23132DC28, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2348DE248](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_255ECD188);
  }
  return result;
}

uint64_t sub_23132DFE0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23132E01C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_23132C16C(a1, *(_QWORD *)(v2 + 16), v2 + 24, *(_QWORD *)(v2 + 64), a2);
}

unint64_t sub_23132E03C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ECD190;
  if (!qword_255ECD190)
  {
    sub_2312EDFDC(255, &qword_255ECD160, (uint64_t (*)(uint64_t))sub_23132DCCC, sub_23132DDE4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB9598]);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB95A8], v1);
    atomic_store(result, (unint64_t *)&qword_255ECD190);
  }
  return result;
}

uint64_t sub_23132E0A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int isUniquelyReferenced_nonNull_native;
  char v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;

  v2 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
  v38 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v40 = (uint64_t)&v36 - v6;
  v39 = type metadata accessor for RelatedSampleTypesGenerator.SampleTypeDetails(0);
  v7 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v9 = (id *)((char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = (_QWORD *)sub_231337080(MEMORY[0x24BEE4AF8]);
  v11 = *(_QWORD *)(a1 + 16);
  if (!v11)
    return (uint64_t)v10;
  v12 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v13 = *(_QWORD *)(v7 + 72);
  v36 = a1;
  v37 = v13;
  sub_231412A90();
  while (1)
  {
    sub_23132E470(v12, (uint64_t)v9);
    v15 = objc_msgSend(*v9, sel_identifier);
    v16 = sub_2314146BC();
    v18 = v17;

    v19 = v40;
    sub_2312D3870((uint64_t)v9 + *(int *)(v39 + 20), v40);
    v20 = (uint64_t)v5;
    sub_231317058(v19, (uint64_t)v5);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v41 = v10;
    v23 = sub_231338800(v16, v18);
    v24 = v10[2];
    v25 = (v22 & 1) == 0;
    v26 = v24 + v25;
    if (__OFADD__(v24, v25))
      break;
    v27 = v22;
    if (v10[3] >= v26)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v10 = v41;
        if ((v22 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_231379D88();
        v10 = v41;
        if ((v27 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_23137951C(v26, isUniquelyReferenced_nonNull_native);
      v28 = sub_231338800(v16, v18);
      if ((v27 & 1) != (v29 & 1))
        goto LABEL_20;
      v23 = v28;
      v10 = v41;
      if ((v27 & 1) != 0)
      {
LABEL_3:
        v14 = v10[7] + *(_QWORD *)(v38 + 72) * v23;
        v5 = (char *)v20;
        sub_2313170E0(v20, v14);
        goto LABEL_4;
      }
    }
    v10[(v23 >> 6) + 8] |= 1 << v23;
    v30 = (uint64_t *)(v10[6] + 16 * v23);
    *v30 = v16;
    v30[1] = v18;
    v31 = v10[7] + *(_QWORD *)(v38 + 72) * v23;
    v5 = (char *)v20;
    sub_231317058(v20, v31);
    v32 = v10[2];
    v33 = __OFADD__(v32, 1);
    v34 = v32 + 1;
    if (v33)
      goto LABEL_19;
    v10[2] = v34;
    sub_231412A90();
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23132E4B4((uint64_t)v9);
    v12 += v37;
    if (!--v11)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v10;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_2314150AC();
  __break(1u);
  return result;
}

uint64_t sub_23132E378(uint64_t a1)
{
  uint64_t v2;

  sub_2312D6DD8(0, (unint64_t *)&unk_25415D510, (uint64_t (*)(uint64_t))MEMORY[0x24BE477D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23132E3CC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_23132E3F4()
{
  unint64_t result;

  result = qword_255ECD198;
  if (!qword_255ECD198)
  {
    type metadata accessor for RelatedSampleTypesGenerator(255);
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255ECD198);
  }
  return result;
}

unint64_t sub_23132E42C()
{
  unint64_t result;

  result = qword_255ECD1A0;
  if (!qword_255ECD1A0)
  {
    result = MEMORY[0x2348DE248](&unk_23142315C, &type metadata for RelatedSampleTypesCacheObject);
    atomic_store(result, (unint64_t *)&qword_255ECD1A0);
  }
  return result;
}

uint64_t sub_23132E470(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RelatedSampleTypesGenerator.SampleTypeDetails(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23132E4B4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RelatedSampleTypesGenerator.SampleTypeDetails(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void **sub_23132E4F0(void **a1, void **a2, uint64_t a3)
{
  int v3;
  char *v4;
  void **v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  char *v12;
  uint64_t v13;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_231411608();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    v12 = v4;
    if (v11(v8, 1, v9))
    {
      sub_2312D6DD8(0, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v5;
}

uint64_t sub_23132E5F4(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = sub_231411608();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

void **sub_23132E670(void **a1, void **a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(char *, uint64_t, uint64_t);
  id v11;
  uint64_t v12;

  v4 = *a2;
  *a1 = *a2;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_231411608();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  v11 = v4;
  if (v10(v7, 1, v8))
  {
    sub_2312D6DD8(0, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void **sub_23132E74C(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = *(int *)(a3 + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_231411608();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_2312D6DD8(0, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

_QWORD *sub_23132E87C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_231411608();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_2312D6DD8(0, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void **sub_23132E94C(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = *a1;
  *a1 = *a2;

  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_231411608();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_2312D6DD8(0, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_23132EA78()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23132EA84(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_2312D6DD8(0, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_23132EB18()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_23132EB24(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    sub_2312D6DD8(0, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_23132EBB0()
{
  unint64_t v0;

  sub_2312D6DD8(319, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t initializeWithCopy for FeedItemContextPreviousFeedItemFetcherBox(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for FeedItemContextPreviousFeedItemFetcherBox(uint64_t *a1, uint64_t *a2)
{
  sub_2312DB81C(a1, a2);
  return a1;
}

uint64_t assignWithTake for FeedItemContextPreviousFeedItemFetcherBox(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedItemContextPreviousFeedItemFetcherBox(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedItemContextPreviousFeedItemFetcherBox(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedItemContextPreviousFeedItemFetcherBox()
{
  return &type metadata for FeedItemContextPreviousFeedItemFetcherBox;
}

uint64_t type metadata accessor for DataTypeDetailHeartbeatSeriesDisclosureItemsDataSource()
{
  uint64_t result;

  result = qword_255ECD238;
  if (!qword_255ECD238)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23132EDB4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_23132EDF0()
{
  return 0x6165627472616548;
}

uint64_t sub_23132EE14()
{
  void *v0;
  uint64_t v1;

  if (sub_231412D9C() > 1u)
    return 0;
  v0 = (void *)sub_231412D78();
  type metadata accessor for DataTypeDetailHeartbeatSeriesDisclosureItemsDataSource();
  swift_allocObject();
  v1 = sub_23132EF9C();

  return v1;
}

void sub_23132EE90()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_23132EEBC()
{
  sub_2314128F8();
  return swift_deallocClassInstance();
}

uint64_t sub_23132EED8()
{
  return type metadata accessor for DataTypeDetailHeartbeatSeriesDisclosureItemsDataSource();
}

uint64_t sub_23132EEE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_2314129AC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231412994();
  sub_231412AE4();
  v4 = sub_2314129A0();
  sub_2314130CC();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

ValueMetadata *type metadata accessor for HeartRateVariabilityDataTypeDetailConfigurationProvider.HeartbeatSeriesComponent()
{
  return &type metadata for HeartRateVariabilityDataTypeDetailConfigurationProvider.HeartbeatSeriesComponent;
}

uint64_t sub_23132EF9C()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37[2];
  _QWORD v38[5];
  _QWORD *v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;

  v33 = sub_231411644();
  v31 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v32 = (char *)&v30 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  v30 = sub_231411374();

  v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_231411374();

  v40 = xmmword_231418090;
  sub_23141201C();
  v5 = (void *)objc_opt_self();
  v6 = objc_msgSend(v5, sel_heartbeatSeriesType);
  sub_231412004();

  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_heartbeatSeriesType);
  sub_231412010();

  swift_bridgeObjectRelease();
  v39 = (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_2312D1C94((uint64_t)&v41, (uint64_t)v38);
  sub_23132F5FC((uint64_t)v38, (uint64_t)&v34);
  if (v35)
  {
    sub_2312DFB68(&v34, (uint64_t)v37);
    sub_2312DFB68(v37, (uint64_t)&v34);
    v8 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v8 = sub_2312CDBB4(0, v8[2] + 1, 1, v8);
      v39 = v8;
    }
    v10 = v8[2];
    v9 = v8[3];
    if (v10 >= v9 >> 1)
      v39 = sub_2312CDBB4((_QWORD *)(v9 > 1), v10 + 1, 1, v8);
    v11 = v35;
    v12 = v36;
    v13 = sub_2312DEF74((uint64_t)&v34, v35);
    MEMORY[0x24BDAC7A8](v13);
    v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v16 + 16))(v15);
    sub_2313472BC(v10, (uint64_t)v15, (uint64_t *)&v39, v11, v12);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v34);
  }
  else
  {
    sub_2312D1D70((uint64_t)&v34);
  }
  sub_2312D1C94((uint64_t)&v42, (uint64_t)v38);
  sub_23132F5FC((uint64_t)v38, (uint64_t)&v34);
  if (v35)
  {
    sub_2312DFB68(&v34, (uint64_t)v37);
    sub_2312DFB68(v37, (uint64_t)&v34);
    v17 = v39;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v17 = sub_2312CDBB4(0, v17[2] + 1, 1, v17);
      v39 = v17;
    }
    v19 = v17[2];
    v18 = v17[3];
    if (v19 >= v18 >> 1)
      v39 = sub_2312CDBB4((_QWORD *)(v18 > 1), v19 + 1, 1, v17);
    v20 = v35;
    v21 = v36;
    v22 = sub_2312DEF74((uint64_t)&v34, v35);
    MEMORY[0x24BDAC7A8](v22);
    v24 = (char *)&v30 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v25 + 16))(v24);
    sub_2313472BC(v19, (uint64_t)v24, (uint64_t *)&v39, v20, v21);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v34);
  }
  else
  {
    sub_2312D1D70((uint64_t)&v34);
  }
  sub_2312D6DD8(0, (unint64_t *)&qword_255ECB1A8, (uint64_t (*)(uint64_t))sub_2312D1CE8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  swift_arrayDestroy();
  sub_2312D6DD8(0, &qword_255ECF200, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_2314127F0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_231416A30;
  v26 = v32;
  sub_231411638();
  sub_231411614();
  v27 = *(void (**)(char *, uint64_t))(v31 + 8);
  v28 = v33;
  v27(v26, v33);
  sub_2314127E4();
  v38[0] = 0;
  v38[1] = 0xE000000000000000;
  sub_231414E18();
  swift_bridgeObjectRelease();
  strcpy((char *)v38, "MutableArray<");
  HIWORD(v38[1]) = -4864;
  sub_231411638();
  sub_231411614();
  v27(v26, v28);
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return sub_2314128BC();
}

uint64_t sub_23132F5FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312D6DD8(0, (unint64_t *)&qword_255ECB1A8, (uint64_t (*)(uint64_t))sub_2312D1CE8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_23132F658()
{
  id v0;
  void *v1;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1510]), sel_init);
  v1 = (void *)sub_23141468C();
  objc_msgSend(v0, sel_setDateTemplate_, v1);

  qword_255ED2C08 = (uint64_t)v0;
}

uint64_t sub_23132F6C4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  if (qword_255ECAAD8 != -1)
    swift_once();
  sub_231411374();
  v1 = v0 + *(int *)(type metadata accessor for AFibBurdenPDFChartHeaderContentProvider() + 20);
  v2 = objc_msgSend(*(id *)(v1 + *(int *)(type metadata accessor for AFibBurdenPDFChartViewModel() + 28)), sel_localization, 0xE000000000000000);
  v3 = objc_msgSend(v2, sel_displayName);

  v4 = sub_2314146BC();
  v6 = v5;

  v7 = sub_23132F84C();
  v9 = v8;
  sub_2312E43E0();
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_231418090;
  v11 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v10 + 56) = MEMORY[0x24BEE0D00];
  v12 = sub_2312D6E84();
  *(_QWORD *)(v10 + 32) = v4;
  *(_QWORD *)(v10 + 40) = v6;
  *(_QWORD *)(v10 + 96) = v11;
  *(_QWORD *)(v10 + 104) = v12;
  *(_QWORD *)(v10 + 64) = v12;
  *(_QWORD *)(v10 + 72) = v7;
  *(_QWORD *)(v10 + 80) = v9;
  v13 = sub_2314146D4();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_23132F84C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  int v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  double v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  id v27;
  double v28;
  double v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  id v37;

  v1 = type metadata accessor for AFibBurdenPDFChartHeaderContentProvider();
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (unsigned __int8 *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = &v0[*(int *)(v2 + 20)];
  v6 = type metadata accessor for AFibBurdenPDFChartViewModel();
  v7 = v5[*(int *)(v6 + 32)];
  if (v7 != 2)
  {
    v9 = v6;
    v10 = *(void **)&v5[*(int *)(v6 + 28)];
    v11 = objc_msgSend(v10, sel_presentation);
    v12 = (void *)sub_231414848();
    v37 = objc_msgSend(v11, sel_adjustedValueForDaemonValue_, v12);

    v13 = objc_msgSend(v10, sel_presentation);
    v14 = (void *)sub_231414848();
    v15 = objc_msgSend(v13, sel_adjustedValueForDaemonValue_, v14);

    sub_23132FC5C((uint64_t)v0, (uint64_t)v4);
    if ((v7 & 1) != 0)
    {
      v16 = *v4;
      sub_23132FCA0((uint64_t)v4);
      if (!v16)
      {
        v35 = (id)HKAFibBurdenClampedLowerBoundLocalizedString();
        v25 = sub_2314146BC();

        return v25;
      }
    }
    else
    {
      sub_23132FCA0((uint64_t)v4);
    }
    sub_2313D5354(*v0);
    v18 = v17;
    v19 = *(void **)&v5[*(int *)(v9 + 24)];
    v20 = v37;
    if ((objc_msgSend(v37, sel_isEqualToNumber_, v15) & 1) != 0)
    {
      v21 = v19;
      objc_msgSend(v20, sel_doubleValue);
      v23 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v21, v22);

      v24 = objc_msgSend(v23, sel_localizedStringForType_, v18);
      v25 = sub_2314146BC();

    }
    else
    {
      v26 = (void *)objc_opt_self();
      v27 = v19;
      objc_msgSend(v20, sel_doubleValue);
      v29 = v28;
      v30 = (void *)objc_opt_self();
      v31 = objc_msgSend(v30, sel_quantityWithUnit_doubleValue_, v27, v29);
      objc_msgSend(v15, sel_doubleValue);
      v32 = objc_msgSend(v30, sel_quantityWithUnit_doubleValue_, v27);

      v33 = objc_msgSend(v26, sel_inclusiveRangeWithMinimum_maximum_, v31, v32);
      v34 = objc_msgSend(v33, sel_localizedStringForType_, v18);
      v25 = sub_2314146BC();

    }
    return v25;
  }
  if (qword_255ECAAD8 != -1)
    swift_once();
  return sub_231411374();
}

uint64_t type metadata accessor for AFibBurdenPDFChartHeaderContentProvider()
{
  uint64_t result;

  result = qword_255ECD2E0;
  if (!qword_255ECD2E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23132FC5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AFibBurdenPDFChartHeaderContentProvider();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23132FCA0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AFibBurdenPDFChartHeaderContentProvider();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_23132FCDC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _BYTE *v15;
  char *v16;
  id v17;
  id v18;
  uint64_t v19;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v19 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v19 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_231411248();
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
    v9 = (int *)type metadata accessor for AFibBurdenPDFChartViewModel();
    *(_QWORD *)&v6[v9[5]] = *(_QWORD *)&v7[v9[5]];
    v10 = v9[6];
    v11 = *(void **)&v7[v10];
    *(_QWORD *)&v6[v10] = v11;
    v12 = v9[7];
    v13 = *(void **)&v7[v12];
    *(_QWORD *)&v6[v12] = v13;
    v14 = v9[8];
    v15 = &v6[v14];
    v16 = &v7[v14];
    *((_QWORD *)v15 + 2) = *((_QWORD *)v16 + 2);
    *(_OWORD *)v15 = *(_OWORD *)v16;
    sub_231412A90();
    v17 = v11;
    v18 = v13;
  }
  return v3;
}

void sub_23132FDC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_231411248();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  v4 = type metadata accessor for AFibBurdenPDFChartViewModel();
  swift_bridgeObjectRelease();

}

_BYTE *sub_23132FE2C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  id v16;
  id v17;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_231411248();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  v8 = (int *)type metadata accessor for AFibBurdenPDFChartViewModel();
  *(_QWORD *)&v5[v8[5]] = *(_QWORD *)&v6[v8[5]];
  v9 = v8[6];
  v10 = *(void **)&v6[v9];
  *(_QWORD *)&v5[v9] = v10;
  v11 = v8[7];
  v12 = *(void **)&v6[v11];
  *(_QWORD *)&v5[v11] = v12;
  v13 = v8[8];
  v14 = &v5[v13];
  v15 = &v6[v13];
  *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  sub_231412A90();
  v16 = v10;
  v17 = v12;
  return a1;
}

_BYTE *sub_23132FEE8(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  __int128 v20;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_231411248();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  v8 = (int *)type metadata accessor for AFibBurdenPDFChartViewModel();
  *(_QWORD *)&v5[v8[5]] = *(_QWORD *)&v6[v8[5]];
  sub_231412A90();
  swift_bridgeObjectRelease();
  v9 = v8[6];
  v10 = *(void **)&v6[v9];
  v11 = *(void **)&v5[v9];
  *(_QWORD *)&v5[v9] = v10;
  v12 = v10;

  v13 = v8[7];
  v14 = *(void **)&v6[v13];
  v15 = *(void **)&v5[v13];
  *(_QWORD *)&v5[v13] = v14;
  v16 = v14;

  v17 = v8[8];
  v18 = &v5[v17];
  v19 = &v6[v17];
  v20 = *(_OWORD *)v19;
  *((_QWORD *)v18 + 2) = *((_QWORD *)v19 + 2);
  *(_OWORD *)v18 = v20;
  return a1;
}

_BYTE *sub_23132FFC0(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_231411248();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  v8 = (int *)type metadata accessor for AFibBurdenPDFChartViewModel();
  *(_QWORD *)&v5[v8[5]] = *(_QWORD *)&v6[v8[5]];
  *(_QWORD *)&v5[v8[6]] = *(_QWORD *)&v6[v8[6]];
  *(_QWORD *)&v5[v8[7]] = *(_QWORD *)&v6[v8[7]];
  v9 = v8[8];
  v10 = &v5[v9];
  v11 = &v6[v9];
  *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
  *(_OWORD *)v10 = *(_OWORD *)v11;
  return a1;
}

_BYTE *sub_231330064(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_231411248();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  v8 = (int *)type metadata accessor for AFibBurdenPDFChartViewModel();
  *(_QWORD *)&v5[v8[5]] = *(_QWORD *)&v6[v8[5]];
  swift_bridgeObjectRelease();
  v9 = v8[6];
  v10 = *(void **)&v5[v9];
  *(_QWORD *)&v5[v9] = *(_QWORD *)&v6[v9];

  v11 = v8[7];
  v12 = *(void **)&v5[v11];
  *(_QWORD *)&v5[v11] = *(_QWORD *)&v6[v11];

  v13 = v8[8];
  v14 = &v5[v13];
  v15 = &v6[v13];
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
  return a1;
}

uint64_t sub_231330124()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_231330130(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 250)
  {
    v4 = *a1;
    if (v4 >= 6)
      return v4 - 5;
    else
      return 0;
  }
  else
  {
    v8 = type metadata accessor for AFibBurdenPDFChartViewModel();
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_2313301A4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_2313301B0(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 250)
  {
    *result = a2 + 5;
  }
  else
  {
    v7 = type metadata accessor for AFibBurdenPDFChartViewModel();
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_231330220()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for AFibBurdenPDFChartViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_231330294(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

void sub_2313302F4()
{
  qword_255ED2C10 = 0x402E000000000000;
}

void sub_231330304()
{
  qword_255ED2C18 = 0x4076800000000000;
}

uint64_t sub_231330318()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void (*v17)(unint64_t, _QWORD, uint64_t);
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[5];
  uint64_t v25;
  uint64_t v26[5];
  _QWORD v27[5];

  v1 = v0;
  v25 = sub_231411680();
  v2 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v4 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23141177C();
  MEMORY[0x24BDAC7A8](v5);
  if (qword_255ECAAD8 != -1)
    swift_once();
  v6 = sub_231411374();
  v24[3] = v7;
  v24[4] = v6;
  v8 = sub_23141261C();
  sub_2312DF850(v1 + 24, (uint64_t)v27);
  v9 = sub_231411374();
  v24[1] = v10;
  v24[2] = v9;
  sub_2312D6DD8(0, &qword_255ECD3C8, (uint64_t (*)(uint64_t))MEMORY[0x24BE43080], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v11 = sub_2314126C4();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 72);
  v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_231418090;
  v16 = v15 + v14;
  v17 = *(void (**)(unint64_t, _QWORD, uint64_t))(v12 + 104);
  v17(v16, *MEMORY[0x24BE43070], v11);
  v17(v16 + v13, *MEMORY[0x24BE43078], v11);
  sub_2312FD924(v15);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v18 = v25;
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BDCEF70], v25);
  sub_23141168C();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v18);
  v19 = sub_231412610();
  v27[3] = v8;
  v27[4] = MEMORY[0x24BE42ED8];
  v27[0] = v19;
  sub_231330638(v26);
  v20 = objc_allocWithZone((Class)sub_23141291C());
  v21 = sub_231412910();
  sub_2312F23F0(&qword_255ECD3D0, v22, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenPDFProvider, (uint64_t)&unk_23141B858);
  swift_unknownObjectRetain();
  sub_231412904();
  return v21;
}

uint64_t sub_231330638@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  char v30[40];

  v2 = v1;
  v27 = a1;
  v3 = sub_231412940();
  v28 = *(_QWORD *)(v3 - 8);
  v29 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v26 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_231412448();
  v24 = *(_QWORD *)(v5 - 8);
  v25 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_231412628();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_231412DF0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312DF850(v1 + 24, (uint64_t)v30);
  sub_231412DE4();
  v16 = sub_2314127CC();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_2313310CC();
  v17 = sub_2314127CC();
  *v11 = sub_231412634();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BE42EE8], v8);
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = v2;
  v18[3] = v16;
  v18[4] = v17;
  (*(void (**)(char *, _QWORD, uint64_t))(v24 + 104))(v7, *MEMORY[0x24BE42A48], v25);
  (*(void (**)(char *, _QWORD, uint64_t))(v28 + 104))(v26, *MEMORY[0x24BE435B8], v29);
  v19 = sub_231412460();
  v20 = MEMORY[0x24BE42A68];
  v21 = v27;
  v27[3] = v19;
  v21[4] = v20;
  sub_2312DFCA0(v21);
  swift_retain();
  return sub_231412454();
}

uint64_t sub_231330898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  _QWORD *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[5];
  _QWORD v37[5];
  __int128 v38;
  __int128 v39;
  unint64_t v40;

  v6 = sub_231413780();
  v34 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6DD8(0, &qword_255ECD3E0, (uint64_t (*)(uint64_t))sub_231331150, MEMORY[0x24BE41120]);
  v10 = v9;
  v37[3] = v9;
  v11 = sub_231331224();
  v37[4] = v11;
  v36[4] = v11;
  v37[0] = a2;
  v36[3] = v10;
  v36[0] = a3;
  swift_retain();
  swift_retain();
  sub_23137C464((uint64_t)v37, (uint64_t)v36, (uint64_t *)&v38);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v36);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v37);
  v35 = sub_231412A84();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v38);
  v12 = *(void **)(a1 + 16);
  *((_QWORD *)&v39 + 1) = &type metadata for AFibBurdenPDFChartProvider;
  v40 = sub_231331284();
  v13 = (_QWORD *)swift_allocObject();
  *(_QWORD *)&v38 = v13;
  v13[7] = v10;
  v13[8] = v11;
  v13[4] = a2;
  v13[12] = v10;
  v13[13] = v11;
  v13[9] = a3;
  v14 = objc_allocWithZone((Class)sub_231411EA8());
  swift_retain();
  swift_retain();
  v15 = v12;
  v13[14] = objc_msgSend(v14, sel_init);
  v13[2] = v15;
  v16 = (void *)objc_opt_self();
  v17 = v15;
  v18 = objc_msgSend(v16, sel_sharedInstanceForHealthStore_, v17);
  v19 = objc_msgSend(v18, sel_createHKUnitPreferenceController);

  v13[3] = v19;
  v20 = sub_231412A84();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v38);
  sub_2313311C4(0, &qword_255ECD410, (unint64_t *)&qword_255ECD418, MEMORY[0x24BE43268], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v21 = swift_allocObject();
  v33 = xmmword_231416A30;
  *(_OWORD *)(v21 + 16) = xmmword_231416A30;
  *(_QWORD *)(v21 + 56) = v10;
  *(_QWORD *)(v21 + 64) = v11;
  *(_QWORD *)(v21 + 32) = a2;
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = v33;
  *(_QWORD *)(v22 + 56) = v10;
  *(_QWORD *)(v22 + 64) = v11;
  *(_QWORD *)(v22 + 32) = a3;
  v23 = qword_25415C170;
  swift_retain();
  swift_retain();
  v24 = v17;
  if (v23 != -1)
    swift_once();
  v25 = sub_2312CE3B8(v6, (uint64_t)qword_254162F00);
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v8, v25, v6);
  v26 = sub_231413678();
  v27 = (uint64_t (*)(uint64_t))MEMORY[0x24BE4BA40];
  v38 = 0u;
  v39 = 0u;
  v40 = 0;
  swift_allocObject();
  v28 = sub_23141366C();
  *((_QWORD *)&v39 + 1) = v26;
  v40 = sub_2312F23F0(&qword_255ECD420, 255, v27, MEMORY[0x24BE4BA30]);
  *(_QWORD *)&v38 = v28;
  v29 = sub_231412A84();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v38);
  sub_23133131C();
  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_23141A310;
  *(_QWORD *)(v30 + 32) = v35;
  *(_QWORD *)(v30 + 40) = v20;
  *(_QWORD *)(v30 + 48) = v29;
  v31 = MEMORY[0x2348DB458]();
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_231330C54()
{
  uint64_t v0;

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 24);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AFibBurdenPDFProvider()
{
  return objc_opt_self();
}

uint64_t sub_231330CA8()
{
  return sub_231330318();
}

uint64_t sub_231330CC8(char a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  _QWORD v9[6];

  v3 = *v1;
  type metadata accessor for AFibBurdenDataTypeInteractionAnalyticsEvent();
  v4 = swift_allocObject();
  *(_BYTE *)(v4 + 16) = a1;
  v5 = (void *)v1[8];
  v6 = swift_allocObject();
  *(_BYTE *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = v3;
  v9[4] = sub_2313313A0;
  v9[5] = v6;
  v9[0] = MEMORY[0x24BDAC760];
  v9[1] = 1107296256;
  v9[2] = sub_231330294;
  v9[3] = &unk_250022ED0;
  v7 = _Block_copy(v9);
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_submitEvent_completion_, v4, v7);
  _Block_release(v7);
  return swift_release_n();
}

void sub_231330DB8(int a1, id a2, char a3, uint64_t a4)
{
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  NSObject *oslog;
  uint64_t v22;
  uint64_t v23;

  if (a2)
  {
    v7 = a2;
    if (qword_25415C170 != -1)
      swift_once();
    v8 = sub_231413780();
    sub_2312CE3B8(v8, (uint64_t)qword_254162F00);
    v9 = a2;
    v10 = a2;
    oslog = sub_231413768();
    v11 = sub_231414974();
    if (os_log_type_enabled(oslog, v11))
    {
      v12 = 0xD000000000000010;
      v13 = swift_slowAlloc();
      v14 = swift_slowAlloc();
      v22 = v14;
      v23 = a4;
      *(_DWORD *)v13 = 136446723;
      swift_getMetatypeMetadata();
      v15 = sub_2314146E0();
      v23 = sub_23133180C(v15, v16, &v22);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2081;
      if (a3)
      {
        if (a3 == 1)
          v12 = 0x7765695620464450;
        else
          v12 = 0xD00000000000001ALL;
        if (a3 == 1)
          v17 = 0xEA00000000006465;
        else
          v17 = 0x800000023142A1D0;
      }
      else
      {
        v17 = 0x800000023142A1F0;
      }
      v23 = sub_23133180C(v12, v17, &v22);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 22) = 2082;
      v23 = (uint64_t)a2;
      v18 = a2;
      sub_2312DF79C(0, (unint64_t *)&qword_25415DF60);
      v19 = sub_2314146E0();
      v23 = sub_23133180C(v19, v20, &v22);
      sub_231414CBC();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_2312C8000, oslog, v11, "[%{public}s] Error when sending analytics event for interaction %{private}s): %{public}s", (uint8_t *)v13, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v14, -1, -1);
      MEMORY[0x2348DE308](v13, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t sub_2313310B8()
{
  return sub_231330CC8(1);
}

uint64_t sub_2313310C0()
{
  return sub_231330CC8(2);
}

unint64_t sub_2313310CC()
{
  unint64_t result;

  result = qword_255ECD3D8;
  if (!qword_255ECD3D8)
  {
    result = MEMORY[0x2348DE248](&unk_2314206EC, &type metadata for AFibBurdenFooterProvider);
    atomic_store(result, (unint64_t *)&qword_255ECD3D8);
  }
  return result;
}

uint64_t sub_231331110()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_231331144()
{
  uint64_t *v0;

  return sub_231330898(v0[2], v0[3], v0[4]);
}

void sub_231331150()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECD3E8)
  {
    sub_2313311C4(255, &qword_255ECD3F0, (unint64_t *)&qword_255ECD3F8, MEMORY[0x24BE42740], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v0 = sub_231414CB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECD3E8);
  }
}

void sub_2313311C4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_2312DF79C(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

unint64_t sub_231331224()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ECD400;
  if (!qword_255ECD400)
  {
    sub_2312D6DD8(255, &qword_255ECD3E0, (uint64_t (*)(uint64_t))sub_231331150, MEMORY[0x24BE41120]);
    result = MEMORY[0x2348DE248](MEMORY[0x24BE41F38], v1);
    atomic_store(result, (unint64_t *)&qword_255ECD400);
  }
  return result;
}

unint64_t sub_231331284()
{
  unint64_t result;

  result = qword_255ECD408;
  if (!qword_255ECD408)
  {
    result = MEMORY[0x2348DE248](&unk_23141E76C, &type metadata for AFibBurdenPDFChartProvider);
    atomic_store(result, (unint64_t *)&qword_255ECD408);
  }
  return result;
}

uint64_t sub_2313312C8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 56))
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 32);
  if (*(_QWORD *)(v0 + 96))
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 72);

  return swift_deallocObject();
}

void sub_23133131C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECD428)
  {
    sub_2313311C4(255, &qword_255ECD430, &qword_255ECD438, MEMORY[0x24BE42CD0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v0 = sub_23141504C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECD428);
  }
}

uint64_t sub_231331390()
{
  return swift_deallocObject();
}

void sub_2313313A0(int a1, void *a2)
{
  uint64_t v2;

  sub_231330DB8(a1, a2, *(_BYTE *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_2313313AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2313313BC()
{
  return swift_release();
}

ValueMetadata *_s39AFibBurdenSharableSummaryChartComponentVMa()
{
  return &_s39AFibBurdenSharableSummaryChartComponentVN;
}

uint64_t sub_2313313D4()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v8;

  v1 = sub_231412C10();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  sub_231412C04();
  sub_231412BF8();
  swift_getObjectType();
  v6 = sub_2313314A0();
  sub_2314130CC();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v6;
}

uint64_t sub_2313314A0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  sub_231331578();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_231416A30;
  type metadata accessor for AFibBurdenChartSection();
  *(_QWORD *)(v0 + 56) = sub_2314129E8();
  *(_QWORD *)(v0 + 64) = sub_2313315CC();
  v1 = sub_2312DFCA0((uint64_t *)(v0 + 32));
  sub_231359D38((uint64_t)v1);
  v2 = sub_231412574();
  swift_bridgeObjectRelease();
  v3 = sub_231412A60();
  MEMORY[0x2348DE248](MEMORY[0x24BE43A30], v3);
  return v2;
}

void sub_231331578()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECAC50)
  {
    sub_2312D1CE8();
    v0 = sub_23141504C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECAC50);
  }
}

unint64_t sub_2313315CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ECD440;
  if (!qword_255ECD440)
  {
    v1 = sub_2314129E8();
    result = MEMORY[0x2348DE248](MEMORY[0x24BE438A8], v1);
    atomic_store(result, (unint64_t *)&qword_255ECD440);
  }
  return result;
}

void BloodPressureDataTypeDetailConfigurationProvider.configuration(for:)()
{
  uint64_t v0;
  os_log_type_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *oslog;
  uint64_t v5;

  sub_231412C70();
  if (qword_25415DF98 != -1)
    swift_once();
  v0 = sub_231413780();
  sub_2312CE3B8(v0, (uint64_t)qword_254162FF0);
  oslog = sub_231413768();
  v1 = sub_23141495C();
  if (os_log_type_enabled(oslog, v1))
  {
    v2 = swift_slowAlloc();
    v3 = swift_slowAlloc();
    v5 = v3;
    *(_DWORD *)v2 = 136446466;
    sub_23133180C(0xD000000000000030, 0x800000023141B910, &v5);
    sub_231414CBC();
    *(_WORD *)(v2 + 12) = 2082;
    sub_23133180C(0xD000000000000013, 0x800000023142A210, &v5);
    sub_231414CBC();
    _os_log_impl(&dword_2312C8000, oslog, v1, "[%{public}s.%{public}s]: Creating custom BP data type room", (uint8_t *)v2, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v3, -1, -1);
    MEMORY[0x2348DE308](v2, -1, -1);

  }
  else
  {

  }
}

void sub_2313317E8()
{
  BloodPressureDataTypeDetailConfigurationProvider.configuration(for:)();
}

uint64_t sub_23133180C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_2313318DC(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_2313046A8((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_2313046A8((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    sub_231412A90();
  }
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v12);
  return v7;
}

uint64_t sub_2313318DC(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_231414CC8();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_231331A94(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_231414E84();
  if (!v8)
  {
    sub_231414ED8();
    __break(1u);
LABEL_17:
    result = sub_231414F5C();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_231331A94(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_231331B28(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_231331CFC(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_231331CFC(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_231331B28(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_231331C9C(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_231414E24();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_231414ED8();
      __break(1u);
LABEL_10:
      v2 = sub_231414740();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_231414F5C();
    __break(1u);
LABEL_14:
    result = sub_231414ED8();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_231331C9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_231331E64();
  v4 = (_QWORD *)swift_allocObject();
  v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_231331CFC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_231331E64();
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_231414F5C();
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for DataTypeDetailConfiguration.ComponentIdentifier.BloodPressure()
{
  return &type metadata for DataTypeDetailConfiguration.ComponentIdentifier.BloodPressure;
}

ValueMetadata *type metadata accessor for BloodPressureDataTypeDetailConfigurationProvider()
{
  return &type metadata for BloodPressureDataTypeDetailConfigurationProvider;
}

void sub_231331E64()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415DF50)
  {
    v0 = sub_23141504C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415DF50);
  }
}

void sub_231331EB8()
{
  qword_255ED2C20 = 0x402E000000000000;
}

void sub_231331EC8()
{
  qword_255ED2C28 = 0x4030000000000000;
}

void sub_231331ED8()
{
  qword_255ED2C30 = 0x4028000000000000;
}

void sub_231331EE8()
{
  qword_255ED2C38 = 0x4044000000000000;
}

id sub_231331EF8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtC5Heart24AFibBurdenLifeFactorView____lazy_storage___imageView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Heart24AFibBurdenLifeFactorView____lazy_storage___imageView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Heart24AFibBurdenLifeFactorView____lazy_storage___imageView);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD668]), sel_init);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    sub_2313157C0();
    v7 = v6;
    objc_msgSend(v5, sel_setImage_, v6);

    objc_msgSend(v5, sel_setContentMode_, 4);
    v8 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

id sub_231331FC0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Heart24AFibBurdenLifeFactorView____lazy_storage___titleDetailView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Heart24AFibBurdenLifeFactorView____lazy_storage___titleDetailView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Heart24AFibBurdenLifeFactorView____lazy_storage___titleDetailView);
  }
  else
  {
    v4 = sub_231332020();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_231332020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_class *v7;
  char *v8;
  uint64_t *v9;
  char *v10;
  id v11;
  objc_super v13;

  sub_231315BB8();
  v1 = v0;
  v3 = v2;
  v4 = sub_231315C9C();
  v6 = v5;
  v7 = (objc_class *)type metadata accessor for TitleOptionalDetailsView();
  v8 = (char *)objc_allocWithZone(v7);
  v9 = (uint64_t *)&v8[OBJC_IVAR____TtC5Heart24TitleOptionalDetailsView_details];
  *v9 = 0;
  v9[1] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC5Heart24TitleOptionalDetailsView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC5Heart24TitleOptionalDetailsView____lazy_storage___detailLabel] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC5Heart24TitleOptionalDetailsView____lazy_storage___noDetailsConstraints] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC5Heart24TitleOptionalDetailsView____lazy_storage___detailsConstraints] = 0;
  v10 = &v8[OBJC_IVAR____TtC5Heart24TitleOptionalDetailsView_title];
  *(_QWORD *)v10 = v1;
  *((_QWORD *)v10 + 1) = v3;
  *v9 = v4;
  v9[1] = v6;
  swift_bridgeObjectRelease();
  v13.receiver = v8;
  v13.super_class = v7;
  v11 = objc_msgSendSuper2(&v13, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_23135CED4();
  objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v11;
}

id sub_231332130()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Heart24AFibBurdenLifeFactorView____lazy_storage___infoView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Heart24AFibBurdenLifeFactorView____lazy_storage___infoView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC5Heart24AFibBurdenLifeFactorView____lazy_storage___infoView);
  }
  else
  {
    v4 = sub_23133218C();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_23133218C()
{
  id v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  double v7;
  double v8;
  double v9;
  double v10;
  int v12;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD668]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v1 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x24BEBE1D0]);
  v2 = objc_msgSend((id)objc_opt_self(), sel_configurationWithFont_, v1);

  v3 = v2;
  v4 = (void *)sub_23141468C();
  v5 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v4, v3);

  objc_msgSend(v0, sel_setImage_, v5);
  v6 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  objc_msgSend(v0, sel_setTintColor_, v6);

  type metadata accessor for UILayoutPriority(0);
  sub_231333410();
  sub_23141378C();
  LODWORD(v7) = v12;
  objc_msgSend(v0, sel_setContentCompressionResistancePriority_forAxis_, 0, v7);
  sub_23141378C();
  LODWORD(v8) = v12;
  objc_msgSend(v0, sel_setContentCompressionResistancePriority_forAxis_, 1, v8);
  sub_23141378C();
  LODWORD(v9) = v12;
  objc_msgSend(v0, sel_setContentHuggingPriority_forAxis_, 0, v9);
  sub_23141378C();
  LODWORD(v10) = v12;
  objc_msgSend(v0, sel_setContentHuggingPriority_forAxis_, 1, v10);

  return v0;
}

char *sub_2313323EC(char a1, uint64_t a2, void *a3)
{
  _BYTE *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  id v11;
  objc_class *v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  char *v19;
  _QWORD v21[2];
  objc_super v22;

  v7 = sub_23141177C();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Heart24AFibBurdenLifeFactorView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Heart24AFibBurdenLifeFactorView____lazy_storage___imageView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Heart24AFibBurdenLifeFactorView____lazy_storage___titleDetailView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Heart24AFibBurdenLifeFactorView____lazy_storage___infoView] = 0;
  v3[OBJC_IVAR____TtC5Heart24AFibBurdenLifeFactorView_lifeFactor] = a1;
  v10 = v3;
  v11 = a3;
  sub_23141174C();
  type metadata accessor for AFibBurdenLifeFactorViewModel();
  swift_allocObject();
  *(_QWORD *)&v10[OBJC_IVAR____TtC5Heart24AFibBurdenLifeFactorView_viewModel] = sub_2313154D8(a1, a2, (uint64_t)v11, (uint64_t)v9, (uint64_t)sub_2313154D4, 0);

  v12 = (objc_class *)type metadata accessor for AFibBurdenLifeFactorView();
  v22.receiver = v10;
  v22.super_class = v12;
  v13 = objc_msgSendSuper2(&v22, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_2312D3AD4();
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_2314186B0;
  v15 = (char *)v13;
  *(_QWORD *)(v14 + 32) = sub_231331EF8();
  *(_QWORD *)(v14 + 40) = sub_231331FC0();
  *(_QWORD *)(v14 + 48) = sub_231332130();
  v21[1] = v14;
  sub_2314147B8();
  sub_231414BA8();

  swift_bridgeObjectRelease();
  v16 = sub_2312E21E8(*(unsigned __int8 *)(*(_QWORD *)&v15[OBJC_IVAR____TtC5Heart24AFibBurdenLifeFactorView_viewModel]
                                         + 16) | 0x100u);
  sub_2313326E4(v16, v17);
  swift_bridgeObjectRelease();
  sub_231332854();
  objc_msgSend(v15, sel_setUserInteractionEnabled_, 1);
  v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDA20]), sel_initWithTarget_action_, v15, sel_tapped);
  v19 = v15;
  objc_msgSend(v19, sel_addGestureRecognizer_, v18);

  return v19;
}

void sub_2313326E4(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;

  if (a2)
  {
    v3 = v2;
    v6 = (void *)sub_23141468C();
    objc_msgSend(v3, sel_setAccessibilityIdentifier_, v6);

    v7 = sub_231331EF8();
    sub_231412A90();
    sub_231414728();
    v8 = (void *)sub_23141468C();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setAccessibilityIdentifier_, v8);

    v9 = sub_231332130();
    sub_231412A90();
    sub_231414728();
    v10 = (void *)sub_23141468C();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setAccessibilityIdentifier_, v10);

    v11 = sub_231331FC0();
    sub_23135D2B4(a1, a2);

  }
}

void sub_231332854()
{
  void *v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  id v6;
  double v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  double v29;
  id v30;
  id v31;
  id v32;
  id v33;
  double v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  double v52;
  id v53;
  id v54;
  id v55;
  id v56;
  double v57;
  void *v58;
  id v59;
  int v60;

  v1 = v0;
  v59 = (id)objc_opt_self();
  sub_2312D3AD4();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_23141B9A0;
  v3 = objc_msgSend(v0, sel_heightAnchor);
  v4 = sub_231331FC0();
  v5 = objc_msgSend(v4, sel_heightAnchor);

  if (qword_255ECA9C8 != -1)
    swift_once();
  v6 = objc_msgSend(v3, sel_constraintEqualToAnchor_constant_, v5, *(double *)&qword_255ED2C20 + *(double *)&qword_255ED2C20);

  type metadata accessor for UILayoutPriority(0);
  sub_231333410();
  sub_23141378C();
  LODWORD(v7) = v60;
  objc_msgSend(v6, sel_setPriority_, v7);
  *(_QWORD *)(v2 + 32) = v6;
  v8 = sub_231331EF8();
  v9 = objc_msgSend(v8, sel_centerXAnchor);

  v10 = objc_msgSend(v1, sel_leadingAnchor);
  if (qword_255ECA9E0 != -1)
    swift_once();
  v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_constant_, v10, *(double *)&qword_255ED2C38);

  *(_QWORD *)(v2 + 40) = v11;
  v12 = sub_231331EF8();
  v13 = objc_msgSend(v12, sel_centerYAnchor);

  v14 = objc_msgSend(v1, sel_centerYAnchor);
  v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v14);

  *(_QWORD *)(v2 + 48) = v15;
  v16 = sub_231331FC0();
  v17 = objc_msgSend(v16, (SEL)&AFibBurdenPDFAFibAnnotationFormatter.reserved + 2);

  v18 = sub_231331EF8();
  v19 = objc_msgSend(v18, sel_centerXAnchor);

  v20 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v19, *(double *)&qword_255ED2C38);
  *(_QWORD *)(v2 + 56) = v20;
  v21 = sub_231331FC0();
  v22 = objc_msgSend(v21, sel_centerYAnchor);

  v23 = objc_msgSend(v1, sel_centerYAnchor);
  v24 = objc_msgSend(v22, sel_constraintEqualToAnchor_, v23);

  *(_QWORD *)(v2 + 64) = v24;
  v25 = sub_231331FC0();
  v26 = objc_msgSend(v25, sel_topAnchor);

  v27 = objc_msgSend(v1, sel_topAnchor);
  v28 = objc_msgSend(v26, sel_constraintGreaterThanOrEqualToAnchor_constant_, v27, *(double *)&qword_255ED2C20);

  sub_23141378C();
  LODWORD(v29) = v60;
  objc_msgSend(v28, sel_setPriority_, v29);
  *(_QWORD *)(v2 + 72) = v28;
  v30 = sub_231331FC0();
  v31 = objc_msgSend(v30, sel_bottomAnchor);

  v32 = objc_msgSend(v1, sel_bottomAnchor);
  v33 = objc_msgSend(v31, sel_constraintLessThanOrEqualToAnchor_constant_, v32, -*(double *)&qword_255ED2C20);

  sub_23141378C();
  LODWORD(v34) = v60;
  objc_msgSend(v33, sel_setPriority_, v34);
  *(_QWORD *)(v2 + 80) = v33;
  v35 = sub_231331FC0();
  v36 = objc_msgSend(v35, sel_trailingAnchor);

  v37 = sub_231332130();
  v38 = objc_msgSend(v37, sel_leadingAnchor);

  if (qword_255ECA9D8 != -1)
    swift_once();
  v39 = objc_msgSend(v36, sel_constraintLessThanOrEqualToAnchor_constant_, v38, -*(double *)&qword_255ED2C30);

  *(_QWORD *)(v2 + 88) = v39;
  v40 = sub_231332130();
  v41 = objc_msgSend(v40, sel_trailingAnchor);

  v42 = objc_msgSend(v1, sel_trailingAnchor);
  if (qword_255ECA9D0 != -1)
    swift_once();
  v43 = objc_msgSend(v41, sel_constraintEqualToAnchor_constant_, v42, -*(double *)&qword_255ED2C28);

  *(_QWORD *)(v2 + 96) = v43;
  v44 = sub_231332130();
  v45 = objc_msgSend(v44, sel_centerYAnchor);

  v46 = objc_msgSend(v1, sel_centerYAnchor);
  v47 = objc_msgSend(v45, sel_constraintEqualToAnchor_, v46);

  *(_QWORD *)(v2 + 104) = v47;
  v48 = sub_231332130();
  v49 = objc_msgSend(v48, sel_topAnchor);

  v50 = objc_msgSend(v1, sel_topAnchor);
  v51 = objc_msgSend(v49, sel_constraintGreaterThanOrEqualToAnchor_constant_, v50, *(double *)&qword_255ED2C20);

  sub_23141378C();
  LODWORD(v52) = v60;
  objc_msgSend(v51, sel_setPriority_, v52);
  *(_QWORD *)(v2 + 112) = v51;
  v53 = sub_231332130();
  v54 = objc_msgSend(v53, sel_bottomAnchor);

  v55 = objc_msgSend(v1, sel_bottomAnchor);
  v56 = objc_msgSend(v54, sel_constraintLessThanOrEqualToAnchor_constant_, v55, -*(double *)&qword_255ED2C20);

  sub_23141378C();
  LODWORD(v57) = v60;
  objc_msgSend(v56, sel_setPriority_, v57);
  *(_QWORD *)(v2 + 120) = v56;
  sub_2314147B8();
  sub_2312EA780();
  v58 = (void *)sub_231414788();
  swift_bridgeObjectRelease();
  objc_msgSend(v59, sel_activateConstraints_, v58);

}

uint64_t sub_23133304C()
{
  void *v0;
  uint64_t ObjectType;
  uint64_t v2;
  _BYTE *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;
  char v17;
  uint64_t v18;
  uint64_t v19;

  ObjectType = swift_getObjectType();
  if (qword_25415C170 != -1)
    swift_once();
  v2 = sub_231413780();
  sub_2312CE3B8(v2, (uint64_t)qword_254162F00);
  v3 = v0;
  v4 = sub_231413768();
  v5 = sub_23141498C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc();
    v7 = swift_slowAlloc();
    v18 = v7;
    v19 = ObjectType;
    *(_DWORD *)v6 = 136446467;
    swift_getMetatypeMetadata();
    v8 = sub_2314146E0();
    v19 = sub_23133180C(v8, v9, &v18);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2081;
    sub_231318848(v3[OBJC_IVAR____TtC5Heart24AFibBurdenLifeFactorView_lifeFactor]);
    v11 = v10;
    v12 = objc_msgSend(v10, sel_identifier, v18);

    v13 = sub_2314146BC();
    v15 = v14;

    v19 = sub_23133180C(v13, v15, &v18);
    sub_231414CBC();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v4, v5, "[%{public}s] Info button tapped for life factor %{private}s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v7, -1, -1);
    MEMORY[0x2348DE308](v6, -1, -1);

  }
  else
  {

  }
  result = MEMORY[0x2348DE3BC](&v3[OBJC_IVAR____TtC5Heart24AFibBurdenLifeFactorView_delegate]);
  if (result)
  {
    v17 = v3[OBJC_IVAR____TtC5Heart24AFibBurdenLifeFactorView_lifeFactor];
    if (MEMORY[0x2348DE3BC](result + OBJC_IVAR____TtC5Heart25AFibBurdenLifeFactorsView_delegate))
    {
      sub_2313EF7E4(v17);
      sub_2314130CC();
    }
    return sub_2314130CC();
  }
  return result;
}

id sub_231333338()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AFibBurdenLifeFactorView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AFibBurdenLifeFactorView()
{
  return objc_opt_self();
}

void sub_2313333F0(uint64_t a1, uint64_t a2)
{
  sub_2313326E4(a1, a2);
}

unint64_t sub_231333410()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ECD4A0;
  if (!qword_255ECD4A0)
  {
    type metadata accessor for UILayoutPriority(255);
    result = MEMORY[0x2348DE248](MEMORY[0x24BEBCC60], v1);
    atomic_store(result, (unint64_t *)&qword_255ECD4A0);
  }
  return result;
}

uint64_t sub_231333458()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC5Heart40AdvertisableFeatureHeartSettingsProvider_activeDeviceSource;
  v2 = sub_231411F8C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_2313334B0()
{
  return type metadata accessor for AdvertisableFeatureHeartSettingsProvider();
}

uint64_t type metadata accessor for AdvertisableFeatureHeartSettingsProvider()
{
  uint64_t result;

  result = qword_255ECD4D0;
  if (!qword_255ECD4D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2313334F4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_231411F8C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t destroy for AFibBurdenLifeFactorDescriptionItem(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 48))
    return swift_release();
  return result;
}

_QWORD *initializeWithCopy for AFibBurdenLifeFactorDescriptionItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  v8 = a2 + 6;
  v7 = a2[6];
  sub_231412A90();
  sub_231412A90();
  sub_231412A90();
  if (v7)
  {
    v9 = a2[7];
    a1[6] = v7;
    a1[7] = v9;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 3) = *v8;
  }
  return a1;
}

_QWORD *assignWithCopy for AFibBurdenLifeFactorDescriptionItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_231412A90();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_231412A90();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_231412A90();
  swift_bridgeObjectRelease();
  v4 = a2[6];
  if (!a1[6])
  {
    if (v4)
    {
      v6 = a2[7];
      a1[6] = v4;
      a1[7] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[7];
  a1[6] = v4;
  a1[7] = v5;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for AFibBurdenLifeFactorDescriptionItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[6];
  if (!a1[6])
  {
    if (v7)
    {
      v9 = a2[7];
      a1[6] = v7;
      a1[7] = v9;
      return a1;
    }
LABEL_7:
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    return a1;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_7;
  }
  v8 = a2[7];
  a1[6] = v7;
  a1[7] = v8;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AFibBurdenLifeFactorDescriptionItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AFibBurdenLifeFactorDescriptionItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenLifeFactorDescriptionItem()
{
  return &type metadata for AFibBurdenLifeFactorDescriptionItem;
}

unint64_t sub_231333878()
{
  return 0xD000000000000023;
}

unint64_t sub_231333894()
{
  return 0xD000000000000023;
}

id sub_2313338B0()
{
  return sub_23133408C(&OBJC_IVAR____TtC5Heart20BulletedIconListView____lazy_storage___stackView, 0, 1, 15.0);
}

void sub_23133393C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  char *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  char *v38;
  objc_class *v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  objc_super v44;
  unint64_t v45;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Heart20BulletedIconListView_bulletedItems];
  v2 = *(_QWORD *)(v1 + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v45 = MEMORY[0x24BEE4AF8];
    sub_231412A90();
    sub_231414EA8();
    v39 = (objc_class *)type metadata accessor for BulletedIconView();
    v40 = v1;
    v4 = 0;
    do
    {
      v43 = v2;
      v41 = v4;
      v6 = v1 + v4;
      v7 = *(_QWORD *)(v6 + 32);
      v8 = *(_QWORD *)(v6 + 40);
      v9 = *(void **)(v6 + 48);
      v10 = *(void **)(v6 + 56);
      v11 = *(_BYTE *)(v6 + 80);
      v12 = *(_QWORD *)(v6 + 88);
      v13 = *(_BYTE *)(v6 + 96);
      v14 = *(_QWORD *)(v6 + 104);
      v15 = *(_QWORD *)(v6 + 112);
      v42 = *(_OWORD *)(v6 + 64);
      v16 = (char *)objc_allocWithZone(v39);
      *(_QWORD *)&v16[OBJC_IVAR____TtC5Heart16BulletedIconView____lazy_storage___iconView] = 0;
      *(_QWORD *)&v16[OBJC_IVAR____TtC5Heart16BulletedIconView____lazy_storage___textLabel] = 0;
      *(_QWORD *)&v16[OBJC_IVAR____TtC5Heart16BulletedIconView____lazy_storage___stackView] = 0;
      v17 = &v16[OBJC_IVAR____TtC5Heart16BulletedIconView_item];
      *(_QWORD *)v17 = v7;
      *((_QWORD *)v17 + 1) = v8;
      *((_QWORD *)v17 + 2) = v9;
      *((_QWORD *)v17 + 3) = v10;
      *((_OWORD *)v17 + 2) = v42;
      v17[48] = v11;
      *((_QWORD *)v17 + 7) = v12;
      v17[64] = v13;
      *((_QWORD *)v17 + 9) = v14;
      *((_QWORD *)v17 + 10) = v15;
      v44.receiver = v16;
      v44.super_class = v39;
      swift_bridgeObjectRetain_n();
      v18 = v9;
      v19 = v10;
      v20 = (id)v42;
      swift_bridgeObjectRetain_n();
      v21 = v18;
      v22 = v19;
      v23 = v20;
      v24 = (char *)objc_msgSendSuper2(&v44, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
      v25 = sub_231334074();
      v26 = sub_231333D90();
      objc_msgSend(v25, sel_addArrangedSubview_, v26);

      v27 = sub_231334074();
      v28 = sub_231333F24();
      objc_msgSend(v27, sel_addArrangedSubview_, v28);

      v29 = sub_231334074();
      objc_msgSend(v24, sel_addSubview_, v29);

      v30 = sub_231334074();
      objc_msgSend(v30, sel_hk_alignConstraintsWithView_, v24);

      if (*(_QWORD *)&v24[OBJC_IVAR____TtC5Heart16BulletedIconView_item + 80])
        v5 = (void *)sub_23141468C();
      else
        v5 = 0;
      objc_msgSend(v24, sel_setAccessibilityIdentifier_, v5);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_231414E90();
      sub_231414EB4();
      sub_231414EC0();
      sub_231414E9C();
      v1 = v40;
      v4 = v41 + 88;
      v2 = v43 - 1;
    }
    while (v43 != 1);
    v3 = v45;
    swift_bridgeObjectRelease();
    v0 = v38;
  }
  if (!(v3 >> 62))
  {
    v31 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_231412A90();
    if (v31)
      goto LABEL_10;
LABEL_17:
    swift_bridgeObjectRelease_n();
    v36 = sub_2313338B0();
    objc_msgSend(v0, sel_addSubview_, v36);

    v37 = sub_2313338B0();
    objc_msgSend(v37, sel_hk_alignConstraintsWithView_, v0);

    return;
  }
  sub_231412A90();
  v31 = sub_231414F08();
  if (!v31)
    goto LABEL_17;
LABEL_10:
  if (v31 >= 1)
  {
    v32 = 0;
    do
    {
      if ((v3 & 0xC000000000000001) != 0)
        v33 = (id)MEMORY[0x2348DD81C](v32, v3);
      else
        v33 = *(id *)(v3 + 8 * v32 + 32);
      v34 = v33;
      ++v32;
      v35 = sub_2313338B0();
      objc_msgSend(v35, sel_addArrangedSubview_, v34);

    }
    while (v31 != v32);
    goto LABEL_17;
  }
  __break(1u);
}

id sub_231333D2C()
{
  return sub_231334858(type metadata accessor for BulletedIconListView);
}

uint64_t type metadata accessor for BulletedIconListView()
{
  return objc_opt_self();
}

id sub_231333D90()
{
  return sub_2313342FC(&OBJC_IVAR____TtC5Heart16BulletedIconView____lazy_storage___iconView, (uint64_t (*)(uint64_t))sub_231333DA4);
}

id sub_231333DA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  objc_class *v10;
  char *v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v22;
  char v23;
  objc_super v24;

  v1 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Heart16BulletedIconView_item);
  v2 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Heart16BulletedIconView_item + 8);
  v3 = *(void **)(a1 + OBJC_IVAR____TtC5Heart16BulletedIconView_item + 16);
  v4 = *(void **)(a1 + OBJC_IVAR____TtC5Heart16BulletedIconView_item + 24);
  v5 = *(void **)(a1 + OBJC_IVAR____TtC5Heart16BulletedIconView_item + 32);
  v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Heart16BulletedIconView_item + 40);
  v7 = *(_BYTE *)(a1 + OBJC_IVAR____TtC5Heart16BulletedIconView_item + 48);
  v8 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Heart16BulletedIconView_item + 56);
  v23 = *(_BYTE *)(a1 + OBJC_IVAR____TtC5Heart16BulletedIconView_item + 64);
  v9 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Heart16BulletedIconView_item + 80);
  v22 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Heart16BulletedIconView_item + 72);
  v10 = (objc_class *)type metadata accessor for BulletCircleImageView();
  v11 = (char *)objc_allocWithZone(v10);
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Heart21BulletCircleImageView____lazy_storage___iconView] = 0;
  v12 = &v11[OBJC_IVAR____TtC5Heart21BulletCircleImageView_item];
  *(_QWORD *)v12 = v1;
  *((_QWORD *)v12 + 1) = v2;
  *((_QWORD *)v12 + 2) = v3;
  *((_QWORD *)v12 + 3) = v4;
  *((_QWORD *)v12 + 4) = v5;
  *((_QWORD *)v12 + 5) = v6;
  v12[48] = v7;
  *((_QWORD *)v12 + 7) = v8;
  v12[64] = v23;
  *((_QWORD *)v12 + 9) = v22;
  *((_QWORD *)v12 + 10) = v9;
  v24.receiver = v11;
  v24.super_class = v10;
  swift_bridgeObjectRetain_n();
  v13 = v3;
  v14 = v4;
  v15 = v5;
  swift_bridgeObjectRetain_n();
  v16 = v13;
  v17 = v14;
  v18 = v15;
  v19 = objc_msgSendSuper2(&v24, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_231334684();
  v20 = v19;
  objc_msgSend(v20, sel_setOpaque_, 0);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v20;
}

id sub_231333F24()
{
  return sub_2313342FC(&OBJC_IVAR____TtC5Heart16BulletedIconView____lazy_storage___textLabel, (uint64_t (*)(uint64_t))sub_231333F38);
}

id sub_231333F38()
{
  id v0;
  id v1;
  id v2;
  double v3;
  void *v4;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  v1 = objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_variant_, *MEMORY[0x24BEBE250], 1024);
  objc_msgSend(v0, sel_setFont_, v1);

  v2 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v0, sel_setTextColor_, v2);

  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  LODWORD(v3) = 1132068864;
  objc_msgSend(v0, sel_setContentHuggingPriority_forAxis_, 0, v3);
  v4 = (void *)sub_23141468C();
  objc_msgSend(v0, sel_setText_, v4);

  return v0;
}

id sub_231334074()
{
  return sub_23133408C(&OBJC_IVAR____TtC5Heart16BulletedIconView____lazy_storage___stackView, 3, 0, 10.0);
}

id sub_23133408C(uint64_t *a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v11;
  void *v12;
  id v13;

  v5 = *a1;
  v6 = *(void **)(v4 + *a1);
  if (v6)
  {
    v7 = *(id *)(v4 + *a1);
  }
  else
  {
    v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD978]), sel_init);
    objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v11, sel_setAlignment_, a2);
    objc_msgSend(v11, sel_setAxis_, a3);
    objc_msgSend(v11, sel_setSpacing_, a4);
    v12 = *(void **)(v4 + v5);
    *(_QWORD *)(v4 + v5) = v11;
    v7 = v11;

    v6 = 0;
  }
  v13 = v6;
  return v7;
}

id sub_231334200()
{
  return sub_231334858(type metadata accessor for BulletedIconView);
}

uint64_t type metadata accessor for BulletedIconView()
{
  return objc_opt_self();
}

id sub_2313342B0()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_systemGray5Color);
  qword_255ECD5B8 = (uint64_t)result;
  return result;
}

id sub_2313342E8()
{
  return sub_2313342FC(&OBJC_IVAR____TtC5Heart21BulletCircleImageView____lazy_storage___iconView, (uint64_t (*)(uint64_t))sub_231334358);
}

id sub_2313342FC(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v6 = (void *)a2(v2);
    v7 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v6;
    v5 = v6;

    v4 = 0;
  }
  v8 = v4;
  return v5;
}

id sub_231334358(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  double v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  id v14;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD668]), sel_init);
  v3 = a1 + OBJC_IVAR____TtC5Heart21BulletCircleImageView_item;
  objc_msgSend(v2, sel_setImage_, *(_QWORD *)(a1 + OBJC_IVAR____TtC5Heart21BulletCircleImageView_item + 16));
  objc_msgSend(v2, sel_setContentMode_, 4);
  if (*(_QWORD *)(v3 + 24))
    objc_msgSend(v2, sel_setTintColor_);
  v4 = *(void **)(v3 + 32);
  if (v4 && (*(_BYTE *)(v3 + 48) & 1) == 0 && (*(_BYTE *)(v3 + 64) & 1) == 0)
  {
    v5 = *(_QWORD *)(v3 + 56);
    v6 = *(double *)(v3 + 40);
    v7 = (void *)objc_opt_self();
    v8 = v4;
    v9 = objc_msgSend(v7, sel_configurationWithPointSize_weight_, v5, v6);
    sub_2312D3AD4();
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_231417F90;
    *(_QWORD *)(v10 + 32) = v8;
    sub_2314147B8();
    sub_2312D3C68(0, (unint64_t *)&qword_255ECC818);
    v11 = v8;
    v12 = (void *)sub_231414788();
    swift_bridgeObjectRelease();
    v13 = objc_msgSend(v7, sel_configurationWithPaletteColors_, v12);

    v14 = objc_msgSend(v9, sel_configurationByApplyingConfiguration_, v13);
    objc_msgSend(v2, sel_setPreferredSymbolConfiguration_, v14);

  }
  return v2;
}

void sub_231334684()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;

  v1 = v0;
  v2 = sub_2313342E8();
  objc_msgSend(v1, sel_addSubview_, v2);

  v3 = sub_2313342E8();
  objc_msgSend(v3, sel_hk_alignConstraintsWithView_, v1);

  v4 = objc_msgSend(v1, sel_heightAnchor);
  v5 = objc_msgSend(v4, sel_constraintEqualToConstant_, 60.0);

  v6 = objc_msgSend(v1, sel_widthAnchor);
  v7 = objc_msgSend(v6, sel_constraintEqualToConstant_, 60.0);

  sub_2312D3AD4();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_231418140;
  *(_QWORD *)(v8 + 32) = v7;
  *(_QWORD *)(v8 + 40) = v5;
  sub_2314147B8();
  sub_2312D3C68(0, (unint64_t *)&qword_255ED2440);
  v9 = v7;
  v10 = v5;
  v11 = (id)sub_231414788();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_addConstraints_, v11);

}

void sub_231334824()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_23133484C()
{
  return sub_231334858(type metadata accessor for BulletCircleImageView);
}

id sub_231334858(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for BulletCircleImageView()
{
  return objc_opt_self();
}

uint64_t destroy for BulletedIconItem(id *a1)
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BulletedIconItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(void **)(a2 + 16);
  v5 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  v7 = *(void **)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v6;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  sub_231412A90();
  v9 = v4;
  v10 = v5;
  v11 = v7;
  sub_231412A90();
  return a1;
}

uint64_t assignWithCopy for BulletedIconItem(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_231412A90();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a2 + 16);
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  v6 = v4;

  v7 = *(void **)(a1 + 24);
  v8 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v8;
  v9 = v8;

  v10 = *(void **)(a1 + 32);
  v11 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v11;
  v12 = v11;

  v13 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v13;
  v14 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v14;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  sub_231412A90();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for BulletedIconItem(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for BulletedIconItem(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BulletedIconItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BulletedIconItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BulletedIconItem()
{
  return &type metadata for BulletedIconItem;
}

void sub_231334BF8(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, double a8@<D0>)
{
  id v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;

  v13 = a3;
  v14 = (void *)sub_23141468C();
  v15 = (void *)objc_opt_self();
  v16 = objc_msgSend(v15, sel_systemImageNamed_, v14);

  if (v16)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = (void *)sub_23141468C();
    swift_bridgeObjectRelease();
    v16 = objc_msgSend(v15, sel__systemImageNamed_, v17);

    if (!v16)
      v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD640]), sel_init);
  }

  *(_QWORD *)a7 = a1;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = v16;
  *(_QWORD *)(a7 + 24) = 0;
  *(_QWORD *)(a7 + 32) = v13;
  *(double *)(a7 + 40) = a8;
  *(_BYTE *)(a7 + 48) = 0;
  *(_QWORD *)(a7 + 56) = a4;
  *(_BYTE *)(a7 + 64) = 0;
  *(_QWORD *)(a7 + 72) = a5;
  *(_QWORD *)(a7 + 80) = a6;
}

uint64_t sub_231334D40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v0 = sub_2314119E0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_231411A04();
  sub_2312D6D6C(v4, qword_254162FD8);
  sub_2312CE3B8(v4, (uint64_t)qword_254162FD8);
  sub_2314118FC();
  sub_2312D6DD8(0, (unint64_t *)&qword_25415DF20, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v5 = sub_231411890();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_231416A30;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v6 + 104))(v8 + v7, *MEMORY[0x24BE474E0], v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BE47910], v0);
  return sub_2314119EC();
}

_QWORD *sub_231334EA0(__int16 a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v3 = v2;
  v25 = a2;
  v22 = *v2;
  v5 = sub_231411A4C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312E5F10();
  v23 = *(_QWORD *)(v9 - 8);
  v24 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = OBJC_IVAR____TtC5Heart36AtrialFibrillationPromotionGenerator_domain;
  if (qword_25415E280 != -1)
    swift_once();
  v13 = sub_231411A04();
  v14 = sub_2312CE3B8(v13, (uint64_t)qword_254162FD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))((uint64_t)v3 + v12, v14, v13);
  *(_WORD *)((char *)v3 + OBJC_IVAR____TtC5Heart36AtrialFibrillationPromotionGenerator_result) = a1;
  v15 = v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v25, v5);
  v16 = (*(unsigned __int8 *)(v6 + 80) + 18) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v17 = (v7 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject();
  *(_WORD *)(v18 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v18 + v16, v8, v5);
  *(_QWORD *)(v18 + v17) = v22;
  sub_2312E5F88();
  sub_2312CCC24(&qword_25415DD90, (uint64_t (*)(uint64_t))sub_2312E5F88, MEMORY[0x24BDB9AF8]);
  sub_231413E04();
  sub_2312CCC24((unint64_t *)&qword_25415DE20, (uint64_t (*)(uint64_t))sub_2312E5F10, MEMORY[0x24BDB9E90]);
  v19 = v24;
  v20 = sub_231413E7C();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v15, v5);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v19);
  v3[2] = v20;
  return v3;
}

uint64_t sub_2313350DC@<X0>(int a1@<W0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  sub_2312E7F5C(0);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_231413780();
  v35 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2313353EC(a1);
  sub_231412148();
  swift_bridgeObjectRetain_n();
  v15 = sub_231413768();
  v16 = sub_23141498C();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v32 = v8;
    v18 = v17;
    v31 = swift_slowAlloc();
    v36 = v31;
    v37 = a2;
    *(_DWORD *)v18 = 136446466;
    v33 = v7;
    swift_getMetatypeMetadata();
    v34 = a3;
    v19 = sub_2314146E0();
    v37 = sub_23133180C(v19, v20, &v36);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2082;
    v21 = sub_231412A90();
    v22 = MEMORY[0x2348DD18C](v21, MEMORY[0x24BE47F58]);
    v30 = v11;
    v24 = v23;
    swift_bridgeObjectRelease();
    v25 = v22;
    v7 = v33;
    v37 = sub_23133180C(v25, v24, &v36);
    a3 = v34;
    sub_231414CBC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v15, v16, "[%{public}s]: Returning these changes: %{public}s", (uint8_t *)v18, 0x16u);
    v26 = v31;
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v26, -1, -1);
    v27 = v18;
    v8 = v32;
    MEMORY[0x2348DE308](v27, -1, -1);

    (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v30);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v11);
  }
  v37 = v14;
  sub_2312E7D6C();
  sub_231413DD4();
  sub_2312CCC24((unint64_t *)&qword_25415DDC8, (uint64_t (*)(uint64_t))sub_2312E7F5C, MEMORY[0x24BDB9DF8]);
  v28 = sub_231413E7C();
  result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *a3 = v28;
  return result;
}

uint64_t sub_2313353EC(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(void);
  char *v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int *v49;
  __int16 v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t, uint64_t);
  char *v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  char *v71;
  NSObject *v72;
  os_log_type_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  _QWORD v83[2];
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  int v91;
  unsigned int (*v92)(char *, uint64_t, uint64_t);
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  __int128 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112[4];

  v91 = a1;
  LODWORD(v97) = a1;
  v109 = sub_231413780();
  v106 = *(_QWORD *)(v109 - 8);
  v1 = MEMORY[0x24BDAC7A8](v109);
  v105 = (char *)v83 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v90 = (char *)v83 - v3;
  v4 = sub_2314119B0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v104 = (char *)v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v88 = (char *)v83 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v87 = (char *)v83 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v86 = (char *)v83 - v12;
  sub_231336A1C(0);
  MEMORY[0x24BDAC7A8](v13);
  v95 = (char *)v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_231411AC4();
  v94 = *(_QWORD *)(v96 - 8);
  MEMORY[0x24BDAC7A8](v96);
  v93 = (char *)v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312E804C(0);
  v110 = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v108 = (char *)v83 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v103 = (uint64_t)v83 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v85 = (uint64_t)v83 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)v83 - v25;
  v27 = MEMORY[0x24BDAC7A8](v24);
  v29 = (char *)v83 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v107 = (uint64_t)v83 - v30;
  sub_2312D6DD8(0, (unint64_t *)&unk_25415DF28, v31, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v32 = *(unsigned __int8 *)(v17 + 80);
  v33 = (v32 + 32) & ~v32;
  v34 = v33 + *(_QWORD *)(v17 + 72);
  v101 = v35;
  v100 = v34;
  v99 = v32 | 7;
  v36 = swift_allocObject();
  v98 = xmmword_231416A30;
  *(_OWORD *)(v36 + 16) = xmmword_231416A30;
  v102 = v33;
  v37 = v36 + v33;
  sub_231411A10();
  sub_2312CEA5C(v112, v112[3]);
  v84 = sub_231336A38(0);
  v111 = v84;
  v83[1] = sub_231336A4C(0, &qword_25415DBB0, (void (*)(uint64_t))sub_231336A38);
  sub_2314146E0();
  sub_2314119D4();
  v38 = v4;
  swift_bridgeObjectRelease();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v112);
  sub_231412A90();
  sub_2312E8068(v37, (uint64_t)v29);
  sub_2312E8120((uint64_t)v29, (uint64_t)v26);
  v92 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (v92(v26, 1, v4) == 1)
  {
    sub_2312CEBD4((uint64_t)v26, (uint64_t (*)(_QWORD))sub_2312E804C);
    v39 = (uint64_t)v93;
  }
  else
  {
    v40 = *(void (**)(void))(v5 + 32);
    ((void (*)(char *, char *, uint64_t))v40)(v86, v26, v4);
    v41 = v87;
    v40();
    v42 = MEMORY[0x24BEE4AF8];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v42 = sub_2312CDA58(0, *(_QWORD *)(v42 + 16) + 1, 1, v42);
    v44 = *(_QWORD *)(v42 + 16);
    v43 = *(_QWORD *)(v42 + 24);
    v39 = (uint64_t)v93;
    if (v44 >= v43 >> 1)
      v42 = sub_2312CDA58(v43 > 1, v44 + 1, 1, v42);
    *(_QWORD *)(v42 + 16) = v44 + 1;
    ((void (*)(unint64_t, char *, uint64_t))v40)(v42+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v44, v41, v38);
  }
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v45 = v96;
  v46 = v94;
  if ((_DWORD)v97)
  {
    v47 = (uint64_t)v108;
    if ((_DWORD)v97 == 2)
    {
      v48 = (uint64_t)v95;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v94 + 56))(v95, 1, 1, v96);
      sub_2312CEBD4(v48, (uint64_t (*)(_QWORD))sub_231336A1C);
      goto LABEL_16;
    }
    v49 = (unsigned int *)MEMORY[0x24BE47C78];
  }
  else
  {
    v49 = (unsigned int *)MEMORY[0x24BE47C80];
    v47 = (uint64_t)v108;
  }
  v50 = v91;
  v51 = v95;
  (*(void (**)(char *, _QWORD, uint64_t))(v94 + 104))(v95, *v49, v96);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v51, 0, 1, v45);
  (*(void (**)(uint64_t, char *, uint64_t))(v46 + 32))(v39, v51, v45);
  if ((v50 & 0xFF00) == 0x100)
  {
    v52 = v85;
    sub_231336174(v39, v85);
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v39, v45);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v52, 0, 1, v38);
    v53 = v107;
    sub_2312E8120(v52, v107);
    goto LABEL_21;
  }
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v39, v45);
LABEL_16:
  v53 = v107;
  if (qword_25415DF98 != -1)
    swift_once();
  sub_2312CE3B8(v109, (uint64_t)qword_254162FF0);
  v54 = sub_231413768();
  v55 = sub_23141498C();
  if (os_log_type_enabled(v54, v55))
  {
    v56 = swift_slowAlloc();
    v57 = swift_slowAlloc();
    v97 = v5;
    v96 = v38;
    v58 = v57;
    *(_DWORD *)v56 = 136446466;
    v111 = v84;
    v112[0] = v57;
    v59 = sub_2314146E0();
    v111 = sub_23133180C(v59, v60, v112);
    sub_231414CBC();
    v47 = (uint64_t)v108;
    swift_bridgeObjectRelease();
    *(_WORD *)(v56 + 12) = 2082;
    v111 = sub_23133180C(0xD000000000000010, 0x800000023142A740, v112);
    sub_231414CBC();
    _os_log_impl(&dword_2312C8000, v54, v55, "[%{public}s.%{public}s] Deleting feedItem", (uint8_t *)v56, 0x16u);
    swift_arrayDestroy();
    v61 = v58;
    v38 = v96;
    v5 = v97;
    MEMORY[0x2348DE308](v61, -1, -1);
    MEMORY[0x2348DE308](v56, -1, -1);
  }

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v53, 1, 1, v38);
LABEL_21:
  v62 = swift_allocObject();
  *(_OWORD *)(v62 + 16) = v98;
  v63 = v62 + v102;
  sub_2312E8068(v53, v62 + v102);
  v64 = v103;
  sub_2312E8068(v63, v103);
  sub_2312E8120(v64, v47);
  if (v92((char *)v47, 1, v38) == 1)
  {
    sub_2312CEBD4(v47, (uint64_t (*)(_QWORD))sub_2312E804C);
  }
  else
  {
    v65 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 32);
    v66 = v88;
    v65(v88, v47, v38);
    v65(v104, (uint64_t)v66, v38);
    v67 = MEMORY[0x24BEE4AF8];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v67 = sub_2312CDA58(0, *(_QWORD *)(v67 + 16) + 1, 1, v67);
    v69 = *(_QWORD *)(v67 + 16);
    v68 = *(_QWORD *)(v67 + 24);
    if (v69 >= v68 >> 1)
      v67 = sub_2312CDA58(v68 > 1, v69 + 1, 1, v67);
    *(_QWORD *)(v67 + 16) = v69 + 1;
    v65((char *)(v67+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v69), (uint64_t)v104, v38);
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v70 = sub_2314147C4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v71 = v90;
  sub_231412148();
  swift_bridgeObjectRetain_n();
  v72 = sub_231413768();
  v73 = sub_23141498C();
  if (os_log_type_enabled(v72, v73))
  {
    v74 = swift_slowAlloc();
    v75 = swift_slowAlloc();
    v111 = v75;
    *(_DWORD *)v74 = 136446466;
    v112[0] = v89;
    swift_getMetatypeMetadata();
    v76 = sub_2314146E0();
    v112[0] = sub_23133180C(v76, v77, &v111);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v74 + 12) = 2082;
    v78 = sub_231412A90();
    v79 = MEMORY[0x2348DD18C](v78, MEMORY[0x24BE47F58]);
    v81 = v80;
    swift_bridgeObjectRelease();
    v112[0] = sub_23133180C(v79, v81, &v111);
    sub_231414CBC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v72, v73, "[%{public}s]: Computed needed PluginFeedItemChanges: %{public}s", (uint8_t *)v74, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v75, -1, -1);
    MEMORY[0x2348DE308](v74, -1, -1);

    (*(void (**)(char *, uint64_t))(v106 + 8))(v90, v109);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    (*(void (**)(char *, uint64_t))(v106 + 8))(v71, v109);
  }
  sub_2312CEBD4(v53, (uint64_t (*)(_QWORD))sub_2312E804C);
  return v70;
}

id sub_231336174@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t *v12;
  uint64_t *v13;
  char *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  id result;
  void *v36;
  uint64_t v37;
  void (*v38)(uint64_t *, _QWORD);
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59[5];

  v56 = a2;
  v57 = a1;
  v54 = sub_231411AC4();
  v51 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v52 = (char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_231411AE8();
  v53 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v50 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_231411F44();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_231411F50();
  v43 = *(_QWORD *)(v7 - 8);
  v44 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v49 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_231336A38(0);
  v59[0] = v48;
  v47 = sub_231336A4C(0, &qword_25415DBB0, (void (*)(uint64_t))sub_231336A38);
  v9 = sub_2314146E0();
  v45 = v10;
  v46 = v9;
  sub_231336A84();
  v12 = (uint64_t *)&v6[v11[12]];
  v13 = (uint64_t *)&v6[v11[16]];
  v14 = &v6[v11[20]];
  v15 = (id)HRHeartRhythmUIFrameworkBundle();
  sub_231411D64();
  v16 = (id)HRHeartRhythmUIFrameworkBundle();
  v17 = sub_231411374();
  v19 = v18;

  *v12 = v17;
  v12[1] = v19;
  v20 = (id)HRHeartRhythmUIFrameworkBundle();
  v21 = sub_231411374();
  v23 = v22;

  *v13 = v21;
  v13[1] = v23;
  sub_231411D04();
  v24 = *MEMORY[0x24BE41358];
  v25 = sub_231411D4C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v14, v24, v25);
  v26 = *MEMORY[0x24BE41A58];
  v27 = sub_231411F38();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v6, v26, v27);
  swift_storeEnumTagMultiPayload();
  if (qword_25415E610 != -1)
    swift_once();
  sub_231411374();
  sub_231411374();
  sub_231411374();
  v28 = v49;
  sub_231411F20();
  v59[0] = v48;
  sub_2314146E0();
  v29 = sub_231336B94();
  v31 = v30;
  v32 = (void *)sub_2314118FC();
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_231414F08())
    sub_23138EEC4(MEMORY[0x24BEE4AF8]);
  type metadata accessor for AtrialFibrillationPromotionTileActionHandler();
  sub_2312CCC24(&qword_255ECD680, (uint64_t (*)(uint64_t))type metadata accessor for AtrialFibrillationPromotionTileActionHandler, (uint64_t)&unk_23141BEA8);
  sub_23141192C();
  swift_bridgeObjectRelease();

  sub_231311034(v29, v31);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v52, v57, v54);
  v33 = v50;
  sub_231411AF4();
  v34 = v55;
  sub_231411944();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v33, v34);
  result = objc_msgSend((id)objc_opt_self(), sel_atrialFibrillationEventType);
  if (result)
  {
    v36 = result;
    v37 = sub_231411A88();

    v38 = (void (*)(uint64_t *, _QWORD))sub_23141198C();
    v39 = *(_QWORD *)(v37 + 16);
    if (v39)
    {
      v40 = (uint64_t *)(v37 + 40);
      do
      {
        v41 = *(v40 - 1);
        v42 = *v40;
        sub_231412A90();
        sub_2313F2664(&v58, v41, v42);
        swift_bridgeObjectRelease();
        v40 += 2;
        --v39;
      }
      while (v39);
    }
    swift_bridgeObjectRelease();
    v38(v59, 0);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v28, v44);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2313367E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC5Heart36AtrialFibrillationPromotionGenerator_domain;
  v2 = sub_231411A04();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_231336840()
{
  return type metadata accessor for AtrialFibrillationPromotionGenerator();
}

uint64_t type metadata accessor for AtrialFibrillationPromotionGenerator()
{
  uint64_t result;

  result = qword_25415DAE8;
  if (!qword_25415DAE8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_231336884()
{
  uint64_t result;
  unint64_t v1;

  result = sub_231411A04();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_231336908()
{
  return swift_retain();
}

uint64_t sub_231336914@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC5Heart36AtrialFibrillationPromotionGenerator_domain;
  v4 = sub_231411A04();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23133695C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_231411A4C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 18) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_2313369C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_231411A4C();
  return sub_2313350DC(*(unsigned __int16 *)(v1 + 16), *(_QWORD *)(v1+ ((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64)+ ((*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 18) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80))+ 7) & 0xFFFFFFFFFFFFF8)), a1);
}

void sub_231336A1C(uint64_t a1)
{
  sub_2312D6DD8(a1, &qword_25415D528, (uint64_t (*)(uint64_t))MEMORY[0x24BE47C90], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

uint64_t sub_231336A38(uint64_t a1)
{
  return sub_231336A4C(a1, &qword_25415DBA8, (void (*)(uint64_t))type metadata accessor for AtrialFibrillationPromotionGenerator);
}

uint64_t sub_231336A4C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    a3(255);
    result = swift_getMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_231336A84()
{
  unint64_t TupleTypeMetadata;
  uint64_t v1;

  if (!qword_255ECD678)
  {
    MEMORY[0x24BDAC7A8](0);
    sub_231411D70();
    sub_231411D4C();
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_255ECD678);
  }
}

uint64_t sub_231336B94()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD v7[3];
  uint64_t v8;

  v0 = sub_231411AC4();
  v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BE47C90];
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BE47C80], v0);
  sub_2312CCC24(&qword_255ECD688, v1, MEMORY[0x24BE47CA0]);
  sub_231414758();
  sub_231414758();
  LOBYTE(v1) = v8 != v7[2];
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v0);
  sub_2314111E8();
  swift_allocObject();
  sub_2314111DC();
  LOBYTE(v8) = (_BYTE)v1;
  sub_231336CF0();
  v5 = sub_2314111D0();
  swift_release();
  return v5;
}

unint64_t sub_231336CF0()
{
  unint64_t result;

  result = qword_255ECD690;
  if (!qword_255ECD690)
  {
    result = MEMORY[0x2348DE248](&protocol conformance descriptor for PromotionUserData, &type metadata for PromotionUserData);
    atomic_store(result, (unint64_t *)&qword_255ECD690);
  }
  return result;
}

uint64_t type metadata accessor for AFibBurdenGetStartedDataSource(uint64_t a1)
{
  return sub_2312F19EC(a1, qword_255ECD6A8);
}

uint64_t sub_231336D48()
{
  return swift_initClassMetadata2();
}

unint64_t sub_231336D90(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_231339070(0, (unint64_t *)&qword_255ED1EE0);
  v2 = sub_231414F44();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  v7 = MEMORY[0x24BEE0D00];
  while (1)
  {
    sub_231339024(v6, (uint64_t)&v16, (uint64_t)&qword_255ED1ED0, v7, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_2313390BC);
    v8 = v16;
    v9 = v17;
    result = sub_231338800(v16, v17);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v12 = (uint64_t *)(v3[6] + 16 * result);
    *v12 = v8;
    v12[1] = v9;
    result = (unint64_t)sub_231304744(&v18, (_OWORD *)(v3[7] + 32 * result));
    v13 = v3[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v3[2] = v15;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_231336F00(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17;
  __int128 v18;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_231339070(0, &qword_255ECD730);
  v2 = sub_231414F44();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  v7 = MEMORY[0x24BEE23D0];
  while (1)
  {
    sub_231339024(v6, (uint64_t)v16, (uint64_t)&unk_255ECD738, v7, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_2313390BC);
    result = sub_231338864((uint64_t)v16);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v10 = v3[6] + 40 * result;
    v11 = v16[0];
    v12 = v16[1];
    *(_QWORD *)(v10 + 32) = v17;
    *(_OWORD *)v10 = v11;
    *(_OWORD *)(v10 + 16) = v12;
    result = (unint64_t)sub_231304744(&v18, (_OWORD *)(v3[7] + 32 * result));
    v13 = v3[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v3[2] = v15;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_231337080(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t result;
  char v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[2];

  sub_231339188(0, (unint64_t *)&qword_255ECD740, (void (*)(uint64_t))type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (_QWORD *)((char *)v26 - v5);
  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_2313391EC();
  v7 = sub_231414F44();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = (uint64_t)v6 + *(int *)(v3 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v26[1] = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_231339250(v13, (uint64_t)v6);
    v15 = *v6;
    v16 = v6[1];
    result = sub_231338800(*v6, v16);
    if ((v18 & 1) != 0)
      break;
    v19 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v20 = (uint64_t *)(v8[6] + 16 * result);
    *v20 = v15;
    v20[1] = v16;
    v21 = v8[7];
    v22 = type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(0);
    result = sub_231317058(v10, v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v19);
    v23 = v8[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_11;
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23133721C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_2313392AC(0, &qword_255ECD720, (uint64_t (*)(uint64_t))type metadata accessor for Key, (unint64_t *)&qword_255ECAE58, (uint64_t)&unk_231417C68);
  v2 = sub_231414F44();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_231339024(v6, (uint64_t)&v13, (uint64_t)&unk_255ECD718, (uint64_t)type metadata accessor for Key, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_231339338);
    v7 = v13;
    result = sub_231338898(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_231304744(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_231337384(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_231339070(0, &qword_255ECD728);
  v2 = (_QWORD *)sub_231414F44();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_BYTE *)(a1 + 48);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 2);
    v6 = *((_QWORD *)v4 - 1);
    v7 = *v4;
    sub_231412A90();
    result = sub_231338800(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_BYTE *)(v2[7] + result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2313374B0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_2313392AC(0, &qword_255ECD760, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (unint64_t *)&qword_255ECAE48, (uint64_t)&unk_231417AD4);
  v2 = sub_231414F44();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_231339024(v6, (uint64_t)&v13, (uint64_t)&unk_255ECD768, (uint64_t)type metadata accessor for OpenExternalURLOptionsKey, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_231339338);
    v7 = v13;
    result = sub_231338954(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_231304744(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_231337618@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v2 = v1;
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, qword_255ECD770, (uint64_t (*)(uint64_t))MEMORY[0x24BE43418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v21 - v6;
  sub_2312D6DD8(0, (unint64_t *)&qword_255ECBCC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], v4);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v21 - v9;
  v12 = *(_QWORD *)(v2 + qword_255ECD698);
  v11 = *(_QWORD *)(v2 + qword_255ECD698 + 8);
  sub_231412A90();
  v13 = sub_231413174();
  if (*(_QWORD *)(v13 + 16) && (v14 = sub_231338800(v12, v11), (v15 & 1) != 0))
  {
    v16 = *(_BYTE *)(*(_QWORD *)(v13 + 56) + v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v16 = 2;
  }
  sub_231413168();
  v17 = sub_231412880();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v7, 1, v17))
  {
    sub_231339398((uint64_t)v7, (uint64_t)qword_255ECD770, (uint64_t)MEMORY[0x24BE43418], (uint64_t)MEMORY[0x24BEE1C68], (uint64_t (*)(_QWORD))sub_2312D6DD8);
    v18 = sub_2314112F0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 1, 1, v18);
  }
  else
  {
    sub_231412838();
    sub_231339398((uint64_t)v7, (uint64_t)qword_255ECD770, (uint64_t)MEMORY[0x24BE43418], (uint64_t)MEMORY[0x24BEE1C68], (uint64_t (*)(_QWORD))sub_2312D6DD8);
  }
  *a1 = v16;
  v19 = type metadata accessor for AFibBurdenOnboardingDetails(0);
  return sub_231302FE0((uint64_t)v10, (uint64_t)&a1[*(int *)(v19 + 20)]);
}

uint64_t sub_231337820()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  unint64_t v26;
  uint64_t v27;
  unsigned int v28;
  void (*v29)(_QWORD);
  uint64_t v30;

  v1 = (_QWORD *)(v0 + qword_255ECD698);
  *v1 = 0xD000000000000014;
  v1[1] = 0x800000023142A9A0;
  v2 = (_QWORD *)(v0 + qword_255ECD6A0);
  *v2 = 0xD000000000000017;
  v2[1] = 0x800000023142A9C0;
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598];
  sub_2312D6DD8(0, &qword_255ECD748, (uint64_t (*)(uint64_t))MEMORY[0x24BE43210], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_2314127A8();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_231418090;
  sub_2312D6DD8(0, &qword_255ECD750, (uint64_t (*)(uint64_t))MEMORY[0x24BE43200], v3);
  v4 = sub_231412790();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 72);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_231416A30;
  v9 = v8 + v7;
  v10 = *MEMORY[0x24BE431C8];
  v11 = sub_231412760();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  v29 = *(void (**)(_QWORD))(v5 + 104);
  v30 = v4;
  ((void (*)(unint64_t, _QWORD, uint64_t))v29)(v9, *MEMORY[0x24BE431F8], v4);
  swift_retain();
  sub_23141279C();
  v27 = v6;
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_231418090;
  if (qword_255ECAAD8 != -1)
    swift_once();
  sub_231411374();
  sub_2312D6DD8(0, &qword_255ECD758, (uint64_t (*)(uint64_t))MEMORY[0x24BE431E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_231412778();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_231416A30;
  sub_231412A90();
  sub_231412A90();
  sub_23141276C();
  sub_2312E42E4();
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_231418090;
  *(_QWORD *)(v13 + 32) = 0xD000000000000014;
  *(_QWORD *)(v13 + 40) = 0x8000000231427740;
  *(_QWORD *)(v13 + 48) = 0x7472617453746547;
  *(_QWORD *)(v13 + 56) = 0xEA00000000006465;
  v14 = sub_2312CDA80((_QWORD *)1, 3, 1, (_QWORD *)v13);
  v14[2] = 3;
  v14[8] = 0xD000000000000012;
  v14[9] = 0x800000023142A9E0;
  v15 = (void *)sub_231414788();
  swift_bridgeObjectRelease();
  v16 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v16)
  {
    v17 = v12 + v7;
    sub_2314146BC();

    swift_arrayDestroy();
    sub_231412784();
    v28 = *MEMORY[0x24BE431D8];
    v29(v12 + v7);
    v26 = 0xE000000000000000;
    sub_231411374();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_231416A30;
    sub_231412A90();
    sub_231412A90();
    sub_23141276C();
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_231418090;
    *(_QWORD *)(v18 + 32) = 0xD000000000000014;
    *(_QWORD *)(v18 + 40) = 0x8000000231427740;
    *(_QWORD *)(v18 + 48) = 0x7472617453746547;
    *(_QWORD *)(v18 + 56) = 0xEA00000000006465;
    v19 = sub_2312CDA80((_QWORD *)1, 3, 1, (_QWORD *)v18);
    v19[2] = 3;
    v19[8] = 0xD000000000000011;
    v19[9] = 0x800000023142AA00;
    v20 = (void *)sub_231414788();
    swift_bridgeObjectRelease();
    v21 = (id)HKUIJoinStringsForAutomationIdentifier();

    if (v21)
    {
      v22 = sub_2314146BC();
      v24 = v23;

      swift_arrayDestroy();
      LOBYTE(v26) = 1;
      sub_231412784();
      swift_release();
      ((void (*)(unint64_t, _QWORD, uint64_t))v29)(v17 + v27, v28, v30);
      sub_23141279C();
      objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3C40]), sel_init, v26, v22, v24);
      sub_231413048();
      swift_allocObject();
      sub_23141303C();
      return sub_231413198();
    }
  }
  else
  {
    swift_arrayDestroy();
    __break(1u);
  }
  result = swift_arrayDestroy();
  __break(1u);
  return result;
}

void sub_231337F2C()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_231337F58()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_231337F8C()
{
  sub_2314131A4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_231337FE0()
{
  return type metadata accessor for AFibBurdenGetStartedDataSource(0);
}

uint64_t sub_231337FE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(_BYTE *, _QWORD);
  id v17;
  void (*v18)(_BYTE *, _QWORD);
  _BYTE v19[32];

  sub_231339188(0, (unint64_t *)&qword_255ECD6F8, (void (*)(uint64_t))MEMORY[0x24BE41FD8]);
  v5 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)&v19[-v6];
  v8 = sub_2314117E8();
  v9 = (char *)v7 + *(int *)(v5 + 48);
  *v7 = v8;
  v10 = sub_23141204C();
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);
  if ((*(unsigned int (**)(char *, uint64_t))(v11 + 88))(v9, v10) == *MEMORY[0x24BE41FD0] && v8 == 1)
  {
    if (qword_255ECAAD8 != -1)
      swift_once();
    sub_231411374();
    v14 = sub_231413930();
    v15 = MEMORY[0x24BEBC5F0];
    *(_QWORD *)(a2 + 24) = v14;
    *(_QWORD *)(a2 + 32) = v15;
    sub_2312DFCA0((uint64_t *)a2);
    sub_231413864();
    sub_231412A90();
    sub_231413924();
    sub_2312D3C68(0, (unint64_t *)&qword_255ECB510);
    sub_231414B9C();
    v16 = (void (*)(_BYTE *, _QWORD))sub_2314138B8();
    sub_231413894();
    v16(v19, 0);
    v17 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    v18 = (void (*)(_BYTE *, _QWORD))sub_2314138B8();
    sub_2314138A0();
    v18(v19, 0);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v9, v10);
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return sub_231339398((uint64_t)v7, (uint64_t)&qword_255ECD6F8, (uint64_t)MEMORY[0x24BE41FD8], MEMORY[0x24BEE1768], (uint64_t (*)(_QWORD))sub_231339188);
  }
}

uint64_t sub_2313382A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_231337FE8(a1, a2);
}

id sub_2313382B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  uint64_t inited;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;

  v4 = v3;
  v45 = a1;
  v46 = a2;
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, (unint64_t *)&qword_255ECD700, (uint64_t (*)(uint64_t))MEMORY[0x24BEBD1F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v47 = (char *)&v38 - v8;
  v9 = sub_23141138C();
  MEMORY[0x24BDAC7A8](v9);
  v41 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6DD8(0, &qword_255ECD708, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], v6);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v38 - v12;
  v44 = sub_231414C74();
  v14 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_2314138AC();
  v42 = *(_QWORD *)(v17 - 8);
  v43 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_231413930();
  v39 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 1);
  objc_msgSend(v22, sel_addTarget_action_forControlEvents_, v4, a3, 64);
  sub_231413870();
  sub_2314138C4();
  sub_2314138F4();
  v23 = v22;
  if (objc_msgSend(v23, sel_effectiveUserInterfaceLayoutDirection) == (id)1)
    v24 = 2;
  else
    v24 = 1;
  objc_msgSend(v23, sel_setContentHorizontalAlignment_, v24);

  v25 = objc_msgSend(v23, sel_titleLabel);
  if (v25)
  {
    v26 = v25;
    v27 = (void *)sub_231413888();
    objc_msgSend(v26, sel_setFont_, v27);

  }
  v28 = objc_msgSend(v23, sel_titleLabel);
  if (v28)
  {
    v29 = v28;
    objc_msgSend(v28, sel_setNumberOfLines_, 0);

  }
  sub_231414C5C();
  sub_231414C38();
  sub_231338FC0();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_231416A30;
  v31 = (void *)*MEMORY[0x24BEBB360];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BEBB360];
  sub_231412A90();
  v32 = v31;
  v33 = sub_231413888();
  *(_QWORD *)(inited + 64) = sub_2312D3C68(0, (unint64_t *)&qword_255ECB510);
  *(_QWORD *)(inited + 40) = v33;
  sub_23133721C(inited);
  sub_231411398();
  sub_231411368();
  v34 = sub_23141135C();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v13, 0, 1, v34);
  sub_231414C44();
  v35 = v47;
  v36 = v44;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v47, v16, v44);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v35, 0, 1, v36);
  sub_231414C98();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v36);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v19, v43);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v21, v40);
  return v23;
}

uint64_t sub_231338700()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_231413180();
  if (result)
  {
    v1 = result;
    swift_getObjectType();
    v2 = swift_conformsToProtocol2();
    if (v2)
      v3 = v2;
    else
      v3 = 0;
    if (v2)
      v4 = v1;
    else
      v4 = 0;
    if (v4)
    {
      ObjectType = swift_getObjectType();
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(ObjectType, v3))
      {
        v7 = v6;
        v8 = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 24))(v4, v3, v8, v7);
        sub_2314130CC();
      }
    }
    return sub_2314130CC();
  }
  return result;
}

uint64_t sub_2313387B8()
{
  swift_retain();
  sub_231338700();
  return swift_release();
}

id sub_2313387E0(uint64_t a1)
{
  return sub_231338E04(a1);
}

unint64_t sub_231338800(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_231415118();
  sub_231414710();
  v4 = sub_231415148();
  return sub_2313389D4(a1, a2, v4);
}

unint64_t sub_231338864(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_231414DB8();
  return sub_231338AB4(a1, v2);
}

unint64_t sub_231338898(uint64_t a1)
{
  uint64_t v2;

  sub_2314146BC();
  sub_231415118();
  sub_231414710();
  v2 = sub_231415148();
  swift_bridgeObjectRelease();
  return sub_231338B78(a1, v2);
}

unint64_t sub_231338924(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_231414BFC();
  return sub_231338CEC(a1, v2);
}

unint64_t sub_231338954(uint64_t a1)
{
  uint64_t v2;

  sub_2314146BC();
  sub_231415118();
  sub_231414710();
  v2 = sub_231415148();
  swift_bridgeObjectRelease();
  return sub_231338B78(a1, v2);
}

unint64_t sub_2313389D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_231415070() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_231415070() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_231338AB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_231339118(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x2348DD7A4](v9, a1);
      sub_231339154((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_231338B78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_2314146BC();
    v8 = v7;
    if (v6 == sub_2314146BC() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_231415070();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_2314146BC();
          v15 = v14;
          if (v13 == sub_2314146BC() && v15 == v16)
            break;
          v18 = sub_231415070();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_231338CEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v6;
  char v7;
  uint64_t v8;
  id v9;
  char v10;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_2312D3C68(0, (unint64_t *)&qword_25415DEB0);
    v6 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v7 = sub_231414C08();

    if ((v7 & 1) == 0)
    {
      v8 = ~v4;
      for (i = (i + 1) & v8; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v8)
      {
        v9 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v10 = sub_231414C08();

        if ((v10 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

id sub_231338E04(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_231339188(0, (unint64_t *)&qword_255ECD6F8, (void (*)(uint64_t))MEMORY[0x24BE41FD8]);
  v3 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v15 - v4);
  v6 = sub_2314117E8();
  v7 = (char *)v5 + *(int *)(v3 + 48);
  *v5 = v6;
  v8 = sub_23141204C();
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v7, a1, v8);
  if ((*(unsigned int (**)(char *, uint64_t))(v9 + 88))(v7, v8) == *MEMORY[0x24BE41FC8] && v6 == 1)
  {
    if (qword_255ECAAD8 != -1)
      swift_once();
    v12 = sub_231411374();
    v11 = sub_2313382B4(v12, v13, (uint64_t)sel_learnMoreButtonTapped);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
  }
  else
  {
    sub_231339398((uint64_t)v5, (uint64_t)&qword_255ECD6F8, (uint64_t)MEMORY[0x24BE41FD8], MEMORY[0x24BEE1768], (uint64_t (*)(_QWORD))sub_231339188);
    return 0;
  }
  return v11;
}

void sub_231338FC0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECD710)
  {
    sub_231339338(255, &qword_255ECD718, type metadata accessor for Key);
    v0 = sub_23141504C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECD710);
  }
}

uint64_t sub_231339024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t))
{
  uint64_t v7;

  v7 = a5(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

void sub_231339070(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_231414F50();
    if (!v4)
      atomic_store(v3, a2);
  }
}

void sub_2313390BC(uint64_t a1, unint64_t *a2)
{
  unint64_t TupleTypeMetadata2;
  uint64_t v4;

  if (!*a2)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t sub_231339118(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_231339154(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

void sub_231339188(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_2313391EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECF2D0)
  {
    type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState(255);
    v0 = sub_231414F50();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECF2D0);
  }
}

uint64_t sub_231339250(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_231339188(0, (unint64_t *)&qword_255ECD740, (void (*)(uint64_t))type metadata accessor for RelatedSampleTypesCacheObject.DataTypeState);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_2313392AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    a3(255);
    sub_2312CCC24(a4, a3, a5);
    v9 = sub_231414F50();
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_231339338(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t sub_231339398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v6;

  v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t type metadata accessor for AFibBurdenOnboardingDetails(uint64_t a1)
{
  return sub_2312F19EC(a1, qword_255ECD7D0);
}

uint64_t *sub_2313393E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_2314112F0();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      sub_2312D6DD8(0, (unint64_t *)&qword_255ECBCC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t sub_2313394E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_2314112F0();
  v4 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return result;
}

_BYTE *sub_231339550(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_2314112F0();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_2312D6DD8(0, (unint64_t *)&qword_255ECBCC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_BYTE *sub_231339620(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_BYTE *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_2314112F0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(v5, 1, v7);
  v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 24))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    sub_2312D6DD8(0, (unint64_t *)&qword_255ECBCC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v5, v6, v7);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

_BYTE *sub_23133973C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_2314112F0();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_2312D6DD8(0, (unint64_t *)&qword_255ECBCC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_BYTE *sub_23133980C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_BYTE *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_2314112F0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(v5, 1, v7);
  v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 40))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    sub_2312D6DD8(0, (unint64_t *)&qword_255ECBCC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v5, v6, v7);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t sub_231339928()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_231339934(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 253)
  {
    v4 = *a1;
    if (v4 >= 2)
      v5 = ((v4 + 2147483646) & 0x7FFFFFFF) - 1;
    else
      v5 = -2;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    sub_2312D6DD8(0, (unint64_t *)&qword_255ECBCC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v9);
  }
}

uint64_t sub_2313399DC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_2313399E8(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 253)
  {
    *result = a2 + 2;
  }
  else
  {
    sub_2312D6DD8(0, (unint64_t *)&qword_255ECBCC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_231339A70()
{
  unint64_t v0;

  sub_2312D6DD8(319, (unint64_t *)&qword_255ECBCC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

ValueMetadata *type metadata accessor for DataTypeDetailConfiguration.ComponentIdentifier.AFibBurden()
{
  return &type metadata for DataTypeDetailConfiguration.ComponentIdentifier.AFibBurden;
}

uint64_t sub_231339B0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  _UNKNOWN **v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;

  v2 = v1;
  sub_231314334();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v1 + OBJC_IVAR____TtC5Heart45AFibBurdenDataTypeDetailConfigurationProvider_context;
  v10 = sub_231412DA8();
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);
  v12 = (void *)sub_231412D78();
  v13 = objc_msgSend(v12, sel_profileIdentifier);
  v14 = objc_msgSend(v13, sel_type);

  if (v14 != (id)1)
  {

    goto LABEL_5;
  }
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3BF8]), sel_initWithFeatureIdentifier_healthStore_, *MEMORY[0x24BDD2DC8], v12);

  if (!v15)
  {
LABEL_5:
    type metadata accessor for NotOnboardedIsOnboardedProvider();
    v16 = swift_allocObject();
    *(_BYTE *)(v16 + 16) = 0;
    LOBYTE(v22) = 0;
    sub_231413DD4();
    sub_2312CCC24((unint64_t *)&qword_25415BAD8, (uint64_t (*)(uint64_t))sub_231314334, MEMORY[0x24BDB9DF8]);
    v18 = sub_231413E7C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_QWORD *)(v16 + 24) = v18;
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
    v17 = &off_2500258F8;
    goto LABEL_6;
  }
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
  v23 = sub_2312D3C68(0, (unint64_t *)&qword_25415BB50);
  v24 = MEMORY[0x24BE45B80];
  *(_QWORD *)&v22 = v15;
  type metadata accessor for FeatureStatusIsOnboardedProvider();
  v16 = swift_allocObject();
  sub_2312DFB68(&v22, v16 + 16);
  v17 = &off_250025910;
LABEL_6:
  v19 = (uint64_t *)(v2 + OBJC_IVAR____TtC5Heart45AFibBurdenDataTypeDetailConfigurationProvider_isOnboardedProvider);
  *v19 = v16;
  v19[1] = (uint64_t)v17;
  return v2;
}

id sub_231339D44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id result;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  _OWORD *v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[2];
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  _OWORD v73[2];
  uint64_t v74;
  __int128 v75;
  _OWORD v76[2];

  v3 = sub_231413264();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_231413324();
  v65 = *(_QWORD *)(v66 - 8);
  MEMORY[0x24BDAC7A8](v66);
  v8 = (char *)v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_231413330();
  v63 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v10 = (_QWORD *)((char *)v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2313311C4(0, (unint64_t *)&qword_255ECC5D8, (unint64_t *)&qword_255ECC5E0, MEMORY[0x24BE43678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v68 = v11;
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_23141BD00;
  v13 = (void *)objc_opt_self();
  result = objc_msgSend(v13, sel__quantityTypeWithCode_, 248);
  if (!result)
  {
    __break(1u);
    goto LABEL_15;
  }
  v15 = result;
  v62 = v8;
  v59 = v4;
  v60 = v3;
  v61 = v6;
  v16 = v1 + OBJC_IVAR____TtC5Heart45AFibBurdenDataTypeDetailConfigurationProvider_isOnboardedProvider;
  v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Heart45AFibBurdenDataTypeDetailConfigurationProvider_isOnboardedProvider);
  v18 = *(_QWORD *)(v16 + 8);
  *(_QWORD *)(v12 + 56) = &_s36AFibBurdenChartOrOnboardingComponentVN;
  *(_QWORD *)(v12 + 64) = sub_23133AC48();
  v19 = swift_allocObject();
  *(_QWORD *)(v12 + 32) = v19;
  *(_OWORD *)(v19 + 56) = 0u;
  *(_OWORD *)(v19 + 72) = 0u;
  *(_QWORD *)(v19 + 88) = 0;
  *(_QWORD *)(v19 + 16) = v15;
  *(_QWORD *)(v19 + 24) = 0xD00000000000001BLL;
  *(_QWORD *)(v19 + 32) = 0x800000023142AB30;
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  swift_unknownObjectRetain();
  result = objc_msgSend(v13, sel__quantityTypeWithCode_, 248);
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_231411AAC();
  v20 = sub_231412C34();
  v21 = MEMORY[0x24BE43EB0];
  *(_QWORD *)(v12 + 96) = v20;
  *(_QWORD *)(v12 + 104) = v21;
  sub_2312DFCA0((uint64_t *)(v12 + 72));
  sub_231412C28();
  result = objc_msgSend(v13, sel__quantityTypeWithCode_, 248);
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_23133A984((uint64_t)&unk_25001EF40);
  v22 = sub_231412CB8();
  v23 = MEMORY[0x24BE43F80];
  *(_QWORD *)(v12 + 136) = v22;
  *(_QWORD *)(v12 + 144) = v23;
  sub_2312DFCA0((uint64_t *)(v12 + 112));
  sub_231412CAC();
  v24 = swift_allocObject();
  v67 = xmmword_231418090;
  *(_OWORD *)(v24 + 16) = xmmword_231418090;
  result = objc_msgSend(v13, sel__quantityTypeWithCode_, 248);
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v25 = result;
  *(_QWORD *)(v24 + 56) = &_s37AFibBurdenLifeFactorsPlatterComponentVN;
  *(_QWORD *)(v24 + 64) = sub_23133ACD0();
  *(_QWORD *)(v24 + 32) = v25;
  *(_QWORD *)(v24 + 40) = 0xD00000000000001CLL;
  *(_QWORD *)(v24 + 48) = 0x800000023142AB50;
  result = objc_msgSend(v13, sel__quantityTypeWithCode_, 248);
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v26 = (uint64_t)result;
  swift_getObjectType();
  sub_2313ED5D8(v26, v17, 0, v18, (uint64_t)&v75);
  *(_QWORD *)(v24 + 96) = &_s28AFibBurdenEducationComponentVN;
  *(_QWORD *)(v24 + 104) = sub_2313144BC();
  v27 = (_OWORD *)swift_allocObject();
  *(_QWORD *)(v24 + 72) = v27;
  v28 = v76[0];
  v27[1] = v75;
  v27[2] = v28;
  *(_OWORD *)((char *)v27 + 41) = *(_OWORD *)((char *)v76 + 9);
  v29 = sub_231412D3C();
  v30 = MEMORY[0x24BE44050];
  *(_QWORD *)(v12 + 176) = v29;
  *(_QWORD *)(v12 + 184) = v30;
  sub_2312DFCA0((uint64_t *)(v12 + 152));
  swift_unknownObjectRetain();
  sub_231412CF4();
  result = objc_msgSend(v13, sel__quantityTypeWithCode_, 248);
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v58[0] = v29;
  v58[1] = a1;
  v31 = sub_231412CD0();
  v32 = MEMORY[0x24BE43FB8];
  *(_QWORD *)(v12 + 216) = v31;
  *(_QWORD *)(v12 + 224) = v32;
  sub_2312DFCA0((uint64_t *)(v12 + 192));
  sub_231412CC4();
  result = objc_msgSend(v13, sel__quantityTypeWithCode_, 248);
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  sub_2312D3C68(0, &qword_255ECD9C8);
  sub_2313311C4(0, (unint64_t *)&qword_25415DF58, (unint64_t *)&qword_25415DF90, MEMORY[0x24BEE45D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = v67;
  sub_231411BF0();
  v34 = sub_231411BE4();
  v36 = v35;
  v37 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v33 + 56) = MEMORY[0x24BEE0D00];
  v38 = sub_2312D6E84();
  *(_QWORD *)(v33 + 32) = v34;
  *(_QWORD *)(v33 + 40) = v36;
  *(_QWORD *)(v33 + 96) = v37;
  *(_QWORD *)(v33 + 104) = v38;
  *(_QWORD *)(v33 + 64) = v38;
  *(_QWORD *)(v33 + 72) = 0xD00000000000001BLL;
  *(_QWORD *)(v33 + 80) = 0x8000000231427830;
  sub_2314148F0();
  v39 = sub_231412BA4();
  v40 = MEMORY[0x24BE43DE8];
  *(_QWORD *)(v12 + 256) = v39;
  *(_QWORD *)(v12 + 264) = v40;
  sub_2312DFCA0((uint64_t *)(v12 + 232));
  sub_231412B8C();
  result = objc_msgSend(v13, sel__quantityTypeWithCode_, 248);
  if (!result)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  *v10 = result;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v63 + 104))(v10, *MEMORY[0x24BE44F10], v64);
  sub_231412C40();
  (*(void (**)(char *, _QWORD, uint64_t))(v65 + 104))(v62, *MEMORY[0x24BE44EF0], v66);
  v41 = sub_231412C58();
  v42 = MEMORY[0x24BE43ED0];
  *(_QWORD *)(v12 + 296) = v41;
  *(_QWORD *)(v12 + 304) = v42;
  sub_2312DFCA0((uint64_t *)(v12 + 272));
  sub_231412C4C();
  v43 = sub_231412C7C();
  v66 = v44;
  v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = v67;
  result = objc_msgSend(v13, sel__quantityTypeWithCode_, 248);
  if (!result)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  *(_QWORD *)&v67 = v43;
  v46 = sub_231412BEC();
  v47 = MEMORY[0x24BE43E28];
  *(_QWORD *)(v45 + 56) = v46;
  *(_QWORD *)(v45 + 64) = v47;
  sub_2312DFCA0((uint64_t *)(v45 + 32));
  sub_231412BE0();
  sub_231412C94();
  v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_23141BD10;
  result = objc_msgSend(v13, sel__quantityTypeWithCode_, 248);
  if (!result)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_231412D18();
  v49 = sub_231412D24();
  v50 = MEMORY[0x24BE44030];
  *(_QWORD *)(v48 + 56) = v49;
  *(_QWORD *)(v48 + 64) = v50;
  sub_2312DFCA0((uint64_t *)(v48 + 32));
  sub_231412D0C();
  v74 = 0;
  memset(v73, 0, sizeof(v73));
  *(_QWORD *)(v48 + 96) = &_s22AFibBurdenPDFComponentVN;
  *(_QWORD *)(v48 + 104) = sub_23133AD48();
  v51 = swift_allocObject();
  *(_QWORD *)(v48 + 72) = v51;
  strcpy((char *)&v69, "AFibBurdenPDF");
  HIWORD(v69) = -4864;
  v70 = 0u;
  v71 = 0u;
  v72 = 0;
  sub_23133ADC0((uint64_t)v73, (uint64_t)&v70);
  v52 = v70;
  *(_OWORD *)(v51 + 16) = v69;
  *(_OWORD *)(v51 + 32) = v52;
  *(_OWORD *)(v51 + 48) = v71;
  *(_QWORD *)(v51 + 64) = v72;
  result = objc_msgSend(v13, sel__quantityTypeWithCode_, 248);
  if (!result)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v53 = result;
  *(_QWORD *)(v48 + 136) = &_s34AFibBurdenDisclosureItemsComponentVN;
  *(_QWORD *)(v48 + 144) = sub_23133AE24();
  *(_QWORD *)(v48 + 112) = v53;
  *(_QWORD *)(v48 + 120) = 0xD000000000000019;
  *(_QWORD *)(v48 + 128) = 0x800000023142ABA0;
  result = objc_msgSend(v13, sel__quantityTypeWithCode_, 248);
  if (result)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v59 + 104))(v61, *MEMORY[0x24BE44C60], v60);
    v54 = sub_231412CE8();
    v55 = MEMORY[0x24BE43FD0];
    *(_QWORD *)(v48 + 176) = v54;
    *(_QWORD *)(v48 + 184) = v55;
    sub_2312DFCA0((uint64_t *)(v48 + 152));
    sub_231412CDC();
    v56 = sub_231412D00();
    v57 = MEMORY[0x24BE44008];
    *(_QWORD *)(v45 + 96) = v56;
    *(_QWORD *)(v45 + 104) = v57;
    sub_2312DFCA0((uint64_t *)(v45 + 72));
    sub_231412CF4();
    *(_QWORD *)(v12 + 336) = v58[0];
    *(_QWORD *)(v12 + 344) = MEMORY[0x24BE44050];
    sub_2312DFCA0((uint64_t *)(v12 + 312));
    sub_231412CF4();
    return (id)sub_231412C1C();
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23133A6FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC5Heart45AFibBurdenDataTypeDetailConfigurationProvider_context;
  v2 = sub_231412DA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_2314130CC();
  return swift_deallocClassInstance();
}

uint64_t sub_23133A75C()
{
  return type metadata accessor for AFibBurdenDataTypeDetailConfigurationProvider();
}

uint64_t type metadata accessor for AFibBurdenDataTypeDetailConfigurationProvider()
{
  uint64_t result;

  result = qword_255ECD840;
  if (!qword_255ECD840)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23133A7A0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_231412DA8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

id sub_23133A814@<X0>(uint64_t a1@<X8>)
{
  return sub_231339D44(a1);
}

uint64_t type metadata accessor for AFibBurdenDetailViewControllerDebugActionProviding()
{
  return objc_opt_self();
}

unint64_t sub_23133A860(uint64_t a1)
{
  uint64_t v2;

  sub_231415118();
  sub_231415124();
  v2 = sub_231415148();
  return sub_23133A8B8(a1, v2);
}

unint64_t sub_23133A8B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      result = (result + 1) & v8;
      if (((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0
        && *(_QWORD *)(v7 + 8 * result) != a1)
      {
        for (result = (result + 1) & v8;
              ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
              result = (result + 1) & v8)
        {
          if (*(_QWORD *)(v7 + 8 * result) == a1)
            break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_23133A984(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t *i;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_23133AE68();
    v3 = (_QWORD *)sub_231414F44();
    for (i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      v5 = *(i - 1);
      v6 = *i;
      result = sub_23133A860(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      v9 = 8 * result;
      *(_QWORD *)(v3[6] + v9) = v5;
      *(_QWORD *)(v3[7] + v9) = v6;
      v10 = v3[2];
      v11 = __OFADD__(v10, 1);
      v12 = v10 + 1;
      if (v11)
        goto LABEL_10;
      v3[2] = v12;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

uint64_t sub_23133AA54(void *a1)
{
  id v2;
  id v3;
  Class v4;
  id v5;
  void *v6;
  _BYTE v8[72];
  id v9[9];
  _BYTE v10[40];

  v2 = objc_msgSend(a1, sel_resolvedHealthStore);
  if (!v2)
    v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3C40]), sel_init);
  sub_231414A1C();
  sub_2312DF850((uint64_t)v10, (uint64_t)v8);
  v3 = v2;
  sub_231318CB4(v3, (uint64_t)v8, (uint64_t *)v9);
  sub_23133AB3C((uint64_t)v9, (uint64_t)v8);
  sub_23133AB78();
  v5 = objc_allocWithZone(v4);
  v6 = (void *)sub_23141420C();
  objc_msgSend(a1, sel_showViewController_sender_, v6, 0);

  sub_23133AC14(v9);
  return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v10);
}

uint64_t sub_23133AB3C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AFibBurdenInternalSettingsView(a2, a1);
  return a2;
}

void sub_23133AB78()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECD9A8)
  {
    sub_23133ABD0();
    v0 = sub_231414218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECD9A8);
  }
}

unint64_t sub_23133ABD0()
{
  unint64_t result;

  result = qword_255ECD9B0;
  if (!qword_255ECD9B0)
  {
    result = MEMORY[0x2348DE248](&unk_23141A9D0, &type metadata for AFibBurdenInternalSettingsView);
    atomic_store(result, (unint64_t *)&qword_255ECD9B0);
  }
  return result;
}

id *sub_23133AC14(id *a1)
{
  destroy for AFibBurdenInternalSettingsView(a1);
  return a1;
}

unint64_t sub_23133AC48()
{
  unint64_t result;

  result = qword_255ECD9B8;
  if (!qword_255ECD9B8)
  {
    result = MEMORY[0x2348DE248](&unk_2314241C8, &_s36AFibBurdenChartOrOnboardingComponentVN);
    atomic_store(result, (unint64_t *)&qword_255ECD9B8);
  }
  return result;
}

uint64_t sub_23133AC8C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_2314130CC();
  if (*(_QWORD *)(v0 + 80))
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 56);
  return swift_deallocObject();
}

unint64_t sub_23133ACD0()
{
  unint64_t result;

  result = qword_255ECD9C0;
  if (!qword_255ECD9C0)
  {
    result = MEMORY[0x2348DE248](&unk_23141F6E8, &_s37AFibBurdenLifeFactorsPlatterComponentVN);
    atomic_store(result, (unint64_t *)&qword_255ECD9C0);
  }
  return result;
}

uint64_t sub_23133AD14()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_2314130CC();
  return swift_deallocObject();
}

unint64_t sub_23133AD48()
{
  unint64_t result;

  result = qword_255ECD9D0;
  if (!qword_255ECD9D0)
  {
    result = MEMORY[0x2348DE248](&unk_23141D588, &_s22AFibBurdenPDFComponentVN);
    atomic_store(result, (unint64_t *)&qword_255ECD9D0);
  }
  return result;
}

uint64_t sub_23133AD8C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 56))
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 32);
  return swift_deallocObject();
}

uint64_t sub_23133ADC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2313311C4(0, (unint64_t *)&qword_25415C158, &qword_25415C150, MEMORY[0x24BE457C0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_23133AE24()
{
  unint64_t result;

  result = qword_255ECD9D8;
  if (!qword_255ECD9D8)
  {
    result = MEMORY[0x2348DE248](&unk_23141DC74, &_s34AFibBurdenDisclosureItemsComponentVN);
    atomic_store(result, (unint64_t *)&qword_255ECD9D8);
  }
  return result;
}

void sub_23133AE68()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECD9E0)
  {
    type metadata accessor for UIUserInterfaceSizeClass(255);
    sub_2312CCC24(&qword_255ECD9E8, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceSizeClass, (uint64_t)&unk_231417A90);
    v0 = sub_231414F50();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECD9E0);
  }
}

uint64_t type metadata accessor for AtrialFibrillationPromotionTileActionHandler()
{
  uint64_t result;

  result = qword_255ECD9F8;
  if (!qword_255ECD9F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23133AF24()
{
  return swift_initClassMetadata2();
}

void sub_23133AF6C()
{
  void *v0;
  uint64_t v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (qword_25415DF98 != -1)
    swift_once();
  v1 = sub_231413780();
  sub_2312CE3B8(v1, (uint64_t)qword_254162FF0);
  v2 = v0;
  v3 = sub_231413768();
  v4 = sub_23141498C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v9 = v6;
    *(_DWORD *)v5 = 136446466;
    swift_getObjectType();
    sub_23133B7A0();
    v7 = sub_2314146E0();
    sub_23133180C(v7, v8, &v9);
    sub_231414CBC();

    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2082;
    sub_23133180C(0x2928706154646964, 0xE800000000000000, &v9);
    sub_231414CBC();
    _os_log_impl(&dword_2312C8000, v3, v4, "[%{public}s.%{public}s] On-boarding button tapped", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v6, -1, -1);
    MEMORY[0x2348DE308](v5, -1, -1);

  }
  else
  {

  }
  sub_23133B15C();
}

void sub_23133B15C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *, uint64_t);
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  char *v12;
  char *v13;
  void *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t ObjectType;
  uint64_t v23[4];

  v1 = v0;
  v2 = sub_231412F64();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v23[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231413210();
  sub_231412F40();
  v6 = *(void (**)(char *, uint64_t))(v3 + 8);
  v6(v5, v2);
  sub_2312CEA5C(v23, v23[3]);
  v7 = (void *)sub_231412EE0();
  if (qword_255ECAAA0 != -1)
    swift_once();
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4C090]), sel_initWithOnboardingType_isFirstTimeOnboarding_healthStore_dateCache_provenance_delegate_, 0, 1, v7, qword_255ED2EF8, 3, v1);

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v23);
  v9 = qword_255ECD9F0;
  v10 = *(void **)&v1[qword_255ECD9F0];
  *(_QWORD *)&v1[qword_255ECD9F0] = v8;

  v11 = *(void **)&v1[v9];
  if (v11
    && (v12 = (char *)objc_msgSend(v11, sel_onboardingNavigationController)) != 0)
  {
    v13 = v12;
    objc_msgSend(v12, sel_setModalInPresentation_, 1);
    sub_231413210();
    v14 = (void *)sub_231412F4C();
    v6(v5, v2);
    objc_msgSend(v14, sel_showViewController_sender_, v13, 0);

  }
  else
  {
    if (qword_25415DF98 != -1)
      swift_once();
    v15 = sub_231413780();
    sub_2312CE3B8(v15, (uint64_t)qword_254162FF0);
    v13 = v1;
    v16 = sub_231413768();
    v17 = sub_231414980();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      v23[0] = v19;
      *(_DWORD *)v18 = 136446466;
      ObjectType = swift_getObjectType();
      sub_23133B7A0();
      v20 = sub_2314146E0();
      ObjectType = sub_23133180C(v20, v21, v23);
      sub_231414CBC();

      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2082;
      ObjectType = sub_23133180C(0xD000000000000013, 0x8000000231427950, v23);
      sub_231414CBC();
      _os_log_impl(&dword_2312C8000, v16, v17, "[%{public}s.%{public}s] On-boarding navigation controller not initialized", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v19, -1, -1);
      MEMORY[0x2348DE308](v18, -1, -1);

      return;
    }

  }
}

uint64_t sub_23133B4C4(uint64_t a1)
{
  objc_class *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v3 = sub_231412F64();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v7[qword_255ECD9F0] = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  v8 = sub_23141321C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v8;
}

void sub_23133B578()
{
  uint64_t v0;

}

id sub_23133B588()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AtrialFibrillationPromotionTileActionHandler();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_23133B5BC(uint64_t a1)
{

}

uint64_t sub_23133B5CC()
{
  return type metadata accessor for AtrialFibrillationPromotionTileActionHandler();
}

void sub_23133B5D8(uint64_t a1)
{
  void *v1;

  v1 = *(void **)(a1 + qword_255ECD9F0);
  *(_QWORD *)(a1 + qword_255ECD9F0) = 0;

}

void sub_23133B5EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;

  v1 = sub_231412F64();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void **)(v0 + qword_255ECD9F0);
  *(_QWORD *)(v0 + qword_255ECD9F0) = 0;

  sub_231413210();
  v6 = (void *)sub_231412F4C();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v7 = objc_msgSend(v6, sel_tabBarController);

  if (v7)
  {
    v8 = objc_msgSend((id)objc_opt_self(), sel_atrialFibrillationEventType);
    if (v8)
    {
      v9 = v8;
      type metadata accessor for AtrialFibrillationPromotionTileActionHandler();
      sub_2312CCC24(&qword_255ECD680, (uint64_t (*)(uint64_t))type metadata accessor for AtrialFibrillationPromotionTileActionHandler, (uint64_t)&unk_23141BEA8);
      v10 = (void *)sub_2314131B0();
      if (v10)
      {
        v11 = v10;
        sub_231328348(v10, 0);

        v7 = v9;
        v9 = v11;
      }

      v7 = v9;
    }

  }
}

void sub_23133B740(void *a1)
{
  id v1;

  v1 = a1;
  sub_23133B5EC();

}

uint64_t sub_23133B774()
{
  return sub_2312CCC24((unint64_t *)&unk_255ECDA50, (uint64_t (*)(uint64_t))type metadata accessor for AtrialFibrillationPromotionTileActionHandler, (uint64_t)&unk_23141BE78);
}

unint64_t sub_23133B7A0()
{
  unint64_t result;

  result = qword_255ECDA60;
  if (!qword_255ECDA60)
  {
    type metadata accessor for AtrialFibrillationPromotionTileActionHandler();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255ECDA60);
  }
  return result;
}

id sub_23133B7D8()
{
  char *v0;
  objc_super v2;

  objc_msgSend(*(id *)(*sub_2312CEA5C(&v0[OBJC_IVAR____TtC5Heart36TachycardiaAdvertisableFeatureSource_heartSettingsUtilityProvider], *(_QWORD *)&v0[OBJC_IVAR____TtC5Heart36TachycardiaAdvertisableFeatureSource_heartSettingsUtilityProvider+ 24])+ 16), sel_removeHeartRhythmAvailabilityObserver_, v0);
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TachycardiaAdvertisableFeatureSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23133B930()
{
  return type metadata accessor for TachycardiaAdvertisableFeatureSource();
}

uint64_t type metadata accessor for TachycardiaAdvertisableFeatureSource()
{
  uint64_t result;

  result = qword_255ECDAB0;
  if (!qword_255ECDAB0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23133B974()
{
  void *v0;
  id v1;
  void *v2;
  id v3;

  if (qword_25415E610 != -1)
    swift_once();
  v0 = (void *)qword_254163058;
  sub_231411374();
  sub_231411374();
  v1 = v0;
  v2 = (void *)sub_23141468C();
  v3 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_, v2, v1, 0xE000000000000000);

  return sub_231411F5C();
}

uint64_t sub_23133BAE4(uint64_t a1, uint64_t a2)
{
  return sub_23133BB88(a1, a2, (uint64_t)&unk_250023438, (uint64_t)sub_23133D100, (uint64_t)&unk_250023450);
}

void sub_23133BB00(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v5 = a1 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x2348DE3BC](v5);
  if (v6)
  {
    v7 = (void *)v6;
    sub_23133C148(a2, a3);

  }
}

uint64_t sub_23133BB6C(uint64_t a1, uint64_t a2)
{
  return sub_23133BB88(a1, a2, (uint64_t)&unk_2500233E8, (uint64_t)sub_23132ACA0, (uint64_t)&unk_250023400);
}

uint64_t sub_23133BB88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v20 = a5;
  v9 = sub_231414500();
  v23 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_231414524();
  v12 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)(v5 + OBJC_IVAR____TtC5Heart36TachycardiaAdvertisableFeatureSource_queue);
  v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v15;
  v16[3] = a1;
  v16[4] = a2;
  aBlock[4] = a4;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23130DCCC;
  aBlock[3] = v20;
  v17 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_231414518();
  v24 = MEMORY[0x24BEE4AF8];
  sub_2312CCC24((unint64_t *)&qword_25415DE48, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_23132AAF4();
  sub_2312CCC24((unint64_t *)&qword_25415DE78, (uint64_t (*)(uint64_t))sub_23132AAF4, MEMORY[0x24BEE12C8]);
  sub_231414D1C();
  MEMORY[0x2348DD48C](0, v14, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v22);
  swift_release();
  return swift_release();
}

uint64_t sub_23133BDB8(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v7 = sub_231414500();
  v19 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_231414524();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Heart36TachycardiaAdvertisableFeatureSource_queue);
  v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v14;
  *(_BYTE *)(v15 + 24) = a1;
  *(_QWORD *)(v15 + 32) = a2;
  *(_QWORD *)(v15 + 40) = a3;
  aBlock[4] = sub_23133D0E8;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23130DCCC;
  aBlock[3] = &unk_2500233B0;
  v16 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_231414518();
  v20 = MEMORY[0x24BEE4AF8];
  sub_2312CCC24((unint64_t *)&qword_25415DE48, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_23132AAF4();
  sub_2312CCC24((unint64_t *)&qword_25415DE78, (uint64_t (*)(uint64_t))sub_23132AAF4, MEMORY[0x24BEE12C8]);
  sub_231414D1C();
  MEMORY[0x2348DD48C](0, v13, v9, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  swift_release();
  return swift_release();
}

void sub_23133BFF4(uint64_t a1, char a2, void (*a3)(char *))
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;

  sub_23132ABE0(0, (unint64_t *)&qword_255ECACA8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v12 - v7;
  swift_beginAccess();
  v9 = MEMORY[0x2348DE3BC](a1 + 16);
  if (v9)
  {
    v10 = (void *)v9;
    if ((a2 & 1) != 0)
    {
      objc_msgSend((id)objc_opt_self(), sel_tachycardiaThresholdHeartRate);
      v11 = (void *)sub_2314148E4();
    }
    else
    {
      v11 = 0;
    }
    objc_msgSend((id)objc_opt_self(), sel_setTachycardiaThresholdHeartRate_, v11);
    sub_231411E78();
    sub_2312CCC24(&qword_255ECACB0, (uint64_t (*)(uint64_t))MEMORY[0x24BE417D0], MEMORY[0x24BE417E0]);
    sub_231415154();
    a3(v8);

    sub_23132AC60((uint64_t)v8, (unint64_t *)&qword_255ECACA8);
  }
}

uint64_t sub_23133C148(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  void *v24;
  void *v25;
  id v26;
  void *v27;
  unsigned int v28;
  void *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  unsigned __int8 v35;
  char *v36;
  NSObject *v37;
  os_log_type_t v38;
  _BOOL4 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  const char *v59;
  uint64_t v60;
  unint64_t v61;
  void (*v62)(uint64_t);
  char *v64;
  char *v65;
  char *v66;
  uint64_t ObjectType;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  uint64_t v72;
  void (*v73)(uint64_t);
  uint64_t v74;
  uint64_t v75;

  v72 = a2;
  v73 = a1;
  ObjectType = swift_getObjectType();
  v3 = sub_231413780();
  v4 = *(_QWORD *)(v3 - 8);
  v68 = v3;
  v69 = v4;
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v66 = (char *)&v64 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v64 = (char *)&v64 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v65 = (char *)&v64 - v12;
  sub_23132ABE0(0, &qword_255ECD018);
  v70 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v71 = (char *)&v64 - v14;
  v15 = sub_231411608();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_231411644();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = (_QWORD *)(v2 + OBJC_IVAR____TtC5Heart36TachycardiaAdvertisableFeatureSource_heartSettingsUtilityProvider);
  sub_2312CEA5C((_QWORD *)(v2 + OBJC_IVAR____TtC5Heart36TachycardiaAdvertisableFeatureSource_heartSettingsUtilityProvider), *(_QWORD *)(v2 + OBJC_IVAR____TtC5Heart36TachycardiaAdvertisableFeatureSource_heartSettingsUtilityProvider + 24));
  sub_2313AD4F4();
  if (!v24)
    goto LABEL_9;
  v25 = v24;
  v26 = HKNRDeviceCapabilityHeartRateV2();
  sub_23141162C();

  v27 = (void *)sub_231411620();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  v28 = objc_msgSend(v25, sel_supportsCapability_, v27);

  if (!v28)
  {
LABEL_9:
    sub_231413744();
    v46 = sub_231413768();
    v47 = sub_23141498C();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = swift_slowAlloc();
      v49 = swift_slowAlloc();
      v75 = v49;
      *(_DWORD *)v48 = 136315394;
      v50 = sub_2314151A8();
      v74 = sub_23133180C(v50, v51, &v75);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v48 + 12) = 2080;
      v74 = sub_23133180C(0xD00000000000002BLL, 0x8000000231429D90, &v75);
      sub_231414CBC();
      _os_log_impl(&dword_2312C8000, v46, v47, "[%s] %s -> false: heart rate motion context not supported on active watch", (uint8_t *)v48, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v49, -1, -1);
      MEMORY[0x2348DE308](v48, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v69 + 8))(v7, v68);
    goto LABEL_19;
  }
  v29 = (void *)objc_opt_self();
  if (objc_msgSend(v29, sel_isBackgroundHeartRateEnabled))
  {
    v30 = *sub_2312CEA5C(v23, v23[3]);
    sub_2313AD4F4();
    if (v31)
    {
      v32 = v31;
      v33 = *(void **)(v30 + 16);
      sub_2314115FC();
      v34 = (void *)sub_2314115C0();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      v35 = objc_msgSend(v33, sel_isHeartAgeGatingEnabledOnWatch_currentDate_, v32, v34);

      if ((v35 & 1) != 0)
      {
        v36 = v64;
        sub_231413744();
        v37 = sub_231413768();
        v38 = sub_23141498C();
        v39 = os_log_type_enabled(v37, v38);
        v40 = v68;
        if (v39)
        {
          v41 = swift_slowAlloc();
          v42 = swift_slowAlloc();
          v75 = v42;
          *(_DWORD *)v41 = 136315394;
          v43 = sub_2314151A8();
          v74 = sub_23133180C(v43, v44, &v75);
          sub_231414CBC();
          swift_bridgeObjectRelease();
          *(_WORD *)(v41 + 12) = 2080;
          v74 = sub_23133180C(0xD00000000000002BLL, 0x8000000231429D90, &v75);
          sub_231414CBC();
          _os_log_impl(&dword_2312C8000, v37, v38, "[%s] %s -> false: heart age gating enabled on active watch", (uint8_t *)v41, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x2348DE308](v42, -1, -1);
          MEMORY[0x2348DE308](v41, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v69 + 8))(v36, v40);
        v45 = (uint64_t)v71;
        *v71 = 0;
        goto LABEL_22;
      }
    }
    if ((objc_msgSend(v29, sel_isTachycardiaDetectionEnabled) & 1) == 0)
    {
      v45 = (uint64_t)v71;
      *v71 = 1;
LABEL_22:
      v62 = v73;
      goto LABEL_20;
    }
    v52 = v65;
    sub_231413744();
    v53 = sub_231413768();
    v54 = sub_23141498C();
    if (!os_log_type_enabled(v53, v54))
      goto LABEL_18;
    v55 = swift_slowAlloc();
    v56 = swift_slowAlloc();
    v75 = v56;
    *(_DWORD *)v55 = 136315394;
    v60 = sub_2314151A8();
    v74 = sub_23133180C(v60, v61, &v75);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v55 + 12) = 2080;
    v74 = sub_23133180C(0xD00000000000002BLL, 0x8000000231429D90, &v75);
    sub_231414CBC();
    v59 = "[%s] %s -> false: detection already enabled";
    goto LABEL_17;
  }
  v52 = v66;
  sub_231413744();
  v53 = sub_231413768();
  v54 = sub_23141498C();
  if (os_log_type_enabled(v53, v54))
  {
    v55 = swift_slowAlloc();
    v56 = swift_slowAlloc();
    v75 = v56;
    *(_DWORD *)v55 = 136315394;
    v57 = sub_2314151A8();
    v74 = sub_23133180C(v57, v58, &v75);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v55 + 12) = 2080;
    v74 = sub_23133180C(0xD00000000000002BLL, 0x8000000231429D90, &v75);
    sub_231414CBC();
    v59 = "[%s] %s -> false: background heart rate not enabled";
LABEL_17:
    _os_log_impl(&dword_2312C8000, v53, v54, v59, (uint8_t *)v55, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v56, -1, -1);
    MEMORY[0x2348DE308](v55, -1, -1);
  }
LABEL_18:

  (*(void (**)(char *, uint64_t))(v69 + 8))(v52, v68);
LABEL_19:
  v62 = v73;
  v45 = (uint64_t)v71;
  *v71 = 0;
LABEL_20:
  swift_storeEnumTagMultiPayload();
  v62(v45);
  return sub_23132AC60(v45, &qword_255ECD018);
}

uint64_t sub_23133C9C0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_231411D28();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23133CA50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC5Heart36TachycardiaAdvertisableFeatureSource_identifier;
  v4 = sub_231411D28();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23133CA94()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC5Heart36TachycardiaAdvertisableFeatureSource_delegate;
  swift_beginAccess();
  return MEMORY[0x2348DE3BC](v1);
}

uint64_t sub_23133CAE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC5Heart36TachycardiaAdvertisableFeatureSource_delegate;
  swift_beginAccess();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return sub_2314130CC();
}

void (*sub_23133CB48(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC5Heart36TachycardiaAdvertisableFeatureSource_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x2348DE3BC](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_231308278;
}

uint64_t sub_23133CBBC()
{
  return sub_23133B974();
}

uint64_t sub_23133CBDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  _QWORD v14[2];
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_231414500();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_231414524();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Heart36TachycardiaAdvertisableFeatureSource_queue);
  v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_23133D094;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23130DCCC;
  aBlock[3] = &unk_250023360;
  v12 = _Block_copy(aBlock);
  swift_retain();
  sub_231414518();
  v14[1] = MEMORY[0x24BEE4AF8];
  sub_2312CCC24((unint64_t *)&qword_25415DE48, v3, MEMORY[0x24BEE5468]);
  sub_23132AAF4();
  sub_2312CCC24((unint64_t *)&qword_25415DE78, (uint64_t (*)(uint64_t))sub_23132AAF4, MEMORY[0x24BEE12C8]);
  sub_231414D1C();
  MEMORY[0x2348DD48C](0, v10, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  return swift_release();
}

uint64_t sub_23133CDE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  void *v4;

  v2 = a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x2348DE3BC](v2);
  if (result)
  {
    v4 = (void *)result;
    swift_retain();
    sub_23133C148(sub_23133D0B4, a1);

    return swift_release();
  }
  return result;
}

void sub_23133CE54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  char *v10;
  _BYTE v11[24];

  sub_23132ABE0(0, &qword_255ECD018);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v11[-v5];
  swift_beginAccess();
  v7 = MEMORY[0x2348DE3BC](a2 + 16);
  if (v7)
  {
    v8 = (char *)v7;
    sub_23132AB50(a1, (uint64_t)v6);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23132AC60((uint64_t)v6, &qword_255ECD018);
      v9 = &v8[OBJC_IVAR____TtC5Heart36TachycardiaAdvertisableFeatureSource_delegate];
      swift_beginAccess();
      if (MEMORY[0x2348DE3BC](v9))
      {
LABEL_4:
        swift_getObjectType();
        sub_2312CCC24(&qword_255ECDAC0, (uint64_t (*)(uint64_t))type metadata accessor for TachycardiaAdvertisableFeatureSource, (uint64_t)&unk_23141BF68);
        sub_231411F68();

        sub_2314130CC();
        return;
      }
    }
    else
    {
      v10 = &v8[OBJC_IVAR____TtC5Heart36TachycardiaAdvertisableFeatureSource_delegate];
      swift_beginAccess();
      if (MEMORY[0x2348DE3BC](v10))
        goto LABEL_4;
    }

  }
}

uint64_t sub_23133D070()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23133D094()
{
  uint64_t v0;

  return sub_23133CDE4(v0);
}

uint64_t sub_23133D09C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23133D0AC()
{
  return swift_release();
}

void sub_23133D0B4(uint64_t a1)
{
  uint64_t v1;

  sub_23133CE54(a1, v1);
}

uint64_t sub_23133D0BC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23133D0E8()
{
  uint64_t v0;

  sub_23133BFF4(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(void (**)(char *))(v0 + 32));
}

void sub_23133D100()
{
  uint64_t v0;

  sub_23133BB00(*(_QWORD *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t type metadata accessor for CardioFitnessHealthChecklistSpecifierDataSource(uint64_t a1)
{
  return sub_2312F19EC(a1, qword_255ECDB10);
}

uint64_t sub_23133D138()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for CardioFitnessHealthChecklistSettingsState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23133D1EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + qword_255ECDB08;
  swift_beginAccess();
  v4 = v3 + *(int *)(type metadata accessor for CardioFitnessHealthChecklistSettingsState() + 20);
  v5 = sub_231411D1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, v4, v5);
}

void sub_23133D260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  NSObject *v19;
  uint64_t v20;
  os_log_type_t v21;
  uint8_t *v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  Class isa;
  NSObject *v29;
  id v30[4];

  swift_getObjectType();
  sub_2312D1E78(0, (unint64_t *)&unk_25415DEE0, (void (*)(uint64_t))MEMORY[0x24BEE56F0]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v26 - v2;
  sub_23133F768();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23133F7FC();
  isa = v9[-1].isa;
  v29 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void **)(v0 + qword_255ECDAD8);
  v13 = objc_msgSend(v12, sel_profileIdentifier);
  v14 = objc_msgSend(v13, sel_type);

  if (v14 == (id)1
    && (v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3BF8]), sel_initWithFeatureIdentifier_healthStore_, *MEMORY[0x24BDD2DD0], v12)) != 0)
  {
    v16 = v15;
    sub_2312D3C68(0, (unint64_t *)&qword_25415BB50);
    v27 = v16;
    v30[0] = (id)sub_231413624();
    sub_2312DC608();
    type metadata accessor for CardioFitnessHealthChecklistSettingsState();
    sub_2312CCC24((unint64_t *)&qword_25415CFB0, (uint64_t (*)(uint64_t))sub_2312DC608, MEMORY[0x24BDB9AF8]);
    sub_231413E88();
    swift_release();
    sub_2312D3C68(0, (unint64_t *)&qword_25415DF00);
    v30[0] = (id)sub_231414A94();
    v17 = sub_231414A7C();
    v18 = (void (*)(uint64_t))MEMORY[0x24BEE56F0];
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v3, 1, 1);
    sub_2312CCC24(&qword_255ECDBD8, (uint64_t (*)(uint64_t))sub_23133F768, MEMORY[0x24BDB94C8]);
    sub_231308748();
    sub_231413F54();
    sub_2312F1A20((uint64_t)v3, (unint64_t *)&unk_25415DEE0, v18);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_2312CCC24(&qword_255ECDBE0, (uint64_t (*)(uint64_t))sub_23133F7FC, MEMORY[0x24BDB9A08]);
    v19 = v29;
    sub_231413F90();
    swift_release();
    (*((void (**)(char *, NSObject *))isa + 1))(v11, v19);
    swift_beginAccess();
    sub_231413D2C();
    swift_endAccess();

    swift_release();
  }
  else
  {
    if (qword_25415DF98 != -1)
      swift_once();
    v20 = sub_231413780();
    sub_2312CE3B8(v20, (uint64_t)qword_254162FF0);
    v29 = sub_231413768();
    v21 = sub_231414980();
    if (os_log_type_enabled(v29, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = (void *)swift_slowAlloc();
      v30[0] = v23;
      *(_DWORD *)v22 = 136446210;
      v24 = sub_2314151A8();
      v30[3] = (id)sub_23133180C(v24, v25, (uint64_t *)v30);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v29, v21, "[%{public}s] Unable to get feature status provider from health store, is this not a primary profile?", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v23, -1, -1);
      MEMORY[0x2348DE308](v22, -1, -1);
    }

  }
}

uint64_t sub_23133D754@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  double v14;
  uint64_t v15;
  uint64_t v16;

  sub_2312D1E78(0, (unint64_t *)&unk_25415B6C8, (void (*)(uint64_t))MEMORY[0x24BE418F8]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v16 - v5;
  v7 = sub_231411EF0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (void *)sub_231413588();
  sub_2312F53C8(v11, (uint64_t (*)(uint64_t))sub_2312F53C0, (void (*)(uint64_t))sub_2312F53C4, (uint64_t)v6);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_2312F1A20((uint64_t)v6, (unint64_t *)&unk_25415B6C8, (void (*)(uint64_t))MEMORY[0x24BE418F8]);
    v12 = type metadata accessor for CardioFitnessHealthChecklistSettingsState();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a2, 1, 1, v12);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    v14 = sub_2312F9B30(a1, a2);
    (*(void (**)(char *, uint64_t, double))(v8 + 8))(v10, v7, v14);
    v15 = type metadata accessor for CardioFitnessHealthChecklistSettingsState();
    return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a2, 0, 1, v15);
  }
}

void sub_23133D8F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = type metadata accessor for CardioFitnessHealthChecklistSettingsState();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 16;
  swift_beginAccess();
  v8 = MEMORY[0x2348DE3BC](v7);
  if (v8)
  {
    v9 = (void *)v8;
    sub_23133F27C(a1, (uint64_t)v6);
    v10 = (uint64_t)v9 + qword_255ECDB08;
    swift_beginAccess();
    sub_23133F8DC((uint64_t)v6, v10);
    swift_endAccess();

  }
  swift_beginAccess();
  v11 = MEMORY[0x2348DE3BC](v7);
  if (v11)
  {
    v12 = (void *)v11;
    v13 = v11 + qword_255ECDAF8;
    swift_beginAccess();
    v14 = MEMORY[0x2348DE3BC](v13);

    if (v14)
    {
      swift_getObjectType();
      sub_231412FF4();
      sub_2314130CC();
    }
  }
}

uint64_t sub_23133DA34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v2 = v1;
  swift_getObjectType();
  v4 = sub_231411D1C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_231411D70();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313DA544();
  v12 = sub_231411D58();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (v12)
  {
    v13 = v2 + qword_255ECDB08;
    swift_beginAccess();
    v14 = type metadata accessor for CardioFitnessHealthChecklistSettingsState();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v13 + *(int *)(v14 + 20), v4);
    sub_231411D94();
    sub_231411D7C();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_231412A90();
    sub_231413060();
    v15 = sub_23141306C();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    v17 = sub_23141306C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a1, 1, 1, v17);
  }
}

uint64_t sub_23133DC0C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;

  v8 = MEMORY[0x24BEE4AF8];
  v0 = sub_23133DD08();
  sub_2313EBE90(v0);
  v1 = sub_23133E2B4();
  sub_2313EBE90(v1);
  v2 = v8;
  if (v8 >> 62)
  {
    sub_231412A90();
    v7 = sub_231414EFC();
    swift_bridgeObjectRelease_n();
    return v7;
  }
  else
  {
    v3 = v8 & 0xFFFFFFFFFFFFFF8;
    sub_231412A90();
    sub_23141507C();
    if (swift_dynamicCastMetatype() || (v5 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_3:
      swift_bridgeObjectRelease();
    }
    else
    {
      v6 = (_QWORD *)(v3 + 32);
      while (*v6)
      {
        ++v6;
        if (!--v5)
          goto LABEL_3;
      }
      swift_bridgeObjectRelease();
      return v3 | 1;
    }
    return v2;
  }
}

uint64_t sub_23133DD08()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  NSUInteger v29;
  NSUInteger v30;
  objc_class *ObjCClassFromMetadata;
  NSString *v32;
  void *v33;
  NSString *v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v39;
  uint64_t v40[4];
  uint64_t v41;
  NSRange v42;

  swift_getObjectType();
  v41 = MEMORY[0x24BEE4AF8];
  v1 = (void *)objc_opt_self();
  v2 = (void *)sub_23141468C();
  v3 = objc_msgSend(v1, sel_groupSpecifierWithID_, v2);

  if (v3)
  {
    v4 = v0 + qword_255ECDB08;
    swift_beginAccess();
    v5 = type metadata accessor for CardioFitnessHealthChecklistSettingsState();
    v6 = (uint64_t *)(v4 + *(int *)(v5 + 28));
    v39 = *v6;
    v7 = v6[3];
    if (v7)
    {
      v8 = v5;
      v9 = v6[2];
      sub_231412A90();
      sub_23133F69C(v9, v7);
      swift_bridgeObjectRelease();
      v10 = (_QWORD *)(v4 + *(int *)(v8 + 28));
      if (!v10[3])
      {
        v11 = 0;
        v12 = 0;
        goto LABEL_13;
      }
      v11 = v10[4];
      v12 = v10[5];
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_231412A90();
LABEL_13:
    v20 = objc_msgSend((id)objc_opt_self(), sel_cardioFitnessWristDetectFooterLinkURL);
    v21 = sub_2314146BC();
    v23 = v22;

    if (v12)
    {
      if (v11 == v21 && v12 == v23)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_231415070();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v24 = objc_allocWithZone(MEMORY[0x24BDD17C8]);
    sub_231412A90();
    v25 = (void *)sub_23141468C();
    swift_bridgeObjectRelease();
    v26 = objc_msgSend(v24, sel_initWithString_, v25);

    v27 = (void *)sub_23141468C();
    swift_bridgeObjectRelease();
    v28 = objc_msgSend(v26, sel_localizedStandardRangeOfString_, v27);
    v30 = v29;

    sub_2312D3C68(0, &qword_255ECC0E8);
    ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
    v32 = NSStringFromClass(ObjCClassFromMetadata);
    if (!v32)
    {
      sub_2314146BC();
      v32 = (NSString *)sub_23141468C();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v3, sel_setProperty_forKey_, v32, *MEMORY[0x24BE75A30], v39);

    v33 = (void *)sub_23141468C();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setProperty_forKey_, v33, *MEMORY[0x24BE75A58]);

    v42.location = (NSUInteger)v28;
    v42.length = v30;
    v34 = NSStringFromRange(v42);
    if (!v34)
    {
      sub_2314146BC();
      v34 = (NSString *)sub_23141468C();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v3, sel_setProperty_forKey_, v34, *MEMORY[0x24BE75A40]);

    v35 = objc_msgSend((id)objc_opt_self(), sel_valueWithNonretainedObject_, v0);
    objc_msgSend(v3, sel_setProperty_forKey_, v35, *MEMORY[0x24BE75A50]);
    sub_231411800();
    v36 = (void *)sub_23141468C();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setProperty_forKey_, v36, *MEMORY[0x24BE75A38]);

    v37 = v3;
    MEMORY[0x2348DD15C]();
    if (*(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_2314147DC();
    sub_2314147E8();
    sub_2314147B8();

    return v41;
  }
  if (qword_25415DF98 != -1)
    swift_once();
  v13 = sub_231413780();
  sub_2312CE3B8(v13, (uint64_t)qword_254162FF0);
  v14 = sub_231413768();
  v15 = sub_231414974();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v40[0] = v17;
    *(_DWORD *)v16 = 136446210;
    v18 = sub_2314151A8();
    v40[3] = sub_23133180C(v18, v19, v40);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v14, v15, "[%{public}s] Could not get specifier footer content.", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v17, -1, -1);
    MEMORY[0x2348DE308](v16, -1, -1);
  }

  return v41;
}

uint64_t sub_23133E2B4()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v8;

  v8 = MEMORY[0x24BEE4AF8];
  v1 = objc_msgSend((id)objc_opt_self(), sel_cardioFitnessTitleDescription);
  if (!v1)
  {
    sub_2314146BC();
    v1 = (id)sub_23141468C();
    swift_bridgeObjectRelease();
  }
  v2 = objc_msgSend((id)objc_opt_self(), sel_preferenceSpecifierNamed_target_set_get_detail_cell_edit_, v1, v0, sel_setCardioFitnessEnabledWithValue_, sel_isCardioFitnessEnabled, 0, 6, 0);

  if (!v2)
    return MEMORY[0x24BEE4AF8];
  v3 = (void *)sub_23141468C();
  objc_msgSend(v2, sel_setIdentifier_, v3);

  swift_beginAccess();
  v4 = (void *)sub_231414800();
  objc_msgSend(v2, sel_setProperty_forKey_, v4, *MEMORY[0x24BE75A18]);

  v5 = (void *)sub_231414800();
  objc_msgSend(v2, sel_setProperty_forKey_, v5, *MEMORY[0x24BE75868]);

  v6 = v2;
  MEMORY[0x2348DD15C]();
  if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_2314147DC();
  sub_2314147E8();
  sub_2314147B8();

  return v8;
}

id sub_23133E498(uint64_t a1)
{
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(a1 + qword_255ECDB08);
  swift_beginAccess();
  return objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, *v1 == 1);
}

uint64_t sub_23133E500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[16] = a5;
  v6[17] = a6;
  v6[15] = a4;
  return swift_task_switch();
}

uint64_t sub_23133E51C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(void **)(v0 + 120);
  if (!v1)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v2 = *(_QWORD *)(v0 + 128);
  v3 = (void *)*MEMORY[0x24BDD2EB0];
  *(_QWORD *)(v0 + 144) = *MEMORY[0x24BDD2EB0];
  *(_QWORD *)(v0 + 56) = v0 + 160;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_23133E5F4;
  v4 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  v5 = (_QWORD *)(v0 + 80);
  v5[1] = 0x40000000;
  v5[2] = sub_23134A978;
  v5[3] = &unk_250023510;
  v5[4] = v4;
  objc_msgSend(v1, sel_setFeatureSettingNumber_forKey_completion_, v2, v3, v5);
  return swift_continuation_await();
}

uint64_t sub_23133E5F4()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 152) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23133E654()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23133E684()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  void *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v1 = *(void **)(v0 + 144);
  swift_willThrow();

  if (qword_25415DF98 != -1)
    swift_once();
  v2 = *(void **)(v0 + 152);
  v3 = sub_231413780();
  sub_2312CE3B8(v3, (uint64_t)qword_254162FF0);
  v4 = v2;
  v5 = v2;
  v6 = sub_231413768();
  v7 = sub_231414974();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(void **)(v0 + 152);
  if (v8)
  {
    v10 = swift_slowAlloc();
    v11 = (_QWORD *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v18 = v17;
    *(_DWORD *)v10 = 136446466;
    v12 = sub_2314151A8();
    *(_QWORD *)(v0 + 80) = sub_23133180C(v12, v13, &v18);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2112;
    v14 = v9;
    v15 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 80) = v15;
    sub_231414CBC();
    *v11 = v15;

    _os_log_impl(&dword_2312C8000, v6, v7, "[%{public}s] Error when setting Cardio Fitness setting enabled: %@", (uint8_t *)v10, 0x16u);
    sub_231327294();
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v11, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v17, -1, -1);
    MEMORY[0x2348DE308](v10, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23133E8D8(char *a1, uint64_t a2, void *a3)
{
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  char *v13;
  uint64_t v15;

  ObjectType = swift_getObjectType();
  sub_2312D1E78(0, (unint64_t *)&qword_255ED1210, (void (*)(uint64_t))MEMORY[0x24BEE6990]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v15 - v7;
  v9 = sub_23141483C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = *(_QWORD *)&a1[qword_255ECDAE0];
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = v10;
  v11[5] = a3;
  v11[6] = ObjectType;
  swift_unknownObjectRetain();
  v12 = a3;
  v13 = a1;
  sub_231385C60((uint64_t)v8, (uint64_t)&unk_255ECDBC0, (uint64_t)v11);

  return swift_release();
}

uint64_t sub_23133E9EC(char *a1)
{
  char *v2;
  uint64_t result;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;

  v2 = &a1[qword_255ECDB08];
  swift_beginAccess();
  result = type metadata accessor for CardioFitnessHealthChecklistSettingsState();
  v4 = &v2[*(int *)(result + 28)];
  v5 = *((_QWORD *)v4 + 3);
  if (v5)
  {
    v6 = *((_QWORD *)v4 + 2);
    v7 = a1;
    sub_23133F69C(v6, v5);
    swift_bridgeObjectRelease();
    sub_231414704();

    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_23133EA9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;

  v1 = v0;
  v2 = qword_25415E610;
  v3 = *(id *)(v0 + qword_255ECDAD8);
  if (v2 != -1)
    swift_once();
  sub_231411374();

  v4 = v3;
  sub_231300B5C(v4);

  v5 = objc_allocWithZone((Class)sub_231411C20());
  v6 = (void *)sub_231411C14();
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A728]), sel_initWithRootViewController_, v6, 0xE000000000000000);
  v8 = v1 + qword_255ECDB00;
  swift_beginAccess();
  if (MEMORY[0x2348DE3BC](v8))
  {
    swift_getObjectType();
    v9 = (void *)sub_231413408();
    sub_2314130CC();
    objc_msgSend(v9, sel_presentViewController_animated_completion_, v7, 1, 0);

  }
}

void sub_23133EC34(void *a1)
{
  id v1;

  v1 = a1;
  sub_23133EA9C();

}

void sub_23133EC68()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_23133EC94()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_2314130CC();
  swift_bridgeObjectRelease();
  swift_release();
  sub_2312D2854(v0 + qword_255ECDAF8);
  sub_2312D2854(v0 + qword_255ECDB00);
  return sub_23133F660(v0 + qword_255ECDB08);
}

id sub_23133ED38()
{
  return sub_231308560(type metadata accessor for CardioFitnessHealthChecklistSpecifierDataSource);
}

uint64_t sub_23133ED44(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_2314130CC();
  swift_bridgeObjectRelease();
  swift_release();
  sub_2312D2854(a1 + qword_255ECDAF8);
  sub_2312D2854(a1 + qword_255ECDB00);
  return sub_23133F660(a1 + qword_255ECDB08);
}

uint64_t sub_23133EDF4()
{
  return type metadata accessor for CardioFitnessHealthChecklistSpecifierDataSource(0);
}

uint64_t type metadata accessor for CardioFitnessHealthChecklistSettingsViewController(uint64_t a1)
{
  return sub_2312F19EC(a1, qword_255ECDB60);
}

uint64_t sub_23133EE10()
{
  return swift_initClassMetadata2();
}

uint64_t sub_23133EE4C(uint64_t a1, uint64_t a2)
{
  return sub_23133EEE8(a1, a2, &qword_255ECDAF8);
}

uint64_t sub_23133EE58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23133EF3C(a1, a2, a3, a4, &qword_255ECDAF8);
}

void (*sub_23133EE64(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = qword_255ECDAF8;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x2348DE3BC](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_23133EED8;
}

uint64_t sub_23133EEDC(uint64_t a1, uint64_t a2)
{
  return sub_23133EEE8(a1, a2, &qword_255ECDB00);
}

uint64_t sub_23133EEE8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;

  v4 = v3 + *a3;
  swift_beginAccess();
  return MEMORY[0x2348DE3BC](v4);
}

uint64_t sub_23133EF30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23133EF3C(a1, a2, a3, a4, &qword_255ECDB00);
}

uint64_t sub_23133EF3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v7;

  v7 = v5 + *a5;
  swift_beginAccess();
  *(_QWORD *)(v7 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return sub_2314130CC();
}

void (*sub_23133EFA0(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = qword_255ECDB00;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x2348DE3BC](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_23133EED8;
}

id sub_23133F01C(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  _DWORD v20[4];

  v20[3] = a4;
  swift_getObjectType();
  v7 = sub_2314120AC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CardioFitnessHealthChecklistSettingsState();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23133F27C(a2, (uint64_t)v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a3, v7);
  v14 = objc_allocWithZone((Class)type metadata accessor for CardioFitnessHealthChecklistSpecifierDataSource(0));
  v15 = sub_23133F2C0(a1, (uint64_t)v13, (uint64_t)v10);
  sub_2312CCC24(&qword_255ECDBB0, type metadata accessor for CardioFitnessHealthChecklistSpecifierDataSource, (uint64_t)&unk_23141C0B4);
  v16 = v15;
  v17 = (id)sub_231412F1C();
  sub_2313DA480();
  v18 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_setTitle_, v18);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a3, v7);
  sub_23133F660(a2);
  return v17;
}

void sub_23133F1E4()
{
  sub_231414EE4();
  __break(1u);
}

void sub_23133F23C()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_23133F268()
{
  return sub_231308560(type metadata accessor for CardioFitnessHealthChecklistSettingsViewController);
}

uint64_t sub_23133F274()
{
  return type metadata accessor for CardioFitnessHealthChecklistSettingsViewController(0);
}

uint64_t sub_23133F27C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CardioFitnessHealthChecklistSettingsState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_23133F2C0(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v4 = v3;
  swift_getObjectType();
  sub_2312D1E78(0, (unint64_t *)&qword_255ECBB70, (void (*)(uint64_t))MEMORY[0x24BE42170]);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v29 - v9;
  v11 = &v4[qword_255ECDAC8];
  *(_QWORD *)v11 = 0xD000000000000017;
  *((_QWORD *)v11 + 1) = 0x800000023142ADF0;
  v12 = &v4[qword_255ECDAD0];
  *(_QWORD *)v12 = 0xD000000000000015;
  *((_QWORD *)v12 + 1) = 0x800000023142AE10;
  v13 = v4;
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_231414F08())
    v14 = sub_2312FC388(MEMORY[0x24BEE4AF8]);
  else
    v14 = MEMORY[0x24BEE4B08];
  *(_QWORD *)&v13[qword_255ECDAE8] = v14;
  *(_QWORD *)&v13[qword_255ECDAF0] = 0;
  *(_QWORD *)&v13[qword_255ECDAF8 + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v13[qword_255ECDB00 + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v13[qword_255ECDAD8] = a1;
  v15 = objc_msgSend(a1, sel_featureAvailabilityProviderForIdentifier_, *MEMORY[0x24BDD2DD0]);
  if (!v15)
  {
    if (qword_25415DF98 != -1)
      swift_once();
    v16 = sub_231413780();
    sub_2312CE3B8(v16, (uint64_t)qword_254162FF0);
    v17 = sub_231413768();
    v18 = sub_231414980();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      v30 = a2;
      v21 = v20;
      v32 = v20;
      *(_DWORD *)v19 = 136446210;
      v22 = sub_2314151A8();
      v31 = sub_23133180C(v22, v23, &v32);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v17, v18, "[%{public}s] Unable to get feature availability provider from health store, is this not a primary profile?", v19, 0xCu);
      swift_arrayDestroy();
      v24 = v21;
      a2 = v30;
      MEMORY[0x2348DE308](v24, -1, -1);
      MEMORY[0x2348DE308](v19, -1, -1);
    }

    v15 = 0;
  }
  *(_QWORD *)&v13[qword_255ECDAE0] = v15;
  sub_23133F27C(a2, (uint64_t)&v13[qword_255ECDB08]);

  v25 = sub_2314120AC();
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v10, a3, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v10, 0, 1, v25);
  v27 = (id)sub_2314120A0();
  sub_23133D260();

  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(a3, v25);
  sub_23133F660(a2);
  return v27;
}

uint64_t sub_23133F660(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CardioFitnessHealthChecklistSettingsState();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23133F69C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    sub_231412A90();
    return sub_231412A90();
  }
  return result;
}

uint64_t sub_23133F6CC()
{
  uint64_t v0;

  sub_2314130CC();
  sub_2314130CC();

  return swift_deallocObject();
}

uint64_t sub_23133F700()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_23132724C;
  *(_OWORD *)(v3 + 128) = v4;
  *(_QWORD *)(v3 + 120) = v2;
  return swift_task_switch();
}

void sub_23133F768()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECDBC8)
  {
    sub_2312DC608();
    type metadata accessor for CardioFitnessHealthChecklistSettingsState();
    sub_2312CCC24((unint64_t *)&qword_25415CFB0, (uint64_t (*)(uint64_t))sub_2312DC608, MEMORY[0x24BDB9AF8]);
    v0 = sub_231413C00();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECDBC8);
  }
}

void sub_23133F7FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECDBD0)
  {
    sub_23133F768();
    sub_2312D3C68(255, (unint64_t *)&qword_25415DF00);
    sub_2312CCC24(&qword_255ECDBD8, (uint64_t (*)(uint64_t))sub_23133F768, MEMORY[0x24BDB94C8]);
    sub_231308748();
    v0 = sub_231413CFC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECDBD0);
  }
}

uint64_t sub_23133F8B0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_23133F8D4(uint64_t a1)
{
  uint64_t v1;

  sub_23133D8F0(a1, v1);
}

uint64_t sub_23133F8DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CardioFitnessHealthChecklistSettingsState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23133F920()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_231411890();
  sub_2312D6D6C(v0, qword_25415C028);
  v1 = sub_2312CE3B8(v0, (uint64_t)qword_25415C028);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, *MEMORY[0x24BE47440], v0);
}

uint64_t sub_23133F978@<X0>(uint64_t a1@<X8>)
{
  return sub_23133F9A8(a1);
}

uint64_t sub_23133F9A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];

  v13[1] = a1;
  v1 = sub_2314119E0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231411A28();
  sub_2312CE560(0, (unint64_t *)&qword_25415DF20, (void (*)(uint64_t))MEMORY[0x24BE474E8]);
  v5 = sub_231411890();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_231416A30;
  v9 = v8 + v7;
  if (qword_25415C048 != -1)
    swift_once();
  v10 = sub_2312CE3B8(v5, (uint64_t)qword_25415C028);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 16))(v9, v10, v5);
  if (*(_QWORD *)(v8 + 16))
    sub_2312FC108(v8);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v11 = sub_2313DA5B4();
  sub_231403254(v11);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BE47910], v1);
  return sub_2314119F8();
}

uint64_t sub_23133FB84(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;

  v3 = v2;
  sub_2312DF6B8();
  v7 = v6;
  v16 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v2 + OBJC_IVAR____TtC5Heart50CardioFitnessClassificationStatusGeneratorPipeline_context;
  v11 = sub_231411A4C();
  v17 = *(_QWORD *)(v11 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v10, a1, v11);
  v18 = a2;
  v19 = sub_23133FD84(a1, (uint64_t)a2);
  v12 = sub_231411A1C();
  sub_2313411FC(0, (unint64_t *)&qword_25415DD68, (void (*)(uint64_t))sub_2312E5B54);
  sub_231341258((unint64_t *)&qword_25415DD60, (unint64_t *)&qword_25415DD68, (void (*)(uint64_t))sub_2312E5B54);
  if ((v12 & 1) != 0)
  {
    v13 = sub_231413E7C();
  }
  else
  {
    sub_231413EDC();
    sub_2312CCC24(&qword_25415B680, (uint64_t (*)(uint64_t))sub_2312DF6B8, MEMORY[0x24BDB9770]);
    v13 = sub_231413E7C();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v7);
  }
  swift_release();
  v19 = v13;
  sub_2313411FC(0, (unint64_t *)&qword_25415DD68, (void (*)(uint64_t))sub_2312E5B54);
  v14 = sub_231413E7C();

  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a1, v11);
  swift_release();
  *(_QWORD *)(v3 + OBJC_IVAR____TtC5Heart50CardioFitnessClassificationStatusGeneratorPipeline_publisher) = v14;
  return v3;
}

uint64_t sub_23133FD84(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v23 = a1;
  v25 = sub_231411A4C();
  v3 = *(_QWORD *)(v25 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v25);
  sub_231341164();
  v6 = v5;
  v24 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231341298();
  v10 = *(_QWORD *)(v9 - 8);
  v27 = v9;
  v28 = v10;
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231411A1C();
  sub_231411B90();
  v29 = a2;
  sub_2312DC718();
  v29 = sub_23141360C();
  v13 = (void (*)(uint64_t))MEMORY[0x24BE45750];
  sub_2313411FC(0, (unint64_t *)&qword_25415CFC0, (void (*)(uint64_t))MEMORY[0x24BE45750]);
  sub_231341258((unint64_t *)&qword_25415CFB0, (unint64_t *)&qword_25415CFC0, v13);
  sub_231413EB8();
  swift_release();
  v14 = MEMORY[0x24BDB96C0];
  sub_2312CCC24(&qword_25415C090, (uint64_t (*)(uint64_t))sub_231341164, MEMORY[0x24BDB96C0]);
  v15 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v6);
  v29 = v15;
  v16 = v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v23, v25);
  v17 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v18 + v17, (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v16);
  *(_QWORD *)(v18 + ((v4 + v17 + 7) & 0xFFFFFFFFFFFFFFF8)) = v26;
  sub_23134132C();
  sub_2312E5B54();
  sub_2312CCC24(&qword_25415C0B0, (uint64_t (*)(uint64_t))sub_23134132C, MEMORY[0x24BDB9AF8]);
  sub_231413EB8();
  swift_release();
  swift_release();
  sub_2312CCC24(&qword_25415C0A0, (uint64_t (*)(uint64_t))sub_231341298, v14);
  v19 = v27;
  v20 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v19);
  return v20;
}

uint64_t sub_23134008C@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  v6 = sub_231411A04();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_231411A4C();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(a1) = *a1;
  (*(void (**)(char *, uint64_t))(v12 + 16))(v11, a2);
  sub_23133F9A8((uint64_t)v8);
  v13 = type metadata accessor for CardioFitnessClassificationStatusGenerator(0);
  v14 = swift_allocObject();
  sub_2313402DC((uint64_t)v11, (uint64_t)v8, (int)a1);
  a3[3] = v13;
  result = sub_2312CCC24(&qword_25415D490, type metadata accessor for CardioFitnessClassificationStatusGenerator, (uint64_t)&unk_23141C19C);
  a3[4] = result;
  *a3 = v14;
  return result;
}

uint64_t sub_2313401B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC5Heart50CardioFitnessClassificationStatusGeneratorPipeline_context;
  v2 = sub_231411A4C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_231340214()
{
  return type metadata accessor for CardioFitnessClassificationStatusGeneratorPipeline(0);
}

uint64_t type metadata accessor for CardioFitnessClassificationStatusGeneratorPipeline(uint64_t a1)
{
  return sub_2312F19EC(a1, (uint64_t *)&unk_25415C060);
}

uint64_t sub_231340230()
{
  uint64_t result;
  unint64_t v1;

  result = sub_231411A4C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_2313402A8()
{
  return swift_retain();
}

uint64_t sub_2313402BC@<X0>(uint64_t a1@<X8>)
{
  return sub_23133F978(a1);
}

_QWORD *sub_2313402DC(uint64_t a1, uint64_t a2, int a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;

  v4 = v3;
  v29 = a3;
  v25 = a1;
  v26 = a2;
  v28 = *v3;
  v7 = sub_231411A4C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312E5F10();
  v12 = *(_QWORD *)(v11 - 8);
  v30 = v11;
  v31 = v12;
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (char *)v4 + OBJC_IVAR____TtC5Heart42CardioFitnessClassificationStatusGenerator_domain;
  v16 = sub_231411A04();
  v27 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v15, a2, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v17 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v18 = v17 + v9;
  v19 = (v17 + v9) & 0xFFFFFFFFFFFFFFF8;
  v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v20 + v17, v10, v7);
  *(_BYTE *)(v20 + v18) = v29;
  *(_QWORD *)(v19 + v20 + 8) = v28;
  sub_2312E5F88();
  sub_2312CCC24(&qword_25415DD90, (uint64_t (*)(uint64_t))sub_2312E5F88, MEMORY[0x24BDB9AF8]);
  sub_231413E04();
  sub_2312CCC24((unint64_t *)&qword_25415DE20, (uint64_t (*)(uint64_t))sub_2312E5F10, MEMORY[0x24BDB9E90]);
  v21 = v30;
  v22 = sub_231413E7C();
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v16);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v25, v7);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v21);
  v4[2] = v22;
  return v4;
}

uint64_t sub_2313404F4@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  sub_2312E7F5C(0);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2313407E0(a1, a2);
  if (qword_25415DF98 != -1)
    swift_once();
  v12 = sub_231413780();
  sub_2312CE3B8(v12, (uint64_t)qword_254162FF0);
  swift_bridgeObjectRetain_n();
  v13 = sub_231413768();
  v14 = sub_23141498C();
  v15 = v14;
  if (os_log_type_enabled(v13, v14))
  {
    v16 = swift_slowAlloc();
    v33 = v7;
    v17 = v16;
    v32 = swift_slowAlloc();
    v35 = v32;
    *(_DWORD *)v17 = 136446466;
    v18 = sub_2314151A8();
    v34 = sub_23133180C(v18, v19, &v35);
    v31 = v15;
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    v20 = sub_231412A90();
    v21 = MEMORY[0x2348DD18C](v20, MEMORY[0x24BE47F58]);
    v22 = v8;
    v23 = a3;
    v25 = v24;
    swift_bridgeObjectRelease();
    v34 = sub_23133180C(v21, v25, &v35);
    sub_231414CBC();
    swift_bridgeObjectRelease_n();
    a3 = v23;
    v8 = v22;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v13, (os_log_type_t)v31, "[%{public}s]: Returning these changes: %s", (uint8_t *)v17, 0x16u);
    v26 = v32;
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v26, -1, -1);
    v27 = v17;
    v7 = v33;
    MEMORY[0x2348DE308](v27, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v35 = v11;
  sub_23134155C(0, (unint64_t *)&qword_25415DE58, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE1250]);
  sub_231413DD4();
  sub_2312CCC24((unint64_t *)&qword_25415DDC8, (uint64_t (*)(uint64_t))sub_2312E7F5C, MEMORY[0x24BDB9DF8]);
  v28 = sub_231413E7C();
  result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *a3 = v28;
  return result;
}

uint64_t sub_2313407E0(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __int128 v16;
  _QWORD v17[4];

  v3 = sub_2314118C0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v17[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2314111E8();
  swift_allocObject();
  sub_2314111DC();
  LOBYTE(v17[0]) = a2;
  sub_231341518();
  v7 = sub_2314111D0();
  v9 = v8;
  swift_release();
  sub_231411A10();
  sub_2312CEA5C(v17, v17[3]);
  v10 = (void *)sub_2314119C8();
  v11 = objc_msgSend(v10, sel_profileIdentifier);

  sub_231340D74(v11);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v17);
  sub_231411A28();
  sub_2312D6C64(v7, v9);
  sub_2314118B4();
  sub_23134155C(0, &qword_25415BBD8, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE3598]);
  v12 = swift_allocObject();
  v16 = xmmword_231416A30;
  *(_OWORD *)(v12 + 16) = xmmword_231416A30;
  sub_2312CE560(0, &qword_25415B6A0, (void (*)(uint64_t))MEMORY[0x24BE47570]);
  v13 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = v16;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 16))(v14 + v13, v6, v3);
  *(_QWORD *)(v12 + 32) = v14;
  *(_QWORD *)(v12 + 40) = 0;
  *(_QWORD *)(v12 + 48) = 0;
  *(_QWORD *)(v12 + 56) = 0;
  *(_BYTE *)(v12 + 64) = 64;
  sub_2312D6CA8(v7, v9);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v12;
}

uint64_t sub_231340BE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC5Heart42CardioFitnessClassificationStatusGenerator_domain;
  v2 = sub_231411A04();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_231340C40()
{
  return type metadata accessor for CardioFitnessClassificationStatusGenerator(0);
}

uint64_t type metadata accessor for CardioFitnessClassificationStatusGenerator(uint64_t a1)
{
  return sub_2312F19EC(a1, (uint64_t *)&unk_25415D438);
}

uint64_t sub_231340C5C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_231411A04();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_231340CD8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC5Heart42CardioFitnessClassificationStatusGenerator_domain;
  v4 = sub_231411A04();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void sub_231340D20(unsigned __int8 *a1@<X8>)
{
  void *v2;
  unsigned __int8 v3;

  v2 = (void *)sub_231413588();
  v3 = objc_msgSend(v2, sel_areAllRequirementsSatisfied);

  *a1 = v3;
}

unint64_t sub_231340D74(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  unint64_t v8;
  unint64_t v9;

  v2 = sub_231411644();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = 0;
  v9 = 0xE000000000000000;
  sub_231414E18();
  swift_bridgeObjectRelease();
  v8 = 0xD000000000000022;
  v9 = 0x800000023142AF90;
  v6 = objc_msgSend(a1, sel_identifier);
  sub_23141162C();

  sub_231411614();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_231414728();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_231340E7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[4];

  v2 = sub_231411A4C();
  v33 = *(_QWORD *)(v2 - 8);
  v34 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v32 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_231411B00();
  v30 = *(_QWORD *)(v4 - 8);
  v31 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312CCB14();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_231411B48();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231411A10();
  sub_2312CEA5C(v36, v36[3]);
  v14 = (void *)sub_2314119C8();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v36);
  v35 = a1;
  sub_231411A40();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = v30;
    v15 = v31;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v6, v9, v31);
    sub_2312CCC24((unint64_t *)&qword_25415B6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE47EC8], MEMORY[0x24BE47ED8]);
    swift_willThrowTypedImpl();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v6, v15);
    v17 = (id)*MEMORY[0x24BDD2DD0];
    v18 = v14;
    v19 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    sub_231411B3C();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v20 = (void *)*MEMORY[0x24BDD2DD0];
    v21 = v14;
    v17 = v20;
    v19 = (void *)sub_23141468C();
    swift_bridgeObjectRelease();
  }
  v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3BF8]), sel_initWithFeatureIdentifier_healthStore_currentCountryCode_, v17, v14, v19);

  v24 = (uint64_t)v32;
  v23 = v33;
  v26 = v34;
  v25 = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v32, v35, v34);
  type metadata accessor for CardioFitnessClassificationStatusGeneratorPipeline(0);
  v27 = swift_allocObject();
  sub_23133FB84(v24, v22);

  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v26);
  return v27;
}

void sub_231341164()
{
  void (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_25415C098)
  {
    v0 = (void (*)(uint64_t))MEMORY[0x24BE45750];
    sub_2313411FC(255, (unint64_t *)&qword_25415CFC0, (void (*)(uint64_t))MEMORY[0x24BE45750]);
    sub_231341258((unint64_t *)&qword_25415CFB0, (unint64_t *)&qword_25415CFC0, v0);
    v1 = sub_231413C60();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_25415C098);
  }
}

void sub_2313411FC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_231413D14();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_231341258(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_2313411FC(255, a2, a3);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB9AF8], v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_231341298()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415C0A8)
  {
    sub_23134132C();
    sub_2312E5B54();
    sub_2312CCC24(&qword_25415C0B0, (uint64_t (*)(uint64_t))sub_23134132C, MEMORY[0x24BDB9AF8]);
    v0 = sub_231413C60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415C0A8);
  }
}

void sub_23134132C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415C0B8)
  {
    v0 = sub_231413D14();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415C0B8);
  }
}

uint64_t sub_231341390()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_231411A4C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_2313413FC@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_231411A4C() - 8) + 80);
  return sub_23134008C(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_23134145C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_231411A4C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_2313414C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(sub_231411A4C() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_2313404F4(v1 + v4, *(_BYTE *)(v1 + v4 + *(_QWORD *)(v3 + 64)), a1);
}

unint64_t sub_231341518()
{
  unint64_t result;

  result = qword_25415D488;
  if (!qword_25415D488)
  {
    result = MEMORY[0x2348DE248](&protocol conformance descriptor for CardioFitnessClassificationStatus, &type metadata for CardioFitnessClassificationStatus);
    atomic_store(result, (unint64_t *)&qword_25415D488);
  }
  return result;
}

void sub_23134155C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, _QWORD))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, MEMORY[0x24BE47F58]);
    if (!v5)
      atomic_store(v4, a2);
  }
}

id sub_2313415A4()
{
  char *v0;
  uint64_t ObjCClassFromMetadata;
  id v2;
  void *v3;
  id v4;
  objc_super v6;

  *(_QWORD *)&v0[OBJC_IVAR____TtC5Heart44CardioFitnessOnboardingFactorsViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  type metadata accessor for HeartHealthPluginDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_231411374();

  v3 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for CardioFitnessOnboardingFactorsViewController();
  v4 = objc_msgSendSuper2(&v6, sel_initWithTitle_detailText_icon_contentLayout_, v3, 0, 0, 2, 0xE000000000000000);

  return v4;
}

void sub_2313416C4()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjCClassFromMetadata;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  objc_class *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  objc_class *v47;
  id v48;
  unint64_t v49;
  objc_super v50;

  v50.receiver = v0;
  v50.super_class = (Class)type metadata accessor for CardioFitnessOnboardingFactorsViewController();
  objc_msgSendSuper2(&v50, sel_viewDidLoad);

  v48 = v0;
  objc_msgSend(v0, sel_hxui_addCancelButton);
  sub_2312D3AD4();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_231419E70;
  v2 = v1;
  v49 = v1;
  type metadata accessor for HeartHealthPluginDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_bundleForClass_, ObjCClassFromMetadata);
  v6 = sub_231411374();
  v8 = v7;

  v9 = objc_msgSend(v4, (SEL)&selRef_hxui_addCancelButton + 1, ObjCClassFromMetadata, 0xE000000000000000);
  v10 = sub_231411374();
  v12 = v11;

  v13 = (objc_class *)type metadata accessor for NumberedTextView();
  v14 = objc_allocWithZone(v13);
  *(_QWORD *)(v2 + 32) = sub_2313F561C(1, v6, v8, v10, v12);
  v15 = objc_msgSend(v4, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  v16 = sub_231411374();
  v18 = v17;

  v19 = objc_msgSend(v4, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  v20 = sub_231411374();
  v22 = v21;

  v47 = v13;
  v23 = objc_allocWithZone(v13);
  *(_QWORD *)(v49 + 40) = sub_2313F561C(2, v16, v18, v20, v22);
  v24 = objc_msgSend(v4, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  v25 = sub_231411374();
  v27 = v26;

  v28 = objc_msgSend(v4, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  v29 = sub_231411374();
  v31 = v30;

  v32 = objc_allocWithZone(v13);
  *(_QWORD *)(v49 + 48) = sub_2313F561C(3, v25, v27, v29, v31);
  v33 = objc_msgSend(v4, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  v34 = sub_231411374();
  v36 = v35;

  v37 = objc_msgSend(v4, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  v38 = sub_231411374();
  v40 = v39;

  v41 = objc_allocWithZone(v47);
  *(_QWORD *)(v49 + 56) = sub_2313F561C(4, v34, v36, v38, v40);
  sub_2314147B8();
  if (v49 >> 62)
  {
    sub_231342108();
    sub_231412A90();
    sub_231414EFC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_231412A90();
    sub_23141507C();
    sub_231342108();
  }
  swift_bridgeObjectRelease();
  v42 = objc_allocWithZone(MEMORY[0x24BEBD978]);
  sub_231342108();
  v43 = (void *)sub_231414788();
  swift_bridgeObjectRelease();
  v44 = objc_msgSend(v42, sel_initWithArrangedSubviews_, v43, 0xE000000000000000);

  objc_msgSend(v44, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v44, sel_setAxis_, 1);
  objc_msgSend(v44, sel_setAlignment_, 0);
  objc_msgSend(v44, sel_setDistribution_, 3);
  objc_msgSend(v44, sel_setSpacing_, 20.0);
  v45 = objc_msgSend(v48, sel_contentView);
  objc_msgSend(v45, sel_addSubview_, v44);

  v46 = objc_msgSend(v48, sel_contentView);
  objc_msgSend(v44, sel_hk_alignConstraintsWithView_, v46);

}

id sub_231341E8C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CardioFitnessOnboardingFactorsViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for CardioFitnessOnboardingFactorsViewController()
{
  return objc_opt_self();
}

uint64_t sub_231341EEC()
{
  return 2;
}

uint64_t sub_231341EF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Heart44CardioFitnessOnboardingFactorsViewController_delegate + 8) = a2;
  swift_unknownObjectWeakAssign();
  return sub_2314130CC();
}

void sub_231341F30()
{
  uint64_t ObjectType;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  ObjectType = swift_getObjectType();
  if (qword_25415DF98 != -1)
    swift_once();
  v1 = sub_231413780();
  sub_2312CE3B8(v1, (uint64_t)qword_254162FF0);
  v2 = sub_231413768();
  v3 = sub_23141498C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = swift_slowAlloc();
    v5 = swift_slowAlloc();
    v8 = v5;
    *(_DWORD *)v4 = 136446466;
    nullsub_1(ObjectType);
    v6 = sub_2314151A8();
    sub_23133180C(v6, v7, &v8);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2082;
    sub_23133180C(0xD00000000000002ELL, 0x800000023142B060, &v8);
    sub_231414CBC();
    _os_log_impl(&dword_2312C8000, v2, v3, "[%{public}s.%{public}s]: User pressed cancel button", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v5, -1, -1);
    MEMORY[0x2348DE308](v4, -1, -1);
  }

  sub_23139A0F8(1, 0, 0, 0);
}

unint64_t sub_231342108()
{
  unint64_t result;

  result = qword_255ECDC18;
  if (!qword_255ECDC18)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255ECDC18);
  }
  return result;
}

ValueMetadata *type metadata accessor for IrregularRhythmNotificationsHealthChecklistConfigurationProvider()
{
  return &type metadata for IrregularRhythmNotificationsHealthChecklistConfigurationProvider;
}

unint64_t sub_231342158()
{
  unint64_t result;

  result = qword_25415CC60;
  if (!qword_25415CC60)
  {
    result = MEMORY[0x2348DE248](&unk_23141C36C, &type metadata for IrregularRhythmNotificationsHealthChecklistConfigurationProvider);
    atomic_store(result, (unint64_t *)&qword_25415CC60);
  }
  return result;
}

uint64_t sub_23134219C()
{
  return sub_2312CCC24(&qword_25415CA80, (uint64_t (*)(uint64_t))type metadata accessor for IrregularRhythmNotificationsFeatureStatusActionHandler, (uint64_t)&unk_231418634);
}

uint64_t sub_2313421C8(char a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_231418090;
  if ((a1 & 1) != 0)
  {
    if (qword_25415E610 != -1)
      swift_once();
  }
  else if ((a2 & 1) != 0)
  {
    if (qword_25415E610 != -1)
      swift_once();
  }
  else if (qword_25415E610 != -1)
  {
    swift_once();
  }
  *(_QWORD *)(v4 + 32) = sub_231411374();
  *(_QWORD *)(v4 + 40) = v5;
  *(_QWORD *)(v4 + 48) = sub_231411374();
  *(_QWORD *)(v4 + 56) = v6;
  return v4;
}

uint64_t sub_2313423A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v23 = a1;
  v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, &qword_25415C118, (uint64_t (*)(uint64_t))MEMORY[0x24BE47FD0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v22 - v3;
  sub_2312D6DD8(0, &qword_25415C128, (uint64_t (*)(uint64_t))MEMORY[0x24BE413B0], v1);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v22 - v6;
  v8 = sub_231411D1C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25415E610 != -1)
    swift_once();
  v12 = (void *)qword_254163058;
  sub_231411374();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BE41298], v8);
  v13 = v12;
  sub_231411D64();
  v14 = sub_231411D70();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v7, 0, 1, v14);
  sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_231418090;
  *(_QWORD *)(v15 + 32) = sub_231411374();
  *(_QWORD *)(v15 + 40) = v16;
  *(_QWORD *)(v15 + 48) = sub_231411374();
  *(_QWORD *)(v15 + 56) = v17;
  sub_231411DD0();
  v18 = sub_231411B48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v4, 1, 1, v18);
  v19 = v23;
  sub_231411ED8();
  v20 = sub_231411EF0();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 0, 1, v20);
}

uint64_t sub_2313426F0@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v22 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, &qword_25415C118, (uint64_t (*)(uint64_t))MEMORY[0x24BE47FD0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v21 - v5;
  sub_2312D6DD8(0, &qword_25415C128, (uint64_t (*)(uint64_t))MEMORY[0x24BE413B0], v3);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v21 - v8;
  v10 = sub_231411D1C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25415E610 != -1)
    swift_once();
  v14 = (void *)qword_254163058;
  sub_231411374();
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BE412A0], v10);
  v15 = v14;
  sub_231411D64();
  v16 = sub_231411D70();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v9, 0, 1, v16);
  if ((a1 & 1) != 0)
    sub_231411DAC();
  else
    sub_231411DA0();
  sub_2313421C8(0, a1 & 1);
  sub_231411DD0();
  v17 = sub_231411B48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v6, 1, 1, v17);
  v18 = v22;
  sub_231411ED8();
  v19 = sub_231411EF0();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 0, 1, v19);
}

uint64_t sub_2313429C0@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  id v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char **v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unsigned int *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  __int128 v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;

  v193 = a2;
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, &qword_25415C128, (uint64_t (*)(uint64_t))MEMORY[0x24BE413B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v190 = (char *)&v182 - v6;
  v7 = sub_231411CF8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v182 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6DD8(0, &qword_25415C0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], v4);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v189 = (uint64_t)&v182 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v182 - v14;
  v16 = sub_231411D1C();
  v17 = *(_QWORD *)(v16 - 8);
  v191 = v16;
  v192 = v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v182 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v182 - v21;
  v23 = objc_msgSend(a1, sel_highestPriorityUnsatisfiedRequirement);
  if (!v23)
  {
    __break(1u);
    goto LABEL_66;
  }
  v2 = v23;
  v24 = sub_2314146BC();
  v26 = v25;
  if (v24 == sub_2314146BC() && v26 == v27)
    goto LABEL_4;
  v28 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v28 & 1) != 0)
    goto LABEL_6;
  v31 = sub_2314146BC();
  v33 = v32;
  if (v31 == sub_2314146BC() && v33 == v34)
    goto LABEL_4;
  v35 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v35 & 1) != 0)
    goto LABEL_6;
  v36 = sub_2314146BC();
  v38 = v37;
  if (v36 == sub_2314146BC() && v38 == v39)
  {
LABEL_4:
    swift_bridgeObjectRelease_n();
LABEL_6:

    v29 = sub_231411EF0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v193, 1, 1, v29);
  }
  v40 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v40 & 1) != 0)
    goto LABEL_6;
  v41 = sub_2314146BC();
  v43 = v42;
  if (v41 == sub_2314146BC() && v43 == v44)
  {
    swift_bridgeObjectRelease_n();
    v45 = v191;
LABEL_17:

    v47 = &unk_25415E000;
    if (qword_25415E610 != -1)
      swift_once();
    v48 = &qword_254162FF0[2];
    v49 = sub_231411374();
    v51 = v50;
    v52 = v45;
    (*(void (**)(char *, _QWORD, uint64_t))(v192 + 104))(v22, *MEMORY[0x24BE41280], v45);
    sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
    v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_231416A30;
    *(_QWORD *)(v53 + 32) = v49;
    *(_QWORD *)(v53 + 40) = v51;
    v187 = v53;
    sub_231412A90();
    v54 = sub_231411DC4();
    v183 = v55;
    v184 = v54;
    v56 = MEMORY[0x2348DA7C8](v49, v51);
    v185 = v57;
    *(_QWORD *)&v186 = v56;
    swift_bridgeObjectRelease();
    v188 = sub_231411DC4();
    v182 = v58;
    sub_231344278((SEL *)&selRef_irregularHeartRhythmFooterLinkURL, 0xD00000000000001BLL, 0x800000023142B4E0, (uint64_t)v15);
    goto LABEL_28;
  }
  v46 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v45 = v191;
  if ((v46 & 1) != 0)
    goto LABEL_17;
  v59 = sub_2314146BC();
  v61 = v60;
  if (v59 != sub_2314146BC() || v61 != v62)
  {
    v63 = sub_231415070();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v63 & 1) != 0)
      goto LABEL_24;
    v81 = sub_2314146BC();
    v83 = v82;
    if (v81 != sub_2314146BC() || v83 != v84)
    {
      v85 = sub_231415070();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v85 & 1) != 0)
        goto LABEL_24;
      v86 = sub_2314146BC();
      v88 = v87;
      if (v86 == sub_2314146BC() && v88 == v89)
      {
        swift_bridgeObjectRelease_n();
        v90 = v191;
LABEL_39:

        v47 = &unk_25415E000;
        if (qword_25415E610 != -1)
          swift_once();
        v48 = &qword_254162FF0[2];
        v64 = sub_231411374();
        v66 = v92;
        v52 = v90;
        (*(void (**)(char *, _QWORD, uint64_t))(v192 + 104))(v22, *MEMORY[0x24BE41280], v90);
        goto LABEL_27;
      }
      v91 = sub_231415070();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v90 = v191;
      if ((v91 & 1) != 0)
        goto LABEL_39;
      v93 = sub_2314146BC();
      v95 = v94;
      if (v93 == sub_2314146BC() && v95 == v96)
      {
        swift_bridgeObjectRelease_n();
LABEL_46:

        if (qword_25415E610 != -1)
          swift_once();
        v48 = &qword_254162FF0[2];
        v98 = sub_231411374();
        v100 = v99;
        v52 = v191;
        (*(void (**)(char *, _QWORD, uint64_t))(v192 + 104))(v22, *MEMORY[0x24BE41280], v191);
        sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
        v101 = swift_allocObject();
        *(_OWORD *)(v101 + 16) = xmmword_231416A30;
        *(_QWORD *)(v101 + 32) = v98;
        *(_QWORD *)(v101 + 40) = v100;
        v187 = v101;
        sub_231412A90();
        v102 = sub_231411DC4();
        v183 = v103;
        v184 = v102;
        v104 = MEMORY[0x2348DA7C8](v98, v100);
        v185 = v105;
        *(_QWORD *)&v186 = v104;
        swift_bridgeObjectRelease();
        v188 = sub_231411DC4();
        v182 = v106;
        v107 = 0xD00000000000001DLL;
        v108 = &selRef_seedExpiredLinkURL;
        v109 = 0x800000023142B4C0;
        v110 = (uint64_t)v15;
LABEL_56:
        sub_231344278((SEL *)v108, v107, v109, v110);
        v125 = sub_2314114AC();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v125 - 8) + 56))(v15, 0, 1, v125);
LABEL_57:
        v47 = (_QWORD *)&unk_25415E000;
        goto LABEL_29;
      }
      v97 = sub_231415070();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v97 & 1) != 0)
        goto LABEL_46;
      v111 = sub_2314146BC();
      v113 = v112;
      if (v111 == sub_2314146BC() && v113 == v114)
      {
        swift_bridgeObjectRelease_n();
LABEL_53:

        if (qword_25415E610 != -1)
          swift_once();
        v48 = &qword_254162FF0[2];
        v116 = sub_231411374();
        v118 = v117;
        v52 = v191;
        (*(void (**)(char *, _QWORD, uint64_t))(v192 + 104))(v22, *MEMORY[0x24BE41280], v191);
        sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
        v119 = swift_allocObject();
        *(_OWORD *)(v119 + 16) = xmmword_231416A30;
        *(_QWORD *)(v119 + 32) = v116;
        *(_QWORD *)(v119 + 40) = v118;
        v187 = v119;
        sub_231412A90();
        v120 = sub_231411DC4();
        v183 = v121;
        v184 = v120;
        v122 = MEMORY[0x2348DA7C8](v116, v118);
        v185 = v123;
        *(_QWORD *)&v186 = v122;
        swift_bridgeObjectRelease();
        v188 = sub_231411DC4();
        v182 = v124;
        v108 = &selRef_irregularHeartRhythmFooterLinkURL;
        v109 = 0x800000023142B4E0;
        v110 = (uint64_t)v15;
        v107 = 0xD00000000000001BLL;
        goto LABEL_56;
      }
      v115 = sub_231415070();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v115 & 1) != 0)
        goto LABEL_53;
      v126 = sub_2314146BC();
      v128 = v127;
      if (v126 == sub_2314146BC() && v128 == v129)
      {
        swift_bridgeObjectRelease_n();
LABEL_62:

        v188 = sub_231411DF4();
        v132 = v131;
        if (qword_25415E610 != -1)
          swift_once();
        sub_231411374();
        sub_2312D6DD8(0, (unint64_t *)&qword_25415DF58, (uint64_t (*)(uint64_t))sub_2312D6E30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
        v133 = swift_allocObject();
        v186 = xmmword_231416A30;
        *(_OWORD *)(v133 + 16) = xmmword_231416A30;
        *(_QWORD *)(v133 + 56) = MEMORY[0x24BEE0D00];
        *(_QWORD *)(v133 + 64) = sub_2312D6E84();
        *(_QWORD *)(v133 + 32) = v188;
        *(_QWORD *)(v133 + 40) = v132;
        v182 = v132;
        sub_231412A90();
        v134 = sub_231414698();
        v136 = v135;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v137 = v191;
        (*(void (**)(char *, _QWORD, uint64_t))(v192 + 104))(v22, *MEMORY[0x24BE41288], v191);
        sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
        v138 = swift_allocObject();
        v187 = v138;
        *(_OWORD *)(v138 + 16) = v186;
        v185 = v136;
        *(_QWORD *)&v186 = v134;
        *(_QWORD *)(v138 + 32) = v134;
        *(_QWORD *)(v138 + 40) = v136;
        sub_231412A90();
        v139 = sub_231411DDC();
        v183 = v140;
        v184 = v139;
        v141 = (unsigned int *)MEMORY[0x24BE411F8];
LABEL_73:
        (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *v141, v7);
        sub_231411CE0();
        v156 = v10;
        v48 = qword_254162FF0 + 16;
        v52 = v137;
        (*(void (**)(char *, uint64_t))(v8 + 8))(v156, v7);
        goto LABEL_57;
      }
      v130 = sub_231415070();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v130 & 1) != 0)
        goto LABEL_62;
LABEL_66:
      v142 = sub_2314146BC();
      v144 = v143;
      if (v142 == sub_2314146BC() && v144 == v145)
      {
        swift_bridgeObjectRelease_n();
LABEL_70:

        v188 = sub_231411E00();
        v148 = v147;
        if (qword_25415E610 != -1)
          swift_once();
        sub_231411374();
        sub_2312D6DD8(0, (unint64_t *)&qword_25415DF58, (uint64_t (*)(uint64_t))sub_2312D6E30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
        v149 = swift_allocObject();
        v186 = xmmword_231416A30;
        *(_OWORD *)(v149 + 16) = xmmword_231416A30;
        *(_QWORD *)(v149 + 56) = MEMORY[0x24BEE0D00];
        *(_QWORD *)(v149 + 64) = sub_2312D6E84();
        *(_QWORD *)(v149 + 32) = v188;
        *(_QWORD *)(v149 + 40) = v148;
        v182 = v148;
        sub_231412A90();
        v150 = sub_231414698();
        v152 = v151;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v137 = v191;
        (*(void (**)(char *, _QWORD, uint64_t))(v192 + 104))(v22, *MEMORY[0x24BE41288], v191);
        sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
        v153 = swift_allocObject();
        v187 = v153;
        *(_OWORD *)(v153 + 16) = v186;
        v185 = v152;
        *(_QWORD *)&v186 = v150;
        *(_QWORD *)(v153 + 32) = v150;
        *(_QWORD *)(v153 + 40) = v152;
        sub_231412A90();
        v154 = sub_231411DDC();
        v183 = v155;
        v184 = v154;
        v141 = (unsigned int *)MEMORY[0x24BE41200];
        goto LABEL_73;
      }
      v146 = sub_231415070();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v146 & 1) != 0)
        goto LABEL_70;
      v157 = sub_2314146BC();
      v159 = v158;
      if (v157 == sub_2314146BC() && v159 == v160)
      {

        swift_bridgeObjectRelease_n();
      }
      else
      {
        v161 = sub_231415070();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v161 & 1) == 0)
        {
          if ((sub_231411DB8() & 1) != 0)
          {
            if (qword_25415E610 != -1)
              swift_once();
          }
          else if (qword_25415E610 != -1)
          {
            swift_once();
          }
          v172 = sub_231411374();
          v174 = v173;
          v52 = v191;
          (*(void (**)(char *, _QWORD, uint64_t))(v192 + 104))(v22, *MEMORY[0x24BE41280], v191);
          sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
          v175 = swift_allocObject();
          *(_OWORD *)(v175 + 16) = xmmword_231416A30;
          *(_QWORD *)(v175 + 32) = v172;
          *(_QWORD *)(v175 + 40) = v174;
          v187 = v175;
          sub_231412A90();
          v176 = sub_231411DC4();
          v183 = v177;
          v184 = v176;
          v178 = MEMORY[0x2348DA7C8](v172, v174);
          v185 = v179;
          *(_QWORD *)&v186 = v178;
          swift_bridgeObjectRelease();
          v188 = sub_231411DC4();
          v182 = v180;
          sub_231344278((SEL *)&selRef_irregularHeartRhythmFooterLinkURL, 0xD00000000000001BLL, 0x800000023142B4E0, (uint64_t)v15);
          v181 = sub_2314114AC();
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v181 - 8) + 56))(v15, 0, 1, v181);
          goto LABEL_88;
        }
      }
      if (qword_255ECAAD8 != -1)
        swift_once();
      v162 = sub_231411374();
      v164 = v163;
      v52 = v191;
      (*(void (**)(char *, _QWORD, uint64_t))(v192 + 104))(v22, *MEMORY[0x24BE41280], v191);
      sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
      v165 = swift_allocObject();
      *(_OWORD *)(v165 + 16) = xmmword_231416A30;
      *(_QWORD *)(v165 + 32) = v162;
      *(_QWORD *)(v165 + 40) = v164;
      v187 = v165;
      sub_231412A90();
      v166 = sub_231411DC4();
      v183 = v167;
      v184 = v166;
      v168 = MEMORY[0x2348DA7C8](v162, v164);
      v185 = v169;
      *(_QWORD *)&v186 = v168;
      swift_bridgeObjectRelease();
      v188 = sub_231411DC4();
      v182 = v170;
      sub_231344278((SEL *)&selRef_irregularHeartRhythmFooterLinkURL, 0xD00000000000001BLL, 0x800000023142B4E0, (uint64_t)v15);
      v171 = sub_2314114AC();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v171 - 8) + 56))(v15, 0, 1, v171);
LABEL_88:
      v48 = qword_254162FF0 + 16;
      goto LABEL_57;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_24:

  v47 = &unk_25415E000;
  if (qword_25415E610 != -1)
    swift_once();
  v48 = &qword_254162FF0[2];
  v64 = sub_231411374();
  v66 = v65;
  v52 = v191;
  (*(void (**)(char *, _QWORD, uint64_t))(v192 + 104))(v22, *MEMORY[0x24BE41280], v191);
LABEL_27:
  sub_2312D6CEC(0, (unint64_t *)&qword_25415B688);
  v67 = swift_allocObject();
  *(_OWORD *)(v67 + 16) = xmmword_231416A30;
  *(_QWORD *)(v67 + 32) = v64;
  *(_QWORD *)(v67 + 40) = v66;
  v187 = v67;
  sub_231412A90();
  v68 = sub_231411DC4();
  v183 = v69;
  v184 = v68;
  v70 = MEMORY[0x2348DA7C8](v64, v66);
  v185 = v71;
  *(_QWORD *)&v186 = v70;
  swift_bridgeObjectRelease();
  v188 = sub_231411DC4();
  v182 = v72;
  sub_231344094((uint64_t)v15);
LABEL_28:
  v73 = sub_2314114AC();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v15, 0, 1, v73);
LABEL_29:
  if (v47[194] != -1)
    swift_once();
  v74 = (void *)v48[11];
  sub_231411374();
  v75 = v192;
  (*(void (**)(char *, char *, uint64_t))(v192 + 16))(v20, v22, v52);
  v76 = v74;
  v77 = v190;
  sub_231411D64();
  v78 = sub_231411D70();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v77, 0, 1, v78);
  sub_2312F05B8((uint64_t)v15, v189);
  v79 = v193;
  sub_231411ECC();
  sub_2312F0614((uint64_t)v15);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v22, v52);
  v80 = sub_231411EF0();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56))(v79, 0, 1, v80);
}

uint64_t sub_231343EB4()
{
  uint64_t v0;
  id v1;

  v0 = *MEMORY[0x24BE4BF40];
  v1 = (id)*MEMORY[0x24BE4BF40];
  return v0;
}

uint64_t sub_231343EE8@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  return sub_2313429C0(a1, a2);
}

uint64_t sub_231343EF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BE41608];
  v3 = sub_231411E18();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_231343F34()
{
  sub_2313445A4();
  return sub_2314120DC();
}

uint64_t sub_231343F74()
{
  sub_2313445A4();
  return sub_2314120B8();
}

unint64_t sub_231343FB8()
{
  unint64_t result;

  result = qword_25415C078;
  if (!qword_25415C078)
  {
    result = MEMORY[0x2348DE248](&unk_23141C294, &type metadata for IrregularRhythmNotificationsHealthChecklistConfigurationProvider);
    atomic_store(result, (unint64_t *)&qword_25415C078);
  }
  return result;
}

uint64_t sub_231344000()
{
  sub_231343FB8();
  return sub_231412118();
}

uint64_t sub_231344038()
{
  sub_231343FB8();
  return sub_23141210C();
}

unint64_t sub_231344078()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_231344094@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD v14[2];

  sub_2312D6DD8(0, &qword_25415C0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v14 - v3;
  sub_2314114A0();
  v5 = sub_2314114AC();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v4, v5);
  sub_2312F0614((uint64_t)v4);
  sub_2312D6DD8(0, (unint64_t *)&qword_25415DF58, (uint64_t (*)(uint64_t))sub_2312D6E30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_231418090;
  v14[1] = &type metadata for IrregularRhythmNotificationsHealthChecklistConfigurationProvider;
  sub_23134456C();
  v9 = sub_2314146E0();
  v11 = v10;
  v12 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v8 + 56) = MEMORY[0x24BEE0D00];
  v13 = sub_2312D6E84();
  *(_QWORD *)(v8 + 32) = v9;
  *(_QWORD *)(v8 + 40) = v11;
  *(_QWORD *)(v8 + 96) = v12;
  *(_QWORD *)(v8 + 104) = v13;
  *(_QWORD *)(v8 + 64) = v13;
  *(_QWORD *)(v8 + 72) = 0xD000000000000025;
  *(_QWORD *)(v8 + 80) = 0x800000023142B490;
  sub_2314146D4();
  result = sub_231414EE4();
  __break(1u);
  return result;
}

uint64_t sub_231344278@<X0>(SEL *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD v21[2];

  sub_2312D6DD8(0, &qword_25415C0F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v21 - v9;
  v11 = objc_msgSend((id)objc_opt_self(), *a1);
  sub_2314146BC();

  sub_2314114A0();
  swift_bridgeObjectRelease();
  v12 = sub_2314114AC();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(a4, v10, v12);
  sub_2312F0614((uint64_t)v10);
  sub_2312D6DD8(0, (unint64_t *)&qword_25415DF58, (uint64_t (*)(uint64_t))sub_2312D6E30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_231418090;
  v21[1] = &type metadata for IrregularRhythmNotificationsHealthChecklistConfigurationProvider;
  sub_23134456C();
  v16 = sub_2314146E0();
  v18 = v17;
  v19 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v15 + 56) = MEMORY[0x24BEE0D00];
  v20 = sub_2312D6E84();
  *(_QWORD *)(v15 + 32) = v16;
  *(_QWORD *)(v15 + 40) = v18;
  *(_QWORD *)(v15 + 96) = v19;
  *(_QWORD *)(v15 + 104) = v20;
  *(_QWORD *)(v15 + 64) = v20;
  *(_QWORD *)(v15 + 72) = a2;
  *(_QWORD *)(v15 + 80) = a3;
  sub_2314146D4();
  result = sub_231414EE4();
  __break(1u);
  return result;
}

uint64_t sub_231344480()
{
  unint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2312D6CEC(0, (unint64_t *)&qword_25415BD40);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_231417F90;
  sub_2312E2090();
  *(_QWORD *)(inited + 32) = MEMORY[0x2348DD378]((id)*MEMORY[0x24BDD2950]);
  sub_2314147B8();
  if (inited >> 62)
  {
    sub_231412A90();
    v3 = sub_231414F08();
    swift_bridgeObjectRelease();
    if (v3)
      goto LABEL_3;
LABEL_5:
    v2 = MEMORY[0x24BEE4B08];
    goto LABEL_6;
  }
  if (!*(_QWORD *)((inited & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_5;
LABEL_3:
  sub_2312FC638(inited);
  v2 = v1;
LABEL_6:
  swift_bridgeObjectRelease();
  return v2;
}

unint64_t sub_23134456C()
{
  unint64_t result;

  result = qword_255ECDC20;
  if (!qword_255ECDC20)
  {
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255ECDC20);
  }
  return result;
}

unint64_t sub_2313445A4()
{
  unint64_t result;

  result = qword_25415CC58;
  if (!qword_25415CC58)
  {
    result = MEMORY[0x2348DE248](&unk_23141C30C, &type metadata for IrregularRhythmNotificationsHealthChecklistConfigurationProvider);
    atomic_store(result, (unint64_t *)&qword_25415CC58);
  }
  return result;
}

_QWORD *sub_2313445E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD v17[2];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21[2];
  _QWORD *v22;

  v2 = v1;
  v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v22 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v17[1] = v2;
    swift_retain();
    sub_231412A90();
    v17[0] = a1;
    v6 = a1 + 40;
    do
    {
      sub_231412A90();
      sub_231412B20();
      swift_bridgeObjectRelease();
      if (v19)
      {
        sub_2312DFB68(&v18, (uint64_t)v21);
        sub_2312DFB68(v21, (uint64_t)&v18);
        v7 = v22;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v7 = sub_2312CDBB4(0, v7[2] + 1, 1, v7);
          v22 = v7;
        }
        v9 = v7[2];
        v8 = v7[3];
        if (v9 >= v8 >> 1)
          v22 = sub_2312CDBB4((_QWORD *)(v8 > 1), v9 + 1, 1, v7);
        v10 = v19;
        v11 = v20;
        v12 = sub_2312DEF74((uint64_t)&v18, v19);
        MEMORY[0x24BDAC7A8](v12);
        v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v15 + 16))(v14);
        sub_2313472BC(v9, (uint64_t)v14, (uint64_t *)&v22, v10, v11);
        _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v18);
      }
      else
      {
        sub_231347BDC((uint64_t)&v18, (unint64_t *)&qword_255ECB1A8, (unint64_t *)&qword_255ECF1F0);
      }
      v6 += 16;
      --v4;
    }
    while (v4);
    swift_release();
    swift_bridgeObjectRelease();
    v3 = v22;
  }
  swift_release();
  return v3;
}

uint64_t sub_2313447E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v5;
  uint64_t v6;
  _QWORD v7[5];

  v3 = v1 + OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_consumedHealthExperienceStore;
  swift_beginAccess();
  sub_231347C54(a1, v3);
  swift_endAccess();
  sub_23130AC10(v3, (uint64_t)&v5);
  if (v6)
  {
    sub_2312DFB68(&v5, (uint64_t)v7);
    sub_231345E44(v7);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v7);
  }
  else
  {
    sub_231347BDC((uint64_t)&v5, &qword_255ECC210, (unint64_t *)&qword_255ECE930);
  }
  return sub_231347BDC(a1, &qword_255ECC210, (unint64_t *)&qword_255ECE930);
}

void (*sub_2313448B4(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_consumedHealthExperienceStore;
  v3[10] = v1;
  v3[11] = v4;
  swift_beginAccess();
  return sub_23134490C;
}

void sub_23134490C(uint64_t *a1, char a2)
{
  uint64_t v3;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    sub_23130AC10(*(_QWORD *)(v3 + 80) + *(_QWORD *)(v3 + 88), v3 + 40);
    if (*(_QWORD *)(v3 + 64))
    {
      sub_2312DFB68((__int128 *)(v3 + 40), v3);
      sub_231345E44((_QWORD *)v3);
      _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v3);
    }
    else
    {
      sub_231347BDC(v3 + 40, &qword_255ECC210, (unint64_t *)&qword_255ECE930);
    }
  }
  free((void *)v3);
}

id sub_2313449C8()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  id result;
  void *v9;
  void *v10;
  objc_super v11;

  v1 = v0;
  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for AtrialFibrillationDataTypeDetailViewController();
  objc_msgSendSuper2(&v11, sel_viewDidLoad);
  v2 = sub_231412514();
  v4 = v3;
  if (v2 == sub_231412514() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v7 = sub_231415070();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
      sub_231345530();
  }
  result = objc_msgSend(v1, sel_tableView);
  if (result)
  {
    v9 = result;
    sub_23141309C();
    sub_2314148FC();

    result = objc_msgSend(v1, sel_tableView);
    if (result)
    {
      v10 = result;
      sub_231412040();
      sub_2314148FC();

      sub_231347C18(&qword_255ECDD18, (uint64_t)&unk_23141C440);
      return (id)sub_2314133FC();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_231344B98()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  void *v13;
  id v14;
  id v15;
  objc_class *v16;
  char *v17;
  id v18;
  id v19;
  objc_super v20;
  _BYTE v21[40];

  v1 = sub_231412514();
  v3 = v2;
  if (v1 == sub_231412514() && v3 == v4)
    goto LABEL_12;
  v6 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
  {
LABEL_13:
    v13 = *(void **)&v0[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_viewControllerFactory];
    v14 = *(id *)&v0[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_displayType];
    v15 = objc_msgSend(v13, sel_profile);
    sub_2314149F8();
    v16 = (objc_class *)type metadata accessor for SummariesAtrialFibrillationListDataProvider();
    v17 = (char *)objc_allocWithZone(v16);
    v18 = objc_msgSend(v15, sel_healthStore);
    *(_QWORD *)&v17[OBJC_IVAR____TtC5Heart43SummariesAtrialFibrillationListDataProvider_store] = v18;
    sub_2312DF850((uint64_t)v21, (uint64_t)&v17[OBJC_IVAR____TtC5Heart43SummariesAtrialFibrillationListDataProvider_healthExperienceStore]);

    v20.receiver = v17;
    v20.super_class = v16;
    v19 = objc_msgSendSuper2(&v20, sel_initWithDisplayType_profile_, v14, v15);

    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v21);
    objc_msgSend(v0, sel_setDataProvider_, v19);

    return;
  }
  v7 = sub_231412514();
  v9 = v8;
  if (v7 == sub_231412514() && v9 == v10)
  {
LABEL_12:
    swift_bridgeObjectRelease_n();
    goto LABEL_13;
  }
  v12 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
    goto LABEL_13;
}

uint64_t sub_231344DAC()
{
  uint64_t v0;
  id v1;
  char v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;

  swift_getObjectType();
  sub_2312CEA5C((_QWORD *)(v0 + OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_pinnedContentManager), *(_QWORD *)(v0 + OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_pinnedContentManager + 24));
  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_objectType), sel_identifier);
  sub_2314146BC();

  v2 = sub_231411B18();
  swift_bridgeObjectRelease();
  if (v2 != 2)
    return v2 & 1;
  if (qword_25415BD10 != -1)
    swift_once();
  v3 = sub_231413780();
  sub_2312CE3B8(v3, (uint64_t)qword_254162E78);
  v4 = sub_231413768();
  v5 = sub_23141498C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v11 = v7;
    *(_DWORD *)v6 = 136446210;
    v8 = sub_2314151A8();
    sub_23133180C(v8, v9, &v11);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v4, v5, "[%{public}s] Unable to fetch pinned status", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v7, -1, -1);
    MEMORY[0x2348DE308](v6, -1, -1);
  }

  return 0;
}

uint64_t sub_231344FF4(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v2 = v1;
  swift_getObjectType();
  if (qword_25415BD10 != -1)
    swift_once();
  v4 = sub_231413780();
  sub_2312CE3B8(v4, (uint64_t)qword_254162E78);
  v5 = sub_231413768();
  v6 = sub_23141498C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v12 = v8;
    *(_DWORD *)v7 = 136446466;
    v9 = sub_2314151A8();
    sub_23133180C(v9, v10, &v12);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 1024;
    sub_231414CBC();
    _os_log_impl(&dword_2312C8000, v5, v6, "[%{public}s] Setting favorite: %{BOOL}d", (uint8_t *)v7, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v8, -1, -1);
    MEMORY[0x2348DE308](v7, -1, -1);
  }

  sub_2312CEA5C((_QWORD *)(v2 + OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_pinnedContentManager), *(_QWORD *)(v2 + OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_pinnedContentManager + 24));
  if ((a1 & 1) != 0)
    return sub_231411B24();
  else
    return sub_231411B30();
}

id sub_2313451E0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v14;
  id v15;
  objc_super v16;

  v1 = sub_231412514();
  v3 = v2;
  if (v1 == sub_231412514() && v3 == v4)
    goto LABEL_12;
  v6 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
    goto LABEL_13;
  v7 = sub_231412514();
  v9 = v8;
  if (v7 == sub_231412514() && v9 == v10)
  {
LABEL_12:
    swift_bridgeObjectRelease_n();
    goto LABEL_13;
  }
  v12 = sub_231415070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
  {
    v16.receiver = v0;
    v16.super_class = (Class)type metadata accessor for AtrialFibrillationDataTypeDetailViewController();
    return objc_msgSendSuper2(&v16, sel_recomputeTotalSampleCount);
  }
LABEL_13:
  v14 = (uint64_t)objc_msgSend(objc_msgSend(v0, sel_dataProvider), sel_numberOfSections);
  sub_2314130CC();
  if (v14 < 1)
  {
    v15 = 0;
  }
  else
  {
    v15 = objc_msgSend(objc_msgSend(v0, sel_dataProvider), sel_numberOfObjectsForSection_, 0);
    sub_2314130CC();
  }
  return objc_msgSend(v0, sel_setTotalSampleCount_, v15);
}

void sub_2313453C4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;

  v1 = v0;
  v2 = sub_231411608();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)&v1[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_displayType];
  v7 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_providedHealthStore];
  v8 = objc_msgSend(v1, sel_resolvedHealthToolbox);
  sub_2314115FC();
  v9 = (void *)sub_2314115C0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v10 = objc_msgSend(v6, sel_wd_addDataViewControllerWithHealthStore_healthToolBox_initialStartDate_, v7, v8, v9);

  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A728]), sel_initWithRootViewController_, v10);
  objc_msgSend(v1, sel_presentViewController_animated_completion_, v11, 1, 0);

}

void sub_231345530()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  _BYTE v13[24];
  _QWORD v14[3];
  uint64_t v15;

  v1 = v0;
  v2 = (uint64_t)&v0[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_consumedHealthExperienceStore];
  swift_beginAccess();
  sub_23130AC10(v2, (uint64_t)v14);
  v3 = v15;
  if (v15)
  {
    v4 = sub_2312CEA5C(v14, v15);
    v5 = *(_QWORD *)(v3 - 8);
    MEMORY[0x24BDAC7A8](v4);
    v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(_BYTE *))(v5 + 16))(v7);
    sub_231347BDC((uint64_t)v14, &qword_255ECC210, (unint64_t *)&qword_255ECE930);
    v8 = (void *)sub_23141183C();
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v3);
    v9 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_providedHealthStore], sel_profileIdentifier);
    v10 = objc_msgSend(v1, sel_title);
    if (v10)
    {
      v11 = v10;
      sub_2314146BC();

    }
    type metadata accessor for AtrialFibrillationDataTypeDetailViewController();
    sub_231347C18(&qword_255ECDD08, (uint64_t)&unk_23141C45C);
    v12 = sub_2314132A0();
    swift_bridgeObjectRelease();
    if (v12)
    {
      swift_beginAccess();
      sub_231413D2C();
      swift_endAccess();

      swift_release();
    }
    else
    {

    }
  }
  else
  {
    sub_231347BDC((uint64_t)v14, &qword_255ECC210, (unint64_t *)&qword_255ECE930);
    sub_231414EE4();
    __break(1u);
  }
}

void sub_2313457BC()
{
  char *v0;
  char *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  _QWORD v28[4];
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = sub_231413780();
  v34 = *(_QWORD *)(v3 - 8);
  v35 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v36 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D1E78(0, &qword_25415C0F0, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
  MEMORY[0x24BDAC7A8](v5);
  v28[3] = (char *)v28 - v6;
  sub_2312D1E78(0, &qword_255ECC228, (void (*)(uint64_t))MEMORY[0x24BE49D28]);
  MEMORY[0x24BDAC7A8](v7);
  v29 = (char *)v28 - v8;
  v9 = sub_231414590();
  v32 = *(_QWORD *)(v9 - 8);
  v33 = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v31 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v30 = (char *)v28 - v12;
  v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = ObjectType;
  v37 = v1;
  v15 = *(void **)&v1[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_providedHealthStore];
  v16 = (void *)*MEMORY[0x24BDD2E00];
  v17 = type metadata accessor for IRNFeatureRegulatoryInfoTransformProvider();
  swift_allocObject();
  v28[2] = v15;
  v28[1] = v16;
  v18 = sub_23141459C();
  v39 = v17;
  v40 = MEMORY[0x24BE49EF8];
  v38 = v18;
  if (qword_255ECAB00 != -1)
    swift_once();
  sub_231411374();
  sub_231411374();
  swift_retain();
  sub_231411374();
  sub_2314114A0();
  swift_bridgeObjectRelease();
  v19 = v29;
  sub_23141456C();
  v20 = sub_231414578();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 0, 1, v20);
  if (qword_25415BD10 != -1)
    swift_once();
  v21 = v35;
  v22 = sub_2312CE3B8(v35, (uint64_t)qword_254162E78);
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v36, v22, v21);
  v23 = v30;
  sub_231414584();
  v24 = objc_allocWithZone((Class)type metadata accessor for FeatureRegulatoryAboutViewController());
  v25 = v32;
  v26 = v33;
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v31, v23, v33);
  v27 = (void *)sub_23141420C();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v23, v26);
  objc_msgSend(v37, sel_showAdaptively_sender_animated_, v27, 0, 1);
  swift_release();

}

void sub_231345C20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14[3];

  v1 = a1 + 16;
  if (qword_25415BD10 != -1)
    swift_once();
  v2 = sub_231413780();
  sub_2312CE3B8(v2, (uint64_t)qword_254162E78);
  v3 = sub_231413768();
  v4 = sub_23141498C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v14[0] = v6;
    *(_DWORD *)v5 = 136446210;
    v7 = sub_2314151A8();
    v13 = sub_23133180C(v7, v8, v14);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v3, v4, "[%{public}s] Reenable IRN button action selected", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v6, -1, -1);
    MEMORY[0x2348DE308](v5, -1, -1);
  }

  swift_beginAccess();
  v9 = (void *)MEMORY[0x2348DE3BC](v1);
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(v9, sel_navigationController);
    if (v11)
    {
      v12 = v11;

    }
    objc_msgSend(v10, sel_launchOnboardingToReenableFeature, v13, v14[0]);

  }
}

void sub_231345E44(_QWORD *a1)
{
  char *v1;
  char *v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  void *v38;
  _QWORD v39[2];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44[5];

  v2 = v1;
  ObjectType = swift_getObjectType();
  sub_2313479C0();
  v40 = *(_QWORD *)(v5 - 8);
  v41 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_231413264();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_231412514();
  v14 = v13;
  if (v12 == sub_231412514() && v14 == v15)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v17 = sub_231415070();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
      return;
  }
  v39[1] = ObjectType;
  v42 = OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_checklistTileDataSource;
  if (*(_QWORD *)&v2[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_checklistTileDataSource])
  {
    swift_retain();
    v18 = (void *)sub_231412B08();
    swift_release();
    objc_msgSend(v18, sel_unregisterObserver_, v2);

  }
  v19 = *(void **)&v2[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_providedHealthStore];
  sub_2312DF850((uint64_t)&v2[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_pinnedContentManager], (uint64_t)v44);
  sub_2312CEA5C(a1, a1[3]);
  v20 = v19;
  sub_23141183C();
  v21 = *(void **)&v2[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_objectType];
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BE44C68], v8);
  sub_231412094();
  swift_allocObject();
  v22 = v21;
  v23 = sub_231412088();
  v24 = v42;
  *(_QWORD *)&v2[v42] = v23;
  swift_release();
  v25 = *(_QWORD *)&v2[v24];
  if (v25)
  {
    swift_retain();
    sub_231412B2C();
    v26 = v41;
    v27 = sub_23141393C();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v26);
    swift_retain_n();
    v28 = sub_2313445E8(v27);
    swift_release();
    swift_bridgeObjectRelease();
    swift_retain();
    v29 = v2;
    v30 = sub_231347A24((uint64_t)v28, v25, v29);
    swift_bridgeObjectRelease();
    swift_release_n();

  }
  else
  {
    v30 = MEMORY[0x24BEE4AF8];
  }
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_allFeatureStatusCellsFromFeedItems] = v30;
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_reloadFeatureStatusSection);
  if (qword_25415BD10 != -1)
    swift_once();
  v31 = sub_231413780();
  sub_2312CE3B8(v31, (uint64_t)qword_254162E78);
  v32 = sub_231413768();
  v33 = sub_23141498C();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc();
    v35 = swift_slowAlloc();
    v44[0] = v35;
    *(_DWORD *)v34 = 136446210;
    v36 = sub_2314151A8();
    v43 = sub_23133180C(v36, v37, v44);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v32, v33, "[%{public}s] Starting observation of feature status feed item changes", v34, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v35, -1, -1);
    MEMORY[0x2348DE308](v34, -1, -1);
  }

  if (*(_QWORD *)&v2[v24])
  {
    swift_retain();
    v38 = (void *)sub_231412B08();
    swift_release();
    objc_msgSend(v38, sel_registerObserver_, v2);

  }
}

unint64_t sub_231346444()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  id v3;
  uint64_t v4;
  unint64_t result;
  id v6;
  void *v7;

  v1 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_allFeatureStatusCellsFromFeedItems);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v4 = sub_231414F08();
    swift_bridgeObjectRelease();
    if (v4 < 2)
      goto LABEL_3;
    sub_231412A90();
    v2 = sub_231414F08();
    swift_bridgeObjectRelease();
    if (!v2)
      goto LABEL_3;
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_231412A90();
    if (v2 < 2)
    {
LABEL_3:
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  result = v2 - 1;
  if (__OFSUB__(v2, 1))
  {
    __break(1u);
    goto LABEL_14;
  }
  if ((v1 & 0xC000000000000001) != 0)
  {
LABEL_14:
    v6 = (id)MEMORY[0x2348DD81C](result, v1);
    goto LABEL_11;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v6 = *(id *)(v1 + 8 * result + 32);
LABEL_11:
    v7 = v6;
    swift_bridgeObjectRelease();
    v3 = objc_msgSend(v7, sel_contentView);

    return (unint64_t)v3;
  }
  __break(1u);
  return result;
}

void sub_23134659C(_QWORD *a1@<X0>, void *a2@<X2>, _QWORD *a3@<X8>)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  _BYTE v19[40];
  _QWORD v20[4];

  sub_2312CEA5C(a1, a1[3]);
  sub_231411E60();
  v6 = (id)sub_231412B14();
  v8 = v7;
  swift_bridgeObjectRelease();
  sub_2312DF850((uint64_t)a1, (uint64_t)v20);
  if (!v8)
  {
    sub_2312CEA5C(v20, v20[3]);
    v6 = (id)sub_231411E54();
  }
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v20);
  v9 = objc_msgSend(a2, sel_tableView);
  if (!v9)
  {
    __break(1u);
    goto LABEL_16;
  }
  v10 = v9;
  v11 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v10, sel_dequeueReusableCellWithIdentifier_, v11);

  if (!v6)
  {
LABEL_17:
    sub_231414EE4();
    __break(1u);
    return;
  }
  swift_getObjectType();
  if (swift_conformsToProtocol2())
    v12 = v6;
  else
    v12 = 0;
  if (!v12)
  {
LABEL_16:

    goto LABEL_17;
  }
  swift_getObjectType();
  sub_2312DF850((uint64_t)a1, (uint64_t)v19);
  v13 = v6;
  sub_2314126E8();
  swift_getObjectType();
  if (swift_conformsToProtocol2())
    v14 = v6;
  else
    v14 = 0;
  if (v14)
  {
    swift_getObjectType();
    v15 = v13;
    v16 = a2;
    sub_2314129C4();

  }
  v17 = v13;
  sub_231346830();
  swift_arrayDestroy();
  v18 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_setAccessibilityIdentifier_, v18);

  *a3 = v13;
}

uint64_t sub_231346830()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_231347B40(0, (unint64_t *)&qword_25415B688, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE3598]);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_231418090;
  *(_QWORD *)(v0 + 32) = sub_2314146BC();
  *(_QWORD *)(v0 + 40) = v1;
  *(_QWORD *)(v0 + 48) = 5132873;
  *(_QWORD *)(v0 + 56) = 0xE300000000000000;
  v2 = sub_231412A90();
  sub_2313EBB78(v2);
  sub_231347B40(0, &qword_255ECC9C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE1250]);
  sub_23131C5FC();
  v3 = sub_231414668();
  swift_bridgeObjectRelease();
  return v3;
}

void sub_231346920()
{
  void *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;

  v1 = objc_msgSend(v0, sel_tableView);
  if (v1)
  {
    v2 = v1;
    v3 = (void *)sub_2314117AC();
    v6 = objc_msgSend(v2, sel_cellForRowAtIndexPath_, v3);

    if (v6)
    {
      swift_getObjectType();
      if (swift_conformsToProtocol2())
        v4 = v6;
      else
        v4 = 0;
      if (v4)
      {
        swift_getObjectType();
        v5 = v6;
        sub_231412724();

      }
      else
      {

      }
    }
  }
  else
  {
    __break(1u);
  }
}

id sub_231346CB0(uint64_t a1)
{
  return sub_23130AAB8(a1, type metadata accessor for AtrialFibrillationDataTypeDetailViewController);
}

uint64_t type metadata accessor for AtrialFibrillationDataTypeDetailViewController()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FeatureRegulatoryAboutViewController()
{
  uint64_t result;

  result = qword_255ECDCB0;
  if (!qword_255ECDCB0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_231346DE8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_231346E24@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = *v1 + OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_consumedHealthExperienceStore;
  swift_beginAccess();
  return sub_23130AC10(v3, a1);
}

uint64_t sub_231346E78(uint64_t a1)
{
  return sub_2313447E0(a1);
}

void (*sub_231346E98(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_2313448B4(v2);
  return sub_2312D1C0C;
}

id sub_231346EE0()
{
  _QWORD *v0;

  return objc_retain(*(id *)(*v0
                           + OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_providedHealthStore));
}

uint64_t sub_231346EF4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_2312DF850(*v1 + OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_pinnedContentManager, a1);
}

void sub_231346F1C(char a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;

  v3 = objc_msgSend(v1, sel_navigationItem);
  if ((a1 & 1) != 0)
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD410]), sel_initWithBarButtonSystemItem_target_action_, 0, v1, sel_didTapDone_);
    v7 = MEMORY[0x24BEE4AF8];
    if (v4)
    {
      v5 = v4;
      MEMORY[0x2348DD15C]();
      if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_2314147DC();
      sub_2314147E8();
      sub_2314147B8();
    }
    else
    {
      v5 = 0;
    }
  }
  else
  {
    v5 = 0;
  }

  sub_2312D3C68(0, (unint64_t *)&qword_255ECC218);
  v6 = (id)sub_231414788();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setRightBarButtonItems_, v6);

}

uint64_t sub_231347068(void *a1)
{
  id v2;
  uint64_t v4;

  swift_unknownObjectRetain();
  v2 = a1;
  sub_231414D04();
  sub_2314130CC();
  objc_msgSend(v2, sel_dismissViewControllerAnimated_completion_, 1, 0);

  return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v4);
}

id sub_2313470D8(void *a1, uint64_t a2, uint64_t a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for FeatureRegulatoryAboutViewController();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_231347120()
{
  return sub_23130AAB8(0, type metadata accessor for FeatureRegulatoryAboutViewController);
}

uint64_t sub_231347130()
{
  return type metadata accessor for FeatureRegulatoryAboutViewController();
}

void sub_231347138(void *a1)
{
  id v1;

  v1 = a1;
  sub_231346F1C(1);

}

void sub_231347174(void *a1)
{
  id v1;

  v1 = a1;
  sub_231346F1C(0);

}

uint64_t sub_2313471B0(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = result;
  if ((a3 & 0xC000000000000001) == 0)
    goto LABEL_7;
  if (a2 < result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (result == a2)
  {
LABEL_7:
    if (a3 >> 62)
    {
      sub_231412A90();
      v7 = sub_231414F14();
      swift_bridgeObjectRelease();
      return v7;
    }
    if ((a2 & 0x8000000000000000) == 0)
    {
      v7 = a3 & 0xFFFFFFFFFFFFFF8;
      sub_231412A90();
      return v7;
    }
    __break(1u);
    goto LABEL_13;
  }
  if (result < a2)
  {
    sub_2312D3C68(0, &qword_255ECDD10);
    result = v5;
    do
    {
      v6 = result + 1;
      sub_231414E30();
      result = v6;
    }
    while (a2 != v6);
    goto LABEL_7;
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_2313472BC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  v9 = sub_2312DFCA0((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v9, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_2312DFB68(&v12, v10 + 40 * a1 + 32);
}

void sub_231347334(void *a1, uint64_t a2, char a3, char *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  char *v16;
  void *ObjCClassFromMetadata;
  char *v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  id v38;
  id v39;
  objc_class *v40;
  id v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char *v48;
  void *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  id v56;
  id v57;
  id v58;
  _QWORD v60[3];
  objc_class *v61;
  objc_super v62;
  uint64_t v63[5];

  sub_2312D1E78(0, (unint64_t *)&qword_255ECF270, (void (*)(uint64_t))MEMORY[0x24BE42678]);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v60[-1] - v13;
  v63[3] = a5;
  v63[4] = a6;
  v15 = sub_2312DFCA0(v63);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(v15, a2, a5);
  v16 = &a4[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_consumedHealthExperienceStore];
  sub_2312D3C68(0, (unint64_t *)&qword_25415DEC0);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  *(_OWORD *)v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  *((_QWORD *)v16 + 4) = 0;
  v18 = a4;
  v19 = objc_msgSend(ObjCClassFromMetadata, sel_atrialFibrillationEventType);
  if (!v19)
  {
    __break(1u);
    goto LABEL_23;
  }
  v20 = OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_objectType;
  *(_QWORD *)&v18[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_objectType] = v19;
  *(_QWORD *)&v18[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_favoritesObserver] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_checklistTileDataSource] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_allFeatureStatusCellsFromFeedItems] = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v18[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_cancellables] = MEMORY[0x24BEE4B08];
  v21 = objc_msgSend(a1, sel_profile);
  v22 = objc_msgSend(v21, sel_healthStore);

  if (!v22)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  *(_QWORD *)&v18[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_providedHealthStore] = v22;
  sub_2312DF850((uint64_t)v63, (uint64_t)&v18[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_pinnedContentManager]);
  v23 = objc_msgSend((id)objc_opt_self(), sel_sharedInstanceForHealthStore_, v22);
  if (!v23)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v24 = v23;
  v25 = objc_msgSend(v23, sel_displayTypeForObjectType_, *(_QWORD *)&v18[v20]);

  if (!v25)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v26 = OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_displayType;
  *(_QWORD *)&v18[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_displayType] = v25;
  *(_QWORD *)&v18[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_viewControllerFactory] = a1;
  v27 = a1;
  v28 = objc_msgSend(v27, sel_profile);
  v29 = objc_msgSend(v28, sel_healthStore);

  if (!v29)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v30 = objc_msgSend(v29, sel_profileIdentifier);

  v31 = objc_msgSend(v30, sel_type);
  *(_QWORD *)&v18[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_profileType] = v31;
  if (a3 != 4)
  {
    v18[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_mode] = a3;

    v37 = qword_23141C508[a3];
LABEL_10:
    v38 = *(id *)&v18[v26];
    v39 = objc_msgSend(v27, sel_profile);
    v40 = (objc_class *)type metadata accessor for AtrialFibrillationDataTypeDetailViewController();
    v62.receiver = v18;
    v62.super_class = v40;
    v41 = objc_msgSendSuper2(&v62, sel_initWithDisplayType_profile_mode_, v38, v39, v37);

    v42 = (char *)v41;
    sub_231344B98();
    if (objc_msgSend(*(id *)&v42[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_displayType], sel_allowsManualEntry))
    {
      v43 = sub_231412514();
      v45 = v44;
      if (v43 == sub_231412514() && v45 == v46)
      {
        swift_bridgeObjectRelease_n();
LABEL_15:
        if (qword_25415E610 != -1)
          swift_once();
        sub_231411374();
        v61 = v40;
        v60[0] = v42;
        v48 = v42;
        v49 = (void *)sub_23141468C();
        swift_bridgeObjectRelease();
        v50 = (uint64_t)v61;
        if (v61)
        {
          v51 = sub_2312CEA5C(v60, (uint64_t)v61);
          v52 = *(_QWORD *)(v50 - 8);
          MEMORY[0x24BDAC7A8](v51);
          v54 = (char *)&v60[-1] - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v52 + 16))(v54);
          v55 = sub_231415064();
          (*(void (**)(char *, uint64_t))(v52 + 8))(v54, v50);
          _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v60);
        }
        else
        {
          v55 = 0;
        }
        v56 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD410]), sel_initWithTitle_style_target_action_, v49, 0, v55, sel_showAddDataVC);

        sub_2314130CC();
        v57 = objc_msgSend(v48, sel_navigationItem);
        v58 = v56;
        objc_msgSend(v57, sel_setRightBarButtonItem_, v58);

        v27 = v58;
        goto LABEL_21;
      }
      v47 = sub_231415070();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v47 & 1) != 0)
        goto LABEL_15;
    }
LABEL_21:

    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v63);
    return;
  }
  v32 = objc_msgSend(v27, sel_profile);
  v33 = objc_msgSend(v32, sel_healthStore);

  if (v33)
  {
    v34 = objc_msgSend(v33, sel_profileIdentifier);

    v35 = sub_23141231C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v14, 1, 1, v35);
    v36 = sub_231412508();

    sub_231347974((uint64_t)v14);
    v18[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_mode] = v36;

    v37 = 0;
    goto LABEL_10;
  }
LABEL_27:
  __break(1u);
}

uint64_t sub_231347974(uint64_t a1)
{
  uint64_t v2;

  sub_2312D1E78(0, (unint64_t *)&qword_255ECF270, (void (*)(uint64_t))MEMORY[0x24BE42678]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2313479C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECDD00)
  {
    v0 = sub_231413954();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECDD00);
  }
}

uint64_t sub_231347A24(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  result = MEMORY[0x24BEE4AF8];
  v10 = MEMORY[0x24BEE4AF8];
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    v8 = (_QWORD *)(a1 + 32);
    sub_231412A90();
    do
    {
      sub_23134659C(v8, a3, &v9);
      if (v3)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (v9)
      {
        MEMORY[0x2348DD15C]();
        if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_2314147DC();
        sub_2314147E8();
        sub_2314147B8();
      }
      v8 += 5;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

void sub_231347B40(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, _QWORD))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, MEMORY[0x24BEE0D00]);
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_231347B88(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_2312DF79C(255, a3);
    v4 = sub_231414CB0();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_231347BDC(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t v4;

  sub_231347B88(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_231347C18(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for AtrialFibrillationDataTypeDetailViewController();
    result = MEMORY[0x2348DE248](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_231347C54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_231347B88(0, &qword_255ECC210, (unint64_t *)&qword_255ECE930);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_231347CB0()
{
  char *v0;
  char *v1;
  void *ObjCClassFromMetadata;
  id v3;

  v1 = &v0[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_consumedHealthExperienceStore];
  sub_2312D3C68(0, (unint64_t *)&qword_25415DEC0);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_QWORD *)v1 + 4) = 0;
  v3 = objc_msgSend(ObjCClassFromMetadata, sel_atrialFibrillationEventType);
  if (!v3)
    __break(1u);
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_objectType] = v3;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_favoritesObserver] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_checklistTileDataSource] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_allFeatureStatusCellsFromFeedItems] = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_cancellables] = MEMORY[0x24BEE4B08];

  sub_231414EE4();
  __break(1u);
}

uint64_t sub_231347DAC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  if ((a4 & 1) == 0)
    return sub_2313AB234(a1, a2, a3, a4);
  sub_231415088();
  swift_unknownObjectRetain_n();
  v9 = swift_dynamicCastClass();
  if (!v9)
  {
    sub_2314130CC();
    v9 = MEMORY[0x24BEE4AF8];
  }
  v10 = *(_QWORD *)(v9 + 16);
  swift_release();
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v10 != (a4 >> 1) - a3)
  {
LABEL_11:
    sub_2314130CC();
    return sub_2313AB234(a1, a2, a3, a4);
  }
  result = swift_dynamicCastClass();
  if (!result)
  {
    sub_2314130CC();
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

void sub_231347E88(uint64_t a1, unint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  char *v33;
  uint64_t v34;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v3 = v2;
  swift_getObjectType();
  sub_2313479C0();
  v7 = v6;
  v36 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_checklistTileDataSource;
  if (!*(_QWORD *)&v2[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_checklistTileDataSource])
    goto LABEL_7;
  swift_retain();
  v11 = sub_231412AFC();
  v13 = v12;
  swift_release();
  if (v11 == a1 && v13 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = sub_231415070();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
LABEL_7:
      if (qword_25415BD10 != -1)
        swift_once();
      v16 = sub_231413780();
      sub_2312CE3B8(v16, (uint64_t)qword_254162E78);
      swift_bridgeObjectRetain_n();
      v17 = sub_231413768();
      v18 = sub_231414974();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = swift_slowAlloc();
        v20 = swift_slowAlloc();
        v38 = v20;
        *(_DWORD *)v19 = 136446466;
        v21 = sub_2314151A8();
        v37 = sub_23133180C(v21, v22, &v38);
        sub_231414CBC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v19 + 12) = 2080;
        sub_231412A90();
        v37 = sub_23133180C(a1, a2, &v38);
        sub_231414CBC();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_2312C8000, v17, v18, "[%{public}s] Received notification of unknown data source change from %s", (uint8_t *)v19, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2348DE308](v20, -1, -1);
        MEMORY[0x2348DE308](v19, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      return;
    }
  }
  if (qword_25415BD10 != -1)
    swift_once();
  v23 = sub_231413780();
  sub_2312CE3B8(v23, (uint64_t)qword_254162E78);
  v24 = sub_231413768();
  v25 = sub_23141498C();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc();
    v27 = swift_slowAlloc();
    v38 = v27;
    *(_DWORD *)v26 = 136446210;
    v35[1] = v26 + 4;
    v28 = sub_2314151A8();
    v37 = sub_23133180C(v28, v29, &v38);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v24, v25, "[%{public}s] Received notification of feature status feed items change", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v27, -1, -1);
    MEMORY[0x2348DE308](v26, -1, -1);
  }

  v30 = *(_QWORD *)&v3[v10];
  if (v30)
  {
    swift_retain();
    sub_231412B2C();
    v31 = sub_23141393C();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v9, v7);
    swift_retain_n();
    v32 = sub_2313445E8(v31);
    swift_release();
    swift_bridgeObjectRelease();
    swift_retain();
    v33 = v3;
    v34 = sub_231347A24((uint64_t)v32, v30, v33);
    swift_bridgeObjectRelease();
    swift_release_n();

  }
  else
  {
    v34 = MEMORY[0x24BEE4AF8];
  }
  *(_QWORD *)&v3[OBJC_IVAR____TtC5Heart46AtrialFibrillationDataTypeDetailViewController_allFeatureStatusCellsFromFeedItems] = v34;
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_reloadFeatureStatusSection);
}

uint64_t sub_231348340()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_231348364()
{
  swift_release();
  return swift_deallocObject();
}

void sub_231348388()
{
  uint64_t v0;

  sub_231345C20(*(_QWORD *)(v0 + 16));
}

void sub_231348390()
{
  qword_255ED2CA8 = (uint64_t)&unk_25001EF80;
}

uint64_t sub_2313483A4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  objc_class *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char *v13;
  uint64_t v15;
  char *v16;
  uint64_t v17;

  v1 = OBJC_IVAR____TtC5Heart25AFibBurdenLifeFactorsView____lazy_storage___lifeFactorsViews;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC5Heart25AFibBurdenLifeFactorsView____lazy_storage___lifeFactorsViews])
  {
    v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Heart25AFibBurdenLifeFactorsView____lazy_storage___lifeFactorsViews];
  }
  else
  {
    if (qword_255ECA9F0 != -1)
      swift_once();
    v3 = qword_255ED2CA8;
    v4 = *(_QWORD *)(qword_255ED2CA8 + 16);
    v2 = MEMORY[0x24BEE4AF8];
    if (v4)
    {
      v15 = v1;
      v16 = v0;
      v17 = MEMORY[0x24BEE4AF8];
      v5 = v0;
      sub_231412A90();
      sub_231414EA8();
      v6 = OBJC_IVAR____TtC5Heart25AFibBurdenLifeFactorsView_cacheObject;
      v7 = *(void **)&v5[OBJC_IVAR____TtC5Heart25AFibBurdenLifeFactorsView_healthStore];
      v8 = (objc_class *)type metadata accessor for AFibBurdenLifeFactorView();
      v9 = 0;
      do
      {
        v10 = v9 + 1;
        v11 = *(_QWORD *)&v5[v6];
        v12 = *(_BYTE *)(v3 + v9 + 32);
        objc_allocWithZone(v8);
        sub_231412A90();
        v13 = sub_2313323EC(v12, v11, v7);
        objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
        *(_QWORD *)&v13[OBJC_IVAR____TtC5Heart24AFibBurdenLifeFactorView_delegate + 8] = &off_2500238A8;
        swift_unknownObjectWeakAssign();
        sub_231414E90();
        sub_231414EB4();
        sub_231414EC0();
        sub_231414E9C();
        v9 = v10;
      }
      while (v4 != v10);
      v2 = v17;
      swift_bridgeObjectRelease();

      v1 = v15;
      v0 = v16;
    }
    *(_QWORD *)&v0[v1] = v2;
    sub_231412A90();
    swift_bridgeObjectRelease();
  }
  sub_231412A90();
  return v2;
}

uint64_t sub_231348600(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;

  v2 = v1;
  ObjectType = swift_getObjectType();
  if (qword_25415C170 != -1)
    swift_once();
  v4 = sub_231413780();
  sub_2312CE3B8(v4, (uint64_t)qword_254162F00);
  v5 = sub_231413768();
  v6 = sub_23141498C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v29 = v8;
    v30 = ObjectType;
    *(_DWORD *)v7 = 136446210;
    swift_getMetatypeMetadata();
    v9 = sub_2314146E0();
    v30 = sub_23133180C(v9, v10, &v29);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v5, v6, "[%{public}s] Updating view with new cache object", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v8, -1, -1);
    MEMORY[0x2348DE308](v7, -1, -1);
  }

  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Heart25AFibBurdenLifeFactorsView_cacheObject) = a1;
  sub_231412A90();
  swift_bridgeObjectRelease();
  v11 = sub_2313483A4();
  v12 = v11;
  if (!(v11 >> 62))
  {
    v13 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = sub_231412A90();
    if (v13)
      goto LABEL_7;
    return swift_bridgeObjectRelease_n();
  }
  sub_231412A90();
  result = sub_231414F08();
  v13 = result;
  if (!result)
    return swift_bridgeObjectRelease_n();
LABEL_7:
  if (v13 >= 1)
  {
    v15 = 0;
    do
    {
      if ((v12 & 0xC000000000000001) != 0)
        v16 = (id)MEMORY[0x2348DD81C](v15, v12);
      else
        v16 = *(id *)(v12 + 8 * v15 + 32);
      v17 = v16;
      ++v15;
      sub_231316DD8(a1);
      v18 = sub_231331EF8();
      sub_2313157C0();
      v20 = v19;
      objc_msgSend(v18, sel_setImage_, v19);

      v21 = sub_231331FC0();
      sub_231315BB8();
      v23 = v22;
      v25 = v24;
      v26 = sub_231315C9C();
      sub_23135D3DC(v23, v25, v26, v27);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    while (v13 != v15);
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

void sub_2313488F8()
{
  void *v0;
  void *v1;
  uint64_t v2;
  SEL *v3;
  uint64_t v4;
  void *v5;
  SEL *v6;
  uint64_t v7;
  BOOL v8;
  id v9;
  id v10;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  void *v39;
  uint64_t v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  void *v50;
  id v51;
  id v52;
  id v53;
  id v54;
  void *v55;
  id v56;
  id v57;
  id v58;
  uint64_t v59;
  id v60;
  void *v61;
  id v62;
  id v63;
  void *v64;
  id v65;
  id v66;
  uint64_t v67;
  id v68;
  void *v69;
  id v70;
  id v71;
  id v72;
  uint64_t v73;
  id v74;
  void *v75;
  id v76;
  id v77;
  id v78;
  id v79;
  void *v80;
  id v81;
  id v82;
  id v83;
  void *v84;
  uint64_t v85;
  id v86;
  void *v87;
  id v88;
  id v89;
  id v90;
  void *v91;
  uint64_t v92;
  id v93;
  void *v94;
  id v95;
  id v96;
  id v97;
  id v98;
  void *v99;
  id v100;
  id v101;
  id v102;
  uint64_t v103;
  id v104;
  void *v105;
  id v106;
  id v107;
  void *v108;
  id v109;
  id v110;
  uint64_t v111;
  id v112;
  void *v113;
  id v114;
  id v115;
  id v116;
  uint64_t v117;
  id v118;
  void *v119;
  id v120;
  id v121;
  id v122;
  id v123;
  void *v124;
  id v125;
  id v126;
  id v127;
  void *v128;
  uint64_t v129;
  id v130;
  void *v131;
  id v132;
  id v133;
  id v134;
  void *v135;
  uint64_t v136;
  uint64_t v137;
  id v138;
  void *v139;
  id v140;
  id v141;
  id v142;
  id v143;
  void *v144;
  id v145;
  id v146;
  id v147;
  uint64_t v148;
  id v149;
  void *v150;
  id v151;
  id v152;
  void *v153;
  id v154;
  id v155;
  uint64_t v156;
  id v157;
  void *v158;
  id v159;
  id v160;
  id v161;
  uint64_t v162;
  id v163;
  void *v164;
  id v165;
  id v166;
  id v167;
  id v168;
  void *v169;
  id v170;
  id v171;
  id v172;
  void *v173;
  uint64_t v174;
  id v175;
  void *v176;
  id v177;
  id v178;
  id v179;
  void *v180;
  uint64_t v181;
  id v182;
  void *v183;
  id v184;
  id v185;
  id v186;
  id v187;
  void *v188;
  id v189;
  id v190;
  id v191;
  uint64_t v192;
  id v193;
  void *v194;
  id v195;
  id v196;
  void *v197;
  id v198;
  id v199;
  uint64_t v200;
  id v201;
  void *v202;
  id v203;
  id v204;
  id v205;
  uint64_t v206;
  id v207;
  void *v208;
  id v209;
  id v210;
  id v211;
  uint64_t v212;
  id v213;
  void *v214;
  void *v215;
  id v216;
  id v217;
  id v218;
  id v219;
  id v220;
  uint64_t v221;
  uint64_t v222;

  if (qword_255ECA9F0 != -1)
    swift_once();
  if (*(_QWORD *)(qword_255ED2CA8 + 16) == 5)
  {
    v219 = v1;
    v221 = MEMORY[0x24BEE4AF8];
    v7 = 4;
    sub_231414EA8();
    v8 = 0;
    v4 = 1;
    v3 = (SEL *)&unk_250035000;
    v5 = &unk_250035000;
    v6 = (SEL *)0x24BEBD000;
    while (!v8)
    {
      v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB00]), sel_init);
      objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
      v10 = objc_msgSend((id)objc_opt_self(), sel_separatorColor);
      objc_msgSend(v9, sel_setBackgroundColor_, v10);

      sub_231414E90();
      sub_231414EB4();
      sub_231414EC0();
      sub_231414E9C();
      v8 = v4 == 4;
      if (v4 == 4)
      {
        v4 = 0;
      }
      else if (__OFADD__(v4++, 1))
      {
        __break(1u);
LABEL_12:
        v0 = v219;
        v2 = v221;
        v12 = sub_2313483A4();
        if (v12 >> 62)
          goto LABEL_151;
        sub_231412A90();
        sub_23141507C();
        sub_2312D3C68(0, (unint64_t *)&qword_255ECDC18);
        v13 = v12;
        goto LABEL_14;
      }
      if (!--v7)
        goto LABEL_12;
    }
    goto LABEL_205;
  }
  __break(1u);
LABEL_151:
  sub_2312D3C68(0, (unint64_t *)&qword_255ECDC18);
  v13 = sub_231414EFC();
LABEL_14:
  swift_bridgeObjectRelease();
  v222 = v13;
  v14 = sub_231412A90();
  sub_2313EBE9C(v14);
  sub_231414BA8();
  swift_bridgeObjectRelease();
  sub_2312D3AD4();
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_23141C530;
  v16 = sub_2313483A4();
  v17 = v16;
  if ((v16 & 0xC000000000000001) != 0)
  {
    v18 = (id)MEMORY[0x2348DD81C](0, v16);
  }
  else
  {
    if (!*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_154;
    }
    v18 = *(id *)(v16 + 32);
  }
  v19 = v18;
  swift_bridgeObjectRelease();
  v20 = objc_msgSend(v19, sel_topAnchor);

  v21 = objc_msgSend(v0, sel_topAnchor);
  v4 = (uint64_t)&unk_250035000;
  v22 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v21);

  *(_QWORD *)(v15 + 32) = v22;
  v23 = sub_2313483A4();
  v17 = v23;
  if ((v23 & 0xC000000000000001) != 0)
  {
LABEL_154:
    v24 = (id)MEMORY[0x2348DD81C](0, v17);
    goto LABEL_20;
  }
  if (!*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_156;
  }
  v24 = *(id *)(v23 + 32);
LABEL_20:
  v25 = v24;
  swift_bridgeObjectRelease();
  v6 = (SEL *)&unk_250035000;
  v26 = objc_msgSend(v25, sel_leadingAnchor);

  v27 = objc_msgSend(v0, sel_leadingAnchor);
  v28 = objc_msgSend(v26, *(SEL *)(v4 + 1760), v27);

  *(_QWORD *)(v15 + 40) = v28;
  v29 = sub_2313483A4();
  v17 = v29;
  if ((v29 & 0xC000000000000001) != 0)
  {
LABEL_156:
    v30 = (id)MEMORY[0x2348DD81C](0, v17);
    goto LABEL_23;
  }
  if (!*(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_158;
  }
  v30 = *(id *)(v29 + 32);
LABEL_23:
  v31 = v30;
  swift_bridgeObjectRelease();
  v32 = objc_msgSend(v31, sel_trailingAnchor);

  v33 = objc_msgSend(v0, sel_trailingAnchor);
  v28 = objc_msgSend(v32, *(SEL *)(v4 + 1760), v33);

  *(_QWORD *)(v15 + 48) = v28;
  v5 = (void *)(v2 & 0xC000000000000001);
  if ((v2 & 0xC000000000000001) != 0)
  {
LABEL_158:
    v34 = (id)MEMORY[0x2348DD81C](0, v2);
    goto LABEL_26;
  }
  if (!*(_QWORD *)(v2 + 16))
  {
    __break(1u);
LABEL_160:
    v41 = (id)MEMORY[0x2348DD81C](0, v32);
    goto LABEL_32;
  }
  v34 = *(id *)(v2 + 32);
LABEL_26:
  v35 = v34;
  v36 = objc_msgSend(v34, sel_heightAnchor, v219, v222);

  HKUIOnePixel();
  v37 = objc_msgSend(v36, sel_constraintEqualToConstant_);

  *(_QWORD *)(v15 + 56) = v37;
  if (v5)
    v38 = (id)MEMORY[0x2348DD81C](0, v2);
  else
    v38 = *(id *)(v2 + 32);
  v39 = v38;
  v33 = objc_msgSend(v38, sel_topAnchor);

  v40 = sub_2313483A4();
  v32 = (id)v40;
  if ((v40 & 0xC000000000000001) != 0)
    goto LABEL_160;
  if (!*(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_162:
    v49 = (id)MEMORY[0x2348DD81C](0, v28);
    goto LABEL_38;
  }
  v41 = *(id *)(v40 + 32);
LABEL_32:
  v42 = v41;
  swift_bridgeObjectRelease();
  v43 = objc_msgSend(v42, sel_bottomAnchor);

  v44 = objc_msgSend(v33, *(SEL *)(v4 + 1760), v43);
  *(_QWORD *)(v15 + 64) = v44;
  if (v5)
    v45 = (id)MEMORY[0x2348DD81C](0, v2);
  else
    v45 = *(id *)(v2 + 32);
  v46 = v45;
  v33 = objc_msgSend(v45, v6[237], v219);

  v47 = (uint64_t)v0;
  v48 = sub_2313483A4();
  v28 = (id)v48;
  if ((v48 & 0xC000000000000001) != 0)
    goto LABEL_162;
  if (!*(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_164:
    v60 = (id)MEMORY[0x2348DD81C](1, v47);
    goto LABEL_44;
  }
  v49 = *(id *)(v48 + 32);
LABEL_38:
  v50 = v49;
  swift_bridgeObjectRelease();
  v51 = sub_231331FC0();
  v52 = objc_msgSend(v51, v6[237]);

  v53 = objc_msgSend(v33, *(SEL *)(v4 + 1760), v52);
  *(_QWORD *)(v15 + 72) = v53;
  if (v5)
    v54 = (id)MEMORY[0x2348DD81C](0, v2);
  else
    v54 = *(id *)(v2 + 32);
  v55 = v54;
  v3 = (SEL *)&unk_250035000;
  v56 = objc_msgSend(v54, sel_trailingAnchor);

  v57 = objc_msgSend(v0, sel_trailingAnchor);
  v58 = objc_msgSend(v56, *(SEL *)(v4 + 1760), v57);

  *(_QWORD *)(v15 + 80) = v58;
  v59 = sub_2313483A4();
  v47 = v59;
  if ((v59 & 0xC000000000000001) != 0)
    goto LABEL_164;
  if (*(_QWORD *)((v59 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
  {
    __break(1u);
LABEL_166:
    v68 = (id)MEMORY[0x2348DD81C](1, v47);
    goto LABEL_50;
  }
  v60 = *(id *)(v59 + 40);
LABEL_44:
  v61 = v60;
  swift_bridgeObjectRelease();
  v62 = objc_msgSend(v61, sel_topAnchor);

  if (v5)
    v63 = (id)MEMORY[0x2348DD81C](0, v2);
  else
    v63 = *(id *)(v2 + 32);
  v64 = v63;
  v65 = objc_msgSend(v63, sel_bottomAnchor);

  v66 = objc_msgSend(v62, *(SEL *)(v4 + 1760), v65);
  *(_QWORD *)(v15 + 88) = v66;
  v67 = sub_2313483A4();
  v47 = v67;
  if ((v67 & 0xC000000000000001) != 0)
    goto LABEL_166;
  if (*(_QWORD *)((v67 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
  {
    __break(1u);
    goto LABEL_168;
  }
  v68 = *(id *)(v67 + 40);
LABEL_50:
  v69 = v68;
  swift_bridgeObjectRelease();
  v70 = objc_msgSend(v69, v6[237]);

  v71 = objc_msgSend(v0, v6[237]);
  v72 = objc_msgSend(v70, *(SEL *)(v4 + 1760), v71);

  *(_QWORD *)(v15 + 96) = v72;
  v73 = sub_2313483A4();
  v47 = v73;
  if ((v73 & 0xC000000000000001) != 0)
  {
LABEL_168:
    v74 = (id)MEMORY[0x2348DD81C](1, v47);
    goto LABEL_53;
  }
  if (*(_QWORD *)((v73 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
  {
    __break(1u);
LABEL_170:
    v86 = (id)MEMORY[0x2348DD81C](1, v47);
    goto LABEL_63;
  }
  v74 = *(id *)(v73 + 40);
LABEL_53:
  v75 = v74;
  swift_bridgeObjectRelease();
  v76 = objc_msgSend(v75, v3[239]);

  v77 = objc_msgSend(v0, v3[239]);
  v78 = objc_msgSend(v76, *(SEL *)(v4 + 1760), v77);

  *(_QWORD *)(v15 + 104) = v78;
  if (v5)
  {
    v79 = (id)MEMORY[0x2348DD81C](1, v2);
  }
  else
  {
    if (*(_QWORD *)(v2 + 16) < 2uLL)
    {
LABEL_202:
      __break(1u);
      goto LABEL_203;
    }
    v79 = *(id *)(v2 + 40);
  }
  v80 = v79;
  v81 = objc_msgSend(v79, sel_heightAnchor);

  HKUIOnePixel();
  v82 = objc_msgSend(v81, sel_constraintEqualToConstant_);

  *(_QWORD *)(v15 + 112) = v82;
  if (v5)
    v83 = (id)MEMORY[0x2348DD81C](1, v2);
  else
    v83 = *(id *)(v2 + 40);
  v84 = v83;
  v71 = objc_msgSend(v83, sel_topAnchor);

  v85 = sub_2313483A4();
  v47 = v85;
  if ((v85 & 0xC000000000000001) != 0)
    goto LABEL_170;
  if (*(_QWORD *)((v85 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
  {
    __break(1u);
LABEL_172:
    v93 = (id)MEMORY[0x2348DD81C](1, v47);
    goto LABEL_69;
  }
  v86 = *(id *)(v85 + 40);
LABEL_63:
  v87 = v86;
  swift_bridgeObjectRelease();
  v88 = objc_msgSend(v87, sel_bottomAnchor);

  v89 = objc_msgSend(v71, *(SEL *)(v4 + 1760), v88);
  *(_QWORD *)(v15 + 120) = v89;
  if (v5)
    v90 = (id)MEMORY[0x2348DD81C](1, v2);
  else
    v90 = *(id *)(v2 + 40);
  v91 = v90;
  v71 = objc_msgSend(v90, v6[237]);

  v92 = sub_2313483A4();
  v47 = v92;
  if ((v92 & 0xC000000000000001) != 0)
    goto LABEL_172;
  if (*(_QWORD *)((v92 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
  {
    __break(1u);
LABEL_174:
    v104 = (id)MEMORY[0x2348DD81C](2, v47);
    goto LABEL_75;
  }
  v93 = *(id *)(v92 + 40);
LABEL_69:
  v94 = v93;
  swift_bridgeObjectRelease();
  v95 = sub_231331FC0();
  v96 = objc_msgSend(v95, v6[237]);

  v97 = objc_msgSend(v71, *(SEL *)(v4 + 1760), v96);
  *(_QWORD *)(v15 + 128) = v97;
  if (v5)
    v98 = (id)MEMORY[0x2348DD81C](1, v2);
  else
    v98 = *(id *)(v2 + 40);
  v99 = v98;
  v3 = (SEL *)&unk_250035000;
  v100 = objc_msgSend(v98, sel_trailingAnchor);

  v101 = objc_msgSend(v0, sel_trailingAnchor);
  v102 = objc_msgSend(v100, *(SEL *)(v4 + 1760), v101);

  *(_QWORD *)(v15 + 136) = v102;
  v103 = sub_2313483A4();
  v47 = v103;
  if ((v103 & 0xC000000000000001) != 0)
    goto LABEL_174;
  if (*(_QWORD *)((v103 & 0xFFFFFFFFFFFFF8) + 0x10) < 3uLL)
  {
    __break(1u);
LABEL_176:
    v112 = (id)MEMORY[0x2348DD81C](2, v47);
    goto LABEL_81;
  }
  v104 = *(id *)(v103 + 48);
LABEL_75:
  v105 = v104;
  swift_bridgeObjectRelease();
  v106 = objc_msgSend(v105, sel_topAnchor);

  if (v5)
    v107 = (id)MEMORY[0x2348DD81C](1, v2);
  else
    v107 = *(id *)(v2 + 40);
  v108 = v107;
  v109 = objc_msgSend(v107, sel_bottomAnchor);

  v110 = objc_msgSend(v106, *(SEL *)(v4 + 1760), v109);
  *(_QWORD *)(v15 + 144) = v110;
  v111 = sub_2313483A4();
  v47 = v111;
  if ((v111 & 0xC000000000000001) != 0)
    goto LABEL_176;
  if (*(_QWORD *)((v111 & 0xFFFFFFFFFFFFF8) + 0x10) < 3uLL)
  {
    __break(1u);
    goto LABEL_178;
  }
  v112 = *(id *)(v111 + 48);
LABEL_81:
  v113 = v112;
  swift_bridgeObjectRelease();
  v114 = objc_msgSend(v113, v6[237]);

  v115 = objc_msgSend(v0, v6[237]);
  v116 = objc_msgSend(v114, *(SEL *)(v4 + 1760), v115);

  *(_QWORD *)(v15 + 152) = v116;
  v117 = sub_2313483A4();
  v47 = v117;
  if ((v117 & 0xC000000000000001) != 0)
  {
LABEL_178:
    v118 = (id)MEMORY[0x2348DD81C](2, v47);
    goto LABEL_84;
  }
  if (*(_QWORD *)((v117 & 0xFFFFFFFFFFFFF8) + 0x10) < 3uLL)
  {
    __break(1u);
LABEL_180:
    v130 = (id)MEMORY[0x2348DD81C](2, v47);
    goto LABEL_94;
  }
  v118 = *(id *)(v117 + 48);
LABEL_84:
  v119 = v118;
  swift_bridgeObjectRelease();
  v120 = objc_msgSend(v119, v3[239]);

  v121 = objc_msgSend(v0, v3[239]);
  v122 = objc_msgSend(v120, *(SEL *)(v4 + 1760), v121);

  *(_QWORD *)(v15 + 160) = v122;
  if (v5)
  {
    v123 = (id)MEMORY[0x2348DD81C](2, v2);
  }
  else
  {
    if (*(_QWORD *)(v2 + 16) < 3uLL)
    {
LABEL_203:
      __break(1u);
      goto LABEL_204;
    }
    v123 = *(id *)(v2 + 48);
  }
  v124 = v123;
  v125 = objc_msgSend(v123, sel_heightAnchor);

  HKUIOnePixel();
  v126 = objc_msgSend(v125, sel_constraintEqualToConstant_);

  *(_QWORD *)(v15 + 168) = v126;
  if (v5)
    v127 = (id)MEMORY[0x2348DD81C](2, v2);
  else
    v127 = *(id *)(v2 + 48);
  v128 = v127;
  v115 = objc_msgSend(v127, sel_topAnchor);

  v129 = sub_2313483A4();
  v47 = v129;
  if ((v129 & 0xC000000000000001) != 0)
    goto LABEL_180;
  if (*(_QWORD *)((v129 & 0xFFFFFFFFFFFFF8) + 0x10) < 3uLL)
  {
    __break(1u);
LABEL_182:
    v138 = (id)MEMORY[0x2348DD81C](2, v122);
    goto LABEL_100;
  }
  v130 = *(id *)(v129 + 48);
LABEL_94:
  v131 = v130;
  swift_bridgeObjectRelease();
  v132 = objc_msgSend(v131, sel_bottomAnchor);

  v133 = objc_msgSend(v115, *(SEL *)(v4 + 1760), v132);
  *(_QWORD *)(v15 + 176) = v133;
  if (v5)
    v134 = (id)MEMORY[0x2348DD81C](2, v2);
  else
    v134 = *(id *)(v2 + 48);
  v135 = v134;
  v115 = objc_msgSend(v134, v6[237]);

  v136 = (uint64_t)v0;
  v137 = sub_2313483A4();
  v122 = (id)v137;
  if ((v137 & 0xC000000000000001) != 0)
    goto LABEL_182;
  if (*(_QWORD *)((v137 & 0xFFFFFFFFFFFFF8) + 0x10) < 3uLL)
  {
    __break(1u);
LABEL_184:
    v149 = (id)MEMORY[0x2348DD81C](3, v136);
    goto LABEL_106;
  }
  v138 = *(id *)(v137 + 48);
LABEL_100:
  v139 = v138;
  swift_bridgeObjectRelease();
  v140 = sub_231331FC0();
  v141 = objc_msgSend(v140, v6[237]);

  v142 = objc_msgSend(v115, *(SEL *)(v4 + 1760), v141);
  *(_QWORD *)(v15 + 184) = v142;
  if (v5)
    v143 = (id)MEMORY[0x2348DD81C](2, v2);
  else
    v143 = *(id *)(v2 + 48);
  v144 = v143;
  v3 = (SEL *)&unk_250035000;
  v145 = objc_msgSend(v143, sel_trailingAnchor);

  v146 = objc_msgSend(v0, sel_trailingAnchor);
  v147 = objc_msgSend(v145, *(SEL *)(v4 + 1760), v146);

  *(_QWORD *)(v15 + 192) = v147;
  v148 = sub_2313483A4();
  v136 = v148;
  if ((v148 & 0xC000000000000001) != 0)
    goto LABEL_184;
  if (*(_QWORD *)((v148 & 0xFFFFFFFFFFFFF8) + 0x10) < 4uLL)
  {
    __break(1u);
LABEL_186:
    v157 = (id)MEMORY[0x2348DD81C](3, v136);
    goto LABEL_112;
  }
  v149 = *(id *)(v148 + 56);
LABEL_106:
  v150 = v149;
  swift_bridgeObjectRelease();
  v151 = objc_msgSend(v150, sel_topAnchor);

  if (v5)
    v152 = (id)MEMORY[0x2348DD81C](2, v2);
  else
    v152 = *(id *)(v2 + 48);
  v153 = v152;
  v154 = objc_msgSend(v152, sel_bottomAnchor);

  v155 = objc_msgSend(v151, *(SEL *)(v4 + 1760), v154);
  *(_QWORD *)(v15 + 200) = v155;
  v156 = sub_2313483A4();
  v136 = v156;
  if ((v156 & 0xC000000000000001) != 0)
    goto LABEL_186;
  if (*(_QWORD *)((v156 & 0xFFFFFFFFFFFFF8) + 0x10) < 4uLL)
  {
    __break(1u);
    goto LABEL_188;
  }
  v157 = *(id *)(v156 + 56);
LABEL_112:
  v158 = v157;
  swift_bridgeObjectRelease();
  v159 = objc_msgSend(v158, v6[237]);

  v160 = objc_msgSend(v0, v6[237]);
  v161 = objc_msgSend(v159, *(SEL *)(v4 + 1760), v160);

  *(_QWORD *)(v15 + 208) = v161;
  v162 = sub_2313483A4();
  v136 = v162;
  if ((v162 & 0xC000000000000001) != 0)
  {
LABEL_188:
    v163 = (id)MEMORY[0x2348DD81C](3, v136);
    goto LABEL_115;
  }
  if (*(_QWORD *)((v162 & 0xFFFFFFFFFFFFF8) + 0x10) < 4uLL)
  {
    __break(1u);
    goto LABEL_190;
  }
  v163 = *(id *)(v162 + 56);
LABEL_115:
  v164 = v163;
  swift_bridgeObjectRelease();
  v165 = objc_msgSend(v164, v3[239]);

  v166 = objc_msgSend(v0, v3[239]);
  v167 = objc_msgSend(v165, *(SEL *)(v4 + 1760), v166);

  *(_QWORD *)(v15 + 216) = v167;
  if (v5)
  {
    v168 = (id)MEMORY[0x2348DD81C](3, v2);
    goto LABEL_119;
  }
  if (*(_QWORD *)(v2 + 16) >= 4uLL)
  {
    v168 = *(id *)(v2 + 56);
LABEL_119:
    v169 = v168;
    v170 = objc_msgSend(v168, sel_heightAnchor);

    HKUIOnePixel();
    v171 = objc_msgSend(v170, sel_constraintEqualToConstant_);

    *(_QWORD *)(v15 + 224) = v171;
    if (v5)
      v172 = (id)MEMORY[0x2348DD81C](3, v2);
    else
      v172 = *(id *)(v2 + 56);
    v173 = v172;
    v160 = objc_msgSend(v172, sel_topAnchor);

    v174 = sub_2313483A4();
    v136 = v174;
    if ((v174 & 0xC000000000000001) == 0)
    {
      if (*(_QWORD *)((v174 & 0xFFFFFFFFFFFFF8) + 0x10) < 4uLL)
      {
        __break(1u);
        goto LABEL_192;
      }
      v175 = *(id *)(v174 + 56);
LABEL_125:
      v176 = v175;
      swift_bridgeObjectRelease();
      v177 = objc_msgSend(v176, sel_bottomAnchor);

      v178 = objc_msgSend(v160, *(SEL *)(v4 + 1760), v177);
      *(_QWORD *)(v15 + 232) = v178;
      if (v5)
        v179 = (id)MEMORY[0x2348DD81C](3, v2);
      else
        v179 = *(id *)(v2 + 56);
      v180 = v179;
      v160 = objc_msgSend(v179, v6[237]);

      v181 = sub_2313483A4();
      v136 = v181;
      if ((v181 & 0xC000000000000001) == 0)
      {
        if (*(_QWORD *)((v181 & 0xFFFFFFFFFFFFF8) + 0x10) < 4uLL)
        {
          __break(1u);
          goto LABEL_194;
        }
        v182 = *(id *)(v181 + 56);
LABEL_131:
        v183 = v182;
        swift_bridgeObjectRelease();
        v184 = sub_231331FC0();
        v185 = objc_msgSend(v184, v6[237]);

        v186 = objc_msgSend(v160, *(SEL *)(v4 + 1760), v185);
        *(_QWORD *)(v15 + 240) = v186;
        if (v5)
          v187 = (id)MEMORY[0x2348DD81C](3, v2);
        else
          v187 = *(id *)(v2 + 56);
        v188 = v187;
        v3 = (SEL *)&unk_250035000;
        v189 = objc_msgSend(v187, sel_trailingAnchor);

        v190 = objc_msgSend(v0, sel_trailingAnchor);
        v191 = objc_msgSend(v189, *(SEL *)(v4 + 1760), v190);

        *(_QWORD *)(v15 + 248) = v191;
        v192 = sub_2313483A4();
        v136 = v192;
        if ((v192 & 0xC000000000000001) == 0)
        {
          if (*(_QWORD *)((v192 & 0xFFFFFFFFFFFFF8) + 0x10) < 5uLL)
          {
            __break(1u);
            goto LABEL_196;
          }
          v193 = *(id *)(v192 + 64);
LABEL_137:
          v194 = v193;
          swift_bridgeObjectRelease();
          v195 = objc_msgSend(v194, sel_topAnchor);

          if (v5)
            v196 = (id)MEMORY[0x2348DD81C](3, v2);
          else
            v196 = *(id *)(v2 + 56);
          v197 = v196;
          swift_release();
          v198 = objc_msgSend(v197, sel_bottomAnchor);

          v199 = objc_msgSend(v195, *(SEL *)(v4 + 1760), v198);
          *(_QWORD *)(v15 + 256) = v199;
          v200 = sub_2313483A4();
          v136 = v200;
          if ((v200 & 0xC000000000000001) == 0)
          {
            if (*(_QWORD *)((v200 & 0xFFFFFFFFFFFFF8) + 0x10) < 5uLL)
            {
              __break(1u);
              goto LABEL_198;
            }
            v201 = *(id *)(v200 + 64);
LABEL_143:
            v202 = v201;
            swift_bridgeObjectRelease();
            v203 = objc_msgSend(v202, sel_bottomAnchor);

            v204 = objc_msgSend(v0, sel_bottomAnchor);
            v205 = objc_msgSend(v203, *(SEL *)(v4 + 1760), v204);

            *(_QWORD *)(v15 + 264) = v205;
            v206 = sub_2313483A4();
            v136 = v206;
            if ((v206 & 0xC000000000000001) == 0)
            {
              if (*(_QWORD *)((v206 & 0xFFFFFFFFFFFFF8) + 0x10) < 5uLL)
              {
                __break(1u);
                goto LABEL_200;
              }
              v207 = *(id *)(v206 + 64);
LABEL_146:
              v208 = v207;
              swift_bridgeObjectRelease();
              v209 = objc_msgSend(v208, v6[237]);

              v210 = objc_msgSend(v0, v6[237]);
              v211 = objc_msgSend(v209, *(SEL *)(v4 + 1760), v210);

              *(_QWORD *)(v15 + 272) = v211;
              v212 = sub_2313483A4();
              v136 = v212;
              if ((v212 & 0xC000000000000001) == 0)
              {
                if (*(_QWORD *)((v212 & 0xFFFFFFFFFFFFF8) + 0x10) >= 5uLL)
                {
                  v213 = *(id *)(v212 + 64);
LABEL_149:
                  v214 = v213;
                  swift_bridgeObjectRelease();
                  v215 = (void *)objc_opt_self();
                  v216 = objc_msgSend(v214, v3[239]);

                  v217 = objc_msgSend(v0, v3[239]);
                  v218 = objc_msgSend(v216, *(SEL *)(v4 + 1760), v217);

                  *(_QWORD *)(v15 + 280) = v218;
                  sub_2314147B8();
                  sub_2312D3C68(0, (unint64_t *)&qword_255ED2440);
                  v220 = (id)sub_231414788();
                  swift_bridgeObjectRelease();
                  objc_msgSend(v215, sel_activateConstraints_, v220);

                  return;
                }
                __break(1u);
                goto LABEL_202;
              }
LABEL_200:
              v213 = (id)MEMORY[0x2348DD81C](4, v136);
              goto LABEL_149;
            }
LABEL_198:
            v207 = (id)MEMORY[0x2348DD81C](4, v136);
            goto LABEL_146;
          }
LABEL_196:
          v201 = (id)MEMORY[0x2348DD81C](4, v136);
          goto LABEL_143;
        }
LABEL_194:
        v193 = (id)MEMORY[0x2348DD81C](4, v136);
        goto LABEL_137;
      }
LABEL_192:
      v182 = (id)MEMORY[0x2348DD81C](3, v136);
      goto LABEL_131;
    }
LABEL_190:
    v175 = (id)MEMORY[0x2348DD81C](3, v136);
    goto LABEL_125;
  }
LABEL_204:
  __break(1u);
LABEL_205:
  __break(1u);
}

id sub_23134A144()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AFibBurdenLifeFactorsView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AFibBurdenLifeFactorsView()
{
  return objc_opt_self();
}

uint64_t sub_23134A1EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  void *v23;
  char *v24;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t aBlock[6];

  v3 = v2;
  v30 = a2;
  v5 = sub_231414500();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_231414524();
  v32 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v31 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255ECAAA8 != -1)
    swift_once();
  v11 = sub_231413780();
  sub_2312CE3B8(v11, (uint64_t)qword_255ED2F00);
  swift_retain();
  v12 = sub_231413768();
  v13 = sub_23141498C();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v26 = swift_slowAlloc();
    aBlock[0] = v26;
    *(_DWORD *)v14 = 136315394;
    v29 = v6;
    v33 = sub_23133180C(0xD000000000000020, 0x800000023141C5B0, aBlock);
    v28 = v9;
    sub_231414CBC();
    *(_WORD *)(v14 + 12) = 2080;
    v15 = a1;
    v27 = v8;
    v16 = v5;
    v17 = *(_QWORD *)(v3 + 16);
    v18 = *(_QWORD *)(v3 + 24);
    sub_231412A90();
    v19 = v17;
    a1 = v15;
    v33 = sub_23133180C(v19, v18, aBlock);
    v9 = v28;
    v6 = v29;
    sub_231414CBC();
    swift_release();
    v5 = v16;
    v8 = v27;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v12, v13, "[%s] Failing test with name %s", (uint8_t *)v14, 0x16u);
    v20 = v26;
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v20, -1, -1);
    MEMORY[0x2348DE308](v14, -1, -1);

  }
  else
  {

    swift_release();
  }
  sub_2312D3C68(0, (unint64_t *)&qword_25415DF00);
  v21 = (void *)sub_231414A94();
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = v3;
  v22[3] = a1;
  v22[4] = v30;
  aBlock[4] = (uint64_t)sub_231350EE8;
  aBlock[5] = (uint64_t)v22;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_23130DCCC;
  aBlock[3] = (uint64_t)&unk_2500239C0;
  v23 = _Block_copy(aBlock);
  swift_retain();
  sub_231412A90();
  swift_release();
  v24 = v31;
  sub_231414518();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_231350E14();
  sub_2312D6DD8(0, (unint64_t *)&qword_25415DE70, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_231350E5C();
  sub_231414D1C();
  MEMORY[0x2348DD48C](0, v24, v8, v23);
  _Block_release(v23);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v24, v9);
}

uint64_t sub_23134A5C8(const char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  char *v28;
  uint64_t v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t aBlock[6];

  v7 = v3;
  v8 = sub_231414500();
  v37 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_231414524();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v38 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255ECAAA8 != -1)
    swift_once();
  v14 = sub_231413780();
  sub_2312CE3B8(v14, (uint64_t)qword_255ED2F00);
  swift_retain();
  v15 = sub_231413768();
  v16 = sub_23141498C();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v34 = v12;
    v18 = v17;
    v32 = swift_slowAlloc();
    aBlock[0] = v32;
    *(_DWORD *)v18 = 136315394;
    v36 = v10;
    v39 = sub_23133180C(0xD000000000000020, 0x800000023141C5B0, aBlock);
    v35 = v11;
    v33 = v8;
    sub_231414CBC();
    *(_WORD *)(v18 + 12) = 2080;
    v19 = a3;
    v31 = a1;
    v20 = a2;
    v21 = *(_QWORD *)(v7 + 16);
    v22 = *(_QWORD *)(v7 + 24);
    sub_231412A90();
    v23 = v21;
    a3 = v19;
    v39 = sub_23133180C(v23, v22, aBlock);
    v8 = v33;
    v11 = v35;
    v10 = v36;
    sub_231414CBC();
    swift_release();
    a2 = v20;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v15, v16, v31, (uint8_t *)v18, 0x16u);
    v24 = v32;
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v24, -1, -1);
    v25 = v18;
    v12 = v34;
    MEMORY[0x2348DE308](v25, -1, -1);

  }
  else
  {

    swift_release();
  }
  sub_2312D3C68(0, (unint64_t *)&qword_25415DF00);
  v26 = (void *)sub_231414A94();
  aBlock[4] = a2;
  aBlock[5] = v7;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_23130DCCC;
  aBlock[3] = a3;
  v27 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v28 = v38;
  sub_231414518();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_231350E14();
  sub_2312D6DD8(0, (unint64_t *)&qword_25415DE70, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_231350E5C();
  sub_231414D1C();
  MEMORY[0x2348DD48C](0, v28, v10, v27);
  _Block_release(v27);

  (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v28, v11);
}

uint64_t sub_23134A978(uint64_t a1, char a2, void *a3)
{
  _QWORD *v4;
  id v5;

  if (a3)
  {
    sub_2312D3C14();
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    **(_BYTE **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_23134AA00(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  unint64_t v15;
  char v16;
  char v17;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _BYTE v22[40];
  __int128 v23;
  __int128 v24;

  v5 = v4;
  v10 = sub_2314136E4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  *(_QWORD *)(v5 + 32) = a3;
  v14 = a3;
  sub_2314136D8();
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v5 + OBJC_IVAR____TtC5Heart32AFibBurdenPDFExportPPTTestRunner_signposter, v13, v10);
  v20 = 0xD000000000000029;
  v21 = 0x800000023142B9E0;
  sub_231414DD0();
  if (*(_QWORD *)(a4 + 16) && (v15 = sub_231338864((uint64_t)v22), (v16 & 1) != 0))
  {
    sub_2313046A8(*(_QWORD *)(a4 + 56) + 32 * v15, (uint64_t)&v23);
  }
  else
  {
    v23 = 0u;
    v24 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_231339154((uint64_t)v22);
  if (*((_QWORD *)&v24 + 1))
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      if (v20 == 5457241 && v21 == 0xE300000000000000)
      {
        swift_bridgeObjectRelease();
        v17 = 1;
      }
      else
      {
        v17 = sub_231415070();
        swift_bridgeObjectRelease();
      }

      *(_BYTE *)(v5 + 40) = v17 & 1;
    }
    else
    {

      *(_BYTE *)(v5 + 40) = 0;
    }
  }
  else
  {

    sub_2313045B8((uint64_t)&v23);
    *(_BYTE *)(v5 + 40) = 0;
  }
  return v5;
}

uint64_t sub_23134AC0C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_231411764();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = swift_task_alloc();
  v4 = sub_23141177C();
  v2[7] = v4;
  v2[8] = *(_QWORD *)(v4 - 8);
  v2[9] = swift_task_alloc();
  sub_2312D6DD8(0, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v2[10] = swift_task_alloc();
  v5 = sub_231411248();
  v2[11] = v5;
  v2[12] = *(_QWORD *)(v5 - 8);
  v2[13] = swift_task_alloc();
  v6 = sub_231411608();
  v2[14] = v6;
  v2[15] = *(_QWORD *)(v6 - 8);
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23134AD2C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  _QWORD *v10;
  uint64_t v11;

  v1 = v0[15];
  v11 = v0[14];
  v3 = v0[9];
  v2 = v0[10];
  v4 = v0[7];
  v5 = v0[8];
  v6 = v0[5];
  v7 = v0[6];
  v8 = v0[4];
  sub_2314115FC();
  sub_23141174C();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v7, *MEMORY[0x24BDCF1E8], v8);
  sub_231411728();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v2, 1, v11);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[15] + 16))(v0[16], v0[17], v0[14]);
    sub_231411218();
    v10 = (_QWORD *)swift_task_alloc();
    v0[18] = (uint64_t)v10;
    *v10 = v0;
    v10[1] = sub_23134AE6C;
    return sub_23134BB30(v0[13], v0[2]);
  }
  return result;
}

uint64_t sub_23134AE6C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v1;
  *(_QWORD *)(v2 + 152) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 160) = v3;
    *v3 = v2;
    v3[1] = sub_23134AF08;
    v4 = *(_QWORD *)(v2 + 104);
    v5 = **(_QWORD **)(v2 + 24);
    v3[4] = *(_QWORD *)(v2 + 16);
    v3[5] = v5;
    v3[3] = v4;
  }
  return swift_task_switch();
}

uint64_t sub_23134AF08()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v1;
  *(_QWORD *)(v2 + 168) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 176) = v3;
    *v3 = v2;
    v3[1] = sub_23134AFA4;
    v4 = *(_QWORD *)(v2 + 104);
    v5 = **(_QWORD **)(v2 + 24);
    v3[4] = *(_QWORD *)(v2 + 16);
    v3[5] = v5;
    v3[3] = v4;
  }
  return swift_task_switch();
}

uint64_t sub_23134AFA4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v1;
  *(_QWORD *)(v2 + 184) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 192) = v3;
    *v3 = v2;
    v3[1] = sub_23134B040;
    v4 = *(_QWORD *)(v2 + 104);
    v5 = **(_QWORD **)(v2 + 24);
    v3[4] = *(_QWORD *)(v2 + 16);
    v3[5] = v5;
    v3[3] = v4;
  }
  return swift_task_switch();
}

uint64_t sub_23134B040()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v1;
  *(_QWORD *)(v2 + 200) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 208) = v3;
    *v3 = v2;
    v3[1] = sub_23134B0DC;
    v4 = *(_QWORD *)(v2 + 104);
    v5 = **(_QWORD **)(v2 + 24);
    v3[4] = *(_QWORD *)(v2 + 16);
    v3[5] = v5;
    v3[3] = v4;
  }
  return swift_task_switch();
}

uint64_t sub_23134B0DC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v1;
  *(_QWORD *)(v2 + 216) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 224) = v3;
    *v3 = v2;
    v3[1] = sub_23134B178;
    v4 = *(_QWORD *)(v2 + 104);
    v5 = **(_QWORD **)(v2 + 24);
    v3[4] = *(_QWORD *)(v2 + 16);
    v3[5] = v5;
    v3[3] = v4;
  }
  return swift_task_switch();
}

uint64_t sub_23134B178()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  _QWORD *v4;

  v2 = *v1;
  v2[29] = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v4 = (_QWORD *)swift_task_alloc();
  v2[30] = (uint64_t)v4;
  *v4 = v2;
  v4[1] = sub_23134B20C;
  return sub_23134CCBC(v2[13], v2[2]);
}

uint64_t sub_23134B20C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23134B270()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23134F384(*(void **)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23134B338()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23134B3E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23134B498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23134B548()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23134B5F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23134B6A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23134B758()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23134B808(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 88) = a1;
  *(_QWORD *)(v2 + 96) = v3;
  return swift_task_switch();
}

uint64_t sub_23134B824()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;

  v2 = (void *)v0[11];
  v1 = v0[12];
  v0[7] = v0 + 10;
  v0[2] = v0;
  v0[3] = sub_23134B888;
  v3 = swift_continuation_init();
  sub_23134E0EC(v3, v2, v1);
  return swift_continuation_await();
}

uint64_t sub_23134B888()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if (*(_QWORD *)(v1 + 48))
  {
    swift_willThrow();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  else
  {
    *(_QWORD *)(v1 + 104) = *(_QWORD *)(v1 + 80);
    return swift_task_switch();
  }
}

uint64_t sub_23134B908()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;

  if (qword_255ECAAA8 != -1)
    swift_once();
  v1 = *(void **)(v0 + 104);
  v2 = sub_231413780();
  sub_2312CE3B8(v2, (uint64_t)qword_255ED2F00);
  v3 = v1;
  v4 = sub_231413768();
  v5 = sub_23141498C();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(void **)(v0 + 104);
  if (v6)
  {
    v8 = swift_slowAlloc();
    v17 = swift_slowAlloc();
    v18 = v17;
    *(_DWORD *)v8 = 136315394;
    v9 = sub_2314151A8();
    *(_QWORD *)(v0 + 80) = sub_23133180C(v9, v10, &v18);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2082;
    v11 = v7;
    v12 = objc_msgSend(v11, sel_description);
    v13 = sub_2314146BC();
    v15 = v14;

    *(_QWORD *)(v0 + 80) = sub_23133180C(v13, v15, &v18);
    sub_231414CBC();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2312C8000, v4, v5, "[%s] Got result during preWarm %{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v17, -1, -1);
    MEMORY[0x2348DE308](v8, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23134BB30(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;

  v4 = *v2;
  v3[18] = a2;
  v3[19] = v4;
  v3[17] = a1;
  v5 = sub_2314116D4();
  v3[20] = v5;
  v3[21] = *(_QWORD *)(v5 - 8);
  v3[22] = swift_task_alloc();
  v6 = sub_2314116EC();
  v3[23] = v6;
  v3[24] = *(_QWORD *)(v6 - 8);
  v3[25] = swift_task_alloc();
  v7 = sub_2314116BC();
  v3[26] = v7;
  v3[27] = *(_QWORD *)(v7 - 8);
  v3[28] = swift_task_alloc();
  v8 = sub_231411608();
  v3[29] = v8;
  v3[30] = *(_QWORD *)(v8 - 8);
  v3[31] = swift_task_alloc();
  v9 = sub_23141177C();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8];
  v3[32] = v9;
  v3[33] = *(_QWORD *)(v9 - 8);
  v3[34] = swift_task_alloc();
  v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, qword_255ECDEB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v3[35] = swift_task_alloc();
  sub_2312D6DD8(0, &qword_255ECB8C8, v10, v11);
  v3[36] = swift_task_alloc();
  v12 = sub_2314112F0();
  v3[37] = v12;
  v3[38] = *(_QWORD *)(v12 - 8);
  v3[39] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23134BCD4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;

  v1 = v0[35];
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0[33] + 56))(v0[36], 1, 1, v0[32]);
  v2 = sub_2314117A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  LOBYTE(v34) = 1;
  LOBYTE(v33) = 1;
  LOBYTE(v32) = 1;
  LOBYTE(v31) = 1;
  LOBYTE(v30) = 1;
  LOBYTE(v29) = 0;
  LOBYTE(v28) = 1;
  LOBYTE(v27) = 0;
  LOBYTE(v26) = 0;
  LOBYTE(v25) = 0;
  LOBYTE(v24) = 1;
  sub_2314112E4();
  v0[15] = MEMORY[0x24BEE4AF8];
  sub_23141174C();
  if (qword_255ECAAA8 != -1)
    swift_once();
  v3 = sub_231413780();
  sub_2312CE3B8(v3, (uint64_t)qword_255ED2F00);
  v4 = sub_231413768();
  v5 = sub_23141498C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v41 = v7;
    *(_DWORD *)v6 = 136315138;
    v8 = sub_2314151A8();
    v0[16] = sub_23133180C(v8, v9, &v41);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v4, v5, "[%s] Injecting AFib Burden data", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v7, -1, -1);
    MEMORY[0x2348DE308](v6, -1, -1);
  }

  v10 = v0[34];
  v38 = v0[30];
  v11 = v0[28];
  v39 = v0[29];
  v13 = v0[26];
  v12 = v0[27];
  v37 = v0[31];
  v14 = v0[24];
  v15 = v0[25];
  v16 = v0[23];
  v35 = v0[22];
  v17 = v0[21];
  v36 = v0[20];
  v18 = v0[17];
  v40 = (void *)v0[18];
  sub_231411230();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 104))(v11, *MEMORY[0x24BDCF020], v13);
  v19 = (_QWORD *)swift_task_alloc();
  v19[2] = v18;
  v19[3] = v10;
  v19[4] = v0 + 15;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v14 + 104))(v15, *MEMORY[0x24BDCF0B0], v16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v17 + 104))(v35, *MEMORY[0x24BDCF068], v36);
  sub_2314116C8();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v35, v36);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v16);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
  swift_task_dealloc();
  sub_2312D3C68(0, &qword_255ECDE90);
  sub_231412A90();
  v20 = sub_231414788();
  v0[40] = v20;
  swift_bridgeObjectRelease();
  v0[2] = v0;
  v0[3] = sub_23134C12C;
  v21 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v22 = v0 + 10;
  v22[1] = 0x40000000;
  v22[2] = sub_231385DA4;
  v22[3] = &unk_250023A40;
  v22[4] = v21;
  objc_msgSend(v40, sel_saveObjects_withCompletion_, v20, v22, 0, v24, 8, v25, 0, v26, 0, v27, 0, v28, 2, v29, 0, v30, 0,
    v31,
    0,
    v32,
    0,
    v33,
    0,
    v34);
  return swift_continuation_await();
}

uint64_t sub_23134C12C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 328) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23134C18C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 272);
  v4 = *(_QWORD *)(v0 + 256);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 8))(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 296));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23134C264()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(void **)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 304);
  v2 = *(_QWORD *)(v0 + 312);
  v4 = *(_QWORD *)(v0 + 296);
  v5 = *(_QWORD *)(v0 + 272);
  v7 = *(_QWORD *)(v0 + 256);
  v6 = *(_QWORD *)(v0 + 264);
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23134C350(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;

  v4 = *v2;
  v3[4] = a2;
  v3[5] = v4;
  v3[3] = a1;
  return swift_task_switch();
}

uint64_t sub_23134C370()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v10;

  if (qword_255ECAAA8 != -1)
    swift_once();
  v1 = sub_231413780();
  sub_2312CE3B8(v1, (uint64_t)qword_255ED2F00);
  v2 = sub_231413768();
  v3 = sub_23141498C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v10 = v5;
    *(_DWORD *)v4 = 136315138;
    v6 = sub_2314151A8();
    v0[2] = sub_23133180C(v6, v7, &v10);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v2, v3, "[%s] Injecting sleep data", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v5, -1, -1);
    MEMORY[0x2348DE308](v4, -1, -1);
  }

  v8 = (_QWORD *)swift_task_alloc();
  v0[6] = v8;
  *v8 = v0;
  v8[1] = sub_23134C524;
  return sub_23134EEA8(v0[3], v0[4], (uint64_t)sub_23134D908, 0);
}

uint64_t sub_23134C524()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23134C56C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;

  v4 = *v2;
  v3[4] = a2;
  v3[5] = v4;
  v3[3] = a1;
  return swift_task_switch();
}

uint64_t sub_23134C58C()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v10;

  if (qword_255ECAAA8 != -1)
    swift_once();
  v1 = sub_231413780();
  sub_2312CE3B8(v1, (uint64_t)qword_255ED2F00);
  v2 = sub_231413768();
  v3 = sub_23141498C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v10 = v5;
    *(_DWORD *)v4 = 136315138;
    v6 = sub_2314151A8();
    v0[2] = sub_23133180C(v6, v7, &v10);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v2, v3, "[%s] Injecting mindfulness data", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v5, -1, -1);
    MEMORY[0x2348DE308](v4, -1, -1);
  }

  v8 = (_QWORD *)swift_task_alloc();
  v0[6] = v8;
  *v8 = v0;
  v8[1] = sub_2313510A0;
  return sub_23134EEA8(v0[3], v0[4], (uint64_t)sub_23134DBFC, 0);
}

uint64_t sub_23134C740(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;

  v4 = *v2;
  v3[4] = a2;
  v3[5] = v4;
  v3[3] = a1;
  return swift_task_switch();
}

uint64_t sub_23134C760()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v10;

  if (qword_255ECAAA8 != -1)
    swift_once();
  v1 = sub_231413780();
  sub_2312CE3B8(v1, (uint64_t)qword_255ED2F00);
  v2 = sub_231413768();
  v3 = sub_23141498C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v10 = v5;
    *(_DWORD *)v4 = 136315138;
    v6 = sub_2314151A8();
    v0[2] = sub_23133180C(v6, v7, &v10);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v2, v3, "[%s] Injecting Exercise Minute data", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v5, -1, -1);
    MEMORY[0x2348DE308](v4, -1, -1);
  }

  v8 = (_QWORD *)swift_task_alloc();
  v0[6] = v8;
  *v8 = v0;
  v8[1] = sub_2313510A0;
  return sub_23134EEA8(v0[3], v0[4], (uint64_t)sub_23134DD1C, 0);
}

uint64_t sub_23134C914(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;

  v4 = *v2;
  v3[4] = a2;
  v3[5] = v4;
  v3[3] = a1;
  return swift_task_switch();
}

uint64_t sub_23134C934()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v10;

  if (qword_255ECAAA8 != -1)
    swift_once();
  v1 = sub_231413780();
  sub_2312CE3B8(v1, (uint64_t)qword_255ED2F00);
  v2 = sub_231413768();
  v3 = sub_23141498C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v10 = v5;
    *(_DWORD *)v4 = 136315138;
    v6 = sub_2314151A8();
    v0[2] = sub_23133180C(v6, v7, &v10);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v2, v3, "[%s] Injecting Body Mass data", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v5, -1, -1);
    MEMORY[0x2348DE308](v4, -1, -1);
  }

  v8 = (_QWORD *)swift_task_alloc();
  v0[6] = v8;
  *v8 = v0;
  v8[1] = sub_2313510A0;
  return sub_23134EEA8(v0[3], v0[4], (uint64_t)sub_23134DF9C, 0);
}

uint64_t sub_23134CAE8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;

  v4 = *v2;
  v3[4] = a2;
  v3[5] = v4;
  v3[3] = a1;
  return swift_task_switch();
}

uint64_t sub_23134CB08()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v10;

  if (qword_255ECAAA8 != -1)
    swift_once();
  v1 = sub_231413780();
  sub_2312CE3B8(v1, (uint64_t)qword_255ED2F00);
  v2 = sub_231413768();
  v3 = sub_23141498C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v10 = v5;
    *(_DWORD *)v4 = 136315138;
    v6 = sub_2314151A8();
    v0[2] = sub_23133180C(v6, v7, &v10);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v2, v3, "[%s] Injecting alcoholic data", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v5, -1, -1);
    MEMORY[0x2348DE308](v4, -1, -1);
  }

  v8 = (_QWORD *)swift_task_alloc();
  v0[6] = v8;
  *v8 = v0;
  v8[1] = sub_2313510A0;
  return sub_23134EEA8(v0[3], v0[4], (uint64_t)sub_23134DFBC, 0);
}

uint64_t sub_23134CCBC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *v2;
  v3[17] = a2;
  v3[18] = v4;
  v3[16] = a1;
  sub_231411608();
  v3[19] = swift_task_alloc();
  v5 = sub_231414614();
  v3[20] = v5;
  v3[21] = *(_QWORD *)(v5 - 8);
  v3[22] = swift_task_alloc();
  v6 = sub_23141177C();
  v3[23] = v6;
  v3[24] = *(_QWORD *)(v6 - 8);
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  return swift_task_switch();
}

void sub_23134CD7C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = v0[25];
  v1 = v0[26];
  v3 = v0[23];
  v4 = v0[24];
  v5 = v0[22];
  v18 = v0[21];
  v19 = v0[20];
  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4BFF8]), sel_initWithHealthStore_, v0[17]);
  v0[27] = v17;
  sub_23141174C();
  sub_23141120C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v1, v3);
  sub_2314145FC();
  v6 = sub_231414608();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v5, v19);
  if (qword_255ECAAA8 != -1)
    swift_once();
  v7 = sub_231413780();
  sub_2312CE3B8(v7, (uint64_t)qword_255ED2F00);
  v8 = sub_231413768();
  v9 = sub_23141498C();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v20 = v11;
    *(_DWORD *)v10 = 136315138;
    v12 = sub_2314151A8();
    v0[15] = sub_23133180C(v12, v13, &v20);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v8, v9, "[%s] Injecting tachograms", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v11, -1, -1);
    MEMORY[0x2348DE308](v10, -1, -1);
  }

  if (__OFSUB__(v6, 44))
  {
    __break(1u);
  }
  else
  {
    sub_2312D3C68(0, (unint64_t *)&qword_255ECFBD0);
    v14 = sub_231414BF0();
    v0[28] = v14;
    v0[7] = v0 + 30;
    v0[2] = v0;
    v0[3] = sub_23134D058;
    v15 = swift_continuation_init();
    v0[10] = MEMORY[0x24BDAC760];
    v16 = v0 + 10;
    v16[1] = 0x40000000;
    v16[2] = sub_23134A978;
    v16[3] = &unk_250023A10;
    v16[4] = v15;
    objc_msgSend(v17, sel_addTachogramsForStartDayIndex_endDayIndex_chanceOfAFib_chanceOfWrite_minutesBetweenSamples_startingHour_endingHour_completion_, v6 - 44, v6, 0, 0, v14, 0, 0, v16);
    swift_continuation_await();
  }
}

uint64_t sub_23134D058()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 232) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23134D0B8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 192);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23134D148()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 208);
  v3 = *(void **)(v0 + 216);
  v4 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 184);
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23134D1E4(uint64_t a1, uint64_t a2, _BYTE *a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t result;
  char v23;
  void (*v24)(char *, uint64_t);
  void *v25;
  void *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  id v30;
  void *v31;
  BOOL v32;
  char *v33;
  void *v34;
  id v35;
  id v36;
  char *v37;
  uint64_t inited;
  uint64_t v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  id v51;
  _QWORD *v52;
  id v53;
  uint64_t v54;
  id v55;
  char *v56;
  id v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  _QWORD *v61;

  v61 = a6;
  v60 = sub_2314117A0();
  v58 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6DD8(0, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v53 - v11;
  v13 = sub_231411608();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v59 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v53 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v53 - v20;
  sub_2312D3870(a1, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    return sub_2312D3CA0((uint64_t)v12);
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v21, v12, v13);
  sub_23141120C();
  v23 = sub_2314115CC();
  v24 = *(void (**)(char *, uint64_t))(v14 + 8);
  v24(v19, v13);
  if ((v23 & 1) != 0)
  {
    v56 = (char *)v24;
    v25 = (void *)sub_2314115C0();
    v26 = (void *)sub_2314116F8();
    v27 = HKHRAFibBurdenPreviousWeekDayIndexRange();
    v29 = v28;

    v30 = (id)objc_opt_self();
    v31 = (void *)sub_2314116F8();
    v57 = objc_msgSend(v30, sel_hk_dateOnDayIndex_atHour_calendar_, v27, 0, v31);

    v32 = __OFADD__(v27, v29);
    v33 = &v29[v27];
    if (v32)
    {
      __break(1u);
    }
    else
    {
      v34 = (void *)sub_2314116F8();
      v35 = objc_msgSend(v30, sel_hk_dateOnDayIndex_atHour_calendar_, v33, 0, v34);

      sub_2312D3C68(0, (unint64_t *)&qword_25415DEC8);
      v54 = MEMORY[0x2348DD384]((id)*MEMORY[0x24BDD3378]);
      v36 = objc_msgSend((id)objc_opt_self(), sel_percentUnit);
      v53 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v36, 0.5);

      sub_2314115D8();
      v37 = v59;
      v55 = v35;
      sub_2314115D8();
      sub_2312D6DD8(0, &qword_255ECCF70, (uint64_t (*)(uint64_t))sub_231327314, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_231416A30;
      *(_QWORD *)(inited + 32) = sub_2314146BC();
      *(_QWORD *)(inited + 40) = v39;
      sub_231411758();
      v40 = (void *)sub_231411794();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v9, v60);
      v41 = objc_msgSend(v40, sel_name);

      v42 = sub_2314146BC();
      v44 = v43;

      *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(inited + 48) = v42;
      *(_QWORD *)(inited + 56) = v44;
      sub_231336D90(inited);
      v45 = (void *)sub_2314115C0();
      v46 = (void *)sub_2314115C0();
      v47 = (void *)sub_23141462C();
      swift_bridgeObjectRelease();
      v48 = (void *)objc_opt_self();
      v50 = v53;
      v49 = (void *)v54;
      v51 = objc_msgSend(v48, sel_quantitySampleWithType_quantity_startDate_endDate_metadata_, v54, v53, v45, v46, v47);

      v29 = v56;
      ((void (*)(char *, uint64_t))v56)(v37, v13);
      ((void (*)(char *, uint64_t))v29)(v19, v13);
      v30 = v51;
      v52 = v61;
      MEMORY[0x2348DD15C]();
      if (*(_QWORD *)((*v52 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((*v52 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      {
LABEL_6:
        sub_2314147E8();
        sub_2314147B8();

        return ((uint64_t (*)(char *, uint64_t))v29)(v21, v13);
      }
    }
    sub_2314147DC();
    goto LABEL_6;
  }
  result = ((uint64_t (*)(char *, uint64_t))v24)(v21, v13);
  *a3 = 1;
  return result;
}

uint64_t sub_23134D70C(uint64_t a1, uint64_t a2, _BYTE *a3, uint64_t a4, uint64_t (*a5)(char *, uint64_t), uint64_t a6, uint64_t a7, _QWORD *a8)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t result;
  char v22;
  void (*v23)(char *, uint64_t);
  id v24;
  uint64_t (*v25)(char *, uint64_t);
  _BYTE *v26;

  v25 = a5;
  v26 = a3;
  sub_2312D6DD8(0, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v25 - v12;
  v14 = sub_231411608();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v25 - v19;
  sub_2312D3870(a1, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    return sub_2312D3CA0((uint64_t)v13);
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v20, v13, v14);
  sub_23141120C();
  v22 = sub_2314115CC();
  v23 = *(void (**)(char *, uint64_t))(v15 + 8);
  v23(v18, v14);
  if ((v22 & 1) != 0)
  {
    v24 = (id)v25(v20, a7);
    MEMORY[0x2348DD15C]();
    if (*(_QWORD *)((*a8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*a8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_2314147DC();
    sub_2314147E8();
    sub_2314147B8();

    return ((uint64_t (*)(char *, uint64_t))v23)(v20, v14);
  }
  else
  {
    result = ((uint64_t (*)(char *, uint64_t))v23)(v20, v14);
    *v26 = 1;
  }
  return result;
}

uint64_t sub_23134D908(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  void (*v19)(char *, uint64_t);
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  uint64_t result;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  char *v24;
  void *v25;
  char *v26;
  void *v27;
  void *v28;
  id v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;

  v3 = sub_231411764();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6DD8(0, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v34 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v31 - v10;
  v12 = sub_231411608();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v33 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v36 = (char *)&v31 - v16;
  v17 = *MEMORY[0x24BDCF230];
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v18(v6, v17, v3);
  v35 = a2;
  sub_231411728();
  v19 = *(void (**)(char *, uint64_t))(v4 + 8);
  v19(v6, v3);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  result = v20(v11, 1, v12);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v32 = v13;
    v22 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v22(v36, v11, v12);
    v18(v6, v17, v3);
    v23 = v34;
    sub_231411728();
    v19(v6, v3);
    result = v20(v23, 1, v12);
    if ((_DWORD)result != 1)
    {
      v24 = v33;
      v22(v33, v23, v12);
      sub_2312D3C68(0, (unint64_t *)&qword_25415DEC0);
      v25 = (void *)MEMORY[0x2348DD378]((id)*MEMORY[0x24BDD2A28]);
      v26 = v36;
      v27 = (void *)sub_2314115C0();
      v28 = (void *)sub_2314115C0();
      v29 = objc_msgSend((id)objc_opt_self(), sel_categorySampleWithType_value_startDate_endDate_, v25, 1, v27, v28);

      v30 = *(void (**)(char *, uint64_t))(v32 + 8);
      v30(v24, v12);
      v30(v26, v12);
      return (uint64_t)v29;
    }
  }
  __break(1u);
  return result;
}

id sub_23134DBFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v9;

  v0 = sub_231411608();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D3C68(0, (unint64_t *)&qword_25415DEC0);
  v4 = (void *)MEMORY[0x2348DD378]((id)*MEMORY[0x24BDD29A0]);
  sub_2314115B4();
  v5 = (void *)sub_2314115C0();
  v6 = (void *)sub_2314115C0();
  v7 = objc_msgSend((id)objc_opt_self(), sel_categorySampleWithType_value_startDate_endDate_, v4, 0, v5, v6);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v7;
}

uint64_t sub_23134DD1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  id v15;
  uint64_t result;
  void *v17;
  void *v18;
  id v19;
  void (*v20)(char *, uint64_t);
  _QWORD v21[2];

  v21[0] = a1;
  v21[1] = a2;
  v2 = sub_231411764();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6DD8(0, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v21 - v7;
  v9 = sub_231411608();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D3C68(0, (unint64_t *)&qword_25415DEC8);
  v13 = (void *)MEMORY[0x2348DD384]((id)*MEMORY[0x24BDD3348]);
  v14 = objc_msgSend((id)objc_opt_self(), sel_minuteUnit);
  v15 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v14, 30.0);

  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 16))(v12, v21[0], v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDCF258], v2);
  sub_231411728();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v17 = (void *)sub_2314115C0();
    v18 = (void *)sub_2314115C0();
    v19 = objc_msgSend((id)objc_opt_self(), sel_quantitySampleWithType_quantity_startDate_endDate_, v13, v15, v17, v18);

    v20 = *(void (**)(char *, uint64_t))(v10 + 8);
    v20(v8, v9);
    v20(v12, v9);
    return (uint64_t)v19;
  }
  return result;
}

id sub_23134DF9C(uint64_t a1, uint64_t a2)
{
  return sub_23134DFD4(150.0, a1, a2, MEMORY[0x24BDD33B8], (SEL *)&selRef_poundUnit);
}

id sub_23134DFBC(uint64_t a1, uint64_t a2)
{
  return sub_23134DFD4(2.0, a1, a2, MEMORY[0x24BDD35F8], (SEL *)&selRef_countUnit);
}

id sub_23134DFD4(double a1, uint64_t a2, uint64_t a3, id *a4, SEL *a5)
{
  void *v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  id v13;

  sub_2312D3C68(0, (unint64_t *)&qword_25415DEC8);
  v8 = (void *)MEMORY[0x2348DD384](*a4);
  v9 = objc_msgSend((id)objc_opt_self(), *a5);
  v10 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v9, a1);

  v11 = (void *)sub_2314115C0();
  v12 = (void *)sub_2314115C0();
  v13 = objc_msgSend((id)objc_opt_self(), sel_quantitySampleWithType_quantity_startDate_endDate_, v8, v10, v11, v12);

  return v13;
}

void sub_23134E0EC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  _QWORD v10[6];

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a3;
  v7 = objc_allocWithZone(MEMORY[0x24BE4C000]);
  v10[4] = sub_231350DD0;
  v10[5] = v6;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_23134E7A4;
  v10[3] = &unk_250023948;
  v8 = _Block_copy(v10);
  v9 = objc_msgSend(v7, sel_initWithResultsHandler_, v8);
  _Block_release(v8);
  swift_release();
  objc_msgSend(a2, sel_executeQuery_, v9);

}

uint64_t sub_23134E1D0(int a1, void *a2, id a3, uint64_t a4)
{
  id v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  id v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t *v34;
  uint64_t v35;

  if (a3)
  {
    v6 = a3;
    if (qword_255ECAAA8 != -1)
      swift_once();
    v7 = sub_231413780();
    sub_2312CE3B8(v7, (uint64_t)qword_255ED2F00);
    v8 = sub_231413768();
    v9 = sub_23141498C();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      v35 = v11;
      *(_DWORD *)v10 = 136315138;
      v12 = sub_2314151A8();
      sub_23133180C(v12, v13, &v35);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v8, v9, "[%s] Resuming continuation throwing error", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v11, -1, -1);
      MEMORY[0x2348DE308](v10, -1, -1);
    }

    sub_2312D3C14();
    swift_allocError();
    *v14 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  if (!a2)
  {
    if (qword_255ECAAA8 != -1)
      swift_once();
    v25 = sub_231413780();
    sub_2312CE3B8(v25, (uint64_t)qword_255ED2F00);
    v26 = sub_231413768();
    v27 = sub_231414980();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      v29 = swift_slowAlloc();
      v35 = v29;
      *(_DWORD *)v28 = 136315138;
      v30 = sub_2314151A8();
      sub_23133180C(v30, v31, &v35);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v26, v27, "[%s] No error but did not receive results as expected", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v29, -1, -1);
      MEMORY[0x2348DE308](v28, -1, -1);
    }

    sub_231350D7C();
    v32 = swift_allocError();
    *v33 = 2;
    sub_2312D3C14();
    swift_allocError();
    *v34 = v32;
    return swift_continuation_throwingResumeWithError();
  }
  v16 = qword_255ECAAA8;
  v17 = a2;
  if (v16 != -1)
    swift_once();
  v18 = sub_231413780();
  sub_2312CE3B8(v18, (uint64_t)qword_255ED2F00);
  v19 = sub_231413768();
  v20 = sub_23141498C();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    v35 = v22;
    *(_DWORD *)v21 = 136315138;
    v23 = sub_2314151A8();
    sub_23133180C(v23, v24, &v35);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v19, v20, "[%s] Resuming continuation returning results", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v22, -1, -1);
    MEMORY[0x2348DE308](v21, -1, -1);
  }

  **(_QWORD **)(*(_QWORD *)(a4 + 64) + 40) = v17;
  return swift_continuation_throwingResume();
}

uint64_t sub_23134E670()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();

  v1 = v0 + OBJC_IVAR____TtC5Heart32AFibBurdenPDFExportPPTTestRunner_signposter;
  v2 = sub_2314136E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_23134E6D0()
{
  return type metadata accessor for AFibBurdenPDFExportPPTTestRunner();
}

uint64_t type metadata accessor for AFibBurdenPDFExportPPTTestRunner()
{
  uint64_t result;

  result = qword_255ECDD90;
  if (!qword_255ECDD90)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23134E714()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2314136E4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_23134E7A4(uint64_t a1, void *a2, void *a3, void *a4)
{
  void (*v7)(id, void *, void *);
  id v8;
  id v9;
  id v10;

  v7 = *(void (**)(id, void *, void *))(a1 + 32);
  swift_retain();
  v10 = a2;
  v8 = a3;
  v9 = a4;
  v7(v10, a3, a4);
  swift_release();

}

void sub_23134E82C(uint64_t a1)
{
  id v1;
  void *v2;
  id v3;

  v1 = *(id *)(*(_QWORD *)a1 + 32);
  sub_231412A90();
  v2 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v3 = (id)sub_23141468C();
  objc_msgSend(v1, sel_failedTest_withFailure_, v2, v3);

}

void sub_23134E8CC(uint64_t a1)
{
  id v1;
  void *v2;
  id v3;

  v1 = *(id *)(*(_QWORD *)a1 + 32);
  sub_231412A90();
  v2 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  sub_231336F00(MEMORY[0x24BEE4AF8]);
  v3 = (id)sub_23141462C();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_finishedTest_extraResults_, v2, v3);

}

void sub_23134E988(uint64_t a1)
{
  id v1;
  id v2;

  v1 = *(id *)(*(_QWORD *)a1 + 32);
  sub_231412A90();
  v2 = (id)sub_23141468C();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_startedTest_, v2);

}

uint64_t sub_23134EA00(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);

  v1[25] = a1;
  v2 = sub_231411608();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v1[26] = v2;
  v1[27] = *(_QWORD *)(v2 - 8);
  v1[28] = swift_task_alloc();
  sub_2312D6DD8(0, (unint64_t *)&qword_25415D500, v3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v1[29] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23134EA9C()
{
  _QWORD *v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  _QWORD *v22;

  sub_2312D6DD8(0, &qword_255ECCF70, (uint64_t (*)(uint64_t))sub_231327314, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_231416A30;
  *(_QWORD *)(inited + 32) = sub_2314146BC();
  *(_QWORD *)(inited + 40) = v2;
  v3 = sub_2312D3C68(0, (unint64_t *)&qword_255ECFBD0);
  v4 = sub_231414BE4();
  *(_QWORD *)(inited + 72) = v3;
  *(_QWORD *)(inited + 48) = v4;
  sub_231336D90(inited);
  v5 = objc_allocWithZone(MEMORY[0x24BDD3BE8]);
  v6 = (void *)sub_23141462C();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_initWithDictionary_, v6);
  v0[30] = v7;

  v8 = sub_23141468C();
  v0[31] = v8;
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD15D0]), sel_init);
  v10 = (void *)sub_23141468C();
  v11 = objc_msgSend(v9, sel_dateFromString_, v10);

  v12 = v0[29];
  if (v11)
  {
    v14 = v0[27];
    v13 = v0[28];
    v15 = v0[26];
    sub_2314115D8();

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v12, v13, v15);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v15);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v15) == 1)
    {
      v16 = 0;
    }
    else
    {
      v17 = v0[29];
      v18 = v0[26];
      v19 = v0[27];
      v16 = sub_2314115C0();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    }
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0[27] + 56))(v0[29], 1, 1, v0[26]);
    v16 = 0;
  }
  v0[32] = v16;
  v20 = (void *)v0[25];
  v0[2] = v0;
  v0[3] = sub_23134ED6C;
  v21 = swift_continuation_init();
  v0[20] = MEMORY[0x24BDAC760];
  v22 = v0 + 20;
  v22[1] = 0x40000000;
  v22[2] = sub_231385DA4;
  v22[3] = &unk_250023A58;
  v22[4] = v21;
  objc_msgSend(v20, sel_setCurrentOnboardingVersionCompletedForCountryCode_countryCodeProvenance_date_settings_completion_, v8, 101, v16, v7, v22);
  return swift_continuation_await();
}

uint64_t sub_23134ED6C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 264) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23134EDCC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v2 = *(void **)(v0 + 248);
  v1 = *(void **)(v0 + 256);
  v3 = *(void **)(v0 + 240);

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23134EE34()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 256);
  v3 = *(void **)(v0 + 240);
  v2 = *(void **)(v0 + 248);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23134EEA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;

  v4[18] = a3;
  v4[19] = a4;
  v4[16] = a1;
  v4[17] = a2;
  v5 = sub_2314116D4();
  v4[20] = v5;
  v4[21] = *(_QWORD *)(v5 - 8);
  v4[22] = swift_task_alloc();
  v6 = sub_2314116EC();
  v4[23] = v6;
  v4[24] = *(_QWORD *)(v6 - 8);
  v4[25] = swift_task_alloc();
  v7 = sub_2314116BC();
  v4[26] = v7;
  v4[27] = *(_QWORD *)(v7 - 8);
  v4[28] = swift_task_alloc();
  v8 = sub_231411608();
  v4[29] = v8;
  v4[30] = *(_QWORD *)(v8 - 8);
  v4[31] = swift_task_alloc();
  v9 = sub_23141177C();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8];
  v4[32] = v9;
  v4[33] = *(_QWORD *)(v9 - 8);
  v4[34] = swift_task_alloc();
  v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, qword_255ECDEB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4[35] = swift_task_alloc();
  sub_2312D6DD8(0, &qword_255ECB8C8, v10, v11);
  v4[36] = swift_task_alloc();
  v12 = sub_2314112F0();
  v4[37] = v12;
  v4[38] = *(_QWORD *)(v12 - 8);
  v4[39] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23134F048()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;

  v1 = (_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 280);
  v3 = *(_QWORD *)(v0 + 272);
  v4 = *(_QWORD *)(v0 + 248);
  v30 = *(_QWORD *)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 224);
  v31 = *(_QWORD *)(v0 + 232);
  v6 = *(_QWORD *)(v0 + 216);
  v33 = *(_QWORD *)(v0 + 192);
  v34 = *(_QWORD *)(v0 + 208);
  v25 = *(_QWORD *)(v0 + 184);
  v26 = *(_QWORD *)(v0 + 200);
  v27 = *(_QWORD *)(v0 + 168);
  v28 = *(_QWORD *)(v0 + 160);
  v29 = *(_QWORD *)(v0 + 176);
  v7 = *(_QWORD *)(v0 + 128);
  v32 = *(void **)(v0 + 136);
  v24 = *(_OWORD *)(v0 + 144);
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 264) + 56))(*(_QWORD *)(v0 + 288), 1, 1, *(_QWORD *)(v0 + 256));
  v8 = sub_2314117A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v2, 1, 1, v8);
  LOBYTE(v23) = 1;
  LOBYTE(v22) = 1;
  LOBYTE(v21) = 1;
  LOBYTE(v20) = 1;
  LOBYTE(v19) = 1;
  LOBYTE(v18) = 1;
  LOBYTE(v17) = 1;
  LOBYTE(v16) = 0;
  LOBYTE(v15) = 0;
  LOBYTE(v14) = 0;
  LOBYTE(v13) = 1;
  sub_2314112E4();
  *(_QWORD *)(v0 + 120) = MEMORY[0x24BEE4AF8];
  sub_23141174C();
  sub_231411230();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v5, *MEMORY[0x24BDCF020], v34);
  v9 = swift_task_alloc();
  *(_QWORD *)(v9 + 16) = v7;
  *(_OWORD *)(v9 + 24) = v24;
  *(_QWORD *)(v9 + 40) = v3;
  *(_QWORD *)(v9 + 48) = v0 + 120;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v33 + 104))(v26, *MEMORY[0x24BDCF0B0], v25);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v27 + 104))(v29, *MEMORY[0x24BDCF068], v28);
  sub_2314116C8();
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v29, v28);
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v26, v25);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v34);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v4, v31);
  swift_task_dealloc();
  sub_2312D3C68(0, &qword_255ECDE90);
  sub_231412A90();
  v10 = sub_231414788();
  v1[40] = v10;
  swift_bridgeObjectRelease();
  v1[2] = v1;
  v1[3] = sub_23134C12C;
  v11 = swift_continuation_init();
  v1[10] = MEMORY[0x24BDAC760];
  v1 += 10;
  v1[1] = 0x40000000;
  v1[2] = sub_231385DA4;
  v1[3] = &unk_250023A28;
  v1[4] = v11;
  objc_msgSend(v32, sel_saveObjects_withCompletion_, v10, v1, 0, v13, 12, v14, 0, v15, 0, v16, 0, v17, 0, v18, 0, v19, 0,
    v20,
    0,
    v21,
    0,
    v22,
    0,
    v23);
  return swift_continuation_await();
}

uint64_t sub_23134F384(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  id v18;
  void (*v19)(char *, char *, uint64_t);
  void *v20;
  uint64_t v21;
  id v22;
  char *v23;
  void *v24;
  void (*v25)(char *, uint64_t);
  id v26;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  id v36[2];

  v32 = a1;
  v36[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = sub_23141177C();
  v30 = *(_QWORD *)(v1 - 8);
  v31 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2314112F0();
  v34 = *(_QWORD *)(v4 - 8);
  v35 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v33 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6DD8(0, (unint64_t *)&qword_25415D500, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v29 - v7;
  v9 = sub_231411608();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v29 - v14;
  v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD15D0]), sel_init);
  v17 = (void *)sub_23141468C();
  v18 = objc_msgSend(v16, sel_dateFromString_, v17);

  if (!v18)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
LABEL_8:
    __break(1u);
  }
  sub_2314115D8();

  v19 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v19(v8, v13, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    goto LABEL_8;
  v19(v15, v8, v9);
  sub_23141174C();
  v20 = (void *)sub_2314116F8();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v3, v31);
  v21 = sub_2314115C0();
  v22 = objc_msgSend(v20, sel_hk_dateOfBirthDateComponentsWithDate_, v21);

  v23 = v33;
  sub_2314112D8();

  v24 = (void *)sub_2314112CC();
  v36[0] = 0;
  LOBYTE(v21) = objc_msgSend(v32, sel__setDateOfBirthComponents_error_, v24, v36);

  if ((v21 & 1) != 0)
  {
    v25 = *(void (**)(char *, uint64_t))(v34 + 8);
    v26 = v36[0];
    v25(v23, v35);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
  else
  {
    v28 = v36[0];
    sub_231411410();

    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v23, v35);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
}

uint64_t sub_23134F708(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[19] = a1;
  v2[20] = v1;
  v2[21] = *v1;
  v3 = sub_2314136F0();
  v2[22] = v3;
  v2[23] = *(_QWORD *)(v3 - 8);
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  v4 = sub_2314136C0();
  v2[26] = v4;
  v2[27] = *(_QWORD *)(v4 - 8);
  v2[28] = swift_task_alloc();
  v2[29] = swift_task_alloc();
  v2[30] = swift_task_alloc();
  v2[31] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23134F7D0()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v10;

  if (qword_255ECAAA8 != -1)
    swift_once();
  v1 = sub_231413780();
  v0[32] = sub_2312CE3B8(v1, (uint64_t)qword_255ED2F00);
  v2 = sub_231413768();
  v3 = sub_23141498C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v10 = v5;
    *(_DWORD *)v4 = 136315138;
    v6 = sub_2314151A8();
    v0[18] = sub_23133180C(v6, v7, &v10);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v2, v3, "[%s] Starting test", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v5, -1, -1);
    MEMORY[0x2348DE308](v4, -1, -1);
  }

  v8 = (_QWORD *)swift_task_alloc();
  v0[33] = v8;
  *v8 = v0;
  v8[1] = sub_23134F97C;
  return sub_23134AC0C(v0[19]);
}

uint64_t sub_23134F97C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 272) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23134F9E0()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  NSObject *v10;
  os_signpost_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint8_t *v16;
  os_signpost_id_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void (*v23)(uint64_t, uint64_t);
  _QWORD *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;

  if (*(_BYTE *)(*(_QWORD *)(v0 + 160) + 40) == 1)
  {
    v1 = sub_231413768();
    v2 = sub_23141498C();
    if (os_log_type_enabled(v1, v2))
    {
      v3 = (uint8_t *)swift_slowAlloc();
      v4 = swift_slowAlloc();
      v38 = v4;
      *(_DWORD *)v3 = 136315138;
      v5 = sub_2314151A8();
      *(_QWORD *)(v0 + 136) = sub_23133180C(v5, v6, &v38);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v1, v2, "[%s] Pre warming tachogram classification cache", v3, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v4, -1, -1);
      MEMORY[0x2348DE308](v3, -1, -1);
    }

    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 280) = v7;
    *v7 = v0;
    v7[1] = sub_23134FECC;
    v8 = **(_QWORD **)(v0 + 160);
    v7[11] = *(_QWORD *)(v0 + 152);
    v7[12] = v8;
    return swift_task_switch();
  }
  else
  {
    sub_23134A5C8("[%s] Starting test with name %s", (uint64_t)sub_231350EF4, (uint64_t)&unk_2500239E8);
    *(_QWORD *)(v0 + 296) = OBJC_IVAR____TtC5Heart32AFibBurdenPDFExportPPTTestRunner_signposter;
    sub_2314136B4();
    v10 = sub_2314136CC();
    v11 = sub_231414AE8();
    if ((sub_231414CA4() & 1) != 0)
    {
      v12 = *(_QWORD *)(v0 + 240);
      v13 = *(_QWORD *)(v0 + 208);
      v14 = *(_QWORD *)(v0 + 216);
      v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
      v15(v12, *(_QWORD *)(v0 + 248), v13);
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      v17 = sub_2314136A8();
      _os_signpost_emit_with_name_impl(&dword_2312C8000, v10, v11, v17, "AFibBurdenPDFExportLoad", "", v16, 2u);
      MEMORY[0x2348DE308](v16, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    }
    else
    {
      v18 = *(_QWORD *)(v0 + 216);

      v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
    }
    *(_QWORD *)(v0 + 304) = v15;
    v19 = *(_QWORD *)(v0 + 248);
    v20 = *(_QWORD *)(v0 + 208);
    v21 = *(_QWORD *)(v0 + 216);
    v22 = *(void **)(v0 + 152);
    v15(*(_QWORD *)(v0 + 240), v19, v20);
    sub_231413714();
    swift_allocObject();
    *(_QWORD *)(v0 + 312) = sub_231413708();
    v23 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
    *(_QWORD *)(v0 + 320) = v23;
    v23(v19, v20);
    type metadata accessor for AFibBurdenPDFProvider();
    v24 = (_QWORD *)swift_allocObject();
    *(_QWORD *)(v0 + 328) = v24;
    v24[2] = v22;
    v25 = sub_231412AA8();
    v26 = v22;
    v27 = sub_231412A9C();
    v28 = MEMORY[0x24BE43B90];
    v24[6] = v25;
    v24[7] = v28;
    v24[3] = v27;
    v29 = (id)HKHRAFibBurdenLogForCategory();
    v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3918]), sel_initWithLoggingCategory_healthDataSource_, v29, v26);

    v24[8] = v30;
    sub_231330638((uint64_t *)(v0 + 16));
    v31 = sub_231413768();
    v32 = sub_23141498C();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      v38 = v34;
      *(_DWORD *)v33 = 136315138;
      v35 = sub_2314151A8();
      *(_QWORD *)(v0 + 104) = sub_23133180C(v35, v36, &v38);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v31, v32, "[%s] Requesting PDF to be configured", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v34, -1, -1);
      MEMORY[0x2348DE308](v33, -1, -1);
    }

    sub_2312CEA5C((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
    v37 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 336) = v37;
    *v37 = v0;
    v37[1] = sub_2313502B0;
    return sub_2314123F4();
  }
}

uint64_t sub_23134FECC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 288) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23134FF30()
{
  uint64_t *v0;
  NSObject *v1;
  os_signpost_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint8_t *v7;
  os_signpost_id_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void (*v14)(uint64_t, uint64_t);
  _QWORD *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v30;

  sub_23134A5C8("[%s] Starting test with name %s", (uint64_t)sub_231350EF4, (uint64_t)&unk_2500239E8);
  v0[37] = OBJC_IVAR____TtC5Heart32AFibBurdenPDFExportPPTTestRunner_signposter;
  sub_2314136B4();
  v1 = sub_2314136CC();
  v2 = sub_231414AE8();
  if ((sub_231414CA4() & 1) != 0)
  {
    v3 = v0[30];
    v4 = v0[26];
    v5 = v0[27];
    v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    v6(v3, v0[31], v4);
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    v8 = sub_2314136A8();
    _os_signpost_emit_with_name_impl(&dword_2312C8000, v1, v2, v8, "AFibBurdenPDFExportLoad", "", v7, 2u);
    MEMORY[0x2348DE308](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  else
  {
    v9 = v0[27];

    v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  }
  v0[38] = (uint64_t)v6;
  v10 = v0[31];
  v11 = v0[26];
  v12 = v0[27];
  v13 = (void *)v0[19];
  v6(v0[30], v10, v11);
  sub_231413714();
  swift_allocObject();
  v0[39] = sub_231413708();
  v14 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v0[40] = (uint64_t)v14;
  v14(v10, v11);
  type metadata accessor for AFibBurdenPDFProvider();
  v15 = (_QWORD *)swift_allocObject();
  v0[41] = (uint64_t)v15;
  v15[2] = v13;
  v16 = sub_231412AA8();
  v17 = v13;
  v18 = sub_231412A9C();
  v19 = MEMORY[0x24BE43B90];
  v15[6] = v16;
  v15[7] = v19;
  v15[3] = v18;
  v20 = (id)HKHRAFibBurdenLogForCategory();
  v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3918]), sel_initWithLoggingCategory_healthDataSource_, v20, v17);

  v15[8] = v21;
  sub_231330638(v0 + 2);
  v22 = sub_231413768();
  v23 = sub_23141498C();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    v30 = v25;
    *(_DWORD *)v24 = 136315138;
    v26 = sub_2314151A8();
    v0[13] = sub_23133180C(v26, v27, &v30);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v22, v23, "[%s] Requesting PDF to be configured", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v25, -1, -1);
    MEMORY[0x2348DE308](v24, -1, -1);
  }

  sub_2312CEA5C(v0 + 2, v0[5]);
  v28 = (_QWORD *)swift_task_alloc();
  v0[42] = (uint64_t)v28;
  *v28 = v0;
  v28[1] = sub_2313502B0;
  return sub_2314123F4();
}

uint64_t sub_2313502B0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(*(_QWORD *)v3 + 344) = v2;
  swift_task_dealloc();
  if (!v2)
    sub_2312D6CA8(a1, a2);
  return swift_task_switch();
}

uint64_t sub_231350330()
{
  uint64_t v0;
  _QWORD *v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  os_signpost_id_t v12;

  v1 = (_QWORD *)(v0 + 232);
  v2 = sub_2314136CC();
  sub_2314136FC();
  v3 = sub_231414ADC();
  if ((sub_231414CA4() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 200);
    v5 = *(_QWORD *)(v0 + 176);
    v6 = *(_QWORD *)(v0 + 184);
    swift_retain();
    sub_231413720();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v6 + 88))(v4, v5) == *MEMORY[0x24BEE7810])
    {
      v7 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 176));
      v7 = "";
    }
    v1 = (_QWORD *)(v0 + 240);
    v8 = *(void (**)(uint64_t, uint64_t))(v0 + 320);
    v9 = *(_QWORD *)(v0 + 232);
    v10 = *(_QWORD *)(v0 + 208);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 304))(*(_QWORD *)(v0 + 240), v9, v10);
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    v12 = sub_2314136A8();
    _os_signpost_emit_with_name_impl(&dword_2312C8000, v2, v3, v12, "AFibBurdenPDFExportLoad", v7, v11, 2u);
    MEMORY[0x2348DE308](v11, -1, -1);

    v8(v9, v10);
  }
  else
  {

  }
  (*(void (**)(_QWORD, _QWORD))(v0 + 320))(*v1, *(_QWORD *)(v0 + 208));
  sub_23134A5C8("[%s] Finishing test with name %s", (uint64_t)sub_231350DF0, (uint64_t)&unk_250023970);
  swift_release();
  swift_release();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_231350548()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  void *v15;
  _BYTE *v16;
  uint64_t v18[2];

  v1 = *(void **)(v0 + 272);
  v2 = v1;
  v3 = v1;
  v4 = sub_231413768();
  v5 = sub_231414974();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 272);
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v18[0] = v8;
    *(_DWORD *)v7 = 136315394;
    v9 = sub_2314151A8();
    *(_QWORD *)(v0 + 72) = sub_23133180C(v9, v10, v18);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    *(_QWORD *)(v0 + 56) = v6;
    v11 = v6;
    sub_2312D3C14();
    v12 = sub_2314146E0();
    *(_QWORD *)(v0 + 64) = sub_23133180C(v12, v13, v18);
    sub_231414CBC();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2312C8000, v4, v5, "[%s] Received failure, reporting error %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v8, -1, -1);
    MEMORY[0x2348DE308](v7, -1, -1);
  }
  else
  {
    v14 = *(void **)(v0 + 272);

  }
  v15 = *(void **)(v0 + 272);
  sub_231350D7C();
  swift_allocError();
  *v16 = 0;
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23135079C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  uint64_t v16[2];

  v1 = *(void **)(v0 + 288);
  v2 = v1;
  v3 = v1;
  v4 = sub_231413768();
  v5 = sub_231414974();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 288);
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v16[0] = v8;
    *(_DWORD *)v7 = 136315394;
    v9 = sub_2314151A8();
    *(_QWORD *)(v0 + 112) = sub_23133180C(v9, v10, v16);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    *(_QWORD *)(v0 + 120) = v6;
    v11 = v6;
    sub_2312D3C14();
    v12 = sub_2314146E0();
    *(_QWORD *)(v0 + 128) = sub_23133180C(v12, v13, v16);
    sub_231414CBC();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2312C8000, v4, v5, "[%s] Received failure when preWarming cache, reporting error %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v8, -1, -1);
    MEMORY[0x2348DE308](v7, -1, -1);
  }
  else
  {
    v14 = *(void **)(v0 + 288);

  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2313509C0()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  _QWORD *v15;
  NSObject *v16;
  os_signpost_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  const char *v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint8_t *v25;
  os_signpost_id_t v26;
  void *v27;
  uint64_t v29;

  v1 = *(void **)(v0 + 344);
  v2 = v1;
  v3 = v1;
  v4 = sub_231413768();
  v5 = sub_231414974();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 344);
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v29 = v8;
    *(_DWORD *)v7 = 136315394;
    v9 = sub_2314151A8();
    *(_QWORD *)(v0 + 80) = sub_23133180C(v9, v10, &v29);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    *(_QWORD *)(v0 + 88) = v6;
    v11 = v6;
    sub_2312D3C14();
    v12 = sub_2314146E0();
    *(_QWORD *)(v0 + 96) = sub_23133180C(v12, v13, &v29);
    sub_231414CBC();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2312C8000, v4, v5, "[%s] Received failure configuring PDF, reporting error %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v8, -1, -1);
    MEMORY[0x2348DE308](v7, -1, -1);
  }
  else
  {
    v14 = *(void **)(v0 + 344);

  }
  v15 = (_QWORD *)(v0 + 224);
  v16 = sub_2314136CC();
  sub_2314136FC();
  v17 = sub_231414ADC();
  if ((sub_231414CA4() & 1) != 0)
  {
    v19 = *(_QWORD *)(v0 + 184);
    v18 = *(_QWORD *)(v0 + 192);
    v20 = *(_QWORD *)(v0 + 176);
    swift_retain();
    sub_231413720();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v19 + 88))(v18, v20) == *MEMORY[0x24BEE7810])
    {
      v21 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
      v21 = "";
    }
    v15 = (_QWORD *)(v0 + 240);
    v22 = *(void (**)(uint64_t, uint64_t))(v0 + 320);
    v23 = *(_QWORD *)(v0 + 224);
    v24 = *(_QWORD *)(v0 + 208);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 304))(*(_QWORD *)(v0 + 240), v23, v24);
    v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v25 = 0;
    v26 = sub_2314136A8();
    _os_signpost_emit_with_name_impl(&dword_2312C8000, v16, v17, v26, "AFibBurdenPDFExportLoad", v21, v25, 2u);
    MEMORY[0x2348DE308](v25, -1, -1);

    v22(v23, v24);
  }
  else
  {

  }
  v27 = *(void **)(v0 + 344);
  (*(void (**)(_QWORD, _QWORD))(v0 + 320))(*v15, *(_QWORD *)(v0 + 208));
  sub_23134A1EC(0xD000000000000027, 0x800000023142BA40);
  swift_release();

  swift_release();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_231350D7C()
{
  unint64_t result;

  result = qword_255ECDE40;
  if (!qword_255ECDE40)
  {
    result = MEMORY[0x2348DE248](&unk_23141C6C8, &type metadata for AFibBurdenPDFExportPPTTestRunner.Errors);
    atomic_store(result, &qword_255ECDE40);
  }
  return result;
}

uint64_t sub_231350DC0()
{
  return swift_deallocObject();
}

uint64_t sub_231350DD0(int a1, void *a2, void *a3)
{
  uint64_t v3;

  return sub_23134E1D0(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_231350DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_231350DE8()
{
  return swift_release();
}

void sub_231350DF0()
{
  uint64_t v0;

  sub_23134E8CC((uint64_t)&v0);
}

unint64_t sub_231350E14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25415DE48;
  if (!qword_25415DE48)
  {
    v1 = sub_231414500();
    result = MEMORY[0x2348DE248](MEMORY[0x24BEE5468], v1);
    atomic_store(result, (unint64_t *)&qword_25415DE48);
  }
  return result;
}

unint64_t sub_231350E5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25415DE78;
  if (!qword_25415DE78)
  {
    sub_2312D6DD8(255, (unint64_t *)&qword_25415DE70, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2348DE248](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_25415DE78);
  }
  return result;
}

uint64_t sub_231350EBC()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_231350EE8()
{
  uint64_t v0;

  sub_23134E82C(v0 + 16);
}

void sub_231350EF4()
{
  uint64_t v0;

  sub_23134E988((uint64_t)&v0);
}

uint64_t sub_231350F18(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v3;

  return sub_23134D70C(a1, a2, a3, *(_QWORD *)(v3 + 16), *(uint64_t (**)(char *, uint64_t))(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD **)(v3 + 48));
}

uint64_t sub_231350F28(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v3;

  return sub_23134D1E4(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD **)(v3 + 32));
}

void sub_231350F34()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415E460)
  {
    v0 = sub_231414CB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415E460);
  }
}

uint64_t storeEnumTagSinglePayload for AFibBurdenPDFExportPPTTestRunner.Errors(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_231350FD8 + 4 * byte_23141C5A5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23135100C + 4 * byte_23141C5A0[v4]))();
}

uint64_t sub_23135100C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_231351014(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23135101CLL);
  return result;
}

uint64_t sub_231351028(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x231351030);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_231351034(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23135103C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenPDFExportPPTTestRunner.Errors()
{
  return &type metadata for AFibBurdenPDFExportPPTTestRunner.Errors;
}

unint64_t sub_23135105C()
{
  unint64_t result;

  result = qword_255ECDEA0;
  if (!qword_255ECDEA0)
  {
    result = MEMORY[0x2348DE248](&unk_23141C6A0, &type metadata for AFibBurdenPDFExportPPTTestRunner.Errors);
    atomic_store(result, (unint64_t *)&qword_255ECDEA0);
  }
  return result;
}

uint64_t sub_2313510BC(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v12;
  id v13;
  uint64_t v14;

  v14 = MEMORY[0x24BEE4AF8];
  if (a3 >> 62)
    goto LABEL_17;
  v5 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_231412A90();
  for (; v5; v5 = sub_231414F08())
  {
    for (i = 4; ; ++i)
    {
      v7 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2348DD81C](i - 4, a3) : *(id *)(a3 + 8 * i);
      v8 = v7;
      v9 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v13 = v7;
      a1(&v12, &v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return swift_bridgeObjectRelease();
      }

      if (v12)
      {
        MEMORY[0x2348DD15C]();
        if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_2314147DC();
        sub_2314147E8();
        sub_2314147B8();
      }
      if (v9 == v5)
      {
        swift_bridgeObjectRelease();
        return v14;
      }
    }
    __break(1u);
LABEL_17:
    sub_231412A90();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

unint64_t sub_231351254(void (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(id *);
  uint64_t v28;
  id v29;

  v27 = a1;
  sub_2312D1E78(0, &qword_255ECDF70, (void (*)(uint64_t))type metadata accessor for AFibBurdenPDFChartPoint);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v21 - v6;
  v26 = type metadata accessor for AFibBurdenPDFChartPoint();
  v28 = *(_QWORD *)(v26 - 8);
  v8 = MEMORY[0x24BDAC7A8](v26);
  v25 = (uint64_t)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v23 = (uint64_t)&v21 - v10;
  if (a3 >> 62)
    goto LABEL_20;
  v11 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_231412A90();
  for (; v11; v11 = sub_231414F08())
  {
    v12 = MEMORY[0x24BEE4AF8];
    v24 = a3 & 0xC000000000000001;
    v13 = 4;
    v22 = a3;
    while (1)
    {
      v14 = v24 ? (id)MEMORY[0x2348DD81C](v13 - 4, a3) : *(id *)(a3 + 8 * v13);
      v15 = v14;
      v16 = v13 - 3;
      if (__OFADD__(v13 - 4, 1))
        break;
      v29 = v14;
      v27(&v29);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v12;
      }

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v7, 1, v26) == 1)
      {
        sub_2312F1A20((uint64_t)v7, &qword_255ECDF70, (void (*)(uint64_t))type metadata accessor for AFibBurdenPDFChartPoint);
      }
      else
      {
        v17 = v23;
        sub_2312EE5FC((uint64_t)v7, v23, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartPoint);
        sub_2312EE5FC(v17, v25, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartPoint);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v12 = sub_2312CDBA0(0, *(_QWORD *)(v12 + 16) + 1, 1, v12);
        v19 = *(_QWORD *)(v12 + 16);
        v18 = *(_QWORD *)(v12 + 24);
        if (v19 >= v18 >> 1)
          v12 = sub_2312CDBA0(v18 > 1, v19 + 1, 1, v12);
        *(_QWORD *)(v12 + 16) = v19 + 1;
        sub_2312EE5FC(v25, v12+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(_QWORD *)(v28 + 72) * v19, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartPoint);
        a3 = v22;
      }
      ++v13;
      if (v16 == v11)
      {
        swift_bridgeObjectRelease();
        return v12;
      }
    }
    __break(1u);
LABEL_20:
    sub_231412A90();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_231351538@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  int *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  char *v24;
  id v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  void (*v28)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;

  v26 = a1;
  LODWORD(v30) = a2 & 1;
  v9 = sub_2314112F0();
  v34 = *(_QWORD *)(v9 - 8);
  v35 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v33 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D1E78(0, qword_255ECDEB0, (void (*)(uint64_t))MEMORY[0x24BDCF510]);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v26 - v12;
  sub_2312D1E78(0, &qword_255ECB8C8, (void (*)(uint64_t))MEMORY[0x24BDCF2D8]);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v26 - v15;
  v17 = sub_23141177C();
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
  v32 = *(_QWORD *)(v17 - 8);
  v19 = v32;
  v29 = a3;
  v18(a5, a3, v17);
  v20 = (int *)type metadata accessor for AFibBurdenPDFChartDailySumQuery();
  *(_QWORD *)(a5 + v20[5]) = a4;
  *(_QWORD *)(a5 + v20[6]) = a1;
  *(_BYTE *)(a5 + v20[9]) = (_BYTE)v30;
  v31 = a5;
  v18((uint64_t)v16, a3, v17);
  v28 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56);
  v28(v16, 0, 1, v17);
  v21 = sub_2314117A0();
  v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
  v27(v13, 1, 1, v21);
  v22 = a4;
  v30 = v26;
  sub_2314112E4();
  v23 = v29;
  v18((uint64_t)v16, v29, v17);
  v28(v16, 0, 1, v17);
  v27(v13, 1, 1, v21);
  v24 = v33;
  sub_2314112E4();

  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v23, v17);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v34 + 32))(v31 + v20[8], v24, v35);
}

uint64_t type metadata accessor for AFibBurdenPDFChartDailySumQuery()
{
  uint64_t result;

  result = qword_255ECDF18;
  if (!qword_255ECDF18)
    return swift_getSingletonMetadata();
  return result;
}

char *sub_2313518F4(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  id v17;
  id v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23141177C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = *(void **)&a2[v8];
    *(_QWORD *)&a1[v8] = v10;
    v11 = *(void **)&a2[v9];
    *(_QWORD *)&a1[v9] = v11;
    v12 = a3[7];
    v13 = &a1[v12];
    v14 = &a2[v12];
    v15 = sub_2314112F0();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    v17 = v10;
    v18 = v11;
    v16(v13, v14, v15);
    v16(&a1[a3[8]], &a2[a3[8]], v15);
    a1[a3[9]] = a2[a3[9]];
  }
  return a1;
}

uint64_t sub_2313519F4(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v8)(uint64_t, uint64_t);

  v4 = sub_23141177C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

  v5 = a1 + a2[7];
  v6 = sub_2314112F0();
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v8(v5, v6);
  return ((uint64_t (*)(uint64_t, uint64_t))v8)(a1 + a2[8], v6);
}

uint64_t sub_231351A98(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  id v16;
  id v17;

  v6 = sub_23141177C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = *(void **)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v10;
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_2314112F0();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  v16 = v9;
  v17 = v10;
  v15(v12, v13, v14);
  v15(a1 + a3[8], a2 + a3[8], v14);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_231351B6C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23141177C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  v11 = a3[6];
  v12 = *(void **)(a2 + v11);
  v13 = *(void **)(a1 + v11);
  *(_QWORD *)(a1 + v11) = v12;
  v14 = v12;

  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_2314112F0();
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24);
  v19(v16, v17, v18);
  v19(a1 + a3[8], a2 + a3[8], v18);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_231351C4C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23141177C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_2314112F0();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  v12(a1 + a3[8], a2 + a3[8], v11);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_231351D10(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23141177C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  v9 = a3[6];
  v10 = *(void **)(a1 + v9);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);

  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_2314112F0();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40);
  v15(v12, v13, v14);
  v15(a1 + a3[8], a2 + a3[8], v14);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_231351DE8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_231351DF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_23141177C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_2314112F0();
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_231351E9C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_231351EA8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_23141177C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
      return result;
    }
    v10 = sub_2314112F0();
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_231351F4C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23141177C();
  if (v1 <= 0x3F)
  {
    result = sub_2314112F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_231351FEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v3[17] = a2;
  v3[18] = v2;
  v3[16] = a1;
  sub_2312D1E78(0, &qword_255ECDF70, (void (*)(uint64_t))type metadata accessor for AFibBurdenPDFChartPoint);
  v3[19] = swift_task_alloc();
  v5 = type metadata accessor for AFibBurdenPDFChartPoint();
  v3[20] = v5;
  v3[21] = *(_QWORD *)(v5 - 8);
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  v6 = type metadata accessor for AFibBurdenPDFChartDailySumQuery();
  v3[24] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[25] = v7;
  v3[26] = *(_QWORD *)(v7 + 64);
  v3[27] = swift_task_alloc();
  v8 = sub_231411608();
  v3[28] = v8;
  v3[29] = *(_QWORD *)(v8 - 8);
  v3[30] = swift_task_alloc();
  v9 = (_QWORD *)swift_task_alloc();
  v3[31] = v9;
  *v9 = v3;
  v9[1] = sub_231352104;
  return sub_231352684(a1);
}

uint64_t sub_231352104(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 256) = a1;
  swift_task_dealloc();
  if (!v1)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_2313521C4()
{
  uint64_t v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;

  v1 = objc_msgSend(*(id *)(v0 + 256), sel_statistics);
  sub_2312D3C68(0, &qword_255ECDF80);
  v2 = sub_2314147A0();

  if (v2 >> 62)
  {
    sub_231353B18();
    sub_231412A90();
    sub_231414EFC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_231412A90();
    sub_23141507C();
    sub_231353B18();
  }
  v3 = *(_QWORD *)(v0 + 232);
  v4 = *(_QWORD *)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 224);
  v32 = *(_QWORD *)(v0 + 216);
  v33 = *(_QWORD *)(v0 + 200);
  v6 = *(_QWORD *)(v0 + 144);
  v34 = *(_QWORD *)(v0 + 208);
  v35 = *(void **)(v0 + 136);
  swift_bridgeObjectRelease();
  v36 = (id)objc_opt_self();
  sub_231353B18();
  v7 = (void *)sub_231414788();
  swift_bridgeObjectRelease();
  sub_231411230();
  v8 = (void *)sub_2314115C0();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v5);
  v9 = (void *)sub_2314112CC();
  v10 = (void *)sub_2314116F8();
  sub_231353B6C(v6, v32);
  v11 = (*(unsigned __int8 *)(v33 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  v12 = swift_allocObject();
  sub_2312EE5FC(v32, v12 + v11, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartDailySumQuery);
  *(_QWORD *)(v12 + ((v34 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v35;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_231353CA0;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v0 + 48) = sub_231353D3C;
  *(_QWORD *)(v0 + 56) = v13;
  *(_QWORD *)(v0 + 16) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_231353748;
  *(_QWORD *)(v0 + 40) = &unk_250023BE0;
  v14 = _Block_copy((const void *)(v0 + 16));
  v15 = v35;
  swift_release();
  v16 = objc_msgSend(v36, sel_arrayByCoalescingObjects_startDate_intervalComponents_calendar_combiningBlock_, v7, v8, v9, v10, v14);
  _Block_release(v14);

  if (!v16)
  {
    v30 = *(void **)(v0 + 256);
LABEL_17:
    v21 = MEMORY[0x24BEE4AF8];
    goto LABEL_18;
  }
  v17 = sub_2314147A0();

  v18 = *(_QWORD *)(v17 + 16);
  if (!v18)
  {
    v30 = *(void **)(v0 + 256);
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  v19 = *(_QWORD *)(v0 + 168);
  v20 = v17 + 32;
  sub_231412A90();
  v21 = MEMORY[0x24BEE4AF8];
  do
  {
    v22 = *(_QWORD *)(v0 + 152);
    v23 = *(_QWORD *)(v0 + 160);
    sub_2313046A8(v20, v0 + 64);
    sub_2313046A8(v0 + 64, v0 + 96);
    v24 = swift_dynamicCast();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56))(v22, v24 ^ 1u, 1, v23);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 64);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v22, 1, v23) == 1)
    {
      sub_2312F1A20(*(_QWORD *)(v0 + 152), &qword_255ECDF70, (void (*)(uint64_t))type metadata accessor for AFibBurdenPDFChartPoint);
    }
    else
    {
      v26 = *(_QWORD *)(v0 + 176);
      v25 = *(_QWORD *)(v0 + 184);
      sub_2312EE5FC(*(_QWORD *)(v0 + 152), v25, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartPoint);
      sub_2312EE5FC(v25, v26, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartPoint);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v21 = sub_2312CDBA0(0, *(_QWORD *)(v21 + 16) + 1, 1, v21);
      v28 = *(_QWORD *)(v21 + 16);
      v27 = *(_QWORD *)(v21 + 24);
      if (v28 >= v27 >> 1)
        v21 = sub_2312CDBA0(v27 > 1, v28 + 1, 1, v21);
      v29 = *(_QWORD *)(v0 + 176);
      *(_QWORD *)(v21 + 16) = v28 + 1;
      sub_2312EE5FC(v29, v21+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(_QWORD *)(v19 + 72) * v28, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartPoint);
    }
    v20 += 32;
    --v18;
  }
  while (v18);
  v30 = *(void **)(v0 + 256);
  swift_bridgeObjectRelease_n();
LABEL_18:

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(unint64_t))(v0 + 8))(v21);
}

uint64_t sub_231352684(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[17] = a1;
  v2[18] = v1;
  v3 = type metadata accessor for AFibBurdenPDFChartDailySumQuery();
  v2[19] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[20] = v4;
  v2[21] = *(_QWORD *)(v4 + 64);
  v2[22] = swift_task_alloc();
  v5 = sub_231411608();
  v2[23] = v5;
  v2[24] = *(_QWORD *)(v5 - 8);
  v2[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_231352710()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void (*v9)(uint64_t, uint64_t);
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  id v17;

  v2 = v0[24];
  v1 = v0[25];
  v3 = v0[23];
  v5 = v0[18];
  v4 = v0[19];
  v6 = *(void **)(v5 + *(int *)(v4 + 24));
  v7 = (void *)objc_opt_self();
  v17 = v6;
  sub_231411230();
  v8 = (void *)sub_2314115C0();
  v9 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v9(v1, v3);
  sub_23141120C();
  v10 = (void *)sub_2314115C0();
  v9(v1, v3);
  v11 = objc_msgSend(v7, sel_predicateForSamplesWithStartDate_endDate_options_, v8, v10, 0);

  if (*(_BYTE *)(v5 + *(int *)(v4 + 36)))
    v12 = 64;
  else
    v12 = 16;
  sub_23141120C();
  v13 = objc_allocWithZone(MEMORY[0x24BDD4000]);
  v14 = (void *)sub_2314115C0();
  v15 = (void *)sub_2314112CC();
  v0[26] = objc_msgSend(v13, sel_initWithSampleType_samplePredicate_options_anchorDate_intervalComponents_, v17, v11, v12, v14, v15);

  v9(v1, v3);
  return swift_task_switch();
}

uint64_t sub_2313528AC()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;

  v1 = v0;
  v2 = (void *)v0[26];
  v4 = v1[21];
  v3 = v1[22];
  v5 = v1[19];
  v6 = v1[20];
  v7 = v1[18];
  v1[7] = v1 + 16;
  v1[2] = v1;
  v1[3] = sub_231352A04;
  v8 = swift_continuation_init();
  sub_231353B6C(v7, v3);
  v9 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v10 = (v4 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = swift_allocObject();
  sub_2312EE5FC(v3, v11 + v9, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartDailySumQuery);
  *(_QWORD *)(v11 + v10) = v8;
  v1[10] = MEMORY[0x24BDAC760];
  v1 += 10;
  v1[4] = sub_231353F24;
  v1[5] = v11;
  v1[1] = 1107296256;
  v1[2] = sub_23134E7A4;
  v1[3] = &unk_250023C30;
  v12 = _Block_copy(v1);
  swift_release();
  objc_msgSend(v2, sel_setInitialResultsHandler_, v12);
  _Block_release(v12);
  objc_msgSend(*(id *)(v7 + *(int *)(v5 + 20)), sel_executeQuery_, v2);
  return swift_continuation_await();
}

uint64_t sub_231352A04()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 216) = v2;
  if (v2)
    swift_willThrow();
  else
    *(_QWORD *)(v1 + 224) = *(_QWORD *)(v1 + 128);
  return swift_task_switch();
}

uint64_t sub_231352A78()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 224));
}

uint64_t sub_231352AC4()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_231352B0C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  unsigned int (*v36)(char *, uint64_t, uint64_t);
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  void (*v63)(char *, char *, char *);
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  void *v69;
  uint64_t v70;
  id v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  void (*v80)(uint64_t, char *);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  NSObject *v84;
  os_log_type_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  id v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  void (*v96)(char *, char *);
  char *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  NSObject *v104;
  os_log_type_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  char *v117;
  void (*v118)(char *, char *);
  char *v119;
  char *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135[2];

  v123 = a5;
  v133 = (char *)a4;
  v130 = a3;
  v128 = a1;
  v8 = sub_231411248();
  v124 = *(_QWORD *)(v8 - 8);
  v125 = v8;
  v9 = MEMORY[0x24BDAC7A8](v8);
  v122 = (char *)&v120 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v126 = (char *)&v120 - v11;
  v129 = type metadata accessor for AFibBurdenPDFChartDailySumQuery();
  v12 = MEMORY[0x24BDAC7A8](v129);
  v131 = (char *)&v120 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v121 = (uint64_t)&v120 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v127 = (uint64_t)&v120 - v16;
  sub_2312D1E78(0, (unint64_t *)&qword_25415D500, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v120 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v120 - v21;
  v23 = sub_231411608();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v120 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v25);
  v30 = (char *)&v120 - v29;
  v31 = MEMORY[0x24BDAC7A8](v28);
  v33 = (char *)&v120 - v32;
  MEMORY[0x24BDAC7A8](v31);
  v35 = (char *)&v120 - v34;
  sub_2312D3870(a2, (uint64_t)v22);
  v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  if (v36(v22, 1, v23) == 1)
  {
    v20 = v22;
LABEL_5:
    sub_2312F1A20((uint64_t)v20, (unint64_t *)&qword_25415D500, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    v39 = (uint64_t)v133;
    v40 = (uint64_t)v131;
    if (qword_25415C170 != -1)
      swift_once();
    v41 = sub_231413780();
    sub_2312CE3B8(v41, (uint64_t)qword_254162F00);
    sub_231353B6C(v39, v40);
    v42 = sub_231413768();
    v43 = sub_231414974();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = swift_slowAlloc();
      v45 = swift_slowAlloc();
      *(_DWORD *)v44 = 136446466;
      v46 = v129;
      v134 = v129;
      v135[0] = v45;
      sub_231353D98();
      v132 = a6;
      v47 = sub_2314146E0();
      v134 = sub_23133180C(v47, v48, v135);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 12) = 2080;
      v49 = objc_msgSend(*(id *)(v40 + *(int *)(v46 + 24)), sel_description);
      v50 = v40;
      v51 = sub_2314146BC();
      v53 = v52;

      v134 = sub_23133180C(v51, v53, v135);
      a6 = v132;
      sub_231414CBC();
      swift_bridgeObjectRelease();
      sub_231353D5C(v50);
      _os_log_impl(&dword_2312C8000, v42, v43, "[%{public}s] Missing start/end date when computing weekly average for %s", (uint8_t *)v44, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v45, -1, -1);
      MEMORY[0x2348DE308](v44, -1, -1);
    }
    else
    {
      sub_231353D5C(v40);
    }

    v54 = type metadata accessor for AFibBurdenPDFChartPoint();
    v55 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56);
    v56 = a6;
    return v55(v56, 1, 1, v54);
  }
  v132 = a6;
  v37 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
  v37(v35, v22, v23);
  sub_2312D3870(v130, (uint64_t)v20);
  v38 = (char *)v23;
  if (v36(v20, 1, v23) == 1)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v35, v23);
    a6 = v132;
    goto LABEL_5;
  }
  v58 = v24;
  v120 = v35;
  v59 = (uint64_t)v33;
  v37(v33, v20, (uint64_t)v38);
  if (!v128 || (v60 = sub_2312D3430(v128)) == 0)
  {
    if (qword_25415C170 != -1)
      swift_once();
    v82 = sub_231413780();
    sub_2312CE3B8(v82, (uint64_t)qword_254162F00);
    v83 = v127;
    sub_231353B6C((uint64_t)v133, v127);
    v84 = sub_231413768();
    v85 = sub_231414974();
    if (os_log_type_enabled(v84, v85))
    {
      v86 = swift_slowAlloc();
      v87 = swift_slowAlloc();
      v130 = v87;
      *(_DWORD *)v86 = 136446466;
      v131 = v38;
      v88 = v129;
      v134 = v129;
      v135[0] = v87;
      sub_231353D98();
      v89 = sub_2314146E0();
      v134 = sub_23133180C(v89, v90, v135);
      v133 = (char *)v59;
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v86 + 12) = 2080;
      v91 = objc_msgSend(*(id *)(v83 + *(int *)(v88 + 24)), sel_description);
      v92 = sub_2314146BC();
      v94 = v93;

      v134 = sub_23133180C(v92, v94, v135);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      sub_231353D5C(v83);
      _os_log_impl(&dword_2312C8000, v84, v85, "[%{public}s] Missing statistics when computing weekly average for %s", (uint8_t *)v86, 0x16u);
      v95 = v130;
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v95, -1, -1);
      MEMORY[0x2348DE308](v86, -1, -1);

      v96 = *(void (**)(char *, char *))(v58 + 8);
      v97 = v131;
      v96(v133, v131);
      v98 = v120;
      v99 = v97;
    }
    else
    {

      sub_231353D5C(v83);
      v96 = *(void (**)(char *, char *))(v58 + 8);
      v96((char *)v59, v38);
      v98 = v120;
      v99 = v38;
    }
    v96(v98, v99);
    v100 = v132;
    v54 = type metadata accessor for AFibBurdenPDFChartPoint();
    v55 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56);
    v56 = v100;
    return v55(v56, 1, 1, v54);
  }
  v61 = v60;
  v62 = v58;
  v63 = *(void (**)(char *, char *, char *))(v58 + 16);
  v64 = v120;
  v63(v30, v120, v38);
  v63(v27, (char *)v59, v38);
  v65 = v126;
  v66 = sub_231411218();
  MEMORY[0x24BDAC7A8](v66);
  v67 = (uint64_t)v133;
  *(&v120 - 2) = v133;
  sub_2313510BC((void (*)(uint64_t *__return_ptr, id *))sub_231353DD0, (uint64_t)(&v120 - 4), v61);
  swift_bridgeObjectRelease();
  v68 = (void *)objc_opt_self();
  sub_2312D3C68(0, &qword_255ECDFA0);
  v69 = (void *)sub_231414788();
  swift_bridgeObjectRelease();
  v70 = v123;
  v71 = objc_msgSend(v68, sel_averageSumFromQuantities_unit_, v69, v123);

  v72 = v38;
  v73 = v132;
  if (!v71)
  {
    v131 = v72;
    if (qword_25415C170 != -1)
      swift_once();
    v101 = sub_231413780();
    sub_2312CE3B8(v101, (uint64_t)qword_254162F00);
    v102 = v67;
    v103 = v121;
    sub_231353B6C(v102, v121);
    v104 = sub_231413768();
    v105 = sub_231414974();
    if (os_log_type_enabled(v104, v105))
    {
      v106 = swift_slowAlloc();
      v107 = swift_slowAlloc();
      *(_DWORD *)v106 = 136446466;
      v108 = v129;
      v134 = v129;
      v135[0] = v107;
      sub_231353D98();
      v130 = v62;
      v109 = sub_2314146E0();
      v134 = sub_23133180C(v109, v110, v135);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v106 + 12) = 2080;
      v111 = objc_msgSend(*(id *)(v103 + *(int *)(v108 + 24)), sel_description);
      v112 = sub_2314146BC();
      v133 = (char *)v59;
      v113 = v112;
      v114 = v103;
      v116 = v115;

      v134 = sub_23133180C(v113, v116, v135);
      v73 = v132;
      sub_231414CBC();
      swift_bridgeObjectRelease();
      sub_231353D5C(v114);
      _os_log_impl(&dword_2312C8000, v104, v105, "[%{public}s] Could not compute average sum for %s", (uint8_t *)v106, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v107, -1, -1);
      MEMORY[0x2348DE308](v106, -1, -1);

      (*(void (**)(char *, uint64_t))(v124 + 8))(v126, v125);
      v117 = v131;
      v118 = *(void (**)(char *, char *))(v130 + 8);
      v118(v133, v131);
      v119 = v120;
    }
    else
    {

      sub_231353D5C(v103);
      (*(void (**)(char *, uint64_t))(v124 + 8))(v65, v125);
      v118 = *(void (**)(char *, char *))(v62 + 8);
      v117 = v131;
      v118((char *)v59, v131);
      v119 = v64;
    }
    v118(v119, v117);
    v54 = type metadata accessor for AFibBurdenPDFChartPoint();
    v55 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56);
    v56 = v73;
    return v55(v56, 1, 1, v54);
  }
  objc_msgSend(v71, sel_doubleValueForUnit_, v70);
  v75 = v74;
  v76 = v65;
  v78 = v124;
  v77 = v125;
  v79 = v122;
  (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v122, v76, v125);

  (*(void (**)(char *, uint64_t))(v78 + 8))(v76, v77);
  v80 = *(void (**)(uint64_t, char *))(v62 + 8);
  v80(v59, v72);
  v80((uint64_t)v64, v72);
  (*(void (**)(uint64_t, char *, uint64_t))(v78 + 32))(v73, v79, v77);
  v81 = type metadata accessor for AFibBurdenPDFChartPoint();
  *(_QWORD *)(v73 + *(int *)(v81 + 20)) = v75;
  *(_QWORD *)(v73 + *(int *)(v81 + 24)) = MEMORY[0x24BEE4B08];
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v73, 0, 1, v81);
}

uint64_t sub_231353650@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(uint64_t, uint64_t, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t *v15;
  uint64_t v16;

  sub_2312D1E78(0, &qword_255ECDF70, (void (*)(uint64_t))type metadata accessor for AFibBurdenPDFChartPoint);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v16 - v11;
  a4(a1, a2, a3);
  v13 = type metadata accessor for AFibBurdenPDFChartPoint();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13);
  if ((_DWORD)result == 1)
  {
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
  }
  else
  {
    *(_QWORD *)(a5 + 24) = v13;
    v15 = sub_2312DFCA0((uint64_t *)a5);
    return sub_2312EE5FC((uint64_t)v12, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartPoint);
  }
  return result;
}

id sub_231353748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void (*v14)(_QWORD *__return_ptr, uint64_t, char *, char *);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void *v25;
  _QWORD v27[3];
  uint64_t v28;

  sub_2312D1E78(0, (unint64_t *)&qword_25415D500, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v27 - v12;
  v14 = *(void (**)(_QWORD *__return_ptr, uint64_t, char *, char *))(a1 + 32);
  if (a2)
  {
    sub_231353B18();
    a2 = sub_2314147A0();
  }
  if (a3)
  {
    sub_2314115D8();
    v15 = sub_231411608();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v13, 0, 1, v15);
  }
  else
  {
    v16 = sub_231411608();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v13, 1, 1, v16);
  }
  if (a4)
  {
    sub_2314115D8();
    v17 = sub_231411608();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v11, 0, 1, v17);
  }
  else
  {
    v18 = sub_231411608();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v11, 1, 1, v18);
  }
  swift_retain();
  v14(v27, a2, v13, v11);
  swift_release();
  swift_bridgeObjectRelease();
  v19 = (void (*)(uint64_t))MEMORY[0x24BDCE900];
  sub_2312F1A20((uint64_t)v11, (unint64_t *)&qword_25415D500, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  sub_2312F1A20((uint64_t)v13, (unint64_t *)&qword_25415D500, v19);
  v20 = v28;
  if (!v28)
    return 0;
  v21 = sub_2312CEA5C(v27, v28);
  v22 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)v27 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v22 + 16))(v24);
  v25 = (void *)sub_231415064();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v20);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v27);
  return v25;
}

uint64_t sub_2313539A4(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  id v8;
  void *v10;
  _QWORD *v11;
  id v12;
  void *v13;

  objc_msgSend(*(id *)(a4 + *(int *)(type metadata accessor for AFibBurdenPDFChartDailySumQuery() + 20)), sel_stopQuery_, a1);
  if (a2)
  {
    **(_QWORD **)(*(_QWORD *)(a5 + 64) + 40) = a2;
    v8 = a2;
    return swift_continuation_throwingResume();
  }
  else
  {
    if (a3)
    {
      v10 = a3;
    }
    else
    {
      type metadata accessor for HKError(0);
      sub_2313FA2D4(MEMORY[0x24BEE4AF8]);
      sub_231353F8C();
      sub_2314113EC();
      v10 = v13;
    }
    sub_2312D3C14();
    swift_allocError();
    *v11 = v10;
    v12 = a3;
    return swift_continuation_throwingResumeWithError();
  }
}

uint64_t sub_231353ABC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2312DBC38;
  return sub_231351FEC(a1, a2);
}

unint64_t sub_231353B18()
{
  unint64_t result;

  result = qword_255ECDF88;
  if (!qword_255ECDF88)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255ECDF88);
  }
  return result;
}

uint64_t sub_231353B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AFibBurdenPDFChartDailySumQuery();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_231353BB0()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  v1 = (int *)type metadata accessor for AFibBurdenPDFChartDailySumQuery();
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = v0 + v3;
  v6 = sub_23141177C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);

  v7 = v5 + v1[7];
  v8 = sub_2314112F0();
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v5 + v1[8], v8);

  return swift_deallocObject();
}

uint64_t sub_231353CA0@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;

  v9 = *(_QWORD *)(type metadata accessor for AFibBurdenPDFChartDailySumQuery() - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  return sub_231352B0C(a1, a2, a3, v4 + v10, *(_QWORD *)(v4 + ((*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFF8)), a4);
}

uint64_t sub_231353D18()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_231353D3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;

  return sub_231353650(a1, a2, a3, *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16), a4);
}

uint64_t sub_231353D44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_231353D54()
{
  return swift_release();
}

uint64_t sub_231353D5C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AFibBurdenPDFChartDailySumQuery();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_231353D98()
{
  unint64_t result;

  result = qword_255ECDF98;
  if (!qword_255ECDF98)
  {
    type metadata accessor for AFibBurdenPDFChartDailySumQuery();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255ECDF98);
  }
  return result;
}

id sub_231353DD0@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  void *v5;
  char **v6;
  id result;

  v4 = *(_QWORD *)(v2 + 16);
  v5 = *a1;
  if (*(_BYTE *)(v4 + *(int *)(type metadata accessor for AFibBurdenPDFChartDailySumQuery() + 36)))
    v6 = &selRef_duration;
  else
    v6 = &selRef_sumQuantity;
  result = objc_msgSend(v5, *v6);
  *a2 = result;
  return result;
}

uint64_t sub_231353E44()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);

  v1 = (int *)type metadata accessor for AFibBurdenPDFChartDailySumQuery();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_23141177C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  v5 = v3 + v1[7];
  v6 = sub_2314112F0();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(v3 + v1[8], v6);
  return swift_deallocObject();
}

uint64_t sub_231353F24(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;

  v7 = *(_QWORD *)(type metadata accessor for AFibBurdenPDFChartDailySumQuery() - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return sub_2313539A4(a1, a2, a3, v3 + v8, *(_QWORD *)(v3 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8)));
}

unint64_t sub_231353F8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ECAE20;
  if (!qword_255ECAE20)
  {
    type metadata accessor for HKError(255);
    result = MEMORY[0x2348DE248](&unk_231417B58, v1);
    atomic_store(result, (unint64_t *)&qword_255ECAE20);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AFibBurdenPDFChartDailySumQuery.AggregationStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_231354020 + 4 * byte_23141C715[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_231354054 + 4 * byte_23141C710[v4]))();
}

uint64_t sub_231354054(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23135405C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x231354064);
  return result;
}

uint64_t sub_231354070(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x231354078);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23135407C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_231354084(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenPDFChartDailySumQuery.AggregationStyle()
{
  return &type metadata for AFibBurdenPDFChartDailySumQuery.AggregationStyle;
}

unint64_t sub_2313540A4()
{
  unint64_t result;

  result = qword_255ECDFA8;
  if (!qword_255ECDFA8)
  {
    result = MEMORY[0x2348DE248](&unk_23141C7C4, &type metadata for AFibBurdenPDFChartDailySumQuery.AggregationStyle);
    atomic_store(result, (unint64_t *)&qword_255ECDFA8);
  }
  return result;
}

uint64_t type metadata accessor for CardioFitnessFeatureStatusActionHandler(uint64_t a1)
{
  return sub_2312F19EC(a1, (uint64_t *)&unk_25415C010);
}

uint64_t sub_231354104()
{
  return swift_initClassMetadata2();
}

uint64_t sub_231354140(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_231354178 + 4 * byte_23141C7F0[a1]))(0xD000000000000011, 0x800000023142BD40);
}

uint64_t sub_231354178(uint64_t a1)
{
  return a1 + 5;
}

void sub_2313541D0(_QWORD *a1)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  _QWORD v24[19];
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;

  v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520];
  sub_23130589C(0, &qword_255ECE180, (uint64_t (*)(void))sub_2313589A8, (uint64_t)&type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.OpenKnowledgeBaseArticleCodingKeys, MEMORY[0x24BEE3520]);
  v24[17] = *(_QWORD *)(v3 - 8);
  v24[18] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v24[16] = (char *)v24 - v4;
  sub_23130589C(0, &qword_255ECE188, (uint64_t (*)(void))sub_2313589EC, (uint64_t)&type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.DeepLinkToHeartRateSettingsCodingKeys, v2);
  v24[13] = v5;
  v24[11] = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v24[10] = (char *)v24 - v6;
  sub_23130589C(0, &qword_255ECE190, (uint64_t (*)(void))sub_231358A30, (uint64_t)&type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PushEnabledFeatureSettingsCodingKeys, v2);
  v24[14] = *(_QWORD *)(v7 - 8);
  v24[15] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v24[12] = (char *)v24 - v8;
  sub_23130589C(0, &qword_255ECE198, (uint64_t (*)(void))sub_231358A74, (uint64_t)&type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PresentHealthDetailsCodingKeys, v2);
  v24[7] = v9;
  v24[5] = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v24[2] = (char *)v24 - v10;
  sub_23130589C(0, &qword_255ECE1A0, (uint64_t (*)(void))sub_231358AB8, (uint64_t)&type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PresentFeatureSettingsCodingKeys, v2);
  v24[8] = *(_QWORD *)(v11 - 8);
  v24[9] = v11;
  MEMORY[0x24BDAC7A8](v11);
  v24[6] = (char *)v24 - v12;
  v25 = type metadata accessor for CardioFitnessHealthChecklistSettingsState();
  v13 = MEMORY[0x24BDAC7A8](v25);
  v24[3] = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v24[4] = (char *)v24 - v15;
  sub_23130589C(0, &qword_255ECE1A8, (uint64_t (*)(void))sub_231358AFC, (uint64_t)&type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PresentOnboardingCodingKeys, v2);
  v24[1] = v16;
  MEMORY[0x24BDAC7A8](v16);
  v17 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23130589C(0, &qword_255ECE1B0, (uint64_t (*)(void))sub_231358B40, (uint64_t)&type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.CodingKeys, v2);
  v28 = v20;
  v26 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)v24 - v21;
  sub_2312CEA5C(a1, a1[3]);
  sub_231358B40();
  v27 = v22;
  sub_231415178();
  sub_2312D6C20(v29, (uint64_t)v19, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  v23 = (char *)sub_231354568 + 4 * byte_23141C7F6[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_231354568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v1 - 256);
  sub_2312EE5FC(v0, v2, (uint64_t (*)(_QWORD))type metadata accessor for CardioFitnessHealthChecklistSettingsState);
  *(_BYTE *)(v1 - 69) = 1;
  sub_231358AB8();
  v3 = *(_QWORD *)(v1 - 240);
  v5 = *(_QWORD *)(v1 - 120);
  v4 = *(_QWORD *)(v1 - 112);
  sub_231414FEC();
  sub_2312CCC24(&qword_255ECE1B8, (uint64_t (*)(uint64_t))type metadata accessor for CardioFitnessHealthChecklistSettingsState, (uint64_t)&unk_23142289C);
  v6 = *(_QWORD *)(v1 - 216);
  sub_231415034();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 224) + 8))(v3, v6);
  sub_2312CEBD4(v2, (uint64_t (*)(_QWORD))type metadata accessor for CardioFitnessHealthChecklistSettingsState);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 128) + 8))(v5, v4);
}

uint64_t sub_231354824@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  _QWORD v36[19];
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;

  v36[18] = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE33E0];
  sub_23130589C(0, &qword_255ECE108, (uint64_t (*)(void))sub_2313589A8, (uint64_t)&type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.OpenKnowledgeBaseArticleCodingKeys, MEMORY[0x24BEE33E0]);
  v40 = v4;
  v36[12] = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)v36 - v5;
  sub_23130589C(0, &qword_255ECE118, (uint64_t (*)(void))sub_2313589EC, (uint64_t)&type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.DeepLinkToHeartRateSettingsCodingKeys, v3);
  v36[8] = *(_QWORD *)(v6 - 8);
  v36[9] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v36[16] = (char *)v36 - v7;
  sub_23130589C(0, &qword_255ECE128, (uint64_t (*)(void))sub_231358A30, (uint64_t)&type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PushEnabledFeatureSettingsCodingKeys, v3);
  v36[10] = *(_QWORD *)(v8 - 8);
  v36[11] = v8;
  MEMORY[0x24BDAC7A8](v8);
  v36[17] = (char *)v36 - v9;
  sub_23130589C(0, &qword_255ECE138, (uint64_t (*)(void))sub_231358A74, (uint64_t)&type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PresentHealthDetailsCodingKeys, v3);
  v36[4] = *(_QWORD *)(v10 - 8);
  v36[5] = v10;
  MEMORY[0x24BDAC7A8](v10);
  v36[14] = (char *)v36 - v11;
  sub_23130589C(0, &qword_255ECE148, (uint64_t (*)(void))sub_231358AB8, (uint64_t)&type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PresentFeatureSettingsCodingKeys, v3);
  v36[6] = *(_QWORD *)(v12 - 8);
  v36[7] = v12;
  MEMORY[0x24BDAC7A8](v12);
  v36[15] = (char *)v36 - v13;
  sub_23130589C(0, &qword_255ECE158, (uint64_t (*)(void))sub_231358AFC, (uint64_t)&type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PresentOnboardingCodingKeys, v3);
  v36[3] = v14;
  v36[2] = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v36[13] = (char *)v36 - v15;
  sub_23130589C(0, &qword_255ECE168, (uint64_t (*)(void))sub_231358B40, (uint64_t)&type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.CodingKeys, v3);
  v17 = v16;
  v37 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v36 - v18;
  v20 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)v36 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v21);
  v26 = (char *)v36 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v27 = a1[3];
  v41 = a1;
  sub_2312CEA5C(a1, v27);
  sub_231358B40();
  v38 = v19;
  v28 = v42;
  sub_23141516C();
  if (v28)
  {
    v29 = (uint64_t)v41;
  }
  else
  {
    v36[0] = v26;
    v36[1] = v23;
    v42 = 0;
    v30 = v38;
    v31 = sub_231414FE0();
    if (*(_QWORD *)(v31 + 16) == 1)
      __asm { BR              X10 }
    v32 = sub_231414E6C();
    swift_allocError();
    v34 = v33;
    sub_2313057F4();
    *v34 = v20;
    sub_231414F8C();
    sub_231414E54();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v34, *MEMORY[0x24BEE26D0], v32);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v30, v17);
    v29 = (uint64_t)v41;
  }
  return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v29);
}

uint64_t sub_231355120()
{
  unsigned __int8 *v0;

  return sub_231354140(*v0);
}

uint64_t sub_231355128@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_231359A68(a1, a2);
  *a3 = result;
  return result;
}

void sub_23135514C(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_231355158()
{
  sub_231358B40();
  return sub_231415190();
}

uint64_t sub_231355180()
{
  sub_231358B40();
  return sub_23141519C();
}

uint64_t sub_2313551A8()
{
  sub_2313589EC();
  return sub_231415190();
}

uint64_t sub_2313551D0()
{
  sub_2313589EC();
  return sub_23141519C();
}

uint64_t sub_2313551F8()
{
  sub_2313589A8();
  return sub_231415190();
}

uint64_t sub_231355220()
{
  sub_2313589A8();
  return sub_23141519C();
}

uint64_t sub_231355248()
{
  return 12383;
}

uint64_t sub_231355258()
{
  sub_231358AB8();
  return sub_231415190();
}

uint64_t sub_231355280()
{
  sub_231358AB8();
  return sub_23141519C();
}

uint64_t sub_2313552A8()
{
  sub_231358A74();
  return sub_231415190();
}

uint64_t sub_2313552D0()
{
  sub_231358A74();
  return sub_23141519C();
}

uint64_t sub_2313552F8()
{
  sub_231358AFC();
  return sub_231415190();
}

uint64_t sub_231355320()
{
  sub_231358AFC();
  return sub_23141519C();
}

uint64_t sub_231355348@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_231415070();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2313553C4()
{
  sub_231358A30();
  return sub_231415190();
}

uint64_t sub_2313553EC()
{
  sub_231358A30();
  return sub_23141519C();
}

uint64_t sub_231355414@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_231354824(a1, a2);
}

void sub_231355428(_QWORD *a1)
{
  sub_2313541D0(a1);
}

uint64_t sub_231355440@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v18 = a2;
  sub_2312D1E78(0, &qword_255ECDFF0, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  MEMORY[0x24BDAC7A8](v3);
  v19 = (char *)&v17 - v4;
  sub_23130589C(0, &qword_255ECDFF8, (uint64_t (*)(void))sub_231356CEC, (uint64_t)&type metadata for CardioFitnessFeatureStatusActionHandlerUserData.CodingKeys, MEMORY[0x24BEE33E0]);
  v20 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - v7;
  v9 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  sub_2312CEA5C(a1, a1[3]);
  sub_231356CEC();
  v13 = v21;
  sub_23141516C();
  if (!v13)
  {
    v14 = v18;
    sub_2312CCC24(&qword_255ECE008, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction, (uint64_t)&unk_23141CAF0);
    v15 = (uint64_t)v19;
    sub_231414FB0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v20);
    sub_231356D44(v15, (uint64_t)v11);
    sub_2312D6C20((uint64_t)v11, v14, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData);
  }
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)a1);
  return sub_2312CEBD4((uint64_t)v11, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData);
}

uint64_t sub_231355680()
{
  return 0x6F69746341706174;
}

uint64_t sub_23135569C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6F69746341706174 && a2 == 0xE90000000000006ELL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_231415070();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23135573C()
{
  sub_231356CEC();
  return sub_231415190();
}

uint64_t sub_231355764()
{
  sub_231356CEC();
  return sub_23141519C();
}

uint64_t sub_23135578C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_231355440(a1, a2);
}

uint64_t sub_2313557A0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_23130589C(0, &qword_255ECE010, (uint64_t (*)(void))sub_231356CEC, (uint64_t)&type metadata for CardioFitnessFeatureStatusActionHandlerUserData.CodingKeys, MEMORY[0x24BEE3520]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v8 - v5;
  sub_2312CEA5C(a1, a1[3]);
  sub_231356CEC();
  sub_231415178();
  type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(0);
  sub_2312CCC24(&qword_255ECE018, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction, (uint64_t)&unk_23141CAC8);
  sub_231415010();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_2313558D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  void *v58;
  void *v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t ObjectType;
  uint64_t v87[4];
  uint64_t v88;

  ObjectType = swift_getObjectType();
  v1 = sub_231411CF8();
  v73 = *(_QWORD *)(v1 - 8);
  v74 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v72 = (char *)&v68 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D1E78(0, (unint64_t *)&qword_255ED1210, (void (*)(uint64_t))MEMORY[0x24BEE6990]);
  MEMORY[0x24BDAC7A8](v3);
  v75 = (char *)&v68 - v4;
  v5 = type metadata accessor for CardioFitnessHealthChecklistSettingsState();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v76 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v71 = (char *)&v68 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v78 = (char *)&v68 - v10;
  v11 = sub_2314120AC();
  v81 = *(_QWORD *)(v11 - 8);
  v82 = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v77 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v85 = (char *)&v68 - v14;
  sub_2312D1E78(0, &qword_255ECDFF0, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  v80 = v15;
  v16 = MEMORY[0x24BDAC7A8](v15);
  v83 = (uint64_t)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v79 = (uint64_t)&v68 - v18;
  v19 = sub_231412F64();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D1E78(0, &qword_255ECE020, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v68 - v24;
  v26 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v68 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&v68 - v31;
  v84 = v0;
  sub_231413210();
  sub_2312CCC24(&qword_255ECE028, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData, (uint64_t)&unk_23141C89C);
  sub_2312CCC24(&qword_255ECE030, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData, (uint64_t)&unk_23141C874);
  sub_231412F58();
  v33 = *(void (**)(char *, uint64_t))(v20 + 8);
  v33(v22, v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
  {
    sub_2312F1A20((uint64_t)v25, &qword_255ECE020, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData);
    if (qword_25415DF98 != -1)
      swift_once();
    v34 = sub_231413780();
    sub_2312CE3B8(v34, (uint64_t)qword_254162FF0);
    v35 = sub_231413768();
    v36 = sub_231414980();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      v38 = swift_slowAlloc();
      v87[0] = v38;
      *(_DWORD *)v37 = 136315138;
      v39 = sub_2314151A8();
      v88 = sub_23133180C(v39, v40, v87);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v35, v36, "[%s] Could not access action handler user data!", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v38, -1, -1);
      MEMORY[0x2348DE308](v37, -1, -1);
    }

  }
  else
  {
    sub_2312EE5FC((uint64_t)v25, (uint64_t)v32, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData);
    v41 = (uint64_t)v32;
    if (qword_25415DF98 != -1)
      swift_once();
    v42 = sub_231413780();
    v43 = sub_2312CE3B8(v42, (uint64_t)qword_254162FF0);
    sub_2312D6C20((uint64_t)v32, (uint64_t)v30, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData);
    v70 = v43;
    v44 = sub_231413768();
    v45 = sub_23141498C();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = swift_slowAlloc();
      v68 = swift_slowAlloc();
      v87[0] = v68;
      *(_DWORD *)v46 = 136315394;
      v47 = sub_2314151A8();
      v69 = v33;
      v88 = sub_23133180C(v47, v48, v87);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v46 + 12) = 2080;
      sub_231356D98((uint64_t)v30, v79);
      v49 = sub_2314146E0();
      v88 = sub_23133180C(v49, v50, v87);
      v33 = v69;
      sub_231414CBC();
      swift_bridgeObjectRelease();
      sub_2312CEBD4((uint64_t)v30, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData);
      _os_log_impl(&dword_2312C8000, v44, v45, "[%s] Did select cell with tap action %s", (uint8_t *)v46, 0x16u);
      v51 = v68;
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v51, -1, -1);
      MEMORY[0x2348DE308](v46, -1, -1);
    }
    else
    {
      sub_2312CEBD4((uint64_t)v30, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData);
    }

    v52 = v85;
    sub_231413210();
    v53 = sub_231412F4C();
    v33(v22, v19);
    sub_231413210();
    sub_231412F40();
    v33(v22, v19);
    sub_2312CEA5C(v87, v87[3]);
    v54 = sub_231412EE0();
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v87);
    sub_231413210();
    sub_231411D88();
    v33(v22, v19);
    v55 = v83;
    sub_231356D98(v41, v83);
    v56 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 48))(v55, 1, v56) != 1)
    {
      v67 = (char *)&loc_23135616C + dword_2313565F4[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v57 = v52;
    v58 = (void *)v53;
    v59 = (void *)v54;
    v60 = sub_231413768();
    v61 = sub_231414974();
    if (os_log_type_enabled(v60, v61))
    {
      v62 = (uint8_t *)swift_slowAlloc();
      v63 = swift_slowAlloc();
      v87[0] = v63;
      *(_DWORD *)v62 = 136315138;
      v64 = sub_2314151A8();
      ObjectType = v41;
      v88 = sub_23133180C(v64, v65, v87);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v60, v61, "[%s] No tap action given (likely due to error on generation side, doing nothing", v62, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v63, -1, -1);
      MEMORY[0x2348DE308](v62, -1, -1);

      (*(void (**)(char *, uint64_t))(v81 + 8))(v57, v82);
      v66 = ObjectType;
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v81 + 8))(v57, v82);
      v66 = v41;
    }
    sub_2312CEBD4(v66, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData);
  }
}

uint64_t sub_23135660C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 120) = a4;
  *(_QWORD *)(v5 + 128) = a5;
  return swift_task_switch();
}

uint64_t sub_231356624()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = objc_msgSend(*(id *)(v0 + 120), sel_featureAvailabilityProvidingForFeatureIdentifier_, *MEMORY[0x24BDD2DD0]);
  *(_QWORD *)(v0 + 136) = v1;
  if (!v1)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v2 = v1;
  sub_2312D3C68(0, (unint64_t *)&qword_255ECFBD0);
  v3 = sub_231414BE4();
  v4 = (void *)*MEMORY[0x24BDD2EB0];
  *(_QWORD *)(v0 + 144) = v3;
  *(_QWORD *)(v0 + 152) = v4;
  *(_QWORD *)(v0 + 56) = v0 + 168;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_231356754;
  v5 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  v6 = (_QWORD *)(v0 + 80);
  v6[1] = 0x40000000;
  v6[2] = sub_23134A978;
  v6[3] = &unk_250023D60;
  v6[4] = v5;
  objc_msgSend(v2, sel_setFeatureSettingNumber_forKey_completion_, v3, v4, v6);
  return swift_continuation_await();
}

uint64_t sub_231356754()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 160) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_2313567B4()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 144);
  v2 = *(void **)(v0 + 152);
  sub_2314130CC();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2313567F0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  BOOL v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v1 = *(void **)(v0 + 152);
  v2 = *(void **)(v0 + 144);
  swift_willThrow();
  sub_2314130CC();

  if (qword_25415DF98 != -1)
    swift_once();
  v3 = *(void **)(v0 + 160);
  v4 = sub_231413780();
  sub_2312CE3B8(v4, (uint64_t)qword_254162FF0);
  v5 = v3;
  v6 = v3;
  v7 = sub_231413768();
  v8 = sub_231414974();
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(void **)(v0 + 160);
  if (v9)
  {
    v11 = swift_slowAlloc();
    v12 = (_QWORD *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v19 = v18;
    *(_DWORD *)v11 = 136446466;
    v13 = sub_2314151A8();
    *(_QWORD *)(v0 + 80) = sub_23133180C(v13, v14, &v19);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2112;
    v15 = v10;
    v16 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 80) = v16;
    sub_231414CBC();
    *v12 = v16;

    _os_log_impl(&dword_2312C8000, v7, v8, "[%{public}s] Error when setting initial enablement: %@", (uint8_t *)v11, 0x16u);
    sub_231327294();
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v12, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v18, -1, -1);
    MEMORY[0x2348DE308](v11, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_231356A54()
{
  return sub_231308560(type metadata accessor for CardioFitnessFeatureStatusActionHandler);
}

uint64_t sub_231356A60()
{
  return type metadata accessor for CardioFitnessFeatureStatusActionHandler(0);
}

id sub_231356A6C(void *a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  objc_super v13;
  _BYTE v14[40];

  v3 = v2;
  sub_2312DF850(a2, (uint64_t)v14);
  v6 = objc_allocWithZone((Class)sub_231413468());
  v7 = a1;
  v8 = (void *)sub_23141345C();
  objc_msgSend(v8, sel_setAccessType_, 3);
  v13.receiver = v3;
  v13.super_class = (Class)type metadata accessor for HealthDetailsModalViewController();
  v9 = objc_msgSendSuper2(&v13, sel_initWithRootViewController_, v8);
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD410]), sel_initWithBarButtonSystemItem_target_action_, 0, v9, sel_dismissPresentedViewController);
  v11 = objc_msgSend(v8, sel_navigationItem);
  objc_msgSend(v11, sel_setLeftBarButtonItem_, v10);

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a2);
  return v9;
}

id sub_231356C80()
{
  return sub_231308560((uint64_t (*)(_QWORD))type metadata accessor for HealthDetailsModalViewController);
}

uint64_t type metadata accessor for HealthDetailsModalViewController()
{
  return objc_opt_self();
}

uint64_t sub_231356CAC()
{
  return sub_2312CCC24(&qword_25415C008, type metadata accessor for CardioFitnessFeatureStatusActionHandler, (uint64_t)&unk_23141C914);
}

uint64_t type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(uint64_t a1)
{
  return sub_2312F19EC(a1, qword_255ECE0B8);
}

unint64_t sub_231356CEC()
{
  unint64_t result;

  result = qword_255ECE000;
  if (!qword_255ECE000)
  {
    result = MEMORY[0x2348DE248](&unk_23141CB18, &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECE000);
  }
  return result;
}

uint64_t type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData(uint64_t a1)
{
  return sub_2312F19EC(a1, qword_25415D198);
}

uint64_t sub_231356D44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312D1E78(0, &qword_255ECDFF0, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_231356D98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312D1E78(0, &qword_255ECDFF0, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_231356DEC()
{
  uint64_t v0;

  sub_2314130CC();

  return swift_deallocObject();
}

uint64_t sub_231356E18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_23132724C;
  *(_OWORD *)(v2 + 120) = v3;
  return swift_task_switch();
}

ValueMetadata *type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.CodingKeys()
{
  return &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.CodingKeys;
}

uint64_t *sub_231356E8C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v19 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
      v20 = v19[5];
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      v23 = sub_231411D1C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
      *(uint64_t *)((char *)a1 + v19[6]) = *(uint64_t *)((char *)a2 + v19[6]);
      v24 = v19[7];
      v14 = (char *)a1 + v24;
      v15 = (char *)a2 + v24;
      v25 = *(uint64_t *)((char *)a2 + v24 + 8);
      *(_QWORD *)v14 = *(uint64_t *)((char *)a2 + v24);
      *((_QWORD *)v14 + 1) = v25;
      v17 = *(uint64_t *)((char *)a2 + v24 + 24);
      sub_231412A90();
      sub_231412A90();
      if (!v17)
      {
        v28 = *((_OWORD *)v15 + 2);
        *((_OWORD *)v14 + 1) = *((_OWORD *)v15 + 1);
        *((_OWORD *)v14 + 2) = v28;
        goto LABEL_12;
      }
      goto LABEL_8;
    }
    if (!EnumCaseMultiPayload)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v8 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
      v9 = v8[5];
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_231411D1C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      *(uint64_t *)((char *)a1 + v8[6]) = *(uint64_t *)((char *)a2 + v8[6]);
      v13 = v8[7];
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = *(uint64_t *)((char *)a2 + v13 + 8);
      *(_QWORD *)v14 = *(uint64_t *)((char *)a2 + v13);
      *((_QWORD *)v14 + 1) = v16;
      v17 = *(uint64_t *)((char *)a2 + v13 + 24);
      sub_231412A90();
      sub_231412A90();
      if (!v17)
      {
        v27 = *((_OWORD *)v15 + 2);
        *((_OWORD *)v14 + 1) = *((_OWORD *)v15 + 1);
        *((_OWORD *)v14 + 2) = v27;
        goto LABEL_12;
      }
LABEL_8:
      *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
      *((_QWORD *)v14 + 3) = v17;
      v26 = *((_QWORD *)v15 + 5);
      *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
      *((_QWORD *)v14 + 5) = v26;
      sub_231412A90();
      sub_231412A90();
LABEL_12:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t sub_23135708C(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    v3 = type metadata accessor for CardioFitnessHealthChecklistSettingsState();
    v4 = a1 + *(int *)(v3 + 20);
    v5 = sub_231411D1C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
    swift_bridgeObjectRelease();
    v6 = *(int *)(v3 + 28);
    swift_bridgeObjectRelease();
    result = *(_QWORD *)(a1 + v6 + 24);
    if (result)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

_BYTE *sub_231357130(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  int *v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    v17 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
    v18 = v17[5];
    v19 = &a1[v18];
    v20 = &a2[v18];
    v21 = sub_231411D1C();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    *(_QWORD *)&a1[v17[6]] = *(_QWORD *)&a2[v17[6]];
    v22 = v17[7];
    v13 = &a1[v22];
    v14 = &a2[v22];
    v23 = *(_QWORD *)&a2[v22 + 8];
    *(_QWORD *)v13 = *(_QWORD *)&a2[v22];
    *((_QWORD *)v13 + 1) = v23;
    v16 = *(_QWORD *)&a2[v22 + 24];
    sub_231412A90();
    sub_231412A90();
    if (!v16)
    {
      v26 = *((_OWORD *)v14 + 2);
      *((_OWORD *)v13 + 1) = *((_OWORD *)v14 + 1);
      *((_OWORD *)v13 + 2) = v26;
      goto LABEL_10;
    }
    goto LABEL_6;
  }
  if (!EnumCaseMultiPayload)
  {
    *a1 = *a2;
    v7 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
    v8 = v7[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_231411D1C();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    *(_QWORD *)&a1[v7[6]] = *(_QWORD *)&a2[v7[6]];
    v12 = v7[7];
    v13 = &a1[v12];
    v14 = &a2[v12];
    v15 = *(_QWORD *)&a2[v12 + 8];
    *(_QWORD *)v13 = *(_QWORD *)&a2[v12];
    *((_QWORD *)v13 + 1) = v15;
    v16 = *(_QWORD *)&a2[v12 + 24];
    sub_231412A90();
    sub_231412A90();
    if (!v16)
    {
      v25 = *((_OWORD *)v14 + 2);
      *((_OWORD *)v13 + 1) = *((_OWORD *)v14 + 1);
      *((_OWORD *)v13 + 2) = v25;
      goto LABEL_10;
    }
LABEL_6:
    *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
    *((_QWORD *)v13 + 3) = v16;
    v24 = *((_QWORD *)v14 + 5);
    *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
    *((_QWORD *)v13 + 5) = v24;
    sub_231412A90();
    sub_231412A90();
LABEL_10:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_BYTE *sub_231357308(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  int *v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;

  if (a1 != a2)
  {
    sub_2312CEBD4((uint64_t)a1, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      v16 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
      v17 = v16[5];
      v18 = &a1[v17];
      v19 = &a2[v17];
      v20 = sub_231411D1C();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
      *(_QWORD *)&a1[v16[6]] = *(_QWORD *)&a2[v16[6]];
      v21 = v16[7];
      v13 = &a1[v21];
      v14 = &a2[v21];
      *(_QWORD *)v13 = *(_QWORD *)&a2[v21];
      *((_QWORD *)v13 + 1) = *(_QWORD *)&a2[v21 + 8];
      v22 = *(_QWORD *)&a2[v21 + 24];
      sub_231412A90();
      sub_231412A90();
      if (!v22)
      {
        v24 = *((_OWORD *)v14 + 2);
        *((_OWORD *)v13 + 1) = *((_OWORD *)v14 + 1);
        *((_OWORD *)v13 + 2) = v24;
        goto LABEL_11;
      }
      goto LABEL_7;
    }
    if (!EnumCaseMultiPayload)
    {
      *a1 = *a2;
      v7 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
      v8 = v7[5];
      v9 = &a1[v8];
      v10 = &a2[v8];
      v11 = sub_231411D1C();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      *(_QWORD *)&a1[v7[6]] = *(_QWORD *)&a2[v7[6]];
      v12 = v7[7];
      v13 = &a1[v12];
      v14 = &a2[v12];
      *(_QWORD *)v13 = *(_QWORD *)&a2[v12];
      *((_QWORD *)v13 + 1) = *(_QWORD *)&a2[v12 + 8];
      v15 = *(_QWORD *)&a2[v12 + 24];
      sub_231412A90();
      sub_231412A90();
      if (!v15)
      {
        v23 = *((_OWORD *)v14 + 2);
        *((_OWORD *)v13 + 1) = *((_OWORD *)v14 + 1);
        *((_OWORD *)v13 + 2) = v23;
        goto LABEL_11;
      }
LABEL_7:
      *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
      *((_QWORD *)v13 + 3) = *((_QWORD *)v14 + 3);
      *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
      *((_QWORD *)v13 + 5) = *((_QWORD *)v14 + 5);
      sub_231412A90();
      sub_231412A90();
LABEL_11:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_BYTE *sub_231357520(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  __int128 *v13;
  __int128 v14;
  __int128 v15;

  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v6 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
    v7 = v6[5];
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = sub_231411D1C();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
    v11 = v6[7];
    v12 = &a1[v11];
    v13 = (__int128 *)&a2[v11];
    v14 = v13[2];
    v15 = *v13;
    v12[1] = v13[1];
    v12[2] = v14;
    *v12 = v15;
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_BYTE *sub_23135767C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  __int128 *v13;
  __int128 v14;
  __int128 v15;

  if (a1 != a2)
  {
    sub_2312CEBD4((uint64_t)a1, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      v6 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
      v7 = v6[5];
      v8 = &a1[v7];
      v9 = &a2[v7];
      v10 = sub_231411D1C();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
      v11 = v6[7];
      v12 = &a1[v11];
      v13 = (__int128 *)&a2[v11];
      v14 = v13[2];
      v15 = *v13;
      v12[1] = v13[1];
      v12[2] = v14;
      *v12 = v15;
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_2313577F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t sub_2313577FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_23135780C()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23135781C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for CardioFitnessHealthChecklistSettingsState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_231357880(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;

  sub_2312D1E78(0, &qword_255ECDFF0, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
    return a1;
  }
  v7 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v21 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
      v22 = v21[5];
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      v25 = sub_231411D1C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
      *(uint64_t *)((char *)a1 + v21[6]) = *(uint64_t *)((char *)a2 + v21[6]);
      v26 = v21[7];
      v17 = (char *)a1 + v26;
      v18 = (char *)a2 + v26;
      v27 = *(uint64_t *)((char *)a2 + v26 + 8);
      *(_QWORD *)v17 = *(uint64_t *)((char *)a2 + v26);
      *((_QWORD *)v17 + 1) = v27;
      v20 = *(uint64_t *)((char *)a2 + v26 + 24);
      sub_231412A90();
      sub_231412A90();
      if (!v20)
      {
        v30 = *((_OWORD *)v18 + 2);
        *((_OWORD *)v17 + 1) = *((_OWORD *)v18 + 1);
        *((_OWORD *)v17 + 2) = v30;
        goto LABEL_14;
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(v8 + 64));
LABEL_15:
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
        return a1;
      }
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v11 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
      v12 = v11[5];
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_231411D1C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
      *(uint64_t *)((char *)a1 + v11[6]) = *(uint64_t *)((char *)a2 + v11[6]);
      v16 = v11[7];
      v17 = (char *)a1 + v16;
      v18 = (char *)a2 + v16;
      v19 = *(uint64_t *)((char *)a2 + v16 + 8);
      *(_QWORD *)v17 = *(uint64_t *)((char *)a2 + v16);
      *((_QWORD *)v17 + 1) = v19;
      v20 = *(uint64_t *)((char *)a2 + v16 + 24);
      sub_231412A90();
      sub_231412A90();
      if (!v20)
      {
        v29 = *((_OWORD *)v18 + 2);
        *((_OWORD *)v17 + 1) = *((_OWORD *)v18 + 1);
        *((_OWORD *)v17 + 2) = v29;
        goto LABEL_14;
      }
    }
    *((_QWORD *)v17 + 2) = *((_QWORD *)v18 + 2);
    *((_QWORD *)v17 + 3) = v20;
    v28 = *((_QWORD *)v18 + 5);
    *((_QWORD *)v17 + 4) = *((_QWORD *)v18 + 4);
    *((_QWORD *)v17 + 5) = v28;
    sub_231412A90();
    sub_231412A90();
LABEL_14:
    swift_storeEnumTagMultiPayload();
    goto LABEL_15;
  }
  memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  return a1;
}

uint64_t sub_231357AF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    result = swift_getEnumCaseMultiPayload();
    if (result <= 1)
    {
      v4 = type metadata accessor for CardioFitnessHealthChecklistSettingsState();
      v5 = a1 + *(int *)(v4 + 20);
      v6 = sub_231411D1C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      swift_bridgeObjectRelease();
      v7 = *(int *)(v4 + 28);
      swift_bridgeObjectRelease();
      result = *(_QWORD *)(a1 + v7 + 24);
      if (result)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

_BYTE *sub_231357BC4(_BYTE *a1, _BYTE *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  int *v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;

  v4 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(0);
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      v18 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
      v19 = v18[5];
      v20 = &a1[v19];
      v21 = &a2[v19];
      v22 = sub_231411D1C();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
      *(_QWORD *)&a1[v18[6]] = *(_QWORD *)&a2[v18[6]];
      v23 = v18[7];
      v14 = &a1[v23];
      v15 = &a2[v23];
      v24 = *(_QWORD *)&a2[v23 + 8];
      *(_QWORD *)v14 = *(_QWORD *)&a2[v23];
      *((_QWORD *)v14 + 1) = v24;
      v17 = *(_QWORD *)&a2[v23 + 24];
      sub_231412A90();
      sub_231412A90();
      if (!v17)
      {
        v27 = *((_OWORD *)v15 + 2);
        *((_OWORD *)v14 + 1) = *((_OWORD *)v15 + 1);
        *((_OWORD *)v14 + 2) = v27;
        goto LABEL_12;
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
LABEL_13:
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
        return a1;
      }
      *a1 = *a2;
      v8 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
      v9 = v8[5];
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = sub_231411D1C();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      *(_QWORD *)&a1[v8[6]] = *(_QWORD *)&a2[v8[6]];
      v13 = v8[7];
      v14 = &a1[v13];
      v15 = &a2[v13];
      v16 = *(_QWORD *)&a2[v13 + 8];
      *(_QWORD *)v14 = *(_QWORD *)&a2[v13];
      *((_QWORD *)v14 + 1) = v16;
      v17 = *(_QWORD *)&a2[v13 + 24];
      sub_231412A90();
      sub_231412A90();
      if (!v17)
      {
        v26 = *((_OWORD *)v15 + 2);
        *((_OWORD *)v14 + 1) = *((_OWORD *)v15 + 1);
        *((_OWORD *)v14 + 2) = v26;
        goto LABEL_12;
      }
    }
    *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
    *((_QWORD *)v14 + 3) = v17;
    v25 = *((_QWORD *)v15 + 5);
    *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
    *((_QWORD *)v14 + 5) = v25;
    sub_231412A90();
    sub_231412A90();
LABEL_12:
    swift_storeEnumTagMultiPayload();
    goto LABEL_13;
  }
  sub_2312D1E78(0, &qword_255ECDFF0, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  return a1;
}

_BYTE *sub_231357E0C(_BYTE *a1, _BYTE *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_BYTE *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  size_t v10;
  int EnumCaseMultiPayload;
  int *v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  int v21;
  int *v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  int *v39;
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v48;
  __int128 v49;

  v4 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (v7)
  {
    if (v8)
      goto LABEL_6;
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      v31 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
      v32 = v31[5];
      v33 = &a1[v32];
      v34 = &a2[v32];
      v35 = sub_231411D1C();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
      *(_QWORD *)&a1[v31[6]] = *(_QWORD *)&a2[v31[6]];
      v36 = v31[7];
      v18 = &a1[v36];
      v19 = &a2[v36];
      *(_QWORD *)v18 = *(_QWORD *)&a2[v36];
      *((_QWORD *)v18 + 1) = *(_QWORD *)&a2[v36 + 8];
      v37 = *(_QWORD *)&a2[v36 + 24];
      sub_231412A90();
      sub_231412A90();
      if (!v37)
      {
        v46 = *((_OWORD *)v19 + 2);
        *((_OWORD *)v18 + 1) = *((_OWORD *)v19 + 1);
        *((_OWORD *)v18 + 2) = v46;
        goto LABEL_25;
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
LABEL_26:
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
        return a1;
      }
      *a1 = *a2;
      v12 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
      v13 = v12[5];
      v14 = &a1[v13];
      v15 = &a2[v13];
      v16 = sub_231411D1C();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
      *(_QWORD *)&a1[v12[6]] = *(_QWORD *)&a2[v12[6]];
      v17 = v12[7];
      v18 = &a1[v17];
      v19 = &a2[v17];
      *(_QWORD *)v18 = *(_QWORD *)&a2[v17];
      *((_QWORD *)v18 + 1) = *(_QWORD *)&a2[v17 + 8];
      v20 = *(_QWORD *)&a2[v17 + 24];
      sub_231412A90();
      sub_231412A90();
      if (!v20)
      {
        v38 = *((_OWORD *)v19 + 2);
        *((_OWORD *)v18 + 1) = *((_OWORD *)v19 + 1);
        *((_OWORD *)v18 + 2) = v38;
        goto LABEL_25;
      }
    }
    *((_QWORD *)v18 + 2) = *((_QWORD *)v19 + 2);
    *((_QWORD *)v18 + 3) = *((_QWORD *)v19 + 3);
    *((_QWORD *)v18 + 4) = *((_QWORD *)v19 + 4);
    *((_QWORD *)v18 + 5) = *((_QWORD *)v19 + 5);
    sub_231412A90();
    sub_231412A90();
LABEL_25:
    swift_storeEnumTagMultiPayload();
    goto LABEL_26;
  }
  if (!v8)
  {
    if (a1 == a2)
      return a1;
    sub_2312CEBD4((uint64_t)a1, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
    v21 = swift_getEnumCaseMultiPayload();
    if (v21 == 1)
    {
      *a1 = *a2;
      v39 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
      v40 = v39[5];
      v41 = &a1[v40];
      v42 = &a2[v40];
      v43 = sub_231411D1C();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
      *(_QWORD *)&a1[v39[6]] = *(_QWORD *)&a2[v39[6]];
      v44 = v39[7];
      v28 = &a1[v44];
      v29 = &a2[v44];
      *(_QWORD *)v28 = *(_QWORD *)&a2[v44];
      *((_QWORD *)v28 + 1) = *(_QWORD *)&a2[v44 + 8];
      v45 = *(_QWORD *)&a2[v44 + 24];
      sub_231412A90();
      sub_231412A90();
      if (!v45)
      {
        v49 = *((_OWORD *)v29 + 2);
        *((_OWORD *)v28 + 1) = *((_OWORD *)v29 + 1);
        *((_OWORD *)v28 + 2) = v49;
        goto LABEL_29;
      }
    }
    else
    {
      if (v21)
      {
        v10 = *(_QWORD *)(v5 + 64);
        goto LABEL_7;
      }
      *a1 = *a2;
      v22 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
      v23 = v22[5];
      v24 = &a1[v23];
      v25 = &a2[v23];
      v26 = sub_231411D1C();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
      *(_QWORD *)&a1[v22[6]] = *(_QWORD *)&a2[v22[6]];
      v27 = v22[7];
      v28 = &a1[v27];
      v29 = &a2[v27];
      *(_QWORD *)v28 = *(_QWORD *)&a2[v27];
      *((_QWORD *)v28 + 1) = *(_QWORD *)&a2[v27 + 8];
      v30 = *(_QWORD *)&a2[v27 + 24];
      sub_231412A90();
      sub_231412A90();
      if (!v30)
      {
        v48 = *((_OWORD *)v29 + 2);
        *((_OWORD *)v28 + 1) = *((_OWORD *)v29 + 1);
        *((_OWORD *)v28 + 2) = v48;
        goto LABEL_29;
      }
    }
    *((_QWORD *)v28 + 2) = *((_QWORD *)v29 + 2);
    *((_QWORD *)v28 + 3) = *((_QWORD *)v29 + 3);
    *((_QWORD *)v28 + 4) = *((_QWORD *)v29 + 4);
    *((_QWORD *)v28 + 5) = *((_QWORD *)v29 + 5);
    sub_231412A90();
    sub_231412A90();
LABEL_29:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  sub_2312CEBD4((uint64_t)a1, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
LABEL_6:
  sub_2312D1E78(0, &qword_255ECDFF0, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  v10 = *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64);
LABEL_7:
  memcpy(a1, a2, v10);
  return a1;
}

_BYTE *sub_231358298(_BYTE *a1, _BYTE *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  __int128 *v14;
  __int128 v15;
  __int128 v16;

  v4 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(0);
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    sub_2312D1E78(0, &qword_255ECDFF0, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      *a1 = *a2;
      v7 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
      v8 = v7[5];
      v9 = &a1[v8];
      v10 = &a2[v8];
      v11 = sub_231411D1C();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      *(_QWORD *)&a1[v7[6]] = *(_QWORD *)&a2[v7[6]];
      v12 = v7[7];
      v13 = &a1[v12];
      v14 = (__int128 *)&a2[v12];
      v15 = v14[2];
      v16 = *v14;
      v13[1] = v14[1];
      v13[2] = v15;
      *v13 = v16;
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

_BYTE *sub_231358464(_BYTE *a1, _BYTE *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_BYTE *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  size_t v10;
  int *v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  __int128 *v18;
  __int128 v19;
  __int128 v20;
  int *v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD *v27;
  __int128 *v28;
  __int128 v29;
  __int128 v30;

  v4 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      if (a1 == a2)
        return a1;
      sub_2312CEBD4((uint64_t)a1, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
      if (swift_getEnumCaseMultiPayload() <= 1)
      {
        *a1 = *a2;
        v21 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
        v22 = v21[5];
        v23 = &a1[v22];
        v24 = &a2[v22];
        v25 = sub_231411D1C();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
        *(_QWORD *)&a1[v21[6]] = *(_QWORD *)&a2[v21[6]];
        v26 = v21[7];
        v27 = &a1[v26];
        v28 = (__int128 *)&a2[v26];
        v29 = v28[2];
        v30 = *v28;
        v27[1] = v28[1];
        v27[2] = v29;
        *v27 = v30;
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      v10 = *(_QWORD *)(v5 + 64);
      goto LABEL_7;
    }
    sub_2312CEBD4((uint64_t)a1, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
LABEL_6:
    sub_2312D1E78(0, &qword_255ECDFF0, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
    v10 = *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64);
LABEL_7:
    memcpy(a1, a2, v10);
    return a1;
  }
  if (v8)
    goto LABEL_6;
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  else
  {
    *a1 = *a2;
    v11 = (int *)type metadata accessor for CardioFitnessHealthChecklistSettingsState();
    v12 = v11[5];
    v13 = &a1[v12];
    v14 = &a2[v12];
    v15 = sub_231411D1C();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    *(_QWORD *)&a1[v11[6]] = *(_QWORD *)&a2[v11[6]];
    v16 = v11[7];
    v17 = &a1[v16];
    v18 = (__int128 *)&a2[v16];
    v19 = v18[2];
    v20 = *v18;
    v17[1] = v18[1];
    v17[2] = v19;
    *v17 = v20;
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_2313587A4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2313587B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312D1E78(0, &qword_255ECDFF0, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_2313587FC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_231358808(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312D1E78(0, &qword_255ECDFF0, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

void sub_231358858()
{
  unint64_t v0;

  sub_2312D1E78(319, &qword_255ECDFF0, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

unint64_t sub_2313588D4()
{
  unint64_t result;

  result = qword_255ECE0F0;
  if (!qword_255ECE0F0)
  {
    result = MEMORY[0x2348DE248](&unk_23141CAA0, &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECE0F0);
  }
  return result;
}

unint64_t sub_23135891C()
{
  unint64_t result;

  result = qword_255ECE0F8;
  if (!qword_255ECE0F8)
  {
    result = MEMORY[0x2348DE248](&unk_23141CA10, &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECE0F8);
  }
  return result;
}

unint64_t sub_231358964()
{
  unint64_t result;

  result = qword_255ECE100;
  if (!qword_255ECE100)
  {
    result = MEMORY[0x2348DE248](&unk_23141CA38, &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECE100);
  }
  return result;
}

unint64_t sub_2313589A8()
{
  unint64_t result;

  result = qword_255ECE110;
  if (!qword_255ECE110)
  {
    result = MEMORY[0x2348DE248](&unk_23141D1AC, &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.OpenKnowledgeBaseArticleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECE110);
  }
  return result;
}

unint64_t sub_2313589EC()
{
  unint64_t result;

  result = qword_255ECE120;
  if (!qword_255ECE120)
  {
    result = MEMORY[0x2348DE248](&unk_23141D15C, &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.DeepLinkToHeartRateSettingsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECE120);
  }
  return result;
}

unint64_t sub_231358A30()
{
  unint64_t result;

  result = qword_255ECE130;
  if (!qword_255ECE130)
  {
    result = MEMORY[0x2348DE248](&unk_23141D10C, &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PushEnabledFeatureSettingsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECE130);
  }
  return result;
}

unint64_t sub_231358A74()
{
  unint64_t result;

  result = qword_255ECE140;
  if (!qword_255ECE140)
  {
    result = MEMORY[0x2348DE248](&unk_23141D0BC, &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PresentHealthDetailsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECE140);
  }
  return result;
}

unint64_t sub_231358AB8()
{
  unint64_t result;

  result = qword_255ECE150;
  if (!qword_255ECE150)
  {
    result = MEMORY[0x2348DE248](&unk_23141D06C, &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PresentFeatureSettingsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECE150);
  }
  return result;
}

unint64_t sub_231358AFC()
{
  unint64_t result;

  result = qword_255ECE160;
  if (!qword_255ECE160)
  {
    result = MEMORY[0x2348DE248](&unk_23141D01C, &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PresentOnboardingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECE160);
  }
  return result;
}

unint64_t sub_231358B40()
{
  unint64_t result;

  result = qword_255ECE170;
  if (!qword_255ECE170)
  {
    result = MEMORY[0x2348DE248](&unk_23141CFCC, &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECE170);
  }
  return result;
}

void sub_231358B84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v13 = type metadata accessor for CardioFitnessHealthChecklistSettingsState();
  v4 = MEMORY[0x24BDAC7A8](v13);
  MEMORY[0x24BDAC7A8](v4);
  v5 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  MEMORY[0x24BDAC7A8](v6);
  sub_231358FA0();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v12 + *(int *)(v8 + 48) - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6C20(a1, (uint64_t)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  sub_2312D6C20(a2, (uint64_t)v10, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  v11 = (char *)sub_231358CE0 + 4 * byte_23141C802[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_231358CE0()
{
  uint64_t v0;
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  __int128 v10;
  __int128 v11;
  unsigned __int8 *v12;
  __int128 v13;
  __int128 v14;

  sub_2312D6C20(v0, (uint64_t)v2, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_2312CEBD4((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for CardioFitnessHealthChecklistSettingsState);
    v5 = 0;
    v6 = (uint64_t (*)(_QWORD))sub_231358FA0;
  }
  else
  {
    sub_2312EE5FC(v3, (uint64_t)v1, (uint64_t (*)(_QWORD))type metadata accessor for CardioFitnessHealthChecklistSettingsState);
    if (*v2 != *v1)
      goto LABEL_8;
    if ((sub_231411D10() & 1) == 0)
      goto LABEL_8;
    v7 = *(int *)(*(_QWORD *)(v4 - 184) + 24);
    if ((sub_2313970F4(*(_QWORD **)&v2[v7], *(_QWORD **)&v1[v7]) & 1) == 0)
      goto LABEL_8;
    v8 = *(_QWORD *)(v4 - 184);
    v9 = &v2[*(int *)(v8 + 28)];
    v10 = *((_OWORD *)v9 + 2);
    v11 = *(_OWORD *)v9;
    *(_OWORD *)(v4 - 160) = *((_OWORD *)v9 + 1);
    *(_OWORD *)(v4 - 144) = v10;
    *(_OWORD *)(v4 - 176) = v11;
    v12 = &v1[*(int *)(v8 + 28)];
    v13 = *((_OWORD *)v12 + 2);
    v14 = *(_OWORD *)v12;
    *(_OWORD *)(v4 - 112) = *((_OWORD *)v12 + 1);
    *(_OWORD *)(v4 - 96) = v13;
    *(_OWORD *)(v4 - 128) = v14;
    if (sub_2313DEDB4((_QWORD *)(v4 - 176), (_QWORD *)(v4 - 128)))
    {
      sub_2312CEBD4((uint64_t)v1, (uint64_t (*)(_QWORD))type metadata accessor for CardioFitnessHealthChecklistSettingsState);
      sub_2312CEBD4((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for CardioFitnessHealthChecklistSettingsState);
      v5 = 1;
    }
    else
    {
LABEL_8:
      sub_2312CEBD4((uint64_t)v1, (uint64_t (*)(_QWORD))type metadata accessor for CardioFitnessHealthChecklistSettingsState);
      sub_2312CEBD4((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for CardioFitnessHealthChecklistSettingsState);
      v5 = 0;
    }
    v6 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction;
  }
  sub_2312CEBD4(v0, v6);
  return v5;
}

void sub_231358FA0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255ECE1C0)
  {
    type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255ECE1C0);
  }
}

BOOL sub_231359000(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);
  char v23;
  char v24;
  uint64_t v26;

  v4 = type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313592E8();
  v9 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D1E78(0, &qword_255ECDFF0, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v26 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v26 - v19;
  sub_231356D98(a1, (uint64_t)&v26 - v19);
  sub_231356D98(a2, (uint64_t)v18);
  v21 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_231356D98((uint64_t)v20, (uint64_t)v11);
  sub_231356D98((uint64_t)v18, v21);
  v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v22((uint64_t)v11, 1, v4) == 1)
  {
    sub_2312F1A20((uint64_t)v18, &qword_255ECDFF0, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
    sub_2312F1A20((uint64_t)v20, &qword_255ECDFF0, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
    if (v22(v21, 1, v4) == 1)
    {
      sub_2312F1A20((uint64_t)v11, &qword_255ECDFF0, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
      return 1;
    }
    goto LABEL_6;
  }
  sub_231356D98((uint64_t)v11, (uint64_t)v15);
  if (v22(v21, 1, v4) == 1)
  {
    sub_2312F1A20((uint64_t)v18, &qword_255ECDFF0, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
    sub_2312F1A20((uint64_t)v20, &qword_255ECDFF0, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
    sub_2312CEBD4((uint64_t)v15, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
LABEL_6:
    sub_2312CEBD4((uint64_t)v11, (uint64_t (*)(_QWORD))sub_2313592E8);
    return 0;
  }
  sub_2312EE5FC(v21, (uint64_t)v7, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  sub_231358B84((uint64_t)v15, (uint64_t)v7);
  v24 = v23;
  sub_2312CEBD4((uint64_t)v7, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  sub_2312F1A20((uint64_t)v18, &qword_255ECDFF0, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  sub_2312F1A20((uint64_t)v20, &qword_255ECDFF0, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  sub_2312CEBD4((uint64_t)v15, type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  sub_2312F1A20((uint64_t)v11, &qword_255ECDFF0, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
  return (v24 & 1) != 0;
}

void sub_2313592E8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255ECE1C8)
  {
    sub_2312D1E78(255, &qword_255ECDFF0, (void (*)(uint64_t))type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255ECE1C8);
  }
}

uint64_t getEnumTagSinglePayload for AFibBurdenPDFChartType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_231359434 + 4 * byte_23141C80D[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_231359468 + 4 * byte_23141C808[v4]))();
}

uint64_t sub_231359468(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_231359470(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x231359478);
  return result;
}

uint64_t sub_231359484(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23135948CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_231359490(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_231359498(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.CodingKeys()
{
  return &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.CodingKeys;
}

ValueMetadata *type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PresentOnboardingCodingKeys()
{
  return &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PresentOnboardingCodingKeys;
}

ValueMetadata *type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PresentFeatureSettingsCodingKeys()
{
  return &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PresentFeatureSettingsCodingKeys;
}

ValueMetadata *type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PresentHealthDetailsCodingKeys()
{
  return &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PresentHealthDetailsCodingKeys;
}

uint64_t _s5Heart47CardioFitnessFeatureStatusActionHandlerUserDataV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_231359524 + 4 * byte_23141C812[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_231359544 + 4 * byte_23141C817[v4]))();
}

_BYTE *sub_231359524(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_231359544(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23135954C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_231359554(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23135955C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_231359564(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PushEnabledFeatureSettingsCodingKeys()
{
  return &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PushEnabledFeatureSettingsCodingKeys;
}

ValueMetadata *type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.DeepLinkToHeartRateSettingsCodingKeys()
{
  return &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.DeepLinkToHeartRateSettingsCodingKeys;
}

ValueMetadata *type metadata accessor for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.OpenKnowledgeBaseArticleCodingKeys()
{
  return &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.OpenKnowledgeBaseArticleCodingKeys;
}

unint64_t sub_2313595A4()
{
  unint64_t result;

  result = qword_255ECE1D0;
  if (!qword_255ECE1D0)
  {
    result = MEMORY[0x2348DE248](&unk_23141CD94, &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PushEnabledFeatureSettingsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECE1D0);
  }
  return result;
}

unint64_t sub_2313595EC()
{
  unint64_t result;

  result = qword_255ECE1D8;
  if (!qword_255ECE1D8)
  {
    result = MEMORY[0x2348DE248](&unk_23141CE9C, &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PresentFeatureSettingsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECE1D8);
  }
  return result;
}

unint64_t sub_231359634()
{
  unint64_t result;

  result = qword_255ECE1E0;
  if (!qword_255ECE1E0)
  {
    result = MEMORY[0x2348DE248](&unk_23141CFA4, &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECE1E0);
  }
  return result;
}

unint64_t sub_23135967C()
{
  unint64_t result;

  result = qword_255ECE1E8;
  if (!qword_255ECE1E8)
  {
    result = MEMORY[0x2348DE248](&unk_23141CF14, &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECE1E8);
  }
  return result;
}

unint64_t sub_2313596C4()
{
  unint64_t result;

  result = qword_255ECE1F0;
  if (!qword_255ECE1F0)
  {
    result = MEMORY[0x2348DE248](&unk_23141CF3C, &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECE1F0);
  }
  return result;
}

unint64_t sub_23135970C()
{
  unint64_t result;

  result = qword_255ECE1F8;
  if (!qword_255ECE1F8)
  {
    result = MEMORY[0x2348DE248](&unk_23141CEC4, &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PresentOnboardingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECE1F8);
  }
  return result;
}

unint64_t sub_231359754()
{
  unint64_t result;

  result = qword_255ECE200;
  if (!qword_255ECE200)
  {
    result = MEMORY[0x2348DE248](&unk_23141CEEC, &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PresentOnboardingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECE200);
  }
  return result;
}

unint64_t sub_23135979C()
{
  unint64_t result;

  result = qword_255ECE208;
  if (!qword_255ECE208)
  {
    result = MEMORY[0x2348DE248](&unk_23141CE0C, &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PresentFeatureSettingsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECE208);
  }
  return result;
}

unint64_t sub_2313597E4()
{
  unint64_t result;

  result = qword_255ECE210;
  if (!qword_255ECE210)
  {
    result = MEMORY[0x2348DE248](&unk_23141CE34, &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PresentFeatureSettingsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECE210);
  }
  return result;
}

unint64_t sub_23135982C()
{
  unint64_t result;

  result = qword_255ECE218;
  if (!qword_255ECE218)
  {
    result = MEMORY[0x2348DE248](&unk_23141CDBC, &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PresentHealthDetailsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECE218);
  }
  return result;
}

unint64_t sub_231359874()
{
  unint64_t result;

  result = qword_255ECE220;
  if (!qword_255ECE220)
  {
    result = MEMORY[0x2348DE248](&unk_23141CDE4, &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PresentHealthDetailsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECE220);
  }
  return result;
}

unint64_t sub_2313598BC()
{
  unint64_t result;

  result = qword_255ECE228;
  if (!qword_255ECE228)
  {
    result = MEMORY[0x2348DE248](&unk_23141CD04, &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PushEnabledFeatureSettingsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECE228);
  }
  return result;
}

unint64_t sub_231359904()
{
  unint64_t result;

  result = qword_255ECE230;
  if (!qword_255ECE230)
  {
    result = MEMORY[0x2348DE248](&unk_23141CD2C, &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.PushEnabledFeatureSettingsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECE230);
  }
  return result;
}

unint64_t sub_23135994C()
{
  unint64_t result;

  result = qword_255ECE238;
  if (!qword_255ECE238)
  {
    result = MEMORY[0x2348DE248](&unk_23141CCB4, &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.DeepLinkToHeartRateSettingsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECE238);
  }
  return result;
}

unint64_t sub_231359994()
{
  unint64_t result;

  result = qword_255ECE240;
  if (!qword_255ECE240)
  {
    result = MEMORY[0x2348DE248](&unk_23141CCDC, &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.DeepLinkToHeartRateSettingsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECE240);
  }
  return result;
}

unint64_t sub_2313599DC()
{
  unint64_t result;

  result = qword_255ECE248;
  if (!qword_255ECE248)
  {
    result = MEMORY[0x2348DE248](&unk_23141CC64, &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.OpenKnowledgeBaseArticleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECE248);
  }
  return result;
}

unint64_t sub_231359A24()
{
  unint64_t result;

  result = qword_255ECE250;
  if (!qword_255ECE250)
  {
    result = MEMORY[0x2348DE248](&unk_23141CC8C, &type metadata for CardioFitnessFeatureStatusActionHandlerUserData.TapAction.OpenKnowledgeBaseArticleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255ECE250);
  }
  return result;
}

uint64_t sub_231359A68(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x800000023142BD40 || (sub_231415070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000023142BD60 || (sub_231415070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023142BD80 || (sub_231415070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000023142BDA0 || (sub_231415070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000023142BDC0 || (sub_231415070() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000023142BDE0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v5 = sub_231415070();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t type metadata accessor for AFibBurdenChartSection()
{
  uint64_t result;

  result = qword_255ECE260;
  if (!qword_255ECE260)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_231359CF0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_231359D38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void (*v14)(uint64_t *, _QWORD);
  id v15;
  void (*v16)(uint64_t *, _QWORD);
  uint64_t *v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29[5];

  v27 = a1;
  v1 = sub_231413264();
  v24 = *(_QWORD *)(v1 - 8);
  v25 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v26 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_231412970();
  v22 = *(_QWORD *)(v3 - 8);
  v23 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6DD8(0, &qword_255ECB1C0, (uint64_t (*)(uint64_t))MEMORY[0x24BEBC408], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v21 - v7;
  v9 = sub_231413930();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255ECAAD8 != -1)
    swift_once();
  sub_231411374();
  sub_231413858();
  sub_231412A90();
  sub_231413924();
  v13 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x24BEBE1F0]);
  v14 = (void (*)(uint64_t *, _QWORD))sub_2314138B8();
  sub_231413894();
  v14(v29, 0);
  v15 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  v16 = (void (*)(uint64_t *, _QWORD))sub_2314138B8();
  sub_2314138A0();
  v16(v29, 0);
  v29[3] = v9;
  v29[4] = MEMORY[0x24BEBC5F0];
  v17 = sub_2312DFCA0(v29);
  (*(void (**)(uint64_t *, char *, uint64_t))(v10 + 16))(v17, v12, v9);
  sub_231413834();
  v18 = sub_23141384C();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v8, 0, 1, v18);
  *(_QWORD *)&v28 = 0;
  *((_QWORD *)&v28 + 1) = 0xE000000000000000;
  sub_231414E18();
  if (qword_255ECA990 != -1)
    swift_once();
  v19 = xmmword_255ECB560;
  sub_231412A90();
  swift_bridgeObjectRelease();
  v28 = v19;
  sub_231414728();
  (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v5, *MEMORY[0x24BE43600], v23);
  (*(void (**)(char *, _QWORD, uint64_t))(v24 + 104))(v26, *MEMORY[0x24BE44C60], v25);
  sub_2314129DC();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

void sub_23135A104(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  uint64_t *v22;
  uint64_t ObjectType;
  char v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  id v42;
  _QWORD v43[2];

  v7 = sub_231411644();
  v37 = *(_QWORD *)(v7 - 8);
  v38 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2314127F0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v41 = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v36 - v14;
  v40 = v3;
  *(_QWORD *)(v3 + qword_255ECE258) = 0;
  sub_2312D6DD8(0, (unint64_t *)&qword_255ECAC50, (uint64_t (*)(uint64_t))sub_2312D1CE8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_231418090;
  v17 = (void *)objc_opt_self();
  v42 = a1;
  v18 = objc_msgSend(v17, sel__quantityTypeWithCode_, 248);
  if (v18)
  {
    v19 = v18;
    *(_QWORD *)(v16 + 56) = &type metadata for AFibBurdenChartItem;
    *(_QWORD *)(v16 + 64) = sub_23135AC80();
    *(_QWORD *)(v16 + 32) = v19;
    *(_QWORD *)(v16 + 40) = a1;
    *(_QWORD *)(v16 + 48) = 0;
    type metadata accessor for AFibBurdenChartSection();
    v20 = sub_2314129E8();
    v21 = (uint64_t (*)(uint64_t))MEMORY[0x24BE438C0];
    *(_QWORD *)(v16 + 96) = v20;
    *(_QWORD *)(v16 + 104) = sub_2312CCC24((unint64_t *)&qword_255ECD440, v21, MEMORY[0x24BE438A8]);
    v22 = sub_2312DFCA0((uint64_t *)(v16 + 72));
    sub_231359D38((uint64_t)v22);
    sub_2314127E4();
    ObjectType = swift_getObjectType();
    v24 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 8))(ObjectType, a3);
    v36[1] = a2;
    if ((v24 & 1) != 0)
    {
      sub_2312D6DD8(0, &qword_255ECF200, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v25 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
      v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_231416A30;
      (*(void (**)(unint64_t, char *, uint64_t))(v11 + 16))(v26 + v25, v15, v10);
    }
    v27 = v10;
    v28 = v15;
    v43[0] = 0;
    v43[1] = 0xE000000000000000;
    sub_231414E18();
    swift_bridgeObjectRelease();
    strcpy((char *)v43, "MutableArray<");
    HIWORD(v43[1]) = -4864;
    sub_231411638();
    sub_231411614();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v9, v38);
    sub_231414728();
    swift_bridgeObjectRelease();
    sub_231414728();
    v29 = sub_2314128BC();
    v30 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
    swift_retain();
    v43[0] = v30(ObjectType, a3);
    v31 = swift_allocObject();
    swift_weakInit();
    v32 = v41;
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v41, v15, v27);
    v33 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v34 = swift_allocObject();
    *(_QWORD *)(v34 + 16) = v31;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v34 + v33, v32, v27);
    sub_2312D75F0();
    sub_2312CCC24(&qword_25415BAA8, (uint64_t (*)(uint64_t))sub_2312D75F0, MEMORY[0x24BDB9AF8]);
    v35 = sub_231413F90();
    sub_2314130CC();

    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v28, v27);
    *(_QWORD *)(v29 + qword_255ECE258) = v35;
    swift_release();
  }
  else
  {

    __break(1u);
  }
}

uint64_t sub_23135A57C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  int v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v4 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (v4)
    {
      sub_2312D6DD8(0, &qword_255ECF200, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v6 = sub_2314127F0();
      v7 = *(_QWORD *)(v6 - 8);
      v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_231416A30;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 16))(v9 + v8, a3, v6);
    }
    sub_2314128C8();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23135A680()
{
  return swift_release();
}

uint64_t sub_23135A690()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + qword_255ECE258))
  {
    swift_retain();
    sub_231413D38();
    swift_release();
  }
  sub_2314128F8();
  swift_release();
  return swift_deallocClassInstance();
}

void sub_23135A6FC()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_23135A728()
{
  return type metadata accessor for AFibBurdenChartSection();
}

uint64_t sub_23135A730()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_2314125EC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2314125C8();
  v4 = sub_231412580();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_23135A7BC()
{
  MEMORY[0x2348DE248](&unk_23141D2D0);
  return sub_231413414();
}

void *sub_23135A80C()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 8);
  v2 = v1;
  return v1;
}

void *sub_23135A830()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

uint64_t sub_23135A854(void *a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_23135A860(a1, a2, *v2, v2[1], v2[2]);
}

uint64_t sub_23135A860(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  _QWORD v23[4];

  v23[0] = a2;
  v9 = sub_23141177C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend((id)objc_opt_self(), sel_hk_gregorianCalendarWithLocalTimeZone, v23[0]);
  sub_231411710();

  sub_2314116B0();
  v14 = objc_allocWithZone(MEMORY[0x24BE4A5B0]);
  v15 = (void *)sub_2314116F8();
  v16 = (void *)sub_23141468C();
  v17 = objc_msgSend(v14, sel_initWithCalendar_queryIdentifier_, v15, v16);

  objc_msgSend(a1, sel_setSleepDataSourceProvider_, v17);
  v18 = objc_msgSend(a1, sel_healthStore);
  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEAA340]), sel_initWithHealthStore_, v18);

  objc_msgSend(a1, sel_setSleepChartFormatter_, v19);
  v20 = objc_msgSend(a1, sel_healthStore);
  sub_231412EB0();
  swift_allocObject();
  objc_msgSend(a1, sel_setAddDataViewControllerProvider_, sub_231412EA4());
  swift_release();
  v23[1] = a3;
  v23[2] = a4;
  v23[3] = a5;
  sub_23135AD9C();
  v21 = sub_231412B68();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v21;
}

uint64_t sub_23135AA9C()
{
  sub_23141297C();
  return sub_231412328();
}

unint64_t sub_23135AACC()
{
  return 0xD000000000000013;
}

uint64_t sub_23135AAE8()
{
  sub_23141297C();
  return sub_2314149EC();
}

uint64_t sub_23135AB1C()
{
  return sub_2312CCC24(&qword_255ECE2B0, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenChartSection, (uint64_t)&unk_23141D2A0);
}

_QWORD *initializeBufferWithCopyOfBuffer for AFibBurdenChartItem(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  a1[2] = v5;
  v6 = v3;
  v7 = v4;
  v8 = v5;
  return a1;
}

void destroy for AFibBurdenChartItem(id *a1)
{

}

uint64_t assignWithCopy for AFibBurdenChartItem(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  v10 = *(void **)(a1 + 16);
  v11 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v11;
  v12 = v11;

  return a1;
}

uint64_t assignWithTake for AFibBurdenChartItem(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for AFibBurdenChartItem()
{
  return &type metadata for AFibBurdenChartItem;
}

unint64_t sub_23135AC80()
{
  unint64_t result;

  result = qword_255ECE2B8;
  if (!qword_255ECE2B8)
  {
    result = MEMORY[0x2348DE248](&unk_23141D270, &type metadata for AFibBurdenChartItem);
    atomic_store(result, (unint64_t *)&qword_255ECE2B8);
  }
  return result;
}

uint64_t sub_23135ACC4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23135ACE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_2314127F0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23135AD5C(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_2314127F0() - 8) + 80);
  return sub_23135A57C(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

unint64_t sub_23135AD9C()
{
  unint64_t result;

  result = qword_255ECE2C0;
  if (!qword_255ECE2C0)
  {
    result = MEMORY[0x2348DE248](&unk_23141D314, &type metadata for AFibBurdenChartItem);
    atomic_store(result, (unint64_t *)&qword_255ECE2C0);
  }
  return result;
}

id sub_23135ADE4()
{
  void *v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  objc_super v9;

  type metadata accessor for HeartHealthPluginDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_231411374();

  v4 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  sub_231411374();

  v6 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for CardioFitnessOnboardingAboutHealthDetailsViewController();
  v7 = objc_msgSendSuper2(&v9, sel_initWithTitle_detailText_icon_contentLayout_, v4, v6, 0, 2, 0xE000000000000000);

  return v7;
}

void sub_23135AF88()
{
  void *v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  objc_class *v11;
  char *v12;
  uint64_t *v13;
  uint64_t *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t *v25;
  uint64_t *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t *v37;
  uint64_t *v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t *v49;
  uint64_t *v50;
  id v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  id v56;
  id v57;
  unint64_t v58;
  objc_super v59;
  objc_super v60;
  objc_super v61;
  objc_super v62;
  objc_super v63;

  v57 = v0;
  v63.receiver = v0;
  v63.super_class = (Class)type metadata accessor for CardioFitnessOnboardingAboutHealthDetailsViewController();
  objc_msgSendSuper2(&v63, sel_viewDidLoad);
  sub_2312D3AD4();
  v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = xmmword_231419E70;
  type metadata accessor for HeartHealthPluginDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  v4 = sub_231411374();
  v6 = v5;

  v7 = objc_msgSend(v2, (SEL)&selRef_hxui_addCancelButton + 1, ObjCClassFromMetadata, 0xE000000000000000);
  v8 = sub_231411374();
  v10 = v9;

  v11 = (objc_class *)type metadata accessor for TitleDetailsView();
  v12 = (char *)objc_allocWithZone(v11);
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Heart16TitleDetailsView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC5Heart16TitleDetailsView____lazy_storage___detailLabel] = 0;
  v13 = (uint64_t *)&v12[OBJC_IVAR____TtC5Heart16TitleDetailsView_title];
  *v13 = v4;
  v13[1] = v6;
  v14 = (uint64_t *)&v12[OBJC_IVAR____TtC5Heart16TitleDetailsView_details];
  *v14 = v8;
  v14[1] = v10;
  v62.receiver = v12;
  v62.super_class = v11;
  v15 = objc_msgSendSuper2(&v62, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0, 0xE000000000000000);
  sub_2312DAF30();

  *(_QWORD *)(v58 + 32) = v15;
  v16 = objc_msgSend(v2, (SEL)&selRef_hxui_addCancelButton + 1, ObjCClassFromMetadata);
  v17 = sub_231411374();
  v19 = v18;

  v20 = objc_msgSend(v2, (SEL)&selRef_hxui_addCancelButton + 1, ObjCClassFromMetadata, 0xE000000000000000);
  v21 = sub_231411374();
  v23 = v22;

  v24 = (char *)objc_allocWithZone(v11);
  *(_QWORD *)&v24[OBJC_IVAR____TtC5Heart16TitleDetailsView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v24[OBJC_IVAR____TtC5Heart16TitleDetailsView____lazy_storage___detailLabel] = 0;
  v25 = (uint64_t *)&v24[OBJC_IVAR____TtC5Heart16TitleDetailsView_title];
  *v25 = v17;
  v25[1] = v19;
  v26 = (uint64_t *)&v24[OBJC_IVAR____TtC5Heart16TitleDetailsView_details];
  *v26 = v21;
  v26[1] = v23;
  v61.receiver = v24;
  v61.super_class = v11;
  v27 = objc_msgSendSuper2(&v61, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0, 0xE000000000000000);
  sub_2312DAF30();

  *(_QWORD *)(v58 + 40) = v27;
  v28 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  v29 = sub_231411374();
  v31 = v30;

  v32 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  v33 = sub_231411374();
  v35 = v34;

  v36 = (char *)objc_allocWithZone(v11);
  *(_QWORD *)&v36[OBJC_IVAR____TtC5Heart16TitleDetailsView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v36[OBJC_IVAR____TtC5Heart16TitleDetailsView____lazy_storage___detailLabel] = 0;
  v37 = (uint64_t *)&v36[OBJC_IVAR____TtC5Heart16TitleDetailsView_title];
  *v37 = v29;
  v37[1] = v31;
  v38 = (uint64_t *)&v36[OBJC_IVAR____TtC5Heart16TitleDetailsView_details];
  *v38 = v33;
  v38[1] = v35;
  v60.receiver = v36;
  v60.super_class = v11;
  v39 = objc_msgSendSuper2(&v60, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0, 0xE000000000000000);
  sub_2312DAF30();

  *(_QWORD *)(v58 + 48) = v39;
  v40 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  v41 = sub_231411374();
  v43 = v42;

  v44 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  v45 = sub_231411374();
  v47 = v46;

  v48 = (char *)objc_allocWithZone(v11);
  *(_QWORD *)&v48[OBJC_IVAR____TtC5Heart16TitleDetailsView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v48[OBJC_IVAR____TtC5Heart16TitleDetailsView____lazy_storage___detailLabel] = 0;
  v49 = (uint64_t *)&v48[OBJC_IVAR____TtC5Heart16TitleDetailsView_title];
  *v49 = v41;
  v49[1] = v43;
  v50 = (uint64_t *)&v48[OBJC_IVAR____TtC5Heart16TitleDetailsView_details];
  *v50 = v45;
  v50[1] = v47;
  v59.receiver = v48;
  v59.super_class = v11;
  v51 = objc_msgSendSuper2(&v59, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0, 0xE000000000000000);
  sub_2312DAF30();

  *(_QWORD *)(v58 + 56) = v51;
  sub_2314147B8();
  if (v58 >> 62)
  {
    sub_231342108();
    sub_231412A90();
    sub_231414EFC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_231412A90();
    sub_23141507C();
    sub_231342108();
  }
  swift_bridgeObjectRelease();
  v52 = objc_allocWithZone(MEMORY[0x24BEBD978]);
  sub_231342108();
  v53 = (void *)sub_231414788();
  swift_bridgeObjectRelease();
  v54 = objc_msgSend(v52, sel_initWithArrangedSubviews_, v53);

  objc_msgSend(v54, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v54, sel_setAxis_, 1);
  objc_msgSend(v54, sel_setAlignment_, 0);
  objc_msgSend(v54, sel_setDistribution_, 3);
  objc_msgSend(v54, sel_setSpacing_, 20.0);
  v55 = objc_msgSend(v57, sel_contentView);
  objc_msgSend(v55, sel_addSubview_, v54);

  v56 = objc_msgSend(v57, sel_contentView);
  objc_msgSend(v54, sel_hk_alignConstraintsWithView_, v56);

}

id sub_23135B7B0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CardioFitnessOnboardingAboutHealthDetailsViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for CardioFitnessOnboardingAboutHealthDetailsViewController()
{
  return objc_opt_self();
}

void sub_23135B88C(void *a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  char isUniquelyReferenced_nonNull_native;
  _OWORD v5[2];
  __int128 v6;
  uint64_t v7;
  unint64_t v8;

  if (objc_msgSend(a1, sel_healthDataSource))
  {
    v8 = sub_231336D90(MEMORY[0x24BEE4AF8]);
    if (*(_BYTE *)(v1 + 24))
    {
      if (*(_BYTE *)(v1 + 24) != 1)
        __asm { BR              X11 }
      v2 = 0xE600000000000000;
      v3 = 0x6E6F69676572;
    }
    else
    {
      v2 = 0xEB00000000656C62;
      v3 = 0x616C696176616E75;
    }
    v7 = MEMORY[0x24BEE0D00];
    *(_QWORD *)&v6 = v3;
    *((_QWORD *)&v6 + 1) = v2;
    sub_231304744(&v6, v5);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_2313D47BC(v5, 0x616552726F727265, 0xEB000000006E6F73, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    __asm { BR              X12 }
  }
  sub_231414EE4();
  __break(1u);
  JUMPOUT(0x23135C08CLL);
}

uint64_t sub_23135C14C()
{
  sub_2314130CC();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AFibBurdenOnboardingErrorAnalyticsEvent()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for LowHeartRateNotificationsFeatureStatusActionHandler()
{
  uint64_t result;

  result = qword_25415C180;
  if (!qword_25415C180)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23135C1CC()
{
  return swift_initClassMetadata2();
}

void sub_23135C208()
{
  uint64_t ObjectType;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t (*v15)(uint64_t);
  void (*v16)(char *, uint64_t);
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  NSObject *v27;
  char *v28;
  id v29;
  void *v30;
  uint64_t v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  char *v43;
  char *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[2];
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56[6];

  ObjectType = swift_getObjectType();
  sub_2312E9730(0);
  MEMORY[0x24BDAC7A8](v1);
  v50 = (char *)v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_231411D1C();
  v54 = *(_QWORD *)(v3 - 8);
  v55 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2314120AC();
  v52 = *(_QWORD *)(v6 - 8);
  v53 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v51 = (char *)v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v49 - v9;
  v11 = sub_231412F64();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231413210();
  sub_2314130FC();
  v15 = (uint64_t (*)(uint64_t))MEMORY[0x24BE449A8];
  sub_2312CCC24(&qword_255ECB630, (uint64_t (*)(uint64_t))MEMORY[0x24BE449A8], MEMORY[0x24BE449B8]);
  sub_2312CCC24(&qword_255ECCDA0, v15, MEMORY[0x24BE449B0]);
  sub_231412F58();
  v16 = *(void (**)(char *, uint64_t))(v12 + 8);
  v16(v14, v11);
  if (!v56[0])
  {
    if (qword_25415DF98 != -1)
      swift_once();
    v31 = sub_231413780();
    sub_2312CE3B8(v31, (uint64_t)qword_254162FF0);
    v27 = sub_231413768();
    v32 = sub_231414980();
    if (os_log_type_enabled(v27, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      v56[0] = v34;
      *(_DWORD *)v33 = 136315138;
      v35 = sub_2314151A8();
      v56[5] = sub_23133180C(v35, v36, v56);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v27, v32, "[%s] Could not access action handler user data!", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v34, -1, -1);
      MEMORY[0x2348DE308](v33, -1, -1);
    }
LABEL_15:

    return;
  }
  v49[1] = ObjectType;
  sub_231413210();
  sub_231412F40();
  v16(v14, v11);
  sub_2312CEA5C(v56, v56[3]);
  v17 = (void *)sub_231412EE0();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v56);
  sub_231413210();
  v18 = (void *)sub_231412F4C();
  v16(v14, v11);
  sub_231413210();
  sub_231411D88();
  v16(v14, v11);
  sub_2314130D8();
  v20 = v54;
  v19 = v55;
  v21 = (*(uint64_t (**)(char *, uint64_t))(v54 + 88))(v5, v55);
  if (v21 == *MEMORY[0x24BE41298])
  {
    v23 = (uint64_t)v51;
    v22 = v52;
    v24 = v17;
    v25 = v53;
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v51, v10, v53);
    v26 = objc_allocWithZone((Class)type metadata accessor for BradycardiaSettingsViewController(0));
    v27 = v24;
    v28 = sub_2313C45CC(v27, v23);

    v29 = objc_msgSend(v18, sel_navigationController);
    if (v29)
    {
      v30 = v29;
      objc_msgSend(v29, sel_pushViewController_animated_, v28, 1);

      swift_release();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v25);
      return;
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v25);

    swift_release();
    goto LABEL_15;
  }
  v37 = v17;
  if (v21 == *MEMORY[0x24BE412A0])
  {
    v38 = (uint64_t)v51;
    v39 = v52;
    v40 = v53;
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v51, v10, v53);
    v41 = objc_allocWithZone((Class)type metadata accessor for BradycardiaSettingsViewController(0));
    v42 = v37;
    v43 = sub_2313C45CC(v42, v38);

    sub_2312E4338();
    v44 = v43;
    sub_231412F10();

    v45 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A728]), sel_initWithRootViewController_, v44);
    objc_msgSend(v18, sel_presentViewController_animated_completion_, v45, 1, 0);

    swift_release();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v10, v40);
  }
  else if (v21 == *MEMORY[0x24BE41288] || v21 == *MEMORY[0x24BE41280])
  {
    v46 = (uint64_t)v50;
    sub_2314130F0();
    v47 = sub_2314114AC();
    v48 = *(_QWORD *)(v47 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47) == 1)
    {
      (*(void (**)(char *, uint64_t))(v52 + 8))(v10, v53);
      swift_release();

      sub_2312F0614(v46);
    }
    else
    {
      sub_23141147C();

      swift_release();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v10, v53);
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v46, v47);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v52 + 8))(v10, v53);
    swift_release();

    (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v19);
  }
}

id sub_23135C8AC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LowHeartRateNotificationsFeatureStatusActionHandler();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23135C8E0()
{
  return type metadata accessor for LowHeartRateNotificationsFeatureStatusActionHandler();
}

uint64_t sub_23135C8E8()
{
  return sub_2312CCC24(&qword_25415C178, (uint64_t (*)(uint64_t))type metadata accessor for LowHeartRateNotificationsFeatureStatusActionHandler, (uint64_t)&unk_23141D434);
}

id sub_23135C918()
{
  return sub_2313342FC(&OBJC_IVAR____TtC5Heart24TitleOptionalDetailsView____lazy_storage___titleLabel, (uint64_t (*)(uint64_t))sub_23135C92C);
}

id sub_23135C92C()
{
  id v0;
  void *v1;
  id v2;
  id v3;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_231412A90();
  v1 = (void *)sub_23141468C();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setText_, v1);

  v2 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v0, sel_setTextColor_, v2);

  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  v3 = objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_weight_, *MEMORY[0x24BEBE1D0], *MEMORY[0x24BEBB610]);
  objc_msgSend(v0, sel_setFont_, v3);

  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  return v0;
}

id sub_23135CA80()
{
  return sub_2313342FC(&OBJC_IVAR____TtC5Heart24TitleOptionalDetailsView____lazy_storage___detailLabel, (uint64_t (*)(uint64_t))sub_23135CA94);
}

id sub_23135CA94(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v3 = a1 + OBJC_IVAR____TtC5Heart24TitleOptionalDetailsView_details;
  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC5Heart24TitleOptionalDetailsView_details + 8))
  {
    sub_231412A90();
    v4 = (void *)sub_23141468C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  objc_msgSend(v2, sel_setText_, v4);

  objc_msgSend(v2, sel_setHidden_, *(_QWORD *)(v3 + 8) == 0);
  v5 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  objc_msgSend(v2, sel_setTextColor_, v5);

  objc_msgSend(v2, sel_setNumberOfLines_, 0);
  v6 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x24BEBE220]);
  objc_msgSend(v2, sel_setFont_, v6);

  objc_msgSend(v2, sel_setAdjustsFontForContentSizeCategory_, 1);
  return v2;
}

uint64_t sub_23135CC08()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;

  v1 = OBJC_IVAR____TtC5Heart24TitleOptionalDetailsView____lazy_storage___noDetailsConstraints;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC5Heart24TitleOptionalDetailsView____lazy_storage___noDetailsConstraints])
  {
    v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Heart24TitleOptionalDetailsView____lazy_storage___noDetailsConstraints];
  }
  else
  {
    v3 = v0;
    sub_2312D3AD4();
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_231417F90;
    v5 = sub_23135C918();
    v6 = objc_msgSend(v5, sel_bottomAnchor);

    v7 = objc_msgSend(v3, sel_bottomAnchor);
    v8 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v7);

    *(_QWORD *)(v4 + 32) = v8;
    sub_2314147B8();
    v2 = v4;
    *(_QWORD *)&v3[v1] = v4;
    sub_231412A90();
    swift_bridgeObjectRelease();
  }
  sub_231412A90();
  return v2;
}

uint64_t sub_23135CD10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;

  v1 = OBJC_IVAR____TtC5Heart24TitleOptionalDetailsView____lazy_storage___detailsConstraints;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC5Heart24TitleOptionalDetailsView____lazy_storage___detailsConstraints))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Heart24TitleOptionalDetailsView____lazy_storage___detailsConstraints);
  }
  else
  {
    v3 = v0;
    sub_2312D3AD4();
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_231417F90;
    v5 = sub_23135CA80();
    v6 = objc_msgSend(v5, sel_topAnchor);

    v7 = sub_23135C918();
    v8 = objc_msgSend(v7, sel_bottomAnchor);

    v9 = objc_msgSend(v6, sel_constraintEqualToAnchor_constant_, v8, 0.0);
    *(_QWORD *)(v4 + 32) = v9;
    sub_2314147B8();
    v2 = v4;
    *(_QWORD *)(v3 + v1) = v4;
    sub_231412A90();
    swift_bridgeObjectRelease();
  }
  sub_231412A90();
  return v2;
}

void sub_23135CED4()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;

  v1 = v0;
  sub_2312D3AD4();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_231418140;
  *(_QWORD *)(v2 + 32) = sub_23135C918();
  *(_QWORD *)(v2 + 40) = sub_23135CA80();
  sub_2314147B8();
  sub_231414BA8();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC5Heart24TitleOptionalDetailsView_details + 8])
    v3 = sub_23135CD10();
  else
    v3 = sub_23135CC08();
  v4 = v3;
  v32 = (void *)objc_opt_self();
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2314183B0;
  v6 = sub_23135C918();
  v7 = objc_msgSend(v6, sel_topAnchor);

  v8 = objc_msgSend(v1, sel_topAnchor);
  v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v8);

  *(_QWORD *)(v5 + 32) = v9;
  v10 = sub_23135C918();
  v11 = objc_msgSend(v10, sel_leadingAnchor);

  v12 = objc_msgSend(v1, sel_leadingAnchor);
  v13 = objc_msgSend(v11, sel_constraintEqualToAnchor_constant_, v12, 0.0);

  *(_QWORD *)(v5 + 40) = v13;
  v14 = sub_23135C918();
  v15 = objc_msgSend(v14, sel_trailingAnchor);

  v16 = objc_msgSend(v1, sel_trailingAnchor);
  v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_constant_, v16, -0.0);

  *(_QWORD *)(v5 + 48) = v17;
  v18 = sub_23135CA80();
  v19 = objc_msgSend(v18, sel_leadingAnchor);

  v20 = sub_23135C918();
  v21 = objc_msgSend(v20, sel_leadingAnchor);

  v22 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v21);
  *(_QWORD *)(v5 + 56) = v22;
  v23 = sub_23135CA80();
  v24 = objc_msgSend(v23, sel_trailingAnchor);

  v25 = sub_23135C918();
  v26 = objc_msgSend(v25, sel_trailingAnchor);

  v27 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v26);
  *(_QWORD *)(v5 + 64) = v27;
  v28 = sub_23135CA80();
  v29 = objc_msgSend(v28, sel_bottomAnchor);

  v30 = objc_msgSend(v1, sel_bottomAnchor);
  v31 = objc_msgSend(v29, sel_constraintEqualToAnchor_, v30);

  *(_QWORD *)(v5 + 72) = v31;
  sub_2314147B8();
  sub_2313EBB6C(v4);
  sub_2312EA780();
  v33 = (id)sub_231414788();
  swift_bridgeObjectRelease();
  objc_msgSend(v32, sel_activateConstraints_, v33);

}

void sub_23135D2B4(uint64_t a1, uint64_t a2)
{
  id v2;
  void *v3;
  id v4;
  id v5;

  if (a2)
  {
    v2 = sub_23135C918();
    sub_231412A90();
    sub_231414728();
    v3 = (void *)sub_23141468C();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setAccessibilityIdentifier_, v3);

    v4 = sub_23135CA80();
    sub_231412A90();
    sub_231414728();
    v5 = (id)sub_23141468C();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5);

  }
}

void sub_23135D3DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;

  v7 = (_QWORD *)(v4 + OBJC_IVAR____TtC5Heart24TitleOptionalDetailsView_title);
  *v7 = a1;
  v7[1] = a2;
  sub_231412A90();
  swift_bridgeObjectRelease();
  v8 = (_QWORD *)(v4 + OBJC_IVAR____TtC5Heart24TitleOptionalDetailsView_details);
  v9 = *(_QWORD *)(v4 + OBJC_IVAR____TtC5Heart24TitleOptionalDetailsView_details + 8);
  *v8 = a3;
  v8[1] = a4;
  sub_231412A90();
  swift_bridgeObjectRelease();
  v10 = sub_23135C918();
  v11 = (void *)sub_23141468C();
  objc_msgSend(v10, sel_setText_, v11);

  v12 = sub_23135CA80();
  if (a4)
    v13 = (void *)sub_23141468C();
  else
    v13 = 0;
  objc_msgSend(v12, sel_setText_, v13);

  v14 = sub_23135CA80();
  objc_msgSend(v14, sel_setHidden_, a4 == 0);

  if (v9)
  {
    if (a4)
      return;
    v15 = (void *)objc_opt_self();
    sub_23135CD10();
    sub_2312EA780();
    v16 = (void *)sub_231414788();
    swift_bridgeObjectRelease();
    objc_msgSend(v15, sel_deactivateConstraints_, v16);

    sub_23135CC08();
  }
  else
  {
    if (!a4)
      return;
    v15 = (void *)objc_opt_self();
    sub_23135CC08();
    sub_2312EA780();
    v17 = (void *)sub_231414788();
    swift_bridgeObjectRelease();
    objc_msgSend(v15, sel_deactivateConstraints_, v17);

    sub_23135CD10();
  }
  v18 = (id)sub_231414788();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_activateConstraints_, v18);

}

id sub_23135D638()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TitleOptionalDetailsView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for TitleOptionalDetailsView()
{
  return objc_opt_self();
}

void sub_23135D708(uint64_t a1, uint64_t a2)
{
  sub_23135D2B4(a1, a2);
}

uint64_t _s22AFibBurdenPDFComponentVwxx(uint64_t a1)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 40))
    return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + 16);
  return result;
}

uint64_t _s22AFibBurdenPDFComponentVwcp(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2 + 2;
  v6 = a2[5];
  sub_231412A90();
  if (v6)
  {
    v7 = a2[6];
    *(_QWORD *)(a1 + 40) = v6;
    *(_QWORD *)(a1 + 48) = v7;
    (**(void (***)(uint64_t, _QWORD *, uint64_t))(v6 - 8))(a1 + 16, v5, v6);
  }
  else
  {
    v8 = *((_OWORD *)v5 + 1);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v5;
    *(_OWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 48) = v5[4];
  }
  return a1;
}

uint64_t _s22AFibBurdenPDFComponentVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_231412A90();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 40);
  if (!*(_QWORD *)(a1 + 40))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 40) = v4;
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 16, a2 + 16);
      return a1;
    }
LABEL_7:
    v5 = *(_OWORD *)(a2 + 16);
    v6 = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = v6;
    return a1;
  }
  if (!v4)
  {
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + 16);
    goto LABEL_7;
  }
  sub_2312DB81C((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  return a1;
}

uint64_t _s22AFibBurdenPDFComponentVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 40))
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(a1 + 16);
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t _s22AFibBurdenPDFComponentVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s22AFibBurdenPDFComponentVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s22AFibBurdenPDFComponentVMa()
{
  return &_s22AFibBurdenPDFComponentVN;
}

uint64_t sub_23135D9A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v30;
  void (*v31)(char *, uint64_t);
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  unint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t);
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  id v65;
  __int128 v66;
  uint64_t v67;
  _QWORD v68[6];

  sub_2312D4A68();
  v54 = v2;
  v53 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v52 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23135E45C();
  v57 = v4;
  v56 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23135E608();
  v59 = *(_QWORD *)(v7 - 8);
  v60 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v58 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_231412DA8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v55 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v50 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v50 - v16;
  sub_231412D9C();
  v18 = sub_231412514();
  v20 = v19;
  if (v18 != sub_231412514() || v20 != v21)
  {
    v22 = sub_231415070();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v23 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v23(v17, a1, v9);
    if ((v22 & 1) != 0)
      goto LABEL_8;
    v51 = v23;
    sub_231412D9C();
    v24 = sub_231412514();
    v26 = v25;
    if (v24 == sub_231412514() && v26 == v27)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_8;
    }
    v30 = sub_231415070();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v31 = *(void (**)(char *, uint64_t))(v10 + 8);
    v31(v17, v9);
    if ((v30 & 1) != 0)
      return 0;
    sub_23135E6AC(v61 + 16, (uint64_t)&v66);
    v51(v15, a1, v9);
    if (v67)
    {
      v31(v15, v9);
      sub_2312DFB68(&v66, (uint64_t)&v62);
      goto LABEL_20;
    }
    v32 = (void *)sub_231412D78();
    v33 = objc_msgSend(v32, sel_profileIdentifier);
    v34 = objc_msgSend(v33, sel_type);

    if (v34 == (id)1)
    {
      v35 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3BF8]), sel_initWithFeatureIdentifier_healthStore_, *MEMORY[0x24BDD2DC8], v32);

      if (v35)
      {
        *((_QWORD *)&v63 + 1) = sub_2312DC718();
        v64 = MEMORY[0x24BE45B80];
        *(_QWORD *)&v62 = v35;
        v31(v15, v9);
        goto LABEL_19;
      }
    }
    else
    {

    }
    v31(v15, v9);
    v64 = 0;
    v62 = 0u;
    v63 = 0u;
LABEL_19:
    sub_23135E710((uint64_t)&v66);
    if (!*((_QWORD *)&v63 + 1))
    {
      sub_23135E710((uint64_t)&v62);
      *(_QWORD *)&v62 = 0;
      *((_QWORD *)&v62 + 1) = 0xE000000000000000;
      sub_231414E18();
      sub_231414728();
      v68[0] = &_s22AFibBurdenPDFComponentVN;
      sub_23135E76C();
      sub_2314146E0();
      sub_231414728();
      swift_bridgeObjectRelease();
      sub_231414728();
      v45 = v62;
      if (qword_25415B6D8 != -1)
        swift_once();
      v46 = v54;
      v47 = sub_2312CE3B8(v54, (uint64_t)qword_254162EE8);
      v48 = v53;
      v49 = v52;
      (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v52, v47, v46);
      *(_OWORD *)(swift_allocObject() + 16) = v45;
      *(_QWORD *)&v62 = 0;
      sub_2314135AC();
      swift_release();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v46);
      return 0;
    }
LABEL_20:
    sub_2312DFB68(&v62, (uint64_t)v68);
    sub_2312DF850((uint64_t)v68, (uint64_t)&v62);
    v65 = (id)*MEMORY[0x24BE4BF10];
    v36 = v65;
    *(_QWORD *)&v66 = sub_2313901F0();
    sub_23135E7C8(0, &qword_255ECE4E0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE3598]);
    v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_231416A30;
    *(_BYTE *)(v37 + 32) = sub_23138F9A4() & 1;
    sub_2312D75F0();
    sub_2312CCC24(&qword_25415BAA8, (uint64_t (*)(uint64_t))sub_2312D75F0, MEMORY[0x24BDB9AF8]);
    sub_231413F3C();
    swift_release();
    swift_bridgeObjectRelease();
    sub_2312CCC24(&qword_255ECE4E8, (uint64_t (*)(uint64_t))sub_23135E45C, MEMORY[0x24BDB9530]);
    v38 = v57;
    v39 = sub_231413E7C();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v6, v38);
    *(_QWORD *)&v66 = v39;
    v40 = v55;
    v51(v55, a1, v9);
    v41 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v42 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v42 + v41, v40, v9);
    sub_23135E9C4(0, &qword_255ECE4D0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v43 = v58;
    sub_231413EB8();
    swift_release();
    swift_release();
    sub_2312CCC24((unint64_t *)&qword_255ECE4F0, (uint64_t (*)(uint64_t))sub_23135E608, MEMORY[0x24BDB96C0]);
    v44 = v60;
    sub_231413E64();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v43, v44);
    sub_231412DFC();
    sub_231412544();
    swift_release();
    sub_23135E8BC();
    sub_2312CCC24(&qword_255ECE500, (uint64_t (*)(uint64_t))sub_23135E8BC, MEMORY[0x24BE428C8]);
    v28 = sub_231412568();
    swift_release();
    sub_23135E918((uint64_t)&v62);
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v68);
    sub_2312CCC24(&qword_255ECE508, (uint64_t (*)(uint64_t))sub_23135E94C, MEMORY[0x24BE43020]);
    return v28;
  }
  swift_bridgeObjectRelease_n();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v17, a1, v9);
LABEL_8:
  (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
  return 0;
}

uint64_t sub_23135E180@<X0>(_BYTE *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  id v19;
  __int128 v20;
  uint64_t v21;

  v4 = sub_231411644();
  v5 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 == 1)
  {
    v9 = (void *)sub_231412D78();
    sub_23141336C();
    v10 = sub_231412328();
    v12 = v11;
    v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598];
    sub_23135E9C4(0, &qword_255ECF200, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v14 = *(unsigned __int8 *)(*(_QWORD *)(sub_2314127F0() - 8) + 80);
    v15 = (v14 + 32) & ~v14;
    v16 = swift_allocObject();
    v20 = xmmword_231416A30;
    *(_OWORD *)(v16 + 16) = xmmword_231416A30;
    v21 = v16 + v15;
    sub_2313311C4(0, (unint64_t *)&qword_255ECAC50, (unint64_t *)&qword_255ECF1F0, MEMORY[0x24BE41798], v13);
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = v20;
    *(_QWORD *)(v17 + 56) = &type metadata for AFibBurdenPDFItem;
    *(_QWORD *)(v17 + 64) = sub_23135EA1C();
    v18 = (_QWORD *)swift_allocObject();
    *(_QWORD *)(v17 + 32) = v18;
    v18[2] = v10;
    v18[3] = v12;
    v18[4] = 0xD000000000000011;
    v18[5] = 0x800000023142C440;
    v18[6] = v9;
    sub_231412A90();
    v19 = v9;
    sub_231411638();
    sub_231411614();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    sub_2314127E4();

    result = swift_bridgeObjectRelease();
  }
  else
  {
    v16 = MEMORY[0x24BEE4AF8];
  }
  *a2 = v16;
  return result;
}

uint64_t sub_23135E39C()
{
  sub_23141336C();
  return sub_2314149EC();
}

uint64_t sub_23135E3D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_2314129AC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231412994();
  v4 = sub_2314129A0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

void sub_23135E45C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECE4A0)
  {
    sub_23135E524();
    sub_2312D75F0();
    sub_2312CCC24(&qword_255ECE4C0, (uint64_t (*)(uint64_t))sub_23135E524, MEMORY[0x24BDB9970]);
    sub_2312CCC24(&qword_25415BAA8, (uint64_t (*)(uint64_t))sub_2312D75F0, MEMORY[0x24BDB9AF8]);
    v0 = sub_231413C0C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECE4A0);
  }
}

void sub_23135E524()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECE4A8)
  {
    sub_23135E7C8(255, &qword_255ECE4B0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE1250]);
    sub_23135E5B0();
    v0 = sub_231413CD8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECE4A8);
  }
}

unint64_t sub_23135E5B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ECE4B8;
  if (!qword_255ECE4B8)
  {
    sub_23135E7C8(255, &qword_255ECE4B0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2348DE248](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_255ECE4B8);
  }
  return result;
}

void sub_23135E608()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECE4C8)
  {
    sub_2312D75F0();
    sub_23135E9C4(255, &qword_255ECE4D0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_2312CCC24(&qword_25415BAA8, (uint64_t (*)(uint64_t))sub_2312D75F0, MEMORY[0x24BDB9AF8]);
    v0 = sub_231413C60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECE4C8);
  }
}

uint64_t sub_23135E6AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2313311C4(0, (unint64_t *)&qword_25415C158, &qword_25415C150, MEMORY[0x24BE457C0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23135E710(uint64_t a1)
{
  uint64_t v2;

  sub_2313311C4(0, (unint64_t *)&qword_25415C158, &qword_25415C150, MEMORY[0x24BE457C0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23135E76C()
{
  unint64_t result;

  result = qword_255ECE4D8;
  if (!qword_255ECE4D8)
  {
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255ECE4D8);
  }
  return result;
}

uint64_t sub_23135E7A4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23135E7C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, _QWORD))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, MEMORY[0x24BEE1328]);
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_23135E810()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_231412DA8();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_23135E870@<X0>(_BYTE *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_231412DA8();
  return sub_23135E180(a1, a2);
}

void sub_23135E8BC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECE4F8)
  {
    sub_231412DFC();
    v0 = sub_2314123A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECE4F8);
  }
}

uint64_t sub_23135E918(uint64_t a1)
{
  destroy for IsAvailableForAvailabilityContextProvider(a1);
  return a1;
}

void sub_23135E94C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECE510)
  {
    sub_23135E8BC();
    sub_2312CCC24(&qword_255ECE500, (uint64_t (*)(uint64_t))sub_23135E8BC, MEMORY[0x24BE428C8]);
    v0 = sub_2314126AC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECE510);
  }
}

void sub_23135E9C4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_2314127F0();
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_23135EA1C()
{
  unint64_t result;

  result = qword_255ECE518;
  if (!qword_255ECE518)
  {
    result = MEMORY[0x2348DE248](&unk_231421400, &type metadata for AFibBurdenPDFItem);
    atomic_store(result, (unint64_t *)&qword_255ECE518);
  }
  return result;
}

uint64_t sub_23135EA60()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_23135EA94()
{
  id *v0;

  sub_2314130CC();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BloodPressureSampleFormatter()
{
  return objc_opt_self();
}

void sub_23135EAF8(char *a1)
{
  sub_2313CE668(*a1);
}

void sub_23135EB04()
{
  char *v0;

  sub_2313CEA14(*v0);
}

void sub_23135EB0C()
{
  __asm { BR              X10 }
}

uint64_t sub_23135EB40()
{
  sub_231414710();
  return swift_bridgeObjectRelease();
}

void sub_23135EBD0(uint64_t a1)
{
  char *v1;

  sub_2313CEE04(a1, *v1);
}

uint64_t sub_23135EBD8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23135FB2C();
  *a1 = result;
  return result;
}

uint64_t sub_23135EC04()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_23135EC2C + 4 * byte_23141D625[*v0]))();
}

void sub_23135EC2C(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "remoteDisable");
  *(_WORD *)(a1 + 14) = -4864;
}

void sub_23135EC54(_QWORD *a1@<X8>)
{
  *a1 = 0x6970784564656573;
  a1[1] = 0xEA00000000007972;
}

void sub_23135EC74(_QWORD *a1@<X8>)
{
  *a1 = 0x61476E6F69676572;
  a1[1] = 0xEB00000000646574;
}

void sub_23135EC98(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000012;
  a1[1] = 0x8000000231425230;
}

uint64_t sub_23135ECB8()
{
  sub_2313605AC();
  return sub_231414770();
}

uint64_t sub_23135ED14()
{
  sub_2313605AC();
  return sub_231414764();
}

uint64_t sub_23135ED60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v0 = sub_2314119E0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_231411A04();
  sub_2312D6D6C(v4, qword_254162DF0);
  sub_2312CE3B8(v4, (uint64_t)qword_254162DF0);
  sub_2314118FC();
  sub_2312CE560(0, (unint64_t *)&qword_25415DF20, (void (*)(uint64_t))MEMORY[0x24BE474E8]);
  v5 = sub_231411890();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_231416A30;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v6 + 104))(v8 + v7, *MEMORY[0x24BE47498], v5);
  sub_2312FC108(v8);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  if (qword_25415B710 != -1)
    swift_once();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BE47910], v0);
  sub_231412A90();
  return sub_2314119F8();
}

uint64_t sub_23135EF24()
{
  uint64_t inited;
  unint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t result;
  unint64_t v6;

  sub_2312CE560(0, &qword_25415BBE0, (void (*)(uint64_t))sub_2313602D0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_231416A30;
  sub_2312D3C68(0, (unint64_t *)&qword_25415DEC8);
  *(_QWORD *)(inited + 32) = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_quantityTypeForIdentifier_, *MEMORY[0x24BDD3378]);
  sub_2314147B8();
  v1 = MEMORY[0x24BEE4AF8];
  v6 = MEMORY[0x24BEE4AF8];
  v2 = *(void **)(inited + 32);
  if (v2)
  {
    v3 = v2;
    MEMORY[0x2348DD15C]();
    if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_2314147DC();
    sub_2314147E8();
    sub_2314147B8();
    v1 = v6;
  }
  swift_bridgeObjectRelease();
  v4 = sub_2313F4934(v1);
  result = swift_bridgeObjectRelease();
  qword_254162DE8 = v4;
  return result;
}

uint64_t sub_23135F060()
{
  sub_231414E18();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  return 0;
}

uint64_t sub_23135F120(void *a1)
{
  id v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = objc_msgSend(a1, sel_unsatisfiedRequirementIdentifiers);
  type metadata accessor for HKFeatureAvailabilityRequirementIdentifier(0);
  v2 = sub_2314147A0();

  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v13 = MEMORY[0x24BEE4AF8];
    sub_23137D374(0, v3, 0);
    v4 = 0;
    do
    {
      v5 = sub_2314146BC();
      v7 = v6;
      v9 = *(_QWORD *)(v13 + 16);
      v8 = *(_QWORD *)(v13 + 24);
      if (v9 >= v8 >> 1)
        sub_23137D374(v8 > 1, v9 + 1, 1);
      ++v4;
      *(_QWORD *)(v13 + 16) = v9 + 1;
      v10 = v13 + 16 * v9;
      *(_QWORD *)(v10 + 32) = v5;
      *(_QWORD *)(v10 + 40) = v7;
    }
    while (v3 != v4);
  }
  swift_bridgeObjectRelease();
  sub_231347B40(0, &qword_255ECC9C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE1250]);
  sub_23131C5FC();
  v11 = sub_231414668();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_23135F298(void (*a1)(uint64_t))
{
  uint64_t v2;

  sub_231414E18();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  v2 = sub_231414728();
  a1(v2);
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return 0;
}

uint64_t sub_23135F398@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;

  v4 = sub_231411890();
  MEMORY[0x24BDAC7A8](v4);
  sub_2312D4A68();
  v6 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (void *)sub_2314118FC();
  v8 = sub_2314118F0();

  if ((v8 & 1) != 0)
  {
    sub_231360038();
    if (v9 >> 60 != 15)
      __asm { BR              X10 }
  }
  if (qword_25415B6D8 != -1)
    swift_once();
  sub_2312CE3B8(v6, (uint64_t)qword_254162EE8);
  sub_231413594();
  v10 = sub_2314119B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a2, 1, 1, v10);
}

uint64_t sub_23135F8A0()
{
  return sub_23135F8C0();
}

uint64_t sub_23135F8C0()
{
  sub_231414E18();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  return 0;
}

uint64_t sub_23135F97C()
{
  return sub_23135F8C0();
}

void sub_23135F99C(char a1)
{
  sub_231414E18();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  sub_231414728();
  __asm { BR              X10 }
}

uint64_t sub_23135FA7C()
{
  uint64_t v1;

  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return v1;
}

uint64_t sub_23135FB2C()
{
  unint64_t v0;

  v0 = sub_231414F74();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t sub_23135FB74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_2312D4A68();
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (void *)sub_231413588();
  if ((sub_231413570() & 1) == 0)
  {
    if (qword_25415B6D8 != -1)
      swift_once();
    sub_2312CE3B8(v1, (uint64_t)qword_254162EE8);
    v19 = 0;
    sub_231413594();

    return 0;
  }
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  v7 = *MEMORY[0x24BDD2D08];
  v8 = v5;
  if ((objc_msgSend(v8, sel_isRequirementSatisfiedWithIdentifier_, v7) & 1) != 0)
  {
    if ((objc_msgSend(v8, sel_isRequirementSatisfiedWithIdentifier_, *MEMORY[0x24BDD2DA0]) & 1) != 0)
    {
      if (objc_msgSend(v8, sel_isRequirementSatisfiedWithIdentifier_, *MEMORY[0x24BDD2CE0])
        && (objc_msgSend(v8, sel_isRequirementSatisfiedWithIdentifier_, *MEMORY[0x24BDD2CF0]) & 1) == 0)
      {
        if (qword_25415B6D8 != -1)
          swift_once();
        v16 = sub_2312CE3B8(v1, (uint64_t)qword_254162EE8);
        (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v16, v1);
        v17 = swift_allocObject();
        *(_QWORD *)(v17 + 16) = sub_23136039C;
        *(_QWORD *)(v17 + 24) = v6;
        v19 = 0;
        swift_retain();
        sub_231413594();

        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
        return 4;
      }
      else
      {
        if ((objc_msgSend(v8, sel_isRequirementSatisfiedWithIdentifier_, *MEMORY[0x24BDD2CF8]) & 1) != 0)
        {

          swift_release();
          return 0;
        }
        if (qword_25415B6D8 != -1)
          swift_once();
        v14 = sub_2312CE3B8(v1, (uint64_t)qword_254162EE8);
        (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v14, v1);
        v15 = swift_allocObject();
        *(_QWORD *)(v15 + 16) = sub_23136039C;
        *(_QWORD *)(v15 + 24) = v6;
        v19 = 0;
        swift_retain();
        sub_231413594();

        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
        return 3;
      }
    }
    else
    {
      if (qword_25415B6D8 != -1)
        swift_once();
      v12 = sub_2312CE3B8(v1, (uint64_t)qword_254162EE8);
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v12, v1);
      v13 = swift_allocObject();
      *(_QWORD *)(v13 + 16) = sub_23136039C;
      *(_QWORD *)(v13 + 24) = v6;
      v19 = 0;
      swift_retain();
      sub_231413594();

      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      return 2;
    }
  }
  else
  {
    if (qword_25415B6D8 != -1)
      swift_once();
    v10 = sub_2312CE3B8(v1, (uint64_t)qword_254162EE8);
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v10, v1);
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = sub_23136039C;
    *(_QWORD *)(v11 + 24) = v6;
    v19 = 0;
    swift_retain();
    sub_231413594();

    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return 1;
  }
}

uint64_t sub_231360038()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_231413780();
  MEMORY[0x24BDAC7A8](v0);
  sub_2314111E8();
  swift_allocObject();
  sub_2314111DC();
  sub_231360334();
  v1 = sub_2314111D0();
  swift_release();
  return v1;
}

uint64_t sub_2313602A4()
{
  return swift_deallocObject();
}

void sub_2313602B4()
{
  uint64_t v0;

  sub_23135F99C(*(_BYTE *)(v0 + 16));
}

uint64_t sub_2313602BC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_2312D6C64(a1, a2);
  return a1;
}

void sub_2313602D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415BB18)
  {
    sub_2312D3C68(255, (unint64_t *)&qword_25415DE98);
    v0 = sub_231414CB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415BB18);
  }
}

unint64_t sub_231360334()
{
  unint64_t result;

  result = qword_25415B808;
  if (!qword_25415B808)
  {
    result = MEMORY[0x2348DE248](&unk_23141A0D4, &type metadata for AFibBurdenRescindedFeedItemConfiguration);
    atomic_store(result, (unint64_t *)&qword_25415B808);
  }
  return result;
}

uint64_t sub_231360378()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23136039C()
{
  uint64_t v0;

  return sub_23135F120(*(void **)(v0 + 16));
}

uint64_t sub_2313603A4()
{
  uint64_t v0;

  return sub_23135F298(*(void (**)(uint64_t))(v0 + 16));
}

uint64_t sub_2313603D8()
{
  uint64_t v0;

  return sub_23135F298(*(void (**)(uint64_t))(v0 + 16));
}

uint64_t sub_23136040C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_231360430()
{
  uint64_t v0;

  return sub_23135F298(*(void (**)(uint64_t))(v0 + 16));
}

uint64_t sub_231360464()
{
  uint64_t v0;

  return sub_23135F298(*(void (**)(uint64_t))(v0 + 16));
}

uint64_t storeEnumTagSinglePayload for AFibBurdenRescindedState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2313604E4 + 4 * byte_23141D639[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_231360518 + 4 * byte_23141D634[v4]))();
}

uint64_t sub_231360518(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_231360520(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x231360528);
  return result;
}

uint64_t sub_231360534(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23136053CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_231360540(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_231360548(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AFibBurdenRescindedState()
{
  return &type metadata for AFibBurdenRescindedState;
}

unint64_t sub_231360568()
{
  unint64_t result;

  result = qword_25415B700;
  if (!qword_25415B700)
  {
    result = MEMORY[0x2348DE248](&unk_23141D724, &type metadata for AFibBurdenRescindedState);
    atomic_store(result, (unint64_t *)&qword_25415B700);
  }
  return result;
}

unint64_t sub_2313605AC()
{
  unint64_t result;

  result = qword_25415B708;
  if (!qword_25415B708)
  {
    result = MEMORY[0x2348DE248](&unk_23141D6AC, &type metadata for AFibBurdenRescindedState);
    atomic_store(result, (unint64_t *)&qword_25415B708);
  }
  return result;
}

uint64_t *sub_2313605FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
        v7 = sub_23141231C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_231360768(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if (result <= 3)
  {
    v3 = sub_23141231C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

void *sub_2313607B4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
      v6 = sub_23141231C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *sub_2313608EC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_2312CEBD4((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenOnboardingPresentationContext);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
        v6 = sub_23141231C();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t type metadata accessor for AFibBurdenOnboardingPresentationContext()
{
  uint64_t result;

  result = qword_255ECE6C0;
  if (!qword_255ECE6C0)
    return swift_getSingletonMetadata();
  return result;
}

void *sub_231360A78(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
      v6 = sub_23141231C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *sub_231360BB0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_2312CEBD4((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenOnboardingPresentationContext);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
        v6 = sub_23141231C();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_231360D00()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23141231C();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_231360D68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = v0;
  v2 = sub_23141231C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AFibBurdenOnboardingPresentationContext();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313613F4(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() > 3)
    return 0x6B6E694C70656564;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
  v9 = sub_231412304();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v9;
}

void sub_231360E78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for AFibBurdenOnboardingPresentationContext();
  MEMORY[0x24BDAC7A8](v1);
  sub_2313613F4(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_231360F28 + 4 * byte_23141D764[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

unint64_t sub_231360F28()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23141231C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
  return 0xD000000000000014;
}

void sub_231360FB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  _QWORD v18[5];
  uint64_t v19;

  v19 = a2;
  v3 = sub_23141231C();
  v18[3] = *(_QWORD *)(v3 - 8);
  v18[4] = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v18[2] = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v18[1] = (char *)v18 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  MEMORY[0x24BDAC7A8](v8);
  v9 = type metadata accessor for AFibBurdenOnboardingPresentationContext();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v12 = MEMORY[0x24BDAC7A8](v11);
  MEMORY[0x24BDAC7A8](v12);
  sub_231361394();
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v18 + *(int *)(v14 + 48) - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313613F4(a1, (uint64_t)v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2313613F4(v19, (uint64_t)v16);
  v17 = (char *)sub_23136117C + 4 * byte_23141D769[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23136117C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  sub_2313613F4(v0, v2);
  if (swift_getEnumCaseMultiPayload())
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 104) + 8))(v2, *(_QWORD *)(v4 - 96));
    v5 = 0;
    v6 = (uint64_t (*)(_QWORD))sub_231361394;
  }
  else
  {
    v7 = *(_QWORD *)(v4 - 104);
    v8 = *(_QWORD *)(v4 - 96);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v3, v1, v8);
    v5 = sub_231412310();
    v9 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v9(v3, v8);
    v9(v2, v8);
    v6 = (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenOnboardingPresentationContext;
  }
  sub_2312CEBD4(v0, v6);
  return v5 & 1;
}

void sub_231361394()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255ECE6F8)
  {
    type metadata accessor for AFibBurdenOnboardingPresentationContext();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255ECE6F8);
  }
}

uint64_t sub_2313613F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AFibBurdenOnboardingPresentationContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for BloodPressureSampleManager()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for AFibBurdenLifeFactorDescriptionDataSource(uint64_t a1)
{
  return sub_2312F19EC(a1, qword_255ECE7A8);
}

uint64_t sub_23136146C()
{
  return swift_initClassMetadata2();
}

void sub_2313614A8()
{
  sub_2313614D8();
}

void sub_2313614C0()
{
  sub_2313614D8();
}

void sub_2313614D8()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_231361500()
{
  sub_231412394();
  return swift_deallocClassInstance();
}

uint64_t sub_23136151C()
{
  return type metadata accessor for AFibBurdenLifeFactorDescriptionDataSource(0);
}

uint64_t type metadata accessor for AFibBurdenLifeFactorAppRecommendationsFetchedResultsControllerDataSource(uint64_t a1)
{
  return sub_2312F19EC(a1, qword_255ECE808);
}

uint64_t sub_231361538()
{
  return swift_initClassMetadata2();
}

uint64_t sub_23136158C()
{
  MEMORY[0x2348DE248](&unk_23141D940);
  return sub_231413414();
}

uint64_t sub_2313615D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_231361790(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenLifeFactorDescriptionCell, &qword_255ECE860, (uint64_t)&unk_231419DA4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE45478]);
}

_QWORD *sub_2313615FC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *result;

  v2 = sub_231413420();
  v4 = v3;
  sub_23130E348();
  v6 = v5;
  v8 = v7;
  type metadata accessor for TitleSubtitleView();
  sub_2312CCC24(&qword_255ECE868, (uint64_t (*)(uint64_t))type metadata accessor for TitleSubtitleView, (uint64_t)&protocol conformance descriptor for TitleSubtitleView);
  v9 = sub_231412328();
  v11 = v10;
  a1[3] = &type metadata for TitleSubtitleItem;
  a1[4] = sub_231361828();
  result = (_QWORD *)swift_allocObject();
  *a1 = result;
  result[2] = 0xD000000000000011;
  result[3] = 0x800000023142C900;
  result[4] = v9;
  result[5] = v11;
  result[6] = v2;
  result[7] = v4;
  result[8] = v6;
  result[9] = v8;
  return result;
}

void sub_2313616E4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_231361710()
{
  return swift_release();
}

id sub_231361720()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AFibBurdenLifeFactorAppRecommendationsFetchedResultsControllerDataSource(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_231361754()
{
  return swift_release();
}

uint64_t sub_231361764()
{
  return type metadata accessor for AFibBurdenLifeFactorAppRecommendationsFetchedResultsControllerDataSource(0);
}

uint64_t sub_23136176C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_231361790(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for TitleSubtitleView, &qword_255ECE868, (uint64_t)&protocol conformance descriptor for TitleSubtitleView, MEMORY[0x24BE45488]);
}

uint64_t sub_231361790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), unint64_t *a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v11;
  uint64_t v12;

  v11 = a4(0);
  v12 = sub_2312CCC24(a5, a4, a6);
  return a7(v11, v11, v12);
}

uint64_t sub_2313617FC()
{
  return sub_2312CCC24(&qword_255ECE858, type metadata accessor for AFibBurdenLifeFactorDescriptionDataSource, (uint64_t)&unk_23141D910);
}

unint64_t sub_231361828()
{
  unint64_t result;

  result = qword_255ECE870;
  if (!qword_255ECE870)
  {
    result = MEMORY[0x2348DE248](&unk_23141DCC4, &type metadata for TitleSubtitleItem);
    atomic_store(result, (unint64_t *)&qword_255ECE870);
  }
  return result;
}

uint64_t sub_23136186C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2313618A8(_OWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v13;
  uint64_t v14;
  unint64_t v15;

  v2 = sub_231411644();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598];
  sub_2312D6DD8(0, (unint64_t *)&qword_255ECF250, (uint64_t (*)(uint64_t))sub_231361A54, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v7 = swift_allocObject();
  v13 = xmmword_231416A30;
  *(_OWORD *)(v7 + 16) = xmmword_231416A30;
  sub_2312D6DD8(0, (unint64_t *)&qword_255ECAC50, (uint64_t (*)(uint64_t))sub_2312D1CE8, v6);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = v13;
  *(_QWORD *)(v8 + 56) = &type metadata for AFibBurdenLifeFactorDescriptionItem;
  *(_QWORD *)(v8 + 64) = sub_231361A70();
  v9 = (_OWORD *)swift_allocObject();
  *(_QWORD *)(v8 + 32) = v9;
  v10 = a1[1];
  v9[1] = *a1;
  v9[2] = v10;
  v11 = a1[3];
  v9[3] = a1[2];
  v9[4] = v11;
  *(_QWORD *)(v7 + 32) = v8;
  v14 = 0x3C53447961727241;
  v15 = 0xE800000000000000;
  sub_231361AF8((uint64_t)a1);
  sub_231411638();
  sub_231411614();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_231414728();
  swift_bridgeObjectRelease();
  sub_231414728();
  return sub_231412388();
}

void sub_231361A54(uint64_t a1)
{
  sub_2312D6DD8(a1, &qword_255ECE878, (uint64_t (*)(uint64_t))sub_2312D1CE8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
}

unint64_t sub_231361A70()
{
  unint64_t result;

  result = qword_255ECE880;
  if (!qword_255ECE880)
  {
    result = MEMORY[0x2348DE248](&unk_23141BAA4, &type metadata for AFibBurdenLifeFactorDescriptionItem);
    atomic_store(result, (unint64_t *)&qword_255ECE880);
  }
  return result;
}

uint64_t sub_231361AB4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 64))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_231361AF8(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 48);
  sub_231412A90();
  sub_231412A90();
  sub_231412A90();
  sub_231361B58(v2);
  return a1;
}

uint64_t sub_231361B58(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_231361B68(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  sub_2312CCB14();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_231411B48();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (void *)*MEMORY[0x24BDD2DC8];
  sub_2312D6C20(a2, (uint64_t)v5, (uint64_t (*)(_QWORD))sub_2312CCB14);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23136334C((uint64_t)v5);
    v11 = 0;
    v12 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    v11 = sub_231411B3C();
    v12 = v13;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  v14 = sub_231400D68(v10, 1, v11, v12);
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_231361CC4()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for HeartFeatureStatusAvailabilityProvider()
{
  return objc_opt_self();
}

uint64_t sub_231361D08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a4;
  sub_231362AF0(0, &qword_25415DD58, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB99B8]);
  v8 = v7;
  v45 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v41 - v9;
  v11 = sub_231413780();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v41 - v16;
  sub_231362B84(0, &qword_25415DF48, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_231416A30;
  *(_QWORD *)(v18 + 32) = sub_231362BEC(a1, a2);
  v48 = v18;
  sub_2314147B8();
  v19 = v48;
  sub_231411A1C();
  if ((sub_231411B90() & 1) == 0)
  {
    sub_231412148();
    v29 = sub_231413768();
    v30 = sub_23141498C();
    if (os_log_type_enabled(v29, v30))
    {
      v43 = v12;
      v31 = (uint8_t *)swift_slowAlloc();
      v32 = swift_slowAlloc();
      v44 = v19;
      v33 = v32;
      v47 = v32;
      v48 = a3;
      v42 = v11;
      *(_DWORD *)v31 = 136446210;
      swift_getMetatypeMetadata();
      v34 = sub_2314146E0();
      v48 = sub_23133180C(v34, v35, &v47);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v29, v30, "[%{public}s]: In foreground mode, so will continue to listen for updates", v31, 0xCu);
      swift_arrayDestroy();
      v36 = v33;
      v19 = v44;
      MEMORY[0x2348DE308](v36, -1, -1);
      MEMORY[0x2348DE308](v31, -1, -1);

      (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v42);
      goto LABEL_9;
    }

    v37 = *(void (**)(char *, uint64_t))(v12 + 8);
    v38 = v15;
LABEL_8:
    v37(v38, v11);
    goto LABEL_9;
  }
  sub_231412148();
  v20 = sub_231413768();
  v21 = sub_23141498C();
  if (!os_log_type_enabled(v20, v21))
  {

    v37 = *(void (**)(char *, uint64_t))(v12 + 8);
    v38 = v17;
    goto LABEL_8;
  }
  v43 = v12;
  v22 = swift_slowAlloc();
  v42 = v11;
  v23 = (uint8_t *)v22;
  v24 = swift_slowAlloc();
  v44 = v19;
  v25 = v24;
  v47 = v24;
  v48 = a3;
  *(_DWORD *)v23 = 136446210;
  swift_getMetatypeMetadata();
  v26 = sub_2314146E0();
  v48 = sub_23133180C(v26, v27, &v47);
  sub_231414CBC();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_2312C8000, v20, v21, "[%{public}s]: In background mode, so will finish after 1 update", v23, 0xCu);
  swift_arrayDestroy();
  v28 = v25;
  v19 = v44;
  MEMORY[0x2348DE308](v28, -1, -1);
  MEMORY[0x2348DE308](v23, -1, -1);

  (*(void (**)(char *, uint64_t))(v43 + 8))(v17, v42);
LABEL_9:
  v48 = v19;
  sub_2313411FC(0, (unint64_t *)&qword_25415DD68, (void (*)(uint64_t))sub_2312E5B54);
  sub_231362B84(0, &qword_25415DE60, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_231341258((unint64_t *)&qword_25415DD60, (unint64_t *)&qword_25415DD68, (void (*)(uint64_t))sub_2312E5B54);
  sub_231362FC8();
  sub_231413CF0();
  sub_231363020(&qword_25415DD50, &qword_25415DD58, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB99B8], MEMORY[0x24BDB99D8]);
  v39 = sub_231413E7C();
  result = (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v10, v8);
  *v46 = v39;
  return result;
}

uint64_t sub_2313621AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v4;
  char v5;
  _QWORD v7[5];

  v4 = (void *)sub_231411A28();
  v5 = objc_msgSend((id)objc_opt_self(), sel_hasPairedWatch);
  v7[3] = sub_23141186C();
  v7[4] = &off_250025F88;
  v7[0] = sub_231411860();
  sub_2312D3F04((uint64_t)v4, a1, v5, v7, a2);

  return _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v7);
}

uint64_t sub_231362250@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v28 = a1;
  v30 = a3;
  sub_2312E804C(0);
  v27 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v26 = (uint64_t)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6DD8(0, (unint64_t *)&unk_25415D020, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
  v29 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v25 = (char *)&v25 - v8;
  v9 = sub_2314119E0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_231411A04();
  MEMORY[0x24BDAC7A8](v13);
  v14 = sub_231411A4C();
  MEMORY[0x24BDAC7A8](v14);
  (*(void (**)(char *, uint64_t))(v16 + 16))((char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  sub_231411A28();
  sub_2312D6DD8(0, (unint64_t *)&qword_25415DF20, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v17 = sub_231411890();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_231416A30;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v18 + 104))(v20 + v19, *MEMORY[0x24BE47420], v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BE47910], v9);
  sub_2314119EC();
  sub_2312D6C20(v28, v26, (uint64_t (*)(_QWORD))sub_2312E804C);
  sub_231413DD4();
  v21 = sub_231411A7C();
  v22 = MEMORY[0x24BE47A60];
  v23 = v30;
  v30[3] = v21;
  v23[4] = v22;
  sub_2312DFCA0(v23);
  sub_2313632EC();
  return sub_231411A70();
}

uint64_t sub_231362524()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC5Heart35HeartFeatureStatusGeneratorPipeline_domain;
  v2 = sub_231411A04();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_231362584()
{
  return type metadata accessor for HeartFeatureStatusGeneratorPipeline();
}

uint64_t type metadata accessor for HeartFeatureStatusGeneratorPipeline()
{
  uint64_t result;

  result = qword_25415D620;
  if (!qword_25415D620)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2313625C8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_231411A04();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_231362640()
{
  return swift_retain();
}

uint64_t sub_231362654@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC5Heart35HeartFeatureStatusGeneratorPipeline_domain;
  v4 = sub_231411A04();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23136269C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v34 = a1;
  v41 = *v2;
  v42 = a2;
  v3 = sub_231411A4C();
  v37 = *(_QWORD *)(v3 - 8);
  v38 = v3;
  v39 = *(_QWORD *)(v37 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v35 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231362AF0(0, &qword_25415DE08, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB9E80]);
  v6 = *(_QWORD *)(v5 - 8);
  v43 = v5;
  v44 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v40 = (char *)&v33 - v7;
  v8 = sub_2314119E0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_231411A04();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_231411A28();
  sub_2312D6DD8(0, (unint64_t *)&qword_25415DF20, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v16 = sub_231411890();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_231416A30;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v17 + 104))(v19 + v18, *MEMORY[0x24BE47420], v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BE47910], v8);
  sub_2314119EC();
  v20 = v36;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v36 + OBJC_IVAR____TtC5Heart35HeartFeatureStatusGeneratorPipeline_domain, v15, v12);
  v22 = v37;
  v21 = v38;
  v24 = v34;
  v23 = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v35, v34, v38);
  v25 = (*(unsigned __int8 *)(v22 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v26 = (v39 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  v27 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v22 + 32))(v27 + v25, v23, v21);
  v28 = v41;
  *(_QWORD *)(v27 + v26) = v42;
  *(_QWORD *)(v27 + ((v26 + 15) & 0xFFFFFFFFFFFFFFF8)) = v28;
  sub_2313411FC(0, (unint64_t *)&qword_25415DD68, (void (*)(uint64_t))sub_2312E5B54);
  sub_231341258((unint64_t *)&qword_25415DD60, (unint64_t *)&qword_25415DD68, (void (*)(uint64_t))sub_2312E5B54);
  swift_retain();
  v29 = v40;
  sub_231413E04();
  sub_231363020((unint64_t *)&qword_25415DE00, &qword_25415DE08, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB9E80], MEMORY[0x24BDB9E90]);
  v30 = v43;
  v31 = sub_231413E7C();
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v21);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v29, v30);
  result = v20;
  *(_QWORD *)(v20 + OBJC_IVAR____TtC5Heart35HeartFeatureStatusGeneratorPipeline_publisher) = v31;
  return result;
}

uint64_t sub_231362A18()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_231411A4C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_231362A94@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(sub_231411A4C() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_231361D08(v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFF8)), a1);
}

void sub_231362AF0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_2313411FC(255, (unint64_t *)&qword_25415DD68, (void (*)(uint64_t))sub_2312E5B54);
    v7 = v6;
    v8 = sub_231341258((unint64_t *)&qword_25415DD60, (unint64_t *)&qword_25415DD68, (void (*)(uint64_t))sub_2312E5B54);
    v9 = a3(a1, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_231362B84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_2313411FC(255, (unint64_t *)&qword_25415DD68, (void (*)(uint64_t))sub_2312E5B54);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_231362BEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_QWORD, _QWORD, _QWORD);
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void (*v29)(unint64_t, char *, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  void (*v37)(_QWORD, _QWORD, _QWORD);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[4];

  v46 = sub_231411A4C();
  v4 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v40 = v5;
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231363060();
  v36 = *(v7 - 1);
  v37 = (void (*)(_QWORD, _QWORD, _QWORD))v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313630F0(0, &qword_25415CE78, sub_2312E804C);
  v44 = *(_QWORD *)(v10 - 8);
  v45 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - v11;
  sub_2313630F0(0, (unint64_t *)&qword_25415CE88, (void (*)(uint64_t))sub_2312E5B54);
  v42 = *(_QWORD *)(v13 - 8);
  v43 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v41 = (char *)&v36 - v14;
  v15 = *(uint64_t (**)(void))(a2 + 16);
  swift_retain();
  sub_231411A10();
  sub_2312CEA5C(v47, v47[3]);
  v16 = (void *)sub_2314119C8();
  v17 = v15();

  swift_release();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v47);
  v47[0] = v17;
  v18 = a1;
  LOBYTE(a2) = sub_231411A1C();
  v19 = (void (*)(uint64_t))MEMORY[0x24BE45750];
  sub_2313411FC(0, (unint64_t *)&qword_25415CFC0, (void (*)(uint64_t))MEMORY[0x24BE45750]);
  v21 = v20;
  v38 = sub_231341258((unint64_t *)&qword_25415CFB0, (unint64_t *)&qword_25415CFC0, v19);
  v39 = v21;
  if ((a2 & 1) != 0)
  {
    v23 = sub_231413E7C();
  }
  else
  {
    sub_231413EDC();
    sub_2312CCC24((unint64_t *)&qword_25415D228, (uint64_t (*)(uint64_t))sub_231363060, MEMORY[0x24BDB9770]);
    v22 = v37;
    v23 = sub_231413E7C();
    (*(void (**)(char *, void (*)(_QWORD, _QWORD, _QWORD)))(v36 + 8))(v9, v22);
  }
  swift_release();
  v47[0] = v23;
  v37 = *(void (**)(_QWORD, _QWORD, _QWORD))(v4 + 16);
  v24 = v6;
  v25 = v6;
  v26 = v46;
  v37(v25, v18, v46);
  v27 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v28 = swift_allocObject();
  v29 = *(void (**)(unint64_t, char *, uint64_t))(v4 + 32);
  v29(v28 + v27, v24, v26);
  sub_2312E804C(0);
  sub_231413EB8();
  swift_release();
  swift_release();
  v37(v24, v18, v26);
  v30 = swift_allocObject();
  v29(v30 + v27, v24, v26);
  sub_2312E5B54();
  v31 = v41;
  v32 = v45;
  sub_231413C54();
  swift_release();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v12, v32);
  sub_231363294();
  v33 = v43;
  v34 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v31, v33);
  return v34;
}

unint64_t sub_231362FC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25415DE68;
  if (!qword_25415DE68)
  {
    sub_231362B84(255, &qword_25415DE60, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2348DE248](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_25415DE68);
  }
  return result;
}

uint64_t sub_231363020(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_231362AF0(255, a2, a3);
    result = MEMORY[0x2348DE248](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_231363060()
{
  void (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_25415CF50)
  {
    v0 = (void (*)(uint64_t))MEMORY[0x24BE45750];
    sub_2313411FC(255, (unint64_t *)&qword_25415CFC0, (void (*)(uint64_t))MEMORY[0x24BE45750]);
    sub_231341258((unint64_t *)&qword_25415CFB0, (unint64_t *)&qword_25415CFC0, v0);
    v1 = sub_231413C84();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_25415CF50);
  }
}

void sub_2313630F0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  void (*v5)(uint64_t);
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = (void (*)(uint64_t))MEMORY[0x24BE45750];
    sub_2313411FC(255, (unint64_t *)&qword_25415CFC0, (void (*)(uint64_t))MEMORY[0x24BE45750]);
    a3(255);
    sub_231341258((unint64_t *)&qword_25415CFB0, (unint64_t *)&qword_25415CFC0, v5);
    v6 = sub_231413C60();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_231363198@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_231411A4C();
  return sub_2313621AC(a1, a2);
}

uint64_t sub_2313631E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_231411A4C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_231363248@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_231411A4C() - 8) + 80);
  return sub_231362250(a1, v2 + ((v5 + 16) & ~v5), a2);
}

unint64_t sub_231363294()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25415CE80;
  if (!qword_25415CE80)
  {
    sub_2313630F0(255, (unint64_t *)&qword_25415CE88, (void (*)(uint64_t))sub_2312E5B54);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB96C0], v1);
    atomic_store(result, (unint64_t *)&qword_25415CE80);
  }
  return result;
}

unint64_t sub_2313632EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25415D018;
  if (!qword_25415D018)
  {
    sub_2312D6DD8(255, (unint64_t *)&unk_25415D020, (uint64_t (*)(uint64_t))sub_2312E804C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB9DF8], v1);
    atomic_store(result, (unint64_t *)&qword_25415D018);
  }
  return result;
}

uint64_t sub_23136334C(uint64_t a1)
{
  uint64_t v2;

  sub_2312CCB14();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_231363504()
{
  return sub_231334858(type metadata accessor for SummariesAtrialFibrillationListDataProvider);
}

uint64_t type metadata accessor for SummariesAtrialFibrillationListDataProvider()
{
  return objc_opt_self();
}

void sub_23136357C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  _QWORD *v21;
  void *v22;
  id v23;
  char *v24;
  id v25;
  __int128 v26;
  _QWORD aBlock[6];

  v1 = v0;
  sub_2312D6DD8(0, &qword_255ECCF68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&aBlock[-2] - v3;
  sub_2312D3C68(0, (unint64_t *)&qword_25415DEB0);
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_atrialFibrillationEventType);
  if (v5)
  {
    v6 = v5;
    sub_231411BF0();
    sub_2312D6DD8(0, (unint64_t *)&qword_25415DF20, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v7 = sub_231411890();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v10 = swift_allocObject();
    v26 = xmmword_231416A30;
    *(_OWORD *)(v10 + 16) = xmmword_231416A30;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v8 + 104))(v10 + v9, *MEMORY[0x24BE47440], v7);
    sub_2312D6CEC(0, (unint64_t *)&qword_25415BD40);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_231417F90;
    *(_QWORD *)(v11 + 32) = v6;
    aBlock[0] = v11;
    sub_2314147B8();
    v12 = aBlock[0];
    v13 = sub_231411248();
    v14 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878];
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v4, 1, 1, v13);
    sub_2312D6CEC(0, (unint64_t *)&qword_255ECE908);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = v26;
    v16 = v6;
    *(_QWORD *)(v15 + 32) = sub_231414914();
    v17 = (void *)MEMORY[0x2348DA5A0](v10, v12, v4, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2312D6B98((uint64_t)v4, &qword_255ECCF68, v14);
    v18 = v17;
    v19 = (void *)sub_231411BD8();

    sub_2312CEA5C(&v1[OBJC_IVAR____TtC5Heart38SummariesAtrialFibrillationDataFetcher_healthExperienceStore], *(_QWORD *)&v1[OBJC_IVAR____TtC5Heart38SummariesAtrialFibrillationDataFetcher_healthExperienceStore + 24]);
    v20 = (void *)sub_23141183C();
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = v1;
    v21[3] = v19;
    v21[4] = v16;
    aBlock[4] = sub_231364554;
    aBlock[5] = v21;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23130DCCC;
    aBlock[3] = &unk_2500247D0;
    v22 = _Block_copy(aBlock);
    v23 = v16;
    v24 = v1;
    v25 = v19;
    swift_release();
    objc_msgSend(v20, sel_performBlock_, v22);
    _Block_release(v22);

  }
  else
  {
    __break(1u);
  }
}

void sub_2313638D0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void *v21;
  id v22;
  NSObject *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  _QWORD *v27;
  NSObject *v28;
  char *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  id v34;
  char *v35;
  char *v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  id v41;
  void *v42;
  unsigned int v43;
  id v44;
  void *v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t i;
  id v56;
  void *v57;
  id v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  char *v62;
  NSObject *v63;
  int v64;
  uint8_t *v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  id v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  id v78;
  NSObject *v79;
  os_log_type_t v80;
  uint8_t *v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  id v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95[2];

  v90 = a3;
  v4 = sub_231413780();
  v91 = *(_QWORD *)(v4 - 8);
  v92 = (char *)v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v93 = (char *)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v87 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v87 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v87 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v87 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v87 - v19;
  sub_2312CEA5C((_QWORD *)(a1 + OBJC_IVAR____TtC5Heart38SummariesAtrialFibrillationDataFetcher_healthExperienceStore), *(_QWORD *)(a1 + OBJC_IVAR____TtC5Heart38SummariesAtrialFibrillationDataFetcher_healthExperienceStore + 24));
  v21 = (void *)sub_23141183C();
  sub_231411BF0();
  v22 = 0;
  v31 = sub_231414B54();
  v32 = (unint64_t)v20;
  v88 = v12;
  v89 = v9;

  if (!(v31 >> 62))
  {
    v33 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
    v34 = v93;
    if (v33)
      goto LABEL_9;
LABEL_55:
    swift_bridgeObjectRelease();
    sub_231413750();
    v23 = v90;
    v24 = sub_231413768();
    v25 = sub_231414980();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v26 = 138412290;
      v95[0] = (uint64_t)v23;
      v28 = v23;
      sub_231414CBC();
      *v27 = v23;

      _os_log_impl(&dword_2312C8000, v24, v25, "Missing feed item when trying to decode Summaries data for %@", v26, 0xCu);
      sub_231327294();
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v27, -1, -1);
      MEMORY[0x2348DE308](v26, -1, -1);
    }
    else
    {

      v24 = v23;
    }
    v30 = v91;
    v29 = v92;

    (*(void (**)(id, char *))(v30 + 8))(v34, v29);
    return;
  }
  sub_231412A90();
  v33 = sub_231414F08();
  swift_bridgeObjectRelease();
  v34 = v93;
  if (!v33)
    goto LABEL_55;
LABEL_9:
  if ((v31 & 0xC000000000000001) != 0)
  {
    v35 = (char *)MEMORY[0x2348DD81C](0, v31);
  }
  else
  {
    if (!*(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_58;
    }
    v35 = (char *)*(id *)(v31 + 32);
  }
  v36 = v35;
  swift_bridgeObjectRelease();
  v37 = objc_msgSend(v36, sel_userData);
  if (v37)
  {
    v38 = sub_2314114DC();
    v40 = v39;

    v37 = (id)sub_2314114C4();
    sub_2312D6CA8(v38, v40);
  }
  v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A348]), sel_initWithData_, v37);

  if (!v34)
  {
    sub_231413750();
    v59 = sub_231413768();
    v60 = sub_231414980();
    if (os_log_type_enabled(v59, v60))
    {
      v61 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v61 = 0;
      _os_log_impl(&dword_2312C8000, v59, v60, "Unable to decode chart feed item data", v61, 2u);
      MEMORY[0x2348DE308](v61, -1, -1);
    }

    goto LABEL_40;
  }
  v93 = v36;
  v41 = objc_msgSend(v34, sel_chartModel);
  if (!v41)
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  v42 = v41;
  v43 = objc_msgSend(v41, sel_hasSixMonthData);

  if (!v43)
  {
    v62 = v89;
    sub_231413750();
    v63 = sub_231413768();
    v64 = sub_231414980();
    if (os_log_type_enabled(v63, (os_log_type_t)v64))
    {
      v65 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v65 = 0;
      _os_log_impl(&dword_2312C8000, v63, (os_log_type_t)v64, "Missing data charting model", v65, 2u);
      MEMORY[0x2348DE308](v65, -1, -1);
    }

    (*(void (**)(char *, char *))(v91 + 8))(v62, v92);
    return;
  }
  v44 = objc_msgSend(v34, sel_chartModel);
  if (!v44)
  {
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
    return;
  }
  v45 = v44;
  v90 = objc_msgSend(v44, sel_sixMonthData);

  v22 = v93;
  if (!v90)
  {
    sub_231413750();
    v66 = sub_231413768();
    v67 = sub_231414980();
    if (os_log_type_enabled(v66, v67))
    {
      v68 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v68 = 0;
      _os_log_impl(&dword_2312C8000, v66, v67, "Unable to decode sharable charting model", v68, 2u);
      MEMORY[0x2348DE308](v68, -1, -1);
    }

    (*(void (**)(char *, char *))(v91 + 8))(v18, v92);
    return;
  }
  if (objc_msgSend(v90, sel_type) != 11)
  {
    v32 = (unint64_t)v15;
    sub_23141372C();
    v69 = v90;
    v70 = sub_231413768();
    v71 = sub_231414974();
    if (os_log_type_enabled(v70, v71))
    {
      v72 = (uint8_t *)swift_slowAlloc();
      v73 = swift_slowAlloc();
      v94 = (uint64_t)v69;
      v95[0] = v73;
      v90 = (id)v32;
      *(_DWORD *)v72 = 136315138;
      sub_2312D3C68(0, &qword_255ECE910);
      v74 = v69;
      v75 = sub_2314146EC();
      v94 = sub_23133180C(v75, v76, v95);
      sub_231414CBC();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2312C8000, v70, v71, "Unsupported chart model %s", v72, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v73, -1, -1);
      MEMORY[0x2348DE308](v72, -1, -1);

      (*(void (**)(id, char *))(v91 + 8))(v90, v92);
      return;
    }

LABEL_40:
    (*(void (**)(unint64_t, char *))(v91 + 8))(v32, v92);
    return;
  }
  v46 = objc_msgSend(v90, sel_queryDataObject);
  if (v46)
  {
    v47 = sub_2314114DC();
    v49 = v48;

    v46 = (id)sub_2314114C4();
    sub_2312D6CA8(v47, v49);
  }
  v50 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A3F0]), sel_initWithData_, v46);

  if (!v50)
    goto LABEL_64;
  v51 = objc_msgSend(v50, sel_samples);

  if (v51)
  {
    v95[0] = 0;
    sub_2312D3C68(0, &qword_255ECE918);
    sub_231414794();

    v32 = v95[0];
    if (v95[0])
    {
      v9 = *(char **)(a1 + OBJC_IVAR____TtC5Heart38SummariesAtrialFibrillationDataFetcher_resultsHandler);
      v33 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Heart38SummariesAtrialFibrillationDataFetcher_resultsHandler + 8);
      v95[0] = MEMORY[0x24BEE4AF8];
      if (!(v32 >> 62))
      {
        v52 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
        sub_231412A90();
        if (v52)
        {
LABEL_27:
          v91 = v33;
          v92 = v9;
          v53 = objc_opt_self();
          if (v52 >= 1)
          {
            v54 = (void *)v53;
            for (i = 0; i != v52; ++i)
            {
              if ((v32 & 0xC000000000000001) != 0)
                v56 = (id)MEMORY[0x2348DD81C](i, v32);
              else
                v56 = *(id *)(v32 + 8 * i + 32);
              v57 = v56;
              v58 = objc_msgSend(v54, sel_createWithCodableNotificationSample_, v56);

              if (v58)
              {
                MEMORY[0x2348DD15C]();
                if (*(_QWORD *)((v95[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v95[0] & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
                  sub_2314147DC();
                sub_2314147E8();
                sub_2314147B8();
              }
            }
            swift_bridgeObjectRelease();
            v86 = v95[0];
            v9 = v92;
            v22 = v93;
            goto LABEL_60;
          }
          __break(1u);
          goto LABEL_62;
        }
LABEL_59:
        swift_bridgeObjectRelease();
        v86 = MEMORY[0x24BEE4AF8];
LABEL_60:
        swift_bridgeObjectRelease();
        ((void (*)(uint64_t, _QWORD))v9)(v86, 0);
        swift_bridgeObjectRelease();

        return;
      }
LABEL_58:
      sub_231412A90();
      v52 = sub_231414F08();
      if (v52)
        goto LABEL_27;
      goto LABEL_59;
    }
  }
  v77 = v88;
  sub_23141372C();
  v78 = v90;
  v79 = sub_231413768();
  v80 = sub_231414974();
  if (os_log_type_enabled(v79, v80))
  {
    v81 = (uint8_t *)swift_slowAlloc();
    v82 = swift_slowAlloc();
    v94 = (uint64_t)v78;
    v95[0] = v82;
    *(_DWORD *)v81 = 136315138;
    sub_2312D3C68(0, &qword_255ECE910);
    v83 = v78;
    v84 = sub_2314146EC();
    v94 = sub_23133180C(v84, v85, v95);
    sub_231414CBC();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2312C8000, v79, v80, "Cound not decode query data %s", v81, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v82, -1, -1);
    MEMORY[0x2348DE308](v81, -1, -1);

    (*(void (**)(char *, char *))(v91 + 8))(v88, v92);
  }
  else
  {

    (*(void (**)(char *, char *))(v91 + 8))(v77, v92);
  }
}

id sub_2313644A8()
{
  return sub_231334858(type metadata accessor for SummariesAtrialFibrillationDataFetcher);
}

uint64_t type metadata accessor for SummariesAtrialFibrillationDataFetcher()
{
  return objc_opt_self();
}

uint64_t sub_231364520()
{
  id *v0;

  return swift_deallocObject();
}

void sub_231364554()
{
  uint64_t v0;

  sub_2313638D0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_231364560(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_231364570()
{
  return swift_release();
}

uint64_t sub_231364578()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_23136459C(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_23139E7E0(a1, a2, *(_QWORD *)(v2 + 16));
}

id sub_2313645A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  objc_class *v6;
  char *v7;
  char *v8;
  id v9;
  id v10;
  objc_super v12;
  __int128 v13;
  uint64_t v14;
  _BYTE v15[40];

  v3 = *(void **)(v2 + OBJC_IVAR____TtC5Heart43SummariesAtrialFibrillationListDataProvider_store);
  if (!v3)
    return 0;
  sub_23130AC10(v2 + OBJC_IVAR____TtC5Heart43SummariesAtrialFibrillationListDataProvider_healthExperienceStore, (uint64_t)&v13);
  if (!v14)
  {
    sub_2312D6B98((uint64_t)&v13, &qword_255ECC210, (uint64_t (*)(uint64_t))sub_23130ABBC);
    return 0;
  }
  sub_2312DFB68(&v13, (uint64_t)v15);
  sub_2312DF850((uint64_t)v15, (uint64_t)&v13);
  v6 = (objc_class *)type metadata accessor for SummariesAtrialFibrillationDataFetcher();
  v7 = (char *)objc_allocWithZone(v6);
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Heart38SummariesAtrialFibrillationDataFetcher_healthStore] = v3;
  sub_2312DF850((uint64_t)&v13, (uint64_t)&v7[OBJC_IVAR____TtC5Heart38SummariesAtrialFibrillationDataFetcher_healthExperienceStore]);
  v8 = &v7[OBJC_IVAR____TtC5Heart38SummariesAtrialFibrillationDataFetcher_resultsHandler];
  *(_QWORD *)v8 = a1;
  *((_QWORD *)v8 + 1) = a2;
  v12.receiver = v7;
  v12.super_class = v6;
  v9 = v3;
  swift_retain();
  v10 = objc_msgSendSuper2(&v12, sel_init);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)&v13);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v15);
  return v10;
}

uint64_t sub_2313646BC@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(_QWORD);
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  _QWORD v17[2];

  v6 = type metadata accessor for ElectrocardiogramRecordingOnboardingPromotionConfiguration();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2313666AC(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6C20(v2, (uint64_t)v12, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
  {
    v14 = sub_2314119B0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a2, 1, 1, v14);
  }
  else
  {
    sub_2312EE5FC((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ElectrocardiogramRecordingOnboardingPromotionConfiguration);
    a1(v9);
    result = sub_2312CEBD4((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ElectrocardiogramRecordingOnboardingPromotionConfiguration);
    if (!v3)
    {
      v16 = sub_2314119B0();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a2, 0, 1, v16);
    }
  }
  return result;
}

void sub_231364834(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_QWORD *, _QWORD);
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[11];

  v28[10] = a2;
  v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    sub_231412A90();
    sub_231414D4C();
    sub_231366FC0();
    sub_2312CCC24((unint64_t *)&unk_25415DEA0, (uint64_t (*)(uint64_t))sub_231366FC0, MEMORY[0x24BEE5BD8]);
    sub_2314148D8();
    v2 = v28[4];
    v25 = v28[5];
    v3 = v28[6];
    v4 = v28[7];
    v5 = v28[8];
  }
  else
  {
    v6 = -1 << *(_BYTE *)(a1 + 32);
    v25 = a1 + 56;
    v7 = ~v6;
    v8 = -v6;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v5 = v9 & *(_QWORD *)(a1 + 56);
    sub_231412A90();
    v3 = v7;
    v4 = 0;
  }
  v24 = (unint64_t)(v3 + 64) >> 6;
  v26 = v2;
  while (v2 < 0)
  {
    v13 = sub_231414DA0();
    if (!v13)
      goto LABEL_36;
    v27 = v13;
    sub_231366FC0();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v14 = (id)v28[0];
    sub_2314130CC();
    v12 = v4;
    v10 = v5;
    if (!v14)
      goto LABEL_36;
LABEL_32:
    v18 = sub_231411A88();
    v19 = (void (*)(_QWORD *, _QWORD))sub_23141198C();
    v20 = *(_QWORD *)(v18 + 16);
    if (v20)
    {
      v21 = (uint64_t *)(v18 + 40);
      do
      {
        v22 = *(v21 - 1);
        v23 = *v21;
        sub_231412A90();
        sub_2313F2664(&v27, v22, v23);
        swift_bridgeObjectRelease();
        v21 += 2;
        --v20;
      }
      while (v20);
    }
    swift_bridgeObjectRelease();
    v19(v28, 0);

    v4 = v12;
    v5 = v10;
    v2 = v26;
  }
  if (v5)
  {
    v10 = (v5 - 1) & v5;
    v11 = __clz(__rbit64(v5)) | (v4 << 6);
    v12 = v4;
LABEL_31:
    v14 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v11);
    if (!v14)
      goto LABEL_36;
    goto LABEL_32;
  }
  v15 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v15 >= v24)
      goto LABEL_36;
    v16 = *(_QWORD *)(v25 + 8 * v15);
    v12 = v4 + 1;
    if (!v16)
    {
      v12 = v4 + 2;
      if (v4 + 2 >= v24)
        goto LABEL_36;
      v16 = *(_QWORD *)(v25 + 8 * v12);
      if (!v16)
      {
        v12 = v4 + 3;
        if (v4 + 3 >= v24)
          goto LABEL_36;
        v16 = *(_QWORD *)(v25 + 8 * v12);
        if (!v16)
        {
          v12 = v4 + 4;
          if (v4 + 4 >= v24)
            goto LABEL_36;
          v16 = *(_QWORD *)(v25 + 8 * v12);
          if (!v16)
          {
            v12 = v4 + 5;
            if (v4 + 5 >= v24)
              goto LABEL_36;
            v16 = *(_QWORD *)(v25 + 8 * v12);
            if (!v16)
            {
              v17 = v4 + 6;
              while (v24 != v17)
              {
                v16 = *(_QWORD *)(v25 + 8 * v17++);
                if (v16)
                {
                  v12 = v17 - 1;
                  goto LABEL_30;
                }
              }
LABEL_36:
              sub_231366FFC();
              return;
            }
          }
        }
      }
    }
LABEL_30:
    v10 = (v16 - 1) & v16;
    v11 = __clz(__rbit64(v16)) + (v12 << 6);
    goto LABEL_31;
  }
  __break(1u);
}

unint64_t ElectrocardiogramRecordingOnboardingPromotionConfigurationProvider.feedItemIdentifier.getter()
{
  return 0xD000000000000028;
}

uint64_t ElectrocardiogramRecordingOnboardingPromotionConfigurationProvider.contentKind.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BE474E0];
  v3 = sub_231411890();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

unint64_t ElectrocardiogramRecordingOnboardingPromotionConfigurationProvider.featureAutomationIdentifier.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t ElectrocardiogramRecordingOnboardingPromotionConfigurationProvider.__allocating_init(healthStore:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t ElectrocardiogramRecordingOnboardingPromotionConfigurationProvider.init(healthStore:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_231364C28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t inited;
  void *v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(unint64_t *, _QWORD);
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  unint64_t v53[5];

  *(_QWORD *)&v51 = a2;
  v47 = a1;
  v50 = a3;
  v44 = sub_231411AE8();
  v43 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v42 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231336A1C(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_231411AC4();
  v48 = *(_QWORD *)(v49 - 8);
  v7 = MEMORY[0x24BDAC7A8](v49);
  v40 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v41 = (char *)&v39 - v9;
  v10 = sub_231411D70();
  MEMORY[0x24BDAC7A8](v10);
  v46 = sub_231411F50();
  v45 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25415E610 != -1)
    swift_once();
  v13 = (id)qword_254163058;
  sub_231411D64();
  sub_231411374();
  sub_231411374();
  sub_231411374();
  sub_231411F2C();
  v14 = (void *)sub_231411A28();
  type metadata accessor for ElectrocardiogramRecordingOnboardingPromotionConfiguration();
  v15 = v12;
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_231414F08())
    sub_23138EEC4(MEMORY[0x24BEE4AF8]);
  type metadata accessor for ElectrocardiogramPromotionTileActionHandler();
  sub_2312CCC24((unint64_t *)&unk_255ECBE38, (uint64_t (*)(uint64_t))type metadata accessor for ElectrocardiogramPromotionTileActionHandler, (uint64_t)&unk_231419360);
  v16 = v50;
  sub_23141192C();
  swift_bridgeObjectRelease();

  sub_2312D6C20(v51, (uint64_t)v6, (uint64_t (*)(_QWORD))sub_231336A1C);
  v17 = v48;
  v18 = v49;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v6, 1, v49) == 1)
  {
    sub_2312CEBD4((uint64_t)v6, (uint64_t (*)(_QWORD))sub_231336A1C);
  }
  else
  {
    v19 = v41;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v41, v6, v18);
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v40, v19, v18);
    v20 = v42;
    sub_231411AF4();
    v21 = v44;
    sub_231411944();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v20, v21);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v18);
  }
  sub_2312CF374(0, (unint64_t *)&qword_25415BD40, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  v51 = xmmword_231417F90;
  *(_OWORD *)(inited + 16) = xmmword_231417F90;
  v23 = (void *)objc_opt_self();
  *(_QWORD *)(inited + 32) = objc_msgSend(v23, sel_electrocardiogramType);
  v53[0] = inited;
  sub_2314147B8();
  v24 = v53[0];
  if (v53[0] >> 62)
  {
    sub_231412A90();
    v28 = sub_231414F08();
    swift_bridgeObjectRelease();
    v25 = v15;
    if (v28)
      goto LABEL_9;
  }
  else
  {
    v25 = v15;
    if (*(_QWORD *)((v53[0] & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_9:
      sub_2312FC638(v24);
      v27 = v26;
      goto LABEL_14;
    }
  }
  v27 = MEMORY[0x24BEE4B08];
LABEL_14:
  swift_bridgeObjectRelease();
  sub_231364834(v27, v16);
  swift_bridgeObjectRelease();
  v29 = sub_231411A94();
  v31 = v30;
  v32 = (void (*)(unint64_t *, _QWORD))sub_23141198C();
  sub_231412A90();
  sub_2313F2664(&v52, v29, v31);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v32(v53, 0);
  v33 = swift_initStackObject();
  *(_OWORD *)(v33 + 16) = v51;
  *(_QWORD *)(v33 + 32) = objc_msgSend(v23, sel_electrocardiogramType);
  v53[0] = v33;
  sub_2314147B8();
  v34 = v53[0];
  if (v53[0] >> 62)
  {
    sub_231412A90();
    v35 = sub_231414F08();
    swift_bridgeObjectRelease();
  }
  else
  {
    v35 = *(_QWORD *)((v53[0] & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v36 = v46;
  v37 = v45;
  if (v35)
    sub_2312FC638(v34);
  swift_bridgeObjectRelease();
  sub_231411980();
  sub_23141195C();
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v25, v36);
}

uint64_t ElectrocardiogramRecordingOnboardingPromotionConfigurationProvider.makeFeedItemPublisher(context:featureStatus:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v40 = a1;
  sub_2313665FC(0);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v34 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231366618();
  v38 = *(_QWORD *)(v6 - 8);
  v39 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v37 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312E804C(0);
  v42 = v8;
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v33 - v12;
  v14 = sub_2314119B0();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v33 = (char *)&v33 - v19;
  sub_2313666AC(0);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231365C9C(a2, (uint64_t)v22);
  v43 = v2;
  v44 = v40;
  v41 = v22;
  sub_2313646BC((void (*)(char *))sub_231366704, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_2312CEBD4((uint64_t)v13, (uint64_t (*)(_QWORD))sub_2312E804C);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v11, 1, 1, v14);
    v23 = v34;
    sub_231413DD4();
    sub_2312CCC24((unint64_t *)&qword_25415D018, (uint64_t (*)(uint64_t))sub_2313665FC, MEMORY[0x24BDB9DF8]);
    v24 = v36;
    v25 = sub_231413E7C();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v23, v24);
  }
  else
  {
    v26 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v27 = v33;
    v26(v33, v13, v14);
    v45 = sub_231365784();
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v27, v14);
    v28 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v29 = swift_allocObject();
    v26((char *)(v29 + v28), v18, v14);
    sub_2312D75F0();
    sub_2312CCC24(&qword_25415BAA8, (uint64_t (*)(uint64_t))sub_2312D75F0, MEMORY[0x24BDB9AF8]);
    v30 = v37;
    sub_231413EB8();
    swift_release();
    swift_release();
    sub_2312CCC24(&qword_255ECE940, (uint64_t (*)(uint64_t))sub_231366618, MEMORY[0x24BDB96C0]);
    v31 = v39;
    v25 = sub_231413E7C();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v30, v31);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v27, v14);
  }
  sub_2312CEBD4((uint64_t)v41, (uint64_t (*)(_QWORD))sub_2313666AC);
  return v25;
}

uint64_t sub_231365710@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_2314119B0();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, a1, v4);
  sub_231411950();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
}

uint64_t sub_231365784()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  _QWORD v10[4];

  v1 = *v0;
  sub_231367004();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v10[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231411A10();
  sub_2312CEA5C(v10, v10[3]);
  sub_2314119C8();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v10);
  sub_2314131EC();
  swift_allocObject();
  v10[0] = sub_2314131E0();
  v9 = sub_231412F94();
  *(_QWORD *)(swift_allocObject() + 16) = v1;
  sub_2312E7B9C();
  sub_2312CF374(0, (unint64_t *)&qword_25415DDD8, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9DE0]);
  sub_2312CCC24(&qword_25415DDA0, (uint64_t (*)(uint64_t))sub_2312E7B9C, MEMORY[0x24BDB9AF8]);
  sub_231314474();
  sub_231413ED0();
  swift_release();
  swift_release();
  sub_2312CCC24(&qword_255ECE950, (uint64_t (*)(uint64_t))sub_231367004, MEMORY[0x24BDB9740]);
  v7 = sub_231413E7C();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_release();
  return v7;
}

uint64_t sub_231365994@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;

  v4 = sub_231413780();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  sub_231412148();
  v9 = v8;
  v10 = v8;
  v11 = sub_231413768();
  v12 = sub_231414974();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v22[1] = a2;
    v14 = v13;
    v15 = swift_slowAlloc();
    v24 = v15;
    *(_DWORD *)v14 = 136446466;
    v16 = sub_2314151A8();
    v23 = sub_23133180C(v16, v17, &v24);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    v23 = (uint64_t)v8;
    v18 = v8;
    sub_2312D3C14();
    v19 = sub_2314146E0();
    v23 = sub_23133180C(v19, v20, &v24);
    sub_231414CBC();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2312C8000, v11, v12, "[%{public}s] Failed to fetch dismissal state: %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v15, -1, -1);
    MEMORY[0x2348DE308](v14, -1, -1);
  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  LOBYTE(v24) = 0;
  return sub_231413DD4();
}

void ElectrocardiogramRecordingOnboardingPromotionConfigurationProvider.makeDismissalStateManager(context:)(uint64_t *a1@<X8>)
{
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  sub_231411A10();
  sub_2312CEA5C(v7, v7[3]);
  v2 = (void *)sub_2314119C8();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v7);
  v3 = sub_2314131EC();
  swift_allocObject();
  v4 = v2;
  v5 = sub_2314131E0();
  v6 = MEMORY[0x24BE44AF8];
  a1[3] = v3;
  a1[4] = v6;

  *a1 = v5;
}

uint64_t sub_231365C9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t, uint64_t);
  int v23;
  uint64_t v24;
  os_log_t v26;
  char *v27;
  uint64_t v28;
  id v29;
  void *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  NSObject *v41;
  os_log_type_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  void (*v50)(char *, uint64_t);
  os_log_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  os_log_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v64 = a2;
  v3 = sub_231413780();
  v62 = *(_QWORD *)(v3 - 8);
  v63 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v61 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231336A1C(0);
  MEMORY[0x24BDAC7A8](v5);
  v57 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_231413558();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23141351C();
  v59 = *(os_log_t *)(v11 - 8);
  v60 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v58 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23141357C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v56 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v56 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v56 - v20;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v22((char *)&v56 - v20, a1, v13);
  v23 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v21, v13);
  if (v23 == *MEMORY[0x24BE45748])
  {
    v24 = type metadata accessor for ElectrocardiogramRecordingOnboardingPromotionConfiguration();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v64, 1, 1, v24);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v21, v13);
  }
  else if (v23 == *MEMORY[0x24BE45700])
  {
    (*(void (**)(char *, uint64_t))(v14 + 96))(v21, v13);
    v27 = v58;
    v26 = v59;
    v28 = v60;
    ((void (*)(char *, char *, uint64_t))v59[4].isa)(v58, v21, v60);
    sub_231413510();
    v29 = (id)*MEMORY[0x24BDD2C58];
    v30 = (void *)sub_231413564();

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    LODWORD(v29) = objc_msgSend(v30, sel_areAllRequirementsSatisfied);

    if ((_DWORD)v29)
    {
      v31 = sub_231366274();
      v32 = sub_231411AC4();
      v33 = *(_QWORD *)(v32 - 8);
      v34 = (unsigned int *)MEMORY[0x24BE47C80];
      if ((v31 & 1) == 0)
        v34 = (unsigned int *)MEMORY[0x24BE47C78];
      v35 = (uint64_t)v57;
      (*(void (**)(char *, _QWORD, uint64_t))(v33 + 104))(v57, *v34, v32);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(v35, 0, 1, v32);
      v36 = v64;
      sub_2312EE5FC(v35, v64, (uint64_t (*)(_QWORD))sub_231336A1C);
      v37 = type metadata accessor for ElectrocardiogramRecordingOnboardingPromotionConfiguration();
      v38 = v36 + *(int *)(v37 + 20);
      *(_QWORD *)v38 = 0xD00000000000002CLL;
      *(_QWORD *)(v38 + 8) = 0x800000023142CCA0;
      *(_BYTE *)(v38 + 16) = 0;
      v39 = (_QWORD *)(v36 + *(int *)(v37 + 24));
      *v39 = 0xD000000000000016;
      v39[1] = 0x800000023142CCD0;
      ((void (*)(char *, uint64_t))v26[1].isa)(v27, v28);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v36, 0, 1, v37);
    }
    else
    {
      ((void (*)(char *, uint64_t))v26[1].isa)(v27, v28);
      v53 = type metadata accessor for ElectrocardiogramRecordingOnboardingPromotionConfiguration();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v64, 1, 1, v53);
    }
  }
  else
  {
    v40 = v61;
    sub_231412148();
    v22(v19, a1, v13);
    v41 = sub_231413768();
    v42 = sub_231414974();
    v43 = v42;
    if (os_log_type_enabled(v41, v42))
    {
      v44 = swift_slowAlloc();
      v59 = v41;
      v45 = v44;
      v60 = swift_slowAlloc();
      v66 = v60;
      *(_DWORD *)v45 = 136446466;
      v46 = sub_2314151A8();
      LODWORD(v58) = v43;
      v65 = sub_23133180C(v46, v47, &v66);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v45 + 12) = 2080;
      v22(v56, (uint64_t)v19, v13);
      v48 = sub_2314146E0();
      v65 = sub_23133180C(v48, v49, &v66);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      v50 = *(void (**)(char *, uint64_t))(v14 + 8);
      v50(v19, v13);
      v51 = v59;
      _os_log_impl(&dword_2312C8000, v59, (os_log_type_t)v58, "[%{public}s] Unknown feature status received: %s", (uint8_t *)v45, 0x16u);
      v52 = v60;
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v52, -1, -1);
      MEMORY[0x2348DE308](v45, -1, -1);

    }
    else
    {
      v50 = *(void (**)(char *, uint64_t))(v14 + 8);
      v50(v19, v13);

    }
    (*(void (**)(char *, uint64_t))(v62 + 8))(v40, v63);
    v54 = v64;
    v55 = type metadata accessor for ElectrocardiogramRecordingOnboardingPromotionConfiguration();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v54, 1, 1, v55);
    return ((uint64_t (*)(char *, uint64_t))v50)(v21, v13);
  }
}

uint64_t sub_231366274()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  id v14;
  void *v15;
  _BYTE v17[16];
  id v18[2];

  v18[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = sub_2314112F0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_231302F8C();
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = *(void **)(v0 + 16);
  v18[0] = 0;
  v9 = objc_msgSend(v8, sel_dateOfBirthComponentsWithError_, v18);
  v10 = v18[0];
  if (v9)
  {
    v11 = v9;
    sub_2314112D8();
    v12 = v10;

    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v2 + 32))(v7, v4, v1);
    v13 = 1;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v2 + 56))(v7, 0, 1, v1);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) != 1)
      goto LABEL_6;
  }
  else
  {
    v14 = v18[0];
    v15 = (void *)sub_231411410();

    swift_willThrow();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v7, 1, 1, v1);
  }
  v13 = 0;
LABEL_6:
  sub_2312CEBD4((uint64_t)v7, (uint64_t (*)(_QWORD))sub_231302F8C);
  return v13;
}

uint64_t ElectrocardiogramRecordingOnboardingPromotionConfigurationProvider.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ElectrocardiogramRecordingOnboardingPromotionConfigurationProvider.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

unint64_t sub_231366468()
{
  return 0xD000000000000028;
}

uint64_t sub_231366488@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BE474E0];
  v3 = sub_231411890();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_2313664CC(uint64_t a1, uint64_t a2)
{
  return ElectrocardiogramRecordingOnboardingPromotionConfigurationProvider.makeFeedItemPublisher(context:featureStatus:)(a1, a2);
}

unint64_t sub_2313664EC()
{
  return 0xD00000000000001ELL;
}

uint64_t _s5Heart66ElectrocardiogramRecordingOnboardingPromotionConfigurationProviderC17associatedHKTypesShySo12HKObjectTypeCGvg_0()
{
  unint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2312CF374(0, (unint64_t *)&qword_25415BD40, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_231417F90;
  *(_QWORD *)(inited + 32) = objc_msgSend((id)objc_opt_self(), sel_electrocardiogramType);
  sub_2314147B8();
  if (inited >> 62)
  {
    sub_231412A90();
    v3 = sub_231414F08();
    swift_bridgeObjectRelease();
    if (v3)
      goto LABEL_3;
LABEL_5:
    v2 = MEMORY[0x24BEE4B08];
    goto LABEL_6;
  }
  if (!*(_QWORD *)((inited & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_5;
LABEL_3:
  sub_2312FC638(inited);
  v2 = v1;
LABEL_6:
  swift_bridgeObjectRelease();
  return v2;
}

void sub_2313665FC(uint64_t a1)
{
  sub_2312D6DD8(a1, (unint64_t *)&unk_25415D020, (uint64_t (*)(uint64_t))sub_2312E804C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9DE0]);
}

void sub_231366618()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25415CEC0)
  {
    sub_2312D75F0();
    sub_2312E804C(255);
    sub_2312CCC24(&qword_25415BAA8, (uint64_t (*)(uint64_t))sub_2312D75F0, MEMORY[0x24BDB9AF8]);
    v0 = sub_231413C60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25415CEC0);
  }
}

void sub_2313666AC(uint64_t a1)
{
  sub_2312D6DD8(a1, &qword_25415CBF8, (uint64_t (*)(uint64_t))type metadata accessor for ElectrocardiogramRecordingOnboardingPromotionConfiguration, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

uint64_t type metadata accessor for ElectrocardiogramRecordingOnboardingPromotionConfiguration()
{
  uint64_t result;

  result = qword_25415CBB8;
  if (!qword_25415CBB8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_231366704@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_231364C28(*(_QWORD *)(v2 + 24), a1, a2);
}

uint64_t sub_231366730()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_2314119B0();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_231366790@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_2314119B0() - 8) + 80);
  return sub_231365710(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for ElectrocardiogramRecordingOnboardingPromotionConfiguration(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_231411AC4();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_231336A1C(0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = *(int *)(a3 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = *(_QWORD *)v13;
    v15 = *((_QWORD *)v13 + 1);
    v16 = v13[16];
    sub_231366900(*(_QWORD *)v13, v15, v16);
    *(_QWORD *)v12 = v14;
    *((_QWORD *)v12 + 1) = v15;
    v12[16] = v16;
    v17 = *(int *)(a3 + 24);
    v18 = (uint64_t *)((char *)a1 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    sub_231412A90();
  }
  return a1;
}

uint64_t sub_231366900(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 5u)
    return sub_231412A90();
  return result;
}

uint64_t destroy for ElectrocardiogramRecordingOnboardingPromotionConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_231411AC4();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  sub_231366998(*(_QWORD *)(a1 + *(int *)(a2 + 20)), *(_QWORD *)(a1 + *(int *)(a2 + 20) + 8), *(_BYTE *)(a1 + *(int *)(a2 + 20) + 16));
  return swift_bridgeObjectRelease();
}

uint64_t sub_231366998(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 5u)
    return swift_bridgeObjectRelease();
  return result;
}

char *initializeWithCopy for ElectrocardiogramRecordingOnboardingPromotionConfiguration(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = sub_231411AC4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_231336A1C(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(_QWORD *)v11;
  v13 = *((_QWORD *)v11 + 1);
  v14 = v11[16];
  sub_231366900(*(_QWORD *)v11, v13, v14);
  *(_QWORD *)v10 = v12;
  *((_QWORD *)v10 + 1) = v13;
  v10[16] = v14;
  v15 = *(int *)(a3 + 24);
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = *((_QWORD *)v17 + 1);
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *((_QWORD *)v16 + 1) = v18;
  sub_231412A90();
  return a1;
}

char *assignWithCopy for ElectrocardiogramRecordingOnboardingPromotionConfiguration(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  char *v22;
  char *v23;

  v6 = sub_231411AC4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_231336A1C(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *(_QWORD *)v14;
  v16 = *((_QWORD *)v14 + 1);
  v17 = v14[16];
  sub_231366900(*(_QWORD *)v14, v16, v17);
  v18 = *(_QWORD *)v13;
  v19 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v13 = v15;
  *((_QWORD *)v13 + 1) = v16;
  v20 = v13[16];
  v13[16] = v17;
  sub_231366998(v18, v19, v20);
  v21 = *(int *)(a3 + 24);
  v22 = &a1[v21];
  v23 = &a2[v21];
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
  sub_231412A90();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for ElectrocardiogramRecordingOnboardingPromotionConfiguration(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;

  v6 = sub_231411AC4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_231336A1C(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = *(int *)(a3 + 24);
  v11 = &a1[v9];
  v12 = &a2[v9];
  *(_OWORD *)v11 = *(_OWORD *)v12;
  v11[16] = v12[16];
  *(_OWORD *)&a1[v10] = *(_OWORD *)&a2[v10];
  return a1;
}

char *assignWithTake for ElectrocardiogramRecordingOnboardingPromotionConfiguration(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_231411AC4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_231336A1C(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = v14[16];
  v16 = *(_QWORD *)v13;
  v17 = *((_QWORD *)v13 + 1);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  v18 = v13[16];
  v13[16] = v15;
  sub_231366998(v16, v17, v18);
  v19 = *(int *)(a3 + 24);
  v20 = &a1[v19];
  v21 = &a2[v19];
  v23 = *(_QWORD *)v21;
  v22 = *((_QWORD *)v21 + 1);
  *(_QWORD *)v20 = v23;
  *((_QWORD *)v20 + 1) = v22;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ElectrocardiogramRecordingOnboardingPromotionConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_231366E1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  sub_231336A1C(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ElectrocardiogramRecordingOnboardingPromotionConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_231366EA8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  sub_231336A1C(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, v8);
  else
    *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
}

void sub_231366F24()
{
  unint64_t v0;

  sub_231336A1C(319);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t type metadata accessor for ElectrocardiogramRecordingOnboardingPromotionConfigurationProvider()
{
  return objc_opt_self();
}

unint64_t sub_231366FC0()
{
  unint64_t result;

  result = qword_25415DE98;
  if (!qword_25415DE98)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25415DE98);
  }
  return result;
}

uint64_t sub_231366FFC()
{
  return swift_release();
}

void sub_231367004()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECE948)
  {
    sub_2312E7B9C();
    sub_2312CF374(255, (unint64_t *)&qword_25415DDD8, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDB9DE0]);
    sub_2312CCC24(&qword_25415DDA0, (uint64_t (*)(uint64_t))sub_2312E7B9C, MEMORY[0x24BDB9AF8]);
    sub_231314474();
    v0 = sub_231413C78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECE948);
  }
}

uint64_t sub_2313670C0()
{
  return swift_deallocObject();
}

uint64_t sub_2313670D0@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_231365994(a1, a2);
}

uint64_t sub_2313670D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = sub_2314129E8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v19 = MEMORY[0x24BEE4AF8];
    sub_23137D390(0, v6, 0);
    v7 = v19;
    v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v9 = *(_QWORD *)(v3 + 72);
    v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v10(v5, v8, v2);
      v19 = v7;
      v12 = *(_QWORD *)(v7 + 16);
      v11 = *(_QWORD *)(v7 + 24);
      if (v12 >= v11 >> 1)
        sub_23137D390(v11 > 1, v12 + 1, 1);
      v17 = v2;
      v18 = sub_2312CCC24((unint64_t *)&qword_255ECD440, (uint64_t (*)(uint64_t))MEMORY[0x24BE438C0], MEMORY[0x24BE438A8]);
      v13 = sub_2312DFCA0((uint64_t *)&v16);
      v10((char *)v13, (uint64_t)v5, v2);
      v14 = v19;
      *(_QWORD *)(v19 + 16) = v12 + 1;
      sub_2312DFB68(&v16, v14 + 40 * v12 + 32);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v7 = v19;
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_231367254(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v10;
  ValueMetadata *v11;
  unint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v13 = MEMORY[0x24BEE4AF8];
    sub_23137D3C4(0, v1, 0);
    v2 = v13;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      v13 = v2;
      v7 = *(_QWORD *)(v2 + 16);
      v8 = *(_QWORD *)(v2 + 24);
      sub_231412A90();
      if (v7 >= v8 >> 1)
      {
        sub_23137D3C4(v8 > 1, v7 + 1, 1);
        v2 = v13;
      }
      v11 = &type metadata for AFibBurdenPDFChartPage;
      v12 = sub_2313685F8();
      *(_QWORD *)&v10 = v5;
      *((_QWORD *)&v10 + 1) = v6;
      *(_QWORD *)(v2 + 16) = v7 + 1;
      sub_2312DFB68(&v10, v2 + 40 * v7 + 32);
      v4 += 2;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_23136735C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD v23[5];

  v1 = sub_231413930();
  MEMORY[0x24BDAC7A8](v1);
  v22 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BE438C0];
  sub_2313683E4(0, &qword_255ECEA30, &qword_255ECEA38, (uint64_t (*)(uint64_t))MEMORY[0x24BE438C0]);
  v5 = v4;
  v21 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - v6;
  sub_2313683E4(0, (unint64_t *)&qword_255ECE4C8, &qword_255ECE4D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v20 - v11;
  v13 = *(_QWORD *)(v0 + 32);
  ObjectType = swift_getObjectType();
  v23[0] = sub_23138F238(ObjectType, v13);
  sub_2312D75F0();
  sub_2312D6DD8(0, &qword_255ECEA38, v3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_2312CCC24(&qword_25415BAA8, (uint64_t (*)(uint64_t))sub_2312D75F0, MEMORY[0x24BDB9AF8]);
  swift_retain();
  sub_231413EB8();
  swift_release();
  swift_release();
  sub_2312D6DD8(0, &qword_255ECE4D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_231413C54();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v5);
  sub_2313684D4();
  sub_231413E64();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_231412DFC();
  sub_231412544();
  swift_release();
  if (qword_255ECAAD8 != -1)
    swift_once();
  sub_231411374();
  sub_231413900();
  v15 = sub_231412160();
  v16 = (uint64_t (*)(uint64_t))MEMORY[0x24BE42248];
  swift_allocObject();
  v17 = sub_231412154();
  v23[3] = v15;
  v23[4] = sub_2312CCC24(&qword_255ECEA40, v16, MEMORY[0x24BE42230]);
  v23[0] = v17;
  sub_23135E8BC();
  sub_231368534();
  sub_231412550();
  swift_release();
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v23);
  sub_231368550(0);
  sub_231368574();
  v18 = sub_231412568();
  swift_release();
  sub_231368590();
  return v18;
}

uint64_t sub_231367744@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v4 = sub_231411644();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  sub_2312D6DD8(0, &qword_255ECF200, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_2314127F0();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_231416A30;
  sub_2313670D8(v8);
  sub_231411638();
  sub_231411614();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  result = sub_2314127E4();
  *a2 = v9;
  return result;
}

uint64_t sub_23136787C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_2314129AC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_231412988();
  v4 = sub_2314129A0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_231367904()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  sub_2312D6DD8(0, &qword_255ECAC88, (uint64_t (*)(uint64_t))MEMORY[0x24BE438C0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_2314129E8();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_23141ABD0;
  v3 = v1;
  if (qword_255ECAAD8 != -1)
    swift_once();
  sub_231411374();
  if (qword_255ECA990 != -1)
    swift_once();
  sub_231412A90();
  sub_231414728();
  sub_231414728();
  swift_retain();
  sub_2314129D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_231411374();
  sub_231412A90();
  sub_231414728();
  sub_231414728();
  sub_2314129D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_231411374();
  sub_231412A90();
  sub_231414728();
  sub_231414728();
  sub_2314129D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_231411374();
  sub_231412A90();
  sub_231414728();
  sub_231414728();
  sub_2314129D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_231411374();
  sub_231412A90();
  sub_231414728();
  sub_231414728();
  sub_2314129D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = v3;
  if (*(_BYTE *)(v0 + 40) == 1)
  {
    if (*(_QWORD *)(v3 + 16))
    {
      sub_23136823C(0, 1);
      return v3;
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_231367E44(uint64_t a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_allocWithZone((Class)type metadata accessor for AFibBurdenOnboardingStartViewController());
  swift_retain();
  v3 = sub_2313A191C(0, a1, (uint64_t)&off_2500248A0);
  swift_release();
  return v3;
}

uint64_t sub_231367E9C()
{
  return sub_231367EEC((uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenOnboardingHowItWorksViewController, (uint64_t (*)(_QWORD))sub_2313BFBA0);
}

uint64_t sub_231367EB0()
{
  return sub_231367EEC((uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenOnboardingResultsViewController, (uint64_t (*)(_QWORD))sub_2313B33FC);
}

uint64_t sub_231367EC4()
{
  return sub_231367EEC((uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenOnboardingLifeFactorsViewController, (uint64_t (*)(_QWORD))sub_23131CC88);
}

uint64_t sub_231367ED8()
{
  return sub_231367EEC((uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenOnboardingShouldKnowViewController, (uint64_t (*)(_QWORD))sub_2313DC330);
}

uint64_t sub_231367EEC(uint64_t (*a1)(_QWORD), uint64_t (*a2)(_QWORD))
{
  id v3;

  v3 = objc_allocWithZone((Class)a1(0));
  return a2(0);
}

void sub_231367F24(void *a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;

  if (qword_25415DF98 != -1)
    swift_once();
  v2 = sub_231413780();
  sub_2312CE3B8(v2, (uint64_t)qword_254162FF0);
  v3 = sub_231413768();
  v4 = sub_231414974();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v12 = v6;
    *(_DWORD *)v5 = 136315394;
    v7 = sub_2314151A8();
    sub_23133180C(v7, v8, &v12);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    sub_23133180C(0xD00000000000002BLL, 0x800000023142CD40, &v12);
    sub_231414CBC();
    _os_log_impl(&dword_2312C8000, v3, v4, "[%s.%s]: Presenting AFib History article", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v6, -1, -1);
    MEMORY[0x2348DE308](v5, -1, -1);
  }

  if (qword_25415E610 != -1)
    swift_once();
  sub_231411374();
  sub_2313DA83C();
  v9 = objc_allocWithZone((Class)sub_231411C20());
  v10 = (void *)sub_231411C14();
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4A728]), sel_initWithRootViewController_, v10, 0xE000000000000000);
  objc_msgSend(a1, sel_presentViewController_animated_completion_, v11, 1, 0);

}

uint64_t sub_2313681E4()
{
  uint64_t v0;

  sub_2314130CC();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AFibBurdenEducationSectionGenerator()
{
  return objc_opt_self();
}

uint64_t sub_231368234()
{
  uint64_t v0;

  return sub_231367E44(v0);
}

uint64_t sub_23136823C(uint64_t a1, int64_t a2)
{
  unint64_t *v2;
  unint64_t v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(_QWORD *)(v4 + 24) >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_2312CDCF4(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  v12 = *(_QWORD *)(sub_2314129E8() - 8);
  v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v14 * a1;
  v16 = v13 + v14 * a1;
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_25;
  v18 = *(_QWORD *)(v4 + 16);
  v19 = v18 - a2;
  if (__OFSUB__(v18, a2))
    goto LABEL_31;
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      result = swift_arrayInitWithTakeBackToFront();
    }
    v21 = *(_QWORD *)(v4 + 16);
    v22 = __OFADD__(v21, v8);
    v23 = v21 - v7;
    if (!v22)
    {
      *(_QWORD *)(v4 + 16) = v23;
LABEL_25:
      *v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  result = sub_231414F5C();
  __break(1u);
  return result;
}

void sub_2313683E4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_2312D75F0();
    sub_2312D6DD8(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_2312CCC24(&qword_25415BAA8, (uint64_t (*)(uint64_t))sub_2312D75F0, MEMORY[0x24BDB9AF8]);
    v7 = sub_231413C60();
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_231368490@<X0>(_BYTE *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  if ((*a1 & 1) != 0 || *(_BYTE *)(v2 + 40) == 1)
    result = sub_231367904();
  else
    result = MEMORY[0x24BEE4AF8];
  *a2 = result;
  return result;
}

unint64_t sub_2313684D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ECE4F0;
  if (!qword_255ECE4F0)
  {
    sub_2313683E4(255, (unint64_t *)&qword_255ECE4C8, &qword_255ECE4D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE43368]);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB96C0], v1);
    atomic_store(result, (unint64_t *)&qword_255ECE4F0);
  }
  return result;
}

uint64_t sub_231368534()
{
  return sub_2312CCC24(&qword_255ECE500, (uint64_t (*)(uint64_t))sub_23135E8BC, MEMORY[0x24BE428C8]);
}

void sub_231368550(uint64_t a1)
{
  sub_2312EDFDC(a1, &qword_255ECEA48, (uint64_t (*)(uint64_t))sub_23135E8BC, sub_231368534, MEMORY[0x24BE42778]);
}

uint64_t sub_231368574()
{
  return sub_2312CCC24(&qword_255ECEA50, (uint64_t (*)(uint64_t))sub_231368550, MEMORY[0x24BE42788]);
}

unint64_t sub_231368590()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ECEA58;
  if (!qword_255ECEA58)
  {
    sub_2312EDFDC(255, &qword_255ECEA60, (uint64_t (*)(uint64_t))sub_231368550, sub_231368574, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE42FF0]);
    result = MEMORY[0x2348DE248](MEMORY[0x24BE43020], v1);
    atomic_store(result, (unint64_t *)&qword_255ECEA58);
  }
  return result;
}

unint64_t sub_2313685F8()
{
  unint64_t result;

  result = qword_255ECEA68;
  if (!qword_255ECEA68)
  {
    result = MEMORY[0x2348DE248](&unk_231420620, &type metadata for AFibBurdenPDFChartPage);
    atomic_store(result, (unint64_t *)&qword_255ECEA68);
  }
  return result;
}

void sub_23136863C()
{
  id v0;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, *MEMORY[0x24BE4C038]);
  objc_msgSend((id)objc_opt_self(), sel_setTachycardiaThresholdHeartRate_, v0);

}

uint64_t sub_2313686A8()
{
  id v0;

  if (qword_25415E610 != -1)
    swift_once();
  v0 = (id)qword_254163058;
  return sub_231411D64();
}

uint64_t sub_231368720(char a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if ((a1 & 1) != 0)
  {
    objc_msgSend((id)objc_opt_self(), sel_tachycardiaThresholdHeartRate);
    v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3C40]), sel_init);
    sub_2312E43A4();
    v2 = (void *)sub_231414BF0();
    v3 = sub_2313F699C(v2, (uint64_t)v1);
    v5 = v4;

    if (qword_25415E610 != -1)
      swift_once();
    sub_231411374();
    sub_2312E43E0();
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_231416A30;
    *(_QWORD *)(v6 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v6 + 64) = sub_2312D6E84();
    *(_QWORD *)(v6 + 32) = v3;
    *(_QWORD *)(v6 + 40) = v5;
    v7 = sub_231414698();
    v9 = v8;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_231411374();
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_231416A30;
    v11 = *MEMORY[0x24BE4C040];
    v12 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v10 + 56) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v10 + 64) = v12;
    *(_QWORD *)(v10 + 32) = v11;
    v13 = sub_231414698();
    v15 = v14;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2312E42E4();
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_231418090;
    *(_QWORD *)(v16 + 32) = v7;
    *(_QWORD *)(v16 + 40) = v9;
    *(_QWORD *)(v16 + 48) = v13;
  }
  else
  {
    sub_2312E42E4();
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_231418090;
    if (qword_25415E610 != -1)
      swift_once();
    *(_QWORD *)(v16 + 32) = sub_231411374();
    *(_QWORD *)(v16 + 40) = v17;
    v18 = sub_231411374();
    v15 = v19;
    *(_QWORD *)(v16 + 48) = v18;
  }
  *(_QWORD *)(v16 + 56) = v15;
  return v16;
}

uint64_t sub_231368A50()
{
  return 0x6165482068676948;
}

uint64_t sub_231368A74()
{
  if (qword_25415E610 != -1)
    swift_once();
  return sub_231411374();
}

ValueMetadata *_s34AFibBurdenDisclosureItemsComponentVMa()
{
  return &_s34AFibBurdenDisclosureItemsComponentVN;
}

uint64_t sub_231368B04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;

  sub_231368C70();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_231416A30;
  v1 = sub_231412D78();
  sub_231412D84();
  *(_QWORD *)(v0 + 56) = &type metadata for AFibBurdenAboutItem;
  *(_QWORD *)(v0 + 64) = sub_2313133A0();
  v2 = swift_allocObject();
  *(_QWORD *)(v0 + 32) = v2;
  sub_2313129B4(v1, &v6, (uint64_t *)(v2 + 16));
  v3 = sub_23141336C();
  v4 = MEMORY[0x24BE44F60];
  *(_QWORD *)(v0 + 72) = v3;
  *(_QWORD *)(v0 + 80) = v4;
  return v0;
}

uint64_t sub_231368BB8()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v8;

  v1 = sub_231412BD4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  sub_231412BBC();
  v6 = sub_231412BC8();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v6;
}

void sub_231368C70()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECEAD0)
  {
    sub_231368CC4();
    v0 = sub_23141504C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECEAD0);
  }
}

void sub_231368CC4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255ECEAD8)
  {
    sub_2312CEA10(255, (unint64_t *)&qword_255ECF1F0);
    sub_231368D48();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255ECEAD8);
  }
}

unint64_t sub_231368D48()
{
  unint64_t result;

  result = qword_255ECEAE0;
  if (!qword_255ECEAE0)
  {
    sub_2312CEA10(255, &qword_255ECEAE8);
    result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255ECEAE0);
  }
  return result;
}

uint64_t sub_231368D94()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + 72);
  return swift_deallocObject();
}

uint64_t destroy for TitleSubtitleItem()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for TitleSubtitleItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  sub_231412A90();
  sub_231412A90();
  sub_231412A90();
  sub_231412A90();
  return a1;
}

_QWORD *assignWithCopy for TitleSubtitleItem(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_231412A90();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_231412A90();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_231412A90();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  sub_231412A90();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for TitleSubtitleItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TitleSubtitleItem()
{
  return &type metadata for TitleSubtitleItem;
}

uint64_t type metadata accessor for IRNFeatureRegulatoryInfoTransformProvider()
{
  uint64_t result;

  result = qword_255ECEAF0;
  if (!qword_255ECEAF0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_231368FD0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_23136900C()
{
  if (qword_255ECAB00 != -1)
    swift_once();
  return sub_231411374();
}

uint64_t sub_23136908C()
{
  return 1718514281;
}

uint64_t sub_23136909C()
{
  if (qword_255ECAB00 != -1)
    swift_once();
  sub_231411374();
  sub_2314114A0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_231369140()
{
  return type metadata accessor for IRNFeatureRegulatoryInfoTransformProvider();
}

uint64_t type metadata accessor for BloodPressureDataTypeDetailViewController()
{
  uint64_t result;

  result = qword_255ECEB40;
  if (!qword_255ECEB40)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_231369184()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2313691C0(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v11;

  v4 = sub_231412DA8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_allocWithZone(v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  v9 = sub_231412E5C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  return v9;
}

id sub_231369280(void *a1, uint64_t a2, uint64_t a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for BloodPressureDataTypeDetailViewController();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_2313692C8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BloodPressureDataTypeDetailViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2313692FC()
{
  return type metadata accessor for BloodPressureDataTypeDetailViewController();
}

uint64_t sub_231369304()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_231369310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for AFibBurdenPDFChartViewModel();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 24), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 16);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_231369394()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2313693A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for AFibBurdenPDFChartViewModel();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 24), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 16) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for AFibBurdenPDFLineChart()
{
  uint64_t result;

  result = qword_255ECEBE8;
  if (!qword_255ECEBE8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23136945C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for AFibBurdenPDFChartViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2313694E4@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, char a3@<W2>, void *a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t **v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  void *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t **v58;
  uint64_t **v59;
  uint64_t **v60;
  uint64_t result;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t **, uint64_t);
  char *v68;
  void (*v69)(char *, char *, uint64_t);
  uint64_t v70;
  void (*v71)(char *, uint64_t);
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  char *v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t OpaqueTypeConformance2;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _OWORD *v102;
  __int128 v103;
  uint64_t KeyPath;
  id v105;
  id v106;
  unsigned int *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t **v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t *v148;
  uint64_t v149;
  char *v150;
  __int128 v151;
  __int128 v152;
  uint64_t v153[5];
  __int128 v154;
  __int128 v155;
  __int128 v156;

  v126 = a5;
  v139 = a6;
  v144 = sub_231414068();
  v143 = *(_QWORD *)(v144 - 8);
  MEMORY[0x24BDAC7A8](v144);
  v142 = (char *)&v115 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312D6DD8(0, &qword_255ECB758, (uint64_t (*)(uint64_t))MEMORY[0x24BDB8338], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v11);
  v138 = (char *)&v115 - v12;
  sub_2312EDFDC(0, &qword_255ECEC50, (uint64_t (*)(uint64_t))sub_23136B424, (uint64_t (*)(void))sub_23136BA34, MEMORY[0x24BDB8128]);
  v123 = v13;
  v124 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v122 = (char *)&v115 - v14;
  sub_23136BCA0(0);
  v128 = v15;
  v127 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v125 = (char *)&v115 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23136BDBC(0);
  v132 = v17;
  v130 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v129 = (char *)&v115 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23136BEB0(0);
  v136 = v19;
  v135 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v134 = (char *)&v115 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23136C000(0);
  v140 = v21;
  v137 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v133 = (char *)&v115 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312EE4B8(0, &qword_255ECECD8, v23, MEMORY[0x24BDEBEF8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  v131 = v24;
  MEMORY[0x24BDAC7A8](v24);
  v141 = (char *)&v115 - v25;
  sub_2312EDA34();
  v117 = v26;
  v27 = MEMORY[0x24BDAC7A8](v26);
  v118 = (char *)&v115 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v116 = (char *)&v115 - v29;
  v30 = sub_231411608();
  v120 = *(_QWORD *)(v30 - 8);
  v31 = MEMORY[0x24BDAC7A8](v30);
  v33 = (uint64_t **)((char *)&v115 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v31);
  v145 = (uint64_t **)((char *)&v115 - v34);
  sub_2312ED508(0);
  v121 = v35;
  v36 = MEMORY[0x24BDAC7A8](v35);
  v119 = (char *)&v115 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v36);
  v146 = (uint64_t)&v115 - v38;
  v149 = sub_231411248();
  v147 = *(_QWORD *)(v149 - 8);
  MEMORY[0x24BDAC7A8](v149);
  v150 = (char *)&v115 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_231413A68();
  MEMORY[0x24BDAC7A8](v40);
  v41 = sub_2314139F0();
  MEMORY[0x24BDAC7A8](v41);
  v42 = sub_231413A20();
  MEMORY[0x24BDAC7A8](v42);
  v43 = *(int *)(type metadata accessor for AFibBurdenPDFChartViewModel() + 32);
  v148 = a1;
  if (*((_BYTE *)a1 + v43) == 2)
    sub_2313E4A5C(a2, a3, (uint64_t)a4);
  v44 = sub_2313E4ED0(3, a2, a3, a4);
  if (v44)
  {
    v45 = a2;
    v46 = v44;
    sub_2313E5DF0(v44);
    v48 = v47;
    sub_2312EDFDC(0, &qword_255ECB850, (uint64_t (*)(uint64_t))sub_2312EDDD0, (uint64_t (*)(void))sub_2312EE268, MEMORY[0x24BDB82E0]);
    *((_QWORD *)&v155 + 1) = v49;
    *(_QWORD *)&v156 = sub_2312EE38C();
    v115 = sub_2312DFCA0((uint64_t *)&v154);
    *(_QWORD *)&v152 = v48;
    sub_2312EE3F4();
    sub_2314139FC();
    v50 = swift_allocObject();
    *(_QWORD *)(v50 + 16) = v45;
    *(_BYTE *)(v50 + 24) = a3;
    *(_QWORD *)(v50 + 32) = a4;
    *(_QWORD *)(v50 + 40) = v46;
    v51 = v45;
    v52 = a4;
    sub_231412A90();
    sub_2314139E4();
    sub_231413A5C();
    sub_2312EDDD0();
    sub_2312EE268();
    sub_231413B88();
    sub_2312DFB68(&v154, (uint64_t)v153);
    sub_2313E6120(v46);
    v54 = v53;
    v56 = v55;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2314139E4();
    sub_231413A5C();
    sub_231413A14();
    sub_2312EDFDC(0, &qword_255ECB820, (uint64_t (*)(uint64_t))sub_2312EDA98, (uint64_t (*)(void))sub_2312EDB08, MEMORY[0x24BDB82E0]);
    v153[3] = v57;
    v153[4] = sub_2312EDB70();
    sub_2312DFCA0(v153);
    sub_2312EDA98();
    sub_2312EDB08();
    sub_231413B94();
    v54 = 0;
    v56 = 0;
  }
  *(_QWORD *)&v152 = v54;
  *((_QWORD *)&v152 + 1) = v56;
  (*(void (**)(char *, uint64_t *, uint64_t))(v147 + 16))(v150, v148, v149);
  v58 = v145;
  sub_231411230();
  v59 = v33;
  v60 = v58;
  sub_23141120C();
  sub_2312ED52C();
  result = sub_231414674();
  if ((result & 1) != 0)
  {
    v62 = v117;
    v63 = v116;
    v64 = &v116[*(int *)(v117 + 48)];
    v65 = v118;
    v66 = v120;
    v67 = *(void (**)(char *, uint64_t **, uint64_t))(v120 + 32);
    v67(v116, v60, v30);
    v67(v64, v59, v30);
    v68 = &v65[*(int *)(v62 + 48)];
    v69 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
    v69(v65, v63, v30);
    v69(v68, v64, v30);
    v70 = (uint64_t)v119;
    v67(v119, (uint64_t **)v65, v30);
    v71 = *(void (**)(char *, uint64_t))(v66 + 8);
    v71(v68, v30);
    v72 = &v65[*(int *)(v62 + 48)];
    v67(v65, (uint64_t **)v63, v30);
    v67(v72, (uint64_t **)v64, v30);
    v73 = v121;
    v67((char *)(v70 + *(int *)(v121 + 36)), (uint64_t **)v72, v30);
    v71(v65, v30);
    v74 = sub_2312EE5FC(v70, v146, (uint64_t (*)(_QWORD))sub_2312ED508);
    v145 = &v115;
    MEMORY[0x24BDAC7A8](v74);
    v75 = (uint64_t *)v150;
    *(&v115 - 2) = v148;
    *(&v115 - 1) = v75;
    sub_23136B424();
    sub_23136BA34();
    v76 = v122;
    sub_231413AE0();
    v77 = sub_231413BD0();
    v78 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56);
    v79 = (uint64_t)v138;
    v78(v138, 1, 1, v77);
    v80 = sub_23136BD54();
    v81 = sub_2312ED5B0();
    v82 = v125;
    v83 = v123;
    sub_231414314();
    sub_23136C180(v79);
    v84 = (*(uint64_t (**)(char *, uint64_t))(v124 + 8))(v76, v83);
    MEMORY[0x24BDAC7A8](v84);
    *(&v115 - 2) = v126;
    *(_QWORD *)&v154 = v83;
    *((_QWORD *)&v154 + 1) = v73;
    *(_QWORD *)&v155 = v80;
    *((_QWORD *)&v155 + 1) = v81;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v86 = MEMORY[0x24BDB7DC8];
    v87 = MEMORY[0x24BDB7DB8];
    v88 = v129;
    v89 = v128;
    sub_2314142FC();
    (*(void (**)(char *, uint64_t))(v127 + 8))(v82, v89);
    v151 = v152;
    v78((char *)v79, 1, 1, v77);
    sub_2312EE6B4(0, &qword_255ECB7F8, MEMORY[0x24BEE13F0], MEMORY[0x24BEE08B8]);
    v91 = v90;
    *(_QWORD *)&v154 = v89;
    *((_QWORD *)&v154 + 1) = v86;
    *(_QWORD *)&v155 = OpaqueTypeConformance2;
    *((_QWORD *)&v155 + 1) = v87;
    v92 = swift_getOpaqueTypeConformance2();
    v93 = sub_2312ED84C();
    v94 = v134;
    v95 = v132;
    sub_231414320();
    sub_23136C180(v79);
    v96 = (*(uint64_t (**)(char *, uint64_t))(v130 + 8))(v88, v95);
    MEMORY[0x24BDAC7A8](v96);
    *(&v115 - 2) = (uint64_t *)&v152;
    *(_QWORD *)&v154 = v95;
    *((_QWORD *)&v154 + 1) = v91;
    *(_QWORD *)&v155 = v92;
    *((_QWORD *)&v155 + 1) = v93;
    swift_getOpaqueTypeConformance2();
    v97 = v133;
    v98 = v136;
    sub_231414308();
    (*(void (**)(char *, uint64_t))(v135 + 8))(v94, v98);
    sub_2314144C4();
    sub_231413FFC();
    v99 = v137;
    v100 = (uint64_t)v141;
    v101 = v140;
    (*(void (**)(char *, char *, uint64_t))(v137 + 16))(v141, v97, v140);
    v102 = (_OWORD *)(v100 + *(int *)(v131 + 36));
    v103 = v155;
    *v102 = v154;
    v102[1] = v103;
    v102[2] = v156;
    (*(void (**)(char *, uint64_t))(v99 + 8))(v97, v101);
    KeyPath = swift_getKeyPath();
    v105 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
    v106 = objc_msgSend(v105, sel_userInterfaceLayoutDirection);

    v107 = (unsigned int *)MEMORY[0x24BDED118];
    v108 = v143;
    if (v106 != (id)1)
      v107 = (unsigned int *)MEMORY[0x24BDED100];
    v109 = v142;
    v110 = v144;
    (*(void (**)(char *, _QWORD, uint64_t))(v143 + 104))(v142, *v107, v144);
    sub_23136C1DC();
    v112 = v139;
    v113 = (uint64_t *)(v139 + *(int *)(v111 + 36));
    sub_2312D6DD8(0, &qword_255ECB848, (uint64_t (*)(uint64_t))MEMORY[0x24BDED130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
    (*(void (**)(char *, char *, uint64_t))(v108 + 16))((char *)v113 + *(int *)(v114 + 28), v109, v110);
    *v113 = KeyPath;
    sub_23136C278(v100, v112);
    (*(void (**)(char *, uint64_t))(v108 + 8))(v109, v110);
    sub_23136C2DC(v100);
    sub_2312EDD60(v146);
    (*(void (**)(char *, uint64_t))(v147 + 8))(v150, v149);
    return sub_2312EDD9C((uint64_t)&v152);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23136A22C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t OpaqueTypeConformance2;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  char *v69;
  char *v70;
  void (*v71)(char *, uint64_t);
  void (*v72)(char *, uint64_t);
  _QWORD v74[2];
  void (*v75)(char *, char *, uint64_t);
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD v99[3];
  uint64_t v100[3];
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;

  v95 = a2;
  v90 = a3;
  v98 = sub_231411608();
  v79 = *(_QWORD *)(v98 - 8);
  MEMORY[0x24BDAC7A8](v98);
  v78 = (char *)v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312EE4B8(0, &qword_255ECB8B0, v5, MEMORY[0x24BDB7A98], MEMORY[0x24BDB7E88]);
  MEMORY[0x24BDAC7A8](v6);
  v92 = (char *)v74 - v7;
  v86 = sub_231413B7C();
  v80 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86);
  v77 = (char *)v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDB7C28];
  sub_2312EE1E4(0, &qword_255ECB7A8, v10, MEMORY[0x24BDB8280], MEMORY[0x24BDB7C28]);
  v96 = v11;
  v81 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v85 = (char *)v74 - v12;
  sub_2312ED1B4(0);
  v89 = v13;
  v97 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v88 = (char *)v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v87 = (char *)v74 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v94 = (char *)v74 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v93 = (char *)v74 - v20;
  v21 = type metadata accessor for AFibBurdenPDFChartViewModel();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(_QWORD *)(v22 + 64);
  MEMORY[0x24BDAC7A8](v21);
  sub_23136B494();
  v84 = v24;
  v91 = *(_QWORD *)(v24 - 8);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v83 = (char *)v74 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)v74 - v27;
  v100[0] = *(_QWORD *)(a1 + *(int *)(v21 + 20));
  sub_2312EE518(a1, (uint64_t)v74 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v29 = (*(unsigned __int8 *)(v22 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v30 = swift_allocObject();
  sub_2312EE5FC((uint64_t)v74 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), v30 + v29, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenPDFChartViewModel);
  sub_2312D6DD8(0, &qword_255ECB778, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenPDFChartPoint, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  v76 = v31;
  v75 = (void (*)(char *, char *, uint64_t))sub_231411248();
  sub_23136B568(0);
  v74[1] = v32;
  v74[0] = sub_2312ED154();
  sub_23136B6D4(255);
  v34 = v33;
  sub_23136B814(255);
  v36 = v35;
  v37 = MEMORY[0x24BDB8230];
  sub_2312EE1E4(255, &qword_255ECEC80, (uint64_t (*)(uint64_t))MEMORY[0x24BDB8238], MEMORY[0x24BDB8230], v9);
  v39 = v38;
  sub_23136B930(255);
  v41 = v40;
  v42 = sub_231413B58();
  sub_231412A90();
  v43 = MEMORY[0x24BDF3E48];
  v101 = v42;
  v102 = MEMORY[0x24BDF3E48];
  v103 = v37;
  v104 = MEMORY[0x24BDF3E18];
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v45 = sub_23136B9AC();
  v46 = sub_23136B9F0();
  v101 = MEMORY[0x24BDF4458];
  v102 = v45;
  v103 = v46;
  v47 = swift_getOpaqueTypeConformance2();
  v101 = v39;
  v102 = v41;
  v103 = OpaqueTypeConformance2;
  v104 = v47;
  v48 = swift_getOpaqueTypeConformance2();
  v101 = v36;
  v102 = v48;
  v49 = swift_getOpaqueTypeConformance2();
  v101 = v34;
  v102 = v49;
  swift_getOpaqueTypeConformance2();
  sub_2312CCC24(&qword_255ECB8B8, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenPDFChartPoint, (uint64_t)&unk_231421D28);
  v82 = v28;
  sub_231414470();
  sub_2314141C4();
  v50 = v78;
  sub_231411230();
  v51 = v77;
  v52 = v98;
  sub_231413A50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v79 = *(_QWORD *)(v79 + 8);
  ((void (*)(char *, uint64_t))v79)(v50, v52);
  sub_231413B64();
  if (qword_255ECAA38 != -1)
    swift_once();
  v101 = qword_255ED2E30;
  v53 = v85;
  v54 = v86;
  v55 = MEMORY[0x24BDB8280];
  v56 = MEMORY[0x24BDF3E18];
  sub_2314139B4();
  v80 = *(_QWORD *)(v80 + 8);
  ((void (*)(char *, uint64_t))v80)(v51, v54);
  sub_231413FD8();
  v101 = v54;
  v102 = v43;
  v103 = v55;
  v104 = v56;
  v76 = swift_getOpaqueTypeConformance2();
  v57 = v94;
  v58 = v96;
  sub_2314139D8();
  sub_2312EE68C((uint64_t)v100);
  v81 = *(_QWORD *)(v81 + 8);
  ((void (*)(char *, uint64_t))v81)(v53, v58);
  v75 = *(void (**)(char *, char *, uint64_t))(v97 + 32);
  v59 = v89;
  v75(v93, v57, v89);
  sub_2314141C4();
  sub_23141120C();
  v60 = v98;
  sub_231413A50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  ((void (*)(char *, uint64_t))v79)(v50, v60);
  sub_231413B64();
  v101 = qword_255ED2E30;
  sub_2314139B4();
  ((void (*)(char *, uint64_t))v80)(v51, v54);
  sub_231413FD8();
  v61 = v87;
  v62 = v96;
  sub_2314139D8();
  sub_2312EE68C((uint64_t)&v101);
  ((void (*)(char *, uint64_t))v81)(v53, v62);
  v63 = v94;
  v75(v94, v61, v59);
  v64 = v83;
  v65 = v82;
  v66 = v84;
  (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v83, v82, v84);
  v99[0] = v64;
  v67 = v97;
  v68 = *(void (**)(char *, char *, uint64_t))(v97 + 16);
  v69 = v93;
  v68(v61, v93, v59);
  v99[1] = v61;
  v70 = v88;
  v68(v88, v63, v59);
  v99[2] = v70;
  sub_2313FC210(v99, v90);
  v71 = *(void (**)(char *, uint64_t))(v67 + 8);
  v71(v63, v59);
  v71(v69, v59);
  v72 = *(void (**)(char *, uint64_t))(v91 + 8);
  v72(v65, v66);
  v71(v70, v59);
  v71(v61, v59);
  return ((uint64_t (*)(char *, uint64_t))v72)(v64, v66);
}

uint64_t sub_23136ABA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void (*v31)(char *, uint64_t);
  void *v32;
  id v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t OpaqueTypeConformance2;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;

  v70 = a2;
  v76 = a3;
  sub_23136B930(0);
  v5 = *(_QWORD *)(v4 - 8);
  v74 = v4;
  v75 = v5;
  MEMORY[0x24BDAC7A8](v4);
  v73 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB7E88];
  sub_2312EE6B4(0, &qword_255ECB8C0, MEMORY[0x24BDB84C8], MEMORY[0x24BDB7E88]);
  MEMORY[0x24BDAC7A8](v8);
  v64 = (char *)&v55 - v9;
  v10 = sub_231411608();
  v57 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v55 - v14;
  sub_2312EE4B8(0, &qword_255ECB8B0, v16, MEMORY[0x24BDB7A98], v7);
  MEMORY[0x24BDAC7A8](v17);
  v58 = (char *)&v55 - v18;
  v61 = sub_231413B58();
  v62 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v60 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312EE1E4(0, &qword_255ECEC80, v20, MEMORY[0x24BDB8230], MEMORY[0x24BDB7C28]);
  v22 = *(_QWORD *)(v21 - 8);
  v66 = v21;
  v67 = v22;
  MEMORY[0x24BDAC7A8](v21);
  v59 = (char *)&v55 - v23;
  sub_23136B814(0);
  v25 = *(_QWORD *)(v24 - 8);
  v68 = v24;
  v69 = v25;
  MEMORY[0x24BDAC7A8](v24);
  v63 = (char *)&v55 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23136B6D4(0);
  v28 = *(_QWORD *)(v27 - 8);
  v71 = v27;
  v72 = v28;
  MEMORY[0x24BDAC7A8](v27);
  v65 = (char *)&v55 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_2314141C4();
  v56 = a1;
  sub_231411230();
  v30 = (void *)sub_2314115C0();
  v31 = *(void (**)(char *, uint64_t))(v57 + 8);
  v31(v13, v10);
  sub_23141120C();
  v32 = (void *)sub_2314115C0();
  v31(v13, v10);
  v33 = (id)HKDateMid();

  sub_2314115D8();
  sub_231413A50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v31(v15, v10);
  sub_2314141C4();
  v79 = *(_QWORD *)(v56 + *(int *)(type metadata accessor for AFibBurdenPDFChartPoint() + 20));
  sub_231413A50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v34 = v60;
  sub_231413B4C();
  v79 = sub_2313FB10C();
  v35 = MEMORY[0x24BDF3E48];
  v36 = MEMORY[0x24BDF3E18];
  v37 = v59;
  v38 = v61;
  v39 = MEMORY[0x24BDB8230];
  sub_2314139B4();
  swift_release();
  v40 = v38;
  (*(void (**)(char *, uint64_t))(v62 + 8))(v34, v38);
  v41 = sub_23136B9AC();
  v42 = sub_23136B9F0();
  v43 = MEMORY[0x24BDF4458];
  v44 = v73;
  sub_231413A74();
  v79 = v40;
  v80 = v35;
  v81 = v39;
  v82 = v36;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v79 = v43;
  v80 = v41;
  v81 = v42;
  v46 = swift_getOpaqueTypeConformance2();
  v47 = v63;
  v48 = v66;
  v49 = v74;
  sub_2314139CC();
  (*(void (**)(char *, unint64_t))(v75 + 8))(v44, v49);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v37, v48);
  v79 = v48;
  v80 = v49;
  v81 = OpaqueTypeConformance2;
  v82 = v46;
  v50 = swift_getOpaqueTypeConformance2();
  v51 = v65;
  v52 = v68;
  sub_23141399C();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v47, v52);
  sub_231413FD8();
  v77 = v52;
  v78 = v50;
  swift_getOpaqueTypeConformance2();
  v53 = v71;
  sub_2314139D8();
  sub_2312EE68C((uint64_t)&v79);
  return (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v51, v53);
}

uint64_t sub_23136B20C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2313694E4((uint64_t *)(v2 + a1[6]), *(void **)(v2 + a1[7]), *(_BYTE *)(v2 + a1[7] + 8), *(void **)(v2 + a1[7] + 16), (uint64_t *)(v2 + a1[8]), a2);
}

uint64_t sub_23136B234()
{
  sub_2312CCC24(&qword_255ECEC48, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenPDFLineChart, (uint64_t)&unk_23141DE48);
  return sub_2314134B0();
}

uint64_t sub_23136B28C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23136B2A4(a1, a2, a3, MEMORY[0x24BE452B8]);
}

uint64_t sub_23136B298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23136B2A4(a1, a2, a3, MEMORY[0x24BE452C0]);
}

uint64_t sub_23136B2A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;

  v6 = sub_2312CCC24(&qword_255ECEC48, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenPDFLineChart, (uint64_t)&unk_23141DE48);
  return a4(a1, a2, v6);
}

uint64_t sub_23136B304()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  sub_2312CCC24(&qword_255ECEC40, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenPDFLineChart, (uint64_t)&unk_23141DE08);
  *v1 = v0;
  v1[1] = sub_2312DBC38;
  return sub_2314127C0();
}

uint64_t sub_23136B380()
{
  return sub_2312CCC24(&qword_255ECEC38, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenPDFLineChart, (uint64_t)&unk_23141DDE0);
}

uint64_t sub_23136B3AC()
{
  return sub_2312CCC24(&qword_255ECEC40, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenPDFLineChart, (uint64_t)&unk_23141DE08);
}

uint64_t sub_23136B3D8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23136B3E8(uint64_t a1)
{
  uint64_t result;

  result = sub_2312CCC24(&qword_255ECEC48, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenPDFLineChart, (uint64_t)&unk_23141DE48);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_23136B424()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECEC58)
  {
    sub_23136B494();
    sub_2312ED1B4(255);
    v0 = sub_231413984();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECEC58);
  }
}

void sub_23136B494()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_255ECEC60)
  {
    sub_2312D6DD8(255, &qword_255ECB778, (uint64_t (*)(uint64_t))type metadata accessor for AFibBurdenPDFChartPoint, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_231411248();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878];
    sub_23136B568(255);
    sub_2312ED154();
    sub_2312CCC24((unint64_t *)&qword_255ECB798, v0, MEMORY[0x24BDCB890]);
    v1 = sub_231414488();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_255ECEC60);
  }
}

void sub_23136B568(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  if (!qword_255ECEC68)
  {
    sub_23136B6D4(255);
    v3 = v2;
    sub_23136B814(255);
    sub_2312EE1E4(255, &qword_255ECEC80, (uint64_t (*)(uint64_t))MEMORY[0x24BDB8238], MEMORY[0x24BDB8230], MEMORY[0x24BDB7C28]);
    sub_23136B930(255);
    sub_231413B58();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_23136B9AC();
    sub_23136B9F0();
    v7[2] = OpaqueTypeConformance2;
    v7[3] = swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    v7[0] = v3;
    v7[1] = swift_getOpaqueTypeConformance2();
    v5 = MEMORY[0x2348DE200](a1, v7, MEMORY[0x24BDB7D68], 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_255ECEC68);
  }
}

void sub_23136B6D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  if (!qword_255ECEC70)
  {
    sub_23136B814(255);
    v3 = v2;
    sub_2312EE1E4(255, &qword_255ECEC80, (uint64_t (*)(uint64_t))MEMORY[0x24BDB8238], MEMORY[0x24BDB8230], MEMORY[0x24BDB7C28]);
    sub_23136B930(255);
    sub_231413B58();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_23136B9AC();
    sub_23136B9F0();
    v7[2] = OpaqueTypeConformance2;
    v7[3] = swift_getOpaqueTypeConformance2();
    v7[0] = v3;
    v7[1] = swift_getOpaqueTypeConformance2();
    v5 = MEMORY[0x2348DE200](a1, v7, MEMORY[0x24BDB7BF8], 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_255ECEC70);
  }
}

void sub_23136B814(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t OpaqueTypeConformance2;
  unint64_t v7;
  uint64_t v8;
  _QWORD v9[4];

  if (!qword_255ECEC78)
  {
    sub_2312EE1E4(255, &qword_255ECEC80, (uint64_t (*)(uint64_t))MEMORY[0x24BDB8238], MEMORY[0x24BDB8230], MEMORY[0x24BDB7C28]);
    v3 = v2;
    sub_23136B930(255);
    v5 = v4;
    sub_231413B58();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_23136B9AC();
    sub_23136B9F0();
    v9[0] = v3;
    v9[1] = v5;
    v9[2] = OpaqueTypeConformance2;
    v9[3] = swift_getOpaqueTypeConformance2();
    v7 = MEMORY[0x2348DE200](a1, v9, MEMORY[0x24BDB7D38], 0);
    if (!v8)
      atomic_store(v7, (unint64_t *)&qword_255ECEC78);
  }
}

void sub_23136B930(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v6[3];

  if (!qword_255ECEC88)
  {
    v2 = sub_23136B9AC();
    v3 = sub_23136B9F0();
    v6[0] = MEMORY[0x24BDF4458];
    v6[1] = v2;
    v6[2] = v3;
    v4 = MEMORY[0x2348DE200](a1, v6, MEMORY[0x24BDB7F38], 0);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_255ECEC88);
  }
}

unint64_t sub_23136B9AC()
{
  unint64_t result;

  result = qword_255ECEC90;
  if (!qword_255ECEC90)
  {
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB8478], MEMORY[0x24BDF4458]);
    atomic_store(result, (unint64_t *)&qword_255ECEC90);
  }
  return result;
}

unint64_t sub_23136B9F0()
{
  unint64_t result;

  result = qword_255ECEC98;
  if (!qword_255ECEC98)
  {
    result = MEMORY[0x2348DE248](MEMORY[0x24BDF4420], MEMORY[0x24BDF4458]);
    atomic_store(result, (unint64_t *)&qword_255ECEC98);
  }
  return result;
}

unint64_t sub_23136BA34()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[5];
  unint64_t v7;
  uint64_t OpaqueTypeConformance2;
  uint64_t v9;

  result = qword_255ECECA0;
  if (!qword_255ECECA0)
  {
    sub_23136B424();
    v2 = v1;
    v7 = sub_23136BB24();
    v3 = MEMORY[0x24BDB8280];
    sub_2312EE1E4(255, &qword_255ECB7A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDB8288], MEMORY[0x24BDB8280], MEMORY[0x24BDB7C28]);
    v5 = v4;
    sub_231413B7C();
    v6[3] = v3;
    v6[4] = MEMORY[0x24BDF3E18];
    v6[1] = v5;
    v6[2] = swift_getOpaqueTypeConformance2();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v9 = OpaqueTypeConformance2;
    v6[0] = &v7;
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB7B80], v2, v6);
    atomic_store(result, (unint64_t *)&qword_255ECECA0);
  }
  return result;
}

unint64_t sub_23136BB24()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t OpaqueTypeConformance2;
  _QWORD v6[5];

  result = qword_255ECECA8;
  if (!qword_255ECECA8)
  {
    sub_23136B494();
    v2 = v1;
    sub_23136B6D4(255);
    v4 = v3;
    sub_23136B814(255);
    sub_2312EE1E4(255, &qword_255ECEC80, (uint64_t (*)(uint64_t))MEMORY[0x24BDB8238], MEMORY[0x24BDB8230], MEMORY[0x24BDB7C28]);
    sub_23136B930(255);
    sub_231413B58();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_23136B9AC();
    sub_23136B9F0();
    v6[3] = OpaqueTypeConformance2;
    v6[4] = swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    v6[1] = v4;
    v6[2] = swift_getOpaqueTypeConformance2();
    v6[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB8490], v2, v6);
    atomic_store(result, (unint64_t *)&qword_255ECECA8);
  }
  return result;
}

void sub_23136BCA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  if (!qword_255ECECB0)
  {
    sub_2312EDFDC(255, &qword_255ECEC50, (uint64_t (*)(uint64_t))sub_23136B424, (uint64_t (*)(void))sub_23136BA34, MEMORY[0x24BDB8128]);
    v3 = v2;
    sub_2312ED508(255);
    v7[0] = v3;
    v7[1] = v4;
    v7[2] = sub_23136BD54();
    v7[3] = sub_2312ED5B0();
    v5 = MEMORY[0x2348DE200](a1, v7, MEMORY[0x24BDB83B0], 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_255ECECB0);
  }
}

unint64_t sub_23136BD54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255ECECB8;
  if (!qword_255ECECB8)
  {
    sub_2312EDFDC(255, &qword_255ECEC50, (uint64_t (*)(uint64_t))sub_23136B424, (uint64_t (*)(void))sub_23136BA34, MEMORY[0x24BDB8128]);
    result = MEMORY[0x2348DE248](MEMORY[0x24BDB8148], v1);
    atomic_store(result, (unint64_t *)&qword_255ECECB8);
  }
  return result;
}

void sub_23136BDBC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  if (!qword_255ECECC0)
  {
    sub_23136BCA0(255);
    v3 = v2;
    sub_2312EDFDC(255, &qword_255ECEC50, (uint64_t (*)(uint64_t))sub_23136B424, (uint64_t (*)(void))sub_23136BA34, MEMORY[0x24BDB8128]);
    sub_2312ED508(255);
    sub_23136BD54();
    sub_2312ED5B0();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v7[0] = v3;
    v7[1] = MEMORY[0x24BDB7DC8];
    v7[2] = OpaqueTypeConformance2;
    v7[3] = MEMORY[0x24BDB7DB8];
    v5 = MEMORY[0x2348DE200](a1, v7, MEMORY[0x24BDB8360], 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_255ECECC0);
  }
}

void sub_23136BEB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!qword_255ECECC8)
  {
    sub_23136BDBC(255);
    v3 = v2;
    sub_2312EE6B4(255, &qword_255ECB7F8, MEMORY[0x24BEE13F0], MEMORY[0x24BEE08B8]);
    v5 = v4;
    sub_23136BCA0(255);
    sub_2312EDFDC(255, &qword_255ECEC50, (uint64_t (*)(uint64_t))sub_23136B424, (uint64_t (*)(void))sub_23136BA34, MEMORY[0x24BDB8128]);
    sub_2312ED508(255);
    sub_23136BD54();
    sub_2312ED5B0();
    swift_getOpaqueTypeConformance2();
    v8[0] = v3;
    v8[1] = v5;
    v8[2] = swift_getOpaqueTypeConformance2();
    v8[3] = sub_2312ED84C();
    v6 = MEMORY[0x2348DE200](a1, v8, MEMORY[0x24BDB83E0], 0);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_255ECECC8);
  }
}

void sub_23136C000(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!qword_255ECECD0)
  {
    sub_23136BEB0(255);
    v3 = v2;
    sub_23136BDBC(255);
    sub_2312EE6B4(255, &qword_255ECB7F8, MEMORY[0x24BEE13F0], MEMORY[0x24BEE08B8]);
    sub_23136BCA0(255);
    sub_2312EDFDC(255, &qword_255ECEC50, (uint64_t (*)(uint64_t))sub_23136B424, (uint64_t (*)(void))sub_23136BA34, MEMORY[0x24BDB8128]);
    sub_2312ED508(255);
    sub_23136BD54();
    sub_2312ED5B0();
    swift_getOpaqueTypeConformance2();
    v4 = MEMORY[0x24BDB7DC8];
    v5 = MEMORY[0x24BDB7DB8];
    swift_getOpaqueTypeConformance2();
    sub_2312ED84C();
    v8[0] = v3;
    v8[1] = v4;
    v8[2] = swift_getOpaqueTypeConformance2();
    v8[3] = v5;
    v6 = MEMORY[0x2348DE200](a1, v8, MEMORY[0x24BDB8380], 0);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_255ECECD0);
  }
}

uint64_t sub_23136C178@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23136A22C(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_23136C180(uint64_t a1)
{
  uint64_t v2;

  sub_2312D6DD8(0, &qword_255ECB758, (uint64_t (*)(uint64_t))MEMORY[0x24BDB8338], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_23136C1DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECECE0)
  {
    sub_2312EE4B8(255, &qword_255ECECD8, (uint64_t (*)(uint64_t))sub_23136C000, MEMORY[0x24BDEBEF8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    sub_2312D6DD8(255, &qword_255ECB848, (uint64_t (*)(uint64_t))MEMORY[0x24BDED130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
    v0 = sub_231414074();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECECE0);
  }
}

uint64_t sub_23136C278(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312EE4B8(0, &qword_255ECECD8, (uint64_t (*)(uint64_t))sub_23136C000, MEMORY[0x24BDEBEF8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23136C2DC(uint64_t a1)
{
  uint64_t v2;

  sub_2312EE4B8(0, &qword_255ECECD8, (uint64_t (*)(uint64_t))sub_23136C000, MEMORY[0x24BDEBEF8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23136C338()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23136C36C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for AFibBurdenPDFChartViewModel();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_231411248();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_23136C40C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AFibBurdenPDFChartViewModel() - 8) + 80);
  return sub_23136ABA0(a1, v2 + ((v5 + 16) & ~v5), a2);
}

unint64_t sub_23136C45C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255ECECE8;
  if (!qword_255ECECE8)
  {
    sub_23136C1DC();
    v2 = v1;
    v3[0] = sub_23136C4C4();
    v3[1] = sub_2312EE918();
    result = MEMORY[0x2348DE248](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_255ECECE8);
  }
  return result;
}

unint64_t sub_23136C4C4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[6];

  result = qword_255ECECF0;
  if (!qword_255ECECF0)
  {
    sub_2312EE4B8(255, &qword_255ECECD8, (uint64_t (*)(uint64_t))sub_23136C000, MEMORY[0x24BDEBEF8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    v2 = v1;
    sub_23136BEB0(255);
    v4 = v3;
    sub_23136BDBC(255);
    sub_2312EE6B4(255, &qword_255ECB7F8, MEMORY[0x24BEE13F0], MEMORY[0x24BEE08B8]);
    sub_23136BCA0(255);
    sub_2312EDFDC(255, &qword_255ECEC50, (uint64_t (*)(uint64_t))sub_23136B424, (uint64_t (*)(void))sub_23136BA34, MEMORY[0x24BDB8128]);
    sub_2312ED508(255);
    sub_23136BD54();
    sub_2312ED5B0();
    swift_getOpaqueTypeConformance2();
    v5 = MEMORY[0x24BDB7DC8];
    v6 = MEMORY[0x24BDB7DB8];
    swift_getOpaqueTypeConformance2();
    sub_2312ED84C();
    v7[2] = v4;
    v7[3] = v5;
    v7[4] = swift_getOpaqueTypeConformance2();
    v7[5] = v6;
    v7[0] = swift_getOpaqueTypeConformance2();
    v7[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x2348DE248](MEMORY[0x24BDED308], v2, v7);
    atomic_store(result, (unint64_t *)&qword_255ECECF0);
  }
  return result;
}

void sub_23136C700(void *a1)
{
  if (objc_msgSend(a1, sel_healthDataSource))
  {
    sub_231336D90(MEMORY[0x24BEE4AF8]);
    __asm { BR              X12 }
  }
  sub_231414EE4();
  __break(1u);
  JUMPOUT(0x23136CD88);
}

uint64_t sub_23136CE2C()
{
  uint64_t v0;

  sub_2312CEBD4(v0 + OBJC_IVAR____TtC5Heart38AFibBurdenOnboardingStepAnalyticsEvent_presentationContext, (uint64_t (*)(_QWORD))type metadata accessor for AFibBurdenOnboardingPresentationContext);
  sub_2314130CC();
  return swift_deallocClassInstance();
}

uint64_t sub_23136CE74()
{
  return type metadata accessor for AFibBurdenOnboardingStepAnalyticsEvent();
}

uint64_t type metadata accessor for AFibBurdenOnboardingStepAnalyticsEvent()
{
  uint64_t result;

  result = qword_255ECED20;
  if (!qword_255ECED20)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23136CEB8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for AFibBurdenOnboardingPresentationContext();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23136CF38(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t *i;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = MEMORY[0x24BEE4AF8];
  if (v5)
  {
    v16 = MEMORY[0x24BEE4AF8];
    sub_23137D32C(0, v5, 0);
    v6 = v16;
    for (i = (uint64_t *)(a3 + 32); ; ++i)
    {
      v14 = *i;
      sub_231412A90();
      a1(&v15, &v14);
      if (v4)
        break;
      v4 = 0;
      swift_bridgeObjectRelease();
      v10 = v15;
      v16 = v6;
      v12 = *(_QWORD *)(v6 + 16);
      v11 = *(_QWORD *)(v6 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_23137D32C(v11 > 1, v12 + 1, 1);
        v6 = v16;
      }
      *(_QWORD *)(v6 + 16) = v12 + 1;
      *(_QWORD *)(v6 + 8 * v12 + 32) = v10;
      if (!--v5)
        return v6;
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_23136D05C(void (*a1)(_QWORD *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  char *v9;
  char v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD v20[2];
  char v21;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = v3;
  v20[1] = a2;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = MEMORY[0x24BEE4AF8];
  if (v5)
  {
    v25 = MEMORY[0x24BEE4AF8];
    sub_23137D390(0, v5, 0);
    v6 = v25;
    v9 = (char *)(a3 + 32);
    while (1)
    {
      v10 = *v9++;
      v21 = v10;
      a1(v22, &v21);
      if (v4)
        break;
      v4 = 0;
      v25 = v6;
      v12 = *(_QWORD *)(v6 + 16);
      v11 = *(_QWORD *)(v6 + 24);
      if (v12 >= v11 >> 1)
        sub_23137D390(v11 > 1, v12 + 1, 1);
      v13 = v23;
      v14 = v24;
      v15 = sub_2312DEF74((uint64_t)v22, v23);
      MEMORY[0x24BDAC7A8](v15);
      v17 = (char *)v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v18 + 16))(v17);
      sub_23136FCA0(v12, (uint64_t)v17, &v25, v13, v14);
      _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v22);
      v6 = v25;
      if (!--v5)
        return v6;
    }
    swift_release();
  }
  return v6;
}

unint64_t sub_23136D1C8@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_23136FD6C(*a1);
  *a2 = result;
  return result;
}

void sub_23136D1F0(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

_QWORD *sub_23136D1FC@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

uint64_t sub_23136D21C()
{
  sub_231415118();
  sub_231415124();
  sub_231415124();
  return sub_231415148();
}

uint64_t sub_23136D294()
{
  sub_231415124();
  return sub_231415124();
}

uint64_t sub_23136D2F0()
{
  sub_231415118();
  sub_231415124();
  sub_231415124();
  return sub_231415148();
}

BOOL sub_23136D364(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_23136FD18(*a1, *a2);
}

uint64_t sub_23136D370()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  unint64_t *v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t v36;

  v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, (unint64_t *)&qword_255ECBCC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v36 - v3;
  sub_2312D6DD8(0, qword_255ECD770, (uint64_t (*)(uint64_t))MEMORY[0x24BE43418], v1);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v36 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v36 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v36 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v36 - v18;
  v20 = v0 + OBJC_IVAR____TtC5Heart19ConfirmDetailsModel_mostRecentDetails;
  swift_beginAccess();
  sub_231370144(v20, (uint64_t)v19);
  v21 = sub_231412880();
  v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48);
  if (v22(v19, 1, v21))
  {
    v23 = qword_255ECD770;
    v24 = (uint64_t (*)(uint64_t))MEMORY[0x24BE43418];
    v25 = (uint64_t)v19;
LABEL_3:
    sub_2312D6B98(v25, v23, v24);
    return 0;
  }
  sub_231412808();
  v28 = v27;
  sub_2312D6B98((uint64_t)v19, qword_255ECD770, (uint64_t (*)(uint64_t))MEMORY[0x24BE43418]);
  if ((v28 & 1) != 0)
    return 0;
  sub_231370144(v20, (uint64_t)v17);
  if (v22(v17, 1, v21))
  {
    sub_2312D6B98((uint64_t)v17, qword_255ECD770, (uint64_t (*)(uint64_t))MEMORY[0x24BE43418]);
  }
  else
  {
    v30 = sub_231412808();
    v32 = v31;
    sub_2312D6B98((uint64_t)v17, qword_255ECD770, (uint64_t (*)(uint64_t))MEMORY[0x24BE43418]);
    if ((v32 & 1) == 0 && !v30)
      return 0;
  }
  sub_231370144(v20, (uint64_t)v14);
  if (v22(v14, 1, v21))
  {
    sub_2312D6B98((uint64_t)v14, qword_255ECD770, (uint64_t (*)(uint64_t))MEMORY[0x24BE43418]);
    v29 = sub_2314112F0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v4, 1, 1, v29);
LABEL_14:
    v23 = (unint64_t *)&qword_255ECBCC8;
    v24 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0];
    v25 = (uint64_t)v4;
    goto LABEL_3;
  }
  sub_231412838();
  sub_2312D6B98((uint64_t)v14, qword_255ECD770, (uint64_t (*)(uint64_t))MEMORY[0x24BE43418]);
  v33 = sub_2314112F0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v4, 1, v33) == 1)
    goto LABEL_14;
  sub_2312D6B98((uint64_t)v4, (unint64_t *)&qword_255ECBCC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0]);
  sub_231370144(v20, (uint64_t)v11);
  if (v22(v11, 1, v21))
  {
    v23 = qword_255ECD770;
    v24 = (uint64_t (*)(uint64_t))MEMORY[0x24BE43418];
    v25 = (uint64_t)v11;
    goto LABEL_3;
  }
  v34 = (void *)sub_231412868();
  sub_2312D6B98((uint64_t)v11, qword_255ECD770, (uint64_t (*)(uint64_t))MEMORY[0x24BE43418]);
  if (!v34)
    return 0;

  sub_231370144(v20, (uint64_t)v8);
  if (v22(v8, 1, v21))
  {
    v23 = qword_255ECD770;
    v24 = (uint64_t (*)(uint64_t))MEMORY[0x24BE43418];
    v25 = (uint64_t)v8;
    goto LABEL_3;
  }
  v35 = (void *)sub_231412874();
  sub_2312D6B98((uint64_t)v8, qword_255ECD770, (uint64_t (*)(uint64_t))MEMORY[0x24BE43418]);
  if (!v35)
    return 0;

  return 1;
}

uint64_t (*sub_23136D764())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_23136D7A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  void (*v13)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BE43418];
  sub_2312D6DD8(0, qword_255ECD770, (uint64_t (*)(uint64_t))MEMORY[0x24BE43418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v17 - v8;
  v10 = sub_231412880();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v12(v9, a1, v10);
  v13 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56);
  v13(v9, 0, 1, v10);
  sub_2313707C8((uint64_t)v9, (uint64_t)v7);
  v14 = v1 + OBJC_IVAR____TtC5Heart19ConfirmDetailsModel_mostRecentDetails;
  swift_beginAccess();
  sub_231370824((uint64_t)v7, v14);
  swift_endAccess();
  v12(v9, a1, v10);
  v13(v9, 0, 1, v10);
  v15 = sub_23136D95C((uint64_t)v9);
  sub_2312D6B98((uint64_t)v9, qword_255ECD770, v3);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Heart19ConfirmDetailsModel_visiblePicker) = 4;
  if (!MEMORY[0x2348DE3BC](v1 + 16))
    return swift_bridgeObjectRelease();
  sub_231394D34(v15);
  swift_bridgeObjectRelease();
  return sub_2314130CC();
}

uint64_t sub_23136D95C(uint64_t a1)
{
  uint64_t v1;
  uint64_t inited;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_2312D6DD8(0, &qword_255ECEFB8, (uint64_t (*)(uint64_t))sub_231370880, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 32) = &unk_25001EFA8;
  *(_OWORD *)(inited + 16) = xmmword_231418090;
  *(_QWORD *)(inited + 40) = &unk_25001EFD0;
  v7 = v1;
  v8 = a1;
  v4 = sub_23136CF38((void (*)(uint64_t *__return_ptr, uint64_t *))sub_2313708D4, (uint64_t)&v6, inited);
  swift_setDeallocating();
  sub_231370880();
  swift_arrayDestroy();
  return v4;
}

void sub_23136DA30(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  void (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  unsigned __int8 v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unsigned __int8 v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v69;
  char *v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  _QWORD *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  id v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  id v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  id v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(char *, uint64_t);
  void (*v119)(char *, char *, uint64_t);
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  char *v126;
  char *v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137[5];
  uint64_t v138;

  v2 = v1;
  v135 = *v1;
  v136 = a1;
  v3 = sub_2314117F4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v134 = (char *)&v119 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v124 = (char *)&v119 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v129 = (char *)&v119 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v128 = (char *)&v119 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v123 = (char *)&v119 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v119 - v15;
  sub_2312D6DD8(0, qword_255ECD770, (uint64_t (*)(uint64_t))MEMORY[0x24BE43418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v131 = (uint64_t)&v119 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v125 = (uint64_t)&v119 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v127 = (char *)&v119 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v119 - v25;
  v27 = MEMORY[0x24BDAC7A8](v24);
  v126 = (char *)&v119 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v132 = (char *)&v119 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v32 = (char *)&v119 - v31;
  v33 = sub_231412880();
  v34 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v36 = (char *)&v119 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = (uint64_t)v2 + OBJC_IVAR____TtC5Heart19ConfirmDetailsModel_mostRecentDetails;
  swift_beginAccess();
  v130 = v37;
  sub_231370144(v37, (uint64_t)v32);
  v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
  if (v38(v32, 1, v33) == 1)
  {
    sub_2312D6B98((uint64_t)v32, qword_255ECD770, (uint64_t (*)(uint64_t))MEMORY[0x24BE43418]);
    if (qword_25415DF98 != -1)
      swift_once();
    v39 = sub_231413780();
    sub_2312CE3B8(v39, (uint64_t)qword_254162FF0);
    v40 = sub_231413768();
    v41 = sub_231414974();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = swift_slowAlloc();
      v43 = swift_slowAlloc();
      v137[0] = v43;
      *(_DWORD *)v42 = 136446466;
      v44 = sub_2314151A8();
      v138 = sub_23133180C(v44, v45, v137);
      sub_231414CBC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v42 + 12) = 2082;
      v138 = sub_23133180C(0xD000000000000014, 0x800000023142D1A0, v137);
      sub_231414CBC();
      _os_log_impl(&dword_2312C8000, v40, v41, "[%{public}s.%{public}s]: Attempted to change details before we received them.", (uint8_t *)v42, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2348DE308](v43, -1, -1);
      MEMORY[0x2348DE308](v42, -1, -1);
    }

    return;
  }
  v122 = v34;
  v46 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
  v133 = v36;
  v121 = v33;
  v119 = v46;
  v46(v36, v32, v33);
  v120 = v4;
  v47 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v48 = v136;
  v47(v16, v136, v3);
  v49 = OBJC_IVAR____TtC5Heart19ConfirmDetailsModel_visiblePicker;
  v50 = sub_23136FD7C((uint64_t)v16, *((_BYTE *)v2 + OBJC_IVAR____TtC5Heart19ConfirmDetailsModel_visiblePicker));
  v51 = v3;
  if (v50 <= 0xFBu)
  {
    v63 = v50;
    if (v50 >> 6)
    {
      v64 = v121;
      if (v50 >> 6 == 1)
      {
        if ((v50 & 1) != 0)
        {
          v84 = v2;
          v85 = v133;
          sub_231412820();
          sub_23141282C();
          v86 = v122;
          v87 = (uint64_t)v127;
          (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v127, v85, v64);
          v68 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v86 + 56);
          v68(v87, 0, 1, v64);
          v88 = v125;
          sub_231370144(v87, v125);
          if (v38((char *)v88, 1, v64) == 1)
          {
            sub_2312D6B98(v88, qword_255ECD770, (uint64_t (*)(uint64_t))MEMORY[0x24BE43418]);
          }
          else
          {
            sub_231412820();
            (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v88, v64);
          }
          sub_23136EB44(v137);
          sub_2312D6B98(v87, qword_255ECD770, (uint64_t (*)(uint64_t))MEMORY[0x24BE43418]);
          v98 = v84 + 2;
        }
        else
        {
          v65 = v133;
          sub_231412850();
          sub_23141285C();
          v66 = v122;
          v67 = (uint64_t)v126;
          (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v126, v65, v64);
          v68 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v66 + 56);
          v68(v67, 0, 1, v64);
          sub_231370144(v67, (uint64_t)v26);
          if (v38(v26, 1, v64) == 1)
          {
            sub_2312D6B98((uint64_t)v26, qword_255ECD770, (uint64_t (*)(uint64_t))MEMORY[0x24BE43418]);
          }
          else
          {
            sub_231412850();
            (*(void (**)(char *, uint64_t))(v66 + 8))(v26, v64);
          }
          sub_23136E988(v137);
          sub_2312D6B98(v67, qword_255ECD770, (uint64_t (*)(uint64_t))MEMORY[0x24BE43418]);
          v98 = v2 + 2;
        }
        v99 = MEMORY[0x2348DE3BC](v98);
        if (!v99)
          goto LABEL_50;
        v100 = v99;
        sub_2314128EC();
        v101 = MEMORY[0x2348DE3BC](v100 + qword_255ECF860);
        if (v101)
        {
          v102 = *(void **)(v101 + qword_255ECC850);
          if (v102)
          {
            v103 = v102;
            objc_msgSend(v103, sel_setEnabled_, sub_23136D370() & 1);
            sub_2314130CC();
            sub_2314130CC();

LABEL_50:
            _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v137);
            v114 = v132;
            v119(v132, v133, v64);
            v68((uint64_t)v114, 0, 1, v64);
            v115 = (uint64_t)v114;
            v116 = v131;
            sub_2313707C8(v115, v131);
            v117 = v130;
            swift_beginAccess();
            sub_231370824(v116, v117);
            swift_endAccess();
            return;
          }
          sub_2314130CC();
        }
        sub_2314130CC();
        goto LABEL_50;
      }
      if (qword_25415DF98 != -1)
        swift_once();
      v75 = sub_231413780();
      sub_2312CE3B8(v75, (uint64_t)qword_254162FF0);
      v76 = sub_231413768();
      v77 = sub_231414974();
      if (os_log_type_enabled(v76, v77))
      {
        v78 = swift_slowAlloc();
        v79 = swift_slowAlloc();
        v137[0] = v79;
        *(_DWORD *)v78 = 136446722;
        v80 = sub_2314151A8();
        v138 = sub_23133180C(v80, v81, v137);
        sub_231414CBC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v78 + 12) = 2082;
        v138 = sub_23133180C(0xD000000000000014, 0x800000023142D1A0, v137);
        sub_231414CBC();
        *(_WORD *)(v78 + 22) = 2082;
        LOBYTE(v138) = v63 & 0x3F;
        v82 = sub_2314146E0();
        v138 = sub_23133180C(v82, v83, v137);
        sub_231414CBC();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2312C8000, v76, v77, "[%{public}s.%{public}s]: Should not be able to tap on picker %{public}s", (uint8_t *)v78, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x2348DE308](v79, -1, -1);
        MEMORY[0x2348DE308](v78, -1, -1);
      }

      v74 = *(void (**)(char *, uint64_t))(v122 + 8);
LABEL_61:
      v74(v133, v64);
      return;
    }
    v69 = *((unsigned __int8 *)v2 + v49);
    v64 = v121;
    if (v69 == 4)
    {
      *((_BYTE *)v2 + v49) = v50;
      v70 = v128;
      MEMORY[0x2348DA1A4](v50 + 1, 0);
      v71 = v122;
      v72 = v2;
      v73 = (uint64_t)v132;
      (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v132, v133, v64);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v71 + 56))(v73, 0, 1, v64);
      sub_23136ED04(v63 | 0x80, v73, v137);
      sub_2312D6B98(v73, qword_255ECD770, (uint64_t (*)(uint64_t))MEMORY[0x24BE43418]);
      if (MEMORY[0x2348DE3BC](v72 + 2))
      {
        sub_2314128E0();
        sub_2314130CC();
      }
      _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v137);
      (*(void (**)(char *, uint64_t))(v120 + 8))(v70, v51);
      v74 = *(void (**)(char *, uint64_t))(v71 + 8);
      goto LABEL_61;
    }
    v89 = v50;
    if ((_DWORD)v69 == v50)
    {
      *((_BYTE *)v2 + v49) = 4;
      v90 = v123;
      MEMORY[0x2348DA1A4](v50 + 1, 0);
      v91 = MEMORY[0x2348DE3BC](v2 + 2);
      v92 = v122;
      v93 = v120;
      if (v91)
      {
        v94 = v91;
        sub_2314128B0();
        v95 = MEMORY[0x2348DE3BC](v94 + qword_255ECF860);
        if (v95)
        {
          v96 = *(void **)(v95 + qword_255ECC850);
          if (v96)
          {
            v97 = v96;
            objc_msgSend(v97, sel_setEnabled_, sub_23136D370() & 1);
            sub_2314130CC();
            sub_2314130CC();

            goto LABEL_55;
          }
          sub_2314130CC();
        }
        sub_2314130CC();
      }
LABEL_55:
      (*(void (**)(char *, uint64_t))(v93 + 8))(v90, v51);
      v74 = *(void (**)(char *, uint64_t))(v92 + 8);
      goto LABEL_61;
    }
    v104 = v3;
    MEMORY[0x2348DA1A4](v69 + 1, 0);
    *((_BYTE *)v2 + v49) = v63;
    v105 = v124;
    MEMORY[0x2348DA1A4](v89 + 1, 0);
    v106 = v122;
    v107 = (uint64_t)v132;
    (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v132, v133, v64);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v106 + 56))(v107, 0, 1, v64);
    sub_23136ED04(v63 | 0x80, v107, v137);
    sub_2312D6B98(v107, qword_255ECD770, (uint64_t (*)(uint64_t))MEMORY[0x24BE43418]);
    v108 = MEMORY[0x2348DE3BC](v2 + 2);
    v109 = v120;
    if (v108)
    {
      v110 = v108;
      sub_2314128B0();
      v111 = MEMORY[0x2348DE3BC](v110 + qword_255ECF860);
      if (v111)
      {
        v112 = *(void **)(v111 + qword_255ECC850);
        if (v112)
        {
          v113 = v112;
          objc_msgSend(v113, sel_setEnabled_, sub_23136D370() & 1);
          sub_2314130CC();
          sub_2314130CC();

          v105 = v124;
          goto LABEL_58;
        }
        sub_2314130CC();
      }
      sub_2314130CC();
    }
LABEL_58:
    if (MEMORY[0x2348DE3BC](v2 + 2))
    {
      sub_2314128E0();
      sub_2314130CC();
    }
    _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v137);
    v118 = *(void (**)(char *, uint64_t))(v109 + 8);
    v118(v105, v104);
    v118(v129, v104);
    v74 = *(void (**)(char *, uint64_t))(v106 + 8);
    goto LABEL_61;
  }
  if (qword_25415DF98 != -1)
    swift_once();
  v52 = sub_231413780();
  sub_2312CE3B8(v52, (uint64_t)qword_254162FF0);
  v53 = v134;
  v47(v134, v48, v3);
  v54 = sub_231413768();
  v55 = sub_231414980();
  if (os_log_type_enabled(v54, v55))
  {
    v56 = swift_slowAlloc();
    v57 = v51;
    v58 = swift_slowAlloc();
    v137[0] = v58;
    *(_DWORD *)v56 = 136446722;
    v59 = sub_2314151A8();
    v138 = sub_23133180C(v59, v60, v137);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v56 + 12) = 2082;
    v138 = sub_23133180C(0xD000000000000014, 0x800000023142D1A0, v137);
    sub_231414CBC();
    *(_WORD *)(v56 + 22) = 2082;
    sub_2312CCC24(&qword_255ECEFB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF678], MEMORY[0x24BDCF6B8]);
    v61 = sub_231415040();
    v138 = sub_23133180C(v61, v62, v137);
    sub_231414CBC();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v120 + 8))(v53, v57);
    _os_log_impl(&dword_2312C8000, v54, v55, "[%{public}s.%{public}s]: Unable to determine row for index path %{public}s", (uint8_t *)v56, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2348DE308](v58, -1, -1);
    MEMORY[0x2348DE308](v56, -1, -1);

  }
  else
  {

    (*(void (**)(char *, uint64_t))(v120 + 8))(v53, v51);
  }
  (*(void (**)(char *, uint64_t))(v122 + 8))(v133, v121);
}

uint64_t sub_23136E988@<X0>(uint64_t *a1@<X8>)
{
  uint64_t ObjCClassFromMetadata;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);

  type metadata accessor for HeartHealthPluginDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = (void *)objc_opt_self();
  v4 = objc_msgSend(v3, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_231411374();

  v5 = objc_msgSend(v3, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  sub_231411374();

  v6 = sub_2314123D0();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BE42928];
  a1[3] = v6;
  a1[4] = sub_2312CCC24(&qword_255ECEFA8, v7, MEMORY[0x24BE42918]);
  sub_2312DFCA0(a1);
  return sub_2314123C4();
}

uint64_t sub_23136EB44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t ObjCClassFromMetadata;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);

  type metadata accessor for HeartHealthPluginDelegate();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = (void *)objc_opt_self();
  v4 = objc_msgSend(v3, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_231411374();

  v5 = objc_msgSend(v3, sel_bundleForClass_, ObjCClassFromMetadata, 0xE000000000000000);
  sub_231411374();

  v6 = sub_2314123D0();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BE42928];
  a1[3] = v6;
  a1[4] = sub_2312CCC24(&qword_255ECEFA8, v7, MEMORY[0x24BE42918]);
  sub_2312DFCA0(a1);
  return sub_2314123C4();
}

uint64_t sub_23136ED04@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;

  v28 = a2;
  v29 = a3;
  v30 = a1;
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, (unint64_t *)&qword_255ECBCC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v27 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  sub_2312D6DD8(0, qword_255ECD770, (uint64_t (*)(uint64_t))MEMORY[0x24BE43418], v4);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v27 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v27 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v21 = MEMORY[0x24BDAC7A8](v20);
  MEMORY[0x24BDAC7A8](v21);
  if (!(a1 >> 6))
    __asm { BR              X9 }
  if (a1 >> 6 != 1)
    __asm { BR              X10 }
  if ((v30 & 1) != 0)
  {
    sub_231370144(v28, (uint64_t)v15);
    v24 = sub_231412880();
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v15, 1, v24) == 1)
    {
      sub_2312D6B98((uint64_t)v15, qword_255ECD770, (uint64_t (*)(uint64_t))MEMORY[0x24BE43418]);
    }
    else
    {
      sub_231412820();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v15, v24);
    }
    return sub_23136EB44(v29);
  }
  else
  {
    sub_231370144(v28, (uint64_t)v18);
    v22 = sub_231412880();
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v18, 1, v22) == 1)
    {
      sub_2312D6B98((uint64_t)v18, qword_255ECD770, (uint64_t (*)(uint64_t))MEMORY[0x24BE43418]);
    }
    else
    {
      sub_231412850();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v18, v22);
    }
    return sub_23136E988(v29);
  }
}

uint64_t sub_23136F800()
{
  uint64_t v0;

  sub_2312D2854(v0 + 16);
  sub_2312D6B98(v0 + OBJC_IVAR____TtC5Heart19ConfirmDetailsModel_mostRecentDetails, qword_255ECD770, (uint64_t (*)(uint64_t))MEMORY[0x24BE43418]);
  _s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0(v0 + OBJC_IVAR____TtC5Heart19ConfirmDetailsModel_valueFormatter);
  return swift_deallocClassInstance();
}

uint64_t sub_23136F858()
{
  return type metadata accessor for ConfirmDetailsModel();
}

uint64_t type metadata accessor for ConfirmDetailsModel()
{
  uint64_t result;

  result = qword_255ECEE10;
  if (!qword_255ECEE10)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23136F89C()
{
  unint64_t v0;

  sub_2312D6DD8(319, qword_255ECD770, (uint64_t (*)(uint64_t))MEMORY[0x24BE43418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t getEnumTagSinglePayload for ConfirmDetailsModel.Row(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x3E)
    goto LABEL_17;
  if (a2 + 194 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 194) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 194;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 194;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 194;
  }
LABEL_17:
  v6 = (*a1 & 0x3C | (*a1 >> 6)) ^ 0x3F;
  if (v6 >= 0x3D)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for ConfirmDetailsModel.Row(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 194 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 194) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x3E)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x3D)
    return ((uint64_t (*)(void))((char *)&loc_23136FA28 + 4 * byte_23141DF5D[v4]))();
  *a1 = a2 - 62;
  return ((uint64_t (*)(void))((char *)sub_23136FA5C + 4 * byte_23141DF58[v4]))();
}

uint64_t sub_23136FA5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23136FA64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23136FA6CLL);
  return result;
}

uint64_t sub_23136FA84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23136FA8CLL);
  *(_BYTE *)result = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
  return result;
}

uint64_t sub_23136FA90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23136FA98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23136FAA4(unsigned __int8 *a1)
{
  return *a1 >> 6;
}

_BYTE *sub_23136FAB0(_BYTE *result)
{
  *result &= 0x3Fu;
  return result;
}

_BYTE *sub_23136FAC0(_BYTE *result, char a2)
{
  *result = *result & 3 | (a2 << 6);
  return result;
}

ValueMetadata *type metadata accessor for ConfirmDetailsModel.Row()
{
  return &type metadata for ConfirmDetailsModel.Row;
}

uint64_t storeEnumTagSinglePayload for ConfirmDetailsModel.Row.HealthDetail(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23136FB30 + 4 * byte_23141DF67[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23136FB64 + 4 * byte_23141DF62[v4]))();
}

uint64_t sub_23136FB64(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23136FB6C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23136FB74);
  return result;
}

uint64_t sub_23136FB80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23136FB88);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23136FB8C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23136FB94(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ConfirmDetailsModel.Row.HealthDetail()
{
  return &type metadata for ConfirmDetailsModel.Row.HealthDetail;
}

unint64_t sub_23136FBB4()
{
  unint64_t result;

  result = qword_255ECEF38;
  if (!qword_255ECEF38)
  {
    result = MEMORY[0x2348DE248](&unk_23141E09C, &type metadata for ConfirmDetailsModel.Row.HealthDetail);
    atomic_store(result, (unint64_t *)&qword_255ECEF38);
  }
  return result;
}

unint64_t sub_23136FBFC()
{
  unint64_t result;

  result = qword_255ECEF40;
  if (!qword_255ECEF40)
  {
    result = MEMORY[0x2348DE248](&unk_23141E0C4, &type metadata for ConfirmDetailsModel.Row);
    atomic_store(result, (unint64_t *)&qword_255ECEF40);
  }
  return result;
}

void (*sub_23136FC40())(_BYTE *, _QWORD)
{
  return sub_23136FE84();
}

void (*sub_23136FC48(uint64_t a1, void *a2))(_BYTE *, _QWORD)
{
  return sub_2313701A0(a2, MEMORY[0x24BE43410], 2u, 2);
}

void (*sub_23136FC70(uint64_t a1, void *a2))(_BYTE *, _QWORD)
{
  return sub_2313701A0(a2, MEMORY[0x24BE43400], 3u, 3);
}

void (*sub_23136FC98(uint64_t a1, uint64_t a2))(char *, _QWORD)
{
  return sub_23137046C(a2);
}

uint64_t sub_23136FCA0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  v9 = sub_2312DFCA0((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v9, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_2312DFB68(&v12, v10 + 40 * a1 + 32);
}

BOOL sub_23136FD18(unsigned __int8 a1, unsigned __int8 a2)
{
  _BOOL4 v3;
  _BOOL4 v4;
  _BOOL4 v5;

  v3 = a2 < 0x40u && a1 == a2;
  v4 = ((a2 ^ a1) & 1) == 0;
  if ((a2 & 0xC0) != 0x40)
    v4 = 0;
  v5 = ((a2 ^ a1) & 0x3F) == 0;
  if ((a2 & 0xC0) != 0x80)
    v5 = 0;
  if (a1 >> 6 == 1)
    v5 = v4;
  if (a1 >> 6)
    return v5;
  else
    return v3;
}

unint64_t sub_23136FD6C(unint64_t result)
{
  if (result >= 4)
    return 4;
  return result;
}

uint64_t sub_23136FD7C(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;

  v4 = sub_2314117E8();
  if (v4 == 1)
  {
    v8 = sub_2314117DC();
    v9 = sub_2314117F4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
    if (v8 == 1)
      v10 = 65;
    else
      v10 = -4;
    if (v8)
      return v10;
    else
      return 64;
  }
  else if (v4)
  {
    v11 = sub_2314117F4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(a1, v11);
    return 252;
  }
  else
  {
    v5 = sub_2314117DC();
    v6 = sub_2314117F4();
    result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
    if (a2 == 4)
      goto LABEL_14;
    if (a2 + 1 == v5)
      return a2 | 0xFFFFFF80;
    v12 = v5 > a2;
    v13 = __OFSUB__(v5, v12);
    v5 -= v12;
    if (v13)
    {
      __break(1u);
    }
    else
    {
LABEL_14:
      if ((unint64_t)v5 >= 4)
        return 4294967292;
      else
        return v5;
    }
  }
  return result;
}

void (*sub_23136FE84())(_BYTE *, _QWORD)
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t (*v12)();
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*result)(_BYTE *, _QWORD);
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  _BYTE v26[32];
  uint64_t v27[5];

  v1 = v0;
  v2 = sub_2314117F4();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = &v26[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v4);
  v8 = &v26[-v7];
  sub_2312D6DD8(0, qword_255ECD770, (uint64_t (*)(uint64_t))MEMORY[0x24BE43418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v26[-v10];
  v12 = sub_23136D764();
  v14 = v13;
  v15 = sub_231412880();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
    sub_231412814();
  ((void (*)(uint64_t *, _QWORD))v12)(v27, 0);
  v16 = v1 + OBJC_IVAR____TtC5Heart19ConfirmDetailsModel_mostRecentDetails;
  swift_beginAccess();
  sub_231370144(v16, (uint64_t)v11);
  sub_23136ED04(0, (uint64_t)v11, v27);
  sub_2312D6B98((uint64_t)v11, qword_255ECD770, (uint64_t (*)(uint64_t))MEMORY[0x24BE43418]);
  MEMORY[0x2348DA1A4](0, 0);
  v17 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Heart19ConfirmDetailsModel_visiblePicker);
  if (v17 == 4)
  {
LABEL_6:
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 32))(v8, v6, v2);
    v21 = MEMORY[0x2348DE3BC](v1 + 16);
    if (v21)
    {
      v22 = v21;
      sub_2314128EC();
      v23 = MEMORY[0x2348DE3BC](v22 + qword_255ECF860);
      if (v23)
      {
        v24 = *(void **)(v23 + qword_255ECC850);
        if (v24)
        {
          v25 = v24;
          objc_msgSend(v25, sel_setEnabled_, sub_23136D370() & 1);
          sub_2314130CC();
          sub_2314130CC();

          goto LABEL_13;
        }
        sub_2314130CC();
      }
      sub_2314130CC();
    }
LABEL_13:
    (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v8, v2);
    return (void (*)(_BYTE *, _QWORD))_s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v27);
  }
  v18 = sub_2314117DC() > v17;
  result = (void (*)(_BYTE *, _QWORD))sub_2314117D0();
  if (!__OFADD__(*v20, v18))
  {
    *v20 += v18;
    result(v26, 0);
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_231370144(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312D6DD8(0, qword_255ECD770, (uint64_t (*)(uint64_t))MEMORY[0x24BE43418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void (*sub_2313701A0(void *a1, void (*a2)(void *), unsigned __int8 a3, uint64_t a4))(_BYTE *, _QWORD)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t (*v18)();
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*result)(_BYTE *, _QWORD);
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  void (*v33)(void *);
  uint64_t v34;
  _BYTE v35[32];
  uint64_t v36[5];

  v33 = a2;
  v34 = a4;
  v6 = v4;
  v8 = sub_2314117F4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v33 - v13;
  sub_2312D6DD8(0, qword_255ECD770, (uint64_t (*)(uint64_t))MEMORY[0x24BE43418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v33 - v16;
  v18 = sub_23136D764();
  v20 = v19;
  v21 = sub_231412880();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v20, 1, v21))
  {
    v22 = a1;
    v33(a1);
  }
  ((void (*)(uint64_t *, _QWORD))v18)(v36, 0);
  v23 = v6 + OBJC_IVAR____TtC5Heart19ConfirmDetailsModel_mostRecentDetails;
  swift_beginAccess();
  sub_231370144(v23, (uint64_t)v17);
  sub_23136ED04(a3, (uint64_t)v17, v36);
  sub_2312D6B98((uint64_t)v17, qword_255ECD770, (uint64_t (*)(uint64_t))MEMORY[0x24BE43418]);
  MEMORY[0x2348DA1A4](v34, 0);
  v24 = *(unsigned __int8 *)(v6 + OBJC_IVAR____TtC5Heart19ConfirmDetailsModel_visiblePicker);
  if (v24 == 4)
  {
LABEL_6:
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v12, v8);
    v28 = MEMORY[0x2348DE3BC](v6 + 16);
    if (v28)
    {
      v29 = v28;
      sub_2314128EC();
      v30 = MEMORY[0x2348DE3BC](v29 + qword_255ECF860);
      if (v30)
      {
        v31 = *(void **)(v30 + qword_255ECC850);
        if (v31)
        {
          v32 = v31;
          objc_msgSend(v32, sel_setEnabled_, sub_23136D370() & 1);
          sub_2314130CC();
          sub_2314130CC();

          goto LABEL_13;
        }
        sub_2314130CC();
      }
      sub_2314130CC();
    }
LABEL_13:
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    return (void (*)(_BYTE *, _QWORD))_s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v36);
  }
  v25 = sub_2314117DC() > v24;
  result = (void (*)(_BYTE *, _QWORD))sub_2314117D0();
  if (!__OFADD__(*v27, v25))
  {
    *v27 += v25;
    result(v35, 0);
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

void (*sub_23137046C(uint64_t a1))(char *, _QWORD)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t (*v18)();
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*result)(char *, _QWORD);
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  uint64_t v39;
  char *v40;
  char v41[32];
  uint64_t v42[5];

  v2 = v1;
  v4 = sub_2314117F4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v39 - v9;
  v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_2312D6DD8(0, qword_255ECD770, (uint64_t (*)(uint64_t))MEMORY[0x24BE43418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v39 - v13;
  sub_2312D6DD8(0, (unint64_t *)&qword_255ECBCC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], v11);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v39 - v16;
  v18 = sub_23136D764();
  v20 = v19;
  v21 = sub_231412880();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v20, 1, v21))
  {
    v22 = sub_2314112F0();
    v40 = v10;
    v23 = v5;
    v24 = v4;
    v25 = v22;
    v26 = a1;
    v27 = *(_QWORD *)(v22 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v17, v26, v22);
    v28 = v25;
    v4 = v24;
    v5 = v23;
    v10 = v40;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v17, 0, 1, v28);
    sub_231412844();
  }
  ((void (*)(uint64_t *, _QWORD))v18)(v42, 0);
  v29 = v2 + OBJC_IVAR____TtC5Heart19ConfirmDetailsModel_mostRecentDetails;
  swift_beginAccess();
  sub_231370144(v29, (uint64_t)v14);
  sub_23136ED04(1u, (uint64_t)v14, v42);
  sub_2312D6B98((uint64_t)v14, qword_255ECD770, (uint64_t (*)(uint64_t))MEMORY[0x24BE43418]);
  MEMORY[0x2348DA1A4](1, 0);
  v30 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC5Heart19ConfirmDetailsModel_visiblePicker);
  if (v30 == 4)
  {
LABEL_6:
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v8, v4);
    v34 = MEMORY[0x2348DE3BC](v2 + 16);
    if (v34)
    {
      v35 = v34;
      sub_2314128EC();
      v36 = MEMORY[0x2348DE3BC](v35 + qword_255ECF860);
      if (v36)
      {
        v37 = *(void **)(v36 + qword_255ECC850);
        if (v37)
        {
          v38 = v37;
          objc_msgSend(v38, sel_setEnabled_, sub_23136D370() & 1);
          sub_2314130CC();
          sub_2314130CC();

          goto LABEL_13;
        }
        sub_2314130CC();
      }
      sub_2314130CC();
    }
LABEL_13:
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    return (void (*)(char *, _QWORD))_s5Heart41FeedItemContextPreviousFeedItemFetcherBoxVwxx_0((uint64_t)v42);
  }
  v31 = sub_2314117DC() > v30;
  result = (void (*)(char *, _QWORD))sub_2314117D0();
  if (!__OFADD__(*v33, v31))
  {
    *v33 += v31;
    result(v41, 0);
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_2313707C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312D6DD8(0, qword_255ECD770, (uint64_t (*)(uint64_t))MEMORY[0x24BE43418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_231370824(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2312D6DD8(0, qword_255ECD770, (uint64_t (*)(uint64_t))MEMORY[0x24BE43418], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_231370880()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255ECEFC0)
  {
    v0 = sub_2314147F4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255ECEFC0);
  }
}

uint64_t sub_2313708D4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  _OWORD v6[2];

  v4 = *a1;
  v6[1] = *(_OWORD *)(v2 + 16);
  result = sub_23136D05C((void (*)(_QWORD *__return_ptr, char *))sub_23137091C, (uint64_t)v6, v4);
  *a2 = result;
  return result;
}

uint64_t sub_23137091C@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_23136ED04(*a1, *(_QWORD *)(v2 + 24), a2);
}

uint64_t storeEnumTagSinglePayload for ConfirmDetailsModel.Row.MedicationDetail(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_231370998 + 4 * byte_23141DF71[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2313709CC + 4 * byte_23141DF6C[v4]))();
}

uint64_t sub_2313709CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2313709D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2313709DCLL);
  return result;
}

uint64_t sub_2313709E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2313709F0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2313709F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2313709FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ConfirmDetailsModel.Row.MedicationDetail()
{
  return &type metadata for ConfirmDetailsModel.Row.MedicationDetail;
}

unint64_t sub_231370A1C()
{
  unint64_t result;

  result = qword_255ECEFC8;
  if (!qword_255ECEFC8)
  {
    result = MEMORY[0x2348DE248](&unk_23141E25C, &type metadata for ConfirmDetailsModel.Row.MedicationDetail);
    atomic_store(result, (unint64_t *)&qword_255ECEFC8);
  }
  return result;
}

uint64_t sub_231370A60@<X0>(void *a1@<X0>, char a2@<W1>, unsigned __int8 a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v22;
  uint64_t v23;
  uint64_t inited;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  void (*v30)(_BYTE *, _QWORD);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[32];

  v8 = sub_231411890();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (void *)sub_2314118FC();
  v13 = sub_2314118F0();

  if ((v13 & 1) == 0 || a3 > 0xFDu)
    goto LABEL_11;
  if (a3 >> 6)
  {
    if (a3 >> 6 != 1)
      goto LABEL_11;
  }
  else if ((a2 & 1) == 0)
  {
    v14 = sub_231411AA0();
    goto LABEL_9;
  }
  v14 = sub_231411AAC();
LABEL_9:
  v16 = v14;
  v17 = v15;
  v18 = sub_231371288();
  if (v19 >> 60 == 15)
  {
    swift_bridgeObjectRelease();
LABEL_11:
    v20 = sub_2314119B0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a4, 1, 1, v20);
  }
  v22 = v19;
  v32 = v18;
  v33 = a4;
  if (qword_25415B838 != -1)
    swift_once();
  sub_2312D3C68(0, (unint64_t *)&qword_25415DE98);
  v23 = sub_2314148B4();
  sub_2312E42E4();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_231416A30;
  *(_QWORD *)(inited + 32) = v16;
  *(_QWORD *)(inited + 40) = v17;
  v25 = sub_2313714F8(inited, v23);
  swift_setDeallocating();
  swift_arrayDestroy();
  type metadata accessor for CardioFitnessRetroComputeTipTileViewController();
  sub_231411908();
  v26 = v32;
  sub_2312D6C64(v32, v22);
  if (qword_25415B828 != -1)
    swift_once();
  v27 = sub_2312CE3B8(v8, (uint64_t)qword_25415B810);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v27, v8);
  v28 = a1;
  v29 = v33;
  sub_231411974();
  sub_231412A90();
  sub_231411980();
  sub_231411950();
  v30 = (void (*)(_BYTE *, _QWORD))sub_23141198C();
  sub_231370D80(v25);
  v30(v34, 0);
  sub_231311034(v26, v22);
  v31 = sub_2314119B0();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v29, 0, 1, v31);
}

uint64_t sub_231370D80(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;

  v1 = result;
  v2 = 0;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v7)
      return swift_release();
    v14 = *(_QWORD *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      v2 = v13 + 1;
      if (v13 + 1 >= v7)
        return swift_release();
      v14 = *(_QWORD *)(v3 + 8 * v2);
      if (!v14)
      {
        v2 = v13 + 2;
        if (v13 + 2 >= v7)
          return swift_release();
        v14 = *(_QWORD *)(v3 + 8 * v2);
        if (!v14)
        {
          v2 = v13 + 3;
          if (v13 + 3 >= v7)
            return swift_release();
          v14 = *(_QWORD *)(v3 + 8 * v2);
          if (!v14)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v14 - 1) & v14;
    v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    v10 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v9);
    v11 = *v10;
    v12 = v10[1];
    sub_231412A90();
    sub_2313F2664(&v16, v11, v12);
    result = swift_bridgeObjectRelease();
  }
  v15 = v13 + 4;
  if (v15 >= v7)
    return swift_release();
  v14 = *(_QWORD *)(v3 + 8 * v15);
  if (v14)
  {
    v2 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v2 >= v7)
      return swift_release();
    v14 = *(_QWORD *)(v3 + 8 * v2);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_231370EEC()
{
  uint64_t inited;
  unint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t result;
  unint64_t v6;

  sub_2312CE560(0, &qword_25415BBE0, (void (*)(uint64_t))sub_2313602D0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_231416A30;
  sub_2312D3C68(0, (unint64_t *)&qword_25415DEC8);
  *(_QWORD *)(inited + 32) = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_quantityTypeForIdentifier_, *MEMORY[0x24BDD36A0]);
  sub_2314147B8();
  v1 = MEMORY[0x24BEE4AF8];
  v6 = MEMORY[0x24BEE4AF8];
  v2 = *(void **)(inited + 32);
  if (v2)
  {
    v3 = v2;
    MEMORY[0x2348DD15C]();
    if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_2314147DC();
    sub_2314147E8();
    sub_2314147B8();
    v1 = v6;
  }
  swift_bridgeObjectRelease();
  v4 = sub_2313F4934(v1);
  result = swift_bridgeObjectRelease();
  qword_254162E18 = v4;
  return result;
}

uint64_t sub_231371028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v0 = sub_2314119E0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_231411A04();
  sub_2312D6D6C(v4, qword_254162E20);
  sub_2312CE3B8(v4, (uint64_t)qword_254162E20);
  sub_2314118FC();
  sub_2312CE560(0, (unint64_t *)&qword_25415DF20, (void (*)(uint64_t))MEMORY[0x24BE474E8]);
  v5 = sub_231411890();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_231416A30;
  v9 = v8 + v7;
  if (qword_25415B828 != -1)
    swift_once();
  v10 = sub_2312CE3B8(v5, (uint64_t)qword_25415B810);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 16))(v9, v10, v5);
  if (*(_QWORD *)(v8 + 16))
    sub_2312FC108(v8);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  if (qword_25415B838 != -1)
    swift_once();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BE47910], v0);
  sub_231412A90();
  return sub_2314119F8();
}

uint64_t sub_231371230()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_231411890();
  sub_2312D6D6C(v0, qword_25415B810);
  v1 = sub_2312CE3B8(v0, (uint64_t)qword_25415B810);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, *MEMORY[0x24BE47498], v0);
}

uint64_t sub_231371288()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_231413780();
  MEMORY[0x24BDAC7A8](v0);
  sub_2314111E8();
  swift_allocObject();
  sub_2314111DC();
  sub_231371574();
  v1 = sub_2314111D0();
  swift_release();
  return v1;
}

uint64_t sub_2313714F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v8 = a2;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = (uint64_t *)(a1 + 40);
    do
    {
      v4 = *(v3 - 1);
      v5 = *v3;
      sub_231412A90();
      sub_2313F2664(&v7, v4, v5);
      swift_bridgeObjectRelease();
      v3 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return a2;
}

unint64_t sub_231371574()
{
  unint64_t result;

  result = qword_255ECEFD0;
  if (!qword_255ECEFD0)
  {
    result = MEMORY[0x2348DE248](&unk_23141EEB8, &type metadata for CardioFitnessRetroComputeFeedItemConfiguration);
    atomic_store(result, (unint64_t *)&qword_255ECEFD0);
  }
  return result;
}

unint64_t sub_2313715B8(unint64_t result, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t i;
  void *v5;
  void **v6;
  void *v7;
  id v8;
  uint64_t v9;

  v2 = result;
  v9 = a2;
  if (!(result >> 62))
  {
    v3 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
    return v9;
  }
  result = sub_231414F08();
  v3 = result;
  if (!result)
    return v9;
LABEL_3:
  if (v3 >= 1)
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v3; ++i)
      {
        v5 = (void *)MEMORY[0x2348DD81C](i, v2);
        sub_2313F2810(&v8, v5);

      }
    }
    else
    {
      v6 = (void **)(v2 + 32);
      do
      {
        v7 = *v6++;
        sub_2313F2810(&v8, v7);

        --v3;
      }
      while (v3);
    }
    return v9;
  }
  __break(1u);
  return result;
}

uint64_t sub_231371694()
{
  uint64_t v0;
  uint64_t result;

  sub_2312D6CEC(0, (unint64_t *)&qword_25415BD40);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_231417F90;
  sub_2312D3C68(0, (unint64_t *)&qword_25415DEC8);
  *(_QWORD *)(v0 + 32) = MEMORY[0x2348DD384]((id)*MEMORY[0x24BDD3378]);
  result = sub_2314147B8();
  qword_254162E48 = v0;
  return result;
}

_QWORD *sub_231371738(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  _QWORD *v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;

  v39 = *v1;
  v3 = sub_231411A4C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v36 = v5;
  v37 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2312EDFDC(0, &qword_25415DE08, (uint64_t (*)(uint64_t))sub_231372FCC, (uint64_t (*)(void))sub_2312DF7E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDB9E80]);
  v40 = *(_QWORD *)(v6 - 8);
  v41 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v38 = (char *)&v30 - v7;
  v33 = sub_2314119E0();
  v31 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_231411A04();
  v34 = *(_QWORD *)(v10 - 8);
  v35 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = v1;
  v32 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v32((char *)v1 + OBJC_IVAR____TtC5Heart47AFibBurdenNotificationSettingsGeneratorPipeline_context, a1, v3);
  v42 = a1;
  v13 = (void *)sub_231411A28();
  sub_2312D6DD8(0, (unint64_t *)&qword_25415DF20, (uint64_t (*)(uint64_t))MEMORY[0x24BE474E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v14 = sub_231411890();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_231416A30;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v15 + 104))(v17 + v16, *MEMORY[0x24BE474D0], v14);
  v18 = qword_25415B920;
  v19 = v13;
  if (v18 != -1)
    swift_once();
  if ((unint64_t)qword_254162E48 >> 62)
  {
    sub_2312D3C68(0, (unint64_t *)&qword_25415DE98);
    sub_231412A90();
    sub_231414EFC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_231412A90();
    sub_23141507C();
    sub_2312D3C68(0, (unint64_t *)&qword_25415DE98);
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v31 + 104))(v9, *MEMORY[0x24BE47910], v33);
  sub_2314119EC();

  v20 = v43;
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))((uint64_t)v43 + OBJC_IVAR____TtC5Heart47AFibBurdenNotificationSettingsGeneratorPipeline_domain, v12, v35);
  v21 = v37;
  v22 = v42;
  v32(v37, v42, v3);
  v23 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v24 = (v36 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v25 + v23, v21, v3);
  *(_QWORD *)(v25 + v24) = v39;
  sub_231372FCC();
  sub_2312DF7E8();
  v26 = v38;
  sub_231413E04();
  sub_231373094();
  v27 = v41;
  v28 = sub_231413E7C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v22, v3);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v26, v27);
  *(_QWORD *)((char *)v20 + OBJC_IVAR____TtC5Heart47AFibBurdenNotificationSettingsGeneratorPipeline_publisher) = v28;
  return v20;
}

